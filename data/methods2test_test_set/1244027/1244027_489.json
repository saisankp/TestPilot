{"test_class": {"identifier": "JcrRepositoriesContainerTest", "superclass": "extends JcrRepositoryFactoryTest", "interfaces": "", "fields": [{"original_string": "private RepositoriesContainer repositoriesContainer;", "modifier": "private", "type": "RepositoriesContainer", "declarator": "repositoriesContainer", "var_name": "repositoriesContainer"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/JcrRepositoriesContainerTest.java"}, "test_case": {"identifier": "shouldShutdownRepository", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldShutdownRepository() throws Exception {\n        String url = \"file:src/test/resources/config/simple-repo-config.json\";\n        Map<String, String> params = new HashMap<>();\n        params.put(RepositoryFactory.URL, url);\n        String repoName = \"Another Test Repository\";\n        Repository repository = repositoryFor(repoName, params);\n\n        assertNotNull(repository);\n        assertTrue(repositoriesContainer.shutdownRepository(repoName).get());\n    }", "signature": "void shouldShutdownRepository()", "full_signature": "@Test public void shouldShutdownRepository()", "class_method_signature": "JcrRepositoriesContainerTest.shouldShutdownRepository()", "testcase": true, "constructor": false, "invocations": ["put", "repositoryFor", "assertNotNull", "assertTrue", "get", "shutdownRepository"]}, "focal_class": {"identifier": "JcrRepositoriesContainer", "superclass": "", "interfaces": "implements RepositoriesContainer", "fields": [{"original_string": "protected static final Logger LOG = Logger.getLogger(JcrRepositoriesContainer.class);", "modifier": "protected static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(JcrRepositoriesContainer.class)", "var_name": "LOG"}, {"original_string": "protected static final String REPOSITORY_NAME_URL_PARAM = \"repositoryName\";", "modifier": "protected static final", "type": "String", "declarator": "REPOSITORY_NAME_URL_PARAM = \"repositoryName\"", "var_name": "REPOSITORY_NAME_URL_PARAM"}, {"original_string": "protected static final String FILE_PROTOCOL = \"file:\";", "modifier": "protected static final", "type": "String", "declarator": "FILE_PROTOCOL = \"file:\"", "var_name": "FILE_PROTOCOL"}, {"original_string": "protected static final String JNDI_PROTOCOL = \"jndi:\";", "modifier": "protected static final", "type": "String", "declarator": "JNDI_PROTOCOL = \"jndi:\"", "var_name": "JNDI_PROTOCOL"}, {"original_string": "protected static final ModeShapeEngine ENGINE = new ModeShapeEngine();", "modifier": "protected static final", "type": "ModeShapeEngine", "declarator": "ENGINE = new ModeShapeEngine()", "var_name": "ENGINE"}], "methods": [{"identifier": "getRepository", "parameters": "( String repositoryName,\n                                        Map parameters )", "modifiers": "@Override @SuppressWarnings( {\"unchecked\", \"rawtypes\"} ) public", "return": "JcrRepository", "signature": "JcrRepository getRepository( String repositoryName,\n                                        Map parameters )", "full_signature": "@Override @SuppressWarnings( {\"unchecked\", \"rawtypes\"} ) public JcrRepository getRepository( String repositoryName,\n                                        Map parameters )", "class_method_signature": "JcrRepositoriesContainer.getRepository( String repositoryName,\n                                        Map parameters )", "testcase": false, "constructor": false}, {"identifier": "getRepositoryNames", "parameters": "( Map<?, ?> parameters )", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getRepositoryNames( Map<?, ?> parameters )", "full_signature": "@Override public Set<String> getRepositoryNames( Map<?, ?> parameters )", "class_method_signature": "JcrRepositoriesContainer.getRepositoryNames( Map<?, ?> parameters )", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "Future<Boolean>", "signature": "Future<Boolean> shutdown()", "full_signature": "@Override public Future<Boolean> shutdown()", "class_method_signature": "JcrRepositoriesContainer.shutdown()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "( long timeout,\n                             TimeUnit unit )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean shutdown( long timeout,\n                             TimeUnit unit )", "full_signature": "@Override public boolean shutdown( long timeout,\n                             TimeUnit unit )", "class_method_signature": "JcrRepositoriesContainer.shutdown( long timeout,\n                             TimeUnit unit )", "testcase": false, "constructor": false}, {"identifier": "shutdownRepository", "parameters": "(String repositoryName)", "modifiers": "@Override public", "return": "Future<Boolean>", "signature": "Future<Boolean> shutdownRepository(String repositoryName)", "full_signature": "@Override public Future<Boolean> shutdownRepository(String repositoryName)", "class_method_signature": "JcrRepositoriesContainer.shutdownRepository(String repositoryName)", "testcase": false, "constructor": false}, {"identifier": "engine", "parameters": "()", "modifiers": "protected", "return": "ModeShapeEngine", "signature": "ModeShapeEngine engine()", "full_signature": "protected ModeShapeEngine engine()", "class_method_signature": "JcrRepositoriesContainer.engine()", "testcase": false, "constructor": false}, {"identifier": "repositoryURLFromParams", "parameters": "( Map<?, ?> parameters )", "modifiers": "private", "return": "String", "signature": "String repositoryURLFromParams( Map<?, ?> parameters )", "full_signature": "private String repositoryURLFromParams( Map<?, ?> parameters )", "class_method_signature": "JcrRepositoriesContainer.repositoryURLFromParams( Map<?, ?> parameters )", "testcase": false, "constructor": false}, {"identifier": "repositoryNameFrom", "parameters": "( String url,\n                                         Map<?, ?> parameters )", "modifiers": "protected", "return": "String", "signature": "String repositoryNameFrom( String url,\n                                         Map<?, ?> parameters )", "full_signature": "protected String repositoryNameFrom( String url,\n                                         Map<?, ?> parameters )", "class_method_signature": "JcrRepositoriesContainer.repositoryNameFrom( String url,\n                                         Map<?, ?> parameters )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/JcrRepositoriesContainer.java"}, "focal_method": {"identifier": "shutdownRepository", "parameters": "(String repositoryName)", "modifiers": "@Override public", "return": "Future<Boolean>", "body": "@Override\n    public Future<Boolean> shutdownRepository(String repositoryName) throws RepositoryException {\n        return ENGINE.shutdownRepository(repositoryName);\n    }", "signature": "Future<Boolean> shutdownRepository(String repositoryName)", "full_signature": "@Override public Future<Boolean> shutdownRepository(String repositoryName)", "class_method_signature": "JcrRepositoriesContainer.shutdownRepository(String repositoryName)", "testcase": false, "constructor": false, "invocations": ["shutdownRepository"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}