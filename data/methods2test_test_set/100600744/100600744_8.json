{"test_class": {"identifier": "ConnectionFactoryDecoratingPostProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ConnectionFactory connectionFactory;", "modifier": "@Mock\n    private", "type": "ConnectionFactory", "declarator": "connectionFactory", "var_name": "connectionFactory"}, {"original_string": "private final ConnectionFactoryDecoratingPostProcessor sut = new ConnectionFactoryDecoratingPostProcessor();", "modifier": "private final", "type": "ConnectionFactoryDecoratingPostProcessor", "declarator": "sut = new ConnectionFactoryDecoratingPostProcessor()", "var_name": "sut"}], "file": "backend/src/test/java/jmstool/jms/ConnectionFactoryDecoratingPostProcessorTest.java"}, "test_case": {"identifier": "testNonCaching", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNonCaching() {\n        sut.useCachingConnectionFactory = false;\n        ConnectionFactory result = (ConnectionFactory) sut.postProcessAfterInitialization(connectionFactory, \"mock\");\n        assertThat(result, not(instanceOf(CachingConnectionFactory.class)));\n    }", "signature": "void testNonCaching()", "full_signature": "@Test public void testNonCaching()", "class_method_signature": "ConnectionFactoryDecoratingPostProcessorTest.testNonCaching()", "testcase": true, "constructor": false, "invocations": ["postProcessAfterInitialization", "assertThat", "not", "instanceOf"]}, "focal_class": {"identifier": "ConnectionFactoryDecoratingPostProcessor", "superclass": "", "interfaces": "implements BeanPostProcessor", "fields": [{"original_string": "@Value(\"${jmstool.useCachingConnectionFactory:true}\")\n\tprotected boolean useCachingConnectionFactory;", "modifier": "@Value(\"${jmstool.useCachingConnectionFactory:true}\")\n\tprotected", "type": "boolean", "declarator": "useCachingConnectionFactory", "var_name": "useCachingConnectionFactory"}, {"original_string": "@Value(\"${jmstool.connectionFactory.username:}\")\n\tprotected String username;", "modifier": "@Value(\"${jmstool.connectionFactory.username:}\")\n\tprotected", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "@Value(\"${jmstool.connectionFactory.password:}\")\n\tprotected String password;", "modifier": "@Value(\"${jmstool.connectionFactory.password:}\")\n\tprotected", "type": "String", "declarator": "password", "var_name": "password"}], "methods": [{"identifier": "postProcessBeforeInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "signature": "Object postProcessBeforeInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessBeforeInitialization(Object bean, String beanName)", "class_method_signature": "ConnectionFactoryDecoratingPostProcessor.postProcessBeforeInitialization(Object bean, String beanName)", "testcase": false, "constructor": false}, {"identifier": "postProcessAfterInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "signature": "Object postProcessAfterInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessAfterInitialization(Object bean, String beanName)", "class_method_signature": "ConnectionFactoryDecoratingPostProcessor.postProcessAfterInitialization(Object bean, String beanName)", "testcase": false, "constructor": false}], "file": "backend/src/main/java/jmstool/jms/ConnectionFactoryDecoratingPostProcessor.java"}, "focal_method": {"identifier": "postProcessAfterInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n\tpublic Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\n\t\tif (bean instanceof ConnectionFactory) {\n\t\t\t\n\t\t\tUserCredentialsConnectionFactoryAdapter adapter = new UserCredentialsConnectionFactoryAdapter();\n\t\t\tadapter.setTargetConnectionFactory((ConnectionFactory) bean);\n\t\t\tadapter.setUsername(username);\n\t\t\tadapter.setPassword(password);\n\n\t\t\tif (useCachingConnectionFactory) {\n\t\t\t\treturn new CachingConnectionFactory(adapter);\n\t\t\t}\n\t\t\treturn adapter;\n\t\t}\n\t\treturn bean;\n\t}", "signature": "Object postProcessAfterInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessAfterInitialization(Object bean, String beanName)", "class_method_signature": "ConnectionFactoryDecoratingPostProcessor.postProcessAfterInitialization(Object bean, String beanName)", "testcase": false, "constructor": false, "invocations": ["setTargetConnectionFactory", "setUsername", "setPassword"]}, "repository": {"repo_id": 100600744, "url": "https://github.com/0xERR0R/jmstool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 577, "license": "licensed"}}