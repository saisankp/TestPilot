{"test_class": {"identifier": "RepoContributorsMapperTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Inject\n    protected RepoContributorsMapper repoContributorsMapper;", "modifier": "@Inject\n    protected", "type": "RepoContributorsMapper", "declarator": "repoContributorsMapper", "var_name": "repoContributorsMapper"}, {"original_string": "private List<ContributorDTO> contributorDTOs;", "modifier": "private", "type": "List<ContributorDTO>", "declarator": "contributorDTOs", "var_name": "contributorDTOs"}], "file": "app/src/test/java/com/andrey7mel/stepbystep/presenter/mappers/RepoContributorsMapperTest.java"}, "test_case": {"identifier": "testCall", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCall() throws Exception {\n        List<Contributor> contributorList = repoContributorsMapper.call(contributorDTOs);\n        assertEquals(11, contributorList.size());\n\n        assertEquals(\"hotchemi\", contributorList.get(0).getName());\n        assertEquals(\"mrmike\", contributorList.get(1).getName());\n        assertEquals(\"amitkot\", contributorList.get(2).getName());\n        assertEquals(\"maarekj\", contributorList.get(10).getName());\n    }", "signature": "void testCall()", "full_signature": "@Test public void testCall()", "class_method_signature": "RepoContributorsMapperTest.testCall()", "testcase": true, "constructor": false, "invocations": ["call", "assertEquals", "size", "assertEquals", "getName", "get", "assertEquals", "getName", "get", "assertEquals", "getName", "get", "assertEquals", "getName", "get"]}, "focal_class": {"identifier": "RepoContributorsMapper", "superclass": "", "interfaces": "implements Func1<List<ContributorDTO>, List<Contributor>>", "fields": [], "methods": [{"identifier": "RepoContributorsMapper", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " RepoContributorsMapper()", "full_signature": "@Inject public  RepoContributorsMapper()", "class_method_signature": "RepoContributorsMapper.RepoContributorsMapper()", "testcase": false, "constructor": true}, {"identifier": "call", "parameters": "(List<ContributorDTO> contributorDTOs)", "modifiers": "@Override public", "return": "List<Contributor>", "signature": "List<Contributor> call(List<ContributorDTO> contributorDTOs)", "full_signature": "@Override public List<Contributor> call(List<ContributorDTO> contributorDTOs)", "class_method_signature": "RepoContributorsMapper.call(List<ContributorDTO> contributorDTOs)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/andrey7mel/stepbystep/presenter/mappers/RepoContributorsMapper.java"}, "focal_method": {"identifier": "call", "parameters": "(List<ContributorDTO> contributorDTOs)", "modifiers": "@Override public", "return": "List<Contributor>", "body": "@Override\n    public List<Contributor> call(List<ContributorDTO> contributorDTOs) {\n        if (contributorDTOs == null) {\n            return null;\n        }\n        List<Contributor> contributors = Observable.from(contributorDTOs)\n                .map(contributorDTO -> new Contributor(contributorDTO.getLogin()))\n                .toList()\n                .toBlocking()\n                .first();\n        return contributors;\n    }", "signature": "List<Contributor> call(List<ContributorDTO> contributorDTOs)", "full_signature": "@Override public List<Contributor> call(List<ContributorDTO> contributorDTOs)", "class_method_signature": "RepoContributorsMapper.call(List<ContributorDTO> contributorDTOs)", "testcase": false, "constructor": false, "invocations": ["first", "toBlocking", "toList", "map", "from", "getLogin"]}, "repository": {"repo_id": 48544726, "url": "https://github.com/andrey7mel/android-step-by-step", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 130, "size": 313, "license": "licensed"}}