{"test_class": {"identifier": "JsonHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory\n\t\t\t.getLogger(JsonHandlerTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory\n\t\t\t.getLogger(JsonHandlerTest.class)", "var_name": "LOG"}, {"original_string": "private JsonHandler handler;", "modifier": "private", "type": "JsonHandler", "declarator": "handler", "var_name": "handler"}], "file": "mycontainer-components/mycontainer-commons/src/test/java/com/googlecode/mycontainer/commons/json/JsonHandlerTest.java"}, "test_case": {"identifier": "testParseBasics", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testParseBasics() {\n\t\tassertEquals(null, handler.parse(\"null\"));\n\n\t\tassertEquals(true, handler.parse(\"true\"));\n\t\tassertEquals(false, handler.parse(\"false\"));\n\n\t\tassertEquals(\"my string\", handler.parse(\"'my string'\"));\n\t\tassertEquals(\"null\", handler.parse(\"'null'\"));\n\t\tassertEquals(\"true\", handler.parse(\"'true'\"));\n\t\tassertEquals(2, handler.parse(\"2\"));\n\t\tassertEquals(2.4, handler.parse(\"2.4\"));\n\n\t\tassertEquals(\"\", handler.parse(\"''\"));\n\t}", "signature": "void testParseBasics()", "full_signature": "@Test public void testParseBasics()", "class_method_signature": "JsonHandlerTest.testParseBasics()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "parse", "assertEquals", "parse", "assertEquals", "parse", "assertEquals", "parse", "assertEquals", "parse", "assertEquals", "parse", "assertEquals", "parse", "assertEquals", "parse", "assertEquals", "parse"]}, "focal_class": {"identifier": "JsonHandler", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -8576658801873381324L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8576658801873381324L", "var_name": "serialVersionUID"}, {"original_string": "private static final JsonHandler ME = new JsonHandler();", "modifier": "private static final", "type": "JsonHandler", "declarator": "ME = new JsonHandler()", "var_name": "ME"}, {"original_string": "private JSONSerializer serializer;", "modifier": "private", "type": "JSONSerializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "private JSONDeserializer<Object> deserializer;", "modifier": "private", "type": "JSONDeserializer<Object>", "declarator": "deserializer", "var_name": "deserializer"}], "methods": [{"identifier": "JsonHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " JsonHandler()", "full_signature": "public  JsonHandler()", "class_method_signature": "JsonHandler.JsonHandler()", "testcase": false, "constructor": true}, {"identifier": "instance", "parameters": "()", "modifiers": "public static", "return": "JsonHandler", "signature": "JsonHandler instance()", "full_signature": "public static JsonHandler instance()", "class_method_signature": "JsonHandler.instance()", "testcase": false, "constructor": false}, {"identifier": "getDeserializer", "parameters": "()", "modifiers": "public", "return": "JSONDeserializer<Object>", "signature": "JSONDeserializer<Object> getDeserializer()", "full_signature": "public JSONDeserializer<Object> getDeserializer()", "class_method_signature": "JsonHandler.getDeserializer()", "testcase": false, "constructor": false}, {"identifier": "getSerializer", "parameters": "()", "modifiers": "public", "return": "JSONSerializer", "signature": "JSONSerializer getSerializer()", "full_signature": "public JSONSerializer getSerializer()", "class_method_signature": "JsonHandler.getSerializer()", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(Object obj)", "modifiers": "public", "return": "String", "signature": "String format(Object obj)", "full_signature": "public String format(Object obj)", "class_method_signature": "JsonHandler.format(Object obj)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(Object obj, Writer writer)", "modifiers": "public", "return": "void", "signature": "void format(Object obj, Writer writer)", "full_signature": "public void format(Object obj, Writer writer)", "class_method_signature": "JsonHandler.format(Object obj, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String str)", "modifiers": "public", "return": "Object", "signature": "Object parse(String str)", "full_signature": "public Object parse(String str)", "class_method_signature": "JsonHandler.parse(String str)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String str, Class<T> clazz)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T parse(String str, Class<T> clazz)", "full_signature": "@SuppressWarnings(\"unchecked\") public T parse(String str, Class<T> clazz)", "class_method_signature": "JsonHandler.parse(String str, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "setPrettyPrint", "parameters": "(boolean prettyPrint)", "modifiers": "public", "return": "void", "signature": "void setPrettyPrint(boolean prettyPrint)", "full_signature": "public void setPrettyPrint(boolean prettyPrint)", "class_method_signature": "JsonHandler.setPrettyPrint(boolean prettyPrint)", "testcase": false, "constructor": false}], "file": "mycontainer-components/mycontainer-commons/src/main/java/com/googlecode/mycontainer/commons/json/JsonHandler.java"}, "focal_method": {"identifier": "parse", "parameters": "(String str)", "modifiers": "public", "return": "Object", "body": "public Object parse(String str) {\n\t\tObject ret = deserializer.deserialize(str);\n\t\treturn ret;\n\t}", "signature": "Object parse(String str)", "full_signature": "public Object parse(String str)", "class_method_signature": "JsonHandler.parse(String str)", "testcase": false, "constructor": false, "invocations": ["deserialize"]}, "repository": {"repo_id": 9149127, "url": "https://github.com/murer/mycontainer", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 13, "size": 1353, "license": "licensed"}}