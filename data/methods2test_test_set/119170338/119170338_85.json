{"test_class": {"identifier": "OboGraphDocumentAdaptorTest", "superclass": "", "interfaces": "", "fields": [], "file": "phenol-io/src/test/java/org/monarchinitiative/phenol/io/obographs/OboGraphDocumentAdaptorTest.java"}, "test_case": {"identifier": "throwsExceptionWhenUnknownFilterIdSupplied", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void throwsExceptionWhenUnknownFilterIdSupplied() {\n\n    Node root = new Node.Builder()\n      .id(\"http://purl.obolibrary.org/obo/HP_0000001\")\n      .label(\"root\")\n      .type(Node.RDFTYPES.CLASS)\n      .build();\n\n    Node unknown = new Node.Builder()\n      .id(\"http://wibble.org/WIBBLE_0000000\")\n      .label(\"They have no word for 'fluffy'\")\n      .type(Node.RDFTYPES.CLASS)\n      .build();\n\n    List<Node> nodes = ImmutableList.of(root, unknown);\n\n    Edge edge = new Edge.Builder().sub(unknown.getId()).pred(\"is_a\").obj(root.getId()).build();\n    List<Edge> edges = ImmutableList.of(edge);\n\n    Graph graph = new Graph.Builder().nodes(nodes).edges(edges).build();\n    GraphDocument graphDocument = new GraphDocument.Builder().graphs(ImmutableList.of(graph)).build();\n\n    // WIBBLE id prefix is not in the default list, so add it here so that nodes and edges with this idspace are included\n    CurieUtil curieUtil = CurieUtilBuilder.withDefaultsAnd(ImmutableMap.of(\"WIBBLE\", \"http://wibble.org/WIBBLE_\"));\n\n    assertThrows(PhenolRuntimeException.class,\n      () -> OboGraphDocumentAdaptor.builder()\n      .curieUtil(curieUtil)\n      .wantedTermIdPrefixes(ImmutableSet.of(\"FROOD\"))\n      .build(graphDocument),\n      \"Unable to filter terms for prefix(s) [FROOD] as these not mapped. Add the mapping to CurieUtil.\");\n  }", "signature": "void throwsExceptionWhenUnknownFilterIdSupplied()", "full_signature": "@Test void throwsExceptionWhenUnknownFilterIdSupplied()", "class_method_signature": "OboGraphDocumentAdaptorTest.throwsExceptionWhenUnknownFilterIdSupplied()", "testcase": true, "constructor": false, "invocations": ["build", "type", "label", "id", "build", "type", "label", "id", "of", "build", "obj", "pred", "sub", "getId", "getId", "of", "build", "edges", "nodes", "build", "graphs", "of", "withDefaultsAnd", "of", "assertThrows", "build", "wantedTermIdPrefixes", "curieUtil", "builder", "of"]}, "focal_class": {"identifier": "OboGraphDocumentAdaptor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(OboGraphDocumentAdaptor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(OboGraphDocumentAdaptor.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, String> metaInfo;", "modifier": "private final", "type": "Map<String, String>", "declarator": "metaInfo", "var_name": "metaInfo"}, {"original_string": "private final List<Term> terms;", "modifier": "private final", "type": "List<Term>", "declarator": "terms", "var_name": "terms"}, {"original_string": "private final List<Relationship> relationships;", "modifier": "private final", "type": "List<Relationship>", "declarator": "relationships", "var_name": "relationships"}], "methods": [{"identifier": "OboGraphDocumentAdaptor", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " OboGraphDocumentAdaptor(Builder builder)", "full_signature": "private  OboGraphDocumentAdaptor(Builder builder)", "class_method_signature": "OboGraphDocumentAdaptor.OboGraphDocumentAdaptor(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getMetaInfo", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getMetaInfo()", "full_signature": "public Map<String, String> getMetaInfo()", "class_method_signature": "OboGraphDocumentAdaptor.getMetaInfo()", "testcase": false, "constructor": false}, {"identifier": "getTerms", "parameters": "()", "modifiers": "public", "return": "List<Term>", "signature": "List<Term> getTerms()", "full_signature": "public List<Term> getTerms()", "class_method_signature": "OboGraphDocumentAdaptor.getTerms()", "testcase": false, "constructor": false}, {"identifier": "getRelationships", "parameters": "()", "modifiers": "public", "return": "List<Relationship>", "signature": "List<Relationship> getRelationships()", "full_signature": "public List<Relationship> getRelationships()", "class_method_signature": "OboGraphDocumentAdaptor.getRelationships()", "testcase": false, "constructor": false}, {"identifier": "buildOntology", "parameters": "()", "modifiers": "public", "return": "Ontology", "signature": "Ontology buildOntology()", "full_signature": "public Ontology buildOntology()", "class_method_signature": "OboGraphDocumentAdaptor.buildOntology()", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "OboGraphDocumentAdaptor.builder()", "testcase": false, "constructor": false}], "file": "phenol-io/src/main/java/org/monarchinitiative/phenol/io/obographs/OboGraphDocumentAdaptor.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder builder() {\n    return new Builder();\n  }", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "OboGraphDocumentAdaptor.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 119170338, "url": "https://github.com/monarch-initiative/phenol", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 5832, "license": "licensed"}}