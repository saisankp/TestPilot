{"test_class": {"identifier": "AttributeOptionComboLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}, {"original_string": "@Mock\n    protected JdbcTemplate jdbcTemplate;", "modifier": "@Mock\n    protected", "type": "JdbcTemplate", "declarator": "jdbcTemplate", "var_name": "jdbcTemplate"}, {"original_string": "@Captor\n    private ArgumentCaptor<String> sqlCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<String>", "declarator": "sqlCaptor", "var_name": "sqlCaptor"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private AttributeOptionComboLoader subject;", "modifier": "private", "type": "AttributeOptionComboLoader", "declarator": "subject", "var_name": "subject"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/events/importer/context/AttributeOptionComboLoaderTest.java"}, "test_case": {"identifier": "verifyGetDefaultCategoryOptionCombo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyGetDefaultCategoryOptionCombo()\n    {\n        when( jdbcTemplate.queryForObject( anyString(), any( RowMapper.class ) ) )\n            .thenReturn( new CategoryOptionCombo() );\n\n        CategoryOptionCombo categoryOptionCombo = subject.getDefault();\n\n        assertThat( categoryOptionCombo, is( notNullValue() ) );\n        verify( jdbcTemplate ).queryForObject( sqlCaptor.capture(), any( RowMapper.class ) );\n\n        final String sql = sqlCaptor.getValue();\n\n        assertThat( sql, is( replace( SQL_GET_CATEGORYOPTIONCOMBO, \"key\", \"categoryoptioncomboid\", \"resolvedScheme\",\n            \"name = 'default'\" ) ) );\n    }", "signature": "void verifyGetDefaultCategoryOptionCombo()", "full_signature": "@Test public void verifyGetDefaultCategoryOptionCombo()", "class_method_signature": "AttributeOptionComboLoaderTest.verifyGetDefaultCategoryOptionCombo()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "queryForObject", "anyString", "any", "getDefault", "assertThat", "is", "notNullValue", "queryForObject", "verify", "capture", "any", "getValue", "assertThat", "is", "replace"]}, "focal_class": {"identifier": "AttributeOptionComboLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final JdbcTemplate jdbcTemplate;", "modifier": "private final", "type": "JdbcTemplate", "declarator": "jdbcTemplate", "var_name": "jdbcTemplate"}, {"original_string": "private final static String KEY_SEPARATOR = \"-\";", "modifier": "private final static", "type": "String", "declarator": "KEY_SEPARATOR = \"-\"", "var_name": "KEY_SEPARATOR"}, {"original_string": "public final static String SQL_GET_CATEGORYOPTIONCOMBO = \"select coc.categoryoptioncomboid, \"\n        + \"coc.uid, coc.code, coc.ignoreapproval, coc.name, c.uid as cc_uid, c.name as cc_name, \"\n        + \"string_agg(dec.categoryid::text, ',') as cat_ids from categoryoptioncombo coc \"\n        + \"join categorycombos_optioncombos co on coc.categoryoptioncomboid = co.categoryoptioncomboid \"\n        + \"join categorycombo c on co.categorycomboid = c.categorycomboid \"\n        + \"join categorycombos_categories cc on c.categorycomboid = cc.categorycomboid \"\n        + \"join dataelementcategory dec on cc.categoryid = dec.categoryid where coc.\"\n        + \"${resolvedScheme} \"\n        + \"group by coc.categoryoptioncomboid, coc.uid, coc.code, coc.ignoreapproval, coc.name, cc_uid, cc_name\";", "modifier": "public final static", "type": "String", "declarator": "SQL_GET_CATEGORYOPTIONCOMBO = \"select coc.categoryoptioncomboid, \"\n        + \"coc.uid, coc.code, coc.ignoreapproval, coc.name, c.uid as cc_uid, c.name as cc_name, \"\n        + \"string_agg(dec.categoryid::text, ',') as cat_ids from categoryoptioncombo coc \"\n        + \"join categorycombos_optioncombos co on coc.categoryoptioncomboid = co.categoryoptioncomboid \"\n        + \"join categorycombo c on co.categorycomboid = c.categorycomboid \"\n        + \"join categorycombos_categories cc on c.categorycomboid = cc.categorycomboid \"\n        + \"join dataelementcategory dec on cc.categoryid = dec.categoryid where coc.\"\n        + \"${resolvedScheme} \"\n        + \"group by coc.categoryoptioncomboid, coc.uid, coc.code, coc.ignoreapproval, coc.name, cc_uid, cc_name\"", "var_name": "SQL_GET_CATEGORYOPTIONCOMBO"}, {"original_string": "public final static String SQL_GET_CATEGORYOPTIONCOMBO_BY_CATEGORYIDS = \"select * from ( \" +\n        \"select coc.categoryoptioncomboid, \" +\n        \"coc.uid, \" +\n        \"coc.code, \" +\n        \"coc.ignoreapproval, \" +\n        \"coc.name, \" +\n        \"c.uid as cc_uid, \" +\n        \"c.name as cc_name,\" +\n        \"string_agg( coco.categoryoptionid::text, ',') as cat_ids \" +\n        \"from categoryoptioncombo coc \" +\n        \"join categorycombos_optioncombos co on coc.categoryoptioncomboid = co.categoryoptioncomboid \" +\n        \"join categorycombo c on co.categorycomboid = c.categorycomboid \" +\n        \"join categorycombos_categories cc on c.categorycomboid = cc.categorycomboid \" +\n        \"join categoryoptioncombos_categoryoptions coco on coc.categoryoptioncomboid = coco.categoryoptioncomboid \" +\n        \"where c.${resolvedScheme} \" +\n        \"group by coc.categoryoptioncomboid, coc.uid, coc.code, coc.ignoreapproval, coc.name, cc_uid, cc_name \" +\n        \") as catoptcombo where \" +\n        \"array_length(regexp_split_to_array(cat_ids, ','),1) = array_length(ARRAY[${option_ids}],1) AND \" +\n        \"regexp_split_to_array(cat_ids, ',') @> ARRAY[${option_ids}]\";", "modifier": "public final static", "type": "String", "declarator": "SQL_GET_CATEGORYOPTIONCOMBO_BY_CATEGORYIDS = \"select * from ( \" +\n        \"select coc.categoryoptioncomboid, \" +\n        \"coc.uid, \" +\n        \"coc.code, \" +\n        \"coc.ignoreapproval, \" +\n        \"coc.name, \" +\n        \"c.uid as cc_uid, \" +\n        \"c.name as cc_name,\" +\n        \"string_agg( coco.categoryoptionid::text, ',') as cat_ids \" +\n        \"from categoryoptioncombo coc \" +\n        \"join categorycombos_optioncombos co on coc.categoryoptioncomboid = co.categoryoptioncomboid \" +\n        \"join categorycombo c on co.categorycomboid = c.categorycomboid \" +\n        \"join categorycombos_categories cc on c.categorycomboid = cc.categorycomboid \" +\n        \"join categoryoptioncombos_categoryoptions coco on coc.categoryoptioncomboid = coco.categoryoptioncomboid \" +\n        \"where c.${resolvedScheme} \" +\n        \"group by coc.categoryoptioncomboid, coc.uid, coc.code, coc.ignoreapproval, coc.name, cc_uid, cc_name \" +\n        \") as catoptcombo where \" +\n        \"array_length(regexp_split_to_array(cat_ids, ','),1) = array_length(ARRAY[${option_ids}],1) AND \" +\n        \"regexp_split_to_array(cat_ids, ',') @> ARRAY[${option_ids}]\"", "var_name": "SQL_GET_CATEGORYOPTIONCOMBO_BY_CATEGORYIDS"}], "methods": [{"identifier": "AttributeOptionComboLoader", "parameters": "( @Qualifier( \"readOnlyJdbcTemplate\" ) JdbcTemplate jdbcTemplate )", "modifiers": "public", "return": "", "signature": " AttributeOptionComboLoader( @Qualifier( \"readOnlyJdbcTemplate\" ) JdbcTemplate jdbcTemplate )", "full_signature": "public  AttributeOptionComboLoader( @Qualifier( \"readOnlyJdbcTemplate\" ) JdbcTemplate jdbcTemplate )", "class_method_signature": "AttributeOptionComboLoader.AttributeOptionComboLoader( @Qualifier( \"readOnlyJdbcTemplate\" ) JdbcTemplate jdbcTemplate )", "testcase": false, "constructor": true}, {"identifier": "getCategoryOptionCombo", "parameters": "( IdScheme idScheme, String id )", "modifiers": "public", "return": "CategoryOptionCombo", "signature": "CategoryOptionCombo getCategoryOptionCombo( IdScheme idScheme, String id )", "full_signature": "public CategoryOptionCombo getCategoryOptionCombo( IdScheme idScheme, String id )", "class_method_signature": "AttributeOptionComboLoader.getCategoryOptionCombo( IdScheme idScheme, String id )", "testcase": false, "constructor": false}, {"identifier": "getAttributeOptionCombo", "parameters": "( CategoryCombo categoryCombo, String categoryOptions,\n                                                        String attributeOptionCombo, IdScheme idScheme )", "modifiers": "public", "return": "CategoryOptionCombo", "signature": "CategoryOptionCombo getAttributeOptionCombo( CategoryCombo categoryCombo, String categoryOptions,\n                                                        String attributeOptionCombo, IdScheme idScheme )", "full_signature": "public CategoryOptionCombo getAttributeOptionCombo( CategoryCombo categoryCombo, String categoryOptions,\n                                                        String attributeOptionCombo, IdScheme idScheme )", "class_method_signature": "AttributeOptionComboLoader.getAttributeOptionCombo( CategoryCombo categoryCombo, String categoryOptions,\n                                                        String attributeOptionCombo, IdScheme idScheme )", "testcase": false, "constructor": false}, {"identifier": "getDefault", "parameters": "()", "modifiers": "public", "return": "CategoryOptionCombo", "signature": "CategoryOptionCombo getDefault()", "full_signature": "public CategoryOptionCombo getDefault()", "class_method_signature": "AttributeOptionComboLoader.getDefault()", "testcase": false, "constructor": false}, {"identifier": "getCategoryOption", "parameters": "( IdScheme idScheme, String id )", "modifiers": "private", "return": "CategoryOption", "signature": "CategoryOption getCategoryOption( IdScheme idScheme, String id )", "full_signature": "private CategoryOption getCategoryOption( IdScheme idScheme, String id )", "class_method_signature": "AttributeOptionComboLoader.getCategoryOption( IdScheme idScheme, String id )", "testcase": false, "constructor": false}, {"identifier": "getAttributeOptionCombo", "parameters": "( CategoryCombo categoryCombo, Set<String> opts,\n        String attributeOptionCombo, IdScheme idScheme )", "modifiers": "private", "return": "CategoryOptionCombo", "signature": "CategoryOptionCombo getAttributeOptionCombo( CategoryCombo categoryCombo, Set<String> opts,\n        String attributeOptionCombo, IdScheme idScheme )", "full_signature": "private CategoryOptionCombo getAttributeOptionCombo( CategoryCombo categoryCombo, Set<String> opts,\n        String attributeOptionCombo, IdScheme idScheme )", "class_method_signature": "AttributeOptionComboLoader.getAttributeOptionCombo( CategoryCombo categoryCombo, Set<String> opts,\n        String attributeOptionCombo, IdScheme idScheme )", "testcase": false, "constructor": false}, {"identifier": "resolveCategoryComboId", "parameters": "( CategoryCombo categoryCombo, IdScheme idScheme )", "modifiers": "private", "return": "String", "signature": "String resolveCategoryComboId( CategoryCombo categoryCombo, IdScheme idScheme )", "full_signature": "private String resolveCategoryComboId( CategoryCombo categoryCombo, IdScheme idScheme )", "class_method_signature": "AttributeOptionComboLoader.resolveCategoryComboId( CategoryCombo categoryCombo, IdScheme idScheme )", "testcase": false, "constructor": false}, {"identifier": "getAttributeOptionCombo", "parameters": "( IdScheme idScheme, String categoryComboId, Set<CategoryOption> categoryOptions )", "modifiers": "private", "return": "CategoryOptionCombo", "signature": "CategoryOptionCombo getAttributeOptionCombo( IdScheme idScheme, String categoryComboId, Set<CategoryOption> categoryOptions )", "full_signature": "private CategoryOptionCombo getAttributeOptionCombo( IdScheme idScheme, String categoryComboId, Set<CategoryOption> categoryOptions )", "class_method_signature": "AttributeOptionComboLoader.getAttributeOptionCombo( IdScheme idScheme, String categoryComboId, Set<CategoryOption> categoryOptions )", "testcase": false, "constructor": false}, {"identifier": "loadCategoryOptionCombo", "parameters": "( IdScheme idScheme, String id )", "modifiers": "private", "return": "CategoryOptionCombo", "signature": "CategoryOptionCombo loadCategoryOptionCombo( IdScheme idScheme, String id )", "full_signature": "private CategoryOptionCombo loadCategoryOptionCombo( IdScheme idScheme, String id )", "class_method_signature": "AttributeOptionComboLoader.loadCategoryOptionCombo( IdScheme idScheme, String id )", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "( String key, ResultSet rs )", "modifiers": "private", "return": "CategoryOptionCombo", "signature": "CategoryOptionCombo bind( String key, ResultSet rs )", "full_signature": "private CategoryOptionCombo bind( String key, ResultSet rs )", "class_method_signature": "AttributeOptionComboLoader.bind( String key, ResultSet rs )", "testcase": false, "constructor": false}, {"identifier": "loadCategoryOption", "parameters": "( IdScheme idScheme, String id )", "modifiers": "private", "return": "CategoryOption", "signature": "CategoryOption loadCategoryOption( IdScheme idScheme, String id )", "full_signature": "private CategoryOption loadCategoryOption( IdScheme idScheme, String id )", "class_method_signature": "AttributeOptionComboLoader.loadCategoryOption( IdScheme idScheme, String id )", "testcase": false, "constructor": false}, {"identifier": "resolveId", "parameters": "( IdScheme scheme, String primaryKeyColumn, String id )", "modifiers": "private", "return": "String", "signature": "String resolveId( IdScheme scheme, String primaryKeyColumn, String id )", "full_signature": "private String resolveId( IdScheme scheme, String primaryKeyColumn, String id )", "class_method_signature": "AttributeOptionComboLoader.resolveId( IdScheme scheme, String primaryKeyColumn, String id )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/context/AttributeOptionComboLoader.java"}, "focal_method": {"identifier": "getDefault", "parameters": "()", "modifiers": "public", "return": "CategoryOptionCombo", "body": "public CategoryOptionCombo getDefault()\n    {\n        return  loadCategoryOptionCombo( IdScheme.NAME, \"default\" );\n    }", "signature": "CategoryOptionCombo getDefault()", "full_signature": "public CategoryOptionCombo getDefault()", "class_method_signature": "AttributeOptionComboLoader.getDefault()", "testcase": false, "constructor": false, "invocations": ["loadCategoryOptionCombo"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}