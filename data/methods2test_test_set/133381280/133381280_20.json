{"test_class": {"identifier": "LookoutServerRegistryFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/lookout-sofa-boot-starter/src/test/java/com/alipay/lookout/starter/support/reg/LookoutServerRegistryFactoryTest.java"}, "test_case": {"identifier": "testLookoutServerRegistryFactory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLookoutServerRegistryFactory() {\n        MetricObserver<LookoutMeasurement> logObserver = new LogObserver();\n        LookoutServerRegistryFactory factory = new LookoutServerRegistryFactory(\n            Lists.newArrayList(logObserver));\n        LookoutConfig config = new LookoutConfig();\n        LookoutRegistry r = factory.get(config);\n        Assert.assertEquals(2, r.getMetricObservers().size());\n    }", "signature": "void testLookoutServerRegistryFactory()", "full_signature": "@Test public void testLookoutServerRegistryFactory()", "class_method_signature": "LookoutServerRegistryFactoryTest.testLookoutServerRegistryFactory()", "testcase": true, "constructor": false, "invocations": ["newArrayList", "get", "assertEquals", "size", "getMetricObservers"]}, "focal_class": {"identifier": "LookoutServerRegistryFactory", "superclass": "", "interfaces": "implements\n                                         MetricsRegistryFactory<LookoutRegistry, LookoutConfig>", "fields": [{"original_string": "private static final Logger                      logger          = LookoutLoggerFactory\n                                                                         .getLogger(LookoutServerRegistryFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger          = LookoutLoggerFactory\n                                                                         .getLogger(LookoutServerRegistryFactory.class)", "var_name": "logger"}, {"original_string": "private LookoutRegistry                          lookoutRegistry = null;", "modifier": "private", "type": "LookoutRegistry", "declarator": "lookoutRegistry = null", "var_name": "lookoutRegistry"}, {"original_string": "private List<MetricObserver<LookoutMeasurement>> metricObservers;", "modifier": "private", "type": "List<MetricObserver<LookoutMeasurement>>", "declarator": "metricObservers", "var_name": "metricObservers"}, {"original_string": "private AddressService                           addressService;", "modifier": "private", "type": "AddressService", "declarator": "addressService", "var_name": "addressService"}], "methods": [{"identifier": "LookoutServerRegistryFactory", "parameters": "(List<MetricObserver<LookoutMeasurement>> metricObservers)", "modifiers": "public", "return": "", "signature": " LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers)", "full_signature": "public  LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers)", "class_method_signature": "LookoutServerRegistryFactory.LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers)", "testcase": false, "constructor": true}, {"identifier": "LookoutServerRegistryFactory", "parameters": "(List<MetricObserver<LookoutMeasurement>> metricObservers,\n                                        AddressService addressService)", "modifiers": "public", "return": "", "signature": " LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers,\n                                        AddressService addressService)", "full_signature": "public  LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers,\n                                        AddressService addressService)", "class_method_signature": "LookoutServerRegistryFactory.LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers,\n                                        AddressService addressService)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(LookoutConfig metricConfig)", "modifiers": "@Override public synchronized", "return": "LookoutRegistry", "signature": "LookoutRegistry get(LookoutConfig metricConfig)", "full_signature": "@Override public synchronized LookoutRegistry get(LookoutConfig metricConfig)", "class_method_signature": "LookoutServerRegistryFactory.get(LookoutConfig metricConfig)", "testcase": false, "constructor": false}], "file": "client/lookout-sofa-boot-starter/src/main/java/com/alipay/lookout/starter/support/reg/LookoutServerRegistryFactory.java"}, "focal_method": {"identifier": "LookoutServerRegistryFactory", "parameters": "(List<MetricObserver<LookoutMeasurement>> metricObservers)", "modifiers": "public", "return": "", "body": "public LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers) {\n        this.metricObservers = metricObservers;\n    }", "signature": " LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers)", "full_signature": "public  LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers)", "class_method_signature": "LookoutServerRegistryFactory.LookoutServerRegistryFactory(List<MetricObserver<LookoutMeasurement>> metricObservers)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}