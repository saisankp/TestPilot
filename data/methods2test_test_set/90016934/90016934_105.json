{"test_class": {"identifier": "UserKeyTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/fr/gael/dhus/server/http/valve/processings/UserKeyTest.java"}, "test_case": {"identifier": "toStringTest", "parameters": "()", "modifiers": "@Test() public", "return": "void", "body": "@Test()\n   public void toStringTest()\n   {\n      ProcessingInformation pi = new ProcessingInformation(\"Request\");\n      pi.setRemoteAddress(\"123.12.122.33\");\n      pi.setUsername(\"user1\");\n\n      ProcessingInformation pi1 = new ProcessingInformation(\"Request\");\n\n      UserKey uk = new UserKey(pi, new UserSelection[]\n      {\n         UserSelection.LOGIN, UserSelection.IP\n      });\n      UserKey uk1 = new UserKey(pi1, new UserSelection[]\n      {\n         UserSelection.LOGIN, UserSelection.IP\n      });\n\n      Assert.assertEquals(uk.toString(), \"LOGIN:user1;IP:123.12.122.33;\"); // No Exception\n      Assert.assertEquals(uk1.toString(), \"LOGIN:null;IP:null;\"); // No Exception (null)\n   }", "signature": "void toStringTest()", "full_signature": "@Test() public void toStringTest()", "class_method_signature": "UserKeyTest.toStringTest()", "testcase": true, "constructor": false, "invocations": ["setRemoteAddress", "setUsername", "assertEquals", "toString", "assertEquals", "toString"]}, "focal_class": {"identifier": "UserKey", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "ProcessingInformation pi;", "modifier": "", "type": "ProcessingInformation", "declarator": "pi", "var_name": "pi"}, {"original_string": "UserSelection[] selection;", "modifier": "", "type": "UserSelection[]", "declarator": "selection", "var_name": "selection"}], "methods": [{"identifier": "getPi", "parameters": "()", "modifiers": "public", "return": "ProcessingInformation", "signature": "ProcessingInformation getPi()", "full_signature": "public ProcessingInformation getPi()", "class_method_signature": "UserKey.getPi()", "testcase": false, "constructor": false}, {"identifier": "UserKey", "parameters": "(ProcessingInformation pi, UserSelection[] selection)", "modifiers": "public", "return": "", "signature": " UserKey(ProcessingInformation pi, UserSelection[] selection)", "full_signature": "public  UserKey(ProcessingInformation pi, UserSelection[] selection)", "class_method_signature": "UserKey.UserKey(ProcessingInformation pi, UserSelection[] selection)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "UserKey.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UserKey.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/fr/gael/dhus/server/http/valve/processings/UserKey.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n   public String toString()\n   {\n      StringBuilder sb = new StringBuilder();\n      for (UserSelection selection: this.selection)\n      {\n         sb.append(selection.name()).append(\":\");\n         switch (selection)\n         {\n            case LOGIN:\n            case EMAIL:\n               sb.append(pi.getUsername()); // EMAIL must be extracted from db\n               break;\n            case IP:\n               sb.append(pi.getRemoteAddress());\n               break;\n            default:\n               break;\n         }\n         sb.append(\";\");\n      }\n      return sb.toString();\n   }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UserKey.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "name", "append", "getUsername", "append", "getRemoteAddress", "append", "toString"]}, "repository": {"repo_id": 90016934, "url": "https://github.com/SentinelDataHub/dhus-core", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 2371, "license": "licensed"}}