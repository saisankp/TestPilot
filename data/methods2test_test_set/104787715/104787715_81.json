{"test_class": {"identifier": "GitHubPullRequestSenderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dockerfile-image-update/src/test/java/com/salesforce/dockerfileimageupdate/process/GitHubPullRequestSenderTest.java"}, "test_case": {"identifier": "testGetForkNotFoundFromExistingRecords", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetForkNotFoundFromExistingRecords() {\n        String reponame = \"reponame\";\n        DockerfileGitHubUtil dockerfileGitHubUtil = mock(DockerfileGitHubUtil.class);\n        GitHubPullRequestSender gitHubPullRequestSender = new GitHubPullRequestSender(dockerfileGitHubUtil, mock(ForkableRepoValidator.class));\n        Multimap<String, GitHubContentToProcess> processMultimap = HashMultimap.create();\n        assertNull(gitHubPullRequestSender.getForkFromExistingRecordToProcess(processMultimap, reponame));\n    }", "signature": "void testGetForkNotFoundFromExistingRecords()", "full_signature": "@Test public void testGetForkNotFoundFromExistingRecords()", "class_method_signature": "GitHubPullRequestSenderTest.testGetForkNotFoundFromExistingRecords()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "create", "assertNull", "getForkFromExistingRecordToProcess"]}, "focal_class": {"identifier": "GitHubPullRequestSender", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(GitHubPullRequestSender.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(GitHubPullRequestSender.class)", "var_name": "log"}, {"original_string": "public static final String REPO_IS_FORK = \"it's a fork already. Sending a PR to a fork is unsupported at the moment.\";", "modifier": "public static final", "type": "String", "declarator": "REPO_IS_FORK = \"it's a fork already. Sending a PR to a fork is unsupported at the moment.\"", "var_name": "REPO_IS_FORK"}, {"original_string": "private final DockerfileGitHubUtil dockerfileGitHubUtil;", "modifier": "private final", "type": "DockerfileGitHubUtil", "declarator": "dockerfileGitHubUtil", "var_name": "dockerfileGitHubUtil"}, {"original_string": "private final ForkableRepoValidator forkableRepoValidator;", "modifier": "private final", "type": "ForkableRepoValidator", "declarator": "forkableRepoValidator", "var_name": "forkableRepoValidator"}], "methods": [{"identifier": "GitHubPullRequestSender", "parameters": "(DockerfileGitHubUtil dockerfileGitHubUtil, ForkableRepoValidator forkableRepoValidator)", "modifiers": "public", "return": "", "signature": " GitHubPullRequestSender(DockerfileGitHubUtil dockerfileGitHubUtil, ForkableRepoValidator forkableRepoValidator)", "full_signature": "public  GitHubPullRequestSender(DockerfileGitHubUtil dockerfileGitHubUtil, ForkableRepoValidator forkableRepoValidator)", "class_method_signature": "GitHubPullRequestSender.GitHubPullRequestSender(DockerfileGitHubUtil dockerfileGitHubUtil, ForkableRepoValidator forkableRepoValidator)", "testcase": false, "constructor": true}, {"identifier": "forkRepositoriesFoundAndGetPathToDockerfiles", "parameters": "(\n            PagedSearchIterable<GHContent> contentsWithImage,\n            GitForkBranch gitForkBranch)", "modifiers": "public", "return": "Multimap<String, GitHubContentToProcess>", "signature": "Multimap<String, GitHubContentToProcess> forkRepositoriesFoundAndGetPathToDockerfiles(\n            PagedSearchIterable<GHContent> contentsWithImage,\n            GitForkBranch gitForkBranch)", "full_signature": "public Multimap<String, GitHubContentToProcess> forkRepositoriesFoundAndGetPathToDockerfiles(\n            PagedSearchIterable<GHContent> contentsWithImage,\n            GitForkBranch gitForkBranch)", "class_method_signature": "GitHubPullRequestSender.forkRepositoriesFoundAndGetPathToDockerfiles(\n            PagedSearchIterable<GHContent> contentsWithImage,\n            GitForkBranch gitForkBranch)", "testcase": false, "constructor": false}, {"identifier": "ensureForkedAndAddToListForProcessing", "parameters": "(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                       GHRepository parent,\n                                                       String parentRepoName,\n                                                       GHContent ghContent)", "modifiers": "private", "return": "void", "signature": "void ensureForkedAndAddToListForProcessing(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                       GHRepository parent,\n                                                       String parentRepoName,\n                                                       GHContent ghContent)", "full_signature": "private void ensureForkedAndAddToListForProcessing(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                       GHRepository parent,\n                                                       String parentRepoName,\n                                                       GHContent ghContent)", "class_method_signature": "GitHubPullRequestSender.ensureForkedAndAddToListForProcessing(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                       GHRepository parent,\n                                                       String parentRepoName,\n                                                       GHContent ghContent)", "testcase": false, "constructor": false}, {"identifier": "getForkFromExistingRecordToProcess", "parameters": "(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName)", "modifiers": "protected", "return": "GHRepository", "signature": "GHRepository getForkFromExistingRecordToProcess(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName)", "full_signature": "protected GHRepository getForkFromExistingRecordToProcess(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName)", "class_method_signature": "GitHubPullRequestSender.getForkFromExistingRecordToProcess(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName)", "testcase": false, "constructor": false}], "file": "dockerfile-image-update/src/main/java/com/salesforce/dockerfileimageupdate/process/GitHubPullRequestSender.java"}, "focal_method": {"identifier": "getForkFromExistingRecordToProcess", "parameters": "(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName)", "modifiers": "protected", "return": "GHRepository", "body": "protected GHRepository getForkFromExistingRecordToProcess(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName) {\n        if (pathToDockerfilesInParentRepo.containsKey(parentRepoName)) {\n            Optional<GitHubContentToProcess> firstForkData = pathToDockerfilesInParentRepo.get(parentRepoName).stream().findFirst();\n            if (firstForkData.isPresent()) {\n                return firstForkData.get().getFork();\n            } else {\n                log.warn(\"For some reason we have data inconsistency when trying to find the fork for {}\", parentRepoName);\n            }\n        }\n        return null;\n    }", "signature": "GHRepository getForkFromExistingRecordToProcess(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName)", "full_signature": "protected GHRepository getForkFromExistingRecordToProcess(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName)", "class_method_signature": "GitHubPullRequestSender.getForkFromExistingRecordToProcess(Multimap<String, GitHubContentToProcess> pathToDockerfilesInParentRepo,\n                                                            String parentRepoName)", "testcase": false, "constructor": false, "invocations": ["containsKey", "findFirst", "stream", "get", "isPresent", "getFork", "get", "warn"]}, "repository": {"repo_id": 104787715, "url": "https://github.com/salesforce/dockerfile-image-update", "stars": 62, "created": "9/25/2017 6:38:13 PM +00:00", "updates": "2020-01-23T07:15:59+00:00", "fork": "False", "license": "licensed"}}