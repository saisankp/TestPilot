{"test_class": {"identifier": "UnionFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UnionFunction unionFunction;", "modifier": "private", "type": "UnionFunction", "declarator": "unionFunction", "var_name": "unionFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/UnionFunctionTest.java"}, "test_case": {"identifier": "invokeListAndSingleObjectWithDuplicates", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeListAndSingleObjectWithDuplicates() {\n        FunctionTestUtil.assertResultList(unionFunction.invoke(new Object[]{5, Arrays.asList(10, 4, 5), 10}), Arrays.asList(5, 10, 4));\n    }", "signature": "void invokeListAndSingleObjectWithDuplicates()", "full_signature": "@Test public void invokeListAndSingleObjectWithDuplicates()", "class_method_signature": "UnionFunctionTest.invokeListAndSingleObjectWithDuplicates()", "testcase": true, "constructor": false, "invocations": ["assertResultList", "invoke", "asList", "asList"]}, "focal_class": {"identifier": "UnionFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "UnionFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " UnionFunction()", "full_signature": "public  UnionFunction()", "class_method_signature": "UnionFunction.UnionFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName(\"list\") Object[] lists)", "modifiers": "public", "return": "FEELFnResult<List<Object>>", "signature": "FEELFnResult<List<Object>> invoke(@ParameterName(\"list\") Object[] lists)", "full_signature": "public FEELFnResult<List<Object>> invoke(@ParameterName(\"list\") Object[] lists)", "class_method_signature": "UnionFunction.invoke(@ParameterName(\"list\") Object[] lists)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/UnionFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName(\"list\") Object[] lists)", "modifiers": "public", "return": "FEELFnResult<List<Object>>", "body": "public FEELFnResult<List<Object>> invoke(@ParameterName(\"list\") Object[] lists) {\n        if ( lists == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"lists\", \"cannot be null\"));\n        }\n\n        final Set<Object> resultSet = new LinkedHashSet<>();\n        for ( final Object list : lists ) {\n            if ( list instanceof Collection ) {\n                resultSet.addAll((Collection) list);\n            } else {\n                resultSet.add(list);\n            }\n        }\n\n        // spec requires us to return a new list\n        return FEELFnResult.ofResult( new ArrayList<>(resultSet) );\n    }", "signature": "FEELFnResult<List<Object>> invoke(@ParameterName(\"list\") Object[] lists)", "full_signature": "public FEELFnResult<List<Object>> invoke(@ParameterName(\"list\") Object[] lists)", "class_method_signature": "UnionFunction.invoke(@ParameterName(\"list\") Object[] lists)", "testcase": false, "constructor": false, "invocations": ["ofError", "addAll", "add", "ofResult"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}