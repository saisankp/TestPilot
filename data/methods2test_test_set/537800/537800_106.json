{"test_class": {"identifier": "InstrumentedHttpClientConnectionManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MetricRegistry metricRegistry = new MetricRegistry();", "modifier": "private final", "type": "MetricRegistry", "declarator": "metricRegistry = new MetricRegistry()", "var_name": "metricRegistry"}], "file": "metrics-httpclient/src/test/java/com/codahale/metrics/httpclient/InstrumentedHttpClientConnectionManagerTest.java"}, "test_case": {"identifier": "configurableViaBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void configurableViaBuilder() {\n        final MetricRegistry registry = Mockito.mock(MetricRegistry.class);\n\n        InstrumentedHttpClientConnectionManager.builder(registry)\n                .name(\"some-name\")\n                .name(\"some-other-name\")\n                .build()\n                .close();\n\n        ArgumentCaptor<String> argumentCaptor = ArgumentCaptor.forClass(String.class);\n        Mockito.verify(registry, Mockito.atLeast(1)).register(argumentCaptor.capture(), any());\n        assertTrue(argumentCaptor.getValue().contains(\"some-other-name\"));\n    }", "signature": "void configurableViaBuilder()", "full_signature": "@Test public void configurableViaBuilder()", "class_method_signature": "InstrumentedHttpClientConnectionManagerTest.configurableViaBuilder()", "testcase": true, "constructor": false, "invocations": ["mock", "close", "build", "name", "name", "builder", "forClass", "register", "verify", "atLeast", "capture", "any", "assertTrue", "contains", "getValue"]}, "focal_class": {"identifier": "InstrumentedHttpClientConnectionManager", "superclass": "extends PoolingHttpClientConnectionManager", "interfaces": "", "fields": [{"original_string": "private final MetricRegistry metricsRegistry;", "modifier": "private final", "type": "MetricRegistry", "declarator": "metricsRegistry", "var_name": "metricsRegistry"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "getDefaultRegistry", "parameters": "()", "modifiers": "protected static", "return": "Registry<ConnectionSocketFactory>", "signature": "Registry<ConnectionSocketFactory> getDefaultRegistry()", "full_signature": "protected static Registry<ConnectionSocketFactory> getDefaultRegistry()", "class_method_signature": "InstrumentedHttpClientConnectionManager.getDefaultRegistry()", "testcase": false, "constructor": false}, {"identifier": "InstrumentedHttpClientConnectionManager", "parameters": "(MetricRegistry metricRegistry)", "modifiers": "@Deprecated public", "return": "", "signature": " InstrumentedHttpClientConnectionManager(MetricRegistry metricRegistry)", "full_signature": "@Deprecated public  InstrumentedHttpClientConnectionManager(MetricRegistry metricRegistry)", "class_method_signature": "InstrumentedHttpClientConnectionManager.InstrumentedHttpClientConnectionManager(MetricRegistry metricRegistry)", "testcase": false, "constructor": true}, {"identifier": "InstrumentedHttpClientConnectionManager", "parameters": "(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry)", "modifiers": "@Deprecated public", "return": "", "signature": " InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry)", "full_signature": "@Deprecated public  InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry)", "class_method_signature": "InstrumentedHttpClientConnectionManager.InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry)", "testcase": false, "constructor": true}, {"identifier": "InstrumentedHttpClientConnectionManager", "parameters": "(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit)", "modifiers": "@Deprecated public", "return": "", "signature": " InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit)", "full_signature": "@Deprecated public  InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit)", "class_method_signature": "InstrumentedHttpClientConnectionManager.InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit)", "testcase": false, "constructor": true}, {"identifier": "InstrumentedHttpClientConnectionManager", "parameters": "(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry,\n                                                   HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>\n                                                           connFactory,\n                                                   SchemePortResolver schemePortResolver,\n                                                   DnsResolver dnsResolver,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit,\n                                                   String name)", "modifiers": "@Deprecated public", "return": "", "signature": " InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry,\n                                                   HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>\n                                                           connFactory,\n                                                   SchemePortResolver schemePortResolver,\n                                                   DnsResolver dnsResolver,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit,\n                                                   String name)", "full_signature": "@Deprecated public  InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry,\n                                                   HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>\n                                                           connFactory,\n                                                   SchemePortResolver schemePortResolver,\n                                                   DnsResolver dnsResolver,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit,\n                                                   String name)", "class_method_signature": "InstrumentedHttpClientConnectionManager.InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   Registry<ConnectionSocketFactory> socketFactoryRegistry,\n                                                   HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>\n                                                           connFactory,\n                                                   SchemePortResolver schemePortResolver,\n                                                   DnsResolver dnsResolver,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit,\n                                                   String name)", "testcase": false, "constructor": true}, {"identifier": "InstrumentedHttpClientConnectionManager", "parameters": "(MetricRegistry metricsRegistry,\n                                                   HttpClientConnectionOperator httpClientConnectionOperator,\n                                                   HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>\n                                                           connFactory,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit,\n                                                   String name)", "modifiers": "@Deprecated public", "return": "", "signature": " InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   HttpClientConnectionOperator httpClientConnectionOperator,\n                                                   HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>\n                                                           connFactory,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit,\n                                                   String name)", "full_signature": "@Deprecated public  InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   HttpClientConnectionOperator httpClientConnectionOperator,\n                                                   HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>\n                                                           connFactory,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit,\n                                                   String name)", "class_method_signature": "InstrumentedHttpClientConnectionManager.InstrumentedHttpClientConnectionManager(MetricRegistry metricsRegistry,\n                                                   HttpClientConnectionOperator httpClientConnectionOperator,\n                                                   HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>\n                                                           connFactory,\n                                                   long connTTL,\n                                                   TimeUnit connTTLTimeUnit,\n                                                   String name)", "testcase": false, "constructor": true}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "InstrumentedHttpClientConnectionManager.shutdown()", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "(MetricRegistry metricsRegistry)", "modifiers": "public static", "return": "Builder", "signature": "Builder builder(MetricRegistry metricsRegistry)", "full_signature": "public static Builder builder(MetricRegistry metricsRegistry)", "class_method_signature": "InstrumentedHttpClientConnectionManager.builder(MetricRegistry metricsRegistry)", "testcase": false, "constructor": false}], "file": "metrics-httpclient/src/main/java/com/codahale/metrics/httpclient/InstrumentedHttpClientConnectionManager.java"}, "focal_method": {"identifier": "builder", "parameters": "(MetricRegistry metricsRegistry)", "modifiers": "public static", "return": "Builder", "body": "public static Builder builder(MetricRegistry metricsRegistry) {\n        return new Builder().metricsRegistry(metricsRegistry);\n    }", "signature": "Builder builder(MetricRegistry metricsRegistry)", "full_signature": "public static Builder builder(MetricRegistry metricsRegistry)", "class_method_signature": "InstrumentedHttpClientConnectionManager.builder(MetricRegistry metricsRegistry)", "testcase": false, "constructor": false, "invocations": ["metricsRegistry"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}