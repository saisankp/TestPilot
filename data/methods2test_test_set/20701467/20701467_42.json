{"test_class": {"identifier": "ReactiveFlowWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockitoAnnotations.Mock private InventoryReader inventoryReader;", "modifier": "@MockitoAnnotations.Mock private", "type": "InventoryReader", "declarator": "inventoryReader", "var_name": "inventoryReader"}, {"original_string": "@MockitoAnnotations.Mock private FlowWriterService flowWriterService;", "modifier": "@MockitoAnnotations.Mock private", "type": "FlowWriterService", "declarator": "flowWriterService", "var_name": "flowWriterService"}, {"original_string": "@MockitoAnnotations.Mock private NodeConnectorRef destNodeConnectorRef;", "modifier": "@MockitoAnnotations.Mock private", "type": "NodeConnectorRef", "declarator": "destNodeConnectorRef", "var_name": "destNodeConnectorRef"}, {"original_string": "private ReactiveFlowWriter reactiveFlowWriter;", "modifier": "private", "type": "ReactiveFlowWriter", "declarator": "reactiveFlowWriter", "var_name": "reactiveFlowWriter"}, {"original_string": "private InstanceIdentifier<Node> nodeInstanceIdentifier;", "modifier": "private", "type": "InstanceIdentifier<Node>", "declarator": "nodeInstanceIdentifier", "var_name": "nodeInstanceIdentifier"}, {"original_string": "private NodeConnectorRef nodeConnectorRef;", "modifier": "private", "type": "NodeConnectorRef", "declarator": "nodeConnectorRef", "var_name": "nodeConnectorRef"}, {"original_string": "private ArrayList<PacketChain> packetChainList;", "modifier": "private", "type": "ArrayList<PacketChain>", "declarator": "packetChainList", "var_name": "packetChainList"}], "file": "l2switch-main/src/test/java/org/opendaylight/l2switch/flow/ReactiveFlowWriterTest.java"}, "test_case": {"identifier": "onArpPacketReceivedTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onArpPacketReceivedTest() {\n\n        ArpPacketReceived arpPacketReceived = new ArpPacketReceivedBuilder().setPacketChain(packetChainList).build();\n        reactiveFlowWriter.onArpPacketReceived(arpPacketReceived);\n\n    }", "signature": "void onArpPacketReceivedTest()", "full_signature": "@Test public void onArpPacketReceivedTest()", "class_method_signature": "ReactiveFlowWriterTest.onArpPacketReceivedTest()", "testcase": true, "constructor": false, "invocations": ["build", "setPacketChain", "onArpPacketReceived"]}, "focal_class": {"identifier": "ReactiveFlowWriter", "superclass": "", "interfaces": "implements ArpPacketListener", "fields": [{"original_string": "private final InventoryReader inventoryReader;", "modifier": "private final", "type": "InventoryReader", "declarator": "inventoryReader", "var_name": "inventoryReader"}, {"original_string": "private final FlowWriterService flowWriterService;", "modifier": "private final", "type": "FlowWriterService", "declarator": "flowWriterService", "var_name": "flowWriterService"}], "methods": [{"identifier": "ReactiveFlowWriter", "parameters": "(InventoryReader inventoryReader, FlowWriterService flowWriterService)", "modifiers": "public", "return": "", "signature": " ReactiveFlowWriter(InventoryReader inventoryReader, FlowWriterService flowWriterService)", "full_signature": "public  ReactiveFlowWriter(InventoryReader inventoryReader, FlowWriterService flowWriterService)", "class_method_signature": "ReactiveFlowWriter.ReactiveFlowWriter(InventoryReader inventoryReader, FlowWriterService flowWriterService)", "testcase": false, "constructor": true}, {"identifier": "ignoreThisMac", "parameters": "(MacAddress macToCheck)", "modifiers": "private", "return": "boolean", "signature": "boolean ignoreThisMac(MacAddress macToCheck)", "full_signature": "private boolean ignoreThisMac(MacAddress macToCheck)", "class_method_signature": "ReactiveFlowWriter.ignoreThisMac(MacAddress macToCheck)", "testcase": false, "constructor": false}, {"identifier": "onArpPacketReceived", "parameters": "(ArpPacketReceived packetReceived)", "modifiers": "@Override public", "return": "void", "signature": "void onArpPacketReceived(ArpPacketReceived packetReceived)", "full_signature": "@Override public void onArpPacketReceived(ArpPacketReceived packetReceived)", "class_method_signature": "ReactiveFlowWriter.onArpPacketReceived(ArpPacketReceived packetReceived)", "testcase": false, "constructor": false}, {"identifier": "writeFlows", "parameters": "(NodeConnectorRef ingress, MacAddress srcMac, MacAddress destMac)", "modifiers": "public", "return": "void", "signature": "void writeFlows(NodeConnectorRef ingress, MacAddress srcMac, MacAddress destMac)", "full_signature": "public void writeFlows(NodeConnectorRef ingress, MacAddress srcMac, MacAddress destMac)", "class_method_signature": "ReactiveFlowWriter.writeFlows(NodeConnectorRef ingress, MacAddress srcMac, MacAddress destMac)", "testcase": false, "constructor": false}], "file": "l2switch-main/src/main/java/org/opendaylight/l2switch/flow/ReactiveFlowWriter.java"}, "focal_method": {"identifier": "onArpPacketReceived", "parameters": "(ArpPacketReceived packetReceived)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onArpPacketReceived(ArpPacketReceived packetReceived) {\n        if (packetReceived == null || packetReceived.getPacketChain() == null) {\n            return;\n        }\n\n        RawPacket rawPacket = null;\n        EthernetPacket ethernetPacket = null;\n        ArpPacket arpPacket = null;\n        for (PacketChain packetChain : packetReceived.getPacketChain()) {\n            if (packetChain.getPacket() instanceof RawPacket) {\n                rawPacket = (RawPacket) packetChain.getPacket();\n            } else if (packetChain.getPacket() instanceof EthernetPacket) {\n                ethernetPacket = (EthernetPacket) packetChain.getPacket();\n            } else if (packetChain.getPacket() instanceof ArpPacket) {\n                arpPacket = (ArpPacket) packetChain.getPacket();\n            }\n        }\n        if (rawPacket == null || ethernetPacket == null || arpPacket == null) {\n            return;\n        }\n        MacAddress destMac = ethernetPacket.getDestinationMac();\n        if (!ignoreThisMac(destMac)) {\n            writeFlows(rawPacket.getIngress(), ethernetPacket.getSourceMac(), ethernetPacket.getDestinationMac());\n        }\n    }", "signature": "void onArpPacketReceived(ArpPacketReceived packetReceived)", "full_signature": "@Override public void onArpPacketReceived(ArpPacketReceived packetReceived)", "class_method_signature": "ReactiveFlowWriter.onArpPacketReceived(ArpPacketReceived packetReceived)", "testcase": false, "constructor": false, "invocations": ["getPacketChain", "getPacketChain", "getPacket", "getPacket", "getPacket", "getPacket", "getPacket", "getPacket", "getDestinationMac", "ignoreThisMac", "writeFlows", "getIngress", "getSourceMac", "getDestinationMac"]}, "repository": {"repo_id": 20701467, "url": "https://github.com/opendaylight/l2switch", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 25, "size": 4178, "license": "licensed"}}