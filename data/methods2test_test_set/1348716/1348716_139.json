{"test_class": {"identifier": "FlatLoanPrincipalWithInterestGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PrincipalWithInterestGenerator principalWithInterestGenerator;", "modifier": "private", "type": "PrincipalWithInterestGenerator", "declarator": "principalWithInterestGenerator", "var_name": "principalWithInterestGenerator"}, {"original_string": "private Money loanInterest;", "modifier": "private", "type": "Money", "declarator": "loanInterest", "var_name": "loanInterest"}], "file": "appdomain/src/test/java/org/mifos/clientportfolio/newloan/domain/FlatLoanPrincipalWithInterestGeneratorTest.java"}, "test_case": {"identifier": "givenPrincipalOnlyGraceShouldReturnPrincipalAndInterestDueForEachInstallmentRelativeToLoanAmount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void givenPrincipalOnlyGraceShouldReturnPrincipalAndInterestDueForEachInstallmentRelativeToLoanAmount() {\n\n        LoanInterestCalculationDetails loanInterestCalculationDetails = new LoanInterestCalculationDetailsBuilder().withLoanAmount(\"100.0\")\n                                                                                                                    .withGraceType(GraceType.PRINCIPALONLYGRACE)\n                                                                                                                    .withGraceDurationOf(0)\n                                                                                                                    .withNumberOfInstallments(10)\n                                                                                                                    .withInterestFractionalRatePerInstallmentOf(\"0.16\")\n                                                                                                                    .build();\n\n        // exercise test\n        List<InstallmentPrincipalAndInterest> equalInstallments = principalWithInterestGenerator.generateEqualInstallments(loanInterestCalculationDetails);\n\n        // verification\n        assertThat(equalInstallments.get(0).getPrincipal(), is(TestMoneyUtil.createMoney(\"10\")));\n        assertThat(TestMoneyUtil.moneyOf(equalInstallments.get(0).getInterest()), is(TestMoneyUtil.moneyOf(\"0.8\")));\n    }", "signature": "void givenPrincipalOnlyGraceShouldReturnPrincipalAndInterestDueForEachInstallmentRelativeToLoanAmount()", "full_signature": "@Test public void givenPrincipalOnlyGraceShouldReturnPrincipalAndInterestDueForEachInstallmentRelativeToLoanAmount()", "class_method_signature": "FlatLoanPrincipalWithInterestGeneratorTest.givenPrincipalOnlyGraceShouldReturnPrincipalAndInterestDueForEachInstallmentRelativeToLoanAmount()", "testcase": true, "constructor": false, "invocations": ["build", "withInterestFractionalRatePerInstallmentOf", "withNumberOfInstallments", "withGraceDurationOf", "withGraceType", "withLoanAmount", "generateEqualInstallments", "assertThat", "getPrincipal", "get", "is", "createMoney", "assertThat", "moneyOf", "getInterest", "get", "is", "moneyOf"]}, "focal_class": {"identifier": "FlatLoanPrincipalWithInterestGenerator", "superclass": "", "interfaces": "implements PrincipalWithInterestGenerator", "fields": [{"original_string": "private final Money loanInterest;", "modifier": "private final", "type": "Money", "declarator": "loanInterest", "var_name": "loanInterest"}], "methods": [{"identifier": "FlatLoanPrincipalWithInterestGenerator", "parameters": "(Money loanInterest)", "modifiers": "public", "return": "", "signature": " FlatLoanPrincipalWithInterestGenerator(Money loanInterest)", "full_signature": "public  FlatLoanPrincipalWithInterestGenerator(Money loanInterest)", "class_method_signature": "FlatLoanPrincipalWithInterestGenerator.FlatLoanPrincipalWithInterestGenerator(Money loanInterest)", "testcase": false, "constructor": true}, {"identifier": "generateEqualInstallments", "parameters": "(LoanInterestCalculationDetails loanInterestCalculationDetails)", "modifiers": "@Override public", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "full_signature": "@Override public List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "class_method_signature": "FlatLoanPrincipalWithInterestGenerator.generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "testcase": false, "constructor": false}, {"identifier": "allFlatInstallments_v2", "parameters": "(final Money loanInterest, GraceType graceType, Money loanAmount, Integer numberOfInstallments, Integer gracePeriodDuration)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> allFlatInstallments_v2(final Money loanInterest, GraceType graceType, Money loanAmount, Integer numberOfInstallments, Integer gracePeriodDuration)", "full_signature": "private List<InstallmentPrincipalAndInterest> allFlatInstallments_v2(final Money loanInterest, GraceType graceType, Money loanAmount, Integer numberOfInstallments, Integer gracePeriodDuration)", "class_method_signature": "FlatLoanPrincipalWithInterestGenerator.allFlatInstallments_v2(final Money loanInterest, GraceType graceType, Money loanAmount, Integer numberOfInstallments, Integer gracePeriodDuration)", "testcase": false, "constructor": false}, {"identifier": "generateFlatInstallmentsAfterInterestOnlyGraceInstallments_v2", "parameters": "(final Money loanInterest, Money loanAmount, Integer numberOfInstallments, Integer gracePeriodDuration)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> generateFlatInstallmentsAfterInterestOnlyGraceInstallments_v2(final Money loanInterest, Money loanAmount, Integer numberOfInstallments, Integer gracePeriodDuration)", "full_signature": "private List<InstallmentPrincipalAndInterest> generateFlatInstallmentsAfterInterestOnlyGraceInstallments_v2(final Money loanInterest, Money loanAmount, Integer numberOfInstallments, Integer gracePeriodDuration)", "class_method_signature": "FlatLoanPrincipalWithInterestGenerator.generateFlatInstallmentsAfterInterestOnlyGraceInstallments_v2(final Money loanInterest, Money loanAmount, Integer numberOfInstallments, Integer gracePeriodDuration)", "testcase": false, "constructor": false}, {"identifier": "generateFlatInstallmentsInterestOnly_v2", "parameters": "(final Money loanInterest, Integer numberOfInstallments, Integer gracePeriodDuration)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> generateFlatInstallmentsInterestOnly_v2(final Money loanInterest, Integer numberOfInstallments, Integer gracePeriodDuration)", "full_signature": "private List<InstallmentPrincipalAndInterest> generateFlatInstallmentsInterestOnly_v2(final Money loanInterest, Integer numberOfInstallments, Integer gracePeriodDuration)", "class_method_signature": "FlatLoanPrincipalWithInterestGenerator.generateFlatInstallmentsInterestOnly_v2(final Money loanInterest, Integer numberOfInstallments, Integer gracePeriodDuration)", "testcase": false, "constructor": false}, {"identifier": "generateFlatInstallmentsNoGrace_v2", "parameters": "(Money principalPerInstallment, Money interestPerInstallment, Integer numberOfInstallments)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> generateFlatInstallmentsNoGrace_v2(Money principalPerInstallment, Money interestPerInstallment, Integer numberOfInstallments)", "full_signature": "private List<InstallmentPrincipalAndInterest> generateFlatInstallmentsNoGrace_v2(Money principalPerInstallment, Money interestPerInstallment, Integer numberOfInstallments)", "class_method_signature": "FlatLoanPrincipalWithInterestGenerator.generateFlatInstallmentsNoGrace_v2(Money principalPerInstallment, Money interestPerInstallment, Integer numberOfInstallments)", "testcase": false, "constructor": false}], "file": "appdomain/src/main/java/org/mifos/clientportfolio/newloan/domain/FlatLoanPrincipalWithInterestGenerator.java"}, "focal_method": {"identifier": "generateEqualInstallments", "parameters": "(LoanInterestCalculationDetails loanInterestCalculationDetails)", "modifiers": "@Override public", "return": "List<InstallmentPrincipalAndInterest>", "body": "@Override\n    public List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails) {\n\n        GraceType graceType = loanInterestCalculationDetails.getGraceType();\n        Integer gracePeriodDuration = loanInterestCalculationDetails.getGracePeriodDuration();\n        Money loanAmount = loanInterestCalculationDetails.getLoanAmount();\n        Integer numberOfInstallments = loanInterestCalculationDetails.getNumberOfInstallments();\n\n        return allFlatInstallments_v2(loanInterest, graceType, loanAmount, numberOfInstallments, gracePeriodDuration);\n    }", "signature": "List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "full_signature": "@Override public List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "class_method_signature": "FlatLoanPrincipalWithInterestGenerator.generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "testcase": false, "constructor": false, "invocations": ["getGraceType", "getGracePeriodDuration", "getLoanAmount", "getNumberOfInstallments", "allFlatInstallments_v2"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}