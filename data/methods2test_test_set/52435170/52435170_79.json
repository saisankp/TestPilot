{"test_class": {"identifier": "DbUnitConfigurationLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder tmp = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "tmp = new TemporaryFolder()", "var_name": "tmp"}, {"original_string": "private File existingConfigFile;", "modifier": "private", "type": "File", "declarator": "existingConfigFile", "var_name": "existingConfigFile"}, {"original_string": "private File notExistingConfigFile;", "modifier": "private", "type": "File", "declarator": "notExistingConfigFile", "var_name": "notExistingConfigFile"}, {"original_string": "private Properties expectedConfig;", "modifier": "private", "type": "Properties", "declarator": "expectedConfig", "var_name": "expectedConfig"}], "file": "rdbms/src/test/java/eu/drus/jpa/unit/sql/dbunit/DbUnitConfigurationLoaderTest.java"}, "test_case": {"identifier": "testLoadingConfigurationGivenANotExistingFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadingConfigurationGivenANotExistingFile() throws MalformedURLException {\n        // GIVEN\n        final URL url = notExistingConfigFile.toURI().toURL();\n\n        // WHEN\n        final Properties configuration = DbUnitConfigurationLoader.loadConfiguration(url);\n\n        // THEN\n        assertTrue(configuration.keySet().isEmpty());\n    }", "signature": "void testLoadingConfigurationGivenANotExistingFile()", "full_signature": "@Test public void testLoadingConfigurationGivenANotExistingFile()", "class_method_signature": "DbUnitConfigurationLoaderTest.testLoadingConfigurationGivenANotExistingFile()", "testcase": true, "constructor": false, "invocations": ["toURL", "toURI", "loadConfiguration", "assertTrue", "isEmpty", "keySet"]}, "focal_class": {"identifier": "DbUnitConfigurationLoader", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "DbUnitConfigurationLoader", "parameters": "()", "modifiers": "private", "return": "", "signature": " DbUnitConfigurationLoader()", "full_signature": "private  DbUnitConfigurationLoader()", "class_method_signature": "DbUnitConfigurationLoader.DbUnitConfigurationLoader()", "testcase": false, "constructor": true}, {"identifier": "loadConfiguration", "parameters": "(final URL resourceUrl)", "modifiers": "public static", "return": "Properties", "signature": "Properties loadConfiguration(final URL resourceUrl)", "full_signature": "public static Properties loadConfiguration(final URL resourceUrl)", "class_method_signature": "DbUnitConfigurationLoader.loadConfiguration(final URL resourceUrl)", "testcase": false, "constructor": false}], "file": "rdbms/src/main/java/eu/drus/jpa/unit/sql/dbunit/DbUnitConfigurationLoader.java"}, "focal_method": {"identifier": "loadConfiguration", "parameters": "(final URL resourceUrl)", "modifiers": "public static", "return": "Properties", "body": "public static Properties loadConfiguration(final URL resourceUrl) {\n        final Properties properties = new Properties();\n\n        try {\n            if(resourceUrl != null) {\n                properties.load(resourceUrl.openStream());\n            }\n        } catch(final Exception e) {\n            // ignore\n        }\n\n        return properties;\n    }", "signature": "Properties loadConfiguration(final URL resourceUrl)", "full_signature": "public static Properties loadConfiguration(final URL resourceUrl)", "class_method_signature": "DbUnitConfigurationLoader.loadConfiguration(final URL resourceUrl)", "testcase": false, "constructor": false, "invocations": ["load", "openStream"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}