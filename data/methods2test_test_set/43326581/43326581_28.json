{"test_class": {"identifier": "FossologyFileHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final String clearingTeam = \"clearingId\";", "modifier": "final", "type": "String", "declarator": "clearingTeam = \"clearingId\"", "var_name": "clearingTeam"}, {"original_string": "final String releaseId = \"id\";", "modifier": "final", "type": "String", "declarator": "releaseId = \"id\"", "var_name": "releaseId"}, {"original_string": "FossologyFileHandler fossologyFileHandler;", "modifier": "", "type": "FossologyFileHandler", "declarator": "fossologyFileHandler", "var_name": "fossologyFileHandler"}, {"original_string": "@Mock\n    private AttachmentConnector attachmentConnector;", "modifier": "@Mock\n    private", "type": "AttachmentConnector", "declarator": "attachmentConnector", "var_name": "attachmentConnector"}, {"original_string": "@Mock\n    private DatabaseConnector databaseConnector;", "modifier": "@Mock\n    private", "type": "DatabaseConnector", "declarator": "databaseConnector", "var_name": "databaseConnector"}, {"original_string": "@Mock\n    private FossologyUploader fossologyUploader;", "modifier": "@Mock\n    private", "type": "FossologyUploader", "declarator": "fossologyUploader", "var_name": "fossologyUploader"}, {"original_string": "@Mock\n    private ComponentService.Iface componentService;", "modifier": "@Mock\n    private", "type": "ComponentService.Iface", "declarator": "componentService", "var_name": "componentService"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}], "file": "backend/src/src-fossology/src/test/java/org/eclipse/sw360/fossology/handler/FossologyFileHandlerTest.java"}, "test_case": {"identifier": "testAFailedSendToFossology", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAFailedSendToFossology() throws Exception {\n        final String id = \"41\";\n        final FilledAttachment filledAttachment = getMockFilledAttachment(id);\n        final AttachmentContent attachmentContent = filledAttachment.getAttachmentContent();\n\n        final Release release = mock(Release.class);\n        when(componentService.getReleaseById(releaseId, user)).thenReturn(release);\n\n        spyGetFilledSourceAttachment(filledAttachment);\n\n        final InputStream inputStream = mock(InputStream.class);\n        when(release.isSetFossologyId()).thenReturn(false);\n        when(attachmentConnector.getAttachmentStream(attachmentContent, user, release)).thenReturn(inputStream);\n        when(fossologyUploader.uploadToFossology(inputStream, attachmentContent, clearingTeam)).thenReturn(-1);\n\n        assertThat(fossologyFileHandler.sendToFossology(releaseId, user, clearingTeam), is(RequestStatus.FAILURE));\n\n        verify(inputStream).close();\n\n        // unimportant verifies\n        verify(componentService, atLeastOnce()).getReleaseById(releaseId, user);\n        verify(attachmentConnector).getAttachmentStream(attachmentContent, user, release);\n        verify(fossologyUploader).uploadToFossology(inputStream, attachmentContent, clearingTeam);\n    }", "signature": "void testAFailedSendToFossology()", "full_signature": "@Test public void testAFailedSendToFossology()", "class_method_signature": "FossologyFileHandlerTest.testAFailedSendToFossology()", "testcase": true, "constructor": false, "invocations": ["getMockFilledAttachment", "getAttachmentContent", "mock", "thenReturn", "when", "getReleaseById", "spyGetFilledSourceAttachment", "mock", "thenReturn", "when", "isSetFossologyId", "thenReturn", "when", "getAttachmentStream", "thenReturn", "when", "uploadToFossology", "assertThat", "sendToFossology", "is", "close", "verify", "getReleaseById", "verify", "atLeastOnce", "getAttachmentStream", "verify", "uploadToFossology", "verify"]}, "focal_class": {"identifier": "FossologyFileHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Logger log = getLogger(FossologyFileHandler.class);", "modifier": "private final static", "type": "Logger", "declarator": "log = getLogger(FossologyFileHandler.class)", "var_name": "log"}, {"original_string": "private final AttachmentConnector attachmentConnector;", "modifier": "private final", "type": "AttachmentConnector", "declarator": "attachmentConnector", "var_name": "attachmentConnector"}, {"original_string": "private final FossologyUploader fossologyUploader;", "modifier": "private final", "type": "FossologyUploader", "declarator": "fossologyUploader", "var_name": "fossologyUploader"}, {"original_string": "private final ThriftClients thriftClients;", "modifier": "private final", "type": "ThriftClients", "declarator": "thriftClients", "var_name": "thriftClients"}], "methods": [{"identifier": "FossologyFileHandler", "parameters": "(AttachmentConnector attachmentConnector, FossologyUploader fossologyUploader, ThriftClients thriftClients)", "modifiers": "@Autowired public", "return": "", "signature": " FossologyFileHandler(AttachmentConnector attachmentConnector, FossologyUploader fossologyUploader, ThriftClients thriftClients)", "full_signature": "@Autowired public  FossologyFileHandler(AttachmentConnector attachmentConnector, FossologyUploader fossologyUploader, ThriftClients thriftClients)", "class_method_signature": "FossologyFileHandler.FossologyFileHandler(AttachmentConnector attachmentConnector, FossologyUploader fossologyUploader, ThriftClients thriftClients)", "testcase": false, "constructor": true}, {"identifier": "sendToFossology", "parameters": "(String releaseId, User user, String clearingTeam)", "modifiers": "public", "return": "RequestStatus", "signature": "RequestStatus sendToFossology(String releaseId, User user, String clearingTeam)", "full_signature": "public RequestStatus sendToFossology(String releaseId, User user, String clearingTeam)", "class_method_signature": "FossologyFileHandler.sendToFossology(String releaseId, User user, String clearingTeam)", "testcase": false, "constructor": false}, {"identifier": "checkSourceAttachment", "parameters": "(Release release, FilledAttachment filledAttachment)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkSourceAttachment(Release release, FilledAttachment filledAttachment)", "full_signature": "protected boolean checkSourceAttachment(Release release, FilledAttachment filledAttachment)", "class_method_signature": "FossologyFileHandler.checkSourceAttachment(Release release, FilledAttachment filledAttachment)", "testcase": false, "constructor": false}, {"identifier": "sendToFossologyNewUpload", "parameters": "(Release release, User user, String clearingTeam, AttachmentContent attachmentContent, ComponentService.Iface componentService)", "modifiers": "private", "return": "RequestStatus", "signature": "RequestStatus sendToFossologyNewUpload(Release release, User user, String clearingTeam, AttachmentContent attachmentContent, ComponentService.Iface componentService)", "full_signature": "private RequestStatus sendToFossologyNewUpload(Release release, User user, String clearingTeam, AttachmentContent attachmentContent, ComponentService.Iface componentService)", "class_method_signature": "FossologyFileHandler.sendToFossologyNewUpload(Release release, User user, String clearingTeam, AttachmentContent attachmentContent, ComponentService.Iface componentService)", "testcase": false, "constructor": false}, {"identifier": "sendToFossologyExistingUpload", "parameters": "(Release release, User user, String clearingTeam, ComponentService.Iface componentClient)", "modifiers": "private", "return": "RequestStatus", "signature": "RequestStatus sendToFossologyExistingUpload(Release release, User user, String clearingTeam, ComponentService.Iface componentClient)", "full_signature": "private RequestStatus sendToFossologyExistingUpload(Release release, User user, String clearingTeam, ComponentService.Iface componentClient)", "class_method_signature": "FossologyFileHandler.sendToFossologyExistingUpload(Release release, User user, String clearingTeam, ComponentService.Iface componentClient)", "testcase": false, "constructor": false}, {"identifier": "duplicateUploadFor", "parameters": "(Release release, User user, String clearingTeam, int fossologyUploadId, ComponentService.Iface componentClient)", "modifiers": "private", "return": "RequestStatus", "signature": "RequestStatus duplicateUploadFor(Release release, User user, String clearingTeam, int fossologyUploadId, ComponentService.Iface componentClient)", "full_signature": "private RequestStatus duplicateUploadFor(Release release, User user, String clearingTeam, int fossologyUploadId, ComponentService.Iface componentClient)", "class_method_signature": "FossologyFileHandler.duplicateUploadFor(Release release, User user, String clearingTeam, int fossologyUploadId, ComponentService.Iface componentClient)", "testcase": false, "constructor": false}, {"identifier": "updateFossologyStatus", "parameters": "(Release release, User user, String clearingTeam, FossologyStatus currentStatus, ComponentService.Iface componentService)", "modifiers": "private", "return": "void", "signature": "void updateFossologyStatus(Release release, User user, String clearingTeam, FossologyStatus currentStatus, ComponentService.Iface componentService)", "full_signature": "private void updateFossologyStatus(Release release, User user, String clearingTeam, FossologyStatus currentStatus, ComponentService.Iface componentService)", "class_method_signature": "FossologyFileHandler.updateFossologyStatus(Release release, User user, String clearingTeam, FossologyStatus currentStatus, ComponentService.Iface componentService)", "testcase": false, "constructor": false}, {"identifier": "isVisible", "parameters": "(FossologyStatus statusInFossology)", "modifiers": "protected static", "return": "boolean", "signature": "boolean isVisible(FossologyStatus statusInFossology)", "full_signature": "protected static boolean isVisible(FossologyStatus statusInFossology)", "class_method_signature": "FossologyFileHandler.isVisible(FossologyStatus statusInFossology)", "testcase": false, "constructor": false}, {"identifier": "isError", "parameters": "(FossologyStatus status)", "modifiers": "protected static", "return": "boolean", "signature": "boolean isError(FossologyStatus status)", "full_signature": "protected static boolean isError(FossologyStatus status)", "class_method_signature": "FossologyFileHandler.isError(FossologyStatus status)", "testcase": false, "constructor": false}, {"identifier": "getStatusInFossology", "parameters": "(String releaseId, User user, String clearingTeam)", "modifiers": "public", "return": "Release", "signature": "Release getStatusInFossology(String releaseId, User user, String clearingTeam)", "full_signature": "public Release getStatusInFossology(String releaseId, User user, String clearingTeam)", "class_method_signature": "FossologyFileHandler.getStatusInFossology(String releaseId, User user, String clearingTeam)", "testcase": false, "constructor": false}, {"identifier": "updateReleaseClearingState", "parameters": "(Release release, FossologyStatus fossologyStatus)", "modifiers": "private", "return": "void", "signature": "void updateReleaseClearingState(Release release, FossologyStatus fossologyStatus)", "full_signature": "private void updateReleaseClearingState(Release release, FossologyStatus fossologyStatus)", "class_method_signature": "FossologyFileHandler.updateReleaseClearingState(Release release, FossologyStatus fossologyStatus)", "testcase": false, "constructor": false}, {"identifier": "updateReleaseClearingState", "parameters": "(Release release, Optional<FossologyStatus> fossologyStatus)", "modifiers": "private", "return": "void", "signature": "void updateReleaseClearingState(Release release, Optional<FossologyStatus> fossologyStatus)", "full_signature": "private void updateReleaseClearingState(Release release, Optional<FossologyStatus> fossologyStatus)", "class_method_signature": "FossologyFileHandler.updateReleaseClearingState(Release release, Optional<FossologyStatus> fossologyStatus)", "testcase": false, "constructor": false}, {"identifier": "mapFossologyStatusToClearingState", "parameters": "(FossologyStatus fossologyStatus)", "modifiers": "private", "return": "Optional<ClearingState>", "signature": "Optional<ClearingState> mapFossologyStatusToClearingState(FossologyStatus fossologyStatus)", "full_signature": "private Optional<ClearingState> mapFossologyStatusToClearingState(FossologyStatus fossologyStatus)", "class_method_signature": "FossologyFileHandler.mapFossologyStatusToClearingState(FossologyStatus fossologyStatus)", "testcase": false, "constructor": false}, {"identifier": "getReleaseAndUnlockIt", "parameters": "(String releaseId, User user, ComponentService.Iface componentClient)", "modifiers": "protected", "return": "Release", "signature": "Release getReleaseAndUnlockIt(String releaseId, User user, ComponentService.Iface componentClient)", "full_signature": "protected Release getReleaseAndUnlockIt(String releaseId, User user, ComponentService.Iface componentClient)", "class_method_signature": "FossologyFileHandler.getReleaseAndUnlockIt(String releaseId, User user, ComponentService.Iface componentClient)", "testcase": false, "constructor": false}, {"identifier": "getAllClearingTeams", "parameters": "(Release release, String clearingTeam)", "modifiers": "protected", "return": "Iterable<? extends String>", "signature": "Iterable<? extends String> getAllClearingTeams(Release release, String clearingTeam)", "full_signature": "protected Iterable<? extends String> getAllClearingTeams(Release release, String clearingTeam)", "class_method_signature": "FossologyFileHandler.getAllClearingTeams(Release release, String clearingTeam)", "testcase": false, "constructor": false}, {"identifier": "setFossologyStatus", "parameters": "(Release release, final String clearingTeam, FossologyStatus status)", "modifiers": "protected", "return": "void", "signature": "void setFossologyStatus(Release release, final String clearingTeam, FossologyStatus status)", "full_signature": "protected void setFossologyStatus(Release release, final String clearingTeam, FossologyStatus status)", "class_method_signature": "FossologyFileHandler.setFossologyStatus(Release release, final String clearingTeam, FossologyStatus status)", "testcase": false, "constructor": false}, {"identifier": "setFossologyStatus", "parameters": "(Release release, final String clearingTeam, FossologyStatus status, String fossologyUploadId, String attachmentId)", "modifiers": "protected", "return": "void", "signature": "void setFossologyStatus(Release release, final String clearingTeam, FossologyStatus status, String fossologyUploadId, String attachmentId)", "full_signature": "protected void setFossologyStatus(Release release, final String clearingTeam, FossologyStatus status, String fossologyUploadId, String attachmentId)", "class_method_signature": "FossologyFileHandler.setFossologyStatus(Release release, final String clearingTeam, FossologyStatus status, String fossologyUploadId, String attachmentId)", "testcase": false, "constructor": false}, {"identifier": "updateRelease", "parameters": "(Release release, User user, ComponentService.Iface componentService)", "modifiers": "protected", "return": "RequestStatus", "signature": "RequestStatus updateRelease(Release release, User user, ComponentService.Iface componentService)", "full_signature": "protected RequestStatus updateRelease(Release release, User user, ComponentService.Iface componentService)", "class_method_signature": "FossologyFileHandler.updateRelease(Release release, User user, ComponentService.Iface componentService)", "testcase": false, "constructor": false}, {"identifier": "getSourceAttachment", "parameters": "(String releaseId, User user, ComponentService.Iface componentClient)", "modifiers": "protected", "return": "Set<Attachment>", "signature": "Set<Attachment> getSourceAttachment(String releaseId, User user, ComponentService.Iface componentClient)", "full_signature": "protected Set<Attachment> getSourceAttachment(String releaseId, User user, ComponentService.Iface componentClient)", "class_method_signature": "FossologyFileHandler.getSourceAttachment(String releaseId, User user, ComponentService.Iface componentClient)", "testcase": false, "constructor": false}, {"identifier": "fillAttachment", "parameters": "(Attachment attachment)", "modifiers": "protected", "return": "FilledAttachment", "signature": "FilledAttachment fillAttachment(Attachment attachment)", "full_signature": "protected FilledAttachment fillAttachment(Attachment attachment)", "class_method_signature": "FossologyFileHandler.fillAttachment(Attachment attachment)", "testcase": false, "constructor": false}], "file": "backend/src/src-fossology/src/main/java/org/eclipse/sw360/fossology/handler/FossologyFileHandler.java"}, "focal_method": {"identifier": "sendToFossology", "parameters": "(String releaseId, User user, String clearingTeam)", "modifiers": "public", "return": "RequestStatus", "body": "public RequestStatus sendToFossology(String releaseId, User user, String clearingTeam) throws TException {\n        Release release;\n        final ComponentService.Iface componentClient = thriftClients.makeComponentClient();\n\n        release = getReleaseAndUnlockIt(releaseId, user, componentClient);\n\n        Set<Attachment> sourceAttachments = getSourceAttachment(releaseId, user, componentClient);\n\n        if (sourceAttachments.size() != 1) {\n            log.error(\"release \" + releaseId + \" does not have a single source attachment\");\n            return RequestStatus.FAILURE; //TODO return a summary and better fitting status\n        }\n\n        final Attachment attachment = getFirst(sourceAttachments);\n        final FilledAttachment filledAttachment = fillAttachment(attachment);\n\n        if (!release.isSetFossologyId()) {\n            /* send the attachment as a new upload */\n            AttachmentContent attachmentContent = filledAttachment.getAttachmentContent();\n            return sendToFossologyNewUpload(release, user, clearingTeam, attachmentContent, componentClient);\n        } else {\n            if (!checkSourceAttachment(release, filledAttachment)) {\n                return RequestStatus.FAILURE; // TODO summary\n            } else {\n                /* duplicate the old upload making it visible for clearingTeam */\n                return sendToFossologyExistingUpload(release, user, clearingTeam, componentClient);\n            }\n        }\n    }", "signature": "RequestStatus sendToFossology(String releaseId, User user, String clearingTeam)", "full_signature": "public RequestStatus sendToFossology(String releaseId, User user, String clearingTeam)", "class_method_signature": "FossologyFileHandler.sendToFossology(String releaseId, User user, String clearingTeam)", "testcase": false, "constructor": false, "invocations": ["makeComponentClient", "getReleaseAndUnlockIt", "getSourceAttachment", "size", "error", "getFirst", "fillAttachment", "isSetFossologyId", "getAttachmentContent", "sendToFossologyNewUpload", "checkSourceAttachment", "sendToFossologyExistingUpload"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}