{"test_class": {"identifier": "DashboardControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MockMvc mockMvc;", "modifier": "private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "@Mock\n    private DashboardService dashboardService;", "modifier": "@Mock\n    private", "type": "DashboardService", "declarator": "dashboardService", "var_name": "dashboardService"}, {"original_string": "@Mock\n    protected IdentifiableObjectManager manager;", "modifier": "@Mock\n    protected", "type": "IdentifiableObjectManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "@Mock\n    protected CurrentUserService currentUserService;", "modifier": "@Mock\n    protected", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}, {"original_string": "@Mock\n    protected FieldFilterService fieldFilterService;", "modifier": "@Mock\n    protected", "type": "FieldFilterService", "declarator": "fieldFilterService", "var_name": "fieldFilterService"}, {"original_string": "@Mock\n    protected AclService aclService;", "modifier": "@Mock\n    protected", "type": "AclService", "declarator": "aclService", "var_name": "aclService"}, {"original_string": "@Mock\n    protected SchemaService schemaService;", "modifier": "@Mock\n    protected", "type": "SchemaService", "declarator": "schemaService", "var_name": "schemaService"}, {"original_string": "@Mock\n    protected LinkService linkService;", "modifier": "@Mock\n    protected", "type": "LinkService", "declarator": "linkService", "var_name": "linkService"}, {"original_string": "@Mock\n    protected RenderService renderService;", "modifier": "@Mock\n    protected", "type": "RenderService", "declarator": "renderService", "var_name": "renderService"}, {"original_string": "@Mock\n    protected MetadataImportService importService;", "modifier": "@Mock\n    protected", "type": "MetadataImportService", "declarator": "importService", "var_name": "importService"}, {"original_string": "@Mock\n    protected MetadataExportService exportService;", "modifier": "@Mock\n    protected", "type": "MetadataExportService", "declarator": "exportService", "var_name": "exportService"}, {"original_string": "@Mock\n    protected ContextService contextService;", "modifier": "@Mock\n    protected", "type": "ContextService", "declarator": "contextService", "var_name": "contextService"}, {"original_string": "@Mock\n    protected QueryService queryService;", "modifier": "@Mock\n    protected", "type": "QueryService", "declarator": "queryService", "var_name": "queryService"}, {"original_string": "@Mock\n    protected WebMessageService webMessageService;", "modifier": "@Mock\n    protected", "type": "WebMessageService", "declarator": "webMessageService", "var_name": "webMessageService"}, {"original_string": "@Mock\n    protected HibernateCacheManager hibernateCacheManager;", "modifier": "@Mock\n    protected", "type": "HibernateCacheManager", "declarator": "hibernateCacheManager", "var_name": "hibernateCacheManager"}, {"original_string": "@Mock\n    protected UserSettingService userSettingService;", "modifier": "@Mock\n    protected", "type": "UserSettingService", "declarator": "userSettingService", "var_name": "userSettingService"}, {"original_string": "@Mock\n    protected CollectionService collectionService;", "modifier": "@Mock\n    protected", "type": "CollectionService", "declarator": "collectionService", "var_name": "collectionService"}, {"original_string": "@Mock\n    protected MergeService mergeService;", "modifier": "@Mock\n    protected", "type": "MergeService", "declarator": "mergeService", "var_name": "mergeService"}, {"original_string": "@Mock\n    protected PatchService patchService;", "modifier": "@Mock\n    protected", "type": "PatchService", "declarator": "patchService", "var_name": "patchService"}, {"original_string": "@InjectMocks\n    private DashboardController dashboardController;", "modifier": "@InjectMocks\n    private", "type": "DashboardController", "declarator": "dashboardController", "var_name": "dashboardController"}, {"original_string": "private final static String ENDPOINT = \"/dashboards/q\";", "modifier": "private final static", "type": "String", "declarator": "ENDPOINT = \"/dashboards/q\"", "var_name": "ENDPOINT"}], "file": "dhis-2/dhis-web/dhis-web-api/src/test/java/org/hisp/dhis/webapi/controller/DashboardControllerTest.java"}, "test_case": {"identifier": "verifyEndpointWithSearchQueryWithNoArgs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyEndpointWithSearchQueryWithNoArgs()\n            throws Exception\n    {\n        mockMvc.perform( get( ENDPOINT + \"/alfa\" ) ).andExpect( status().isOk() );\n\n        verify( dashboardService ).search( \"alfa\" , null, null, null );\n    }", "signature": "void verifyEndpointWithSearchQueryWithNoArgs()", "full_signature": "@Test public void verifyEndpointWithSearchQueryWithNoArgs()", "class_method_signature": "DashboardControllerTest.verifyEndpointWithSearchQueryWithNoArgs()", "testcase": true, "constructor": false, "invocations": ["andExpect", "perform", "get", "isOk", "status", "search", "verify"]}, "focal_class": {"identifier": "DashboardController", "superclass": "extends AbstractCrudController<Dashboard>", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private DashboardService dashboardService;", "modifier": "@Autowired\n    private", "type": "DashboardService", "declarator": "dashboardService", "var_name": "dashboardService"}], "methods": [{"identifier": "search", "parameters": "( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "modifiers": "@RequestMapping( value = \"/q/{query}\", method = RequestMethod.GET ) public @ResponseBody", "return": "DashboardSearchResult", "signature": "DashboardSearchResult search( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "full_signature": "@RequestMapping( value = \"/q/{query}\", method = RequestMethod.GET ) public @ResponseBody DashboardSearchResult search( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "class_method_signature": "DashboardController.search( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "testcase": false, "constructor": false}, {"identifier": "searchNoFilter", "parameters": "(\n        @RequestParam( required = false ) Set<DashboardItemType> max, @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "modifiers": "@RequestMapping( value = \"/q\", method = RequestMethod.GET ) public @ResponseBody", "return": "DashboardSearchResult", "signature": "DashboardSearchResult searchNoFilter(\n        @RequestParam( required = false ) Set<DashboardItemType> max, @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "full_signature": "@RequestMapping( value = \"/q\", method = RequestMethod.GET ) public @ResponseBody DashboardSearchResult searchNoFilter(\n        @RequestParam( required = false ) Set<DashboardItemType> max, @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "class_method_signature": "DashboardController.searchNoFilter(\n        @RequestParam( required = false ) Set<DashboardItemType> max, @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "testcase": false, "constructor": false}, {"identifier": "getDataSetWithDependencies", "parameters": "( @PathVariable( \"uid\" ) String dashboardId, @RequestParam( required = false, defaultValue = \"false\" ) boolean download )", "modifiers": "@RequestMapping( value = \"/{uid}/metadata\", method = RequestMethod.GET ) public", "return": "ResponseEntity<RootNode>", "signature": "ResponseEntity<RootNode> getDataSetWithDependencies( @PathVariable( \"uid\" ) String dashboardId, @RequestParam( required = false, defaultValue = \"false\" ) boolean download )", "full_signature": "@RequestMapping( value = \"/{uid}/metadata\", method = RequestMethod.GET ) public ResponseEntity<RootNode> getDataSetWithDependencies( @PathVariable( \"uid\" ) String dashboardId, @RequestParam( required = false, defaultValue = \"false\" ) boolean download )", "class_method_signature": "DashboardController.getDataSetWithDependencies( @PathVariable( \"uid\" ) String dashboardId, @RequestParam( required = false, defaultValue = \"false\" ) boolean download )", "testcase": false, "constructor": false}, {"identifier": "postProcessResponseEntities", "parameters": "(final List<Dashboard> dashboards, final WebOptions options,\n                                               final java.util.Map<String, String> parameters )", "modifiers": "@Override @Deprecated protected", "return": "void", "signature": "void postProcessResponseEntities(final List<Dashboard> dashboards, final WebOptions options,\n                                               final java.util.Map<String, String> parameters )", "full_signature": "@Override @Deprecated protected void postProcessResponseEntities(final List<Dashboard> dashboards, final WebOptions options,\n                                               final java.util.Map<String, String> parameters )", "class_method_signature": "DashboardController.postProcessResponseEntities(final List<Dashboard> dashboards, final WebOptions options,\n                                               final java.util.Map<String, String> parameters )", "testcase": false, "constructor": false}, {"identifier": "postProcessResponseEntity", "parameters": "( final Dashboard dashboard, final WebOptions options,\n        final Map<String, String> parameters )", "modifiers": "@Override @Deprecated protected", "return": "void", "signature": "void postProcessResponseEntity( final Dashboard dashboard, final WebOptions options,\n        final Map<String, String> parameters )", "full_signature": "@Override @Deprecated protected void postProcessResponseEntity( final Dashboard dashboard, final WebOptions options,\n        final Map<String, String> parameters )", "class_method_signature": "DashboardController.postProcessResponseEntity( final Dashboard dashboard, final WebOptions options,\n        final Map<String, String> parameters )", "testcase": false, "constructor": false}, {"identifier": "convertToChart", "parameters": "( final Visualization visualization )", "modifiers": "private", "return": "Chart", "signature": "Chart convertToChart( final Visualization visualization )", "full_signature": "private Chart convertToChart( final Visualization visualization )", "class_method_signature": "DashboardController.convertToChart( final Visualization visualization )", "testcase": false, "constructor": false}, {"identifier": "convertToReportTable", "parameters": "( final Visualization visualization )", "modifiers": "private", "return": "ReportTable", "signature": "ReportTable convertToReportTable( final Visualization visualization )", "full_signature": "private ReportTable convertToReportTable( final Visualization visualization )", "class_method_signature": "DashboardController.convertToReportTable( final Visualization visualization )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/DashboardController.java"}, "focal_method": {"identifier": "search", "parameters": "( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "modifiers": "@RequestMapping( value = \"/q/{query}\", method = RequestMethod.GET ) public @ResponseBody", "return": "DashboardSearchResult", "body": "@RequestMapping( value = \"/q/{query}\", method = RequestMethod.GET )\n    public @ResponseBody DashboardSearchResult search( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )\n    {\n        return dashboardService.search( query, max, count, maxCount );\n    }", "signature": "DashboardSearchResult search( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "full_signature": "@RequestMapping( value = \"/q/{query}\", method = RequestMethod.GET ) public @ResponseBody DashboardSearchResult search( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "class_method_signature": "DashboardController.search( @PathVariable String query,\n        @RequestParam( required = false ) Set<DashboardItemType> max,\n        @RequestParam( required = false ) Integer count,\n        @RequestParam( required = false ) Integer maxCount )", "testcase": false, "constructor": false, "invocations": ["search"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}