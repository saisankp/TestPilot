{"test_class": {"identifier": "NoOpLockedResourceRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private NoOpLockedResourceRepository noOpLockedResourceRepository;", "modifier": "@InjectMocks\n    private", "type": "NoOpLockedResourceRepository", "declarator": "noOpLockedResourceRepository", "var_name": "noOpLockedResourceRepository"}, {"original_string": "@Mock\n    private PreparationRepository preparationRepository;", "modifier": "@Mock\n    private", "type": "PreparationRepository", "declarator": "preparationRepository", "var_name": "preparationRepository"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/lock/store/NoOpLockedResourceRepositoryTest.java"}, "test_case": {"identifier": "tryLock_nullPrepThenException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryLock_nullPrepThenException() {\n        // given\n        String preparationId = \"preparation id\";\n        when(preparationRepository.get(preparationId, Preparation.class)).thenReturn(null);\n\n        // when\n        try {\n            noOpLockedResourceRepository.tryLock(preparationId, \"toto\", \"Toto de Charleville-M\u00e9zi\u00e8res\");\n            fail();\n        } catch (TDPException e) {\n\n            // then\n            assertEquals(e.getCode(), PREPARATION_DOES_NOT_EXIST);\n        }\n        verify(preparationRepository).get(preparationId, PersistentPreparation.class);\n    }", "signature": "void tryLock_nullPrepThenException()", "full_signature": "@Test public void tryLock_nullPrepThenException()", "class_method_signature": "NoOpLockedResourceRepositoryTest.tryLock_nullPrepThenException()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "get", "tryLock", "fail", "assertEquals", "getCode", "get", "verify"]}, "focal_class": {"identifier": "NoOpLockedResourceRepository", "superclass": "", "interfaces": "implements LockedResourceRepository", "fields": [{"original_string": "private static final Logger LOGGER = getLogger(NoOpLockedResourceRepository.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = getLogger(NoOpLockedResourceRepository.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private PreparationRepository preparationRepository;", "modifier": "@Autowired\n    private", "type": "PreparationRepository", "declarator": "preparationRepository", "var_name": "preparationRepository"}], "methods": [{"identifier": "NoOpLockedResourceRepository", "parameters": "()", "modifiers": "public", "return": "", "signature": " NoOpLockedResourceRepository()", "full_signature": "public  NoOpLockedResourceRepository()", "class_method_signature": "NoOpLockedResourceRepository.NoOpLockedResourceRepository()", "testcase": false, "constructor": true}, {"identifier": "tryLock", "parameters": "(String preparationId, String userId, String displayName)", "modifiers": "@Override public", "return": "PersistentPreparation", "signature": "PersistentPreparation tryLock(String preparationId, String userId, String displayName)", "full_signature": "@Override public PersistentPreparation tryLock(String preparationId, String userId, String displayName)", "class_method_signature": "NoOpLockedResourceRepository.tryLock(String preparationId, String userId, String displayName)", "testcase": false, "constructor": false}, {"identifier": "unlock", "parameters": "(String preparationId, String userId)", "modifiers": "@Override public", "return": "void", "signature": "void unlock(String preparationId, String userId)", "full_signature": "@Override public void unlock(String preparationId, String userId)", "class_method_signature": "NoOpLockedResourceRepository.unlock(String preparationId, String userId)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/lock/store/NoOpLockedResourceRepository.java"}, "focal_method": {"identifier": "tryLock", "parameters": "(String preparationId, String userId, String displayName)", "modifiers": "@Override public", "return": "PersistentPreparation", "body": "@Override\n    public PersistentPreparation tryLock(String preparationId, String userId, String displayName) {\n        PersistentPreparation preparation = preparationRepository.get(preparationId, PersistentPreparation.class);\n        if (preparation == null) {\n            throw new TDPException(PREPARATION_DOES_NOT_EXIST, build().put(\"id\", preparationId));\n        }\n        return preparation;\n    }", "signature": "PersistentPreparation tryLock(String preparationId, String userId, String displayName)", "full_signature": "@Override public PersistentPreparation tryLock(String preparationId, String userId, String displayName)", "class_method_signature": "NoOpLockedResourceRepository.tryLock(String preparationId, String userId, String displayName)", "testcase": false, "constructor": false, "invocations": ["get", "put", "build"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}