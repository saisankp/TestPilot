{"test_class": {"identifier": "ConnectionLogUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<String, Object> DEFAULT_MDC = new HashMap<>();", "modifier": "private static final", "type": "Map<String, Object>", "declarator": "DEFAULT_MDC = new HashMap<>()", "var_name": "DEFAULT_MDC"}, {"original_string": "private static final String KNOWN_KEY_1 = \"key-1\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_KEY_1 = \"key-1\"", "var_name": "KNOWN_KEY_1"}, {"original_string": "private static final String KNOWN_KEY_2 = \"key-2\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_KEY_2 = \"key-2\"", "var_name": "KNOWN_KEY_2"}, {"original_string": "private static final String KNOWN_VALUE_1 = \"value-1\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_VALUE_1 = \"value-1\"", "var_name": "KNOWN_VALUE_1"}, {"original_string": "private static final String KNOWN_VALUE_2 = \"value-2\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_VALUE_2 = \"value-2\"", "var_name": "KNOWN_VALUE_2"}, {"original_string": "private DiagnosticLoggingAdapter log;", "modifier": "private", "type": "DiagnosticLoggingAdapter", "declarator": "log", "var_name": "log"}], "file": "services/connectivity/util/src/test/java/org/eclipse/ditto/services/connectivity/util/ConnectionLogUtilTest.java"}, "test_case": {"identifier": "enhanceLogWithConnectionId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void enhanceLogWithConnectionId() {\n        final String connectionId = \"theConnection\";\n        final Map<String, Object> expectedMap = new HashMap<>(DEFAULT_MDC);\n\n        expectedMap.put(\"connection-id\", connectionId);\n\n        ConnectionLogUtil.enhanceLogWithConnectionId(log, connectionId);\n\n        Mockito.verify(log).setMDC(expectedMap);\n    }", "signature": "void enhanceLogWithConnectionId()", "full_signature": "@Test public void enhanceLogWithConnectionId()", "class_method_signature": "ConnectionLogUtilTest.enhanceLogWithConnectionId()", "testcase": true, "constructor": false, "invocations": ["put", "enhanceLogWithConnectionId", "setMDC", "verify"]}, "focal_class": {"identifier": "ConnectionLogUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MDC_CONNECTION_ID = ConnectivityMdcEntryKey.CONNECTION_ID.toString();", "modifier": "private static final", "type": "String", "declarator": "MDC_CONNECTION_ID = ConnectivityMdcEntryKey.CONNECTION_ID.toString()", "var_name": "MDC_CONNECTION_ID"}], "methods": [{"identifier": "ConnectionLogUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ConnectionLogUtil()", "full_signature": "private  ConnectionLogUtil()", "class_method_signature": "ConnectionLogUtil.ConnectionLogUtil()", "testcase": false, "constructor": true}, {"identifier": "enhanceLogWithConnectionId", "parameters": "(final CharSequence connectionId)", "modifiers": "public static", "return": "void", "signature": "void enhanceLogWithConnectionId(final CharSequence connectionId)", "full_signature": "public static void enhanceLogWithConnectionId(final CharSequence connectionId)", "class_method_signature": "ConnectionLogUtil.enhanceLogWithConnectionId(final CharSequence connectionId)", "testcase": false, "constructor": false}, {"identifier": "enhanceLogWithCorrelationIdAndConnectionId", "parameters": "(final String correlationId,\n            final CharSequence connectionId)", "modifiers": "public static", "return": "void", "signature": "void enhanceLogWithCorrelationIdAndConnectionId(final String correlationId,\n            final CharSequence connectionId)", "full_signature": "public static void enhanceLogWithCorrelationIdAndConnectionId(final String correlationId,\n            final CharSequence connectionId)", "class_method_signature": "ConnectionLogUtil.enhanceLogWithCorrelationIdAndConnectionId(final String correlationId,\n            final CharSequence connectionId)", "testcase": false, "constructor": false}, {"identifier": "enhanceLogWithConnectionId", "parameters": "(final DiagnosticLoggingAdapter loggingAdapter,\n            final CharSequence connectionId)", "modifiers": "public static", "return": "void", "signature": "void enhanceLogWithConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final CharSequence connectionId)", "full_signature": "public static void enhanceLogWithConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final CharSequence connectionId)", "class_method_signature": "ConnectionLogUtil.enhanceLogWithConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final CharSequence connectionId)", "testcase": false, "constructor": false}, {"identifier": "removeConnectionId", "parameters": "(final DiagnosticLoggingAdapter loggingAdapter)", "modifiers": "public static", "return": "void", "signature": "void removeConnectionId(final DiagnosticLoggingAdapter loggingAdapter)", "full_signature": "public static void removeConnectionId(final DiagnosticLoggingAdapter loggingAdapter)", "class_method_signature": "ConnectionLogUtil.removeConnectionId(final DiagnosticLoggingAdapter loggingAdapter)", "testcase": false, "constructor": false}, {"identifier": "enhanceLogWithCorrelationIdAndConnectionId", "parameters": "(final DiagnosticLoggingAdapter loggingAdapter,\n            final WithDittoHeaders<?> signal,\n            final CharSequence connectionId)", "modifiers": "public static", "return": "void", "signature": "void enhanceLogWithCorrelationIdAndConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final WithDittoHeaders<?> signal,\n            final CharSequence connectionId)", "full_signature": "public static void enhanceLogWithCorrelationIdAndConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final WithDittoHeaders<?> signal,\n            final CharSequence connectionId)", "class_method_signature": "ConnectionLogUtil.enhanceLogWithCorrelationIdAndConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final WithDittoHeaders<?> signal,\n            final CharSequence connectionId)", "testcase": false, "constructor": false}, {"identifier": "enhanceLogWithCorrelationIdAndConnectionId", "parameters": "(final DiagnosticLoggingAdapter loggingAdapter,\n            final String correlationId,\n            final CharSequence connectionId)", "modifiers": "public static", "return": "void", "signature": "void enhanceLogWithCorrelationIdAndConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final String correlationId,\n            final CharSequence connectionId)", "full_signature": "public static void enhanceLogWithCorrelationIdAndConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final String correlationId,\n            final CharSequence connectionId)", "class_method_signature": "ConnectionLogUtil.enhanceLogWithCorrelationIdAndConnectionId(final DiagnosticLoggingAdapter loggingAdapter,\n            final String correlationId,\n            final CharSequence connectionId)", "testcase": false, "constructor": false}], "file": "services/connectivity/util/src/main/java/org/eclipse/ditto/services/connectivity/util/ConnectionLogUtil.java"}, "focal_method": {"identifier": "enhanceLogWithConnectionId", "parameters": "(final CharSequence connectionId)", "modifiers": "public static", "return": "void", "body": "public static void enhanceLogWithConnectionId(final CharSequence connectionId) {\n        LogUtil.enhanceLogWithCustomField(LogUtil.newMdcField(MDC_CONNECTION_ID, connectionId.toString()));\n    }", "signature": "void enhanceLogWithConnectionId(final CharSequence connectionId)", "full_signature": "public static void enhanceLogWithConnectionId(final CharSequence connectionId)", "class_method_signature": "ConnectionLogUtil.enhanceLogWithConnectionId(final CharSequence connectionId)", "testcase": false, "constructor": false, "invocations": ["enhanceLogWithCustomField", "newMdcField", "toString"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}