{"test_class": {"identifier": "CTrieSubscriptionDirectoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CTrieSubscriptionDirectory sut;", "modifier": "private", "type": "CTrieSubscriptionDirectory", "declarator": "sut", "var_name": "sut"}], "file": "broker/src/test/java/io/moquette/spi/impl/subscriptions/CTrieSubscriptionDirectoryTest.java"}, "test_case": {"identifier": "testLookup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLookup() {\n        final Subscription existingSubscription = clientSubOnTopic(\"TempSensor1\", \"/temp\");\n        sut.add(existingSubscription);\n\n        //Exercise\n        final Optional<CNode> matchedNode = sut.lookup(asTopic(\"/humidity\"));\n\n        //Verify\n        assertFalse(\"Node on path /humidity can't be present\", matchedNode.isPresent());\n    }", "signature": "void testLookup()", "full_signature": "@Test public void testLookup()", "class_method_signature": "CTrieSubscriptionDirectoryTest.testLookup()", "testcase": true, "constructor": false, "invocations": ["clientSubOnTopic", "add", "lookup", "asTopic", "assertFalse", "isPresent"]}, "focal_class": {"identifier": "CTrieSubscriptionDirectory", "superclass": "", "interfaces": "implements ISubscriptionsDirectory", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CTrieSubscriptionDirectory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CTrieSubscriptionDirectory.class)", "var_name": "LOG"}, {"original_string": "private static final Token ROOT = new Token(\"root\");", "modifier": "private static final", "type": "Token", "declarator": "ROOT = new Token(\"root\")", "var_name": "ROOT"}, {"original_string": "private static final INode NO_PARENT = null;", "modifier": "private static final", "type": "INode", "declarator": "NO_PARENT = null", "var_name": "NO_PARENT"}, {"original_string": "INode root;", "modifier": "", "type": "INode", "declarator": "root", "var_name": "root"}, {"original_string": "private volatile SessionsRepository sessionsRepository;", "modifier": "private volatile", "type": "SessionsRepository", "declarator": "sessionsRepository", "var_name": "sessionsRepository"}], "methods": [{"identifier": "init", "parameters": "(SessionsRepository sessionsRepository)", "modifiers": "public", "return": "void", "signature": "void init(SessionsRepository sessionsRepository)", "full_signature": "public void init(SessionsRepository sessionsRepository)", "class_method_signature": "CTrieSubscriptionDirectory.init(SessionsRepository sessionsRepository)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(Topic topic)", "modifiers": "", "return": "Optional<CNode>", "signature": "Optional<CNode> lookup(Topic topic)", "full_signature": " Optional<CNode> lookup(Topic topic)", "class_method_signature": "CTrieSubscriptionDirectory.lookup(Topic topic)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(Topic topic)", "modifiers": "@Override public", "return": "List<Subscription>", "signature": "List<Subscription> matches(Topic topic)", "full_signature": "@Override public List<Subscription> matches(Topic topic)", "class_method_signature": "CTrieSubscriptionDirectory.matches(Topic topic)", "testcase": false, "constructor": false}, {"identifier": "match", "parameters": "(Topic topic)", "modifiers": "", "return": "Set<Subscription>", "signature": "Set<Subscription> match(Topic topic)", "full_signature": " Set<Subscription> match(Topic topic)", "class_method_signature": "CTrieSubscriptionDirectory.match(Topic topic)", "testcase": false, "constructor": false}, {"identifier": "recursiveMatch", "parameters": "(Topic topic, INode inode)", "modifiers": "", "return": "Set<Subscription>", "signature": "Set<Subscription> recursiveMatch(Topic topic, INode inode)", "full_signature": " Set<Subscription> recursiveMatch(Topic topic, INode inode)", "class_method_signature": "CTrieSubscriptionDirectory.recursiveMatch(Topic topic, INode inode)", "testcase": false, "constructor": false}, {"identifier": "cleanTomb", "parameters": "(INode inode, INode iParent)", "modifiers": "public", "return": "Action", "signature": "Action cleanTomb(INode inode, INode iParent)", "full_signature": "public Action cleanTomb(INode inode, INode iParent)", "class_method_signature": "CTrieSubscriptionDirectory.cleanTomb(INode inode, INode iParent)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Subscription newSubscription)", "modifiers": "public", "return": "void", "signature": "void add(Subscription newSubscription)", "full_signature": "public void add(Subscription newSubscription)", "class_method_signature": "CTrieSubscriptionDirectory.add(Subscription newSubscription)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(String clientId, Topic topic, final INode inode, Topic fullpath)", "modifiers": "private", "return": "Action", "signature": "Action insert(String clientId, Topic topic, final INode inode, Topic fullpath)", "full_signature": "private Action insert(String clientId, Topic topic, final INode inode, Topic fullpath)", "class_method_signature": "CTrieSubscriptionDirectory.insert(String clientId, Topic topic, final INode inode, Topic fullpath)", "testcase": false, "constructor": false}, {"identifier": "insertSubscription", "parameters": "(String clientId, Topic topic, INode inode)", "modifiers": "private", "return": "Action", "signature": "Action insertSubscription(String clientId, Topic topic, INode inode)", "full_signature": "private Action insertSubscription(String clientId, Topic topic, INode inode)", "class_method_signature": "CTrieSubscriptionDirectory.insertSubscription(String clientId, Topic topic, INode inode)", "testcase": false, "constructor": false}, {"identifier": "createNodeAndInsertSubscription", "parameters": "(String clientId, Topic topic, INode inode, Topic fullpath)", "modifiers": "private", "return": "Action", "signature": "Action createNodeAndInsertSubscription(String clientId, Topic topic, INode inode, Topic fullpath)", "full_signature": "private Action createNodeAndInsertSubscription(String clientId, Topic topic, INode inode, Topic fullpath)", "class_method_signature": "CTrieSubscriptionDirectory.createNodeAndInsertSubscription(String clientId, Topic topic, INode inode, Topic fullpath)", "testcase": false, "constructor": false}, {"identifier": "createLeafNodes", "parameters": "(String clientId, Topic fullpath, Token token)", "modifiers": "private", "return": "INode", "signature": "INode createLeafNodes(String clientId, Topic fullpath, Token token)", "full_signature": "private INode createLeafNodes(String clientId, Topic fullpath, Token token)", "class_method_signature": "CTrieSubscriptionDirectory.createLeafNodes(String clientId, Topic fullpath, Token token)", "testcase": false, "constructor": false}, {"identifier": "createPathRec", "parameters": "(String clientId, Topic topic, Topic fullpath)", "modifiers": "private", "return": "INode", "signature": "INode createPathRec(String clientId, Topic topic, Topic fullpath)", "full_signature": "private INode createPathRec(String clientId, Topic topic, Topic fullpath)", "class_method_signature": "CTrieSubscriptionDirectory.createPathRec(String clientId, Topic topic, Topic fullpath)", "testcase": false, "constructor": false}, {"identifier": "removeSubscription", "parameters": "(Topic topic, String clientID)", "modifiers": "public", "return": "void", "signature": "void removeSubscription(Topic topic, String clientID)", "full_signature": "public void removeSubscription(Topic topic, String clientID)", "class_method_signature": "CTrieSubscriptionDirectory.removeSubscription(Topic topic, String clientID)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String clientId, Topic topic, INode inode, INode iParent)", "modifiers": "private", "return": "Action", "signature": "Action remove(String clientId, Topic topic, INode inode, INode iParent)", "full_signature": "private Action remove(String clientId, Topic topic, INode inode, INode iParent)", "class_method_signature": "CTrieSubscriptionDirectory.remove(String clientId, Topic topic, INode inode, INode iParent)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "CTrieSubscriptionDirectory.size()", "testcase": false, "constructor": false}, {"identifier": "dumpTree", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String dumpTree()", "full_signature": "public String dumpTree()", "class_method_signature": "CTrieSubscriptionDirectory.dumpTree()", "testcase": false, "constructor": false}, {"identifier": "dfsVisit", "parameters": "(INode node, IVisitor<?> visitor, int deep)", "modifiers": "private", "return": "void", "signature": "void dfsVisit(INode node, IVisitor<?> visitor, int deep)", "full_signature": "private void dfsVisit(INode node, IVisitor<?> visitor, int deep)", "class_method_signature": "CTrieSubscriptionDirectory.dfsVisit(INode node, IVisitor<?> visitor, int deep)", "testcase": false, "constructor": false}], "file": "broker/src/main/java/io/moquette/spi/impl/subscriptions/CTrieSubscriptionDirectory.java"}, "focal_method": {"identifier": "lookup", "parameters": "(Topic topic)", "modifiers": "", "return": "Optional<CNode>", "body": "Optional<CNode> lookup(Topic topic) {\n        INode inode = this.root;\n        Token token = topic.headToken();\n        while (!topic.isEmpty() && (inode.mainNode().anyChildrenMatch(token))) {\n            topic = topic.exceptHeadToken();\n            inode = inode.mainNode().childOf(token);\n            token = topic.headToken();\n        }\n        if (inode == null || !topic.isEmpty()) {\n            return Optional.empty();\n        }\n        return Optional.of(inode.mainNode());\n    }", "signature": "Optional<CNode> lookup(Topic topic)", "full_signature": " Optional<CNode> lookup(Topic topic)", "class_method_signature": "CTrieSubscriptionDirectory.lookup(Topic topic)", "testcase": false, "constructor": false, "invocations": ["headToken", "isEmpty", "anyChildrenMatch", "mainNode", "exceptHeadToken", "childOf", "mainNode", "headToken", "isEmpty", "empty", "of", "mainNode"]}, "repository": {"repo_id": 109554428, "url": "https://github.com/historicvally/springboot-mqtt", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 91, "size": 318, "license": "licensed"}}