{"test_class": {"identifier": "IsTreeBalancedTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IsTreeBalanced isTreeBalanced;", "modifier": "private", "type": "IsTreeBalanced", "declarator": "isTreeBalanced", "var_name": "isTreeBalanced"}], "file": "algs/src/test/java/com/github/pedrovgs/problem65/IsTreeBalancedTest.java"}, "test_case": {"identifier": "shouldReturnFalseIfTreeIsNotBalanced", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReturnFalseIfTreeIsNotBalanced() {\n    BinaryNode<Integer> root = new BinaryNode<Integer>(0);\n    BinaryNode<Integer> n1 = new BinaryNode<Integer>(1);\n    BinaryNode<Integer> n2 = new BinaryNode<Integer>(2);\n    BinaryNode<Integer> n3 = new BinaryNode<Integer>(3);\n    BinaryNode<Integer> n4 = new BinaryNode<Integer>(4);\n    root.setLeft(n1);\n    root.setRight(n2);\n    n1.setLeft(n3);\n    n3.setLeft(n4);\n\n    boolean isBalanced = isTreeBalanced.check(root);\n\n    assertFalse(isBalanced);\n  }", "signature": "void shouldReturnFalseIfTreeIsNotBalanced()", "full_signature": "@Test public void shouldReturnFalseIfTreeIsNotBalanced()", "class_method_signature": "IsTreeBalancedTest.shouldReturnFalseIfTreeIsNotBalanced()", "testcase": true, "constructor": false, "invocations": ["setLeft", "setRight", "setLeft", "setLeft", "check", "assertFalse"]}, "focal_class": {"identifier": "IsTreeBalanced", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "check", "parameters": "(BinaryNode root)", "modifiers": "public", "return": "boolean", "signature": "boolean check(BinaryNode root)", "full_signature": "public boolean check(BinaryNode root)", "class_method_signature": "IsTreeBalanced.check(BinaryNode root)", "testcase": false, "constructor": false}, {"identifier": "getRootHeight", "parameters": "(BinaryNode tree)", "modifiers": "private", "return": "int", "signature": "int getRootHeight(BinaryNode tree)", "full_signature": "private int getRootHeight(BinaryNode tree)", "class_method_signature": "IsTreeBalanced.getRootHeight(BinaryNode tree)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem65/IsTreeBalanced.java"}, "focal_method": {"identifier": "check", "parameters": "(BinaryNode root)", "modifiers": "public", "return": "boolean", "body": "public boolean check(BinaryNode root) {\n    if (root == null) {\n      return true;\n    } else {\n      int heightDifference = getRootHeight(root.getLeft()) - getRootHeight(root.getRight());\n      return Math.abs(heightDifference) <= 1;\n    }\n  }", "signature": "boolean check(BinaryNode root)", "full_signature": "public boolean check(BinaryNode root)", "class_method_signature": "IsTreeBalanced.check(BinaryNode root)", "testcase": false, "constructor": false, "invocations": ["getRootHeight", "getLeft", "getRootHeight", "getRight", "abs"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}