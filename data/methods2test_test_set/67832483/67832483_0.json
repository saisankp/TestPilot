{"test_class": {"identifier": "MonetaryAmountAcceptedValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Validator validator;", "modifier": "private static", "type": "Validator", "declarator": "validator", "var_name": "validator"}, {"original_string": "private MonetaryAmountAcceptedValidator monetaryAmountValidator;", "modifier": "private", "type": "MonetaryAmountAcceptedValidator", "declarator": "monetaryAmountValidator", "var_name": "monetaryAmountValidator"}, {"original_string": "@Mock\n    private CurrencyAccepted constraintAnnotation;", "modifier": "@Mock\n    private", "type": "CurrencyAccepted", "declarator": "constraintAnnotation", "var_name": "constraintAnnotation"}, {"original_string": "private ConstraintValidatorContext context;", "modifier": "private", "type": "ConstraintValidatorContext", "declarator": "context", "var_name": "context"}], "file": "artemis-demo-java-se/bean-validation/src/test/java/org/jnosql/artemis/demo/se/parking/validation/MonetaryAmountAcceptedValidatorTest.java"}, "test_case": {"identifier": "shouldReturnsTrueWhenCurrencyIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnsTrueWhenCurrencyIsNull() {\n        Assertions.assertTrue(monetaryAmountValidator.isValid(null, context));\n    }", "signature": "void shouldReturnsTrueWhenCurrencyIsNull()", "full_signature": "@Test public void shouldReturnsTrueWhenCurrencyIsNull()", "class_method_signature": "MonetaryAmountAcceptedValidatorTest.shouldReturnsTrueWhenCurrencyIsNull()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isValid"]}, "focal_class": {"identifier": "MonetaryAmountAcceptedValidator", "superclass": "", "interfaces": "implements ConstraintValidator<CurrencyAccepted, MonetaryAmount>", "fields": [{"original_string": "private final List<CurrencyUnit> currencies = new ArrayList<>();", "modifier": "private final", "type": "List<CurrencyUnit>", "declarator": "currencies = new ArrayList<>()", "var_name": "currencies"}], "methods": [{"identifier": "initialize", "parameters": "(CurrencyAccepted constraintAnnotation)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(CurrencyAccepted constraintAnnotation)", "full_signature": "@Override public void initialize(CurrencyAccepted constraintAnnotation)", "class_method_signature": "MonetaryAmountAcceptedValidator.initialize(CurrencyAccepted constraintAnnotation)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(MonetaryAmount value,\n                           ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid(MonetaryAmount value,\n                           ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(MonetaryAmount value,\n                           ConstraintValidatorContext context)", "class_method_signature": "MonetaryAmountAcceptedValidator.isValid(MonetaryAmount value,\n                           ConstraintValidatorContext context)", "testcase": false, "constructor": false}, {"identifier": "containsCurrency", "parameters": "(CurrencyUnit value)", "modifiers": "private", "return": "boolean", "signature": "boolean containsCurrency(CurrencyUnit value)", "full_signature": "private boolean containsCurrency(CurrencyUnit value)", "class_method_signature": "MonetaryAmountAcceptedValidator.containsCurrency(CurrencyUnit value)", "testcase": false, "constructor": false}], "file": "artemis-demo-java-se/bean-validation/src/main/java/org/jnosql/artemis/demo/se/parking/validation/MonetaryAmountAcceptedValidator.java"}, "focal_method": {"identifier": "isValid", "parameters": "(MonetaryAmount value,\n                           ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isValid(MonetaryAmount value,\n                           ConstraintValidatorContext context) {\n        if (value == null) {\n            return true;\n        }\n        return containsCurrency(value.getCurrency());\n    }", "signature": "boolean isValid(MonetaryAmount value,\n                           ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(MonetaryAmount value,\n                           ConstraintValidatorContext context)", "class_method_signature": "MonetaryAmountAcceptedValidator.isValid(MonetaryAmount value,\n                           ConstraintValidatorContext context)", "testcase": false, "constructor": false, "invocations": ["containsCurrency", "getCurrency"]}, "repository": {"repo_id": 67832483, "url": "https://github.com/JNOSQL/artemis-demo", "stars": 21, "created": "9/9/2016 9:01:24 PM +00:00", "updates": "2020-01-06T09:37:32+00:00", "fork": "False", "license": "licensed"}}