{"test_class": {"identifier": "IntegerValueConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final IntegerValueConverter converter = new IntegerValueConverter();", "modifier": "private final", "type": "IntegerValueConverter", "declarator": "converter = new IntegerValueConverter()", "var_name": "converter"}], "file": "stagemonitor-configuration/src/test/java/org/stagemonitor/configuration/converter/IntegerValueConverterTest.java"}, "test_case": {"identifier": "testConvertInvalidTrue", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n\tpublic void testConvertInvalidTrue() throws Exception {\n\t\tconverter.convert(\"one\");\n\t}", "signature": "void testConvertInvalidTrue()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testConvertInvalidTrue()", "class_method_signature": "IntegerValueConverterTest.testConvertInvalidTrue()", "testcase": true, "constructor": false, "invocations": ["convert"]}, "focal_class": {"identifier": "IntegerValueConverter", "superclass": "extends AbstractValueConverter<Integer>", "interfaces": "", "fields": [{"original_string": "public static final IntegerValueConverter INSTANCE = new IntegerValueConverter();", "modifier": "public static final", "type": "IntegerValueConverter", "declarator": "INSTANCE = new IntegerValueConverter()", "var_name": "INSTANCE"}], "methods": [{"identifier": "convert", "parameters": "(String s)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer convert(String s)", "full_signature": "@Override public Integer convert(String s)", "class_method_signature": "IntegerValueConverter.convert(String s)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Integer value)", "modifiers": "@Override public", "return": "String", "signature": "String toString(Integer value)", "full_signature": "@Override public String toString(Integer value)", "class_method_signature": "IntegerValueConverter.toString(Integer value)", "testcase": false, "constructor": false}], "file": "stagemonitor-configuration/src/main/java/org/stagemonitor/configuration/converter/IntegerValueConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String s)", "modifiers": "@Override public", "return": "Integer", "body": "@Override\n\tpublic Integer convert(String s) {\n\t\ttry {\n\t\t\treturn Integer.valueOf(s);\n\t\t} catch (RuntimeException e) {\n\t\t\tthrow new IllegalArgumentException(\"Can't convert '\" + s + \"' to Integer.\", e);\n\t\t}\n\t}", "signature": "Integer convert(String s)", "full_signature": "@Override public Integer convert(String s)", "class_method_signature": "IntegerValueConverter.convert(String s)", "testcase": false, "constructor": false, "invocations": ["valueOf"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}