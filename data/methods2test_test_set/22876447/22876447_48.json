{"test_class": {"identifier": "DataSourceConnectorFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DataSourceConnectorFactory factory;", "modifier": "private", "type": "DataSourceConnectorFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private DataSource ds1;", "modifier": "private", "type": "DataSource", "declarator": "ds1", "var_name": "ds1"}, {"original_string": "private DataSource ds2;", "modifier": "private", "type": "DataSource", "declarator": "ds2", "var_name": "ds2"}], "file": "link-move/src/test/java/com/nhl/link/move/runtime/jdbc/DataSourceConnectorFactoryTest.java"}, "test_case": {"identifier": "testConnectorDataSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testConnectorDataSource() {\n\t\tassertSame(ds1, factory.connectorDataSource(\"ds1\"));\n\t\tassertSame(ds2, factory.connectorDataSource(\"ds2\"));\n\t}", "signature": "void testConnectorDataSource()", "full_signature": "@Test public void testConnectorDataSource()", "class_method_signature": "DataSourceConnectorFactoryTest.testConnectorDataSource()", "testcase": true, "constructor": false, "invocations": ["assertSame", "connectorDataSource", "assertSame", "connectorDataSource"]}, "focal_class": {"identifier": "DataSourceConnectorFactory", "superclass": "", "interfaces": "implements IConnectorFactory<JdbcConnector>", "fields": [{"original_string": "private final Map<String, DataSource> dataSources;", "modifier": "private final", "type": "Map<String, DataSource>", "declarator": "dataSources", "var_name": "dataSources"}], "methods": [{"identifier": "DataSourceConnectorFactory", "parameters": "(Map<String, DataSource> dataSources)", "modifiers": "public", "return": "", "signature": " DataSourceConnectorFactory(Map<String, DataSource> dataSources)", "full_signature": "public  DataSourceConnectorFactory(Map<String, DataSource> dataSources)", "class_method_signature": "DataSourceConnectorFactory.DataSourceConnectorFactory(Map<String, DataSource> dataSources)", "testcase": false, "constructor": true}, {"identifier": "createConnector", "parameters": "(String id)", "modifiers": "@Override public", "return": "JdbcConnector", "signature": "JdbcConnector createConnector(String id)", "full_signature": "@Override public JdbcConnector createConnector(String id)", "class_method_signature": "DataSourceConnectorFactory.createConnector(String id)", "testcase": false, "constructor": false}, {"identifier": "connectorDataSource", "parameters": "(String id)", "modifiers": "", "return": "DataSource", "signature": "DataSource connectorDataSource(String id)", "full_signature": " DataSource connectorDataSource(String id)", "class_method_signature": "DataSourceConnectorFactory.connectorDataSource(String id)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/runtime/jdbc/DataSourceConnectorFactory.java"}, "focal_method": {"identifier": "connectorDataSource", "parameters": "(String id)", "modifiers": "", "return": "DataSource", "body": "DataSource connectorDataSource(String id) {\n\n\t\tDataSource ds = dataSources.get(id);\n\n\t\tif (ds == null) {\n\t\t\tthrow new LmRuntimeException(\"Unknown connector ID: \" + id + \"; available IDs: \" + dataSources.keySet());\n\t\t}\n\n\t\treturn ds;\n\t}", "signature": "DataSource connectorDataSource(String id)", "full_signature": " DataSource connectorDataSource(String id)", "class_method_signature": "DataSourceConnectorFactory.connectorDataSource(String id)", "testcase": false, "constructor": false, "invocations": ["get", "keySet"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}