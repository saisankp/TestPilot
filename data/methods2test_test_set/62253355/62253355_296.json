{"test_class": {"identifier": "CatalogConfigProviderImplTest", "superclass": "extends OrmEnabledTestCase", "interfaces": "", "fields": [{"original_string": "private CatalogConfigProviderImpl provider;", "modifier": "private", "type": "CatalogConfigProviderImpl", "declarator": "provider", "var_name": "provider"}, {"original_string": "private Repository repo;", "modifier": "private", "type": "Repository", "declarator": "repo", "var_name": "repo"}, {"original_string": "private Map<String, Object> props;", "modifier": "private", "type": "Map<String, Object>", "declarator": "props", "var_name": "props"}, {"original_string": "private IRI localCatalogId;", "modifier": "private", "type": "IRI", "declarator": "localCatalogId", "var_name": "localCatalogId"}, {"original_string": "private IRI distributedCatalogId;", "modifier": "private", "type": "IRI", "declarator": "distributedCatalogId", "var_name": "distributedCatalogId"}], "file": "com.mobi.catalog.impl/src/test/java/com/mobi/catalog/impl/config/CatalogConfigProviderImplTest.java"}, "test_case": {"identifier": "getDistributedCatalogIRITest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getDistributedCatalogIRITest() throws Exception {\n        assertEquals(distributedCatalogId, provider.getDistributedCatalogIRI());\n    }", "signature": "void getDistributedCatalogIRITest()", "full_signature": "@Test public void getDistributedCatalogIRITest()", "class_method_signature": "CatalogConfigProviderImplTest.getDistributedCatalogIRITest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDistributedCatalogIRI"]}, "focal_class": {"identifier": "CatalogConfigProviderImpl", "superclass": "", "interfaces": "implements CatalogConfigProvider", "fields": [{"original_string": "static final String COMPONENT_NAME = \"com.mobi.catalog.config.CatalogConfigProvider\";", "modifier": "static final", "type": "String", "declarator": "COMPONENT_NAME = \"com.mobi.catalog.config.CatalogConfigProvider\"", "var_name": "COMPONENT_NAME"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(CatalogConfigProviderImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(CatalogConfigProviderImpl.class)", "var_name": "log"}, {"original_string": "private Repository repository;", "modifier": "private", "type": "Repository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private CatalogFactory catalogFactory;", "modifier": "private", "type": "CatalogFactory", "declarator": "catalogFactory", "var_name": "catalogFactory"}, {"original_string": "private Resource distributedCatalogIRI;", "modifier": "private", "type": "Resource", "declarator": "distributedCatalogIRI", "var_name": "distributedCatalogIRI"}, {"original_string": "private Resource localCatalogIRI;", "modifier": "private", "type": "Resource", "declarator": "localCatalogIRI", "var_name": "localCatalogIRI"}], "methods": [{"identifier": "setRepository", "parameters": "(Repository repository)", "modifiers": "@Reference(name = \"repository\")", "return": "void", "signature": "void setRepository(Repository repository)", "full_signature": "@Reference(name = \"repository\") void setRepository(Repository repository)", "class_method_signature": "CatalogConfigProviderImpl.setRepository(Repository repository)", "testcase": false, "constructor": false}, {"identifier": "setValueFactory", "parameters": "(ValueFactory valueFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setValueFactory(ValueFactory valueFactory)", "full_signature": "@Reference void setValueFactory(ValueFactory valueFactory)", "class_method_signature": "CatalogConfigProviderImpl.setValueFactory(ValueFactory valueFactory)", "testcase": false, "constructor": false}, {"identifier": "setCatalogFactory", "parameters": "(CatalogFactory catalogFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setCatalogFactory(CatalogFactory catalogFactory)", "full_signature": "@Reference void setCatalogFactory(CatalogFactory catalogFactory)", "class_method_signature": "CatalogConfigProviderImpl.setCatalogFactory(CatalogFactory catalogFactory)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(Map<String, Object> props)", "modifiers": "@Activate protected", "return": "void", "signature": "void start(Map<String, Object> props)", "full_signature": "@Activate protected void start(Map<String, Object> props)", "class_method_signature": "CatalogConfigProviderImpl.start(Map<String, Object> props)", "testcase": false, "constructor": false}, {"identifier": "getRepositoryId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRepositoryId()", "full_signature": "@Override public String getRepositoryId()", "class_method_signature": "CatalogConfigProviderImpl.getRepositoryId()", "testcase": false, "constructor": false}, {"identifier": "getRepository", "parameters": "()", "modifiers": "@Override public", "return": "Repository", "signature": "Repository getRepository()", "full_signature": "@Override public Repository getRepository()", "class_method_signature": "CatalogConfigProviderImpl.getRepository()", "testcase": false, "constructor": false}, {"identifier": "getDistributedCatalogIRI", "parameters": "()", "modifiers": "@Override public", "return": "IRI", "signature": "IRI getDistributedCatalogIRI()", "full_signature": "@Override public IRI getDistributedCatalogIRI()", "class_method_signature": "CatalogConfigProviderImpl.getDistributedCatalogIRI()", "testcase": false, "constructor": false}, {"identifier": "getLocalCatalogIRI", "parameters": "()", "modifiers": "@Override public", "return": "IRI", "signature": "IRI getLocalCatalogIRI()", "full_signature": "@Override public IRI getLocalCatalogIRI()", "class_method_signature": "CatalogConfigProviderImpl.getLocalCatalogIRI()", "testcase": false, "constructor": false}, {"identifier": "addCatalogToRepo", "parameters": "(Resource catalogId, String title, String description, RepositoryConnection conn)", "modifiers": "private", "return": "void", "signature": "void addCatalogToRepo(Resource catalogId, String title, String description, RepositoryConnection conn)", "full_signature": "private void addCatalogToRepo(Resource catalogId, String title, String description, RepositoryConnection conn)", "class_method_signature": "CatalogConfigProviderImpl.addCatalogToRepo(Resource catalogId, String title, String description, RepositoryConnection conn)", "testcase": false, "constructor": false}], "file": "com.mobi.catalog.impl/src/main/java/com/mobi/catalog/impl/config/CatalogConfigProviderImpl.java"}, "focal_method": {"identifier": "getDistributedCatalogIRI", "parameters": "()", "modifiers": "@Override public", "return": "IRI", "body": "@Override\n    public IRI getDistributedCatalogIRI() {\n        return (IRI) distributedCatalogIRI;\n    }", "signature": "IRI getDistributedCatalogIRI()", "full_signature": "@Override public IRI getDistributedCatalogIRI()", "class_method_signature": "CatalogConfigProviderImpl.getDistributedCatalogIRI()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}