{"test_class": {"identifier": "PlotTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/com/platypii/baseline/views/charts/PlotTest.java"}, "test_case": {"identifier": "plot", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void plot() {\n        PlotOptions options = new PlotOptions(1, 1);\n        Plot plot = new Plot(options);\n        plot.initBounds(1);\n        assertNull(plot.canvas);\n        Canvas canvas = new Canvas();\n        plot.setCanvas(canvas);\n        assertNotNull(plot.canvas);\n    }", "signature": "void plot()", "full_signature": "@Test public void plot()", "class_method_signature": "PlotTest.plot()", "testcase": true, "constructor": false, "invocations": ["initBounds", "assertNull", "setCanvas", "assertNotNull"]}, "focal_class": {"identifier": "Plot", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NonNull\n    public final PlotOptions options;", "modifier": "@NonNull\n    public final", "type": "PlotOptions", "declarator": "options", "var_name": "options"}, {"original_string": "final PlotAxes axes = new PlotAxes(this);", "modifier": "final", "type": "PlotAxes", "declarator": "axes = new PlotAxes(this)", "var_name": "axes"}, {"original_string": "public Canvas canvas;", "modifier": "public", "type": "Canvas", "declarator": "canvas", "var_name": "canvas"}, {"original_string": "public int width;", "modifier": "public", "type": "int", "declarator": "width", "var_name": "width"}, {"original_string": "public int height;", "modifier": "public", "type": "int", "declarator": "height", "var_name": "height"}, {"original_string": "private Bounds[] dataBounds;", "modifier": "private", "type": "Bounds[]", "declarator": "dataBounds", "var_name": "dataBounds"}, {"original_string": "Bounds[] bounds;", "modifier": "", "type": "Bounds[]", "declarator": "bounds", "var_name": "bounds"}, {"original_string": "public final List<ChartLayer> layers = new ArrayList<>();", "modifier": "public final", "type": "List<ChartLayer>", "declarator": "layers = new ArrayList<>()", "var_name": "layers"}, {"original_string": "private final Path path = new Path();", "modifier": "private final", "type": "Path", "declarator": "path = new Path()", "var_name": "path"}, {"original_string": "public final Paint paint = new Paint();", "modifier": "public final", "type": "Paint", "declarator": "paint = new Paint()", "var_name": "paint"}, {"original_string": "public final Paint text = new Paint();", "modifier": "public final", "type": "Paint", "declarator": "text = new Paint()", "var_name": "text"}], "methods": [{"identifier": "Plot", "parameters": "(@NonNull PlotOptions options)", "modifiers": "", "return": "", "signature": " Plot(@NonNull PlotOptions options)", "full_signature": "  Plot(@NonNull PlotOptions options)", "class_method_signature": "Plot.Plot(@NonNull PlotOptions options)", "testcase": false, "constructor": true}, {"identifier": "setCanvas", "parameters": "(@NonNull Canvas canvas)", "modifiers": "", "return": "void", "signature": "void setCanvas(@NonNull Canvas canvas)", "full_signature": " void setCanvas(@NonNull Canvas canvas)", "class_method_signature": "Plot.setCanvas(@NonNull Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "updateBounds", "parameters": "(@NonNull BasePlot basePlot)", "modifiers": "", "return": "void", "signature": "void updateBounds(@NonNull BasePlot basePlot)", "full_signature": " void updateBounds(@NonNull BasePlot basePlot)", "class_method_signature": "Plot.updateBounds(@NonNull BasePlot basePlot)", "testcase": false, "constructor": false}, {"identifier": "initBounds", "parameters": "(int axes)", "modifiers": "", "return": "void", "signature": "void initBounds(int axes)", "full_signature": " void initBounds(int axes)", "class_method_signature": "Plot.initBounds(int axes)", "testcase": false, "constructor": false}, {"identifier": "drawPoint", "parameters": "(int axis, double x, double y, float radius)", "modifiers": "public", "return": "void", "signature": "void drawPoint(int axis, double x, double y, float radius)", "full_signature": "public void drawPoint(int axis, double x, double y, float radius)", "class_method_signature": "Plot.drawPoint(int axis, double x, double y, float radius)", "testcase": false, "constructor": false}, {"identifier": "drawLine", "parameters": "(int axis, @NonNull DataSeries series, float radius)", "modifiers": "public", "return": "void", "signature": "void drawLine(int axis, @NonNull DataSeries series, float radius)", "full_signature": "public void drawLine(int axis, @NonNull DataSeries series, float radius)", "class_method_signature": "Plot.drawLine(int axis, @NonNull DataSeries series, float radius)", "testcase": false, "constructor": false}, {"identifier": "renderPath", "parameters": "(int axis, @NonNull DataSeries series)", "modifiers": "@NonNull private", "return": "Path", "signature": "Path renderPath(int axis, @NonNull DataSeries series)", "full_signature": "@NonNull private Path renderPath(int axis, @NonNull DataSeries series)", "class_method_signature": "Plot.renderPath(int axis, @NonNull DataSeries series)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int axis, double x)", "modifiers": "", "return": "float", "signature": "float getX(int axis, double x)", "full_signature": " float getX(int axis, double x)", "class_method_signature": "Plot.getX(int axis, double x)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(double x)", "modifiers": "public", "return": "float", "signature": "float getX(double x)", "full_signature": "public float getX(double x)", "class_method_signature": "Plot.getX(double x)", "testcase": false, "constructor": false}, {"identifier": "getXinverse", "parameters": "(int axis, double sx)", "modifiers": "", "return": "double", "signature": "double getXinverse(int axis, double sx)", "full_signature": " double getXinverse(int axis, double sx)", "class_method_signature": "Plot.getXinverse(int axis, double sx)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(int axis, double y)", "modifiers": "", "return": "float", "signature": "float getY(int axis, double y)", "full_signature": " float getY(int axis, double y)", "class_method_signature": "Plot.getY(int axis, double y)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(double y)", "modifiers": "public", "return": "float", "signature": "float getY(double y)", "full_signature": "public float getY(double y)", "class_method_signature": "Plot.getY(double y)", "testcase": false, "constructor": false}, {"identifier": "getYinverse", "parameters": "(int axis, double sy)", "modifiers": "", "return": "double", "signature": "double getYinverse(int axis, double sy)", "full_signature": " double getYinverse(int axis, double sy)", "class_method_signature": "Plot.getYinverse(int axis, double sy)", "testcase": false, "constructor": false}], "file": "common/src/main/java/com/platypii/baseline/views/charts/Plot.java"}, "focal_method": {"identifier": "Plot", "parameters": "(@NonNull PlotOptions options)", "modifiers": "", "return": "", "body": "Plot(@NonNull PlotOptions options) {\n        this.options = options;\n        paint.setAntiAlias(true);\n        paint.setDither(true);\n        paint.setStrokeJoin(Paint.Join.ROUND);\n        text.setAntiAlias(true);\n        text.setTextSize(options.font_size);\n        text.setColor(0xffcccccc);\n    }", "signature": " Plot(@NonNull PlotOptions options)", "full_signature": "  Plot(@NonNull PlotOptions options)", "class_method_signature": "Plot.Plot(@NonNull PlotOptions options)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}