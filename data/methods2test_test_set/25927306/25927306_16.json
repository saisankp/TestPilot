{"test_class": {"identifier": "ExtendedDnControlTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/ad/control/ExtendedDnControlTest.java"}, "test_case": {"identifier": "encode", "parameters": "(final byte[] berValue, final ExtendedDnControl expected)", "modifiers": "@Test(groups = \"control\", dataProvider = \"request\") public", "return": "void", "body": "@Test(groups = \"control\", dataProvider = \"request\")\n  public void encode(final byte[] berValue, final ExtendedDnControl expected)\n    throws Exception\n  {\n    Assert.assertEquals(expected.encode(), berValue);\n  }", "signature": "void encode(final byte[] berValue, final ExtendedDnControl expected)", "full_signature": "@Test(groups = \"control\", dataProvider = \"request\") public void encode(final byte[] berValue, final ExtendedDnControl expected)", "class_method_signature": "ExtendedDnControlTest.encode(final byte[] berValue, final ExtendedDnControl expected)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "encode"]}, "focal_class": {"identifier": "ExtendedDnControl", "superclass": "extends AbstractControl", "interfaces": "implements RequestControl", "fields": [{"original_string": "public static final String OID = \"1.2.840.113556.1.4.529\";", "modifier": "public static final", "type": "String", "declarator": "OID = \"1.2.840.113556.1.4.529\"", "var_name": "OID"}, {"original_string": "private static final int HASH_CODE_SEED = 919;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_SEED = 919", "var_name": "HASH_CODE_SEED"}, {"original_string": "private Flag flag = Flag.STANDARD;", "modifier": "private", "type": "Flag", "declarator": "flag = Flag.STANDARD", "var_name": "flag"}], "methods": [{"identifier": "ExtendedDnControl", "parameters": "()", "modifiers": "public", "return": "", "signature": " ExtendedDnControl()", "full_signature": "public  ExtendedDnControl()", "class_method_signature": "ExtendedDnControl.ExtendedDnControl()", "testcase": false, "constructor": true}, {"identifier": "ExtendedDnControl", "parameters": "(final Flag f)", "modifiers": "public", "return": "", "signature": " ExtendedDnControl(final Flag f)", "full_signature": "public  ExtendedDnControl(final Flag f)", "class_method_signature": "ExtendedDnControl.ExtendedDnControl(final Flag f)", "testcase": false, "constructor": true}, {"identifier": "ExtendedDnControl", "parameters": "(final Flag f, final boolean critical)", "modifiers": "public", "return": "", "signature": " ExtendedDnControl(final Flag f, final boolean critical)", "full_signature": "public  ExtendedDnControl(final Flag f, final boolean critical)", "class_method_signature": "ExtendedDnControl.ExtendedDnControl(final Flag f, final boolean critical)", "testcase": false, "constructor": true}, {"identifier": "hasValue", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasValue()", "full_signature": "@Override public boolean hasValue()", "class_method_signature": "ExtendedDnControl.hasValue()", "testcase": false, "constructor": false}, {"identifier": "getFlag", "parameters": "()", "modifiers": "public", "return": "Flag", "signature": "Flag getFlag()", "full_signature": "public Flag getFlag()", "class_method_signature": "ExtendedDnControl.getFlag()", "testcase": false, "constructor": false}, {"identifier": "setFlag", "parameters": "(final Flag f)", "modifiers": "public", "return": "void", "signature": "void setFlag(final Flag f)", "full_signature": "public void setFlag(final Flag f)", "class_method_signature": "ExtendedDnControl.setFlag(final Flag f)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ExtendedDnControl.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ExtendedDnControl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ExtendedDnControl.toString()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] encode()", "full_signature": "@Override public byte[] encode()", "class_method_signature": "ExtendedDnControl.encode()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/ad/control/ExtendedDnControl.java"}, "focal_method": {"identifier": "encode", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n  public byte[] encode()\n  {\n    final ConstructedDEREncoder se = new ConstructedDEREncoder(\n      UniversalDERTag.SEQ,\n      new IntegerType(getFlag().ordinal()));\n    return se.encode();\n  }", "signature": "byte[] encode()", "full_signature": "@Override public byte[] encode()", "class_method_signature": "ExtendedDnControl.encode()", "testcase": false, "constructor": false, "invocations": ["ordinal", "getFlag", "encode"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}