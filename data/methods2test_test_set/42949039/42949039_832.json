{"test_class": {"identifier": "HerdStringHelperTest", "superclass": "extends AbstractDaoTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private HerdStringHelper herdStringHelper;", "modifier": "@Autowired\n    private", "type": "HerdStringHelper", "declarator": "herdStringHelper", "var_name": "herdStringHelper"}], "file": "herd-code/herd-dao/src/test/java/org/finra/herd/dao/helper/HerdStringHelperTest.java"}, "test_case": {"identifier": "testJoinIgnoreNulls", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testJoinIgnoreNulls()\n    {\n        List<String> list = Arrays.asList(null, \"A\", null, \"B\", null);\n        String delimiter = \"|\";\n        String escapeSequence = \"\\\\\";\n        String result = herdStringHelper.join(list, delimiter, escapeSequence);\n\n        assertEquals(\"result\", \"A|B\", result);\n    }", "signature": "void testJoinIgnoreNulls()", "full_signature": "@Test public void testJoinIgnoreNulls()", "class_method_signature": "HerdStringHelperTest.testJoinIgnoreNulls()", "testcase": true, "constructor": false, "invocations": ["asList", "join", "assertEquals"]}, "focal_class": {"identifier": "HerdStringHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}], "methods": [{"identifier": "splitStringWithDefaultDelimiter", "parameters": "(String inputString)", "modifiers": "public", "return": "List<String>", "signature": "List<String> splitStringWithDefaultDelimiter(String inputString)", "full_signature": "public List<String> splitStringWithDefaultDelimiter(String inputString)", "class_method_signature": "HerdStringHelper.splitStringWithDefaultDelimiter(String inputString)", "testcase": false, "constructor": false}, {"identifier": "splitStringWithDefaultDelimiterEscaped", "parameters": "(String inputString)", "modifiers": "public", "return": "List<String>", "signature": "List<String> splitStringWithDefaultDelimiterEscaped(String inputString)", "full_signature": "public List<String> splitStringWithDefaultDelimiterEscaped(String inputString)", "class_method_signature": "HerdStringHelper.splitStringWithDefaultDelimiterEscaped(String inputString)", "testcase": false, "constructor": false}, {"identifier": "getRequiredConfigurationValue", "parameters": "(ConfigurationValue configurationValue)", "modifiers": "public", "return": "String", "signature": "String getRequiredConfigurationValue(ConfigurationValue configurationValue)", "full_signature": "public String getRequiredConfigurationValue(ConfigurationValue configurationValue)", "class_method_signature": "HerdStringHelper.getRequiredConfigurationValue(ConfigurationValue configurationValue)", "testcase": false, "constructor": false}, {"identifier": "getConfigurationValueAsInteger", "parameters": "(ConfigurationValue configurationValue)", "modifiers": "public", "return": "int", "signature": "int getConfigurationValueAsInteger(ConfigurationValue configurationValue)", "full_signature": "public int getConfigurationValueAsInteger(ConfigurationValue configurationValue)", "class_method_signature": "HerdStringHelper.getConfigurationValueAsInteger(ConfigurationValue configurationValue)", "testcase": false, "constructor": false}, {"identifier": "getConfigurationValueAsString", "parameters": "(ConfigurationValue configurationValue)", "modifiers": "public", "return": "String", "signature": "String getConfigurationValueAsString(ConfigurationValue configurationValue)", "full_signature": "public String getConfigurationValueAsString(ConfigurationValue configurationValue)", "class_method_signature": "HerdStringHelper.getConfigurationValueAsString(ConfigurationValue configurationValue)", "testcase": false, "constructor": false}, {"identifier": "splitAndTrim", "parameters": "(String string, String delimiter)", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> splitAndTrim(String string, String delimiter)", "full_signature": "public Set<String> splitAndTrim(String string, String delimiter)", "class_method_signature": "HerdStringHelper.splitAndTrim(String string, String delimiter)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(List<String> list, String delimiter, String escapeSequence)", "modifiers": "public", "return": "String", "signature": "String join(List<String> list, String delimiter, String escapeSequence)", "full_signature": "public String join(List<String> list, String delimiter, String escapeSequence)", "class_method_signature": "HerdStringHelper.join(List<String> list, String delimiter, String escapeSequence)", "testcase": false, "constructor": false}, {"identifier": "getDelimitedConfigurationValue", "parameters": "(ConfigurationValue configurationValue)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getDelimitedConfigurationValue(ConfigurationValue configurationValue)", "full_signature": "public List<String> getDelimitedConfigurationValue(ConfigurationValue configurationValue)", "class_method_signature": "HerdStringHelper.getDelimitedConfigurationValue(ConfigurationValue configurationValue)", "testcase": false, "constructor": false}, {"identifier": "buildStringWithDefaultDelimiter", "parameters": "(List<String> inputStrings)", "modifiers": "public", "return": "String", "signature": "String buildStringWithDefaultDelimiter(List<String> inputStrings)", "full_signature": "public String buildStringWithDefaultDelimiter(List<String> inputStrings)", "class_method_signature": "HerdStringHelper.buildStringWithDefaultDelimiter(List<String> inputStrings)", "testcase": false, "constructor": false}], "file": "herd-code/herd-dao/src/main/java/org/finra/herd/dao/helper/HerdStringHelper.java"}, "focal_method": {"identifier": "join", "parameters": "(List<String> list, String delimiter, String escapeSequence)", "modifiers": "public", "return": "String", "body": "public String join(List<String> list, String delimiter, String escapeSequence)\n    {\n        String result = null;\n        if (list != null)\n        {\n            List<String> filteredAndEscaped = new ArrayList<>();\n            for (String element : list)\n            {\n                if (StringUtils.isNotBlank(element))\n                {\n                    element = element.replace(delimiter, escapeSequence + delimiter);\n                    filteredAndEscaped.add(element);\n                }\n            }\n\n            result = StringUtils.join(filteredAndEscaped, delimiter);\n        }\n        return result;\n    }", "signature": "String join(List<String> list, String delimiter, String escapeSequence)", "full_signature": "public String join(List<String> list, String delimiter, String escapeSequence)", "class_method_signature": "HerdStringHelper.join(List<String> list, String delimiter, String escapeSequence)", "testcase": false, "constructor": false, "invocations": ["isNotBlank", "replace", "add", "join"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}