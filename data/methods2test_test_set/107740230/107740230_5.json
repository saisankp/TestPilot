{"test_class": {"identifier": "DirectedGraphTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static DirectedGraph<String, String> disConnect;", "modifier": "protected static", "type": "DirectedGraph<String, String>", "declarator": "disConnect", "var_name": "disConnect"}, {"original_string": "protected static DirectedGraph<String, String> connect;", "modifier": "protected static", "type": "DirectedGraph<String, String>", "declarator": "connect", "var_name": "connect"}, {"original_string": "protected static Vertex<String> a;", "modifier": "protected static", "type": "Vertex<String>", "declarator": "a", "var_name": "a"}, {"original_string": "protected static Vertex<String> b;", "modifier": "protected static", "type": "Vertex<String>", "declarator": "b", "var_name": "b"}, {"original_string": "protected static Vertex<String> c;", "modifier": "protected static", "type": "Vertex<String>", "declarator": "c", "var_name": "c"}, {"original_string": "protected static Vertex<String> d;", "modifier": "protected static", "type": "Vertex<String>", "declarator": "d", "var_name": "d"}, {"original_string": "protected static Vertex<String> e;", "modifier": "protected static", "type": "Vertex<String>", "declarator": "e", "var_name": "e"}, {"original_string": "protected static Vertex<String> f;", "modifier": "protected static", "type": "Vertex<String>", "declarator": "f", "var_name": "f"}], "file": "src/edu/ku/brc/specify/tasks/subpane/wb/graph/DirectedGraphTest.java"}, "test_case": {"identifier": "testTopoSortVertexOfE", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testTopoSortVertexOfE() {\n\t\tVector<Vertex<String>> result = connect.topoSort(a);\n\t\tassertTrue(result.get(0) == a);\n\t\tassertTrue(result.get(1) == c);\n\t\tassertTrue(result.get(2) == b);\n\t\tassertTrue(result.get(3) == d);\n\t\tassertTrue(result.get(result.size()-1) == f);\n\t}", "signature": "void testTopoSortVertexOfE()", "full_signature": "@Test public void testTopoSortVertexOfE()", "class_method_signature": "DirectedGraphTest.testTopoSortVertexOfE()", "testcase": true, "constructor": false, "invocations": ["topoSort", "assertTrue", "get", "assertTrue", "get", "assertTrue", "get", "assertTrue", "get", "assertTrue", "get", "size"]}, "focal_class": {"identifier": "DirectedGraph", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Set<Vertex<E>>    vertices;", "modifier": "protected", "type": "Set<Vertex<E>>", "declarator": "vertices", "var_name": "vertices"}, {"original_string": "protected Set<Edge<E, F>>   edges;", "modifier": "protected", "type": "Set<Edge<E, F>>", "declarator": "edges", "var_name": "edges"}, {"original_string": "private static final Logger log = Logger.getLogger(DirectedGraph.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(DirectedGraph.class)", "var_name": "log"}], "methods": [{"identifier": "DirectedGraph", "parameters": "()", "modifiers": "public", "return": "", "signature": " DirectedGraph()", "full_signature": "public  DirectedGraph()", "class_method_signature": "DirectedGraph.DirectedGraph()", "testcase": false, "constructor": true}, {"identifier": "makeUndirectedCopy", "parameters": "()", "modifiers": "protected", "return": "DirectedGraph<E, F>", "signature": "DirectedGraph<E, F> makeUndirectedCopy()", "full_signature": "protected DirectedGraph<E, F> makeUndirectedCopy()", "class_method_signature": "DirectedGraph.makeUndirectedCopy()", "testcase": false, "constructor": false}, {"identifier": "listEdges", "parameters": "()", "modifiers": "public", "return": "Vector<String>", "signature": "Vector<String> listEdges()", "full_signature": "public Vector<String> listEdges()", "class_method_signature": "DirectedGraph.listEdges()", "testcase": false, "constructor": false}, {"identifier": "addVertex", "parameters": "(Vertex<E> v)", "modifiers": "public", "return": "void", "signature": "void addVertex(Vertex<E> v)", "full_signature": "public void addVertex(Vertex<E> v)", "class_method_signature": "DirectedGraph.addVertex(Vertex<E> v)", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(Vertex<E> a, Vertex<E> b)", "modifiers": "public", "return": "void", "signature": "void addEdge(Vertex<E> a, Vertex<E> b)", "full_signature": "public void addEdge(Vertex<E> a, Vertex<E> b)", "class_method_signature": "DirectedGraph.addEdge(Vertex<E> a, Vertex<E> b)", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(Vertex<E> a, Vertex<E> b, F data)", "modifiers": "public", "return": "void", "signature": "void addEdge(Vertex<E> a, Vertex<E> b, F data)", "full_signature": "public void addEdge(Vertex<E> a, Vertex<E> b, F data)", "class_method_signature": "DirectedGraph.addEdge(Vertex<E> a, Vertex<E> b, F data)", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(String aLabel, String bLabel)", "modifiers": "public", "return": "void", "signature": "void addEdge(String aLabel, String bLabel)", "full_signature": "public void addEdge(String aLabel, String bLabel)", "class_method_signature": "DirectedGraph.addEdge(String aLabel, String bLabel)", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(String aLabel, String bLabel, F data)", "modifiers": "public", "return": "void", "signature": "void addEdge(String aLabel, String bLabel, F data)", "full_signature": "public void addEdge(String aLabel, String bLabel, F data)", "class_method_signature": "DirectedGraph.addEdge(String aLabel, String bLabel, F data)", "testcase": false, "constructor": false}, {"identifier": "getEdge", "parameters": "(Vertex<E> v1, Vertex<E> v2)", "modifiers": "private", "return": "Edge<E, F>", "signature": "Edge<E, F> getEdge(Vertex<E> v1, Vertex<E> v2)", "full_signature": "private Edge<E, F> getEdge(Vertex<E> v1, Vertex<E> v2)", "class_method_signature": "DirectedGraph.getEdge(Vertex<E> v1, Vertex<E> v2)", "testcase": false, "constructor": false}, {"identifier": "getEdges", "parameters": "(Vertex<E> v1, Vertex<E> v2)", "modifiers": "private", "return": "Vector<Edge<E, F>>", "signature": "Vector<Edge<E, F>> getEdges(Vertex<E> v1, Vertex<E> v2)", "full_signature": "private Vector<Edge<E, F>> getEdges(Vertex<E> v1, Vertex<E> v2)", "class_method_signature": "DirectedGraph.getEdges(Vertex<E> v1, Vertex<E> v2)", "testcase": false, "constructor": false}, {"identifier": "getEdgeData", "parameters": "(Vertex<E> v1, Vertex<E> v2)", "modifiers": "public", "return": "F", "signature": "F getEdgeData(Vertex<E> v1, Vertex<E> v2)", "full_signature": "public F getEdgeData(Vertex<E> v1, Vertex<E> v2)", "class_method_signature": "DirectedGraph.getEdgeData(Vertex<E> v1, Vertex<E> v2)", "testcase": false, "constructor": false}, {"identifier": "getAllEdgeData", "parameters": "(Vertex<E> v1, Vertex<E> v2)", "modifiers": "public", "return": "Vector<F>", "signature": "Vector<F> getAllEdgeData(Vertex<E> v1, Vertex<E> v2)", "full_signature": "public Vector<F> getAllEdgeData(Vertex<E> v1, Vertex<E> v2)", "class_method_signature": "DirectedGraph.getAllEdgeData(Vertex<E> v1, Vertex<E> v2)", "testcase": false, "constructor": false}, {"identifier": "getEdgeData", "parameters": "(E vData1, E vData2)", "modifiers": "public", "return": "F", "signature": "F getEdgeData(E vData1, E vData2)", "full_signature": "public F getEdgeData(E vData1, E vData2)", "class_method_signature": "DirectedGraph.getEdgeData(E vData1, E vData2)", "testcase": false, "constructor": false}, {"identifier": "getAllEdgeData", "parameters": "(E vData1, E vData2)", "modifiers": "public", "return": "Vector<F>", "signature": "Vector<F> getAllEdgeData(E vData1, E vData2)", "full_signature": "public Vector<F> getAllEdgeData(E vData1, E vData2)", "class_method_signature": "DirectedGraph.getAllEdgeData(E vData1, E vData2)", "testcase": false, "constructor": false}, {"identifier": "isStronglyConnected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isStronglyConnected()", "full_signature": "public boolean isStronglyConnected()", "class_method_signature": "DirectedGraph.isStronglyConnected()", "testcase": false, "constructor": false}, {"identifier": "isConnected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isConnected()", "full_signature": "public boolean isConnected()", "class_method_signature": "DirectedGraph.isConnected()", "testcase": false, "constructor": false}, {"identifier": "getAdjacentVertices", "parameters": "(final Vertex<E> v)", "modifiers": "public", "return": "Vector<Vertex<E>>", "signature": "Vector<Vertex<E>> getAdjacentVertices(final Vertex<E> v)", "full_signature": "public Vector<Vertex<E>> getAdjacentVertices(final Vertex<E> v)", "class_method_signature": "DirectedGraph.getAdjacentVertices(final Vertex<E> v)", "testcase": false, "constructor": false}, {"identifier": "removeVertex", "parameters": "(final Vertex<E> v)", "modifiers": "public", "return": "void", "signature": "void removeVertex(final Vertex<E> v)", "full_signature": "public void removeVertex(final Vertex<E> v)", "class_method_signature": "DirectedGraph.removeVertex(final Vertex<E> v)", "testcase": false, "constructor": false}, {"identifier": "topoSort", "parameters": "(final Vertex<E> v, Vector<Vertex<E>> visited)", "modifiers": "protected", "return": "void", "signature": "void topoSort(final Vertex<E> v, Vector<Vertex<E>> visited)", "full_signature": "protected void topoSort(final Vertex<E> v, Vector<Vertex<E>> visited)", "class_method_signature": "DirectedGraph.topoSort(final Vertex<E> v, Vector<Vertex<E>> visited)", "testcase": false, "constructor": false}, {"identifier": "topoSort", "parameters": "(final Vertex<E> v)", "modifiers": "public", "return": "Vector<Vertex<E>>", "signature": "Vector<Vertex<E>> topoSort(final Vertex<E> v)", "full_signature": "public Vector<Vertex<E>> topoSort(final Vertex<E> v)", "class_method_signature": "DirectedGraph.topoSort(final Vertex<E> v)", "testcase": false, "constructor": false}, {"identifier": "topoSort", "parameters": "(final String vLabel)", "modifiers": "public", "return": "Vector<Vertex<E>>", "signature": "Vector<Vertex<E>> topoSort(final String vLabel)", "full_signature": "public Vector<Vertex<E>> topoSort(final String vLabel)", "class_method_signature": "DirectedGraph.topoSort(final String vLabel)", "testcase": false, "constructor": false}, {"identifier": "getVertexByLabel", "parameters": "(final String vLabel)", "modifiers": "public", "return": "Vertex<E>", "signature": "Vertex<E> getVertexByLabel(final String vLabel)", "full_signature": "public Vertex<E> getVertexByLabel(final String vLabel)", "class_method_signature": "DirectedGraph.getVertexByLabel(final String vLabel)", "testcase": false, "constructor": false}, {"identifier": "getVertexByData", "parameters": "(final E vData)", "modifiers": "public", "return": "Vertex<E>", "signature": "Vertex<E> getVertexByData(final E vData)", "full_signature": "public Vertex<E> getVertexByData(final E vData)", "class_method_signature": "DirectedGraph.getVertexByData(final E vData)", "testcase": false, "constructor": false}, {"identifier": "sources", "parameters": "()", "modifiers": "public", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> sources()", "full_signature": "public Set<Vertex<E>> sources()", "class_method_signature": "DirectedGraph.sources()", "testcase": false, "constructor": false}, {"identifier": "findVertexInGraph", "parameters": "(final Vertex<E> vertex)", "modifiers": "protected", "return": "Vertex<E>", "signature": "Vertex<E> findVertexInGraph(final Vertex<E> vertex)", "full_signature": "protected Vertex<E> findVertexInGraph(final Vertex<E> vertex)", "class_method_signature": "DirectedGraph.findVertexInGraph(final Vertex<E> vertex)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(final Vertex<E> v)", "modifiers": "public", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> from(final Vertex<E> v)", "full_signature": "public Set<Vertex<E>> from(final Vertex<E> v)", "class_method_signature": "DirectedGraph.from(final Vertex<E> v)", "testcase": false, "constructor": false}, {"identifier": "from2", "parameters": "(final Vertex<E> v, Set<Vertex<E>> result)", "modifiers": "protected", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> from2(final Vertex<E> v, Set<Vertex<E>> result)", "full_signature": "protected Set<Vertex<E>> from2(final Vertex<E> v, Set<Vertex<E>> result)", "class_method_signature": "DirectedGraph.from2(final Vertex<E> v, Set<Vertex<E>> result)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(E vData)", "modifiers": "public", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> from(E vData)", "full_signature": "public Set<Vertex<E>> from(E vData)", "class_method_signature": "DirectedGraph.from(E vData)", "testcase": false, "constructor": false}, {"identifier": "to", "parameters": "(Vertex<E> v)", "modifiers": "public", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> to(Vertex<E> v)", "full_signature": "public Set<Vertex<E>> to(Vertex<E> v)", "class_method_signature": "DirectedGraph.to(Vertex<E> v)", "testcase": false, "constructor": false}, {"identifier": "to", "parameters": "(E vData)", "modifiers": "public", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> to(E vData)", "full_signature": "public Set<Vertex<E>> to(E vData)", "class_method_signature": "DirectedGraph.to(E vData)", "testcase": false, "constructor": false}, {"identifier": "into", "parameters": "(Vertex<E> v)", "modifiers": "public", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> into(Vertex<E> v)", "full_signature": "public Set<Vertex<E>> into(Vertex<E> v)", "class_method_signature": "DirectedGraph.into(Vertex<E> v)", "testcase": false, "constructor": false}, {"identifier": "into", "parameters": "(E vData)", "modifiers": "public", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> into(E vData)", "full_signature": "public Set<Vertex<E>> into(E vData)", "class_method_signature": "DirectedGraph.into(E vData)", "testcase": false, "constructor": false}, {"identifier": "getTopoSort", "parameters": "()", "modifiers": "public", "return": "Vector<Vertex<E>>", "signature": "Vector<Vertex<E>> getTopoSort()", "full_signature": "public Vector<Vertex<E>> getTopoSort()", "class_method_signature": "DirectedGraph.getTopoSort()", "testcase": false, "constructor": false}, {"identifier": "mergeSort", "parameters": "(Vector<Vertex<E>> merger, Vector<Vertex<E>> mergee)", "modifiers": "protected", "return": "void", "signature": "void mergeSort(Vector<Vertex<E>> merger, Vector<Vertex<E>> mergee)", "full_signature": "protected void mergeSort(Vector<Vertex<E>> merger, Vector<Vertex<E>> mergee)", "class_method_signature": "DirectedGraph.mergeSort(Vector<Vertex<E>> merger, Vector<Vertex<E>> mergee)", "testcase": false, "constructor": false}, {"identifier": "getVertices", "parameters": "()", "modifiers": "public final", "return": "Set<Vertex<E>>", "signature": "Set<Vertex<E>> getVertices()", "full_signature": "public final Set<Vertex<E>> getVertices()", "class_method_signature": "DirectedGraph.getVertices()", "testcase": false, "constructor": false}, {"identifier": "getEdges", "parameters": "()", "modifiers": "public final", "return": "Set<Edge<E, F>>", "signature": "Set<Edge<E, F>> getEdges()", "full_signature": "public final Set<Edge<E, F>> getEdges()", "class_method_signature": "DirectedGraph.getEdges()", "testcase": false, "constructor": false}], "file": "src/edu/ku/brc/specify/tasks/subpane/wb/graph/DirectedGraph.java"}, "focal_method": {"identifier": "topoSort", "parameters": "(final Vertex<E> v, Vector<Vertex<E>> visited)", "modifiers": "protected", "return": "void", "body": "protected void topoSort(final Vertex<E> v, Vector<Vertex<E>> visited)\n    {\n        for (Vertex<E> a : getAdjacentVertices(v))\n        {\n            if (!visited.contains(a))\n            {\n                topoSort(a, visited);\n            }\n        }\n        visited.insertElementAt(v, 0);\n    }", "signature": "void topoSort(final Vertex<E> v, Vector<Vertex<E>> visited)", "full_signature": "protected void topoSort(final Vertex<E> v, Vector<Vertex<E>> visited)", "class_method_signature": "DirectedGraph.topoSort(final Vertex<E> v, Vector<Vertex<E>> visited)", "testcase": false, "constructor": false, "invocations": ["getAdjacentVertices", "contains", "topoSort", "insertElementAt"]}, "repository": {"repo_id": 107740230, "url": "https://github.com/specify/specify6", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 420761, "license": "licensed"}}