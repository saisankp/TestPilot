{"test_class": {"identifier": "PermissionToRoleMapperFromStringTest", "superclass": "", "interfaces": "", "fields": [], "file": "security/shiro/src/test/java/org/apache/isis/security/shiro/permrolemapper/PermissionToRoleMapperFromStringTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n        final Map<String, Set<String>> permissionsByRole = new PermissionToRoleMapperFromString(\n                \"role1 = foo,bar;\"\n                        + \"role2 = fiz:x,bip:bop:* ;\"\n                        + \"role3 = *\").getPermissionsByRole();\n\n        assertThat(permissionsByRole.get(\"role1\"), is(equalTo((Set<String>)_Sets.of(\"foo\",\"bar\"))));\n        assertThat(permissionsByRole.get(\"role2\"), is(equalTo((Set<String>)_Sets.of(\"fiz:x\",\"bip:bop:*\"))));\n        assertThat(permissionsByRole.get(\"role3\"), is(equalTo((Set<String>)_Sets.of(\"*\"))));\n        assertThat(permissionsByRole.size(), is(3));\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "PermissionToRoleMapperFromStringTest.test()", "testcase": true, "constructor": false, "invocations": ["getPermissionsByRole", "assertThat", "get", "is", "equalTo", "of", "assertThat", "get", "is", "equalTo", "of", "assertThat", "get", "is", "equalTo", "of", "assertThat", "size", "is"]}, "focal_class": {"identifier": "PermissionToRoleMapperFromString", "superclass": "", "interfaces": "implements PermissionToRoleMapper", "fields": [{"original_string": "private final Map<String, Set<String>> permissionsByRole = _Maps.newLinkedHashMap();", "modifier": "private final", "type": "Map<String, Set<String>>", "declarator": "permissionsByRole = _Maps.newLinkedHashMap()", "var_name": "permissionsByRole"}], "methods": [{"identifier": "PermissionToRoleMapperFromString", "parameters": "(String permissionsByRoleStr)", "modifiers": "public", "return": "", "signature": " PermissionToRoleMapperFromString(String permissionsByRoleStr)", "full_signature": "public  PermissionToRoleMapperFromString(String permissionsByRoleStr)", "class_method_signature": "PermissionToRoleMapperFromString.PermissionToRoleMapperFromString(String permissionsByRoleStr)", "testcase": false, "constructor": true}, {"identifier": "getPermissionsByRole", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Set<String>>", "signature": "Map<String, Set<String>> getPermissionsByRole()", "full_signature": "@Override public Map<String, Set<String>> getPermissionsByRole()", "class_method_signature": "PermissionToRoleMapperFromString.getPermissionsByRole()", "testcase": false, "constructor": false}], "file": "security/shiro/src/main/java/org/apache/isis/security/shiro/permrolemapper/PermissionToRoleMapperFromString.java"}, "focal_method": {"identifier": "getPermissionsByRole", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Set<String>>", "body": "@Override\n    public Map<String, Set<String>> getPermissionsByRole() {\n        return permissionsByRole;\n    }", "signature": "Map<String, Set<String>> getPermissionsByRole()", "full_signature": "@Override public Map<String, Set<String>> getPermissionsByRole()", "class_method_signature": "PermissionToRoleMapperFromString.getPermissionsByRole()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6935442, "url": "https://github.com/apache/isis", "stars": 516, "created": "11/30/2012 8:00:24 AM +00:00", "updates": "2020-01-27T13:28:09+00:00", "fork": "False", "license": "licensed"}}