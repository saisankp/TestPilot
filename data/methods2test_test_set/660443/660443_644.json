{"test_class": {"identifier": "AbstractSubGraphTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static AbstractSubGraphTest algorithm = null;", "modifier": "private static", "type": "AbstractSubGraphTest", "declarator": "algorithm = null", "var_name": "algorithm"}], "file": "legacy/src/test/java/org/openscience/cdk/smsd/interfaces/AbstractSubGraphTest.java"}, "test_case": {"identifier": "testIsSubgraph", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsSubgraph() throws InvalidSmilesException {\n        SmilesParser sp = new SmilesParser(DefaultChemObjectBuilder.getInstance());\n        IAtomContainer target = sp.parseSmiles(\"C\\\\C=C/Nc1cccc(c1)N(O)\\\\C=C\\\\C\\\\C=C\\\\C=C/C\");\n        IAtomContainer queryac = sp.parseSmiles(\"Nc1ccccc1\");\n\n        VFlibSubStructureHandler smsd1 = new VFlibSubStructureHandler();\n        MolHandler mol1 = new MolHandler(queryac, true, true);\n        MolHandler mol2 = new MolHandler(target, true, true);\n        smsd1.set(mol1, mol2);\n        assertEquals(true, smsd1.isSubgraph(true));\n    }", "signature": "void testIsSubgraph()", "full_signature": "@Test public void testIsSubgraph()", "class_method_signature": "AbstractSubGraphTest.testIsSubgraph()", "testcase": true, "constructor": false, "invocations": ["getInstance", "parseSmiles", "parseSmiles", "set", "assertEquals", "isSubgraph"]}, "focal_class": {"identifier": "AbstractSubGraph", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isSubgraph", "parameters": "(boolean bondMatch)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isSubgraph(boolean bondMatch)", "full_signature": "public abstract boolean isSubgraph(boolean bondMatch)", "class_method_signature": "AbstractSubGraph.isSubgraph(boolean bondMatch)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/smsd/interfaces/AbstractSubGraph.java"}, "focal_method": {"identifier": "isSubgraph", "parameters": "(boolean bondMatch)", "modifiers": "public abstract", "return": "boolean", "body": "public abstract boolean isSubgraph(boolean bondMatch);", "signature": "boolean isSubgraph(boolean bondMatch)", "full_signature": "public abstract boolean isSubgraph(boolean bondMatch)", "class_method_signature": "AbstractSubGraph.isSubgraph(boolean bondMatch)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}