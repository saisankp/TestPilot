{"test_class": {"identifier": "BaseLocaleUrlDefinitionDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int SLEEP_MILLIS = 2000;", "modifier": "private static final", "type": "int", "declarator": "SLEEP_MILLIS = 2000", "var_name": "SLEEP_MILLIS"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private BaseLocaleUrlDefinitionDAO dao;", "modifier": "private", "type": "BaseLocaleUrlDefinitionDAO", "declarator": "dao", "var_name": "dao"}, {"original_string": "private MutableApplicationResource resource;", "modifier": "private", "type": "MutableApplicationResource", "declarator": "resource", "var_name": "resource"}], "file": "tiles-core/src/test/java/org/apache/tiles/definition/dao/BaseLocaleUrlDefinitionDAOTest.java"}, "test_case": {"identifier": "testRefreshRequired", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRefreshRequired() throws URISyntaxException, IOException, InterruptedException {\n        // Set up multiple data sources.\n        Map<String, Attribute> attribs = new HashMap<String, Attribute>();\n        attribs.put(\"testparm\", new Attribute(\"testval\"));\n        Definition rewriteTest = new Definition(\"rewrite.test\", Attribute.createTemplateAttribute(\"/test.jsp\"), attribs);\n        expect(dao.getDefinition(\"rewrite.test\", null)).andReturn(rewriteTest);\n\n        replay(dao);\n\n        List<ApplicationResource> sources = new ArrayList<ApplicationResource>();\n        sources.add(resource);\n        dao.setSources(sources);\n        DefinitionsReader reader = new DigesterDefinitionsReader();\n        dao.setReader(reader);\n\n        Request context = createMock(Request.class);\n        expect(context.getContext(\"session\")).andReturn(new HashMap<String, Object>()).anyTimes();\n        expect(context.getRequestLocale()).andReturn(null).anyTimes();\n        replay(context);\n\n        Definition definition = dao.getDefinition(\"rewrite.test\", null);\n        assertNotNull(\"rewrite.test definition not found.\", definition);\n        assertEquals(\"Incorrect initial template value\", \"/test.jsp\", definition.getTemplateAttribute().getValue());\n\n        RefreshMonitor reloadable = dao;\n        dao.loadDefinitionsFromResource(resource);\n        assertEquals(\"Factory should be fresh.\", false, reloadable.refreshRequired());\n\n        // Make sure the system actually updates the timestamp.\n        Thread.sleep(SLEEP_MILLIS);\n\n        // Set up multiple data sources.\n        resource.modify(\"<?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\" ?>\\n\" + \"<!DOCTYPE tiles-definitions PUBLIC \"\n                + \"\\\"-//Apache Software Foundation//DTD Tiles Configuration 3.0//EN\\\" \"\n                + \"\\\"http://tiles.apache.org/dtds/tiles-config_3_0.dtd\\\">\\n\\n\" + \"<tiles-definitions>\"\n                + \"<definition name=\\\"rewrite.test\\\" template=\\\"/newtest.jsp\\\">\"\n                + \"<put-attribute name=\\\"testparm\\\" value=\\\"testval\\\"/>\" + \"</definition>\" //\n                + \"</tiles-definitions>\");\n\n        assertEquals(\"Factory should be stale.\", true, reloadable.refreshRequired());\n\n        verify(context, dao);\n    }", "signature": "void testRefreshRequired()", "full_signature": "@Test public void testRefreshRequired()", "class_method_signature": "BaseLocaleUrlDefinitionDAOTest.testRefreshRequired()", "testcase": true, "constructor": false, "invocations": ["put", "createTemplateAttribute", "andReturn", "expect", "getDefinition", "replay", "add", "setSources", "setReader", "createMock", "anyTimes", "andReturn", "expect", "getContext", "anyTimes", "andReturn", "expect", "getRequestLocale", "replay", "getDefinition", "assertNotNull", "assertEquals", "getValue", "getTemplateAttribute", "loadDefinitionsFromResource", "assertEquals", "refreshRequired", "sleep", "modify", "assertEquals", "refreshRequired", "verify"]}, "focal_class": {"identifier": "BaseLocaleUrlDefinitionDAO", "superclass": "", "interfaces": "implements\n        DefinitionDAO<Locale>, RefreshMonitor", "fields": [{"original_string": "private final Logger log = LoggerFactory\n            .getLogger(BaseLocaleUrlDefinitionDAO.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory\n            .getLogger(BaseLocaleUrlDefinitionDAO.class)", "var_name": "log"}, {"original_string": "protected List<ApplicationResource> sources;", "modifier": "protected", "type": "List<ApplicationResource>", "declarator": "sources", "var_name": "sources"}, {"original_string": "protected Map<String, Long> lastModifiedDates;", "modifier": "protected", "type": "Map<String, Long>", "declarator": "lastModifiedDates", "var_name": "lastModifiedDates"}, {"original_string": "protected DefinitionsReader reader;", "modifier": "protected", "type": "DefinitionsReader", "declarator": "reader", "var_name": "reader"}, {"original_string": "protected ApplicationContext applicationContext;", "modifier": "protected", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}], "methods": [{"identifier": "BaseLocaleUrlDefinitionDAO", "parameters": "(ApplicationContext applicationContext)", "modifiers": "public", "return": "", "signature": " BaseLocaleUrlDefinitionDAO(ApplicationContext applicationContext)", "full_signature": "public  BaseLocaleUrlDefinitionDAO(ApplicationContext applicationContext)", "class_method_signature": "BaseLocaleUrlDefinitionDAO.BaseLocaleUrlDefinitionDAO(ApplicationContext applicationContext)", "testcase": false, "constructor": true}, {"identifier": "setSources", "parameters": "(List<ApplicationResource> sources)", "modifiers": "public", "return": "void", "signature": "void setSources(List<ApplicationResource> sources)", "full_signature": "public void setSources(List<ApplicationResource> sources)", "class_method_signature": "BaseLocaleUrlDefinitionDAO.setSources(List<ApplicationResource> sources)", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(DefinitionsReader reader)", "modifiers": "public", "return": "void", "signature": "void setReader(DefinitionsReader reader)", "full_signature": "public void setReader(DefinitionsReader reader)", "class_method_signature": "BaseLocaleUrlDefinitionDAO.setReader(DefinitionsReader reader)", "testcase": false, "constructor": false}, {"identifier": "refreshRequired", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean refreshRequired()", "full_signature": "public boolean refreshRequired()", "class_method_signature": "BaseLocaleUrlDefinitionDAO.refreshRequired()", "testcase": false, "constructor": false}, {"identifier": "loadDefinitionsFromResource", "parameters": "(ApplicationResource resource)", "modifiers": "protected", "return": "Map<String, Definition>", "signature": "Map<String, Definition> loadDefinitionsFromResource(ApplicationResource resource)", "full_signature": "protected Map<String, Definition> loadDefinitionsFromResource(ApplicationResource resource)", "class_method_signature": "BaseLocaleUrlDefinitionDAO.loadDefinitionsFromResource(ApplicationResource resource)", "testcase": false, "constructor": false}], "file": "tiles-core/src/main/java/org/apache/tiles/definition/dao/BaseLocaleUrlDefinitionDAO.java"}, "focal_method": {"identifier": "refreshRequired", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean refreshRequired() {\n        boolean status = false;\n\n        Set<String> paths = lastModifiedDates.keySet();\n\n        try {\n            for (String path : paths) {\n                Long lastModifiedDate = lastModifiedDates.get(path);\n                ApplicationResource resource = applicationContext.getResource(path);\n                long newModDate = resource.getLastModified();\n                if (newModDate != lastModifiedDate) {\n                    status = true;\n                    break;\n                }\n            }\n        } catch (IOException e) {\n            log.warn(\"Exception while monitoring update times.\", e);\n            return true;\n        }\n        return status;\n    }", "signature": "boolean refreshRequired()", "full_signature": "public boolean refreshRequired()", "class_method_signature": "BaseLocaleUrlDefinitionDAO.refreshRequired()", "testcase": false, "constructor": false, "invocations": ["keySet", "get", "getResource", "getLastModified", "warn"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}