{"test_class": {"identifier": "ServerConfigurationTest", "superclass": "", "interfaces": "", "fields": [], "file": "outland-feature-java/src/test/java/outland/feature/ServerConfigurationTest.java"}, "test_case": {"identifier": "testConfigurationNamespace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConfigurationNamespace() throws Exception {\n    ServerConfiguration configuration = new ServerConfiguration();\n    assertEquals(ServerConfiguration.DEFAULT_NAMESPACE, configuration.namespace());\n\n    configuration.namespace(\"production\");\n    assertEquals(\"production\", configuration.namespace());\n  }", "signature": "void testConfigurationNamespace()", "full_signature": "@Test public void testConfigurationNamespace()", "class_method_signature": "ServerConfigurationTest.testConfigurationNamespace()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "namespace", "namespace", "assertEquals", "namespace"]}, "focal_class": {"identifier": "ServerConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final long MAX_CACHE_SIZE = 2048L;", "modifier": "public static final", "type": "long", "declarator": "MAX_CACHE_SIZE = 2048L", "var_name": "MAX_CACHE_SIZE"}, {"original_string": "public static final int INITIAL_CAPACITY = 50;", "modifier": "public static final", "type": "int", "declarator": "INITIAL_CAPACITY = 50", "var_name": "INITIAL_CAPACITY"}, {"original_string": "public static final int REFRESH_AFTER_WRITE_S = 8;", "modifier": "public static final", "type": "int", "declarator": "REFRESH_AFTER_WRITE_S = 8", "var_name": "REFRESH_AFTER_WRITE_S"}, {"original_string": "@VisibleForTesting\n  static final String DEFAULT_NAMESPACE = \"*\";", "modifier": "@VisibleForTesting\n  static final", "type": "String", "declarator": "DEFAULT_NAMESPACE = \"*\"", "var_name": "DEFAULT_NAMESPACE"}, {"original_string": "private URI baseURI;", "modifier": "private", "type": "URI", "declarator": "baseURI", "var_name": "baseURI"}, {"original_string": "private String defaultGroup;", "modifier": "private", "type": "String", "declarator": "defaultGroup", "var_name": "defaultGroup"}, {"original_string": "private long connectTimeout = 5_000L;", "modifier": "private", "type": "long", "declarator": "connectTimeout = 5_000L", "var_name": "connectTimeout"}, {"original_string": "private long readTimeout = 3_000L;", "modifier": "private", "type": "long", "declarator": "readTimeout = 3_000L", "var_name": "readTimeout"}, {"original_string": "private boolean httpLoggingEnabled;", "modifier": "private", "type": "boolean", "declarator": "httpLoggingEnabled", "var_name": "httpLoggingEnabled"}, {"original_string": "private boolean localStoreEnabled = true;", "modifier": "private", "type": "boolean", "declarator": "localStoreEnabled = true", "var_name": "localStoreEnabled"}, {"original_string": "private String certificatePath;", "modifier": "private", "type": "String", "declarator": "certificatePath", "var_name": "certificatePath"}, {"original_string": "private long maxCacheSize = MAX_CACHE_SIZE;", "modifier": "private", "type": "long", "declarator": "maxCacheSize = MAX_CACHE_SIZE", "var_name": "maxCacheSize"}, {"original_string": "private int initialCacheSize = INITIAL_CAPACITY;", "modifier": "private", "type": "int", "declarator": "initialCacheSize = INITIAL_CAPACITY", "var_name": "initialCacheSize"}, {"original_string": "private long refreshCacheAfterWrite = REFRESH_AFTER_WRITE_S;", "modifier": "private", "type": "long", "declarator": "refreshCacheAfterWrite = REFRESH_AFTER_WRITE_S", "var_name": "refreshCacheAfterWrite"}, {"original_string": "private String namespace = DEFAULT_NAMESPACE;", "modifier": "private", "type": "String", "declarator": "namespace = DEFAULT_NAMESPACE", "var_name": "namespace"}], "methods": [{"identifier": "baseURI", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI baseURI()", "full_signature": "public URI baseURI()", "class_method_signature": "ServerConfiguration.baseURI()", "testcase": false, "constructor": false}, {"identifier": "baseURI", "parameters": "(String baseURI)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration baseURI(String baseURI)", "full_signature": "public ServerConfiguration baseURI(String baseURI)", "class_method_signature": "ServerConfiguration.baseURI(String baseURI)", "testcase": false, "constructor": false}, {"identifier": "baseURI", "parameters": "(URI baseURI)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration baseURI(URI baseURI)", "full_signature": "public ServerConfiguration baseURI(URI baseURI)", "class_method_signature": "ServerConfiguration.baseURI(URI baseURI)", "testcase": false, "constructor": false}, {"identifier": "connectTimeout", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long connectTimeout()", "full_signature": "public long connectTimeout()", "class_method_signature": "ServerConfiguration.connectTimeout()", "testcase": false, "constructor": false}, {"identifier": "connectTimeout", "parameters": "(long connectTimeout, TimeUnit unit)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration connectTimeout(long connectTimeout, TimeUnit unit)", "full_signature": "public ServerConfiguration connectTimeout(long connectTimeout, TimeUnit unit)", "class_method_signature": "ServerConfiguration.connectTimeout(long connectTimeout, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "readTimeout", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long readTimeout()", "full_signature": "public long readTimeout()", "class_method_signature": "ServerConfiguration.readTimeout()", "testcase": false, "constructor": false}, {"identifier": "readTimeout", "parameters": "(long readTimeout, TimeUnit unit)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration readTimeout(long readTimeout, TimeUnit unit)", "full_signature": "public ServerConfiguration readTimeout(long readTimeout, TimeUnit unit)", "class_method_signature": "ServerConfiguration.readTimeout(long readTimeout, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "certificatePath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String certificatePath()", "full_signature": "public String certificatePath()", "class_method_signature": "ServerConfiguration.certificatePath()", "testcase": false, "constructor": false}, {"identifier": "certificatePath", "parameters": "(String certificatePath)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration certificatePath(String certificatePath)", "full_signature": "public ServerConfiguration certificatePath(String certificatePath)", "class_method_signature": "ServerConfiguration.certificatePath(String certificatePath)", "testcase": false, "constructor": false}, {"identifier": "defaultGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String defaultGroup()", "full_signature": "public String defaultGroup()", "class_method_signature": "ServerConfiguration.defaultGroup()", "testcase": false, "constructor": false}, {"identifier": "defaultGroup", "parameters": "(String defaultGroup)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration defaultGroup(String defaultGroup)", "full_signature": "public ServerConfiguration defaultGroup(String defaultGroup)", "class_method_signature": "ServerConfiguration.defaultGroup(String defaultGroup)", "testcase": false, "constructor": false}, {"identifier": "namespace", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String namespace()", "full_signature": "public String namespace()", "class_method_signature": "ServerConfiguration.namespace()", "testcase": false, "constructor": false}, {"identifier": "namespace", "parameters": "(String namespace)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration namespace(String namespace)", "full_signature": "public ServerConfiguration namespace(String namespace)", "class_method_signature": "ServerConfiguration.namespace(String namespace)", "testcase": false, "constructor": false}, {"identifier": "httpLoggingEnabled", "parameters": "(boolean httpLoggingEnabled)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration httpLoggingEnabled(boolean httpLoggingEnabled)", "full_signature": "public ServerConfiguration httpLoggingEnabled(boolean httpLoggingEnabled)", "class_method_signature": "ServerConfiguration.httpLoggingEnabled(boolean httpLoggingEnabled)", "testcase": false, "constructor": false}, {"identifier": "httpLoggingEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean httpLoggingEnabled()", "full_signature": "public boolean httpLoggingEnabled()", "class_method_signature": "ServerConfiguration.httpLoggingEnabled()", "testcase": false, "constructor": false}, {"identifier": "localStoreEnabled", "parameters": "(boolean localStoreEnabled)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration localStoreEnabled(boolean localStoreEnabled)", "full_signature": "public ServerConfiguration localStoreEnabled(boolean localStoreEnabled)", "class_method_signature": "ServerConfiguration.localStoreEnabled(boolean localStoreEnabled)", "testcase": false, "constructor": false}, {"identifier": "maxCacheSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long maxCacheSize()", "full_signature": "public long maxCacheSize()", "class_method_signature": "ServerConfiguration.maxCacheSize()", "testcase": false, "constructor": false}, {"identifier": "maxCacheSize", "parameters": "(long maxCacheSize)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration maxCacheSize(long maxCacheSize)", "full_signature": "public ServerConfiguration maxCacheSize(long maxCacheSize)", "class_method_signature": "ServerConfiguration.maxCacheSize(long maxCacheSize)", "testcase": false, "constructor": false}, {"identifier": "initialCacheSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int initialCacheSize()", "full_signature": "public int initialCacheSize()", "class_method_signature": "ServerConfiguration.initialCacheSize()", "testcase": false, "constructor": false}, {"identifier": "initialCacheSize", "parameters": "(int initialCacheSize)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration initialCacheSize(int initialCacheSize)", "full_signature": "public ServerConfiguration initialCacheSize(int initialCacheSize)", "class_method_signature": "ServerConfiguration.initialCacheSize(int initialCacheSize)", "testcase": false, "constructor": false}, {"identifier": "refreshCacheAfterWriteSeconds", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long refreshCacheAfterWriteSeconds()", "full_signature": "public long refreshCacheAfterWriteSeconds()", "class_method_signature": "ServerConfiguration.refreshCacheAfterWriteSeconds()", "testcase": false, "constructor": false}, {"identifier": "refreshCacheAfterWrite", "parameters": "(long refreshCacheAfterWrite, TimeUnit unit)", "modifiers": "public", "return": "ServerConfiguration", "signature": "ServerConfiguration refreshCacheAfterWrite(long refreshCacheAfterWrite, TimeUnit unit)", "full_signature": "public ServerConfiguration refreshCacheAfterWrite(long refreshCacheAfterWrite, TimeUnit unit)", "class_method_signature": "ServerConfiguration.refreshCacheAfterWrite(long refreshCacheAfterWrite, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "localStoreEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean localStoreEnabled()", "full_signature": "public boolean localStoreEnabled()", "class_method_signature": "ServerConfiguration.localStoreEnabled()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "", "return": "void", "signature": "void validate()", "full_signature": " void validate()", "class_method_signature": "ServerConfiguration.validate()", "testcase": false, "constructor": false}], "file": "outland-feature-java/src/main/java/outland/feature/ServerConfiguration.java"}, "focal_method": {"identifier": "namespace", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String namespace() {\n    return namespace;\n  }", "signature": "String namespace()", "full_signature": "public String namespace()", "class_method_signature": "ServerConfiguration.namespace()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 83838306, "url": "https://github.com/dehora/outland", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 944, "license": "licensed"}}