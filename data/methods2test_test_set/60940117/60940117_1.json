{"test_class": {"identifier": "InMemoryRateLimiterFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InMemoryRateLimiterFactory factory = new InMemoryRateLimiterFactory();", "modifier": "private", "type": "InMemoryRateLimiterFactory", "declarator": "factory = new InMemoryRateLimiterFactory()", "var_name": "factory"}], "file": "ratelimitj-inmemory/src/test/java/es/moki/ratelimitj/inmemory/InMemoryRateLimiterFactoryTest.java"}, "test_case": {"identifier": "shouldReturnTheSameInstanceForSameSetOfRules", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldReturnTheSameInstanceForSameSetOfRules() {\n\n        RequestLimitRule rule1a = RequestLimitRule.of(Duration.ofMinutes(1), 10);\n        RequestLimitRule rule1b = RequestLimitRule.of(Duration.ofHours(1), 100);\n        RequestRateLimiter rateLimiter1 = factory.getInstance(ImmutableSet.of(rule1a, rule1b));\n\n        RequestLimitRule rule2a = RequestLimitRule.of(Duration.ofMinutes(1), 10);\n        RequestLimitRule rule2b = RequestLimitRule.of(Duration.ofHours(1), 100);\n        RequestRateLimiter rateLimiter2 = factory.getInstance(ImmutableSet.of(rule2a, rule2b));\n\n        assertThat(rateLimiter1).isSameAs(rateLimiter2);\n    }", "signature": "void shouldReturnTheSameInstanceForSameSetOfRules()", "full_signature": "@Test void shouldReturnTheSameInstanceForSameSetOfRules()", "class_method_signature": "InMemoryRateLimiterFactoryTest.shouldReturnTheSameInstanceForSameSetOfRules()", "testcase": true, "constructor": false, "invocations": ["of", "ofMinutes", "of", "ofHours", "getInstance", "of", "of", "ofMinutes", "of", "ofHours", "getInstance", "of", "isSameAs", "assertThat"]}, "focal_class": {"identifier": "InMemoryRateLimiterFactory", "superclass": "extends AbstractRequestRateLimiterFactory<InMemorySlidingWindowRequestRateLimiter>", "interfaces": "", "fields": [], "methods": [{"identifier": "getInstance", "parameters": "(Set<RequestLimitRule> rules)", "modifiers": "@Override public", "return": "RequestRateLimiter", "signature": "RequestRateLimiter getInstance(Set<RequestLimitRule> rules)", "full_signature": "@Override public RequestRateLimiter getInstance(Set<RequestLimitRule> rules)", "class_method_signature": "InMemoryRateLimiterFactory.getInstance(Set<RequestLimitRule> rules)", "testcase": false, "constructor": false}, {"identifier": "getInstanceReactive", "parameters": "(Set<RequestLimitRule> rules)", "modifiers": "@Override public", "return": "ReactiveRequestRateLimiter", "signature": "ReactiveRequestRateLimiter getInstanceReactive(Set<RequestLimitRule> rules)", "full_signature": "@Override public ReactiveRequestRateLimiter getInstanceReactive(Set<RequestLimitRule> rules)", "class_method_signature": "InMemoryRateLimiterFactory.getInstanceReactive(Set<RequestLimitRule> rules)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Set<RequestLimitRule> rules)", "modifiers": "@Override protected", "return": "InMemorySlidingWindowRequestRateLimiter", "signature": "InMemorySlidingWindowRequestRateLimiter create(Set<RequestLimitRule> rules)", "full_signature": "@Override protected InMemorySlidingWindowRequestRateLimiter create(Set<RequestLimitRule> rules)", "class_method_signature": "InMemoryRateLimiterFactory.create(Set<RequestLimitRule> rules)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "InMemoryRateLimiterFactory.close()", "testcase": false, "constructor": false}], "file": "ratelimitj-inmemory/src/main/java/es/moki/ratelimitj/inmemory/InMemoryRateLimiterFactory.java"}, "focal_method": {"identifier": "getInstance", "parameters": "(Set<RequestLimitRule> rules)", "modifiers": "@Override public", "return": "RequestRateLimiter", "body": "@Override\n    public RequestRateLimiter getInstance(Set<RequestLimitRule> rules) {\n        requireNonNull(rules);\n        return lookupInstance(rules);\n    }", "signature": "RequestRateLimiter getInstance(Set<RequestLimitRule> rules)", "full_signature": "@Override public RequestRateLimiter getInstance(Set<RequestLimitRule> rules)", "class_method_signature": "InMemoryRateLimiterFactory.getInstance(Set<RequestLimitRule> rules)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "lookupInstance"]}, "repository": {"repo_id": 60940117, "url": "https://github.com/mokies/ratelimitj", "stars": 284, "created": "6/12/2016 3:27:46 AM +00:00", "updates": "2020-01-21T19:53:03+00:00", "fork": "False", "license": "licensed"}}