{"test_class": {"identifier": "DetailedStatisticsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DetailedStatistics<Integer> intStats = new DetailedStatistics<Integer>(new IntegerOperations());", "modifier": "private", "type": "DetailedStatistics<Integer>", "declarator": "intStats = new DetailedStatistics<Integer>(new IntegerOperations())", "var_name": "intStats"}, {"original_string": "private DetailedStatistics<Float> floatStats = new DetailedStatistics<Float>(new FloatOperations());", "modifier": "private", "type": "DetailedStatistics<Float>", "declarator": "floatStats = new DetailedStatistics<Float>(new FloatOperations())", "var_name": "floatStats"}, {"original_string": "private Logger logger = Logger.getLogger(DetailedStatisticsTest.class);", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.getLogger(DetailedStatisticsTest.class)", "var_name": "logger"}], "file": "modeshape-common/src/test/java/org/modeshape/common/statistic/DetailedStatisticsTest.java"}, "test_case": {"identifier": "shouldHaveStringRepresentationWithStatisticsForMultipleSample", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldHaveStringRepresentationWithStatisticsForMultipleSample() {\n        this.intStats.add(19);\n        this.intStats.add(10);\n        this.intStats.add(20);\n        String str = this.intStats.toString();\n        System.out.println(str);\n        assertTrue(str.matches(\"^\\\\d{1,5}.*\"));\n        assertTrue(str.matches(\".*3 samples.*\"));\n        assertTrue(str.matches(\".*min=\\\\d{1,5}.*\"));\n        assertTrue(str.matches(\".*max=\\\\d{1,5}.*\"));\n        assertTrue(str.matches(\".*avg=\\\\d{1,5}.*\"));\n        assertTrue(str.matches(\".*stddev=\\\\d{1,5}.*\"));\n        assertTrue(str.matches(\".*median=\\\\d{1,5}.*\"));\n    }", "signature": "void shouldHaveStringRepresentationWithStatisticsForMultipleSample()", "full_signature": "@Test public void shouldHaveStringRepresentationWithStatisticsForMultipleSample()", "class_method_signature": "DetailedStatisticsTest.shouldHaveStringRepresentationWithStatisticsForMultipleSample()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "toString", "println", "assertTrue", "matches", "assertTrue", "matches", "assertTrue", "matches", "assertTrue", "matches", "assertTrue", "matches", "assertTrue", "matches", "assertTrue", "matches"]}, "focal_class": {"identifier": "DetailedStatistics", "superclass": "extends SimpleStatistics<T>", "interfaces": "", "fields": [{"original_string": "private T median;", "modifier": "private", "type": "T", "declarator": "median", "var_name": "median"}, {"original_string": "private Double medianValue;", "modifier": "private", "type": "Double", "declarator": "medianValue", "var_name": "medianValue"}, {"original_string": "private double s = 0.0d;", "modifier": "private", "type": "double", "declarator": "s = 0.0d", "var_name": "s"}, {"original_string": "private double sigma = 0.0d;", "modifier": "private", "type": "double", "declarator": "sigma = 0.0d", "var_name": "sigma"}, {"original_string": "private final List<T> values = new LinkedList<T>();", "modifier": "private final", "type": "List<T>", "declarator": "values = new LinkedList<T>()", "var_name": "values"}, {"original_string": "private final List<T> unmodifiableValues = Collections.unmodifiableList(this.values);", "modifier": "private final", "type": "List<T>", "declarator": "unmodifiableValues = Collections.unmodifiableList(this.values)", "var_name": "unmodifiableValues"}, {"original_string": "private Histogram<T> histogram;", "modifier": "private", "type": "Histogram<T>", "declarator": "histogram", "var_name": "histogram"}], "methods": [{"identifier": "DetailedStatistics", "parameters": "( MathOperations<T> operations )", "modifiers": "public", "return": "", "signature": " DetailedStatistics( MathOperations<T> operations )", "full_signature": "public  DetailedStatistics( MathOperations<T> operations )", "class_method_signature": "DetailedStatistics.DetailedStatistics( MathOperations<T> operations )", "testcase": false, "constructor": true}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "List<T>", "signature": "List<T> getValues()", "full_signature": "public List<T> getValues()", "class_method_signature": "DetailedStatistics.getValues()", "testcase": false, "constructor": false}, {"identifier": "doAddValue", "parameters": "( T value )", "modifiers": "@Override protected", "return": "void", "signature": "void doAddValue( T value )", "full_signature": "@Override protected void doAddValue( T value )", "class_method_signature": "DetailedStatistics.doAddValue( T value )", "testcase": false, "constructor": false}, {"identifier": "getMedian", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T getMedian()", "full_signature": "public T getMedian()", "class_method_signature": "DetailedStatistics.getMedian()", "testcase": false, "constructor": false}, {"identifier": "getMedianValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMedianValue()", "full_signature": "public double getMedianValue()", "class_method_signature": "DetailedStatistics.getMedianValue()", "testcase": false, "constructor": false}, {"identifier": "getStandardDeviation", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getStandardDeviation()", "full_signature": "public double getStandardDeviation()", "class_method_signature": "DetailedStatistics.getStandardDeviation()", "testcase": false, "constructor": false}, {"identifier": "getHistogram", "parameters": "()", "modifiers": "public", "return": "Histogram<T>", "signature": "Histogram<T> getHistogram()", "full_signature": "public Histogram<T> getHistogram()", "class_method_signature": "DetailedStatistics.getHistogram()", "testcase": false, "constructor": false}, {"identifier": "getHistogram", "parameters": "( int numSigmas )", "modifiers": "public", "return": "Histogram<T>", "signature": "Histogram<T> getHistogram( int numSigmas )", "full_signature": "public Histogram<T> getHistogram( int numSigmas )", "class_method_signature": "DetailedStatistics.getHistogram( int numSigmas )", "testcase": false, "constructor": false}, {"identifier": "doReset", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void doReset()", "full_signature": "@Override protected void doReset()", "class_method_signature": "DetailedStatistics.doReset()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DetailedStatistics.toString()", "testcase": false, "constructor": false}], "file": "modeshape-common/src/main/java/org/modeshape/common/statistic/DetailedStatistics.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        int count = this.getCount();\n        String samples = Inflector.getInstance().pluralize(\"sample\", count);\n        return StringUtil.createString(\"{0} {1}: min={2}; avg={3}; median={4}; stddev={5}; max={6}\", count, samples, this.getMinimum(), this.getMean(), this.getMedian(), this.getStandardDeviation(),\n                                       this.getMaximum());\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DetailedStatistics.toString()", "testcase": false, "constructor": false, "invocations": ["getCount", "pluralize", "getInstance", "createString", "getMinimum", "getMean", "getMedian", "getStandardDeviation", "getMaximum"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}