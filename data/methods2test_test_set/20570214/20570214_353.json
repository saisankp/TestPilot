{"test_class": {"identifier": "RsaKemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Charset UTF_8 = Charset.forName(\"UTF-8\");", "modifier": "private static final", "type": "Charset", "declarator": "UTF_8 = Charset.forName(\"UTF-8\")", "var_name": "UTF_8"}], "file": "java_src/src/test/java/com/google/crypto/tink/hybrid/subtle/RsaKemTest.java"}, "test_case": {"identifier": "bigIntToByteArray_withALeadingZero", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void bigIntToByteArray_withALeadingZero() throws Exception {\n    int expectedSize = 2048;\n    BigInteger bigIntWithALeadingZero;\n    while (true) {\n      bigIntWithALeadingZero = new BigInteger(2048, new Random());\n      byte[] r = bigIntWithALeadingZero.toByteArray();\n      if (r[0] == 0) {\n        break;\n      }\n    }\n\n    byte[] modBytes = RsaKem.bigIntToByteArray(bigIntWithALeadingZero, expectedSize);\n    assertThat(modBytes).hasLength(expectedSize);\n    assertThat(new BigInteger(1, modBytes)).isEqualTo(bigIntWithALeadingZero);\n  }", "signature": "void bigIntToByteArray_withALeadingZero()", "full_signature": "@Test public void bigIntToByteArray_withALeadingZero()", "class_method_signature": "RsaKemTest.bigIntToByteArray_withALeadingZero()", "testcase": true, "constructor": false, "invocations": ["toByteArray", "bigIntToByteArray", "hasLength", "assertThat", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "RsaKem", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final byte[] EMPTY_AAD = new byte[0];", "modifier": "static final", "type": "byte[]", "declarator": "EMPTY_AAD = new byte[0]", "var_name": "EMPTY_AAD"}, {"original_string": "static final int MIN_RSA_KEY_LENGTH_BITS = 2048;", "modifier": "static final", "type": "int", "declarator": "MIN_RSA_KEY_LENGTH_BITS = 2048", "var_name": "MIN_RSA_KEY_LENGTH_BITS"}], "methods": [{"identifier": "RsaKem", "parameters": "()", "modifiers": "private", "return": "", "signature": " RsaKem()", "full_signature": "private  RsaKem()", "class_method_signature": "RsaKem.RsaKem()", "testcase": false, "constructor": true}, {"identifier": "validateRsaModulus", "parameters": "(BigInteger mod)", "modifiers": "static", "return": "void", "signature": "void validateRsaModulus(BigInteger mod)", "full_signature": "static void validateRsaModulus(BigInteger mod)", "class_method_signature": "RsaKem.validateRsaModulus(BigInteger mod)", "testcase": false, "constructor": false}, {"identifier": "bigIntSizeInBytes", "parameters": "(BigInteger mod)", "modifiers": "static", "return": "int", "signature": "int bigIntSizeInBytes(BigInteger mod)", "full_signature": "static int bigIntSizeInBytes(BigInteger mod)", "class_method_signature": "RsaKem.bigIntSizeInBytes(BigInteger mod)", "testcase": false, "constructor": false}, {"identifier": "bigIntToByteArray", "parameters": "(BigInteger bigInt, int size)", "modifiers": "static", "return": "byte[]", "signature": "byte[] bigIntToByteArray(BigInteger bigInt, int size)", "full_signature": "static byte[] bigIntToByteArray(BigInteger bigInt, int size)", "class_method_signature": "RsaKem.bigIntToByteArray(BigInteger bigInt, int size)", "testcase": false, "constructor": false}, {"identifier": "generateSecret", "parameters": "(BigInteger max)", "modifiers": "static", "return": "byte[]", "signature": "byte[] generateSecret(BigInteger max)", "full_signature": "static byte[] generateSecret(BigInteger max)", "class_method_signature": "RsaKem.generateSecret(BigInteger max)", "testcase": false, "constructor": false}, {"identifier": "generateRsaKeyPair", "parameters": "(int keySize)", "modifiers": "static", "return": "KeyPair", "signature": "KeyPair generateRsaKeyPair(int keySize)", "full_signature": "static KeyPair generateRsaKeyPair(int keySize)", "class_method_signature": "RsaKem.generateRsaKeyPair(int keySize)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/hybrid/subtle/RsaKem.java"}, "focal_method": {"identifier": "bigIntToByteArray", "parameters": "(BigInteger bigInt, int size)", "modifiers": "static", "return": "byte[]", "body": "static byte[] bigIntToByteArray(BigInteger bigInt, int size) {\n    byte[] value = bigInt.toByteArray();\n    if (value.length == size) {\n      return value;\n    }\n\n    byte[] result = new byte[size];\n    if (value.length == result.length + 1) {\n      if (value[0] != 0) {\n        throw new IllegalArgumentException(\n            \"Value is one-byte longer than the expected size, but its first byte is not 0\");\n      }\n      System.arraycopy(value, 1, result, 0, result.length);\n    } else if (value.length < result.length) {\n      System.arraycopy(value, 0, result, result.length - value.length, value.length);\n    } else {\n      throw new IllegalArgumentException(\n          String.format(\n              \"Value has invalid length, must be of length at most (%d + 1), but\" + \" got %d\",\n              size, value.length));\n    }\n    return result;\n  }", "signature": "byte[] bigIntToByteArray(BigInteger bigInt, int size)", "full_signature": "static byte[] bigIntToByteArray(BigInteger bigInt, int size)", "class_method_signature": "RsaKem.bigIntToByteArray(BigInteger bigInt, int size)", "testcase": false, "constructor": false, "invocations": ["toByteArray", "arraycopy", "arraycopy", "format"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}