{"test_class": {"identifier": "NotificationSoundDecoratorTest", "superclass": "extends BaseNotificationDecoratorTest<NotificationSoundDecorator>", "interfaces": "", "fields": [], "file": "sdk-libs/halo-notifications/src/test/java/com/mobgen/halo/android/notifications/decorator/NotificationSoundDecoratorTest.java"}, "test_case": {"identifier": "defaultSoundTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultSoundTest() {\n        final boolean[] marker = new boolean[1];\n        Bundle bundle = BundleTestUtils.builder().putString(\"sound\", \"default\").build();\n        when(getBuilder().setSound(any(Uri.class))).then(new Answer<Object>() {\n            @Override\n            public Object answer(InvocationOnMock invocation) throws Throwable {\n                marker[0] = true;\n                Assert.assertEquals(Uri.parse(\"content://settings/system/notification_sound\"), invocation.getArguments()[0]);\n                return null;\n            }\n        });\n        getDecorator().decorate(getBuilder(), bundle);\n        Assert.assertTrue(marker[0]);\n    }", "signature": "void defaultSoundTest()", "full_signature": "@Test public void defaultSoundTest()", "class_method_signature": "NotificationSoundDecoratorTest.defaultSoundTest()", "testcase": true, "constructor": false, "invocations": ["build", "putString", "builder", "then", "when", "setSound", "getBuilder", "any", "assertEquals", "parse", "getArguments", "decorate", "getDecorator", "getBuilder", "assertTrue"]}, "focal_class": {"identifier": "NotificationSoundDecorator", "superclass": "extends HaloNotificationDecorator", "interfaces": "", "fields": [{"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}], "methods": [{"identifier": "NotificationSoundDecorator", "parameters": "(Context context, HaloNotificationDecorator decorator)", "modifiers": "public", "return": "", "signature": " NotificationSoundDecorator(Context context, HaloNotificationDecorator decorator)", "full_signature": "public  NotificationSoundDecorator(Context context, HaloNotificationDecorator decorator)", "class_method_signature": "NotificationSoundDecorator.NotificationSoundDecorator(Context context, HaloNotificationDecorator decorator)", "testcase": false, "constructor": true}, {"identifier": "decorate", "parameters": "(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "modifiers": "@Override public", "return": "NotificationCompat.Builder", "signature": "NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "full_signature": "@Override public NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "class_method_signature": "NotificationSoundDecorator.decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "testcase": false, "constructor": false}], "file": "sdk-libs/halo-notifications/src/main/java/com/mobgen/halo/android/notifications/decorator/NotificationSoundDecorator.java"}, "focal_method": {"identifier": "decorate", "parameters": "(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "modifiers": "@Override public", "return": "NotificationCompat.Builder", "body": "@Override\n    public NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle) {\n        String sound = bundle.getString(\"sound\");\n        if (!TextUtils.isEmpty(sound)) {\n            Uri soundUri = null;\n            if (\"default\".equalsIgnoreCase(sound)) {\n                soundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\n            } else {\n                int soundId = mContext.getResources().getIdentifier(sound, \"raw\", mContext.getPackageName());\n                if (soundId != 0) {\n                    soundUri = HaloUtils.getUriFromResource(mContext, soundId);\n                }\n            }\n            if (soundUri != null) {\n                builder.setSound(soundUri);\n            }\n        }\n        return chain(builder, bundle);\n    }", "signature": "NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "full_signature": "@Override public NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "class_method_signature": "NotificationSoundDecorator.decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "testcase": false, "constructor": false, "invocations": ["getString", "isEmpty", "equalsIgnoreCase", "getDefaultUri", "getIdentifier", "getResources", "getPackageName", "getUriFromResource", "setSound", "chain"]}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}