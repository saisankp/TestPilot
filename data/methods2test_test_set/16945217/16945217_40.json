{"test_class": {"identifier": "FilterPreProcessorTest", "superclass": "extends BaseOptimizerTest", "interfaces": "", "fields": [], "file": "tddl-optimizer/src/test/java/com/taobao/tddl/optimizer/costbased/FilterPreProcessorTest.java"}, "test_case": {"identifier": "test_", "parameters": "", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_\u8def\u5f84\u77ed\u5316_\u6c38\u771f_\u591a\u8def() {\n        TableNode table = new TableNode(\"TABLE1\");\n        table.query(\"(ID = 1 AND NAME = 'HELLO') OR (1=1) \");\n        table.build();\n        FilterPreProcessor.optimize(table, true);\n        Assert.assertEquals(table.getWhereFilter().toString(), \"1\");\n    }", "signature": "void test_", "full_signature": "@Test public void test_", "class_method_signature": "FilterPreProcessorTest.test_", "testcase": true, "constructor": false, "invocations": ["query", "build", "optimize", "assertEquals", "toString", "getWhereFilter"]}, "focal_class": {"identifier": "FilterPreProcessor", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "optimize", "parameters": "(QueryTreeNode qtn, boolean typeConvert)", "modifiers": "public static", "return": "QueryTreeNode", "signature": "QueryTreeNode optimize(QueryTreeNode qtn, boolean typeConvert)", "full_signature": "public static QueryTreeNode optimize(QueryTreeNode qtn, boolean typeConvert)", "class_method_signature": "FilterPreProcessor.optimize(QueryTreeNode qtn, boolean typeConvert)", "testcase": false, "constructor": false}, {"identifier": "preProcess", "parameters": "(QueryTreeNode qtn, boolean typeConvert)", "modifiers": "private static", "return": "QueryTreeNode", "signature": "QueryTreeNode preProcess(QueryTreeNode qtn, boolean typeConvert)", "full_signature": "private static QueryTreeNode preProcess(QueryTreeNode qtn, boolean typeConvert)", "class_method_signature": "FilterPreProcessor.preProcess(QueryTreeNode qtn, boolean typeConvert)", "testcase": false, "constructor": false}, {"identifier": "processFilter", "parameters": "(IFilter root, boolean typeConvert)", "modifiers": "private static", "return": "IFilter", "signature": "IFilter processFilter(IFilter root, boolean typeConvert)", "full_signature": "private static IFilter processFilter(IFilter root, boolean typeConvert)", "class_method_signature": "FilterPreProcessor.processFilter(IFilter root, boolean typeConvert)", "testcase": false, "constructor": false}, {"identifier": "processOneFilter", "parameters": "(IFilter root, boolean typeConvert)", "modifiers": "private static", "return": "IFilter", "signature": "IFilter processOneFilter(IFilter root, boolean typeConvert)", "full_signature": "private static IFilter processOneFilter(IFilter root, boolean typeConvert)", "class_method_signature": "FilterPreProcessor.processOneFilter(IFilter root, boolean typeConvert)", "testcase": false, "constructor": false}, {"identifier": "shortestFilter", "parameters": "(IFilter root)", "modifiers": "private static", "return": "IFilter", "signature": "IFilter shortestFilter(IFilter root)", "full_signature": "private static IFilter shortestFilter(IFilter root)", "class_method_signature": "FilterPreProcessor.shortestFilter(IFilter root)", "testcase": false, "constructor": false}, {"identifier": "processBoolFilter", "parameters": "(IFilter root, boolean typeConvert)", "modifiers": "private static", "return": "IFilter", "signature": "IFilter processBoolFilter(IFilter root, boolean typeConvert)", "full_signature": "private static IFilter processBoolFilter(IFilter root, boolean typeConvert)", "class_method_signature": "FilterPreProcessor.processBoolFilter(IFilter root, boolean typeConvert)", "testcase": false, "constructor": false}, {"identifier": "exchage", "parameters": "(IFilter root)", "modifiers": "private static", "return": "IFilter", "signature": "IFilter exchage(IFilter root)", "full_signature": "private static IFilter exchage(IFilter root)", "class_method_signature": "FilterPreProcessor.exchage(IFilter root)", "testcase": false, "constructor": false}, {"identifier": "typeConvert", "parameters": "(IFilter root)", "modifiers": "private static", "return": "IFilter", "signature": "IFilter typeConvert(IFilter root)", "full_signature": "private static IFilter typeConvert(IFilter root)", "class_method_signature": "FilterPreProcessor.typeConvert(IFilter root)", "testcase": false, "constructor": false}], "file": "tddl-optimizer/src/main/java/com/taobao/tddl/optimizer/costbased/FilterPreProcessor.java"}, "focal_method": {"identifier": "optimize", "parameters": "(QueryTreeNode qtn, boolean typeConvert)", "modifiers": "public static", "return": "QueryTreeNode", "body": "public static QueryTreeNode optimize(QueryTreeNode qtn, boolean typeConvert) throws QueryException {\n        qtn = preProcess(qtn, typeConvert);\n        return qtn;\n    }", "signature": "QueryTreeNode optimize(QueryTreeNode qtn, boolean typeConvert)", "full_signature": "public static QueryTreeNode optimize(QueryTreeNode qtn, boolean typeConvert)", "class_method_signature": "FilterPreProcessor.optimize(QueryTreeNode qtn, boolean typeConvert)", "testcase": false, "constructor": false, "invocations": ["preProcess"]}, "repository": {"repo_id": 16945217, "url": "https://github.com/cpsing/tddl", "language": "Java", "is_fork": false, "fork_count": 126, "stargazer_count": 31, "size": 3247, "license": "licensed"}}