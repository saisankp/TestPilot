{"test_class": {"identifier": "TemplateManagerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    TemplateManagerImpl templateManager = new TemplateManagerImpl();", "modifier": "@Inject", "type": "TemplateManagerImpl", "declarator": "templateManager = new TemplateManagerImpl()", "var_name": "templateManager"}, {"original_string": "@Inject\n    DataStoreManager dataStoreManager;", "modifier": "@Inject", "type": "DataStoreManager", "declarator": "dataStoreManager", "var_name": "dataStoreManager"}, {"original_string": "@Inject\n    VMTemplateDao vmTemplateDao;", "modifier": "@Inject", "type": "VMTemplateDao", "declarator": "vmTemplateDao", "var_name": "vmTemplateDao"}, {"original_string": "@Inject\n    VMTemplatePoolDao vmTemplatePoolDao;", "modifier": "@Inject", "type": "VMTemplatePoolDao", "declarator": "vmTemplatePoolDao", "var_name": "vmTemplatePoolDao"}, {"original_string": "@Inject\n    TemplateDataStoreDao templateDataStoreDao;", "modifier": "@Inject", "type": "TemplateDataStoreDao", "declarator": "templateDataStoreDao", "var_name": "templateDataStoreDao"}, {"original_string": "@Inject\n    StoragePoolHostDao storagePoolHostDao;", "modifier": "@Inject", "type": "StoragePoolHostDao", "declarator": "storagePoolHostDao", "var_name": "storagePoolHostDao"}, {"original_string": "@Inject\n    PrimaryDataStoreDao primaryDataStoreDao;", "modifier": "@Inject", "type": "PrimaryDataStoreDao", "declarator": "primaryDataStoreDao", "var_name": "primaryDataStoreDao"}, {"original_string": "@Inject\n    ResourceLimitService resourceLimitMgr;", "modifier": "@Inject", "type": "ResourceLimitService", "declarator": "resourceLimitMgr", "var_name": "resourceLimitMgr"}, {"original_string": "@Inject\n    ImageStoreDao imgStoreDao;", "modifier": "@Inject", "type": "ImageStoreDao", "declarator": "imgStoreDao", "var_name": "imgStoreDao"}, {"original_string": "@Inject\n    GuestOSDao guestOSDao;", "modifier": "@Inject", "type": "GuestOSDao", "declarator": "guestOSDao", "var_name": "guestOSDao"}, {"original_string": "@Inject\n    VMTemplateDao tmpltDao;", "modifier": "@Inject", "type": "VMTemplateDao", "declarator": "tmpltDao", "var_name": "tmpltDao"}, {"original_string": "@Inject\n    SnapshotDao snapshotDao;", "modifier": "@Inject", "type": "SnapshotDao", "declarator": "snapshotDao", "var_name": "snapshotDao"}], "file": "server/src/test/java/com/cloud/template/TemplateManagerImplTest.java"}, "test_case": {"identifier": "testVerifyTemplateIdOfSystemTemplate", "parameters": "()", "modifiers": "@Test(expected = InvalidParameterValueException.class) public", "return": "void", "body": "@Test(expected = InvalidParameterValueException.class)\n    public void testVerifyTemplateIdOfSystemTemplate() {\n        templateManager.verifyTemplateId(1L);\n    }", "signature": "void testVerifyTemplateIdOfSystemTemplate()", "full_signature": "@Test(expected = InvalidParameterValueException.class) public void testVerifyTemplateIdOfSystemTemplate()", "class_method_signature": "TemplateManagerImplTest.testVerifyTemplateIdOfSystemTemplate()", "testcase": true, "constructor": false, "invocations": ["verifyTemplateId"]}, "focal_class": {"identifier": "TemplateManagerImpl", "superclass": "extends ManagerBase", "interfaces": "implements TemplateManager, TemplateApiService, Configurable", "fields": [{"original_string": "private final static Logger s_logger = LoggerFactory.getLogger(TemplateManagerImpl.class);", "modifier": "private final static", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(TemplateManagerImpl.class)", "var_name": "s_logger"}, {"original_string": "@Inject\n    private VMTemplateDao _tmpltDao;", "modifier": "@Inject\n    private", "type": "VMTemplateDao", "declarator": "_tmpltDao", "var_name": "_tmpltDao"}, {"original_string": "@Inject\n    private TemplateDataStoreDao _tmplStoreDao;", "modifier": "@Inject\n    private", "type": "TemplateDataStoreDao", "declarator": "_tmplStoreDao", "var_name": "_tmplStoreDao"}, {"original_string": "@Inject\n    private VMTemplatePoolDao _tmpltPoolDao;", "modifier": "@Inject\n    private", "type": "VMTemplatePoolDao", "declarator": "_tmpltPoolDao", "var_name": "_tmpltPoolDao"}, {"original_string": "@Inject\n    private VMTemplateZoneDao _tmpltZoneDao;", "modifier": "@Inject\n    private", "type": "VMTemplateZoneDao", "declarator": "_tmpltZoneDao", "var_name": "_tmpltZoneDao"}, {"original_string": "@Inject\n    private VMInstanceDao _vmInstanceDao;", "modifier": "@Inject\n    private", "type": "VMInstanceDao", "declarator": "_vmInstanceDao", "var_name": "_vmInstanceDao"}, {"original_string": "@Inject\n    private PrimaryDataStoreDao _poolDao;", "modifier": "@Inject\n    private", "type": "PrimaryDataStoreDao", "declarator": "_poolDao", "var_name": "_poolDao"}, {"original_string": "@Inject\n    private StoragePoolHostDao _poolHostDao;", "modifier": "@Inject\n    private", "type": "StoragePoolHostDao", "declarator": "_poolHostDao", "var_name": "_poolHostDao"}, {"original_string": "@Inject\n    private AccountDao _accountDao;", "modifier": "@Inject\n    private", "type": "AccountDao", "declarator": "_accountDao", "var_name": "_accountDao"}, {"original_string": "@Inject\n    private AgentManager _agentMgr;", "modifier": "@Inject\n    private", "type": "AgentManager", "declarator": "_agentMgr", "var_name": "_agentMgr"}, {"original_string": "@Inject\n    private AccountManager _accountMgr;", "modifier": "@Inject\n    private", "type": "AccountManager", "declarator": "_accountMgr", "var_name": "_accountMgr"}, {"original_string": "@Inject\n    private HostDao _hostDao;", "modifier": "@Inject\n    private", "type": "HostDao", "declarator": "_hostDao", "var_name": "_hostDao"}, {"original_string": "@Inject\n    private DataCenterDao _dcDao;", "modifier": "@Inject\n    private", "type": "DataCenterDao", "declarator": "_dcDao", "var_name": "_dcDao"}, {"original_string": "@Inject\n    private UserVmDao _userVmDao;", "modifier": "@Inject\n    private", "type": "UserVmDao", "declarator": "_userVmDao", "var_name": "_userVmDao"}, {"original_string": "@Inject\n    private VolumeDao _volumeDao;", "modifier": "@Inject\n    private", "type": "VolumeDao", "declarator": "_volumeDao", "var_name": "_volumeDao"}, {"original_string": "@Inject\n    private SnapshotDao _snapshotDao;", "modifier": "@Inject\n    private", "type": "SnapshotDao", "declarator": "_snapshotDao", "var_name": "_snapshotDao"}, {"original_string": "@Inject\n    private ConfigurationDao _configDao;", "modifier": "@Inject\n    private", "type": "ConfigurationDao", "declarator": "_configDao", "var_name": "_configDao"}, {"original_string": "@Inject\n    private DomainDao _domainDao;", "modifier": "@Inject\n    private", "type": "DomainDao", "declarator": "_domainDao", "var_name": "_domainDao"}, {"original_string": "@Inject\n    private GuestOSDao _guestOSDao;", "modifier": "@Inject\n    private", "type": "GuestOSDao", "declarator": "_guestOSDao", "var_name": "_guestOSDao"}, {"original_string": "@Inject\n    private StorageManager _storageMgr;", "modifier": "@Inject\n    private", "type": "StorageManager", "declarator": "_storageMgr", "var_name": "_storageMgr"}, {"original_string": "@Inject\n    private UsageEventDao _usageEventDao;", "modifier": "@Inject\n    private", "type": "UsageEventDao", "declarator": "_usageEventDao", "var_name": "_usageEventDao"}, {"original_string": "@Inject\n    private AccountService _accountService;", "modifier": "@Inject\n    private", "type": "AccountService", "declarator": "_accountService", "var_name": "_accountService"}, {"original_string": "@Inject\n    private ResourceLimitService _resourceLimitMgr;", "modifier": "@Inject\n    private", "type": "ResourceLimitService", "declarator": "_resourceLimitMgr", "var_name": "_resourceLimitMgr"}, {"original_string": "@Inject\n    private LaunchPermissionDao _launchPermissionDao;", "modifier": "@Inject\n    private", "type": "LaunchPermissionDao", "declarator": "_launchPermissionDao", "var_name": "_launchPermissionDao"}, {"original_string": "@Inject\n    private ProjectManager _projectMgr;", "modifier": "@Inject\n    private", "type": "ProjectManager", "declarator": "_projectMgr", "var_name": "_projectMgr"}, {"original_string": "@Inject\n    private VolumeDataFactory _volFactory;", "modifier": "@Inject\n    private", "type": "VolumeDataFactory", "declarator": "_volFactory", "var_name": "_volFactory"}, {"original_string": "@Inject\n    private TemplateDataFactory _tmplFactory;", "modifier": "@Inject\n    private", "type": "TemplateDataFactory", "declarator": "_tmplFactory", "var_name": "_tmplFactory"}, {"original_string": "@Inject\n    private SnapshotDataFactory _snapshotFactory;", "modifier": "@Inject\n    private", "type": "SnapshotDataFactory", "declarator": "_snapshotFactory", "var_name": "_snapshotFactory"}, {"original_string": "@Inject\n    private TemplateService _tmpltSvr;", "modifier": "@Inject\n    private", "type": "TemplateService", "declarator": "_tmpltSvr", "var_name": "_tmpltSvr"}, {"original_string": "@Inject\n    private DataStoreManager _dataStoreMgr;", "modifier": "@Inject\n    private", "type": "DataStoreManager", "declarator": "_dataStoreMgr", "var_name": "_dataStoreMgr"}, {"original_string": "@Inject\n    private VolumeOrchestrationService _volumeMgr;", "modifier": "@Inject\n    private", "type": "VolumeOrchestrationService", "declarator": "_volumeMgr", "var_name": "_volumeMgr"}, {"original_string": "@Inject\n    private EndPointSelector _epSelector;", "modifier": "@Inject\n    private", "type": "EndPointSelector", "declarator": "_epSelector", "var_name": "_epSelector"}, {"original_string": "@Inject\n    private UserVmJoinDao _userVmJoinDao;", "modifier": "@Inject\n    private", "type": "UserVmJoinDao", "declarator": "_userVmJoinDao", "var_name": "_userVmJoinDao"}, {"original_string": "@Inject\n    private SnapshotDataStoreDao _snapshotStoreDao;", "modifier": "@Inject\n    private", "type": "SnapshotDataStoreDao", "declarator": "_snapshotStoreDao", "var_name": "_snapshotStoreDao"}, {"original_string": "@Inject\n    private ImageStoreDao _imgStoreDao;", "modifier": "@Inject\n    private", "type": "ImageStoreDao", "declarator": "_imgStoreDao", "var_name": "_imgStoreDao"}, {"original_string": "@Inject\n    MessageBus _messageBus;", "modifier": "@Inject", "type": "MessageBus", "declarator": "_messageBus", "var_name": "_messageBus"}, {"original_string": "private boolean _disableExtraction = false;", "modifier": "private", "type": "boolean", "declarator": "_disableExtraction = false", "var_name": "_disableExtraction"}, {"original_string": "private List<TemplateAdapter> _adapters;", "modifier": "private", "type": "List<TemplateAdapter>", "declarator": "_adapters", "var_name": "_adapters"}, {"original_string": "ExecutorService _preloadExecutor;", "modifier": "", "type": "ExecutorService", "declarator": "_preloadExecutor", "var_name": "_preloadExecutor"}, {"original_string": "@Inject\n    private StorageCacheManager cacheMgr;", "modifier": "@Inject\n    private", "type": "StorageCacheManager", "declarator": "cacheMgr", "var_name": "cacheMgr"}, {"original_string": "@Inject\n    private EndPointSelector selector;", "modifier": "@Inject\n    private", "type": "EndPointSelector", "declarator": "selector", "var_name": "selector"}], "methods": [{"identifier": "getAdapter", "parameters": "(final HypervisorType type)", "modifiers": "private", "return": "TemplateAdapter", "signature": "TemplateAdapter getAdapter(final HypervisorType type)", "full_signature": "private TemplateAdapter getAdapter(final HypervisorType type)", "class_method_signature": "TemplateManagerImpl.getAdapter(final HypervisorType type)", "testcase": false, "constructor": false}, {"identifier": "registerIso", "parameters": "(final RegisterIsoCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_CREATE, eventDescription = \"creating iso\") public", "return": "VirtualMachineTemplate", "signature": "VirtualMachineTemplate registerIso(final RegisterIsoCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_CREATE, eventDescription = \"creating iso\") public VirtualMachineTemplate registerIso(final RegisterIsoCmd cmd)", "class_method_signature": "TemplateManagerImpl.registerIso(final RegisterIsoCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "registerTemplate", "parameters": "(final RegisterTemplateCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_CREATE, eventDescription = \"creating template\") public", "return": "VirtualMachineTemplate", "signature": "VirtualMachineTemplate registerTemplate(final RegisterTemplateCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_CREATE, eventDescription = \"creating template\") public VirtualMachineTemplate registerTemplate(final RegisterTemplateCmd cmd)", "class_method_signature": "TemplateManagerImpl.registerTemplate(final RegisterTemplateCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "registerTemplateForPostUpload", "parameters": "(final GetUploadParamsForTemplateCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_CREATE, eventDescription = \"creating post upload template\") public", "return": "GetUploadParamsResponse", "signature": "GetUploadParamsResponse registerTemplateForPostUpload(final GetUploadParamsForTemplateCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_CREATE, eventDescription = \"creating post upload template\") public GetUploadParamsResponse registerTemplateForPostUpload(final GetUploadParamsForTemplateCmd cmd)", "class_method_signature": "TemplateManagerImpl.registerTemplateForPostUpload(final GetUploadParamsForTemplateCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "getImageStore", "parameters": "(final String storeUuid, final Long zoneId)", "modifiers": "@Override public", "return": "DataStore", "signature": "DataStore getImageStore(final String storeUuid, final Long zoneId)", "full_signature": "@Override public DataStore getImageStore(final String storeUuid, final Long zoneId)", "class_method_signature": "TemplateManagerImpl.getImageStore(final String storeUuid, final Long zoneId)", "testcase": false, "constructor": false}, {"identifier": "extract", "parameters": "(final ExtractIsoCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_EXTRACT, eventDescription = \"extracting ISO\", async = true) public", "return": "String", "signature": "String extract(final ExtractIsoCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_EXTRACT, eventDescription = \"extracting ISO\", async = true) public String extract(final ExtractIsoCmd cmd)", "class_method_signature": "TemplateManagerImpl.extract(final ExtractIsoCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "extract", "parameters": "(final ExtractTemplateCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_EXTRACT, eventDescription = \"extracting template\", async = true) public", "return": "String", "signature": "String extract(final ExtractTemplateCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_EXTRACT, eventDescription = \"extracting template\", async = true) public String extract(final ExtractTemplateCmd cmd)", "class_method_signature": "TemplateManagerImpl.extract(final ExtractTemplateCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "prepareTemplate", "parameters": "(final long templateId, final long zoneId, final Long storageId)", "modifiers": "@Override public", "return": "VirtualMachineTemplate", "signature": "VirtualMachineTemplate prepareTemplate(final long templateId, final long zoneId, final Long storageId)", "full_signature": "@Override public VirtualMachineTemplate prepareTemplate(final long templateId, final long zoneId, final Long storageId)", "class_method_signature": "TemplateManagerImpl.prepareTemplate(final long templateId, final long zoneId, final Long storageId)", "testcase": false, "constructor": false}, {"identifier": "extract", "parameters": "(final Account caller, final Long templateId, final String url, final Long zoneId, final String mode, final Long eventId, final boolean isISO)", "modifiers": "private", "return": "String", "signature": "String extract(final Account caller, final Long templateId, final String url, final Long zoneId, final String mode, final Long eventId, final boolean isISO)", "full_signature": "private String extract(final Account caller, final Long templateId, final String url, final Long zoneId, final String mode, final Long eventId, final boolean isISO)", "class_method_signature": "TemplateManagerImpl.extract(final Account caller, final Long templateId, final String url, final Long zoneId, final String mode, final Long eventId, final boolean isISO)", "testcase": false, "constructor": false}, {"identifier": "prepareIsoForVmProfile", "parameters": "(final VirtualMachineProfile profile)", "modifiers": "@Override public", "return": "void", "signature": "void prepareIsoForVmProfile(final VirtualMachineProfile profile)", "full_signature": "@Override public void prepareIsoForVmProfile(final VirtualMachineProfile profile)", "class_method_signature": "TemplateManagerImpl.prepareIsoForVmProfile(final VirtualMachineProfile profile)", "testcase": false, "constructor": false}, {"identifier": "prepareTemplateInOneStoragePool", "parameters": "(final VMTemplateVO template, final StoragePoolVO pool)", "modifiers": "private", "return": "void", "signature": "void prepareTemplateInOneStoragePool(final VMTemplateVO template, final StoragePoolVO pool)", "full_signature": "private void prepareTemplateInOneStoragePool(final VMTemplateVO template, final StoragePoolVO pool)", "class_method_signature": "TemplateManagerImpl.prepareTemplateInOneStoragePool(final VMTemplateVO template, final StoragePoolVO pool)", "testcase": false, "constructor": false}, {"identifier": "prepareTemplateInAllStoragePools", "parameters": "(final VMTemplateVO template, final long zoneId)", "modifiers": "public", "return": "void", "signature": "void prepareTemplateInAllStoragePools(final VMTemplateVO template, final long zoneId)", "full_signature": "public void prepareTemplateInAllStoragePools(final VMTemplateVO template, final long zoneId)", "class_method_signature": "TemplateManagerImpl.prepareTemplateInAllStoragePools(final VMTemplateVO template, final long zoneId)", "testcase": false, "constructor": false}, {"identifier": "prepareTemplateForCreate", "parameters": "(final VMTemplateVO templ, final StoragePool pool)", "modifiers": "@Override @DB public", "return": "VMTemplateStoragePoolVO", "signature": "VMTemplateStoragePoolVO prepareTemplateForCreate(final VMTemplateVO templ, final StoragePool pool)", "full_signature": "@Override @DB public VMTemplateStoragePoolVO prepareTemplateForCreate(final VMTemplateVO templ, final StoragePool pool)", "class_method_signature": "TemplateManagerImpl.prepareTemplateForCreate(final VMTemplateVO templ, final StoragePool pool)", "testcase": false, "constructor": false}, {"identifier": "getChecksum", "parameters": "(final DataStore store, final String templatePath)", "modifiers": "@Override public", "return": "String", "signature": "String getChecksum(final DataStore store, final String templatePath)", "full_signature": "@Override public String getChecksum(final DataStore store, final String templatePath)", "class_method_signature": "TemplateManagerImpl.getChecksum(final DataStore store, final String templatePath)", "testcase": false, "constructor": false}, {"identifier": "resetTemplateDownloadStateOnPool", "parameters": "(final long templateStoragePoolRefId)", "modifiers": "@Override @DB public", "return": "boolean", "signature": "boolean resetTemplateDownloadStateOnPool(final long templateStoragePoolRefId)", "full_signature": "@Override @DB public boolean resetTemplateDownloadStateOnPool(final long templateStoragePoolRefId)", "class_method_signature": "TemplateManagerImpl.resetTemplateDownloadStateOnPool(final long templateStoragePoolRefId)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(final long userId, final VMTemplateVO template, final DataStore srcSecStore, final DataCenterVO dstZone)", "modifiers": "@Override @DB public", "return": "boolean", "signature": "boolean copy(final long userId, final VMTemplateVO template, final DataStore srcSecStore, final DataCenterVO dstZone)", "full_signature": "@Override @DB public boolean copy(final long userId, final VMTemplateVO template, final DataStore srcSecStore, final DataCenterVO dstZone)", "class_method_signature": "TemplateManagerImpl.copy(final long userId, final VMTemplateVO template, final DataStore srcSecStore, final DataCenterVO dstZone)", "testcase": false, "constructor": false}, {"identifier": "copyTemplate", "parameters": "(final CopyTemplateCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_COPY, eventDescription = \"copying template\", async = true) public", "return": "VirtualMachineTemplate", "signature": "VirtualMachineTemplate copyTemplate(final CopyTemplateCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_COPY, eventDescription = \"copying template\", async = true) public VirtualMachineTemplate copyTemplate(final CopyTemplateCmd cmd)", "class_method_signature": "TemplateManagerImpl.copyTemplate(final CopyTemplateCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final long userId, final long templateId, final Long zoneId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean delete(final long userId, final long templateId, final Long zoneId)", "full_signature": "@Override public boolean delete(final long userId, final long templateId, final Long zoneId)", "class_method_signature": "TemplateManagerImpl.delete(final long userId, final long templateId, final Long zoneId)", "testcase": false, "constructor": false}, {"identifier": "getUnusedTemplatesInPool", "parameters": "(final StoragePoolVO pool)", "modifiers": "@Override public", "return": "List<VMTemplateStoragePoolVO>", "signature": "List<VMTemplateStoragePoolVO> getUnusedTemplatesInPool(final StoragePoolVO pool)", "full_signature": "@Override public List<VMTemplateStoragePoolVO> getUnusedTemplatesInPool(final StoragePoolVO pool)", "class_method_signature": "TemplateManagerImpl.getUnusedTemplatesInPool(final StoragePoolVO pool)", "testcase": false, "constructor": false}, {"identifier": "evictTemplateFromStoragePool", "parameters": "(final VMTemplateStoragePoolVO templatePoolVO)", "modifiers": "@Override @DB public", "return": "void", "signature": "void evictTemplateFromStoragePool(final VMTemplateStoragePoolVO templatePoolVO)", "full_signature": "@Override @DB public void evictTemplateFromStoragePool(final VMTemplateStoragePoolVO templatePoolVO)", "class_method_signature": "TemplateManagerImpl.evictTemplateFromStoragePool(final VMTemplateStoragePoolVO templatePoolVO)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean start()", "full_signature": "@Override public boolean start()", "class_method_signature": "TemplateManagerImpl.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean stop()", "full_signature": "@Override public boolean stop()", "class_method_signature": "TemplateManagerImpl.stop()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(final String name, final Map<String, Object> params)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean configure(final String name, final Map<String, Object> params)", "full_signature": "@Override public boolean configure(final String name, final Map<String, Object> params)", "class_method_signature": "TemplateManagerImpl.configure(final String name, final Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "TemplateManagerImpl", "parameters": "()", "modifiers": "protected", "return": "", "signature": " TemplateManagerImpl()", "full_signature": "protected  TemplateManagerImpl()", "class_method_signature": "TemplateManagerImpl.TemplateManagerImpl()", "testcase": false, "constructor": true}, {"identifier": "templateIsDeleteable", "parameters": "(final VMTemplateHostVO templateHostRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean templateIsDeleteable(final VMTemplateHostVO templateHostRef)", "full_signature": "@Override public boolean templateIsDeleteable(final VMTemplateHostVO templateHostRef)", "class_method_signature": "TemplateManagerImpl.templateIsDeleteable(final VMTemplateHostVO templateHostRef)", "testcase": false, "constructor": false}, {"identifier": "templateIsDeleteable", "parameters": "(final long templateId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean templateIsDeleteable(final long templateId)", "full_signature": "@Override public boolean templateIsDeleteable(final long templateId)", "class_method_signature": "TemplateManagerImpl.templateIsDeleteable(final long templateId)", "testcase": false, "constructor": false}, {"identifier": "detachIso", "parameters": "(final long vmId)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_DETACH, eventDescription = \"detaching ISO\", async = true) public", "return": "boolean", "signature": "boolean detachIso(final long vmId)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_DETACH, eventDescription = \"detaching ISO\", async = true) public boolean detachIso(final long vmId)", "class_method_signature": "TemplateManagerImpl.detachIso(final long vmId)", "testcase": false, "constructor": false}, {"identifier": "attachIso", "parameters": "(final long isoId, final long vmId)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_ATTACH, eventDescription = \"attaching ISO\", async = true) public", "return": "boolean", "signature": "boolean attachIso(final long isoId, final long vmId)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_ATTACH, eventDescription = \"attaching ISO\", async = true) public boolean attachIso(final long isoId, final long vmId)", "class_method_signature": "TemplateManagerImpl.attachIso(final long isoId, final long vmId)", "testcase": false, "constructor": false}, {"identifier": "prepareIso", "parameters": "(final long isoId, final long dcId)", "modifiers": "@Override public", "return": "TemplateInfo", "signature": "TemplateInfo prepareIso(final long isoId, final long dcId)", "full_signature": "@Override public TemplateInfo prepareIso(final long isoId, final long dcId)", "class_method_signature": "TemplateManagerImpl.prepareIso(final long isoId, final long dcId)", "testcase": false, "constructor": false}, {"identifier": "attachISOToVM", "parameters": "(final long vmId, final long isoId, final boolean attach)", "modifiers": "private", "return": "boolean", "signature": "boolean attachISOToVM(final long vmId, final long isoId, final boolean attach)", "full_signature": "private boolean attachISOToVM(final long vmId, final long isoId, final boolean attach)", "class_method_signature": "TemplateManagerImpl.attachISOToVM(final long vmId, final long isoId, final boolean attach)", "testcase": false, "constructor": false}, {"identifier": "attachISOToVM", "parameters": "(final long vmId, final long userId, final long isoId, final boolean attach)", "modifiers": "private", "return": "boolean", "signature": "boolean attachISOToVM(final long vmId, final long userId, final long isoId, final boolean attach)", "full_signature": "private boolean attachISOToVM(final long vmId, final long userId, final long isoId, final boolean attach)", "class_method_signature": "TemplateManagerImpl.attachISOToVM(final long vmId, final long userId, final long isoId, final boolean attach)", "testcase": false, "constructor": false}, {"identifier": "deleteTemplate", "parameters": "(final DeleteTemplateCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_DELETE, eventDescription = \"deleting template\", async = true) public", "return": "boolean", "signature": "boolean deleteTemplate(final DeleteTemplateCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_DELETE, eventDescription = \"deleting template\", async = true) public boolean deleteTemplate(final DeleteTemplateCmd cmd)", "class_method_signature": "TemplateManagerImpl.deleteTemplate(final DeleteTemplateCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "deleteIso", "parameters": "(final DeleteIsoCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_DELETE, eventDescription = \"deleting iso\", async = true) public", "return": "boolean", "signature": "boolean deleteIso(final DeleteIsoCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ISO_DELETE, eventDescription = \"deleting iso\", async = true) public boolean deleteIso(final DeleteIsoCmd cmd)", "class_method_signature": "TemplateManagerImpl.deleteIso(final DeleteIsoCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "listTemplatePermissions", "parameters": "(final BaseListTemplateOrIsoPermissionsCmd cmd)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listTemplatePermissions(final BaseListTemplateOrIsoPermissionsCmd cmd)", "full_signature": "@Override public List<String> listTemplatePermissions(final BaseListTemplateOrIsoPermissionsCmd cmd)", "class_method_signature": "TemplateManagerImpl.listTemplatePermissions(final BaseListTemplateOrIsoPermissionsCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "updateTemplateOrIsoPermissions", "parameters": "(final BaseUpdateTemplateOrIsoPermissionsCmd cmd)", "modifiers": "@DB @Override public", "return": "boolean", "signature": "boolean updateTemplateOrIsoPermissions(final BaseUpdateTemplateOrIsoPermissionsCmd cmd)", "full_signature": "@DB @Override public boolean updateTemplateOrIsoPermissions(final BaseUpdateTemplateOrIsoPermissionsCmd cmd)", "class_method_signature": "TemplateManagerImpl.updateTemplateOrIsoPermissions(final BaseUpdateTemplateOrIsoPermissionsCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "createPrivateTemplate", "parameters": "(final CreateTemplateCmd command)", "modifiers": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_CREATE, eventDescription = \"creating template\", async = true) public", "return": "VirtualMachineTemplate", "signature": "VirtualMachineTemplate createPrivateTemplate(final CreateTemplateCmd command)", "full_signature": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_CREATE, eventDescription = \"creating template\", async = true) public VirtualMachineTemplate createPrivateTemplate(final CreateTemplateCmd command)", "class_method_signature": "TemplateManagerImpl.createPrivateTemplate(final CreateTemplateCmd command)", "testcase": false, "constructor": false}, {"identifier": "createPrivateTemplateRecord", "parameters": "(final CreateTemplateCmd cmd, final Account templateOwner)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_CREATE, eventDescription = \"creating template\", create = true) public", "return": "VMTemplateVO", "signature": "VMTemplateVO createPrivateTemplateRecord(final CreateTemplateCmd cmd, final Account templateOwner)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_TEMPLATE_CREATE, eventDescription = \"creating template\", create = true) public VMTemplateVO createPrivateTemplateRecord(final CreateTemplateCmd cmd, final Account templateOwner)", "class_method_signature": "TemplateManagerImpl.createPrivateTemplateRecord(final CreateTemplateCmd cmd, final Account templateOwner)", "testcase": false, "constructor": false}, {"identifier": "getAbsoluteIsoPath", "parameters": "(final long templateId, final long dataCenterId)", "modifiers": "@Override public", "return": "Pair<String, String>", "signature": "Pair<String, String> getAbsoluteIsoPath(final long templateId, final long dataCenterId)", "full_signature": "@Override public Pair<String, String> getAbsoluteIsoPath(final long templateId, final long dataCenterId)", "class_method_signature": "TemplateManagerImpl.getAbsoluteIsoPath(final long templateId, final long dataCenterId)", "testcase": false, "constructor": false}, {"identifier": "getSecondaryStorageURL", "parameters": "(final long zoneId)", "modifiers": "@Override public", "return": "String", "signature": "String getSecondaryStorageURL(final long zoneId)", "full_signature": "@Override public String getSecondaryStorageURL(final long zoneId)", "class_method_signature": "TemplateManagerImpl.getSecondaryStorageURL(final long zoneId)", "testcase": false, "constructor": false}, {"identifier": "getImageStore", "parameters": "(final long zoneId, final long tmpltId)", "modifiers": "@Override public", "return": "DataStore", "signature": "DataStore getImageStore(final long zoneId, final long tmpltId)", "full_signature": "@Override public DataStore getImageStore(final long zoneId, final long tmpltId)", "class_method_signature": "TemplateManagerImpl.getImageStore(final long zoneId, final long tmpltId)", "testcase": false, "constructor": false}, {"identifier": "getImageStore", "parameters": "(final long tmpltId)", "modifiers": "@Override public", "return": "DataStore", "signature": "DataStore getImageStore(final long tmpltId)", "full_signature": "@Override public DataStore getImageStore(final long tmpltId)", "class_method_signature": "TemplateManagerImpl.getImageStore(final long tmpltId)", "testcase": false, "constructor": false}, {"identifier": "getTemplateSize", "parameters": "(final long templateId, final long zoneId)", "modifiers": "@Override public", "return": "Long", "signature": "Long getTemplateSize(final long templateId, final long zoneId)", "full_signature": "@Override public Long getTemplateSize(final long templateId, final long zoneId)", "class_method_signature": "TemplateManagerImpl.getTemplateSize(final long templateId, final long zoneId)", "testcase": false, "constructor": false}, {"identifier": "getImageStoreByTemplate", "parameters": "(final long templateId, final Long zoneId)", "modifiers": "@Override public", "return": "List<DataStore>", "signature": "List<DataStore> getImageStoreByTemplate(final long templateId, final Long zoneId)", "full_signature": "@Override public List<DataStore> getImageStoreByTemplate(final long templateId, final Long zoneId)", "class_method_signature": "TemplateManagerImpl.getImageStoreByTemplate(final long templateId, final Long zoneId)", "testcase": false, "constructor": false}, {"identifier": "updateTemplate", "parameters": "(final UpdateIsoCmd cmd)", "modifiers": "@Override public", "return": "VMTemplateVO", "signature": "VMTemplateVO updateTemplate(final UpdateIsoCmd cmd)", "full_signature": "@Override public VMTemplateVO updateTemplate(final UpdateIsoCmd cmd)", "class_method_signature": "TemplateManagerImpl.updateTemplate(final UpdateIsoCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "updateTemplate", "parameters": "(final UpdateTemplateCmd cmd)", "modifiers": "@Override public", "return": "VMTemplateVO", "signature": "VMTemplateVO updateTemplate(final UpdateTemplateCmd cmd)", "full_signature": "@Override public VMTemplateVO updateTemplate(final UpdateTemplateCmd cmd)", "class_method_signature": "TemplateManagerImpl.updateTemplate(final UpdateTemplateCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "updateTemplateOrIso", "parameters": "(final BaseUpdateTemplateOrIsoCmd cmd)", "modifiers": "private", "return": "VMTemplateVO", "signature": "VMTemplateVO updateTemplateOrIso(final BaseUpdateTemplateOrIsoCmd cmd)", "full_signature": "private VMTemplateVO updateTemplateOrIso(final BaseUpdateTemplateOrIsoCmd cmd)", "class_method_signature": "TemplateManagerImpl.updateTemplateOrIso(final BaseUpdateTemplateOrIsoCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "verifyTemplateId", "parameters": "(final Long id)", "modifiers": "", "return": "void", "signature": "void verifyTemplateId(final Long id)", "full_signature": " void verifyTemplateId(final Long id)", "class_method_signature": "TemplateManagerImpl.verifyTemplateId(final Long id)", "testcase": false, "constructor": false}, {"identifier": "getConfigComponentName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getConfigComponentName()", "full_signature": "@Override public String getConfigComponentName()", "class_method_signature": "TemplateManagerImpl.getConfigComponentName()", "testcase": false, "constructor": false}, {"identifier": "getConfigKeys", "parameters": "()", "modifiers": "@Override public", "return": "ConfigKey<?>[]", "signature": "ConfigKey<?>[] getConfigKeys()", "full_signature": "@Override public ConfigKey<?>[] getConfigKeys()", "class_method_signature": "TemplateManagerImpl.getConfigKeys()", "testcase": false, "constructor": false}, {"identifier": "getTemplateAdapters", "parameters": "()", "modifiers": "public", "return": "List<TemplateAdapter>", "signature": "List<TemplateAdapter> getTemplateAdapters()", "full_signature": "public List<TemplateAdapter> getTemplateAdapters()", "class_method_signature": "TemplateManagerImpl.getTemplateAdapters()", "testcase": false, "constructor": false}, {"identifier": "setTemplateAdapters", "parameters": "(final List<TemplateAdapter> adapters)", "modifiers": "@Inject public", "return": "void", "signature": "void setTemplateAdapters(final List<TemplateAdapter> adapters)", "full_signature": "@Inject public void setTemplateAdapters(final List<TemplateAdapter> adapters)", "class_method_signature": "TemplateManagerImpl.setTemplateAdapters(final List<TemplateAdapter> adapters)", "testcase": false, "constructor": false}], "file": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java"}, "focal_method": {"identifier": "verifyTemplateId", "parameters": "(final Long id)", "modifiers": "", "return": "void", "body": "void verifyTemplateId(final Long id) {\n        // Don't allow to modify system template\n        if (id.equals(Long.valueOf(1))) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"Unable to update template/iso of specified id\");\n            ex.addProxyObject(String.valueOf(id), \"templateId\");\n            throw ex;\n        }\n    }", "signature": "void verifyTemplateId(final Long id)", "full_signature": " void verifyTemplateId(final Long id)", "class_method_signature": "TemplateManagerImpl.verifyTemplateId(final Long id)", "testcase": false, "constructor": false, "invocations": ["equals", "valueOf", "addProxyObject", "valueOf"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}