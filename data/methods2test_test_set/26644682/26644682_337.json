{"test_class": {"identifier": "TransformationMetadataCacheKeyTest", "superclass": "", "interfaces": "", "fields": [], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/cache/TransformationMetadataCacheKeyTest.java"}, "test_case": {"identifier": "getKey_should_generate_serialized_key", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getKey_should_generate_serialized_key() throws Exception {\n        // given\n        final ContentCacheKey key = new TransformationMetadataCacheKey(\"prep1\", \"step1\", HEAD, \"user1\");\n\n        // when\n        final String keyStr = key.getKey();\n\n        // then\n        assertThat(keyStr, is(\"transformation-metadata_prep1_step1_HEAD_user1\"));\n    }", "signature": "void getKey_should_generate_serialized_key()", "full_signature": "@Test public void getKey_should_generate_serialized_key()", "class_method_signature": "TransformationMetadataCacheKeyTest.getKey_should_generate_serialized_key()", "testcase": true, "constructor": false, "invocations": ["getKey", "assertThat", "is"]}, "focal_class": {"identifier": "TransformationMetadataCacheKey", "superclass": "", "interfaces": "implements ContentCacheKey", "fields": [{"original_string": "private static final String PREFIX = \"transformation-metadata\";", "modifier": "private static final", "type": "String", "declarator": "PREFIX = \"transformation-metadata\"", "var_name": "PREFIX"}, {"original_string": "private final String preparationId;", "modifier": "private final", "type": "String", "declarator": "preparationId", "var_name": "preparationId"}, {"original_string": "private final String stepId;", "modifier": "private final", "type": "String", "declarator": "stepId", "var_name": "stepId"}, {"original_string": "private ExportParameters.SourceType sourceType;", "modifier": "private", "type": "ExportParameters.SourceType", "declarator": "sourceType", "var_name": "sourceType"}, {"original_string": "private final String userId;", "modifier": "private final", "type": "String", "declarator": "userId", "var_name": "userId"}], "methods": [{"identifier": "TransformationMetadataCacheKey", "parameters": "(final String preparationId, final String stepId,\n            final ExportParameters.SourceType sourceType, final String userId)", "modifiers": "", "return": "", "signature": " TransformationMetadataCacheKey(final String preparationId, final String stepId,\n            final ExportParameters.SourceType sourceType, final String userId)", "full_signature": "  TransformationMetadataCacheKey(final String preparationId, final String stepId,\n            final ExportParameters.SourceType sourceType, final String userId)", "class_method_signature": "TransformationMetadataCacheKey.TransformationMetadataCacheKey(final String preparationId, final String stepId,\n            final ExportParameters.SourceType sourceType, final String userId)", "testcase": false, "constructor": true}, {"identifier": "getKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKey()", "full_signature": "@Override public String getKey()", "class_method_signature": "TransformationMetadataCacheKey.getKey()", "testcase": false, "constructor": false}, {"identifier": "getMatcher", "parameters": "()", "modifiers": "@Override public", "return": "Predicate<String>", "signature": "Predicate<String> getMatcher()", "full_signature": "@Override public Predicate<String> getMatcher()", "class_method_signature": "TransformationMetadataCacheKey.getMatcher()", "testcase": false, "constructor": false}, {"identifier": "getPrefix", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPrefix()", "full_signature": "@Override public String getPrefix()", "class_method_signature": "TransformationMetadataCacheKey.getPrefix()", "testcase": false, "constructor": false}, {"identifier": "getPreparationId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPreparationId()", "full_signature": "public String getPreparationId()", "class_method_signature": "TransformationMetadataCacheKey.getPreparationId()", "testcase": false, "constructor": false}, {"identifier": "getStepId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStepId()", "full_signature": "public String getStepId()", "class_method_signature": "TransformationMetadataCacheKey.getStepId()", "testcase": false, "constructor": false}, {"identifier": "getSourceType", "parameters": "()", "modifiers": "public", "return": "ExportParameters.SourceType", "signature": "ExportParameters.SourceType getSourceType()", "full_signature": "public ExportParameters.SourceType getSourceType()", "class_method_signature": "TransformationMetadataCacheKey.getSourceType()", "testcase": false, "constructor": false}, {"identifier": "getUserId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserId()", "full_signature": "public String getUserId()", "class_method_signature": "TransformationMetadataCacheKey.getUserId()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TransformationMetadataCacheKey.toString()", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/cache/TransformationMetadataCacheKey.java"}, "focal_method": {"identifier": "getKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getKey() {\n        return PREFIX + \"_\" + preparationId + \"_\" + stepId + \"_\" + sourceType + \"_\" + userId;\n    }", "signature": "String getKey()", "full_signature": "@Override public String getKey()", "class_method_signature": "TransformationMetadataCacheKey.getKey()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}