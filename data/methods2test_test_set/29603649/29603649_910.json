{"test_class": {"identifier": "StubDescriptorStatusServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_GROUPNAME = \"test\";", "modifier": "private static final", "type": "String", "declarator": "TEST_GROUPNAME = \"test\"", "var_name": "TEST_GROUPNAME"}, {"original_string": "private static final String NAME = \"dialog-descriptor\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"dialog-descriptor\"", "var_name": "NAME"}, {"original_string": "private static final Long VALIDITY_VALUE = 2L;", "modifier": "private static final", "type": "Long", "declarator": "VALIDITY_VALUE = 2L", "var_name": "VALIDITY_VALUE"}, {"original_string": "private List<InterceptorDescriptor> interceptorDescriptors;", "modifier": "private", "type": "List<InterceptorDescriptor>", "declarator": "interceptorDescriptors", "var_name": "interceptorDescriptors"}, {"original_string": "private List<SequenceDescriptor> sequenceDescriptors;", "modifier": "private", "type": "List<SequenceDescriptor>", "declarator": "sequenceDescriptors", "var_name": "sequenceDescriptors"}, {"original_string": "private List<DialogDescriptor> dialogDescriptors;", "modifier": "private", "type": "List<DialogDescriptor>", "declarator": "dialogDescriptors", "var_name": "dialogDescriptors"}, {"original_string": "@Mock\n    private RoutingService routingService;", "modifier": "@Mock\n    private", "type": "RoutingService", "declarator": "routingService", "var_name": "routingService"}, {"original_string": "@Mock\n    private StubDescriptor stubDescriptor;", "modifier": "@Mock\n    private", "type": "StubDescriptor", "declarator": "stubDescriptor", "var_name": "stubDescriptor"}, {"original_string": "@Mock(answer = Answers.RETURNS_DEEP_STUBS)\n    private DialogDescriptor dialogDescriptor;", "modifier": "@Mock(answer = Answers.RETURNS_DEEP_STUBS)\n    private", "type": "DialogDescriptor", "declarator": "dialogDescriptor", "var_name": "dialogDescriptor"}, {"original_string": "@Mock\n    private ExpirationTimeProvider expirationTimeProvider;", "modifier": "@Mock\n    private", "type": "ExpirationTimeProvider", "declarator": "expirationTimeProvider", "var_name": "expirationTimeProvider"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private PrintWriter out;", "modifier": "@Mock\n    private", "type": "PrintWriter", "declarator": "out", "var_name": "out"}, {"original_string": "@Mock\n    private SequenceDescriptor sequenceDescriptor;", "modifier": "@Mock\n    private", "type": "SequenceDescriptor", "declarator": "sequenceDescriptor", "var_name": "sequenceDescriptor"}, {"original_string": "@Mock\n    private InterceptorDescriptor interceptorDescriptor;", "modifier": "@Mock\n    private", "type": "InterceptorDescriptor", "declarator": "interceptorDescriptor", "var_name": "interceptorDescriptor"}, {"original_string": "@InjectMocks\n    private StubDescriptorStatusServlet underTest;", "modifier": "@InjectMocks\n    private", "type": "StubDescriptorStatusServlet", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private StubDescriptorAttributes stubDescriptorAttributes = new StubDescriptorAttributes(TEST_GROUPNAME);", "modifier": "private", "type": "StubDescriptorAttributes", "declarator": "stubDescriptorAttributes = new StubDescriptorAttributes(TEST_GROUPNAME)", "var_name": "stubDescriptorAttributes"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/config/servlet/stub/StubDescriptorStatusServletTest.java"}, "test_case": {"identifier": "testDoGetWhenThereAreNoDialogDescriptorsWriteAnEmptyList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoGetWhenThereAreNoDialogDescriptorsWriteAnEmptyList() throws ServletException, IOException {\n        //GIVEN in setUp\n        //WHEN\n        underTest.doGet(request, response);\n        //THEN\n        InOrder order = Mockito.inOrder(out);\n        order.verify(out).write(\"\\\"dialogDescriptors\\\":[\");\n        order.verify(out).write(\"], \\\"groupname\\\": \\\"test\\\", \\\"active\\\": \\\"true\\\"\");\n    }", "signature": "void testDoGetWhenThereAreNoDialogDescriptorsWriteAnEmptyList()", "full_signature": "@Test public void testDoGetWhenThereAreNoDialogDescriptorsWriteAnEmptyList()", "class_method_signature": "StubDescriptorStatusServletTest.testDoGetWhenThereAreNoDialogDescriptorsWriteAnEmptyList()", "testcase": true, "constructor": false, "invocations": ["doGet", "inOrder", "write", "verify", "write", "verify"]}, "focal_class": {"identifier": "StubDescriptorStatusServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private final RoutingService routingService;", "modifier": "private final", "type": "RoutingService", "declarator": "routingService", "var_name": "routingService"}, {"original_string": "private final ExpirationTimeProvider expirationTimeProvider;", "modifier": "private final", "type": "ExpirationTimeProvider", "declarator": "expirationTimeProvider", "var_name": "expirationTimeProvider"}], "methods": [{"identifier": "StubDescriptorStatusServlet", "parameters": "(RoutingService routingService, ExpirationTimeProvider expirationTimeProvider)", "modifiers": "@Autowired public", "return": "", "signature": " StubDescriptorStatusServlet(RoutingService routingService, ExpirationTimeProvider expirationTimeProvider)", "full_signature": "@Autowired public  StubDescriptorStatusServlet(RoutingService routingService, ExpirationTimeProvider expirationTimeProvider)", "class_method_signature": "StubDescriptorStatusServlet.StubDescriptorStatusServlet(RoutingService routingService, ExpirationTimeProvider expirationTimeProvider)", "testcase": false, "constructor": true}, {"identifier": "doGet", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "@Override protected void doGet(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "StubDescriptorStatusServlet.doGet(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "StubDescriptorStatusServlet.doPost(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "writeAllDialogDescriptors", "parameters": "(final PrintWriter out, final Map<String, StubDescriptor> stubDescriptors)", "modifiers": "private", "return": "void", "signature": "void writeAllDialogDescriptors(final PrintWriter out, final Map<String, StubDescriptor> stubDescriptors)", "full_signature": "private void writeAllDialogDescriptors(final PrintWriter out, final Map<String, StubDescriptor> stubDescriptors)", "class_method_signature": "StubDescriptorStatusServlet.writeAllDialogDescriptors(final PrintWriter out, final Map<String, StubDescriptor> stubDescriptors)", "testcase": false, "constructor": false}, {"identifier": "writeInterceptorDescriptors", "parameters": "(PrintWriter out, StubDescriptor stubDescriptor)", "modifiers": "private", "return": "void", "signature": "void writeInterceptorDescriptors(PrintWriter out, StubDescriptor stubDescriptor)", "full_signature": "private void writeInterceptorDescriptors(PrintWriter out, StubDescriptor stubDescriptor)", "class_method_signature": "StubDescriptorStatusServlet.writeInterceptorDescriptors(PrintWriter out, StubDescriptor stubDescriptor)", "testcase": false, "constructor": false}, {"identifier": "writeSequenceDescriptors", "parameters": "(final PrintWriter out, final StubDescriptor stubDescriptor)", "modifiers": "private", "return": "void", "signature": "void writeSequenceDescriptors(final PrintWriter out, final StubDescriptor stubDescriptor)", "full_signature": "private void writeSequenceDescriptors(final PrintWriter out, final StubDescriptor stubDescriptor)", "class_method_signature": "StubDescriptorStatusServlet.writeSequenceDescriptors(final PrintWriter out, final StubDescriptor stubDescriptor)", "testcase": false, "constructor": false}, {"identifier": "writeDialogDescriptors", "parameters": "(final PrintWriter out, final StubDescriptor stubDescriptor)", "modifiers": "private", "return": "void", "signature": "void writeDialogDescriptors(final PrintWriter out, final StubDescriptor stubDescriptor)", "full_signature": "private void writeDialogDescriptors(final PrintWriter out, final StubDescriptor stubDescriptor)", "class_method_signature": "StubDescriptorStatusServlet.writeDialogDescriptors(final PrintWriter out, final StubDescriptor stubDescriptor)", "testcase": false, "constructor": false}, {"identifier": "writeInterceptorName", "parameters": "(PrintWriter out, Iterator<InterceptorDescriptor> iterator)", "modifiers": "private", "return": "void", "signature": "void writeInterceptorName(PrintWriter out, Iterator<InterceptorDescriptor> iterator)", "full_signature": "private void writeInterceptorName(PrintWriter out, Iterator<InterceptorDescriptor> iterator)", "class_method_signature": "StubDescriptorStatusServlet.writeInterceptorName(PrintWriter out, Iterator<InterceptorDescriptor> iterator)", "testcase": false, "constructor": false}, {"identifier": "writeSequenceName", "parameters": "(final PrintWriter out, final Iterator<SequenceDescriptor> iterator)", "modifiers": "private", "return": "void", "signature": "void writeSequenceName(final PrintWriter out, final Iterator<SequenceDescriptor> iterator)", "full_signature": "private void writeSequenceName(final PrintWriter out, final Iterator<SequenceDescriptor> iterator)", "class_method_signature": "StubDescriptorStatusServlet.writeSequenceName(final PrintWriter out, final Iterator<SequenceDescriptor> iterator)", "testcase": false, "constructor": false}, {"identifier": "writeNameAndUsage", "parameters": "(final PrintWriter out, final Iterator<DialogDescriptor> iterator)", "modifiers": "private", "return": "void", "signature": "void writeNameAndUsage(final PrintWriter out, final Iterator<DialogDescriptor> iterator)", "full_signature": "private void writeNameAndUsage(final PrintWriter out, final Iterator<DialogDescriptor> iterator)", "class_method_signature": "StubDescriptorStatusServlet.writeNameAndUsage(final PrintWriter out, final Iterator<DialogDescriptor> iterator)", "testcase": false, "constructor": false}, {"identifier": "writeHitcountUsage", "parameters": "(final PrintWriter out, final long validityValue)", "modifiers": "private", "return": "void", "signature": "void writeHitcountUsage(final PrintWriter out, final long validityValue)", "full_signature": "private void writeHitcountUsage(final PrintWriter out, final long validityValue)", "class_method_signature": "StubDescriptorStatusServlet.writeHitcountUsage(final PrintWriter out, final long validityValue)", "testcase": false, "constructor": false}, {"identifier": "writeTimeoutUsage", "parameters": "(final PrintWriter out, final long validityValue)", "modifiers": "private", "return": "void", "signature": "void writeTimeoutUsage(final PrintWriter out, final long validityValue)", "full_signature": "private void writeTimeoutUsage(final PrintWriter out, final long validityValue)", "class_method_signature": "StubDescriptorStatusServlet.writeTimeoutUsage(final PrintWriter out, final long validityValue)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/config/servlet/stub/StubDescriptorStatusServlet.java"}, "focal_method": {"identifier": "doGet", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void doGet(final HttpServletRequest request, final HttpServletResponse response) throws ServletException, IOException {\n        response.setContentType(\"application/json\");\n        PrintWriter out = response.getWriter();\n        Map<String, StubDescriptor> stubDescriptors = routingService.getStubDescriptors();\n        writeAllDialogDescriptors(out, stubDescriptors);\n        out.flush();\n        out.close();\n    }", "signature": "void doGet(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "@Override protected void doGet(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "StubDescriptorStatusServlet.doGet(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["setContentType", "getWriter", "getStubDescriptors", "writeAllDialogDescriptors", "flush", "close"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}