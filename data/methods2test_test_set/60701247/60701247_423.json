{"test_class": {"identifier": "GradleBuildOutputParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private BuildOutputInstantReader myReader;", "modifier": "@Mock private", "type": "BuildOutputInstantReader", "declarator": "myReader", "var_name": "myReader"}, {"original_string": "@Mock private Consumer<BuildEvent> myConsumer;", "modifier": "@Mock private", "type": "Consumer<BuildEvent>", "declarator": "myConsumer", "var_name": "myConsumer"}, {"original_string": "@Nullable private GradleBuildOutputParser myParser;", "modifier": "@Nullable private", "type": "GradleBuildOutputParser", "declarator": "myParser", "var_name": "myParser"}], "file": "android/testSrc/com/android/tools/idea/gradle/project/build/output/GradleBuildOutputParserTest.java"}, "test_case": {"identifier": "parseWithoutError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void parseWithoutError() {\n    String line = \"Non AGBPI error\";\n    assertFalse(myParser.parse(line, myReader, myConsumer));\n  }", "signature": "void parseWithoutError()", "full_signature": "@Test public void parseWithoutError()", "class_method_signature": "GradleBuildOutputParserTest.parseWithoutError()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "parse"]}, "focal_class": {"identifier": "GradleBuildOutputParser", "superclass": "", "interfaces": "implements BuildOutputParser", "fields": [{"original_string": "@NotNull private static final String DEFAULT_MESSAGE_GROUP = ANDROID_GRADLE_PLUGIN_MESSAGES_GROUP + MESSAGE_GROUP_WARNING_SUFFIX;", "modifier": "@NotNull private static final", "type": "String", "declarator": "DEFAULT_MESSAGE_GROUP = ANDROID_GRADLE_PLUGIN_MESSAGES_GROUP + MESSAGE_GROUP_WARNING_SUFFIX", "var_name": "DEFAULT_MESSAGE_GROUP"}, {"original_string": "@NotNull private final Map<Object, Set<String>> futureOutputMap = new HashMap<>();", "modifier": "@NotNull private final", "type": "Map<Object, Set<String>>", "declarator": "futureOutputMap = new HashMap<>()", "var_name": "futureOutputMap"}, {"original_string": "@NotNull private final Gson myGson;", "modifier": "@NotNull private final", "type": "Gson", "declarator": "myGson", "var_name": "myGson"}], "methods": [{"identifier": "GradleBuildOutputParser", "parameters": "()", "modifiers": "public", "return": "", "signature": " GradleBuildOutputParser()", "full_signature": "public  GradleBuildOutputParser()", "class_method_signature": "GradleBuildOutputParser.GradleBuildOutputParser()", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean parse(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer)", "full_signature": "@Override public boolean parse(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer)", "class_method_signature": "GradleBuildOutputParser.parse(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer)", "testcase": false, "constructor": false}, {"identifier": "processMessage", "parameters": "(String line, Object buildId, @NotNull Consumer<? super MessageEvent> messageConsumer)", "modifiers": "private", "return": "void", "signature": "void processMessage(String line, Object buildId, @NotNull Consumer<? super MessageEvent> messageConsumer)", "full_signature": "private void processMessage(String line, Object buildId, @NotNull Consumer<? super MessageEvent> messageConsumer)", "class_method_signature": "GradleBuildOutputParser.processMessage(String line, Object buildId, @NotNull Consumer<? super MessageEvent> messageConsumer)", "testcase": false, "constructor": false}, {"identifier": "getMessageGroup", "parameters": "(@Nullable Message msg)", "modifiers": "@NotNull private static", "return": "String", "signature": "String getMessageGroup(@Nullable Message msg)", "full_signature": "@NotNull private static String getMessageGroup(@Nullable Message msg)", "class_method_signature": "GradleBuildOutputParser.getMessageGroup(@Nullable Message msg)", "testcase": false, "constructor": false}, {"identifier": "convertKind", "parameters": "(@NotNull Kind kind)", "modifiers": "@Contract(pure = true) @NotNull private static", "return": "MessageEvent.Kind", "signature": "MessageEvent.Kind convertKind(@NotNull Kind kind)", "full_signature": "@Contract(pure = true) @NotNull private static MessageEvent.Kind convertKind(@NotNull Kind kind)", "class_method_signature": "GradleBuildOutputParser.convertKind(@NotNull Kind kind)", "testcase": false, "constructor": false}, {"identifier": "convertToFilePosition", "parameters": "(@NotNull SourceFilePosition sourceFilePosition)", "modifiers": "@Nullable private static", "return": "FilePosition", "signature": "FilePosition convertToFilePosition(@NotNull SourceFilePosition sourceFilePosition)", "full_signature": "@Nullable private static FilePosition convertToFilePosition(@NotNull SourceFilePosition sourceFilePosition)", "class_method_signature": "GradleBuildOutputParser.convertToFilePosition(@NotNull SourceFilePosition sourceFilePosition)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/gradle/project/build/output/GradleBuildOutputParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean parse(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer) {\n    String currentLine = line.trim();\n    if (currentLine.startsWith(STDOUT_ERROR_TAG)) {\n      processMessage(currentLine, reader.getParentEventId(), messageConsumer);\n      return true;\n    }\n\n    // consume the line without producing a message, and remove it from the map\n    if (futureOutputMap.getOrDefault(reader.getParentEventId(), Collections.emptySet()).contains(currentLine)) {\n      futureOutputMap.get(reader.getParentEventId()).remove(currentLine);\n      return true;\n    }\n\n    return false;\n  }", "signature": "boolean parse(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer)", "full_signature": "@Override public boolean parse(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer)", "class_method_signature": "GradleBuildOutputParser.parse(@NotNull String line,\n                       @NotNull BuildOutputInstantReader reader,\n                       @NotNull Consumer<? super BuildEvent> messageConsumer)", "testcase": false, "constructor": false, "invocations": ["trim", "startsWith", "processMessage", "getParentEventId", "contains", "getOrDefault", "getParentEventId", "emptySet", "remove", "get", "getParentEventId"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}