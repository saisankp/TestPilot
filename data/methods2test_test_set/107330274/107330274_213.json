{"test_class": {"identifier": "TaskTerminationExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EVICTION_REASON = \"Test eviction\";", "modifier": "private static final", "type": "String", "declarator": "EVICTION_REASON = \"Test eviction\"", "var_name": "EVICTION_REASON"}, {"original_string": "private final TitusRuntime titusRuntime = TitusRuntimes.test();", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.test()", "var_name": "titusRuntime"}, {"original_string": "private final EvictionServiceConfiguration configuration = Archaius2Ext.newConfiguration(EvictionServiceConfiguration.class);", "modifier": "private final", "type": "EvictionServiceConfiguration", "declarator": "configuration = Archaius2Ext.newConfiguration(EvictionServiceConfiguration.class)", "var_name": "configuration"}, {"original_string": "private final JobComponentStub jobComponentStub = new JobComponentStub(titusRuntime);", "modifier": "private final", "type": "JobComponentStub", "declarator": "jobComponentStub = new JobComponentStub(titusRuntime)", "var_name": "jobComponentStub"}, {"original_string": "private final TitusQuotasManager quotasManager = Mockito.mock(TitusQuotasManager.class);", "modifier": "private final", "type": "TitusQuotasManager", "declarator": "quotasManager = Mockito.mock(TitusQuotasManager.class)", "var_name": "quotasManager"}, {"original_string": "private final TitusRxSubscriber<EvictionEvent> eventSubscriber = new TitusRxSubscriber<>();", "modifier": "private final", "type": "TitusRxSubscriber<EvictionEvent>", "declarator": "eventSubscriber = new TitusRxSubscriber<>()", "var_name": "eventSubscriber"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/eviction/service/TaskTerminationExecutorTest.java"}, "test_case": {"identifier": "testTerminateTaskWithEnoughQuota", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTerminateTaskWithEnoughQuota() {\n        Pair<Job, List<Task>> jobAndTask = createAndStartJobWithTasks(1);\n        Job<?> job = jobAndTask.getLeft();\n        Task task = jobAndTask.getRight().get(0);\n\n        when(quotasManager.findEvictionQuota(Reference.job(job.getId()))).thenReturn(Optional.of(EvictionQuota.jobQuota(job.getId(), 1, \"Test\")));\n        when(quotasManager.tryConsumeQuota(job, task)).thenReturn(ConsumptionResult.approved());\n\n        StepVerifier.withVirtualTime(\n                () -> newTerminationExecutor().terminateTask(task.getId(), EVICTION_REASON, \"callerContext\")\n        ).verifyComplete();\n\n        expectTaskTerminationEvent(task, true);\n        verify(quotasManager, times(1)).tryConsumeQuota(job, task);\n    }", "signature": "void testTerminateTaskWithEnoughQuota()", "full_signature": "@Test public void testTerminateTaskWithEnoughQuota()", "class_method_signature": "TaskTerminationExecutorTest.testTerminateTaskWithEnoughQuota()", "testcase": true, "constructor": false, "invocations": ["createAndStartJobWithTasks", "getLeft", "get", "getRight", "thenReturn", "when", "findEvictionQuota", "job", "getId", "of", "jobQuota", "getId", "thenReturn", "when", "tryConsumeQuota", "approved", "verifyComplete", "withVirtualTime", "terminateTask", "newTerminationExecutor", "getId", "expectTaskTerminationEvent", "tryConsumeQuota", "verify", "times"]}, "focal_class": {"identifier": "TaskTerminationExecutor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Duration TASK_TERMINATE_TIMEOUT = Duration.ofSeconds(5);", "modifier": "private static final", "type": "Duration", "declarator": "TASK_TERMINATE_TIMEOUT = Duration.ofSeconds(5)", "var_name": "TASK_TERMINATE_TIMEOUT"}, {"original_string": "private static final Duration TASK_EXCESSIVE_RUNNING_TIMEOUT = Duration.ofSeconds(60);", "modifier": "private static final", "type": "Duration", "declarator": "TASK_EXCESSIVE_RUNNING_TIMEOUT = Duration.ofSeconds(60)", "var_name": "TASK_EXCESSIVE_RUNNING_TIMEOUT"}, {"original_string": "private final V3JobOperations jobOperations;", "modifier": "private final", "type": "V3JobOperations", "declarator": "jobOperations", "var_name": "jobOperations"}, {"original_string": "private final TitusQuotasManager quotasManager;", "modifier": "private final", "type": "TitusQuotasManager", "declarator": "quotasManager", "var_name": "quotasManager"}, {"original_string": "private final ReactorSerializedInvoker<Void> serializedInvoker;", "modifier": "private final", "type": "ReactorSerializedInvoker<Void>", "declarator": "serializedInvoker", "var_name": "serializedInvoker"}, {"original_string": "private final DirectProcessor<EvictionEvent> eventProcessor = DirectProcessor.create();", "modifier": "private final", "type": "DirectProcessor<EvictionEvent>", "declarator": "eventProcessor = DirectProcessor.create()", "var_name": "eventProcessor"}, {"original_string": "private final EvictionTransactionLog transactionLog;", "modifier": "private final", "type": "EvictionTransactionLog", "declarator": "transactionLog", "var_name": "transactionLog"}, {"original_string": "private final TaskTerminationExecutorMetrics metrics;", "modifier": "private final", "type": "TaskTerminationExecutorMetrics", "declarator": "metrics", "var_name": "metrics"}], "methods": [{"identifier": "TaskTerminationExecutor", "parameters": "(EvictionServiceConfiguration configuration,\n                            V3JobOperations jobOperations,\n                            TitusQuotasManager quotasManager,\n                            TitusRuntime titusRuntime,\n                            Scheduler scheduler)", "modifiers": "", "return": "", "signature": " TaskTerminationExecutor(EvictionServiceConfiguration configuration,\n                            V3JobOperations jobOperations,\n                            TitusQuotasManager quotasManager,\n                            TitusRuntime titusRuntime,\n                            Scheduler scheduler)", "full_signature": "  TaskTerminationExecutor(EvictionServiceConfiguration configuration,\n                            V3JobOperations jobOperations,\n                            TitusQuotasManager quotasManager,\n                            TitusRuntime titusRuntime,\n                            Scheduler scheduler)", "class_method_signature": "TaskTerminationExecutor.TaskTerminationExecutor(EvictionServiceConfiguration configuration,\n                            V3JobOperations jobOperations,\n                            TitusQuotasManager quotasManager,\n                            TitusRuntime titusRuntime,\n                            Scheduler scheduler)", "testcase": false, "constructor": true}, {"identifier": "shutdown", "parameters": "()", "modifiers": "", "return": "void", "signature": "void shutdown()", "full_signature": " void shutdown()", "class_method_signature": "TaskTerminationExecutor.shutdown()", "testcase": false, "constructor": false}, {"identifier": "events", "parameters": "()", "modifiers": "", "return": "Flux<EvictionEvent>", "signature": "Flux<EvictionEvent> events()", "full_signature": " Flux<EvictionEvent> events()", "class_method_signature": "TaskTerminationExecutor.events()", "testcase": false, "constructor": false}, {"identifier": "terminateTask", "parameters": "(String taskId, String reason, String callerId)", "modifiers": "public", "return": "Mono<Void>", "signature": "Mono<Void> terminateTask(String taskId, String reason, String callerId)", "full_signature": "public Mono<Void> terminateTask(String taskId, String reason, String callerId)", "class_method_signature": "TaskTerminationExecutor.terminateTask(String taskId, String reason, String callerId)", "testcase": false, "constructor": false}, {"identifier": "findAndVerifyJobAndTask", "parameters": "(String taskId, String reason, String callerId)", "modifiers": "private", "return": "Mono<Pair<Job<?>, Task>>", "signature": "Mono<Pair<Job<?>, Task>> findAndVerifyJobAndTask(String taskId, String reason, String callerId)", "full_signature": "private Mono<Pair<Job<?>, Task>> findAndVerifyJobAndTask(String taskId, String reason, String callerId)", "class_method_signature": "TaskTerminationExecutor.findAndVerifyJobAndTask(String taskId, String reason, String callerId)", "testcase": false, "constructor": false}, {"identifier": "doTerminateTask", "parameters": "(String taskId, String reason, Job<?> job, Task task, String callerId)", "modifiers": "private", "return": "Mono<Void>", "signature": "Mono<Void> doTerminateTask(String taskId, String reason, Job<?> job, Task task, String callerId)", "full_signature": "private Mono<Void> doTerminateTask(String taskId, String reason, Job<?> job, Task task, String callerId)", "class_method_signature": "TaskTerminationExecutor.doTerminateTask(String taskId, String reason, Job<?> job, Task task, String callerId)", "testcase": false, "constructor": false}, {"identifier": "checkTaskIsRunningOrThrowAnException", "parameters": "(String taskId)", "modifiers": "private", "return": "Pair<Job<?>, Task>", "signature": "Pair<Job<?>, Task> checkTaskIsRunningOrThrowAnException(String taskId)", "full_signature": "private Pair<Job<?>, Task> checkTaskIsRunningOrThrowAnException(String taskId)", "class_method_signature": "TaskTerminationExecutor.checkTaskIsRunningOrThrowAnException(String taskId)", "testcase": false, "constructor": false}, {"identifier": "onValidationError", "parameters": "(String taskId, String reason, String callerId, Throwable error)", "modifiers": "private", "return": "void", "signature": "void onValidationError(String taskId, String reason, String callerId, Throwable error)", "full_signature": "private void onValidationError(String taskId, String reason, String callerId, Throwable error)", "class_method_signature": "TaskTerminationExecutor.onValidationError(String taskId, String reason, String callerId, Throwable error)", "testcase": false, "constructor": false}, {"identifier": "onSuccessfulTermination", "parameters": "(Job<?> job, String taskId, String reason, String callerContext)", "modifiers": "private", "return": "void", "signature": "void onSuccessfulTermination(Job<?> job, String taskId, String reason, String callerContext)", "full_signature": "private void onSuccessfulTermination(Job<?> job, String taskId, String reason, String callerContext)", "class_method_signature": "TaskTerminationExecutor.onSuccessfulTermination(Job<?> job, String taskId, String reason, String callerContext)", "testcase": false, "constructor": false}, {"identifier": "onTerminationError", "parameters": "(Job<?> job, String taskId, String reason, String callerId, Throwable error)", "modifiers": "private", "return": "void", "signature": "void onTerminationError(Job<?> job, String taskId, String reason, String callerId, Throwable error)", "full_signature": "private void onTerminationError(Job<?> job, String taskId, String reason, String callerId, Throwable error)", "class_method_signature": "TaskTerminationExecutor.onTerminationError(Job<?> job, String taskId, String reason, String callerId, Throwable error)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/eviction/service/TaskTerminationExecutor.java"}, "focal_method": {"identifier": "terminateTask", "parameters": "(String taskId, String reason, String callerId)", "modifiers": "public", "return": "Mono<Void>", "body": "public Mono<Void> terminateTask(String taskId, String reason, String callerId) {\n        return findAndVerifyJobAndTask(taskId, reason, callerId)\n                .flatMap(jobTaskPair -> {\n                    Job<?> job = jobTaskPair.getLeft();\n                    Task task = jobTaskPair.getRight();\n\n                    return serializedInvoker\n                            .submit(doTerminateTask(taskId, reason, job, task, callerId))\n                            .doOnSuccess(next -> onSuccessfulTermination(job, taskId, reason, callerId))\n                            .doOnError(error -> onTerminationError(job, taskId, reason, callerId, error));\n                });\n    }", "signature": "Mono<Void> terminateTask(String taskId, String reason, String callerId)", "full_signature": "public Mono<Void> terminateTask(String taskId, String reason, String callerId)", "class_method_signature": "TaskTerminationExecutor.terminateTask(String taskId, String reason, String callerId)", "testcase": false, "constructor": false, "invocations": ["flatMap", "findAndVerifyJobAndTask", "getLeft", "getRight", "doOnError", "doOnSuccess", "submit", "doTerminateTask", "onSuccessfulTermination", "onTerminationError"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}