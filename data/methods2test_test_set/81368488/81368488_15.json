{"test_class": {"identifier": "StatDisplayUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GazePlay gazePlay;", "modifier": "@Mock\n    private", "type": "GazePlay", "declarator": "gazePlay", "var_name": "gazePlay"}, {"original_string": "@Mock(answer = Answers.RETURNS_DEEP_STUBS)\n    private StatsContext mockStatsContext;", "modifier": "@Mock(answer = Answers.RETURNS_DEEP_STUBS)\n    private", "type": "StatsContext", "declarator": "mockStatsContext", "var_name": "mockStatsContext"}, {"original_string": "@Mock\n    private Stats mockStats;", "modifier": "@Mock\n    private", "type": "Stats", "declarator": "mockStats", "var_name": "mockStats"}, {"original_string": "@Mock\n    private ShootGamesStats mockShootStats;", "modifier": "@Mock\n    private", "type": "ShootGamesStats", "declarator": "mockShootStats", "var_name": "mockShootStats"}, {"original_string": "@Mock\n    private Region mockRegion;", "modifier": "@Mock\n    private", "type": "Region", "declarator": "mockRegion", "var_name": "mockRegion"}, {"original_string": "@Mock\n    private ScreenDimensionSupplier screenDimensionSupplier;", "modifier": "@Mock\n    private", "type": "ScreenDimensionSupplier", "declarator": "screenDimensionSupplier", "var_name": "screenDimensionSupplier"}, {"original_string": "@Captor\n    private ArgumentCaptor<Cursor> captor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Cursor>", "declarator": "captor", "var_name": "captor"}], "file": "gazeplay-core/src/test/java/net/gazeplay/commons/utils/stats/StatDisplayUtilsTest.java"}, "test_case": {"identifier": "shouldZoomInToAreaChart", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldZoomInToAreaChart() {\n        final LinkedList<FixationPoint> mockPoints = new LinkedList<>(List.of(\n            new FixationPoint(50, 50, 1, 2),\n            new FixationPoint(100, 100, 2, 3),\n            new FixationPoint(150, 150, 4, 5)\n        ));\n\n        final AreaChart<Number, Number> areaChart = StatDisplayUtils.buildAreaChart(mockPoints, mockRegion);\n        final VBox parent = new VBox();\n        parent.getChildren().add(areaChart);\n\n        areaChart.fireEvent(mouseClickEvent(areaChart));\n\n        // These assertions are a bit rubbish - need to find a way to set the parent bounds.\n        assertEquals(0, areaChart.getTranslateX());\n        assertEquals(0, areaChart.getTranslateY());\n    }", "signature": "void shouldZoomInToAreaChart()", "full_signature": "@Test void shouldZoomInToAreaChart()", "class_method_signature": "StatDisplayUtilsTest.shouldZoomInToAreaChart()", "testcase": true, "constructor": false, "invocations": ["of", "buildAreaChart", "add", "getChildren", "fireEvent", "mouseClickEvent", "assertEquals", "getTranslateX", "assertEquals", "getTranslateY"]}, "focal_class": {"identifier": "StatDisplayUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "createHomeButtonInStatsScreen", "parameters": "(GazePlay gazePlay, StatsContext statsContext)", "modifiers": "public static", "return": "HomeButton", "signature": "HomeButton createHomeButtonInStatsScreen(GazePlay gazePlay, StatsContext statsContext)", "full_signature": "public static HomeButton createHomeButtonInStatsScreen(GazePlay gazePlay, StatsContext statsContext)", "class_method_signature": "StatDisplayUtils.createHomeButtonInStatsScreen(GazePlay gazePlay, StatsContext statsContext)", "testcase": false, "constructor": false}, {"identifier": "returnToMenu", "parameters": "(GazePlay gazePlay, StatsContext statsContext)", "modifiers": "static", "return": "void", "signature": "void returnToMenu(GazePlay gazePlay, StatsContext statsContext)", "full_signature": "static void returnToMenu(GazePlay gazePlay, StatsContext statsContext)", "class_method_signature": "StatDisplayUtils.returnToMenu(GazePlay gazePlay, StatsContext statsContext)", "testcase": false, "constructor": false}, {"identifier": "buildLineChart", "parameters": "(Stats stats, final Region root)", "modifiers": "public static", "return": "LineChart<String, Number>", "signature": "LineChart<String, Number> buildLineChart(Stats stats, final Region root)", "full_signature": "public static LineChart<String, Number> buildLineChart(Stats stats, final Region root)", "class_method_signature": "StatDisplayUtils.buildLineChart(Stats stats, final Region root)", "testcase": false, "constructor": false}, {"identifier": "buildAreaChart", "parameters": "(LinkedList<FixationPoint> points, final Region root)", "modifiers": "public static", "return": "AreaChart<Number, Number>", "signature": "AreaChart<Number, Number> buildAreaChart(LinkedList<FixationPoint> points, final Region root)", "full_signature": "public static AreaChart<Number, Number> buildAreaChart(LinkedList<FixationPoint> points, final Region root)", "class_method_signature": "StatDisplayUtils.buildAreaChart(LinkedList<FixationPoint> points, final Region root)", "testcase": false, "constructor": false}, {"identifier": "buildGazeMetrics", "parameters": "(Stats stats, final Region root)", "modifiers": "public static", "return": "ImageView", "signature": "ImageView buildGazeMetrics(Stats stats, final Region root)", "full_signature": "public static ImageView buildGazeMetrics(Stats stats, final Region root)", "class_method_signature": "StatDisplayUtils.buildGazeMetrics(Stats stats, final Region root)", "testcase": false, "constructor": false}, {"identifier": "resetToOriginalIndexInParent", "parameters": "(Node node, int originalIndexInParent)", "modifiers": "private static", "return": "void", "signature": "void resetToOriginalIndexInParent(Node node, int originalIndexInParent)", "full_signature": "private static void resetToOriginalIndexInParent(Node node, int originalIndexInParent)", "class_method_signature": "StatDisplayUtils.resetToOriginalIndexInParent(Node node, int originalIndexInParent)", "testcase": false, "constructor": false}, {"identifier": "getOriginalIndexInParent", "parameters": "(Node node)", "modifiers": "private static", "return": "int", "signature": "int getOriginalIndexInParent(Node node)", "full_signature": "private static int getOriginalIndexInParent(Node node)", "class_method_signature": "StatDisplayUtils.getOriginalIndexInParent(Node node)", "testcase": false, "constructor": false}, {"identifier": "createZoomOutAreaChartEventHandler", "parameters": "(XYChart<Number, Number> chart,\n                                                                          final Region root, int originalIndexInParent)", "modifiers": "private static", "return": "EventHandler<Event>", "signature": "EventHandler<Event> createZoomOutAreaChartEventHandler(XYChart<Number, Number> chart,\n                                                                          final Region root, int originalIndexInParent)", "full_signature": "private static EventHandler<Event> createZoomOutAreaChartEventHandler(XYChart<Number, Number> chart,\n                                                                          final Region root, int originalIndexInParent)", "class_method_signature": "StatDisplayUtils.createZoomOutAreaChartEventHandler(XYChart<Number, Number> chart,\n                                                                          final Region root, int originalIndexInParent)", "testcase": false, "constructor": false}, {"identifier": "createZoomOutLineChartEventHandler", "parameters": "(XYChart<String, Number> chart,\n                                                                          final Region root, int originalIndexInParent)", "modifiers": "private static", "return": "EventHandler<Event>", "signature": "EventHandler<Event> createZoomOutLineChartEventHandler(XYChart<String, Number> chart,\n                                                                          final Region root, int originalIndexInParent)", "full_signature": "private static EventHandler<Event> createZoomOutLineChartEventHandler(XYChart<String, Number> chart,\n                                                                          final Region root, int originalIndexInParent)", "class_method_signature": "StatDisplayUtils.createZoomOutLineChartEventHandler(XYChart<String, Number> chart,\n                                                                          final Region root, int originalIndexInParent)", "testcase": false, "constructor": false}, {"identifier": "createZoomInAreaChartEventHandler", "parameters": "(XYChart<Number, Number> chart,\n                                                                         final Region root)", "modifiers": "private static", "return": "EventHandler<Event>", "signature": "EventHandler<Event> createZoomInAreaChartEventHandler(XYChart<Number, Number> chart,\n                                                                         final Region root)", "full_signature": "private static EventHandler<Event> createZoomInAreaChartEventHandler(XYChart<Number, Number> chart,\n                                                                         final Region root)", "class_method_signature": "StatDisplayUtils.createZoomInAreaChartEventHandler(XYChart<Number, Number> chart,\n                                                                         final Region root)", "testcase": false, "constructor": false}, {"identifier": "createZoomInLineChartEventHandler", "parameters": "(XYChart<String, Number> chart,\n                                                                         final Region root)", "modifiers": "private static", "return": "EventHandler<Event>", "signature": "EventHandler<Event> createZoomInLineChartEventHandler(XYChart<String, Number> chart,\n                                                                         final Region root)", "full_signature": "private static EventHandler<Event> createZoomInLineChartEventHandler(XYChart<String, Number> chart,\n                                                                         final Region root)", "class_method_signature": "StatDisplayUtils.createZoomInLineChartEventHandler(XYChart<String, Number> chart,\n                                                                         final Region root)", "testcase": false, "constructor": false}, {"identifier": "createZoomOutGazeMetricsEventHandler", "parameters": "(ImageView gazeMetrics, final Region root,\n                                                                            int originalIndexInParent)", "modifiers": "private static", "return": "EventHandler<Event>", "signature": "EventHandler<Event> createZoomOutGazeMetricsEventHandler(ImageView gazeMetrics, final Region root,\n                                                                            int originalIndexInParent)", "full_signature": "private static EventHandler<Event> createZoomOutGazeMetricsEventHandler(ImageView gazeMetrics, final Region root,\n                                                                            int originalIndexInParent)", "class_method_signature": "StatDisplayUtils.createZoomOutGazeMetricsEventHandler(ImageView gazeMetrics, final Region root,\n                                                                            int originalIndexInParent)", "testcase": false, "constructor": false}, {"identifier": "createZoomInGazeMetricsEventHandler", "parameters": "(ImageView gazeMetrics, final Region root)", "modifiers": "private static", "return": "EventHandler<Event>", "signature": "EventHandler<Event> createZoomInGazeMetricsEventHandler(ImageView gazeMetrics, final Region root)", "full_signature": "private static EventHandler<Event> createZoomInGazeMetricsEventHandler(ImageView gazeMetrics, final Region root)", "class_method_signature": "StatDisplayUtils.createZoomInGazeMetricsEventHandler(ImageView gazeMetrics, final Region root)", "testcase": false, "constructor": false}, {"identifier": "zoomOutAndReset", "parameters": "(Node node)", "modifiers": "private static", "return": "void", "signature": "void zoomOutAndReset(Node node)", "full_signature": "private static void zoomOutAndReset(Node node)", "class_method_signature": "StatDisplayUtils.zoomOutAndReset(Node node)", "testcase": false, "constructor": false}, {"identifier": "zoomInAndCenter", "parameters": "(Node node, double initialWidth, double initialHeight, boolean preserveRatio)", "modifiers": "private static", "return": "void", "signature": "void zoomInAndCenter(Node node, double initialWidth, double initialHeight, boolean preserveRatio)", "full_signature": "private static void zoomInAndCenter(Node node, double initialWidth, double initialHeight, boolean preserveRatio)", "class_method_signature": "StatDisplayUtils.zoomInAndCenter(Node node, double initialWidth, double initialHeight, boolean preserveRatio)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(long totalTime)", "modifiers": "public static", "return": "String", "signature": "String convert(long totalTime)", "full_signature": "public static String convert(long totalTime)", "class_method_signature": "StatDisplayUtils.convert(long totalTime)", "testcase": false, "constructor": false}], "file": "gazeplay-core/src/main/java/net/gazeplay/commons/utils/stats/StatDisplayUtils.java"}, "focal_method": {"identifier": "buildAreaChart", "parameters": "(LinkedList<FixationPoint> points, final Region root)", "modifiers": "public static", "return": "AreaChart<Number, Number>", "body": "public static AreaChart<Number, Number> buildAreaChart(LinkedList<FixationPoint> points, final Region root) {\n\n        final NumberAxis xAxis = new NumberAxis();\n        final NumberAxis yAxis = new NumberAxis();\n\n        xAxis.setTickLabelsVisible(false);\n        yAxis.setLabel(\"Coordinates\");\n\n        AreaChart<Number, Number> colorBands = new AreaChart<>(xAxis, yAxis);\n        colorBands.setTitle(\"Color Bands\");\n\n        colorBands.setCreateSymbols(true);\n        colorBands.setLegendVisible(true);\n\n        if (points.size() > 0) {\n\n            Series<Number, Number> xEyeCoordinates = new Series<>();\n            xEyeCoordinates.setName(\"X coordinate\");\n\n            Series<Number, Number> yEyeCoordinates = new Series<>();\n            yEyeCoordinates.setName(\"Y coordinate\");\n\n            for (FixationPoint p : points) {\n                xEyeCoordinates.getData().add(new Data<>(p.getTimeGaze(), p.getY()));\n                yEyeCoordinates.getData().add(new Data<>(p.getTimeGaze(), p.getX()));\n            }\n\n            colorBands.getData().addAll(xEyeCoordinates, yEyeCoordinates);\n\n            EventHandler<Event> openAreaChartEvent = createZoomInAreaChartEventHandler(colorBands, root);\n\n            colorBands.addEventHandler(MouseEvent.MOUSE_CLICKED, openAreaChartEvent);\n\n            root.widthProperty().addListener(\n                (observable, oldValue, newValue) -> colorBands.setMaxWidth(newValue.doubleValue() * 0.4));\n            root.heightProperty().addListener(\n                (observable, oldValue, newValue) -> colorBands.setMaxHeight(newValue.doubleValue() * 0.4));\n            colorBands.setMaxWidth(root.getWidth() * 0.4);\n            colorBands.setMaxHeight(root.getHeight() * 0.4);\n\n            return colorBands;\n        } else\n            return null;\n    }", "signature": "AreaChart<Number, Number> buildAreaChart(LinkedList<FixationPoint> points, final Region root)", "full_signature": "public static AreaChart<Number, Number> buildAreaChart(LinkedList<FixationPoint> points, final Region root)", "class_method_signature": "StatDisplayUtils.buildAreaChart(LinkedList<FixationPoint> points, final Region root)", "testcase": false, "constructor": false, "invocations": ["setTickLabelsVisible", "setLabel", "setTitle", "setCreateSymbols", "setLegendVisible", "size", "setName", "setName", "add", "getData", "getTimeGaze", "getY", "add", "getData", "getTimeGaze", "getX", "addAll", "getData", "createZoomInAreaChartEventHandler", "addEventHandler", "addListener", "widthProperty", "setMaxWidth", "doubleValue", "addListener", "heightProperty", "setMaxHeight", "doubleValue", "setMaxWidth", "getWidth", "setMaxHeight", "getHeight"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}