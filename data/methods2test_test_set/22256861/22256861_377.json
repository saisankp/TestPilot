{"test_class": {"identifier": "ModisBandReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "s3tbx-modis-reader/src/test/java/org/esa/s3tbx/dataio/modis/bandreader/ModisBandReaderTest.java"}, "test_case": {"identifier": "testDecodeScalingMethod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDecodeScalingMethod() {\n        assertEquals(ModisBandReader.SCALE_UNKNOWN, ModisBandReader.decodeScalingMethod(null));\n        assertEquals(ModisBandReader.SCALE_UNKNOWN, ModisBandReader.decodeScalingMethod(\"\"));\n\n        assertEquals(ModisBandReader.SCALE_LINEAR, ModisBandReader.decodeScalingMethod(ModisConstants.LINEAR_SCALE_NAME));\n        assertEquals(ModisBandReader.SCALE_EXPONENTIAL, ModisBandReader.decodeScalingMethod(ModisConstants.EXPONENTIAL_SCALE_NAME));\n        assertEquals(ModisBandReader.SCALE_POW_10, ModisBandReader.decodeScalingMethod(ModisConstants.POW_10_SCALE_NAME));\n        assertEquals(ModisBandReader.SCALE_SLOPE_INTERCEPT, ModisBandReader.decodeScalingMethod(ModisConstants.SLOPE_INTERCEPT_SCALE_NAME));\n    }", "signature": "void testDecodeScalingMethod()", "full_signature": "@Test public void testDecodeScalingMethod()", "class_method_signature": "ModisBandReaderTest.testDecodeScalingMethod()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "decodeScalingMethod", "assertEquals", "decodeScalingMethod", "assertEquals", "decodeScalingMethod", "assertEquals", "decodeScalingMethod", "assertEquals", "decodeScalingMethod", "assertEquals", "decodeScalingMethod"]}, "focal_class": {"identifier": "ModisBandReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int SCALE_UNKNOWN = 0;", "modifier": "public static final", "type": "int", "declarator": "SCALE_UNKNOWN = 0", "var_name": "SCALE_UNKNOWN"}, {"original_string": "public static final int SCALE_LINEAR = 1;", "modifier": "public static final", "type": "int", "declarator": "SCALE_LINEAR = 1", "var_name": "SCALE_LINEAR"}, {"original_string": "public static final int SCALE_EXPONENTIAL = 2;", "modifier": "public static final", "type": "int", "declarator": "SCALE_EXPONENTIAL = 2", "var_name": "SCALE_EXPONENTIAL"}, {"original_string": "public static final int SCALE_POW_10 = 3;", "modifier": "public static final", "type": "int", "declarator": "SCALE_POW_10 = 3", "var_name": "SCALE_POW_10"}, {"original_string": "public static final int SCALE_SLOPE_INTERCEPT = 4;", "modifier": "public static final", "type": "int", "declarator": "SCALE_SLOPE_INTERCEPT = 4", "var_name": "SCALE_SLOPE_INTERCEPT"}, {"original_string": "protected int layer;", "modifier": "protected", "type": "int", "declarator": "layer", "var_name": "layer"}, {"original_string": "protected float scale;", "modifier": "protected", "type": "float", "declarator": "scale", "var_name": "scale"}, {"original_string": "protected float offset;", "modifier": "protected", "type": "float", "declarator": "offset", "var_name": "offset"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "protected int[] start;", "modifier": "protected", "type": "int[]", "declarator": "start", "var_name": "start"}, {"original_string": "protected int[] stride;", "modifier": "protected", "type": "int[]", "declarator": "stride", "var_name": "stride"}, {"original_string": "protected int[] count;", "modifier": "protected", "type": "int[]", "declarator": "count", "var_name": "count"}, {"original_string": "protected int xCoord;", "modifier": "protected", "type": "int", "declarator": "xCoord", "var_name": "xCoord"}, {"original_string": "protected int yCoord;", "modifier": "protected", "type": "int", "declarator": "yCoord", "var_name": "yCoord"}, {"original_string": "protected Range validRange;", "modifier": "protected", "type": "Range", "declarator": "validRange", "var_name": "validRange"}, {"original_string": "protected double fillValue;", "modifier": "protected", "type": "double", "declarator": "fillValue", "var_name": "fillValue"}, {"original_string": "protected Variable variable;", "modifier": "protected", "type": "Variable", "declarator": "variable", "var_name": "variable"}], "methods": [{"identifier": "ModisBandReader", "parameters": "(Variable variable, final int layer, final boolean is3d)", "modifiers": "public", "return": "", "signature": " ModisBandReader(Variable variable, final int layer, final boolean is3d)", "full_signature": "public  ModisBandReader(Variable variable, final int layer, final boolean is3d)", "class_method_signature": "ModisBandReader.ModisBandReader(Variable variable, final int layer, final boolean is3d)", "testcase": false, "constructor": true}, {"identifier": "setName", "parameters": "(final String name)", "modifiers": "public", "return": "void", "signature": "void setName(final String name)", "full_signature": "public void setName(final String name)", "class_method_signature": "ModisBandReader.setName(final String name)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "ModisBandReader.getName()", "testcase": false, "constructor": false}, {"identifier": "decodeScalingMethod", "parameters": "(final String scaleMethod)", "modifiers": "public static", "return": "int", "signature": "int decodeScalingMethod(final String scaleMethod)", "full_signature": "public static int decodeScalingMethod(final String scaleMethod)", "class_method_signature": "ModisBandReader.decodeScalingMethod(final String scaleMethod)", "testcase": false, "constructor": false}, {"identifier": "setScaleAndOffset", "parameters": "(final float scale, final float offset)", "modifiers": "public", "return": "void", "signature": "void setScaleAndOffset(final float scale, final float offset)", "full_signature": "public void setScaleAndOffset(final float scale, final float offset)", "class_method_signature": "ModisBandReader.setScaleAndOffset(final float scale, final float offset)", "testcase": false, "constructor": false}, {"identifier": "setValidRange", "parameters": "(Range validRange)", "modifiers": "public", "return": "void", "signature": "void setValidRange(Range validRange)", "full_signature": "public void setValidRange(Range validRange)", "class_method_signature": "ModisBandReader.setValidRange(Range validRange)", "testcase": false, "constructor": false}, {"identifier": "prepareForReading", "parameters": "(final int sourceOffsetX, final int sourceOffsetY,\n                                              final int sourceWidth, final int sourceHeight,\n                                              final int sourceStepX, final int sourceStepY,\n                                              final ProductData destBuffer)", "modifiers": "abstract protected", "return": "void", "signature": "void prepareForReading(final int sourceOffsetX, final int sourceOffsetY,\n                                              final int sourceWidth, final int sourceHeight,\n                                              final int sourceStepX, final int sourceStepY,\n                                              final ProductData destBuffer)", "full_signature": "abstract protected void prepareForReading(final int sourceOffsetX, final int sourceOffsetY,\n                                              final int sourceWidth, final int sourceHeight,\n                                              final int sourceStepX, final int sourceStepY,\n                                              final ProductData destBuffer)", "class_method_signature": "ModisBandReader.prepareForReading(final int sourceOffsetX, final int sourceOffsetY,\n                                              final int sourceWidth, final int sourceHeight,\n                                              final int sourceStepX, final int sourceStepY,\n                                              final ProductData destBuffer)", "testcase": false, "constructor": false}, {"identifier": "readLine", "parameters": "()", "modifiers": "abstract protected", "return": "void", "signature": "void readLine()", "full_signature": "abstract protected void readLine()", "class_method_signature": "ModisBandReader.readLine()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final int x)", "modifiers": "abstract protected", "return": "void", "signature": "void validate(final int x)", "full_signature": "abstract protected void validate(final int x)", "class_method_signature": "ModisBandReader.validate(final int x)", "testcase": false, "constructor": false}, {"identifier": "assign", "parameters": "(final int x)", "modifiers": "abstract protected", "return": "void", "signature": "void assign(final int x)", "full_signature": "abstract protected void assign(final int x)", "class_method_signature": "ModisBandReader.assign(final int x)", "testcase": false, "constructor": false}, {"identifier": "setFillValue", "parameters": "(double fillValue)", "modifiers": "public", "return": "void", "signature": "void setFillValue(double fillValue)", "full_signature": "public void setFillValue(double fillValue)", "class_method_signature": "ModisBandReader.setFillValue(double fillValue)", "testcase": false, "constructor": false}, {"identifier": "getDataType", "parameters": "()", "modifiers": "abstract public", "return": "int", "signature": "int getDataType()", "full_signature": "abstract public int getDataType()", "class_method_signature": "ModisBandReader.getDataType()", "testcase": false, "constructor": false}, {"identifier": "readBandData", "parameters": "(int sourceOffsetX, int sourceOffsetY, int sourceWidth, int sourceHeight,\n                             int sourceStepX, int sourceStepY, ProductData destBuffer, ProgressMonitor pm)", "modifiers": "public", "return": "void", "signature": "void readBandData(int sourceOffsetX, int sourceOffsetY, int sourceWidth, int sourceHeight,\n                             int sourceStepX, int sourceStepY, ProductData destBuffer, ProgressMonitor pm)", "full_signature": "public void readBandData(int sourceOffsetX, int sourceOffsetY, int sourceWidth, int sourceHeight,\n                             int sourceStepX, int sourceStepY, ProductData destBuffer, ProgressMonitor pm)", "class_method_signature": "ModisBandReader.readBandData(int sourceOffsetX, int sourceOffsetY, int sourceWidth, int sourceHeight,\n                             int sourceStepX, int sourceStepY, ProductData destBuffer, ProgressMonitor pm)", "testcase": false, "constructor": false}], "file": "s3tbx-modis-reader/src/main/java/org/esa/s3tbx/dataio/modis/bandreader/ModisBandReader.java"}, "focal_method": {"identifier": "decodeScalingMethod", "parameters": "(final String scaleMethod)", "modifiers": "public static", "return": "int", "body": "public static int decodeScalingMethod(final String scaleMethod) {\n        if (scaleMethod != null) {\n            if (scaleMethod.equalsIgnoreCase(ModisConstants.LINEAR_SCALE_NAME)) {\n                return SCALE_LINEAR;\n            } else if (scaleMethod.equalsIgnoreCase(ModisConstants.EXPONENTIAL_SCALE_NAME)) {\n                return SCALE_EXPONENTIAL;\n            } else if (scaleMethod.equalsIgnoreCase(ModisConstants.POW_10_SCALE_NAME)) {\n                return SCALE_POW_10;\n            } else if (scaleMethod.equalsIgnoreCase(ModisConstants.SLOPE_INTERCEPT_SCALE_NAME)) {\n                return SCALE_SLOPE_INTERCEPT;\n            }\n        }\n        return SCALE_UNKNOWN;\n    }", "signature": "int decodeScalingMethod(final String scaleMethod)", "full_signature": "public static int decodeScalingMethod(final String scaleMethod)", "class_method_signature": "ModisBandReader.decodeScalingMethod(final String scaleMethod)", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "equalsIgnoreCase", "equalsIgnoreCase", "equalsIgnoreCase"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}