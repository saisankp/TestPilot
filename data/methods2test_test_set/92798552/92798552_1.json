{"test_class": {"identifier": "Kv78ProcessTaskTest", "superclass": "", "interfaces": "", "fields": [], "file": "distribution/src/test/java/nl/crowndov/displaydirect/distribution/input/Kv78ProcessTaskTest.java"}, "test_case": {"identifier": "testShutdown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShutdown() throws InterruptedException {\n        ExecutorService e = Executors.newFixedThreadPool(1);\n        Kv78ProcessTask proc = new Kv78ProcessTask(9100);\n        Kv78ReceiveTask receive = new Kv78ReceiveTask(9100);\n        e.submit(proc);\n        e.submit(receive);\n\n        Thread.sleep(1000L);\n\n        receive.stop();\n        proc.stop();\n        e.shutdown();\n        e.shutdownNow();\n    }", "signature": "void testShutdown()", "full_signature": "@Test public void testShutdown()", "class_method_signature": "Kv78ProcessTaskTest.testShutdown()", "testcase": true, "constructor": false, "invocations": ["newFixedThreadPool", "submit", "submit", "sleep", "stop", "stop", "shutdown", "shutdownNow"]}, "focal_class": {"identifier": "Kv78ProcessTask", "superclass": "", "interfaces": "implements Runnable", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Kv78ProcessTask.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Kv78ProcessTask.class)", "var_name": "LOGGER"}, {"original_string": "private final int port;", "modifier": "private final", "type": "int", "declarator": "port", "var_name": "port"}, {"original_string": "private ZMQ.Context processContext = ZMQ.context(1);", "modifier": "private", "type": "ZMQ.Context", "declarator": "processContext = ZMQ.context(1)", "var_name": "processContext"}, {"original_string": "private ZMQ.Socket pull = processContext.socket(ZMQ.PULL);", "modifier": "private", "type": "ZMQ.Socket", "declarator": "pull = processContext.socket(ZMQ.PULL)", "var_name": "pull"}, {"original_string": "private MetricStore metrics = MetricStore.getInstance();", "modifier": "private", "type": "MetricStore", "declarator": "metrics = MetricStore.getInstance()", "var_name": "metrics"}, {"original_string": "private AtomicBoolean stopped = new AtomicBoolean(false);", "modifier": "private", "type": "AtomicBoolean", "declarator": "stopped = new AtomicBoolean(false)", "var_name": "stopped"}], "methods": [{"identifier": "Kv78ProcessTask", "parameters": "(int port)", "modifiers": "public", "return": "", "signature": " Kv78ProcessTask(int port)", "full_signature": "public  Kv78ProcessTask(int port)", "class_method_signature": "Kv78ProcessTask.Kv78ProcessTask(int port)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "Kv78ProcessTask.run()", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void disconnect()", "full_signature": "private void disconnect()", "class_method_signature": "Kv78ProcessTask.disconnect()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "Kv78ProcessTask.stop()", "testcase": false, "constructor": false}], "file": "distribution/src/main/java/nl/crowndov/displaydirect/distribution/input/Kv78ProcessTask.java"}, "focal_method": {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void stop() {\n        stopped.set(true);\n        disconnect();\n    }", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "Kv78ProcessTask.stop()", "testcase": false, "constructor": false, "invocations": ["set", "disconnect"]}, "repository": {"repo_id": 92798552, "url": "https://github.com/CROW-NDOV/displaydirect", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 6, "size": 247, "license": "licensed"}}