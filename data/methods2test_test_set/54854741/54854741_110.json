{"test_class": {"identifier": "CategoriesServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private final CategoriesPersistenceService persistenceService = mock(CategoriesPersistenceService.class);", "modifier": "private final", "type": "CategoriesPersistenceService", "declarator": "persistenceService = mock(CategoriesPersistenceService.class)", "var_name": "persistenceService"}, {"original_string": "private final CategoriesService categoriesService = new CategoriesService(persistenceService,\n\t\t\tnew EntityEventSupport());", "modifier": "private final", "type": "CategoriesService", "declarator": "categoriesService = new CategoriesService(persistenceService,\n\t\t\tnew EntityEventSupport())", "var_name": "categoriesService"}, {"original_string": "private final Categories categories = new Categories(ImmutableList.of(new Category(\"A\")));", "modifier": "private final", "type": "Categories", "declarator": "categories = new Categories(ImmutableList.of(new Category(\"A\")))", "var_name": "categories"}, {"original_string": "private Categories savedCategories;", "modifier": "private", "type": "Categories", "declarator": "savedCategories", "var_name": "savedCategories"}], "file": "services/src/test/java/com/greensopinion/finance/services/domain/CategoriesServiceTest.java"}, "test_case": {"identifier": "createNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void createNull() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\"Must provide a category.\");\n\t\tcategoriesService.create(null);\n\t}", "signature": "void createNull()", "full_signature": "@Test public void createNull()", "class_method_signature": "CategoriesServiceTest.createNull()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "create"]}, "focal_class": {"identifier": "CategoriesService", "superclass": "extends ConfigurationService<Categories>", "interfaces": "", "fields": [], "methods": [{"identifier": "CategoriesService", "parameters": "(CategoriesPersistenceService persistenceService, EntityEventSupport eventSupport)", "modifiers": "@Inject", "return": "", "signature": " CategoriesService(CategoriesPersistenceService persistenceService, EntityEventSupport eventSupport)", "full_signature": "@Inject  CategoriesService(CategoriesPersistenceService persistenceService, EntityEventSupport eventSupport)", "class_method_signature": "CategoriesService.CategoriesService(CategoriesPersistenceService persistenceService, EntityEventSupport eventSupport)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Category category)", "modifiers": "public", "return": "void", "signature": "void create(Category category)", "full_signature": "public void create(Category category)", "class_method_signature": "CategoriesService.create(Category category)", "testcase": false, "constructor": false}, {"identifier": "deleteByName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void deleteByName(String name)", "full_signature": "public void deleteByName(String name)", "class_method_signature": "CategoriesService.deleteByName(String name)", "testcase": false, "constructor": false}, {"identifier": "addRuleByName", "parameters": "(String name, MatchRule matchRule)", "modifiers": "public", "return": "void", "signature": "void addRuleByName(String name, MatchRule matchRule)", "full_signature": "public void addRuleByName(String name, MatchRule matchRule)", "class_method_signature": "CategoriesService.addRuleByName(String name, MatchRule matchRule)", "testcase": false, "constructor": false}, {"identifier": "findCategoryByName", "parameters": "(Categories categories, String name)", "modifiers": "private", "return": "Category", "signature": "Category findCategoryByName(Categories categories, String name)", "full_signature": "private Category findCategoryByName(Categories categories, String name)", "class_method_signature": "CategoriesService.findCategoryByName(Categories categories, String name)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/domain/CategoriesService.java"}, "focal_method": {"identifier": "create", "parameters": "(Category category)", "modifiers": "public", "return": "void", "body": "public void create(Category category) {\n\t\tvalidateNotNull(category, \"Must provide a category.\");\n\t\tvalidateRequired(category.getName(), \"Category name\");\n\n\t\tString name = category.getName().trim();\n\t\tCategories categories = retrieve();\n\t\tvalidate(categories.getCategoryByName(name) == null,\n\t\t\t\tformat(\"Category with name \\\"{0}\\\" cannot be created since a category with the same name already exists.\",\n\t\t\t\t\t\tname));\n\n\t\tCategories newCategories = new Categories(\n\t\t\t\tImmutableList.<Category> builder().addAll(categories.getCategories()).add(new Category(name)).build());\n\t\tupdate(newCategories);\n\t}", "signature": "void create(Category category)", "full_signature": "public void create(Category category)", "class_method_signature": "CategoriesService.create(Category category)", "testcase": false, "constructor": false, "invocations": ["validateNotNull", "validateRequired", "getName", "trim", "getName", "retrieve", "validate", "getCategoryByName", "format", "build", "add", "addAll", "builder", "getCategories", "update"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}