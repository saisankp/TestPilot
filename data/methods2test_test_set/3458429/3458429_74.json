{"test_class": {"identifier": "TestNBitInteger", "superclass": "", "interfaces": "", "fields": [], "file": "firefly-net/src/test/java/com/fireflysource/net/http/common/v2/hpack/TestNBitInteger.java"}, "test_case": {"identifier": "testDecodeExampleD_1_1", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testDecodeExampleD_1_1() {\n        ByteBuffer buf = ByteBuffer.wrap(TypeUtils.fromHexString(\"77EaFF\"));\n        buf.position(2);\n\n        assertEquals(10, NBitInteger.decode(buf, 5));\n    }", "signature": "void testDecodeExampleD_1_1()", "full_signature": "@Test void testDecodeExampleD_1_1()", "class_method_signature": "TestNBitInteger.testDecodeExampleD_1_1()", "testcase": true, "constructor": false, "invocations": ["wrap", "fromHexString", "position", "assertEquals", "decode"]}, "focal_class": {"identifier": "NBitInteger", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "octectsNeeded", "parameters": "(int n, int i)", "modifiers": "public static", "return": "int", "signature": "int octectsNeeded(int n, int i)", "full_signature": "public static int octectsNeeded(int n, int i)", "class_method_signature": "NBitInteger.octectsNeeded(int n, int i)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(ByteBuffer buf, int n, int i)", "modifiers": "public static", "return": "void", "signature": "void encode(ByteBuffer buf, int n, int i)", "full_signature": "public static void encode(ByteBuffer buf, int n, int i)", "class_method_signature": "NBitInteger.encode(ByteBuffer buf, int n, int i)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(ByteBuffer buffer, int n)", "modifiers": "public static", "return": "int", "signature": "int decode(ByteBuffer buffer, int n)", "full_signature": "public static int decode(ByteBuffer buffer, int n)", "class_method_signature": "NBitInteger.decode(ByteBuffer buffer, int n)", "testcase": false, "constructor": false}], "file": "firefly-net/src/main/java/com/fireflysource/net/http/common/v2/hpack/NBitInteger.java"}, "focal_method": {"identifier": "decode", "parameters": "(ByteBuffer buffer, int n)", "modifiers": "public static", "return": "int", "body": "public static int decode(ByteBuffer buffer, int n) {\n        if (n == 8) {\n            int nbits = 0xFF;\n\n            int i = buffer.get() & 0xff;\n\n            if (i == nbits) {\n                int m = 1;\n                int b;\n                do {\n                    b = 0xff & buffer.get();\n                    i = i + (b & 127) * m;\n                    m = m * 128;\n                } while ((b & 128) == 128);\n            }\n            return i;\n        }\n\n        int nbits = 0xFF >>> (8 - n);\n\n        int i = buffer.get(buffer.position() - 1) & nbits;\n\n        if (i == nbits) {\n            int m = 1;\n            int b;\n            do {\n                b = 0xff & buffer.get();\n                i = i + (b & 127) * m;\n                m = m * 128;\n            } while ((b & 128) == 128);\n        }\n        return i;\n    }", "signature": "int decode(ByteBuffer buffer, int n)", "full_signature": "public static int decode(ByteBuffer buffer, int n)", "class_method_signature": "NBitInteger.decode(ByteBuffer buffer, int n)", "testcase": false, "constructor": false, "invocations": ["get", "get", "get", "position", "get"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}