{"test_class": {"identifier": "AlgebraUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(AlgebraUtilsTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(AlgebraUtilsTest.class)", "var_name": "log"}], "file": "contrib/src/test/java/macrobase/util/AlgebraUtilsTest.java"}, "test_case": {"identifier": "testFlattenMatrixByColumns", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFlattenMatrixByColumns() {\n        double[][] matrixContents = {\n                {1, 2, 3},\n                {4, 5, 6},\n        };\n        double[] flattenedMatrixContents = {\n                1, 4, 2, 5, 3, 6,\n        };\n\n        RealMatrix matrix = new BlockRealMatrix(matrixContents);\n        RealVector vectorizedMatrix = AlgebraUtils.flattenMatrixByColumns(matrix);\n        assertEquals(new ArrayRealVector(flattenedMatrixContents), vectorizedMatrix);\n    }", "signature": "void testFlattenMatrixByColumns()", "full_signature": "@Test public void testFlattenMatrixByColumns()", "class_method_signature": "AlgebraUtilsTest.testFlattenMatrixByColumns()", "testcase": true, "constructor": false, "invocations": ["flattenMatrixByColumns", "assertEquals"]}, "focal_class": {"identifier": "AlgebraUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(AlgebraUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(AlgebraUtils.class)", "var_name": "log"}], "methods": [{"identifier": "invertMatrix", "parameters": "(RealMatrix matrix)", "modifiers": "public static", "return": "RealMatrix", "signature": "RealMatrix invertMatrix(RealMatrix matrix)", "full_signature": "public static RealMatrix invertMatrix(RealMatrix matrix)", "class_method_signature": "AlgebraUtils.invertMatrix(RealMatrix matrix)", "testcase": false, "constructor": false}, {"identifier": "flattenMatrixByColumns", "parameters": "(RealMatrix matrix)", "modifiers": "public static", "return": "RealVector", "signature": "RealVector flattenMatrixByColumns(RealMatrix matrix)", "full_signature": "public static RealVector flattenMatrixByColumns(RealMatrix matrix)", "class_method_signature": "AlgebraUtils.flattenMatrixByColumns(RealMatrix matrix)", "testcase": false, "constructor": false}, {"identifier": "reshapeMatrixByColumns", "parameters": "(RealVector vector, RealMatrix shapeMatrix)", "modifiers": "public static", "return": "RealMatrix", "signature": "RealMatrix reshapeMatrixByColumns(RealVector vector, RealMatrix shapeMatrix)", "full_signature": "public static RealMatrix reshapeMatrixByColumns(RealVector vector, RealMatrix shapeMatrix)", "class_method_signature": "AlgebraUtils.reshapeMatrixByColumns(RealVector vector, RealMatrix shapeMatrix)", "testcase": false, "constructor": false}, {"identifier": "reshapeMatrixByColumns", "parameters": "(RealVector vector, int width, int height)", "modifiers": "public static", "return": "RealMatrix", "signature": "RealMatrix reshapeMatrixByColumns(RealVector vector, int width, int height)", "full_signature": "public static RealMatrix reshapeMatrixByColumns(RealVector vector, int width, int height)", "class_method_signature": "AlgebraUtils.reshapeMatrixByColumns(RealVector vector, int width, int height)", "testcase": false, "constructor": false}, {"identifier": "getBoundingBox", "parameters": "(List<Datum> data)", "modifiers": "public static", "return": "double[][]", "signature": "double[][] getBoundingBox(List<Datum> data)", "full_signature": "public static double[][] getBoundingBox(List<Datum> data)", "class_method_signature": "AlgebraUtils.getBoundingBox(List<Datum> data)", "testcase": false, "constructor": false}], "file": "contrib/src/main/java/macrobase/util/AlgebraUtils.java"}, "focal_method": {"identifier": "flattenMatrixByColumns", "parameters": "(RealMatrix matrix)", "modifiers": "public static", "return": "RealVector", "body": "public static RealVector flattenMatrixByColumns(RealMatrix matrix) {\n        int m = matrix.getColumnDimension(); // returns the width of the matrix, i.e. number of columns.\n        int n = matrix.getRowDimension(); // returns the height of the matrix, i.e. number of rows.\n        RealVector vector = matrix.getColumnVector(0);\n        for (int i = 1; i < m; i++) {\n            vector = vector.append(matrix.getColumnVector(i));\n        }\n        return vector;\n    }", "signature": "RealVector flattenMatrixByColumns(RealMatrix matrix)", "full_signature": "public static RealVector flattenMatrixByColumns(RealMatrix matrix)", "class_method_signature": "AlgebraUtils.flattenMatrixByColumns(RealMatrix matrix)", "testcase": false, "constructor": false, "invocations": ["getColumnDimension", "getRowDimension", "getColumnVector", "append", "getColumnVector"]}, "repository": {"repo_id": 48199522, "url": "https://github.com/stanford-futuredata/macrobase", "language": "Java", "is_fork": false, "fork_count": 116, "stargazer_count": 606, "size": 27614, "license": "licensed"}}