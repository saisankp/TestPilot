{"test_class": {"identifier": "RangeTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "String[] array = new String[]{\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"};", "modifier": "", "type": "String[]", "declarator": "array = new String[]{\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"}", "var_name": "array"}, {"original_string": "List<String> list = Arrays.asList(array);", "modifier": "", "type": "List<String>", "declarator": "list = Arrays.asList(array)", "var_name": "list"}, {"original_string": "Set<String> set = new LinkedHashSet<String>(list);", "modifier": "", "type": "Set<String>", "declarator": "set = new LinkedHashSet<String>(list)", "var_name": "set"}], "file": "blueocean-commons/src/test/java/io/jenkins/blueocean/commons/stapler/export/RangeTest.java"}, "test_case": {"identifier": "minOnlyRange", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void minOnlyRange() {\n        Range r = new Range(4,Integer.MAX_VALUE);\n        assertEquals(\"[e, f]\", toS(r.apply(array)));\n        assertEquals(\"[e, f]\", toS(r.apply(list)));\n        assertEquals(\"[e, f]\", toS(r.apply(set)));\n    }", "signature": "void minOnlyRange()", "full_signature": "@Test public void minOnlyRange()", "class_method_signature": "RangeTest.minOnlyRange()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toS", "apply", "assertEquals", "toS", "apply", "assertEquals", "toS", "apply"]}, "focal_class": {"identifier": "Range", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final int min;", "modifier": "public final", "type": "int", "declarator": "min", "var_name": "min"}, {"original_string": "public final int max;", "modifier": "public final", "type": "int", "declarator": "max", "var_name": "max"}, {"original_string": "public static final Range ALL = new Range(0,Integer.MAX_VALUE);", "modifier": "public static final", "type": "Range", "declarator": "ALL = new Range(0,Integer.MAX_VALUE)", "var_name": "ALL"}], "methods": [{"identifier": "Range", "parameters": "(int min, int max)", "modifiers": "public", "return": "", "signature": " Range(int min, int max)", "full_signature": "public  Range(int min, int max)", "class_method_signature": "Range.Range(int min, int max)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(T[] a)", "modifiers": "public", "return": "List<T>", "signature": "List<T> apply(T[] a)", "full_signature": "public List<T> apply(T[] a)", "class_method_signature": "Range.apply(T[] a)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(List<T> s)", "modifiers": "public", "return": "List<T>", "signature": "List<T> apply(List<T> s)", "full_signature": "public List<T> apply(List<T> s)", "class_method_signature": "Range.apply(List<T> s)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(final Collection<T> s)", "modifiers": "public", "return": "Iterable<T>", "signature": "Iterable<T> apply(final Collection<T> s)", "full_signature": "public Iterable<T> apply(final Collection<T> s)", "class_method_signature": "Range.apply(final Collection<T> s)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(final Iterable<T> s)", "modifiers": "public", "return": "Iterable<T>", "signature": "Iterable<T> apply(final Iterable<T> s)", "full_signature": "public Iterable<T> apply(final Iterable<T> s)", "class_method_signature": "Range.apply(final Iterable<T> s)", "testcase": false, "constructor": false}, {"identifier": "advance", "parameters": "(Iterator<?> iterator, int numberToAdvance)", "modifiers": "public static", "return": "int", "signature": "int advance(Iterator<?> iterator, int numberToAdvance)", "full_signature": "public static int advance(Iterator<?> iterator, int numberToAdvance)", "class_method_signature": "Range.advance(Iterator<?> iterator, int numberToAdvance)", "testcase": false, "constructor": false}], "file": "blueocean-commons/src/main/java/io/jenkins/blueocean/commons/stapler/export/Range.java"}, "focal_method": {"identifier": "apply", "parameters": "(T[] a)", "modifiers": "public", "return": "List<T>", "body": "public <T> List<T> apply(T[] a) {\n        return apply(Arrays.asList(a));\n    }", "signature": "List<T> apply(T[] a)", "full_signature": "public List<T> apply(T[] a)", "class_method_signature": "Range.apply(T[] a)", "testcase": false, "constructor": false, "invocations": ["apply", "asList"]}, "repository": {"repo_id": 50250915, "url": "https://github.com/jenkinsci/blueocean-plugin", "stars": 2605, "created": "1/23/2016 6:02:45 PM +00:00", "updates": "2020-01-25T17:58:46+00:00", "fork": "False", "license": "licensed"}}