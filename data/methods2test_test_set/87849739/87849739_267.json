{"test_class": {"identifier": "EvictingConnectionLoggerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int SUCCESS_CAPACITY = 2;", "modifier": "private static final", "type": "int", "declarator": "SUCCESS_CAPACITY = 2", "var_name": "SUCCESS_CAPACITY"}, {"original_string": "private static final int FAILURE_CAPACITY = 4;", "modifier": "private static final", "type": "int", "declarator": "FAILURE_CAPACITY = 4", "var_name": "FAILURE_CAPACITY"}, {"original_string": "private static final LogCategory CATEGORY = LogCategory.TARGET;", "modifier": "private static final", "type": "LogCategory", "declarator": "CATEGORY = LogCategory.TARGET", "var_name": "CATEGORY"}, {"original_string": "private static final LogType TYPE = LogType.MAPPED;", "modifier": "private static final", "type": "LogType", "declarator": "TYPE = LogType.MAPPED", "var_name": "TYPE"}, {"original_string": "private static final ThingId THING_ID = ThingId.of(\"any:thing\");", "modifier": "private static final", "type": "ThingId", "declarator": "THING_ID = ThingId.of(\"any:thing\")", "var_name": "THING_ID"}, {"original_string": "private static final ConnectionMonitor.InfoProvider INFO_PROVIDER_WITH_THING = infoProviderWithThingId(THING_ID);", "modifier": "private static final", "type": "ConnectionMonitor.InfoProvider", "declarator": "INFO_PROVIDER_WITH_THING = infoProviderWithThingId(THING_ID)", "var_name": "INFO_PROVIDER_WITH_THING"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/logs/EvictingConnectionLoggerTest.java"}, "test_case": {"identifier": "withDebugLogDisabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void withDebugLogDisabled() {\n        final EvictingConnectionLogger logger = builder().logHeadersAndPayload().build();\n\n        final String textPayload = \"{\\\"foo\\\":\\\"bar\\\"}\";\n        final ConnectionMonitor.InfoProvider info = infoProviderWithDebugLoggingDisabled(textPayload);\n\n        logger.success(info);\n        final LogEntry entry = getFirstAndOnlyEntry(logger);\n\n        LogEntryAssertions.assertThat(entry)\n                .hasMessageNotContainingPayload(textPayload)\n                .hasMessageContainingHeaderKeys(info.getHeaders());\n\n    }", "signature": "void withDebugLogDisabled()", "full_signature": "@Test public void withDebugLogDisabled()", "class_method_signature": "EvictingConnectionLoggerTest.withDebugLogDisabled()", "testcase": true, "constructor": false, "invocations": ["build", "logHeadersAndPayload", "builder", "infoProviderWithDebugLoggingDisabled", "success", "getFirstAndOnlyEntry", "hasMessageContainingHeaderKeys", "hasMessageNotContainingPayload", "assertThat", "getHeaders"]}, "focal_class": {"identifier": "EvictingConnectionLogger", "superclass": "", "interfaces": "implements ConnectionLogger", "fields": [{"original_string": "private static final DittoLogger LOGGER = DittoLoggerFactory.getLogger(EvictingConnectionLogger.class);", "modifier": "private static final", "type": "DittoLogger", "declarator": "LOGGER = DittoLoggerFactory.getLogger(EvictingConnectionLogger.class)", "var_name": "LOGGER"}, {"original_string": "private static final String FALLBACK_EXCEPTION_TEXT = \"not specified\";", "modifier": "private static final", "type": "String", "declarator": "FALLBACK_EXCEPTION_TEXT = \"not specified\"", "var_name": "FALLBACK_EXCEPTION_TEXT"}, {"original_string": "private final LogCategory category;", "modifier": "private final", "type": "LogCategory", "declarator": "category", "var_name": "category"}, {"original_string": "private final LogType type;", "modifier": "private final", "type": "LogType", "declarator": "type", "var_name": "type"}, {"original_string": "private final EvictingQueue<LogEntry> successLogs;", "modifier": "private final", "type": "EvictingQueue<LogEntry>", "declarator": "successLogs", "var_name": "successLogs"}, {"original_string": "private final EvictingQueue<LogEntry> failureLogs;", "modifier": "private final", "type": "EvictingQueue<LogEntry>", "declarator": "failureLogs", "var_name": "failureLogs"}, {"original_string": "private final String defaultSuccessMessage;", "modifier": "private final", "type": "String", "declarator": "defaultSuccessMessage", "var_name": "defaultSuccessMessage"}, {"original_string": "private final String defaultFailureMessage;", "modifier": "private final", "type": "String", "declarator": "defaultFailureMessage", "var_name": "defaultFailureMessage"}, {"original_string": "private final String defaultExceptionMessage;", "modifier": "private final", "type": "String", "declarator": "defaultExceptionMessage", "var_name": "defaultExceptionMessage"}, {"original_string": "private final boolean logHeadersAndPayload;", "modifier": "private final", "type": "boolean", "declarator": "logHeadersAndPayload", "var_name": "logHeadersAndPayload"}, {"original_string": "@Nullable private final String address;", "modifier": "@Nullable private final", "type": "String", "declarator": "address", "var_name": "address"}], "methods": [{"identifier": "EvictingConnectionLogger", "parameters": "(final Builder builder)", "modifiers": "private", "return": "", "signature": " EvictingConnectionLogger(final Builder builder)", "full_signature": "private  EvictingConnectionLogger(final Builder builder)", "class_method_signature": "EvictingConnectionLogger.EvictingConnectionLogger(final Builder builder)", "testcase": false, "constructor": true}, {"identifier": "newBuilder", "parameters": "(final int successCapacity,\n            final int failureCapacity,\n            final LogCategory category,\n            final LogType type)", "modifiers": "static", "return": "Builder", "signature": "Builder newBuilder(final int successCapacity,\n            final int failureCapacity,\n            final LogCategory category,\n            final LogType type)", "full_signature": "static Builder newBuilder(final int successCapacity,\n            final int failureCapacity,\n            final LogCategory category,\n            final LogType type)", "class_method_signature": "EvictingConnectionLogger.newBuilder(final int successCapacity,\n            final int failureCapacity,\n            final LogCategory category,\n            final LogType type)", "testcase": false, "constructor": false}, {"identifier": "formatMessage", "parameters": "(final String message, final Object... messageArguments)", "modifiers": "private static", "return": "String", "signature": "String formatMessage(final String message, final Object... messageArguments)", "full_signature": "private static String formatMessage(final String message, final Object... messageArguments)", "class_method_signature": "EvictingConnectionLogger.formatMessage(final String message, final Object... messageArguments)", "testcase": false, "constructor": false}, {"identifier": "success", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider)", "modifiers": "@Override public", "return": "void", "signature": "void success(final ConnectionMonitor.InfoProvider infoProvider)", "full_signature": "@Override public void success(final ConnectionMonitor.InfoProvider infoProvider)", "class_method_signature": "EvictingConnectionLogger.success(final ConnectionMonitor.InfoProvider infoProvider)", "testcase": false, "constructor": false}, {"identifier": "success", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "modifiers": "@Override public", "return": "void", "signature": "void success(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "full_signature": "@Override public void success(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "class_method_signature": "EvictingConnectionLogger.success(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "testcase": false, "constructor": false}, {"identifier": "failure", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider,\n            @Nullable final DittoRuntimeException dittoRuntimeException)", "modifiers": "@Override public", "return": "void", "signature": "void failure(final ConnectionMonitor.InfoProvider infoProvider,\n            @Nullable final DittoRuntimeException dittoRuntimeException)", "full_signature": "@Override public void failure(final ConnectionMonitor.InfoProvider infoProvider,\n            @Nullable final DittoRuntimeException dittoRuntimeException)", "class_method_signature": "EvictingConnectionLogger.failure(final ConnectionMonitor.InfoProvider infoProvider,\n            @Nullable final DittoRuntimeException dittoRuntimeException)", "testcase": false, "constructor": false}, {"identifier": "failure", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "modifiers": "@Override public", "return": "void", "signature": "void failure(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "full_signature": "@Override public void failure(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "class_method_signature": "EvictingConnectionLogger.failure(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "testcase": false, "constructor": false}, {"identifier": "exception", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider, @Nullable final Exception exception)", "modifiers": "@Override public", "return": "void", "signature": "void exception(final ConnectionMonitor.InfoProvider infoProvider, @Nullable final Exception exception)", "full_signature": "@Override public void exception(final ConnectionMonitor.InfoProvider infoProvider, @Nullable final Exception exception)", "class_method_signature": "EvictingConnectionLogger.exception(final ConnectionMonitor.InfoProvider infoProvider, @Nullable final Exception exception)", "testcase": false, "constructor": false}, {"identifier": "exception", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "modifiers": "@Override public", "return": "void", "signature": "void exception(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "full_signature": "@Override public void exception(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "class_method_signature": "EvictingConnectionLogger.exception(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "EvictingConnectionLogger.clear()", "testcase": false, "constructor": false}, {"identifier": "getLogs", "parameters": "()", "modifiers": "@Override public", "return": "Collection<LogEntry>", "signature": "Collection<LogEntry> getLogs()", "full_signature": "@Override public Collection<LogEntry> getLogs()", "class_method_signature": "EvictingConnectionLogger.getLogs()", "testcase": false, "constructor": false}, {"identifier": "formatMessage", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "modifiers": "private", "return": "String", "signature": "String formatMessage(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "full_signature": "private String formatMessage(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "class_method_signature": "EvictingConnectionLogger.formatMessage(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final Object... messageArguments)", "testcase": false, "constructor": false}, {"identifier": "addHeadersAndPayloadToMessage", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider,\n            final String initialMessage)", "modifiers": "private", "return": "String", "signature": "String addHeadersAndPayloadToMessage(final ConnectionMonitor.InfoProvider infoProvider,\n            final String initialMessage)", "full_signature": "private String addHeadersAndPayloadToMessage(final ConnectionMonitor.InfoProvider infoProvider,\n            final String initialMessage)", "class_method_signature": "EvictingConnectionLogger.addHeadersAndPayloadToMessage(final ConnectionMonitor.InfoProvider infoProvider,\n            final String initialMessage)", "testcase": false, "constructor": false}, {"identifier": "getDebugHeaderMessage", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider)", "modifiers": "private static", "return": "String", "signature": "String getDebugHeaderMessage(final ConnectionMonitor.InfoProvider infoProvider)", "full_signature": "private static String getDebugHeaderMessage(final ConnectionMonitor.InfoProvider infoProvider)", "class_method_signature": "EvictingConnectionLogger.getDebugHeaderMessage(final ConnectionMonitor.InfoProvider infoProvider)", "testcase": false, "constructor": false}, {"identifier": "getDebugPayloadMessage", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider)", "modifiers": "private static", "return": "String", "signature": "String getDebugPayloadMessage(final ConnectionMonitor.InfoProvider infoProvider)", "full_signature": "private static String getDebugPayloadMessage(final ConnectionMonitor.InfoProvider infoProvider)", "class_method_signature": "EvictingConnectionLogger.getDebugPayloadMessage(final ConnectionMonitor.InfoProvider infoProvider)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@SuppressWarnings(\"OverlyComplexMethod\") @Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@SuppressWarnings(\"OverlyComplexMethod\") @Override public boolean equals(@Nullable final Object o)", "class_method_signature": "EvictingConnectionLogger.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "EvictingConnectionLogger.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "EvictingConnectionLogger.toString()", "testcase": false, "constructor": false}, {"identifier": "getLogEntry", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final LogLevel logLevel)", "modifiers": "private", "return": "LogEntry", "signature": "LogEntry getLogEntry(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final LogLevel logLevel)", "full_signature": "private LogEntry getLogEntry(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final LogLevel logLevel)", "class_method_signature": "EvictingConnectionLogger.getLogEntry(final ConnectionMonitor.InfoProvider infoProvider, final String message,\n            final LogLevel logLevel)", "testcase": false, "constructor": false}, {"identifier": "logTraceWithCorrelationId", "parameters": "(final CharSequence correlationId,\n            final String level,\n            final ConnectionMonitor.InfoProvider infoProvider,\n            final String message)", "modifiers": "private static", "return": "void", "signature": "void logTraceWithCorrelationId(final CharSequence correlationId,\n            final String level,\n            final ConnectionMonitor.InfoProvider infoProvider,\n            final String message)", "full_signature": "private static void logTraceWithCorrelationId(final CharSequence correlationId,\n            final String level,\n            final ConnectionMonitor.InfoProvider infoProvider,\n            final String message)", "class_method_signature": "EvictingConnectionLogger.logTraceWithCorrelationId(final CharSequence correlationId,\n            final String level,\n            final ConnectionMonitor.InfoProvider infoProvider,\n            final String message)", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/logs/EvictingConnectionLogger.java"}, "focal_method": {"identifier": "success", "parameters": "(final ConnectionMonitor.InfoProvider infoProvider)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void success(final ConnectionMonitor.InfoProvider infoProvider) {\n        success(infoProvider, defaultSuccessMessage);\n    }", "signature": "void success(final ConnectionMonitor.InfoProvider infoProvider)", "full_signature": "@Override public void success(final ConnectionMonitor.InfoProvider infoProvider)", "class_method_signature": "EvictingConnectionLogger.success(final ConnectionMonitor.InfoProvider infoProvider)", "testcase": false, "constructor": false, "invocations": ["success"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}