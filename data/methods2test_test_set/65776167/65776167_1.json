{"test_class": {"identifier": "CheramiPublisherImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CheramiPublisherImplTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CheramiPublisherImplTest.class)", "var_name": "logger"}, {"original_string": "private static final String DESTINATION_PATH = \"/example/path\";", "modifier": "private static final", "type": "String", "declarator": "DESTINATION_PATH = \"/example/path\"", "var_name": "DESTINATION_PATH"}, {"original_string": "private static final long MAX_FUTURE_TIMEOUT_MILLIS = 1000;", "modifier": "private static final", "type": "long", "declarator": "MAX_FUTURE_TIMEOUT_MILLIS = 1000", "var_name": "MAX_FUTURE_TIMEOUT_MILLIS"}, {"original_string": "private static final long PUBLISH_TEST_TIMEOUT_MILLIS = 5000;", "modifier": "private static final", "type": "long", "declarator": "PUBLISH_TEST_TIMEOUT_MILLIS = 5000", "var_name": "PUBLISH_TEST_TIMEOUT_MILLIS"}, {"original_string": "private static final int MAX_SEND_BUFFER_BYTES = 100;", "modifier": "private static final", "type": "int", "declarator": "MAX_SEND_BUFFER_BYTES = 100", "var_name": "MAX_SEND_BUFFER_BYTES"}, {"original_string": "private static CheramiClientImpl client;", "modifier": "private static", "type": "CheramiClientImpl", "declarator": "client", "var_name": "client"}, {"original_string": "private static CheramiPublisherImpl publisher;", "modifier": "private static", "type": "CheramiPublisherImpl", "declarator": "publisher", "var_name": "publisher"}, {"original_string": "private static MockFrontendService frontendService;", "modifier": "private static", "type": "MockFrontendService", "declarator": "frontendService", "var_name": "frontendService"}, {"original_string": "private static Server server;", "modifier": "private static", "type": "Server", "declarator": "server", "var_name": "server"}], "file": "lib/src/test/java/com/uber/cherami/client/CheramiPublisherImplTest.java"}, "test_case": {"identifier": "closeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void closeTest() throws Exception {\n        if (!publisher.isOpen()) {\n            publisher.open();\n        }\n        assert (publisher.isOpen() == true);\n        publisher.close();\n        assert (publisher.isOpen() == false);\n        logger.info(\"CheramiPublisherImplTest: PASSED: CloseTest\");\n    }", "signature": "void closeTest()", "full_signature": "@Test public void closeTest()", "class_method_signature": "CheramiPublisherImplTest.closeTest()", "testcase": true, "constructor": false, "invocations": ["isOpen", "open", "isOpen", "close", "isOpen", "info"]}, "focal_class": {"identifier": "CheramiPublisherImpl", "superclass": "", "interfaces": "implements CheramiPublisher, Reconfigurable", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CheramiPublisherImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CheramiPublisherImpl.class)", "var_name": "logger"}, {"original_string": "private static final Error RECEIPT_ERROR_NO_CONNS = new Error(\"No conns available to publish message\");", "modifier": "private static final", "type": "Error", "declarator": "RECEIPT_ERROR_NO_CONNS = new Error(\"No conns available to publish message\")", "var_name": "RECEIPT_ERROR_NO_CONNS"}, {"original_string": "private static final Error RECEIPT_ERROR_BUFFER_FULL = new Error(\"Client send buffer full\");", "modifier": "private static final", "type": "Error", "declarator": "RECEIPT_ERROR_BUFFER_FULL = new Error(\"Client send buffer full\")", "var_name": "RECEIPT_ERROR_BUFFER_FULL"}, {"original_string": "private static final Error RECEIPT_ERROR_CLIENT_TIMED_OUT = new Error(\"Client timed out.\");", "modifier": "private static final", "type": "Error", "declarator": "RECEIPT_ERROR_CLIENT_TIMED_OUT = new Error(\"Client timed out.\")", "var_name": "RECEIPT_ERROR_CLIENT_TIMED_OUT"}, {"original_string": "private static final String OPEN_PUBLISHER_ENDPOINT = \"open_publisher_stream\";", "modifier": "private static final", "type": "String", "declarator": "OPEN_PUBLISHER_ENDPOINT = \"open_publisher_stream\"", "var_name": "OPEN_PUBLISHER_ENDPOINT"}, {"original_string": "private final String path;", "modifier": "private final", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "private final long msgIdPrefix;", "modifier": "private final", "type": "long", "declarator": "msgIdPrefix", "var_name": "msgIdPrefix"}, {"original_string": "private final AtomicLong msgCounter;", "modifier": "private final", "type": "AtomicLong", "declarator": "msgCounter", "var_name": "msgCounter"}, {"original_string": "private final AtomicBoolean isOpen;", "modifier": "private final", "type": "AtomicBoolean", "declarator": "isOpen", "var_name": "isOpen"}, {"original_string": "private final CheramiClient client;", "modifier": "private final", "type": "CheramiClient", "declarator": "client", "var_name": "client"}, {"original_string": "private final PublisherOptions options;", "modifier": "private final", "type": "PublisherOptions", "declarator": "options", "var_name": "options"}, {"original_string": "private final MetricsReporter metricsReporter;", "modifier": "private final", "type": "MetricsReporter", "declarator": "metricsReporter", "var_name": "metricsReporter"}, {"original_string": "private final SendBufferQueue messageQueue;", "modifier": "private final", "type": "SendBufferQueue", "declarator": "messageQueue", "var_name": "messageQueue"}, {"original_string": "private final ConnectionManager<InputHostConnection> connectionManager;", "modifier": "private final", "type": "ConnectionManager<InputHostConnection>", "declarator": "connectionManager", "var_name": "connectionManager"}], "methods": [{"identifier": "CheramiPublisherImpl", "parameters": "(CheramiClient client, String path, PublisherOptions options, MetricsReporter reporter)", "modifiers": "public", "return": "", "signature": " CheramiPublisherImpl(CheramiClient client, String path, PublisherOptions options, MetricsReporter reporter)", "full_signature": "public  CheramiPublisherImpl(CheramiClient client, String path, PublisherOptions options, MetricsReporter reporter)", "class_method_signature": "CheramiPublisherImpl.CheramiPublisherImpl(CheramiClient client, String path, PublisherOptions options, MetricsReporter reporter)", "testcase": false, "constructor": true}, {"identifier": "open", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void open()", "full_signature": "@Override public synchronized void open()", "class_method_signature": "CheramiPublisherImpl.open()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void close()", "full_signature": "@Override public synchronized void close()", "class_method_signature": "CheramiPublisherImpl.close()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(PublisherMessage message)", "modifiers": "@Override public", "return": "SendReceipt", "signature": "SendReceipt write(PublisherMessage message)", "full_signature": "@Override public SendReceipt write(PublisherMessage message)", "class_method_signature": "CheramiPublisherImpl.write(PublisherMessage message)", "testcase": false, "constructor": false}, {"identifier": "writeAsync", "parameters": "(PublisherMessage message)", "modifiers": "@Override public", "return": "CheramiFuture<SendReceipt>", "signature": "CheramiFuture<SendReceipt> writeAsync(PublisherMessage message)", "full_signature": "@Override public CheramiFuture<SendReceipt> writeAsync(PublisherMessage message)", "class_method_signature": "CheramiPublisherImpl.writeAsync(PublisherMessage message)", "testcase": false, "constructor": false}, {"identifier": "refreshNow", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void refreshNow()", "full_signature": "@Override public void refreshNow()", "class_method_signature": "CheramiPublisherImpl.refreshNow()", "testcase": false, "constructor": false}, {"identifier": "isOpen", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isOpen()", "full_signature": "protected boolean isOpen()", "class_method_signature": "CheramiPublisherImpl.isOpen()", "testcase": false, "constructor": false}, {"identifier": "createMessageRequest", "parameters": "(PublisherMessage message, String idStr)", "modifiers": "private", "return": "PutMessageRequest", "signature": "PutMessageRequest createMessageRequest(PublisherMessage message, String idStr)", "full_signature": "private PutMessageRequest createMessageRequest(PublisherMessage message, String idStr)", "class_method_signature": "CheramiPublisherImpl.createMessageRequest(PublisherMessage message, String idStr)", "testcase": false, "constructor": false}, {"identifier": "toEndpointsInfo", "parameters": "(ReadPublisherOptionsResult result)", "modifiers": "private", "return": "EndpointsInfo", "signature": "EndpointsInfo toEndpointsInfo(ReadPublisherOptionsResult result)", "full_signature": "private EndpointsInfo toEndpointsInfo(ReadPublisherOptionsResult result)", "class_method_signature": "CheramiPublisherImpl.toEndpointsInfo(ReadPublisherOptionsResult result)", "testcase": false, "constructor": false}, {"identifier": "findPublishEndpoints", "parameters": "()", "modifiers": "private", "return": "EndpointsInfo", "signature": "EndpointsInfo findPublishEndpoints()", "full_signature": "private EndpointsInfo findPublishEndpoints()", "class_method_signature": "CheramiPublisherImpl.findPublishEndpoints()", "testcase": false, "constructor": false}, {"identifier": "getAvailableConnections", "parameters": "()", "modifiers": "private", "return": "List<InputHostConnection>", "signature": "List<InputHostConnection> getAvailableConnections()", "full_signature": "private List<InputHostConnection> getAvailableConnections()", "class_method_signature": "CheramiPublisherImpl.getAvailableConnections()", "testcase": false, "constructor": false}, {"identifier": "newConnectionManager", "parameters": "()", "modifiers": "private", "return": "ConnectionManager<InputHostConnection>", "signature": "ConnectionManager<InputHostConnection> newConnectionManager()", "full_signature": "private ConnectionManager<InputHostConnection> newConnectionManager()", "class_method_signature": "CheramiPublisherImpl.newConnectionManager()", "testcase": false, "constructor": false}, {"identifier": "newInputHostConnection", "parameters": "(String host, int dataPort, int rpcPort,\n            ChecksumOption checksumOption)", "modifiers": "private", "return": "InputHostConnection", "signature": "InputHostConnection newInputHostConnection(String host, int dataPort, int rpcPort,\n            ChecksumOption checksumOption)", "full_signature": "private InputHostConnection newInputHostConnection(String host, int dataPort, int rpcPort,\n            ChecksumOption checksumOption)", "class_method_signature": "CheramiPublisherImpl.newInputHostConnection(String host, int dataPort, int rpcPort,\n            ChecksumOption checksumOption)", "testcase": false, "constructor": false}], "file": "lib/src/main/java/com/uber/cherami/client/CheramiPublisherImpl.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n    public synchronized void close() {\n        if (isOpen.getAndSet(false)) {\n            connectionManager.close();\n            while (true) {\n                // drain the send buffer queue\n                PutMessageRequest msg = messageQueue.poll();\n                if (msg == null) {\n                    break;\n                }\n                CheramiFuture<SendReceipt> future = msg.getAckFuture();\n                String msgID = msg.getMessage().getId();\n                future.setReply(new SendReceipt(msgID, ReceiptStatus.ERR_NO_CONNS, RECEIPT_ERROR_NO_CONNS));\n            }\n        }\n        logger.info(\"Publisher closed\");\n    }", "signature": "void close()", "full_signature": "@Override public synchronized void close()", "class_method_signature": "CheramiPublisherImpl.close()", "testcase": false, "constructor": false, "invocations": ["getAndSet", "close", "poll", "getAckFuture", "getId", "getMessage", "setReply", "info"]}, "repository": {"repo_id": 65776167, "url": "https://github.com/uber-archive/cherami-client-java", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 5, "size": 162, "license": "licensed"}}