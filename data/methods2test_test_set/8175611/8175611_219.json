{"test_class": {"identifier": "DataProviderResolverContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "private final Method testMethod = Methods.anyMethod();", "modifier": "private final", "type": "Method", "declarator": "testMethod = Methods.anyMethod()", "var_name": "testMethod"}, {"original_string": "@SuppressWarnings(\"unchecked\")\n    private final List<Class<? extends DataProviderMethodResolver>> resolverClasses = asList(\n            DataProviderMethodResolver.class, DefaultDataProviderMethodResolver.class);", "modifier": "@SuppressWarnings(\"unchecked\")\n    private final", "type": "List<Class<? extends DataProviderMethodResolver>>", "declarator": "resolverClasses = asList(\n            DataProviderMethodResolver.class, DefaultDataProviderMethodResolver.class)", "var_name": "resolverClasses"}, {"original_string": "private final ResolveStrategy resolveStrategy = ResolveStrategy.AGGREGATE_ALL_MATCHES;", "modifier": "private final", "type": "ResolveStrategy", "declarator": "resolveStrategy = ResolveStrategy.AGGREGATE_ALL_MATCHES", "var_name": "resolveStrategy"}, {"original_string": "@SuppressWarnings(\"unchecked\")\n    private final List<Class<?>> locations = asList(this.getClass(), DataProviderResolverContext.class);", "modifier": "@SuppressWarnings(\"unchecked\")\n    private final", "type": "List<Class<?>>", "declarator": "locations = asList(this.getClass(), DataProviderResolverContext.class)", "var_name": "locations"}, {"original_string": "private final Class<? extends Annotation> dataProviderAnnotationClass = Documented.class;", "modifier": "private final", "type": "Class<? extends Annotation>", "declarator": "dataProviderAnnotationClass = Documented.class", "var_name": "dataProviderAnnotationClass"}, {"original_string": "private final static String dataProviderName = \"dataProviderName\";", "modifier": "private final static", "type": "String", "declarator": "dataProviderName = \"dataProviderName\"", "var_name": "dataProviderName"}], "file": "core/src/test/java/com/tngtech/junit/dataprovider/resolver/DataProviderResolverContextTest.java"}, "test_case": {"identifier": "testGenerateLocationsShouldReturnExplicitLocationsIfNotNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGenerateLocationsShouldReturnExplicitLocationsIfNotNull() {\n        // Given:\n        Class<?>[] explicitLocations = { SingleArgConverter.class, StringConverter.class };\n\n        // When:\n        List<Class<?>> result = DataProviderResolverContext.generateLocations(this.getClass(), explicitLocations);\n\n        // Then:\n        assertThat(result).containsExactly(explicitLocations);\n    }", "signature": "void testGenerateLocationsShouldReturnExplicitLocationsIfNotNull()", "full_signature": "@Test public void testGenerateLocationsShouldReturnExplicitLocationsIfNotNull()", "class_method_signature": "DataProviderResolverContextTest.testGenerateLocationsShouldReturnExplicitLocationsIfNotNull()", "testcase": true, "constructor": false, "invocations": ["generateLocations", "getClass", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "DataProviderResolverContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String METHOD_NAME_TO_USE_CONVENTION = \"<use_convention>\";", "modifier": "public static final", "type": "String", "declarator": "METHOD_NAME_TO_USE_CONVENTION = \"<use_convention>\"", "var_name": "METHOD_NAME_TO_USE_CONVENTION"}, {"original_string": "private final Method testMethod;", "modifier": "private final", "type": "Method", "declarator": "testMethod", "var_name": "testMethod"}, {"original_string": "private final List<Class<? extends DataProviderMethodResolver>> resolverClasses;", "modifier": "private final", "type": "List<Class<? extends DataProviderMethodResolver>>", "declarator": "resolverClasses", "var_name": "resolverClasses"}, {"original_string": "private final ResolveStrategy resolveStrategy;", "modifier": "private final", "type": "ResolveStrategy", "declarator": "resolveStrategy", "var_name": "resolveStrategy"}, {"original_string": "private final List<Class<?>> locations;", "modifier": "private final", "type": "List<Class<?>>", "declarator": "locations", "var_name": "locations"}, {"original_string": "private final Class<? extends Annotation> dataProviderAnnotationClass;", "modifier": "private final", "type": "Class<? extends Annotation>", "declarator": "dataProviderAnnotationClass", "var_name": "dataProviderAnnotationClass"}, {"original_string": "private final String dataProviderName;", "modifier": "private final", "type": "String", "declarator": "dataProviderName", "var_name": "dataProviderName"}], "methods": [{"identifier": "generateLocations", "parameters": "(Class<?> testClass, Class<?>... explicitLocations)", "modifiers": "public static", "return": "List<Class<?>>", "signature": "List<Class<?>> generateLocations(Class<?> testClass, Class<?>... explicitLocations)", "full_signature": "public static List<Class<?>> generateLocations(Class<?> testClass, Class<?>... explicitLocations)", "class_method_signature": "DataProviderResolverContext.generateLocations(Class<?> testClass, Class<?>... explicitLocations)", "testcase": false, "constructor": false}, {"identifier": "DataProviderResolverContext", "parameters": "(Method testMethod,\n            List<Class<? extends DataProviderMethodResolver>> resolverClasses, ResolveStrategy resolveStrategy,\n            List<Class<?>> locations, Class<? extends Annotation> dataProviderAnnotationClass,\n            String dataProviderName)", "modifiers": "public", "return": "", "signature": " DataProviderResolverContext(Method testMethod,\n            List<Class<? extends DataProviderMethodResolver>> resolverClasses, ResolveStrategy resolveStrategy,\n            List<Class<?>> locations, Class<? extends Annotation> dataProviderAnnotationClass,\n            String dataProviderName)", "full_signature": "public  DataProviderResolverContext(Method testMethod,\n            List<Class<? extends DataProviderMethodResolver>> resolverClasses, ResolveStrategy resolveStrategy,\n            List<Class<?>> locations, Class<? extends Annotation> dataProviderAnnotationClass,\n            String dataProviderName)", "class_method_signature": "DataProviderResolverContext.DataProviderResolverContext(Method testMethod,\n            List<Class<? extends DataProviderMethodResolver>> resolverClasses, ResolveStrategy resolveStrategy,\n            List<Class<?>> locations, Class<? extends Annotation> dataProviderAnnotationClass,\n            String dataProviderName)", "testcase": false, "constructor": true}, {"identifier": "useDataProviderNameConvention", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean useDataProviderNameConvention()", "full_signature": "public boolean useDataProviderNameConvention()", "class_method_signature": "DataProviderResolverContext.useDataProviderNameConvention()", "testcase": false, "constructor": false}, {"identifier": "getTestMethod", "parameters": "()", "modifiers": "public", "return": "Method", "signature": "Method getTestMethod()", "full_signature": "public Method getTestMethod()", "class_method_signature": "DataProviderResolverContext.getTestMethod()", "testcase": false, "constructor": false}, {"identifier": "getResolverClasses", "parameters": "()", "modifiers": "public", "return": "List<Class<? extends DataProviderMethodResolver>>", "signature": "List<Class<? extends DataProviderMethodResolver>> getResolverClasses()", "full_signature": "public List<Class<? extends DataProviderMethodResolver>> getResolverClasses()", "class_method_signature": "DataProviderResolverContext.getResolverClasses()", "testcase": false, "constructor": false}, {"identifier": "getResolveStrategy", "parameters": "()", "modifiers": "public", "return": "ResolveStrategy", "signature": "ResolveStrategy getResolveStrategy()", "full_signature": "public ResolveStrategy getResolveStrategy()", "class_method_signature": "DataProviderResolverContext.getResolveStrategy()", "testcase": false, "constructor": false}, {"identifier": "getLocations", "parameters": "()", "modifiers": "public", "return": "List<Class<?>>", "signature": "List<Class<?>> getLocations()", "full_signature": "public List<Class<?>> getLocations()", "class_method_signature": "DataProviderResolverContext.getLocations()", "testcase": false, "constructor": false}, {"identifier": "getDataProviderAnnotationClass", "parameters": "()", "modifiers": "public", "return": "Class<? extends Annotation>", "signature": "Class<? extends Annotation> getDataProviderAnnotationClass()", "full_signature": "public Class<? extends Annotation> getDataProviderAnnotationClass()", "class_method_signature": "DataProviderResolverContext.getDataProviderAnnotationClass()", "testcase": false, "constructor": false}, {"identifier": "getDataProviderName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDataProviderName()", "full_signature": "public String getDataProviderName()", "class_method_signature": "DataProviderResolverContext.getDataProviderName()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/tngtech/junit/dataprovider/resolver/DataProviderResolverContext.java"}, "focal_method": {"identifier": "generateLocations", "parameters": "(Class<?> testClass, Class<?>... explicitLocations)", "modifiers": "public static", "return": "List<Class<?>>", "body": "public static List<Class<?>> generateLocations(Class<?> testClass, Class<?>... explicitLocations) {\n        checkNotNull(testClass, \"'testClass' must not be null\");\n        if (explicitLocations == null || explicitLocations.length == 0) {\n            @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n            List<Class<?>> result = (List) Collections.singletonList(testClass);\n            return result;\n        }\n        return Arrays.asList(explicitLocations);\n    }", "signature": "List<Class<?>> generateLocations(Class<?> testClass, Class<?>... explicitLocations)", "full_signature": "public static List<Class<?>> generateLocations(Class<?> testClass, Class<?>... explicitLocations)", "class_method_signature": "DataProviderResolverContext.generateLocations(Class<?> testClass, Class<?>... explicitLocations)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "singletonList", "asList"]}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}