{"test_class": {"identifier": "TokenTest", "superclass": "", "interfaces": "", "fields": [], "file": "streamflyer-core/src/test/java/com/github/rwitzel/streamflyer/regex/addons/tokens/TokenTest.java"}, "test_case": {"identifier": "testGetCapturingGroupCount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCapturingGroupCount() throws Exception {\n        assertEquals(0, new Token(\"\").getCapturingGroupCount());\n        assertEquals(1, new Token(\"a(b)c\").getCapturingGroupCount());\n        assertEquals(0, new Token(\"a(?:b)c\").getCapturingGroupCount());\n    }", "signature": "void testGetCapturingGroupCount()", "full_signature": "@Test public void testGetCapturingGroupCount()", "class_method_signature": "TokenTest.testGetCapturingGroupCount()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getCapturingGroupCount", "assertEquals", "getCapturingGroupCount", "assertEquals", "getCapturingGroupCount"]}, "focal_class": {"identifier": "Token", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String regex;", "modifier": "private", "type": "String", "declarator": "regex", "var_name": "regex"}, {"original_string": "private int capturingGroupCount;", "modifier": "private", "type": "int", "declarator": "capturingGroupCount", "var_name": "capturingGroupCount"}, {"original_string": "private MatchProcessor matchProcessor;", "modifier": "private", "type": "MatchProcessor", "declarator": "matchProcessor", "var_name": "matchProcessor"}], "methods": [{"identifier": "Token", "parameters": "(String regex)", "modifiers": "public", "return": "", "signature": " Token(String regex)", "full_signature": "public  Token(String regex)", "class_method_signature": "Token.Token(String regex)", "testcase": false, "constructor": true}, {"identifier": "Token", "parameters": "(String name, String regex)", "modifiers": "public", "return": "", "signature": " Token(String name, String regex)", "full_signature": "public  Token(String name, String regex)", "class_method_signature": "Token.Token(String name, String regex)", "testcase": false, "constructor": true}, {"identifier": "Token", "parameters": "(String name, String regex, String replacement)", "modifiers": "public", "return": "", "signature": " Token(String name, String regex, String replacement)", "full_signature": "public  Token(String name, String regex, String replacement)", "class_method_signature": "Token.Token(String name, String regex, String replacement)", "testcase": false, "constructor": true}, {"identifier": "Token", "parameters": "(String name, String regex, MatchProcessor matchProcessor)", "modifiers": "public", "return": "", "signature": " Token(String name, String regex, MatchProcessor matchProcessor)", "full_signature": "public  Token(String name, String regex, MatchProcessor matchProcessor)", "class_method_signature": "Token.Token(String name, String regex, MatchProcessor matchProcessor)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Token.getName()", "testcase": false, "constructor": false}, {"identifier": "getRegex", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRegex()", "full_signature": "public String getRegex()", "class_method_signature": "Token.getRegex()", "testcase": false, "constructor": false}, {"identifier": "getCapturingGroupCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCapturingGroupCount()", "full_signature": "public int getCapturingGroupCount()", "class_method_signature": "Token.getCapturingGroupCount()", "testcase": false, "constructor": false}, {"identifier": "getMatchProcessor", "parameters": "()", "modifiers": "public", "return": "MatchProcessor", "signature": "MatchProcessor getMatchProcessor()", "full_signature": "public MatchProcessor getMatchProcessor()", "class_method_signature": "Token.getMatchProcessor()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Token.toString()", "testcase": false, "constructor": false}], "file": "streamflyer-core/src/main/java/com/github/rwitzel/streamflyer/regex/addons/tokens/Token.java"}, "focal_method": {"identifier": "getCapturingGroupCount", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getCapturingGroupCount() {\n        return capturingGroupCount;\n    }", "signature": "int getCapturingGroupCount()", "full_signature": "public int getCapturingGroupCount()", "class_method_signature": "Token.getCapturingGroupCount()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 32796510, "url": "https://github.com/rwitzel/streamflyer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 26, "size": 2880, "license": "licensed"}}