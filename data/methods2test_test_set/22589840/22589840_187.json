{"test_class": {"identifier": "FileNameValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "olat7.8/src/test/java/org/olat/data/commons/fileutil/FileNameValidatorTest.java"}, "test_case": {"identifier": "validate_false", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validate_false() {\n        assertFalse(FileNameValidator.validate(\"..this_is_valid_file_name\"));\n        assertFalse(FileNameValidator.validate(\"..this_is_valid_file_name...\"));\n        assertFalse(FileNameValidator.validate(\"//this_is_valid_file_name...\"));\n    }", "signature": "void validate_false()", "full_signature": "@Test public void validate_false()", "class_method_signature": "FileNameValidatorTest.validate_false()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "validate", "assertFalse", "validate", "assertFalse", "validate"]}, "focal_class": {"identifier": "FileNameValidator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static char[] FILE_NAME_FORBIDDEN_CHARS = { '/', '\\n', '\\r', '\\t', '\\f', '`', '?', '*', '\\\\', '<', '>', '|', '\\\"', ':' };", "modifier": "private static", "type": "char[]", "declarator": "FILE_NAME_FORBIDDEN_CHARS = { '/', '\\n', '\\r', '\\t', '\\f', '`', '?', '*', '\\\\', '<', '>', '|', '\\\"', ':' }", "var_name": "FILE_NAME_FORBIDDEN_CHARS"}, {"original_string": "private static char[] FILE_NAME_ACCEPTED_CHARS = { '\\u0228', '\\u0196', '\\u0252', '\\u0220', '\\u0246', '\\u0214', ' ' };", "modifier": "private static", "type": "char[]", "declarator": "FILE_NAME_ACCEPTED_CHARS = { '\\u0228', '\\u0196', '\\u0252', '\\u0220', '\\u0246', '\\u0214', ' ' }", "var_name": "FILE_NAME_ACCEPTED_CHARS"}], "methods": [{"identifier": "validate", "parameters": "(String filename)", "modifiers": "public static", "return": "boolean", "signature": "boolean validate(String filename)", "full_signature": "public static boolean validate(String filename)", "class_method_signature": "FileNameValidator.validate(String filename)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/data/commons/fileutil/FileNameValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(String filename)", "modifiers": "public static", "return": "boolean", "body": "public static boolean validate(String filename) {\n        if (filename == null) {\n            return false;\n        }\n        Arrays.sort(FILE_NAME_FORBIDDEN_CHARS);\n        Arrays.sort(FILE_NAME_ACCEPTED_CHARS);\n\n        for (int i = 0; i < filename.length(); i++) {\n            char character = filename.charAt(i);\n            if (Arrays.binarySearch(FILE_NAME_ACCEPTED_CHARS, character) >= 0) {\n                continue;\n            } else if (character < 33 || character > 255 || Arrays.binarySearch(FILE_NAME_FORBIDDEN_CHARS, character) >= 0) {\n                return false;\n            }\n        }\n        // Remove the last three positions with ...\n        // And check if there are any unwanted path denominators in the name\n        if (StringUtils.remove(filename, \"...\").indexOf(\"..\") > -1) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean validate(String filename)", "full_signature": "public static boolean validate(String filename)", "class_method_signature": "FileNameValidator.validate(String filename)", "testcase": false, "constructor": false, "invocations": ["sort", "sort", "length", "charAt", "binarySearch", "binarySearch", "indexOf", "remove"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}