{"test_class": {"identifier": "MessageExtractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private WilmaEntityProcessorInterface fastInfosetDecompressorProcessor;", "modifier": "@Mock\n    private", "type": "WilmaEntityProcessorInterface", "declarator": "fastInfosetDecompressorProcessor", "var_name": "fastInfosetDecompressorProcessor"}, {"original_string": "@Mock\n    private WilmaEntityProcessorInterface base64DecoderProcessor;", "modifier": "@Mock\n    private", "type": "WilmaEntityProcessorInterface", "declarator": "base64DecoderProcessor", "var_name": "base64DecoderProcessor"}, {"original_string": "@Mock\n    private WilmaHttpEntity message;", "modifier": "@Mock\n    private", "type": "WilmaHttpEntity", "declarator": "message", "var_name": "message"}, {"original_string": "@InjectMocks\n    private MessageExtractor underTest;", "modifier": "@InjectMocks\n    private", "type": "MessageExtractor", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-core/src/test/java/com/epam/wilma/core/processor/response/jms/MessageExtractorTest.java"}, "test_case": {"identifier": "testExtractShouldDoNothingWhenExceptionIsThrown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExtractShouldDoNothingWhenExceptionIsThrown() throws Exception {\n        doThrow(new ApplicationException(\"\")).when(base64DecoderProcessor).process(message);\n\n        underTest.extract(message);\n    }", "signature": "void testExtractShouldDoNothingWhenExceptionIsThrown()", "full_signature": "@Test public void testExtractShouldDoNothingWhenExceptionIsThrown()", "class_method_signature": "MessageExtractorTest.testExtractShouldDoNothingWhenExceptionIsThrown()", "testcase": true, "constructor": false, "invocations": ["process", "when", "doThrow", "extract"]}, "focal_class": {"identifier": "MessageExtractor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MessageExtractor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MessageExtractor.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    @Qualifier(\"fastInfosetDecompressorProcessor\")\n    private WilmaEntityProcessorInterface fastInfosetDecompressorProcessor;", "modifier": "@Autowired\n    @Qualifier(\"fastInfosetDecompressorProcessor\")\n    private", "type": "WilmaEntityProcessorInterface", "declarator": "fastInfosetDecompressorProcessor", "var_name": "fastInfosetDecompressorProcessor"}, {"original_string": "@Autowired\n    @Qualifier(\"base64DecoderProcessor\")\n    private WilmaEntityProcessorInterface base64DecoderProcessor;", "modifier": "@Autowired\n    @Qualifier(\"base64DecoderProcessor\")\n    private", "type": "WilmaEntityProcessorInterface", "declarator": "base64DecoderProcessor", "var_name": "base64DecoderProcessor"}], "methods": [{"identifier": "extract", "parameters": "(final WilmaHttpEntity message)", "modifiers": "public", "return": "void", "signature": "void extract(final WilmaHttpEntity message)", "full_signature": "public void extract(final WilmaHttpEntity message)", "class_method_signature": "MessageExtractor.extract(final WilmaHttpEntity message)", "testcase": false, "constructor": false}, {"identifier": "closeStream", "parameters": "(final WilmaHttpEntity message)", "modifiers": "private", "return": "void", "signature": "void closeStream(final WilmaHttpEntity message)", "full_signature": "private void closeStream(final WilmaHttpEntity message)", "class_method_signature": "MessageExtractor.closeStream(final WilmaHttpEntity message)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-core/src/main/java/com/epam/wilma/core/processor/response/jms/MessageExtractor.java"}, "focal_method": {"identifier": "extract", "parameters": "(final WilmaHttpEntity message)", "modifiers": "public", "return": "void", "body": "public void extract(final WilmaHttpEntity message) {\n        String body = message.getBody();\n        try {\n            base64DecoderProcessor.process(message);\n            fastInfosetDecompressorProcessor.process(message);\n        } catch (SystemException | ApplicationException e) {\n            String loggerID = message.getWilmaMessageLoggerId();\n            LOGGER.info(\"Failed to extract message content! ID: \" + loggerID + \". Restoring original content...\", e);\n            message.setBody(body);\n        } finally {\n            closeStream(message);\n        }\n    }", "signature": "void extract(final WilmaHttpEntity message)", "full_signature": "public void extract(final WilmaHttpEntity message)", "class_method_signature": "MessageExtractor.extract(final WilmaHttpEntity message)", "testcase": false, "constructor": false, "invocations": ["getBody", "process", "process", "getWilmaMessageLoggerId", "info", "setBody", "closeStream"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}