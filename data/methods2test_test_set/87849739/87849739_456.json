{"test_class": {"identifier": "DefaultWebsocketConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Config webSocketTestConfig;", "modifier": "private static", "type": "Config", "declarator": "webSocketTestConfig", "var_name": "webSocketTestConfig"}, {"original_string": "@Rule\n    public final JUnitSoftAssertions softly = new JUnitSoftAssertions();", "modifier": "@Rule\n    public final", "type": "JUnitSoftAssertions", "declarator": "softly = new JUnitSoftAssertions()", "var_name": "softly"}], "file": "services/gateway/util/src/test/java/org/eclipse/ditto/services/gateway/util/config/streaming/DefaultWebsocketConfigTest.java"}, "test_case": {"identifier": "render", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void render() {\n        final WebsocketConfig underTest = DefaultWebsocketConfig.of(webSocketTestConfig);\n        final Config rendered = underTest.render();\n        final WebsocketConfig reconstructed = DefaultWebsocketConfig.of(rendered);\n        assertThat(reconstructed).isEqualTo(underTest);\n    }", "signature": "void render()", "full_signature": "@Test public void render()", "class_method_signature": "DefaultWebsocketConfigTest.render()", "testcase": true, "constructor": false, "invocations": ["of", "render", "of", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DefaultWebsocketConfig", "superclass": "", "interfaces": "implements WebsocketConfig", "fields": [{"original_string": "private final int subscriberBackpressureQueueSize;", "modifier": "private final", "type": "int", "declarator": "subscriberBackpressureQueueSize", "var_name": "subscriberBackpressureQueueSize"}, {"original_string": "private final int publisherBackpressureBufferSize;", "modifier": "private final", "type": "int", "declarator": "publisherBackpressureBufferSize", "var_name": "publisherBackpressureBufferSize"}, {"original_string": "private final double throttlingRejectionFactor;", "modifier": "private final", "type": "double", "declarator": "throttlingRejectionFactor", "var_name": "throttlingRejectionFactor"}, {"original_string": "private final ThrottlingConfig throttlingConfig;", "modifier": "private final", "type": "ThrottlingConfig", "declarator": "throttlingConfig", "var_name": "throttlingConfig"}], "methods": [{"identifier": "DefaultWebsocketConfig", "parameters": "(final ScopedConfig scopedConfig)", "modifiers": "private", "return": "", "signature": " DefaultWebsocketConfig(final ScopedConfig scopedConfig)", "full_signature": "private  DefaultWebsocketConfig(final ScopedConfig scopedConfig)", "class_method_signature": "DefaultWebsocketConfig.DefaultWebsocketConfig(final ScopedConfig scopedConfig)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Config config)", "modifiers": "public static", "return": "WebsocketConfig", "signature": "WebsocketConfig of(final Config config)", "full_signature": "public static WebsocketConfig of(final Config config)", "class_method_signature": "DefaultWebsocketConfig.of(final Config config)", "testcase": false, "constructor": false}, {"identifier": "getSubscriberBackpressureQueueSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSubscriberBackpressureQueueSize()", "full_signature": "@Override public int getSubscriberBackpressureQueueSize()", "class_method_signature": "DefaultWebsocketConfig.getSubscriberBackpressureQueueSize()", "testcase": false, "constructor": false}, {"identifier": "getPublisherBackpressureBufferSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPublisherBackpressureBufferSize()", "full_signature": "@Override public int getPublisherBackpressureBufferSize()", "class_method_signature": "DefaultWebsocketConfig.getPublisherBackpressureBufferSize()", "testcase": false, "constructor": false}, {"identifier": "getThrottlingRejectionFactor", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double getThrottlingRejectionFactor()", "full_signature": "@Override public double getThrottlingRejectionFactor()", "class_method_signature": "DefaultWebsocketConfig.getThrottlingRejectionFactor()", "testcase": false, "constructor": false}, {"identifier": "getThrottlingConfig", "parameters": "()", "modifiers": "@Override public", "return": "ThrottlingConfig", "signature": "ThrottlingConfig getThrottlingConfig()", "full_signature": "@Override public ThrottlingConfig getThrottlingConfig()", "class_method_signature": "DefaultWebsocketConfig.getThrottlingConfig()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "DefaultWebsocketConfig.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultWebsocketConfig.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultWebsocketConfig.toString()", "testcase": false, "constructor": false}], "file": "services/gateway/util/src/main/java/org/eclipse/ditto/services/gateway/util/config/streaming/DefaultWebsocketConfig.java"}, "focal_method": {"identifier": "of", "parameters": "(final Config config)", "modifiers": "public static", "return": "WebsocketConfig", "body": "public static WebsocketConfig of(final Config config) {\n        return new DefaultWebsocketConfig(\n                ConfigWithFallback.newInstance(config, CONFIG_PATH, WebsocketConfigValue.values()));\n    }", "signature": "WebsocketConfig of(final Config config)", "full_signature": "public static WebsocketConfig of(final Config config)", "class_method_signature": "DefaultWebsocketConfig.of(final Config config)", "testcase": false, "constructor": false, "invocations": ["newInstance", "values"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}