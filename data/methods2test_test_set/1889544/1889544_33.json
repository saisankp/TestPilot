{"test_class": {"identifier": "AnnotationHandlerCollectorTest", "superclass": "extends NoOutputTestBase", "interfaces": "", "fields": [{"original_string": "private TestLogger logger;", "modifier": "private", "type": "TestLogger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private AnnotationHandlerCollector collector;", "modifier": "private", "type": "AnnotationHandlerCollector", "declarator": "collector", "var_name": "collector"}], "file": "subprojects/griffon-core-compile/src/test/java/org/codehaus/griffon/compile/core/processor/annotation/AnnotationHandlerCollectorTest.java"}, "test_case": {"identifier": "testGetAnnotationHandlerNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAnnotationHandlerNull() {\n        assertThrows(NullPointerException.class, () -> collector.getAnnotationHandler(null, null));\n    }", "signature": "void testGetAnnotationHandlerNull()", "full_signature": "@Test public void testGetAnnotationHandlerNull()", "class_method_signature": "AnnotationHandlerCollectorTest.testGetAnnotationHandlerNull()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "getAnnotationHandler"]}, "focal_class": {"identifier": "AnnotationHandlerCollector", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<String, String> handlers = new TreeMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "handlers = new TreeMap<>()", "var_name": "handlers"}, {"original_string": "private final Map<String, String> cached = new TreeMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "cached = new TreeMap<>()", "var_name": "cached"}, {"original_string": "private final Initializer initializer;", "modifier": "private final", "type": "Initializer", "declarator": "initializer", "var_name": "initializer"}, {"original_string": "private final Logger logger;", "modifier": "private final", "type": "Logger", "declarator": "logger", "var_name": "logger"}], "methods": [{"identifier": "AnnotationHandlerCollector", "parameters": "(Initializer initializer, Logger logger)", "modifiers": "public", "return": "", "signature": " AnnotationHandlerCollector(Initializer initializer, Logger logger)", "full_signature": "public  AnnotationHandlerCollector(Initializer initializer, Logger logger)", "class_method_signature": "AnnotationHandlerCollector.AnnotationHandlerCollector(Initializer initializer, Logger logger)", "testcase": false, "constructor": true}, {"identifier": "isModified", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isModified()", "full_signature": "public boolean isModified()", "class_method_signature": "AnnotationHandlerCollector.isModified()", "testcase": false, "constructor": false}, {"identifier": "getAnnotationHandler", "parameters": "(String type, String handlerType)", "modifiers": "public", "return": "String", "signature": "String getAnnotationHandler(String type, String handlerType)", "full_signature": "public String getAnnotationHandler(String type, String handlerType)", "class_method_signature": "AnnotationHandlerCollector.getAnnotationHandler(String type, String handlerType)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void load()", "full_signature": "public void load()", "class_method_signature": "AnnotationHandlerCollector.load()", "testcase": false, "constructor": false}, {"identifier": "removeAnnotationHandler", "parameters": "(String handler)", "modifiers": "public", "return": "void", "signature": "void removeAnnotationHandler(String handler)", "full_signature": "public void removeAnnotationHandler(String handler)", "class_method_signature": "AnnotationHandlerCollector.removeAnnotationHandler(String handler)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AnnotationHandlerCollector.toString()", "testcase": false, "constructor": false}, {"identifier": "toList", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toList()", "full_signature": "public String toList()", "class_method_signature": "AnnotationHandlerCollector.toList()", "testcase": false, "constructor": false}, {"identifier": "handlers", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> handlers()", "full_signature": "public Map<String, String> handlers()", "class_method_signature": "AnnotationHandlerCollector.handlers()", "testcase": false, "constructor": false}, {"identifier": "fromList", "parameters": "(String input)", "modifiers": "public", "return": "void", "signature": "void fromList(String input)", "full_signature": "public void fromList(String input)", "class_method_signature": "AnnotationHandlerCollector.fromList(String input)", "testcase": false, "constructor": false}], "file": "subprojects/griffon-core-compile/src/main/java/org/codehaus/griffon/compile/core/processor/annotation/AnnotationHandlerCollector.java"}, "focal_method": {"identifier": "getAnnotationHandler", "parameters": "(String type, String handlerType)", "modifiers": "public", "return": "String", "body": "public String getAnnotationHandler(String type, String handlerType) {\n        if (type == null) {\n            throw new NullPointerException(\"type\");\n        }\n        if (!handlers.containsKey(type)) {\n            handlers.put(type, handlerType);\n        }\n        return handlers.get(type);\n    }", "signature": "String getAnnotationHandler(String type, String handlerType)", "full_signature": "public String getAnnotationHandler(String type, String handlerType)", "class_method_signature": "AnnotationHandlerCollector.getAnnotationHandler(String type, String handlerType)", "testcase": false, "constructor": false, "invocations": ["containsKey", "put", "get"]}, "repository": {"repo_id": 1889544, "url": "https://github.com/griffon/griffon", "language": "Java", "is_fork": false, "fork_count": 82, "stargazer_count": 268, "size": 818435, "license": "licensed"}}