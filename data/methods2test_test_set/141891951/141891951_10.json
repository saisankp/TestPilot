{"test_class": {"identifier": "ConsumeQueueTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String msg = \"Once, there was a chance for me!\";", "modifier": "private static final", "type": "String", "declarator": "msg = \"Once, there was a chance for me!\"", "var_name": "msg"}, {"original_string": "private static final byte[] msgBody = msg.getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "msgBody = msg.getBytes()", "var_name": "msgBody"}, {"original_string": "private static final String topic = \"abc\";", "modifier": "private static final", "type": "String", "declarator": "topic = \"abc\"", "var_name": "topic"}, {"original_string": "private static final int queueId = 0;", "modifier": "private static final", "type": "int", "declarator": "queueId = 0", "var_name": "queueId"}, {"original_string": "private static final String storePath = \".\" + File.separator + \"unit_test_store\";", "modifier": "private static final", "type": "String", "declarator": "storePath = \".\" + File.separator + \"unit_test_store\"", "var_name": "storePath"}, {"original_string": "private static final int commitLogFileSize = 1024 * 8;", "modifier": "private static final", "type": "int", "declarator": "commitLogFileSize = 1024 * 8", "var_name": "commitLogFileSize"}, {"original_string": "private static final int cqFileSize = 10 * 20;", "modifier": "private static final", "type": "int", "declarator": "cqFileSize = 10 * 20", "var_name": "cqFileSize"}, {"original_string": "private static final int cqExtFileSize = 10 * (ConsumeQueueExt.CqExtUnit.MIN_EXT_UNIT_SIZE + 64);", "modifier": "private static final", "type": "int", "declarator": "cqExtFileSize = 10 * (ConsumeQueueExt.CqExtUnit.MIN_EXT_UNIT_SIZE + 64)", "var_name": "cqExtFileSize"}, {"original_string": "private static SocketAddress BornHost;", "modifier": "private static", "type": "SocketAddress", "declarator": "BornHost", "var_name": "BornHost"}, {"original_string": "private static SocketAddress StoreHost;", "modifier": "private static", "type": "SocketAddress", "declarator": "StoreHost", "var_name": "StoreHost"}], "file": "store/src/test/java/org/apache/rocketmq/store/ConsumeQueueTest.java"}, "test_case": {"identifier": "testPutMessagePositionInfo_buildCQRepeatedly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPutMessagePositionInfo_buildCQRepeatedly() throws Exception {\n        DefaultMessageStore messageStore = null;\n        try {\n\n            messageStore = gen();\n\n            int totalMessages = 10;\n\n            for (int i = 0; i < totalMessages; i++) {\n                putMsg(messageStore);\n            }\n            Thread.sleep(5);\n\n            ConsumeQueue cq = messageStore.getConsumeQueueTable().get(topic).get(queueId);\n            Method method = cq.getClass().getDeclaredMethod(\"putMessagePositionInfo\", long.class, int.class, long.class, long.class);\n\n            assertThat(method).isNotNull();\n\n            method.setAccessible(true);\n\n            SelectMappedBufferResult result = messageStore.getCommitLog().getData(0);\n            assertThat(result != null).isTrue();\n\n            DispatchRequest dispatchRequest = messageStore.getCommitLog().checkMessageAndReturnSize(result.getByteBuffer(), false, false);\n\n            assertThat(cq).isNotNull();\n\n            Object dispatchResult = method.invoke(cq, dispatchRequest.getCommitLogOffset(),\n                dispatchRequest.getMsgSize(), dispatchRequest.getTagsCode(), dispatchRequest.getConsumeQueueOffset());\n\n            assertThat(Boolean.parseBoolean(dispatchResult.toString())).isTrue();\n\n        } finally {\n            if (messageStore != null) {\n                messageStore.shutdown();\n                messageStore.destroy();\n            }\n            deleteDirectory(storePath);\n        }\n\n    }", "signature": "void testPutMessagePositionInfo_buildCQRepeatedly()", "full_signature": "@Test public void testPutMessagePositionInfo_buildCQRepeatedly()", "class_method_signature": "ConsumeQueueTest.testPutMessagePositionInfo_buildCQRepeatedly()", "testcase": true, "constructor": false, "invocations": ["gen", "putMsg", "sleep", "get", "get", "getConsumeQueueTable", "getDeclaredMethod", "getClass", "isNotNull", "assertThat", "setAccessible", "getData", "getCommitLog", "isTrue", "assertThat", "checkMessageAndReturnSize", "getCommitLog", "getByteBuffer", "isNotNull", "assertThat", "invoke", "getCommitLogOffset", "getMsgSize", "getTagsCode", "getConsumeQueueOffset", "isTrue", "assertThat", "parseBoolean", "toString", "shutdown", "destroy", "deleteDirectory"]}, "focal_class": {"identifier": "ConsumeQueue", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(LoggerName.STORE_LOGGER_NAME);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(LoggerName.STORE_LOGGER_NAME)", "var_name": "log"}, {"original_string": "public static final int CQ_STORE_UNIT_SIZE = 20;", "modifier": "public static final", "type": "int", "declarator": "CQ_STORE_UNIT_SIZE = 20", "var_name": "CQ_STORE_UNIT_SIZE"}, {"original_string": "private static final Logger LOG_ERROR = LoggerFactory.getLogger(LoggerName.STORE_ERROR_LOGGER_NAME);", "modifier": "private static final", "type": "Logger", "declarator": "LOG_ERROR = LoggerFactory.getLogger(LoggerName.STORE_ERROR_LOGGER_NAME)", "var_name": "LOG_ERROR"}, {"original_string": "private final DefaultMessageStore defaultMessageStore;", "modifier": "private final", "type": "DefaultMessageStore", "declarator": "defaultMessageStore", "var_name": "defaultMessageStore"}, {"original_string": "private final MappedFileQueue mappedFileQueue;", "modifier": "private final", "type": "MappedFileQueue", "declarator": "mappedFileQueue", "var_name": "mappedFileQueue"}, {"original_string": "private final String topic;", "modifier": "private final", "type": "String", "declarator": "topic", "var_name": "topic"}, {"original_string": "private final int queueId;", "modifier": "private final", "type": "int", "declarator": "queueId", "var_name": "queueId"}, {"original_string": "private final ByteBuffer byteBufferIndex;", "modifier": "private final", "type": "ByteBuffer", "declarator": "byteBufferIndex", "var_name": "byteBufferIndex"}, {"original_string": "private final String storePath;", "modifier": "private final", "type": "String", "declarator": "storePath", "var_name": "storePath"}, {"original_string": "private final int mappedFileSize;", "modifier": "private final", "type": "int", "declarator": "mappedFileSize", "var_name": "mappedFileSize"}, {"original_string": "private long maxPhysicOffset = -1;", "modifier": "private", "type": "long", "declarator": "maxPhysicOffset = -1", "var_name": "maxPhysicOffset"}, {"original_string": "private volatile long minLogicOffset = 0;", "modifier": "private volatile", "type": "long", "declarator": "minLogicOffset = 0", "var_name": "minLogicOffset"}, {"original_string": "private ConsumeQueueExt consumeQueueExt = null;", "modifier": "private", "type": "ConsumeQueueExt", "declarator": "consumeQueueExt = null", "var_name": "consumeQueueExt"}], "methods": [{"identifier": "ConsumeQueue", "parameters": "(\n        final String topic,\n        final int queueId,\n        final String storePath,\n        final int mappedFileSize,\n        final DefaultMessageStore defaultMessageStore)", "modifiers": "public", "return": "", "signature": " ConsumeQueue(\n        final String topic,\n        final int queueId,\n        final String storePath,\n        final int mappedFileSize,\n        final DefaultMessageStore defaultMessageStore)", "full_signature": "public  ConsumeQueue(\n        final String topic,\n        final int queueId,\n        final String storePath,\n        final int mappedFileSize,\n        final DefaultMessageStore defaultMessageStore)", "class_method_signature": "ConsumeQueue.ConsumeQueue(\n        final String topic,\n        final int queueId,\n        final String storePath,\n        final int mappedFileSize,\n        final DefaultMessageStore defaultMessageStore)", "testcase": false, "constructor": true}, {"identifier": "load", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean load()", "full_signature": "public boolean load()", "class_method_signature": "ConsumeQueue.load()", "testcase": false, "constructor": false}, {"identifier": "recover", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void recover()", "full_signature": "public void recover()", "class_method_signature": "ConsumeQueue.recover()", "testcase": false, "constructor": false}, {"identifier": "getOffsetInQueueByTime", "parameters": "(final long timestamp)", "modifiers": "public", "return": "long", "signature": "long getOffsetInQueueByTime(final long timestamp)", "full_signature": "public long getOffsetInQueueByTime(final long timestamp)", "class_method_signature": "ConsumeQueue.getOffsetInQueueByTime(final long timestamp)", "testcase": false, "constructor": false}, {"identifier": "truncateDirtyLogicFiles", "parameters": "(long phyOffet)", "modifiers": "public", "return": "void", "signature": "void truncateDirtyLogicFiles(long phyOffet)", "full_signature": "public void truncateDirtyLogicFiles(long phyOffet)", "class_method_signature": "ConsumeQueue.truncateDirtyLogicFiles(long phyOffet)", "testcase": false, "constructor": false}, {"identifier": "getLastOffset", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastOffset()", "full_signature": "public long getLastOffset()", "class_method_signature": "ConsumeQueue.getLastOffset()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "(final int flushLeastPages)", "modifiers": "public", "return": "boolean", "signature": "boolean flush(final int flushLeastPages)", "full_signature": "public boolean flush(final int flushLeastPages)", "class_method_signature": "ConsumeQueue.flush(final int flushLeastPages)", "testcase": false, "constructor": false}, {"identifier": "deleteExpiredFile", "parameters": "(long offset)", "modifiers": "public", "return": "int", "signature": "int deleteExpiredFile(long offset)", "full_signature": "public int deleteExpiredFile(long offset)", "class_method_signature": "ConsumeQueue.deleteExpiredFile(long offset)", "testcase": false, "constructor": false}, {"identifier": "correctMinOffset", "parameters": "(long phyMinOffset)", "modifiers": "public", "return": "void", "signature": "void correctMinOffset(long phyMinOffset)", "full_signature": "public void correctMinOffset(long phyMinOffset)", "class_method_signature": "ConsumeQueue.correctMinOffset(long phyMinOffset)", "testcase": false, "constructor": false}, {"identifier": "getMinOffsetInQueue", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMinOffsetInQueue()", "full_signature": "public long getMinOffsetInQueue()", "class_method_signature": "ConsumeQueue.getMinOffsetInQueue()", "testcase": false, "constructor": false}, {"identifier": "putMessagePositionInfoWrapper", "parameters": "(DispatchRequest request)", "modifiers": "public", "return": "void", "signature": "void putMessagePositionInfoWrapper(DispatchRequest request)", "full_signature": "public void putMessagePositionInfoWrapper(DispatchRequest request)", "class_method_signature": "ConsumeQueue.putMessagePositionInfoWrapper(DispatchRequest request)", "testcase": false, "constructor": false}, {"identifier": "putMessagePositionInfo", "parameters": "(final long offset, final int size, final long tagsCode,\n        final long cqOffset)", "modifiers": "private", "return": "boolean", "signature": "boolean putMessagePositionInfo(final long offset, final int size, final long tagsCode,\n        final long cqOffset)", "full_signature": "private boolean putMessagePositionInfo(final long offset, final int size, final long tagsCode,\n        final long cqOffset)", "class_method_signature": "ConsumeQueue.putMessagePositionInfo(final long offset, final int size, final long tagsCode,\n        final long cqOffset)", "testcase": false, "constructor": false}, {"identifier": "fillPreBlank", "parameters": "(final MappedFile mappedFile, final long untilWhere)", "modifiers": "private", "return": "void", "signature": "void fillPreBlank(final MappedFile mappedFile, final long untilWhere)", "full_signature": "private void fillPreBlank(final MappedFile mappedFile, final long untilWhere)", "class_method_signature": "ConsumeQueue.fillPreBlank(final MappedFile mappedFile, final long untilWhere)", "testcase": false, "constructor": false}, {"identifier": "getIndexBuffer", "parameters": "(final long startIndex)", "modifiers": "public", "return": "SelectMappedBufferResult", "signature": "SelectMappedBufferResult getIndexBuffer(final long startIndex)", "full_signature": "public SelectMappedBufferResult getIndexBuffer(final long startIndex)", "class_method_signature": "ConsumeQueue.getIndexBuffer(final long startIndex)", "testcase": false, "constructor": false}, {"identifier": "getExt", "parameters": "(final long offset)", "modifiers": "public", "return": "ConsumeQueueExt.CqExtUnit", "signature": "ConsumeQueueExt.CqExtUnit getExt(final long offset)", "full_signature": "public ConsumeQueueExt.CqExtUnit getExt(final long offset)", "class_method_signature": "ConsumeQueue.getExt(final long offset)", "testcase": false, "constructor": false}, {"identifier": "getExt", "parameters": "(final long offset, ConsumeQueueExt.CqExtUnit cqExtUnit)", "modifiers": "public", "return": "boolean", "signature": "boolean getExt(final long offset, ConsumeQueueExt.CqExtUnit cqExtUnit)", "full_signature": "public boolean getExt(final long offset, ConsumeQueueExt.CqExtUnit cqExtUnit)", "class_method_signature": "ConsumeQueue.getExt(final long offset, ConsumeQueueExt.CqExtUnit cqExtUnit)", "testcase": false, "constructor": false}, {"identifier": "getMinLogicOffset", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMinLogicOffset()", "full_signature": "public long getMinLogicOffset()", "class_method_signature": "ConsumeQueue.getMinLogicOffset()", "testcase": false, "constructor": false}, {"identifier": "setMinLogicOffset", "parameters": "(long minLogicOffset)", "modifiers": "public", "return": "void", "signature": "void setMinLogicOffset(long minLogicOffset)", "full_signature": "public void setMinLogicOffset(long minLogicOffset)", "class_method_signature": "ConsumeQueue.setMinLogicOffset(long minLogicOffset)", "testcase": false, "constructor": false}, {"identifier": "rollNextFile", "parameters": "(final long index)", "modifiers": "public", "return": "long", "signature": "long rollNextFile(final long index)", "full_signature": "public long rollNextFile(final long index)", "class_method_signature": "ConsumeQueue.rollNextFile(final long index)", "testcase": false, "constructor": false}, {"identifier": "getTopic", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTopic()", "full_signature": "public String getTopic()", "class_method_signature": "ConsumeQueue.getTopic()", "testcase": false, "constructor": false}, {"identifier": "getQueueId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getQueueId()", "full_signature": "public int getQueueId()", "class_method_signature": "ConsumeQueue.getQueueId()", "testcase": false, "constructor": false}, {"identifier": "getMaxPhysicOffset", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxPhysicOffset()", "full_signature": "public long getMaxPhysicOffset()", "class_method_signature": "ConsumeQueue.getMaxPhysicOffset()", "testcase": false, "constructor": false}, {"identifier": "setMaxPhysicOffset", "parameters": "(long maxPhysicOffset)", "modifiers": "public", "return": "void", "signature": "void setMaxPhysicOffset(long maxPhysicOffset)", "full_signature": "public void setMaxPhysicOffset(long maxPhysicOffset)", "class_method_signature": "ConsumeQueue.setMaxPhysicOffset(long maxPhysicOffset)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "ConsumeQueue.destroy()", "testcase": false, "constructor": false}, {"identifier": "getMessageTotalInQueue", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMessageTotalInQueue()", "full_signature": "public long getMessageTotalInQueue()", "class_method_signature": "ConsumeQueue.getMessageTotalInQueue()", "testcase": false, "constructor": false}, {"identifier": "getMaxOffsetInQueue", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxOffsetInQueue()", "full_signature": "public long getMaxOffsetInQueue()", "class_method_signature": "ConsumeQueue.getMaxOffsetInQueue()", "testcase": false, "constructor": false}, {"identifier": "checkSelf", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void checkSelf()", "full_signature": "public void checkSelf()", "class_method_signature": "ConsumeQueue.checkSelf()", "testcase": false, "constructor": false}, {"identifier": "isExtReadEnable", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isExtReadEnable()", "full_signature": "protected boolean isExtReadEnable()", "class_method_signature": "ConsumeQueue.isExtReadEnable()", "testcase": false, "constructor": false}, {"identifier": "isExtWriteEnable", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isExtWriteEnable()", "full_signature": "protected boolean isExtWriteEnable()", "class_method_signature": "ConsumeQueue.isExtWriteEnable()", "testcase": false, "constructor": false}, {"identifier": "isExtAddr", "parameters": "(long tagsCode)", "modifiers": "public", "return": "boolean", "signature": "boolean isExtAddr(long tagsCode)", "full_signature": "public boolean isExtAddr(long tagsCode)", "class_method_signature": "ConsumeQueue.isExtAddr(long tagsCode)", "testcase": false, "constructor": false}, {"identifier": "deleteExpiredFileByIndex", "parameters": "(int startIndex)", "modifiers": "public", "return": "void", "signature": "void deleteExpiredFileByIndex(int startIndex)", "full_signature": "public void deleteExpiredFileByIndex(int startIndex)", "class_method_signature": "ConsumeQueue.deleteExpiredFileByIndex(int startIndex)", "testcase": false, "constructor": false}], "file": "store/src/main/java/org/apache/rocketmq/store/ConsumeQueue.java"}, "focal_method": {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void destroy() {\n        this.maxPhysicOffset = -1;\n        this.minLogicOffset = 0;\n        this.mappedFileQueue.destroy();\n        if (isExtReadEnable()) {\n            this.consumeQueueExt.destroy();\n        }\n    }", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "ConsumeQueue.destroy()", "testcase": false, "constructor": false, "invocations": ["destroy", "isExtReadEnable", "destroy"]}, "repository": {"repo_id": 141891951, "url": "https://github.com/longlong524/store", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 9, "size": 122, "license": "licensed"}}