{"test_class": {"identifier": "AuditTest", "superclass": "", "interfaces": "", "fields": [], "file": "framework/persistence/src/test/java/org/koenighotze/jee7hotel/framework/persistence/audit/AuditTest.java"}, "test_case": {"identifier": "the_audit_fields_are_set_if_marked_as_auditable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void the_audit_fields_are_set_if_marked_as_auditable() throws InterruptedException {\n        final Timestamp NOW =  Timestamp.from(Instant.now());\n\n        AuditableClass auditable = new AuditableClass();\n        new Audit().setAuditFields(auditable);\n\n        assertThat(auditable.lastUpdate).isNotNull();\n\n        assertThat(auditable.lastUpdate.getTime()).isGreaterThan(NOW.getTime());\n    }", "signature": "void the_audit_fields_are_set_if_marked_as_auditable()", "full_signature": "@Test public void the_audit_fields_are_set_if_marked_as_auditable()", "class_method_signature": "AuditTest.the_audit_fields_are_set_if_marked_as_auditable()", "testcase": true, "constructor": false, "invocations": ["from", "now", "setAuditFields", "isNotNull", "assertThat", "isGreaterThan", "assertThat", "getTime", "getTime"]}, "focal_class": {"identifier": "Audit", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(Audit.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(Audit.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "setAuditFields", "parameters": "(Object entity)", "modifiers": "@PreUpdate @PrePersist public", "return": "void", "signature": "void setAuditFields(Object entity)", "full_signature": "@PreUpdate @PrePersist public void setAuditFields(Object entity)", "class_method_signature": "Audit.setAuditFields(Object entity)", "testcase": false, "constructor": false}], "file": "framework/persistence/src/main/java/org/koenighotze/jee7hotel/framework/persistence/audit/Audit.java"}, "focal_method": {"identifier": "setAuditFields", "parameters": "(Object entity)", "modifiers": "@PreUpdate @PrePersist public", "return": "void", "body": "@PreUpdate\n    @PrePersist\n    public void setAuditFields(Object entity) {\n        final LocalDateTime NOW = now();\n\n        for (Field field : entity.getClass().getDeclaredFields()) {\n            if (field.getAnnotation(Auditable.class) != null && field.getType().equals(Date.class)) {\n                try {\n                    LOGGER.finest(() -> format(\"Setting %s field %s to %s\", entity.getClass(), field.getName(), NOW));\n                    field.setAccessible(true);\n                    field.set(entity, java.sql.Timestamp.valueOf(NOW));\n                } catch (IllegalAccessException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n    }", "signature": "void setAuditFields(Object entity)", "full_signature": "@PreUpdate @PrePersist public void setAuditFields(Object entity)", "class_method_signature": "Audit.setAuditFields(Object entity)", "testcase": false, "constructor": false, "invocations": ["now", "getDeclaredFields", "getClass", "getAnnotation", "equals", "getType", "finest", "format", "getClass", "getName", "setAccessible", "set", "valueOf"]}, "repository": {"repo_id": 26170170, "url": "https://github.com/koenighotze/Hotel-Reservation-Tool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 1659, "license": "licensed"}}