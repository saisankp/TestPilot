{"test_class": {"identifier": "StubResponseProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GzipCompressorProcessor processorMock;", "modifier": "@Mock\n    private", "type": "GzipCompressorProcessor", "declarator": "processorMock", "var_name": "processorMock"}, {"original_string": "@Mock\n    private HttpServletRequest req;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "@Mock\n    private HttpServletResponse resp;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "resp", "var_name": "resp"}, {"original_string": "private byte[] responseBody;", "modifier": "private", "type": "byte[]", "declarator": "responseBody", "var_name": "responseBody"}, {"original_string": "private StubResponseProcessor underTest;", "modifier": "private", "type": "StubResponseProcessor", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private List<ResponseProcessor> processors;", "modifier": "private", "type": "List<ResponseProcessor>", "declarator": "processors", "var_name": "processors"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/stub/response/processor/StubResponseProcessorTest.java"}, "test_case": {"identifier": "testProcessResponseShouldCallTwiceProcessorWhenProcessorListContainsTwoProcessor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessResponseShouldCallTwiceProcessorWhenProcessorListContainsTwoProcessor() {\n        //GIVEN\n        processors.add(processorMock);\n        given(processorMock.process(req, resp, responseBody)).willReturn(responseBody);\n        //WHEN\n        byte[] actual = underTest.processResponse(req, resp, responseBody);\n        //THEN\n        verify(processorMock, times(2)).process(req, resp, responseBody);\n        assertEquals(actual, responseBody);\n    }", "signature": "void testProcessResponseShouldCallTwiceProcessorWhenProcessorListContainsTwoProcessor()", "full_signature": "@Test public void testProcessResponseShouldCallTwiceProcessorWhenProcessorListContainsTwoProcessor()", "class_method_signature": "StubResponseProcessorTest.testProcessResponseShouldCallTwiceProcessorWhenProcessorListContainsTwoProcessor()", "testcase": true, "constructor": false, "invocations": ["add", "willReturn", "given", "process", "processResponse", "process", "verify", "times", "assertEquals"]}, "focal_class": {"identifier": "StubResponseProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<ResponseProcessor> responseProcessors;", "modifier": "private", "type": "List<ResponseProcessor>", "declarator": "responseProcessors", "var_name": "responseProcessors"}], "methods": [{"identifier": "processResponse", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "modifiers": "public", "return": "byte[]", "signature": "byte[] processResponse(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "full_signature": "public byte[] processResponse(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "class_method_signature": "StubResponseProcessor.processResponse(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "testcase": false, "constructor": false}, {"identifier": "setResponseProcessors", "parameters": "(final List<ResponseProcessor> responseProcessors)", "modifiers": "public", "return": "void", "signature": "void setResponseProcessors(final List<ResponseProcessor> responseProcessors)", "full_signature": "public void setResponseProcessors(final List<ResponseProcessor> responseProcessors)", "class_method_signature": "StubResponseProcessor.setResponseProcessors(final List<ResponseProcessor> responseProcessors)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/stub/response/processor/StubResponseProcessor.java"}, "focal_method": {"identifier": "processResponse", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "modifiers": "public", "return": "byte[]", "body": "public byte[] processResponse(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody) {\n        byte[] result = responseBody;\n        for (ResponseProcessor processor : responseProcessors) {\n            result = processor.process(req, resp, result);\n        }\n        return result;\n    }", "signature": "byte[] processResponse(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "full_signature": "public byte[] processResponse(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "class_method_signature": "StubResponseProcessor.processResponse(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "testcase": false, "constructor": false, "invocations": ["process"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}