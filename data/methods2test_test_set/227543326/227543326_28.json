{"test_class": {"identifier": "QueryResultUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ResultSet resultSet;", "modifier": "@Mock\n    private", "type": "ResultSet", "declarator": "resultSet", "var_name": "resultSet"}, {"original_string": "@Mock\n    private ResultSetMetaData resultSetMetaData;", "modifier": "@Mock\n    private", "type": "ResultSetMetaData", "declarator": "resultSetMetaData", "var_name": "resultSetMetaData"}], "file": "zebra/zebra-thirdparty/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java"}, "test_case": {"identifier": "assertGetValueByBinary", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void assertGetValueByBinary() throws SQLException {\n        Blob blob = mock(Blob.class);\n        when(resultSetMetaData.getColumnType(1)).thenReturn(Types.BINARY);\n        when(resultSet.getBlob(1)).thenReturn(blob);\n        assertThat((Blob) QueryResultUtil.getValue(resultSet, 1), is(blob));\n    }", "signature": "void assertGetValueByBinary()", "full_signature": "@Test public void assertGetValueByBinary()", "class_method_signature": "QueryResultUtilTest.assertGetValueByBinary()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getColumnType", "thenReturn", "when", "getBlob", "assertThat", "getValue", "is"]}, "focal_class": {"identifier": "QueryResultUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getValue", "parameters": "(final ResultSet resultSet, final int columnIndex)", "modifiers": "public static", "return": "Object", "signature": "Object getValue(final ResultSet resultSet, final int columnIndex)", "full_signature": "public static Object getValue(final ResultSet resultSet, final int columnIndex)", "class_method_signature": "QueryResultUtil.getValue(final ResultSet resultSet, final int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "getValueByColumnType", "parameters": "(final ResultSet resultSet, final int columnIndex)", "modifiers": "private static", "return": "Object", "signature": "Object getValueByColumnType(final ResultSet resultSet, final int columnIndex)", "full_signature": "private static Object getValueByColumnType(final ResultSet resultSet, final int columnIndex)", "class_method_signature": "QueryResultUtil.getValueByColumnType(final ResultSet resultSet, final int columnIndex)", "testcase": false, "constructor": false}], "file": "zebra/zebra-thirdparty/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java"}, "focal_method": {"identifier": "getValue", "parameters": "(final ResultSet resultSet, final int columnIndex)", "modifiers": "public static", "return": "Object", "body": "public static Object getValue(final ResultSet resultSet, final int columnIndex) throws SQLException {\n        Object result = getValueByColumnType(resultSet, columnIndex);\n        return resultSet.wasNull() ? null : result;\n    }", "signature": "Object getValue(final ResultSet resultSet, final int columnIndex)", "full_signature": "public static Object getValue(final ResultSet resultSet, final int columnIndex)", "class_method_signature": "QueryResultUtil.getValue(final ResultSet resultSet, final int columnIndex)", "testcase": false, "constructor": false, "invocations": ["getValueByColumnType", "wasNull"]}, "repository": {"repo_id": 227543326, "url": "https://github.com/gszebra/zebra", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 15, "size": 2223, "license": "licensed"}}