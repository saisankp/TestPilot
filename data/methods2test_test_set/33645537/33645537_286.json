{"test_class": {"identifier": "ReverseStringTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ReverseString reverseString;", "modifier": "private", "type": "ReverseString", "declarator": "reverseString", "var_name": "reverseString"}], "file": "algs/src/test/java/com/github/pedrovgs/problem51/ReverseStringTest.java"}, "test_case": {"identifier": "shouldReturnAnEmptyStringIfTheInputIsEmptyIterative", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReturnAnEmptyStringIfTheInputIsEmptyIterative() {\n    String result = reverseString.reverseIterative(\"\");\n\n    assertEquals(\"\", result);\n  }", "signature": "void shouldReturnAnEmptyStringIfTheInputIsEmptyIterative()", "full_signature": "@Test public void shouldReturnAnEmptyStringIfTheInputIsEmptyIterative()", "class_method_signature": "ReverseStringTest.shouldReturnAnEmptyStringIfTheInputIsEmptyIterative()", "testcase": true, "constructor": false, "invocations": ["reverseIterative", "assertEquals"]}, "focal_class": {"identifier": "ReverseString", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "reverseIterative", "parameters": "(String input)", "modifiers": "public", "return": "String", "signature": "String reverseIterative(String input)", "full_signature": "public String reverseIterative(String input)", "class_method_signature": "ReverseString.reverseIterative(String input)", "testcase": false, "constructor": false}, {"identifier": "reverseRecursive", "parameters": "(String input)", "modifiers": "public", "return": "String", "signature": "String reverseRecursive(String input)", "full_signature": "public String reverseRecursive(String input)", "class_method_signature": "ReverseString.reverseRecursive(String input)", "testcase": false, "constructor": false}, {"identifier": "reverseRecursiveInner", "parameters": "(String input, int i, StringBuilder stringBuilder)", "modifiers": "private", "return": "String", "signature": "String reverseRecursiveInner(String input, int i, StringBuilder stringBuilder)", "full_signature": "private String reverseRecursiveInner(String input, int i, StringBuilder stringBuilder)", "class_method_signature": "ReverseString.reverseRecursiveInner(String input, int i, StringBuilder stringBuilder)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(String input)", "modifiers": "private", "return": "void", "signature": "void validateInput(String input)", "full_signature": "private void validateInput(String input)", "class_method_signature": "ReverseString.validateInput(String input)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem51/ReverseString.java"}, "focal_method": {"identifier": "reverseIterative", "parameters": "(String input)", "modifiers": "public", "return": "String", "body": "public String reverseIterative(String input) {\n    validateInput(input);\n\n    StringBuilder stringBuilder = new StringBuilder();\n    for (int i = input.length() - 1; i >= 0; i--) {\n      stringBuilder.append(input.charAt(i));\n    }\n    return stringBuilder.toString();\n  }", "signature": "String reverseIterative(String input)", "full_signature": "public String reverseIterative(String input)", "class_method_signature": "ReverseString.reverseIterative(String input)", "testcase": false, "constructor": false, "invocations": ["validateInput", "length", "append", "charAt", "toString"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}