{"test_class": {"identifier": "CmdCallerTest", "superclass": "", "interfaces": "", "fields": [], "file": "http-client/src/test/java/com/alibaba/csb/sdk/CmdCallerTest.java"}, "test_case": {"identifier": "testCGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCGet() {\n        System.setProperty(\"hfile\", \"/tmp/hfile.prop\");\n        CmdCaller.main(new String[]{\"cget\", \"http://abc:123?a=b&c=abc\", \"testget\", \"1.0.0\", \"ak\", \"sk\"});\n    }", "signature": "void testCGet()", "full_signature": "@Test public void testCGet()", "class_method_signature": "CmdCallerTest.testCGet()", "testcase": true, "constructor": false, "invocations": ["setProperty", "main"]}, "focal_class": {"identifier": "CmdCaller", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SDK_VERSION = \"1.1.4\";", "modifier": "private static final", "type": "String", "declarator": "SDK_VERSION = \"1.1.4\"", "var_name": "SDK_VERSION"}], "methods": [{"identifier": "usage", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void usage()", "full_signature": "private static void usage()", "class_method_signature": "CmdCaller.usage()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String args[])", "modifiers": "public static", "return": "void", "signature": "void main(String args[])", "full_signature": "public static void main(String args[])", "class_method_signature": "CmdCaller.main(String args[])", "testcase": false, "constructor": false}, {"identifier": "loadProps", "parameters": "(String propFile)", "modifiers": "private static", "return": "Properties", "signature": "Properties loadProps(String propFile)", "full_signature": "private static Properties loadProps(String propFile)", "class_method_signature": "CmdCaller.loadProps(String propFile)", "testcase": false, "constructor": false}, {"identifier": "readPropFile", "parameters": "(String pfileKey)", "modifiers": "private static", "return": "Properties", "signature": "Properties readPropFile(String pfileKey)", "full_signature": "private static Properties readPropFile(String pfileKey)", "class_method_signature": "CmdCaller.readPropFile(String pfileKey)", "testcase": false, "constructor": false}], "file": "http-client/src/main/java/com/alibaba/csb/sdk/CmdCaller.java"}, "focal_method": {"identifier": "main", "parameters": "(String args[])", "modifiers": "public static", "return": "void", "body": "public static void main(String args[]) {\n\t\ttry {\n\t\t\tif (args.length > 0 && \"-v\".equalsIgnoreCase(args[0])) {\n\t\t\t\tSystem.out.println(\"HttpCaller SDK version:\" + SDK_VERSION);\n\t\t\t\ttry {\n\t\t\t\t\tSystem.out.println(CommUtil.geCurrenttVersionFile());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t//e.printStackTrace();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (args.length != 4 && args.length != 6) {\n\t\t\t\tusage();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tString method = args[0];\n\t\t\tif (!\"get\".equalsIgnoreCase(method) && !\"post\".equalsIgnoreCase(method)\n\t\t\t\t\t&& !\"cget\".equalsIgnoreCase(method) && !\"cpost\".equalsIgnoreCase(method)) {\n\t\t\t\tusage();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tProperties headerProp = readPropFile(\"hfile\");\n\t\t\tProperties dataProp = readPropFile(\"dfile\");\n\n\t\t\tString lurl = args[1];\n\t\t\tString apiName = args[2];\n\t\t\tString version = args[3];\n\n\t\t\tif (\"null\".equalsIgnoreCase(args[3]))\n\t\t\t\tversion = null;\n\n\t\t\tString ak = null;\n\t\t\tString sk = null;\n\n\t\t\tSystem.out.println(\"---- restful request url:\" + lurl);\n\t\t\tSystem.out.println(\"---- apiName:\" + apiName);\n\t\t\tSystem.out.println(\"---- version:\" + version);\n\t\t\tSystem.out.println(\"---- method:\" + method);\n\n\t\t\tif (args.length == 6) {\n\t\t\t\tak = args[4];\n\t\t\t\tsk = args[5];\n\n\t\t\t\tif (\"\".equals(ak))\n\t\t\t\t\tak = null;\n\t\t\t\tSystem.out.println(\"---- ak:\" + ak);\n\t\t\t\tSystem.out.println(\"---- sk:\" + sk);\n\t\t\t}\n\t\t\tString ret = null;\n\n\t\t\tboolean curlOnly = false;\n\t\t\tif (method.toLowerCase().startsWith(\"c\")) {\n\t\t\t\tcurlOnly = true;\n\t\t\t\tHttpCaller.setCurlResponse(true);\n\t\t\t}\n\n\t\t\tHttpParameters.Builder builder = HttpParameters.newBuilder();\n\t\t\tbuilder.api(apiName).version(version).method(method).requestURL(lurl).accessKey(ak).secretKey(sk);\n\n\t\t\tif (headerProp != null) {\n\t\t\t\tfor (Entry<Object, Object> kv : headerProp.entrySet()) {\n\t\t\t\t\tif (\"NONCE\".equalsIgnoreCase(String.valueOf(kv.getKey()))) {\n\t\t\t\t\t\t//\u8bbe\u7f6enonce flag\n\t\t\t\t\t\tif(\"true\".equalsIgnoreCase(String.valueOf(kv.getValue()))) {\n\t\t\t\t\t\t\tSystem.out.println(\"---- set nonce as true \");\n\t\t\t\t\t\t\tbuilder.nonce(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.println(\"---- put http header \" + (String) kv.getKey() + \":\" + (String) kv.getValue());\n\t\t\t\t\tbuilder.putHeaderParamsMap((String) kv.getKey(), (String) kv.getValue());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dataProp != null) {\n\t\t\t\tfor (Entry<Object, Object> kv : dataProp.entrySet()) {\n\t\t\t\t\tSystem.out.println(\"---- put data body \" + (String) kv.getKey() + \":\" + (String) kv.getValue());\n\t\t\t\t\tbuilder.putParamsMap((String) kv.getKey(), (String) kv.getValue());\n\t\t\t\t}\n\t\t\t}\n\t\t\tStringBuffer resHttpHeaders = new StringBuffer();\n\t\t\tret = HttpCaller.invoke(builder.build(), resHttpHeaders);\n\n\t\t\tif (curlOnly) {\n\t\t\t\tSystem.out.println(\"---- curlString = \" + ret);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"---- response http headers = \" + resHttpHeaders.toString());\n\t\t\t\tSystem.out.println(\"---- retStr = \" + ret);\n\n\t\t\t\t//call multi-times for stress or flow-ctrl testing\n\t\t\t\tint times = Integer.getInteger(\"test.stress.times\",0);\n\t\t\t\tfor(int i=2; i<=times; i++) {\n\t\t\t\t\tret = HttpCaller.invoke(builder.build(), resHttpHeaders);\n\t\t\t\t\tSystem.out.println(\"---- retStr [#\"+i+\"] = \" + ret);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println();\n\t\t\t//System.exit(0);\n\t\t} catch (HttpCallerException e) {\n\t\t\tSystem.out.println(\"---- sdk invoke error:\" + e.getMessage());\n\t\t}\n\t}", "signature": "void main(String args[])", "full_signature": "public static void main(String args[])", "class_method_signature": "CmdCaller.main(String args[])", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "println", "println", "geCurrenttVersionFile", "usage", "equalsIgnoreCase", "equalsIgnoreCase", "equalsIgnoreCase", "equalsIgnoreCase", "usage", "readPropFile", "readPropFile", "equalsIgnoreCase", "println", "println", "println", "println", "equals", "println", "println", "startsWith", "toLowerCase", "setCurlResponse", "newBuilder", "secretKey", "accessKey", "requestURL", "method", "version", "api", "entrySet", "equalsIgnoreCase", "valueOf", "getKey", "equalsIgnoreCase", "valueOf", "getValue", "println", "nonce", "println", "getKey", "getValue", "putHeaderParamsMap", "getKey", "getValue", "entrySet", "println", "getKey", "getValue", "putParamsMap", "getKey", "getValue", "invoke", "build", "println", "println", "toString", "println", "getInteger", "invoke", "build", "println", "println", "println", "getMessage"]}, "repository": {"repo_id": 94076429, "url": "https://github.com/aliyun/csb-sdk", "stars": 27, "created": "6/12/2017 9:04:20 AM +00:00", "updates": "2020-01-22T02:25:09+00:00", "fork": "False", "license": "licensed"}}