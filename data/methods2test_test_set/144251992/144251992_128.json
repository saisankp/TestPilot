{"test_class": {"identifier": "MailProjectApplicationEventHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String JIRA_ISSUE_URL = \"https://jira.com/issues/\";", "modifier": "private static final", "type": "String", "declarator": "JIRA_ISSUE_URL = \"https://jira.com/issues/\"", "var_name": "JIRA_ISSUE_URL"}, {"original_string": "@Mock\n    private MailSenderAdapter mailSenderAdapterMock;", "modifier": "@Mock\n    private", "type": "MailSenderAdapter", "declarator": "mailSenderAdapterMock", "var_name": "mailSenderAdapterMock"}, {"original_string": "@Mock\n    private UserService userServiceMock;", "modifier": "@Mock\n    private", "type": "UserService", "declarator": "userServiceMock", "var_name": "userServiceMock"}, {"original_string": "@Mock\n    private VelocityMailTemplateService velocityMailTemplateServiceMock;", "modifier": "@Mock\n    private", "type": "VelocityMailTemplateService", "declarator": "velocityMailTemplateServiceMock", "var_name": "velocityMailTemplateServiceMock"}, {"original_string": "@Mock\n    private MailConfigurationProperties mailConfigPropertiesMock;", "modifier": "@Mock\n    private", "type": "MailConfigurationProperties", "declarator": "mailConfigPropertiesMock", "var_name": "mailConfigPropertiesMock"}, {"original_string": "@Mock\n    private ProjectApplication projectApplicationMock;", "modifier": "@Mock\n    private", "type": "ProjectApplication", "declarator": "projectApplicationMock", "var_name": "projectApplicationMock"}, {"original_string": "@Mock\n    private User applicantUserMock;", "modifier": "@Mock\n    private", "type": "User", "declarator": "applicantUserMock", "var_name": "applicantUserMock"}, {"original_string": "@Mock\n    private User managerUserMock;", "modifier": "@Mock\n    private", "type": "User", "declarator": "managerUserMock", "var_name": "managerUserMock"}, {"original_string": "@Mock\n    private UserData applicantDataMock;", "modifier": "@Mock\n    private", "type": "UserData", "declarator": "applicantDataMock", "var_name": "applicantDataMock"}, {"original_string": "@Mock\n    private UserData managerDataMock;", "modifier": "@Mock\n    private", "type": "UserData", "declarator": "managerDataMock", "var_name": "managerDataMock"}, {"original_string": "@Mock\n    private Project projectMock;", "modifier": "@Mock\n    private", "type": "Project", "declarator": "projectMock", "var_name": "projectMock"}, {"original_string": "private MailProjectApplicationEventHandler mailProjectApplicationEventHandler;", "modifier": "private", "type": "MailProjectApplicationEventHandler", "declarator": "mailProjectApplicationEventHandler", "var_name": "mailProjectApplicationEventHandler"}], "file": "backend/project-board/src/test/java/de/adesso/projectboard/adapter/mail/handler/MailProjectApplicationEventHandlerTest.java"}, "test_case": {"identifier": "onApplicationReceivedQueuesExpectedMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onApplicationReceivedQueuesExpectedMessage() {\n        // given\n        var projectId = \"PB-2\";\n        var expectedTemplatePath = \"/templates/mail/UserAppliedForProject.vm\";\n        var expectedSubject = \"This is a subject :O\";\n        var expectedText = \"Cool text :)\";\n        var subjectTextPair = new Pair<>(expectedSubject, expectedText);\n        var expectedMessage = new SimpleMessage(applicantUserMock, managerUserMock, expectedSubject, expectedText);\n        var jiraIssueLink = JIRA_ISSUE_URL + projectId;\n\n        var expectedContextMap = Map.of(\n                \"projectApplication\", projectApplicationMock,\n                \"applicantData\", applicantDataMock,\n                \"managerData\", managerDataMock,\n                \"issueLink\", jiraIssueLink\n        );\n\n        given(projectApplicationMock.getUser()).willReturn(applicantUserMock);\n        given(projectApplicationMock.getProject()).willReturn(projectMock);\n\n        given(projectMock.getId()).willReturn(projectId);\n\n        given(userServiceMock.getManagerOfUser(applicantUserMock)).willReturn(managerUserMock);\n        given(userServiceMock.getUserData(applicantUserMock)).willReturn(applicantDataMock);\n        given(userServiceMock.getUserData(managerUserMock)).willReturn(managerDataMock);\n\n        given(velocityMailTemplateServiceMock.getSubjectAndText(expectedTemplatePath, expectedContextMap))\n            .willReturn(subjectTextPair);\n\n        // when\n        mailProjectApplicationEventHandler.onApplicationReceived(projectApplicationMock);\n\n        // then\n        verify(mailSenderAdapterMock).queueMessage(expectedMessage);\n    }", "signature": "void onApplicationReceivedQueuesExpectedMessage()", "full_signature": "@Test public void onApplicationReceivedQueuesExpectedMessage()", "class_method_signature": "MailProjectApplicationEventHandlerTest.onApplicationReceivedQueuesExpectedMessage()", "testcase": true, "constructor": false, "invocations": ["of", "willReturn", "given", "getUser", "willReturn", "given", "getProject", "willReturn", "given", "getId", "willReturn", "given", "getManagerOfUser", "willReturn", "given", "getUserData", "willReturn", "given", "getUserData", "willReturn", "given", "getSubjectAndText", "onApplicationReceived", "queueMessage", "verify"]}, "focal_class": {"identifier": "MailProjectApplicationEventHandler", "superclass": "", "interfaces": "implements ProjectApplicationEventHandler", "fields": [{"original_string": "private final MailSenderAdapter mailSenderAdapter;", "modifier": "private final", "type": "MailSenderAdapter", "declarator": "mailSenderAdapter", "var_name": "mailSenderAdapter"}, {"original_string": "private final UserService userService;", "modifier": "private final", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "private final VelocityMailTemplateService velocityMailTemplateService;", "modifier": "private final", "type": "VelocityMailTemplateService", "declarator": "velocityMailTemplateService", "var_name": "velocityMailTemplateService"}, {"original_string": "private final String referralBaseUrl;", "modifier": "private final", "type": "String", "declarator": "referralBaseUrl", "var_name": "referralBaseUrl"}], "methods": [{"identifier": "MailProjectApplicationEventHandler", "parameters": "(MailSenderAdapter mailSenderAdapter,\n                                              UserService userService,\n                                              VelocityMailTemplateService velocityMailTemplateService,\n                                              MailConfigurationProperties mailConfigProperties)", "modifiers": "public", "return": "", "signature": " MailProjectApplicationEventHandler(MailSenderAdapter mailSenderAdapter,\n                                              UserService userService,\n                                              VelocityMailTemplateService velocityMailTemplateService,\n                                              MailConfigurationProperties mailConfigProperties)", "full_signature": "public  MailProjectApplicationEventHandler(MailSenderAdapter mailSenderAdapter,\n                                              UserService userService,\n                                              VelocityMailTemplateService velocityMailTemplateService,\n                                              MailConfigurationProperties mailConfigProperties)", "class_method_signature": "MailProjectApplicationEventHandler.MailProjectApplicationEventHandler(MailSenderAdapter mailSenderAdapter,\n                                              UserService userService,\n                                              VelocityMailTemplateService velocityMailTemplateService,\n                                              MailConfigurationProperties mailConfigProperties)", "testcase": false, "constructor": true}, {"identifier": "onApplicationReceived", "parameters": "(ProjectApplication application)", "modifiers": "@Override public", "return": "void", "signature": "void onApplicationReceived(ProjectApplication application)", "full_signature": "@Override public void onApplicationReceived(ProjectApplication application)", "class_method_signature": "MailProjectApplicationEventHandler.onApplicationReceived(ProjectApplication application)", "testcase": false, "constructor": false}], "file": "backend/project-board/src/main/java/de/adesso/projectboard/adapter/mail/handler/MailProjectApplicationEventHandler.java"}, "focal_method": {"identifier": "onApplicationReceived", "parameters": "(ProjectApplication application)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onApplicationReceived(ProjectApplication application) {\n        var applicant = application.getUser();\n        var manager = userService.getManagerOfUser(applicant);\n        var applicantData = userService.getUserData(applicant);\n        var managerData = userService.getUserData(manager);\n        var issueLink = referralBaseUrl + application.getProject().getId();\n\n        var contextMap = Map.of(\n            \"projectApplication\", application,\n            \"applicantData\", applicantData,\n                \"managerData\", managerData,\n                \"issueLink\", issueLink\n        );\n        var subjectTextPair = velocityMailTemplateService.getSubjectAndText(\"/templates/mail/UserAppliedForProject.vm\", contextMap);\n\n        var simpleMessage = new SimpleMessage(applicant, manager, subjectTextPair.getFirst(), subjectTextPair.getSecond());\n        mailSenderAdapter.queueMessage(simpleMessage);\n    }", "signature": "void onApplicationReceived(ProjectApplication application)", "full_signature": "@Override public void onApplicationReceived(ProjectApplication application)", "class_method_signature": "MailProjectApplicationEventHandler.onApplicationReceived(ProjectApplication application)", "testcase": false, "constructor": false, "invocations": ["getUser", "getManagerOfUser", "getUserData", "getUserData", "getId", "getProject", "of", "getSubjectAndText", "getFirst", "getSecond", "queueMessage"]}, "repository": {"repo_id": 144251992, "url": "https://github.com/adessoAG/project-board", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 2608, "license": "licensed"}}