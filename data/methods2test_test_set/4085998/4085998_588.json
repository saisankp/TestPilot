{"test_class": {"identifier": "ExtSourceUnityTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n\tprivate static ExtSourceUnity extSourceUnity;", "modifier": "@Spy\n\tprivate static", "type": "ExtSourceUnity", "declarator": "extSourceUnity", "var_name": "extSourceUnity"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/ExtSourceUnityTest.java"}, "test_case": {"identifier": "getUsersSubjectsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getUsersSubjectsTest() throws Exception {\n\t\tSystem.out.println(\"getUsersSubjectsTest\");\n\n\t\t// mock connection\n\t\tHttpURLConnection http = mock(HttpURLConnection.class);\n\t\tdoReturn(http).when(extSourceUnity).createConnection(\"uriAll\");\n\t\tString input = \"{\\\"members\\\":[1]}\";\n\t\tInputStream is = new ByteArrayInputStream(input.getBytes());\n\t\tdoReturn(is).when(http).getInputStream();\n\n\t\tHttpURLConnection http2 = mock(HttpURLConnection.class);\n\t\tdoReturn(http2).when(extSourceUnity).createConnection(\"uriEntity/1/\");\n\t\tString input2 = \"{\\\"id\\\":1,\\\"name\\\":miles,\\\"state\\\":valid,\\\"identities\\\":[{\\\"typeId\\\":identifier,\\\"translationProfile\\\":profile,\\\"value\\\":xmorales}]}\";\n\t\tInputStream is2 = new ByteArrayInputStream(input2.getBytes());\n\t\tdoReturn(is2).when(http2).getInputStream();\n\n\t\tHttpURLConnection http3 = mock(HttpURLConnection.class);\n\t\tdoReturn(http3).when(extSourceUnity).createConnection(\"uriEntity/1/attributes\");\n\t\tString input3 = \"[{\\\"name\\\":name,\\\"values\\\":[miles morales]}]\";\n\t\tInputStream is3 = new ByteArrayInputStream(input3.getBytes());\n\t\tdoReturn(is3).when(http3).getInputStream();\n\n\t\t// define needed attributes\n\t\tMap<String, String> mapOfAttributes = new HashMap<>();\n\t\tmapOfAttributes.put(\"usersQuery\", \"login=xmorales\");\n\t\tmapOfAttributes.put(\"uriAll\", \"uriAll\");\n\t\tmapOfAttributes.put(\"uriEntity\", \"uriEntity\");\n\t\tmapOfAttributes.put(\"unityMapping\", \"login={login},\\nfirstName={firstName}\");\n\t\tdoReturn(mapOfAttributes).when(extSourceUnity).getAttributes();\n\n\t\t// create expected subject to get\n\t\tList<Map<String, String>> expectedSubjects = new ArrayList<>();\n\t\tMap<String, String> subject = new HashMap<>();\n\t\tsubject.put(\"login\", \"xmorales\");\n\t\texpectedSubjects.add(subject);\n\n\t\t// test the method\n\t\tList<Map<String, String>> actualSubjects = extSourceUnity.getUsersSubjects();\n\t\tassertEquals(\"subjects should be same\", expectedSubjects, actualSubjects);\n\t}", "signature": "void getUsersSubjectsTest()", "full_signature": "@Test public void getUsersSubjectsTest()", "class_method_signature": "ExtSourceUnityTest.getUsersSubjectsTest()", "testcase": true, "constructor": false, "invocations": ["println", "mock", "createConnection", "when", "doReturn", "getBytes", "getInputStream", "when", "doReturn", "mock", "createConnection", "when", "doReturn", "getBytes", "getInputStream", "when", "doReturn", "mock", "createConnection", "when", "doReturn", "getBytes", "getInputStream", "when", "doReturn", "put", "put", "put", "put", "getAttributes", "when", "doReturn", "put", "add", "getUsersSubjects", "assertEquals"]}, "focal_class": {"identifier": "ExtSourceUnity", "superclass": "extends ExtSource", "interfaces": "implements ExtSourceApi", "fields": [{"original_string": "private final static Logger log = LoggerFactory.getLogger(ExtSourceUnity.class);", "modifier": "private final static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ExtSourceUnity.class)", "var_name": "log"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private String uriAll;", "modifier": "private", "type": "String", "declarator": "uriAll", "var_name": "uriAll"}, {"original_string": "private String uriEntity;", "modifier": "private", "type": "String", "declarator": "uriEntity", "var_name": "uriEntity"}, {"original_string": "private static PerunBlImpl perunBl;", "modifier": "private static", "type": "PerunBlImpl", "declarator": "perunBl", "var_name": "perunBl"}], "methods": [{"identifier": "setPerunBlImpl", "parameters": "(PerunBlImpl perun)", "modifiers": "public static", "return": "PerunBlImpl", "signature": "PerunBlImpl setPerunBlImpl(PerunBlImpl perun)", "full_signature": "public static PerunBlImpl setPerunBlImpl(PerunBlImpl perun)", "class_method_signature": "ExtSourceUnity.setPerunBlImpl(PerunBlImpl perun)", "testcase": false, "constructor": false}, {"identifier": "findSubjectsLogins", "parameters": "(String searchString)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> findSubjectsLogins(String searchString)", "full_signature": "@Override public List<Map<String, String>> findSubjectsLogins(String searchString)", "class_method_signature": "ExtSourceUnity.findSubjectsLogins(String searchString)", "testcase": false, "constructor": false}, {"identifier": "findSubjectsLogins", "parameters": "(String searchString, int maxResults)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> findSubjectsLogins(String searchString, int maxResults)", "full_signature": "@Override public List<Map<String, String>> findSubjectsLogins(String searchString, int maxResults)", "class_method_signature": "ExtSourceUnity.findSubjectsLogins(String searchString, int maxResults)", "testcase": false, "constructor": false}, {"identifier": "findSubjects", "parameters": "(String searchString)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> findSubjects(String searchString)", "full_signature": "@Override public List<Map<String, String>> findSubjects(String searchString)", "class_method_signature": "ExtSourceUnity.findSubjects(String searchString)", "testcase": false, "constructor": false}, {"identifier": "findSubjects", "parameters": "(String searchString, int maxResults)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> findSubjects(String searchString, int maxResults)", "full_signature": "@Override public List<Map<String, String>> findSubjects(String searchString, int maxResults)", "class_method_signature": "ExtSourceUnity.findSubjects(String searchString, int maxResults)", "testcase": false, "constructor": false}, {"identifier": "getSubjectByLogin", "parameters": "(String login)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getSubjectByLogin(String login)", "full_signature": "@Override public Map<String, String> getSubjectByLogin(String login)", "class_method_signature": "ExtSourceUnity.getSubjectByLogin(String login)", "testcase": false, "constructor": false}, {"identifier": "getGroupSubjects", "parameters": "(Map<String, String> attributes)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getGroupSubjects(Map<String, String> attributes)", "full_signature": "@Override public List<Map<String, String>> getGroupSubjects(Map<String, String> attributes)", "class_method_signature": "ExtSourceUnity.getGroupSubjects(Map<String, String> attributes)", "testcase": false, "constructor": false}, {"identifier": "getUsersSubjects", "parameters": "()", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getUsersSubjects()", "full_signature": "@Override public List<Map<String, String>> getUsersSubjects()", "class_method_signature": "ExtSourceUnity.getUsersSubjects()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ExtSourceUnity.close()", "testcase": false, "constructor": false}, {"identifier": "getSubjectGroups", "parameters": "(Map<String, String> attributes)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getSubjectGroups(Map<String, String> attributes)", "full_signature": "@Override public List<Map<String, String>> getSubjectGroups(Map<String, String> attributes)", "class_method_signature": "ExtSourceUnity.getSubjectGroups(Map<String, String> attributes)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "()", "modifiers": "protected", "return": "Map<String, String>", "signature": "Map<String, String> getAttributes()", "full_signature": "protected Map<String, String> getAttributes()", "class_method_signature": "ExtSourceUnity.getAttributes()", "testcase": false, "constructor": false}, {"identifier": "prepareEnvironment", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void prepareEnvironment()", "full_signature": "private void prepareEnvironment()", "class_method_signature": "ExtSourceUnity.prepareEnvironment()", "testcase": false, "constructor": false}, {"identifier": "connectAndGetEntitiesId", "parameters": "()", "modifiers": "private", "return": "List<Integer>", "signature": "List<Integer> connectAndGetEntitiesId()", "full_signature": "private List<Integer> connectAndGetEntitiesId()", "class_method_signature": "ExtSourceUnity.connectAndGetEntitiesId()", "testcase": false, "constructor": false}, {"identifier": "connectAndGetValidEntitiesById", "parameters": "(List<Integer> ids)", "modifiers": "private", "return": "List<UnityEntity>", "signature": "List<UnityEntity> connectAndGetValidEntitiesById(List<Integer> ids)", "full_signature": "private List<UnityEntity> connectAndGetValidEntitiesById(List<Integer> ids)", "class_method_signature": "ExtSourceUnity.connectAndGetValidEntitiesById(List<Integer> ids)", "testcase": false, "constructor": false}, {"identifier": "connectAndGetValidEntityByGroup", "parameters": "(int entityId, String groupName)", "modifiers": "private", "return": "UnityEntity", "signature": "UnityEntity connectAndGetValidEntityByGroup(int entityId, String groupName)", "full_signature": "private UnityEntity connectAndGetValidEntityByGroup(int entityId, String groupName)", "class_method_signature": "ExtSourceUnity.connectAndGetValidEntityByGroup(int entityId, String groupName)", "testcase": false, "constructor": false}, {"identifier": "createConnection", "parameters": "(String uri)", "modifiers": "protected", "return": "HttpURLConnection", "signature": "HttpURLConnection createConnection(String uri)", "full_signature": "protected HttpURLConnection createConnection(String uri)", "class_method_signature": "ExtSourceUnity.createConnection(String uri)", "testcase": false, "constructor": false}, {"identifier": "getBasicAuthenticationEncoding", "parameters": "(String userCredentials)", "modifiers": "private", "return": "String", "signature": "String getBasicAuthenticationEncoding(String userCredentials)", "full_signature": "private String getBasicAuthenticationEncoding(String userCredentials)", "class_method_signature": "ExtSourceUnity.getBasicAuthenticationEncoding(String userCredentials)", "testcase": false, "constructor": false}, {"identifier": "getEntityFromRemote", "parameters": "(int id)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject getEntityFromRemote(int id)", "full_signature": "private JSONObject getEntityFromRemote(int id)", "class_method_signature": "ExtSourceUnity.getEntityFromRemote(int id)", "testcase": false, "constructor": false}, {"identifier": "parseEntitiesIdFromRemote", "parameters": "(String line)", "modifiers": "private", "return": "List<Integer>", "signature": "List<Integer> parseEntitiesIdFromRemote(String line)", "full_signature": "private List<Integer> parseEntitiesIdFromRemote(String line)", "class_method_signature": "ExtSourceUnity.parseEntitiesIdFromRemote(String line)", "testcase": false, "constructor": false}, {"identifier": "parseValidUnityEntity", "parameters": "(JSONObject obj)", "modifiers": "private", "return": "UnityEntity", "signature": "UnityEntity parseValidUnityEntity(JSONObject obj)", "full_signature": "private UnityEntity parseValidUnityEntity(JSONObject obj)", "class_method_signature": "ExtSourceUnity.parseValidUnityEntity(JSONObject obj)", "testcase": false, "constructor": false}, {"identifier": "getEntityAttributesFromRemote", "parameters": "(String id)", "modifiers": "private", "return": "JSONArray", "signature": "JSONArray getEntityAttributesFromRemote(String id)", "full_signature": "private JSONArray getEntityAttributesFromRemote(String id)", "class_method_signature": "ExtSourceUnity.getEntityAttributesFromRemote(String id)", "testcase": false, "constructor": false}, {"identifier": "getJSONArrayFromRemote", "parameters": "(HttpURLConnection connection)", "modifiers": "private", "return": "JSONArray", "signature": "JSONArray getJSONArrayFromRemote(HttpURLConnection connection)", "full_signature": "private JSONArray getJSONArrayFromRemote(HttpURLConnection connection)", "class_method_signature": "ExtSourceUnity.getJSONArrayFromRemote(HttpURLConnection connection)", "testcase": false, "constructor": false}, {"identifier": "compareGroupName", "parameters": "(JSONArray groups, String groupName)", "modifiers": "private", "return": "boolean", "signature": "boolean compareGroupName(JSONArray groups, String groupName)", "full_signature": "private boolean compareGroupName(JSONArray groups, String groupName)", "class_method_signature": "ExtSourceUnity.compareGroupName(JSONArray groups, String groupName)", "testcase": false, "constructor": false}, {"identifier": "jsonParsing", "parameters": "(String query, int maxResults)", "modifiers": "private", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> jsonParsing(String query, int maxResults)", "full_signature": "private List<Map<String, String>> jsonParsing(String query, int maxResults)", "class_method_signature": "ExtSourceUnity.jsonParsing(String query, int maxResults)", "testcase": false, "constructor": false}, {"identifier": "jsonParsingGroups", "parameters": "(String queryForGroup)", "modifiers": "private", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> jsonParsingGroups(String queryForGroup)", "full_signature": "private List<Map<String, String>> jsonParsingGroups(String queryForGroup)", "class_method_signature": "ExtSourceUnity.jsonParsingGroups(String queryForGroup)", "testcase": false, "constructor": false}, {"identifier": "processUnityMapping", "parameters": "(UnityEntity unityEntity)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> processUnityMapping(UnityEntity unityEntity)", "full_signature": "private Map<String, String> processUnityMapping(UnityEntity unityEntity)", "class_method_signature": "ExtSourceUnity.processUnityMapping(UnityEntity unityEntity)", "testcase": false, "constructor": false}, {"identifier": "checkUri", "parameters": "(String uri)", "modifiers": "private", "return": "String", "signature": "String checkUri(String uri)", "full_signature": "private String checkUri(String uri)", "class_method_signature": "ExtSourceUnity.checkUri(String uri)", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/ExtSourceUnity.java"}, "focal_method": {"identifier": "getUsersSubjects", "parameters": "()", "modifiers": "@Override public", "return": "List<Map<String, String>>", "body": "@Override\n\tpublic List<Map<String, String>> getUsersSubjects() {\n\t\tString query = getAttributes().get(UsersManager.USERS_QUERY);\n\n\t\tprepareEnvironment();\n\n\t\treturn jsonParsing(query, 0);\n\t}", "signature": "List<Map<String, String>> getUsersSubjects()", "full_signature": "@Override public List<Map<String, String>> getUsersSubjects()", "class_method_signature": "ExtSourceUnity.getUsersSubjects()", "testcase": false, "constructor": false, "invocations": ["get", "getAttributes", "prepareEnvironment", "jsonParsing"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}