{"test_class": {"identifier": "DetectorClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String BASE_URI = \"http://example.com\";", "modifier": "private static final", "type": "String", "declarator": "BASE_URI = \"http://example.com\"", "var_name": "BASE_URI"}, {"original_string": "private static final UUID DETECTOR_UUID = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad21\");", "modifier": "private static final", "type": "UUID", "declarator": "DETECTOR_UUID = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad21\")", "var_name": "DETECTOR_UUID"}, {"original_string": "private static final UUID DETECTOR_UUID_CANT_GET = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad22\");", "modifier": "private static final", "type": "UUID", "declarator": "DETECTOR_UUID_CANT_GET = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad22\")", "var_name": "DETECTOR_UUID_CANT_GET"}, {"original_string": "private static final UUID DETECTOR_UUID_CANT_READ = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad23\");", "modifier": "private static final", "type": "UUID", "declarator": "DETECTOR_UUID_CANT_READ = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad23\")", "var_name": "DETECTOR_UUID_CANT_READ"}, {"original_string": "private static final UUID DETECTOR_UUID_NO_DOCS = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad24\");", "modifier": "private static final", "type": "UUID", "declarator": "DETECTOR_UUID_NO_DOCS = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad24\")", "var_name": "DETECTOR_UUID_NO_DOCS"}, {"original_string": "private static final UUID DETECTOR_UUID_CANT_POST = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad25\");", "modifier": "private static final", "type": "UUID", "declarator": "DETECTOR_UUID_CANT_POST = UUID.fromString(\"2c656ea0-dbf7-4081-aa01-55e86439ad25\")", "var_name": "DETECTOR_UUID_CANT_POST"}, {"original_string": "private static final int TIME_PERIOD_INVALID = 0;", "modifier": "private static final", "type": "int", "declarator": "TIME_PERIOD_INVALID = 0", "var_name": "TIME_PERIOD_INVALID"}, {"original_string": "private static final int TIME_PERIOD_VALID = 1000;", "modifier": "private static final", "type": "int", "declarator": "TIME_PERIOD_VALID = 1000", "var_name": "TIME_PERIOD_VALID"}, {"original_string": "private static final int TIME_PERIOD_CANT_GET = 2000;", "modifier": "private static final", "type": "int", "declarator": "TIME_PERIOD_CANT_GET = 2000", "var_name": "TIME_PERIOD_CANT_GET"}, {"original_string": "private static final int TIME_PERIOD_CANT_READ = 3000;", "modifier": "private static final", "type": "int", "declarator": "TIME_PERIOD_CANT_READ = 3000", "var_name": "TIME_PERIOD_CANT_READ"}, {"original_string": "private static final int TIME_PERIOD_NO_MAPPINGS = 4000;", "modifier": "private static final", "type": "int", "declarator": "TIME_PERIOD_NO_MAPPINGS = 4000", "var_name": "TIME_PERIOD_NO_MAPPINGS"}, {"original_string": "private static final String FIND_DOC_URI = uri(FIND_DOCUMENT_PATH, DETECTOR_UUID);", "modifier": "private static final", "type": "String", "declarator": "FIND_DOC_URI = uri(FIND_DOCUMENT_PATH, DETECTOR_UUID)", "var_name": "FIND_DOC_URI"}, {"original_string": "private static final String FIND_DOC_URI_CANT_GET = uri(FIND_DOCUMENT_PATH, DETECTOR_UUID_CANT_GET);", "modifier": "private static final", "type": "String", "declarator": "FIND_DOC_URI_CANT_GET = uri(FIND_DOCUMENT_PATH, DETECTOR_UUID_CANT_GET)", "var_name": "FIND_DOC_URI_CANT_GET"}, {"original_string": "private static final String FIND_DOC_URI_CANT_READ = uri(FIND_DOCUMENT_PATH, DETECTOR_UUID_CANT_READ);", "modifier": "private static final", "type": "String", "declarator": "FIND_DOC_URI_CANT_READ = uri(FIND_DOCUMENT_PATH, DETECTOR_UUID_CANT_READ)", "var_name": "FIND_DOC_URI_CANT_READ"}, {"original_string": "private static final String FIND_DOC_URI_NO_DOC = uri(FIND_DOCUMENT_PATH, DETECTOR_UUID_NO_DOCS);", "modifier": "private static final", "type": "String", "declarator": "FIND_DOC_URI_NO_DOC = uri(FIND_DOCUMENT_PATH, DETECTOR_UUID_NO_DOCS)", "var_name": "FIND_DOC_URI_NO_DOC"}, {"original_string": "private static final String FIND_UPDATED_DOCS_URI = uri(FIND_UPDATED_DOCUMENTS_PATH, TIME_PERIOD_VALID);", "modifier": "private static final", "type": "String", "declarator": "FIND_UPDATED_DOCS_URI = uri(FIND_UPDATED_DOCUMENTS_PATH, TIME_PERIOD_VALID)", "var_name": "FIND_UPDATED_DOCS_URI"}, {"original_string": "private static final String FIND_UPDATED_DOCS_URI_CANT_GET = uri(FIND_UPDATED_DOCUMENTS_PATH, TIME_PERIOD_CANT_GET);", "modifier": "private static final", "type": "String", "declarator": "FIND_UPDATED_DOCS_URI_CANT_GET = uri(FIND_UPDATED_DOCUMENTS_PATH, TIME_PERIOD_CANT_GET)", "var_name": "FIND_UPDATED_DOCS_URI_CANT_GET"}, {"original_string": "private static final String FIND_UPDATED_DOCS_URI_CANT_READ = uri(FIND_UPDATED_DOCUMENTS_PATH, TIME_PERIOD_CANT_READ);", "modifier": "private static final", "type": "String", "declarator": "FIND_UPDATED_DOCS_URI_CANT_READ = uri(FIND_UPDATED_DOCUMENTS_PATH, TIME_PERIOD_CANT_READ)", "var_name": "FIND_UPDATED_DOCS_URI_CANT_READ"}, {"original_string": "private static final String FIND_MAPPINGS_URI = BASE_URI + FIND_MAPPINGS_BY_TAGS_PATH;", "modifier": "private static final", "type": "String", "declarator": "FIND_MAPPINGS_URI = BASE_URI + FIND_MAPPINGS_BY_TAGS_PATH", "var_name": "FIND_MAPPINGS_URI"}, {"original_string": "private static final String UPDATE_DETECTOR_LAST_USED_URI = BASE_URI + UPDATE_DETECTOR_LAST_USED_PATH;", "modifier": "private static final", "type": "String", "declarator": "UPDATE_DETECTOR_LAST_USED_URI = BASE_URI + UPDATE_DETECTOR_LAST_USED_PATH", "var_name": "UPDATE_DETECTOR_LAST_USED_URI"}, {"original_string": "private static final String FIND_UPDATED_MAPPINGS_URI = uri(FIND_UPDATED_MAPPINGS_PATH, TIME_PERIOD_VALID);", "modifier": "private static final", "type": "String", "declarator": "FIND_UPDATED_MAPPINGS_URI = uri(FIND_UPDATED_MAPPINGS_PATH, TIME_PERIOD_VALID)", "var_name": "FIND_UPDATED_MAPPINGS_URI"}, {"original_string": "private static final String FIND_UPDATED_MAPPINGS_URI_CANT_GET = uri(FIND_UPDATED_MAPPINGS_PATH, TIME_PERIOD_CANT_GET);", "modifier": "private static final", "type": "String", "declarator": "FIND_UPDATED_MAPPINGS_URI_CANT_GET = uri(FIND_UPDATED_MAPPINGS_PATH, TIME_PERIOD_CANT_GET)", "var_name": "FIND_UPDATED_MAPPINGS_URI_CANT_GET"}, {"original_string": "private static final String FIND_UPDATED_MAPPINGS_URI_CANT_READ = uri(FIND_UPDATED_MAPPINGS_PATH, TIME_PERIOD_CANT_READ);", "modifier": "private static final", "type": "String", "declarator": "FIND_UPDATED_MAPPINGS_URI_CANT_READ = uri(FIND_UPDATED_MAPPINGS_PATH, TIME_PERIOD_CANT_READ)", "var_name": "FIND_UPDATED_MAPPINGS_URI_CANT_READ"}, {"original_string": "private static final String FIND_UPDATED_MAPPINGS_URI_NO_MAPPINGS = uri(FIND_UPDATED_MAPPINGS_PATH, TIME_PERIOD_NO_MAPPINGS);", "modifier": "private static final", "type": "String", "declarator": "FIND_UPDATED_MAPPINGS_URI_NO_MAPPINGS = uri(FIND_UPDATED_MAPPINGS_PATH, TIME_PERIOD_NO_MAPPINGS)", "var_name": "FIND_UPDATED_MAPPINGS_URI_NO_MAPPINGS"}, {"original_string": "private static final String FIND_MAPPINGS_URI_BY_UUID = uri(FIND_MAPPINGS_BY_UUID_PATH, DETECTOR_UUID);", "modifier": "private static final", "type": "String", "declarator": "FIND_MAPPINGS_URI_BY_UUID = uri(FIND_MAPPINGS_BY_UUID_PATH, DETECTOR_UUID)", "var_name": "FIND_MAPPINGS_URI_BY_UUID"}, {"original_string": "private static final String FIND_MAPPINGS_URI_BY_UUID_URI_CANT_GET = uri(FIND_MAPPINGS_BY_UUID_PATH, DETECTOR_UUID_CANT_GET);", "modifier": "private static final", "type": "String", "declarator": "FIND_MAPPINGS_URI_BY_UUID_URI_CANT_GET = uri(FIND_MAPPINGS_BY_UUID_PATH, DETECTOR_UUID_CANT_GET)", "var_name": "FIND_MAPPINGS_URI_BY_UUID_URI_CANT_GET"}, {"original_string": "private static final String FIND_MAPPINGS_URI_BY_UUID_CANT_READ = uri(FIND_MAPPINGS_BY_UUID_PATH, DETECTOR_UUID_CANT_READ);", "modifier": "private static final", "type": "String", "declarator": "FIND_MAPPINGS_URI_BY_UUID_CANT_READ = uri(FIND_MAPPINGS_BY_UUID_PATH, DETECTOR_UUID_CANT_READ)", "var_name": "FIND_MAPPINGS_URI_BY_UUID_CANT_READ"}, {"original_string": "private static final String FIND_MAPPINGS_URI_BY_UUID_NO_MAPPINGS = uri(FIND_MAPPINGS_BY_UUID_PATH, DETECTOR_UUID_NO_DOCS);", "modifier": "private static final", "type": "String", "declarator": "FIND_MAPPINGS_URI_BY_UUID_NO_MAPPINGS = uri(FIND_MAPPINGS_BY_UUID_PATH, DETECTOR_UUID_NO_DOCS)", "var_name": "FIND_MAPPINGS_URI_BY_UUID_NO_MAPPINGS"}, {"original_string": "private DetectorClient clientUnderTest;", "modifier": "private", "type": "DetectorClient", "declarator": "clientUnderTest", "var_name": "clientUnderTest"}, {"original_string": "@Mock\n    private HttpClientWrapper httpClient;", "modifier": "@Mock\n    private", "type": "HttpClientWrapper", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "@Mock\n    private ObjectMapper objectMapper;", "modifier": "@Mock\n    private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "private List<Map<String, String>> tags = Collections.singletonList(Collections.singletonMap(\"tags\", \"valid\"));", "modifier": "private", "type": "List<Map<String, String>>", "declarator": "tags = Collections.singletonList(Collections.singletonMap(\"tags\", \"valid\"))", "var_name": "tags"}, {"original_string": "private List<Map<String, String>> tags_cantPost = Collections.singletonList(Collections.singletonMap(\"tags\", \"cantPost\"));", "modifier": "private", "type": "List<Map<String, String>>", "declarator": "tags_cantPost = Collections.singletonList(Collections.singletonMap(\"tags\", \"cantPost\"))", "var_name": "tags_cantPost"}, {"original_string": "private List<Map<String, String>> tags_cantRead = Collections.singletonList(Collections.singletonMap(\"tags\", \"cantRead\"));", "modifier": "private", "type": "List<Map<String, String>>", "declarator": "tags_cantRead = Collections.singletonList(Collections.singletonMap(\"tags\", \"cantRead\"))", "var_name": "tags_cantRead"}, {"original_string": "@Mock\n    private Content docContent;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "docContent", "var_name": "docContent"}, {"original_string": "@Mock\n    private Content docContent_cantRead;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "docContent_cantRead", "var_name": "docContent_cantRead"}, {"original_string": "@Mock\n    private Content docContent_noDoc;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "docContent_noDoc", "var_name": "docContent_noDoc"}, {"original_string": "@Mock\n    private Content updatedDocsContent;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "updatedDocsContent", "var_name": "updatedDocsContent"}, {"original_string": "@Mock\n    private Content updatedDocsContent_cantRead;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "updatedDocsContent_cantRead", "var_name": "updatedDocsContent_cantRead"}, {"original_string": "@Mock\n    private Content mappingContent;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "mappingContent", "var_name": "mappingContent"}, {"original_string": "@Mock\n    private Content mappingContent_cantRead;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "mappingContent_cantRead", "var_name": "mappingContent_cantRead"}, {"original_string": "@Mock\n    private Content mappingContent_noMappings;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "mappingContent_noMappings", "var_name": "mappingContent_noMappings"}, {"original_string": "@Mock\n    private Content updatedMappingContent;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "updatedMappingContent", "var_name": "updatedMappingContent"}, {"original_string": "@Mock\n    private Content updatedMappingContent_cantRead;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "updatedMappingContent_cantRead", "var_name": "updatedMappingContent_cantRead"}, {"original_string": "@Mock\n    private Content updatedMappingContent_noMappings;", "modifier": "@Mock\n    private", "type": "Content", "declarator": "updatedMappingContent_noMappings", "var_name": "updatedMappingContent_noMappings"}, {"original_string": "private byte[] docBytes = \"docBytes\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "docBytes = \"docBytes\".getBytes()", "var_name": "docBytes"}, {"original_string": "private byte[] docBytes_cantRead = \"docBytes_cantRead\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "docBytes_cantRead = \"docBytes_cantRead\".getBytes()", "var_name": "docBytes_cantRead"}, {"original_string": "private byte[] docBytes_noDocs = \"docBytes_noDocs\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "docBytes_noDocs = \"docBytes_noDocs\".getBytes()", "var_name": "docBytes_noDocs"}, {"original_string": "private byte[] updatedDocsBytes = \"updatedDocsBytes\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "updatedDocsBytes = \"updatedDocsBytes\".getBytes()", "var_name": "updatedDocsBytes"}, {"original_string": "private byte[] updatedDocsBytes_cantRead = \"updatedDocsBytes_cantRead\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "updatedDocsBytes_cantRead = \"updatedDocsBytes_cantRead\".getBytes()", "var_name": "updatedDocsBytes_cantRead"}, {"original_string": "private byte[] mappingBytes = \"mappingBytes\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "mappingBytes = \"mappingBytes\".getBytes()", "var_name": "mappingBytes"}, {"original_string": "private byte[] mappingBytes_cantRead = \"mappingBytes_cantRead\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "mappingBytes_cantRead = \"mappingBytes_cantRead\".getBytes()", "var_name": "mappingBytes_cantRead"}, {"original_string": "private byte[] mappingBytes_noMappings = \"mappingBytes_noMappings\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "mappingBytes_noMappings = \"mappingBytes_noMappings\".getBytes()", "var_name": "mappingBytes_noMappings"}, {"original_string": "private byte[] updatedMappingBytes = \"updatedMappingBytes\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "updatedMappingBytes = \"updatedMappingBytes\".getBytes()", "var_name": "updatedMappingBytes"}, {"original_string": "private byte[] updatedMappingBytes_cantRead = \"updatedMappingBytes_cantRead\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "updatedMappingBytes_cantRead = \"updatedMappingBytes_cantRead\".getBytes()", "var_name": "updatedMappingBytes_cantRead"}, {"original_string": "private byte[] updatedMappingBytes_noMappings = \"updatedMappingBytes_noMappings\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "updatedMappingBytes_noMappings = \"updatedMappingBytes_noMappings\".getBytes()", "var_name": "updatedMappingBytes_noMappings"}, {"original_string": "private String tagsBody = \"tagsBody\";", "modifier": "private", "type": "String", "declarator": "tagsBody = \"tagsBody\"", "var_name": "tagsBody"}, {"original_string": "private String tagsBody_cantPost = \"tagsBody_cantPost\";", "modifier": "private", "type": "String", "declarator": "tagsBody_cantPost = \"tagsBody_cantPost\"", "var_name": "tagsBody_cantPost"}, {"original_string": "private String tagsBody_cantRead = \"tagsBody_cantRead\";", "modifier": "private", "type": "String", "declarator": "tagsBody_cantRead = \"tagsBody_cantRead\"", "var_name": "tagsBody_cantRead"}, {"original_string": "private String uuidMappingsBody = \"uuidMappingsBody\";", "modifier": "private", "type": "String", "declarator": "uuidMappingsBody = \"uuidMappingsBody\"", "var_name": "uuidMappingsBody"}, {"original_string": "private String uuidMappingsBody_cantPost = \"uuidMappingsBody_cantPost\";", "modifier": "private", "type": "String", "declarator": "uuidMappingsBody_cantPost = \"uuidMappingsBody_cantPost\"", "var_name": "uuidMappingsBody_cantPost"}, {"original_string": "private String uuidMappingsBody_cantRead = \"uuidMappingsBody_cantRead\";", "modifier": "private", "type": "String", "declarator": "uuidMappingsBody_cantRead = \"uuidMappingsBody_cantRead\"", "var_name": "uuidMappingsBody_cantRead"}, {"original_string": "private String uuidMappingsBody_noMappings = \"uuidMappingsBody_noMappings\";", "modifier": "private", "type": "String", "declarator": "uuidMappingsBody_noMappings = \"uuidMappingsBody_noMappings\"", "var_name": "uuidMappingsBody_noMappings"}, {"original_string": "private DetectorDocument[] docs = {};", "modifier": "private", "type": "DetectorDocument[]", "declarator": "docs = {}", "var_name": "docs"}, {"original_string": "private List<DetectorMapping> mappings = new ArrayList<>();", "modifier": "private", "type": "List<DetectorMapping>", "declarator": "mappings = new ArrayList<>()", "var_name": "mappings"}, {"original_string": "@Mock\n    private DetectorDocument doc;", "modifier": "@Mock\n    private", "type": "DetectorDocument", "declarator": "doc", "var_name": "doc"}, {"original_string": "@Mock\n    private DetectorMatchResponse detectorMatchResponse;", "modifier": "@Mock\n    private", "type": "DetectorMatchResponse", "declarator": "detectorMatchResponse", "var_name": "detectorMatchResponse"}], "file": "anomdetect/src/test/java/com/expedia/adaptivealerting/anomdetect/source/DetectorClientTest.java"}, "test_case": {"identifier": "testFindDetectorDocument_noDocs", "parameters": "()", "modifiers": "@Test(expected = DetectorException.class) public", "return": "void", "body": "@Test(expected = DetectorException.class)\n    public void testFindDetectorDocument_noDocs() {\n        clientUnderTest.findDetectorDocument(DETECTOR_UUID_NO_DOCS);\n    }", "signature": "void testFindDetectorDocument_noDocs()", "full_signature": "@Test(expected = DetectorException.class) public void testFindDetectorDocument_noDocs()", "class_method_signature": "DetectorClientTest.testFindDetectorDocument_noDocs()", "testcase": true, "constructor": false, "invocations": ["findDetectorDocument"]}, "focal_class": {"identifier": "DetectorClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String FIND_DOCUMENT_PATH = \"/api/v3/detectors/findByUuid?uuid=%s\";", "modifier": "static final", "type": "String", "declarator": "FIND_DOCUMENT_PATH = \"/api/v3/detectors/findByUuid?uuid=%s\"", "var_name": "FIND_DOCUMENT_PATH"}, {"original_string": "static final String FIND_UPDATED_DOCUMENTS_PATH = \"/api/v3/detectors/getLastUpdatedDetectors?interval=%d\";", "modifier": "static final", "type": "String", "declarator": "FIND_UPDATED_DOCUMENTS_PATH = \"/api/v3/detectors/getLastUpdatedDetectors?interval=%d\"", "var_name": "FIND_UPDATED_DOCUMENTS_PATH"}, {"original_string": "static final String UPDATE_DETECTOR_LAST_USED_PATH = \"/api/v3/detectors/updateDetectorLastUsed\";", "modifier": "static final", "type": "String", "declarator": "UPDATE_DETECTOR_LAST_USED_PATH = \"/api/v3/detectors/updateDetectorLastUsed\"", "var_name": "UPDATE_DETECTOR_LAST_USED_PATH"}, {"original_string": "static final String FIND_MAPPINGS_BY_TAGS_PATH = \"/api/detectorMappings/findMatchingByTags\";", "modifier": "static final", "type": "String", "declarator": "FIND_MAPPINGS_BY_TAGS_PATH = \"/api/detectorMappings/findMatchingByTags\"", "var_name": "FIND_MAPPINGS_BY_TAGS_PATH"}, {"original_string": "static final String FIND_UPDATED_MAPPINGS_PATH = \"/api/detectorMappings/lastUpdated?timeInSecs=%d\";", "modifier": "static final", "type": "String", "declarator": "FIND_UPDATED_MAPPINGS_PATH = \"/api/detectorMappings/lastUpdated?timeInSecs=%d\"", "var_name": "FIND_UPDATED_MAPPINGS_PATH"}, {"original_string": "static final String FIND_MAPPINGS_BY_UUID_PATH = \"/api/detectorMappings/search\";", "modifier": "static final", "type": "String", "declarator": "FIND_MAPPINGS_BY_UUID_PATH = \"/api/detectorMappings/search\"", "var_name": "FIND_MAPPINGS_BY_UUID_PATH"}, {"original_string": "@NonNull\n    private final HttpClientWrapper httpClient;", "modifier": "@NonNull\n    private final", "type": "HttpClientWrapper", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "@NonNull\n    private final String baseUri;", "modifier": "@NonNull\n    private final", "type": "String", "declarator": "baseUri", "var_name": "baseUri"}, {"original_string": "@NonNull\n    private final ObjectMapper objectMapper;", "modifier": "@NonNull\n    private final", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}], "methods": [{"identifier": "findDetectorDocument", "parameters": "(UUID uuid)", "modifiers": "public", "return": "DetectorDocument", "signature": "DetectorDocument findDetectorDocument(UUID uuid)", "full_signature": "public DetectorDocument findDetectorDocument(UUID uuid)", "class_method_signature": "DetectorClient.findDetectorDocument(UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "findUpdatedDetectorDocuments", "parameters": "(long timeInSecs)", "modifiers": "public", "return": "List<DetectorDocument>", "signature": "List<DetectorDocument> findUpdatedDetectorDocuments(long timeInSecs)", "full_signature": "public List<DetectorDocument> findUpdatedDetectorDocuments(long timeInSecs)", "class_method_signature": "DetectorClient.findUpdatedDetectorDocuments(long timeInSecs)", "testcase": false, "constructor": false}, {"identifier": "updatedDetectorLastUsed", "parameters": "(UUID uuid)", "modifiers": "public", "return": "void", "signature": "void updatedDetectorLastUsed(UUID uuid)", "full_signature": "public void updatedDetectorLastUsed(UUID uuid)", "class_method_signature": "DetectorClient.updatedDetectorLastUsed(UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "findMatchingDetectorMappings", "parameters": "(List<Map<String, String>> tagsList)", "modifiers": "public", "return": "DetectorMatchResponse", "signature": "DetectorMatchResponse findMatchingDetectorMappings(List<Map<String, String>> tagsList)", "full_signature": "public DetectorMatchResponse findMatchingDetectorMappings(List<Map<String, String>> tagsList)", "class_method_signature": "DetectorClient.findMatchingDetectorMappings(List<Map<String, String>> tagsList)", "testcase": false, "constructor": false}, {"identifier": "findUpdatedDetectorMappings", "parameters": "(long timeInSecs)", "modifiers": "public", "return": "List<DetectorMapping>", "signature": "List<DetectorMapping> findUpdatedDetectorMappings(long timeInSecs)", "full_signature": "public List<DetectorMapping> findUpdatedDetectorMappings(long timeInSecs)", "class_method_signature": "DetectorClient.findUpdatedDetectorMappings(long timeInSecs)", "testcase": false, "constructor": false}, {"identifier": "findDetectorMappingByUuid", "parameters": "(UUID uuid)", "modifiers": "public", "return": "DetectorMapping", "signature": "DetectorMapping findDetectorMappingByUuid(UUID uuid)", "full_signature": "public DetectorMapping findDetectorMappingByUuid(UUID uuid)", "class_method_signature": "DetectorClient.findDetectorMappingByUuid(UUID uuid)", "testcase": false, "constructor": false}], "file": "anomdetect/src/main/java/com/expedia/adaptivealerting/anomdetect/source/DetectorClient.java"}, "focal_method": {"identifier": "findDetectorDocument", "parameters": "(UUID uuid)", "modifiers": "public", "return": "DetectorDocument", "body": "public DetectorDocument findDetectorDocument(UUID uuid) {\n        notNull(uuid, \"uuid can't be null\");\n\n        // http://modelservice/api/v2/detectors/findByUuid?uuid=%s\n        // http://modelservice/api/v2/detectors/findByUuid?uuid=85f395a2-e276-7cfd-34bc-cb850ae3bc2e\n        val uri = String.format(baseUri + FIND_DOCUMENT_PATH, uuid);\n\n        Content content;\n        try {\n            content = httpClient.get(uri);\n        } catch (IOException e) {\n            val message = \"IOException while getting detector document \" + uuid +\n                    \": httpMethod=GET\" +\n                    \", uri=\" + uri +\n                    \", message=\" + e.getMessage();\n            throw new DetectorException(message, e);\n        }\n\n        DetectorDocument document;\n        try {\n            document = objectMapper.readValue(content.asBytes(), DetectorDocument.class);\n        } catch (IOException e) {\n            val message = \"IOException while reading detector document \" + uuid;\n            throw new DetectorException(message, e);\n        }\n\n        if (document == null) {\n            throw new DetectorException(\"No detector document for uuid=\" + uuid);\n        }\n\n        return document;\n    }", "signature": "DetectorDocument findDetectorDocument(UUID uuid)", "full_signature": "public DetectorDocument findDetectorDocument(UUID uuid)", "class_method_signature": "DetectorClient.findDetectorDocument(UUID uuid)", "testcase": false, "constructor": false, "invocations": ["notNull", "format", "get", "getMessage", "readValue", "asBytes"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}