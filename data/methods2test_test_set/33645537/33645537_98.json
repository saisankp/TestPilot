{"test_class": {"identifier": "BinaryTreeSerializationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BinaryTreeSerialization binaryTreeSerialization;", "modifier": "private", "type": "BinaryTreeSerialization", "declarator": "binaryTreeSerialization", "var_name": "binaryTreeSerialization"}], "file": "algs/src/test/java/com/github/pedrovgs/problem46/BinaryTreeSerializationTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullBinaryTreesToSerialize", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void shouldNotAcceptNullBinaryTreesToSerialize() {\n    binaryTreeSerialization.serialize(null);\n  }", "signature": "void shouldNotAcceptNullBinaryTreesToSerialize()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullBinaryTreesToSerialize()", "class_method_signature": "BinaryTreeSerializationTest.shouldNotAcceptNullBinaryTreesToSerialize()", "testcase": true, "constructor": false, "invocations": ["serialize"]}, "focal_class": {"identifier": "BinaryTreeSerialization", "superclass": "", "interfaces": "", "fields": [{"original_string": "static int index = 0;", "modifier": "static", "type": "int", "declarator": "index = 0", "var_name": "index"}], "methods": [{"identifier": "BinaryTreeSerialization", "parameters": "()", "modifiers": "public", "return": "", "signature": " BinaryTreeSerialization()", "full_signature": "public  BinaryTreeSerialization()", "class_method_signature": "BinaryTreeSerialization.BinaryTreeSerialization()", "testcase": false, "constructor": true}, {"identifier": "serialize", "parameters": "(BinaryNode root)", "modifiers": "public", "return": "String", "signature": "String serialize(BinaryNode root)", "full_signature": "public String serialize(BinaryNode root)", "class_method_signature": "BinaryTreeSerialization.serialize(BinaryNode root)", "testcase": false, "constructor": false}, {"identifier": "serializeInner", "parameters": "(BinaryNode root)", "modifiers": "private", "return": "String", "signature": "String serializeInner(BinaryNode root)", "full_signature": "private String serializeInner(BinaryNode root)", "class_method_signature": "BinaryTreeSerialization.serializeInner(BinaryNode root)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(String tree)", "modifiers": "public", "return": "BinaryNode<Integer>", "signature": "BinaryNode<Integer> deserialize(String tree)", "full_signature": "public BinaryNode<Integer> deserialize(String tree)", "class_method_signature": "BinaryTreeSerialization.deserialize(String tree)", "testcase": false, "constructor": false}, {"identifier": "validateInputTree", "parameters": "(BinaryNode root)", "modifiers": "private", "return": "void", "signature": "void validateInputTree(BinaryNode root)", "full_signature": "private void validateInputTree(BinaryNode root)", "class_method_signature": "BinaryTreeSerialization.validateInputTree(BinaryNode root)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(String tree)", "modifiers": "private", "return": "void", "signature": "void validateInput(String tree)", "full_signature": "private void validateInput(String tree)", "class_method_signature": "BinaryTreeSerialization.validateInput(String tree)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem46/BinaryTreeSerialization.java"}, "focal_method": {"identifier": "serialize", "parameters": "(BinaryNode root)", "modifiers": "public", "return": "String", "body": "public String serialize(BinaryNode root) {\n    validateInputTree(root);\n    return serializeInner(root);\n  }", "signature": "String serialize(BinaryNode root)", "full_signature": "public String serialize(BinaryNode root)", "class_method_signature": "BinaryTreeSerialization.serialize(BinaryNode root)", "testcase": false, "constructor": false, "invocations": ["validateInputTree", "serializeInner"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}