{"test_class": {"identifier": "BaseLayerSwitcherPluginTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "private BaseLayerSwitcherPlugin baseLayerSwitcherPlugin;", "modifier": "private", "type": "BaseLayerSwitcherPlugin", "declarator": "baseLayerSwitcherPlugin", "var_name": "baseLayerSwitcherPlugin"}, {"original_string": "private KujakuMapView kujakuMapView;", "modifier": "private", "type": "KujakuMapView", "declarator": "kujakuMapView", "var_name": "kujakuMapView"}], "file": "library/src/test/java/io/ona/kujaku/plugin/switcher/BaseLayerSwitcherPluginTest.java"}, "test_case": {"identifier": "addBaseLayerShouldReturnFalseWhenBaseLayerIdIsSame", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addBaseLayerShouldReturnFalseWhenBaseLayerIdIsSame() {\n        BaseLayer satelliteLayer = new SatelliteBaseLayer();\n        ArrayList<BaseLayer> baseLayers = new ArrayList<>();\n        baseLayers.add(satelliteLayer);\n\n        assertEquals(0, ((ArrayList<BaseLayer>) ReflectionHelpers.getField(baseLayerSwitcherPlugin, \"baseLayers\")).size());\n        ReflectionHelpers.setField(baseLayerSwitcherPlugin, \"baseLayers\", baseLayers);\n\n        assertFalse(baseLayerSwitcherPlugin.addBaseLayer(new SatelliteBaseLayer(), true));\n    }", "signature": "void addBaseLayerShouldReturnFalseWhenBaseLayerIdIsSame()", "full_signature": "@Test public void addBaseLayerShouldReturnFalseWhenBaseLayerIdIsSame()", "class_method_signature": "BaseLayerSwitcherPluginTest.addBaseLayerShouldReturnFalseWhenBaseLayerIdIsSame()", "testcase": true, "constructor": false, "invocations": ["add", "assertEquals", "size", "getField", "setField", "assertFalse", "addBaseLayer"]}, "focal_class": {"identifier": "BaseLayerSwitcherPlugin", "superclass": "", "interfaces": "implements PopupMenu.OnMenuItemClickListener", "fields": [{"original_string": "private KujakuMapView kujakuMapView;", "modifier": "private", "type": "KujakuMapView", "declarator": "kujakuMapView", "var_name": "kujakuMapView"}, {"original_string": "private Style style;", "modifier": "private", "type": "Style", "declarator": "style", "var_name": "style"}, {"original_string": "private FloatingActionButton layerSwitcherFab;", "modifier": "private", "type": "FloatingActionButton", "declarator": "layerSwitcherFab", "var_name": "layerSwitcherFab"}, {"original_string": "@Nullable\n    private BaseLayer currentBaseLayer;", "modifier": "@Nullable\n    private", "type": "BaseLayer", "declarator": "currentBaseLayer", "var_name": "currentBaseLayer"}, {"original_string": "private ArrayList<BaseLayer> baseLayers = new ArrayList<>();", "modifier": "private", "type": "ArrayList<BaseLayer>", "declarator": "baseLayers = new ArrayList<>()", "var_name": "baseLayers"}, {"original_string": "private PopupMenu popupMenu;", "modifier": "private", "type": "PopupMenu", "declarator": "popupMenu", "var_name": "popupMenu"}], "methods": [{"identifier": "BaseLayerSwitcherPlugin", "parameters": "(@NonNull KujakuMapView kujakuMapView, @NonNull Style style)", "modifiers": "public", "return": "", "signature": " BaseLayerSwitcherPlugin(@NonNull KujakuMapView kujakuMapView, @NonNull Style style)", "full_signature": "public  BaseLayerSwitcherPlugin(@NonNull KujakuMapView kujakuMapView, @NonNull Style style)", "class_method_signature": "BaseLayerSwitcherPlugin.BaseLayerSwitcherPlugin(@NonNull KujakuMapView kujakuMapView, @NonNull Style style)", "testcase": false, "constructor": true}, {"identifier": "addBaseLayer", "parameters": "(@NonNull BaseLayer baseLayer, boolean isDefault)", "modifiers": "public", "return": "boolean", "signature": "boolean addBaseLayer(@NonNull BaseLayer baseLayer, boolean isDefault)", "full_signature": "public boolean addBaseLayer(@NonNull BaseLayer baseLayer, boolean isDefault)", "class_method_signature": "BaseLayerSwitcherPlugin.addBaseLayer(@NonNull BaseLayer baseLayer, boolean isDefault)", "testcase": false, "constructor": false}, {"identifier": "removeBaseLayerFromMap", "parameters": "(@NonNull BaseLayer baseLayer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeBaseLayerFromMap(@NonNull BaseLayer baseLayer)", "full_signature": "public boolean removeBaseLayerFromMap(@NonNull BaseLayer baseLayer)", "class_method_signature": "BaseLayerSwitcherPlugin.removeBaseLayerFromMap(@NonNull BaseLayer baseLayer)", "testcase": false, "constructor": false}, {"identifier": "removeBaseLayer", "parameters": "(@NonNull BaseLayer baseLayer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeBaseLayer(@NonNull BaseLayer baseLayer)", "full_signature": "public boolean removeBaseLayer(@NonNull BaseLayer baseLayer)", "class_method_signature": "BaseLayerSwitcherPlugin.removeBaseLayer(@NonNull BaseLayer baseLayer)", "testcase": false, "constructor": false}, {"identifier": "getBaseLayers", "parameters": "()", "modifiers": "@NonNull public", "return": "ArrayList<BaseLayer>", "signature": "ArrayList<BaseLayer> getBaseLayers()", "full_signature": "@NonNull public ArrayList<BaseLayer> getBaseLayers()", "class_method_signature": "BaseLayerSwitcherPlugin.getBaseLayers()", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void show()", "full_signature": "public void show()", "class_method_signature": "BaseLayerSwitcherPlugin.show()", "testcase": false, "constructor": false}, {"identifier": "showPluginSwitcherView", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void showPluginSwitcherView()", "full_signature": "public void showPluginSwitcherView()", "class_method_signature": "BaseLayerSwitcherPlugin.showPluginSwitcherView()", "testcase": false, "constructor": false}, {"identifier": "showPopup", "parameters": "(@NonNull View anchorView)", "modifiers": "public", "return": "void", "signature": "void showPopup(@NonNull View anchorView)", "full_signature": "public void showPopup(@NonNull View anchorView)", "class_method_signature": "BaseLayerSwitcherPlugin.showPopup(@NonNull View anchorView)", "testcase": false, "constructor": false}, {"identifier": "onMenuItemClick", "parameters": "(MenuItem item)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onMenuItemClick(MenuItem item)", "full_signature": "@Override public boolean onMenuItemClick(MenuItem item)", "class_method_signature": "BaseLayerSwitcherPlugin.onMenuItemClick(MenuItem item)", "testcase": false, "constructor": false}, {"identifier": "showBaseLayer", "parameters": "(@NonNull BaseLayer baseLayer)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void showBaseLayer(@NonNull BaseLayer baseLayer)", "full_signature": "@VisibleForTesting protected void showBaseLayer(@NonNull BaseLayer baseLayer)", "class_method_signature": "BaseLayerSwitcherPlugin.showBaseLayer(@NonNull BaseLayer baseLayer)", "testcase": false, "constructor": false}], "file": "library/src/main/java/io/ona/kujaku/plugin/switcher/BaseLayerSwitcherPlugin.java"}, "focal_method": {"identifier": "addBaseLayer", "parameters": "(@NonNull BaseLayer baseLayer, boolean isDefault)", "modifiers": "public", "return": "boolean", "body": "public boolean addBaseLayer(@NonNull BaseLayer baseLayer, boolean isDefault) {\n        if (baseLayers.contains(baseLayer)) {\n            // Todo: switch the currentBaseLayer to this one here\n            if (isDefault && currentBaseLayer != null && !currentBaseLayer.getId().equals(baseLayer.getId())) {\n                showBaseLayer(baseLayer);\n            }\n\n            return false;\n        }\n\n        for (BaseLayer addedBaseLayer: baseLayers) {\n            if (addedBaseLayer.getId().equals(baseLayer.getId())) {\n                if (isDefault && currentBaseLayer != null && !currentBaseLayer.getId().equals(baseLayer.getId())) {\n                    showBaseLayer(baseLayer);\n                }\n                return false;\n            }\n        }\n\n        this.baseLayers.add(baseLayer);\n        // Todo: switch the currentBaseLayer to this one here\n        if (isDefault) {\n            showBaseLayer(baseLayer);\n        }\n        return true;\n    }", "signature": "boolean addBaseLayer(@NonNull BaseLayer baseLayer, boolean isDefault)", "full_signature": "public boolean addBaseLayer(@NonNull BaseLayer baseLayer, boolean isDefault)", "class_method_signature": "BaseLayerSwitcherPlugin.addBaseLayer(@NonNull BaseLayer baseLayer, boolean isDefault)", "testcase": false, "constructor": false, "invocations": ["contains", "equals", "getId", "getId", "showBaseLayer", "equals", "getId", "getId", "equals", "getId", "getId", "showBaseLayer", "add", "showBaseLayer"]}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}