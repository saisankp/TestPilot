{"test_class": {"identifier": "TransactionWitnessTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ulordj/core/TransactionWitnessTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() throws Exception {\n        TransactionWitness w1 = new TransactionWitness(0);\n        assertEquals(\"\", w1.toString());\n\n        TransactionWitness w2 = new TransactionWitness(2);\n        assertEquals(\"NULL NULL\", w2.toString());\n\n        TransactionWitness w3 = new TransactionWitness(3);\n        w3.setPush(0, Utils.HEX.decode(\"123aaa\"));\n        w3.setPush(1, Utils.HEX.decode(\"123bbb\"));\n        w3.setPush(2, Utils.HEX.decode(\"123ccc\"));\n        assertEquals(\"123aaa 123bbb 123ccc\", w3.toString());\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "TransactionWitnessTest.testToString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "assertEquals", "toString", "setPush", "decode", "setPush", "decode", "setPush", "decode", "assertEquals", "toString"]}, "focal_class": {"identifier": "TransactionWitness", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final TransactionWitness EMPTY = new TransactionWitness(0);", "modifier": "public static final", "type": "TransactionWitness", "declarator": "EMPTY = new TransactionWitness(0)", "var_name": "EMPTY"}, {"original_string": "private final byte[][] pushes;", "modifier": "private final", "type": "byte[][]", "declarator": "pushes", "var_name": "pushes"}], "methods": [{"identifier": "TransactionWitness", "parameters": "(int pushCount)", "modifiers": "public", "return": "", "signature": " TransactionWitness(int pushCount)", "full_signature": "public  TransactionWitness(int pushCount)", "class_method_signature": "TransactionWitness.TransactionWitness(int pushCount)", "testcase": false, "constructor": true}, {"identifier": "getPush", "parameters": "(int i)", "modifiers": "public", "return": "byte[]", "signature": "byte[] getPush(int i)", "full_signature": "public byte[] getPush(int i)", "class_method_signature": "TransactionWitness.getPush(int i)", "testcase": false, "constructor": false}, {"identifier": "getPushCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPushCount()", "full_signature": "public int getPushCount()", "class_method_signature": "TransactionWitness.getPushCount()", "testcase": false, "constructor": false}, {"identifier": "setPush", "parameters": "(int i, byte[] value)", "modifiers": "public", "return": "void", "signature": "void setPush(int i, byte[] value)", "full_signature": "public void setPush(int i, byte[] value)", "class_method_signature": "TransactionWitness.setPush(int i, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "bitcoinSerializeToStream", "parameters": "(OutputStream stream)", "modifiers": "protected", "return": "void", "signature": "void bitcoinSerializeToStream(OutputStream stream)", "full_signature": "protected void bitcoinSerializeToStream(OutputStream stream)", "class_method_signature": "TransactionWitness.bitcoinSerializeToStream(OutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TransactionWitness.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "TransactionWitness.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TransactionWitness.hashCode()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ulordj/core/TransactionWitness.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        List<String> stringPushes = new ArrayList<>();\n        for (int j = 0; j < this.getPushCount(); j++) {\n            byte[] push = this.getPush(j);\n            if (push != null) {\n                stringPushes.add(Utils.HEX.encode(push));\n            } else {\n                stringPushes.add(\"NULL\");\n            }\n        }\n        return Utils.SPACE_JOINER.join(stringPushes);\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TransactionWitness.toString()", "testcase": false, "constructor": false, "invocations": ["getPushCount", "getPush", "add", "encode", "add", "join"]}, "repository": {"repo_id": 133357466, "url": "https://github.com/UlordChain/ulordj", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 23, "size": 7129, "license": "licensed"}}