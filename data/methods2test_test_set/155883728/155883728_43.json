{"test_class": {"identifier": "OpearPlanMojoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final File testOutBaseDir = new File(\"target/test-out/OpearPlanMojoTest\");", "modifier": "private final", "type": "File", "declarator": "testOutBaseDir = new File(\"target/test-out/OpearPlanMojoTest\")", "var_name": "testOutBaseDir"}], "file": "maven/src/test/java/net/adamcin/oakpal/maven/mojo/OpearPlanMojoTest.java"}, "test_case": {"identifier": "testGetPlanBuilderParams", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPlanBuilderParams() {\n        OpearPlanMojo mojo = newMojo();\n        assertNotNull(\"always have plan params\", mojo.getPlanBuilderParams());\n\n        mojo.planParams = new PlanParams();\n        assertSame(\"same plan params\", mojo.planParams, mojo.getPlanBuilderParams());\n    }", "signature": "void testGetPlanBuilderParams()", "full_signature": "@Test public void testGetPlanBuilderParams()", "class_method_signature": "OpearPlanMojoTest.testGetPlanBuilderParams()", "testcase": true, "constructor": false, "invocations": ["newMojo", "assertNotNull", "getPlanBuilderParams", "assertSame", "getPlanBuilderParams"]}, "focal_class": {"identifier": "OpearPlanMojo", "superclass": "extends AbstractCommonMojo", "interfaces": "implements MojoWithPlanParams", "fields": [{"original_string": "@Parameter(name = \"planFile\", defaultValue = \"${project.build.directory}/oakpal-plugin/opear-plans/plan.json\", required = true)\n    File planFile;", "modifier": "@Parameter(name = \"planFile\", defaultValue = \"${project.build.directory}/oakpal-plugin/opear-plans/plan.json\", required = true)", "type": "File", "declarator": "planFile", "var_name": "planFile"}, {"original_string": "@Parameter(name = \"planParams\")\n    PlanParams planParams;", "modifier": "@Parameter(name = \"planParams\")", "type": "PlanParams", "declarator": "planParams", "var_name": "planParams"}], "methods": [{"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "OpearPlanMojo.execute()", "testcase": false, "constructor": false}, {"identifier": "getPlanBuilderParams", "parameters": "()", "modifiers": "@Override public", "return": "PlanBuilderParams", "signature": "PlanBuilderParams getPlanBuilderParams()", "full_signature": "@Override public PlanBuilderParams getPlanBuilderParams()", "class_method_signature": "OpearPlanMojo.getPlanBuilderParams()", "testcase": false, "constructor": false}], "file": "maven/src/main/java/net/adamcin/oakpal/maven/mojo/OpearPlanMojo.java"}, "focal_method": {"identifier": "getPlanBuilderParams", "parameters": "()", "modifiers": "@Override public", "return": "PlanBuilderParams", "body": "@Override\n    public PlanBuilderParams getPlanBuilderParams() {\n        return Optional.ofNullable(planParams).orElse(new PlanParams());\n    }", "signature": "PlanBuilderParams getPlanBuilderParams()", "full_signature": "@Override public PlanBuilderParams getPlanBuilderParams()", "class_method_signature": "OpearPlanMojo.getPlanBuilderParams()", "testcase": false, "constructor": false, "invocations": ["orElse", "ofNullable"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}