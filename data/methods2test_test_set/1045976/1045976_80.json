{"test_class": {"identifier": "StringUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "py4j-java/src/test/java/py4j/StringUtilTest.java"}, "test_case": {"identifier": "testWithLineBreaks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWithLineBreaks() {\n\t\tassertEquals(\"Hello\\\\nWorld!\", StringUtil.unescape(\"Hello\\\\\\\\nWorld!\"));\n\t\tassertEquals(\"Hello\\nWorld!\", StringUtil.unescape(\"Hello\\\\nWorld!\"));\n\t\tassertEquals(\"Hello\\\\\\nWorld!\", StringUtil.unescape(\"Hello\\\\\\\\\\\\nWorld!\"));\n\t\tassertEquals(\"\\rHello\\\\\\nWorld!\", StringUtil.unescape(\"\\\\rHello\\\\\\\\\\\\nWorld!\"));\n\t}", "signature": "void testWithLineBreaks()", "full_signature": "@Test public void testWithLineBreaks()", "class_method_signature": "StringUtilTest.testWithLineBreaks()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "unescape", "assertEquals", "unescape", "assertEquals", "unescape", "assertEquals", "unescape"]}, "focal_class": {"identifier": "StringUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static char ESCAPE_CHAR = '\\\\';", "modifier": "public final static", "type": "char", "declarator": "ESCAPE_CHAR = '\\\\'", "var_name": "ESCAPE_CHAR"}], "methods": [{"identifier": "escape", "parameters": "(String original)", "modifiers": "public static", "return": "String", "signature": "String escape(String original)", "full_signature": "public static String escape(String original)", "class_method_signature": "StringUtil.escape(String original)", "testcase": false, "constructor": false}, {"identifier": "unescape", "parameters": "(String escaped)", "modifiers": "public static", "return": "String", "signature": "String unescape(String escaped)", "full_signature": "public static String unescape(String escaped)", "class_method_signature": "StringUtil.unescape(String escaped)", "testcase": false, "constructor": false}], "file": "py4j-java/src/main/java/py4j/StringUtil.java"}, "focal_method": {"identifier": "unescape", "parameters": "(String escaped)", "modifiers": "public static", "return": "String", "body": "public static String unescape(String escaped) {\n\t\tboolean escaping = false;\n\t\tStringBuilder newString = new StringBuilder();\n\n\t\tfor (char c : escaped.toCharArray()) {\n\t\t\tif (!escaping) {\n\t\t\t\tif (c == ESCAPE_CHAR) {\n\t\t\t\t\tescaping = true;\n\t\t\t\t} else {\n\t\t\t\t\tnewString.append(c);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (c == 'n') {\n\t\t\t\t\tnewString.append('\\n');\n\t\t\t\t} else if (c == 'r') {\n\t\t\t\t\tnewString.append('\\r');\n\t\t\t\t} else {\n\t\t\t\t\tnewString.append(c);\n\t\t\t\t}\n\t\t\t\tescaping = false;\n\t\t\t}\n\t\t}\n\n\t\treturn newString.toString();\n\n\t}", "signature": "String unescape(String escaped)", "full_signature": "public static String unescape(String escaped)", "class_method_signature": "StringUtil.unescape(String escaped)", "testcase": false, "constructor": false, "invocations": ["toCharArray", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 1045976, "url": "https://github.com/bartdag/py4j", "language": "Java", "is_fork": false, "fork_count": 141, "stargazer_count": 737, "size": 16415, "license": "licensed"}}