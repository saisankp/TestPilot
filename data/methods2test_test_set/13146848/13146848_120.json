{"test_class": {"identifier": "PdfPageTransitionTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/pdf/transition/PdfPageTransitionTest.java"}, "test_case": {"identifier": "testNoDisplayDuration", "parameters": "()", "modifiers": "@Test(expected = InvalidParameterException.class) public", "return": "void", "body": "@Test(expected = InvalidParameterException.class)\n    public void testNoDisplayDuration() {\n        PdfPageTransition.newInstance(PdfPageTransitionStyle.BLINDS_HORIZONTAL, 1, 0);\n    }", "signature": "void testNoDisplayDuration()", "full_signature": "@Test(expected = InvalidParameterException.class) public void testNoDisplayDuration()", "class_method_signature": "PdfPageTransitionTest.testNoDisplayDuration()", "testcase": true, "constructor": false, "invocations": ["newInstance"]}, "focal_class": {"identifier": "PdfPageTransition", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull\n    private PdfPageTransitionStyle style;", "modifier": "@NotNull\n    private", "type": "PdfPageTransitionStyle", "declarator": "style", "var_name": "style"}, {"original_string": "@Min(value = 1)\n    private int transitionDuration;", "modifier": "@Min(value = 1)\n    private", "type": "int", "declarator": "transitionDuration", "var_name": "transitionDuration"}, {"original_string": "@Min(value = 1)\n    private int displayDuration;", "modifier": "@Min(value = 1)\n    private", "type": "int", "declarator": "displayDuration", "var_name": "displayDuration"}], "methods": [{"identifier": "PdfPageTransition", "parameters": "(PdfPageTransitionStyle style, int transitionDuration, int displayDuration)", "modifiers": "private", "return": "", "signature": " PdfPageTransition(PdfPageTransitionStyle style, int transitionDuration, int displayDuration)", "full_signature": "private  PdfPageTransition(PdfPageTransitionStyle style, int transitionDuration, int displayDuration)", "class_method_signature": "PdfPageTransition.PdfPageTransition(PdfPageTransitionStyle style, int transitionDuration, int displayDuration)", "testcase": false, "constructor": true}, {"identifier": "getStyle", "parameters": "()", "modifiers": "public", "return": "PdfPageTransitionStyle", "signature": "PdfPageTransitionStyle getStyle()", "full_signature": "public PdfPageTransitionStyle getStyle()", "class_method_signature": "PdfPageTransition.getStyle()", "testcase": false, "constructor": false}, {"identifier": "getTransitionDuration", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTransitionDuration()", "full_signature": "public int getTransitionDuration()", "class_method_signature": "PdfPageTransition.getTransitionDuration()", "testcase": false, "constructor": false}, {"identifier": "getDisplayDuration", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDisplayDuration()", "full_signature": "public int getDisplayDuration()", "class_method_signature": "PdfPageTransition.getDisplayDuration()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PdfPageTransition.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PdfPageTransition.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "PdfPageTransition.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration)", "modifiers": "public static", "return": "PdfPageTransition", "signature": "PdfPageTransition newInstance(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration)", "full_signature": "public static PdfPageTransition newInstance(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration)", "class_method_signature": "PdfPageTransition.newInstance(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/pdf/transition/PdfPageTransition.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration)", "modifiers": "public static", "return": "PdfPageTransition", "body": "public static PdfPageTransition newInstance(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration) {\n\n        if (transitionDuration < 1) {\n            throw new InvalidParameterException(\"Input transition duration must be positive.\");\n        }\n        if (displayDuration < 1) {\n            throw new InvalidParameterException(\"Input display duration must be positive.\");\n        }\n        if (style == null) {\n            throw new InvalidParameterException(\"Input style cannot be null.\");\n        }\n        return new PdfPageTransition(style, transitionDuration, displayDuration);\n    }", "signature": "PdfPageTransition newInstance(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration)", "full_signature": "public static PdfPageTransition newInstance(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration)", "class_method_signature": "PdfPageTransition.newInstance(PdfPageTransitionStyle style, int transitionDuration,\n            int displayDuration)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}