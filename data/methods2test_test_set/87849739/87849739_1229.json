{"test_class": {"identifier": "ImmutableDefinitionIdentifierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NAMESPACE = \"org.eclipse.ditto\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE = \"org.eclipse.ditto\"", "var_name": "NAMESPACE"}, {"original_string": "private static final String NAME = \"vorto\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"vorto\"", "var_name": "NAME"}, {"original_string": "private static final String VERSION = \"0.1.0\";", "modifier": "private static final", "type": "String", "declarator": "VERSION = \"0.1.0\"", "var_name": "VERSION"}, {"original_string": "private static final String VALID_IDENTIFIER_STRING = NAMESPACE + \":\" + NAME + \":\" + VERSION;", "modifier": "private static final", "type": "String", "declarator": "VALID_IDENTIFIER_STRING = NAMESPACE + \":\" + NAME + \":\" + VERSION", "var_name": "VALID_IDENTIFIER_STRING"}], "file": "model/things/src/test/java/org/eclipse/ditto/model/things/ImmutableDefinitionIdentifierTest.java"}, "test_case": {"identifier": "tryToGetInstanceWithEmptyName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToGetInstanceWithEmptyName() {\n        assertThatIllegalArgumentException()\n                .isThrownBy(() -> ImmutableDefinitionIdentifier.getInstance(NAMESPACE, \"\", VERSION))\n                .withMessage(\"The argument '%s' must not be empty!\", \"name\")\n                .withNoCause();\n    }", "signature": "void tryToGetInstanceWithEmptyName()", "full_signature": "@Test public void tryToGetInstanceWithEmptyName()", "class_method_signature": "ImmutableDefinitionIdentifierTest.tryToGetInstanceWithEmptyName()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatIllegalArgumentException", "getInstance"]}, "focal_class": {"identifier": "ImmutableDefinitionIdentifier", "superclass": "", "interfaces": "implements DefinitionIdentifier", "fields": [{"original_string": "private static final Pattern IDENTIFIER_PATTERN = DefinitionIdentifierPatternBuilder.getInstance()\n            .addCapturingGroup(CapturingGroup.NAMESPACE)\n            .addCapturingGroup(CapturingGroup.NAME)\n            .addCapturingGroup(CapturingGroup.VERSION)\n            .build();", "modifier": "private static final", "type": "Pattern", "declarator": "IDENTIFIER_PATTERN = DefinitionIdentifierPatternBuilder.getInstance()\n            .addCapturingGroup(CapturingGroup.NAMESPACE)\n            .addCapturingGroup(CapturingGroup.NAME)\n            .addCapturingGroup(CapturingGroup.VERSION)\n            .build()", "var_name": "IDENTIFIER_PATTERN"}, {"original_string": "private static final String COLON = \":\";", "modifier": "private static final", "type": "String", "declarator": "COLON = \":\"", "var_name": "COLON"}, {"original_string": "private final String namespace;", "modifier": "private final", "type": "String", "declarator": "namespace", "var_name": "namespace"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final String version;", "modifier": "private final", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private final String stringRepresentation;", "modifier": "private final", "type": "String", "declarator": "stringRepresentation", "var_name": "stringRepresentation"}], "methods": [{"identifier": "ImmutableDefinitionIdentifier", "parameters": "(final CharSequence theNamespace, final CharSequence theName,\n            final CharSequence theVersion)", "modifiers": "private", "return": "", "signature": " ImmutableDefinitionIdentifier(final CharSequence theNamespace, final CharSequence theName,\n            final CharSequence theVersion)", "full_signature": "private  ImmutableDefinitionIdentifier(final CharSequence theNamespace, final CharSequence theName,\n            final CharSequence theVersion)", "class_method_signature": "ImmutableDefinitionIdentifier.ImmutableDefinitionIdentifier(final CharSequence theNamespace, final CharSequence theName,\n            final CharSequence theVersion)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(final CharSequence namespace,\n            final CharSequence name, final CharSequence version)", "modifiers": "static", "return": "DefinitionIdentifier", "signature": "DefinitionIdentifier getInstance(final CharSequence namespace,\n            final CharSequence name, final CharSequence version)", "full_signature": "static DefinitionIdentifier getInstance(final CharSequence namespace,\n            final CharSequence name, final CharSequence version)", "class_method_signature": "ImmutableDefinitionIdentifier.getInstance(final CharSequence namespace,\n            final CharSequence name, final CharSequence version)", "testcase": false, "constructor": false}, {"identifier": "ofParsed", "parameters": "(final CharSequence definitionIdentifier)", "modifiers": "static", "return": "DefinitionIdentifier", "signature": "DefinitionIdentifier ofParsed(final CharSequence definitionIdentifier)", "full_signature": "static DefinitionIdentifier ofParsed(final CharSequence definitionIdentifier)", "class_method_signature": "ImmutableDefinitionIdentifier.ofParsed(final CharSequence definitionIdentifier)", "testcase": false, "constructor": false}, {"identifier": "getNamespace", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getNamespace()", "full_signature": "@Override public String getNamespace()", "class_method_signature": "ImmutableDefinitionIdentifier.getNamespace()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ImmutableDefinitionIdentifier.getName()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getVersion()", "full_signature": "@Override public String getVersion()", "class_method_signature": "ImmutableDefinitionIdentifier.getVersion()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableDefinitionIdentifier.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableDefinitionIdentifier.hashCode()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int length()", "full_signature": "@Override public int length()", "class_method_signature": "ImmutableDefinitionIdentifier.length()", "testcase": false, "constructor": false}, {"identifier": "charAt", "parameters": "(final int index)", "modifiers": "@Override public", "return": "char", "signature": "char charAt(final int index)", "full_signature": "@Override public char charAt(final int index)", "class_method_signature": "ImmutableDefinitionIdentifier.charAt(final int index)", "testcase": false, "constructor": false}, {"identifier": "subSequence", "parameters": "(final int start, final int end)", "modifiers": "@Override public", "return": "CharSequence", "signature": "CharSequence subSequence(final int start, final int end)", "full_signature": "@Override public CharSequence subSequence(final int start, final int end)", "class_method_signature": "ImmutableDefinitionIdentifier.subSequence(final int start, final int end)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableDefinitionIdentifier.toString()", "testcase": false, "constructor": false}], "file": "model/things/src/main/java/org/eclipse/ditto/model/things/ImmutableDefinitionIdentifier.java"}, "focal_method": {"identifier": "getInstance", "parameters": "(final CharSequence namespace,\n            final CharSequence name, final CharSequence version)", "modifiers": "static", "return": "DefinitionIdentifier", "body": "static DefinitionIdentifier getInstance(final CharSequence namespace,\n            final CharSequence name, final CharSequence version) {\n\n        return new ImmutableDefinitionIdentifier(namespace, name, version);\n    }", "signature": "DefinitionIdentifier getInstance(final CharSequence namespace,\n            final CharSequence name, final CharSequence version)", "full_signature": "static DefinitionIdentifier getInstance(final CharSequence namespace,\n            final CharSequence name, final CharSequence version)", "class_method_signature": "ImmutableDefinitionIdentifier.getInstance(final CharSequence namespace,\n            final CharSequence name, final CharSequence version)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}