{"test_class": {"identifier": "TracingCallbackTest", "superclass": "extends KafkaTest", "interfaces": "", "fields": [], "file": "instrumentation/kafka-clients/src/test/java/brave/kafka/clients/TracingCallbackTest.java"}, "test_case": {"identifier": "on_completion_should_have_span_in_scope", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void on_completion_should_have_span_in_scope() {\n    Span span = tracing.tracer().nextSpan().start();\n\n    Callback delegate =\n      (metadata, exception) -> assertThat(currentTraceContext.get()).isSameAs(span.context());\n\n    TracingCallback.create(delegate, span, currentTraceContext)\n      .onCompletion(createRecordMetadata(), null);\n\n    assertThat(spans.get(0).finishTimestamp()).isNotZero();\n  }", "signature": "void on_completion_should_have_span_in_scope()", "full_signature": "@Test public void on_completion_should_have_span_in_scope()", "class_method_signature": "TracingCallbackTest.on_completion_should_have_span_in_scope()", "testcase": true, "constructor": false, "invocations": ["start", "nextSpan", "tracer", "isSameAs", "assertThat", "get", "context", "onCompletion", "create", "createRecordMetadata", "isNotZero", "assertThat", "finishTimestamp", "get"]}, "focal_class": {"identifier": "TracingCallback", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "create", "parameters": "(@Nullable Callback delegate, Span span, CurrentTraceContext current)", "modifiers": "static", "return": "Callback", "signature": "Callback create(@Nullable Callback delegate, Span span, CurrentTraceContext current)", "full_signature": "static Callback create(@Nullable Callback delegate, Span span, CurrentTraceContext current)", "class_method_signature": "TracingCallback.create(@Nullable Callback delegate, Span span, CurrentTraceContext current)", "testcase": false, "constructor": false}], "file": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/TracingCallback.java"}, "focal_method": {"identifier": "create", "parameters": "(@Nullable Callback delegate, Span span, CurrentTraceContext current)", "modifiers": "static", "return": "Callback", "body": "static Callback create(@Nullable Callback delegate, Span span, CurrentTraceContext current) {\n    if (delegate == null) return new FinishSpan(span);\n    return new DelegateAndFinishSpan(delegate, span, current);\n  }", "signature": "Callback create(@Nullable Callback delegate, Span span, CurrentTraceContext current)", "full_signature": "static Callback create(@Nullable Callback delegate, Span span, CurrentTraceContext current)", "class_method_signature": "TracingCallback.create(@Nullable Callback delegate, Span span, CurrentTraceContext current)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}