{"test_class": {"identifier": "PaillierCipherTest", "superclass": "", "interfaces": "", "fields": [], "file": "pross-common/src/test/java/com/ibm/pross/common/util/crypto/paillier/PaillierCipherTest.java"}, "test_case": {"identifier": "testEncryptPerformance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEncryptPerformance() {\n\t\t\n\t\tfinal PaillierKeyGenerator keyGenerator = new PaillierKeyGenerator(2048);\n\t\tfinal PaillierKeyPair keyPair = keyGenerator.generate();\n\t\t\n\t\t// Generate random input\n\t\tfinal BigInteger n = keyPair.getPublicKey().getN();\n\t\t\n\t\t\n\t\t// Warm up\n\t\tBigInteger encrypted = null;\n\t\tfor (int i = 0; i < 20; i++)\n\t\t{\n\t\t\tfinal BigInteger x = RandomNumberGenerator.generateRandomInteger(n);\n\t\t\tencrypted = PaillierCipher.encrypt(keyPair.getPublicKey(), x);\n\t\t}\n\t\tSystem.out.println(\"size: \" + (encrypted.toByteArray().length));\n\t\t\n\t\t// Do test\n\t\tlong timeNs = 0;\n\t\tfinal int iterations = 1000;\n\t\tfinal PaillierPublicKey publicKey = keyPair.getPublicKey();\n\t\tfor (int i = 0; i < iterations; i++)\n\t\t{\n\t\t\tfinal BigInteger x = RandomNumberGenerator.generateRandomInteger(n);\n\t\t\tfinal long start = System.nanoTime();\n\t\t\tPaillierCipher.encrypt(publicKey, x);\n\t\t\tfinal long end = System.nanoTime();\n\t\t\ttimeNs += (end - start);\n\t\t}\n\t\t\n\t\tSystem.out.println(\"Total time (ms): \" + timeNs / (((long)iterations) * 1_000_000.0));\n\t}", "signature": "void testEncryptPerformance()", "full_signature": "@Test public void testEncryptPerformance()", "class_method_signature": "PaillierCipherTest.testEncryptPerformance()", "testcase": true, "constructor": false, "invocations": ["generate", "getN", "getPublicKey", "generateRandomInteger", "encrypt", "getPublicKey", "println", "toByteArray", "getPublicKey", "generateRandomInteger", "nanoTime", "encrypt", "nanoTime", "println"]}, "focal_class": {"identifier": "PaillierCipher", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "l", "parameters": "(final BigInteger u, final BigInteger n)", "modifiers": "private static", "return": "BigInteger", "signature": "BigInteger l(final BigInteger u, final BigInteger n)", "full_signature": "private static BigInteger l(final BigInteger u, final BigInteger n)", "class_method_signature": "PaillierCipher.l(final BigInteger u, final BigInteger n)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(final PaillierPublicKey encryptionKey, final BigInteger message)", "modifiers": "public static", "return": "BigInteger", "signature": "BigInteger encrypt(final PaillierPublicKey encryptionKey, final BigInteger message)", "full_signature": "public static BigInteger encrypt(final PaillierPublicKey encryptionKey, final BigInteger message)", "class_method_signature": "PaillierCipher.encrypt(final PaillierPublicKey encryptionKey, final BigInteger message)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(final PaillierPublicKey encryptionKey, final BigInteger message,\n\t\t\tfinal BigInteger r)", "modifiers": "public static", "return": "BigInteger", "signature": "BigInteger encrypt(final PaillierPublicKey encryptionKey, final BigInteger message,\n\t\t\tfinal BigInteger r)", "full_signature": "public static BigInteger encrypt(final PaillierPublicKey encryptionKey, final BigInteger message,\n\t\t\tfinal BigInteger r)", "class_method_signature": "PaillierCipher.encrypt(final PaillierPublicKey encryptionKey, final BigInteger message,\n\t\t\tfinal BigInteger r)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(final PaillierPrivateKey decryptionKey, final BigInteger ciphertext)", "modifiers": "public static", "return": "BigInteger", "signature": "BigInteger decrypt(final PaillierPrivateKey decryptionKey, final BigInteger ciphertext)", "full_signature": "public static BigInteger decrypt(final PaillierPrivateKey decryptionKey, final BigInteger ciphertext)", "class_method_signature": "PaillierCipher.decrypt(final PaillierPrivateKey decryptionKey, final BigInteger ciphertext)", "testcase": false, "constructor": false}], "file": "pross-common/src/main/java/com/ibm/pross/common/util/crypto/paillier/PaillierCipher.java"}, "focal_method": {"identifier": "encrypt", "parameters": "(final PaillierPublicKey encryptionKey, final BigInteger message)", "modifiers": "public static", "return": "BigInteger", "body": "public static BigInteger encrypt(final PaillierPublicKey encryptionKey, final BigInteger message) {\n\t\tfinal BigInteger n = encryptionKey.getN();\n\t\tfinal BigInteger r = RandomNumberGenerator.generateRandomCoprimeInRange(n);\n\t\treturn encrypt(encryptionKey, message, r);\n\t}", "signature": "BigInteger encrypt(final PaillierPublicKey encryptionKey, final BigInteger message)", "full_signature": "public static BigInteger encrypt(final PaillierPublicKey encryptionKey, final BigInteger message)", "class_method_signature": "PaillierCipher.encrypt(final PaillierPublicKey encryptionKey, final BigInteger message)", "testcase": false, "constructor": false, "invocations": ["getN", "generateRandomCoprimeInRange", "encrypt"]}, "repository": {"repo_id": 144309611, "url": "https://github.com/jasonkresch/protect", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 38, "size": 1932, "license": "licensed"}}