{"test_class": {"identifier": "DurationFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DurationFunction durationFunction;", "modifier": "private", "type": "DurationFunction", "declarator": "durationFunction", "var_name": "durationFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/DurationFunctionTest.java"}, "test_case": {"identifier": "invokeParamStringInvalid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeParamStringInvalid() {\n        FunctionTestUtil.assertResultError(durationFunction.invoke(\"test\"), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(durationFunction.invoke(\"test HHH\"), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(durationFunction.invoke(\"testP2Y3D\"), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(durationFunction.invoke(\"test P2Y3D\"), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(durationFunction.invoke(\"P2Y3DD\"), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(durationFunction.invoke(\"P3DD\"), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(durationFunction.invoke(\"PT3HH\"), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(durationFunction.invoke(\"P2Y3M4DT3H\"), InvalidParametersEvent.class);\n    }", "signature": "void invokeParamStringInvalid()", "full_signature": "@Test public void invokeParamStringInvalid()", "class_method_signature": "DurationFunctionTest.invokeParamStringInvalid()", "testcase": true, "constructor": false, "invocations": ["assertResultError", "invoke", "assertResultError", "invoke", "assertResultError", "invoke", "assertResultError", "invoke", "assertResultError", "invoke", "assertResultError", "invoke", "assertResultError", "invoke", "assertResultError", "invoke"]}, "focal_class": {"identifier": "DurationFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "DurationFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " DurationFunction()", "full_signature": "public  DurationFunction()", "class_method_signature": "DurationFunction.DurationFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"from\" ) String val)", "modifiers": "public", "return": "FEELFnResult<TemporalAmount>", "signature": "FEELFnResult<TemporalAmount> invoke(@ParameterName( \"from\" ) String val)", "full_signature": "public FEELFnResult<TemporalAmount> invoke(@ParameterName( \"from\" ) String val)", "class_method_signature": "DurationFunction.invoke(@ParameterName( \"from\" ) String val)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(@ParameterName( \"from\" ) TemporalAmount val)", "modifiers": "public", "return": "FEELFnResult<TemporalAmount>", "signature": "FEELFnResult<TemporalAmount> invoke(@ParameterName( \"from\" ) TemporalAmount val)", "full_signature": "public FEELFnResult<TemporalAmount> invoke(@ParameterName( \"from\" ) TemporalAmount val)", "class_method_signature": "DurationFunction.invoke(@ParameterName( \"from\" ) TemporalAmount val)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/DurationFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"from\" ) String val)", "modifiers": "public", "return": "FEELFnResult<TemporalAmount>", "body": "public FEELFnResult<TemporalAmount> invoke(@ParameterName( \"from\" ) String val) {\n        if ( val == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"from\", \"cannot be null\"));\n        }\n\n        if ( val.indexOf(\"-\") > 0) {\n            return FEELFnResult.ofError( new InvalidParametersEvent(Severity.ERROR, \"from\", \"negative values for units are not allowed.\") );\n        }\n\n        try {\n            // try to parse as days/hours/minute/seconds\n            return FEELFnResult.ofResult( Duration.parse( val ) );\n        } catch( DateTimeParseException e ) {\n            // if it failed, try to parse as years/months\n            try {\n                return FEELFnResult.ofResult(ComparablePeriod.parse(val).normalized());\n            } catch( DateTimeParseException e2 ) {\n                // failed to parse, so return null according to the spec\n                return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"from\", \"date-parsing exception\", \n                                        new RuntimeException(new Throwable() { public final List<Throwable> causes = Arrays.asList( new Throwable[]{e, e2} );  } ))); \n            }\n        }\n        \n    }", "signature": "FEELFnResult<TemporalAmount> invoke(@ParameterName( \"from\" ) String val)", "full_signature": "public FEELFnResult<TemporalAmount> invoke(@ParameterName( \"from\" ) String val)", "class_method_signature": "DurationFunction.invoke(@ParameterName( \"from\" ) String val)", "testcase": false, "constructor": false, "invocations": ["ofError", "indexOf", "ofError", "ofResult", "parse", "ofResult", "normalized", "parse", "ofError", "asList"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}