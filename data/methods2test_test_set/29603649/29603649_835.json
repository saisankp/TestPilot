{"test_class": {"identifier": "SequenceHandlingOnServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MESSAGE = \"Sequence handling: ON\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE = \"Sequence handling: ON\"", "var_name": "MESSAGE"}, {"original_string": "@Mock\n    private SequenceHandlingToggle sequenceHandlingToggle;", "modifier": "@Mock\n    private", "type": "SequenceHandlingToggle", "declarator": "sequenceHandlingToggle", "var_name": "sequenceHandlingToggle"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private UrlAccessLogMessageAssembler urlAccessLogMessageAssembler;", "modifier": "@Mock\n    private", "type": "UrlAccessLogMessageAssembler", "declarator": "urlAccessLogMessageAssembler", "var_name": "urlAccessLogMessageAssembler"}, {"original_string": "@InjectMocks\n    private SequenceHandlingOnServlet underTest;", "modifier": "@InjectMocks\n    private", "type": "SequenceHandlingOnServlet", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private HttpServletRequest req;", "modifier": "private", "type": "HttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private HttpServletResponse resp;", "modifier": "private", "type": "HttpServletResponse", "declarator": "resp", "var_name": "resp"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/config/servlet/sequence/SequenceHandlingOnServletTest.java"}, "test_case": {"identifier": "testDoGetShouldLogMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoGetShouldLogMessage() throws ServletException, IOException {\n        //GIVEN\n        given(urlAccessLogMessageAssembler.assembleMessage(req, MESSAGE)).willReturn(\"something\");\n        //WHEN\n        underTest.doGet(req, resp);\n        //THEN\n        verify(urlAccessLogMessageAssembler).assembleMessage(req, MESSAGE);\n        verify(logger).info(\"something\");\n    }", "signature": "void testDoGetShouldLogMessage()", "full_signature": "@Test public void testDoGetShouldLogMessage()", "class_method_signature": "SequenceHandlingOnServletTest.testDoGetShouldLogMessage()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "assembleMessage", "doGet", "assembleMessage", "verify", "info", "verify"]}, "focal_class": {"identifier": "SequenceHandlingOnServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(SequenceHandlingOnServlet.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SequenceHandlingOnServlet.class)", "var_name": "logger"}, {"original_string": "private final SequenceHandlingToggle sequenceHandlingToggle;", "modifier": "private final", "type": "SequenceHandlingToggle", "declarator": "sequenceHandlingToggle", "var_name": "sequenceHandlingToggle"}, {"original_string": "private final UrlAccessLogMessageAssembler urlAccessLogMessageAssembler;", "modifier": "private final", "type": "UrlAccessLogMessageAssembler", "declarator": "urlAccessLogMessageAssembler", "var_name": "urlAccessLogMessageAssembler"}], "methods": [{"identifier": "SequenceHandlingOnServlet", "parameters": "(SequenceHandlingToggle sequenceHandlingToggle, UrlAccessLogMessageAssembler urlAccessLogMessageAssembler)", "modifiers": "@Autowired public", "return": "", "signature": " SequenceHandlingOnServlet(SequenceHandlingToggle sequenceHandlingToggle, UrlAccessLogMessageAssembler urlAccessLogMessageAssembler)", "full_signature": "@Autowired public  SequenceHandlingOnServlet(SequenceHandlingToggle sequenceHandlingToggle, UrlAccessLogMessageAssembler urlAccessLogMessageAssembler)", "class_method_signature": "SequenceHandlingOnServlet.SequenceHandlingOnServlet(SequenceHandlingToggle sequenceHandlingToggle, UrlAccessLogMessageAssembler urlAccessLogMessageAssembler)", "testcase": false, "constructor": true}, {"identifier": "doGet", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "SequenceHandlingOnServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "SequenceHandlingOnServlet.doPost(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/config/servlet/sequence/SequenceHandlingOnServlet.java"}, "focal_method": {"identifier": "doGet", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n        sequenceHandlingToggle.switchOn();\n        logger.info(urlAccessLogMessageAssembler.assembleMessage(req, \"Sequence handling: ON\"));\n    }", "signature": "void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "SequenceHandlingOnServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false, "invocations": ["switchOn", "info", "assembleMessage"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}