{"test_class": {"identifier": "SendFeatureMessageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ThingId THING_ID = ThingId.of(\"test.ns\", \"theThingId\");", "modifier": "private static final", "type": "ThingId", "declarator": "THING_ID = ThingId.of(\"test.ns\", \"theThingId\")", "var_name": "THING_ID"}, {"original_string": "private static final String FEATURE_ID = \"theFeatureId\";", "modifier": "private static final", "type": "String", "declarator": "FEATURE_ID = \"theFeatureId\"", "var_name": "FEATURE_ID"}, {"original_string": "private static final String SUBJECT = \"theSubject\";", "modifier": "private static final", "type": "String", "declarator": "SUBJECT = \"theSubject\"", "var_name": "SUBJECT"}, {"original_string": "private static final String CONTENT_TYPE = \"application/json\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE = \"application/json\"", "var_name": "CONTENT_TYPE"}, {"original_string": "private static final String CORRELATION_ID = UUID.randomUUID().toString();", "modifier": "private static final", "type": "String", "declarator": "CORRELATION_ID = UUID.randomUUID().toString()", "var_name": "CORRELATION_ID"}, {"original_string": "private static final DittoHeaders DITTO_HEADERS = DittoHeaders.newBuilder().correlationId(CORRELATION_ID).build();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "DITTO_HEADERS = DittoHeaders.newBuilder().correlationId(CORRELATION_ID).build()", "var_name": "DITTO_HEADERS"}, {"original_string": "private static final String KNOWN_RAW_PAYLOAD_STR = \"{\\\"some\\\":42}\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_RAW_PAYLOAD_STR = \"{\\\"some\\\":42}\"", "var_name": "KNOWN_RAW_PAYLOAD_STR"}, {"original_string": "private static final Message<?> MESSAGE = MessagesModelFactory.newMessageBuilder(\n            MessageHeaders.newBuilder(MessageDirection.TO, THING_ID, SUBJECT)\n                    .contentType(CONTENT_TYPE)\n                    .featureId(FEATURE_ID)\n                    .build())\n            .payload(JsonFactory.newObject(KNOWN_RAW_PAYLOAD_STR))\n            .build();", "modifier": "private static final", "type": "Message<?>", "declarator": "MESSAGE = MessagesModelFactory.newMessageBuilder(\n            MessageHeaders.newBuilder(MessageDirection.TO, THING_ID, SUBJECT)\n                    .contentType(CONTENT_TYPE)\n                    .featureId(FEATURE_ID)\n                    .build())\n            .payload(JsonFactory.newObject(KNOWN_RAW_PAYLOAD_STR))\n            .build()", "var_name": "MESSAGE"}, {"original_string": "private static final Message<?> DESERIALIZED_MESSAGE = MessagesModelFactory.newMessageBuilder(\n            MessageHeaders.newBuilder(MessageDirection.TO, THING_ID, SUBJECT)\n                    .contentType(CONTENT_TYPE)\n                    .featureId(FEATURE_ID)\n                    .build())\n            .payload(JsonFactory.newObject(KNOWN_RAW_PAYLOAD_STR))\n            .rawPayload(ByteBuffer.wrap(KNOWN_RAW_PAYLOAD_STR.getBytes()))\n            .build();", "modifier": "private static final", "type": "Message<?>", "declarator": "DESERIALIZED_MESSAGE = MessagesModelFactory.newMessageBuilder(\n            MessageHeaders.newBuilder(MessageDirection.TO, THING_ID, SUBJECT)\n                    .contentType(CONTENT_TYPE)\n                    .featureId(FEATURE_ID)\n                    .build())\n            .payload(JsonFactory.newObject(KNOWN_RAW_PAYLOAD_STR))\n            .rawPayload(ByteBuffer.wrap(KNOWN_RAW_PAYLOAD_STR.getBytes()))\n            .build()", "var_name": "DESERIALIZED_MESSAGE"}, {"original_string": "private static final JsonObject KNOWN_MESSAGE_AS_JSON = JsonFactory.newObjectBuilder()\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_HEADERS, MESSAGE.getHeaders().toJson())\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_PAYLOAD, JsonFactory.newObject(KNOWN_RAW_PAYLOAD_STR))\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_MESSAGE_AS_JSON = JsonFactory.newObjectBuilder()\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_HEADERS, MESSAGE.getHeaders().toJson())\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_PAYLOAD, JsonFactory.newObject(KNOWN_RAW_PAYLOAD_STR))\n            .build()", "var_name": "KNOWN_MESSAGE_AS_JSON"}, {"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(Command.JsonFields.TYPE, SendFeatureMessage.TYPE)\n            .set(MessageCommand.JsonFields.JSON_THING_ID, THING_ID.toString())\n            .set(SendFeatureMessage.JSON_FEATURE_ID, FEATURE_ID)\n            .set(MessageCommand.JsonFields.JSON_MESSAGE, KNOWN_MESSAGE_AS_JSON)\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(Command.JsonFields.TYPE, SendFeatureMessage.TYPE)\n            .set(MessageCommand.JsonFields.JSON_THING_ID, THING_ID.toString())\n            .set(SendFeatureMessage.JSON_FEATURE_ID, FEATURE_ID)\n            .set(MessageCommand.JsonFields.JSON_MESSAGE, KNOWN_MESSAGE_AS_JSON)\n            .build()", "var_name": "KNOWN_JSON"}], "file": "signals/commands/messages/src/test/java/org/eclipse/ditto/signals/commands/messages/SendFeatureMessageTest.java"}, "test_case": {"identifier": "tryToCreateInstanceWithNonMatchingThingId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToCreateInstanceWithNonMatchingThingId() {\n        final ThingId notMatchingThingId = ThingId.of(THING_ID.getNamespace(), THING_ID.getName() + \"-nomatch\");\n        assertThatExceptionOfType(ThingIdInvalidException.class)\n                .isThrownBy(() -> SendFeatureMessage.of(notMatchingThingId, FEATURE_ID, MESSAGE, DITTO_HEADERS))\n                .withMessageContaining(\"-nomatch\")\n                .withNoCause();\n    }", "signature": "void tryToCreateInstanceWithNonMatchingThingId()", "full_signature": "@Test public void tryToCreateInstanceWithNonMatchingThingId()", "class_method_signature": "SendFeatureMessageTest.tryToCreateInstanceWithNonMatchingThingId()", "testcase": true, "constructor": false, "invocations": ["of", "getNamespace", "getName", "withNoCause", "withMessageContaining", "isThrownBy", "assertThatExceptionOfType", "of"]}, "focal_class": {"identifier": "SendFeatureMessage", "superclass": "extends AbstractMessageCommand<T, SendFeatureMessage<T>>", "interfaces": "implements WithFeatureId", "fields": [{"original_string": "public static final String NAME = \"featureMessage\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"featureMessage\"", "var_name": "NAME"}, {"original_string": "public static final String TYPE = TYPE_PREFIX + NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + NAME", "var_name": "TYPE"}, {"original_string": "static final JsonFieldDefinition<String> JSON_FEATURE_ID =\n            JsonFactory.newStringFieldDefinition(\"featureId\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2);", "modifier": "static final", "type": "JsonFieldDefinition<String>", "declarator": "JSON_FEATURE_ID =\n            JsonFactory.newStringFieldDefinition(\"featureId\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2)", "var_name": "JSON_FEATURE_ID"}, {"original_string": "private final String featureId;", "modifier": "private final", "type": "String", "declarator": "featureId", "var_name": "featureId"}], "methods": [{"identifier": "SendFeatureMessage", "parameters": "(final ThingId thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " SendFeatureMessage(final ThingId thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "full_signature": "private  SendFeatureMessage(final ThingId thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SendFeatureMessage.SendFeatureMessage(final ThingId thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "validateMessageFeatureId", "parameters": "(final String expectedFeatureId, final Message<?> message,\n            final DittoHeaders dittoHeaders)", "modifiers": "private static", "return": "void", "signature": "void validateMessageFeatureId(final String expectedFeatureId, final Message<?> message,\n            final DittoHeaders dittoHeaders)", "full_signature": "private static void validateMessageFeatureId(final String expectedFeatureId, final Message<?> message,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SendFeatureMessage.validateMessageFeatureId(final String expectedFeatureId, final Message<?> message,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "SendFeatureMessage<T>", "signature": "SendFeatureMessage<T> of(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static SendFeatureMessage<T> of(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SendFeatureMessage.of(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final ThingId thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SendFeatureMessage<T>", "signature": "SendFeatureMessage<T> of(final ThingId thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static SendFeatureMessage<T> of(final ThingId thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SendFeatureMessage.of(final ThingId thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SendFeatureMessage<?>", "signature": "SendFeatureMessage<?> fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static SendFeatureMessage<?> fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "SendFeatureMessage.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SendFeatureMessage<?>", "signature": "SendFeatureMessage<?> fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static SendFeatureMessage<?> fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "SendFeatureMessage.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getFeatureId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFeatureId()", "full_signature": "@Override public String getFeatureId()", "class_method_signature": "SendFeatureMessage.getFeatureId()", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "SendFeatureMessage", "signature": "SendFeatureMessage setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public SendFeatureMessage setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "SendFeatureMessage.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "appendPayload", "parameters": "(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> predicate)", "modifiers": "@Override protected", "return": "void", "signature": "void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> predicate)", "full_signature": "@Override protected void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> predicate)", "class_method_signature": "SendFeatureMessage.appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> predicate)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@SuppressWarnings(\"squid:S109\") @Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@SuppressWarnings(\"squid:S109\") @Override public int hashCode()", "class_method_signature": "SendFeatureMessage.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object obj)", "modifiers": "@SuppressWarnings(\"squid:MethodCyclomaticComplexity\") @Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object obj)", "full_signature": "@SuppressWarnings(\"squid:MethodCyclomaticComplexity\") @Override public boolean equals(@Nullable final Object obj)", "class_method_signature": "SendFeatureMessage.equals(@Nullable final Object obj)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(@Nullable final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(@Nullable final Object other)", "full_signature": "@Override protected boolean canEqual(@Nullable final Object other)", "class_method_signature": "SendFeatureMessage.canEqual(@Nullable final Object other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SendFeatureMessage.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/messages/src/main/java/org/eclipse/ditto/signals/commands/messages/SendFeatureMessage.java"}, "focal_method": {"identifier": "of", "parameters": "(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "SendFeatureMessage<T>", "body": "@Deprecated\n    public static <T> SendFeatureMessage<T> of(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders) {\n\n        return of(ThingId.of(thingId), featureId, message, dittoHeaders);\n    }", "signature": "SendFeatureMessage<T> of(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static SendFeatureMessage<T> of(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SendFeatureMessage.of(final String thingId,\n            final String featureId,\n            final Message<T> message,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["of", "of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}