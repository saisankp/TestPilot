{"test_class": {"identifier": "MigrationPathsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_CONFIGURATION_FILE_NAME = \"IF/generic/test/resources/deprecatedGenericWrapperV1ExampleConfigFile.xml\";", "modifier": "private static final", "type": "String", "declarator": "TEST_CONFIGURATION_FILE_NAME = \"IF/generic/test/resources/deprecatedGenericWrapperV1ExampleConfigFile.xml\"", "var_name": "TEST_CONFIGURATION_FILE_NAME"}, {"original_string": "private final MigrationPaths migrationPathsToTest;", "modifier": "private final", "type": "MigrationPaths", "declarator": "migrationPathsToTest", "var_name": "migrationPathsToTest"}], "file": "framework/generic/src/test/java/eu/planets_project/ifr/core/services/migration/genericwrapper1/MigrationPathsTest.java"}, "test_case": {"identifier": "testGetMigrationPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMigrationPath() throws Exception {\n\n        URI sourceFormat = new URI(\"info:test/lowercase\");\n        URI destinationFormat = new URI(\"info:test/uppercase\");\n        this.migrationPathsToTest.getMigrationPath(sourceFormat, destinationFormat);\n\n        // Verify that the opposite path does not exist in the configuration.\n        genericGetInstanceFailCheck(destinationFormat, sourceFormat);\n\n        sourceFormat = new URI(\"info:pronom/x-fmt/406\");\n        destinationFormat = new URI(\"info:pronom/fmt/18\");\n        this.migrationPathsToTest.getMigrationPath(sourceFormat, destinationFormat);\n\n        // Verify that the opposite path does not exist in the configuration.\n        genericGetInstanceFailCheck(destinationFormat, sourceFormat);\n    }", "signature": "void testGetMigrationPath()", "full_signature": "@Test public void testGetMigrationPath()", "class_method_signature": "MigrationPathsTest.testGetMigrationPath()", "testcase": true, "constructor": false, "invocations": ["getMigrationPath", "genericGetInstanceFailCheck", "getMigrationPath", "genericGetInstanceFailCheck"]}, "focal_class": {"identifier": "MigrationPaths", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HashMap<PathKey, MigrationPath> migrationPaths;", "modifier": "private", "type": "HashMap<PathKey, MigrationPath>", "declarator": "migrationPaths", "var_name": "migrationPaths"}], "methods": [{"identifier": "MigrationPaths", "parameters": "()", "modifiers": "public", "return": "", "signature": " MigrationPaths()", "full_signature": "public  MigrationPaths()", "class_method_signature": "MigrationPaths.MigrationPaths()", "testcase": false, "constructor": true}, {"identifier": "getMigrationPath", "parameters": "(URI sourceFormat,\n            URI destinationFormat)", "modifiers": "public", "return": "MigrationPath", "signature": "MigrationPath getMigrationPath(URI sourceFormat,\n            URI destinationFormat)", "full_signature": "public MigrationPath getMigrationPath(URI sourceFormat,\n            URI destinationFormat)", "class_method_signature": "MigrationPaths.getMigrationPath(URI sourceFormat,\n            URI destinationFormat)", "testcase": false, "constructor": false}, {"identifier": "addMigrationPath", "parameters": "(MigrationPath migrationPath)", "modifiers": "public", "return": "MigrationPath", "signature": "MigrationPath addMigrationPath(MigrationPath migrationPath)", "full_signature": "public MigrationPath addMigrationPath(MigrationPath migrationPath)", "class_method_signature": "MigrationPaths.addMigrationPath(MigrationPath migrationPath)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(List<MigrationPath> migrationpaths)", "modifiers": "public", "return": "void", "signature": "void addAll(List<MigrationPath> migrationpaths)", "full_signature": "public void addAll(List<MigrationPath> migrationpaths)", "class_method_signature": "MigrationPaths.addAll(List<MigrationPath> migrationpaths)", "testcase": false, "constructor": false}, {"identifier": "getAsPlanetsPaths", "parameters": "()", "modifiers": "public", "return": "List<eu.planets_project.services.datatypes.MigrationPath>", "signature": "List<eu.planets_project.services.datatypes.MigrationPath> getAsPlanetsPaths()", "full_signature": "public List<eu.planets_project.services.datatypes.MigrationPath> getAsPlanetsPaths()", "class_method_signature": "MigrationPaths.getAsPlanetsPaths()", "testcase": false, "constructor": false}], "file": "framework/generic/src/main/java/eu/planets_project/ifr/core/services/migration/genericwrapper1/MigrationPaths.java"}, "focal_method": {"identifier": "getMigrationPath", "parameters": "(URI sourceFormat,\n            URI destinationFormat)", "modifiers": "public", "return": "MigrationPath", "body": "public MigrationPath getMigrationPath(URI sourceFormat,\n            URI destinationFormat) throws NoSuchPathException {\n\n        final PathKey pathKey = new PathKey(sourceFormat, destinationFormat);\n        final MigrationPath migrationPath = this.migrationPaths.get(pathKey);\n        if (migrationPath == null) {\n            throw new NoSuchPathException(\n                    \"No migration path found for source format URI=\\\"\"\n                            + sourceFormat + \"\\\" and destination format URI=\\\"\"\n                            + destinationFormat + \"\\\"\");\n        }\n        return migrationPath;\n    }", "signature": "MigrationPath getMigrationPath(URI sourceFormat,\n            URI destinationFormat)", "full_signature": "public MigrationPath getMigrationPath(URI sourceFormat,\n            URI destinationFormat)", "class_method_signature": "MigrationPaths.getMigrationPath(URI sourceFormat,\n            URI destinationFormat)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 1025030, "url": "https://github.com/opf-labs/planets-suite", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 9, "size": 198462, "license": "licensed"}}