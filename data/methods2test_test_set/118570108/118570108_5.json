{"test_class": {"identifier": "SessionVoteTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static SessionVote sessionVote;", "modifier": "private static", "type": "SessionVote", "declarator": "sessionVote", "var_name": "sessionVote"}], "file": "KubernetesJavaWorkshop/vote-app/src/test/java/io/microprofile/showcase/vote/api/SessionVoteTest.java"}, "test_case": {"identifier": "testUpdateRating", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateRating() {\n        Attendee jonathanDoe = sessionVote.registerAttendee(new Attendee(\"Jonathan Doe\"));\n        String id = jonathanDoe.getId();\n        SessionRating originalRating = new SessionRating(\"session1\", id, 5);\n        originalRating = sessionVote.rateSession(originalRating);\n\n        Attendee jonathanDoe2 = sessionVote.registerAttendee(new Attendee(\"Jonathan Doe2\"));\n        String id2 = jonathanDoe2.getId();\n\n        SessionRating updatedRating = new SessionRating(originalRating.getId(), \"session2\", id2, 7);\n\n        // API method under test\n        updatedRating = sessionVote.updateRating(updatedRating.getId(), updatedRating);\n\n        assertEquals(\"Unexpected session in updated rating\", \"session2\", updatedRating.getSession());\n        assertEquals(\"Unexpected attendee ID in updated rating\", id2, updatedRating.getAttendeeId());\n        assertEquals(\"Unexpected rating value in updated rating\", 7, updatedRating.getRating());\n\n        // Now check that the SessionRating stored in the system matches the updated SessionRating that was returned\n        assertTrue(\"The session vote service is missing the newly-updated session rating\", sessionVote.getAllSessionRatings().contains(updatedRating));\n    }", "signature": "void testUpdateRating()", "full_signature": "@Test public void testUpdateRating()", "class_method_signature": "SessionVoteTest.testUpdateRating()", "testcase": true, "constructor": false, "invocations": ["registerAttendee", "getId", "rateSession", "registerAttendee", "getId", "getId", "updateRating", "getId", "assertEquals", "getSession", "assertEquals", "getAttendeeId", "assertEquals", "getRating", "assertTrue", "contains", "getAllSessionRatings"]}, "focal_class": {"identifier": "SessionVote", "superclass": "", "interfaces": "", "fields": [{"original_string": "private @Inject @NonPersistent AttendeeDAO hashMapAttendeeDAO;", "modifier": "private @Inject @NonPersistent", "type": "AttendeeDAO", "declarator": "hashMapAttendeeDAO", "var_name": "hashMapAttendeeDAO"}, {"original_string": "private @Inject @Persistent AttendeeDAO couchDBAttendeeDAO;", "modifier": "private @Inject @Persistent", "type": "AttendeeDAO", "declarator": "couchDBAttendeeDAO", "var_name": "couchDBAttendeeDAO"}, {"original_string": "private @Inject @NonPersistent SessionRatingDAO hashMapSessionRatingDAO;", "modifier": "private @Inject @NonPersistent", "type": "SessionRatingDAO", "declarator": "hashMapSessionRatingDAO", "var_name": "hashMapSessionRatingDAO"}, {"original_string": "private @Inject @Persistent SessionRatingDAO couchDBSessionRatingDAO;", "modifier": "private @Inject @Persistent", "type": "SessionRatingDAO", "declarator": "couchDBSessionRatingDAO", "var_name": "couchDBSessionRatingDAO"}, {"original_string": "private AttendeeDAO selectedAttendeeDAO;", "modifier": "private", "type": "AttendeeDAO", "declarator": "selectedAttendeeDAO", "var_name": "selectedAttendeeDAO"}, {"original_string": "private SessionRatingDAO selectedSessionRatingDAO;", "modifier": "private", "type": "SessionRatingDAO", "declarator": "selectedSessionRatingDAO", "var_name": "selectedSessionRatingDAO"}], "methods": [{"identifier": "connectToDAO", "parameters": "()", "modifiers": "@PostConstruct private", "return": "void", "signature": "void connectToDAO()", "full_signature": "@PostConstruct private void connectToDAO()", "class_method_signature": "SessionVote.connectToDAO()", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "()", "modifiers": "@GET @Path(\"/\") @Produces(TEXT_HTML) public", "return": "String", "signature": "String info()", "full_signature": "@GET @Path(\"/\") @Produces(TEXT_HTML) public String info()", "class_method_signature": "SessionVote.info()", "testcase": false, "constructor": false}, {"identifier": "nessProbe", "parameters": "()", "modifiers": "@GET @Path(\"/nessProbe\") @Produces(TEXT_PLAIN) public", "return": "Response", "signature": "Response nessProbe()", "full_signature": "@GET @Path(\"/nessProbe\") @Produces(TEXT_PLAIN) public Response nessProbe()", "class_method_signature": "SessionVote.nessProbe()", "testcase": false, "constructor": false}, {"identifier": "setAttendeeSessionRating", "parameters": "(AttendeeDAO attendee, SessionRatingDAO rating)", "modifiers": "public", "return": "void", "signature": "void setAttendeeSessionRating(AttendeeDAO attendee, SessionRatingDAO rating)", "full_signature": "public void setAttendeeSessionRating(AttendeeDAO attendee, SessionRatingDAO rating)", "class_method_signature": "SessionVote.setAttendeeSessionRating(AttendeeDAO attendee, SessionRatingDAO rating)", "testcase": false, "constructor": false}, {"identifier": "registerAttendee", "parameters": "(Attendee name)", "modifiers": "@POST @Path(\"/attendee\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public", "return": "Attendee", "signature": "Attendee registerAttendee(Attendee name)", "full_signature": "@POST @Path(\"/attendee\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public Attendee registerAttendee(Attendee name)", "class_method_signature": "SessionVote.registerAttendee(Attendee name)", "testcase": false, "constructor": false}, {"identifier": "updateAttendee", "parameters": "(@PathParam(\"id\") String id, Attendee attendee)", "modifiers": "@PUT @Path(\"/attendee/{id}\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public", "return": "Attendee", "signature": "Attendee updateAttendee(@PathParam(\"id\") String id, Attendee attendee)", "full_signature": "@PUT @Path(\"/attendee/{id}\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public Attendee updateAttendee(@PathParam(\"id\") String id, Attendee attendee)", "class_method_signature": "SessionVote.updateAttendee(@PathParam(\"id\") String id, Attendee attendee)", "testcase": false, "constructor": false}, {"identifier": "getAllAttendees", "parameters": "()", "modifiers": "@GET @Path(\"/attendee\") @Produces(APPLICATION_JSON) public", "return": "Collection<Attendee>", "signature": "Collection<Attendee> getAllAttendees()", "full_signature": "@GET @Path(\"/attendee\") @Produces(APPLICATION_JSON) public Collection<Attendee> getAllAttendees()", "class_method_signature": "SessionVote.getAllAttendees()", "testcase": false, "constructor": false}, {"identifier": "getAttendee", "parameters": "(@PathParam(\"id\") String id)", "modifiers": "@GET @Path(\"/attendee/{id}\") @Produces(APPLICATION_JSON) public", "return": "Attendee", "signature": "Attendee getAttendee(@PathParam(\"id\") String id)", "full_signature": "@GET @Path(\"/attendee/{id}\") @Produces(APPLICATION_JSON) public Attendee getAttendee(@PathParam(\"id\") String id)", "class_method_signature": "SessionVote.getAttendee(@PathParam(\"id\") String id)", "testcase": false, "constructor": false}, {"identifier": "deleteAttendee", "parameters": "(@PathParam(\"id\") String id)", "modifiers": "@DELETE @Path(\"/attendee/{id}\") @Produces(APPLICATION_JSON) public", "return": "void", "signature": "void deleteAttendee(@PathParam(\"id\") String id)", "full_signature": "@DELETE @Path(\"/attendee/{id}\") @Produces(APPLICATION_JSON) public void deleteAttendee(@PathParam(\"id\") String id)", "class_method_signature": "SessionVote.deleteAttendee(@PathParam(\"id\") String id)", "testcase": false, "constructor": false}, {"identifier": "rateSession", "parameters": "(SessionRating sessionRating)", "modifiers": "@POST @Path(\"/rate\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public", "return": "SessionRating", "signature": "SessionRating rateSession(SessionRating sessionRating)", "full_signature": "@POST @Path(\"/rate\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public SessionRating rateSession(SessionRating sessionRating)", "class_method_signature": "SessionVote.rateSession(SessionRating sessionRating)", "testcase": false, "constructor": false}, {"identifier": "getAllSessionRatings", "parameters": "()", "modifiers": "@GET @Path(\"/rate\") @Produces(APPLICATION_JSON) public", "return": "Collection<SessionRating>", "signature": "Collection<SessionRating> getAllSessionRatings()", "full_signature": "@GET @Path(\"/rate\") @Produces(APPLICATION_JSON) public Collection<SessionRating> getAllSessionRatings()", "class_method_signature": "SessionVote.getAllSessionRatings()", "testcase": false, "constructor": false}, {"identifier": "updateRating", "parameters": "(@PathParam(\"id\") String id, SessionRating newRating)", "modifiers": "@PUT @Path(\"/rate/{id}\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public", "return": "SessionRating", "signature": "SessionRating updateRating(@PathParam(\"id\") String id, SessionRating newRating)", "full_signature": "@PUT @Path(\"/rate/{id}\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public SessionRating updateRating(@PathParam(\"id\") String id, SessionRating newRating)", "class_method_signature": "SessionVote.updateRating(@PathParam(\"id\") String id, SessionRating newRating)", "testcase": false, "constructor": false}, {"identifier": "getRating", "parameters": "(@PathParam(\"id\") String id)", "modifiers": "@GET @Path(\"/rate/{id}\") @Produces(APPLICATION_JSON) public", "return": "SessionRating", "signature": "SessionRating getRating(@PathParam(\"id\") String id)", "full_signature": "@GET @Path(\"/rate/{id}\") @Produces(APPLICATION_JSON) public SessionRating getRating(@PathParam(\"id\") String id)", "class_method_signature": "SessionVote.getRating(@PathParam(\"id\") String id)", "testcase": false, "constructor": false}, {"identifier": "deleteRating", "parameters": "(@PathParam(\"id\") String id)", "modifiers": "@DELETE @Path(\"/rate/{id}\") @Produces(APPLICATION_JSON) public", "return": "void", "signature": "void deleteRating(@PathParam(\"id\") String id)", "full_signature": "@DELETE @Path(\"/rate/{id}\") @Produces(APPLICATION_JSON) public void deleteRating(@PathParam(\"id\") String id)", "class_method_signature": "SessionVote.deleteRating(@PathParam(\"id\") String id)", "testcase": false, "constructor": false}, {"identifier": "allSessionVotes", "parameters": "(@QueryParam(\"sessionId\") String sessionId)", "modifiers": "@GET @Path(\"/ratingsBySession\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public", "return": "Collection<SessionRating>", "signature": "Collection<SessionRating> allSessionVotes(@QueryParam(\"sessionId\") String sessionId)", "full_signature": "@GET @Path(\"/ratingsBySession\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public Collection<SessionRating> allSessionVotes(@QueryParam(\"sessionId\") String sessionId)", "class_method_signature": "SessionVote.allSessionVotes(@QueryParam(\"sessionId\") String sessionId)", "testcase": false, "constructor": false}, {"identifier": "sessionRatingAverage", "parameters": "(@QueryParam(\"sessionId\") String sessionId)", "modifiers": "@GET @Path(\"/averageRatingBySession\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public", "return": "double", "signature": "double sessionRatingAverage(@QueryParam(\"sessionId\") String sessionId)", "full_signature": "@GET @Path(\"/averageRatingBySession\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public double sessionRatingAverage(@QueryParam(\"sessionId\") String sessionId)", "class_method_signature": "SessionVote.sessionRatingAverage(@QueryParam(\"sessionId\") String sessionId)", "testcase": false, "constructor": false}, {"identifier": "votesByAttendee", "parameters": "(@QueryParam(\"attendeeId\") String attendeeId)", "modifiers": "@GET @Path(\"/ratingsByAttendee\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public", "return": "Collection<SessionRating>", "signature": "Collection<SessionRating> votesByAttendee(@QueryParam(\"attendeeId\") String attendeeId)", "full_signature": "@GET @Path(\"/ratingsByAttendee\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public Collection<SessionRating> votesByAttendee(@QueryParam(\"attendeeId\") String attendeeId)", "class_method_signature": "SessionVote.votesByAttendee(@QueryParam(\"attendeeId\") String attendeeId)", "testcase": false, "constructor": false}, {"identifier": "clearAllAttendees", "parameters": "()", "modifiers": "", "return": "void", "signature": "void clearAllAttendees()", "full_signature": " void clearAllAttendees()", "class_method_signature": "SessionVote.clearAllAttendees()", "testcase": false, "constructor": false}, {"identifier": "clearAllRatings", "parameters": "()", "modifiers": "", "return": "void", "signature": "void clearAllRatings()", "full_signature": " void clearAllRatings()", "class_method_signature": "SessionVote.clearAllRatings()", "testcase": false, "constructor": false}], "file": "KubernetesJavaWorkshop/vote-app/src/main/java/io/microprofile/showcase/vote/api/SessionVote.java"}, "focal_method": {"identifier": "updateRating", "parameters": "(@PathParam(\"id\") String id, SessionRating newRating)", "modifiers": "@PUT @Path(\"/rate/{id}\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public", "return": "SessionRating", "body": "@PUT\n    @Path(\"/rate/{id}\")\n    @Produces(APPLICATION_JSON)\n    @Consumes(APPLICATION_JSON)\n    public SessionRating updateRating(@PathParam(\"id\") String id, SessionRating newRating) {\n\n        SessionRating original = selectedSessionRatingDAO.getRating(id);\n        if (original == null) {\n            throw new NotFoundException(\"Session Rating not found: \" + id);\n        }\n        original.setSession(newRating.getSession());\n        original.setRating(newRating.getRating());\n        Attendee attendee = selectedAttendeeDAO.getAttendee(newRating.getAttendeeId());\n        if (attendee == null) {\n            throw new BadRequestException(\"Invalid attendee id: \" + newRating.getAttendeeId());\n        }\n        original.setAttendee(attendee.getId());\n\n        SessionRating updated = selectedSessionRatingDAO.updateRating(original);\n\n        return updated;\n    }", "signature": "SessionRating updateRating(@PathParam(\"id\") String id, SessionRating newRating)", "full_signature": "@PUT @Path(\"/rate/{id}\") @Produces(APPLICATION_JSON) @Consumes(APPLICATION_JSON) public SessionRating updateRating(@PathParam(\"id\") String id, SessionRating newRating)", "class_method_signature": "SessionVote.updateRating(@PathParam(\"id\") String id, SessionRating newRating)", "testcase": false, "constructor": false, "invocations": ["getRating", "setSession", "getSession", "setRating", "getRating", "getAttendee", "getAttendeeId", "getAttendeeId", "setAttendee", "getId", "updateRating"]}, "repository": {"repo_id": 118570108, "url": "https://github.com/IBMDevConnect/IBMCodeDay-2018", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 7, "size": 66791, "license": "licensed"}}