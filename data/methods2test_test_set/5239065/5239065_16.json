{"test_class": {"identifier": "NoAuthExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final CamelContext context = new DefaultCamelContext();", "modifier": "final", "type": "CamelContext", "declarator": "context = new DefaultCamelContext()", "var_name": "context"}], "file": "exposure-engine/auth-manager/src/test/java/com/alu/e3/auth/executor/NoAuthExecutorTest.java"}, "test_case": {"identifier": "testNoAuth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testNoAuth() {\n\t\t\n\t\tExchange exchange = new DefaultExchange(context);\n\t\t\n\t\tApi api = new Api();\n\t\tapi.setId(\"api3234\");\n\n\t\tMockAuthDataAccess mockDA = new MockAuthDataAccess(null, null, null);\n\t\tNoAuthExecutor executor = new NoAuthExecutor(mockDA);\n\t\t\n\t\tAuthReport authReport = executor.checkAllowed(exchange, api);\n\t\t\n\t\tassertNotNull(\"This authentication should have succeeded\", authReport.getAuthIdentity());\n\t}", "signature": "void testNoAuth()", "full_signature": "@Test public void testNoAuth()", "class_method_signature": "NoAuthExecutorTest.testNoAuth()", "testcase": true, "constructor": false, "invocations": ["setId", "checkAllowed", "assertNotNull", "getAuthIdentity"]}, "focal_class": {"identifier": "NoAuthExecutor", "superclass": "", "interfaces": "implements IAuthExecutor", "fields": [{"original_string": "private static final CategoryLogger logger = CategoryLoggerFactory.getLogger(NoAuthExecutor.class, Category.AUTH);", "modifier": "private static final", "type": "CategoryLogger", "declarator": "logger = CategoryLoggerFactory.getLogger(NoAuthExecutor.class, Category.AUTH)", "var_name": "logger"}, {"original_string": "private IAuthDataAccess dataAccess;", "modifier": "private", "type": "IAuthDataAccess", "declarator": "dataAccess", "var_name": "dataAccess"}], "methods": [{"identifier": "NoAuthExecutor", "parameters": "(IAuthDataAccess dataAccess)", "modifiers": "public", "return": "", "signature": " NoAuthExecutor(IAuthDataAccess dataAccess)", "full_signature": "public  NoAuthExecutor(IAuthDataAccess dataAccess)", "class_method_signature": "NoAuthExecutor.NoAuthExecutor(IAuthDataAccess dataAccess)", "testcase": false, "constructor": true}, {"identifier": "checkAllowed", "parameters": "(Exchange exchange, Api api)", "modifiers": "@Override public", "return": "AuthReport", "signature": "AuthReport checkAllowed(Exchange exchange, Api api)", "full_signature": "@Override public AuthReport checkAllowed(Exchange exchange, Api api)", "class_method_signature": "NoAuthExecutor.checkAllowed(Exchange exchange, Api api)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "AuthType", "signature": "AuthType getType()", "full_signature": "@Override public AuthType getType()", "class_method_signature": "NoAuthExecutor.getType()", "testcase": false, "constructor": false}, {"identifier": "getErrorCode", "parameters": "()", "modifiers": "@Override public", "return": "GatewayExceptionCode", "signature": "GatewayExceptionCode getErrorCode()", "full_signature": "@Override public GatewayExceptionCode getErrorCode()", "class_method_signature": "NoAuthExecutor.getErrorCode()", "testcase": false, "constructor": false}], "file": "exposure-engine/auth-manager/src/main/java/com/alu/e3/auth/executor/NoAuthExecutor.java"}, "focal_method": {"identifier": "checkAllowed", "parameters": "(Exchange exchange, Api api)", "modifiers": "@Override public", "return": "AuthReport", "body": "@Override\n\tpublic AuthReport checkAllowed(Exchange exchange, Api api) {\n\t\tif(logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"Check if the API allows NoAuth\");\n\t\t}\n\t\treturn  this.dataAccess.checkAllowed(api);\n\t}", "signature": "AuthReport checkAllowed(Exchange exchange, Api api)", "full_signature": "@Override public AuthReport checkAllowed(Exchange exchange, Api api)", "class_method_signature": "NoAuthExecutor.checkAllowed(Exchange exchange, Api api)", "testcase": false, "constructor": false, "invocations": ["isDebugEnabled", "debug", "checkAllowed"]}, "repository": {"repo_id": 5239065, "url": "https://github.com/apigrove/apigrove", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 118, "size": 215144, "license": "licensed"}}