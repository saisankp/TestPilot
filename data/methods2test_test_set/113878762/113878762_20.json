{"test_class": {"identifier": "TxMakerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TxMaker tx = DBMaker.newMemoryDB().makeTxMaker();", "modifier": "", "type": "TxMaker", "declarator": "tx = DBMaker.newMemoryDB().makeTxMaker()", "var_name": "tx"}], "file": "migration/third-party/org.mapdb/src/test/java/org/mapdb/TxMakerTest.java"}, "test_case": {"identifier": "commit_conflict", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void commit_conflict(){\n        DB db0 = tx.makeTx();\n        long recid = db0.getEngine().put(111, Serializer.INTEGER_SERIALIZER);\n        db0.commit();\n        DB db1 = tx.makeTx();\n        db1.getEngine().update(recid, 222, Serializer.INTEGER_SERIALIZER);\n        try{\n            tx.makeTx().getEngine().update(recid, 333, Serializer.INTEGER_SERIALIZER);\n            fail(\"should throw exception\");\n        }catch(TxRollbackException e){\n            //expected\n        }\n\n        //original transaction should complete well\n        db1.commit();\n\n        assertEquals(Integer.valueOf(222), tx.makeTx().getEngine().get(recid, Serializer.INTEGER_SERIALIZER));\n\n    }", "signature": "void commit_conflict()", "full_signature": "@Test public void commit_conflict()", "class_method_signature": "TxMakerTest.commit_conflict()", "testcase": true, "constructor": false, "invocations": ["makeTx", "put", "getEngine", "commit", "makeTx", "update", "getEngine", "update", "getEngine", "makeTx", "fail", "commit", "assertEquals", "valueOf", "get", "getEngine", "makeTx"]}, "focal_class": {"identifier": "TxMaker", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Fun.Tuple2<Object, Serializer> DELETED = new Fun.Tuple2(null, Serializer.STRING_SERIALIZER);", "modifier": "protected static final", "type": "Fun.Tuple2<Object, Serializer>", "declarator": "DELETED = new Fun.Tuple2(null, Serializer.STRING_SERIALIZER)", "var_name": "DELETED"}, {"original_string": "protected Engine engine;", "modifier": "protected", "type": "Engine", "declarator": "engine", "var_name": "engine"}, {"original_string": "protected final Object lock = new Object();", "modifier": "protected final", "type": "Object", "declarator": "lock = new Object()", "var_name": "lock"}, {"original_string": "protected final LongMap<TxEngine> globalMod = new LongHashMap<TxEngine>();", "modifier": "protected final", "type": "LongMap<TxEngine>", "declarator": "globalMod = new LongHashMap<TxEngine>()", "var_name": "globalMod"}], "methods": [{"identifier": "TxMaker", "parameters": "(Engine engine)", "modifiers": "public", "return": "", "signature": " TxMaker(Engine engine)", "full_signature": "public  TxMaker(Engine engine)", "class_method_signature": "TxMaker.TxMaker(Engine engine)", "testcase": false, "constructor": true}, {"identifier": "makeTx", "parameters": "()", "modifiers": "public", "return": "DB", "signature": "DB makeTx()", "full_signature": "public DB makeTx()", "class_method_signature": "TxMaker.makeTx()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "TxMaker.close()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(TxBlock txBlock)", "modifiers": "public", "return": "void", "signature": "void execute(TxBlock txBlock)", "full_signature": "public void execute(TxBlock txBlock)", "class_method_signature": "TxMaker.execute(TxBlock txBlock)", "testcase": false, "constructor": false}], "file": "migration/third-party/org.mapdb/src/main/java/org/mapdb/TxMaker.java"}, "focal_method": {"identifier": "makeTx", "parameters": "()", "modifiers": "public", "return": "DB", "body": "public DB makeTx(){\n        return new DB(new TxEngine(engine));\n    }", "signature": "DB makeTx()", "full_signature": "public DB makeTx()", "class_method_signature": "TxMaker.makeTx()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 113878762, "url": "https://github.com/crossminer/scava", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 16, "size": 1903904, "license": "licensed"}}