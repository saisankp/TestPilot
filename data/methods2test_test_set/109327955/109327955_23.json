{"test_class": {"identifier": "QuickFixJAutoConfigFailureAnalyzerTest", "superclass": "", "interfaces": "", "fields": [], "file": "quickfixj-spring-boot-starter/src/test/java/io/allune/quickfixj/spring/boot/starter/failureanalyzer/QuickFixJAutoConfigFailureAnalyzerTest.java"}, "test_case": {"identifier": "shouldAnalyzeSettingsNotFoundException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldAnalyzeSettingsNotFoundException() {\n\n\t\t// Given\n\t\tQuickFixJAutoConfigFailureAnalyzer analyzer = new QuickFixJAutoConfigFailureAnalyzer();\n\t\tSettingsNotFoundException exception = new SettingsNotFoundException(\"Error\", new RuntimeException(new RuntimeException(\"Error message\")));\n\n\t\t// When\n\t\tFailureAnalysis analyze = analyzer.analyze(null, exception);\n\n\t\tassertThat(analyze.getAction()).contains(\"Please provide a QuickFIX/J settings file\");\n\t\tassertThat(analyze.getDescription()).contains(\"The QuickFIX/J settings file could not be found: Error message\");\n\t\tassertThat(analyze.getCause()).isEqualTo(exception);\n\t}", "signature": "void shouldAnalyzeSettingsNotFoundException()", "full_signature": "@Test public void shouldAnalyzeSettingsNotFoundException()", "class_method_signature": "QuickFixJAutoConfigFailureAnalyzerTest.shouldAnalyzeSettingsNotFoundException()", "testcase": true, "constructor": false, "invocations": ["analyze", "contains", "assertThat", "getAction", "contains", "assertThat", "getDescription", "isEqualTo", "assertThat", "getCause"]}, "focal_class": {"identifier": "QuickFixJAutoConfigFailureAnalyzer", "superclass": "extends AbstractFailureAnalyzer<QuickFixJBaseException>", "interfaces": "", "fields": [], "methods": [{"identifier": "analyze", "parameters": "(Throwable rootFailure, QuickFixJBaseException cause)", "modifiers": "@Override protected", "return": "FailureAnalysis", "signature": "FailureAnalysis analyze(Throwable rootFailure, QuickFixJBaseException cause)", "full_signature": "@Override protected FailureAnalysis analyze(Throwable rootFailure, QuickFixJBaseException cause)", "class_method_signature": "QuickFixJAutoConfigFailureAnalyzer.analyze(Throwable rootFailure, QuickFixJBaseException cause)", "testcase": false, "constructor": false}, {"identifier": "getRootCauseMessage", "parameters": "(QuickFixJBaseException cause)", "modifiers": "private", "return": "String", "signature": "String getRootCauseMessage(QuickFixJBaseException cause)", "full_signature": "private String getRootCauseMessage(QuickFixJBaseException cause)", "class_method_signature": "QuickFixJAutoConfigFailureAnalyzer.getRootCauseMessage(QuickFixJBaseException cause)", "testcase": false, "constructor": false}], "file": "quickfixj-spring-boot-starter/src/main/java/io/allune/quickfixj/spring/boot/starter/failureanalyzer/QuickFixJAutoConfigFailureAnalyzer.java"}, "focal_method": {"identifier": "analyze", "parameters": "(Throwable rootFailure, QuickFixJBaseException cause)", "modifiers": "@Override protected", "return": "FailureAnalysis", "body": "@Override\n\tprotected FailureAnalysis analyze(Throwable rootFailure, QuickFixJBaseException cause) {\n\t\tString descriptionMessage = cause.getMessage();\n\t\tString actionMessage = cause.getMessage();\n\t\tString rootCauseMessage = getRootCauseMessage(cause);\n\n\t\tif (cause instanceof ConfigurationException) {\n\t\t\tdescriptionMessage = \"A configuration error has been detected in the QuickFIX/J settings provided: \" + rootCauseMessage;\n\t\t\tactionMessage = \"Please configure your QuickFIX/J settings as per the documentation: https://www.quickfixj.org/usermanual/2.1.0/usage/configuration.html\";\n\t\t}\n\n\t\tif (cause instanceof SettingsNotFoundException) {\n\t\t\tdescriptionMessage = \"The QuickFIX/J settings file could not be found: \" + rootCauseMessage;\n\t\t\tactionMessage = \"Please provide a QuickFIX/J settings file on the property 'config' for the client/server section in your configuration file.\";\n\t\t}\n\n\t\treturn new FailureAnalysis(descriptionMessage, actionMessage, cause);\n\t}", "signature": "FailureAnalysis analyze(Throwable rootFailure, QuickFixJBaseException cause)", "full_signature": "@Override protected FailureAnalysis analyze(Throwable rootFailure, QuickFixJBaseException cause)", "class_method_signature": "QuickFixJAutoConfigFailureAnalyzer.analyze(Throwable rootFailure, QuickFixJBaseException cause)", "testcase": false, "constructor": false, "invocations": ["getMessage", "getMessage", "getRootCauseMessage"]}, "repository": {"repo_id": 109327955, "url": "https://github.com/esanchezros/quickfixj-spring-boot-starter", "stars": 27, "created": "11/2/2017 11:06:07 PM +00:00", "updates": "2020-01-15T15:51:21+00:00", "fork": "False", "license": "licensed"}}