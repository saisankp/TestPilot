{"test_class": {"identifier": "DfsFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "automator/src/test/java/com/stardust/automator/filter/DfsFilterTest.java"}, "test_case": {"identifier": "filter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void filter() throws Exception {\n        DfsFilter filter = new RandomDfsFilter();\n        UiObject root = new TestUiObject(10);\n        List<UiObject> list = filter.filter(root);\n        for (UiObject uiObject : list) {\n            if (root != uiObject)\n                uiObject.recycle();\n        }\n        System.out.println(TestUiObject.max);\n        assertEquals(1, TestUiObject.count);\n    }", "signature": "void filter()", "full_signature": "@Test public void filter()", "class_method_signature": "DfsFilterTest.filter()", "testcase": true, "constructor": false, "invocations": ["filter", "recycle", "println", "assertEquals"]}, "focal_class": {"identifier": "DfsFilter", "superclass": "", "interfaces": "implements ListFilter, Filter", "fields": [], "methods": [{"identifier": "filter", "parameters": "(List<UiObject> nodes)", "modifiers": "@Override public", "return": "List<UiObject>", "signature": "List<UiObject> filter(List<UiObject> nodes)", "full_signature": "@Override public List<UiObject> filter(List<UiObject> nodes)", "class_method_signature": "DfsFilter.filter(List<UiObject> nodes)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(UiObject node)", "modifiers": "public", "return": "List<UiObject>", "signature": "List<UiObject> filter(UiObject node)", "full_signature": "public List<UiObject> filter(UiObject node)", "class_method_signature": "DfsFilter.filter(UiObject node)", "testcase": false, "constructor": false}, {"identifier": "filterChildren", "parameters": "(UiObject parent, List<UiObject> list)", "modifiers": "private", "return": "void", "signature": "void filterChildren(UiObject parent, List<UiObject> list)", "full_signature": "private void filterChildren(UiObject parent, List<UiObject> list)", "class_method_signature": "DfsFilter.filterChildren(UiObject parent, List<UiObject> list)", "testcase": false, "constructor": false}, {"identifier": "isIncluded", "parameters": "(UiObject nodeInfo)", "modifiers": "protected abstract", "return": "boolean", "signature": "boolean isIncluded(UiObject nodeInfo)", "full_signature": "protected abstract boolean isIncluded(UiObject nodeInfo)", "class_method_signature": "DfsFilter.isIncluded(UiObject nodeInfo)", "testcase": false, "constructor": false}], "file": "automator/src/main/java/com/stardust/automator/filter/DfsFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(List<UiObject> nodes)", "modifiers": "@Override public", "return": "List<UiObject>", "body": "@Override\n    public List<UiObject> filter(List<UiObject> nodes) {\n        ArrayList<UiObject> list = new ArrayList<>();\n        for (UiObject node : nodes) {\n            if (isIncluded(node)) {\n                list.add(node);\n            }\n            filterChildren(node, list);\n        }\n        return list;\n    }", "signature": "List<UiObject> filter(List<UiObject> nodes)", "full_signature": "@Override public List<UiObject> filter(List<UiObject> nodes)", "class_method_signature": "DfsFilter.filter(List<UiObject> nodes)", "testcase": false, "constructor": false, "invocations": ["isIncluded", "add", "filterChildren"]}, "repository": {"repo_id": 106979588, "url": "https://github.com/feifadaima/https-github.com-hyb1996-NoRootScriptDroid", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 24, "size": 106032, "license": "licensed"}}