{"test_class": {"identifier": "MainTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final File testOutputBaseDir = new File(\"target/test-output/MainTest\");", "modifier": "final", "type": "File", "declarator": "testOutputBaseDir = new File(\"target/test-output/MainTest\")", "var_name": "testOutputBaseDir"}, {"original_string": "final File cacheBaseDir = new File(testOutputBaseDir, \"oakpal-cache\");", "modifier": "final", "type": "File", "declarator": "cacheBaseDir = new File(testOutputBaseDir, \"oakpal-cache\")", "var_name": "cacheBaseDir"}], "file": "cli/src/test/java/net/adamcin/oakpal/cli/MainTest.java"}, "test_case": {"identifier": "testSimpleEchoDir", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSimpleEchoDir() {\n        Main.main(new String[]{\"-c\", cacheBaseDir.getPath(), \"-f\", \"src/test/resources/opears/simpleEcho\"});\n    }", "signature": "void testSimpleEchoDir()", "full_signature": "@Test public void testSimpleEchoDir()", "class_method_signature": "MainTest.testSimpleEchoDir()", "testcase": true, "constructor": false, "invocations": ["main", "getPath"]}, "focal_class": {"identifier": "Main", "superclass": "", "interfaces": "implements Console", "fields": [{"original_string": "private final File cwd;", "modifier": "private final", "type": "File", "declarator": "cwd", "var_name": "cwd"}, {"original_string": "private final Map<String, String> env;", "modifier": "private final", "type": "Map<String, String>", "declarator": "env", "var_name": "env"}, {"original_string": "private final PrintStream stdout;", "modifier": "private final", "type": "PrintStream", "declarator": "stdout", "var_name": "stdout"}, {"original_string": "private final PrintStream stderr;", "modifier": "private final", "type": "PrintStream", "declarator": "stderr", "var_name": "stderr"}, {"original_string": "private final Map<File, DisposablePrinter> printers = new HashMap<>();", "modifier": "private final", "type": "Map<File, DisposablePrinter>", "declarator": "printers = new HashMap<>()", "var_name": "printers"}, {"original_string": "static final Function<PrintStream, PrintStream> DEFAULT_SWAP_OUT = err -> {\n        final PrintStream out = System.out;\n        System.setOut(err);\n        return out;\n    };", "modifier": "static final", "type": "Function<PrintStream, PrintStream>", "declarator": "DEFAULT_SWAP_OUT = err -> {\n        final PrintStream out = System.out;\n        System.setOut(err);\n        return out;\n    }", "var_name": "DEFAULT_SWAP_OUT"}, {"original_string": "private static @NotNull IntConsumer exitFunction = Runtime.getRuntime()::exit;", "modifier": "private static @NotNull", "type": "IntConsumer", "declarator": "exitFunction = Runtime.getRuntime()::exit", "var_name": "exitFunction"}, {"original_string": "private static @NotNull Function<PrintStream, PrintStream> swapOutFunction = DEFAULT_SWAP_OUT;", "modifier": "private static @NotNull", "type": "Function<PrintStream, PrintStream>", "declarator": "swapOutFunction = DEFAULT_SWAP_OUT", "var_name": "swapOutFunction"}], "methods": [{"identifier": "Main", "parameters": "(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr)", "modifiers": "", "return": "", "signature": " Main(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr)", "full_signature": "  Main(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr)", "class_method_signature": "Main.Main(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr)", "testcase": false, "constructor": true}, {"identifier": "getCwd", "parameters": "()", "modifiers": "@Override public @NotNull", "return": "File", "signature": "File getCwd()", "full_signature": "@Override public @NotNull File getCwd()", "class_method_signature": "Main.getCwd()", "testcase": false, "constructor": false}, {"identifier": "getEnv", "parameters": "()", "modifiers": "@Override public @NotNull", "return": "Map<String, String>", "signature": "Map<String, String> getEnv()", "full_signature": "@Override public @NotNull Map<String, String> getEnv()", "class_method_signature": "Main.getEnv()", "testcase": false, "constructor": false}, {"identifier": "printLine", "parameters": "(final @NotNull Object object)", "modifiers": "@Override public", "return": "IO<Nothing>", "signature": "IO<Nothing> printLine(final @NotNull Object object)", "full_signature": "@Override public IO<Nothing> printLine(final @NotNull Object object)", "class_method_signature": "Main.printLine(final @NotNull Object object)", "testcase": false, "constructor": false}, {"identifier": "printLineErr", "parameters": "(final Object object)", "modifiers": "@Override public", "return": "IO<Nothing>", "signature": "IO<Nothing> printLineErr(final Object object)", "full_signature": "@Override public IO<Nothing> printLineErr(final Object object)", "class_method_signature": "Main.printLineErr(final Object object)", "testcase": false, "constructor": false}, {"identifier": "openPrinter", "parameters": "(final @NotNull File outFile)", "modifiers": "@Override public", "return": "Result<DisposablePrinter>", "signature": "Result<DisposablePrinter> openPrinter(final @NotNull File outFile)", "full_signature": "@Override public Result<DisposablePrinter> openPrinter(final @NotNull File outFile)", "class_method_signature": "Main.openPrinter(final @NotNull File outFile)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "Main.dispose()", "testcase": false, "constructor": false}, {"identifier": "doMain", "parameters": "(final @NotNull String[] args)", "modifiers": "", "return": "int", "signature": "int doMain(final @NotNull String[] args)", "full_signature": " int doMain(final @NotNull String[] args)", "class_method_signature": "Main.doMain(final @NotNull String[] args)", "testcase": false, "constructor": false}, {"identifier": "setExitFunction", "parameters": "(final @NotNull IntConsumer exitFunction)", "modifiers": "public static", "return": "void", "signature": "void setExitFunction(final @NotNull IntConsumer exitFunction)", "full_signature": "public static void setExitFunction(final @NotNull IntConsumer exitFunction)", "class_method_signature": "Main.setExitFunction(final @NotNull IntConsumer exitFunction)", "testcase": false, "constructor": false}, {"identifier": "setSwapOutFunction", "parameters": "(final @NotNull Function<PrintStream, PrintStream> swapOutFunction)", "modifiers": "public static", "return": "void", "signature": "void setSwapOutFunction(final @NotNull Function<PrintStream, PrintStream> swapOutFunction)", "full_signature": "public static void setSwapOutFunction(final @NotNull Function<PrintStream, PrintStream> swapOutFunction)", "class_method_signature": "Main.setSwapOutFunction(final @NotNull Function<PrintStream, PrintStream> swapOutFunction)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(final String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(final String[] args)", "full_signature": "public static void main(final String[] args)", "class_method_signature": "Main.main(final String[] args)", "testcase": false, "constructor": false}], "file": "cli/src/main/java/net/adamcin/oakpal/cli/Main.java"}, "focal_method": {"identifier": "Main", "parameters": "(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr)", "modifiers": "", "return": "", "body": "Main(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr) {\n        this.cwd = cwd;\n        this.env = env;\n        this.stdout = stdout;\n        this.stderr = stderr;\n    }", "signature": " Main(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr)", "full_signature": "  Main(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr)", "class_method_signature": "Main.Main(final @NotNull File cwd,\n         final @NotNull Map<String, String> env,\n         final @NotNull PrintStream stdout,\n         final @NotNull PrintStream stderr)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}