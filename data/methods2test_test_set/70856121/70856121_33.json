{"test_class": {"identifier": "ClusterResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String CLUSTER_NAME = \"testcluster\";", "modifier": "static final", "type": "String", "declarator": "CLUSTER_NAME = \"testcluster\"", "var_name": "CLUSTER_NAME"}, {"original_string": "static final String PARTITIONER = \"org.apache.cassandra.dht.RandomPartitioner\";", "modifier": "static final", "type": "String", "declarator": "PARTITIONER = \"org.apache.cassandra.dht.RandomPartitioner\"", "var_name": "PARTITIONER"}, {"original_string": "static final String SEED_HOST = \"TestHost\";", "modifier": "static final", "type": "String", "declarator": "SEED_HOST = \"TestHost\"", "var_name": "SEED_HOST"}, {"original_string": "static final URI SAMPLE_URI = URI.create(\"http://reaper_host/cluster/\");", "modifier": "static final", "type": "URI", "declarator": "SAMPLE_URI = URI.create(\"http://reaper_host/cluster/\")", "var_name": "SAMPLE_URI"}, {"original_string": "static final String I_DO_EXIST = \"i_do_exist\";", "modifier": "static final", "type": "String", "declarator": "I_DO_EXIST = \"i_do_exist\"", "var_name": "I_DO_EXIST"}, {"original_string": "static final String I_DONT_EXIST = \"i_dont_exist\";", "modifier": "static final", "type": "String", "declarator": "I_DONT_EXIST = \"i_dont_exist\"", "var_name": "I_DONT_EXIST"}, {"original_string": "static final String JMX_USERNAME = \"foo\";", "modifier": "static final", "type": "String", "declarator": "JMX_USERNAME = \"foo\"", "var_name": "JMX_USERNAME"}, {"original_string": "static final String JMX_PASSWORD = \"bar\";", "modifier": "static final", "type": "String", "declarator": "JMX_PASSWORD = \"bar\"", "var_name": "JMX_PASSWORD"}, {"original_string": "private static final String STCS = \"SizeTieredCompactionStrategy\";", "modifier": "private static final", "type": "String", "declarator": "STCS = \"SizeTieredCompactionStrategy\"", "var_name": "STCS"}, {"original_string": "private static final ExecutorService EXECUTOR = Executors.newSingleThreadExecutor();", "modifier": "private static final", "type": "ExecutorService", "declarator": "EXECUTOR = Executors.newSingleThreadExecutor()", "var_name": "EXECUTOR"}], "file": "src/server/src/test/java/io/cassandrareaper/resources/ClusterResourceTest.java"}, "test_case": {"identifier": "testGetClusters_multiple_ordered_by_name", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetClusters_multiple_ordered_by_name() throws ReaperException {\n    final MockObjects mocks = initMocks();\n\n    Cluster cluster = Cluster.builder()\n        .withName(CLUSTER_NAME)\n        .withSeedHosts(ImmutableSet.of(SEED_HOST))\n        .withState(Cluster.State.ACTIVE)\n        .build();\n\n    mocks.context.storage.addCluster(cluster);\n\n    cluster = Cluster.builder()\n        .withName(\"abc\")\n        .withSeedHosts(ImmutableSet.of(\"host2\"))\n        .withState(Cluster.State.ACTIVE)\n        .build();\n\n    mocks.context.storage.addCluster(cluster);\n\n    ClusterResource clusterResource = new ClusterResource(mocks.context, mocks.cryptograph, EXECUTOR);\n    Response response = clusterResource.getClusterList(Optional.empty());\n    Assertions.assertThat(response.getStatus()).isEqualTo(HttpStatus.OK_200);\n    List<String> clusterNames = (List<String>) response.getEntity();\n    Assertions.assertThat(clusterNames).hasSize(2);\n    Assertions.assertThat(clusterNames).containsExactly(\"abc\", CLUSTER_NAME);\n  }", "signature": "void testGetClusters_multiple_ordered_by_name()", "full_signature": "@Test public void testGetClusters_multiple_ordered_by_name()", "class_method_signature": "ClusterResourceTest.testGetClusters_multiple_ordered_by_name()", "testcase": true, "constructor": false, "invocations": ["initMocks", "build", "withState", "withSeedHosts", "withName", "builder", "of", "addCluster", "build", "withState", "withSeedHosts", "withName", "builder", "of", "addCluster", "getClusterList", "empty", "isEqualTo", "assertThat", "getStatus", "getEntity", "hasSize", "assertThat", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "ClusterResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ClusterResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ClusterResource.class)", "var_name": "LOG"}, {"original_string": "private final AppContext context;", "modifier": "private final", "type": "AppContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final ExecutorService executor;", "modifier": "private final", "type": "ExecutorService", "declarator": "executor", "var_name": "executor"}, {"original_string": "private final ClusterRepairScheduler clusterRepairScheduler;", "modifier": "private final", "type": "ClusterRepairScheduler", "declarator": "clusterRepairScheduler", "var_name": "clusterRepairScheduler"}, {"original_string": "private final ClusterFacade clusterFacade;", "modifier": "private final", "type": "ClusterFacade", "declarator": "clusterFacade", "var_name": "clusterFacade"}, {"original_string": "private final Cryptograph cryptograph;", "modifier": "private final", "type": "Cryptograph", "declarator": "cryptograph", "var_name": "cryptograph"}], "methods": [{"identifier": "ClusterResource", "parameters": "(AppContext context, Cryptograph cryptograph, ExecutorService executor)", "modifiers": "public", "return": "", "signature": " ClusterResource(AppContext context, Cryptograph cryptograph, ExecutorService executor)", "full_signature": "public  ClusterResource(AppContext context, Cryptograph cryptograph, ExecutorService executor)", "class_method_signature": "ClusterResource.ClusterResource(AppContext context, Cryptograph cryptograph, ExecutorService executor)", "testcase": false, "constructor": true}, {"identifier": "getClusterList", "parameters": "(@QueryParam(\"seedHost\") Optional<String> seedHost)", "modifiers": "@GET public", "return": "Response", "signature": "Response getClusterList(@QueryParam(\"seedHost\") Optional<String> seedHost)", "full_signature": "@GET public Response getClusterList(@QueryParam(\"seedHost\") Optional<String> seedHost)", "class_method_signature": "ClusterResource.getClusterList(@QueryParam(\"seedHost\") Optional<String> seedHost)", "testcase": false, "constructor": false}, {"identifier": "getCluster", "parameters": "(\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"limit\") Optional<Integer> limit)", "modifiers": "@GET @Path(\"/{cluster_name}\") public", "return": "Response", "signature": "Response getCluster(\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"limit\") Optional<Integer> limit)", "full_signature": "@GET @Path(\"/{cluster_name}\") public Response getCluster(\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"limit\") Optional<Integer> limit)", "class_method_signature": "ClusterResource.getCluster(\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"limit\") Optional<Integer> limit)", "testcase": false, "constructor": false}, {"identifier": "getClusterTables", "parameters": "(@PathParam(\"cluster_name\") String clusterName)", "modifiers": "@GET @Path(\"/{cluster_name}/tables\") public", "return": "Response", "signature": "Response getClusterTables(@PathParam(\"cluster_name\") String clusterName)", "full_signature": "@GET @Path(\"/{cluster_name}/tables\") public Response getClusterTables(@PathParam(\"cluster_name\") String clusterName)", "class_method_signature": "ClusterResource.getClusterTables(@PathParam(\"cluster_name\") String clusterName)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateCluster", "parameters": "(\n      @Context UriInfo uriInfo,\n      @QueryParam(\"seedHost\") Optional<String> seedHost,\n      @QueryParam(\"jmxPort\") Optional<Integer> jmxPort)", "modifiers": "@POST public", "return": "Response", "signature": "Response addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @QueryParam(\"seedHost\") Optional<String> seedHost,\n      @QueryParam(\"jmxPort\") Optional<Integer> jmxPort)", "full_signature": "@POST public Response addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @QueryParam(\"seedHost\") Optional<String> seedHost,\n      @QueryParam(\"jmxPort\") Optional<Integer> jmxPort)", "class_method_signature": "ClusterResource.addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @QueryParam(\"seedHost\") Optional<String> seedHost,\n      @QueryParam(\"jmxPort\") Optional<Integer> jmxPort)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateCluster", "parameters": "(\n      @Context UriInfo uriInfo,\n      @FormParam(\"seedHost\") Optional<String> seedHost,\n      @FormParam(\"jmxPort\") Optional<Integer> jmxPort,\n      @FormParam(\"jmxUsername\") Optional<String> jmxUsername,\n      @FormParam(\"jmxPassword\") Optional<String> jmxPassword)", "modifiers": "@POST @Path(\"/auth\") public", "return": "Response", "signature": "Response addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @FormParam(\"seedHost\") Optional<String> seedHost,\n      @FormParam(\"jmxPort\") Optional<Integer> jmxPort,\n      @FormParam(\"jmxUsername\") Optional<String> jmxUsername,\n      @FormParam(\"jmxPassword\") Optional<String> jmxPassword)", "full_signature": "@POST @Path(\"/auth\") public Response addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @FormParam(\"seedHost\") Optional<String> seedHost,\n      @FormParam(\"jmxPort\") Optional<Integer> jmxPort,\n      @FormParam(\"jmxUsername\") Optional<String> jmxUsername,\n      @FormParam(\"jmxPassword\") Optional<String> jmxPassword)", "class_method_signature": "ClusterResource.addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @FormParam(\"seedHost\") Optional<String> seedHost,\n      @FormParam(\"jmxPort\") Optional<Integer> jmxPort,\n      @FormParam(\"jmxUsername\") Optional<String> jmxUsername,\n      @FormParam(\"jmxPassword\") Optional<String> jmxPassword)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateCluster", "parameters": "(\n      @Context UriInfo uriInfo,\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"seedHost\") Optional<String> seedHost,\n      @QueryParam(\"jmxPort\") Optional<Integer> jmxPort)", "modifiers": "@PUT @Path(\"/{cluster_name}\") public", "return": "Response", "signature": "Response addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"seedHost\") Optional<String> seedHost,\n      @QueryParam(\"jmxPort\") Optional<Integer> jmxPort)", "full_signature": "@PUT @Path(\"/{cluster_name}\") public Response addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"seedHost\") Optional<String> seedHost,\n      @QueryParam(\"jmxPort\") Optional<Integer> jmxPort)", "class_method_signature": "ClusterResource.addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"seedHost\") Optional<String> seedHost,\n      @QueryParam(\"jmxPort\") Optional<Integer> jmxPort)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateCluster", "parameters": "(\n      @Context UriInfo uriInfo,\n      @PathParam(\"cluster_name\") String clusterName,\n      @FormParam(\"seedHost\") Optional<String> seedHost,\n      @FormParam(\"jmxPort\") Optional<Integer> jmxPort,\n      @FormParam(\"jmxUsername\") Optional<String> jmxUsername,\n      @FormParam(\"jmxPassword\") Optional<String> jmxPassword)", "modifiers": "@PUT @Path(\"/auth/{cluster_name}\") public", "return": "Response", "signature": "Response addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @PathParam(\"cluster_name\") String clusterName,\n      @FormParam(\"seedHost\") Optional<String> seedHost,\n      @FormParam(\"jmxPort\") Optional<Integer> jmxPort,\n      @FormParam(\"jmxUsername\") Optional<String> jmxUsername,\n      @FormParam(\"jmxPassword\") Optional<String> jmxPassword)", "full_signature": "@PUT @Path(\"/auth/{cluster_name}\") public Response addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @PathParam(\"cluster_name\") String clusterName,\n      @FormParam(\"seedHost\") Optional<String> seedHost,\n      @FormParam(\"jmxPort\") Optional<Integer> jmxPort,\n      @FormParam(\"jmxUsername\") Optional<String> jmxUsername,\n      @FormParam(\"jmxPassword\") Optional<String> jmxPassword)", "class_method_signature": "ClusterResource.addOrUpdateCluster(\n      @Context UriInfo uriInfo,\n      @PathParam(\"cluster_name\") String clusterName,\n      @FormParam(\"seedHost\") Optional<String> seedHost,\n      @FormParam(\"jmxPort\") Optional<Integer> jmxPort,\n      @FormParam(\"jmxUsername\") Optional<String> jmxUsername,\n      @FormParam(\"jmxPassword\") Optional<String> jmxPassword)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateCluster", "parameters": "(\n      UriInfo uriInfo,\n      Optional<String> clusterName,\n      Optional<String> seedHost,\n      Optional<Integer> jmxPort,\n      Optional<String> jmxUsername,\n      Optional<String> jmxPassword)", "modifiers": "private", "return": "Response", "signature": "Response addOrUpdateCluster(\n      UriInfo uriInfo,\n      Optional<String> clusterName,\n      Optional<String> seedHost,\n      Optional<Integer> jmxPort,\n      Optional<String> jmxUsername,\n      Optional<String> jmxPassword)", "full_signature": "private Response addOrUpdateCluster(\n      UriInfo uriInfo,\n      Optional<String> clusterName,\n      Optional<String> seedHost,\n      Optional<Integer> jmxPort,\n      Optional<String> jmxUsername,\n      Optional<String> jmxPassword)", "class_method_signature": "ClusterResource.addOrUpdateCluster(\n      UriInfo uriInfo,\n      Optional<String> clusterName,\n      Optional<String> seedHost,\n      Optional<Integer> jmxPort,\n      Optional<String> jmxUsername,\n      Optional<String> jmxPassword)", "testcase": false, "constructor": false}, {"identifier": "findClusterWithSeedHost", "parameters": "(String seedHost,\n                                                   Optional<Integer> jmxPort,\n                                                   Optional<JmxCredentials> jmxCredentials)", "modifiers": "public", "return": "Optional<Cluster>", "signature": "Optional<Cluster> findClusterWithSeedHost(String seedHost,\n                                                   Optional<Integer> jmxPort,\n                                                   Optional<JmxCredentials> jmxCredentials)", "full_signature": "public Optional<Cluster> findClusterWithSeedHost(String seedHost,\n                                                   Optional<Integer> jmxPort,\n                                                   Optional<JmxCredentials> jmxCredentials)", "class_method_signature": "ClusterResource.findClusterWithSeedHost(String seedHost,\n                                                   Optional<Integer> jmxPort,\n                                                   Optional<JmxCredentials> jmxCredentials)", "testcase": false, "constructor": false}, {"identifier": "updateClusterSeeds", "parameters": "(Cluster cluster, String seedHosts)", "modifiers": "private", "return": "Cluster", "signature": "Cluster updateClusterSeeds(Cluster cluster, String seedHosts)", "full_signature": "private Cluster updateClusterSeeds(Cluster cluster, String seedHosts)", "class_method_signature": "ClusterResource.updateClusterSeeds(Cluster cluster, String seedHosts)", "testcase": false, "constructor": false}, {"identifier": "deleteCluster", "parameters": "(\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"force\") Optional<Boolean> force)", "modifiers": "@DELETE @Path(\"/{cluster_name}\") public", "return": "Response", "signature": "Response deleteCluster(\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"force\") Optional<Boolean> force)", "full_signature": "@DELETE @Path(\"/{cluster_name}\") public Response deleteCluster(\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"force\") Optional<Boolean> force)", "class_method_signature": "ClusterResource.deleteCluster(\n      @PathParam(\"cluster_name\") String clusterName,\n      @QueryParam(\"force\") Optional<Boolean> force)", "testcase": false, "constructor": false}, {"identifier": "getEndpointState", "parameters": "(Cluster cluster, Set<String> seeds)", "modifiers": "private", "return": "Callable<NodesStatus>", "signature": "Callable<NodesStatus> getEndpointState(Cluster cluster, Set<String> seeds)", "full_signature": "private Callable<NodesStatus> getEndpointState(Cluster cluster, Set<String> seeds)", "class_method_signature": "ClusterResource.getEndpointState(Cluster cluster, Set<String> seeds)", "testcase": false, "constructor": false}, {"identifier": "getNodesStatus", "parameters": "(Cluster cluster)", "modifiers": "private", "return": "NodesStatus", "signature": "NodesStatus getNodesStatus(Cluster cluster)", "full_signature": "private NodesStatus getNodesStatus(Cluster cluster)", "class_method_signature": "ClusterResource.getNodesStatus(Cluster cluster)", "testcase": false, "constructor": false}, {"identifier": "parseSeedHosts", "parameters": "(String seedHost)", "modifiers": "static", "return": "Set<String>", "signature": "Set<String> parseSeedHosts(String seedHost)", "full_signature": "static Set<String> parseSeedHosts(String seedHost)", "class_method_signature": "ClusterResource.parseSeedHosts(String seedHost)", "testcase": false, "constructor": false}, {"identifier": "parseSeedHost", "parameters": "(String seedHost)", "modifiers": "static", "return": "String", "signature": "String parseSeedHost(String seedHost)", "full_signature": "static String parseSeedHost(String seedHost)", "class_method_signature": "ClusterResource.parseSeedHost(String seedHost)", "testcase": false, "constructor": false}, {"identifier": "parseClusterNameFromSeedHost", "parameters": "(String seedHost)", "modifiers": "static", "return": "Optional<String>", "signature": "Optional<String> parseClusterNameFromSeedHost(String seedHost)", "full_signature": "static Optional<String> parseClusterNameFromSeedHost(String seedHost)", "class_method_signature": "ClusterResource.parseClusterNameFromSeedHost(String seedHost)", "testcase": false, "constructor": false}], "file": "src/server/src/main/java/io/cassandrareaper/resources/ClusterResource.java"}, "focal_method": {"identifier": "getClusterList", "parameters": "(@QueryParam(\"seedHost\") Optional<String> seedHost)", "modifiers": "@GET public", "return": "Response", "body": "@GET\n  public Response getClusterList(@QueryParam(\"seedHost\") Optional<String> seedHost) {\n    LOG.debug(\"get cluster list called\");\n\n    Collection<String> clusters = context.storage.getClusters()\n        .stream()\n        .filter(c -> !seedHost.isPresent() || c.getSeedHosts().contains(seedHost.get()))\n        .sorted()\n        .map(c -> c.getName())\n        .collect(Collectors.toList());\n\n    return Response.ok().entity(clusters).build();\n  }", "signature": "Response getClusterList(@QueryParam(\"seedHost\") Optional<String> seedHost)", "full_signature": "@GET public Response getClusterList(@QueryParam(\"seedHost\") Optional<String> seedHost)", "class_method_signature": "ClusterResource.getClusterList(@QueryParam(\"seedHost\") Optional<String> seedHost)", "testcase": false, "constructor": false, "invocations": ["debug", "collect", "map", "sorted", "filter", "stream", "getClusters", "isPresent", "contains", "getSeedHosts", "get", "getName", "toList", "build", "entity", "ok"]}, "repository": {"repo_id": 70856121, "url": "https://github.com/thelastpickle/cassandra-reaper", "language": "Java", "is_fork": false, "fork_count": 156, "stargazer_count": 353, "size": 43662, "license": "licensed"}}