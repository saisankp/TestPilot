{"test_class": {"identifier": "RangesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final long totalLengthOfContent = 500;", "modifier": "private final", "type": "long", "declarator": "totalLengthOfContent = 500", "var_name": "totalLengthOfContent"}, {"original_string": "private HeaderDelegate<Ranges> headerDelegate;", "modifier": "private", "type": "HeaderDelegate<Ranges>", "declarator": "headerDelegate", "var_name": "headerDelegate"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/header/RangesTest.java"}, "test_case": {"identifier": "testValueOf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValueOf() {\n        Ranges ranges = new Ranges(newArrayList(new Range(49, 100), new Range(150, 250)));\n        when(headerDelegate.fromString(\"bytes=49-100,150-250\")).thenReturn(ranges);\n\n        assertSame(ranges, Ranges.valueOf(\"bytes=49-100,150-250\"));\n    }", "signature": "void testValueOf()", "full_signature": "@Test public void testValueOf()", "class_method_signature": "RangesTest.testValueOf()", "testcase": true, "constructor": false, "invocations": ["newArrayList", "thenReturn", "when", "fromString", "assertSame", "valueOf"]}, "focal_class": {"identifier": "Ranges", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<Range> ranges;", "modifier": "private final", "type": "List<Range>", "declarator": "ranges", "var_name": "ranges"}], "methods": [{"identifier": "valueOf", "parameters": "(String range)", "modifiers": "public static", "return": "Ranges", "signature": "Ranges valueOf(String range)", "full_signature": "public static Ranges valueOf(String range)", "class_method_signature": "Ranges.valueOf(String range)", "testcase": false, "constructor": false}, {"identifier": "Ranges", "parameters": "(List<Range> ranges)", "modifiers": "", "return": "", "signature": " Ranges(List<Range> ranges)", "full_signature": "  Ranges(List<Range> ranges)", "class_method_signature": "Ranges.Ranges(List<Range> ranges)", "testcase": false, "constructor": true}, {"identifier": "getRanges", "parameters": "()", "modifiers": "public", "return": "List<Range>", "signature": "List<Range> getRanges()", "full_signature": "public List<Range> getRanges()", "class_method_signature": "Ranges.getRanges()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Ranges.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Ranges.hashCode()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/header/Ranges.java"}, "focal_method": {"identifier": "valueOf", "parameters": "(String range)", "modifiers": "public static", "return": "Ranges", "body": "public static Ranges valueOf(String range) {\n        return RuntimeDelegate.getInstance().createHeaderDelegate(Ranges.class).fromString(range);\n    }", "signature": "Ranges valueOf(String range)", "full_signature": "public static Ranges valueOf(String range)", "class_method_signature": "Ranges.valueOf(String range)", "testcase": false, "constructor": false, "invocations": ["fromString", "createHeaderDelegate", "getInstance"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}