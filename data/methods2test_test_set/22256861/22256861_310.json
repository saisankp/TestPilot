{"test_class": {"identifier": "VolumeDescriptorRecordTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MemoryCacheImageOutputStream _ios;", "modifier": "private", "type": "MemoryCacheImageOutputStream", "declarator": "_ios", "var_name": "_ios"}, {"original_string": "private String _prefix;", "modifier": "private", "type": "String", "declarator": "_prefix", "var_name": "_prefix"}, {"original_string": "private CeosFileReader _reader;", "modifier": "private", "type": "CeosFileReader", "declarator": "_reader", "var_name": "_reader"}], "file": "s3tbx-alos-reader/src/test/java/org/esa/s3tbx/dataio/ceos/records/VolumeDescriptorRecordTest.java"}, "test_case": {"identifier": "testAssignMetadata", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAssignMetadata() throws IOException,\n            IllegalCeosFormatException {\n        final VolumeDescriptorRecord record = new VolumeDescriptorRecord(_reader, _prefix.length());\n        final MetadataElement volumeMetadata = new MetadataElement(\"VOLUME_DESCRIPTOR\");\n\n        record.assignMetadataTo(volumeMetadata, \"suffix\");\n\n        assertEquals(23, volumeMetadata.getNumAttributes());\n        assertEquals(0, volumeMetadata.getNumElements());\n        assertMetadata(volumeMetadata);\n    }", "signature": "void testAssignMetadata()", "full_signature": "@Test public void testAssignMetadata()", "class_method_signature": "VolumeDescriptorRecordTest.testAssignMetadata()", "testcase": true, "constructor": false, "invocations": ["length", "assignMetadataTo", "assertEquals", "getNumAttributes", "assertEquals", "getNumElements", "assertMetadata"]}, "focal_class": {"identifier": "VolumeDescriptorRecord", "superclass": "extends BaseRecord", "interfaces": "", "fields": [{"original_string": "private final String _asciiCodeCharacter;", "modifier": "private final", "type": "String", "declarator": "_asciiCodeCharacter", "var_name": "_asciiCodeCharacter"}, {"original_string": "private final String _specificationNumber;", "modifier": "private final", "type": "String", "declarator": "_specificationNumber", "var_name": "_specificationNumber"}, {"original_string": "private final String _specificationRevisionNumber;", "modifier": "private final", "type": "String", "declarator": "_specificationRevisionNumber", "var_name": "_specificationRevisionNumber"}, {"original_string": "private final String _recordFormatRevisionNumer;", "modifier": "private final", "type": "String", "declarator": "_recordFormatRevisionNumer", "var_name": "_recordFormatRevisionNumer"}, {"original_string": "private final String _softwareVersionNumber;", "modifier": "private final", "type": "String", "declarator": "_softwareVersionNumber", "var_name": "_softwareVersionNumber"}, {"original_string": "private final String _logicalVolumeID;", "modifier": "private final", "type": "String", "declarator": "_logicalVolumeID", "var_name": "_logicalVolumeID"}, {"original_string": "private final String _volumeSetID;", "modifier": "private final", "type": "String", "declarator": "_volumeSetID", "var_name": "_volumeSetID"}, {"original_string": "private final int _volumeNumberOfThisVolumeDescritorRecord;", "modifier": "private final", "type": "int", "declarator": "_volumeNumberOfThisVolumeDescritorRecord", "var_name": "_volumeNumberOfThisVolumeDescritorRecord"}, {"original_string": "private final int _numberOfFirstFileFollowingTheVolumeDirectoryFile;", "modifier": "private final", "type": "int", "declarator": "_numberOfFirstFileFollowingTheVolumeDirectoryFile", "var_name": "_numberOfFirstFileFollowingTheVolumeDirectoryFile"}, {"original_string": "private final int _logicalVolumeNumberInVolumeSet;", "modifier": "private final", "type": "int", "declarator": "_logicalVolumeNumberInVolumeSet", "var_name": "_logicalVolumeNumberInVolumeSet"}, {"original_string": "private final String _logicalVolumePreparationDate;", "modifier": "private final", "type": "String", "declarator": "_logicalVolumePreparationDate", "var_name": "_logicalVolumePreparationDate"}, {"original_string": "private final String _logicalVolumePreparationTime;", "modifier": "private final", "type": "String", "declarator": "_logicalVolumePreparationTime", "var_name": "_logicalVolumePreparationTime"}, {"original_string": "private String _logicalVolumePreparationCountry;", "modifier": "private", "type": "String", "declarator": "_logicalVolumePreparationCountry", "var_name": "_logicalVolumePreparationCountry"}, {"original_string": "private String _logicalVolumePreparingAgent;", "modifier": "private", "type": "String", "declarator": "_logicalVolumePreparingAgent", "var_name": "_logicalVolumePreparingAgent"}, {"original_string": "private String _logicalVolumePreparingFacility;", "modifier": "private", "type": "String", "declarator": "_logicalVolumePreparingFacility", "var_name": "_logicalVolumePreparingFacility"}, {"original_string": "private int _numberOfFilepointerRecords;", "modifier": "private", "type": "int", "declarator": "_numberOfFilepointerRecords", "var_name": "_numberOfFilepointerRecords"}, {"original_string": "private int _numberOfRecords;", "modifier": "private", "type": "int", "declarator": "_numberOfRecords", "var_name": "_numberOfRecords"}], "methods": [{"identifier": "VolumeDescriptorRecord", "parameters": "(CeosFileReader reader)", "modifiers": "public", "return": "", "signature": " VolumeDescriptorRecord(CeosFileReader reader)", "full_signature": "public  VolumeDescriptorRecord(CeosFileReader reader)", "class_method_signature": "VolumeDescriptorRecord.VolumeDescriptorRecord(CeosFileReader reader)", "testcase": false, "constructor": true}, {"identifier": "VolumeDescriptorRecord", "parameters": "(CeosFileReader reader, long startPos)", "modifiers": "public", "return": "", "signature": " VolumeDescriptorRecord(CeosFileReader reader, long startPos)", "full_signature": "public  VolumeDescriptorRecord(CeosFileReader reader, long startPos)", "class_method_signature": "VolumeDescriptorRecord.VolumeDescriptorRecord(CeosFileReader reader, long startPos)", "testcase": false, "constructor": true}, {"identifier": "getAsciiCodeCharacter", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAsciiCodeCharacter()", "full_signature": "public String getAsciiCodeCharacter()", "class_method_signature": "VolumeDescriptorRecord.getAsciiCodeCharacter()", "testcase": false, "constructor": false}, {"identifier": "getSpecificationNumber", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSpecificationNumber()", "full_signature": "public String getSpecificationNumber()", "class_method_signature": "VolumeDescriptorRecord.getSpecificationNumber()", "testcase": false, "constructor": false}, {"identifier": "getSpecificationRevisionNumber", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSpecificationRevisionNumber()", "full_signature": "public String getSpecificationRevisionNumber()", "class_method_signature": "VolumeDescriptorRecord.getSpecificationRevisionNumber()", "testcase": false, "constructor": false}, {"identifier": "getRecordFormatRevisionNumer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRecordFormatRevisionNumer()", "full_signature": "public String getRecordFormatRevisionNumer()", "class_method_signature": "VolumeDescriptorRecord.getRecordFormatRevisionNumer()", "testcase": false, "constructor": false}, {"identifier": "getSoftwareVersionNumber", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSoftwareVersionNumber()", "full_signature": "public String getSoftwareVersionNumber()", "class_method_signature": "VolumeDescriptorRecord.getSoftwareVersionNumber()", "testcase": false, "constructor": false}, {"identifier": "getLogicalVolumeID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogicalVolumeID()", "full_signature": "public String getLogicalVolumeID()", "class_method_signature": "VolumeDescriptorRecord.getLogicalVolumeID()", "testcase": false, "constructor": false}, {"identifier": "getVolumeSetID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVolumeSetID()", "full_signature": "public String getVolumeSetID()", "class_method_signature": "VolumeDescriptorRecord.getVolumeSetID()", "testcase": false, "constructor": false}, {"identifier": "getVolumeNumberOfThisVolumeDescritorRecord", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getVolumeNumberOfThisVolumeDescritorRecord()", "full_signature": "public int getVolumeNumberOfThisVolumeDescritorRecord()", "class_method_signature": "VolumeDescriptorRecord.getVolumeNumberOfThisVolumeDescritorRecord()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfFirstFileFollowingTheVolumeDirectoryFile", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfFirstFileFollowingTheVolumeDirectoryFile()", "full_signature": "public int getNumberOfFirstFileFollowingTheVolumeDirectoryFile()", "class_method_signature": "VolumeDescriptorRecord.getNumberOfFirstFileFollowingTheVolumeDirectoryFile()", "testcase": false, "constructor": false}, {"identifier": "getLogicalVolumeNumberInVolumeSet", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLogicalVolumeNumberInVolumeSet()", "full_signature": "public int getLogicalVolumeNumberInVolumeSet()", "class_method_signature": "VolumeDescriptorRecord.getLogicalVolumeNumberInVolumeSet()", "testcase": false, "constructor": false}, {"identifier": "getLogicalVolumePreparationDate", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogicalVolumePreparationDate()", "full_signature": "public String getLogicalVolumePreparationDate()", "class_method_signature": "VolumeDescriptorRecord.getLogicalVolumePreparationDate()", "testcase": false, "constructor": false}, {"identifier": "getLogicalVolumePreparationTime", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogicalVolumePreparationTime()", "full_signature": "public String getLogicalVolumePreparationTime()", "class_method_signature": "VolumeDescriptorRecord.getLogicalVolumePreparationTime()", "testcase": false, "constructor": false}, {"identifier": "getLogicalVolumePreparationCountry", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogicalVolumePreparationCountry()", "full_signature": "public String getLogicalVolumePreparationCountry()", "class_method_signature": "VolumeDescriptorRecord.getLogicalVolumePreparationCountry()", "testcase": false, "constructor": false}, {"identifier": "getLogicalVolumePreparingAgent", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogicalVolumePreparingAgent()", "full_signature": "public String getLogicalVolumePreparingAgent()", "class_method_signature": "VolumeDescriptorRecord.getLogicalVolumePreparingAgent()", "testcase": false, "constructor": false}, {"identifier": "getLogicalVolumePreparingFacility", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogicalVolumePreparingFacility()", "full_signature": "public String getLogicalVolumePreparingFacility()", "class_method_signature": "VolumeDescriptorRecord.getLogicalVolumePreparingFacility()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfFilepointerRecords", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfFilepointerRecords()", "full_signature": "public int getNumberOfFilepointerRecords()", "class_method_signature": "VolumeDescriptorRecord.getNumberOfFilepointerRecords()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfRecords", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfRecords()", "full_signature": "public int getNumberOfRecords()", "class_method_signature": "VolumeDescriptorRecord.getNumberOfRecords()", "testcase": false, "constructor": false}, {"identifier": "assignMetadataTo", "parameters": "(final MetadataElement elem, final String suffix)", "modifiers": "@Override public", "return": "void", "signature": "void assignMetadataTo(final MetadataElement elem, final String suffix)", "full_signature": "@Override public void assignMetadataTo(final MetadataElement elem, final String suffix)", "class_method_signature": "VolumeDescriptorRecord.assignMetadataTo(final MetadataElement elem, final String suffix)", "testcase": false, "constructor": false}], "file": "s3tbx-alos-reader/src/main/java/org/esa/s3tbx/dataio/ceos/records/VolumeDescriptorRecord.java"}, "focal_method": {"identifier": "assignMetadataTo", "parameters": "(final MetadataElement elem, final String suffix)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void assignMetadataTo(final MetadataElement elem, final String suffix) {\n//        final MetadataElement elem = createMetadataElement(\"VolumeDescriptorRecord\", suffix);\n//        root.addElement(elem);\n\n        super.assignMetadataTo(elem, suffix);\n\n        elem.setAttributeString(\"Ascii code character\", _asciiCodeCharacter);\n        elem.setAttributeString(\"Specification number\", _specificationNumber);\n        elem.setAttributeString(\"Specification revision number\", _specificationRevisionNumber);\n        elem.setAttributeString(\"Record format revision number\", _recordFormatRevisionNumer);\n        elem.setAttributeString(\"Software version number\", _softwareVersionNumber);\n        elem.setAttributeString(\"Logical volume ID\", _logicalVolumeID);\n        elem.setAttributeString(\"Volume set ID\", _volumeSetID);\n        elem.setAttributeInt(\"Volume number of this volume descriptor record\",\n                             _volumeNumberOfThisVolumeDescritorRecord);\n        elem.setAttributeInt(\"Number of first file following the volume directory file\",\n                             _numberOfFirstFileFollowingTheVolumeDirectoryFile);\n        elem.setAttributeInt(\"Logical volume number in volume set\", _logicalVolumeNumberInVolumeSet);\n        elem.setAttributeString(\"Logical volume preparation date\", _logicalVolumePreparationDate);\n        elem.setAttributeString(\"Logical volume preparation time\", _logicalVolumePreparationTime);\n        elem.setAttributeString(\"Logical volume preparation country\", _logicalVolumePreparationCountry);\n        elem.setAttributeString(\"Logical volume preparing agent\", _logicalVolumePreparingAgent);\n        elem.setAttributeString(\"Logical volume preparing facility\", _logicalVolumePreparingFacility);\n        elem.setAttributeInt(\"Number of filepointer records\", _numberOfFilepointerRecords);\n        elem.setAttributeInt(\"Number of records\", _numberOfRecords);\n    }", "signature": "void assignMetadataTo(final MetadataElement elem, final String suffix)", "full_signature": "@Override public void assignMetadataTo(final MetadataElement elem, final String suffix)", "class_method_signature": "VolumeDescriptorRecord.assignMetadataTo(final MetadataElement elem, final String suffix)", "testcase": false, "constructor": false, "invocations": ["assignMetadataTo", "setAttributeString", "setAttributeString", "setAttributeString", "setAttributeString", "setAttributeString", "setAttributeString", "setAttributeString", "setAttributeInt", "setAttributeInt", "setAttributeInt", "setAttributeString", "setAttributeString", "setAttributeString", "setAttributeString", "setAttributeString", "setAttributeInt", "setAttributeInt"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}