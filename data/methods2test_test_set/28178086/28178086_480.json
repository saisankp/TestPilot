{"test_class": {"identifier": "SqlIdentifierQuoterTest", "superclass": "", "interfaces": "", "fields": [], "file": "jdbcprovider/src/test/java/ec/util/jdbc/SqlIdentifierQuoterTest.java"}, "test_case": {"identifier": "testGetIdentifierQuoteString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetIdentifierQuoteString() throws SQLException {\n        try (Connection conn = DriverManager.getConnection(\"jdbc:hsqldb:res:mydb\", \"sa\", \"\")) {\n            assertEquals(\"\\\"\", SqlIdentifierQuoter.getIdentifierQuoteString(conn.getMetaData()));\n        }\n    }", "signature": "void testGetIdentifierQuoteString()", "full_signature": "@Test public void testGetIdentifierQuoteString()", "class_method_signature": "SqlIdentifierQuoterTest.testGetIdentifierQuoteString()", "testcase": true, "constructor": false, "invocations": ["getConnection", "assertEquals", "getIdentifierQuoteString", "getMetaData"]}, "focal_class": {"identifier": "SqlIdentifierQuoter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Splitter KEYWORDS_SPLITTER = Splitter.on(',').trimResults();", "modifier": "private static final", "type": "Splitter", "declarator": "KEYWORDS_SPLITTER = Splitter.on(',').trimResults()", "var_name": "KEYWORDS_SPLITTER"}], "methods": [{"identifier": "quote", "parameters": "(@NonNull String identifier, boolean force)", "modifiers": "@NonNull abstract public", "return": "String", "signature": "String quote(@NonNull String identifier, boolean force)", "full_signature": "@NonNull abstract public String quote(@NonNull String identifier, boolean force)", "class_method_signature": "SqlIdentifierQuoter.quote(@NonNull String identifier, boolean force)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(@NonNull DatabaseMetaData metaData)", "modifiers": "@NonNull public static", "return": "SqlIdentifierQuoter", "signature": "SqlIdentifierQuoter create(@NonNull DatabaseMetaData metaData)", "full_signature": "@NonNull public static SqlIdentifierQuoter create(@NonNull DatabaseMetaData metaData)", "class_method_signature": "SqlIdentifierQuoter.create(@NonNull DatabaseMetaData metaData)", "testcase": false, "constructor": false}, {"identifier": "getIdentifierQuoteString", "parameters": "(@NonNull DatabaseMetaData metaData)", "modifiers": "@VisibleForTesting @NonNull static", "return": "String", "signature": "String getIdentifierQuoteString(@NonNull DatabaseMetaData metaData)", "full_signature": "@VisibleForTesting @NonNull static String getIdentifierQuoteString(@NonNull DatabaseMetaData metaData)", "class_method_signature": "SqlIdentifierQuoter.getIdentifierQuoteString(@NonNull DatabaseMetaData metaData)", "testcase": false, "constructor": false}, {"identifier": "getSqlKeywords", "parameters": "(@NonNull DatabaseMetaData metaData)", "modifiers": "@VisibleForTesting @NonNull static", "return": "Set<String>", "signature": "Set<String> getSqlKeywords(@NonNull DatabaseMetaData metaData)", "full_signature": "@VisibleForTesting @NonNull static Set<String> getSqlKeywords(@NonNull DatabaseMetaData metaData)", "class_method_signature": "SqlIdentifierQuoter.getSqlKeywords(@NonNull DatabaseMetaData metaData)", "testcase": false, "constructor": false}, {"identifier": "isIdentifierQuotingSupported", "parameters": "(@Nullable String identifierQuoteString)", "modifiers": "private static", "return": "boolean", "signature": "boolean isIdentifierQuotingSupported(@Nullable String identifierQuoteString)", "full_signature": "private static boolean isIdentifierQuotingSupported(@Nullable String identifierQuoteString)", "class_method_signature": "SqlIdentifierQuoter.isIdentifierQuotingSupported(@Nullable String identifierQuoteString)", "testcase": false, "constructor": false}], "file": "jdbcprovider/src/main/java/ec/util/jdbc/SqlIdentifierQuoter.java"}, "focal_method": {"identifier": "getIdentifierQuoteString", "parameters": "(@NonNull DatabaseMetaData metaData)", "modifiers": "@VisibleForTesting @NonNull static", "return": "String", "body": "@VisibleForTesting\n    @NonNull\n    static String getIdentifierQuoteString(@NonNull DatabaseMetaData metaData) throws SQLException {\n        String identifierQuoteString = metaData.getIdentifierQuoteString();\n        return !isIdentifierQuotingSupported(identifierQuoteString) ? \"\\\"\" : identifierQuoteString;\n    }", "signature": "String getIdentifierQuoteString(@NonNull DatabaseMetaData metaData)", "full_signature": "@VisibleForTesting @NonNull static String getIdentifierQuoteString(@NonNull DatabaseMetaData metaData)", "class_method_signature": "SqlIdentifierQuoter.getIdentifierQuoteString(@NonNull DatabaseMetaData metaData)", "testcase": false, "constructor": false, "invocations": ["getIdentifierQuoteString", "isIdentifierQuotingSupported"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}