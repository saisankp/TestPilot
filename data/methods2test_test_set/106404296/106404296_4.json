{"test_class": {"identifier": "ProfileInfoResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] profiles = new String[]{\"dev\"};", "modifier": "private static final", "type": "String[]", "declarator": "profiles = new String[]{\"dev\"}", "var_name": "profiles"}, {"original_string": "private MockMvc mock;", "modifier": "private", "type": "MockMvc", "declarator": "mock", "var_name": "mock"}], "file": "gamecraft-registry/src/test/java/io/github/jhipster/registry/web/rest/ProfileInfoResourceTest.java"}, "test_case": {"identifier": "getActiveProfilesTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getActiveProfilesTest() throws Exception {\n        MvcResult res = mock.perform(get(\"/api/profile-info\")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))\n            .andReturn();\n\n        assertTrue(res.getResponse().getContentAsString().contains(\"\\\"activeProfiles\\\":[\\\"\"+profiles[0]+\"\\\"]\"));\n    }", "signature": "void getActiveProfilesTest()", "full_signature": "@Test public void getActiveProfilesTest()", "class_method_signature": "ProfileInfoResourceTest.getActiveProfilesTest()", "testcase": true, "constructor": false, "invocations": ["andReturn", "andExpect", "andExpect", "perform", "accept", "get", "isOk", "status", "contentType", "content", "assertTrue", "contains", "getContentAsString", "getResponse"]}, "focal_class": {"identifier": "ProfileInfoResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Environment env;", "modifier": "private final", "type": "Environment", "declarator": "env", "var_name": "env"}, {"original_string": "private final JHipsterProperties jHipsterProperties;", "modifier": "private final", "type": "JHipsterProperties", "declarator": "jHipsterProperties", "var_name": "jHipsterProperties"}, {"original_string": "@Value(\"${spring.cloud.config.server.native.search-locations:}\")\n    private String nativeSearchLocation;", "modifier": "@Value(\"${spring.cloud.config.server.native.search-locations:}\")\n    private", "type": "String", "declarator": "nativeSearchLocation", "var_name": "nativeSearchLocation"}, {"original_string": "@Value(\"${spring.cloud.config.server.git.uri:}\")\n    private String gitUri;", "modifier": "@Value(\"${spring.cloud.config.server.git.uri:}\")\n    private", "type": "String", "declarator": "gitUri", "var_name": "gitUri"}, {"original_string": "@Value(\"${spring.cloud.config.server.git.search-paths:}\")\n    private String gitSearchLocation;", "modifier": "@Value(\"${spring.cloud.config.server.git.search-paths:}\")\n    private", "type": "String", "declarator": "gitSearchLocation", "var_name": "gitSearchLocation"}], "methods": [{"identifier": "ProfileInfoResource", "parameters": "(Environment env, JHipsterProperties jHipsterProperties)", "modifiers": "public", "return": "", "signature": " ProfileInfoResource(Environment env, JHipsterProperties jHipsterProperties)", "full_signature": "public  ProfileInfoResource(Environment env, JHipsterProperties jHipsterProperties)", "class_method_signature": "ProfileInfoResource.ProfileInfoResource(Environment env, JHipsterProperties jHipsterProperties)", "testcase": false, "constructor": true}, {"identifier": "getActiveProfiles", "parameters": "()", "modifiers": "@GetMapping(\"/profile-info\") public", "return": "ProfileInfoVM", "signature": "ProfileInfoVM getActiveProfiles()", "full_signature": "@GetMapping(\"/profile-info\") public ProfileInfoVM getActiveProfiles()", "class_method_signature": "ProfileInfoResource.getActiveProfiles()", "testcase": false, "constructor": false}, {"identifier": "getRibbonEnv", "parameters": "(String[] activeProfiles)", "modifiers": "private", "return": "String", "signature": "String getRibbonEnv(String[] activeProfiles)", "full_signature": "private String getRibbonEnv(String[] activeProfiles)", "class_method_signature": "ProfileInfoResource.getRibbonEnv(String[] activeProfiles)", "testcase": false, "constructor": false}], "file": "gamecraft-registry/src/main/java/io/github/jhipster/registry/web/rest/ProfileInfoResource.java"}, "focal_method": {"identifier": "getActiveProfiles", "parameters": "()", "modifiers": "@GetMapping(\"/profile-info\") public", "return": "ProfileInfoVM", "body": "@GetMapping(\"/profile-info\")\n    public ProfileInfoVM getActiveProfiles() {\n        String[] activeProfiles = DefaultProfileUtil.getActiveProfiles(env);\n        return new ProfileInfoVM(activeProfiles, getRibbonEnv(activeProfiles), nativeSearchLocation, gitUri, gitSearchLocation);\n    }", "signature": "ProfileInfoVM getActiveProfiles()", "full_signature": "@GetMapping(\"/profile-info\") public ProfileInfoVM getActiveProfiles()", "class_method_signature": "ProfileInfoResource.getActiveProfiles()", "testcase": false, "constructor": false, "invocations": ["getActiveProfiles", "getRibbonEnv"]}, "repository": {"repo_id": 106404296, "url": "https://github.com/iMartinezMateu/gamecraft", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 2528, "license": "licensed"}}