{"test_class": {"identifier": "ContractsMavenDependencyLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}], "file": "provider/maven-retriever/src/test/java/org/arquillian/algeron/pact/provider/loader/maven/ContractsMavenDependencyLoaderTest.java"}, "test_case": {"identifier": "should_unpack_pacts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_unpack_pacts() throws IOException {\n\n        final JavaArchive contract = ShrinkWrap.create(JavaArchive.class, \"contract.jar\")\n            .add(new StringAsset(\"My contract\"), \"/contract.json\");\n\n        ContractsMavenDependencyLoader contractsMavenDependencyLoader =\n            new ContractsMavenDependencyLoader(MavenLoaderTest.class.getAnnotation(ContractsMavenDependency.class));\n\n        contractsMavenDependencyLoader.unpack(folder.getRoot(), Arrays.asList(contract));\n        final File contractFile = new File(folder.getRoot(), \"contract.json\");\n        assertThat(contractFile).exists();\n        assertThat(contractFile).hasContent(\"My contract\");\n    }", "signature": "void should_unpack_pacts()", "full_signature": "@Test public void should_unpack_pacts()", "class_method_signature": "ContractsMavenDependencyLoaderTest.should_unpack_pacts()", "testcase": true, "constructor": false, "invocations": ["add", "create", "getAnnotation", "unpack", "getRoot", "asList", "getRoot", "exists", "assertThat", "hasContent", "assertThat"]}, "focal_class": {"identifier": "ContractsMavenDependencyLoader", "superclass": "", "interfaces": "implements ContractsRetriever", "fields": [{"original_string": "private final static int NAME = 0;", "modifier": "private final static", "type": "int", "declarator": "NAME = 0", "var_name": "NAME"}, {"original_string": "private final static int URL = 1;", "modifier": "private final static", "type": "int", "declarator": "URL = 1", "var_name": "URL"}, {"original_string": "private final static int LAYOUT = 2;", "modifier": "private final static", "type": "int", "declarator": "LAYOUT = 2", "var_name": "LAYOUT"}, {"original_string": "private ContractsMavenDependency contractsMavenDependency;", "modifier": "private", "type": "ContractsMavenDependency", "declarator": "contractsMavenDependency", "var_name": "contractsMavenDependency"}], "methods": [{"identifier": "ContractsMavenDependencyLoader", "parameters": "()", "modifiers": "public", "return": "", "signature": " ContractsMavenDependencyLoader()", "full_signature": "public  ContractsMavenDependencyLoader()", "class_method_signature": "ContractsMavenDependencyLoader.ContractsMavenDependencyLoader()", "testcase": false, "constructor": true}, {"identifier": "ContractsMavenDependencyLoader", "parameters": "(ContractsMavenDependency contractsMavenDependency)", "modifiers": "public", "return": "", "signature": " ContractsMavenDependencyLoader(ContractsMavenDependency contractsMavenDependency)", "full_signature": "public  ContractsMavenDependencyLoader(ContractsMavenDependency contractsMavenDependency)", "class_method_signature": "ContractsMavenDependencyLoader.ContractsMavenDependencyLoader(ContractsMavenDependency contractsMavenDependency)", "testcase": false, "constructor": true}, {"identifier": "retrieve", "parameters": "()", "modifiers": "@Override public", "return": "List<URI>", "signature": "List<URI> retrieve()", "full_signature": "@Override public List<URI> retrieve()", "class_method_signature": "ContractsMavenDependencyLoader.retrieve()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Map<String, Object> configuration)", "modifiers": "@Override public", "return": "void", "signature": "void configure(Map<String, Object> configuration)", "full_signature": "@Override public void configure(Map<String, Object> configuration)", "class_method_signature": "ContractsMavenDependencyLoader.configure(Map<String, Object> configuration)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ContractsMavenDependencyLoader.getName()", "testcase": false, "constructor": false}, {"identifier": "extractContracts", "parameters": "(File temporaryDirectory)", "modifiers": "private", "return": "void", "signature": "void extractContracts(File temporaryDirectory)", "full_signature": "private void extractContracts(File temporaryDirectory)", "class_method_signature": "ContractsMavenDependencyLoader.extractContracts(File temporaryDirectory)", "testcase": false, "constructor": false}, {"identifier": "unpack", "parameters": "(File destination, List<JavaArchive> contracts)", "modifiers": "protected", "return": "void", "signature": "void unpack(File destination, List<JavaArchive> contracts)", "full_signature": "protected void unpack(File destination, List<JavaArchive> contracts)", "class_method_signature": "ContractsMavenDependencyLoader.unpack(File destination, List<JavaArchive> contracts)", "testcase": false, "constructor": false}, {"identifier": "unpack", "parameters": "(File destination, JavaArchive file)", "modifiers": "private", "return": "void", "signature": "void unpack(File destination, JavaArchive file)", "full_signature": "private void unpack(File destination, JavaArchive file)", "class_method_signature": "ContractsMavenDependencyLoader.unpack(File destination, JavaArchive file)", "testcase": false, "constructor": false}, {"identifier": "resolveContracts", "parameters": "()", "modifiers": "protected", "return": "List<JavaArchive>", "signature": "List<JavaArchive> resolveContracts()", "full_signature": "protected List<JavaArchive> resolveContracts()", "class_method_signature": "ContractsMavenDependencyLoader.resolveContracts()", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(String coordinate, ConfigurableMavenResolverSystem maven)", "modifiers": "private", "return": "JavaArchive", "signature": "JavaArchive resolve(String coordinate, ConfigurableMavenResolverSystem maven)", "full_signature": "private JavaArchive resolve(String coordinate, ConfigurableMavenResolverSystem maven)", "class_method_signature": "ContractsMavenDependencyLoader.resolve(String coordinate, ConfigurableMavenResolverSystem maven)", "testcase": false, "constructor": false}, {"identifier": "getRemoteRepository", "parameters": "(String remoteRepoDefinition)", "modifiers": "private", "return": "String[]", "signature": "String[] getRemoteRepository(String remoteRepoDefinition)", "full_signature": "private String[] getRemoteRepository(String remoteRepoDefinition)", "class_method_signature": "ContractsMavenDependencyLoader.getRemoteRepository(String remoteRepoDefinition)", "testcase": false, "constructor": false}, {"identifier": "createTemporaryFolder", "parameters": "(String provider)", "modifiers": "private", "return": "File", "signature": "File createTemporaryFolder(String provider)", "full_signature": "private File createTemporaryFolder(String provider)", "class_method_signature": "ContractsMavenDependencyLoader.createTemporaryFolder(String provider)", "testcase": false, "constructor": false}], "file": "provider/maven-retriever/src/main/java/org/arquillian/algeron/pact/provider/loader/maven/ContractsMavenDependencyLoader.java"}, "focal_method": {"identifier": "unpack", "parameters": "(File destination, List<JavaArchive> contracts)", "modifiers": "protected", "return": "void", "body": "protected void unpack(File destination, List<JavaArchive> contracts) throws IOException {\n        for (JavaArchive contract : contracts) {\n            unpack(destination, contract);\n        }\n    }", "signature": "void unpack(File destination, List<JavaArchive> contracts)", "full_signature": "protected void unpack(File destination, List<JavaArchive> contracts)", "class_method_signature": "ContractsMavenDependencyLoader.unpack(File destination, List<JavaArchive> contracts)", "testcase": false, "constructor": false, "invocations": ["unpack"]}, "repository": {"repo_id": 67030086, "url": "https://github.com/arquillian/arquillian-algeron", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 10, "size": 661, "license": "licensed"}}