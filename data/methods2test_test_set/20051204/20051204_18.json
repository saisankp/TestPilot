{"test_class": {"identifier": "TestSecurityUtils", "superclass": "", "interfaces": "", "fields": [], "file": "slider-core/src/test/java/org/apache/slider/server/services/security/TestSecurityUtils.java"}, "test_case": {"identifier": "testRandomAlphanumeric", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRandomAlphanumeric() throws Exception {\n    int passLength = 50;\n    String password = SecurityUtils.randomAlphanumeric(passLength);\n    Assert.assertEquals(\n        \"Returned string length does not match requested length\", passLength,\n        password.length());\n\n    // 0 length\n    password = SecurityUtils.randomAlphanumeric(0);\n    Assert.assertTrue(\"Returned string should be empty\", password.isEmpty());\n  }", "signature": "void testRandomAlphanumeric()", "full_signature": "@Test public void testRandomAlphanumeric()", "class_method_signature": "TestSecurityUtils.testRandomAlphanumeric()", "testcase": true, "constructor": false, "invocations": ["randomAlphanumeric", "assertEquals", "length", "randomAlphanumeric", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "SecurityUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG =\n      LoggerFactory.getLogger(SecurityUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG =\n      LoggerFactory.getLogger(SecurityUtils.class)", "var_name": "LOG"}, {"original_string": "private static String CA_CONFIG_CONTENTS =  \"HOME            = .\\n\"\n                                            + \"RANDFILE        = $ENV::HOME/.rnd\\n\\n\"\n                                            + \"[ ca ]\\n\"\n                                            + \"default_ca             = CA_CLIENT\\n\"\n                                            + \"[ CA_CLIENT ]\\n\"\n                                            + \"dir                    = ${SEC_DIR}/db\\n\"\n                                            + \"certs                  = $dir/certs\\n\"\n                                            + \"new_certs_dir          = $dir/newcerts\\n\"\n                                            + \"\\n\"\n                                            + \"database               = $dir/index.txt\\n\"\n                                            + \"serial                 = $dir/serial\\n\"\n                                            + \"default_days           = 365    \\n\"\n                                            + \"\\n\"\n                                            + \"default_crl_days       = 7  \\n\"\n                                            + \"default_md             = sha256 \\n\"\n                                            + \"\\n\"\n                                            + \"policy                 = policy_anything \\n\"\n                                            + \"\\n\"\n                                            + \"[ policy_anything ]\\n\"\n                                            + \"countryName            = optional\\n\"\n                                            + \"stateOrProvinceName    = optional\\n\"\n                                            + \"localityName           = optional\\n\"\n                                            + \"organizationName       = optional\\n\"\n                                            + \"organizationalUnitName = optional\\n\"\n                                            + \"commonName             = optional\\n\"\n                                            + \"emailAddress           = optional\\n\"\n                                            + \"\\n\"\n                                            + \"[req]\\n\"\n                                            + \"distinguished_name     = req_distinguished_name\\n\"\n                                            + \"\\n\"\n                                            + \"[ req_distinguished_name ]\\n\"\n                                            + \"\\n\"\n                                            + \"[ jdk7_ca ]\\n\"\n                                            + \"subjectKeyIdentifier = hash\\n\"\n                                            + \"authorityKeyIdentifier = keyid:always,issuer:always\\n\"\n                                            + \"basicConstraints = CA:true\\n\";", "modifier": "private static", "type": "String", "declarator": "CA_CONFIG_CONTENTS =  \"HOME            = .\\n\"\n                                            + \"RANDFILE        = $ENV::HOME/.rnd\\n\\n\"\n                                            + \"[ ca ]\\n\"\n                                            + \"default_ca             = CA_CLIENT\\n\"\n                                            + \"[ CA_CLIENT ]\\n\"\n                                            + \"dir                    = ${SEC_DIR}/db\\n\"\n                                            + \"certs                  = $dir/certs\\n\"\n                                            + \"new_certs_dir          = $dir/newcerts\\n\"\n                                            + \"\\n\"\n                                            + \"database               = $dir/index.txt\\n\"\n                                            + \"serial                 = $dir/serial\\n\"\n                                            + \"default_days           = 365    \\n\"\n                                            + \"\\n\"\n                                            + \"default_crl_days       = 7  \\n\"\n                                            + \"default_md             = sha256 \\n\"\n                                            + \"\\n\"\n                                            + \"policy                 = policy_anything \\n\"\n                                            + \"\\n\"\n                                            + \"[ policy_anything ]\\n\"\n                                            + \"countryName            = optional\\n\"\n                                            + \"stateOrProvinceName    = optional\\n\"\n                                            + \"localityName           = optional\\n\"\n                                            + \"organizationName       = optional\\n\"\n                                            + \"organizationalUnitName = optional\\n\"\n                                            + \"commonName             = optional\\n\"\n                                            + \"emailAddress           = optional\\n\"\n                                            + \"\\n\"\n                                            + \"[req]\\n\"\n                                            + \"distinguished_name     = req_distinguished_name\\n\"\n                                            + \"\\n\"\n                                            + \"[ req_distinguished_name ]\\n\"\n                                            + \"\\n\"\n                                            + \"[ jdk7_ca ]\\n\"\n                                            + \"subjectKeyIdentifier = hash\\n\"\n                                            + \"authorityKeyIdentifier = keyid:always,issuer:always\\n\"\n                                            + \"basicConstraints = CA:true\\n\"", "var_name": "CA_CONFIG_CONTENTS"}, {"original_string": "private static final String PASS_TOKEN = \"pass:\";", "modifier": "private static final", "type": "String", "declarator": "PASS_TOKEN = \"pass:\"", "var_name": "PASS_TOKEN"}, {"original_string": "public static final String UPPER = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";", "modifier": "public static final", "type": "String", "declarator": "UPPER = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"", "var_name": "UPPER"}, {"original_string": "public static final String LOWER = UPPER.toLowerCase();", "modifier": "public static final", "type": "String", "declarator": "LOWER = UPPER.toLowerCase()", "var_name": "LOWER"}, {"original_string": "public static final String DIGITS = \"0123456789\";", "modifier": "public static final", "type": "String", "declarator": "DIGITS = \"0123456789\"", "var_name": "DIGITS"}, {"original_string": "public static final String ALPHANUM = UPPER + LOWER + DIGITS;", "modifier": "public static final", "type": "String", "declarator": "ALPHANUM = UPPER + LOWER + DIGITS", "var_name": "ALPHANUM"}, {"original_string": "public static final char[] ALPHANUM_ARRAY = ALPHANUM.toCharArray();", "modifier": "public static final", "type": "char[]", "declarator": "ALPHANUM_ARRAY = ALPHANUM.toCharArray()", "var_name": "ALPHANUM_ARRAY"}, {"original_string": "private static String keystorePass;", "modifier": "private static", "type": "String", "declarator": "keystorePass", "var_name": "keystorePass"}, {"original_string": "private static String securityDir;", "modifier": "private static", "type": "String", "declarator": "securityDir", "var_name": "securityDir"}, {"original_string": "private static boolean keystoreLocationSpecified;", "modifier": "private static", "type": "boolean", "declarator": "keystoreLocationSpecified", "var_name": "keystoreLocationSpecified"}], "methods": [{"identifier": "randomAlphanumeric", "parameters": "(int length)", "modifiers": "public static", "return": "String", "signature": "String randomAlphanumeric(int length)", "full_signature": "public static String randomAlphanumeric(int length)", "class_method_signature": "SecurityUtils.randomAlphanumeric(int length)", "testcase": false, "constructor": false}, {"identifier": "logOpenSslExitCode", "parameters": "(String command, int exitCode)", "modifiers": "public static", "return": "void", "signature": "void logOpenSslExitCode(String command, int exitCode)", "full_signature": "public static void logOpenSslExitCode(String command, int exitCode)", "class_method_signature": "SecurityUtils.logOpenSslExitCode(String command, int exitCode)", "testcase": false, "constructor": false}, {"identifier": "hideOpenSslPassword", "parameters": "(String command)", "modifiers": "public static", "return": "String", "signature": "String hideOpenSslPassword(String command)", "full_signature": "public static String hideOpenSslPassword(String command)", "class_method_signature": "SecurityUtils.hideOpenSslPassword(String command)", "testcase": false, "constructor": false}, {"identifier": "getOpenSslCommandResult", "parameters": "(String command, int exitCode)", "modifiers": "public static", "return": "String", "signature": "String getOpenSslCommandResult(String command, int exitCode)", "full_signature": "public static String getOpenSslCommandResult(String command, int exitCode)", "class_method_signature": "SecurityUtils.getOpenSslCommandResult(String command, int exitCode)", "testcase": false, "constructor": false}, {"identifier": "getOpenSslExitCodeDescription", "parameters": "(int exitCode)", "modifiers": "private static", "return": "String", "signature": "String getOpenSslExitCodeDescription(int exitCode)", "full_signature": "private static String getOpenSslExitCodeDescription(int exitCode)", "class_method_signature": "SecurityUtils.getOpenSslExitCodeDescription(int exitCode)", "testcase": false, "constructor": false}, {"identifier": "writeCaConfigFile", "parameters": "(String path)", "modifiers": "public static", "return": "void", "signature": "void writeCaConfigFile(String path)", "full_signature": "public static void writeCaConfigFile(String path)", "class_method_signature": "SecurityUtils.writeCaConfigFile(String path)", "testcase": false, "constructor": false}, {"identifier": "getKeystorePass", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getKeystorePass()", "full_signature": "public static String getKeystorePass()", "class_method_signature": "SecurityUtils.getKeystorePass()", "testcase": false, "constructor": false}, {"identifier": "getSecurityDir", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getSecurityDir()", "full_signature": "public static String getSecurityDir()", "class_method_signature": "SecurityUtils.getSecurityDir()", "testcase": false, "constructor": false}, {"identifier": "initializeSecurityParameters", "parameters": "(MapOperations configMap)", "modifiers": "public static", "return": "void", "signature": "void initializeSecurityParameters(MapOperations configMap)", "full_signature": "public static void initializeSecurityParameters(MapOperations configMap)", "class_method_signature": "SecurityUtils.initializeSecurityParameters(MapOperations configMap)", "testcase": false, "constructor": false}, {"identifier": "initializeSecurityParameters", "parameters": "(MapOperations configMap,\n                                                boolean persistPassword)", "modifiers": "public static", "return": "void", "signature": "void initializeSecurityParameters(MapOperations configMap,\n                                                boolean persistPassword)", "full_signature": "public static void initializeSecurityParameters(MapOperations configMap,\n                                                boolean persistPassword)", "class_method_signature": "SecurityUtils.initializeSecurityParameters(MapOperations configMap,\n                                                boolean persistPassword)", "testcase": false, "constructor": false}, {"identifier": "getKeystorePassword", "parameters": "(File secDirFile,\n                                            boolean persistPassword)", "modifiers": "private static", "return": "String", "signature": "String getKeystorePassword(File secDirFile,\n                                            boolean persistPassword)", "full_signature": "private static String getKeystorePassword(File secDirFile,\n                                            boolean persistPassword)", "class_method_signature": "SecurityUtils.getKeystorePassword(File secDirFile,\n                                            boolean persistPassword)", "testcase": false, "constructor": false}, {"identifier": "getDefaultKeystoreLocation", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String getDefaultKeystoreLocation()", "full_signature": "private static String getDefaultKeystoreLocation()", "class_method_signature": "SecurityUtils.getDefaultKeystoreLocation()", "testcase": false, "constructor": false}, {"identifier": "cleanupSecurityDir", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void cleanupSecurityDir()", "full_signature": "public static void cleanupSecurityDir()", "class_method_signature": "SecurityUtils.cleanupSecurityDir()", "testcase": false, "constructor": false}], "file": "slider-core/src/main/java/org/apache/slider/server/services/security/SecurityUtils.java"}, "focal_method": {"identifier": "randomAlphanumeric", "parameters": "(int length)", "modifiers": "public static", "return": "String", "body": "public static String randomAlphanumeric(int length) {\n    StringBuilder buffer = new StringBuilder(length);\n    SecureRandom secureRandom = new SecureRandom();\n    for (int i = 0; i < length; i++) {\n      double number = secureRandom.nextDouble();\n      int b = ((int) (number * ALPHANUM_ARRAY.length));\n      buffer.append(ALPHANUM_ARRAY[b]);\n    }\n    return buffer.toString();\n  }", "signature": "String randomAlphanumeric(int length)", "full_signature": "public static String randomAlphanumeric(int length)", "class_method_signature": "SecurityUtils.randomAlphanumeric(int length)", "testcase": false, "constructor": false, "invocations": ["nextDouble", "append", "toString"]}, "repository": {"repo_id": 20051204, "url": "https://github.com/apache/incubator-retired-slider", "language": "Java", "is_fork": false, "fork_count": 73, "stargazer_count": 74, "size": 16472, "license": "licensed"}}