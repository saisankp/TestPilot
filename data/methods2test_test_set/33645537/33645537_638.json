{"test_class": {"identifier": "StringEscapeUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/test/java/com/baidu/unbiz/common/StringEscapeUtilTest.java"}, "test_case": {"identifier": "unescapeURLEncoding", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void unescapeURLEncoding() {\n        LocaleUtil.setContext(Locale.CHINA, \"GBK\");\n        assertEquals(\"\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\", StringEscapeUtil.unescapeURL(\"%D6%D0%BB%AA%C8%CB%C3%F1%B9%B2%BA%CD%B9%FA\"));\n\n        LocaleUtil.setContext(Locale.US, \"8859_1\");\n        assertEquals(\"\\u00D6\\u00D0\\u00BB\\u00AA\\u00C8\\u00CB\\u00C3\\u00F1\\u00B9\\u00B2\\u00BA\\u00CD\\u00B9\\u00FA\",\n                StringEscapeUtil.unescapeURL(\"%D6%D0%BB%AA%C8%CB%C3%F1%B9%B2%BA%CD%B9%FA\"));\n\n        LocaleUtil.resetContext();\n    }", "signature": "void unescapeURLEncoding()", "full_signature": "@Test public void unescapeURLEncoding()", "class_method_signature": "StringEscapeUtilTest.unescapeURLEncoding()", "testcase": true, "constructor": false, "invocations": ["setContext", "assertEquals", "D6%D0%BB%AA", "setContext", "assertEquals", "unescapeURL", "resetContext"]}, "focal_class": {"identifier": "StringEscapeUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final BitSet ALPHA = new BitSet(256);", "modifier": "private static final", "type": "BitSet", "declarator": "ALPHA = new BitSet(256)", "var_name": "ALPHA"}, {"original_string": "private static final BitSet ALPHANUM = new BitSet(256);", "modifier": "private static final", "type": "BitSet", "declarator": "ALPHANUM = new BitSet(256)", "var_name": "ALPHANUM"}, {"original_string": "private static final BitSet MARK = new BitSet(256);", "modifier": "private static final", "type": "BitSet", "declarator": "MARK = new BitSet(256)", "var_name": "MARK"}, {"original_string": "private static final BitSet RESERVED = new BitSet(256);", "modifier": "private static final", "type": "BitSet", "declarator": "RESERVED = new BitSet(256)", "var_name": "RESERVED"}, {"original_string": "private static final BitSet UNRESERVED = new BitSet(256);", "modifier": "private static final", "type": "BitSet", "declarator": "UNRESERVED = new BitSet(256)", "var_name": "UNRESERVED"}, {"original_string": "private static char[] HEXADECIMAL = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\n            'F' };", "modifier": "private static", "type": "char[]", "declarator": "HEXADECIMAL = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\n            'F' }", "var_name": "HEXADECIMAL"}], "methods": [{"identifier": "escapeJava", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String escapeJava(String str)", "full_signature": "public static String escapeJava(String str)", "class_method_signature": "StringEscapeUtil.escapeJava(String str)", "testcase": false, "constructor": false}, {"identifier": "escapeJava", "parameters": "(String str, boolean strict)", "modifiers": "public static", "return": "String", "signature": "String escapeJava(String str, boolean strict)", "full_signature": "public static String escapeJava(String str, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeJava(String str, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "escapeJava", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void escapeJava(String str, Appendable out)", "full_signature": "public static void escapeJava(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.escapeJava(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeJava", "parameters": "(String str, Appendable out, boolean strict)", "modifiers": "public static", "return": "void", "signature": "void escapeJava(String str, Appendable out, boolean strict)", "full_signature": "public static void escapeJava(String str, Appendable out, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeJava(String str, Appendable out, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "escapeJavaScript", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String escapeJavaScript(String str)", "full_signature": "public static String escapeJavaScript(String str)", "class_method_signature": "StringEscapeUtil.escapeJavaScript(String str)", "testcase": false, "constructor": false}, {"identifier": "escapeJavaScript", "parameters": "(String str, boolean strict)", "modifiers": "public static", "return": "String", "signature": "String escapeJavaScript(String str, boolean strict)", "full_signature": "public static String escapeJavaScript(String str, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeJavaScript(String str, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "escapeJavaScript", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void escapeJavaScript(String str, Appendable out)", "full_signature": "public static void escapeJavaScript(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.escapeJavaScript(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeJavaScript", "parameters": "(String str, Appendable out, boolean strict)", "modifiers": "public static", "return": "void", "signature": "void escapeJavaScript(String str, Appendable out, boolean strict)", "full_signature": "public static void escapeJavaScript(String str, Appendable out, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeJavaScript(String str, Appendable out, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "escapeJavaStyleString", "parameters": "(String str, boolean javascript, boolean strict)", "modifiers": "private static", "return": "String", "signature": "String escapeJavaStyleString(String str, boolean javascript, boolean strict)", "full_signature": "private static String escapeJavaStyleString(String str, boolean javascript, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeJavaStyleString(String str, boolean javascript, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "escapeJavaStyleString", "parameters": "(String str, boolean javascript, Appendable out, boolean strict)", "modifiers": "private static", "return": "boolean", "signature": "boolean escapeJavaStyleString(String str, boolean javascript, Appendable out, boolean strict)", "full_signature": "private static boolean escapeJavaStyleString(String str, boolean javascript, Appendable out, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeJavaStyleString(String str, boolean javascript, Appendable out, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "unescapeJava", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String unescapeJava(String str)", "full_signature": "public static String unescapeJava(String str)", "class_method_signature": "StringEscapeUtil.unescapeJava(String str)", "testcase": false, "constructor": false}, {"identifier": "unescapeJava", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void unescapeJava(String str, Appendable out)", "full_signature": "public static void unescapeJava(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeJava(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "unescapeJavaScript", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String unescapeJavaScript(String str)", "full_signature": "public static String unescapeJavaScript(String str)", "class_method_signature": "StringEscapeUtil.unescapeJavaScript(String str)", "testcase": false, "constructor": false}, {"identifier": "unescapeJavaScript", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void unescapeJavaScript(String str, Appendable out)", "full_signature": "public static void unescapeJavaScript(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeJavaScript(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "unescapeJavaStyleString", "parameters": "(String str)", "modifiers": "private static", "return": "String", "signature": "String unescapeJavaStyleString(String str)", "full_signature": "private static String unescapeJavaStyleString(String str)", "class_method_signature": "StringEscapeUtil.unescapeJavaStyleString(String str)", "testcase": false, "constructor": false}, {"identifier": "unescapeJavaStyleString", "parameters": "(String str, Appendable out)", "modifiers": "private static", "return": "boolean", "signature": "boolean unescapeJavaStyleString(String str, Appendable out)", "full_signature": "private static boolean unescapeJavaStyleString(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeJavaStyleString(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeHtml", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String escapeHtml(String str)", "full_signature": "public static String escapeHtml(String str)", "class_method_signature": "StringEscapeUtil.escapeHtml(String str)", "testcase": false, "constructor": false}, {"identifier": "escapeHtml", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void escapeHtml(String str, Appendable out)", "full_signature": "public static void escapeHtml(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.escapeHtml(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeXml", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String escapeXml(String str)", "full_signature": "public static String escapeXml(String str)", "class_method_signature": "StringEscapeUtil.escapeXml(String str)", "testcase": false, "constructor": false}, {"identifier": "escapeXml", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void escapeXml(String str, Appendable out)", "full_signature": "public static void escapeXml(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.escapeXml(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeEntities", "parameters": "(Entities entities, String str)", "modifiers": "public static", "return": "String", "signature": "String escapeEntities(Entities entities, String str)", "full_signature": "public static String escapeEntities(Entities entities, String str)", "class_method_signature": "StringEscapeUtil.escapeEntities(Entities entities, String str)", "testcase": false, "constructor": false}, {"identifier": "escapeEntities", "parameters": "(Entities entities, String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void escapeEntities(Entities entities, String str, Appendable out)", "full_signature": "public static void escapeEntities(Entities entities, String str, Appendable out)", "class_method_signature": "StringEscapeUtil.escapeEntities(Entities entities, String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "unescapeHtml", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String unescapeHtml(String str)", "full_signature": "public static String unescapeHtml(String str)", "class_method_signature": "StringEscapeUtil.unescapeHtml(String str)", "testcase": false, "constructor": false}, {"identifier": "unescapeHtml", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void unescapeHtml(String str, Appendable out)", "full_signature": "public static void unescapeHtml(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeHtml(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "unescapeXml", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String unescapeXml(String str)", "full_signature": "public static String unescapeXml(String str)", "class_method_signature": "StringEscapeUtil.unescapeXml(String str)", "testcase": false, "constructor": false}, {"identifier": "unescapeXml", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void unescapeXml(String str, Appendable out)", "full_signature": "public static void unescapeXml(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeXml(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "unescapeEntities", "parameters": "(Entities entities, String str)", "modifiers": "public static", "return": "String", "signature": "String unescapeEntities(Entities entities, String str)", "full_signature": "public static String unescapeEntities(Entities entities, String str)", "class_method_signature": "StringEscapeUtil.unescapeEntities(Entities entities, String str)", "testcase": false, "constructor": false}, {"identifier": "unescapeEntities", "parameters": "(Entities entities, String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void unescapeEntities(Entities entities, String str, Appendable out)", "full_signature": "public static void unescapeEntities(Entities entities, String str, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeEntities(Entities entities, String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeEntitiesInternal", "parameters": "(Entities entities, String str, Appendable out)", "modifiers": "private static", "return": "boolean", "signature": "boolean escapeEntitiesInternal(Entities entities, String str, Appendable out)", "full_signature": "private static boolean escapeEntitiesInternal(Entities entities, String str, Appendable out)", "class_method_signature": "StringEscapeUtil.escapeEntitiesInternal(Entities entities, String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "unescapeEntitiesInternal", "parameters": "(Entities entities, String str, Appendable out)", "modifiers": "private static", "return": "boolean", "signature": "boolean unescapeEntitiesInternal(Entities entities, String str, Appendable out)", "full_signature": "private static boolean unescapeEntitiesInternal(Entities entities, String str, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeEntitiesInternal(Entities entities, String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeSql", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String escapeSql(String str)", "full_signature": "public static String escapeSql(String str)", "class_method_signature": "StringEscapeUtil.escapeSql(String str)", "testcase": false, "constructor": false}, {"identifier": "escapeSql", "parameters": "(String str, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void escapeSql(String str, Appendable out)", "full_signature": "public static void escapeSql(String str, Appendable out)", "class_method_signature": "StringEscapeUtil.escapeSql(String str, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeURL", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String escapeURL(String str)", "full_signature": "public static String escapeURL(String str)", "class_method_signature": "StringEscapeUtil.escapeURL(String str)", "testcase": false, "constructor": false}, {"identifier": "escapeURL", "parameters": "(String str, String encoding)", "modifiers": "public static", "return": "String", "signature": "String escapeURL(String str, String encoding)", "full_signature": "public static String escapeURL(String str, String encoding)", "class_method_signature": "StringEscapeUtil.escapeURL(String str, String encoding)", "testcase": false, "constructor": false}, {"identifier": "escapeURL", "parameters": "(String str, String encoding, boolean strict)", "modifiers": "public static", "return": "String", "signature": "String escapeURL(String str, String encoding, boolean strict)", "full_signature": "public static String escapeURL(String str, String encoding, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeURL(String str, String encoding, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "escapeURL", "parameters": "(String str, String encoding, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void escapeURL(String str, String encoding, Appendable out)", "full_signature": "public static void escapeURL(String str, String encoding, Appendable out)", "class_method_signature": "StringEscapeUtil.escapeURL(String str, String encoding, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "escapeURL", "parameters": "(String str, String encoding, Appendable out, boolean strict)", "modifiers": "public static", "return": "void", "signature": "void escapeURL(String str, String encoding, Appendable out, boolean strict)", "full_signature": "public static void escapeURL(String str, String encoding, Appendable out, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeURL(String str, String encoding, Appendable out, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "escapeURLInternal", "parameters": "(String str, String encoding, boolean strict)", "modifiers": "private static", "return": "String", "signature": "String escapeURLInternal(String str, String encoding, boolean strict)", "full_signature": "private static String escapeURLInternal(String str, String encoding, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeURLInternal(String str, String encoding, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "escapeURLInternal", "parameters": "(String str, String encoding, Appendable out, boolean strict)", "modifiers": "private static", "return": "boolean", "signature": "boolean escapeURLInternal(String str, String encoding, Appendable out, boolean strict)", "full_signature": "private static boolean escapeURLInternal(String str, String encoding, Appendable out, boolean strict)", "class_method_signature": "StringEscapeUtil.escapeURLInternal(String str, String encoding, Appendable out, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "isSafeCharacter", "parameters": "(int ch, boolean strict)", "modifiers": "private static", "return": "boolean", "signature": "boolean isSafeCharacter(int ch, boolean strict)", "full_signature": "private static boolean isSafeCharacter(int ch, boolean strict)", "class_method_signature": "StringEscapeUtil.isSafeCharacter(int ch, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "unescapeURL", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String unescapeURL(String str)", "full_signature": "public static String unescapeURL(String str)", "class_method_signature": "StringEscapeUtil.unescapeURL(String str)", "testcase": false, "constructor": false}, {"identifier": "unescapeURL", "parameters": "(String str, String encoding)", "modifiers": "public static", "return": "String", "signature": "String unescapeURL(String str, String encoding)", "full_signature": "public static String unescapeURL(String str, String encoding)", "class_method_signature": "StringEscapeUtil.unescapeURL(String str, String encoding)", "testcase": false, "constructor": false}, {"identifier": "unescapeURL", "parameters": "(String str, String encoding, Appendable out)", "modifiers": "public static", "return": "void", "signature": "void unescapeURL(String str, String encoding, Appendable out)", "full_signature": "public static void unescapeURL(String str, String encoding, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeURL(String str, String encoding, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "unescapeURLInternal", "parameters": "(String str, String encoding)", "modifiers": "private static", "return": "String", "signature": "String unescapeURLInternal(String str, String encoding)", "full_signature": "private static String unescapeURLInternal(String str, String encoding)", "class_method_signature": "StringEscapeUtil.unescapeURLInternal(String str, String encoding)", "testcase": false, "constructor": false}, {"identifier": "unescapeURLInternal", "parameters": "(String str, String encoding, Appendable out)", "modifiers": "private static", "return": "boolean", "signature": "boolean unescapeURLInternal(String str, String encoding, Appendable out)", "full_signature": "private static boolean unescapeURLInternal(String str, String encoding, Appendable out)", "class_method_signature": "StringEscapeUtil.unescapeURLInternal(String str, String encoding, Appendable out)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/baidu/unbiz/common/StringEscapeUtil.java"}, "focal_method": {"identifier": "unescapeURL", "parameters": "(String str)", "modifiers": "public static", "return": "String", "body": "public static String unescapeURL(String str) {\n        try {\n            return unescapeURLInternal(str, null);\n        } catch (UnsupportedEncodingException e) {\n            return str; // \u4e0d\u53ef\u80fd\u53d1\u751f\u8fd9\u4e2a\u5f02\u5e38\n        }\n    }", "signature": "String unescapeURL(String str)", "full_signature": "public static String unescapeURL(String str)", "class_method_signature": "StringEscapeUtil.unescapeURL(String str)", "testcase": false, "constructor": false, "invocations": ["unescapeURLInternal"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}