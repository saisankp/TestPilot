{"test_class": {"identifier": "MifosViewerServletContextListenerTest", "superclass": "", "interfaces": "", "fields": [], "file": "reporting/src/test/java/org/mifos/reports/MifosViewerServletContextListenerTest.java"}, "test_case": {"identifier": "testContextInitializedServletContextEvent", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n    @SuppressWarnings(\"unchecked\")\n    public void testContextInitializedServletContextEvent() throws Throwable {\n        MifosViewerServletContextListener listener = new MifosViewerServletContextListener();\n        File dir = listener.copyBIRTResourcesFromClassPathToFilesystemDirectory(null);\n        Collection<File> files = FileUtils.listFiles(dir, null, true);\n        assertTrue(files.size() > 5);\n    }", "signature": "void testContextInitializedServletContextEvent()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") public void testContextInitializedServletContextEvent()", "class_method_signature": "MifosViewerServletContextListenerTest.testContextInitializedServletContextEvent()", "testcase": true, "constructor": false, "invocations": ["copyBIRTResourcesFromClassPathToFilesystemDirectory", "listFiles", "assertTrue", "size"]}, "focal_class": {"identifier": "MifosViewerServletContextListener", "superclass": "extends ViewerServletContextListener", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MifosViewerServletContextListener.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MifosViewerServletContextListener.class)", "var_name": "LOGGER"}, {"original_string": "public static final String SYS_PROP_BIRT_ROOT_TEMP_DIR = \"mifos.birt.root.temp.dir\";", "modifier": "public static final", "type": "String", "declarator": "SYS_PROP_BIRT_ROOT_TEMP_DIR = \"mifos.birt.root.temp.dir\"", "var_name": "SYS_PROP_BIRT_ROOT_TEMP_DIR"}, {"original_string": "private static final String BIRT_RESOURCES_PATTERN = \"/birt/\";", "modifier": "private static final", "type": "String", "declarator": "BIRT_RESOURCES_PATTERN = \"/birt/\"", "var_name": "BIRT_RESOURCES_PATTERN"}, {"original_string": "private static final String LOCATION_PATTERN = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + BIRT_RESOURCES_PATTERN + \"**\";", "modifier": "private static final", "type": "String", "declarator": "LOCATION_PATTERN = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + BIRT_RESOURCES_PATTERN + \"**\"", "var_name": "LOCATION_PATTERN"}], "methods": [{"identifier": "contextInitialized", "parameters": "(ServletContextEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void contextInitialized(ServletContextEvent event)", "full_signature": "@Override public void contextInitialized(ServletContextEvent event)", "class_method_signature": "MifosViewerServletContextListener.contextInitialized(ServletContextEvent event)", "testcase": false, "constructor": false}, {"identifier": "copyBIRTResourcesFromClassPathToFilesystemDirectory", "parameters": "(ServletContext servletContext)", "modifiers": "", "return": "File", "signature": "File copyBIRTResourcesFromClassPathToFilesystemDirectory(ServletContext servletContext)", "full_signature": " File copyBIRTResourcesFromClassPathToFilesystemDirectory(ServletContext servletContext)", "class_method_signature": "MifosViewerServletContextListener.copyBIRTResourcesFromClassPathToFilesystemDirectory(ServletContext servletContext)", "testcase": false, "constructor": false}, {"identifier": "copyFromClassPathToDirectory", "parameters": "(String directoryToScan, File rootDirectory)", "modifiers": "private", "return": "void", "signature": "void copyFromClassPathToDirectory(String directoryToScan, File rootDirectory)", "full_signature": "private void copyFromClassPathToDirectory(String directoryToScan, File rootDirectory)", "class_method_signature": "MifosViewerServletContextListener.copyFromClassPathToDirectory(String directoryToScan, File rootDirectory)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(ServletContext servletContext, String msg, Exception e)", "modifiers": "private", "return": "void", "signature": "void error(ServletContext servletContext, String msg, Exception e)", "full_signature": "private void error(ServletContext servletContext, String msg, Exception e)", "class_method_signature": "MifosViewerServletContextListener.error(ServletContext servletContext, String msg, Exception e)", "testcase": false, "constructor": false}], "file": "reporting/src/main/java/org/mifos/reports/MifosViewerServletContextListener.java"}, "focal_method": {"identifier": "copyBIRTResourcesFromClassPathToFilesystemDirectory", "parameters": "(ServletContext servletContext)", "modifiers": "", "return": "File", "body": "File copyBIRTResourcesFromClassPathToFilesystemDirectory(ServletContext servletContext) {\n        File directory = new File(System.getProperty(\"java.io.tmpdir\"), \"MifosBirtFilesExtractedFromClasspath\");\n        try {\n            directory.mkdirs();\n            FileUtils.cleanDirectory(directory);\n            copyFromClassPathToDirectory(BIRT_RESOURCES_PATTERN, directory);\n        } catch (IOException e) {\n            error(servletContext, \"getResources(\\\"\" + ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX\n                    + BIRT_RESOURCES_PATTERN + \"**\\\") failed: \" + e.getMessage(), e);\n        }\n\n        return directory;\n    }", "signature": "File copyBIRTResourcesFromClassPathToFilesystemDirectory(ServletContext servletContext)", "full_signature": " File copyBIRTResourcesFromClassPathToFilesystemDirectory(ServletContext servletContext)", "class_method_signature": "MifosViewerServletContextListener.copyBIRTResourcesFromClassPathToFilesystemDirectory(ServletContext servletContext)", "testcase": false, "constructor": false, "invocations": ["getProperty", "mkdirs", "cleanDirectory", "copyFromClassPathToDirectory", "error", "getMessage"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}