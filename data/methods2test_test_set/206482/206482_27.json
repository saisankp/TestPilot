{"test_class": {"identifier": "EntryRequestProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EntryRequestProcessor processor = new EntryRequestProcessor();", "modifier": "private", "type": "EntryRequestProcessor", "declarator": "processor = new EntryRequestProcessor()", "var_name": "processor"}, {"original_string": "private CollectionAdapter adapterMock = EasyMock.createStrictMock(CollectionAdapter.class);", "modifier": "private", "type": "CollectionAdapter", "declarator": "adapterMock = EasyMock.createStrictMock(CollectionAdapter.class)", "var_name": "adapterMock"}, {"original_string": "private RequestContext requestMock = EasyMock.createStrictMock(RequestContext.class);", "modifier": "private", "type": "RequestContext", "declarator": "requestMock = EasyMock.createStrictMock(RequestContext.class)", "var_name": "requestMock"}, {"original_string": "private ResponseContext responseMock = EasyMock.createStrictMock(ResponseContext.class);", "modifier": "private", "type": "ResponseContext", "declarator": "responseMock = EasyMock.createStrictMock(ResponseContext.class)", "var_name": "responseMock"}], "file": "server/src/test/java/org/apache/abdera/protocol/server/processors/EntryRequestProcessorTest.java"}, "test_case": {"identifier": "testProcessEntryHead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n        public void testProcessEntryHead() {\n                EasyMock.replay(responseMock);\n                \n                EasyMock.expect(requestMock.getMethod()).andReturn(\"HEAD\");\n                EasyMock.replay(requestMock);\n                \n                EasyMock.expect(adapterMock.headEntry(requestMock)).andReturn(responseMock);\n                EasyMock.replay(adapterMock);\n                \n                ResponseContext response = processor.processEntry(requestMock, adapterMock);\n                assertNotNull(response);\n        }", "signature": "void testProcessEntryHead()", "full_signature": "@Test public void testProcessEntryHead()", "class_method_signature": "EntryRequestProcessorTest.testProcessEntryHead()", "testcase": true, "constructor": false, "invocations": ["replay", "andReturn", "expect", "getMethod", "replay", "andReturn", "expect", "headEntry", "replay", "processEntry", "assertNotNull"]}, "focal_class": {"identifier": "EntryRequestProcessor", "superclass": "", "interfaces": "implements RequestProcessor", "fields": [], "methods": [{"identifier": "process", "parameters": "(RequestContext context,\n                                   WorkspaceManager workspaceManager,\n                                   CollectionAdapter collectionAdapter)", "modifiers": "public", "return": "ResponseContext", "signature": "ResponseContext process(RequestContext context,\n                                   WorkspaceManager workspaceManager,\n                                   CollectionAdapter collectionAdapter)", "full_signature": "public ResponseContext process(RequestContext context,\n                                   WorkspaceManager workspaceManager,\n                                   CollectionAdapter collectionAdapter)", "class_method_signature": "EntryRequestProcessor.process(RequestContext context,\n                                   WorkspaceManager workspaceManager,\n                                   CollectionAdapter collectionAdapter)", "testcase": false, "constructor": false}, {"identifier": "processEntry", "parameters": "(RequestContext context, CollectionAdapter adapter)", "modifiers": "protected", "return": "ResponseContext", "signature": "ResponseContext processEntry(RequestContext context, CollectionAdapter adapter)", "full_signature": "protected ResponseContext processEntry(RequestContext context, CollectionAdapter adapter)", "class_method_signature": "EntryRequestProcessor.processEntry(RequestContext context, CollectionAdapter adapter)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/apache/abdera/protocol/server/processors/EntryRequestProcessor.java"}, "focal_method": {"identifier": "processEntry", "parameters": "(RequestContext context, CollectionAdapter adapter)", "modifiers": "protected", "return": "ResponseContext", "body": "protected ResponseContext processEntry(RequestContext context, CollectionAdapter adapter) {\n        String method = context.getMethod();\n        if (method.equalsIgnoreCase(\"GET\")) {\n            return adapter.getEntry(context);\n        } else if (method.equalsIgnoreCase(\"POST\")) {\n            return adapter.postEntry(context);\n        } else if (method.equalsIgnoreCase(\"PUT\")) {\n            return adapter.putEntry(context);\n        } else if (method.equalsIgnoreCase(\"DELETE\")) {\n            return adapter.deleteEntry(context);\n        } else if (method.equalsIgnoreCase(\"HEAD\")) {\n            return adapter.headEntry(context);\n        } else if (method.equalsIgnoreCase(\"OPTIONS\")) {\n            return adapter.optionsEntry(context);\n        } else {\n            return null;\n        }\n    }", "signature": "ResponseContext processEntry(RequestContext context, CollectionAdapter adapter)", "full_signature": "protected ResponseContext processEntry(RequestContext context, CollectionAdapter adapter)", "class_method_signature": "EntryRequestProcessor.processEntry(RequestContext context, CollectionAdapter adapter)", "testcase": false, "constructor": false, "invocations": ["getMethod", "equalsIgnoreCase", "getEntry", "equalsIgnoreCase", "postEntry", "equalsIgnoreCase", "putEntry", "equalsIgnoreCase", "deleteEntry", "equalsIgnoreCase", "headEntry", "equalsIgnoreCase", "optionsEntry"]}, "repository": {"repo_id": 206482, "url": "https://github.com/apache/abdera", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 15, "size": 12255, "license": "licensed"}}