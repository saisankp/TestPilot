{"test_class": {"identifier": "DbParameterAccessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "int sqlType = VARCHAR;", "modifier": "", "type": "int", "declarator": "sqlType = VARCHAR", "var_name": "sqlType"}, {"original_string": "String inputValue = \"The input value\";", "modifier": "", "type": "String", "declarator": "inputValue = \"The input value\"", "var_name": "inputValue"}, {"original_string": "int position = 1;", "modifier": "", "type": "int", "declarator": "position = 1", "var_name": "position"}, {"original_string": "String userDefinedTypeName = \"whatever\";", "modifier": "", "type": "String", "declarator": "userDefinedTypeName = \"whatever\"", "var_name": "userDefinedTypeName"}, {"original_string": "TypeTransformerFactory inputTransformerFactory;", "modifier": "", "type": "TypeTransformerFactory", "declarator": "inputTransformerFactory", "var_name": "inputTransformerFactory"}, {"original_string": "StatementExecution statement;", "modifier": "", "type": "StatementExecution", "declarator": "statement", "var_name": "statement"}, {"original_string": "DbParameterAccessor dbpa;", "modifier": "", "type": "DbParameterAccessor", "declarator": "dbpa", "var_name": "dbpa"}], "file": "dbfit-java/core/src/test/java/dbfit/util/DbParameterAccessorTest.java"}, "test_case": {"identifier": "inputObjectIsNotTransformedBeforeJdbcBindingWhenNoTransformerSpecifierTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void inputObjectIsNotTransformedBeforeJdbcBindingWhenNoTransformerSpecifierTest() throws Exception {\n        when(inputTransformerFactory.getTransformer(inputValue.getClass())).thenReturn(null);\n        dbpa.set(inputValue);\n        verify(statement).setObject(position, inputValue, sqlType, userDefinedTypeName);\n    }", "signature": "void inputObjectIsNotTransformedBeforeJdbcBindingWhenNoTransformerSpecifierTest()", "full_signature": "@Test public void inputObjectIsNotTransformedBeforeJdbcBindingWhenNoTransformerSpecifierTest()", "class_method_signature": "DbParameterAccessorTest.inputObjectIsNotTransformedBeforeJdbcBindingWhenNoTransformerSpecifierTest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getTransformer", "getClass", "set", "setObject", "verify"]}, "focal_class": {"identifier": "DbParameterAccessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int index;", "modifier": "private", "type": "int", "declarator": "index", "var_name": "index"}, {"original_string": "private Direction direction;", "modifier": "private", "type": "Direction", "declarator": "direction", "var_name": "direction"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private int sqlType;", "modifier": "private", "type": "int", "declarator": "sqlType", "var_name": "sqlType"}, {"original_string": "private String userDefinedTypeName;", "modifier": "private", "type": "String", "declarator": "userDefinedTypeName", "var_name": "userDefinedTypeName"}, {"original_string": "private Class<?> javaType;", "modifier": "private", "type": "Class<?>", "declarator": "javaType", "var_name": "javaType"}, {"original_string": "private int position;", "modifier": "private", "type": "int", "declarator": "position", "var_name": "position"}, {"original_string": "protected StatementExecution cs;", "modifier": "protected", "type": "StatementExecution", "declarator": "cs", "var_name": "cs"}, {"original_string": "private TypeTransformerFactory dbfitToJdbcTransformerFactory;", "modifier": "private", "type": "TypeTransformerFactory", "declarator": "dbfitToJdbcTransformerFactory", "var_name": "dbfitToJdbcTransformerFactory"}], "methods": [{"identifier": "copy", "parameters": "()", "modifiers": "protected", "return": "DbParameterAccessor", "signature": "DbParameterAccessor copy()", "full_signature": "protected DbParameterAccessor copy()", "class_method_signature": "DbParameterAccessor.copy()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "DbParameterAccessor", "signature": "DbParameterAccessor clone()", "full_signature": "@Override public DbParameterAccessor clone()", "class_method_signature": "DbParameterAccessor.clone()", "testcase": false, "constructor": false}, {"identifier": "DbParameterAccessor", "parameters": "(String name, Direction direction, int sqlType, Class javaType, int position,\n                               TypeTransformerFactory dbfitToJdbcTransformerFactory)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " DbParameterAccessor(String name, Direction direction, int sqlType, Class javaType, int position,\n                               TypeTransformerFactory dbfitToJdbcTransformerFactory)", "full_signature": "@SuppressWarnings(\"unchecked\") public  DbParameterAccessor(String name, Direction direction, int sqlType, Class javaType, int position,\n                               TypeTransformerFactory dbfitToJdbcTransformerFactory)", "class_method_signature": "DbParameterAccessor.DbParameterAccessor(String name, Direction direction, int sqlType, Class javaType, int position,\n                               TypeTransformerFactory dbfitToJdbcTransformerFactory)", "testcase": false, "constructor": true}, {"identifier": "DbParameterAccessor", "parameters": "(String name, Direction direction, int sqlType, String userDefinedTypeName, Class javaType, int position,\n                               TypeTransformerFactory dbfitToJdbcTransformerFactory)", "modifiers": "public", "return": "", "signature": " DbParameterAccessor(String name, Direction direction, int sqlType, String userDefinedTypeName, Class javaType, int position,\n                               TypeTransformerFactory dbfitToJdbcTransformerFactory)", "full_signature": "public  DbParameterAccessor(String name, Direction direction, int sqlType, String userDefinedTypeName, Class javaType, int position,\n                               TypeTransformerFactory dbfitToJdbcTransformerFactory)", "class_method_signature": "DbParameterAccessor.DbParameterAccessor(String name, Direction direction, int sqlType, String userDefinedTypeName, Class javaType, int position,\n                               TypeTransformerFactory dbfitToJdbcTransformerFactory)", "testcase": false, "constructor": true}, {"identifier": "getSqlType", "parameters": "()", "modifiers": "protected", "return": "int", "signature": "int getSqlType()", "full_signature": "protected int getSqlType()", "class_method_signature": "DbParameterAccessor.getSqlType()", "testcase": false, "constructor": false}, {"identifier": "getUserDefinedTypeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserDefinedTypeName()", "full_signature": "public String getUserDefinedTypeName()", "class_method_signature": "DbParameterAccessor.getUserDefinedTypeName()", "testcase": false, "constructor": false}, {"identifier": "getDirection", "parameters": "()", "modifiers": "public", "return": "Direction", "signature": "Direction getDirection()", "full_signature": "public Direction getDirection()", "class_method_signature": "DbParameterAccessor.getDirection()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "DbParameterAccessor.getName()", "testcase": false, "constructor": false}, {"identifier": "setDirection", "parameters": "(Direction direction)", "modifiers": "public", "return": "void", "signature": "void setDirection(Direction direction)", "full_signature": "public void setDirection(Direction direction)", "class_method_signature": "DbParameterAccessor.setDirection(Direction direction)", "testcase": false, "constructor": false}, {"identifier": "bindTo", "parameters": "(StatementExecution cs, int ind)", "modifiers": "public", "return": "void", "signature": "void bindTo(StatementExecution cs, int ind)", "full_signature": "public void bindTo(StatementExecution cs, int ind)", "class_method_signature": "DbParameterAccessor.bindTo(StatementExecution cs, int ind)", "testcase": false, "constructor": false}, {"identifier": "toJdbcCompatibleValue", "parameters": "(Object value)", "modifiers": "private", "return": "Object", "signature": "Object toJdbcCompatibleValue(Object value)", "full_signature": "private Object toJdbcCompatibleValue(Object value)", "class_method_signature": "DbParameterAccessor.toJdbcCompatibleValue(Object value)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(Object value)", "modifiers": "public", "return": "void", "signature": "void set(Object value)", "full_signature": "public void set(Object value)", "class_method_signature": "DbParameterAccessor.set(Object value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object get()", "full_signature": "public Object get()", "class_method_signature": "DbParameterAccessor.get()", "testcase": false, "constructor": false}, {"identifier": "getPosition", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPosition()", "full_signature": "public int getPosition()", "class_method_signature": "DbParameterAccessor.getPosition()", "testcase": false, "constructor": false}, {"identifier": "getJavaType", "parameters": "()", "modifiers": "public", "return": "Class<?>", "signature": "Class<?> getJavaType()", "full_signature": "public Class<?> getJavaType()", "class_method_signature": "DbParameterAccessor.getJavaType()", "testcase": false, "constructor": false}, {"identifier": "getDbfitToJdbcTransformerFactory", "parameters": "()", "modifiers": "protected", "return": "TypeTransformerFactory", "signature": "TypeTransformerFactory getDbfitToJdbcTransformerFactory()", "full_signature": "protected TypeTransformerFactory getDbfitToJdbcTransformerFactory()", "class_method_signature": "DbParameterAccessor.getDbfitToJdbcTransformerFactory()", "testcase": false, "constructor": false}, {"identifier": "isReturnValueAccessor", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReturnValueAccessor()", "full_signature": "public boolean isReturnValueAccessor()", "class_method_signature": "DbParameterAccessor.isReturnValueAccessor()", "testcase": false, "constructor": false}, {"identifier": "hasDirection", "parameters": "(Direction expectedDirection)", "modifiers": "public", "return": "boolean", "signature": "boolean hasDirection(Direction expectedDirection)", "full_signature": "public boolean hasDirection(Direction expectedDirection)", "class_method_signature": "DbParameterAccessor.hasDirection(Direction expectedDirection)", "testcase": false, "constructor": false}, {"identifier": "doesNotHaveDirection", "parameters": "(Direction expectedDirection)", "modifiers": "public", "return": "boolean", "signature": "boolean doesNotHaveDirection(Direction expectedDirection)", "full_signature": "public boolean doesNotHaveDirection(Direction expectedDirection)", "class_method_signature": "DbParameterAccessor.doesNotHaveDirection(Direction expectedDirection)", "testcase": false, "constructor": false}], "file": "dbfit-java/core/src/main/java/dbfit/util/DbParameterAccessor.java"}, "focal_method": {"identifier": "set", "parameters": "(Object value)", "modifiers": "public", "return": "void", "body": "public void set(Object value) throws Exception {\n        if (direction == OUTPUT || direction == RETURN_VALUE) {\n            throw new UnsupportedOperationException(\"Trying to set value of output parameter \" + name);\n        }\n        cs.setObject(index, toJdbcCompatibleValue(value), sqlType, userDefinedTypeName);\n    }", "signature": "void set(Object value)", "full_signature": "public void set(Object value)", "class_method_signature": "DbParameterAccessor.set(Object value)", "testcase": false, "constructor": false, "invocations": ["setObject", "toJdbcCompatibleValue"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}