{"test_class": {"identifier": "InstrumentedOkHttpClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MetricRegistry registry;", "modifier": "private", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private OkHttpClient rawClient;", "modifier": "private", "type": "OkHttpClient", "declarator": "rawClient", "var_name": "rawClient"}, {"original_string": "@Rule public MockWebServer server = new MockWebServer();", "modifier": "@Rule public", "type": "MockWebServer", "declarator": "server = new MockWebServer()", "var_name": "server"}, {"original_string": "@Rule public TemporaryFolder cacheRule = new TemporaryFolder();", "modifier": "@Rule public", "type": "TemporaryFolder", "declarator": "cacheRule = new TemporaryFolder()", "var_name": "cacheRule"}], "file": "metrics-okhttp/src/test/java/com/raskasa/metrics/okhttp/InstrumentedOkHttpClientTest.java"}, "test_case": {"identifier": "providedNameUsedInMetricId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void providedNameUsedInMetricId() {\n    String prefix = \"custom\";\n    String baseId = \"network-requests-submitted\";\n\n    assertThat(registry.getMeters()).isEmpty();\n\n    InstrumentedOkHttpClient client = new InstrumentedOkHttpClient(registry, rawClient, prefix);\n    String generatedId = client.metricId(baseId);\n\n    assertThat(registry.getMeters().get(generatedId)).isNotNull();\n  }", "signature": "void providedNameUsedInMetricId()", "full_signature": "@Test public void providedNameUsedInMetricId()", "class_method_signature": "InstrumentedOkHttpClientTest.providedNameUsedInMetricId()", "testcase": true, "constructor": false, "invocations": ["isEmpty", "assertThat", "getMeters", "metricId", "isNotNull", "assertThat", "get", "getMeters"]}, "focal_class": {"identifier": "InstrumentedOkHttpClient", "superclass": "extends OkHttpClient", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(InstrumentedOkHttpClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(InstrumentedOkHttpClient.class)", "var_name": "LOG"}, {"original_string": "private final MetricRegistry registry;", "modifier": "private final", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private OkHttpClient rawClient;", "modifier": "private", "type": "OkHttpClient", "declarator": "rawClient", "var_name": "rawClient"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "InstrumentedOkHttpClient", "parameters": "(MetricRegistry registry, OkHttpClient rawClient, String name)", "modifiers": "", "return": "", "signature": " InstrumentedOkHttpClient(MetricRegistry registry, OkHttpClient rawClient, String name)", "full_signature": "  InstrumentedOkHttpClient(MetricRegistry registry, OkHttpClient rawClient, String name)", "class_method_signature": "InstrumentedOkHttpClient.InstrumentedOkHttpClient(MetricRegistry registry, OkHttpClient rawClient, String name)", "testcase": false, "constructor": true}, {"identifier": "metricId", "parameters": "(String metric)", "modifiers": "", "return": "String", "signature": "String metricId(String metric)", "full_signature": " String metricId(String metric)", "class_method_signature": "InstrumentedOkHttpClient.metricId(String metric)", "testcase": false, "constructor": false}, {"identifier": "instrumentHttpCache", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void instrumentHttpCache()", "full_signature": "private void instrumentHttpCache()", "class_method_signature": "InstrumentedOkHttpClient.instrumentHttpCache()", "testcase": false, "constructor": false}, {"identifier": "instrumentConnectionPool", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void instrumentConnectionPool()", "full_signature": "private void instrumentConnectionPool()", "class_method_signature": "InstrumentedOkHttpClient.instrumentConnectionPool()", "testcase": false, "constructor": false}, {"identifier": "instrumentNetworkRequests", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void instrumentNetworkRequests()", "full_signature": "private void instrumentNetworkRequests()", "class_method_signature": "InstrumentedOkHttpClient.instrumentNetworkRequests()", "testcase": false, "constructor": false}, {"identifier": "authenticator", "parameters": "()", "modifiers": "@Override public", "return": "Authenticator", "signature": "Authenticator authenticator()", "full_signature": "@Override public Authenticator authenticator()", "class_method_signature": "InstrumentedOkHttpClient.authenticator()", "testcase": false, "constructor": false}, {"identifier": "cache", "parameters": "()", "modifiers": "@Override public", "return": "Cache", "signature": "Cache cache()", "full_signature": "@Override public Cache cache()", "class_method_signature": "InstrumentedOkHttpClient.cache()", "testcase": false, "constructor": false}, {"identifier": "certificatePinner", "parameters": "()", "modifiers": "@Override public", "return": "CertificatePinner", "signature": "CertificatePinner certificatePinner()", "full_signature": "@Override public CertificatePinner certificatePinner()", "class_method_signature": "InstrumentedOkHttpClient.certificatePinner()", "testcase": false, "constructor": false}, {"identifier": "connectionPool", "parameters": "()", "modifiers": "@Override public", "return": "ConnectionPool", "signature": "ConnectionPool connectionPool()", "full_signature": "@Override public ConnectionPool connectionPool()", "class_method_signature": "InstrumentedOkHttpClient.connectionPool()", "testcase": false, "constructor": false}, {"identifier": "connectionSpecs", "parameters": "()", "modifiers": "@Override public", "return": "List<ConnectionSpec>", "signature": "List<ConnectionSpec> connectionSpecs()", "full_signature": "@Override public List<ConnectionSpec> connectionSpecs()", "class_method_signature": "InstrumentedOkHttpClient.connectionSpecs()", "testcase": false, "constructor": false}, {"identifier": "connectTimeoutMillis", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int connectTimeoutMillis()", "full_signature": "@Override public int connectTimeoutMillis()", "class_method_signature": "InstrumentedOkHttpClient.connectTimeoutMillis()", "testcase": false, "constructor": false}, {"identifier": "cookieJar", "parameters": "()", "modifiers": "@Override public", "return": "CookieJar", "signature": "CookieJar cookieJar()", "full_signature": "@Override public CookieJar cookieJar()", "class_method_signature": "InstrumentedOkHttpClient.cookieJar()", "testcase": false, "constructor": false}, {"identifier": "dispatcher", "parameters": "()", "modifiers": "@Override public", "return": "Dispatcher", "signature": "Dispatcher dispatcher()", "full_signature": "@Override public Dispatcher dispatcher()", "class_method_signature": "InstrumentedOkHttpClient.dispatcher()", "testcase": false, "constructor": false}, {"identifier": "dns", "parameters": "()", "modifiers": "@Override public", "return": "Dns", "signature": "Dns dns()", "full_signature": "@Override public Dns dns()", "class_method_signature": "InstrumentedOkHttpClient.dns()", "testcase": false, "constructor": false}, {"identifier": "followRedirects", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean followRedirects()", "full_signature": "@Override public boolean followRedirects()", "class_method_signature": "InstrumentedOkHttpClient.followRedirects()", "testcase": false, "constructor": false}, {"identifier": "followSslRedirects", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean followSslRedirects()", "full_signature": "@Override public boolean followSslRedirects()", "class_method_signature": "InstrumentedOkHttpClient.followSslRedirects()", "testcase": false, "constructor": false}, {"identifier": "hostnameVerifier", "parameters": "()", "modifiers": "@Override public", "return": "HostnameVerifier", "signature": "HostnameVerifier hostnameVerifier()", "full_signature": "@Override public HostnameVerifier hostnameVerifier()", "class_method_signature": "InstrumentedOkHttpClient.hostnameVerifier()", "testcase": false, "constructor": false}, {"identifier": "interceptors", "parameters": "()", "modifiers": "@Override public", "return": "List<Interceptor>", "signature": "List<Interceptor> interceptors()", "full_signature": "@Override public List<Interceptor> interceptors()", "class_method_signature": "InstrumentedOkHttpClient.interceptors()", "testcase": false, "constructor": false}, {"identifier": "networkInterceptors", "parameters": "()", "modifiers": "@Override public", "return": "List<Interceptor>", "signature": "List<Interceptor> networkInterceptors()", "full_signature": "@Override public List<Interceptor> networkInterceptors()", "class_method_signature": "InstrumentedOkHttpClient.networkInterceptors()", "testcase": false, "constructor": false}, {"identifier": "newBuilder", "parameters": "()", "modifiers": "@Override public", "return": "OkHttpClient.Builder", "signature": "OkHttpClient.Builder newBuilder()", "full_signature": "@Override public OkHttpClient.Builder newBuilder()", "class_method_signature": "InstrumentedOkHttpClient.newBuilder()", "testcase": false, "constructor": false}, {"identifier": "newCall", "parameters": "(Request request)", "modifiers": "@Override public", "return": "Call", "signature": "Call newCall(Request request)", "full_signature": "@Override public Call newCall(Request request)", "class_method_signature": "InstrumentedOkHttpClient.newCall(Request request)", "testcase": false, "constructor": false}, {"identifier": "newWebSocket", "parameters": "(Request request, WebSocketListener listener)", "modifiers": "@Override public", "return": "WebSocket", "signature": "WebSocket newWebSocket(Request request, WebSocketListener listener)", "full_signature": "@Override public WebSocket newWebSocket(Request request, WebSocketListener listener)", "class_method_signature": "InstrumentedOkHttpClient.newWebSocket(Request request, WebSocketListener listener)", "testcase": false, "constructor": false}, {"identifier": "pingIntervalMillis", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int pingIntervalMillis()", "full_signature": "@Override public int pingIntervalMillis()", "class_method_signature": "InstrumentedOkHttpClient.pingIntervalMillis()", "testcase": false, "constructor": false}, {"identifier": "protocols", "parameters": "()", "modifiers": "@Override public", "return": "List<Protocol>", "signature": "List<Protocol> protocols()", "full_signature": "@Override public List<Protocol> protocols()", "class_method_signature": "InstrumentedOkHttpClient.protocols()", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "()", "modifiers": "@Override public", "return": "Proxy", "signature": "Proxy proxy()", "full_signature": "@Override public Proxy proxy()", "class_method_signature": "InstrumentedOkHttpClient.proxy()", "testcase": false, "constructor": false}, {"identifier": "proxyAuthenticator", "parameters": "()", "modifiers": "@Override public", "return": "Authenticator", "signature": "Authenticator proxyAuthenticator()", "full_signature": "@Override public Authenticator proxyAuthenticator()", "class_method_signature": "InstrumentedOkHttpClient.proxyAuthenticator()", "testcase": false, "constructor": false}, {"identifier": "proxySelector", "parameters": "()", "modifiers": "@Override public", "return": "ProxySelector", "signature": "ProxySelector proxySelector()", "full_signature": "@Override public ProxySelector proxySelector()", "class_method_signature": "InstrumentedOkHttpClient.proxySelector()", "testcase": false, "constructor": false}, {"identifier": "readTimeoutMillis", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int readTimeoutMillis()", "full_signature": "@Override public int readTimeoutMillis()", "class_method_signature": "InstrumentedOkHttpClient.readTimeoutMillis()", "testcase": false, "constructor": false}, {"identifier": "retryOnConnectionFailure", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retryOnConnectionFailure()", "full_signature": "@Override public boolean retryOnConnectionFailure()", "class_method_signature": "InstrumentedOkHttpClient.retryOnConnectionFailure()", "testcase": false, "constructor": false}, {"identifier": "socketFactory", "parameters": "()", "modifiers": "@Override public", "return": "SocketFactory", "signature": "SocketFactory socketFactory()", "full_signature": "@Override public SocketFactory socketFactory()", "class_method_signature": "InstrumentedOkHttpClient.socketFactory()", "testcase": false, "constructor": false}, {"identifier": "sslSocketFactory", "parameters": "()", "modifiers": "@Override public", "return": "SSLSocketFactory", "signature": "SSLSocketFactory sslSocketFactory()", "full_signature": "@Override public SSLSocketFactory sslSocketFactory()", "class_method_signature": "InstrumentedOkHttpClient.sslSocketFactory()", "testcase": false, "constructor": false}, {"identifier": "writeTimeoutMillis", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int writeTimeoutMillis()", "full_signature": "@Override public int writeTimeoutMillis()", "class_method_signature": "InstrumentedOkHttpClient.writeTimeoutMillis()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "InstrumentedOkHttpClient.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "InstrumentedOkHttpClient.toString()", "testcase": false, "constructor": false}], "file": "metrics-okhttp/src/main/java/com/raskasa/metrics/okhttp/InstrumentedOkHttpClient.java"}, "focal_method": {"identifier": "metricId", "parameters": "(String metric)", "modifiers": "", "return": "String", "body": "String metricId(String metric) {\n    return name(OkHttpClient.class, name, metric);\n  }", "signature": "String metricId(String metric)", "full_signature": " String metricId(String metric)", "class_method_signature": "InstrumentedOkHttpClient.metricId(String metric)", "testcase": false, "constructor": false, "invocations": ["name"]}, "repository": {"repo_id": 39215543, "url": "https://github.com/raskasa/metrics-okhttp", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 15, "size": 101, "license": "licensed"}}