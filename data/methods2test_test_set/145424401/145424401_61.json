{"test_class": {"identifier": "CommandParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String UPLOAD_CONSTRUCT_OPTION = \"u\";", "modifier": "private static final", "type": "String", "declarator": "UPLOAD_CONSTRUCT_OPTION = \"u\"", "var_name": "UPLOAD_CONSTRUCT_OPTION"}, {"original_string": "private static final String DIRECTORY_OPTION = \"d\";", "modifier": "private static final", "type": "String", "declarator": "DIRECTORY_OPTION = \"d\"", "var_name": "DIRECTORY_OPTION"}, {"original_string": "private static final String OVERWRITE_OPTION = \"o\";", "modifier": "private static final", "type": "String", "declarator": "OVERWRITE_OPTION = \"o\"", "var_name": "OVERWRITE_OPTION"}, {"original_string": "private static final String VERBOSE_OPTION = \"v\";", "modifier": "private static final", "type": "String", "declarator": "VERBOSE_OPTION = \"v\"", "var_name": "VERBOSE_OPTION"}, {"original_string": "private static final String UPLOAD_LONG_OPTION = \"upload\";", "modifier": "private static final", "type": "String", "declarator": "UPLOAD_LONG_OPTION = \"upload\"", "var_name": "UPLOAD_LONG_OPTION"}, {"original_string": "private static final String VERBOSE_LONG_OPTION = \"verbose\";", "modifier": "private static final", "type": "String", "declarator": "VERBOSE_LONG_OPTION = \"verbose\"", "var_name": "VERBOSE_LONG_OPTION"}, {"original_string": "private static final String OVERWRITE_LONG_OPTION = \"overwrite\";", "modifier": "private static final", "type": "String", "declarator": "OVERWRITE_LONG_OPTION = \"overwrite\"", "var_name": "OVERWRITE_LONG_OPTION"}, {"original_string": "private static final String DIRECTORY_LONG_OPTION = \"directory\";", "modifier": "private static final", "type": "String", "declarator": "DIRECTORY_LONG_OPTION = \"directory\"", "var_name": "DIRECTORY_LONG_OPTION"}], "file": "kb-importer/src/test/java/org/eclipse/steady/kb/command/CommandParserTest.java"}, "test_case": {"identifier": "testRequiredOptions", "parameters": "()", "modifiers": "@Test(expected = CommandLineParserException.class) public", "return": "void", "body": "@Test(expected = CommandLineParserException.class)\n  public void testRequiredOptions() throws CommandLineParserException {\n    Options options = new Options();\n    options.addRequiredOption(\n        DIRECTORY_OPTION,\n        DIRECTORY_LONG_OPTION,\n        true,\n        \"directory containing mutiple commit folders with meta files\");\n    options.addOption(\n        OVERWRITE_OPTION,\n        OVERWRITE_LONG_OPTION,\n        false,\n        \"overwrite the bug if it already exists in the backend\");\n    options.addOption(VERBOSE_OPTION, VERBOSE_LONG_OPTION, false, \"Verbose mode\");\n    options.addOption(\n        UPLOAD_CONSTRUCT_OPTION, UPLOAD_LONG_OPTION, false, \"Upload construct changes\");\n\n    String _args = \"-u -v\";\n    CommandParser.parse(_args.split(\" \"), options);\n  }", "signature": "void testRequiredOptions()", "full_signature": "@Test(expected = CommandLineParserException.class) public void testRequiredOptions()", "class_method_signature": "CommandParserTest.testRequiredOptions()", "testcase": true, "constructor": false, "invocations": ["addRequiredOption", "addOption", "addOption", "addOption", "parse", "split"]}, "focal_class": {"identifier": "CommandParser", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parse", "parameters": "(String[] _args, Options options)", "modifiers": "public static", "return": "HashMap<String, Object>", "signature": "HashMap<String, Object> parse(String[] _args, Options options)", "full_signature": "public static HashMap<String, Object> parse(String[] _args, Options options)", "class_method_signature": "CommandParser.parse(String[] _args, Options options)", "testcase": false, "constructor": false}], "file": "kb-importer/src/main/java/org/eclipse/steady/kb/command/CommandParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String[] _args, Options options)", "modifiers": "public static", "return": "HashMap<String, Object>", "body": "public static HashMap<String, Object> parse(String[] _args, Options options)\n      throws CommandLineParserException {\n    final CommandLineParser parser = new DefaultParser();\n    CommandLine cmd = null;\n    try {\n      cmd = parser.parse(options, _args, true);\n    } catch (ParseException e) {\n      throw new CommandLineParserException(e.getMessage());\n    }\n\n    HashMap<String, Object> mapOptionValues = new HashMap<>();\n    Collection<Option> optionCollection = options.getOptions();\n    for (Option option : optionCollection) {\n      if (option.hasArg()) {\n        mapOptionValues.put(option.getOpt(), cmd.getOptionValue(option.getOpt()));\n      } else {\n        if (cmd.hasOption(option.getOpt()) || cmd.hasOption(option.getLongOpt())) {\n          mapOptionValues.put(option.getOpt(), true);\n        } else {\n          mapOptionValues.put(option.getOpt(), false);\n        }\n      }\n    }\n\n    return mapOptionValues;\n  }", "signature": "HashMap<String, Object> parse(String[] _args, Options options)", "full_signature": "public static HashMap<String, Object> parse(String[] _args, Options options)", "class_method_signature": "CommandParser.parse(String[] _args, Options options)", "testcase": false, "constructor": false, "invocations": ["parse", "getMessage", "getOptions", "hasArg", "put", "getOpt", "getOptionValue", "getOpt", "hasOption", "getOpt", "hasOption", "getLongOpt", "put", "getOpt", "put", "getOpt"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}