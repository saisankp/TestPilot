{"test_class": {"identifier": "DefaultDeflateCompatibilityWindowTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultDeflateCompatibilityWindow window = null;", "modifier": "private", "type": "DefaultDeflateCompatibilityWindow", "declarator": "window = null", "var_name": "window"}, {"original_string": "private final JreDeflateParameters brokenParameters = JreDeflateParameters.of(1, 0, true);", "modifier": "private final", "type": "JreDeflateParameters", "declarator": "brokenParameters = JreDeflateParameters.of(1, 0, true)", "var_name": "brokenParameters"}], "file": "feya/libraries/archive_diff/diff.shared/src/test/java/com/google/archivepatcher/shared/DefaultDeflateCompatibilityWindowTest.java"}, "test_case": {"identifier": "testGetSystemValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetSystemValues() {\n    // Basic sanity test: ensure it doesn't crash and isn't null, and contains all the values that\n    // we care about.\n    ensureHasAllKeys(window.getSystemValues());\n  }", "signature": "void testGetSystemValues()", "full_signature": "@Test public void testGetSystemValues()", "class_method_signature": "DefaultDeflateCompatibilityWindowTest.testGetSystemValues()", "testcase": true, "constructor": false, "invocations": ["ensureHasAllKeys", "getSystemValues"]}, "focal_class": {"identifier": "DefaultDeflateCompatibilityWindow", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CORPUS_BASE_TEXT =\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \"\n          + \"ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation \"\n          + \"ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in \"\n          + \"reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \"\n          + \"Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt \"\n          + \"mollit anim id est laborum.\";", "modifier": "private static final", "type": "String", "declarator": "CORPUS_BASE_TEXT =\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \"\n          + \"ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation \"\n          + \"ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in \"\n          + \"reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \"\n          + \"Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt \"\n          + \"mollit anim id est laborum.\"", "var_name": "CORPUS_BASE_TEXT"}], "methods": [{"identifier": "generateBaseline", "parameters": "()", "modifiers": "private static final", "return": "Map<JreDeflateParameters, String>", "signature": "Map<JreDeflateParameters, String> generateBaseline()", "full_signature": "private static final Map<JreDeflateParameters, String> generateBaseline()", "class_method_signature": "DefaultDeflateCompatibilityWindow.generateBaseline()", "testcase": false, "constructor": false}, {"identifier": "getBaselineValues", "parameters": "()", "modifiers": "public", "return": "Map<JreDeflateParameters, String>", "signature": "Map<JreDeflateParameters, String> getBaselineValues()", "full_signature": "public Map<JreDeflateParameters, String> getBaselineValues()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getBaselineValues()", "testcase": false, "constructor": false}, {"identifier": "generateCorpus", "parameters": "()", "modifiers": "private static final", "return": "byte[]", "signature": "byte[] generateCorpus()", "full_signature": "private static final byte[] generateCorpus()", "class_method_signature": "DefaultDeflateCompatibilityWindow.generateCorpus()", "testcase": false, "constructor": false}, {"identifier": "getCorpus", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getCorpus()", "full_signature": "public byte[] getCorpus()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getCorpus()", "testcase": false, "constructor": false}, {"identifier": "hexString", "parameters": "(byte[] bytes)", "modifiers": "private final static", "return": "String", "signature": "String hexString(byte[] bytes)", "full_signature": "private final static String hexString(byte[] bytes)", "class_method_signature": "DefaultDeflateCompatibilityWindow.hexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "isCompatible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCompatible()", "full_signature": "public boolean isCompatible()", "class_method_signature": "DefaultDeflateCompatibilityWindow.isCompatible()", "testcase": false, "constructor": false}, {"identifier": "getIncompatibleValues", "parameters": "()", "modifiers": "public", "return": "Map<JreDeflateParameters, String>", "signature": "Map<JreDeflateParameters, String> getIncompatibleValues()", "full_signature": "public Map<JreDeflateParameters, String> getIncompatibleValues()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getIncompatibleValues()", "testcase": false, "constructor": false}, {"identifier": "getSystemValues", "parameters": "()", "modifiers": "public", "return": "Map<JreDeflateParameters, String>", "signature": "Map<JreDeflateParameters, String> getSystemValues()", "full_signature": "public Map<JreDeflateParameters, String> getSystemValues()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getSystemValues()", "testcase": false, "constructor": false}], "file": "feya/libraries/archive_diff/diff.shared/src/main/java/com/google/archivepatcher/shared/DefaultDeflateCompatibilityWindow.java"}, "focal_method": {"identifier": "getSystemValues", "parameters": "()", "modifiers": "public", "return": "Map<JreDeflateParameters, String>", "body": "public Map<JreDeflateParameters, String> getSystemValues() {\n    Map<JreDeflateParameters, String> result = new HashMap<JreDeflateParameters, String>();\n    MessageDigest digester;\n    try {\n      digester = MessageDigest.getInstance(\"SHA-256\");\n    } catch (NoSuchAlgorithmException e) {\n      throw new RuntimeException(\"System doesn't support SHA-256\", e);\n    }\n\n    DeflateCompressor compressor = new DeflateCompressor();\n    compressor.setCaching(true);  // Makes this computation lighter weight.\n    boolean[] nowrapValues = {true, false};\n    int[] strategies = {Deflater.DEFAULT_STRATEGY, Deflater.FILTERED, Deflater.HUFFMAN_ONLY};\n    int[] levels = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n    for (final boolean nowrap : nowrapValues) {\n      compressor.setNowrap(nowrap);\n      for (final int strategy : strategies) {\n        compressor.setStrategy(strategy);\n        final int[] relevantLevels;\n        if (strategy == Deflater.HUFFMAN_ONLY) {\n          // There is no concept of a compression level with this\n          // strategy.\n          relevantLevels = new int[] {1};\n        } else {\n          relevantLevels = levels;\n        }\n        for (final int level : relevantLevels) {\n          compressor.setCompressionLevel(level);\n          ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n          try {\n            compressor.compress(new ByteArrayInputStream(CorpusHolder.CORPUS_INSTANCE), buffer);\n          } catch (IOException e) {\n            throw new RuntimeException(e); // This should never occur as it's all in-memory.\n          }\n          byte[] compressedData = buffer.toByteArray();\n          digester.reset();\n          byte[] sha256OfCompressedData = digester.digest(compressedData);\n          String sha256String = hexString(sha256OfCompressedData);\n          JreDeflateParameters parameters = JreDeflateParameters.of(level, strategy, nowrap);\n          result.put(parameters, sha256String);\n        }\n      }\n    }\n    compressor.release();\n    return result;\n  }", "signature": "Map<JreDeflateParameters, String> getSystemValues()", "full_signature": "public Map<JreDeflateParameters, String> getSystemValues()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getSystemValues()", "testcase": false, "constructor": false, "invocations": ["getInstance", "setCaching", "setNowrap", "setStrategy", "setCompressionLevel", "compress", "toByteArray", "reset", "digest", "hexString", "of", "put", "release"]}, "repository": {"repo_id": 20126854, "url": "https://github.com/kaedea/Feya", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 12, "size": 7798, "license": "licensed"}}