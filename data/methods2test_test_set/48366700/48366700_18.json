{"test_class": {"identifier": "AndroidMocksTest", "superclass": "", "interfaces": "", "fields": [], "file": "lib/src/test/java/de/jodamob/mockitoid/AndroidMocksTest.java"}, "test_case": {"identifier": "mockActivity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void mockActivity() {\n        Activity activity = AndroidMocks.mockActivity();\n        assertThat(activity).isNotNull();\n    }", "signature": "void mockActivity()", "full_signature": "@Test public void mockActivity()", "class_method_signature": "AndroidMocksTest.mockActivity()", "testcase": true, "constructor": false, "invocations": ["mockActivity", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "AndroidMocks", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "mockContext", "parameters": "()", "modifiers": "public static", "return": "Context", "signature": "Context mockContext()", "full_signature": "public static Context mockContext()", "class_method_signature": "AndroidMocks.mockContext()", "testcase": false, "constructor": false}, {"identifier": "mockMenuItem", "parameters": "()", "modifiers": "public static", "return": "MenuItem", "signature": "MenuItem mockMenuItem()", "full_signature": "public static MenuItem mockMenuItem()", "class_method_signature": "AndroidMocks.mockMenuItem()", "testcase": false, "constructor": false}, {"identifier": "mockMenuItem", "parameters": "(int itemId)", "modifiers": "public static", "return": "MenuItem", "signature": "MenuItem mockMenuItem(int itemId)", "full_signature": "public static MenuItem mockMenuItem(int itemId)", "class_method_signature": "AndroidMocks.mockMenuItem(int itemId)", "testcase": false, "constructor": false}, {"identifier": "mockLayoutInflater", "parameters": "()", "modifiers": "public static", "return": "LayoutInflater", "signature": "LayoutInflater mockLayoutInflater()", "full_signature": "public static LayoutInflater mockLayoutInflater()", "class_method_signature": "AndroidMocks.mockLayoutInflater()", "testcase": false, "constructor": false}, {"identifier": "mockIntent", "parameters": "()", "modifiers": "public static", "return": "Intent", "signature": "Intent mockIntent()", "full_signature": "public static Intent mockIntent()", "class_method_signature": "AndroidMocks.mockIntent()", "testcase": false, "constructor": false}, {"identifier": "mockBundle", "parameters": "()", "modifiers": "public static", "return": "Bundle", "signature": "Bundle mockBundle()", "full_signature": "public static Bundle mockBundle()", "class_method_signature": "AndroidMocks.mockBundle()", "testcase": false, "constructor": false}, {"identifier": "mockView", "parameters": "(ViewPropertyAnimator animator)", "modifiers": "public static", "return": "View", "signature": "View mockView(ViewPropertyAnimator animator)", "full_signature": "public static View mockView(ViewPropertyAnimator animator)", "class_method_signature": "AndroidMocks.mockView(ViewPropertyAnimator animator)", "testcase": false, "constructor": false}, {"identifier": "mockView", "parameters": "()", "modifiers": "public static", "return": "View", "signature": "View mockView()", "full_signature": "public static View mockView()", "class_method_signature": "AndroidMocks.mockView()", "testcase": false, "constructor": false}, {"identifier": "mockView", "parameters": "(Resources resources)", "modifiers": "public static", "return": "View", "signature": "View mockView(Resources resources)", "full_signature": "public static View mockView(Resources resources)", "class_method_signature": "AndroidMocks.mockView(Resources resources)", "testcase": false, "constructor": false}, {"identifier": "mockViewPropertyAnimator", "parameters": "()", "modifiers": "@SuppressLint(\"NewApi\") public static", "return": "ViewPropertyAnimator", "signature": "ViewPropertyAnimator mockViewPropertyAnimator()", "full_signature": "@SuppressLint(\"NewApi\") public static ViewPropertyAnimator mockViewPropertyAnimator()", "class_method_signature": "AndroidMocks.mockViewPropertyAnimator()", "testcase": false, "constructor": false}, {"identifier": "mockTextView", "parameters": "()", "modifiers": "public static", "return": "TextView", "signature": "TextView mockTextView()", "full_signature": "public static TextView mockTextView()", "class_method_signature": "AndroidMocks.mockTextView()", "testcase": false, "constructor": false}, {"identifier": "mockTextView", "parameters": "(Resources resources)", "modifiers": "public static", "return": "TextView", "signature": "TextView mockTextView(Resources resources)", "full_signature": "public static TextView mockTextView(Resources resources)", "class_method_signature": "AndroidMocks.mockTextView(Resources resources)", "testcase": false, "constructor": false}, {"identifier": "mockButton", "parameters": "()", "modifiers": "public static", "return": "Button", "signature": "Button mockButton()", "full_signature": "public static Button mockButton()", "class_method_signature": "AndroidMocks.mockButton()", "testcase": false, "constructor": false}, {"identifier": "mockImageButton", "parameters": "()", "modifiers": "public static", "return": "ImageButton", "signature": "ImageButton mockImageButton()", "full_signature": "public static ImageButton mockImageButton()", "class_method_signature": "AndroidMocks.mockImageButton()", "testcase": false, "constructor": false}, {"identifier": "mockFragment", "parameters": "()", "modifiers": "public static", "return": "Fragment", "signature": "Fragment mockFragment()", "full_signature": "public static Fragment mockFragment()", "class_method_signature": "AndroidMocks.mockFragment()", "testcase": false, "constructor": false}, {"identifier": "mockActivity", "parameters": "(Application application)", "modifiers": "public static", "return": "Activity", "signature": "Activity mockActivity(Application application)", "full_signature": "public static Activity mockActivity(Application application)", "class_method_signature": "AndroidMocks.mockActivity(Application application)", "testcase": false, "constructor": false}, {"identifier": "mockActivity", "parameters": "()", "modifiers": "public static", "return": "Activity", "signature": "Activity mockActivity()", "full_signature": "public static Activity mockActivity()", "class_method_signature": "AndroidMocks.mockActivity()", "testcase": false, "constructor": false}, {"identifier": "mockApplication", "parameters": "()", "modifiers": "public static", "return": "Application", "signature": "Application mockApplication()", "full_signature": "public static Application mockApplication()", "class_method_signature": "AndroidMocks.mockApplication()", "testcase": false, "constructor": false}, {"identifier": "mockFragmentManager", "parameters": "()", "modifiers": "public static", "return": "FragmentManager", "signature": "FragmentManager mockFragmentManager()", "full_signature": "public static FragmentManager mockFragmentManager()", "class_method_signature": "AndroidMocks.mockFragmentManager()", "testcase": false, "constructor": false}, {"identifier": "mockFragmentManager", "parameters": "(FragmentTransaction transaction)", "modifiers": "@TargetApi(Build.VERSION_CODES.HONEYCOMB) @SuppressLint({ \"CommitTransaction\", \"NewApi\" }) public static", "return": "FragmentManager", "signature": "FragmentManager mockFragmentManager(FragmentTransaction transaction)", "full_signature": "@TargetApi(Build.VERSION_CODES.HONEYCOMB) @SuppressLint({ \"CommitTransaction\", \"NewApi\" }) public static FragmentManager mockFragmentManager(FragmentTransaction transaction)", "class_method_signature": "AndroidMocks.mockFragmentManager(FragmentTransaction transaction)", "testcase": false, "constructor": false}, {"identifier": "mockEditable", "parameters": "(String s)", "modifiers": "public static", "return": "Editable", "signature": "Editable mockEditable(String s)", "full_signature": "public static Editable mockEditable(String s)", "class_method_signature": "AndroidMocks.mockEditable(String s)", "testcase": false, "constructor": false}, {"identifier": "mockEditText", "parameters": "(Editable editable)", "modifiers": "public static", "return": "EditText", "signature": "EditText mockEditText(Editable editable)", "full_signature": "public static EditText mockEditText(Editable editable)", "class_method_signature": "AndroidMocks.mockEditText(Editable editable)", "testcase": false, "constructor": false}, {"identifier": "mockEditField", "parameters": "(Editable editable)", "modifiers": "@Deprecated public static", "return": "EditText", "signature": "EditText mockEditField(Editable editable)", "full_signature": "@Deprecated public static EditText mockEditField(Editable editable)", "class_method_signature": "AndroidMocks.mockEditField(Editable editable)", "testcase": false, "constructor": false}, {"identifier": "mockEditText", "parameters": "(String s)", "modifiers": "public static", "return": "EditText", "signature": "EditText mockEditText(String s)", "full_signature": "public static EditText mockEditText(String s)", "class_method_signature": "AndroidMocks.mockEditText(String s)", "testcase": false, "constructor": false}, {"identifier": "mockEditField", "parameters": "(String s)", "modifiers": "@Deprecated public static", "return": "EditText", "signature": "EditText mockEditField(String s)", "full_signature": "@Deprecated public static EditText mockEditField(String s)", "class_method_signature": "AndroidMocks.mockEditField(String s)", "testcase": false, "constructor": false}, {"identifier": "mockResources", "parameters": "()", "modifiers": "public static", "return": "Resources", "signature": "Resources mockResources()", "full_signature": "public static Resources mockResources()", "class_method_signature": "AndroidMocks.mockResources()", "testcase": false, "constructor": false}, {"identifier": "prepare", "parameters": "(String s, EditText field)", "modifiers": "public static", "return": "EditText", "signature": "EditText prepare(String s, EditText field)", "full_signature": "public static EditText prepare(String s, EditText field)", "class_method_signature": "AndroidMocks.prepare(String s, EditText field)", "testcase": false, "constructor": false}, {"identifier": "mockTextView", "parameters": "(String s)", "modifiers": "public static", "return": "TextView", "signature": "TextView mockTextView(String s)", "full_signature": "public static TextView mockTextView(String s)", "class_method_signature": "AndroidMocks.mockTextView(String s)", "testcase": false, "constructor": false}, {"identifier": "mockAutoCompleteEditField", "parameters": "(String s)", "modifiers": "public static", "return": "AutoCompleteTextView", "signature": "AutoCompleteTextView mockAutoCompleteEditField(String s)", "full_signature": "public static AutoCompleteTextView mockAutoCompleteEditField(String s)", "class_method_signature": "AndroidMocks.mockAutoCompleteEditField(String s)", "testcase": false, "constructor": false}, {"identifier": "mockEditor", "parameters": "()", "modifiers": "public static", "return": "SharedPreferences.Editor", "signature": "SharedPreferences.Editor mockEditor()", "full_signature": "public static SharedPreferences.Editor mockEditor()", "class_method_signature": "AndroidMocks.mockEditor()", "testcase": false, "constructor": false}, {"identifier": "mockDialogBuilder", "parameters": "()", "modifiers": "public static", "return": "AlertDialog.Builder", "signature": "AlertDialog.Builder mockDialogBuilder()", "full_signature": "public static AlertDialog.Builder mockDialogBuilder()", "class_method_signature": "AndroidMocks.mockDialogBuilder()", "testcase": false, "constructor": false}, {"identifier": "mockDialogBuilder", "parameters": "(ArgumentCaptor<DialogInterface.OnClickListener> positive, ArgumentCaptor<DialogInterface.OnClickListener> negative)", "modifiers": "public static", "return": "AlertDialog.Builder", "signature": "AlertDialog.Builder mockDialogBuilder(ArgumentCaptor<DialogInterface.OnClickListener> positive, ArgumentCaptor<DialogInterface.OnClickListener> negative)", "full_signature": "public static AlertDialog.Builder mockDialogBuilder(ArgumentCaptor<DialogInterface.OnClickListener> positive, ArgumentCaptor<DialogInterface.OnClickListener> negative)", "class_method_signature": "AndroidMocks.mockDialogBuilder(ArgumentCaptor<DialogInterface.OnClickListener> positive, ArgumentCaptor<DialogInterface.OnClickListener> negative)", "testcase": false, "constructor": false}, {"identifier": "mockCheckBox", "parameters": "()", "modifiers": "public static", "return": "CheckBox", "signature": "CheckBox mockCheckBox()", "full_signature": "public static CheckBox mockCheckBox()", "class_method_signature": "AndroidMocks.mockCheckBox()", "testcase": false, "constructor": false}, {"identifier": "mockWebView", "parameters": "()", "modifiers": "public static", "return": "WebView", "signature": "WebView mockWebView()", "full_signature": "public static WebView mockWebView()", "class_method_signature": "AndroidMocks.mockWebView()", "testcase": false, "constructor": false}, {"identifier": "mockProgressBar", "parameters": "()", "modifiers": "public static", "return": "ProgressBar", "signature": "ProgressBar mockProgressBar()", "full_signature": "public static ProgressBar mockProgressBar()", "class_method_signature": "AndroidMocks.mockProgressBar()", "testcase": false, "constructor": false}, {"identifier": "mockLinearLayout", "parameters": "()", "modifiers": "public static", "return": "LinearLayout", "signature": "LinearLayout mockLinearLayout()", "full_signature": "public static LinearLayout mockLinearLayout()", "class_method_signature": "AndroidMocks.mockLinearLayout()", "testcase": false, "constructor": false}, {"identifier": "mockRelativeLayout", "parameters": "()", "modifiers": "public static", "return": "RelativeLayout", "signature": "RelativeLayout mockRelativeLayout()", "full_signature": "public static RelativeLayout mockRelativeLayout()", "class_method_signature": "AndroidMocks.mockRelativeLayout()", "testcase": false, "constructor": false}, {"identifier": "mockFrameLayout", "parameters": "()", "modifiers": "public static", "return": "FrameLayout", "signature": "FrameLayout mockFrameLayout()", "full_signature": "public static FrameLayout mockFrameLayout()", "class_method_signature": "AndroidMocks.mockFrameLayout()", "testcase": false, "constructor": false}, {"identifier": "mockRecyclerView", "parameters": "()", "modifiers": "public static", "return": "RecyclerView", "signature": "RecyclerView mockRecyclerView()", "full_signature": "public static RecyclerView mockRecyclerView()", "class_method_signature": "AndroidMocks.mockRecyclerView()", "testcase": false, "constructor": false}, {"identifier": "mockCardView", "parameters": "()", "modifiers": "public static", "return": "CardView", "signature": "CardView mockCardView()", "full_signature": "public static CardView mockCardView()", "class_method_signature": "AndroidMocks.mockCardView()", "testcase": false, "constructor": false}], "file": "lib/src/main/java/de/jodamob/mockitoid/AndroidMocks.java"}, "focal_method": {"identifier": "mockActivity", "parameters": "(Application application)", "modifiers": "public static", "return": "Activity", "body": "public static Activity mockActivity(Application application) {\n        Activity activity = mockActivity();\n        when(activity.getApplication()).thenReturn(application);\n        return activity;\n    }", "signature": "Activity mockActivity(Application application)", "full_signature": "public static Activity mockActivity(Application application)", "class_method_signature": "AndroidMocks.mockActivity(Application application)", "testcase": false, "constructor": false, "invocations": ["mockActivity", "thenReturn", "when", "getApplication"]}, "repository": {"repo_id": 48366700, "url": "https://github.com/dpreussler/mockitoid", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 51, "size": 137, "license": "licensed"}}