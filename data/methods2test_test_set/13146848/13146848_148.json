{"test_class": {"identifier": "SetPagesTransitionParametersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}], "file": "sejda-model/src/test/java/org/sejda/model/parameter/SetPagesTransitionParametersTest.java"}, "test_case": {"identifier": "testPutTransition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPutTransition() {\n        SetPagesTransitionParameters victim = new SetPagesTransitionParameters();\n        PdfPageTransition firstTransition = PdfPageTransition.newInstance(PdfPageTransitionStyle.DISSOLVE, 1, 5);\n        victim.putTransition(3, firstTransition);\n        Assert.assertEquals(1, victim.getTransitions().size());\n        PdfPageTransition secondTransition = PdfPageTransition.newInstance(PdfPageTransitionStyle.BOX_INWARD, 1, 2);\n        PdfPageTransition result = victim.putTransition(3, secondTransition);\n        Assert.assertEquals(firstTransition, result);\n        Assert.assertEquals(1, victim.getTransitions().size());\n    }", "signature": "void testPutTransition()", "full_signature": "@Test public void testPutTransition()", "class_method_signature": "SetPagesTransitionParametersTest.testPutTransition()", "testcase": true, "constructor": false, "invocations": ["newInstance", "putTransition", "assertEquals", "size", "getTransitions", "newInstance", "putTransition", "assertEquals", "assertEquals", "size", "getTransitions"]}, "focal_class": {"identifier": "SetPagesTransitionParameters", "superclass": "extends SinglePdfSourceSingleOutputParameters", "interfaces": "", "fields": [{"original_string": "@Valid\n    private final Map<Integer, PdfPageTransition> transitions = new HashMap<Integer, PdfPageTransition>();", "modifier": "@Valid\n    private final", "type": "Map<Integer, PdfPageTransition>", "declarator": "transitions = new HashMap<Integer, PdfPageTransition>()", "var_name": "transitions"}, {"original_string": "@Valid\n    private PdfPageTransition defaultTransition;", "modifier": "@Valid\n    private", "type": "PdfPageTransition", "declarator": "defaultTransition", "var_name": "defaultTransition"}, {"original_string": "private boolean fullScreen = false;", "modifier": "private", "type": "boolean", "declarator": "fullScreen = false", "var_name": "fullScreen"}], "methods": [{"identifier": "SetPagesTransitionParameters", "parameters": "()", "modifiers": "public", "return": "", "signature": " SetPagesTransitionParameters()", "full_signature": "public  SetPagesTransitionParameters()", "class_method_signature": "SetPagesTransitionParameters.SetPagesTransitionParameters()", "testcase": false, "constructor": true}, {"identifier": "SetPagesTransitionParameters", "parameters": "(PdfPageTransition defaultTransition)", "modifiers": "public", "return": "", "signature": " SetPagesTransitionParameters(PdfPageTransition defaultTransition)", "full_signature": "public  SetPagesTransitionParameters(PdfPageTransition defaultTransition)", "class_method_signature": "SetPagesTransitionParameters.SetPagesTransitionParameters(PdfPageTransition defaultTransition)", "testcase": false, "constructor": true}, {"identifier": "isFullScreen", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFullScreen()", "full_signature": "public boolean isFullScreen()", "class_method_signature": "SetPagesTransitionParameters.isFullScreen()", "testcase": false, "constructor": false}, {"identifier": "setFullScreen", "parameters": "(boolean fullScreen)", "modifiers": "public", "return": "void", "signature": "void setFullScreen(boolean fullScreen)", "full_signature": "public void setFullScreen(boolean fullScreen)", "class_method_signature": "SetPagesTransitionParameters.setFullScreen(boolean fullScreen)", "testcase": false, "constructor": false}, {"identifier": "putTransition", "parameters": "(Integer page, PdfPageTransition transition)", "modifiers": "public", "return": "PdfPageTransition", "signature": "PdfPageTransition putTransition(Integer page, PdfPageTransition transition)", "full_signature": "public PdfPageTransition putTransition(Integer page, PdfPageTransition transition)", "class_method_signature": "SetPagesTransitionParameters.putTransition(Integer page, PdfPageTransition transition)", "testcase": false, "constructor": false}, {"identifier": "clearTransitions", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearTransitions()", "full_signature": "public void clearTransitions()", "class_method_signature": "SetPagesTransitionParameters.clearTransitions()", "testcase": false, "constructor": false}, {"identifier": "getTransitions", "parameters": "()", "modifiers": "public", "return": "Map<Integer, PdfPageTransition>", "signature": "Map<Integer, PdfPageTransition> getTransitions()", "full_signature": "public Map<Integer, PdfPageTransition> getTransitions()", "class_method_signature": "SetPagesTransitionParameters.getTransitions()", "testcase": false, "constructor": false}, {"identifier": "getDefaultTransition", "parameters": "()", "modifiers": "public", "return": "PdfPageTransition", "signature": "PdfPageTransition getDefaultTransition()", "full_signature": "public PdfPageTransition getDefaultTransition()", "class_method_signature": "SetPagesTransitionParameters.getDefaultTransition()", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(int page)", "modifiers": "public", "return": "PdfPageTransition", "signature": "PdfPageTransition getOrDefault(int page)", "full_signature": "public PdfPageTransition getOrDefault(int page)", "class_method_signature": "SetPagesTransitionParameters.getOrDefault(int page)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SetPagesTransitionParameters.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SetPagesTransitionParameters.equals(Object other)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/parameter/SetPagesTransitionParameters.java"}, "focal_method": {"identifier": "putTransition", "parameters": "(Integer page, PdfPageTransition transition)", "modifiers": "public", "return": "PdfPageTransition", "body": "public PdfPageTransition putTransition(Integer page, PdfPageTransition transition) {\n        return transitions.put(page, transition);\n    }", "signature": "PdfPageTransition putTransition(Integer page, PdfPageTransition transition)", "full_signature": "public PdfPageTransition putTransition(Integer page, PdfPageTransition transition)", "class_method_signature": "SetPagesTransitionParameters.putTransition(Integer page, PdfPageTransition transition)", "testcase": false, "constructor": false, "invocations": ["put"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}