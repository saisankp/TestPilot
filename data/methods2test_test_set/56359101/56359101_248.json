{"test_class": {"identifier": "StartHostSystemVmServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RESERVER_NAME = \"PodBasedNetworkGuru\";", "modifier": "private static final", "type": "String", "declarator": "RESERVER_NAME = \"PodBasedNetworkGuru\"", "var_name": "RESERVER_NAME"}, {"original_string": "@Spy\n    @InjectMocks\n    private StartHostSystemVmService spy;", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "StartHostSystemVmService", "declarator": "spy", "var_name": "spy"}, {"original_string": "@Mock\n    private AutonomiccsSystemVmJdbcDao autonomiccsSystemVmJdbcDao;", "modifier": "@Mock\n    private", "type": "AutonomiccsSystemVmJdbcDao", "declarator": "autonomiccsSystemVmJdbcDao", "var_name": "autonomiccsSystemVmJdbcDao"}, {"original_string": "@Mock\n    private NicDao nicDao;", "modifier": "@Mock\n    private", "type": "NicDao", "declarator": "nicDao", "var_name": "nicDao"}, {"original_string": "@Mock\n    private HostUtils hostUtils;", "modifier": "@Mock\n    private", "type": "HostUtils", "declarator": "hostUtils", "var_name": "hostUtils"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/services/StartHostSystemVmServiceTest.java"}, "test_case": {"identifier": "getInternalCommunicationNicFromVmTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getInternalCommunicationNicFromVmTest() {\n        List<NicVO> nicsOfVm = new ArrayList<>();\n        NicVO nic = Mockito.mock(NicVO.class);\n        Mockito.doReturn(RESERVER_NAME).when(nic).getReserver();\n        nicsOfVm.add(nic);\n\n        executeGetInternalCommunicationNicFromVmTest(nicsOfVm, nic);\n\n        Mockito.verify(nic).getReserver();\n    }", "signature": "void getInternalCommunicationNicFromVmTest()", "full_signature": "@Test public void getInternalCommunicationNicFromVmTest()", "class_method_signature": "StartHostSystemVmServiceTest.getInternalCommunicationNicFromVmTest()", "testcase": true, "constructor": false, "invocations": ["mock", "getReserver", "when", "doReturn", "add", "executeGetInternalCommunicationNicFromVmTest", "getReserver", "verify"]}, "focal_class": {"identifier": "StartHostSystemVmService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger logger = Logger.getLogger(getClass());", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.getLogger(getClass())", "var_name": "logger"}, {"original_string": "private static final String RESERVER_NAME = \"PodBasedNetworkGuru\";", "modifier": "private static final", "type": "String", "declarator": "RESERVER_NAME = \"PodBasedNetworkGuru\"", "var_name": "RESERVER_NAME"}, {"original_string": "@Autowired\n    private AutonomiccsSystemVmJdbcDao autonomiccsSystemVmJdbcDao;", "modifier": "@Autowired\n    private", "type": "AutonomiccsSystemVmJdbcDao", "declarator": "autonomiccsSystemVmJdbcDao", "var_name": "autonomiccsSystemVmJdbcDao"}, {"original_string": "@Autowired\n    private NicDao nicDao;", "modifier": "@Autowired\n    private", "type": "NicDao", "declarator": "nicDao", "var_name": "nicDao"}, {"original_string": "@Autowired\n    private HostUtils hostUtils;", "modifier": "@Autowired\n    private", "type": "HostUtils", "declarator": "hostUtils", "var_name": "hostUtils"}], "methods": [{"identifier": "isStartHostSystemVmDeployedOnPod", "parameters": "(Long podId)", "modifiers": "public", "return": "boolean", "signature": "boolean isStartHostSystemVmDeployedOnPod(Long podId)", "full_signature": "public boolean isStartHostSystemVmDeployedOnPod(Long podId)", "class_method_signature": "StartHostSystemVmService.isStartHostSystemVmDeployedOnPod(Long podId)", "testcase": false, "constructor": false}, {"identifier": "getStartHostServiceVmIdFromPod", "parameters": "(Long podId)", "modifiers": "public", "return": "Long", "signature": "Long getStartHostServiceVmIdFromPod(Long podId)", "full_signature": "public Long getStartHostServiceVmIdFromPod(Long podId)", "class_method_signature": "StartHostSystemVmService.getStartHostServiceVmIdFromPod(Long podId)", "testcase": false, "constructor": false}, {"identifier": "isStartHostServiceVmRunningOnPod", "parameters": "(Long podId)", "modifiers": "public", "return": "boolean", "signature": "boolean isStartHostServiceVmRunningOnPod(Long podId)", "full_signature": "public boolean isStartHostServiceVmRunningOnPod(Long podId)", "class_method_signature": "StartHostSystemVmService.isStartHostServiceVmRunningOnPod(Long podId)", "testcase": false, "constructor": false}, {"identifier": "getInternalCommunicationNicFromVm", "parameters": "(Long startHostServiceVmId)", "modifiers": "protected", "return": "NicVO", "signature": "NicVO getInternalCommunicationNicFromVm(Long startHostServiceVmId)", "full_signature": "protected NicVO getInternalCommunicationNicFromVm(Long startHostServiceVmId)", "class_method_signature": "StartHostSystemVmService.getInternalCommunicationNicFromVm(Long startHostServiceVmId)", "testcase": false, "constructor": false}, {"identifier": "isStartHostServiceVmReadyToStartHostOnPod", "parameters": "(Long podId)", "modifiers": "public", "return": "boolean", "signature": "boolean isStartHostServiceVmReadyToStartHostOnPod(Long podId)", "full_signature": "public boolean isStartHostServiceVmReadyToStartHostOnPod(Long podId)", "class_method_signature": "StartHostSystemVmService.isStartHostServiceVmReadyToStartHostOnPod(Long podId)", "testcase": false, "constructor": false}, {"identifier": "getNicToPing", "parameters": "(Long podId)", "modifiers": "protected", "return": "NicVO", "signature": "NicVO getNicToPing(Long podId)", "full_signature": "protected NicVO getNicToPing(Long podId)", "class_method_signature": "StartHostSystemVmService.getNicToPing(Long podId)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/services/StartHostSystemVmService.java"}, "focal_method": {"identifier": "getInternalCommunicationNicFromVm", "parameters": "(Long startHostServiceVmId)", "modifiers": "protected", "return": "NicVO", "body": "protected NicVO getInternalCommunicationNicFromVm(Long startHostServiceVmId) {\n        List<NicVO> nicsOfVm = nicDao.listByVmId(startHostServiceVmId);\n        for (NicVO nic : nicsOfVm) {\n            if (RESERVER_NAME.equals(nic.getReserver())) {\n                return nic;\n            }\n        }\n        logger.info(String.format(\"Could not find a NIC created by PodBasedNetworkGuru, vmId[%d]\", startHostServiceVmId));\n        return null;\n    }", "signature": "NicVO getInternalCommunicationNicFromVm(Long startHostServiceVmId)", "full_signature": "protected NicVO getInternalCommunicationNicFromVm(Long startHostServiceVmId)", "class_method_signature": "StartHostSystemVmService.getInternalCommunicationNicFromVm(Long startHostServiceVmId)", "testcase": false, "constructor": false, "invocations": ["listByVmId", "equals", "getReserver", "info", "format"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}