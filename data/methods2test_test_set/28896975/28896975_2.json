{"test_class": {"identifier": "OkHttpDownloaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int CONTENT_LENGTH = 1024 * 1024 * 5;", "modifier": "private static final", "type": "int", "declarator": "CONTENT_LENGTH = 1024 * 1024 * 5", "var_name": "CONTENT_LENGTH"}, {"original_string": "private Uri mockUri;", "modifier": "private", "type": "Uri", "declarator": "mockUri", "var_name": "mockUri"}, {"original_string": "private MockWebServer mockWebServer;", "modifier": "private", "type": "MockWebServer", "declarator": "mockWebServer", "var_name": "mockWebServer"}, {"original_string": "private OkHttpDownloader okHttpDownloader;", "modifier": "private", "type": "OkHttpDownloader", "declarator": "okHttpDownloader", "var_name": "okHttpDownloader"}], "file": "library/src/test/java/com/coolerfall/download/OkHttpDownloaderTest.java"}, "test_case": {"identifier": "testBadUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testBadUrl() {\n    try {\n      okHttpDownloader.start(Uri.parse(\"www.baidu.com\"), 0);\n    } catch (Exception e) {\n      if (e instanceof IllegalArgumentException) {\n        assertEquals(\"unexpected url: www.baidu.com\", e.getMessage());\n      }\n    }\n  }", "signature": "void testBadUrl()", "full_signature": "@Test public void testBadUrl()", "class_method_signature": "OkHttpDownloaderTest.testBadUrl()", "testcase": true, "constructor": false, "invocations": ["start", "parse", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "OkHttpDownloader", "superclass": "", "interfaces": "implements Downloader", "fields": [{"original_string": "private final OkHttpClient client;", "modifier": "private final", "type": "OkHttpClient", "declarator": "client", "var_name": "client"}, {"original_string": "private Response response;", "modifier": "private", "type": "Response", "declarator": "response", "var_name": "response"}, {"original_string": "private final AtomicInteger redirectionCount = new AtomicInteger();", "modifier": "private final", "type": "AtomicInteger", "declarator": "redirectionCount = new AtomicInteger()", "var_name": "redirectionCount"}], "methods": [{"identifier": "defaultOkHttpClient", "parameters": "()", "modifiers": "private static", "return": "OkHttpClient", "signature": "OkHttpClient defaultOkHttpClient()", "full_signature": "private static OkHttpClient defaultOkHttpClient()", "class_method_signature": "OkHttpDownloader.defaultOkHttpClient()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "OkHttpDownloader", "signature": "OkHttpDownloader create()", "full_signature": "public static OkHttpDownloader create()", "class_method_signature": "OkHttpDownloader.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(OkHttpClient client)", "modifiers": "public static", "return": "OkHttpDownloader", "signature": "OkHttpDownloader create(OkHttpClient client)", "full_signature": "public static OkHttpDownloader create(OkHttpClient client)", "class_method_signature": "OkHttpDownloader.create(OkHttpClient client)", "testcase": false, "constructor": false}, {"identifier": "OkHttpDownloader", "parameters": "(OkHttpClient client)", "modifiers": "private", "return": "", "signature": " OkHttpDownloader(OkHttpClient client)", "full_signature": "private  OkHttpDownloader(OkHttpClient client)", "class_method_signature": "OkHttpDownloader.OkHttpDownloader(OkHttpClient client)", "testcase": false, "constructor": true}, {"identifier": "detectFilename", "parameters": "(Uri uri)", "modifiers": "@Override public", "return": "String", "signature": "String detectFilename(Uri uri)", "full_signature": "@Override public String detectFilename(Uri uri)", "class_method_signature": "OkHttpDownloader.detectFilename(Uri uri)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(Uri uri, long breakpoint)", "modifiers": "@Override public", "return": "int", "signature": "int start(Uri uri, long breakpoint)", "full_signature": "@Override public int start(Uri uri, long breakpoint)", "class_method_signature": "OkHttpDownloader.start(Uri uri, long breakpoint)", "testcase": false, "constructor": false}, {"identifier": "contentLength", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long contentLength()", "full_signature": "@Override public long contentLength()", "class_method_signature": "OkHttpDownloader.contentLength()", "testcase": false, "constructor": false}, {"identifier": "byteStream", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream byteStream()", "full_signature": "@Override public InputStream byteStream()", "class_method_signature": "OkHttpDownloader.byteStream()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "OkHttpDownloader.close()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "Downloader", "signature": "Downloader copy()", "full_signature": "@Override public Downloader copy()", "class_method_signature": "OkHttpDownloader.copy()", "testcase": false, "constructor": false}, {"identifier": "innerRequest", "parameters": "(OkHttpClient client, Uri uri, long breakpoint)", "modifiers": "", "return": "Response", "signature": "Response innerRequest(OkHttpClient client, Uri uri, long breakpoint)", "full_signature": " Response innerRequest(OkHttpClient client, Uri uri, long breakpoint)", "class_method_signature": "OkHttpDownloader.innerRequest(OkHttpClient client, Uri uri, long breakpoint)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/coolerfall/download/OkHttpDownloader.java"}, "focal_method": {"identifier": "start", "parameters": "(Uri uri, long breakpoint)", "modifiers": "@Override public", "return": "int", "body": "@Override public int start(Uri uri, long breakpoint) throws IOException {\n    redirectionCount.set(MAX_REDIRECTION);\n    response = innerRequest(client, uri, breakpoint);\n    return response.code();\n  }", "signature": "int start(Uri uri, long breakpoint)", "full_signature": "@Override public int start(Uri uri, long breakpoint)", "class_method_signature": "OkHttpDownloader.start(Uri uri, long breakpoint)", "testcase": false, "constructor": false, "invocations": ["set", "innerRequest", "code"]}, "repository": {"repo_id": 28896975, "url": "https://github.com/coolerfall/Android-HttpDownloadManager", "language": "Java", "is_fork": false, "fork_count": 41, "stargazer_count": 141, "size": 429, "license": "licensed"}}