{"test_class": {"identifier": "ServletContainerResponseWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpServletResponse      httpServletResponse;", "modifier": "private", "type": "HttpServletResponse", "declarator": "httpServletResponse", "var_name": "httpServletResponse"}, {"original_string": "private GenericContainerResponse containerResponse;", "modifier": "private", "type": "GenericContainerResponse", "declarator": "containerResponse", "var_name": "containerResponse"}, {"original_string": "private ServletContainerResponseWriter servletContainerResponseWriter;", "modifier": "private", "type": "ServletContainerResponseWriter", "declarator": "servletContainerResponseWriter", "var_name": "servletContainerResponseWriter"}], "file": "everrest-core/src/test/java/org/everrest/core/servlet/ServletContainerResponseWriterTest.java"}, "test_case": {"identifier": "writesStatusAndHeaders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writesStatusAndHeaders() throws Exception {\n        MultivaluedMap<String, Object> responseHeaders = new MultivaluedHashMap<>();\n        responseHeaders.putSingle(\"content-type\", \"text/plain\");\n        when(containerResponse.getStatus()).thenReturn(200);\n        when(containerResponse.getHttpHeaders()).thenReturn(responseHeaders);\n\n        servletContainerResponseWriter.writeHeaders(containerResponse);\n\n        verify(httpServletResponse).setStatus(eq(200));\n        verify(httpServletResponse).addHeader(eq(\"content-type\"), eq(\"text/plain\"));\n    }", "signature": "void writesStatusAndHeaders()", "full_signature": "@Test public void writesStatusAndHeaders()", "class_method_signature": "ServletContainerResponseWriterTest.writesStatusAndHeaders()", "testcase": true, "constructor": false, "invocations": ["putSingle", "thenReturn", "when", "getStatus", "thenReturn", "when", "getHttpHeaders", "writeHeaders", "setStatus", "verify", "eq", "addHeader", "verify", "eq", "eq"]}, "focal_class": {"identifier": "ServletContainerResponseWriter", "superclass": "", "interfaces": "implements ContainerResponseWriter", "fields": [{"original_string": "private final HttpServletResponse servletResponse;", "modifier": "private final", "type": "HttpServletResponse", "declarator": "servletResponse", "var_name": "servletResponse"}], "methods": [{"identifier": "ServletContainerResponseWriter", "parameters": "(HttpServletResponse response)", "modifiers": "public", "return": "", "signature": " ServletContainerResponseWriter(HttpServletResponse response)", "full_signature": "public  ServletContainerResponseWriter(HttpServletResponse response)", "class_method_signature": "ServletContainerResponseWriter.ServletContainerResponseWriter(HttpServletResponse response)", "testcase": false, "constructor": true}, {"identifier": "writeBody", "parameters": "(GenericContainerResponse response, MessageBodyWriter entityWriter)", "modifiers": "@Override @SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void writeBody(GenericContainerResponse response, MessageBodyWriter entityWriter)", "full_signature": "@Override @SuppressWarnings({\"unchecked\"}) public void writeBody(GenericContainerResponse response, MessageBodyWriter entityWriter)", "class_method_signature": "ServletContainerResponseWriter.writeBody(GenericContainerResponse response, MessageBodyWriter entityWriter)", "testcase": false, "constructor": false}, {"identifier": "writeHeaders", "parameters": "(GenericContainerResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void writeHeaders(GenericContainerResponse response)", "full_signature": "@Override public void writeHeaders(GenericContainerResponse response)", "class_method_signature": "ServletContainerResponseWriter.writeHeaders(GenericContainerResponse response)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/servlet/ServletContainerResponseWriter.java"}, "focal_method": {"identifier": "writeHeaders", "parameters": "(GenericContainerResponse response)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeHeaders(GenericContainerResponse response) throws IOException {\n        if (servletResponse.isCommitted()) {\n            return;\n        }\n\n        servletResponse.setStatus(response.getStatus());\n\n        if (response.getHttpHeaders() != null) {\n            // content-type and content-length should be preset in headers\n            for (Map.Entry<String, List<Object>> e : response.getHttpHeaders().entrySet()) {\n                String name = e.getKey();\n                for (Object o : e.getValue()) {\n                    String value;\n                    if (o != null && (value = HeaderHelper.getHeaderAsString(o)) != null) {\n                        servletResponse.addHeader(name, value);\n                    }\n                }\n            }\n        }\n    }", "signature": "void writeHeaders(GenericContainerResponse response)", "full_signature": "@Override public void writeHeaders(GenericContainerResponse response)", "class_method_signature": "ServletContainerResponseWriter.writeHeaders(GenericContainerResponse response)", "testcase": false, "constructor": false, "invocations": ["isCommitted", "setStatus", "getStatus", "getHttpHeaders", "entrySet", "getHttpHeaders", "getKey", "getValue", "getHeaderAsString", "addHeader"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}