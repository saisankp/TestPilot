{"test_class": {"identifier": "LdapAuthenticationServiceTest", "superclass": "extends LdapServerProvider", "interfaces": "", "fields": [{"original_string": "private LdapAuthenticationService service = new LdapAuthenticationService();", "modifier": "private", "type": "LdapAuthenticationService", "declarator": "service = new LdapAuthenticationService()", "var_name": "service"}], "file": "plugin/staticsecurity/staticsecurity-ldap/src/test/java/org/geomajas/plugin/staticsecurity/ldap/LdapAuthenticationServiceTest.java"}, "test_case": {"identifier": "testUserService", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testUserService() throws Exception {\n\t\tList<UserInfo> users = service.getUsers(new RoleUserFilter(\"testgroup\"));\n\t\tassertThat(users).isNotNull();\n\t\tassertThat(users.size()).isEqualTo(1);\n\t\tassertThat(users.get(0).getUserName()).isEqualTo(\"Joe Tester\");\n\t\t\n\t\tusers = service.getUsers(new AllUserFilter());\n\t\tassertThat(users).isNotNull();\n\t\tassertThat(users.size()).isEqualTo(2);\n\t\t\n\t}", "signature": "void testUserService()", "full_signature": "@Test public void testUserService()", "class_method_signature": "LdapAuthenticationServiceTest.testUserService()", "testcase": true, "constructor": false, "invocations": ["getUsers", "isNotNull", "assertThat", "isEqualTo", "assertThat", "size", "isEqualTo", "assertThat", "getUserName", "get", "getUsers", "isNotNull", "assertThat", "isEqualTo", "assertThat", "size"]}, "focal_class": {"identifier": "LdapAuthenticationService", "superclass": "", "interfaces": "implements AuthenticationService, UserDirectoryService", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(LdapAuthenticationService.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(LdapAuthenticationService.class)", "var_name": "log"}, {"original_string": "@NotNull\n\tprivate String serverHost;", "modifier": "@NotNull\n\tprivate", "type": "String", "declarator": "serverHost", "var_name": "serverHost"}, {"original_string": "private int serverPort = 636;", "modifier": "private", "type": "int", "declarator": "serverPort = 636", "var_name": "serverPort"}, {"original_string": "private boolean allowAllSocketFactory;", "modifier": "private", "type": "boolean", "declarator": "allowAllSocketFactory", "var_name": "allowAllSocketFactory"}, {"original_string": "@NotNull\n\tprivate String userDnTemplate;", "modifier": "@NotNull\n\tprivate", "type": "String", "declarator": "userDnTemplate", "var_name": "userDnTemplate"}, {"original_string": "private String allUsersDn;", "modifier": "private", "type": "String", "declarator": "allUsersDn", "var_name": "allUsersDn"}, {"original_string": "private String givenNameAttribute;", "modifier": "private", "type": "String", "declarator": "givenNameAttribute", "var_name": "givenNameAttribute"}, {"original_string": "private String surNameAttribute;", "modifier": "private", "type": "String", "declarator": "surNameAttribute", "var_name": "surNameAttribute"}, {"original_string": "private String localeAttribute;", "modifier": "private", "type": "String", "declarator": "localeAttribute", "var_name": "localeAttribute"}, {"original_string": "private String organizationAttribute;", "modifier": "private", "type": "String", "declarator": "organizationAttribute", "var_name": "organizationAttribute"}, {"original_string": "private String divisionAttribute;", "modifier": "private", "type": "String", "declarator": "divisionAttribute", "var_name": "divisionAttribute"}, {"original_string": "private String rolesAttribute;", "modifier": "private", "type": "String", "declarator": "rolesAttribute", "var_name": "rolesAttribute"}, {"original_string": "private List<AuthorizationInfo> defaultRole;", "modifier": "private", "type": "List<AuthorizationInfo>", "declarator": "defaultRole", "var_name": "defaultRole"}, {"original_string": "private Map<String, List<NamedRoleInfo>> namedRoles;", "modifier": "private", "type": "Map<String, List<NamedRoleInfo>>", "declarator": "namedRoles", "var_name": "namedRoles"}, {"original_string": "private Map<String, Set<String>> ldapRoleMapping;", "modifier": "private", "type": "Map<String, Set<String>>", "declarator": "ldapRoleMapping", "var_name": "ldapRoleMapping"}, {"original_string": "@Api\n\tpublic static final Filter ALL = Filter.createEqualityFilter(\"objectclass\", \"person\");", "modifier": "@Api\n\tpublic static final", "type": "Filter", "declarator": "ALL = Filter.createEqualityFilter(\"objectclass\", \"person\")", "var_name": "ALL"}, {"original_string": "@Api\n\tpublic static final Filter NONE = Filter.createNOTFilter(ALL);", "modifier": "@Api\n\tpublic static final", "type": "Filter", "declarator": "NONE = Filter.createNOTFilter(ALL)", "var_name": "NONE"}, {"original_string": "@Api\n\tpublic static final String DEFAULT_ROLE_NAME = \"ROLE_DEFAULT\";", "modifier": "@Api\n\tpublic static final", "type": "String", "declarator": "DEFAULT_ROLE_NAME = \"ROLE_DEFAULT\"", "var_name": "DEFAULT_ROLE_NAME"}], "methods": [{"identifier": "setServerHost", "parameters": "(String serverHost)", "modifiers": "@Api public", "return": "void", "signature": "void setServerHost(String serverHost)", "full_signature": "@Api public void setServerHost(String serverHost)", "class_method_signature": "LdapAuthenticationService.setServerHost(String serverHost)", "testcase": false, "constructor": false}, {"identifier": "setServerPort", "parameters": "(int serverPort)", "modifiers": "@Api public", "return": "void", "signature": "void setServerPort(int serverPort)", "full_signature": "@Api public void setServerPort(int serverPort)", "class_method_signature": "LdapAuthenticationService.setServerPort(int serverPort)", "testcase": false, "constructor": false}, {"identifier": "setAllowAllSocketFactory", "parameters": "(boolean allowAllSocketFactory)", "modifiers": "@Api public", "return": "void", "signature": "void setAllowAllSocketFactory(boolean allowAllSocketFactory)", "full_signature": "@Api public void setAllowAllSocketFactory(boolean allowAllSocketFactory)", "class_method_signature": "LdapAuthenticationService.setAllowAllSocketFactory(boolean allowAllSocketFactory)", "testcase": false, "constructor": false}, {"identifier": "setUserDnTemplate", "parameters": "(String userDnTemplate)", "modifiers": "@Api public", "return": "void", "signature": "void setUserDnTemplate(String userDnTemplate)", "full_signature": "@Api public void setUserDnTemplate(String userDnTemplate)", "class_method_signature": "LdapAuthenticationService.setUserDnTemplate(String userDnTemplate)", "testcase": false, "constructor": false}, {"identifier": "setAllUsersDn", "parameters": "(String allUsersDn)", "modifiers": "@Api public", "return": "void", "signature": "void setAllUsersDn(String allUsersDn)", "full_signature": "@Api public void setAllUsersDn(String allUsersDn)", "class_method_signature": "LdapAuthenticationService.setAllUsersDn(String allUsersDn)", "testcase": false, "constructor": false}, {"identifier": "setGivenNameAttribute", "parameters": "(String givenNameAttribute)", "modifiers": "@Api public", "return": "void", "signature": "void setGivenNameAttribute(String givenNameAttribute)", "full_signature": "@Api public void setGivenNameAttribute(String givenNameAttribute)", "class_method_signature": "LdapAuthenticationService.setGivenNameAttribute(String givenNameAttribute)", "testcase": false, "constructor": false}, {"identifier": "setSurNameAttribute", "parameters": "(String surNameAttribute)", "modifiers": "@Api public", "return": "void", "signature": "void setSurNameAttribute(String surNameAttribute)", "full_signature": "@Api public void setSurNameAttribute(String surNameAttribute)", "class_method_signature": "LdapAuthenticationService.setSurNameAttribute(String surNameAttribute)", "testcase": false, "constructor": false}, {"identifier": "setLocaleAttribute", "parameters": "(String localeAttribute)", "modifiers": "@Api public", "return": "void", "signature": "void setLocaleAttribute(String localeAttribute)", "full_signature": "@Api public void setLocaleAttribute(String localeAttribute)", "class_method_signature": "LdapAuthenticationService.setLocaleAttribute(String localeAttribute)", "testcase": false, "constructor": false}, {"identifier": "setOrganizationAttribute", "parameters": "(String organizationAttribute)", "modifiers": "@Api public", "return": "void", "signature": "void setOrganizationAttribute(String organizationAttribute)", "full_signature": "@Api public void setOrganizationAttribute(String organizationAttribute)", "class_method_signature": "LdapAuthenticationService.setOrganizationAttribute(String organizationAttribute)", "testcase": false, "constructor": false}, {"identifier": "setDivisionAttribute", "parameters": "(String divisionAttribute)", "modifiers": "@Api public", "return": "void", "signature": "void setDivisionAttribute(String divisionAttribute)", "full_signature": "@Api public void setDivisionAttribute(String divisionAttribute)", "class_method_signature": "LdapAuthenticationService.setDivisionAttribute(String divisionAttribute)", "testcase": false, "constructor": false}, {"identifier": "setRolesAttribute", "parameters": "(String rolesAttribute)", "modifiers": "@Api public", "return": "void", "signature": "void setRolesAttribute(String rolesAttribute)", "full_signature": "@Api public void setRolesAttribute(String rolesAttribute)", "class_method_signature": "LdapAuthenticationService.setRolesAttribute(String rolesAttribute)", "testcase": false, "constructor": false}, {"identifier": "getRolesAttribute", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRolesAttribute()", "full_signature": "public String getRolesAttribute()", "class_method_signature": "LdapAuthenticationService.getRolesAttribute()", "testcase": false, "constructor": false}, {"identifier": "getDefaultRole", "parameters": "()", "modifiers": "public", "return": "List<AuthorizationInfo>", "signature": "List<AuthorizationInfo> getDefaultRole()", "full_signature": "public List<AuthorizationInfo> getDefaultRole()", "class_method_signature": "LdapAuthenticationService.getDefaultRole()", "testcase": false, "constructor": false}, {"identifier": "setDefaultRole", "parameters": "(List<AuthorizationInfo> defaultRole)", "modifiers": "@Api public", "return": "void", "signature": "void setDefaultRole(List<AuthorizationInfo> defaultRole)", "full_signature": "@Api public void setDefaultRole(List<AuthorizationInfo> defaultRole)", "class_method_signature": "LdapAuthenticationService.setDefaultRole(List<AuthorizationInfo> defaultRole)", "testcase": false, "constructor": false}, {"identifier": "setRoles", "parameters": "(Map<String, List<AuthorizationInfo>> roles)", "modifiers": "@Api public", "return": "void", "signature": "void setRoles(Map<String, List<AuthorizationInfo>> roles)", "full_signature": "@Api public void setRoles(Map<String, List<AuthorizationInfo>> roles)", "class_method_signature": "LdapAuthenticationService.setRoles(Map<String, List<AuthorizationInfo>> roles)", "testcase": false, "constructor": false}, {"identifier": "setNamedRoles", "parameters": "(Map<String, List<NamedRoleInfo>> namedRoles)", "modifiers": "@Api public", "return": "void", "signature": "void setNamedRoles(Map<String, List<NamedRoleInfo>> namedRoles)", "full_signature": "@Api public void setNamedRoles(Map<String, List<NamedRoleInfo>> namedRoles)", "class_method_signature": "LdapAuthenticationService.setNamedRoles(Map<String, List<NamedRoleInfo>> namedRoles)", "testcase": false, "constructor": false}, {"identifier": "getNamedRoles", "parameters": "()", "modifiers": "@Api public", "return": "Map<String, List<NamedRoleInfo>>", "signature": "Map<String, List<NamedRoleInfo>> getNamedRoles()", "full_signature": "@Api public Map<String, List<NamedRoleInfo>> getNamedRoles()", "class_method_signature": "LdapAuthenticationService.getNamedRoles()", "testcase": false, "constructor": false}, {"identifier": "convertPassword", "parameters": "(String user, String password)", "modifiers": "@Override public", "return": "String", "signature": "String convertPassword(String user, String password)", "full_signature": "@Override public String convertPassword(String user, String password)", "class_method_signature": "LdapAuthenticationService.convertPassword(String user, String password)", "testcase": false, "constructor": false}, {"identifier": "isAuthenticated", "parameters": "(String user, String password)", "modifiers": "@Override public", "return": "UserInfo", "signature": "UserInfo isAuthenticated(String user, String password)", "full_signature": "@Override public UserInfo isAuthenticated(String user, String password)", "class_method_signature": "LdapAuthenticationService.isAuthenticated(String user, String password)", "testcase": false, "constructor": false}, {"identifier": "getUsers", "parameters": "(UserFilter userFilter)", "modifiers": "@Override public", "return": "List<org.geomajas.security.UserInfo>", "signature": "List<org.geomajas.security.UserInfo> getUsers(UserFilter userFilter)", "full_signature": "@Override public List<org.geomajas.security.UserInfo> getUsers(UserFilter userFilter)", "class_method_signature": "LdapAuthenticationService.getUsers(UserFilter userFilter)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(UserFilter filter)", "modifiers": "@Api public", "return": "Filter", "signature": "Filter convert(UserFilter filter)", "full_signature": "@Api public Filter convert(UserFilter filter)", "class_method_signature": "LdapAuthenticationService.convert(UserFilter filter)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(SearchRequest request, String bindDN, String password)", "modifiers": "protected", "return": "SearchResult", "signature": "SearchResult execute(SearchRequest request, String bindDN, String password)", "full_signature": "protected SearchResult execute(SearchRequest request, String bindDN, String password)", "class_method_signature": "LdapAuthenticationService.execute(SearchRequest request, String bindDN, String password)", "testcase": false, "constructor": false}, {"identifier": "createSearchRequest", "parameters": "(String searchDN)", "modifiers": "private", "return": "SearchRequest", "signature": "SearchRequest createSearchRequest(String searchDN)", "full_signature": "private SearchRequest createSearchRequest(String searchDN)", "class_method_signature": "LdapAuthenticationService.createSearchRequest(String searchDN)", "testcase": false, "constructor": false}, {"identifier": "getUserInfo", "parameters": "(SearchResultEntry entry)", "modifiers": "private", "return": "UserInfo", "signature": "UserInfo getUserInfo(SearchResultEntry entry)", "full_signature": "private UserInfo getUserInfo(SearchResultEntry entry)", "class_method_signature": "LdapAuthenticationService.getUserInfo(SearchResultEntry entry)", "testcase": false, "constructor": false}, {"identifier": "getRoles", "parameters": "(SearchResultEntry entry)", "modifiers": "private", "return": "List<NamedRoleInfo>", "signature": "List<NamedRoleInfo> getRoles(SearchResultEntry entry)", "full_signature": "private List<NamedRoleInfo> getRoles(SearchResultEntry entry)", "class_method_signature": "LdapAuthenticationService.getRoles(SearchResultEntry entry)", "testcase": false, "constructor": false}, {"identifier": "addAttribute", "parameters": "(List<String> attributes, String attribute)", "modifiers": "private", "return": "void", "signature": "void addAttribute(List<String> attributes, String attribute)", "full_signature": "private void addAttribute(List<String> attributes, String attribute)", "class_method_signature": "LdapAuthenticationService.addAttribute(List<String> attributes, String attribute)", "testcase": false, "constructor": false}], "file": "plugin/staticsecurity/staticsecurity-ldap/src/main/java/org/geomajas/plugin/staticsecurity/ldap/LdapAuthenticationService.java"}, "focal_method": {"identifier": "getUsers", "parameters": "(UserFilter userFilter)", "modifiers": "@Override public", "return": "List<org.geomajas.security.UserInfo>", "body": "@Override\n\tpublic List<org.geomajas.security.UserInfo> getUsers(UserFilter userFilter) {\n\t\tList<org.geomajas.security.UserInfo> users = new ArrayList<org.geomajas.security.UserInfo>();\n\t\tif (allUsersDn == null) {\n\t\t\tlog.warn(\"Getting users from LDAP requires configuration of allUsersDn property\");\n\t\t} else {\n\t\t\tSearchRequest request = createSearchRequest(allUsersDn);\n\t\t\tLdapFilterVisitor visitor = new LdapFilterVisitor();\n\t\t\tFilter ldapFilter = (Filter) userFilter.accept(visitor, null);\n\t\t\tif (ldapFilter != null) {\n\t\t\t\tFilter f = request.getFilter();\n\t\t\t\trequest.setFilter(Filter.createANDFilter(f, ldapFilter));\n\t\t\t}\n\t\t\tSearchResult result = execute(request, null, null);\n\t\t\tif (result != null) {\n\t\t\t\tfor (SearchResultEntry entry : result.getSearchEntries()) {\n\t\t\t\t\tusers.add(getUserInfo(entry));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn users;\n\t}", "signature": "List<org.geomajas.security.UserInfo> getUsers(UserFilter userFilter)", "full_signature": "@Override public List<org.geomajas.security.UserInfo> getUsers(UserFilter userFilter)", "class_method_signature": "LdapAuthenticationService.getUsers(UserFilter userFilter)", "testcase": false, "constructor": false, "invocations": ["warn", "createSearchRequest", "accept", "getFilter", "setFilter", "createANDFilter", "execute", "getSearchEntries", "add", "getUserInfo"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}