{"test_class": {"identifier": "TilesContextBeanVariableResolverFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int EXPECTED_SESSION_CALLS = 3;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_SESSION_CALLS = 3", "var_name": "EXPECTED_SESSION_CALLS"}, {"original_string": "private static final int EXPECTED_REQUEST_CALLS = 4;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_REQUEST_CALLS = 4", "var_name": "EXPECTED_REQUEST_CALLS"}, {"original_string": "private Request request;", "modifier": "private", "type": "Request", "declarator": "request", "var_name": "request"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private TilesContextBeanVariableResolverFactory factory;", "modifier": "private", "type": "TilesContextBeanVariableResolverFactory", "declarator": "factory", "var_name": "factory"}], "file": "tiles-mvel/src/test/java/org/apache/tiles/mvel/TilesContextBeanVariableResolverFactoryTest.java"}, "test_case": {"identifier": "testCreateVariableResolver", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateVariableResolver() {\n        Map<String, Object> requestScope = new HashMap<String, Object>();\n        requestScope.put(\"one\", 1);\n        expect(request.getContext(\"request\")).andReturn(requestScope).anyTimes();\n        Map<String, Object> applicationScope = new HashMap<String, Object>();\n        applicationScope.put(\"two\", 2);\n        Map<String, Object> sessionScope = new HashMap<String, Object>();\n        sessionScope.put(\"three\", \"three\");\n        expect(request.getContext(\"session\")).andReturn(sessionScope).anyTimes();\n        expect(request.getAvailableScopes()).andReturn(\n                Arrays.asList(new String[] { \"request\", \"session\", \"application\" }))\n                .anyTimes();\n        expect(request.getContext(\"application\")).andReturn(applicationScope).anyTimes();\n        replay(request, applicationContext);\n\n        VariableResolver resolver = factory.createVariableResolver(\"one\");\n        assertEquals(1, resolver.getValue());\n        assertEquals(Integer.class, resolver.getType());\n        resolver = factory.createVariableResolver(\"two\");\n        assertEquals(2, resolver.getValue());\n        resolver = factory.createVariableResolver(\"three\");\n        assertEquals(\"three\", resolver.getValue());\n        resolver = factory.createVariableResolver(\"four\");\n        assertEquals(Object.class, resolver.getType());\n        assertNull(resolver.getValue());\n        verify(request, applicationContext);\n    }", "signature": "void testCreateVariableResolver()", "full_signature": "@Test public void testCreateVariableResolver()", "class_method_signature": "TilesContextBeanVariableResolverFactoryTest.testCreateVariableResolver()", "testcase": true, "constructor": false, "invocations": ["put", "anyTimes", "andReturn", "expect", "getContext", "put", "put", "anyTimes", "andReturn", "expect", "getContext", "anyTimes", "andReturn", "expect", "getAvailableScopes", "asList", "anyTimes", "andReturn", "expect", "getContext", "replay", "createVariableResolver", "assertEquals", "getValue", "assertEquals", "getType", "createVariableResolver", "assertEquals", "getValue", "createVariableResolver", "assertEquals", "getValue", "createVariableResolver", "assertEquals", "getType", "assertNull", "getValue", "verify"]}, "focal_class": {"identifier": "TilesContextBeanVariableResolverFactory", "superclass": "extends\n        ReadOnlyVariableResolverFactory", "interfaces": "", "fields": [], "methods": [{"identifier": "TilesContextBeanVariableResolverFactory", "parameters": "(TilesRequestContextHolder requestHolder)", "modifiers": "public", "return": "", "signature": " TilesContextBeanVariableResolverFactory(TilesRequestContextHolder requestHolder)", "full_signature": "public  TilesContextBeanVariableResolverFactory(TilesRequestContextHolder requestHolder)", "class_method_signature": "TilesContextBeanVariableResolverFactory.TilesContextBeanVariableResolverFactory(TilesRequestContextHolder requestHolder)", "testcase": false, "constructor": true}, {"identifier": "createVariableResolver", "parameters": "(String name)", "modifiers": "@Override public", "return": "VariableResolver", "signature": "VariableResolver createVariableResolver(String name)", "full_signature": "@Override public VariableResolver createVariableResolver(String name)", "class_method_signature": "TilesContextBeanVariableResolverFactory.createVariableResolver(String name)", "testcase": false, "constructor": false}, {"identifier": "isTarget", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean isTarget(String name)", "full_signature": "public boolean isTarget(String name)", "class_method_signature": "TilesContextBeanVariableResolverFactory.isTarget(String name)", "testcase": false, "constructor": false}], "file": "tiles-mvel/src/main/java/org/apache/tiles/mvel/TilesContextBeanVariableResolverFactory.java"}, "focal_method": {"identifier": "createVariableResolver", "parameters": "(String name)", "modifiers": "@Override public", "return": "VariableResolver", "body": "@Override\n    public VariableResolver createVariableResolver(String name) {\n        return new TilesContextBeanVariableResolver(name);\n    }", "signature": "VariableResolver createVariableResolver(String name)", "full_signature": "@Override public VariableResolver createVariableResolver(String name)", "class_method_signature": "TilesContextBeanVariableResolverFactory.createVariableResolver(String name)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}