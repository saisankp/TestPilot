{"test_class": {"identifier": "StringToDoubleConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StringToDoubleConverter converter;", "modifier": "private", "type": "StringToDoubleConverter", "declarator": "converter", "var_name": "converter"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/convert/StringToDoubleConverterTest.java"}, "test_case": {"identifier": "testConvert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvert() {\n        assertEquals(Double.valueOf(\"1.0\"), converter.convert(\"1.0\"));\n        assertNull(converter.convert(null));\n        assertThrows(NumberFormatException.class, () -> {\n            converter.convert(\"ttt\");\n        });\n    }", "signature": "void testConvert()", "full_signature": "@Test public void testConvert()", "class_method_signature": "StringToDoubleConverterTest.testConvert()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "valueOf", "convert", "assertNull", "convert", "assertThrows", "convert"]}, "focal_class": {"identifier": "StringToDoubleConverter", "superclass": "", "interfaces": "implements StringConverter<Double>", "fields": [], "methods": [{"identifier": "convert", "parameters": "(String source)", "modifiers": "@Override public", "return": "Double", "signature": "Double convert(String source)", "full_signature": "@Override public Double convert(String source)", "class_method_signature": "StringToDoubleConverter.convert(String source)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPriority()", "full_signature": "@Override public int getPriority()", "class_method_signature": "StringToDoubleConverter.getPriority()", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/convert/StringToDoubleConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String source)", "modifiers": "@Override public", "return": "Double", "body": "@Override\n    public Double convert(String source) {\n        return isNotEmpty(source) ? valueOf(source) : null;\n    }", "signature": "Double convert(String source)", "full_signature": "@Override public Double convert(String source)", "class_method_signature": "StringToDoubleConverter.convert(String source)", "testcase": false, "constructor": false, "invocations": ["isNotEmpty", "valueOf"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}