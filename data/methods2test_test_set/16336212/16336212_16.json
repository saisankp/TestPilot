{"test_class": {"identifier": "ResourceMethodMetaTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/plugins/jaxrs-plugin/src/test/java/org/glowroot/agent/plugin/jaxrs/ResourceMethodMetaTest.java"}, "test_case": {"identifier": "should", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should() {\n        assertThat(ResourceMethodMeta.combine(null, null)).isEqualTo(\"/\");\n        assertThat(ResourceMethodMeta.combine(\"\", null)).isEqualTo(\"/\");\n        assertThat(ResourceMethodMeta.combine(null, \"\")).isEqualTo(\"/\");\n        assertThat(ResourceMethodMeta.combine(\"\", \"\")).isEqualTo(\"/\");\n        assertThat(ResourceMethodMeta.combine(\"/abc\", \"/xyz\")).isEqualTo(\"/abc/xyz\");\n        assertThat(ResourceMethodMeta.combine(\"/abc\", \"xyz\")).isEqualTo(\"/abc/xyz\");\n        assertThat(ResourceMethodMeta.combine(\"abc\", \"/xyz\")).isEqualTo(\"/abc/xyz\");\n        assertThat(ResourceMethodMeta.combine(\"abc\", \"xyz\")).isEqualTo(\"/abc/xyz\");\n        assertThat(ResourceMethodMeta.combine(\"abc\", null)).isEqualTo(\"/abc\");\n        assertThat(ResourceMethodMeta.combine(null, \"xyz\")).isEqualTo(\"/xyz\");\n        assertThat(ResourceMethodMeta.combine(\"abc\", \"\")).isEqualTo(\"/abc\");\n        assertThat(ResourceMethodMeta.combine(\"\", \"xyz\")).isEqualTo(\"/xyz\");\n        assertThat(ResourceMethodMeta.combine(\"/abc\", \"\")).isEqualTo(\"/abc\");\n        assertThat(ResourceMethodMeta.combine(\"\", \"/xyz\")).isEqualTo(\"/xyz\");\n    }", "signature": "void should()", "full_signature": "@Test public void should()", "class_method_signature": "ResourceMethodMetaTest.should()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine", "isEqualTo", "assertThat", "combine"]}, "focal_class": {"identifier": "ResourceMethodMeta", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(ResourceMethodMeta.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(ResourceMethodMeta.class)", "var_name": "logger"}, {"original_string": "private final String resourceClassName;", "modifier": "private final", "type": "String", "declarator": "resourceClassName", "var_name": "resourceClassName"}, {"original_string": "private final String methodName;", "modifier": "private final", "type": "String", "declarator": "methodName", "var_name": "methodName"}, {"original_string": "private final boolean hasHttpMethodAnnotation;", "modifier": "private final", "type": "boolean", "declarator": "hasHttpMethodAnnotation", "var_name": "hasHttpMethodAnnotation"}, {"original_string": "private final String path;", "modifier": "private final", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "private final String altTransactionName;", "modifier": "private final", "type": "String", "declarator": "altTransactionName", "var_name": "altTransactionName"}, {"original_string": "private final boolean hasClassPathAnnotation;", "modifier": "private final", "type": "boolean", "declarator": "hasClassPathAnnotation", "var_name": "hasClassPathAnnotation"}], "methods": [{"identifier": "ResourceMethodMeta", "parameters": "(MethodInfo methodInfo)", "modifiers": "public", "return": "", "signature": " ResourceMethodMeta(MethodInfo methodInfo)", "full_signature": "public  ResourceMethodMeta(MethodInfo methodInfo)", "class_method_signature": "ResourceMethodMeta.ResourceMethodMeta(MethodInfo methodInfo)", "testcase": false, "constructor": true}, {"identifier": "getResourceClassName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getResourceClassName()", "full_signature": " String getResourceClassName()", "class_method_signature": "ResourceMethodMeta.getResourceClassName()", "testcase": false, "constructor": false}, {"identifier": "getMethodName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getMethodName()", "full_signature": " String getMethodName()", "class_method_signature": "ResourceMethodMeta.getMethodName()", "testcase": false, "constructor": false}, {"identifier": "hasHttpMethodAnnotation", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean hasHttpMethodAnnotation()", "full_signature": " boolean hasHttpMethodAnnotation()", "class_method_signature": "ResourceMethodMeta.hasHttpMethodAnnotation()", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getPath()", "full_signature": " String getPath()", "class_method_signature": "ResourceMethodMeta.getPath()", "testcase": false, "constructor": false}, {"identifier": "getAltTransactionName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getAltTransactionName()", "full_signature": " String getAltTransactionName()", "class_method_signature": "ResourceMethodMeta.getAltTransactionName()", "testcase": false, "constructor": false}, {"identifier": "hasClassPathAnnotation", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean hasClassPathAnnotation()", "full_signature": " boolean hasClassPathAnnotation()", "class_method_signature": "ResourceMethodMeta.hasClassPathAnnotation()", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "(@Nullable Class<?> clazz)", "modifiers": "private static @Nullable", "return": "String", "signature": "String getPath(@Nullable Class<?> clazz)", "full_signature": "private static @Nullable String getPath(@Nullable Class<?> clazz)", "class_method_signature": "ResourceMethodMeta.getPath(@Nullable Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getMethodAnnotations", "parameters": "(MethodInfo methodInfo,\n            @Nullable Class<?> clazz)", "modifiers": "private static @Nullable", "return": "MethodAnnotations", "signature": "MethodAnnotations getMethodAnnotations(MethodInfo methodInfo,\n            @Nullable Class<?> clazz)", "full_signature": "private static @Nullable MethodAnnotations getMethodAnnotations(MethodInfo methodInfo,\n            @Nullable Class<?> clazz)", "class_method_signature": "ResourceMethodMeta.getMethodAnnotations(MethodInfo methodInfo,\n            @Nullable Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getMethodAnnotations", "parameters": "(@Nullable Method method)", "modifiers": "private static @Nullable", "return": "MethodAnnotations", "signature": "MethodAnnotations getMethodAnnotations(@Nullable Method method)", "full_signature": "private static @Nullable MethodAnnotations getMethodAnnotations(@Nullable Method method)", "class_method_signature": "ResourceMethodMeta.getMethodAnnotations(@Nullable Method method)", "testcase": false, "constructor": false}, {"identifier": "isHttpMethodAnnotation", "parameters": "(Class<?> annotationClass)", "modifiers": "private static", "return": "boolean", "signature": "boolean isHttpMethodAnnotation(Class<?> annotationClass)", "full_signature": "private static boolean isHttpMethodAnnotation(Class<?> annotationClass)", "class_method_signature": "ResourceMethodMeta.isHttpMethodAnnotation(Class<?> annotationClass)", "testcase": false, "constructor": false}, {"identifier": "getPathAttribute", "parameters": "(Class<?> pathClass, Object path,\n            String attributeName)", "modifiers": "private static @Nullable", "return": "String", "signature": "String getPathAttribute(Class<?> pathClass, Object path,\n            String attributeName)", "full_signature": "private static @Nullable String getPathAttribute(Class<?> pathClass, Object path,\n            String attributeName)", "class_method_signature": "ResourceMethodMeta.getPathAttribute(Class<?> pathClass, Object path,\n            String attributeName)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(MethodInfo methodInfo)", "modifiers": "private static @Nullable", "return": "Class<?>", "signature": "Class<?> getClass(MethodInfo methodInfo)", "full_signature": "private static @Nullable Class<?> getClass(MethodInfo methodInfo)", "class_method_signature": "ResourceMethodMeta.getClass(MethodInfo methodInfo)", "testcase": false, "constructor": false}, {"identifier": "getMethod", "parameters": "(MethodInfo methodInfo,\n            @Nullable Class<?> declaringClass)", "modifiers": "private static @Nullable", "return": "Method", "signature": "Method getMethod(MethodInfo methodInfo,\n            @Nullable Class<?> declaringClass)", "full_signature": "private static @Nullable Method getMethod(MethodInfo methodInfo,\n            @Nullable Class<?> declaringClass)", "class_method_signature": "ResourceMethodMeta.getMethod(MethodInfo methodInfo,\n            @Nullable Class<?> declaringClass)", "testcase": false, "constructor": false}, {"identifier": "combine", "parameters": "(@Nullable String classPath, @Nullable String methodPath)", "modifiers": "static", "return": "String", "signature": "String combine(@Nullable String classPath, @Nullable String methodPath)", "full_signature": "static String combine(@Nullable String classPath, @Nullable String methodPath)", "class_method_signature": "ResourceMethodMeta.combine(@Nullable String classPath, @Nullable String methodPath)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "(@Nullable String path)", "modifiers": "private static", "return": "String", "signature": "String normalize(@Nullable String path)", "full_signature": "private static String normalize(@Nullable String path)", "class_method_signature": "ResourceMethodMeta.normalize(@Nullable String path)", "testcase": false, "constructor": false}, {"identifier": "replacePathSegmentsWithAsterisk", "parameters": "(String path)", "modifiers": "private static", "return": "String", "signature": "String replacePathSegmentsWithAsterisk(String path)", "full_signature": "private static String replacePathSegmentsWithAsterisk(String path)", "class_method_signature": "ResourceMethodMeta.replacePathSegmentsWithAsterisk(String path)", "testcase": false, "constructor": false}, {"identifier": "getSimpleName", "parameters": "(String className)", "modifiers": "private static", "return": "String", "signature": "String getSimpleName(String className)", "full_signature": "private static String getSimpleName(String className)", "class_method_signature": "ResourceMethodMeta.getSimpleName(String className)", "testcase": false, "constructor": false}, {"identifier": "substringAfterLast", "parameters": "(String str, char c)", "modifiers": "private static", "return": "String", "signature": "String substringAfterLast(String str, char c)", "full_signature": "private static String substringAfterLast(String str, char c)", "class_method_signature": "ResourceMethodMeta.substringAfterLast(String str, char c)", "testcase": false, "constructor": false}], "file": "agent/plugins/jaxrs-plugin/src/main/java/org/glowroot/agent/plugin/jaxrs/ResourceMethodMeta.java"}, "focal_method": {"identifier": "combine", "parameters": "(@Nullable String classPath, @Nullable String methodPath)", "modifiers": "static", "return": "String", "body": "static String combine(@Nullable String classPath, @Nullable String methodPath) {\n        if (classPath == null || classPath.isEmpty() || classPath.equals(\"/\")) {\n            return normalize(methodPath);\n        }\n        if (methodPath == null || methodPath.isEmpty() || methodPath.equals(\"/\")) {\n            return normalize(classPath);\n        }\n        return normalize(classPath) + normalize(methodPath);\n    }", "signature": "String combine(@Nullable String classPath, @Nullable String methodPath)", "full_signature": "static String combine(@Nullable String classPath, @Nullable String methodPath)", "class_method_signature": "ResourceMethodMeta.combine(@Nullable String classPath, @Nullable String methodPath)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "equals", "normalize", "isEmpty", "equals", "normalize", "normalize", "normalize"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}