{"test_class": {"identifier": "TransactionAdminTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TransactionAdminTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TransactionAdminTest.class)", "var_name": "LOG"}, {"original_string": "private static Configuration conf;", "modifier": "private static", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private static InMemoryZKServer zkServer;", "modifier": "private static", "type": "InMemoryZKServer", "declarator": "zkServer", "var_name": "zkServer"}, {"original_string": "private static ZKClientService zkClientService;", "modifier": "private static", "type": "ZKClientService", "declarator": "zkClientService", "var_name": "zkClientService"}, {"original_string": "private static TransactionService txService;", "modifier": "private static", "type": "TransactionService", "declarator": "txService", "var_name": "txService"}, {"original_string": "private static TransactionSystemClient txClient;", "modifier": "private static", "type": "TransactionSystemClient", "declarator": "txClient", "var_name": "txClient"}, {"original_string": "@ClassRule\n  public static TemporaryFolder tmpFolder = new TemporaryFolder();", "modifier": "@ClassRule\n  public static", "type": "TemporaryFolder", "declarator": "tmpFolder = new TemporaryFolder()", "var_name": "tmpFolder"}], "file": "tephra-core/src/test/java/co/cask/tephra/TransactionAdminTest.java"}, "test_case": {"identifier": "testPrintUsage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPrintUsage() throws Exception {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    ByteArrayOutputStream err = new ByteArrayOutputStream();\n    TransactionAdmin txAdmin = new TransactionAdmin(new PrintStream(out), new PrintStream(err));\n    int status = txAdmin.doMain(new String[0], conf);\n    Assert.assertEquals(1, status);\n    //noinspection ConstantConditions\n    Assert.assertTrue(err.toString(\"UTF-8\").startsWith(\"Usage:\"));\n    Assert.assertEquals(0, out.toByteArray().length);\n  }", "signature": "void testPrintUsage()", "full_signature": "@Test public void testPrintUsage()", "class_method_signature": "TransactionAdminTest.testPrintUsage()", "testcase": true, "constructor": false, "invocations": ["doMain", "assertEquals", "assertTrue", "startsWith", "toString", "assertEquals", "toByteArray"]}, "focal_class": {"identifier": "TransactionAdmin", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String OPT_TRUNCATE_INVALID_TX = \"--truncate-invalid-tx\";", "modifier": "private static final", "type": "String", "declarator": "OPT_TRUNCATE_INVALID_TX = \"--truncate-invalid-tx\"", "var_name": "OPT_TRUNCATE_INVALID_TX"}, {"original_string": "private static final String OPT_TRUNCATE_INVALID_TX_BEFORE = \"--truncate-invalid-tx-before\";", "modifier": "private static final", "type": "String", "declarator": "OPT_TRUNCATE_INVALID_TX_BEFORE = \"--truncate-invalid-tx-before\"", "var_name": "OPT_TRUNCATE_INVALID_TX_BEFORE"}, {"original_string": "private static final String OPT_GET_INVALID_TX_SIZE = \"--get-invalid-tx-size\";", "modifier": "private static final", "type": "String", "declarator": "OPT_GET_INVALID_TX_SIZE = \"--get-invalid-tx-size\"", "var_name": "OPT_GET_INVALID_TX_SIZE"}, {"original_string": "private final PrintStream out;", "modifier": "private final", "type": "PrintStream", "declarator": "out", "var_name": "out"}, {"original_string": "private final PrintStream err;", "modifier": "private final", "type": "PrintStream", "declarator": "err", "var_name": "err"}], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "TransactionAdmin.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "TransactionAdmin", "parameters": "(PrintStream out, PrintStream err)", "modifiers": "public", "return": "", "signature": " TransactionAdmin(PrintStream out, PrintStream err)", "full_signature": "public  TransactionAdmin(PrintStream out, PrintStream err)", "class_method_signature": "TransactionAdmin.TransactionAdmin(PrintStream out, PrintStream err)", "testcase": false, "constructor": true}, {"identifier": "doMain", "parameters": "(String[] args, Configuration conf)", "modifiers": "@VisibleForTesting", "return": "int", "signature": "int doMain(String[] args, Configuration conf)", "full_signature": "@VisibleForTesting int doMain(String[] args, Configuration conf)", "class_method_signature": "TransactionAdmin.doMain(String[] args, Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "parseTxIds", "parameters": "(String option)", "modifiers": "private", "return": "Set<Long>", "signature": "Set<Long> parseTxIds(String option)", "full_signature": "private Set<Long> parseTxIds(String option)", "class_method_signature": "TransactionAdmin.parseTxIds(String option)", "testcase": false, "constructor": false}, {"identifier": "printUsage", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void printUsage()", "full_signature": "private void printUsage()", "class_method_signature": "TransactionAdmin.printUsage()", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String... args)", "modifiers": "private static", "return": "String", "signature": "String join(String... args)", "full_signature": "private static String join(String... args)", "class_method_signature": "TransactionAdmin.join(String... args)", "testcase": false, "constructor": false}], "file": "tephra-core/src/main/java/co/cask/tephra/TransactionAdmin.java"}, "focal_method": {"identifier": "printUsage", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void printUsage() {\n    String programName = TransactionAdmin.class.getSimpleName();\n    String spaces = \"     \";\n    List<String> options = Lists.newArrayList();\n    options.add(join(\"Usage: \"));\n    options.add(join(spaces, programName, OPT_TRUNCATE_INVALID_TX, \"<tx1,tx2,...>\"));\n    options.add(join(spaces, programName, OPT_TRUNCATE_INVALID_TX_BEFORE, \"<time in secs>\"));\n    options.add(join(spaces, programName, OPT_GET_INVALID_TX_SIZE));\n    \n    String usage = Joiner.on(System.getProperty(\"line.separator\")).join(options);\n    err.println(usage);\n  }", "signature": "void printUsage()", "full_signature": "private void printUsage()", "class_method_signature": "TransactionAdmin.printUsage()", "testcase": false, "constructor": false, "invocations": ["getSimpleName", "newArrayList", "add", "join", "add", "join", "add", "join", "add", "join", "join", "on", "getProperty", "println"]}, "repository": {"repo_id": 21894018, "url": "https://github.com/cdapio/tephra", "language": "Java", "is_fork": false, "fork_count": 43, "stargazer_count": 157, "size": 1415, "license": "licensed"}}