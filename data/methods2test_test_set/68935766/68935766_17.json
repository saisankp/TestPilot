{"test_class": {"identifier": "ProxiedClassMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Map<Class<? extends Object>, Object> proxied = new HashMap<>(0);", "modifier": "", "type": "Map<Class<? extends Object>, Object>", "declarator": "proxied = new HashMap<>(0)", "var_name": "proxied"}, {"original_string": "ClassMap<Object> map = ClassMap.of(proxied);", "modifier": "", "type": "ClassMap<Object>", "declarator": "map = ClassMap.of(proxied)", "var_name": "map"}], "file": "commons/src/test/java/com/karuslabs/commons/util/collection/ClassMapTest.java"}, "test_case": {"identifier": "map", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void map() {\n        assertSame(proxied, map.map());\n    }", "signature": "void map()", "full_signature": "@Test void map()", "class_method_signature": "ProxiedClassMapTest.map()", "testcase": true, "constructor": false, "invocations": ["assertSame", "map"]}, "focal_class": {"identifier": "HashClassMap", "superclass": "extends HashMap<Class<? extends T>, T>", "interfaces": "implements ClassMap<T>", "fields": [], "methods": [{"identifier": "HashClassMap", "parameters": "()", "modifiers": "", "return": "", "signature": " HashClassMap()", "full_signature": "  HashClassMap()", "class_method_signature": "HashClassMap.HashClassMap()", "testcase": false, "constructor": true}, {"identifier": "HashClassMap", "parameters": "(int capacity)", "modifiers": "", "return": "", "signature": " HashClassMap(int capacity)", "full_signature": "  HashClassMap(int capacity)", "class_method_signature": "HashClassMap.HashClassMap(int capacity)", "testcase": false, "constructor": true}, {"identifier": "map", "parameters": "()", "modifiers": "@Override public", "return": "Map<Class<? extends T>, T>", "signature": "Map<Class<? extends T>, T> map()", "full_signature": "@Override public Map<Class<? extends T>, T> map()", "class_method_signature": "HashClassMap.map()", "testcase": false, "constructor": false}], "file": "commons/src/main/java/com/karuslabs/commons/util/collection/ClassMap.java"}, "focal_method": {"identifier": "map", "parameters": "()", "modifiers": "@Override public", "return": "Map<Class<? extends T>, T>", "body": "@Override\n    public Map<Class<? extends T>, T> map() {\n        return this;\n    }", "signature": "Map<Class<? extends T>, T> map()", "full_signature": "@Override public Map<Class<? extends T>, T> map()", "class_method_signature": "HashClassMap.map()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 68935766, "url": "https://github.com/Pante/Chimera", "stars": 13, "created": "9/22/2016 3:36:39 PM +00:00", "updates": "2020-01-27T21:22:29+00:00", "fork": "False", "license": "licensed"}}