{"test_class": {"identifier": "MinMaxOutlierAnalysisServiceTest", "superclass": "extends DhisTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MinMaxOutlierAnalysisService minMaxOutlierAnalysisService;", "modifier": "@Autowired\n    private", "type": "MinMaxOutlierAnalysisService", "declarator": "minMaxOutlierAnalysisService", "var_name": "minMaxOutlierAnalysisService"}, {"original_string": "@Autowired\n    private MinMaxDataElementService minMaxDataElementService;", "modifier": "@Autowired\n    private", "type": "MinMaxDataElementService", "declarator": "minMaxDataElementService", "var_name": "minMaxDataElementService"}, {"original_string": "@Autowired\n    private DataElementService dataElementService;", "modifier": "@Autowired\n    private", "type": "DataElementService", "declarator": "dataElementService", "var_name": "dataElementService"}, {"original_string": "@Autowired\n    private CategoryService categoryService;", "modifier": "@Autowired\n    private", "type": "CategoryService", "declarator": "categoryService", "var_name": "categoryService"}, {"original_string": "@Autowired\n    private OrganisationUnitService organisationUnitService;", "modifier": "@Autowired\n    private", "type": "OrganisationUnitService", "declarator": "organisationUnitService", "var_name": "organisationUnitService"}, {"original_string": "@Autowired\n    private DataValueService dataValueService;", "modifier": "@Autowired\n    private", "type": "DataValueService", "declarator": "dataValueService", "var_name": "dataValueService"}, {"original_string": "private DataElement dataElementA;", "modifier": "private", "type": "DataElement", "declarator": "dataElementA", "var_name": "dataElementA"}, {"original_string": "private DataElement dataElementB;", "modifier": "private", "type": "DataElement", "declarator": "dataElementB", "var_name": "dataElementB"}, {"original_string": "private DataElement dataElementC;", "modifier": "private", "type": "DataElement", "declarator": "dataElementC", "var_name": "dataElementC"}, {"original_string": "private DataElement dataElementD;", "modifier": "private", "type": "DataElement", "declarator": "dataElementD", "var_name": "dataElementD"}, {"original_string": "private DataValue dataValueA;", "modifier": "private", "type": "DataValue", "declarator": "dataValueA", "var_name": "dataValueA"}, {"original_string": "private DataValue dataValueB;", "modifier": "private", "type": "DataValue", "declarator": "dataValueB", "var_name": "dataValueB"}, {"original_string": "private Set<DataElement> dataElementsA = new HashSet<>();", "modifier": "private", "type": "Set<DataElement>", "declarator": "dataElementsA = new HashSet<>()", "var_name": "dataElementsA"}, {"original_string": "private Set<DataElement> dataElementsB = new HashSet<>();", "modifier": "private", "type": "Set<DataElement>", "declarator": "dataElementsB = new HashSet<>()", "var_name": "dataElementsB"}, {"original_string": "private Set<DataElement> dataElementsC = new HashSet<>();", "modifier": "private", "type": "Set<DataElement>", "declarator": "dataElementsC = new HashSet<>()", "var_name": "dataElementsC"}, {"original_string": "private CategoryCombo categoryCombo;", "modifier": "private", "type": "CategoryCombo", "declarator": "categoryCombo", "var_name": "categoryCombo"}, {"original_string": "private CategoryOptionCombo categoryOptionCombo;", "modifier": "private", "type": "CategoryOptionCombo", "declarator": "categoryOptionCombo", "var_name": "categoryOptionCombo"}, {"original_string": "private Period periodA;", "modifier": "private", "type": "Period", "declarator": "periodA", "var_name": "periodA"}, {"original_string": "private Period periodB;", "modifier": "private", "type": "Period", "declarator": "periodB", "var_name": "periodB"}, {"original_string": "private Period periodC;", "modifier": "private", "type": "Period", "declarator": "periodC", "var_name": "periodC"}, {"original_string": "private Period periodD;", "modifier": "private", "type": "Period", "declarator": "periodD", "var_name": "periodD"}, {"original_string": "private Period periodE;", "modifier": "private", "type": "Period", "declarator": "periodE", "var_name": "periodE"}, {"original_string": "private Period periodF;", "modifier": "private", "type": "Period", "declarator": "periodF", "var_name": "periodF"}, {"original_string": "private Period periodG;", "modifier": "private", "type": "Period", "declarator": "periodG", "var_name": "periodG"}, {"original_string": "private Period periodH;", "modifier": "private", "type": "Period", "declarator": "periodH", "var_name": "periodH"}, {"original_string": "private Period periodI;", "modifier": "private", "type": "Period", "declarator": "periodI", "var_name": "periodI"}, {"original_string": "private Period periodJ;", "modifier": "private", "type": "Period", "declarator": "periodJ", "var_name": "periodJ"}, {"original_string": "private Date from = getDate( 1998, 1, 1 );", "modifier": "private", "type": "Date", "declarator": "from = getDate( 1998, 1, 1 )", "var_name": "from"}, {"original_string": "private OrganisationUnit organisationUnitA;", "modifier": "private", "type": "OrganisationUnit", "declarator": "organisationUnitA", "var_name": "organisationUnitA"}, {"original_string": "private MinMaxDataElement minMaxDataElement;", "modifier": "private", "type": "MinMaxDataElement", "declarator": "minMaxDataElement", "var_name": "minMaxDataElement"}], "file": "dhis-2/dhis-services/dhis-service-validation/src/test/java/org/hisp/dhis/dataanalysis/MinMaxOutlierAnalysisServiceTest.java"}, "test_case": {"identifier": "testAnalyse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAnalyse()\n    {\n        dataValueA = createDataValue( dataElementA, periodI, organisationUnitA, \"41\", categoryOptionCombo );\n        dataValueB = createDataValue( dataElementA, periodJ, organisationUnitA, \"-41\", categoryOptionCombo );\n\n        dataValueService.addDataValue( createDataValue( dataElementA, periodA, organisationUnitA, \"5\", categoryOptionCombo ) );\n        dataValueService.addDataValue( createDataValue( dataElementA, periodB, organisationUnitA, \"-5\", categoryOptionCombo ) );\n        dataValueService.addDataValue( createDataValue( dataElementA, periodC, organisationUnitA, \"5\", categoryOptionCombo ) );\n        dataValueService.addDataValue( createDataValue( dataElementA, periodD, organisationUnitA, \"-5\", categoryOptionCombo ) );\n        dataValueService.addDataValue( createDataValue( dataElementA, periodE, organisationUnitA, \"10\", categoryOptionCombo ) );\n        dataValueService.addDataValue( createDataValue( dataElementA, periodF, organisationUnitA, \"-10\", categoryOptionCombo ) );\n        dataValueService.addDataValue( createDataValue( dataElementA, periodG, organisationUnitA, \"13\", categoryOptionCombo ) );\n        dataValueService.addDataValue( createDataValue( dataElementA, periodH, organisationUnitA, \"-13\", categoryOptionCombo ) );\n\n        dataValueService.addDataValue( dataValueA );\n        dataValueService.addDataValue( dataValueB );\n\n        minMaxDataElement = new MinMaxDataElement( organisationUnitA, dataElementA, categoryOptionCombo, -40, 40, false );\n        minMaxDataElementService.addMinMaxDataElement( minMaxDataElement );\n\n        List<Period> periods = new ArrayList<>();\n        periods.add( periodI );\n        periods.add( periodJ );\n        periods.add( periodA );\n        periods.add( periodE );\n\n        List<DeflatedDataValue> result = minMaxOutlierAnalysisService.analyse( Lists.newArrayList( organisationUnitA ), dataElementsA, periods, null, from );\n\n        assertEquals( 2, result.size() );\n    }", "signature": "void testAnalyse()", "full_signature": "@Test public void testAnalyse()", "class_method_signature": "MinMaxOutlierAnalysisServiceTest.testAnalyse()", "testcase": true, "constructor": false, "invocations": ["createDataValue", "createDataValue", "addDataValue", "createDataValue", "addDataValue", "createDataValue", "addDataValue", "createDataValue", "addDataValue", "createDataValue", "addDataValue", "createDataValue", "addDataValue", "createDataValue", "addDataValue", "createDataValue", "addDataValue", "createDataValue", "addDataValue", "addDataValue", "addMinMaxDataElement", "add", "add", "add", "add", "analyse", "newArrayList", "assertEquals", "size"]}, "focal_class": {"identifier": "MinMaxOutlierAnalysisService", "superclass": "", "interfaces": "implements MinMaxDataAnalysisService", "fields": [{"original_string": "private final DataAnalysisStore dataAnalysisStore;", "modifier": "private final", "type": "DataAnalysisStore", "declarator": "dataAnalysisStore", "var_name": "dataAnalysisStore"}, {"original_string": "private final MinMaxDataElementService minMaxDataElementService;", "modifier": "private final", "type": "MinMaxDataElementService", "declarator": "minMaxDataElementService", "var_name": "minMaxDataElementService"}, {"original_string": "private final BatchHandlerFactory batchHandlerFactory;", "modifier": "private final", "type": "BatchHandlerFactory", "declarator": "batchHandlerFactory", "var_name": "batchHandlerFactory"}], "methods": [{"identifier": "MinMaxOutlierAnalysisService", "parameters": "( DataAnalysisStore dataAnalysisStore,\n        MinMaxDataElementService minMaxDataElementService, BatchHandlerFactory batchHandlerFactory )", "modifiers": "public", "return": "", "signature": " MinMaxOutlierAnalysisService( DataAnalysisStore dataAnalysisStore,\n        MinMaxDataElementService minMaxDataElementService, BatchHandlerFactory batchHandlerFactory )", "full_signature": "public  MinMaxOutlierAnalysisService( DataAnalysisStore dataAnalysisStore,\n        MinMaxDataElementService minMaxDataElementService, BatchHandlerFactory batchHandlerFactory )", "class_method_signature": "MinMaxOutlierAnalysisService.MinMaxOutlierAnalysisService( DataAnalysisStore dataAnalysisStore,\n        MinMaxDataElementService minMaxDataElementService, BatchHandlerFactory batchHandlerFactory )", "testcase": false, "constructor": true}, {"identifier": "analyse", "parameters": "( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )", "modifiers": "@Override public", "return": "List<DeflatedDataValue>", "signature": "List<DeflatedDataValue> analyse( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )", "full_signature": "@Override public List<DeflatedDataValue> analyse( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )", "class_method_signature": "MinMaxOutlierAnalysisService.analyse( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )", "testcase": false, "constructor": false}, {"identifier": "generateMinMaxValues", "parameters": "( OrganisationUnit parent, Collection<DataElement> dataElements, Double stdDevFactor )", "modifiers": "@Override public", "return": "void", "signature": "void generateMinMaxValues( OrganisationUnit parent, Collection<DataElement> dataElements, Double stdDevFactor )", "full_signature": "@Override public void generateMinMaxValues( OrganisationUnit parent, Collection<DataElement> dataElements, Double stdDevFactor )", "class_method_signature": "MinMaxOutlierAnalysisService.generateMinMaxValues( OrganisationUnit parent, Collection<DataElement> dataElements, Double stdDevFactor )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-validation/src/main/java/org/hisp/dhis/dataanalysis/MinMaxOutlierAnalysisService.java"}, "focal_method": {"identifier": "analyse", "parameters": "( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )", "modifiers": "@Override public", "return": "List<DeflatedDataValue>", "body": "@Override\n    public List<DeflatedDataValue> analyse( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )\n    {\n        Set<DataElement> elements = dataElements.stream()\n            .filter( de -> ValueType.NUMERIC_TYPES.contains( de.getValueType() ) )\n            .collect( Collectors.toSet() );\n        Set<CategoryOptionCombo> categoryOptionCombos = new HashSet<>();\n\n        for ( DataElement dataElement : elements )\n        {\n            categoryOptionCombos.addAll( dataElement.getCategoryOptionCombos() );\n        }\n\n        log.debug( \"Starting min-max analysis, no of data elements: \" + elements.size() + \", no of parent org units: \" + parents.size() );\n\n        return dataAnalysisStore.getMinMaxViolations( elements, categoryOptionCombos, periods, parents, MAX_OUTLIERS );\n    }", "signature": "List<DeflatedDataValue> analyse( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )", "full_signature": "@Override public List<DeflatedDataValue> analyse( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )", "class_method_signature": "MinMaxOutlierAnalysisService.analyse( Collection<OrganisationUnit> parents,\n        Collection<DataElement> dataElements, Collection<Period> periods, Double stdDevFactor, Date from )", "testcase": false, "constructor": false, "invocations": ["collect", "filter", "stream", "contains", "getValueType", "toSet", "addAll", "getCategoryOptionCombos", "debug", "size", "size", "getMinMaxViolations"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}