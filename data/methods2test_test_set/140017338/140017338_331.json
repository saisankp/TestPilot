{"test_class": {"identifier": "AntennaUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/runtime/src/test/java/org/eclipse/sw360/antenna/util/AntennaUtilsTest.java"}, "test_case": {"identifier": "computeJarPathFromURLWithExclemationMarkOnWin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void computeJarPathFromURLWithExclemationMarkOnWin() throws Exception {\n        onlyForWindows();\n\n        final URL url = new URL(\"jar:file:/C:/some/path/to/file.jar!/some/inner/thing.class\");\n\n        final Path jarPath = AntennaUtils.getJarPath(url);\n\n        assertThat(jarPath).hasToString(\"C:\\\\some\\\\path\\\\to\\\\file.jar\");\n    }", "signature": "void computeJarPathFromURLWithExclemationMarkOnWin()", "full_signature": "@Test public void computeJarPathFromURLWithExclemationMarkOnWin()", "class_method_signature": "AntennaUtilsTest.computeJarPathFromURLWithExclemationMarkOnWin()", "testcase": true, "constructor": false, "invocations": ["onlyForWindows", "getJarPath", "hasToString", "assertThat"]}, "focal_class": {"identifier": "AntennaUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ARCHIVE_FILE_EXTENSIONS = \"zip|war|jar|ear\";", "modifier": "private static final", "type": "String", "declarator": "ARCHIVE_FILE_EXTENSIONS = \"zip|war|jar|ear\"", "var_name": "ARCHIVE_FILE_EXTENSIONS"}], "methods": [{"identifier": "AntennaUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " AntennaUtils()", "full_signature": "private  AntennaUtils()", "class_method_signature": "AntennaUtils.AntennaUtils()", "testcase": false, "constructor": true}, {"identifier": "getJarPathIteratorFromPath", "parameters": "(Path jarPath)", "modifiers": "public static", "return": "Iterator<Path>", "signature": "Iterator<Path> getJarPathIteratorFromPath(Path jarPath)", "full_signature": "public static Iterator<Path> getJarPathIteratorFromPath(Path jarPath)", "class_method_signature": "AntennaUtils.getJarPathIteratorFromPath(Path jarPath)", "testcase": false, "constructor": false}, {"identifier": "getJarPath", "parameters": "(URL url)", "modifiers": "public static", "return": "Path", "signature": "Path getJarPath(URL url)", "full_signature": "public static Path getJarPath(URL url)", "class_method_signature": "AntennaUtils.getJarPath(URL url)", "testcase": false, "constructor": false}, {"identifier": "getJarPath", "parameters": "(Path jarPath)", "modifiers": "public static", "return": "Path", "signature": "Path getJarPath(Path jarPath)", "full_signature": "public static Path getJarPath(Path jarPath)", "class_method_signature": "AntennaUtils.getJarPath(Path jarPath)", "testcase": false, "constructor": false}, {"identifier": "replaceDotInJarExtension", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String replaceDotInJarExtension(String path)", "full_signature": "public static String replaceDotInJarExtension(String path)", "class_method_signature": "AntennaUtils.replaceDotInJarExtension(String path)", "testcase": false, "constructor": false}, {"identifier": "computeInnerReplacementJarPath", "parameters": "(Path jarPath)", "modifiers": "public static", "return": "Path", "signature": "Path computeInnerReplacementJarPath(Path jarPath)", "full_signature": "public static Path computeInnerReplacementJarPath(Path jarPath)", "class_method_signature": "AntennaUtils.computeInnerReplacementJarPath(Path jarPath)", "testcase": false, "constructor": false}], "file": "core/runtime/src/main/java/org/eclipse/sw360/antenna/util/AntennaUtils.java"}, "focal_method": {"identifier": "getJarPath", "parameters": "(URL url)", "modifiers": "public static", "return": "Path", "body": "public static Path getJarPath(URL url) throws URISyntaxException, MalformedURLException {\n        if(\"jar\".equals(url.getProtocol())) {\n            String file = url.getFile();\n            if(file.contains(\"!\")){\n                file = file.split(\"!\",2)[0];\n            }\n            url = new URL(file);\n        }\n        Path jarPath = Paths.get(url.toURI());\n        return getJarPath(jarPath);\n    }", "signature": "Path getJarPath(URL url)", "full_signature": "public static Path getJarPath(URL url)", "class_method_signature": "AntennaUtils.getJarPath(URL url)", "testcase": false, "constructor": false, "invocations": ["equals", "getProtocol", "getFile", "contains", "split", "get", "toURI", "getJarPath"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}