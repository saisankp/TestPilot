{"test_class": {"identifier": "SynL1CSceneTransformGeoCodingTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GeoCoding wrappedCoding;", "modifier": "private", "type": "GeoCoding", "declarator": "wrappedCoding", "var_name": "wrappedCoding"}, {"original_string": "private SynL1CSceneTransformGeoCoding coding;", "modifier": "private", "type": "SynL1CSceneTransformGeoCoding", "declarator": "coding", "var_name": "coding"}], "file": "s3tbx-sentinel3-reader/src/test/java/org/esa/s3tbx/dataio/s3/synergy/SynL1CSceneTransformGeoCodingTest.java"}, "test_case": {"identifier": "testCanClone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCanClone() {\n        assertTrue(coding.canClone());\n    }", "signature": "void testCanClone()", "full_signature": "@Test public void testCanClone()", "class_method_signature": "SynL1CSceneTransformGeoCodingTest.testCanClone()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "canClone"]}, "focal_class": {"identifier": "SynL1CSceneTransformGeoCoding", "superclass": "extends AbstractGeoCoding", "interfaces": "", "fields": [{"original_string": "private final GeoCoding wrappedGeoCoding;", "modifier": "private final", "type": "GeoCoding", "declarator": "wrappedGeoCoding", "var_name": "wrappedGeoCoding"}, {"original_string": "private final MathTransform2D sceneToModelTransform;", "modifier": "private final", "type": "MathTransform2D", "declarator": "sceneToModelTransform", "var_name": "sceneToModelTransform"}, {"original_string": "private final MathTransform2D modelToSceneTransform;", "modifier": "private final", "type": "MathTransform2D", "declarator": "modelToSceneTransform", "var_name": "modelToSceneTransform"}], "methods": [{"identifier": "SynL1CSceneTransformGeoCoding", "parameters": "(GeoCoding wrappedGeoCoding, MathTransform2D sceneToModelTransform, MathTransform2D modelToSceneTransform)", "modifiers": "", "return": "", "signature": " SynL1CSceneTransformGeoCoding(GeoCoding wrappedGeoCoding, MathTransform2D sceneToModelTransform, MathTransform2D modelToSceneTransform)", "full_signature": "  SynL1CSceneTransformGeoCoding(GeoCoding wrappedGeoCoding, MathTransform2D sceneToModelTransform, MathTransform2D modelToSceneTransform)", "class_method_signature": "SynL1CSceneTransformGeoCoding.SynL1CSceneTransformGeoCoding(GeoCoding wrappedGeoCoding, MathTransform2D sceneToModelTransform, MathTransform2D modelToSceneTransform)", "testcase": false, "constructor": true}, {"identifier": "isCrossingMeridianAt180", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCrossingMeridianAt180()", "full_signature": "@Override public boolean isCrossingMeridianAt180()", "class_method_signature": "SynL1CSceneTransformGeoCoding.isCrossingMeridianAt180()", "testcase": false, "constructor": false}, {"identifier": "canGetPixelPos", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canGetPixelPos()", "full_signature": "@Override public boolean canGetPixelPos()", "class_method_signature": "SynL1CSceneTransformGeoCoding.canGetPixelPos()", "testcase": false, "constructor": false}, {"identifier": "canGetGeoPos", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canGetGeoPos()", "full_signature": "@Override public boolean canGetGeoPos()", "class_method_signature": "SynL1CSceneTransformGeoCoding.canGetGeoPos()", "testcase": false, "constructor": false}, {"identifier": "getPixelPos", "parameters": "(GeoPos geoPos, PixelPos pixelPos)", "modifiers": "@Override public", "return": "PixelPos", "signature": "PixelPos getPixelPos(GeoPos geoPos, PixelPos pixelPos)", "full_signature": "@Override public PixelPos getPixelPos(GeoPos geoPos, PixelPos pixelPos)", "class_method_signature": "SynL1CSceneTransformGeoCoding.getPixelPos(GeoPos geoPos, PixelPos pixelPos)", "testcase": false, "constructor": false}, {"identifier": "getGeoPos", "parameters": "(PixelPos pixelPos, GeoPos geoPos)", "modifiers": "@Override public", "return": "GeoPos", "signature": "GeoPos getGeoPos(PixelPos pixelPos, GeoPos geoPos)", "full_signature": "@Override public GeoPos getGeoPos(PixelPos pixelPos, GeoPos geoPos)", "class_method_signature": "SynL1CSceneTransformGeoCoding.getGeoPos(PixelPos pixelPos, GeoPos geoPos)", "testcase": false, "constructor": false}, {"identifier": "getDatum", "parameters": "()", "modifiers": "@Override public", "return": "Datum", "signature": "Datum getDatum()", "full_signature": "@Override public Datum getDatum()", "class_method_signature": "SynL1CSceneTransformGeoCoding.getDatum()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "SynL1CSceneTransformGeoCoding.dispose()", "testcase": false, "constructor": false}, {"identifier": "transferGeoCoding", "parameters": "(Scene srcScene, Scene destScene, ProductSubsetDef subsetDef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean transferGeoCoding(Scene srcScene, Scene destScene, ProductSubsetDef subsetDef)", "full_signature": "@Override public boolean transferGeoCoding(Scene srcScene, Scene destScene, ProductSubsetDef subsetDef)", "class_method_signature": "SynL1CSceneTransformGeoCoding.transferGeoCoding(Scene srcScene, Scene destScene, ProductSubsetDef subsetDef)", "testcase": false, "constructor": false}, {"identifier": "canClone", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canClone()", "full_signature": "@Override public boolean canClone()", "class_method_signature": "SynL1CSceneTransformGeoCoding.canClone()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "GeoCoding", "signature": "GeoCoding clone()", "full_signature": "@Override public GeoCoding clone()", "class_method_signature": "SynL1CSceneTransformGeoCoding.clone()", "testcase": false, "constructor": false}], "file": "s3tbx-sentinel3-reader/src/main/java/org/esa/s3tbx/dataio/s3/synergy/SynL1CSceneTransformGeoCoding.java"}, "focal_method": {"identifier": "canClone", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean canClone() {\n        return true;\n    }", "signature": "boolean canClone()", "full_signature": "@Override public boolean canClone()", "class_method_signature": "SynL1CSceneTransformGeoCoding.canClone()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}