{"test_class": {"identifier": "TotalValencyAtomTest", "superclass": "", "interfaces": "", "fields": [], "file": "legacy/src/test/java/org/openscience/cdk/isomorphism/matchers/smarts/TotalValencyAtomTest.java"}, "test_case": {"identifier": "matches", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void matches() throws Exception {\n        TotalValencyAtom matcher = new TotalValencyAtom(4, mock(IChemObjectBuilder.class));\n        IAtom atom = mock(IAtom.class);\n        when(atom.getProperty(SMARTSAtomInvariants.KEY))\n                .thenReturn(\n                        new SMARTSAtomInvariants(mock(IAtomContainer.class), 4, 0, Collections.<Integer> emptySet(), 0,\n                                0, 0, 0));\n        assertTrue(matcher.matches(atom));\n    }", "signature": "void matches()", "full_signature": "@Test public void matches()", "class_method_signature": "TotalValencyAtomTest.matches()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getProperty", "mock", "emptySet", "assertTrue", "matches"]}, "focal_class": {"identifier": "TotalValencyAtom", "superclass": "extends SMARTSAtom", "interfaces": "", "fields": [{"original_string": "private final int valence;", "modifier": "private final", "type": "int", "declarator": "valence", "var_name": "valence"}], "methods": [{"identifier": "TotalValencyAtom", "parameters": "(int valence, IChemObjectBuilder builder)", "modifiers": "public", "return": "", "signature": " TotalValencyAtom(int valence, IChemObjectBuilder builder)", "full_signature": "public  TotalValencyAtom(int valence, IChemObjectBuilder builder)", "class_method_signature": "TotalValencyAtom.TotalValencyAtom(int valence, IChemObjectBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(IAtom atom)", "full_signature": "@Override public boolean matches(IAtom atom)", "class_method_signature": "TotalValencyAtom.matches(IAtom atom)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/isomorphism/matchers/smarts/TotalValencyAtom.java"}, "focal_method": {"identifier": "matches", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean matches(IAtom atom) {\n        return invariants(atom).valence() == valence;\n    }", "signature": "boolean matches(IAtom atom)", "full_signature": "@Override public boolean matches(IAtom atom)", "class_method_signature": "TotalValencyAtom.matches(IAtom atom)", "testcase": false, "constructor": false, "invocations": ["valence", "invariants"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}