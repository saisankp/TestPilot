{"test_class": {"identifier": "DefaultModuleDefinitionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();", "modifier": "", "type": "ResourcePatternResolver", "declarator": "resolver = new PathMatchingResourcePatternResolver()", "var_name": "resolver"}], "file": "framework/spring/module/src/test/java/org/apache/cloudstack/spring/module/model/impl/DefaultModuleDefinitionTest.java"}, "test_case": {"identifier": "testBadName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBadName() {\n        DefaultModuleDefinition def = createDef(\"badname\");\n\n        try {\n            def.init();\n            fail();\n        } catch (IOException e) {\n            assertTrue(e.getMessage().contains(\"is expected to exist at\"));\n        }\n    }", "signature": "void testBadName()", "full_signature": "@Test public void testBadName()", "class_method_signature": "DefaultModuleDefinitionTest.testBadName()", "testcase": true, "constructor": false, "invocations": ["createDef", "init", "fail", "assertTrue", "contains", "getMessage"]}, "focal_class": {"identifier": "DefaultModuleDefinition", "superclass": "", "interfaces": "implements ModuleDefinition", "fields": [{"original_string": "public static final String NAME = \"name\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"name\"", "var_name": "NAME"}, {"original_string": "public static final String PARENT = \"parent\";", "modifier": "public static final", "type": "String", "declarator": "PARENT = \"parent\"", "var_name": "PARENT"}, {"original_string": "String name;", "modifier": "", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "String baseDir;", "modifier": "", "type": "String", "declarator": "baseDir", "var_name": "baseDir"}, {"original_string": "String parent;", "modifier": "", "type": "String", "declarator": "parent", "var_name": "parent"}, {"original_string": "Resource moduleProperties;", "modifier": "", "type": "Resource", "declarator": "moduleProperties", "var_name": "moduleProperties"}, {"original_string": "ResourcePatternResolver resolver;", "modifier": "", "type": "ResourcePatternResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "boolean valid;", "modifier": "", "type": "boolean", "declarator": "valid", "var_name": "valid"}, {"original_string": "List<Resource> configLocations;", "modifier": "", "type": "List<Resource>", "declarator": "configLocations", "var_name": "configLocations"}, {"original_string": "List<Resource> contextLocations;", "modifier": "", "type": "List<Resource>", "declarator": "contextLocations", "var_name": "contextLocations"}, {"original_string": "List<Resource> inheritableContextLocations;", "modifier": "", "type": "List<Resource>", "declarator": "inheritableContextLocations", "var_name": "inheritableContextLocations"}, {"original_string": "List<Resource> overrideContextLocations;", "modifier": "", "type": "List<Resource>", "declarator": "overrideContextLocations", "var_name": "overrideContextLocations"}, {"original_string": "Map<String, ModuleDefinition> children = new TreeMap<String, ModuleDefinition>();", "modifier": "", "type": "Map<String, ModuleDefinition>", "declarator": "children = new TreeMap<String, ModuleDefinition>()", "var_name": "children"}], "methods": [{"identifier": "DefaultModuleDefinition", "parameters": "(String baseDir, Resource moduleProperties, ResourcePatternResolver resolver)", "modifiers": "public", "return": "", "signature": " DefaultModuleDefinition(String baseDir, Resource moduleProperties, ResourcePatternResolver resolver)", "full_signature": "public  DefaultModuleDefinition(String baseDir, Resource moduleProperties, ResourcePatternResolver resolver)", "class_method_signature": "DefaultModuleDefinition.DefaultModuleDefinition(String baseDir, Resource moduleProperties, ResourcePatternResolver resolver)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "DefaultModuleDefinition.init()", "testcase": false, "constructor": false}, {"identifier": "resolveNameAndParent", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void resolveNameAndParent()", "full_signature": "protected void resolveNameAndParent()", "class_method_signature": "DefaultModuleDefinition.resolveNameAndParent()", "testcase": false, "constructor": false}, {"identifier": "checkNameMatchesSelf", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void checkNameMatchesSelf()", "full_signature": "protected void checkNameMatchesSelf()", "class_method_signature": "DefaultModuleDefinition.checkNameMatchesSelf()", "testcase": false, "constructor": false}, {"identifier": "location", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String location()", "full_signature": "private String location()", "class_method_signature": "DefaultModuleDefinition.location()", "testcase": false, "constructor": false}, {"identifier": "addChild", "parameters": "(ModuleDefinition def)", "modifiers": "@Override public", "return": "void", "signature": "void addChild(ModuleDefinition def)", "full_signature": "@Override public void addChild(ModuleDefinition def)", "class_method_signature": "DefaultModuleDefinition.addChild(ModuleDefinition def)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "Collection<ModuleDefinition>", "signature": "Collection<ModuleDefinition> getChildren()", "full_signature": "@Override public Collection<ModuleDefinition> getChildren()", "class_method_signature": "DefaultModuleDefinition.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DefaultModuleDefinition.getName()", "testcase": false, "constructor": false}, {"identifier": "getParentName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getParentName()", "full_signature": "@Override public String getParentName()", "class_method_signature": "DefaultModuleDefinition.getParentName()", "testcase": false, "constructor": false}, {"identifier": "getConfigLocations", "parameters": "()", "modifiers": "@Override public", "return": "List<Resource>", "signature": "List<Resource> getConfigLocations()", "full_signature": "@Override public List<Resource> getConfigLocations()", "class_method_signature": "DefaultModuleDefinition.getConfigLocations()", "testcase": false, "constructor": false}, {"identifier": "getContextLocations", "parameters": "()", "modifiers": "@Override public", "return": "List<Resource>", "signature": "List<Resource> getContextLocations()", "full_signature": "@Override public List<Resource> getContextLocations()", "class_method_signature": "DefaultModuleDefinition.getContextLocations()", "testcase": false, "constructor": false}, {"identifier": "getInheritableContextLocations", "parameters": "()", "modifiers": "@Override public", "return": "List<Resource>", "signature": "List<Resource> getInheritableContextLocations()", "full_signature": "@Override public List<Resource> getInheritableContextLocations()", "class_method_signature": "DefaultModuleDefinition.getInheritableContextLocations()", "testcase": false, "constructor": false}, {"identifier": "getOverrideContextLocations", "parameters": "()", "modifiers": "@Override public", "return": "List<Resource>", "signature": "List<Resource> getOverrideContextLocations()", "full_signature": "@Override public List<Resource> getOverrideContextLocations()", "class_method_signature": "DefaultModuleDefinition.getOverrideContextLocations()", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "@Override public boolean isValid()", "class_method_signature": "DefaultModuleDefinition.isValid()", "testcase": false, "constructor": false}, {"identifier": "getClassLoader", "parameters": "()", "modifiers": "@Override public", "return": "ClassLoader", "signature": "ClassLoader getClassLoader()", "full_signature": "@Override public ClassLoader getClassLoader()", "class_method_signature": "DefaultModuleDefinition.getClassLoader()", "testcase": false, "constructor": false}], "file": "framework/spring/module/src/main/java/org/apache/cloudstack/spring/module/model/impl/DefaultModuleDefinition.java"}, "focal_method": {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void init() throws IOException {\n\n        if (!moduleProperties.exists()) {\n            return;\n        }\n\n        resolveNameAndParent();\n\n        contextLocations = Arrays.asList(resolver.getResources(ModuleLocationUtils.getContextLocation(baseDir, name)));\n        configLocations = Arrays.asList(resolver.getResources(ModuleLocationUtils.getDefaultsLocation(baseDir, name)));\n        inheritableContextLocations = Arrays.asList(resolver.getResources(ModuleLocationUtils.getInheritableContextLocation(baseDir, name)));\n        overrideContextLocations = Arrays.asList(resolver.getResources(ModuleLocationUtils.getOverrideContextLocation(baseDir, name)));\n\n        valid = true;\n    }", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "DefaultModuleDefinition.init()", "testcase": false, "constructor": false, "invocations": ["exists", "resolveNameAndParent", "asList", "getResources", "getContextLocation", "asList", "getResources", "getDefaultsLocation", "asList", "getResources", "getInheritableContextLocation", "asList", "getResources", "getOverrideContextLocation"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}