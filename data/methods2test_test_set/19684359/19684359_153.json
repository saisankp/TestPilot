{"test_class": {"identifier": "FederatedBigQueryOutputFormatTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_PROJECT_ID = \"domain:project\";", "modifier": "private static final", "type": "String", "declarator": "TEST_PROJECT_ID = \"domain:project\"", "var_name": "TEST_PROJECT_ID"}, {"original_string": "private static final String TEST_DATASET_ID = \"dataset\";", "modifier": "private static final", "type": "String", "declarator": "TEST_DATASET_ID = \"dataset\"", "var_name": "TEST_DATASET_ID"}, {"original_string": "private static final String TEST_TABLE_ID = \"table\";", "modifier": "private static final", "type": "String", "declarator": "TEST_TABLE_ID = \"table\"", "var_name": "TEST_TABLE_ID"}, {"original_string": "private static final String QUALIFIED_TEST_TABLE_ID =\n      String.format(\"%s:%s.%s\", TEST_PROJECT_ID, TEST_DATASET_ID, TEST_TABLE_ID);", "modifier": "private static final", "type": "String", "declarator": "QUALIFIED_TEST_TABLE_ID =\n      String.format(\"%s:%s.%s\", TEST_PROJECT_ID, TEST_DATASET_ID, TEST_TABLE_ID)", "var_name": "QUALIFIED_TEST_TABLE_ID"}, {"original_string": "private static final BigQueryFileFormat TEST_FILE_FORMAT =\n      BigQueryFileFormat.NEWLINE_DELIMITED_JSON;", "modifier": "private static final", "type": "BigQueryFileFormat", "declarator": "TEST_FILE_FORMAT =\n      BigQueryFileFormat.NEWLINE_DELIMITED_JSON", "var_name": "TEST_FILE_FORMAT"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n  private static final Class<? extends FileOutputFormat> TEST_OUTPUT_CLASS = TextOutputFormat.class;", "modifier": "@SuppressWarnings(\"rawtypes\")\n  private static final", "type": "Class<? extends FileOutputFormat>", "declarator": "TEST_OUTPUT_CLASS = TextOutputFormat.class", "var_name": "TEST_OUTPUT_CLASS"}, {"original_string": "private static final String TEST_OUTPUT_PATH_STRING = \"gs://test_bucket/test_directory/\";", "modifier": "private static final", "type": "String", "declarator": "TEST_OUTPUT_PATH_STRING = \"gs://test_bucket/test_directory/\"", "var_name": "TEST_OUTPUT_PATH_STRING"}, {"original_string": "private static final Path TEST_OUTPUT_PATH = new Path(TEST_OUTPUT_PATH_STRING);", "modifier": "private static final", "type": "Path", "declarator": "TEST_OUTPUT_PATH = new Path(TEST_OUTPUT_PATH_STRING)", "var_name": "TEST_OUTPUT_PATH"}, {"original_string": "private static final TaskAttemptID TEST_TASK_ATTEMPT_ID =\n      new TaskAttemptID(new TaskID(\"sample_task\", 100, false, 200), 1);", "modifier": "private static final", "type": "TaskAttemptID", "declarator": "TEST_TASK_ATTEMPT_ID =\n      new TaskAttemptID(new TaskID(\"sample_task\", 100, false, 200), 1)", "var_name": "TEST_TASK_ATTEMPT_ID"}, {"original_string": "private InMemoryGoogleHadoopFileSystem ghfs;", "modifier": "private", "type": "InMemoryGoogleHadoopFileSystem", "declarator": "ghfs", "var_name": "ghfs"}, {"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private Job job;", "modifier": "private", "type": "Job", "declarator": "job", "var_name": "job"}, {"original_string": "private FederatedBigQueryOutputFormat<Text, Text> outputFormat;", "modifier": "private", "type": "FederatedBigQueryOutputFormat<Text, Text>", "declarator": "outputFormat", "var_name": "outputFormat"}, {"original_string": "@Mock private TaskAttemptContext mockTaskAttemptContext;", "modifier": "@Mock private", "type": "TaskAttemptContext", "declarator": "mockTaskAttemptContext", "var_name": "mockTaskAttemptContext"}, {"original_string": "@Mock private FileOutputFormat<Text, Text> mockFileOutputFormat;", "modifier": "@Mock private", "type": "FileOutputFormat<Text, Text>", "declarator": "mockFileOutputFormat", "var_name": "mockFileOutputFormat"}, {"original_string": "@Mock private OutputCommitter mockOutputCommitter;", "modifier": "@Mock private", "type": "OutputCommitter", "declarator": "mockOutputCommitter", "var_name": "mockOutputCommitter"}, {"original_string": "@Mock private RecordWriter<Text, Text> mockRecordWriter;", "modifier": "@Mock private", "type": "RecordWriter<Text, Text>", "declarator": "mockRecordWriter", "var_name": "mockRecordWriter"}], "file": "bigquery/src/test/java/com/google/cloud/hadoop/io/bigquery/output/FederatedBigQueryOutputFormatTest.java"}, "test_case": {"identifier": "testCreateCommitter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCreateCommitter() throws IOException {\n    FederatedBigQueryOutputCommitter committer =\n        (FederatedBigQueryOutputCommitter) outputFormat.createCommitter(mockTaskAttemptContext);\n\n    assertThat(committer.getDelegate()).isEqualTo(mockOutputCommitter);\n    verify(mockFileOutputFormat).getOutputCommitter(eq(mockTaskAttemptContext));\n  }", "signature": "void testCreateCommitter()", "full_signature": "@Test public void testCreateCommitter()", "class_method_signature": "FederatedBigQueryOutputFormatTest.testCreateCommitter()", "testcase": true, "constructor": false, "invocations": ["createCommitter", "isEqualTo", "assertThat", "getDelegate", "getOutputCommitter", "verify", "eq"]}, "focal_class": {"identifier": "FederatedBigQueryOutputFormat", "superclass": "extends ForwardingBigQueryFileOutputFormat<K, V>", "interfaces": "", "fields": [], "methods": [{"identifier": "createCommitter", "parameters": "(TaskAttemptContext context)", "modifiers": "@Override public", "return": "OutputCommitter", "signature": "OutputCommitter createCommitter(TaskAttemptContext context)", "full_signature": "@Override public OutputCommitter createCommitter(TaskAttemptContext context)", "class_method_signature": "FederatedBigQueryOutputFormat.createCommitter(TaskAttemptContext context)", "testcase": false, "constructor": false}], "file": "bigquery/src/main/java/com/google/cloud/hadoop/io/bigquery/output/FederatedBigQueryOutputFormat.java"}, "focal_method": {"identifier": "createCommitter", "parameters": "(TaskAttemptContext context)", "modifiers": "@Override public", "return": "OutputCommitter", "body": "@Override\n  public OutputCommitter createCommitter(TaskAttemptContext context) throws IOException {\n    Configuration conf = context.getConfiguration();\n    OutputCommitter delegateCommitter = getDelegate(conf).getOutputCommitter(context);\n    OutputCommitter committer = new FederatedBigQueryOutputCommitter(context, delegateCommitter);\n    return committer;\n  }", "signature": "OutputCommitter createCommitter(TaskAttemptContext context)", "full_signature": "@Override public OutputCommitter createCommitter(TaskAttemptContext context)", "class_method_signature": "FederatedBigQueryOutputFormat.createCommitter(TaskAttemptContext context)", "testcase": false, "constructor": false, "invocations": ["getConfiguration", "getOutputCommitter", "getDelegate"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}