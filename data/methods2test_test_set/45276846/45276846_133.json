{"test_class": {"identifier": "TestOperationSequence", "superclass": "extends BasicReusableHostTestCase", "interfaces": "", "fields": [{"original_string": "private List<Service> services;", "modifier": "private", "type": "List<Service>", "declarator": "services", "var_name": "services"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestOperationSequence.java"}, "test_case": {"identifier": "testAbortOnFirstFailure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAbortOnFirstFailure() throws Throwable {\n        Operation op1 = createServiceOperation(this.services.get(0));\n        Operation op2 = createServiceOperation(this.services.get(1));\n        Operation op3 = createServiceOperation(this.services.get(1));\n\n        boolean[] called = new boolean[3];\n\n        op1.setCompletion((o, e) -> {\n            called[0] = true;\n        });\n\n        // make op2 fail with 404\n        op2.setUri(UriUtils.buildUri(op1.getUri(), \"/not-exist\"));\n        op2.setCompletion((o, e) -> {\n            called[1] = true;\n            assertNotNull(\"op2 should fail with error\", e);\n            host.completeIteration();\n        });\n\n        op3.setCompletion((o, e) -> {\n            called[2] = true;\n            fail(\"op3 completionHandler should not be called\");\n        });\n\n        host.testStart(1);\n        OperationSequence\n                .create(op1)\n                .next(op2)\n                .next(op3)\n                .setCompletion((ops, exc) -> {\n                    fail(\"Joined completion handler should not be called\");\n                })\n                .abortOnFirstFailure()\n                .sendWith(host);\n        host.testWait();\n\n        assertTrue(\"op1 should be called\", called[0]);\n        assertTrue(\"op2 should be called\", called[1]);\n        assertFalse(\"op3 should not be called\", called[2]);\n    }", "signature": "void testAbortOnFirstFailure()", "full_signature": "@Test public void testAbortOnFirstFailure()", "class_method_signature": "TestOperationSequence.testAbortOnFirstFailure()", "testcase": true, "constructor": false, "invocations": ["createServiceOperation", "get", "createServiceOperation", "get", "createServiceOperation", "get", "setCompletion", "setUri", "buildUri", "getUri", "setCompletion", "assertNotNull", "completeIteration", "setCompletion", "fail", "testStart", "sendWith", "abortOnFirstFailure", "setCompletion", "next", "next", "create", "fail", "testWait", "assertTrue", "assertTrue", "assertFalse"]}, "focal_class": {"identifier": "OperationSequence", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final OperationJoin join;", "modifier": "private final", "type": "OperationJoin", "declarator": "join", "var_name": "join"}, {"original_string": "private OperationSequence child;", "modifier": "private", "type": "OperationSequence", "declarator": "child", "var_name": "child"}, {"original_string": "private OperationSequence parent;", "modifier": "private", "type": "OperationSequence", "declarator": "parent", "var_name": "parent"}, {"original_string": "private ServiceRequestSender sender;", "modifier": "private", "type": "ServiceRequestSender", "declarator": "sender", "var_name": "sender"}, {"original_string": "private boolean cumulative = true;", "modifier": "private", "type": "boolean", "declarator": "cumulative = true", "var_name": "cumulative"}, {"original_string": "private boolean abortOnFirstFailure = false;", "modifier": "private", "type": "boolean", "declarator": "abortOnFirstFailure = false", "var_name": "abortOnFirstFailure"}], "methods": [{"identifier": "OperationSequence", "parameters": "(OperationJoin join)", "modifiers": "private", "return": "", "signature": " OperationSequence(OperationJoin join)", "full_signature": "private  OperationSequence(OperationJoin join)", "class_method_signature": "OperationSequence.OperationSequence(OperationJoin join)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(OperationJoin... joins)", "modifiers": "public static", "return": "OperationSequence", "signature": "OperationSequence create(OperationJoin... joins)", "full_signature": "public static OperationSequence create(OperationJoin... joins)", "class_method_signature": "OperationSequence.create(OperationJoin... joins)", "testcase": false, "constructor": false}, {"identifier": "chainJoins", "parameters": "(OperationSequence root, OperationJoin... joins)", "modifiers": "private static", "return": "OperationSequence", "signature": "OperationSequence chainJoins(OperationSequence root, OperationJoin... joins)", "full_signature": "private static OperationSequence chainJoins(OperationSequence root, OperationJoin... joins)", "class_method_signature": "OperationSequence.chainJoins(OperationSequence root, OperationJoin... joins)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Operation... ops)", "modifiers": "public static", "return": "OperationSequence", "signature": "OperationSequence create(Operation... ops)", "full_signature": "public static OperationSequence create(Operation... ops)", "class_method_signature": "OperationSequence.create(Operation... ops)", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "(OperationJoin... joins)", "modifiers": "public", "return": "OperationSequence", "signature": "OperationSequence next(OperationJoin... joins)", "full_signature": "public OperationSequence next(OperationJoin... joins)", "class_method_signature": "OperationSequence.next(OperationJoin... joins)", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "(Operation... ops)", "modifiers": "public", "return": "OperationSequence", "signature": "OperationSequence next(Operation... ops)", "full_signature": "public OperationSequence next(Operation... ops)", "class_method_signature": "OperationSequence.next(Operation... ops)", "testcase": false, "constructor": false}, {"identifier": "setCompletion", "parameters": "(JoinedCompletionHandler joinedCompletion)", "modifiers": "public", "return": "OperationSequence", "signature": "OperationSequence setCompletion(JoinedCompletionHandler joinedCompletion)", "full_signature": "public OperationSequence setCompletion(JoinedCompletionHandler joinedCompletion)", "class_method_signature": "OperationSequence.setCompletion(JoinedCompletionHandler joinedCompletion)", "testcase": false, "constructor": false}, {"identifier": "setCompletion", "parameters": "(boolean cumulative, JoinedCompletionHandler joinedCompletion)", "modifiers": "public", "return": "OperationSequence", "signature": "OperationSequence setCompletion(boolean cumulative, JoinedCompletionHandler joinedCompletion)", "full_signature": "public OperationSequence setCompletion(boolean cumulative, JoinedCompletionHandler joinedCompletion)", "class_method_signature": "OperationSequence.setCompletion(boolean cumulative, JoinedCompletionHandler joinedCompletion)", "testcase": false, "constructor": false}, {"identifier": "abortOnFirstFailure", "parameters": "()", "modifiers": "public", "return": "OperationSequence", "signature": "OperationSequence abortOnFirstFailure()", "full_signature": "public OperationSequence abortOnFirstFailure()", "class_method_signature": "OperationSequence.abortOnFirstFailure()", "testcase": false, "constructor": false}, {"identifier": "sendWith", "parameters": "(ServiceRequestSender sender)", "modifiers": "public", "return": "void", "signature": "void sendWith(ServiceRequestSender sender)", "full_signature": "public void sendWith(ServiceRequestSender sender)", "class_method_signature": "OperationSequence.sendWith(ServiceRequestSender sender)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(ServiceRequestSender sender)", "modifiers": "private", "return": "void", "signature": "void send(ServiceRequestSender sender)", "full_signature": "private void send(ServiceRequestSender sender)", "class_method_signature": "OperationSequence.send(ServiceRequestSender sender)", "testcase": false, "constructor": false}, {"identifier": "setProxyCompletion", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setProxyCompletion()", "full_signature": "private void setProxyCompletion()", "class_method_signature": "OperationSequence.setProxyCompletion()", "testcase": false, "constructor": false}, {"identifier": "getAllCompletedOperations", "parameters": "()", "modifiers": "private", "return": "Map<Long, Operation>", "signature": "Map<Long, Operation> getAllCompletedOperations()", "full_signature": "private Map<Long, Operation> getAllCompletedOperations()", "class_method_signature": "OperationSequence.getAllCompletedOperations()", "testcase": false, "constructor": false}, {"identifier": "getAllFailures", "parameters": "()", "modifiers": "private", "return": "Map<Long, Throwable>", "signature": "Map<Long, Throwable> getAllFailures()", "full_signature": "private Map<Long, Throwable> getAllFailures()", "class_method_signature": "OperationSequence.getAllFailures()", "testcase": false, "constructor": false}, {"identifier": "validateSendRequest", "parameters": "(Object sender)", "modifiers": "private", "return": "void", "signature": "void validateSendRequest(Object sender)", "full_signature": "private void validateSendRequest(Object sender)", "class_method_signature": "OperationSequence.validateSendRequest(Object sender)", "testcase": false, "constructor": false}, {"identifier": "hasAbortOnFirstFailureInChildSequences", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasAbortOnFirstFailureInChildSequences()", "full_signature": "private boolean hasAbortOnFirstFailureInChildSequences()", "class_method_signature": "OperationSequence.hasAbortOnFirstFailureInChildSequences()", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/OperationSequence.java"}, "focal_method": {"identifier": "abortOnFirstFailure", "parameters": "()", "modifiers": "public", "return": "OperationSequence", "body": "public OperationSequence abortOnFirstFailure() {\n        this.abortOnFirstFailure = true;\n        return this;\n    }", "signature": "OperationSequence abortOnFirstFailure()", "full_signature": "public OperationSequence abortOnFirstFailure()", "class_method_signature": "OperationSequence.abortOnFirstFailure()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}