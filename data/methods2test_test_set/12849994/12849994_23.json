{"test_class": {"identifier": "SpringCacheBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "imcache-spring/src/test/java/com/cetsoft/imcache/spring/SpringCacheBuilderTest.java"}, "test_case": {"identifier": "build", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void build() {\n    assertTrue(new SpringCacheBuilder(\"heap\").build() instanceof HeapCache);\n\n    SpringCacheBuilder builder = new SpringCacheBuilder();\n\n    builder.setType(\"heap\");\n    assertTrue(builder.build() instanceof HeapCache);\n\n    builder.setType(\"redis\");\n    builder.setConcurrencyLevel(2);\n    builder.setCacheLoader(key -> null);\n    builder.setEvictionListener((key, value) -> {\n    });\n    builder.setIndexHandler(new DefaultIndexHandler<>());\n    builder.setRedisHost(\"localhost\");\n    builder.setRedisPort(6379);\n    builder.setSerializer(new Serializer<Object>() {\n      @Override\n      public byte[] serialize(Object value) {\n        return value.toString().getBytes();\n      }\n\n      @Override\n      public Object deserialize(byte[] payload) {\n        return new String(payload);\n      }\n    });\n\n    assertTrue(builder.build() instanceof RedisCache);\n\n    builder.setType(\"offheap\");\n    builder.setEvictionPeriod(2);\n    builder.setHeapCapacity(19999);\n    builder.setBufferCleanerPeriod(1000);\n    builder.setBufferCleanerThreshold(0.6F);\n    OffHeapByteBufferStore bufferStore = new OffHeapByteBufferStore(8388608, 2);\n    builder.setBufferStore(bufferStore);\n    assertTrue(builder.build(\"off-heap\") instanceof OffHeapCache);\n\n    builder.setType(\"versioned_offheap\");\n    assertTrue(builder.build() instanceof VersionedOffHeapCache);\n  }", "signature": "void build()", "full_signature": "@Test public void build()", "class_method_signature": "SpringCacheBuilderTest.build()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "build", "setType", "assertTrue", "build", "setType", "setConcurrencyLevel", "setCacheLoader", "setEvictionListener", "setIndexHandler", "setRedisHost", "setRedisPort", "setSerializer", "getBytes", "toString", "assertTrue", "build", "setType", "setEvictionPeriod", "setHeapCapacity", "setBufferCleanerPeriod", "setBufferCleanerThreshold", "setBufferStore", "assertTrue", "build", "setType", "assertTrue", "build"]}, "focal_class": {"identifier": "SpringCacheBuilder", "superclass": "extends BaseCacheBuilder", "interfaces": "", "fields": [{"original_string": "protected CacheCategory type;", "modifier": "protected", "type": "CacheCategory", "declarator": "type", "var_name": "type"}, {"original_string": "private int concurrencyLevel = OffHeapCache.DEFAULT_CONCURRENCY_LEVEL;", "modifier": "private", "type": "int", "declarator": "concurrencyLevel = OffHeapCache.DEFAULT_CONCURRENCY_LEVEL", "var_name": "concurrencyLevel"}, {"original_string": "private long evictionPeriod = OffHeapCache.DEFAULT_EVICTION_PERIOD;", "modifier": "private", "type": "long", "declarator": "evictionPeriod = OffHeapCache.DEFAULT_EVICTION_PERIOD", "var_name": "evictionPeriod"}, {"original_string": "private long bufferCleanerPeriod = OffHeapCache.DEFAULT_BUFFER_CLEANER_PERIOD;", "modifier": "private", "type": "long", "declarator": "bufferCleanerPeriod = OffHeapCache.DEFAULT_BUFFER_CLEANER_PERIOD", "var_name": "bufferCleanerPeriod"}, {"original_string": "private float bufferCleanerThreshold = OffHeapCache.DEFAULT_BUFFER_CLEANER_THRESHOLD;", "modifier": "private", "type": "float", "declarator": "bufferCleanerThreshold = OffHeapCache.DEFAULT_BUFFER_CLEANER_THRESHOLD", "var_name": "bufferCleanerThreshold"}, {"original_string": "private OffHeapByteBufferStore bufferStore;", "modifier": "private", "type": "OffHeapByteBufferStore", "declarator": "bufferStore", "var_name": "bufferStore"}, {"original_string": "private String redisHost = \"127.0.0.1\";", "modifier": "private", "type": "String", "declarator": "redisHost = \"127.0.0.1\"", "var_name": "redisHost"}, {"original_string": "private int redisPort = 6379;", "modifier": "private", "type": "int", "declarator": "redisPort = 6379", "var_name": "redisPort"}, {"original_string": "private int heapCapacity = 10000;", "modifier": "private", "type": "int", "declarator": "heapCapacity = 10000", "var_name": "heapCapacity"}], "methods": [{"identifier": "SpringCacheBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " SpringCacheBuilder()", "full_signature": "public  SpringCacheBuilder()", "class_method_signature": "SpringCacheBuilder.SpringCacheBuilder()", "testcase": false, "constructor": true}, {"identifier": "SpringCacheBuilder", "parameters": "(String type)", "modifiers": "public", "return": "", "signature": " SpringCacheBuilder(String type)", "full_signature": "public  SpringCacheBuilder(String type)", "class_method_signature": "SpringCacheBuilder.SpringCacheBuilder(String type)", "testcase": false, "constructor": true}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "Cache<K, V>", "signature": "Cache<K, V> build()", "full_signature": "public Cache<K, V> build()", "class_method_signature": "SpringCacheBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(final String name)", "modifiers": "public", "return": "Cache<K, V>", "signature": "Cache<K, V> build(final String name)", "full_signature": "public Cache<K, V> build(final String name)", "class_method_signature": "SpringCacheBuilder.build(final String name)", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(String type)", "modifiers": "public", "return": "void", "signature": "void setType(String type)", "full_signature": "public void setType(String type)", "class_method_signature": "SpringCacheBuilder.setType(String type)", "testcase": false, "constructor": false}, {"identifier": "setConcurrencyLevel", "parameters": "(int concurrencyLevel)", "modifiers": "public", "return": "void", "signature": "void setConcurrencyLevel(int concurrencyLevel)", "full_signature": "public void setConcurrencyLevel(int concurrencyLevel)", "class_method_signature": "SpringCacheBuilder.setConcurrencyLevel(int concurrencyLevel)", "testcase": false, "constructor": false}, {"identifier": "setEvictionPeriod", "parameters": "(long evictionPeriod)", "modifiers": "public", "return": "void", "signature": "void setEvictionPeriod(long evictionPeriod)", "full_signature": "public void setEvictionPeriod(long evictionPeriod)", "class_method_signature": "SpringCacheBuilder.setEvictionPeriod(long evictionPeriod)", "testcase": false, "constructor": false}, {"identifier": "setBufferCleanerPeriod", "parameters": "(long bufferCleanerPeriod)", "modifiers": "public", "return": "void", "signature": "void setBufferCleanerPeriod(long bufferCleanerPeriod)", "full_signature": "public void setBufferCleanerPeriod(long bufferCleanerPeriod)", "class_method_signature": "SpringCacheBuilder.setBufferCleanerPeriod(long bufferCleanerPeriod)", "testcase": false, "constructor": false}, {"identifier": "setBufferCleanerThreshold", "parameters": "(float bufferCleanerThreshold)", "modifiers": "public", "return": "void", "signature": "void setBufferCleanerThreshold(float bufferCleanerThreshold)", "full_signature": "public void setBufferCleanerThreshold(float bufferCleanerThreshold)", "class_method_signature": "SpringCacheBuilder.setBufferCleanerThreshold(float bufferCleanerThreshold)", "testcase": false, "constructor": false}, {"identifier": "setSerializer", "parameters": "(Serializer<Object> serializer)", "modifiers": "public", "return": "void", "signature": "void setSerializer(Serializer<Object> serializer)", "full_signature": "public void setSerializer(Serializer<Object> serializer)", "class_method_signature": "SpringCacheBuilder.setSerializer(Serializer<Object> serializer)", "testcase": false, "constructor": false}, {"identifier": "setCacheLoader", "parameters": "(CacheLoader<Object, Object> cacheLoader)", "modifiers": "public", "return": "void", "signature": "void setCacheLoader(CacheLoader<Object, Object> cacheLoader)", "full_signature": "public void setCacheLoader(CacheLoader<Object, Object> cacheLoader)", "class_method_signature": "SpringCacheBuilder.setCacheLoader(CacheLoader<Object, Object> cacheLoader)", "testcase": false, "constructor": false}, {"identifier": "setEvictionListener", "parameters": "(EvictionListener<Object, Object> evictionListener)", "modifiers": "public", "return": "void", "signature": "void setEvictionListener(EvictionListener<Object, Object> evictionListener)", "full_signature": "public void setEvictionListener(EvictionListener<Object, Object> evictionListener)", "class_method_signature": "SpringCacheBuilder.setEvictionListener(EvictionListener<Object, Object> evictionListener)", "testcase": false, "constructor": false}, {"identifier": "setIndexHandler", "parameters": "(IndexHandler<Object, Object> indexHandler)", "modifiers": "public", "return": "void", "signature": "void setIndexHandler(IndexHandler<Object, Object> indexHandler)", "full_signature": "public void setIndexHandler(IndexHandler<Object, Object> indexHandler)", "class_method_signature": "SpringCacheBuilder.setIndexHandler(IndexHandler<Object, Object> indexHandler)", "testcase": false, "constructor": false}, {"identifier": "setBufferStore", "parameters": "(OffHeapByteBufferStore bufferStore)", "modifiers": "public", "return": "void", "signature": "void setBufferStore(OffHeapByteBufferStore bufferStore)", "full_signature": "public void setBufferStore(OffHeapByteBufferStore bufferStore)", "class_method_signature": "SpringCacheBuilder.setBufferStore(OffHeapByteBufferStore bufferStore)", "testcase": false, "constructor": false}, {"identifier": "setRedisHost", "parameters": "(String redisHost)", "modifiers": "public", "return": "void", "signature": "void setRedisHost(String redisHost)", "full_signature": "public void setRedisHost(String redisHost)", "class_method_signature": "SpringCacheBuilder.setRedisHost(String redisHost)", "testcase": false, "constructor": false}, {"identifier": "setRedisPort", "parameters": "(int redisPort)", "modifiers": "public", "return": "void", "signature": "void setRedisPort(int redisPort)", "full_signature": "public void setRedisPort(int redisPort)", "class_method_signature": "SpringCacheBuilder.setRedisPort(int redisPort)", "testcase": false, "constructor": false}, {"identifier": "setHeapCapacity", "parameters": "(int heapCapacity)", "modifiers": "public", "return": "void", "signature": "void setHeapCapacity(int heapCapacity)", "full_signature": "public void setHeapCapacity(int heapCapacity)", "class_method_signature": "SpringCacheBuilder.setHeapCapacity(int heapCapacity)", "testcase": false, "constructor": false}], "file": "imcache-spring/src/main/java/com/cetsoft/imcache/spring/SpringCacheBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "Cache<K, V>", "body": "public <K, V> Cache<K, V> build() {\n\n    switch (this.type) {\n      case OFFHEAP:\n        return CacheBuilder.offHeapCache().cacheLoader(cacheLoader)\n            .evictionListener(evictionListener)\n            .indexHandler(indexHandler).concurrencyLevel(concurrencyLevel)\n            .bufferCleanerPeriod(bufferCleanerPeriod).bufferCleanerThreshold(bufferCleanerThreshold)\n            .evictionPeriod(evictionPeriod).serializer(serializer).storage(bufferStore).build();\n\n      case VERSIONED_OFFHEAP:\n        return CacheBuilder.versionedOffHeapCache().cacheLoader(cacheLoader)\n            .evictionListener(evictionListener)\n            .indexHandler(indexHandler).concurrencyLevel(concurrencyLevel)\n            .bufferCleanerPeriod(bufferCleanerPeriod).bufferCleanerThreshold(bufferCleanerThreshold)\n            .evictionPeriod(evictionPeriod).serializer(serializer).storage(bufferStore).build();\n\n      case REDIS:\n        return CacheBuilder.redisCache().cacheLoader(cacheLoader).evictionListener(evictionListener)\n            .serializer(serializer).concurrencyLevel(concurrencyLevel).hostName(redisHost)\n            .port(redisPort)\n            .build();\n\n      default:\n        return CacheBuilder.heapCache().cacheLoader(cacheLoader).evictionListener(evictionListener)\n            .indexHandler(indexHandler).build();\n    }\n  }", "signature": "Cache<K, V> build()", "full_signature": "public Cache<K, V> build()", "class_method_signature": "SpringCacheBuilder.build()", "testcase": false, "constructor": false, "invocations": ["build", "storage", "serializer", "evictionPeriod", "bufferCleanerThreshold", "bufferCleanerPeriod", "concurrencyLevel", "indexHandler", "evictionListener", "cacheLoader", "offHeapCache", "build", "storage", "serializer", "evictionPeriod", "bufferCleanerThreshold", "bufferCleanerPeriod", "concurrencyLevel", "indexHandler", "evictionListener", "cacheLoader", "versionedOffHeapCache", "build", "port", "hostName", "concurrencyLevel", "serializer", "evictionListener", "cacheLoader", "redisCache", "build", "indexHandler", "evictionListener", "cacheLoader", "heapCache"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}