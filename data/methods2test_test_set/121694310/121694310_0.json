{"test_class": {"identifier": "CommonTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendse-io/src/test/java/net/sf/opendse/io/CommonTest.java"}, "test_case": {"identifier": "enumToInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void enumToInstance() throws IllegalArgumentException, SecurityException, InstantiationException,\n\t\t\tIllegalAccessException, InvocationTargetException, NoSuchMethodException {\n\t\tObject o = Common.toInstance(\"a\", E1.class);\n\t\tAssert.assertEquals(E1.a, o);\n\t\tAssert.assertNotEquals(E1.b, o);\n\t}", "signature": "void enumToInstance()", "full_signature": "@Test public void enumToInstance()", "class_method_signature": "CommonTest.enumToInstance()", "testcase": true, "constructor": false, "invocations": ["toInstance", "assertEquals", "assertNotEquals"]}, "focal_class": {"identifier": "Common", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static BidiMap<String, Class<?>> classMap = new DualHashBidiMap<String, Class<?>>();", "modifier": "public static", "type": "BidiMap<String, Class<?>>", "declarator": "classMap = new DualHashBidiMap<String, Class<?>>()", "var_name": "classMap"}, {"original_string": "protected static Set<Class<?>> primitives = new HashSet<Class<?>>();", "modifier": "protected static", "type": "Set<Class<?>>", "declarator": "primitives = new HashSet<Class<?>>()", "var_name": "primitives"}], "methods": [{"identifier": "isPrimitive", "parameters": "(Class<?> cls)", "modifiers": "protected static", "return": "boolean", "signature": "boolean isPrimitive(Class<?> cls)", "full_signature": "protected static boolean isPrimitive(Class<?> cls)", "class_method_signature": "Common.isPrimitive(Class<?> cls)", "testcase": false, "constructor": false}, {"identifier": "iterable", "parameters": "(final nu.xom.Elements elements)", "modifiers": "public static", "return": "Iterable<nu.xom.Element>", "signature": "Iterable<nu.xom.Element> iterable(final nu.xom.Elements elements)", "full_signature": "public static Iterable<nu.xom.Element> iterable(final nu.xom.Elements elements)", "class_method_signature": "Common.iterable(final nu.xom.Elements elements)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(Class<?> clazz)", "modifiers": "protected static", "return": "String", "signature": "String getType(Class<?> clazz)", "full_signature": "protected static String getType(Class<?> clazz)", "class_method_signature": "Common.getType(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "toInstance", "parameters": "(String value, Class<?> clazz)", "modifiers": "@SuppressWarnings(\"rawtypes\") protected static", "return": "Object", "signature": "Object toInstance(String value, Class<?> clazz)", "full_signature": "@SuppressWarnings(\"rawtypes\") protected static Object toInstance(String value, Class<?> clazz)", "class_method_signature": "Common.toInstance(String value, Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "setAttributes", "parameters": "(IAttributes e, Attributes attributes)", "modifiers": "protected static", "return": "void", "signature": "void setAttributes(IAttributes e, Attributes attributes)", "full_signature": "protected static void setAttributes(IAttributes e, Attributes attributes)", "class_method_signature": "Common.setAttributes(IAttributes e, Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String s)", "modifiers": "public static", "return": "Object", "signature": "Object fromString(String s)", "full_signature": "public static Object fromString(String s)", "class_method_signature": "Common.fromString(String s)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Serializable o)", "modifiers": "public static", "return": "String", "signature": "String toString(Serializable o)", "full_signature": "public static String toString(Serializable o)", "class_method_signature": "Common.toString(Serializable o)", "testcase": false, "constructor": false}], "file": "opendse-io/src/main/java/net/sf/opendse/io/Common.java"}, "focal_method": {"identifier": "toInstance", "parameters": "(String value, Class<?> clazz)", "modifiers": "@SuppressWarnings(\"rawtypes\") protected static", "return": "Object", "body": "@SuppressWarnings(\"rawtypes\")\n\tprotected static Object toInstance(String value, Class<?> clazz) throws IllegalArgumentException,\n\t\t\tSecurityException, InstantiationException, IllegalAccessException, InvocationTargetException,\n\t\t\tNoSuchMethodException {\n\t\tif (!clazz.isEnum()) {\n\t\t\tConstructor constructor = clazz.getConstructor(String.class);\n\t\t\tif (constructor != null) {\n\t\t\t\treturn constructor.newInstance(value.trim());\n\t\t\t}\n\t\t} else {\n\t\t\tClass<? extends Enum> eclazz = clazz.asSubclass(Enum.class);\n\t\t\tfor (Enum e : eclazz.getEnumConstants()) {\n\t\t\t\tif (e.name().equalsIgnoreCase(value.trim())) {\n\t\t\t\t\treturn e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "signature": "Object toInstance(String value, Class<?> clazz)", "full_signature": "@SuppressWarnings(\"rawtypes\") protected static Object toInstance(String value, Class<?> clazz)", "class_method_signature": "Common.toInstance(String value, Class<?> clazz)", "testcase": false, "constructor": false, "invocations": ["isEnum", "getConstructor", "newInstance", "trim", "asSubclass", "getEnumConstants", "equalsIgnoreCase", "name", "trim"]}, "repository": {"repo_id": 121694310, "url": "https://github.com/felixreimann/opendse", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 7, "size": 2024, "license": "licensed"}}