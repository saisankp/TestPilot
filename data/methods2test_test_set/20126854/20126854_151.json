{"test_class": {"identifier": "DefaultDeflateCompatibilityWindowTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultDeflateCompatibilityWindow window = null;", "modifier": "private", "type": "DefaultDeflateCompatibilityWindow", "declarator": "window = null", "var_name": "window"}, {"original_string": "private final JreDeflateParameters brokenParameters = JreDeflateParameters.of(1, 0, true);", "modifier": "private final", "type": "JreDeflateParameters", "declarator": "brokenParameters = JreDeflateParameters.of(1, 0, true)", "var_name": "brokenParameters"}], "file": "feya/libraries/archive_diff/diff.shared/src/test/java/com/google/archivepatcher/shared/DefaultDeflateCompatibilityWindowTest.java"}, "test_case": {"identifier": "testGetIncompatibleValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetIncompatibleValues() {\n    // First do a coverage-only call, as it's not safe to assume compatibility in the unit test.\n    Assert.assertNotNull(window.getIncompatibleValues());\n    // Now do a call that is guaranteed to produce failure data.\n    BrokenCompatibilityWindow brokenWindow = new BrokenCompatibilityWindow();\n    Map<JreDeflateParameters, String> incompatible = brokenWindow.getIncompatibleValues();\n    Assert.assertTrue(incompatible.containsKey(brokenParameters));\n    // Now do a call that is guaranteed to produce no failure data.\n    InfallibleCompatibilityWindow infallible = new InfallibleCompatibilityWindow();\n    Assert.assertTrue(infallible.getIncompatibleValues().isEmpty());\n  }", "signature": "void testGetIncompatibleValues()", "full_signature": "@Test public void testGetIncompatibleValues()", "class_method_signature": "DefaultDeflateCompatibilityWindowTest.testGetIncompatibleValues()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getIncompatibleValues", "getIncompatibleValues", "assertTrue", "containsKey", "assertTrue", "isEmpty", "getIncompatibleValues"]}, "focal_class": {"identifier": "DefaultDeflateCompatibilityWindow", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CORPUS_BASE_TEXT =\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \"\n          + \"ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation \"\n          + \"ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in \"\n          + \"reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \"\n          + \"Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt \"\n          + \"mollit anim id est laborum.\";", "modifier": "private static final", "type": "String", "declarator": "CORPUS_BASE_TEXT =\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \"\n          + \"ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation \"\n          + \"ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in \"\n          + \"reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \"\n          + \"Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt \"\n          + \"mollit anim id est laborum.\"", "var_name": "CORPUS_BASE_TEXT"}], "methods": [{"identifier": "generateBaseline", "parameters": "()", "modifiers": "private static final", "return": "Map<JreDeflateParameters, String>", "signature": "Map<JreDeflateParameters, String> generateBaseline()", "full_signature": "private static final Map<JreDeflateParameters, String> generateBaseline()", "class_method_signature": "DefaultDeflateCompatibilityWindow.generateBaseline()", "testcase": false, "constructor": false}, {"identifier": "getBaselineValues", "parameters": "()", "modifiers": "public", "return": "Map<JreDeflateParameters, String>", "signature": "Map<JreDeflateParameters, String> getBaselineValues()", "full_signature": "public Map<JreDeflateParameters, String> getBaselineValues()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getBaselineValues()", "testcase": false, "constructor": false}, {"identifier": "generateCorpus", "parameters": "()", "modifiers": "private static final", "return": "byte[]", "signature": "byte[] generateCorpus()", "full_signature": "private static final byte[] generateCorpus()", "class_method_signature": "DefaultDeflateCompatibilityWindow.generateCorpus()", "testcase": false, "constructor": false}, {"identifier": "getCorpus", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getCorpus()", "full_signature": "public byte[] getCorpus()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getCorpus()", "testcase": false, "constructor": false}, {"identifier": "hexString", "parameters": "(byte[] bytes)", "modifiers": "private final static", "return": "String", "signature": "String hexString(byte[] bytes)", "full_signature": "private final static String hexString(byte[] bytes)", "class_method_signature": "DefaultDeflateCompatibilityWindow.hexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "isCompatible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCompatible()", "full_signature": "public boolean isCompatible()", "class_method_signature": "DefaultDeflateCompatibilityWindow.isCompatible()", "testcase": false, "constructor": false}, {"identifier": "getIncompatibleValues", "parameters": "()", "modifiers": "public", "return": "Map<JreDeflateParameters, String>", "signature": "Map<JreDeflateParameters, String> getIncompatibleValues()", "full_signature": "public Map<JreDeflateParameters, String> getIncompatibleValues()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getIncompatibleValues()", "testcase": false, "constructor": false}, {"identifier": "getSystemValues", "parameters": "()", "modifiers": "public", "return": "Map<JreDeflateParameters, String>", "signature": "Map<JreDeflateParameters, String> getSystemValues()", "full_signature": "public Map<JreDeflateParameters, String> getSystemValues()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getSystemValues()", "testcase": false, "constructor": false}], "file": "feya/libraries/archive_diff/diff.shared/src/main/java/com/google/archivepatcher/shared/DefaultDeflateCompatibilityWindow.java"}, "focal_method": {"identifier": "getIncompatibleValues", "parameters": "()", "modifiers": "public", "return": "Map<JreDeflateParameters, String>", "body": "public Map<JreDeflateParameters, String> getIncompatibleValues() {\n    Map<JreDeflateParameters, String> incompatible = new HashMap<JreDeflateParameters, String>();\n    Map<JreDeflateParameters, String> systemValues = getSystemValues();\n    for (Map.Entry<JreDeflateParameters, String> baselineEntry : getBaselineValues().entrySet()) {\n      String computedSHA256 = systemValues.get(baselineEntry.getKey());\n      if (!computedSHA256.equals(baselineEntry.getValue())) {\n        incompatible.put(baselineEntry.getKey(), computedSHA256);\n      }\n    }\n    return incompatible;\n  }", "signature": "Map<JreDeflateParameters, String> getIncompatibleValues()", "full_signature": "public Map<JreDeflateParameters, String> getIncompatibleValues()", "class_method_signature": "DefaultDeflateCompatibilityWindow.getIncompatibleValues()", "testcase": false, "constructor": false, "invocations": ["getSystemValues", "entrySet", "getBaselineValues", "get", "getKey", "equals", "getValue", "put", "getKey"]}, "repository": {"repo_id": 20126854, "url": "https://github.com/kaedea/Feya", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 12, "size": 7798, "license": "licensed"}}