{"test_class": {"identifier": "RetrieveConnectionLogsAggregatorActorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Duration DEFAULT_TIMEOUT = Duration.ofSeconds(10);", "modifier": "private static final", "type": "Duration", "declarator": "DEFAULT_TIMEOUT = Duration.ofSeconds(10)", "var_name": "DEFAULT_TIMEOUT"}, {"original_string": "private static final DittoHeaders DITTO_HEADERS = DittoHeaders.empty();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "DITTO_HEADERS = DittoHeaders.empty()", "var_name": "DITTO_HEADERS"}, {"original_string": "private static ActorSystem actorSystem;", "modifier": "private static", "type": "ActorSystem", "declarator": "actorSystem", "var_name": "actorSystem"}, {"original_string": "private static final MonitoringLoggerConfig LOGGER_CONFIG =\n            TestConstants.CONNECTIVITY_CONFIG.getMonitoringConfig().logger();", "modifier": "private static final", "type": "MonitoringLoggerConfig", "declarator": "LOGGER_CONFIG =\n            TestConstants.CONNECTIVITY_CONFIG.getMonitoringConfig().logger()", "var_name": "LOGGER_CONFIG"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/logs/RetrieveConnectionLogsAggregatorActorTest.java"}, "test_case": {"identifier": "withMultipleClients", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void withMultipleClients() {\n        new TestKit(actorSystem) {{\n            final TestProbe sender = TestProbe.apply(actorSystem);\n            final Connection connection = createConnectionWithClients(3);\n\n            final Instant since = Instant.now().minusSeconds(333);\n            final Instant until = Instant.now().plusSeconds(555);\n            final Collection<RetrieveConnectionLogsResponse> responses = Arrays.asList(\n                    createRetrieveConnectionLogsResponse(connection.getId(), since, until),\n                    createRetrieveConnectionLogsResponse(connection.getId(), since, until),\n                    createRetrieveConnectionLogsResponse(connection.getId(), since, until)\n            );\n            final RetrieveConnectionLogsResponse expectedResponse = createExpectedResponse(responses);\n\n            final ActorRef underTest = childActorOf(\n                    RetrieveConnectionLogsAggregatorActor.props(connection, sender.ref(), DITTO_HEADERS,\n                            DEFAULT_TIMEOUT, LOGGER_CONFIG.maxLogSizeInBytes()));\n\n            responses.forEach(response -> underTest.tell(response, getRef()));\n\n            sender.expectMsg(expectedResponse);\n        }};\n    }", "signature": "void withMultipleClients()", "full_signature": "@Test public void withMultipleClients()", "class_method_signature": "RetrieveConnectionLogsAggregatorActorTest.withMultipleClients()", "testcase": true, "constructor": false, "invocations": ["apply", "createConnectionWithClients", "minusSeconds", "now", "plusSeconds", "now", "asList", "createRetrieveConnectionLogsResponse", "getId", "createRetrieveConnectionLogsResponse", "getId", "createRetrieveConnectionLogsResponse", "getId", "createExpectedResponse", "childActorOf", "props", "ref", "maxLogSizeInBytes", "forEach", "tell", "getRef", "expectMsg"]}, "focal_class": {"identifier": "RetrieveConnectionLogsAggregatorActor", "superclass": "extends AbstractActor", "interfaces": "", "fields": [{"original_string": "private final DiagnosticLoggingAdapter log = LogUtil.obtain(this);", "modifier": "private final", "type": "DiagnosticLoggingAdapter", "declarator": "log = LogUtil.obtain(this)", "var_name": "log"}, {"original_string": "private final Connection connection;", "modifier": "private final", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private final DittoHeaders originalHeaders;", "modifier": "private final", "type": "DittoHeaders", "declarator": "originalHeaders", "var_name": "originalHeaders"}, {"original_string": "private int expectedResponses;", "modifier": "private", "type": "int", "declarator": "expectedResponses", "var_name": "expectedResponses"}, {"original_string": "private final ActorRef sender;", "modifier": "private final", "type": "ActorRef", "declarator": "sender", "var_name": "sender"}, {"original_string": "private final Duration timeout;", "modifier": "private final", "type": "Duration", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "private final long maximumLogSizeInByte;", "modifier": "private final", "type": "long", "declarator": "maximumLogSizeInByte", "var_name": "maximumLogSizeInByte"}, {"original_string": "private RetrieveConnectionLogsResponse theResponse;", "modifier": "private", "type": "RetrieveConnectionLogsResponse", "declarator": "theResponse", "var_name": "theResponse"}], "methods": [{"identifier": "RetrieveConnectionLogsAggregatorActor", "parameters": "(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "modifiers": "@SuppressWarnings(\"unused\") private", "return": "", "signature": " RetrieveConnectionLogsAggregatorActor(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "full_signature": "@SuppressWarnings(\"unused\") private  RetrieveConnectionLogsAggregatorActor(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.RetrieveConnectionLogsAggregatorActor(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "testcase": false, "constructor": true}, {"identifier": "props", "parameters": "(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "modifiers": "public static", "return": "Props", "signature": "Props props(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "full_signature": "public static Props props(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.props(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "testcase": false, "constructor": false}, {"identifier": "createReceive", "parameters": "()", "modifiers": "@Override public", "return": "Receive", "signature": "Receive createReceive()", "full_signature": "@Override public Receive createReceive()", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.createReceive()", "testcase": false, "constructor": false}, {"identifier": "handleReceiveTimeout", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void handleReceiveTimeout()", "full_signature": "private void handleReceiveTimeout()", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.handleReceiveTimeout()", "testcase": false, "constructor": false}, {"identifier": "preStart", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void preStart()", "full_signature": "@Override public void preStart()", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.preStart()", "testcase": false, "constructor": false}, {"identifier": "handleRetrieveConnectionLogsResponse", "parameters": "(\n            final RetrieveConnectionLogsResponse retrieveConnectionLogsResponse)", "modifiers": "private", "return": "void", "signature": "void handleRetrieveConnectionLogsResponse(\n            final RetrieveConnectionLogsResponse retrieveConnectionLogsResponse)", "full_signature": "private void handleRetrieveConnectionLogsResponse(\n            final RetrieveConnectionLogsResponse retrieveConnectionLogsResponse)", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.handleRetrieveConnectionLogsResponse(\n            final RetrieveConnectionLogsResponse retrieveConnectionLogsResponse)", "testcase": false, "constructor": false}, {"identifier": "sendResponse", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sendResponse()", "full_signature": "private void sendResponse()", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.sendResponse()", "testcase": false, "constructor": false}, {"identifier": "restrictMaxLogEntriesLength", "parameters": "()", "modifiers": "private", "return": "RetrieveConnectionLogsResponse", "signature": "RetrieveConnectionLogsResponse restrictMaxLogEntriesLength()", "full_signature": "private RetrieveConnectionLogsResponse restrictMaxLogEntriesLength()", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.restrictMaxLogEntriesLength()", "testcase": false, "constructor": false}, {"identifier": "stopSelf", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void stopSelf()", "full_signature": "private void stopSelf()", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.stopSelf()", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/logs/RetrieveConnectionLogsAggregatorActor.java"}, "focal_method": {"identifier": "props", "parameters": "(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "modifiers": "public static", "return": "Props", "body": "public static Props props(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes) {\n\n        return Props.create(RetrieveConnectionLogsAggregatorActor.class, connection, sender, originalHeaders,\n                timeout, maxLogSizeBytes);\n    }", "signature": "Props props(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "full_signature": "public static Props props(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "class_method_signature": "RetrieveConnectionLogsAggregatorActor.props(final Connection connection, final ActorRef sender,\n            final DittoHeaders originalHeaders, final Duration timeout, final long maxLogSizeBytes)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}