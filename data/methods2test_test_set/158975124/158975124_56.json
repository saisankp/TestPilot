{"test_class": {"identifier": "TimeRangeTest", "superclass": "", "interfaces": "", "fields": [], "file": "tsfile/src/test/java/org/apache/iotdb/tsfile/read/common/TimeRangeTest.java"}, "test_case": {"identifier": "equalTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void equalTest() {\n    TimeRange r1 = new TimeRange(5, 8);\n    TimeRange r2 = new TimeRange(5, 8);\n    assertTrue(r1.equals(r2));\n  }", "signature": "void equalTest()", "full_signature": "@Test public void equalTest()", "class_method_signature": "TimeRangeTest.equalTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals"]}, "focal_class": {"identifier": "TimeRange", "superclass": "", "interfaces": "implements Comparable<TimeRange>", "fields": [{"original_string": "private long min = 0;", "modifier": "private", "type": "long", "declarator": "min = 0", "var_name": "min"}, {"original_string": "private long max = 0;", "modifier": "private", "type": "long", "declarator": "max = 0", "var_name": "max"}, {"original_string": "private boolean leftClose = true;", "modifier": "private", "type": "boolean", "declarator": "leftClose = true", "var_name": "leftClose"}, {"original_string": "private boolean rightClose = true;", "modifier": "private", "type": "boolean", "declarator": "rightClose = true", "var_name": "rightClose"}], "methods": [{"identifier": "TimeRange", "parameters": "(long min, long max)", "modifiers": "public", "return": "", "signature": " TimeRange(long min, long max)", "full_signature": "public  TimeRange(long min, long max)", "class_method_signature": "TimeRange.TimeRange(long min, long max)", "testcase": false, "constructor": true}, {"identifier": "compareTo", "parameters": "(TimeRange r)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(TimeRange r)", "full_signature": "@Override public int compareTo(TimeRange r)", "class_method_signature": "TimeRange.compareTo(TimeRange r)", "testcase": false, "constructor": false}, {"identifier": "setMin", "parameters": "(long min)", "modifiers": "public", "return": "void", "signature": "void setMin(long min)", "full_signature": "public void setMin(long min)", "class_method_signature": "TimeRange.setMin(long min)", "testcase": false, "constructor": false}, {"identifier": "setMax", "parameters": "(long max)", "modifiers": "public", "return": "void", "signature": "void setMax(long max)", "full_signature": "public void setMax(long max)", "class_method_signature": "TimeRange.setMax(long max)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(TimeRange r)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(TimeRange r)", "full_signature": "public boolean contains(TimeRange r)", "class_method_signature": "TimeRange.contains(TimeRange r)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(long min, long max)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(long min, long max)", "full_signature": "public boolean contains(long min, long max)", "class_method_signature": "TimeRange.contains(long min, long max)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(long time)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(long time)", "full_signature": "public boolean contains(long time)", "class_method_signature": "TimeRange.contains(long time)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(long min, long max)", "modifiers": "public", "return": "void", "signature": "void set(long min, long max)", "full_signature": "public void set(long min, long max)", "class_method_signature": "TimeRange.set(long min, long max)", "testcase": false, "constructor": false}, {"identifier": "getMin", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMin()", "full_signature": "public long getMin()", "class_method_signature": "TimeRange.getMin()", "testcase": false, "constructor": false}, {"identifier": "getMax", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMax()", "full_signature": "public long getMax()", "class_method_signature": "TimeRange.getMax()", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(TimeRange r)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(TimeRange r)", "full_signature": "public boolean intersects(TimeRange r)", "class_method_signature": "TimeRange.intersects(TimeRange r)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "TimeRange.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TimeRange.hashCode()", "testcase": false, "constructor": false}, {"identifier": "overlaps", "parameters": "(TimeRange rhs)", "modifiers": "public", "return": "boolean", "signature": "boolean overlaps(TimeRange rhs)", "full_signature": "public boolean overlaps(TimeRange rhs)", "class_method_signature": "TimeRange.overlaps(TimeRange rhs)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TimeRange.toString()", "testcase": false, "constructor": false}, {"identifier": "setLeftClose", "parameters": "(boolean leftClose)", "modifiers": "public", "return": "void", "signature": "void setLeftClose(boolean leftClose)", "full_signature": "public void setLeftClose(boolean leftClose)", "class_method_signature": "TimeRange.setLeftClose(boolean leftClose)", "testcase": false, "constructor": false}, {"identifier": "setRightClose", "parameters": "(boolean rightClose)", "modifiers": "public", "return": "void", "signature": "void setRightClose(boolean rightClose)", "full_signature": "public void setRightClose(boolean rightClose)", "class_method_signature": "TimeRange.setRightClose(boolean rightClose)", "testcase": false, "constructor": false}, {"identifier": "getLeftClose", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getLeftClose()", "full_signature": "public boolean getLeftClose()", "class_method_signature": "TimeRange.getLeftClose()", "testcase": false, "constructor": false}, {"identifier": "getRightClose", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getRightClose()", "full_signature": "public boolean getRightClose()", "class_method_signature": "TimeRange.getRightClose()", "testcase": false, "constructor": false}, {"identifier": "sortAndMerge", "parameters": "(List<TimeRange> unionCandidates)", "modifiers": "public static", "return": "List<TimeRange>", "signature": "List<TimeRange> sortAndMerge(List<TimeRange> unionCandidates)", "full_signature": "public static List<TimeRange> sortAndMerge(List<TimeRange> unionCandidates)", "class_method_signature": "TimeRange.sortAndMerge(List<TimeRange> unionCandidates)", "testcase": false, "constructor": false}, {"identifier": "getRemains", "parameters": "(List<TimeRange> timeRangesPrev)", "modifiers": "@SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning public", "return": "List<TimeRange>", "signature": "List<TimeRange> getRemains(List<TimeRange> timeRangesPrev)", "full_signature": "@SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning public List<TimeRange> getRemains(List<TimeRange> timeRangesPrev)", "class_method_signature": "TimeRange.getRemains(List<TimeRange> timeRangesPrev)", "testcase": false, "constructor": false}, {"identifier": "getExpression", "parameters": "()", "modifiers": "public", "return": "IExpression", "signature": "IExpression getExpression()", "full_signature": "public IExpression getExpression()", "class_method_signature": "TimeRange.getExpression()", "testcase": false, "constructor": false}], "file": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/common/TimeRange.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    TimeRange that = (TimeRange) o;\n    return (this.min == that.min && this.max == that.max);\n  }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "TimeRange.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}