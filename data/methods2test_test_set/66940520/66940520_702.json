{"test_class": {"identifier": "SqlUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-support/dhis-support-system/src/test/java/org/hisp/dhis/system/util/SqlUtilsTest.java"}, "test_case": {"identifier": "testQuoteWithAlias", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testQuoteWithAlias()\n    {\n        assertEquals( \"ougs.\\\"Short name\\\"\", SqlUtils.quote( \"ougs\", \"Short name\" ) );\n        assertEquals( \"ous.\\\"uid\\\"\", SqlUtils.quote( \"ous\", \"uid\" ) );\n    }", "signature": "void testQuoteWithAlias()", "full_signature": "@Test public void testQuoteWithAlias()", "class_method_signature": "SqlUtilsTest.testQuoteWithAlias()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "quote", "assertEquals", "quote"]}, "focal_class": {"identifier": "SqlUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String QUOTE = \"\\\"\";", "modifier": "public static final", "type": "String", "declarator": "QUOTE = \"\\\"\"", "var_name": "QUOTE"}, {"original_string": "public static final String SEPARATOR = \".\";", "modifier": "public static final", "type": "String", "declarator": "SEPARATOR = \".\"", "var_name": "SEPARATOR"}, {"original_string": "public static final String OPTION_SEP = \".\";", "modifier": "public static final", "type": "String", "declarator": "OPTION_SEP = \".\"", "var_name": "OPTION_SEP"}], "methods": [{"identifier": "quote", "parameters": "( String relation )", "modifiers": "public static", "return": "String", "signature": "String quote( String relation )", "full_signature": "public static String quote( String relation )", "class_method_signature": "SqlUtils.quote( String relation )", "testcase": false, "constructor": false}, {"identifier": "quote", "parameters": "( String alias, String relation )", "modifiers": "public static", "return": "String", "signature": "String quote( String alias, String relation )", "full_signature": "public static String quote( String alias, String relation )", "class_method_signature": "SqlUtils.quote( String alias, String relation )", "testcase": false, "constructor": false}, {"identifier": "getArrayAsSet", "parameters": "( ResultSet rs, String columnLabel )", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getArrayAsSet( ResultSet rs, String columnLabel )", "full_signature": "public static Set<String> getArrayAsSet( ResultSet rs, String columnLabel )", "class_method_signature": "SqlUtils.getArrayAsSet( ResultSet rs, String columnLabel )", "testcase": false, "constructor": false}, {"identifier": "castToNumber", "parameters": "( String value )", "modifiers": "public static", "return": "String", "signature": "String castToNumber( String value )", "full_signature": "public static String castToNumber( String value )", "class_method_signature": "SqlUtils.castToNumber( String value )", "testcase": false, "constructor": false}, {"identifier": "lower", "parameters": "( String value )", "modifiers": "public static", "return": "String", "signature": "String lower( String value )", "full_signature": "public static String lower( String value )", "class_method_signature": "SqlUtils.lower( String value )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-support/dhis-support-system/src/main/java/org/hisp/dhis/system/util/SqlUtils.java"}, "focal_method": {"identifier": "quote", "parameters": "( String relation )", "modifiers": "public static", "return": "String", "body": "public static String quote( String relation )\n    {\n        String rel = relation.replaceAll( QUOTE, ( QUOTE + QUOTE ) );\n\n        return QUOTE + rel + QUOTE;\n    }", "signature": "String quote( String relation )", "full_signature": "public static String quote( String relation )", "class_method_signature": "SqlUtils.quote( String relation )", "testcase": false, "constructor": false, "invocations": ["replaceAll"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}