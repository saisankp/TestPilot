{"test_class": {"identifier": "TestSessionAgent", "superclass": "", "interfaces": "", "fields": [], "file": "session-agent/src/test/java/com/amadeus/session/agent/TestSessionAgent.java"}, "test_case": {"identifier": "testInvalidArgument", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n  public void testInvalidArgument() {\n    SessionAgent.readArguments(\"log=debug,provider=d,something=bad\");\n  }", "signature": "void testInvalidArgument()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void testInvalidArgument()", "class_method_signature": "TestSessionAgent.testInvalidArgument()", "testcase": true, "constructor": false, "invocations": ["readArguments"]}, "focal_class": {"identifier": "SessionAgent", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String DEBUG_ACTIVE = \"com.amadeus.session.debug\";", "modifier": "static final", "type": "String", "declarator": "DEBUG_ACTIVE = \"com.amadeus.session.debug\"", "var_name": "DEBUG_ACTIVE"}, {"original_string": "static final String SESSION_FACTORY = \"com.amadeus.session.repository.factory\";", "modifier": "static final", "type": "String", "declarator": "SESSION_FACTORY = \"com.amadeus.session.repository.factory\"", "var_name": "SESSION_FACTORY"}, {"original_string": "static final String SESSION_DISTRIBUTABLE = \"com.amadeus.session.distributable\";", "modifier": "static final", "type": "String", "declarator": "SESSION_DISTRIBUTABLE = \"com.amadeus.session.distributable\"", "var_name": "SESSION_DISTRIBUTABLE"}, {"original_string": "static final String SESSION_TIMEOUT = \"com.amadeus.session.timeout\";", "modifier": "static final", "type": "String", "declarator": "SESSION_TIMEOUT = \"com.amadeus.session.timeout\"", "var_name": "SESSION_TIMEOUT"}, {"original_string": "static final String SESSION_MANAGEMENT_DISABLED = \"com.amadeus.session.disabled\";", "modifier": "static final", "type": "String", "declarator": "SESSION_MANAGEMENT_DISABLED = \"com.amadeus.session.disabled\"", "var_name": "SESSION_MANAGEMENT_DISABLED"}, {"original_string": "static final String REPOSITORY_CONF_PROPERTY = \"com.amadeus.session.repository.conf\";", "modifier": "static final", "type": "String", "declarator": "REPOSITORY_CONF_PROPERTY = \"com.amadeus.session.repository.conf\"", "var_name": "REPOSITORY_CONF_PROPERTY"}, {"original_string": "static final String INTERCEPT_LISTENER_PROPERTY = \"com.amadeus.session.intercept.listeners\";", "modifier": "static final", "type": "String", "declarator": "INTERCEPT_LISTENER_PROPERTY = \"com.amadeus.session.intercept.listeners\"", "var_name": "INTERCEPT_LISTENER_PROPERTY"}, {"original_string": "private static final String PROVIDER = \"provider=\";", "modifier": "private static final", "type": "String", "declarator": "PROVIDER = \"provider=\"", "var_name": "PROVIDER"}, {"original_string": "private static final String TIMEOUT = \"timeout=\";", "modifier": "private static final", "type": "String", "declarator": "TIMEOUT = \"timeout=\"", "var_name": "TIMEOUT"}, {"original_string": "private static final String DISTRIBUTABLE = \"distributable=\";", "modifier": "private static final", "type": "String", "declarator": "DISTRIBUTABLE = \"distributable=\"", "var_name": "DISTRIBUTABLE"}, {"original_string": "private static final String DISABLED = \"disabled=\";", "modifier": "private static final", "type": "String", "declarator": "DISABLED = \"disabled=\"", "var_name": "DISABLED"}, {"original_string": "private static final String INTERCEPT_LISTENER = \"interceptListeners=\";", "modifier": "private static final", "type": "String", "declarator": "INTERCEPT_LISTENER = \"interceptListeners=\"", "var_name": "INTERCEPT_LISTENER"}, {"original_string": "static boolean agentActive;", "modifier": "static", "type": "boolean", "declarator": "agentActive", "var_name": "agentActive"}, {"original_string": "static boolean debugMode;", "modifier": "static", "type": "boolean", "declarator": "debugMode", "var_name": "debugMode"}, {"original_string": "static boolean interceptListener;", "modifier": "static", "type": "boolean", "declarator": "interceptListener", "var_name": "interceptListener"}], "methods": [{"identifier": "SessionAgent", "parameters": "()", "modifiers": "private", "return": "", "signature": " SessionAgent()", "full_signature": "private  SessionAgent()", "class_method_signature": "SessionAgent.SessionAgent()", "testcase": false, "constructor": true}, {"identifier": "premain", "parameters": "(String agentArgs, Instrumentation inst)", "modifiers": "public static", "return": "void", "signature": "void premain(String agentArgs, Instrumentation inst)", "full_signature": "public static void premain(String agentArgs, Instrumentation inst)", "class_method_signature": "SessionAgent.premain(String agentArgs, Instrumentation inst)", "testcase": false, "constructor": false}, {"identifier": "readArguments", "parameters": "(String agentArgs)", "modifiers": "static", "return": "void", "signature": "void readArguments(String agentArgs)", "full_signature": "static void readArguments(String agentArgs)", "class_method_signature": "SessionAgent.readArguments(String agentArgs)", "testcase": false, "constructor": false}, {"identifier": "parseArgument", "parameters": "(String agentArgs, String arg)", "modifiers": "private static", "return": "void", "signature": "void parseArgument(String agentArgs, String arg)", "full_signature": "private static void parseArgument(String agentArgs, String arg)", "class_method_signature": "SessionAgent.parseArgument(String agentArgs, String arg)", "testcase": false, "constructor": false}, {"identifier": "normalArguments", "parameters": "(String agentArgs, String arg)", "modifiers": "private static", "return": "void", "signature": "void normalArguments(String agentArgs, String arg)", "full_signature": "private static void normalArguments(String agentArgs, String arg)", "class_method_signature": "SessionAgent.normalArguments(String agentArgs, String arg)", "testcase": false, "constructor": false}, {"identifier": "parseTimeout", "parameters": "(String agentArgs, String arg)", "modifiers": "static", "return": "void", "signature": "void parseTimeout(String agentArgs, String arg)", "full_signature": "static void parseTimeout(String agentArgs, String arg)", "class_method_signature": "SessionAgent.parseTimeout(String agentArgs, String arg)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(String format, Object... args)", "modifiers": "public static", "return": "void", "signature": "void debug(String format, Object... args)", "full_signature": "public static void debug(String format, Object... args)", "class_method_signature": "SessionAgent.debug(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(String format, Object... args)", "modifiers": "public static", "return": "void", "signature": "void error(String format, Object... args)", "full_signature": "public static void error(String format, Object... args)", "class_method_signature": "SessionAgent.error(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "isAgentActive", "parameters": "()", "modifiers": "static", "return": "boolean", "signature": "boolean isAgentActive()", "full_signature": "static boolean isAgentActive()", "class_method_signature": "SessionAgent.isAgentActive()", "testcase": false, "constructor": false}, {"identifier": "isDebugMode", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isDebugMode()", "full_signature": "public static boolean isDebugMode()", "class_method_signature": "SessionAgent.isDebugMode()", "testcase": false, "constructor": false}], "file": "session-agent/src/main/java/com/amadeus/session/agent/SessionAgent.java"}, "focal_method": {"identifier": "readArguments", "parameters": "(String agentArgs)", "modifiers": "static", "return": "void", "body": "static void readArguments(String agentArgs) {\n    if (agentArgs == null) {\n      return;\n    }\n    String[] args = agentArgs.split(\",\");\n    for (String arg : args) {\n      parseArgument(agentArgs, arg.trim());\n    }\n    if (!agentArgs.isEmpty() && System.getProperty(REPOSITORY_CONF_PROPERTY) == null) {\n      System.setProperty(REPOSITORY_CONF_PROPERTY, agentArgs);\n    }\n  }", "signature": "void readArguments(String agentArgs)", "full_signature": "static void readArguments(String agentArgs)", "class_method_signature": "SessionAgent.readArguments(String agentArgs)", "testcase": false, "constructor": false, "invocations": ["split", "parseArgument", "trim", "isEmpty", "getProperty", "setProperty"]}, "repository": {"repo_id": 74458764, "url": "https://github.com/AmadeusITGroup/HttpSessionReplacer", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 45, "size": 514, "license": "licensed"}}