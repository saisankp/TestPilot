{"test_class": {"identifier": "FileHttpDownloadTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/oim-client-common/src/test/java/com/oim/common/component/file/FileHttpDownloadTest.java"}, "test_case": {"identifier": "testUpload", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testUpload() {\n\t\tMap<String, String> dataMap = new HashMap<String, String>();\n\t\tdataMap.put(\"userId\", \"110\");\n\n\t\tFileAction<File> action = new FileAction<File>() {\n\n\t\t\t@Override\n\t\t\tpublic void progress(long speed, long size, long finishSize, double progress) {\n\n\t\t\t\tString speedText = \"0MB/s\";\n\t\t\t\tif (speed < 1024) {\n\t\t\t\t\tspeedText = speed + \"B/s\";\n\t\t\t\t} else if (1024 <= speed && speed < (1024 * 1024)) {\n\t\t\t\t\tString s = OnlyNumberUtil.format(((double) speed / 1024d));\n\t\t\t\t\tspeedText = s + \"KB/s\";\n\t\t\t\t} else {\n\t\t\t\t\tString s = OnlyNumberUtil.format(((double) speed / (double) (1024 * 1024)));\n\t\t\t\t\tspeedText = s + \"MB/s\";\n\t\t\t\t}\n\n\t\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\t\tsb.append(\"size:\" + size);\n\t\t\t\tsb.append(\" \");\n\t\t\t\tsb.append(\"finishSize:\" + finishSize);\n\t\t\t\tsb.append(\" \");\n\t\t\t\tsb.append(\"progress:\" + progress);\n\t\t\t\tsb.append(\" \");\n\t\t\t\tsb.append(\"speed:\");\n\t\t\t\tsb.append(speedText);\n\t\t\t\tsb.append(\" \");\n\t\t\t\tSystem.out.println(sb);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void success(File t) {\n\t\t\t\tSystem.out.println(t.getAbsolutePath());\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void lost(File t) {\n\t\t\t\t// TODO Auto-generated method stub\n\n\t\t\t}\n\t\t};\n\t\tString http = \"http://download.netbeans.org/netbeans/8.2/final/bundles/netbeans-8.2-windows.exe\";\n\t\tString savaPath = \"Temp/\";\n\t\tString fileName = \"\";\n\n\t\tboolean onlyReplaceName = false;\n\t\tFileHttpDownload fhd = new FileHttpDownload();\n\t\tfhd.download(http,\"\", savaPath, fileName, onlyReplaceName, action);\n\t}", "signature": "void testUpload()", "full_signature": "@Test public void testUpload()", "class_method_signature": "FileHttpDownloadTest.testUpload()", "testcase": true, "constructor": false, "invocations": ["put", "format", "format", "append", "append", "append", "append", "append", "append", "append", "append", "append", "println", "println", "getAbsolutePath", "download"]}, "focal_class": {"identifier": "FileHttpDownload", "superclass": "extends FileHttpHandler", "interfaces": "", "fields": [], "methods": [{"identifier": "download", "parameters": "(String http, String savaPath, String fileName, FileAction<File> fileAction)", "modifiers": "public", "return": "void", "signature": "void download(String http, String savaPath, String fileName, FileAction<File> fileAction)", "full_signature": "public void download(String http, String savaPath, String fileName, FileAction<File> fileAction)", "class_method_signature": "FileHttpDownload.download(String http, String savaPath, String fileName, FileAction<File> fileAction)", "testcase": false, "constructor": false}, {"identifier": "download", "parameters": "(String http, String savaPath, String fileName, boolean onlyReplaceName, FileAction<File> fileAction)", "modifiers": "public", "return": "void", "signature": "void download(String http, String savaPath, String fileName, boolean onlyReplaceName, FileAction<File> fileAction)", "full_signature": "public void download(String http, String savaPath, String fileName, boolean onlyReplaceName, FileAction<File> fileAction)", "class_method_signature": "FileHttpDownload.download(String http, String savaPath, String fileName, boolean onlyReplaceName, FileAction<File> fileAction)", "testcase": false, "constructor": false}, {"identifier": "download", "parameters": "(String http, String method, String savaPath, String fileName, boolean onlyReplaceName, FileAction<File> fileAction)", "modifiers": "public", "return": "void", "signature": "void download(String http, String method, String savaPath, String fileName, boolean onlyReplaceName, FileAction<File> fileAction)", "full_signature": "public void download(String http, String method, String savaPath, String fileName, boolean onlyReplaceName, FileAction<File> fileAction)", "class_method_signature": "FileHttpDownload.download(String http, String method, String savaPath, String fileName, boolean onlyReplaceName, FileAction<File> fileAction)", "testcase": false, "constructor": false}, {"identifier": "download", "parameters": "(String http, String filePath, FileAction<File> fileAction)", "modifiers": "public", "return": "void", "signature": "void download(String http, String filePath, FileAction<File> fileAction)", "full_signature": "public void download(String http, String filePath, FileAction<File> fileAction)", "class_method_signature": "FileHttpDownload.download(String http, String filePath, FileAction<File> fileAction)", "testcase": false, "constructor": false}, {"identifier": "download", "parameters": "(String http, File saveFile, FileAction<File> fileAction)", "modifiers": "public", "return": "void", "signature": "void download(String http, File saveFile, FileAction<File> fileAction)", "full_signature": "public void download(String http, File saveFile, FileAction<File> fileAction)", "class_method_signature": "FileHttpDownload.download(String http, File saveFile, FileAction<File> fileAction)", "testcase": false, "constructor": false}, {"identifier": "getFileNameFromUrl", "parameters": "(String url)", "modifiers": "public static", "return": "String", "signature": "String getFileNameFromUrl(String url)", "full_signature": "public static String getFileNameFromUrl(String url)", "class_method_signature": "FileHttpDownload.getFileNameFromUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "(String http, String disposition, String fileName, boolean onlyReplaceName)", "modifiers": "public", "return": "String", "signature": "String getFileName(String http, String disposition, String fileName, boolean onlyReplaceName)", "full_signature": "public String getFileName(String http, String disposition, String fileName, boolean onlyReplaceName)", "class_method_signature": "FileHttpDownload.getFileName(String http, String disposition, String fileName, boolean onlyReplaceName)", "testcase": false, "constructor": false}, {"identifier": "getFileNameO", "parameters": "(String http, String disposition, String fileName, boolean onlyReplaceName)", "modifiers": "public", "return": "String", "signature": "String getFileNameO(String http, String disposition, String fileName, boolean onlyReplaceName)", "full_signature": "public String getFileNameO(String http, String disposition, String fileName, boolean onlyReplaceName)", "class_method_signature": "FileHttpDownload.getFileNameO(String http, String disposition, String fileName, boolean onlyReplaceName)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] arg)", "modifiers": "public static", "return": "void", "signature": "void main(String[] arg)", "full_signature": "public static void main(String[] arg)", "class_method_signature": "FileHttpDownload.main(String[] arg)", "testcase": false, "constructor": false}], "file": "client/oim-client-common/src/main/java/com/oim/common/component/file/FileHttpDownload.java"}, "focal_method": {"identifier": "download", "parameters": "(String http, String savaPath, String fileName, FileAction<File> fileAction)", "modifiers": "public", "return": "void", "body": "public void download(String http, String savaPath, String fileName, FileAction<File> fileAction) {\n\t\tdownload(http, savaPath, fileName, false, fileAction);\n\t}", "signature": "void download(String http, String savaPath, String fileName, FileAction<File> fileAction)", "full_signature": "public void download(String http, String savaPath, String fileName, FileAction<File> fileAction)", "class_method_signature": "FileHttpDownload.download(String http, String savaPath, String fileName, FileAction<File> fileAction)", "testcase": false, "constructor": false, "invocations": ["download"]}, "repository": {"repo_id": 122696956, "url": "https://github.com/oimchat/oim-fx", "language": "Java", "is_fork": false, "fork_count": 92, "stargazer_count": 294, "size": 48671, "license": "licensed"}}