{"test_class": {"identifier": "HtmlGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "ramler-html/src/test/java/org/ops4j/ramler/html/HtmlGeneratorTest.java"}, "test_case": {"identifier": "shouldRenderApi", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldRenderApi() throws IOException {\n        HtmlConfiguration config = new HtmlConfiguration();\n        config.setSourceFile(\"src/test/resources/raml/simpleobject.raml\");\n        config.setTargetDir(\"target/html/simpleobject\");\n        HtmlGenerator generator = new HtmlGenerator(config);\n        generator.generate();\n\n        verifyTargetDir(config);\n    }", "signature": "void shouldRenderApi()", "full_signature": "@Test public void shouldRenderApi()", "class_method_signature": "HtmlGeneratorTest.shouldRenderApi()", "testcase": true, "constructor": false, "invocations": ["setSourceFile", "setTargetDir", "generate", "verifyTargetDir"]}, "focal_class": {"identifier": "HtmlGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(HtmlGenerator.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(HtmlGenerator.class)", "var_name": "log"}, {"original_string": "private HtmlConfiguration config;", "modifier": "private", "type": "HtmlConfiguration", "declarator": "config", "var_name": "config"}, {"original_string": "private HtmlContext context;", "modifier": "private", "type": "HtmlContext", "declarator": "context", "var_name": "context"}], "methods": [{"identifier": "HtmlGenerator", "parameters": "(HtmlConfiguration config)", "modifiers": "public", "return": "", "signature": " HtmlGenerator(HtmlConfiguration config)", "full_signature": "public  HtmlGenerator(HtmlConfiguration config)", "class_method_signature": "HtmlGenerator.HtmlGenerator(HtmlConfiguration config)", "testcase": false, "constructor": true}, {"identifier": "getContext", "parameters": "()", "modifiers": "", "return": "HtmlContext", "signature": "HtmlContext getContext()", "full_signature": " HtmlContext getContext()", "class_method_signature": "HtmlGenerator.getContext()", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void generate()", "full_signature": "public void generate()", "class_method_signature": "HtmlGenerator.generate()", "testcase": false, "constructor": false}, {"identifier": "writeWebResources", "parameters": "(File targetDir)", "modifiers": "private", "return": "void", "signature": "void writeWebResources(File targetDir)", "full_signature": "private void writeWebResources(File targetDir)", "class_method_signature": "HtmlGenerator.writeWebResources(File targetDir)", "testcase": false, "constructor": false}, {"identifier": "writeDefaultWebResources", "parameters": "(File targetDir)", "modifiers": "private", "return": "void", "signature": "void writeDefaultWebResources(File targetDir)", "full_signature": "private void writeDefaultWebResources(File targetDir)", "class_method_signature": "HtmlGenerator.writeDefaultWebResources(File targetDir)", "testcase": false, "constructor": false}, {"identifier": "copyCustomWebResources", "parameters": "(File sourceDir, File targetDir)", "modifiers": "private", "return": "void", "signature": "void copyCustomWebResources(File sourceDir, File targetDir)", "full_signature": "private void copyCustomWebResources(File sourceDir, File targetDir)", "class_method_signature": "HtmlGenerator.copyCustomWebResources(File sourceDir, File targetDir)", "testcase": false, "constructor": false}, {"identifier": "copyTo", "parameters": "(Path sourcePath, Path sourceRoot, Path targetRoot)", "modifiers": "private", "return": "void", "signature": "void copyTo(Path sourcePath, Path sourceRoot, Path targetRoot)", "full_signature": "private void copyTo(Path sourcePath, Path sourceRoot, Path targetRoot)", "class_method_signature": "HtmlGenerator.copyTo(Path sourcePath, Path sourceRoot, Path targetRoot)", "testcase": false, "constructor": false}, {"identifier": "copyTo", "parameters": "(String file, File targetDir)", "modifiers": "private", "return": "void", "signature": "void copyTo(String file, File targetDir)", "full_signature": "private void copyTo(String file, File targetDir)", "class_method_signature": "HtmlGenerator.copyTo(String file, File targetDir)", "testcase": false, "constructor": false}], "file": "ramler-html/src/main/java/org/ops4j/ramler/html/HtmlGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void generate() throws IOException {\n        ApiModel apiModel = new ApiModelBuilder().buildApiModel(config.getSourceFile());\n        TemplateEngine engine = new TemplateEngine();\n        engine.setTemplateDir(config.getTemplateDir());\n        String result = engine.renderTemplate(\"api\", apiModel);\n\n        File targetDir = new File(config.getTargetDir());\n        createDirectoryIfNeeded(targetDir);\n        Files.write(targetDir.toPath()\n            .resolve(\"index.html\"), result.getBytes(StandardCharsets.UTF_8));\n\n        writeWebResources(targetDir);\n    }", "signature": "void generate()", "full_signature": "public void generate()", "class_method_signature": "HtmlGenerator.generate()", "testcase": false, "constructor": false, "invocations": ["buildApiModel", "getSourceFile", "setTemplateDir", "getTemplateDir", "renderTemplate", "getTargetDir", "createDirectoryIfNeeded", "write", "resolve", "toPath", "getBytes", "writeWebResources"]}, "repository": {"repo_id": 63543726, "url": "https://github.com/ops4j/org.ops4j.ramler", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 1033, "license": "licensed"}}