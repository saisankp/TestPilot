{"test_class": {"identifier": "IATest", "superclass": "", "interfaces": "", "fields": [], "file": "Paris/2015/2015-01-22-Solitaire-Java-Randori/src/test/java/murex/pop/dojo/solitaire/IATest.java"}, "test_case": {"identifier": "it_solves_in_many_turns", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void\n   it_solves_in_many_turns() {\n      final Boolean[] line = { true, true, false, true, false };\n      Assertions.assertThat(IA.hasSolution(line)).isTrue();\n   }", "signature": "void it_solves_in_many_turns()", "full_signature": "@Test public void it_solves_in_many_turns()", "class_method_signature": "IATest.it_solves_in_many_turns()", "testcase": true, "constructor": false, "invocations": ["isTrue", "assertThat", "hasSolution"]}, "focal_class": {"identifier": "IA", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hasSolution", "parameters": "(final Boolean[] line)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasSolution(final Boolean[] line)", "full_signature": "public static boolean hasSolution(final Boolean[] line)", "class_method_signature": "IA.hasSolution(final Boolean[] line)", "testcase": false, "constructor": false}, {"identifier": "hasSolution", "parameters": "(final Boolean[][] lines)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasSolution(final Boolean[][] lines)", "full_signature": "public static boolean hasSolution(final Boolean[][] lines)", "class_method_signature": "IA.hasSolution(final Boolean[][] lines)", "testcase": false, "constructor": false}, {"identifier": "getMoves", "parameters": "(Boolean[] line)", "modifiers": "private static", "return": "FluentIterable<Move>", "signature": "FluentIterable<Move> getMoves(Boolean[] line)", "full_signature": "private static FluentIterable<Move> getMoves(Boolean[] line)", "class_method_signature": "IA.getMoves(Boolean[] line)", "testcase": false, "constructor": false}, {"identifier": "canMoveLeft", "parameters": "(Boolean[] line, int i)", "modifiers": "private static", "return": "boolean", "signature": "boolean canMoveLeft(Boolean[] line, int i)", "full_signature": "private static boolean canMoveLeft(Boolean[] line, int i)", "class_method_signature": "IA.canMoveLeft(Boolean[] line, int i)", "testcase": false, "constructor": false}, {"identifier": "canMoveRight", "parameters": "(Boolean[] line, int i)", "modifiers": "private static", "return": "boolean", "signature": "boolean canMoveRight(Boolean[] line, int i)", "full_signature": "private static boolean canMoveRight(Boolean[] line, int i)", "class_method_signature": "IA.canMoveRight(Boolean[] line, int i)", "testcase": false, "constructor": false}, {"identifier": "isSolved", "parameters": "(Boolean[][] lines)", "modifiers": "private static", "return": "boolean", "signature": "boolean isSolved(Boolean[][] lines)", "full_signature": "private static boolean isSolved(Boolean[][] lines)", "class_method_signature": "IA.isSolved(Boolean[][] lines)", "testcase": false, "constructor": false}], "file": "Paris/2015/2015-01-22-Solitaire-Java-Randori/src/main/java/murex/pop/dojo/solitaire/IA.java"}, "focal_method": {"identifier": "hasSolution", "parameters": "(final Boolean[] line)", "modifiers": "public static", "return": "boolean", "body": "public static boolean hasSolution(final Boolean[] line) {\n      return hasSolution(new Boolean[][] { line });\n   }", "signature": "boolean hasSolution(final Boolean[] line)", "full_signature": "public static boolean hasSolution(final Boolean[] line)", "class_method_signature": "IA.hasSolution(final Boolean[] line)", "testcase": false, "constructor": false, "invocations": ["hasSolution"]}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}