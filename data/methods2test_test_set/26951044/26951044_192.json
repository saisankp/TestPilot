{"test_class": {"identifier": "CoreConfigurationProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/CoreConfigurationProviderTest.java"}, "test_case": {"identifier": "getConfigurationBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getConfigurationBuilder() throws Exception {\n        assertThat(new CoreConfigurationProvider().getConfigurationBuilder()).isNotNull();\n    }", "signature": "void getConfigurationBuilder()", "full_signature": "@Test public void getConfigurationBuilder()", "class_method_signature": "CoreConfigurationProviderTest.getConfigurationBuilder()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "getConfigurationBuilder"]}, "focal_class": {"identifier": "CoreConfigurationProvider", "superclass": "", "interfaces": "implements ConfigurationProviderSpi", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(CoreConfigurationProvider.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(CoreConfigurationProvider.class.getName())", "var_name": "LOG"}, {"original_string": "private final Map<ClassLoader, Configuration> configurations = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<ClassLoader, Configuration>", "declarator": "configurations = new ConcurrentHashMap<>()", "var_name": "configurations"}], "methods": [{"identifier": "CoreConfigurationProvider", "parameters": "()", "modifiers": "public", "return": "", "signature": " CoreConfigurationProvider()", "full_signature": "public  CoreConfigurationProvider()", "class_method_signature": "CoreConfigurationProvider.CoreConfigurationProvider()", "testcase": false, "constructor": true}, {"identifier": "getConfiguration", "parameters": "(ClassLoader classLoader)", "modifiers": "@Override public", "return": "Configuration", "signature": "Configuration getConfiguration(ClassLoader classLoader)", "full_signature": "@Override public Configuration getConfiguration(ClassLoader classLoader)", "class_method_signature": "CoreConfigurationProvider.getConfiguration(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "createConfiguration", "parameters": "(ConfigurationContext context)", "modifiers": "@Override public", "return": "Configuration", "signature": "Configuration createConfiguration(ConfigurationContext context)", "full_signature": "@Override public Configuration createConfiguration(ConfigurationContext context)", "class_method_signature": "CoreConfigurationProvider.createConfiguration(ConfigurationContext context)", "testcase": false, "constructor": false}, {"identifier": "getConfigurationBuilder", "parameters": "()", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder getConfigurationBuilder()", "full_signature": "@Override public ConfigurationBuilder getConfigurationBuilder()", "class_method_signature": "CoreConfigurationProvider.getConfigurationBuilder()", "testcase": false, "constructor": false}, {"identifier": "setConfiguration", "parameters": "(Configuration config, ClassLoader classLoader)", "modifiers": "@Override public", "return": "void", "signature": "void setConfiguration(Configuration config, ClassLoader classLoader)", "full_signature": "@Override public void setConfiguration(Configuration config, ClassLoader classLoader)", "class_method_signature": "CoreConfigurationProvider.setConfiguration(Configuration config, ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "releaseConfiguration", "parameters": "(ClassLoader classloader)", "modifiers": "@Override public", "return": "Configuration", "signature": "Configuration releaseConfiguration(ClassLoader classloader)", "full_signature": "@Override public Configuration releaseConfiguration(ClassLoader classloader)", "class_method_signature": "CoreConfigurationProvider.releaseConfiguration(ClassLoader classloader)", "testcase": false, "constructor": false}, {"identifier": "isConfigurationSettable", "parameters": "(ClassLoader classLoader)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isConfigurationSettable(ClassLoader classLoader)", "full_signature": "@Override public boolean isConfigurationSettable(ClassLoader classLoader)", "class_method_signature": "CoreConfigurationProvider.isConfigurationSettable(ClassLoader classLoader)", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/CoreConfigurationProvider.java"}, "focal_method": {"identifier": "getConfigurationBuilder", "parameters": "()", "modifiers": "@Override public", "return": "ConfigurationBuilder", "body": "@Override\n    public ConfigurationBuilder getConfigurationBuilder() {\n        return new CoreConfigurationBuilder();\n    }", "signature": "ConfigurationBuilder getConfigurationBuilder()", "full_signature": "@Override public ConfigurationBuilder getConfigurationBuilder()", "class_method_signature": "CoreConfigurationProvider.getConfigurationBuilder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}