{"test_class": {"identifier": "DefaultCommunicationServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DefaultCommunicationService service;", "modifier": "", "type": "DefaultCommunicationService", "declarator": "service", "var_name": "service"}], "file": "communication/src/test/java/org/entcore/communication/services/impl/DefaultCommunicationServiceTest.java"}, "test_case": {"identifier": "computeWarningMessageForAddLinkCheck_shouldReturnNull_GivenSenderBothAndReceiverNone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void computeWarningMessageForAddLinkCheck_shouldReturnNull_GivenSenderBothAndReceiverNone() {\n        Assert.assertEquals(null,\n                this.service.computeWarningMessageForAddLinkCheck(CommunicationService.Direction.BOTH, CommunicationService.Direction.NONE));\n    }", "signature": "void computeWarningMessageForAddLinkCheck_shouldReturnNull_GivenSenderBothAndReceiverNone()", "full_signature": "@Test public void computeWarningMessageForAddLinkCheck_shouldReturnNull_GivenSenderBothAndReceiverNone()", "class_method_signature": "DefaultCommunicationServiceTest.computeWarningMessageForAddLinkCheck_shouldReturnNull_GivenSenderBothAndReceiverNone()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "computeWarningMessageForAddLinkCheck"]}, "focal_class": {"identifier": "DefaultCommunicationService", "superclass": "", "interfaces": "implements CommunicationService", "fields": [{"original_string": "protected final Neo4j neo4j = Neo4j.getInstance();", "modifier": "protected final", "type": "Neo4j", "declarator": "neo4j = Neo4j.getInstance()", "var_name": "neo4j"}, {"original_string": "protected static final Logger log = LoggerFactory.getLogger(DefaultCommunicationService.class);", "modifier": "protected static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(DefaultCommunicationService.class)", "var_name": "log"}, {"original_string": "private static String relationQuery = \"OPTIONAL MATCH (sg:Structure)<-[:DEPENDS]-(g) \"\n\t\t\t+ \"OPTIONAL MATCH (sc:Structure)<-[:BELONGS]-(c:Class)<-[:DEPENDS]-(g) \"\n\t\t\t+ \"WITH COALESCE(sg, sc) as s, c, g \"\n\t\t\t+ \"WITH s, c, g, \"\n\t\t\t+ \"collect( distinct {name: c.name, id: c.id}) as classes, \"\n\t\t\t+ \"collect( distinct {name: s.name, id: s.id}) as structures, \"\n\t\t\t+ \"HEAD(filter(x IN labels(g) WHERE x <> 'Visible' AND x <> 'Group')) as type \"\n\t\t\t+ \"RETURN DISTINCT \"\n\t\t\t+ \"g.id as id, \"\n\t\t\t+ \"g.name as name, \"\n\t\t\t+ \"g.filter as filter, \"\n\t\t\t+ \"g.displayName as displayName, \"\n\t\t\t+ \"g.users as internalCommunicationRule, \"\n\t\t\t+ \"type, \"\n\t\t\t+ \"CASE WHEN any(x in classes where x <> {name: null, id: null}) THEN classes END as classes, \"\n\t\t\t+ \"CASE WHEN any(x in structures where x <> {name: null, id: null}) THEN structures END as structures, \"\n\t\t\t+ \"CASE WHEN (g: ProfileGroup)-[:DEPENDS]->(:Structure) THEN 'StructureGroup' WHEN (g: ProfileGroup)-[:DEPENDS]->(:Class) THEN 'ClassGroup' END as subType\";", "modifier": "private static", "type": "String", "declarator": "relationQuery = \"OPTIONAL MATCH (sg:Structure)<-[:DEPENDS]-(g) \"\n\t\t\t+ \"OPTIONAL MATCH (sc:Structure)<-[:BELONGS]-(c:Class)<-[:DEPENDS]-(g) \"\n\t\t\t+ \"WITH COALESCE(sg, sc) as s, c, g \"\n\t\t\t+ \"WITH s, c, g, \"\n\t\t\t+ \"collect( distinct {name: c.name, id: c.id}) as classes, \"\n\t\t\t+ \"collect( distinct {name: s.name, id: s.id}) as structures, \"\n\t\t\t+ \"HEAD(filter(x IN labels(g) WHERE x <> 'Visible' AND x <> 'Group')) as type \"\n\t\t\t+ \"RETURN DISTINCT \"\n\t\t\t+ \"g.id as id, \"\n\t\t\t+ \"g.name as name, \"\n\t\t\t+ \"g.filter as filter, \"\n\t\t\t+ \"g.displayName as displayName, \"\n\t\t\t+ \"g.users as internalCommunicationRule, \"\n\t\t\t+ \"type, \"\n\t\t\t+ \"CASE WHEN any(x in classes where x <> {name: null, id: null}) THEN classes END as classes, \"\n\t\t\t+ \"CASE WHEN any(x in structures where x <> {name: null, id: null}) THEN structures END as structures, \"\n\t\t\t+ \"CASE WHEN (g: ProfileGroup)-[:DEPENDS]->(:Structure) THEN 'StructureGroup' WHEN (g: ProfileGroup)-[:DEPENDS]->(:Class) THEN 'ClassGroup' END as subType\"", "var_name": "relationQuery"}], "methods": [{"identifier": "addLink", "parameters": "(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void addLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void addLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.addLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "removeLink", "parameters": "(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void removeLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void removeLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.removeLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "addLinkWithUsers", "parameters": "(String groupId, Direction direction, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void addLinkWithUsers(String groupId, Direction direction, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void addLinkWithUsers(String groupId, Direction direction, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.addLinkWithUsers(String groupId, Direction direction, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "addLinkWithUsers", "parameters": "(Map<String, Direction> params, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void addLinkWithUsers(Map<String, Direction> params, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void addLinkWithUsers(Map<String, Direction> params, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.addLinkWithUsers(Map<String, Direction> params, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "removeLinkWithUsers", "parameters": "(String groupId, Direction direction, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void removeLinkWithUsers(String groupId, Direction direction, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void removeLinkWithUsers(String groupId, Direction direction, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.removeLinkWithUsers(String groupId, Direction direction, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "communiqueWith", "parameters": "(String groupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void communiqueWith(String groupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void communiqueWith(String groupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.communiqueWith(String groupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "addLinkBetweenRelativeAndStudent", "parameters": "(String groupId, Direction direction,\n\t\t\tHandler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void addLinkBetweenRelativeAndStudent(String groupId, Direction direction,\n\t\t\tHandler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void addLinkBetweenRelativeAndStudent(String groupId, Direction direction,\n\t\t\tHandler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.addLinkBetweenRelativeAndStudent(String groupId, Direction direction,\n\t\t\tHandler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "removeLinkBetweenRelativeAndStudent", "parameters": "(String groupId, Direction direction,\n\t\t\tHandler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void removeLinkBetweenRelativeAndStudent(String groupId, Direction direction,\n\t\t\tHandler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void removeLinkBetweenRelativeAndStudent(String groupId, Direction direction,\n\t\t\tHandler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.removeLinkBetweenRelativeAndStudent(String groupId, Direction direction,\n\t\t\tHandler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "initDefaultRules", "parameters": "(JsonArray structureIds, JsonObject defaultRules,\n\t\t\tfinal Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void initDefaultRules(JsonArray structureIds, JsonObject defaultRules,\n\t\t\tfinal Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void initDefaultRules(JsonArray structureIds, JsonObject defaultRules,\n\t\t\tfinal Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.initDefaultRules(JsonArray structureIds, JsonObject defaultRules,\n\t\t\tfinal Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "initDefaultRules", "parameters": "(JsonArray structureIds, String attr, JsonObject defaultRules,\n\t\t\tfinal StatementsBuilder existingGroups, final StatementsBuilder newGroups)", "modifiers": "private", "return": "void", "signature": "void initDefaultRules(JsonArray structureIds, String attr, JsonObject defaultRules,\n\t\t\tfinal StatementsBuilder existingGroups, final StatementsBuilder newGroups)", "full_signature": "private void initDefaultRules(JsonArray structureIds, String attr, JsonObject defaultRules,\n\t\t\tfinal StatementsBuilder existingGroups, final StatementsBuilder newGroups)", "class_method_signature": "DefaultCommunicationService.initDefaultRules(JsonArray structureIds, String attr, JsonObject defaultRules,\n\t\t\tfinal StatementsBuilder existingGroups, final StatementsBuilder newGroups)", "testcase": false, "constructor": false}, {"identifier": "applyDefaultRules", "parameters": "(JsonArray structureIds, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void applyDefaultRules(JsonArray structureIds, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void applyDefaultRules(JsonArray structureIds, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.applyDefaultRules(JsonArray structureIds, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "applyRules", "parameters": "(String groupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void applyRules(String groupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void applyRules(String groupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.applyRules(String groupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "removeRules", "parameters": "(String structureId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void removeRules(String structureId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void removeRules(String structureId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.removeRules(String structureId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "visibleUsers", "parameters": "(String userId, String structureId, JsonArray expectedTypes, boolean itSelf,\n\t\t\t\t\t\t\t boolean myGroup, boolean profile, String preFilter, String customReturn, JsonObject additionnalParams,\n\t\t\t\t\t\t\t final Handler<Either<String, JsonArray>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void visibleUsers(String userId, String structureId, JsonArray expectedTypes, boolean itSelf,\n\t\t\t\t\t\t\t boolean myGroup, boolean profile, String preFilter, String customReturn, JsonObject additionnalParams,\n\t\t\t\t\t\t\t final Handler<Either<String, JsonArray>> handler)", "full_signature": "@Override public void visibleUsers(String userId, String structureId, JsonArray expectedTypes, boolean itSelf,\n\t\t\t\t\t\t\t boolean myGroup, boolean profile, String preFilter, String customReturn, JsonObject additionnalParams,\n\t\t\t\t\t\t\t final Handler<Either<String, JsonArray>> handler)", "class_method_signature": "DefaultCommunicationService.visibleUsers(String userId, String structureId, JsonArray expectedTypes, boolean itSelf,\n\t\t\t\t\t\t\t boolean myGroup, boolean profile, String preFilter, String customReturn, JsonObject additionnalParams,\n\t\t\t\t\t\t\t final Handler<Either<String, JsonArray>> handler)", "testcase": false, "constructor": false}, {"identifier": "visibleUsers", "parameters": "(String userId, String structureId, JsonArray expectedTypes, boolean itSelf,\n\t\t\tboolean myGroup, boolean profile, String preFilter, String customReturn, JsonObject additionnalParams, String userProfile,\n\t\t\tfinal Handler<Either<String, JsonArray>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void visibleUsers(String userId, String structureId, JsonArray expectedTypes, boolean itSelf,\n\t\t\tboolean myGroup, boolean profile, String preFilter, String customReturn, JsonObject additionnalParams, String userProfile,\n\t\t\tfinal Handler<Either<String, JsonArray>> handler)", "full_signature": "@Override public void visibleUsers(String userId, String structureId, JsonArray expectedTypes, boolean itSelf,\n\t\t\tboolean myGroup, boolean profile, String preFilter, String customReturn, JsonObject additionnalParams, String userProfile,\n\t\t\tfinal Handler<Either<String, JsonArray>> handler)", "class_method_signature": "DefaultCommunicationService.visibleUsers(String userId, String structureId, JsonArray expectedTypes, boolean itSelf,\n\t\t\tboolean myGroup, boolean profile, String preFilter, String customReturn, JsonObject additionnalParams, String userProfile,\n\t\t\tfinal Handler<Either<String, JsonArray>> handler)", "testcase": false, "constructor": false}, {"identifier": "usersCanSeeMe", "parameters": "(String userId, Handler<Either<String, JsonArray>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void usersCanSeeMe(String userId, Handler<Either<String, JsonArray>> handler)", "full_signature": "@Override public void usersCanSeeMe(String userId, Handler<Either<String, JsonArray>> handler)", "class_method_signature": "DefaultCommunicationService.usersCanSeeMe(String userId, Handler<Either<String, JsonArray>> handler)", "testcase": false, "constructor": false}, {"identifier": "visibleProfilsGroups", "parameters": "(String userId, String customReturn, JsonObject additionnalParams,\n\t\t\tString preFilter, Handler<Either<String, JsonArray>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void visibleProfilsGroups(String userId, String customReturn, JsonObject additionnalParams,\n\t\t\tString preFilter, Handler<Either<String, JsonArray>> handler)", "full_signature": "@Override public void visibleProfilsGroups(String userId, String customReturn, JsonObject additionnalParams,\n\t\t\tString preFilter, Handler<Either<String, JsonArray>> handler)", "class_method_signature": "DefaultCommunicationService.visibleProfilsGroups(String userId, String customReturn, JsonObject additionnalParams,\n\t\t\tString preFilter, Handler<Either<String, JsonArray>> handler)", "testcase": false, "constructor": false}, {"identifier": "visibleManualGroups", "parameters": "(String userId, String customReturn, JsonObject additionnalParams,\n\t\t\tHandler<Either<String, JsonArray>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void visibleManualGroups(String userId, String customReturn, JsonObject additionnalParams,\n\t\t\tHandler<Either<String, JsonArray>> handler)", "full_signature": "@Override public void visibleManualGroups(String userId, String customReturn, JsonObject additionnalParams,\n\t\t\tHandler<Either<String, JsonArray>> handler)", "class_method_signature": "DefaultCommunicationService.visibleManualGroups(String userId, String customReturn, JsonObject additionnalParams,\n\t\t\tHandler<Either<String, JsonArray>> handler)", "testcase": false, "constructor": false}, {"identifier": "getOutgoingRelations", "parameters": "(String id, Handler<Either<String, JsonArray>> results)", "modifiers": "@Override public", "return": "void", "signature": "void getOutgoingRelations(String id, Handler<Either<String, JsonArray>> results)", "full_signature": "@Override public void getOutgoingRelations(String id, Handler<Either<String, JsonArray>> results)", "class_method_signature": "DefaultCommunicationService.getOutgoingRelations(String id, Handler<Either<String, JsonArray>> results)", "testcase": false, "constructor": false}, {"identifier": "getIncomingRelations", "parameters": "(String id, Handler<Either<String, JsonArray>> results)", "modifiers": "@Override public", "return": "void", "signature": "void getIncomingRelations(String id, Handler<Either<String, JsonArray>> results)", "full_signature": "@Override public void getIncomingRelations(String id, Handler<Either<String, JsonArray>> results)", "class_method_signature": "DefaultCommunicationService.getIncomingRelations(String id, Handler<Either<String, JsonArray>> results)", "testcase": false, "constructor": false}, {"identifier": "safelyRemoveLinkWithUsers", "parameters": "(String groupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void safelyRemoveLinkWithUsers(String groupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void safelyRemoveLinkWithUsers(String groupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.safelyRemoveLinkWithUsers(String groupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "getDirections", "parameters": "(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void getDirections(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void getDirections(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.getDirections(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "addLinkCheckOnly", "parameters": "(String startGroupId, String endGroupId, UserInfos userInfos, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void addLinkCheckOnly(String startGroupId, String endGroupId, UserInfos userInfos, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void addLinkCheckOnly(String startGroupId, String endGroupId, UserInfos userInfos, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.addLinkCheckOnly(String startGroupId, String endGroupId, UserInfos userInfos, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "getRelationsOfGroup", "parameters": "(String groupId)", "modifiers": "private", "return": "CompletableFuture<JsonObject>", "signature": "CompletableFuture<JsonObject> getRelationsOfGroup(String groupId)", "full_signature": "private CompletableFuture<JsonObject> getRelationsOfGroup(String groupId)", "class_method_signature": "DefaultCommunicationService.getRelationsOfGroup(String groupId)", "testcase": false, "constructor": false}, {"identifier": "removeRelations", "parameters": "(String sendingGroupId, String receivingGroupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void removeRelations(String sendingGroupId, String receivingGroupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void removeRelations(String sendingGroupId, String receivingGroupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.removeRelations(String sendingGroupId, String receivingGroupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "processChangeDirectionAfterAddingLink", "parameters": "(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "@Override public", "return": "void", "signature": "void processChangeDirectionAfterAddingLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "@Override public void processChangeDirectionAfterAddingLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.processChangeDirectionAfterAddingLink(String startGroupId, String endGroupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "computeDirectionToRemove", "parameters": "(boolean hasIncomingRelationship, boolean hasOutgoingRelationship)", "modifiers": "public", "return": "Direction", "signature": "Direction computeDirectionToRemove(boolean hasIncomingRelationship, boolean hasOutgoingRelationship)", "full_signature": "public Direction computeDirectionToRemove(boolean hasIncomingRelationship, boolean hasOutgoingRelationship)", "class_method_signature": "DefaultCommunicationService.computeDirectionToRemove(boolean hasIncomingRelationship, boolean hasOutgoingRelationship)", "testcase": false, "constructor": false}, {"identifier": "computeNextDirection", "parameters": "(Direction directionToRemove)", "modifiers": "public", "return": "Direction", "signature": "Direction computeNextDirection(Direction directionToRemove)", "full_signature": "public Direction computeNextDirection(Direction directionToRemove)", "class_method_signature": "DefaultCommunicationService.computeNextDirection(Direction directionToRemove)", "testcase": false, "constructor": false}, {"identifier": "formatDirection", "parameters": "(String dbDirection)", "modifiers": "private", "return": "CommunicationService.Direction", "signature": "CommunicationService.Direction formatDirection(String dbDirection)", "full_signature": "private CommunicationService.Direction formatDirection(String dbDirection)", "class_method_signature": "DefaultCommunicationService.formatDirection(String dbDirection)", "testcase": false, "constructor": false}, {"identifier": "computeWarningMessageForAddLinkCheck", "parameters": "(Direction startDirection, Direction endDirection)", "modifiers": "public", "return": "String", "signature": "String computeWarningMessageForAddLinkCheck(Direction startDirection, Direction endDirection)", "full_signature": "public String computeWarningMessageForAddLinkCheck(Direction startDirection, Direction endDirection)", "class_method_signature": "DefaultCommunicationService.computeWarningMessageForAddLinkCheck(Direction startDirection, Direction endDirection)", "testcase": false, "constructor": false}, {"identifier": "getGroupFilterAndSubType", "parameters": "(String groupId, Handler<Either<String, JsonObject>> handler)", "modifiers": "private", "return": "void", "signature": "void getGroupFilterAndSubType(String groupId, Handler<Either<String, JsonObject>> handler)", "full_signature": "private void getGroupFilterAndSubType(String groupId, Handler<Either<String, JsonObject>> handler)", "class_method_signature": "DefaultCommunicationService.getGroupFilterAndSubType(String groupId, Handler<Either<String, JsonObject>> handler)", "testcase": false, "constructor": false}, {"identifier": "isImpossibleToChangeDirectionGroupForAddLink", "parameters": "(String filter, String subType, UserInfos userInfos)", "modifiers": "public", "return": "boolean", "signature": "boolean isImpossibleToChangeDirectionGroupForAddLink(String filter, String subType, UserInfos userInfos)", "full_signature": "public boolean isImpossibleToChangeDirectionGroupForAddLink(String filter, String subType, UserInfos userInfos)", "class_method_signature": "DefaultCommunicationService.isImpossibleToChangeDirectionGroupForAddLink(String filter, String subType, UserInfos userInfos)", "testcase": false, "constructor": false}, {"identifier": "computeNewDirectionAfterAddingLink", "parameters": "(String startGroupId, Direction startDirection, String endGroupId, Direction endDirection)", "modifiers": "public", "return": "Map<String, Direction>", "signature": "Map<String, Direction> computeNewDirectionAfterAddingLink(String startGroupId, Direction startDirection, String endGroupId, Direction endDirection)", "full_signature": "public Map<String, Direction> computeNewDirectionAfterAddingLink(String startGroupId, Direction startDirection, String endGroupId, Direction endDirection)", "class_method_signature": "DefaultCommunicationService.computeNewDirectionAfterAddingLink(String startGroupId, Direction startDirection, String endGroupId, Direction endDirection)", "testcase": false, "constructor": false}], "file": "communication/src/main/java/org/entcore/communication/services/impl/DefaultCommunicationService.java"}, "focal_method": {"identifier": "computeWarningMessageForAddLinkCheck", "parameters": "(Direction startDirection, Direction endDirection)", "modifiers": "public", "return": "String", "body": "public String computeWarningMessageForAddLinkCheck(Direction startDirection, Direction endDirection) {\n\t\tif (startDirection.equals(Direction.OUTGOING) && endDirection.equals(Direction.INCOMING)) {\n\t\t\treturn CommunicationService.WARNING_BOTH_GROUPS_USERS_CAN_COMMUNICATE;\n\t\t}\n\n\t\tif (startDirection.equals(Direction.OUTGOING)) {\n\t\t\treturn CommunicationService.WARNING_STARTGROUP_USERS_CAN_COMMUNICATE;\n\t\t}\n\n\t\tif (endDirection.equals(Direction.INCOMING)) {\n\t\t\treturn CommunicationService.WARNING_ENDGROUP_USERS_CAN_COMMUNICATE;\n\t\t}\n\n\t\treturn null;\n\t}", "signature": "String computeWarningMessageForAddLinkCheck(Direction startDirection, Direction endDirection)", "full_signature": "public String computeWarningMessageForAddLinkCheck(Direction startDirection, Direction endDirection)", "class_method_signature": "DefaultCommunicationService.computeWarningMessageForAddLinkCheck(Direction startDirection, Direction endDirection)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "equals"]}, "repository": {"repo_id": 19492803, "url": "https://github.com/opendigitaleducation/entcore", "stars": 32, "created": "5/6/2014 12:11:28 PM +00:00", "updates": "2020-01-23T14:00:28+00:00", "fork": "False", "license": "licensed"}}