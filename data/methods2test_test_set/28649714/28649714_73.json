{"test_class": {"identifier": "HandicapGroupSetServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    HandicapGroupSetService service;", "modifier": "@InjectMocks", "type": "HandicapGroupSetService", "declarator": "service", "var_name": "service"}, {"original_string": "@Mock\n    HandicapGroupSetGateway gateway;", "modifier": "@Mock", "type": "HandicapGroupSetGateway", "declarator": "gateway", "var_name": "gateway"}, {"original_string": "@Mock\n    HandicapGroupEntityService handicapGroupEntityService;", "modifier": "@Mock", "type": "HandicapGroupEntityService", "declarator": "handicapGroupEntityService", "var_name": "handicapGroupEntityService"}], "file": "service/src/test/java/org/coner/core/domain/service/HandicapGroupSetServiceTest.java"}, "test_case": {"identifier": "testIssue157", "parameters": "()", "modifiers": "@Test /** * @see https://github.com/caeos/coner-core/issues/157 */ public", "return": "void", "body": "@Test\n    /**\n     * @see https://github.com/caeos/coner-core/issues/157\n     */\n    public void testIssue157() throws EntityNotFoundException, AddEntityException {\n        HandicapGroupSetAddPayload payload = mock(HandicapGroupSetAddPayload.class);\n        HandicapGroup domainEntity = DomainEntityTestUtils.fullHandicapGroup();\n        when(payload.getHandicapGroupIds()).thenReturn(Sets.newHashSet(domainEntity.getId()));\n        when(handicapGroupEntityService.getById(domainEntity.getId())).thenReturn(domainEntity);\n        HandicapGroupSet domainSetEntity = mock(HandicapGroupSet.class);\n        when(gateway.add(payload)).thenReturn(domainSetEntity);\n\n        HandicapGroupSet actual = service.add(payload);\n\n        verify(payload).setHandicapGroups(\n                argThat(argument -> argument.contains(domainEntity))\n        );\n        verify(gateway).add(payload);\n        assertThat(actual).isSameAs(domainSetEntity);\n    }", "signature": "void testIssue157()", "full_signature": "@Test /** * @see https://github.com/caeos/coner-core/issues/157 */ public void testIssue157()", "class_method_signature": "HandicapGroupSetServiceTest.testIssue157()", "testcase": true, "constructor": false, "invocations": ["mock", "fullHandicapGroup", "thenReturn", "when", "getHandicapGroupIds", "newHashSet", "getId", "thenReturn", "when", "getById", "getId", "mock", "thenReturn", "when", "add", "add", "setHandicapGroups", "verify", "argThat", "contains", "add", "verify", "isSameAs", "assertThat"]}, "focal_class": {"identifier": "HandicapGroupSetService", "superclass": "extends AbstractEntityService<\n        HandicapGroupSet,\n        HandicapGroupSetAddPayload,\n        HandicapGroupSetGateway>", "interfaces": "", "fields": [{"original_string": "private final HandicapGroupEntityService handicapGroupEntityService;", "modifier": "private final", "type": "HandicapGroupEntityService", "declarator": "handicapGroupEntityService", "var_name": "handicapGroupEntityService"}], "methods": [{"identifier": "HandicapGroupSetService", "parameters": "(\n            HandicapGroupSetGateway gateway,\n            HandicapGroupEntityService handicapGroupEntityService\n    )", "modifiers": "@Inject public", "return": "", "signature": " HandicapGroupSetService(\n            HandicapGroupSetGateway gateway,\n            HandicapGroupEntityService handicapGroupEntityService\n    )", "full_signature": "@Inject public  HandicapGroupSetService(\n            HandicapGroupSetGateway gateway,\n            HandicapGroupEntityService handicapGroupEntityService\n    )", "class_method_signature": "HandicapGroupSetService.HandicapGroupSetService(\n            HandicapGroupSetGateway gateway,\n            HandicapGroupEntityService handicapGroupEntityService\n    )", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(HandicapGroupSetAddPayload addPayload)", "modifiers": "@Override public", "return": "HandicapGroupSet", "signature": "HandicapGroupSet add(HandicapGroupSetAddPayload addPayload)", "full_signature": "@Override public HandicapGroupSet add(HandicapGroupSetAddPayload addPayload)", "class_method_signature": "HandicapGroupSetService.add(HandicapGroupSetAddPayload addPayload)", "testcase": false, "constructor": false}, {"identifier": "addToHandicapGroups", "parameters": "(HandicapGroupSet handicapGroupSet, HandicapGroup handicapGroup)", "modifiers": "public", "return": "HandicapGroupSet", "signature": "HandicapGroupSet addToHandicapGroups(HandicapGroupSet handicapGroupSet, HandicapGroup handicapGroup)", "full_signature": "public HandicapGroupSet addToHandicapGroups(HandicapGroupSet handicapGroupSet, HandicapGroup handicapGroup)", "class_method_signature": "HandicapGroupSetService.addToHandicapGroups(HandicapGroupSet handicapGroupSet, HandicapGroup handicapGroup)", "testcase": false, "constructor": false}], "file": "service/src/main/java/org/coner/core/domain/service/HandicapGroupSetService.java"}, "focal_method": {"identifier": "add", "parameters": "(HandicapGroupSetAddPayload addPayload)", "modifiers": "@Override public", "return": "HandicapGroupSet", "body": "@Override\n    public HandicapGroupSet add(HandicapGroupSetAddPayload addPayload) throws AddEntityException {\n        ImmutableSet.Builder<HandicapGroup> handicapGroupBuilder = ImmutableSet.builder();\n        try {\n            for (String handicapGroupId : addPayload.getHandicapGroupIds()) {\n                handicapGroupBuilder.add(handicapGroupEntityService.getById(handicapGroupId));\n            }\n        } catch (EntityNotFoundException e) {\n            throw new AddEntityException(e);\n        }\n        addPayload.setHandicapGroups(handicapGroupBuilder.build());\n        return gateway.add(addPayload);\n    }", "signature": "HandicapGroupSet add(HandicapGroupSetAddPayload addPayload)", "full_signature": "@Override public HandicapGroupSet add(HandicapGroupSetAddPayload addPayload)", "class_method_signature": "HandicapGroupSetService.add(HandicapGroupSetAddPayload addPayload)", "testcase": false, "constructor": false, "invocations": ["builder", "getHandicapGroupIds", "add", "getById", "setHandicapGroups", "build", "add"]}, "repository": {"repo_id": 28649714, "url": "https://github.com/caeos/coner-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1027, "license": "licensed"}}