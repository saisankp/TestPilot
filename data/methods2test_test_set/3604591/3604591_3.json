{"test_class": {"identifier": "JGitSourceReferencesProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "tycho-extras/tycho-sourceref-jgit/src/test/java/org/eclipse/tycho/extras/sourceref/jgit/JGitSourceReferencesProviderTest.java"}, "test_case": {"identifier": "testGetRelativePathNoCommonBasedir", "parameters": "()", "modifiers": "@Test(expected = MojoExecutionException.class) public", "return": "void", "body": "@Test(expected = MojoExecutionException.class)\n    public void testGetRelativePathNoCommonBasedir() throws MojoExecutionException {\n        JGitSourceReferencesProvider provider = new JGitSourceReferencesProvider();\n        File projectBasedir = new File(\"/foo/test/bar\");\n        File repoRoot = new File(\"/baz\");\n        provider.getRelativePath(projectBasedir, repoRoot);\n    }", "signature": "void testGetRelativePathNoCommonBasedir()", "full_signature": "@Test(expected = MojoExecutionException.class) public void testGetRelativePathNoCommonBasedir()", "class_method_signature": "JGitSourceReferencesProviderTest.testGetRelativePathNoCommonBasedir()", "testcase": true, "constructor": false, "invocations": ["getRelativePath"]}, "focal_class": {"identifier": "JGitSourceReferencesProvider", "superclass": "", "interfaces": "implements SourceReferencesProvider", "fields": [], "methods": [{"identifier": "getSourceReferencesHeader", "parameters": "(MavenProject project, ScmUrl scmUrl)", "modifiers": "@Override public", "return": "String", "signature": "String getSourceReferencesHeader(MavenProject project, ScmUrl scmUrl)", "full_signature": "@Override public String getSourceReferencesHeader(MavenProject project, ScmUrl scmUrl)", "class_method_signature": "JGitSourceReferencesProvider.getSourceReferencesHeader(MavenProject project, ScmUrl scmUrl)", "testcase": false, "constructor": false}, {"identifier": "resolveHead", "parameters": "(Repository repo)", "modifiers": "private", "return": "ObjectId", "signature": "ObjectId resolveHead(Repository repo)", "full_signature": "private ObjectId resolveHead(Repository repo)", "class_method_signature": "JGitSourceReferencesProvider.resolveHead(Repository repo)", "testcase": false, "constructor": false}, {"identifier": "findTagForHead", "parameters": "(Git git, ObjectId head)", "modifiers": "private", "return": "String", "signature": "String findTagForHead(Git git, ObjectId head)", "full_signature": "private String findTagForHead(Git git, ObjectId head)", "class_method_signature": "JGitSourceReferencesProvider.findTagForHead(Git git, ObjectId head)", "testcase": false, "constructor": false}, {"identifier": "getRelativePath", "parameters": "(File subDir, File parentDir)", "modifiers": "", "return": "String", "signature": "String getRelativePath(File subDir, File parentDir)", "full_signature": " String getRelativePath(File subDir, File parentDir)", "class_method_signature": "JGitSourceReferencesProvider.getRelativePath(File subDir, File parentDir)", "testcase": false, "constructor": false}], "file": "tycho-extras/tycho-sourceref-jgit/src/main/java/org/eclipse/tycho/extras/sourceref/jgit/JGitSourceReferencesProvider.java"}, "focal_method": {"identifier": "getRelativePath", "parameters": "(File subDir, File parentDir)", "modifiers": "", "return": "String", "body": "String getRelativePath(File subDir, File parentDir) throws MojoExecutionException {\n        URI subDirUri;\n        URI relativeUri;\n        try {\n            // have to canonicalize before comparing on case-insensitive filesystems\n            subDirUri = subDir.getCanonicalFile().toURI();\n            relativeUri = parentDir.getCanonicalFile().toURI().relativize(subDirUri);\n        } catch (IOException e) {\n            throw new MojoExecutionException(e.getMessage(), e);\n        }\n        if (relativeUri.equals(subDirUri)) {\n            throw new MojoExecutionException(subDir + \" is not a subdir of \" + parentDir);\n        }\n        String relative = relativeUri.getPath();\n        // remove surrounding slashes\n        if (relative.startsWith(\"/\")) {\n            relative = relative.substring(1);\n        }\n        if (relative.endsWith(\"/\")) {\n            relative = relative.substring(0, relative.length() - 1);\n        }\n        return relative;\n    }", "signature": "String getRelativePath(File subDir, File parentDir)", "full_signature": " String getRelativePath(File subDir, File parentDir)", "class_method_signature": "JGitSourceReferencesProvider.getRelativePath(File subDir, File parentDir)", "testcase": false, "constructor": false, "invocations": ["toURI", "getCanonicalFile", "relativize", "toURI", "getCanonicalFile", "getMessage", "equals", "getPath", "startsWith", "substring", "endsWith", "substring", "length"]}, "repository": {"repo_id": 3604591, "url": "https://github.com/eclipse/tycho.extras", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 9, "size": 1014, "license": "licensed"}}