{"test_class": {"identifier": "KiePMMLRegressionTableClassificationFactoryTest", "superclass": "extends AbstractKiePMMLRegressionTableRegressionFactoryTest", "interfaces": "", "fields": [{"original_string": "private final static List<RegressionModel.NormalizationMethod> SUPPORTED_NORMALIZATION_METHODS =\n            Arrays.asList(RegressionModel.NormalizationMethod.SOFTMAX,\n                          RegressionModel.NormalizationMethod.SIMPLEMAX,\n                          RegressionModel.NormalizationMethod.NONE,\n                          RegressionModel.NormalizationMethod.LOGIT,\n                          RegressionModel.NormalizationMethod.PROBIT,\n                          RegressionModel.NormalizationMethod.CLOGLOG,\n                          RegressionModel.NormalizationMethod.CAUCHIT);", "modifier": "private final static", "type": "List<RegressionModel.NormalizationMethod>", "declarator": "SUPPORTED_NORMALIZATION_METHODS =\n            Arrays.asList(RegressionModel.NormalizationMethod.SOFTMAX,\n                          RegressionModel.NormalizationMethod.SIMPLEMAX,\n                          RegressionModel.NormalizationMethod.NONE,\n                          RegressionModel.NormalizationMethod.LOGIT,\n                          RegressionModel.NormalizationMethod.PROBIT,\n                          RegressionModel.NormalizationMethod.CLOGLOG,\n                          RegressionModel.NormalizationMethod.CAUCHIT)", "var_name": "SUPPORTED_NORMALIZATION_METHODS"}, {"original_string": "private final static List<RegressionModel.NormalizationMethod> UNSUPPORTED_NORMALIZATION_METHODS =\n            Arrays.asList(RegressionModel.NormalizationMethod.EXP,\n                          RegressionModel.NormalizationMethod.LOGLOG);", "modifier": "private final static", "type": "List<RegressionModel.NormalizationMethod>", "declarator": "UNSUPPORTED_NORMALIZATION_METHODS =\n            Arrays.asList(RegressionModel.NormalizationMethod.EXP,\n                          RegressionModel.NormalizationMethod.LOGLOG)", "var_name": "UNSUPPORTED_NORMALIZATION_METHODS"}, {"original_string": "private CompilationUnit compilationUnit;", "modifier": "private", "type": "CompilationUnit", "declarator": "compilationUnit", "var_name": "compilationUnit"}, {"original_string": "private ClassOrInterfaceDeclaration modelTemplate;", "modifier": "private", "type": "ClassOrInterfaceDeclaration", "declarator": "modelTemplate", "var_name": "modelTemplate"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableClassificationFactoryTest.java"}, "test_case": {"identifier": "populateIsBinaryMethod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void populateIsBinaryMethod() {\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.CATEGORICAL, 1, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, false);\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.CATEGORICAL, 2, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, true);\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.CATEGORICAL, 3, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, false);\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.CONTINUOUS, 1, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, false);\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.CONTINUOUS, 2, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, false);\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.CONTINUOUS, 3, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, false);\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.ORDINAL, 1, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, false);\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.ORDINAL, 2, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, false);\n        KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(OpType.ORDINAL, 3, modelTemplate);\n        commonEvaluateIsBinaryMethod(modelTemplate, false);\n    }", "signature": "void populateIsBinaryMethod()", "full_signature": "@Test public void populateIsBinaryMethod()", "class_method_signature": "KiePMMLRegressionTableClassificationFactoryTest.populateIsBinaryMethod()", "testcase": true, "constructor": false, "invocations": ["populateIsBinaryMethod", "commonEvaluateIsBinaryMethod", "populateIsBinaryMethod", "commonEvaluateIsBinaryMethod", "populateIsBinaryMethod", "commonEvaluateIsBinaryMethod", "populateIsBinaryMethod", "commonEvaluateIsBinaryMethod", "populateIsBinaryMethod", "commonEvaluateIsBinaryMethod", "populateIsBinaryMethod", "commonEvaluateIsBinaryMethod", "populateIsBinaryMethod", "commonEvaluateIsBinaryMethod", "populateIsBinaryMethod", "commonEvaluateIsBinaryMethod", "populateIsBinaryMethod", "commonEvaluateIsBinaryMethod"]}, "focal_class": {"identifier": "KiePMMLRegressionTableClassificationFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String KIE_PMML_REGRESSION_TABLE_CLASSIFICATION_TEMPLATE_JAVA =\n            \"KiePMMLRegressionTableClassificationTemplate.tmpl\";", "modifier": "public static final", "type": "String", "declarator": "KIE_PMML_REGRESSION_TABLE_CLASSIFICATION_TEMPLATE_JAVA =\n            \"KiePMMLRegressionTableClassificationTemplate.tmpl\"", "var_name": "KIE_PMML_REGRESSION_TABLE_CLASSIFICATION_TEMPLATE_JAVA"}, {"original_string": "public static final String KIE_PMML_REGRESSION_TABLE_CLASSIFICATION_TEMPLATE =\n            \"KiePMMLRegressionTableClassificationTemplate\";", "modifier": "public static final", "type": "String", "declarator": "KIE_PMML_REGRESSION_TABLE_CLASSIFICATION_TEMPLATE =\n            \"KiePMMLRegressionTableClassificationTemplate\"", "var_name": "KIE_PMML_REGRESSION_TABLE_CLASSIFICATION_TEMPLATE"}, {"original_string": "private static final Logger logger =\n            LoggerFactory.getLogger(KiePMMLRegressionTableClassificationFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger =\n            LoggerFactory.getLogger(KiePMMLRegressionTableClassificationFactory.class.getName())", "var_name": "logger"}, {"original_string": "private static final String MAIN_CLASS_NOT_FOUND = \"Main class not found\";", "modifier": "private static final", "type": "String", "declarator": "MAIN_CLASS_NOT_FOUND = \"Main class not found\"", "var_name": "MAIN_CLASS_NOT_FOUND"}, {"original_string": "private static final String KIE_PMML_GET_PROBABILITY_MAP_METHOD_TEMPLATE_JAVA =\n            \"KiePMMLGetProbabilityMapMethodTemplate.tmpl\";", "modifier": "private static final", "type": "String", "declarator": "KIE_PMML_GET_PROBABILITY_MAP_METHOD_TEMPLATE_JAVA =\n            \"KiePMMLGetProbabilityMapMethodTemplate.tmpl\"", "var_name": "KIE_PMML_GET_PROBABILITY_MAP_METHOD_TEMPLATE_JAVA"}, {"original_string": "private static final String KIE_PMML_GET_PROBABILITY_MAP_METHOD_TEMPLATE = \"KiePMMLGetProbabilityMapMethodTemplate\";", "modifier": "private static final", "type": "String", "declarator": "KIE_PMML_GET_PROBABILITY_MAP_METHOD_TEMPLATE = \"KiePMMLGetProbabilityMapMethodTemplate\"", "var_name": "KIE_PMML_GET_PROBABILITY_MAP_METHOD_TEMPLATE"}, {"original_string": "private static AtomicInteger classArity = new AtomicInteger(0);", "modifier": "private static", "type": "AtomicInteger", "declarator": "classArity = new AtomicInteger(0)", "var_name": "classArity"}, {"original_string": "private static CompilationUnit templateEvaluate;", "modifier": "private static", "type": "CompilationUnit", "declarator": "templateEvaluate", "var_name": "templateEvaluate"}, {"original_string": "private static CompilationUnit cloneEvaluate;", "modifier": "private static", "type": "CompilationUnit", "declarator": "cloneEvaluate", "var_name": "cloneEvaluate"}], "methods": [{"identifier": "KiePMMLRegressionTableClassificationFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " KiePMMLRegressionTableClassificationFactory()", "full_signature": "private  KiePMMLRegressionTableClassificationFactory()", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.KiePMMLRegressionTableClassificationFactory()", "testcase": false, "constructor": true}, {"identifier": "getRegressionTables", "parameters": "(final List<RegressionTable> regressionTables, final RegressionModel.NormalizationMethod normalizationMethod, final OpType opType, final List<KiePMMLOutputField> outputFields, final String targetField, final String packageName)", "modifiers": "public static", "return": "Map<String, KiePMMLTableSourceCategory>", "signature": "Map<String, KiePMMLTableSourceCategory> getRegressionTables(final List<RegressionTable> regressionTables, final RegressionModel.NormalizationMethod normalizationMethod, final OpType opType, final List<KiePMMLOutputField> outputFields, final String targetField, final String packageName)", "full_signature": "public static Map<String, KiePMMLTableSourceCategory> getRegressionTables(final List<RegressionTable> regressionTables, final RegressionModel.NormalizationMethod normalizationMethod, final OpType opType, final List<KiePMMLOutputField> outputFields, final String targetField, final String packageName)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.getRegressionTables(final List<RegressionTable> regressionTables, final RegressionModel.NormalizationMethod normalizationMethod, final OpType opType, final List<KiePMMLOutputField> outputFields, final String targetField, final String packageName)", "testcase": false, "constructor": false}, {"identifier": "getRegressionTable", "parameters": "(final LinkedHashMap<String, KiePMMLTableSourceCategory> regressionTablesMap, final RegressionModel.NormalizationMethod normalizationMethod, final OpType opType, final List<KiePMMLOutputField> outputFields, final String targetField, final String packageName)", "modifiers": "public static", "return": "Map.Entry<String, String>", "signature": "Map.Entry<String, String> getRegressionTable(final LinkedHashMap<String, KiePMMLTableSourceCategory> regressionTablesMap, final RegressionModel.NormalizationMethod normalizationMethod, final OpType opType, final List<KiePMMLOutputField> outputFields, final String targetField, final String packageName)", "full_signature": "public static Map.Entry<String, String> getRegressionTable(final LinkedHashMap<String, KiePMMLTableSourceCategory> regressionTablesMap, final RegressionModel.NormalizationMethod normalizationMethod, final OpType opType, final List<KiePMMLOutputField> outputFields, final String targetField, final String packageName)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.getRegressionTable(final LinkedHashMap<String, KiePMMLTableSourceCategory> regressionTablesMap, final RegressionModel.NormalizationMethod normalizationMethod, final OpType opType, final List<KiePMMLOutputField> outputFields, final String targetField, final String packageName)", "testcase": false, "constructor": false}, {"identifier": "setConstructor", "parameters": "(final ConstructorDeclaration constructorDeclaration,\n                               final SimpleName generatedClassName, final String targetField,\n                               final REGRESSION_NORMALIZATION_METHOD regressionNormalizationMethod,\n                               final OP_TYPE opType)", "modifiers": "static", "return": "void", "signature": "void setConstructor(final ConstructorDeclaration constructorDeclaration,\n                               final SimpleName generatedClassName, final String targetField,\n                               final REGRESSION_NORMALIZATION_METHOD regressionNormalizationMethod,\n                               final OP_TYPE opType)", "full_signature": "static void setConstructor(final ConstructorDeclaration constructorDeclaration,\n                               final SimpleName generatedClassName, final String targetField,\n                               final REGRESSION_NORMALIZATION_METHOD regressionNormalizationMethod,\n                               final OP_TYPE opType)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.setConstructor(final ConstructorDeclaration constructorDeclaration,\n                               final SimpleName generatedClassName, final String targetField,\n                               final REGRESSION_NORMALIZATION_METHOD regressionNormalizationMethod,\n                               final OP_TYPE opType)", "testcase": false, "constructor": false}, {"identifier": "addMapPopulation", "parameters": "(final BlockStmt body,\n                                 final LinkedHashMap<String, KiePMMLTableSourceCategory> regressionTablesMap)", "modifiers": "static", "return": "void", "signature": "void addMapPopulation(final BlockStmt body,\n                                 final LinkedHashMap<String, KiePMMLTableSourceCategory> regressionTablesMap)", "full_signature": "static void addMapPopulation(final BlockStmt body,\n                                 final LinkedHashMap<String, KiePMMLTableSourceCategory> regressionTablesMap)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.addMapPopulation(final BlockStmt body,\n                                 final LinkedHashMap<String, KiePMMLTableSourceCategory> regressionTablesMap)", "testcase": false, "constructor": false}, {"identifier": "populateOutputFieldsMap", "parameters": "(final ClassOrInterfaceDeclaration tableTemplate,\n                                                final List<KiePMMLOutputField> outputFields)", "modifiers": "static", "return": "void", "signature": "void populateOutputFieldsMap(final ClassOrInterfaceDeclaration tableTemplate,\n                                                final List<KiePMMLOutputField> outputFields)", "full_signature": "static void populateOutputFieldsMap(final ClassOrInterfaceDeclaration tableTemplate,\n                                                final List<KiePMMLOutputField> outputFields)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.populateOutputFieldsMap(final ClassOrInterfaceDeclaration tableTemplate,\n                                                final List<KiePMMLOutputField> outputFields)", "testcase": false, "constructor": false}, {"identifier": "populateOutputFieldsMapWithProbability", "parameters": "(final BlockStmt body,\n                                                               final List<KiePMMLOutputField> outputFields)", "modifiers": "static", "return": "void", "signature": "void populateOutputFieldsMapWithProbability(final BlockStmt body,\n                                                               final List<KiePMMLOutputField> outputFields)", "full_signature": "static void populateOutputFieldsMapWithProbability(final BlockStmt body,\n                                                               final List<KiePMMLOutputField> outputFields)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.populateOutputFieldsMapWithProbability(final BlockStmt body,\n                                                               final List<KiePMMLOutputField> outputFields)", "testcase": false, "constructor": false}, {"identifier": "populateGetProbabilityMapMethod", "parameters": "(final RegressionModel.NormalizationMethod normalizationMethod,\n                                                final ClassOrInterfaceDeclaration tableTemplate)", "modifiers": "static", "return": "void", "signature": "void populateGetProbabilityMapMethod(final RegressionModel.NormalizationMethod normalizationMethod,\n                                                final ClassOrInterfaceDeclaration tableTemplate)", "full_signature": "static void populateGetProbabilityMapMethod(final RegressionModel.NormalizationMethod normalizationMethod,\n                                                final ClassOrInterfaceDeclaration tableTemplate)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.populateGetProbabilityMapMethod(final RegressionModel.NormalizationMethod normalizationMethod,\n                                                final ClassOrInterfaceDeclaration tableTemplate)", "testcase": false, "constructor": false}, {"identifier": "populateIsBinaryMethod", "parameters": "(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate)", "modifiers": "static", "return": "void", "signature": "void populateIsBinaryMethod(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate)", "full_signature": "static void populateIsBinaryMethod(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableClassificationFactory.java"}, "focal_method": {"identifier": "populateIsBinaryMethod", "parameters": "(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate)", "modifiers": "static", "return": "void", "body": "static void populateIsBinaryMethod(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate) {\n        try {\n            final MethodDeclaration methodDeclaration = tableTemplate.getMethodsByName(\"isBinary\").get(0);\n            boolean toReturn = Objects.equals(OpType.CATEGORICAL, opType) && size == 2;\n            BlockStmt blockStmt = new BlockStmt();\n            blockStmt.addStatement(new ReturnStmt(new BooleanLiteralExpr(toReturn)));\n            methodDeclaration.setBody(blockStmt);\n        } catch (Exception e) {\n            throw new KiePMMLInternalException(e.getMessage());\n        }\n    }", "signature": "void populateIsBinaryMethod(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate)", "full_signature": "static void populateIsBinaryMethod(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate)", "class_method_signature": "KiePMMLRegressionTableClassificationFactory.populateIsBinaryMethod(final OpType opType, int size,\n                                               final ClassOrInterfaceDeclaration tableTemplate)", "testcase": false, "constructor": false, "invocations": ["get", "getMethodsByName", "equals", "addStatement", "setBody", "getMessage"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}