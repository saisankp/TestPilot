{"test_class": {"identifier": "DefaultNetworkResponseParserFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String JACKSON_2_X_CLASS_NAME = \"com.fasterxml.jackson.databind.ObjectMapper\";", "modifier": "static final", "type": "String", "declarator": "JACKSON_2_X_CLASS_NAME = \"com.fasterxml.jackson.databind.ObjectMapper\"", "var_name": "JACKSON_2_X_CLASS_NAME"}, {"original_string": "static final String JACKSON_1_X_CLASS_NAME = \"org.codehaus.jackson.map.ObjectMapper\";", "modifier": "static final", "type": "String", "declarator": "JACKSON_1_X_CLASS_NAME = \"org.codehaus.jackson.map.ObjectMapper\"", "var_name": "JACKSON_1_X_CLASS_NAME"}, {"original_string": "static final String SIMPLE_XML_CLASS_NAME = \"org.simpleframework.xml.core.Persister\";", "modifier": "static final", "type": "String", "declarator": "SIMPLE_XML_CLASS_NAME = \"org.simpleframework.xml.core.Persister\"", "var_name": "SIMPLE_XML_CLASS_NAME"}, {"original_string": "private Builder builder;", "modifier": "private", "type": "Builder", "declarator": "builder", "var_name": "builder"}], "file": "volleyer/src/test/java/com/navercorp/volleyextensions/volleyer/factory/DefaultNetworkResponseParserFactoryTest.java"}, "test_case": {"identifier": "shouldNotAddSimpleXmlNetworkResponseParserIfNotPresent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldNotAddSimpleXmlNetworkResponseParserIfNotPresent() {\n\t\t// Given\n\t\tgiven(ClassUtils.isPresent(SIMPLE_XML_CLASS_NAME)).willReturn(false);\n\t\tMatcher<TypedNetworkResponseParser> matcher = argMatcher(new PlainMatcher(){\n\n\t\t\t@Override\n\t\t\tpublic boolean matches(Object item) {\n\t\t\t\tif (item instanceof SimpleXmlNetworkResponseParser) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}});\n\t\t// When\n\t\tDefaultNetworkResponseParserFactory.addSimpleXmlParserIfPresent(builder);\n\t\t// Then\n\t\tverify(builder, never()).addParser(Matchers.argThat(matcher));\n\t}", "signature": "void shouldNotAddSimpleXmlNetworkResponseParserIfNotPresent()", "full_signature": "@Test public void shouldNotAddSimpleXmlNetworkResponseParserIfNotPresent()", "class_method_signature": "DefaultNetworkResponseParserFactoryTest.shouldNotAddSimpleXmlNetworkResponseParserIfNotPresent()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "isPresent", "argMatcher", "addSimpleXmlParserIfPresent", "addParser", "verify", "never", "argThat"]}, "focal_class": {"identifier": "DefaultNetworkResponseParserFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String JACKSON_2_X_CLASS_NAME = \"com.fasterxml.jackson.databind.ObjectMapper\";", "modifier": "private static final", "type": "String", "declarator": "JACKSON_2_X_CLASS_NAME = \"com.fasterxml.jackson.databind.ObjectMapper\"", "var_name": "JACKSON_2_X_CLASS_NAME"}, {"original_string": "private static final String JACKSON_1_X_CLASS_NAME = \"org.codehaus.jackson.map.ObjectMapper\";", "modifier": "private static final", "type": "String", "declarator": "JACKSON_1_X_CLASS_NAME = \"org.codehaus.jackson.map.ObjectMapper\"", "var_name": "JACKSON_1_X_CLASS_NAME"}, {"original_string": "private static final String SIMPLE_XML_CLASS_NAME = \"org.simpleframework.xml.core.Persister\";", "modifier": "private static final", "type": "String", "declarator": "SIMPLE_XML_CLASS_NAME = \"org.simpleframework.xml.core.Persister\"", "var_name": "SIMPLE_XML_CLASS_NAME"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "NetworkResponseParser", "signature": "NetworkResponseParser create()", "full_signature": "public static NetworkResponseParser create()", "class_method_signature": "DefaultNetworkResponseParserFactory.create()", "testcase": false, "constructor": false}, {"identifier": "addJacksonParserIfPresent", "parameters": "(IntegratedNetworkResponseParser.Builder builder)", "modifiers": "public static", "return": "void", "signature": "void addJacksonParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "full_signature": "public static void addJacksonParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "class_method_signature": "DefaultNetworkResponseParserFactory.addJacksonParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "testcase": false, "constructor": false}, {"identifier": "addSimpleXmlParserIfPresent", "parameters": "(IntegratedNetworkResponseParser.Builder builder)", "modifiers": "public static", "return": "void", "signature": "void addSimpleXmlParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "full_signature": "public static void addSimpleXmlParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "class_method_signature": "DefaultNetworkResponseParserFactory.addSimpleXmlParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "testcase": false, "constructor": false}], "file": "volleyer/src/main/java/com/navercorp/volleyextensions/volleyer/factory/DefaultNetworkResponseParserFactory.java"}, "focal_method": {"identifier": "addSimpleXmlParserIfPresent", "parameters": "(IntegratedNetworkResponseParser.Builder builder)", "modifiers": "public static", "return": "void", "body": "public static void addSimpleXmlParserIfPresent(IntegratedNetworkResponseParser.Builder builder) {\n\t\tif(ClassUtils.isPresent(SIMPLE_XML_CLASS_NAME)) {\n\t\t\tbuilder.addParser(new SimpleXmlNetworkResponseParser());\n\t\t}\n\n\t\t// Do nothing if SimpleXml doesn't exist.\n\t}", "signature": "void addSimpleXmlParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "full_signature": "public static void addSimpleXmlParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "class_method_signature": "DefaultNetworkResponseParserFactory.addSimpleXmlParserIfPresent(IntegratedNetworkResponseParser.Builder builder)", "testcase": false, "constructor": false, "invocations": ["isPresent", "addParser"]}, "repository": {"repo_id": 17432029, "url": "https://github.com/naver/volley-extensions", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 138, "size": 666, "license": "licensed"}}