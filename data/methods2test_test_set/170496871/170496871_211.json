{"test_class": {"identifier": "IgniteModelStorageUtilTest", "superclass": "extends GridCommonAbstractTest", "interfaces": "", "fields": [{"original_string": "private final IgniteConfiguration cfg;", "modifier": "private final", "type": "IgniteConfiguration", "declarator": "cfg", "var_name": "cfg"}], "file": "modules/ml/src/test/java/org/apache/ignite/ml/inference/IgniteModelStorageUtilTest.java"}, "test_case": {"identifier": "testSaveModelWithTheSameName", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testSaveModelWithTheSameName() throws Exception {\n        try (Ignite ignite = startGrid(cfg)) {\n            IgniteModelStorageUtil.saveModel(ignite, i -> 0.42, \"mdl\");\n            IgniteModelStorageUtil.saveModel(ignite, i -> 0.42, \"mdl\");\n        }\n    }", "signature": "void testSaveModelWithTheSameName()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testSaveModelWithTheSameName()", "class_method_signature": "IgniteModelStorageUtilTest.testSaveModelWithTheSameName()", "testcase": true, "constructor": false, "invocations": ["startGrid", "saveModel", "saveModel"]}, "focal_class": {"identifier": "IgniteModelStorageUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String IGNITE_MDL_FOLDER = \"/ignite_models\";", "modifier": "private static final", "type": "String", "declarator": "IGNITE_MDL_FOLDER = \"/ignite_models\"", "var_name": "IGNITE_MDL_FOLDER"}], "methods": [{"identifier": "saveModel", "parameters": "(Ignite ignite,\n        IgniteModel<I, O> mdl, String name)", "modifiers": "public static", "return": "void", "signature": "void saveModel(Ignite ignite,\n        IgniteModel<I, O> mdl, String name)", "full_signature": "public static void saveModel(Ignite ignite,\n        IgniteModel<I, O> mdl, String name)", "class_method_signature": "IgniteModelStorageUtil.saveModel(Ignite ignite,\n        IgniteModel<I, O> mdl, String name)", "testcase": false, "constructor": false}, {"identifier": "removeModel", "parameters": "(Ignite ignite, String name)", "modifiers": "public static", "return": "void", "signature": "void removeModel(Ignite ignite, String name)", "full_signature": "public static void removeModel(Ignite ignite, String name)", "class_method_signature": "IgniteModelStorageUtil.removeModel(Ignite ignite, String name)", "testcase": false, "constructor": false}, {"identifier": "getModel", "parameters": "(Ignite ignite, String name)", "modifiers": "public static", "return": "Model<I, O>", "signature": "Model<I, O> getModel(Ignite ignite, String name)", "full_signature": "public static Model<I, O> getModel(Ignite ignite, String name)", "class_method_signature": "IgniteModelStorageUtil.getModel(Ignite ignite, String name)", "testcase": false, "constructor": false}, {"identifier": "getSyncModel", "parameters": "(Ignite ignite, String name,\n        SyncModelBuilder mdlBldr)", "modifiers": "public static", "return": "Model<I, O>", "signature": "Model<I, O> getSyncModel(Ignite ignite, String name,\n        SyncModelBuilder mdlBldr)", "full_signature": "public static Model<I, O> getSyncModel(Ignite ignite, String name,\n        SyncModelBuilder mdlBldr)", "class_method_signature": "IgniteModelStorageUtil.getSyncModel(Ignite ignite, String name,\n        SyncModelBuilder mdlBldr)", "testcase": false, "constructor": false}, {"identifier": "getAsyncModel", "parameters": "(Ignite ignite, String name, AsyncModelBuilder mdlBldr)", "modifiers": "public static", "return": "Model<Vector, Future<Double>>", "signature": "Model<Vector, Future<Double>> getAsyncModel(Ignite ignite, String name, AsyncModelBuilder mdlBldr)", "full_signature": "public static Model<Vector, Future<Double>> getAsyncModel(Ignite ignite, String name, AsyncModelBuilder mdlBldr)", "class_method_signature": "IgniteModelStorageUtil.getAsyncModel(Ignite ignite, String name, AsyncModelBuilder mdlBldr)", "testcase": false, "constructor": false}, {"identifier": "saveModelEntity", "parameters": "(Ignite ignite, byte[] serializedMdl, UUID mdlId)", "modifiers": "private static", "return": "void", "signature": "void saveModelEntity(Ignite ignite, byte[] serializedMdl, UUID mdlId)", "full_signature": "private static void saveModelEntity(Ignite ignite, byte[] serializedMdl, UUID mdlId)", "class_method_signature": "IgniteModelStorageUtil.saveModelEntity(Ignite ignite, byte[] serializedMdl, UUID mdlId)", "testcase": false, "constructor": false}, {"identifier": "removeModelEntity", "parameters": "(Ignite ignite, UUID mdlId)", "modifiers": "private static", "return": "void", "signature": "void removeModelEntity(Ignite ignite, UUID mdlId)", "full_signature": "private static void removeModelEntity(Ignite ignite, UUID mdlId)", "class_method_signature": "IgniteModelStorageUtil.removeModelEntity(Ignite ignite, UUID mdlId)", "testcase": false, "constructor": false}, {"identifier": "saveModelDescriptor", "parameters": "(Ignite ignite, String name, UUID mdlId)", "modifiers": "private static", "return": "void", "signature": "void saveModelDescriptor(Ignite ignite, String name, UUID mdlId)", "full_signature": "private static void saveModelDescriptor(Ignite ignite, String name, UUID mdlId)", "class_method_signature": "IgniteModelStorageUtil.saveModelDescriptor(Ignite ignite, String name, UUID mdlId)", "testcase": false, "constructor": false}, {"identifier": "removeModelDescriptor", "parameters": "(Ignite ignite, String name)", "modifiers": "private static", "return": "void", "signature": "void removeModelDescriptor(Ignite ignite, String name)", "full_signature": "private static void removeModelDescriptor(Ignite ignite, String name)", "class_method_signature": "IgniteModelStorageUtil.removeModelDescriptor(Ignite ignite, String name)", "testcase": false, "constructor": false}, {"identifier": "getModelDescriptor", "parameters": "(Ignite ignite, String name)", "modifiers": "private static", "return": "ModelDescriptor", "signature": "ModelDescriptor getModelDescriptor(Ignite ignite, String name)", "full_signature": "private static ModelDescriptor getModelDescriptor(Ignite ignite, String name)", "class_method_signature": "IgniteModelStorageUtil.getModelDescriptor(Ignite ignite, String name)", "testcase": false, "constructor": false}, {"identifier": "wrapIgniteModel", "parameters": "(\n        IgniteModel<I, O> mdl)", "modifiers": "private static", "return": "IgniteModel<byte[], byte[]>", "signature": "IgniteModel<byte[], byte[]> wrapIgniteModel(\n        IgniteModel<I, O> mdl)", "full_signature": "private static IgniteModel<byte[], byte[]> wrapIgniteModel(\n        IgniteModel<I, O> mdl)", "class_method_signature": "IgniteModelStorageUtil.wrapIgniteModel(\n        IgniteModel<I, O> mdl)", "testcase": false, "constructor": false}, {"identifier": "unwrapIgniteSyncModel", "parameters": "(\n        Model<byte[], byte[]> mdl)", "modifiers": "private static", "return": "Model<I, O>", "signature": "Model<I, O> unwrapIgniteSyncModel(\n        Model<byte[], byte[]> mdl)", "full_signature": "private static Model<I, O> unwrapIgniteSyncModel(\n        Model<byte[], byte[]> mdl)", "class_method_signature": "IgniteModelStorageUtil.unwrapIgniteSyncModel(\n        Model<byte[], byte[]> mdl)", "testcase": false, "constructor": false}, {"identifier": "unwrapIgniteAsyncModel", "parameters": "(Model<byte[], Future<byte[]>> mdl)", "modifiers": "private static", "return": "Model<Vector, Future<Double>>", "signature": "Model<Vector, Future<Double>> unwrapIgniteAsyncModel(Model<byte[], Future<byte[]>> mdl)", "full_signature": "private static Model<Vector, Future<Double>> unwrapIgniteAsyncModel(Model<byte[], Future<byte[]>> mdl)", "class_method_signature": "IgniteModelStorageUtil.unwrapIgniteAsyncModel(Model<byte[], Future<byte[]>> mdl)", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/inference/IgniteModelStorageUtil.java"}, "focal_method": {"identifier": "saveModel", "parameters": "(Ignite ignite,\n        IgniteModel<I, O> mdl, String name)", "modifiers": "public static", "return": "void", "body": "public static <I extends Serializable, O extends Serializable> void saveModel(Ignite ignite,\n        IgniteModel<I, O> mdl, String name) {\n        IgniteModel<byte[], byte[]> mdlWrapper = wrapIgniteModel(mdl);\n        byte[] serializedMdl = Utils.serialize(mdlWrapper);\n        UUID mdlId = UUID.randomUUID();\n\n        saveModelDescriptor(ignite, name, mdlId);\n\n        try {\n            saveModelEntity(ignite, serializedMdl, mdlId);\n        }\n        catch (Exception e) {\n            // Here we need to do a rollback and remove descriptor from correspondent storage.\n            removeModelEntity(ignite, mdlId);\n            throw e;\n        }\n    }", "signature": "void saveModel(Ignite ignite,\n        IgniteModel<I, O> mdl, String name)", "full_signature": "public static void saveModel(Ignite ignite,\n        IgniteModel<I, O> mdl, String name)", "class_method_signature": "IgniteModelStorageUtil.saveModel(Ignite ignite,\n        IgniteModel<I, O> mdl, String name)", "testcase": false, "constructor": false, "invocations": ["wrapIgniteModel", "serialize", "randomUUID", "saveModelDescriptor", "saveModelEntity", "removeModelEntity"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}