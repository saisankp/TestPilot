{"test_class": {"identifier": "BoundedBitChannelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BitChannel channel;", "modifier": "private", "type": "BitChannel", "declarator": "channel", "var_name": "channel"}, {"original_string": "private BoundedBitChannel boundedChannel;", "modifier": "private", "type": "BoundedBitChannel", "declarator": "boundedChannel", "var_name": "boundedChannel"}], "file": "preon-io/src/test/java/org/codehaus/preon/channel/BoundedBitChannelTest.java"}, "test_case": {"identifier": "shouldAccept9BitsAsBytesAccummulated", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldAccept9BitsAsBytesAccummulated() throws IOException {\n        boundedChannel.write(8, Byte.MAX_VALUE, ByteOrder.BigEndian);\n        boundedChannel.write(1, Byte.MAX_VALUE, ByteOrder.BigEndian);\n        verify(channel).write(8, Byte.MAX_VALUE, ByteOrder.BigEndian);\n        verify(channel).write(1, Byte.MAX_VALUE, ByteOrder.BigEndian);\n        verifyNoMoreInteractions(channel);\n    }", "signature": "void shouldAccept9BitsAsBytesAccummulated()", "full_signature": "@Test public void shouldAccept9BitsAsBytesAccummulated()", "class_method_signature": "BoundedBitChannelTest.shouldAccept9BitsAsBytesAccummulated()", "testcase": true, "constructor": false, "invocations": ["write", "write", "write", "verify", "write", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "BoundedBitChannel", "superclass": "", "interfaces": "implements BitChannel", "fields": [{"original_string": "private final BitChannel channel;", "modifier": "private final", "type": "BitChannel", "declarator": "channel", "var_name": "channel"}, {"original_string": "private final long maxBits;", "modifier": "private final", "type": "long", "declarator": "maxBits", "var_name": "maxBits"}, {"original_string": "private long written;", "modifier": "private", "type": "long", "declarator": "written", "var_name": "written"}, {"original_string": "private static final String OVERRUN_MESSAGE = \"Attempt to write beyond maximum number of bits allowed.\";", "modifier": "private static final", "type": "String", "declarator": "OVERRUN_MESSAGE = \"Attempt to write beyond maximum number of bits allowed.\"", "var_name": "OVERRUN_MESSAGE"}], "methods": [{"identifier": "BoundedBitChannel", "parameters": "(@Nonnull BitChannel channel, @Nonnegative long maxBits)", "modifiers": "public", "return": "", "signature": " BoundedBitChannel(@Nonnull BitChannel channel, @Nonnegative long maxBits)", "full_signature": "public  BoundedBitChannel(@Nonnull BitChannel channel, @Nonnegative long maxBits)", "class_method_signature": "BoundedBitChannel.BoundedBitChannel(@Nonnull BitChannel channel, @Nonnegative long maxBits)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(boolean value)", "modifiers": "public", "return": "void", "signature": "void write(boolean value)", "full_signature": "public void write(boolean value)", "class_method_signature": "BoundedBitChannel.write(boolean value)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(int nrbits, byte value)", "modifiers": "public", "return": "void", "signature": "void write(int nrbits, byte value)", "full_signature": "public void write(int nrbits, byte value)", "class_method_signature": "BoundedBitChannel.write(int nrbits, byte value)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(int nrbits, int value, ByteOrder byteOrder)", "modifiers": "public", "return": "void", "signature": "void write(int nrbits, int value, ByteOrder byteOrder)", "full_signature": "public void write(int nrbits, int value, ByteOrder byteOrder)", "class_method_signature": "BoundedBitChannel.write(int nrbits, int value, ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(int nrbits, long value, ByteOrder byteOrder)", "modifiers": "public", "return": "void", "signature": "void write(int nrbits, long value, ByteOrder byteOrder)", "full_signature": "public void write(int nrbits, long value, ByteOrder byteOrder)", "class_method_signature": "BoundedBitChannel.write(int nrbits, long value, ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(int nrbits, short value, ByteOrder byteOrder)", "modifiers": "public", "return": "void", "signature": "void write(int nrbits, short value, ByteOrder byteOrder)", "full_signature": "public void write(int nrbits, short value, ByteOrder byteOrder)", "class_method_signature": "BoundedBitChannel.write(int nrbits, short value, ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] src, int offset, int length)", "modifiers": "public", "return": "void", "signature": "void write(byte[] src, int offset, int length)", "full_signature": "public void write(byte[] src, int offset, int length)", "class_method_signature": "BoundedBitChannel.write(byte[] src, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(ByteBuffer buffer)", "modifiers": "public", "return": "long", "signature": "long write(ByteBuffer buffer)", "full_signature": "public long write(ByteBuffer buffer)", "class_method_signature": "BoundedBitChannel.write(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "getRelativeBitPos", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRelativeBitPos()", "full_signature": "public int getRelativeBitPos()", "class_method_signature": "BoundedBitChannel.getRelativeBitPos()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "BoundedBitChannel.close()", "testcase": false, "constructor": false}], "file": "preon-io/src/main/java/org/codehaus/preon/channel/BoundedBitChannel.java"}, "focal_method": {"identifier": "write", "parameters": "(boolean value)", "modifiers": "public", "return": "void", "body": "public void write(boolean value) throws IOException {\n        if (written + 1 <= maxBits) {\n            channel.write(value);\n            written += 1;\n        } else {\n            throw new IOException(OVERRUN_MESSAGE);\n        }\n    }", "signature": "void write(boolean value)", "full_signature": "public void write(boolean value)", "class_method_signature": "BoundedBitChannel.write(boolean value)", "testcase": false, "constructor": false, "invocations": ["write"]}, "repository": {"repo_id": 854893, "url": "https://github.com/preon/preon", "language": "Java", "is_fork": false, "fork_count": 78, "stargazer_count": 155, "size": 2459, "license": "licensed"}}