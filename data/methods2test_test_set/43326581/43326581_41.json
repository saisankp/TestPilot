{"test_class": {"identifier": "FossologyHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "FossologyHandler fossologyHandler;", "modifier": "", "type": "FossologyHandler", "declarator": "fossologyHandler", "var_name": "fossologyHandler"}, {"original_string": "@Mock\n    FossologyFileHandler fossologyFileHandler;", "modifier": "@Mock", "type": "FossologyFileHandler", "declarator": "fossologyFileHandler", "var_name": "fossologyFileHandler"}, {"original_string": "@Mock\n    FossologyHostKeyHandler fossologyHostKeyHandler;", "modifier": "@Mock", "type": "FossologyHostKeyHandler", "declarator": "fossologyHostKeyHandler", "var_name": "fossologyHostKeyHandler"}, {"original_string": "@Mock\n    FossologySshConnector fossologySshConnector;", "modifier": "@Mock", "type": "FossologySshConnector", "declarator": "fossologySshConnector", "var_name": "fossologySshConnector"}, {"original_string": "@Mock\n    FossologyScriptsHandler fossologyScriptsHandler;", "modifier": "@Mock", "type": "FossologyScriptsHandler", "declarator": "fossologyScriptsHandler", "var_name": "fossologyScriptsHandler"}, {"original_string": "@Mock\n    FossologySettings fossologySettings;", "modifier": "@Mock", "type": "FossologySettings", "declarator": "fossologySettings", "var_name": "fossologySettings"}, {"original_string": "private String pubkey = \"pubkey\";", "modifier": "private", "type": "String", "declarator": "pubkey = \"pubkey\"", "var_name": "pubkey"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}], "file": "backend/src/src-fossology/src/test/java/org/eclipse/sw360/fossology/FossologyHandlerTest.java"}, "test_case": {"identifier": "testGetFingerPrints", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFingerPrints() throws Exception {\n        final List status = mock(List.class);\n\n        doReturn(status).when(fossologyHostKeyHandler).getFingerPrints();\n\n        assertThat(fossologyHandler.getFingerPrints(), sameInstance(status));\n\n        verify(fossologyHostKeyHandler).getFingerPrints();\n    }", "signature": "void testGetFingerPrints()", "full_signature": "@Test public void testGetFingerPrints()", "class_method_signature": "FossologyHandlerTest.testGetFingerPrints()", "testcase": true, "constructor": false, "invocations": ["mock", "getFingerPrints", "when", "doReturn", "assertThat", "getFingerPrints", "sameInstance", "getFingerPrints", "verify"]}, "focal_class": {"identifier": "FossologyHandler", "superclass": "", "interfaces": "implements FossologyService.Iface", "fields": [{"original_string": "private final FossologyFileHandler fossologyFileHandler;", "modifier": "private final", "type": "FossologyFileHandler", "declarator": "fossologyFileHandler", "var_name": "fossologyFileHandler"}, {"original_string": "private final FossologyHostKeyHandler fossologyHostKeyHandler;", "modifier": "private final", "type": "FossologyHostKeyHandler", "declarator": "fossologyHostKeyHandler", "var_name": "fossologyHostKeyHandler"}, {"original_string": "private final FossologySshConnector fossologySshConnector;", "modifier": "private final", "type": "FossologySshConnector", "declarator": "fossologySshConnector", "var_name": "fossologySshConnector"}, {"original_string": "private final FossologyScriptsHandler fossologyScriptsHandler;", "modifier": "private final", "type": "FossologyScriptsHandler", "declarator": "fossologyScriptsHandler", "var_name": "fossologyScriptsHandler"}, {"original_string": "private final byte[] fossologyPubKey;", "modifier": "private final", "type": "byte[]", "declarator": "fossologyPubKey", "var_name": "fossologyPubKey"}], "methods": [{"identifier": "FossologyHandler", "parameters": "(FossologyFileHandler fossologyFileHandler, FossologyHostKeyHandler fossologyHostKeyHandler, FossologySshConnector fossologySshConnector, FossologyScriptsHandler fossologyScriptsHandler, FossologySettings fossologySettings)", "modifiers": "@Autowired public", "return": "", "signature": " FossologyHandler(FossologyFileHandler fossologyFileHandler, FossologyHostKeyHandler fossologyHostKeyHandler, FossologySshConnector fossologySshConnector, FossologyScriptsHandler fossologyScriptsHandler, FossologySettings fossologySettings)", "full_signature": "@Autowired public  FossologyHandler(FossologyFileHandler fossologyFileHandler, FossologyHostKeyHandler fossologyHostKeyHandler, FossologySshConnector fossologySshConnector, FossologyScriptsHandler fossologyScriptsHandler, FossologySettings fossologySettings)", "class_method_signature": "FossologyHandler.FossologyHandler(FossologyFileHandler fossologyFileHandler, FossologyHostKeyHandler fossologyHostKeyHandler, FossologySshConnector fossologySshConnector, FossologyScriptsHandler fossologyScriptsHandler, FossologySettings fossologySettings)", "testcase": false, "constructor": true}, {"identifier": "sendToFossology", "parameters": "(String releaseId, User user, String clearingTeam)", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus sendToFossology(String releaseId, User user, String clearingTeam)", "full_signature": "@Override public RequestStatus sendToFossology(String releaseId, User user, String clearingTeam)", "class_method_signature": "FossologyHandler.sendToFossology(String releaseId, User user, String clearingTeam)", "testcase": false, "constructor": false}, {"identifier": "sendReleasesToFossology", "parameters": "(List<String> releaseIds, User user, String clearingTeam)", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus sendReleasesToFossology(List<String> releaseIds, User user, String clearingTeam)", "full_signature": "@Override public RequestStatus sendReleasesToFossology(List<String> releaseIds, User user, String clearingTeam)", "class_method_signature": "FossologyHandler.sendReleasesToFossology(List<String> releaseIds, User user, String clearingTeam)", "testcase": false, "constructor": false}, {"identifier": "getStatusInFossology", "parameters": "(String releaseId, User user, String clearingTeam)", "modifiers": "@Override public", "return": "Release", "signature": "Release getStatusInFossology(String releaseId, User user, String clearingTeam)", "full_signature": "@Override public Release getStatusInFossology(String releaseId, User user, String clearingTeam)", "class_method_signature": "FossologyHandler.getStatusInFossology(String releaseId, User user, String clearingTeam)", "testcase": false, "constructor": false}, {"identifier": "getFingerPrints", "parameters": "()", "modifiers": "@Override public", "return": "List<FossologyHostFingerPrint>", "signature": "List<FossologyHostFingerPrint> getFingerPrints()", "full_signature": "@Override public List<FossologyHostFingerPrint> getFingerPrints()", "class_method_signature": "FossologyHandler.getFingerPrints()", "testcase": false, "constructor": false}, {"identifier": "setFingerPrints", "parameters": "(List<FossologyHostFingerPrint> fingerPrints)", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus setFingerPrints(List<FossologyHostFingerPrint> fingerPrints)", "full_signature": "@Override public RequestStatus setFingerPrints(List<FossologyHostFingerPrint> fingerPrints)", "class_method_signature": "FossologyHandler.setFingerPrints(List<FossologyHostFingerPrint> fingerPrints)", "testcase": false, "constructor": false}, {"identifier": "deployScripts", "parameters": "()", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus deployScripts()", "full_signature": "@Override public RequestStatus deployScripts()", "class_method_signature": "FossologyHandler.deployScripts()", "testcase": false, "constructor": false}, {"identifier": "checkConnection", "parameters": "()", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus checkConnection()", "full_signature": "@Override public RequestStatus checkConnection()", "class_method_signature": "FossologyHandler.checkConnection()", "testcase": false, "constructor": false}, {"identifier": "getPublicKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPublicKey()", "full_signature": "@Override public String getPublicKey()", "class_method_signature": "FossologyHandler.getPublicKey()", "testcase": false, "constructor": false}], "file": "backend/src/src-fossology/src/main/java/org/eclipse/sw360/fossology/FossologyHandler.java"}, "focal_method": {"identifier": "getFingerPrints", "parameters": "()", "modifiers": "@Override public", "return": "List<FossologyHostFingerPrint>", "body": "@Override\n    public List<FossologyHostFingerPrint> getFingerPrints() throws TException {\n        return fossologyHostKeyHandler.getFingerPrints();\n    }", "signature": "List<FossologyHostFingerPrint> getFingerPrints()", "full_signature": "@Override public List<FossologyHostFingerPrint> getFingerPrints()", "class_method_signature": "FossologyHandler.getFingerPrints()", "testcase": false, "constructor": false, "invocations": ["getFingerPrints"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}