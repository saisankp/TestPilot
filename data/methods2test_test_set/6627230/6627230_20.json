{"test_class": {"identifier": "ObjectFunctionTest", "superclass": "", "interfaces": "", "fields": [], "file": "web-framework/src/test/java/org/unidal/web/jsp/function/ObjectFunctionTest.java"}, "test_case": {"identifier": "testIn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testIn() {\n      Assert.assertEquals(false, ObjectFunction.in(null, null));\n      Assert.assertEquals(false, ObjectFunction.in(\"abc\", \"ab\"));\n      Assert.assertEquals(true, ObjectFunction.in(\"abc\", \"abc\"));\n      Assert.assertEquals(true, ObjectFunction.in(Arrays.asList(\"a\", \"abc\"), \"abc\"));\n      Assert.assertEquals(true, ObjectFunction.in(new Object[] { \"a\", \"abc\" }, \"abc\"));\n      Assert.assertEquals(false, ObjectFunction.in(new Object[] { \"a\", \"abc\" }, \"abcd\"));\n\n      Assert.assertEquals(true, ObjectFunction.in(new Object[] { 1, \"2\", 3 }, \"3\"));\n   }", "signature": "void testIn()", "full_signature": "@Test public void testIn()", "class_method_signature": "ObjectFunctionTest.testIn()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "in", "assertEquals", "in", "assertEquals", "in", "assertEquals", "in", "asList", "assertEquals", "in", "assertEquals", "in", "assertEquals", "in"]}, "focal_class": {"identifier": "ObjectFunction", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "length", "parameters": "(Object obj)", "modifiers": "@FunctionMeta(description = \"Length of String, or array\", example = \"${w:length(obj)}\") public static", "return": "Object", "signature": "Object length(Object obj)", "full_signature": "@FunctionMeta(description = \"Length of String, or array\", example = \"${w:length(obj)}\") public static Object length(Object obj)", "class_method_signature": "ObjectFunction.length(Object obj)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "(Object obj)", "modifiers": "@FunctionMeta(description = \"size of colection, or map\", example = \"${w:size(obj)}\") public static", "return": "Object", "signature": "Object size(Object obj)", "full_signature": "@FunctionMeta(description = \"size of colection, or map\", example = \"${w:size(obj)}\") public static Object size(Object obj)", "class_method_signature": "ObjectFunction.size(Object obj)", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "(Object values, Object value)", "modifiers": "@FunctionMeta(description = \"Check if the value is equal or is one of value in the given values.\", example = \"${w:in(values, value)}\") @SuppressWarnings(\"unchecked\") public static", "return": "boolean", "signature": "boolean in(Object values, Object value)", "full_signature": "@FunctionMeta(description = \"Check if the value is equal or is one of value in the given values.\", example = \"${w:in(values, value)}\") @SuppressWarnings(\"unchecked\") public static boolean in(Object values, Object value)", "class_method_signature": "ObjectFunction.in(Object values, Object value)", "testcase": false, "constructor": false}], "file": "web-framework/src/main/java/org/unidal/web/jsp/function/ObjectFunction.java"}, "focal_method": {"identifier": "in", "parameters": "(Object values, Object value)", "modifiers": "@FunctionMeta(description = \"Check if the value is equal or is one of value in the given values.\", example = \"${w:in(values, value)}\") @SuppressWarnings(\"unchecked\") public static", "return": "boolean", "body": "@FunctionMeta(description = \"Check if the value is equal or is one of value in the given values.\", example = \"${w:in(values, value)}\")\n   @SuppressWarnings(\"unchecked\")\n   public static boolean in(Object values, Object value) {\n      if (values == null || value == null) {\n         return false;\n      }\n\n      if (values instanceof List) {\n         for (Object v : (List<Object>) values) {\n            if (v != null && value.toString().equals(v.toString())) {\n               return true;\n            }\n         }\n\n         return false;\n      } else if (values.getClass().isArray()) {\n         int len = Array.getLength(values);\n\n         for (int i = 0; i < len; i++) {\n            Object v = Array.get(values, i);\n\n            if (v != null && value.toString().equals(v.toString())) {\n               return true;\n            }\n         }\n\n         return false;\n      } else {\n         return values.toString().equals(value.toString());\n      }\n   }", "signature": "boolean in(Object values, Object value)", "full_signature": "@FunctionMeta(description = \"Check if the value is equal or is one of value in the given values.\", example = \"${w:in(values, value)}\") @SuppressWarnings(\"unchecked\") public static boolean in(Object values, Object value)", "class_method_signature": "ObjectFunction.in(Object values, Object value)", "testcase": false, "constructor": false, "invocations": ["equals", "toString", "toString", "isArray", "getClass", "getLength", "get", "equals", "toString", "toString", "equals", "toString", "toString"]}, "repository": {"repo_id": 6627230, "url": "https://github.com/unidal/frameworks", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 100, "size": 3009, "license": "licensed"}}