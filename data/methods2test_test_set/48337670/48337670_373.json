{"test_class": {"identifier": "InstanceUUIDTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/org.openhab.core.id/src/test/java/org/openhab/core/id/InstanceUUIDTest.java"}, "test_case": {"identifier": "ignoreEmptyFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void ignoreEmptyFile() throws IOException {\n        // we first need to remove the cached value\n        InstanceUUID.uuid = null;\n        Path path = Paths.get(OpenHAB.getUserDataFolder(), InstanceUUID.UUID_FILE_NAME);\n        Files.createDirectories(path.getParent());\n        Files.write(path, \"\".getBytes());\n        String uuid = InstanceUUID.get();\n        assertNotEquals(\"\", uuid);\n    }", "signature": "void ignoreEmptyFile()", "full_signature": "@Test public void ignoreEmptyFile()", "class_method_signature": "InstanceUUIDTest.ignoreEmptyFile()", "testcase": true, "constructor": false, "invocations": ["get", "getUserDataFolder", "createDirectories", "getParent", "write", "getBytes", "get", "assertNotEquals"]}, "focal_class": {"identifier": "InstanceUUID", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(InstanceUUID.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(InstanceUUID.class)", "var_name": "LOGGER"}, {"original_string": "static final String UUID_FILE_NAME = \"uuid\";", "modifier": "static final", "type": "String", "declarator": "UUID_FILE_NAME = \"uuid\"", "var_name": "UUID_FILE_NAME"}, {"original_string": "static String uuid;", "modifier": "static", "type": "String", "declarator": "uuid", "var_name": "uuid"}], "methods": [{"identifier": "get", "parameters": "()", "modifiers": "public static synchronized", "return": "String", "signature": "String get()", "full_signature": "public static synchronized String get()", "class_method_signature": "InstanceUUID.get()", "testcase": false, "constructor": false}, {"identifier": "writeFile", "parameters": "(File file, String content)", "modifiers": "private static", "return": "void", "signature": "void writeFile(File file, String content)", "full_signature": "private static void writeFile(File file, String content)", "class_method_signature": "InstanceUUID.writeFile(File file, String content)", "testcase": false, "constructor": false}, {"identifier": "readFirstLine", "parameters": "(File file)", "modifiers": "private static", "return": "String", "signature": "String readFirstLine(File file)", "full_signature": "private static String readFirstLine(File file)", "class_method_signature": "InstanceUUID.readFirstLine(File file)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.id/src/main/java/org/openhab/core/id/InstanceUUID.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "public static synchronized", "return": "String", "body": "public static synchronized String get() {\n        if (uuid == null) {\n            try {\n                File file = new File(OpenHAB.getUserDataFolder() + File.separator + UUID_FILE_NAME);\n                if (!file.exists()) {\n                    uuid = java.util.UUID.randomUUID().toString();\n                    writeFile(file, uuid);\n                } else {\n                    uuid = readFirstLine(file);\n                    if (uuid != null && !uuid.isEmpty()) {\n                        LOGGER.debug(\"UUID '{}' has been restored from file '{}'\", file.getAbsolutePath(), uuid);\n                    } else {\n                        uuid = java.util.UUID.randomUUID().toString();\n                        LOGGER.warn(\"UUID file '{}' has no content, rewriting it now with '{}'\", file.getAbsolutePath(),\n                                uuid);\n                        writeFile(file, uuid);\n                    }\n                }\n            } catch (IOException e) {\n                LOGGER.error(\"Failed writing the UUID file: {}\", e.getMessage());\n                return null;\n            }\n        }\n        return uuid;\n    }", "signature": "String get()", "full_signature": "public static synchronized String get()", "class_method_signature": "InstanceUUID.get()", "testcase": false, "constructor": false, "invocations": ["getUserDataFolder", "exists", "toString", "randomUUID", "writeFile", "readFirstLine", "isEmpty", "debug", "getAbsolutePath", "toString", "randomUUID", "warn", "getAbsolutePath", "writeFile", "error", "getMessage"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}