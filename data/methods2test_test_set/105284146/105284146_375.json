{"test_class": {"identifier": "PsseRawReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "psse/psse-model/src/test/java/com/powsybl/psse/model/PsseRawReaderTest.java"}, "test_case": {"identifier": "ieee14BusTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void ieee14BusTest() throws IOException {\n        try (BufferedReader reader = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream(\"/IEEE_14_bus.raw\")))) {\n            PsseRawModel rawData = new PsseRawReader().read(reader);\n            assertNotNull(rawData);\n            String jsonRef = new String(ByteStreams.toByteArray(getClass().getResourceAsStream(\"/IEEE_14_bus.json\")), StandardCharsets.UTF_8);\n            String json = new ObjectMapper().writerWithDefaultPrettyPrinter().writeValueAsString(rawData);\n            assertEquals(jsonRef, json);\n        }\n    }", "signature": "void ieee14BusTest()", "full_signature": "@Test public void ieee14BusTest()", "class_method_signature": "PsseRawReaderTest.ieee14BusTest()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClass", "read", "assertNotNull", "toByteArray", "getResourceAsStream", "getClass", "writeValueAsString", "writerWithDefaultPrettyPrinter", "assertEquals"]}, "focal_class": {"identifier": "PsseRawReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PsseRawReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PsseRawReader.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "removeComment", "parameters": "(String line)", "modifiers": "private static", "return": "String", "signature": "String removeComment(String line)", "full_signature": "private static String removeComment(String line)", "class_method_signature": "PsseRawReader.removeComment(String line)", "testcase": false, "constructor": false}, {"identifier": "readLineAndRemoveComment", "parameters": "(BufferedReader reader)", "modifiers": "private static", "return": "String", "signature": "String readLineAndRemoveComment(BufferedReader reader)", "full_signature": "private static String readLineAndRemoveComment(BufferedReader reader)", "class_method_signature": "PsseRawReader.readLineAndRemoveComment(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "parseRecord", "parameters": "(String record, Class<T> aClass)", "modifiers": "private static", "return": "T", "signature": "T parseRecord(String record, Class<T> aClass)", "full_signature": "private static T parseRecord(String record, Class<T> aClass)", "class_method_signature": "PsseRawReader.parseRecord(String record, Class<T> aClass)", "testcase": false, "constructor": false}, {"identifier": "parseRecords", "parameters": "(List<String> records, Class<T> aClass)", "modifiers": "private static", "return": "List<T>", "signature": "List<T> parseRecords(List<String> records, Class<T> aClass)", "full_signature": "private static List<T> parseRecords(List<String> records, Class<T> aClass)", "class_method_signature": "PsseRawReader.parseRecords(List<String> records, Class<T> aClass)", "testcase": false, "constructor": false}, {"identifier": "readRecordBlock", "parameters": "(BufferedReader reader)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> readRecordBlock(BufferedReader reader)", "full_signature": "private static List<String> readRecordBlock(BufferedReader reader)", "class_method_signature": "PsseRawReader.readRecordBlock(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "readCaseIdentification", "parameters": "(BufferedReader reader)", "modifiers": "private", "return": "PsseCaseIdentification", "signature": "PsseCaseIdentification readCaseIdentification(BufferedReader reader)", "full_signature": "private PsseCaseIdentification readCaseIdentification(BufferedReader reader)", "class_method_signature": "PsseRawReader.readCaseIdentification(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "readTransformers", "parameters": "(BufferedReader reader)", "modifiers": "private", "return": "List<PsseTransformer>", "signature": "List<PsseTransformer> readTransformers(BufferedReader reader)", "full_signature": "private List<PsseTransformer> readTransformers(BufferedReader reader)", "class_method_signature": "PsseRawReader.readTransformers(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(BufferedReader reader)", "modifiers": "public", "return": "PsseRawModel", "signature": "PsseRawModel read(BufferedReader reader)", "full_signature": "public PsseRawModel read(BufferedReader reader)", "class_method_signature": "PsseRawReader.read(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "checkCaseIdentification", "parameters": "(BufferedReader reader)", "modifiers": "public", "return": "boolean", "signature": "boolean checkCaseIdentification(BufferedReader reader)", "full_signature": "public boolean checkCaseIdentification(BufferedReader reader)", "class_method_signature": "PsseRawReader.checkCaseIdentification(BufferedReader reader)", "testcase": false, "constructor": false}], "file": "psse/psse-model/src/main/java/com/powsybl/psse/model/PsseRawReader.java"}, "focal_method": {"identifier": "read", "parameters": "(BufferedReader reader)", "modifiers": "public", "return": "PsseRawModel", "body": "public PsseRawModel read(BufferedReader reader) throws IOException {\n        Objects.requireNonNull(reader);\n\n        // case identification\n        PsseCaseIdentification caseIdentification = readCaseIdentification(reader);\n\n        PsseRawModel model = new PsseRawModel(caseIdentification);\n\n        // bus data\n        model.getBuses().addAll(parseRecords(readRecordBlock(reader), PsseBus.class));\n\n        // load data\n        model.getLoads().addAll(parseRecords(readRecordBlock(reader), PsseLoad.class));\n\n        // fixed shunt data\n        model.getFixedShunts().addAll(parseRecords(readRecordBlock(reader), PsseFixedShunt.class));\n\n        // generator data\n        model.getGenerators().addAll(parseRecords(readRecordBlock(reader), PsseGenerator.class));\n\n        // non transformer data\n        model.getNonTransformerBranches().addAll(parseRecords(readRecordBlock(reader), PsseNonTransformerBranch.class));\n\n        // transformer data\n        model.getTransformers().addAll(readTransformers(reader));\n\n        // area data\n        model.getAreas().addAll(parseRecords(readRecordBlock(reader), PsseArea.class));\n\n        // 2-terminal DC data\n        readRecordBlock(reader); // TODO\n\n        // voltage source converter data\n        readRecordBlock(reader); // TODO\n\n        // impedance correction data\n        readRecordBlock(reader); // TODO\n\n        // multi-terminal DC data\n        readRecordBlock(reader); // TODO\n\n        // multi-section line data\n        readRecordBlock(reader); // TODO\n\n        // zone data\n        model.getZones().addAll(parseRecords(readRecordBlock(reader), PsseZone.class));\n\n        // inter-area transfer data\n        readRecordBlock(reader); // TODO\n\n        // owner data\n        model.getOwners().addAll(parseRecords(readRecordBlock(reader), PsseOwner.class));\n\n        // facts control device data\n        readRecordBlock(reader); // TODO\n\n        // switched shunt data\n        model.getSwitchedShunts().addAll(parseRecords(readRecordBlock(reader), PsseSwitchedShunt.class));\n\n        // gne device data\n        readRecordBlock(reader); // TODO\n\n        // q record (nothing to do)\n        readRecordBlock(reader);\n\n        return model;\n    }", "signature": "PsseRawModel read(BufferedReader reader)", "full_signature": "public PsseRawModel read(BufferedReader reader)", "class_method_signature": "PsseRawReader.read(BufferedReader reader)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "readCaseIdentification", "addAll", "getBuses", "parseRecords", "readRecordBlock", "addAll", "getLoads", "parseRecords", "readRecordBlock", "addAll", "getFixedShunts", "parseRecords", "readRecordBlock", "addAll", "getGenerators", "parseRecords", "readRecordBlock", "addAll", "getNonTransformerBranches", "parseRecords", "readRecordBlock", "addAll", "getTransformers", "readTransformers", "addAll", "getAreas", "parseRecords", "readRecordBlock", "readRecordBlock", "readRecordBlock", "readRecordBlock", "readRecordBlock", "readRecordBlock", "addAll", "getZones", "parseRecords", "readRecordBlock", "readRecordBlock", "addAll", "getOwners", "parseRecords", "readRecordBlock", "readRecordBlock", "addAll", "getSwitchedShunts", "parseRecords", "readRecordBlock", "readRecordBlock", "readRecordBlock"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}