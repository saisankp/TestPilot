{"test_class": {"identifier": "CaptchaUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "BiliLiveLib/src/test/java/charlie/bililivelib/internalutil/CaptchaUtilTest.java"}, "test_case": {"identifier": "evalCalcCaptcha", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void evalCalcCaptcha() throws Exception {\n        CaptchaUtil util = new CaptchaUtil();\n        List<String> excepted = Files.readAllLines(Paths.get(\n                getClass().getResource(\"/captcha/excepted_values.txt\").toURI()));\n        //PROBLEM:CAPTCHA NO.13 CAN'T WORK!\n        for (int i = 0; i < 50;i++) {\n            int value = util.evalCalcCaptcha(ImageIO.read(\n                    getClass().getResource(\"/captcha/captcha\" + i + \".png\")));\n            System.out.println(value);\n            assertEquals(Integer.parseInt(excepted.get(i).trim()), value);\n        }\n    }", "signature": "void evalCalcCaptcha()", "full_signature": "@Test public void evalCalcCaptcha()", "class_method_signature": "CaptchaUtilTest.evalCalcCaptcha()", "testcase": true, "constructor": false, "invocations": ["readAllLines", "get", "toURI", "getResource", "getClass", "evalCalcCaptcha", "read", "getResource", "getClass", "println", "assertEquals", "parseInt", "trim", "get"]}, "focal_class": {"identifier": "CaptchaUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OCRUtil ocrUtil;", "modifier": "private", "type": "OCRUtil", "declarator": "ocrUtil", "var_name": "ocrUtil"}], "methods": [{"identifier": "CaptchaUtil", "parameters": "()", "modifiers": "public", "return": "", "signature": " CaptchaUtil()", "full_signature": "public  CaptchaUtil()", "class_method_signature": "CaptchaUtil.CaptchaUtil()", "testcase": false, "constructor": true}, {"identifier": "CaptchaUtil", "parameters": "(OCRUtil ocrUtil)", "modifiers": "public", "return": "", "signature": " CaptchaUtil(OCRUtil ocrUtil)", "full_signature": "public  CaptchaUtil(OCRUtil ocrUtil)", "class_method_signature": "CaptchaUtil.CaptchaUtil(OCRUtil ocrUtil)", "testcase": false, "constructor": true}, {"identifier": "evalCalcCaptcha", "parameters": "(BufferedImage image)", "modifiers": "@Contract(pure = true) public", "return": "int", "signature": "int evalCalcCaptcha(BufferedImage image)", "full_signature": "@Contract(pure = true) public int evalCalcCaptcha(BufferedImage image)", "class_method_signature": "CaptchaUtil.evalCalcCaptcha(BufferedImage image)", "testcase": false, "constructor": false}, {"identifier": "calc", "parameters": "(String formula)", "modifiers": "private", "return": "int", "signature": "int calc(String formula)", "full_signature": "private int calc(String formula)", "class_method_signature": "CaptchaUtil.calc(String formula)", "testcase": false, "constructor": false}], "file": "BiliLiveLib/src/main/java/charlie/bililivelib/internalutil/CaptchaUtil.java"}, "focal_method": {"identifier": "evalCalcCaptcha", "parameters": "(BufferedImage image)", "modifiers": "@Contract(pure = true) public", "return": "int", "body": "@Contract(pure = true)\n    public int evalCalcCaptcha(BufferedImage image) {\n        String str = ocrUtil.ocrCalcCaptcha(image);\n        if (str == null) return -1;\n        return calc(str);\n        /*try {\n            return (Integer) scriptEngine.eval(str);\n        } catch (ScriptException e) {\n            return -1;\n        }*/\n    }", "signature": "int evalCalcCaptcha(BufferedImage image)", "full_signature": "@Contract(pure = true) public int evalCalcCaptcha(BufferedImage image)", "class_method_signature": "CaptchaUtil.evalCalcCaptcha(BufferedImage image)", "testcase": false, "constructor": false, "invocations": ["ocrCalcCaptcha", "calc"]}, "repository": {"repo_id": 74730037, "url": "https://github.com/cqjjjzr/BiliLiveLib", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 17, "size": 535, "license": "licensed"}}