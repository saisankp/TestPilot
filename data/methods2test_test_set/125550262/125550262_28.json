{"test_class": {"identifier": "RowTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final UUID uuid = UUID.randomUUID();", "modifier": "private final", "type": "UUID", "declarator": "uuid = UUID.randomUUID()", "var_name": "uuid"}, {"original_string": "private final Row row = new Row()\n      .stringColumn(\"string_column\", \"A string\")\n      .integerColumn(\"integer_column\", 42L)\n      .boolColumn(\"bool_column\", true)\n      .uuidColumn(\"uuid_column\", Uuid.of(uuid))\n      .namedUuidColumn(\"named-uuid\", \"uuid-name\")\n      .mapColumn(\"map_column\", ImmutableMap.of(\"key\", \"value\"))\n      .setColumn(\"set_column\", ImmutableSet.of(\"value1\", \"value2\"));", "modifier": "private final", "type": "Row", "declarator": "row = new Row()\n      .stringColumn(\"string_column\", \"A string\")\n      .integerColumn(\"integer_column\", 42L)\n      .boolColumn(\"bool_column\", true)\n      .uuidColumn(\"uuid_column\", Uuid.of(uuid))\n      .namedUuidColumn(\"named-uuid\", \"uuid-name\")\n      .mapColumn(\"map_column\", ImmutableMap.of(\"key\", \"value\"))\n      .setColumn(\"set_column\", ImmutableSet.of(\"value1\", \"value2\"))", "var_name": "row"}, {"original_string": "private final String jsonString = \"{\\\"string_column\\\":\\\"A string\\\",\"\n      + \"\\\"integer_column\\\":42,\\\"bool_column\\\":true,\\\"uuid_column\\\":[\\\"uuid\\\",\\\"\" + uuid + \"\\\"],\"\n      + \"\\\"named-uuid\\\":[\\\"named-uuid\\\",\\\"uuid-name\\\"],\"\n      + \"\\\"map_column\\\":[\\\"map\\\",[[\\\"key\\\",\\\"value\\\"]]],\"\n      + \"\\\"set_column\\\":[\\\"set\\\",[\\\"value1\\\",\\\"value2\\\"]]}\";", "modifier": "private final", "type": "String", "declarator": "jsonString = \"{\\\"string_column\\\":\\\"A string\\\",\"\n      + \"\\\"integer_column\\\":42,\\\"bool_column\\\":true,\\\"uuid_column\\\":[\\\"uuid\\\",\\\"\" + uuid + \"\\\"],\"\n      + \"\\\"named-uuid\\\":[\\\"named-uuid\\\",\\\"uuid-name\\\"],\"\n      + \"\\\"map_column\\\":[\\\"map\\\",[[\\\"key\\\",\\\"value\\\"]]],\"\n      + \"\\\"set_column\\\":[\\\"set\\\",[\\\"value1\\\",\\\"value2\\\"]]}\"", "var_name": "jsonString"}], "file": "ovsdb-client/src/test/java/com/vmware/ovsdb/protocol/operation/notation/RowTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEquals() {\n    java.util.Map<String, Value> columns = new HashMap<>();\n    columns.put(\"string_column\", Atom.string(\"A string\"));\n    columns.put(\"integer_column\", Atom.integer(42));\n    columns.put(\"bool_column\", Atom.bool(true));\n    columns.put(\"uuid_column\", Atom.uuid(uuid));\n    columns.put(\"named-uuid\", Atom.namedUuid(\"uuid-name\"));\n    columns.put(\"map_column\", Map.of(ImmutableMap.of(\"key\", \"value\")));\n    columns.put(\"set_column\", Set.of(\"value1\", \"value2\"));\n\n    new EqualsTester().addEqualityGroup(row, new Row(columns)).testEquals();\n  }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "RowTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["put", "string", "put", "integer", "put", "bool", "put", "uuid", "put", "namedUuid", "put", "of", "of", "put", "of", "testEquals", "addEqualityGroup"]}, "focal_class": {"identifier": "Row", "superclass": "", "interfaces": "", "fields": [{"original_string": "private java.util.Map<String, Value> columns;", "modifier": "private", "type": "java.util.Map<String, Value>", "declarator": "columns", "var_name": "columns"}], "methods": [{"identifier": "Row", "parameters": "(java.util.Map<String, Value> columns)", "modifiers": "public", "return": "", "signature": " Row(java.util.Map<String, Value> columns)", "full_signature": "public  Row(java.util.Map<String, Value> columns)", "class_method_signature": "Row.Row(java.util.Map<String, Value> columns)", "testcase": false, "constructor": true}, {"identifier": "Row", "parameters": "()", "modifiers": "public", "return": "", "signature": " Row()", "full_signature": "public  Row()", "class_method_signature": "Row.Row()", "testcase": false, "constructor": true}, {"identifier": "getColumns", "parameters": "()", "modifiers": "public", "return": "java.util.Map<String, Value>", "signature": "java.util.Map<String, Value> getColumns()", "full_signature": "public java.util.Map<String, Value> getColumns()", "class_method_signature": "Row.getColumns()", "testcase": false, "constructor": false}, {"identifier": "column", "parameters": "(String name, Value value)", "modifiers": "private", "return": "Row", "signature": "Row column(String name, Value value)", "full_signature": "private Row column(String name, Value value)", "class_method_signature": "Row.column(String name, Value value)", "testcase": false, "constructor": false}, {"identifier": "stringColumn", "parameters": "(String name, String string)", "modifiers": "public", "return": "Row", "signature": "Row stringColumn(String name, String string)", "full_signature": "public Row stringColumn(String name, String string)", "class_method_signature": "Row.stringColumn(String name, String string)", "testcase": false, "constructor": false}, {"identifier": "integerColumn", "parameters": "(String name, Long integer)", "modifiers": "public", "return": "Row", "signature": "Row integerColumn(String name, Long integer)", "full_signature": "public Row integerColumn(String name, Long integer)", "class_method_signature": "Row.integerColumn(String name, Long integer)", "testcase": false, "constructor": false}, {"identifier": "boolColumn", "parameters": "(String name, Boolean bool)", "modifiers": "public", "return": "Row", "signature": "Row boolColumn(String name, Boolean bool)", "full_signature": "public Row boolColumn(String name, Boolean bool)", "class_method_signature": "Row.boolColumn(String name, Boolean bool)", "testcase": false, "constructor": false}, {"identifier": "uuidColumn", "parameters": "(String name, Uuid uuid)", "modifiers": "public", "return": "Row", "signature": "Row uuidColumn(String name, Uuid uuid)", "full_signature": "public Row uuidColumn(String name, Uuid uuid)", "class_method_signature": "Row.uuidColumn(String name, Uuid uuid)", "testcase": false, "constructor": false}, {"identifier": "namedUuidColumn", "parameters": "(String name, String uuidName)", "modifiers": "public", "return": "Row", "signature": "Row namedUuidColumn(String name, String uuidName)", "full_signature": "public Row namedUuidColumn(String name, String uuidName)", "class_method_signature": "Row.namedUuidColumn(String name, String uuidName)", "testcase": false, "constructor": false}, {"identifier": "mapColumn", "parameters": "(String name, java.util.Map<K, V> map)", "modifiers": "public", "return": "Row", "signature": "Row mapColumn(String name, java.util.Map<K, V> map)", "full_signature": "public Row mapColumn(String name, java.util.Map<K, V> map)", "class_method_signature": "Row.mapColumn(String name, java.util.Map<K, V> map)", "testcase": false, "constructor": false}, {"identifier": "setColumn", "parameters": "(String name, java.util.Set<T> set)", "modifiers": "public", "return": "Row", "signature": "Row setColumn(String name, java.util.Set<T> set)", "full_signature": "public Row setColumn(String name, java.util.Set<T> set)", "class_method_signature": "Row.setColumn(String name, java.util.Set<T> set)", "testcase": false, "constructor": false}, {"identifier": "getAtomColumn", "parameters": "(String name)", "modifiers": "private", "return": "T", "signature": "T getAtomColumn(String name)", "full_signature": "private T getAtomColumn(String name)", "class_method_signature": "Row.getAtomColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "getStringColumn", "parameters": "(String name)", "modifiers": "public", "return": "String", "signature": "String getStringColumn(String name)", "full_signature": "public String getStringColumn(String name)", "class_method_signature": "Row.getStringColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "getIntegerColumn", "parameters": "(String name)", "modifiers": "public", "return": "Long", "signature": "Long getIntegerColumn(String name)", "full_signature": "public Long getIntegerColumn(String name)", "class_method_signature": "Row.getIntegerColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "getBooleanColumn", "parameters": "(String name)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getBooleanColumn(String name)", "full_signature": "public Boolean getBooleanColumn(String name)", "class_method_signature": "Row.getBooleanColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "getUuidColumn", "parameters": "(String name)", "modifiers": "public", "return": "Uuid", "signature": "Uuid getUuidColumn(String name)", "full_signature": "public Uuid getUuidColumn(String name)", "class_method_signature": "Row.getUuidColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "getMapColumn", "parameters": "(String name)", "modifiers": "public", "return": "java.util.Map<K, V>", "signature": "java.util.Map<K, V> getMapColumn(String name)", "full_signature": "public java.util.Map<K, V> getMapColumn(String name)", "class_method_signature": "Row.getMapColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "getSetColumn", "parameters": "(String name)", "modifiers": "public", "return": "java.util.Set<T>", "signature": "java.util.Set<T> getSetColumn(String name)", "full_signature": "public java.util.Set<T> getSetColumn(String name)", "class_method_signature": "Row.getSetColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Row.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Row.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Row.toString()", "testcase": false, "constructor": false}], "file": "ovsdb-client/src/main/java/com/vmware/ovsdb/protocol/operation/notation/Row.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object other) {\n    if (this == other) {\n      return true;\n    }\n    if (!(other instanceof Row)) {\n      return false;\n    }\n    Row that = (Row) other;\n    return Objects.equals(columns, that.getColumns());\n  }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Row.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["equals", "getColumns"]}, "repository": {"repo_id": 125550262, "url": "https://github.com/vmware/ovsdb-client-library", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 12, "size": 288, "license": "licensed"}}