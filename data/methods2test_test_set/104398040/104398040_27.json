{"test_class": {"identifier": "TransformationOperationTest", "superclass": "extends TestHelper", "interfaces": "", "fields": [], "file": "butterfly-extensions-api/src/test/java/com/paypal/butterfly/extensions/api/TransformationOperationTest.java"}, "test_case": {"identifier": "performTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void performTest() throws IOException {\n        TransformationOperation transformationOperation = getNewTestTransformationOperation().relative(\"pom.xml\");\n\n        assertFalse(transformationOperation.hasBeenPerformed());\n        PerformResult performResult = transformationOperation.perform(transformedAppFolder, transformationContext);\n        assertTrue(transformationOperation.hasBeenPerformed());\n\n        assertNotNull(performResult);\n        assertEquals(performResult.getType(), PerformResult.Type.EXECUTION_RESULT);\n        assertEquals(performResult.getExecutionResult().getType(), TOExecutionResult.Type.NO_OP);\n\n        TOExecutionResult executionResult = (TOExecutionResult) performResult.getExecutionResult();\n        assertFalse(executionResult.isExceptionType());\n        assertEquals(executionResult.getDetails(), \"nothing to be changed\");\n    }", "signature": "void performTest()", "full_signature": "@Test public void performTest()", "class_method_signature": "TransformationOperationTest.performTest()", "testcase": true, "constructor": false, "invocations": ["relative", "getNewTestTransformationOperation", "assertFalse", "hasBeenPerformed", "perform", "assertTrue", "hasBeenPerformed", "assertNotNull", "assertEquals", "getType", "assertEquals", "getType", "getExecutionResult", "getExecutionResult", "assertFalse", "isExceptionType", "assertEquals", "getDetails"]}, "focal_class": {"identifier": "TransformationOperation", "superclass": "extends TransformationUtility<T>", "interfaces": "", "fields": [{"original_string": "private File readFile;", "modifier": "private", "type": "File", "declarator": "readFile", "var_name": "readFile"}, {"original_string": "private static final String READ_FILE_PREFIX = \"butterfly_\";", "modifier": "private static final", "type": "String", "declarator": "READ_FILE_PREFIX = \"butterfly_\"", "var_name": "READ_FILE_PREFIX"}], "methods": [{"identifier": "TransformationOperation", "parameters": "()", "modifiers": "public", "return": "", "signature": " TransformationOperation()", "full_signature": "public  TransformationOperation()", "class_method_signature": "TransformationOperation.TransformationOperation()", "testcase": false, "constructor": true}, {"identifier": "setSaveResult", "parameters": "(boolean saveResult)", "modifiers": "@Override protected final", "return": "T", "signature": "T setSaveResult(boolean saveResult)", "full_signature": "@Override protected final T setSaveResult(boolean saveResult)", "class_method_signature": "TransformationOperation.setSaveResult(boolean saveResult)", "testcase": false, "constructor": false}, {"identifier": "getOrCreateReadFile", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "protected final", "return": "File", "signature": "File getOrCreateReadFile(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "protected final File getOrCreateReadFile(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "TransformationOperation.getOrCreateReadFile(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}, {"identifier": "perform", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override public final", "return": "PerformResult", "signature": "PerformResult perform(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override public final PerformResult perform(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "TransformationOperation.perform(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}], "file": "butterfly-extensions-api/src/main/java/com/paypal/butterfly/extensions/api/TransformationOperation.java"}, "focal_method": {"identifier": "perform", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override public final", "return": "PerformResult", "body": "@Override\n    public final PerformResult perform(File transformedAppFolder, TransformationContext transformationContext) throws TransformationUtilityException {\n        PerformResult performResult = super.perform(transformedAppFolder, transformationContext);\n        if (readFile != null) {\n            readFile.deleteOnExit();\n        }\n\n        return performResult;\n    }", "signature": "PerformResult perform(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override public final PerformResult perform(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "TransformationOperation.perform(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false, "invocations": ["perform", "deleteOnExit"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}