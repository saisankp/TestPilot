{"test_class": {"identifier": "XWindowTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String displayName = \":99\";", "modifier": "private static final", "type": "String", "declarator": "displayName = \":99\"", "var_name": "displayName"}, {"original_string": "private static final int screenNr = 0;", "modifier": "private static final", "type": "int", "declarator": "screenNr = 0", "var_name": "screenNr"}, {"original_string": "public static XConnection xConnection;", "modifier": "public static", "type": "XConnection", "declarator": "xConnection", "var_name": "xConnection"}, {"original_string": "public static xcb_screen_t screen;", "modifier": "public static", "type": "xcb_screen_t", "declarator": "screen", "var_name": "screen"}, {"original_string": "private static Process xvfb;", "modifier": "private static", "type": "Process", "declarator": "xvfb", "var_name": "xvfb"}, {"original_string": "private XWindow xWindow;", "modifier": "private", "type": "XWindow", "declarator": "xWindow", "var_name": "xWindow"}, {"original_string": "private int windowId;", "modifier": "private", "type": "int", "declarator": "windowId", "var_name": "windowId"}, {"original_string": "@Mock\n\tprivate XTime xTime;", "modifier": "@Mock\n\tprivate", "type": "XTime", "declarator": "xTime", "var_name": "xTime"}], "file": "foundation/display.x11.impl/src/test/java/org/trinity/foundation/display/x11/impl/XWindowTest.java"}, "test_case": {"identifier": "testSetInputFocus", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSetInputFocus() {\n\t\tthis.xWindow.setInputFocus();\n\t\t// TODO verify\n\t}", "signature": "void testSetInputFocus()", "full_signature": "@Test public void testSetInputFocus()", "class_method_signature": "XWindowTest.testSetInputFocus()", "testcase": true, "constructor": false, "invocations": ["setInputFocus"]}, "focal_class": {"identifier": "XWindow", "superclass": "", "interfaces": "implements DisplaySurface", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(XWindow.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(XWindow.class)", "var_name": "LOG"}, {"original_string": "private static final ByteBuffer MOVE_VALUE_LIST_BUFFER = allocateDirect(8).order(nativeOrder());", "modifier": "private static final", "type": "ByteBuffer", "declarator": "MOVE_VALUE_LIST_BUFFER = allocateDirect(8).order(nativeOrder())", "var_name": "MOVE_VALUE_LIST_BUFFER"}, {"original_string": "private static final int MOVE_RESIZE_VALUE_MASK = XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y\n            | XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT;", "modifier": "private static final", "type": "int", "declarator": "MOVE_RESIZE_VALUE_MASK = XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y\n            | XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT", "var_name": "MOVE_RESIZE_VALUE_MASK"}, {"original_string": "private static final ByteBuffer MOVE_RESIZE_VALUE_LIST_BUFFER = allocateDirect(16).order(nativeOrder());", "modifier": "private static final", "type": "ByteBuffer", "declarator": "MOVE_RESIZE_VALUE_LIST_BUFFER = allocateDirect(16).order(nativeOrder())", "var_name": "MOVE_RESIZE_VALUE_LIST_BUFFER"}, {"original_string": "private static final int RESIZE_VALUE_MASK = XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT;", "modifier": "private static final", "type": "int", "declarator": "RESIZE_VALUE_MASK = XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT", "var_name": "RESIZE_VALUE_MASK"}, {"original_string": "private static final ByteBuffer RESIZE_VALUE_LIST = allocateDirect(8).order(nativeOrder());", "modifier": "private static final", "type": "ByteBuffer", "declarator": "RESIZE_VALUE_LIST = allocateDirect(8).order(nativeOrder())", "var_name": "RESIZE_VALUE_LIST"}, {"original_string": "private static final int LOWER_VALUE_MASK = XCB_CONFIG_WINDOW_STACK_MODE;", "modifier": "private static final", "type": "int", "declarator": "LOWER_VALUE_MASK = XCB_CONFIG_WINDOW_STACK_MODE", "var_name": "LOWER_VALUE_MASK"}, {"original_string": "private static final ByteBuffer LOWER_VALUE_LIST_BUFFER = allocateDirect(4).order(nativeOrder())\n            .putInt(XCB_STACK_MODE_BELOW);", "modifier": "private static final", "type": "ByteBuffer", "declarator": "LOWER_VALUE_LIST_BUFFER = allocateDirect(4).order(nativeOrder())\n            .putInt(XCB_STACK_MODE_BELOW)", "var_name": "LOWER_VALUE_LIST_BUFFER"}, {"original_string": "private static final int RAISE_VALUE_MASK = XCB_CONFIG_WINDOW_STACK_MODE;", "modifier": "private static final", "type": "int", "declarator": "RAISE_VALUE_MASK = XCB_CONFIG_WINDOW_STACK_MODE", "var_name": "RAISE_VALUE_MASK"}, {"original_string": "private static final ByteBuffer RAISE_VALUE_LIST_BUFFER = allocateDirect(4).order(nativeOrder())\n            .putInt(XCB_STACK_MODE_ABOVE);", "modifier": "private static final", "type": "ByteBuffer", "declarator": "RAISE_VALUE_LIST_BUFFER = allocateDirect(4).order(nativeOrder())\n            .putInt(XCB_STACK_MODE_ABOVE)", "var_name": "RAISE_VALUE_LIST_BUFFER"}, {"original_string": "private static final int MOVE_VALUE_MASK = XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y;", "modifier": "private static final", "type": "int", "declarator": "MOVE_VALUE_MASK = XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y", "var_name": "MOVE_VALUE_MASK"}, {"original_string": "private final DisplaySurfaceHandle resourceHandle;", "modifier": "private final", "type": "DisplaySurfaceHandle", "declarator": "resourceHandle", "var_name": "resourceHandle"}, {"original_string": "private final XConnection xConnection;", "modifier": "private final", "type": "XConnection", "declarator": "xConnection", "var_name": "xConnection"}, {"original_string": "private final XTime xTime;", "modifier": "private final", "type": "XTime", "declarator": "xTime", "var_name": "xTime"}, {"original_string": "private final ListeningExecutorService xExecutor;", "modifier": "private final", "type": "ListeningExecutorService", "declarator": "xExecutor", "var_name": "xExecutor"}, {"original_string": "private final AsyncListenableEventBus xWindowEventBus;", "modifier": "private final", "type": "AsyncListenableEventBus", "declarator": "xWindowEventBus", "var_name": "xWindowEventBus"}], "methods": [{"identifier": "XWindow", "parameters": "(final XTime xTime,\n            final XConnection xConnection,\n            @Nonnull @Assisted final DisplaySurfaceHandle resourceHandle,\n            @DisplayExecutor final ListeningExecutorService xExecutor)", "modifiers": "@AssistedInject", "return": "", "signature": " XWindow(final XTime xTime,\n            final XConnection xConnection,\n            @Nonnull @Assisted final DisplaySurfaceHandle resourceHandle,\n            @DisplayExecutor final ListeningExecutorService xExecutor)", "full_signature": "@AssistedInject  XWindow(final XTime xTime,\n            final XConnection xConnection,\n            @Nonnull @Assisted final DisplaySurfaceHandle resourceHandle,\n            @DisplayExecutor final ListeningExecutorService xExecutor)", "class_method_signature": "XWindow.XWindow(final XTime xTime,\n            final XConnection xConnection,\n            @Nonnull @Assisted final DisplaySurfaceHandle resourceHandle,\n            @DisplayExecutor final ListeningExecutorService xExecutor)", "testcase": false, "constructor": true}, {"identifier": "register", "parameters": "(final Object listener)", "modifiers": "@Override public", "return": "void", "signature": "void register(final Object listener)", "full_signature": "@Override public void register(final Object listener)", "class_method_signature": "XWindow.register(final Object listener)", "testcase": false, "constructor": false}, {"identifier": "post", "parameters": "(final Object event)", "modifiers": "@Override public", "return": "void", "signature": "void post(final Object event)", "full_signature": "@Override public void post(final Object event)", "class_method_signature": "XWindow.post(final Object event)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(final Object listener)", "modifiers": "@Override public", "return": "void", "signature": "void unregister(final Object listener)", "full_signature": "@Override public void unregister(final Object listener)", "class_method_signature": "XWindow.unregister(final Object listener)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(final Object listener,\n                         final ExecutorService executor)", "modifiers": "@Override public", "return": "void", "signature": "void register(final Object listener,\n                         final ExecutorService executor)", "full_signature": "@Override public void register(final Object listener,\n                         final ExecutorService executor)", "class_method_signature": "XWindow.register(final Object listener,\n                         final ExecutorService executor)", "testcase": false, "constructor": false}, {"identifier": "getDisplaySurfaceHandle", "parameters": "()", "modifiers": "@Override public", "return": "DisplaySurfaceHandle", "signature": "DisplaySurfaceHandle getDisplaySurfaceHandle()", "full_signature": "@Override public DisplaySurfaceHandle getDisplaySurfaceHandle()", "class_method_signature": "XWindow.getDisplaySurfaceHandle()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> destroy()", "full_signature": "@Override public ListenableFuture<Void> destroy()", "class_method_signature": "XWindow.destroy()", "testcase": false, "constructor": false}, {"identifier": "getWindowId", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getWindowId()", "full_signature": "private int getWindowId()", "class_method_signature": "XWindow.getWindowId()", "testcase": false, "constructor": false}, {"identifier": "getConnectionRef", "parameters": "()", "modifiers": "private", "return": "SWIGTYPE_p_xcb_connection_t", "signature": "SWIGTYPE_p_xcb_connection_t getConnectionRef()", "full_signature": "private SWIGTYPE_p_xcb_connection_t getConnectionRef()", "class_method_signature": "XWindow.getConnectionRef()", "testcase": false, "constructor": false}, {"identifier": "setInputFocus", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> setInputFocus()", "full_signature": "@Override public ListenableFuture<Void> setInputFocus()", "class_method_signature": "XWindow.setInputFocus()", "testcase": false, "constructor": false}, {"identifier": "lower", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> lower()", "full_signature": "@Override public ListenableFuture<Void> lower()", "class_method_signature": "XWindow.lower()", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> show()", "full_signature": "@Override public ListenableFuture<Void> show()", "class_method_signature": "XWindow.show()", "testcase": false, "constructor": false}, {"identifier": "move", "parameters": "(final int x,\n                                       final int y)", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> move(final int x,\n                                       final int y)", "full_signature": "@Override public ListenableFuture<Void> move(final int x,\n                                       final int y)", "class_method_signature": "XWindow.move(final int x,\n                                       final int y)", "testcase": false, "constructor": false}, {"identifier": "moveResize", "parameters": "(final int x,\n                                             final int y,\n                                             final int width,\n                                             final int height)", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> moveResize(final int x,\n                                             final int y,\n                                             final int width,\n                                             final int height)", "full_signature": "@Override public ListenableFuture<Void> moveResize(final int x,\n                                             final int y,\n                                             final int width,\n                                             final int height)", "class_method_signature": "XWindow.moveResize(final int x,\n                                             final int y,\n                                             final int width,\n                                             final int height)", "testcase": false, "constructor": false}, {"identifier": "raise", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> raise()", "full_signature": "@Override public ListenableFuture<Void> raise()", "class_method_signature": "XWindow.raise()", "testcase": false, "constructor": false}, {"identifier": "setParent", "parameters": "(final DisplayArea parent,\n                                            final int x,\n                                            final int y)", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> setParent(final DisplayArea parent,\n                                            final int x,\n                                            final int y)", "full_signature": "@Override public ListenableFuture<Void> setParent(final DisplayArea parent,\n                                            final int x,\n                                            final int y)", "class_method_signature": "XWindow.setParent(final DisplayArea parent,\n                                            final int x,\n                                            final int y)", "testcase": false, "constructor": false}, {"identifier": "resize", "parameters": "(final int width,\n                                         final int height)", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> resize(final int width,\n                                         final int height)", "full_signature": "@Override public ListenableFuture<Void> resize(final int width,\n                                         final int height)", "class_method_signature": "XWindow.resize(final int width,\n                                         final int height)", "testcase": false, "constructor": false}, {"identifier": "hide", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> hide()", "full_signature": "@Override public ListenableFuture<Void> hide()", "class_method_signature": "XWindow.hide()", "testcase": false, "constructor": false}, {"identifier": "getGeometry", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Rectangle>", "signature": "ListenableFuture<Rectangle> getGeometry()", "full_signature": "@Override public ListenableFuture<Rectangle> getGeometry()", "class_method_signature": "XWindow.getGeometry()", "testcase": false, "constructor": false}, {"identifier": "getGeometryReply", "parameters": "(final xcb_get_geometry_cookie_t cookie_t)", "modifiers": "protected", "return": "ListenableFuture<Rectangle>", "signature": "ListenableFuture<Rectangle> getGeometryReply(final xcb_get_geometry_cookie_t cookie_t)", "full_signature": "protected ListenableFuture<Rectangle> getGeometryReply(final xcb_get_geometry_cookie_t cookie_t)", "class_method_signature": "XWindow.getGeometryReply(final xcb_get_geometry_cookie_t cookie_t)", "testcase": false, "constructor": false}, {"identifier": "checkError", "parameters": "(final xcb_generic_error_t e)", "modifiers": "private", "return": "void", "signature": "void checkError(final xcb_generic_error_t e)", "full_signature": "private void checkError(final xcb_generic_error_t e)", "class_method_signature": "XWindow.checkError(final xcb_generic_error_t e)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "XWindow.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "XWindow.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "XWindow.toString()", "testcase": false, "constructor": false}], "file": "foundation/display.x11.impl/src/main/java/org/trinity/foundation/display/x11/impl/XWindow.java"}, "focal_method": {"identifier": "setInputFocus", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "body": "@Override\n    public ListenableFuture<Void> setInputFocus() {\n\n        final int winId = getWindowId();\n        final int time = this.xTime.getTime();\n\n        return this.xExecutor.submit(new Runnable() {\n\n            @Override\n            public void run() {\n                LOG.debug(\"[winId={}] set input focus.\",\n                        winId);\n                xcb_set_input_focus(getConnectionRef(),\n                        (short) XCB_INPUT_FOCUS_NONE,\n                        winId,\n                        time);\n                xcb_flush(getConnectionRef());\n            }\n        },\n                null);\n    }", "signature": "ListenableFuture<Void> setInputFocus()", "full_signature": "@Override public ListenableFuture<Void> setInputFocus()", "class_method_signature": "XWindow.setInputFocus()", "testcase": false, "constructor": false, "invocations": ["getWindowId", "getTime", "submit", "debug", "xcb_set_input_focus", "getConnectionRef", "xcb_flush", "getConnectionRef"]}, "repository": {"repo_id": 6621718, "url": "https://github.com/Zubnix/trinityshell", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 21, "size": 13569, "license": "licensed"}}