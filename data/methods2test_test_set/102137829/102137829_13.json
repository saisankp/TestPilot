{"test_class": {"identifier": "RandomGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/crypto/RandomGeneratorTest.java"}, "test_case": {"identifier": "shouldGeneratorFourRandomBytes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldGeneratorFourRandomBytes() {\n        RandomGenerator randomGenerator = new RandomGenerator();\n        byte[] randomBytes = randomGenerator.getRandomBytes(4);\n        Assert.assertNotNull(randomBytes);\n        Assert.assertEquals(randomBytes.length, 4);\n    }", "signature": "void shouldGeneratorFourRandomBytes()", "full_signature": "@Test public void shouldGeneratorFourRandomBytes()", "class_method_signature": "RandomGeneratorTest.shouldGeneratorFourRandomBytes()", "testcase": true, "constructor": false, "invocations": ["getRandomBytes", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "RandomGenerator", "superclass": "", "interfaces": "implements ByteGenerator", "fields": [{"original_string": "private SecureRandom random;", "modifier": "private", "type": "SecureRandom", "declarator": "random", "var_name": "random"}], "methods": [{"identifier": "RandomGenerator", "parameters": "()", "modifiers": "public", "return": "", "signature": " RandomGenerator()", "full_signature": "public  RandomGenerator()", "class_method_signature": "RandomGenerator.RandomGenerator()", "testcase": false, "constructor": true}, {"identifier": "getRandomBytes", "parameters": "(int numBytes)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getRandomBytes(int numBytes)", "full_signature": "@Override public byte[] getRandomBytes(int numBytes)", "class_method_signature": "RandomGenerator.getRandomBytes(int numBytes)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/crypto/RandomGenerator.java"}, "focal_method": {"identifier": "getRandomBytes", "parameters": "(int numBytes)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] getRandomBytes(int numBytes) {\n        byte[] randomBytes = new byte[numBytes];\n        random.nextBytes(randomBytes);\n\n        return randomBytes;\n    }", "signature": "byte[] getRandomBytes(int numBytes)", "full_signature": "@Override public byte[] getRandomBytes(int numBytes)", "class_method_signature": "RandomGenerator.getRandomBytes(int numBytes)", "testcase": false, "constructor": false, "invocations": ["nextBytes"]}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}