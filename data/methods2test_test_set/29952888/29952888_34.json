{"test_class": {"identifier": "EntityServiceImplTest", "superclass": "extends GaeTestBase", "interfaces": "", "fields": [{"original_string": "private static final String KIND_NAME = \"FakeEntity\";", "modifier": "private static final", "type": "String", "declarator": "KIND_NAME = \"FakeEntity\"", "var_name": "KIND_NAME"}, {"original_string": "private static final String PROPERTY_NAME = \"property-name\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTY_NAME = \"property-name\"", "var_name": "PROPERTY_NAME"}, {"original_string": "private static final String A_NAME = \"a-name\";", "modifier": "private static final", "type": "String", "declarator": "A_NAME = \"a-name\"", "var_name": "A_NAME"}, {"original_string": "private static final String ANOTHER_NAME = \"another-name\";", "modifier": "private static final", "type": "String", "declarator": "ANOTHER_NAME = \"another-name\"", "var_name": "ANOTHER_NAME"}, {"original_string": "@Inject\n    EntityService entityService;", "modifier": "@Inject", "type": "EntityService", "declarator": "entityService", "var_name": "entityService"}], "file": "gae-studio/gae-studio-server/src/test/java/com/arcbees/gaestudio/server/service/visualizer/EntityServiceImplTest.java"}, "test_case": {"identifier": "updateEntity_entityStored_shouldUpdateEntity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void updateEntity_entityStored_shouldUpdateEntity() throws EntityNotFoundException {\n        // given\n        Entity sentEntity = createEntityInDatastore(KIND_NAME, PROPERTY_NAME, A_NAME);\n        Long entityId = sentEntity.getKey().getId();\n\n        // when\n        sentEntity.setProperty(PROPERTY_NAME, ANOTHER_NAME);\n        entityService.updateEntity(sentEntity);\n\n        // then\n        Entity savedEntity = getEntityFromEntityResource(entityId);\n\n        assertEquals(ANOTHER_NAME, savedEntity.getProperty(PROPERTY_NAME));\n    }", "signature": "void updateEntity_entityStored_shouldUpdateEntity()", "full_signature": "@Test public void updateEntity_entityStored_shouldUpdateEntity()", "class_method_signature": "EntityServiceImplTest.updateEntity_entityStored_shouldUpdateEntity()", "testcase": true, "constructor": false, "invocations": ["createEntityInDatastore", "getId", "getKey", "setProperty", "updateEntity", "getEntityFromEntityResource", "assertEquals", "getProperty"]}, "focal_class": {"identifier": "EntityServiceImpl", "superclass": "", "interfaces": "implements EntityService", "fields": [{"original_string": "private final DatastoreHelper datastoreHelper;", "modifier": "private final", "type": "DatastoreHelper", "declarator": "datastoreHelper", "var_name": "datastoreHelper"}], "methods": [{"identifier": "EntityServiceImpl", "parameters": "(\n            DatastoreHelper datastoreHelper)", "modifiers": "@Inject", "return": "", "signature": " EntityServiceImpl(\n            DatastoreHelper datastoreHelper)", "full_signature": "@Inject  EntityServiceImpl(\n            DatastoreHelper datastoreHelper)", "class_method_signature": "EntityServiceImpl.EntityServiceImpl(\n            DatastoreHelper datastoreHelper)", "testcase": false, "constructor": true}, {"identifier": "getEntity", "parameters": "(String encodedKey)", "modifiers": "@Override public", "return": "Entity", "signature": "Entity getEntity(String encodedKey)", "full_signature": "@Override public Entity getEntity(String encodedKey)", "class_method_signature": "EntityServiceImpl.getEntity(String encodedKey)", "testcase": false, "constructor": false}, {"identifier": "updateEntity", "parameters": "(Entity entity)", "modifiers": "@Override public", "return": "Entity", "signature": "Entity updateEntity(Entity entity)", "full_signature": "@Override public Entity updateEntity(Entity entity)", "class_method_signature": "EntityServiceImpl.updateEntity(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "deleteEntity", "parameters": "(Key entityKey)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEntity(Key entityKey)", "full_signature": "@Override public void deleteEntity(Key entityKey)", "class_method_signature": "EntityServiceImpl.deleteEntity(Key entityKey)", "testcase": false, "constructor": false}], "file": "gae-studio/gae-studio-server/src/main/java/com/arcbees/gaestudio/server/service/visualizer/EntityServiceImpl.java"}, "focal_method": {"identifier": "updateEntity", "parameters": "(Entity entity)", "modifiers": "@Override public", "return": "Entity", "body": "@Override\n    public Entity updateEntity(Entity entity) throws EntityNotFoundException {\n        AppEngineHelper.disableApiHooks();\n\n        entity.getKey();\n\n        DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();\n        datastore.put(entity);\n\n        // This is required because put does not update the prototype in the reference\n        return datastore.get(entity.getKey());\n    }", "signature": "Entity updateEntity(Entity entity)", "full_signature": "@Override public Entity updateEntity(Entity entity)", "class_method_signature": "EntityServiceImpl.updateEntity(Entity entity)", "testcase": false, "constructor": false, "invocations": ["disableApiHooks", "getKey", "getDatastoreService", "put", "get", "getKey"]}, "repository": {"repo_id": 29952888, "url": "https://github.com/ArcBees/gae-studio", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 21, "size": 11408, "license": "licensed"}}