{"test_class": {"identifier": "AtomicPropertiesTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "descriptor/qsar/src/test/java/org/openscience/cdk/tools/AtomicPropertiesTest.java"}, "test_case": {"identifier": "testGetMass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMass() throws Exception {\n        AtomicProperties props = AtomicProperties.getInstance();\n        double mass = props.getMass(\"C\");\n        Assert.assertTrue(mass > 0);\n    }", "signature": "void testGetMass()", "full_signature": "@Test public void testGetMass()", "class_method_signature": "AtomicPropertiesTest.testGetMass()", "testcase": true, "constructor": false, "invocations": ["getInstance", "getMass", "assertTrue"]}, "focal_class": {"identifier": "AtomicProperties", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static AtomicProperties ap                  = null;", "modifier": "private static", "type": "AtomicProperties", "declarator": "ap                  = null", "var_name": "ap"}, {"original_string": "private Map<String, Double>     htMass              = new Hashtable<String, Double>();", "modifier": "private", "type": "Map<String, Double>", "declarator": "htMass              = new Hashtable<String, Double>()", "var_name": "htMass"}, {"original_string": "private Map<String, Double>     htVdWVolume         = new Hashtable<String, Double>();", "modifier": "private", "type": "Map<String, Double>", "declarator": "htVdWVolume         = new Hashtable<String, Double>()", "var_name": "htVdWVolume"}, {"original_string": "private Map<String, Double>     htElectronegativity = new Hashtable<String, Double>();", "modifier": "private", "type": "Map<String, Double>", "declarator": "htElectronegativity = new Hashtable<String, Double>()", "var_name": "htElectronegativity"}, {"original_string": "private Map<String, Double>     htPolarizability    = new Hashtable<String, Double>();", "modifier": "private", "type": "Map<String, Double>", "declarator": "htPolarizability    = new Hashtable<String, Double>()", "var_name": "htPolarizability"}], "methods": [{"identifier": "AtomicProperties", "parameters": "()", "modifiers": "private", "return": "", "signature": " AtomicProperties()", "full_signature": "private  AtomicProperties()", "class_method_signature": "AtomicProperties.AtomicProperties()", "testcase": false, "constructor": true}, {"identifier": "getVdWVolume", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "signature": "double getVdWVolume(String symbol)", "full_signature": "public double getVdWVolume(String symbol)", "class_method_signature": "AtomicProperties.getVdWVolume(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getNormalizedVdWVolume", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "signature": "double getNormalizedVdWVolume(String symbol)", "full_signature": "public double getNormalizedVdWVolume(String symbol)", "class_method_signature": "AtomicProperties.getNormalizedVdWVolume(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getElectronegativity", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "signature": "double getElectronegativity(String symbol)", "full_signature": "public double getElectronegativity(String symbol)", "class_method_signature": "AtomicProperties.getElectronegativity(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getNormalizedElectronegativity", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "signature": "double getNormalizedElectronegativity(String symbol)", "full_signature": "public double getNormalizedElectronegativity(String symbol)", "class_method_signature": "AtomicProperties.getNormalizedElectronegativity(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getPolarizability", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "signature": "double getPolarizability(String symbol)", "full_signature": "public double getPolarizability(String symbol)", "class_method_signature": "AtomicProperties.getPolarizability(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getNormalizedPolarizability", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "signature": "double getNormalizedPolarizability(String symbol)", "full_signature": "public double getNormalizedPolarizability(String symbol)", "class_method_signature": "AtomicProperties.getNormalizedPolarizability(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getMass", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "signature": "double getMass(String symbol)", "full_signature": "public double getMass(String symbol)", "class_method_signature": "AtomicProperties.getMass(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getNormalizedMass", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "signature": "double getNormalizedMass(String symbol)", "full_signature": "public double getNormalizedMass(String symbol)", "class_method_signature": "AtomicProperties.getNormalizedMass(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "AtomicProperties", "signature": "AtomicProperties getInstance()", "full_signature": "public static AtomicProperties getInstance()", "class_method_signature": "AtomicProperties.getInstance()", "testcase": false, "constructor": false}], "file": "descriptor/qsar/src/main/java/org/openscience/cdk/tools/AtomicProperties.java"}, "focal_method": {"identifier": "getMass", "parameters": "(String symbol)", "modifiers": "public", "return": "double", "body": "public double getMass(String symbol) {\n        return htMass.get(symbol);\n    }", "signature": "double getMass(String symbol)", "full_signature": "public double getMass(String symbol)", "class_method_signature": "AtomicProperties.getMass(String symbol)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}