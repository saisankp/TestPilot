{"test_class": {"identifier": "FloatingActionButtonHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ViewHandler myHandler;", "modifier": "private", "type": "ViewHandler", "declarator": "myHandler", "var_name": "myHandler"}], "file": "designer/testSrc/com/android/tools/idea/uibuilder/handlers/FloatingActionButtonHandlerTest.java"}, "test_case": {"identifier": "testGetXml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetXml() {\n    assertThat(myHandler.getXml(SdkConstants.FLOATING_ACTION_BUTTON.defaultName(), XmlType.COMPONENT_CREATION)).isEqualTo(\n      \"<android.support.design.widget.FloatingActionButton\\n\" +\n      \"    android:src=\\\"@android:drawable/ic_input_add\\\"\\n\" +\n      \"    android:layout_width=\\\"wrap_content\\\"\\n\" +\n      \"    android:layout_height=\\\"wrap_content\\\"\\n\" +\n      \"    android:clickable=\\\"true\\\" />\\n\");\n  }", "signature": "void testGetXml()", "full_signature": "@Test public void testGetXml()", "class_method_signature": "FloatingActionButtonHandlerTest.testGetXml()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getXml", "defaultName"]}, "focal_class": {"identifier": "FloatingActionButtonHandler", "superclass": "extends ImageViewHandler", "interfaces": "", "fields": [], "methods": [{"identifier": "getInspectorProperties", "parameters": "()", "modifiers": "@Override @NotNull public", "return": "List<String>", "signature": "List<String> getInspectorProperties()", "full_signature": "@Override @NotNull public List<String> getInspectorProperties()", "class_method_signature": "FloatingActionButtonHandler.getInspectorProperties()", "testcase": false, "constructor": false}, {"identifier": "getXml", "parameters": "(@NotNull String tagName, @NotNull XmlType xmlType)", "modifiers": "@Override @NotNull @Language(\"XML\") public", "return": "String", "signature": "String getXml(@NotNull String tagName, @NotNull XmlType xmlType)", "full_signature": "@Override @NotNull @Language(\"XML\") public String getXml(@NotNull String tagName, @NotNull XmlType xmlType)", "class_method_signature": "FloatingActionButtonHandler.getXml(@NotNull String tagName, @NotNull XmlType xmlType)", "testcase": false, "constructor": false}, {"identifier": "getSampleImageSrc", "parameters": "()", "modifiers": "@Override @NotNull public", "return": "String", "signature": "String getSampleImageSrc()", "full_signature": "@Override @NotNull public String getSampleImageSrc()", "class_method_signature": "FloatingActionButtonHandler.getSampleImageSrc()", "testcase": false, "constructor": false}, {"identifier": "getPreviewScale", "parameters": "(@NotNull String tagName)", "modifiers": "@Override public", "return": "double", "signature": "double getPreviewScale(@NotNull String tagName)", "full_signature": "@Override public double getPreviewScale(@NotNull String tagName)", "class_method_signature": "FloatingActionButtonHandler.getPreviewScale(@NotNull String tagName)", "testcase": false, "constructor": false}, {"identifier": "acceptsParent", "parameters": "(@NotNull NlComponent layout, @NotNull NlComponent newChild)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean acceptsParent(@NotNull NlComponent layout, @NotNull NlComponent newChild)", "full_signature": "@Override public boolean acceptsParent(@NotNull NlComponent layout, @NotNull NlComponent newChild)", "class_method_signature": "FloatingActionButtonHandler.acceptsParent(@NotNull NlComponent layout, @NotNull NlComponent newChild)", "testcase": false, "constructor": false}, {"identifier": "getAppBar", "parameters": "(@NotNull NlComponent component)", "modifiers": "@Nullable private static", "return": "NlComponent", "signature": "NlComponent getAppBar(@NotNull NlComponent component)", "full_signature": "@Nullable private static NlComponent getAppBar(@NotNull NlComponent component)", "class_method_signature": "FloatingActionButtonHandler.getAppBar(@NotNull NlComponent component)", "testcase": false, "constructor": false}], "file": "designer/src/com/android/tools/idea/uibuilder/handlers/FloatingActionButtonHandler.java"}, "focal_method": {"identifier": "getXml", "parameters": "(@NotNull String tagName, @NotNull XmlType xmlType)", "modifiers": "@Override @NotNull @Language(\"XML\") public", "return": "String", "body": "@Override\n  @NotNull\n  @Language(\"XML\")\n  public String getXml(@NotNull String tagName, @NotNull XmlType xmlType) {\n    XmlBuilder builder = new XmlBuilder()\n      .startTag(tagName)\n      .androidAttribute(ATTR_SRC, getSampleImageSrc())\n      .androidAttribute(ATTR_LAYOUT_WIDTH, VALUE_WRAP_CONTENT)\n      .androidAttribute(ATTR_LAYOUT_HEIGHT, VALUE_WRAP_CONTENT)\n      .androidAttribute(\"clickable\", true);\n\n    if (xmlType.equals(XmlType.PREVIEW_ON_PALETTE)) {\n      builder.attribute(APP_PREFIX, \"elevation\", \"0dp\");\n    }\n\n    return builder\n      .endTag(tagName)\n      .toString();\n  }", "signature": "String getXml(@NotNull String tagName, @NotNull XmlType xmlType)", "full_signature": "@Override @NotNull @Language(\"XML\") public String getXml(@NotNull String tagName, @NotNull XmlType xmlType)", "class_method_signature": "FloatingActionButtonHandler.getXml(@NotNull String tagName, @NotNull XmlType xmlType)", "testcase": false, "constructor": false, "invocations": ["androidAttribute", "androidAttribute", "androidAttribute", "androidAttribute", "startTag", "getSampleImageSrc", "equals", "attribute", "toString", "endTag"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}