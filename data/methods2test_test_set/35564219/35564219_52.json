{"test_class": {"identifier": "CompositeDiskCacheTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/cache/disk/CompositeDiskCacheTest.java"}, "test_case": {"identifier": "testCompositeDeletesToAllCaches", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCompositeDeletesToAllCaches() {\n\t\tDiskCache cache1 = Mockito.mock(DiskCache.class);\n\t\tDiskCache cache2 = Mockito.mock(DiskCache.class);\n\t\tDiskCache cache3 = Mockito.mock(DiskCache.class);\n\t\tDiskCache cache4 = Mockito.mock(DiskCache.class);\n\n\t\tCompositeDiskCache cache = new CompositeDiskCache(cache1, cache2, cache3, cache4);\n\t\tcache.delete(\"\");\n\t\tMockito.verify(cache1, Mockito.times(1)).delete(Mockito.anyString());\n\t\tMockito.verify(cache2, Mockito.times(1)).delete(Mockito.anyString());\n\t\tMockito.verify(cache3, Mockito.times(1)).delete(Mockito.anyString());\n\t\tMockito.verify(cache4, Mockito.times(1)).delete(Mockito.anyString());\n\t}", "signature": "void testCompositeDeletesToAllCaches()", "full_signature": "@Test public void testCompositeDeletesToAllCaches()", "class_method_signature": "CompositeDiskCacheTest.testCompositeDeletesToAllCaches()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "mock", "delete", "delete", "verify", "times", "anyString", "delete", "verify", "times", "anyString", "delete", "verify", "times", "anyString", "delete", "verify", "times", "anyString"]}, "focal_class": {"identifier": "CompositeDiskCache", "superclass": "", "interfaces": "implements DiskCache", "fields": [{"original_string": "private List<DiskCache> leafs;", "modifier": "private", "type": "List<DiskCache>", "declarator": "leafs", "var_name": "leafs"}], "methods": [{"identifier": "CompositeDiskCache", "parameters": "(DiskCache... caches)", "modifiers": "public", "return": "", "signature": " CompositeDiskCache(DiskCache... caches)", "full_signature": "public  CompositeDiskCache(DiskCache... caches)", "class_method_signature": "CompositeDiskCache.CompositeDiskCache(DiskCache... caches)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(String key)", "modifiers": "@Override public", "return": "File", "signature": "File get(String key)", "full_signature": "@Override public File get(String key)", "class_method_signature": "CompositeDiskCache.get(String key)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(String key, Writer writer)", "modifiers": "@Override public", "return": "void", "signature": "void put(String key, Writer writer)", "full_signature": "@Override public void put(String key, Writer writer)", "class_method_signature": "CompositeDiskCache.put(String key, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(String key)", "modifiers": "@Override public", "return": "void", "signature": "void delete(String key)", "full_signature": "@Override public void delete(String key)", "class_method_signature": "CompositeDiskCache.delete(String key)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "CompositeDiskCache.clear()", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/cache/disk/CompositeDiskCache.java"}, "focal_method": {"identifier": "delete", "parameters": "(String key)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void delete(String key) {\n\t\tsynchronized (this) {\n\t\t\tfor (int i=0; i<leafs.size(); i++) {\n\t\t\t\tDiskCache cache = leafs.get(i);\n\t\t\t\tcache.delete(key);\n\t\t\t}\n\t\t}\n\t}", "signature": "void delete(String key)", "full_signature": "@Override public void delete(String key)", "class_method_signature": "CompositeDiskCache.delete(String key)", "testcase": false, "constructor": false, "invocations": ["size", "get", "delete"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}