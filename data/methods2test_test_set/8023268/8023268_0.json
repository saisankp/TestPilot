{"test_class": {"identifier": "PercentileTest", "superclass": "extends KeenQueryTestBase", "interfaces": "", "fields": [], "file": "query/src/test/java/io/keen/client/java/PercentileTest.java"}, "test_case": {"identifier": "testPercentile_TooManyDecimalPlaces", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testPercentile_TooManyDecimalPlaces() {\n        Percentile.createStrict(0.00 + Double.MIN_VALUE);\n    }", "signature": "void testPercentile_TooManyDecimalPlaces()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testPercentile_TooManyDecimalPlaces()", "class_method_signature": "PercentileTest.testPercentile_TooManyDecimalPlaces()", "testcase": true, "constructor": false, "invocations": ["createStrict"]}, "focal_class": {"identifier": "Percentile", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double MIN_PERCENTILE = 0.01;", "modifier": "private static final", "type": "double", "declarator": "MIN_PERCENTILE = 0.01", "var_name": "MIN_PERCENTILE"}, {"original_string": "private static final double MAX_PERCENTILE = 100.00;", "modifier": "private static final", "type": "double", "declarator": "MAX_PERCENTILE = 100.00", "var_name": "MAX_PERCENTILE"}, {"original_string": "private final Double percentile;", "modifier": "private final", "type": "Double", "declarator": "percentile", "var_name": "percentile"}], "methods": [{"identifier": "Percentile", "parameters": "(double percentile)", "modifiers": "private", "return": "", "signature": " Percentile(double percentile)", "full_signature": "private  Percentile(double percentile)", "class_method_signature": "Percentile.Percentile(double percentile)", "testcase": false, "constructor": true}, {"identifier": "asDouble", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double asDouble()", "full_signature": "public Double asDouble()", "class_method_signature": "Percentile.asDouble()", "testcase": false, "constructor": false}, {"identifier": "createStrict", "parameters": "(double percentile)", "modifiers": "public static", "return": "Percentile", "signature": "Percentile createStrict(double percentile)", "full_signature": "public static Percentile createStrict(double percentile)", "class_method_signature": "Percentile.createStrict(double percentile)", "testcase": false, "constructor": false}, {"identifier": "createStrict", "parameters": "(Number percentile)", "modifiers": "public static", "return": "Percentile", "signature": "Percentile createStrict(Number percentile)", "full_signature": "public static Percentile createStrict(Number percentile)", "class_method_signature": "Percentile.createStrict(Number percentile)", "testcase": false, "constructor": false}, {"identifier": "createCoerced", "parameters": "(double percentile)", "modifiers": "public static", "return": "Percentile", "signature": "Percentile createCoerced(double percentile)", "full_signature": "public static Percentile createCoerced(double percentile)", "class_method_signature": "Percentile.createCoerced(double percentile)", "testcase": false, "constructor": false}, {"identifier": "createCoerced", "parameters": "(Number percentile)", "modifiers": "public static", "return": "Percentile", "signature": "Percentile createCoerced(Number percentile)", "full_signature": "public static Percentile createCoerced(Number percentile)", "class_method_signature": "Percentile.createCoerced(Number percentile)", "testcase": false, "constructor": false}, {"identifier": "getNumDecimalPlaces", "parameters": "(double doubleVal)", "modifiers": "private static", "return": "int", "signature": "int getNumDecimalPlaces(double doubleVal)", "full_signature": "private static int getNumDecimalPlaces(double doubleVal)", "class_method_signature": "Percentile.getNumDecimalPlaces(double doubleVal)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Percentile.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Percentile.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Percentile.hashCode()", "testcase": false, "constructor": false}], "file": "query/src/main/java/io/keen/client/java/Percentile.java"}, "focal_method": {"identifier": "createStrict", "parameters": "(double percentile)", "modifiers": "public static", "return": "Percentile", "body": "public static Percentile createStrict(double percentile) {\n        if (MIN_PERCENTILE > percentile || MAX_PERCENTILE < percentile) {\n            throw new IllegalArgumentException(\"The 'percentile' must be in the range (0, 100].\");\n        }\n\n        if (getNumDecimalPlaces(percentile) > 2) {\n            throw new IllegalArgumentException(\"The 'percentile' has over two decimal places.\");\n        }\n\n        return new Percentile(percentile);\n    }", "signature": "Percentile createStrict(double percentile)", "full_signature": "public static Percentile createStrict(double percentile)", "class_method_signature": "Percentile.createStrict(double percentile)", "testcase": false, "constructor": false, "invocations": ["getNumDecimalPlaces"]}, "repository": {"repo_id": 8023268, "url": "https://github.com/keenlabs/KeenClient-Java", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 74, "size": 4291, "license": "licensed"}}