{"test_class": {"identifier": "RpcServerHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TestSpanHandler spans = new TestSpanHandler();", "modifier": "", "type": "TestSpanHandler", "declarator": "spans = new TestSpanHandler()", "var_name": "spans"}, {"original_string": "TraceContext context = TraceContext.newBuilder().traceId(1L).spanId(1L).sampled(true).build();", "modifier": "", "type": "TraceContext", "declarator": "context = TraceContext.newBuilder().traceId(1L).spanId(1L).sampled(true).build()", "var_name": "context"}, {"original_string": "RpcTracing httpTracing;", "modifier": "", "type": "RpcTracing", "declarator": "httpTracing", "var_name": "httpTracing"}, {"original_string": "RpcServerHandler handler;", "modifier": "", "type": "RpcServerHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "@Mock(answer = CALLS_REAL_METHODS) RpcServerRequest request;", "modifier": "@Mock(answer = CALLS_REAL_METHODS)", "type": "RpcServerRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock(answer = CALLS_REAL_METHODS) RpcServerResponse response;", "modifier": "@Mock(answer = CALLS_REAL_METHODS)", "type": "RpcServerResponse", "declarator": "response", "var_name": "response"}], "file": "instrumentation/rpc/src/test/java/brave/rpc/RpcServerHandlerTest.java"}, "test_case": {"identifier": "handleSend_finishesSpanEvenIfUnwrappedNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void handleSend_finishesSpanEvenIfUnwrappedNull() {\n    brave.Span span = mock(brave.Span.class);\n    when(span.context()).thenReturn(context);\n    when(span.customizer()).thenReturn(span);\n\n    handler.handleSend(response, span);\n\n    verify(span).isNoop();\n    verify(span).context();\n    verify(span).customizer();\n    verify(span).finish();\n    verifyNoMoreInteractions(span);\n  }", "signature": "void handleSend_finishesSpanEvenIfUnwrappedNull()", "full_signature": "@Test public void handleSend_finishesSpanEvenIfUnwrappedNull()", "class_method_signature": "RpcServerHandlerTest.handleSend_finishesSpanEvenIfUnwrappedNull()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "context", "thenReturn", "when", "customizer", "handleSend", "isNoop", "verify", "context", "verify", "customizer", "verify", "finish", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "RpcServerHandler", "superclass": "extends RpcHandler<RpcServerRequest, RpcServerResponse>", "interfaces": "", "fields": [{"original_string": "final Tracer tracer;", "modifier": "final", "type": "Tracer", "declarator": "tracer", "var_name": "tracer"}, {"original_string": "final Extractor<RpcServerRequest> extractor;", "modifier": "final", "type": "Extractor<RpcServerRequest>", "declarator": "extractor", "var_name": "extractor"}, {"original_string": "final SamplerFunction<RpcRequest> sampler;", "modifier": "final", "type": "SamplerFunction<RpcRequest>", "declarator": "sampler", "var_name": "sampler"}], "methods": [{"identifier": "create", "parameters": "(RpcTracing rpcTracing)", "modifiers": "public static", "return": "RpcServerHandler", "signature": "RpcServerHandler create(RpcTracing rpcTracing)", "full_signature": "public static RpcServerHandler create(RpcTracing rpcTracing)", "class_method_signature": "RpcServerHandler.create(RpcTracing rpcTracing)", "testcase": false, "constructor": false}, {"identifier": "RpcServerHandler", "parameters": "(RpcTracing rpcTracing)", "modifiers": "", "return": "", "signature": " RpcServerHandler(RpcTracing rpcTracing)", "full_signature": "  RpcServerHandler(RpcTracing rpcTracing)", "class_method_signature": "RpcServerHandler.RpcServerHandler(RpcTracing rpcTracing)", "testcase": false, "constructor": true}, {"identifier": "handleReceive", "parameters": "(RpcServerRequest request)", "modifiers": "public", "return": "Span", "signature": "Span handleReceive(RpcServerRequest request)", "full_signature": "public Span handleReceive(RpcServerRequest request)", "class_method_signature": "RpcServerHandler.handleReceive(RpcServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "nextSpan", "parameters": "(TraceContextOrSamplingFlags extracted, RpcServerRequest request)", "modifiers": "", "return": "Span", "signature": "Span nextSpan(TraceContextOrSamplingFlags extracted, RpcServerRequest request)", "full_signature": " Span nextSpan(TraceContextOrSamplingFlags extracted, RpcServerRequest request)", "class_method_signature": "RpcServerHandler.nextSpan(TraceContextOrSamplingFlags extracted, RpcServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleSend", "parameters": "(RpcServerResponse response, Span span)", "modifiers": "public", "return": "void", "signature": "void handleSend(RpcServerResponse response, Span span)", "full_signature": "public void handleSend(RpcServerResponse response, Span span)", "class_method_signature": "RpcServerHandler.handleSend(RpcServerResponse response, Span span)", "testcase": false, "constructor": false}], "file": "instrumentation/rpc/src/main/java/brave/rpc/RpcServerHandler.java"}, "focal_method": {"identifier": "handleSend", "parameters": "(RpcServerResponse response, Span span)", "modifiers": "public", "return": "void", "body": "public void handleSend(RpcServerResponse response, Span span) {\n    handleFinish(response, span);\n  }", "signature": "void handleSend(RpcServerResponse response, Span span)", "full_signature": "public void handleSend(RpcServerResponse response, Span span)", "class_method_signature": "RpcServerHandler.handleSend(RpcServerResponse response, Span span)", "testcase": false, "constructor": false, "invocations": ["handleFinish"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}