{"test_class": {"identifier": "DemandResponseControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Float INTERVAL_VALUE = 1.0F;", "modifier": "private static final", "type": "Float", "declarator": "INTERVAL_VALUE = 1.0F", "var_name": "INTERVAL_VALUE"}, {"original_string": "private static final Integer INTERVAL_DURATION = 1000;", "modifier": "private static final", "type": "Integer", "declarator": "INTERVAL_DURATION = 1000", "var_name": "INTERVAL_DURATION"}, {"original_string": "private static final String APPLICATION_JSON_HEADER_VALUE = \"application/json\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_JSON_HEADER_VALUE = \"application/json\"", "var_name": "APPLICATION_JSON_HEADER_VALUE"}, {"original_string": "private static final String CONTENT_TYPE_HEADER_NAME = \"Content-Type\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE_HEADER_NAME = \"Content-Type\"", "var_name": "CONTENT_TYPE_HEADER_NAME"}, {"original_string": "private static final String DEMAND_RESPONSE_EVENT_URL = \"/DemandResponseEvent/\";", "modifier": "private static final", "type": "String", "declarator": "DEMAND_RESPONSE_EVENT_URL = \"/DemandResponseEvent/\"", "var_name": "DEMAND_RESPONSE_EVENT_URL"}, {"original_string": "private static final String DURATION = \"PT5S\";", "modifier": "private static final", "type": "String", "declarator": "DURATION = \"PT5S\"", "var_name": "DURATION"}, {"original_string": "private static final String NOTIFICATION_DURATION = \"P1D\";", "modifier": "private static final", "type": "String", "declarator": "NOTIFICATION_DURATION = \"P1D\"", "var_name": "NOTIFICATION_DURATION"}, {"original_string": "private static final String TOLERANCE_DURATION = \"PT5M\";", "modifier": "private static final", "type": "String", "declarator": "TOLERANCE_DURATION = \"PT5M\"", "var_name": "TOLERANCE_DURATION"}, {"original_string": "private static final Long MODIFICATION = -1L;", "modifier": "private static final", "type": "Long", "declarator": "MODIFICATION = -1L", "var_name": "MODIFICATION"}, {"original_string": "private static final Long START = 10L;", "modifier": "private static final", "type": "Long", "declarator": "START = 10L", "var_name": "START"}, {"original_string": "private static final String VEN1 = \"ven1\";", "modifier": "private static final", "type": "String", "declarator": "VEN1 = \"ven1\"", "var_name": "VEN1"}, {"original_string": "private static final String VEN2 = \"ven2\";", "modifier": "private static final", "type": "String", "declarator": "VEN2 = \"ven2\"", "var_name": "VEN2"}, {"original_string": "private static final String GROUP1 = \"group1\";", "modifier": "private static final", "type": "String", "declarator": "GROUP1 = \"group1\"", "var_name": "GROUP1"}, {"original_string": "private static final String UNKNOWN_MARKETCONTEXT_NAME = \"mouaiccool\";", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_MARKETCONTEXT_NAME = \"mouaiccool\"", "var_name": "UNKNOWN_MARKETCONTEXT_NAME"}, {"original_string": "private static final String MARKETCONTEXT_NAME = \"http://oadr.avob.com\";", "modifier": "private static final", "type": "String", "declarator": "MARKETCONTEXT_NAME = \"http://oadr.avob.com\"", "var_name": "MARKETCONTEXT_NAME"}, {"original_string": "private static final String GROUP_PARAM = \"group\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_PARAM = \"group\"", "var_name": "GROUP_PARAM"}, {"original_string": "private static final String VEN_PARAM = \"ven\";", "modifier": "private static final", "type": "String", "declarator": "VEN_PARAM = \"ven\"", "var_name": "VEN_PARAM"}, {"original_string": "private static final String LEVEL_SIGNAL_TYPE = \"level\";", "modifier": "private static final", "type": "String", "declarator": "LEVEL_SIGNAL_TYPE = \"level\"", "var_name": "LEVEL_SIGNAL_TYPE"}, {"original_string": "private static final String SIMPLE_SIGNAL_NAME = \"SIMPLE\";", "modifier": "private static final", "type": "String", "declarator": "SIMPLE_SIGNAL_NAME = \"SIMPLE\"", "var_name": "SIMPLE_SIGNAL_NAME"}, {"original_string": "private static final String SIGNAL_UNIT_TYPE = \"NONE\";", "modifier": "private static final", "type": "String", "declarator": "SIGNAL_UNIT_TYPE = \"NONE\"", "var_name": "SIGNAL_UNIT_TYPE"}, {"original_string": "@Autowired\n\tprivate WebApplicationContext wac;", "modifier": "@Autowired\n\tprivate", "type": "WebApplicationContext", "declarator": "wac", "var_name": "wac"}, {"original_string": "@Autowired\n\tprivate Filter springSecurityFilterChain;", "modifier": "@Autowired\n\tprivate", "type": "Filter", "declarator": "springSecurityFilterChain", "var_name": "springSecurityFilterChain"}, {"original_string": "@Resource\n\tprivate DemandResponseEventService demandResponseEventService;", "modifier": "@Resource\n\tprivate", "type": "DemandResponseEventService", "declarator": "demandResponseEventService", "var_name": "demandResponseEventService"}, {"original_string": "@Resource\n\tprivate VenService venService;", "modifier": "@Resource\n\tprivate", "type": "VenService", "declarator": "venService", "var_name": "venService"}, {"original_string": "@Resource\n\tprivate VenGroupService venGroupService;", "modifier": "@Resource\n\tprivate", "type": "VenGroupService", "declarator": "venGroupService", "var_name": "venGroupService"}, {"original_string": "@Resource\n\tprivate VenMarketContextService venMarketContextService;", "modifier": "@Resource\n\tprivate", "type": "VenMarketContextService", "declarator": "venMarketContextService", "var_name": "venMarketContextService"}, {"original_string": "@Resource\n\tprivate DtoMapper dozerMapper;", "modifier": "@Resource\n\tprivate", "type": "DtoMapper", "declarator": "dozerMapper", "var_name": "dozerMapper"}, {"original_string": "private UserRequestPostProcessor adminSession = SecurityMockMvcRequestPostProcessors.user(\"admin\").roles(\"ADMIN\");", "modifier": "private", "type": "UserRequestPostProcessor", "declarator": "adminSession = SecurityMockMvcRequestPostProcessors.user(\"admin\").roles(\"ADMIN\")", "var_name": "adminSession"}, {"original_string": "private UserRequestPostProcessor venSession = SecurityMockMvcRequestPostProcessors.user(VEN1).roles(\"VEN\");", "modifier": "private", "type": "UserRequestPostProcessor", "declarator": "venSession = SecurityMockMvcRequestPostProcessors.user(VEN1).roles(\"VEN\")", "var_name": "venSession"}, {"original_string": "private UserRequestPostProcessor userSession = SecurityMockMvcRequestPostProcessors.user(VEN1).roles(\"USER\");", "modifier": "private", "type": "UserRequestPostProcessor", "declarator": "userSession = SecurityMockMvcRequestPostProcessors.user(VEN1).roles(\"USER\")", "var_name": "userSession"}, {"original_string": "private List<Ven> vens = new ArrayList<>();", "modifier": "private", "type": "List<Ven>", "declarator": "vens = new ArrayList<>()", "var_name": "vens"}, {"original_string": "private List<DemandResponseEvent> events = new ArrayList<>();", "modifier": "private", "type": "List<DemandResponseEvent>", "declarator": "events = new ArrayList<>()", "var_name": "events"}, {"original_string": "private DemandResponseEvent event1 = null;", "modifier": "private", "type": "DemandResponseEvent", "declarator": "event1 = null", "var_name": "event1"}, {"original_string": "private VenMarketContext marketContext = null;", "modifier": "private", "type": "VenMarketContext", "declarator": "marketContext = null", "var_name": "marketContext"}, {"original_string": "private VenGroup group = null;", "modifier": "private", "type": "VenGroup", "declarator": "group = null", "var_name": "group"}, {"original_string": "private MockMvc mockMvc;", "modifier": "private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "private ObjectMapper mapper = new ObjectMapper();", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}], "file": "OpenADRServerVTNCommon/src/test/java/com/avob/openadr/server/common/vtn/controller/DemandResponseControllerTest.java"}, "test_case": {"identifier": "readVenDemandResponseEventTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void readVenDemandResponseEventTest() throws Exception {\n\n\t\tthis.mockMvc.perform(\n\t\t\t\tMockMvcRequestBuilders.get(DEMAND_RESPONSE_EVENT_URL + \"mouaiccool/venResponse\").with(adminSession))\n\t\t\t\t.andExpect(MockMvcResultMatchers.status().is(HttpStatus.BAD_REQUEST_400));\n\n\t\tthis.mockMvc\n\t\t\t\t.perform(MockMvcRequestBuilders.get(DEMAND_RESPONSE_EVENT_URL + \"12/venResponse\").with(adminSession))\n\t\t\t\t.andExpect(MockMvcResultMatchers.status().is(HttpStatus.NOT_FOUND_404));\n\n\t\tMvcResult andReturn = this.mockMvc\n\t\t\t\t.perform(MockMvcRequestBuilders.get(DEMAND_RESPONSE_EVENT_URL + event1.getId() + \"/venResponse\")\n\t\t\t\t\t\t.with(adminSession))\n\t\t\t\t.andExpect(MockMvcResultMatchers.status().is(HttpStatus.OK_200)).andReturn();\n\t\tList<VenDemandResponseEventDto> convertMvcResultToVenDemandResponseEventDtoList = convertMvcResultToVenDemandResponseEventDtoList(\n\t\t\t\tandReturn);\n\t\tassertEquals(2, convertMvcResultToVenDemandResponseEventDtoList.size());\n\n\t}", "signature": "void readVenDemandResponseEventTest()", "full_signature": "@Test public void readVenDemandResponseEventTest()", "class_method_signature": "DemandResponseControllerTest.readVenDemandResponseEventTest()", "testcase": true, "constructor": false, "invocations": ["andExpect", "perform", "with", "get", "is", "status", "andExpect", "perform", "with", "get", "is", "status", "andReturn", "andExpect", "perform", "with", "get", "getId", "is", "status", "convertMvcResultToVenDemandResponseEventDtoList", "assertEquals", "size"]}, "focal_class": {"identifier": "DemandResponseController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DemandResponseController.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DemandResponseController.class)", "var_name": "LOGGER"}, {"original_string": "@Resource\n\tprivate DtoMapper dtoMapper;", "modifier": "@Resource\n\tprivate", "type": "DtoMapper", "declarator": "dtoMapper", "var_name": "dtoMapper"}, {"original_string": "@Autowired\n\tprivate DemandResponseEventService demandResponseEventService;", "modifier": "@Autowired\n\tprivate", "type": "DemandResponseEventService", "declarator": "demandResponseEventService", "var_name": "demandResponseEventService"}, {"original_string": "@Resource\n\tprivate DemandResponseEventCreateDtoValidator demandResponseEventCreateDtoValidator;", "modifier": "@Resource\n\tprivate", "type": "DemandResponseEventCreateDtoValidator", "declarator": "demandResponseEventCreateDtoValidator", "var_name": "demandResponseEventCreateDtoValidator"}, {"original_string": "@Resource\n\tprivate DemandResponseEventUpdateDtoValidator demandResponseEventUpdateDtoValidator;", "modifier": "@Resource\n\tprivate", "type": "DemandResponseEventUpdateDtoValidator", "declarator": "demandResponseEventUpdateDtoValidator", "var_name": "demandResponseEventUpdateDtoValidator"}], "methods": [{"identifier": "initBinderCreate", "parameters": "(WebDataBinder binder)", "modifiers": "@InitBinder(\"demandResponseEventCreateDto\") protected", "return": "void", "signature": "void initBinderCreate(WebDataBinder binder)", "full_signature": "@InitBinder(\"demandResponseEventCreateDto\") protected void initBinderCreate(WebDataBinder binder)", "class_method_signature": "DemandResponseController.initBinderCreate(WebDataBinder binder)", "testcase": false, "constructor": false}, {"identifier": "initBinderUpdate", "parameters": "(WebDataBinder binder)", "modifiers": "@InitBinder(\"demandResponseEventUpdateDto\") protected", "return": "void", "signature": "void initBinderUpdate(WebDataBinder binder)", "full_signature": "@InitBinder(\"demandResponseEventUpdateDto\") protected void initBinderUpdate(WebDataBinder binder)", "class_method_signature": "DemandResponseController.initBinderUpdate(WebDataBinder binder)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(@RequestBody List<DemandResponseEventFilter> filters,\n\t\t\t@RequestParam(value = \"start\", required = false) Long start,\n\t\t\t@RequestParam(value = \"end\", required = false) Long end,\n\t\t\t@RequestParam(value = \"page\", required = false) Integer page,\n\t\t\t@RequestParam(value = \"size\", required = false) Integer size, HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/search\", method = RequestMethod.POST) @ResponseBody public", "return": "List<DemandResponseEventReadDto>", "signature": "List<DemandResponseEventReadDto> search(@RequestBody List<DemandResponseEventFilter> filters,\n\t\t\t@RequestParam(value = \"start\", required = false) Long start,\n\t\t\t@RequestParam(value = \"end\", required = false) Long end,\n\t\t\t@RequestParam(value = \"page\", required = false) Integer page,\n\t\t\t@RequestParam(value = \"size\", required = false) Integer size, HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/search\", method = RequestMethod.POST) @ResponseBody public List<DemandResponseEventReadDto> search(@RequestBody List<DemandResponseEventFilter> filters,\n\t\t\t@RequestParam(value = \"start\", required = false) Long start,\n\t\t\t@RequestParam(value = \"end\", required = false) Long end,\n\t\t\t@RequestParam(value = \"page\", required = false) Integer page,\n\t\t\t@RequestParam(value = \"size\", required = false) Integer size, HttpServletResponse response)", "class_method_signature": "DemandResponseController.search(@RequestBody List<DemandResponseEventFilter> filters,\n\t\t\t@RequestParam(value = \"start\", required = false) Long start,\n\t\t\t@RequestParam(value = \"end\", required = false) Long end,\n\t\t\t@RequestParam(value = \"page\", required = false) Integer page,\n\t\t\t@RequestParam(value = \"size\", required = false) Integer size, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(@Valid @RequestBody DemandResponseEventCreateDto event,\n\t\t\tHttpServletResponse response, BindingResult result)", "modifiers": "@RequestMapping(value = \"/\", method = RequestMethod.POST) @ResponseBody public", "return": "DemandResponseEventReadDto", "signature": "DemandResponseEventReadDto create(@Valid @RequestBody DemandResponseEventCreateDto event,\n\t\t\tHttpServletResponse response, BindingResult result)", "full_signature": "@RequestMapping(value = \"/\", method = RequestMethod.POST) @ResponseBody public DemandResponseEventReadDto create(@Valid @RequestBody DemandResponseEventCreateDto event,\n\t\t\tHttpServletResponse response, BindingResult result)", "class_method_signature": "DemandResponseController.create(@Valid @RequestBody DemandResponseEventCreateDto event,\n\t\t\tHttpServletResponse response, BindingResult result)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(@PathVariable(value = \"id\") Long id,\n\t\t\t@Valid @RequestBody DemandResponseEventUpdateDto event, HttpServletResponse response,\n\t\t\tBindingResult result)", "modifiers": "@RequestMapping(value = \"/{id}\", method = RequestMethod.PUT) @ResponseBody public", "return": "DemandResponseEventReadDto", "signature": "DemandResponseEventReadDto update(@PathVariable(value = \"id\") Long id,\n\t\t\t@Valid @RequestBody DemandResponseEventUpdateDto event, HttpServletResponse response,\n\t\t\tBindingResult result)", "full_signature": "@RequestMapping(value = \"/{id}\", method = RequestMethod.PUT) @ResponseBody public DemandResponseEventReadDto update(@PathVariable(value = \"id\") Long id,\n\t\t\t@Valid @RequestBody DemandResponseEventUpdateDto event, HttpServletResponse response,\n\t\t\tBindingResult result)", "class_method_signature": "DemandResponseController.update(@PathVariable(value = \"id\") Long id,\n\t\t\t@Valid @RequestBody DemandResponseEventUpdateDto event, HttpServletResponse response,\n\t\t\tBindingResult result)", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{id}/publish\", method = RequestMethod.POST) @ResponseBody public", "return": "DemandResponseEventReadDto", "signature": "DemandResponseEventReadDto publish(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{id}/publish\", method = RequestMethod.POST) @ResponseBody public DemandResponseEventReadDto publish(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "class_method_signature": "DemandResponseController.publish(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "active", "parameters": "(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{id}/active\", method = RequestMethod.POST) @ResponseBody public", "return": "DemandResponseEventReadDto", "signature": "DemandResponseEventReadDto active(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{id}/active\", method = RequestMethod.POST) @ResponseBody public DemandResponseEventReadDto active(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "class_method_signature": "DemandResponseController.active(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{id}/cancel\", method = RequestMethod.POST) @ResponseBody public", "return": "DemandResponseEventReadDto", "signature": "DemandResponseEventReadDto cancel(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{id}/cancel\", method = RequestMethod.POST) @ResponseBody public DemandResponseEventReadDto cancel(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "class_method_signature": "DemandResponseController.cancel(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{id}\", method = RequestMethod.GET) @ResponseBody public", "return": "DemandResponseEventReadDto", "signature": "DemandResponseEventReadDto read(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{id}\", method = RequestMethod.GET) @ResponseBody public DemandResponseEventReadDto read(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "class_method_signature": "DemandResponseController.read(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE) @ResponseBody public", "return": "void", "signature": "void delete(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE) @ResponseBody public void delete(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "class_method_signature": "DemandResponseController.delete(@PathVariable(value = \"id\") Long id, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "readVenDemandResponseEvent", "parameters": "(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{id}/venResponse\", method = RequestMethod.GET) @ResponseBody public", "return": "List<VenDemandResponseEventDto>", "signature": "List<VenDemandResponseEventDto> readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{id}/venResponse\", method = RequestMethod.GET) @ResponseBody public List<VenDemandResponseEventDto> readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response)", "class_method_signature": "DemandResponseController.readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "readVenDemandResponseEvent", "parameters": "(@PathVariable(value = \"id\") Long id,\n\t\t\t@PathVariable(value = \"username\") String username, HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{id}/venResponse/{username}\", method = RequestMethod.GET) @ResponseBody public", "return": "VenDemandResponseEventDto", "signature": "VenDemandResponseEventDto readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\t@PathVariable(value = \"username\") String username, HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{id}/venResponse/{username}\", method = RequestMethod.GET) @ResponseBody public VenDemandResponseEventDto readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\t@PathVariable(value = \"username\") String username, HttpServletResponse response)", "class_method_signature": "DemandResponseController.readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\t@PathVariable(value = \"username\") String username, HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "OpenADRServerVTNCommon/src/main/java/com/avob/openadr/server/common/vtn/controller/DemandResponseController.java"}, "focal_method": {"identifier": "readVenDemandResponseEvent", "parameters": "(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{id}/venResponse\", method = RequestMethod.GET) @ResponseBody public", "return": "List<VenDemandResponseEventDto>", "body": "@RequestMapping(value = \"/{id}/venResponse\", method = RequestMethod.GET)\n\t@ResponseBody\n\tpublic List<VenDemandResponseEventDto> readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response) {\n\n\t\ttry {\n\t\t\tList<VenDemandResponseEvent> venDemandResponseEvent = demandResponseEventService\n\t\t\t\t\t.getVenDemandResponseEvent(id);\n\n\t\t\treturn dtoMapper.mapList(venDemandResponseEvent, VenDemandResponseEventDto.class);\n\n\t\t} catch (OadrElementNotFoundException e) {\n\t\t\tresponse.setStatus(HttpStatus.NOT_FOUND_404);\n\t\t\treturn null;\n\t\t}\n\n\t}", "signature": "List<VenDemandResponseEventDto> readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{id}/venResponse\", method = RequestMethod.GET) @ResponseBody public List<VenDemandResponseEventDto> readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response)", "class_method_signature": "DemandResponseController.readVenDemandResponseEvent(@PathVariable(value = \"id\") Long id,\n\t\t\tHttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["getVenDemandResponseEvent", "mapList", "setStatus"]}, "repository": {"repo_id": 169761438, "url": "https://github.com/avob/OpenADR", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 55915, "license": "licensed"}}