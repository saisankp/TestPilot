{"test_class": {"identifier": "MessageProcessorProxyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MESSAGE_PROCESSOR_FUNCTION_NAME = \"messageProcessorLambda\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_PROCESSOR_FUNCTION_NAME = \"messageProcessorLambda\"", "var_name": "MESSAGE_PROCESSOR_FUNCTION_NAME"}, {"original_string": "private static final Message MESSAGE1 = new Message().withMessageId(\"message1\").withBody(\"this is a test message1\");", "modifier": "private static final", "type": "Message", "declarator": "MESSAGE1 = new Message().withMessageId(\"message1\").withBody(\"this is a test message1\")", "var_name": "MESSAGE1"}, {"original_string": "private static final Message MESSAGE2 = new Message().withMessageId(\"message2\").withBody(\"this is a test message2\");", "modifier": "private static final", "type": "Message", "declarator": "MESSAGE2 = new Message().withMessageId(\"message2\").withBody(\"this is a test message2\")", "var_name": "MESSAGE2"}, {"original_string": "private static final Message MESSAGE3 = new Message().withMessageId(\"message3\").withBody(\"this is a test message3\");", "modifier": "private static final", "type": "Message", "declarator": "MESSAGE3 = new Message().withMessageId(\"message3\").withBody(\"this is a test message3\")", "var_name": "MESSAGE3"}, {"original_string": "private static final List<Message> MESSAGES = Lists.newArrayList(MESSAGE1, MESSAGE2, MESSAGE3);", "modifier": "private static final", "type": "List<Message>", "declarator": "MESSAGES = Lists.newArrayList(MESSAGE1, MESSAGE2, MESSAGE3)", "var_name": "MESSAGES"}, {"original_string": "@Mock\n    private AWSLambda lambda;", "modifier": "@Mock\n    private", "type": "AWSLambda", "declarator": "lambda", "var_name": "lambda"}, {"original_string": "private MessageProcessorProxy messageProcessorProxy;", "modifier": "private", "type": "MessageProcessorProxy", "declarator": "messageProcessorProxy", "var_name": "messageProcessorProxy"}], "file": "aws-serverless-sqs-event-source-app/src/test/java/com/amazonaws/serverless/sqseventsource/MessageProcessorProxyTest.java"}, "test_case": {"identifier": "invoke", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invoke() throws Exception {\n        SQSMessageProcessorRequest sqsMessageProcessorRequest = new SQSMessageProcessorRequest();\n        sqsMessageProcessorRequest.setMessages(MESSAGES);\n\n        //fake json string\n        ByteBuffer byteBuffer = ByteBuffer.wrap(\"{\\\"key1\\\":value1,\\\"key2\\\":value2}\".getBytes());\n\n        InvokeResult invokeResult = mock(InvokeResult.class);\n        when(invokeResult.getPayload()).thenReturn(byteBuffer);\n        when(lambda.invoke(any(InvokeRequest.class))).thenReturn(invokeResult);\n\n        messageProcessorProxy.invoke(sqsMessageProcessorRequest);\n    }", "signature": "void invoke()", "full_signature": "@Test public void invoke()", "class_method_signature": "MessageProcessorProxyTest.invoke()", "testcase": true, "constructor": false, "invocations": ["setMessages", "wrap", "getBytes", "mock", "thenReturn", "when", "getPayload", "thenReturn", "when", "invoke", "any", "invoke"]}, "focal_class": {"identifier": "MessageProcessorProxy", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Gson GSON = new GsonBuilder().disableHtmlEscaping().create();", "modifier": "private static final", "type": "Gson", "declarator": "GSON = new GsonBuilder().disableHtmlEscaping().create()", "var_name": "GSON"}, {"original_string": "@NonNull\n    private final String messageProcessorFunctionName;", "modifier": "@NonNull\n    private final", "type": "String", "declarator": "messageProcessorFunctionName", "var_name": "messageProcessorFunctionName"}, {"original_string": "@NonNull\n    private final AWSLambda lambda;", "modifier": "@NonNull\n    private final", "type": "AWSLambda", "declarator": "lambda", "var_name": "lambda"}], "methods": [{"identifier": "invoke", "parameters": "(final SQSMessageProcessorRequest request)", "modifiers": "public", "return": "SQSMessageProcessorResponse", "signature": "SQSMessageProcessorResponse invoke(final SQSMessageProcessorRequest request)", "full_signature": "public SQSMessageProcessorResponse invoke(final SQSMessageProcessorRequest request)", "class_method_signature": "MessageProcessorProxy.invoke(final SQSMessageProcessorRequest request)", "testcase": false, "constructor": false}], "file": "aws-serverless-sqs-event-source-app/src/main/java/com/amazonaws/serverless/sqseventsource/MessageProcessorProxy.java"}, "focal_method": {"identifier": "invoke", "parameters": "(final SQSMessageProcessorRequest request)", "modifiers": "public", "return": "SQSMessageProcessorResponse", "body": "public SQSMessageProcessorResponse invoke(final SQSMessageProcessorRequest request) throws MessageProcessorException {\n        log.info(\"Invoking message processor lambda to process {} messages\", request.getMessages().size());\n        String requestPayload = GSON.toJson(request);\n\n        InvokeRequest invokeRequest = new InvokeRequest()\n                .withFunctionName(messageProcessorFunctionName)\n                .withInvocationType(InvocationType.RequestResponse)\n                .withPayload(requestPayload);\n\n        InvokeResult result = lambda.invoke(invokeRequest);\n\n        if (result.getFunctionError() != null) {\n            throw new MessageProcessorException(result);\n        }\n\n        return GSON.fromJson(LambdaUtil.getPayloadAsString(result), SQSMessageProcessorResponse.class);\n    }", "signature": "SQSMessageProcessorResponse invoke(final SQSMessageProcessorRequest request)", "full_signature": "public SQSMessageProcessorResponse invoke(final SQSMessageProcessorRequest request)", "class_method_signature": "MessageProcessorProxy.invoke(final SQSMessageProcessorRequest request)", "testcase": false, "constructor": false, "invocations": ["info", "size", "getMessages", "toJson", "withPayload", "withInvocationType", "withFunctionName", "invoke", "getFunctionError", "fromJson", "getPayloadAsString"]}, "repository": {"repo_id": 123649054, "url": "https://github.com/awslabs/aws-serverless-sqs-event-source", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 33, "size": 79, "license": "licensed"}}