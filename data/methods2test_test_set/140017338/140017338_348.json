{"test_class": {"identifier": "TemplateRendererTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}, {"original_string": "@Rule\n    public final EnvironmentVariables environmentVariables = new EnvironmentVariables();", "modifier": "@Rule\n    public final", "type": "EnvironmentVariables", "declarator": "environmentVariables = new EnvironmentVariables()", "var_name": "environmentVariables"}, {"original_string": "private String property1key = \"property1\";", "modifier": "private", "type": "String", "declarator": "property1key = \"property1\"", "var_name": "property1key"}, {"original_string": "private String property1value = \"property1value\";", "modifier": "private", "type": "String", "declarator": "property1value = \"property1value\"", "var_name": "property1value"}, {"original_string": "private String property2key = \"property2\";", "modifier": "private", "type": "String", "declarator": "property2key = \"property2\"", "var_name": "property2key"}, {"original_string": "private String property2value = \"property2value\";", "modifier": "private", "type": "String", "declarator": "property2value = \"property2value\"", "var_name": "property2value"}, {"original_string": "private String property3key = \"property3\";", "modifier": "private", "type": "String", "declarator": "property3key = \"property3\"", "var_name": "property3key"}, {"original_string": "private String property3value = \"property3value\";", "modifier": "private", "type": "String", "declarator": "property3value = \"property3value\"", "var_name": "property3value"}, {"original_string": "private String propertyWithDotKey = \"property.subproperty\";", "modifier": "private", "type": "String", "declarator": "propertyWithDotKey = \"property.subproperty\"", "var_name": "propertyWithDotKey"}, {"original_string": "private String propertyWithDotValue = \"propertyValue\";", "modifier": "private", "type": "String", "declarator": "propertyWithDotValue = \"propertyValue\"", "var_name": "propertyWithDotValue"}, {"original_string": "private TemplateRenderer tr;", "modifier": "private", "type": "TemplateRenderer", "declarator": "tr", "var_name": "tr"}, {"original_string": "private Map<String, String> properties0 = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "properties0 = new HashMap<>()", "var_name": "properties0"}, {"original_string": "private Map<String, String> properties1 = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "properties1 = new HashMap<>()", "var_name": "properties1"}, {"original_string": "private Map<String, String> properties2 = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "properties2 = new HashMap<>()", "var_name": "properties2"}, {"original_string": "private Map<String, String> properties1and2 = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "properties1and2 = new HashMap<>()", "var_name": "properties1and2"}, {"original_string": "private Map<String, String> properties1and3 = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "properties1and3 = new HashMap<>()", "var_name": "properties1and3"}, {"original_string": "private Map<String, String> properties2and3 = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "properties2and3 = new HashMap<>()", "var_name": "properties2and3"}, {"original_string": "private String exampleInnerTemplate = \"<tests>\\n\"\n            + \"<test\" + property1key + \">$\" + property1key + \"</test\" + property1key + \">\\n\"\n            + \"<test\" + property1key + \">${\" + property1key + \"}</test\" + property1key + \">\\n\"\n            + \"<test\" + property2key + \">$\" + property2key + \"</test\" + property2key + \">\\n\"\n            + \"</tests>\";", "modifier": "private", "type": "String", "declarator": "exampleInnerTemplate = \"<tests>\\n\"\n            + \"<test\" + property1key + \">$\" + property1key + \"</test\" + property1key + \">\\n\"\n            + \"<test\" + property1key + \">${\" + property1key + \"}</test\" + property1key + \">\\n\"\n            + \"<test\" + property2key + \">$\" + property2key + \"</test\" + property2key + \">\\n\"\n            + \"</tests>\"", "var_name": "exampleInnerTemplate"}, {"original_string": "private String exampleDotTemplate = \"<tests>\\n\"\n            + \"<test\" + propertyWithDotValue + \">$\" + propertyWithDotKey + \"</test\" + propertyWithDotValue + \">\\n\"\n            + \"<test\" + propertyWithDotValue + \">${\" + propertyWithDotKey + \"}</test\" + propertyWithDotValue + \">\\n\"\n            + \"<test\" + propertyWithDotValue + \">$\" + propertyWithDotKey + \"</test\" + propertyWithDotValue + \">\\n\"\n            + \"</tests>\";", "modifier": "private", "type": "String", "declarator": "exampleDotTemplate = \"<tests>\\n\"\n            + \"<test\" + propertyWithDotValue + \">$\" + propertyWithDotKey + \"</test\" + propertyWithDotValue + \">\\n\"\n            + \"<test\" + propertyWithDotValue + \">${\" + propertyWithDotKey + \"}</test\" + propertyWithDotValue + \">\\n\"\n            + \"<test\" + propertyWithDotValue + \">$\" + propertyWithDotKey + \"</test\" + propertyWithDotValue + \">\\n\"\n            + \"</tests>\"", "var_name": "exampleDotTemplate"}], "file": "core/runtime/src/test/java/org/eclipse/sw360/antenna/util/TemplateRendererTest.java"}, "test_case": {"identifier": "testRenderTemplateFileDoesNotModifyWithEmptyPropertiesFromInstantiate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRenderTemplateFileDoesNotModifyWithEmptyPropertiesFromInstantiate() throws IOException {\n        TemplateRenderer trWithCustomProperties = mkTemplateRendererWithPropertiesMap(properties0);\n        File file = composeTemplateXmlToFile();\n\n        String result = trWithCustomProperties.renderTemplateFile(file);\n\n        assertThat(result).isEqualTo(composeTemplateXml());\n    }", "signature": "void testRenderTemplateFileDoesNotModifyWithEmptyPropertiesFromInstantiate()", "full_signature": "@Test public void testRenderTemplateFileDoesNotModifyWithEmptyPropertiesFromInstantiate()", "class_method_signature": "TemplateRendererTest.testRenderTemplateFileDoesNotModifyWithEmptyPropertiesFromInstantiate()", "testcase": true, "constructor": false, "invocations": ["mkTemplateRendererWithPropertiesMap", "composeTemplateXmlToFile", "renderTemplateFile", "isEqualTo", "assertThat", "composeTemplateXml"]}, "focal_class": {"identifier": "TemplateRenderer", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CLASSPATH_WORKFLOW_XML = \"workflow.xml\";", "modifier": "public static final", "type": "String", "declarator": "CLASSPATH_WORKFLOW_XML = \"workflow.xml\"", "var_name": "CLASSPATH_WORKFLOW_XML"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(TemplateRenderer.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(TemplateRenderer.class)", "var_name": "LOGGER"}, {"original_string": "private VelocityContext renderContext;", "modifier": "private", "type": "VelocityContext", "declarator": "renderContext", "var_name": "renderContext"}], "methods": [{"identifier": "TemplateRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " TemplateRenderer()", "full_signature": "public  TemplateRenderer()", "class_method_signature": "TemplateRenderer.TemplateRenderer()", "testcase": false, "constructor": true}, {"identifier": "TemplateRenderer", "parameters": "(Map<String, Object> initMap)", "modifiers": "public", "return": "", "signature": " TemplateRenderer(Map<String, Object> initMap)", "full_signature": "public  TemplateRenderer(Map<String, Object> initMap)", "class_method_signature": "TemplateRenderer.TemplateRenderer(Map<String, Object> initMap)", "testcase": false, "constructor": true}, {"identifier": "renderTemplateFile", "parameters": "(File templateFile, Map<String, Object> contextMap)", "modifiers": "public", "return": "String", "signature": "String renderTemplateFile(File templateFile, Map<String, Object> contextMap)", "full_signature": "public String renderTemplateFile(File templateFile, Map<String, Object> contextMap)", "class_method_signature": "TemplateRenderer.renderTemplateFile(File templateFile, Map<String, Object> contextMap)", "testcase": false, "constructor": false}, {"identifier": "getVelocityEngine", "parameters": "(Map<String,String> veProperties)", "modifiers": "private", "return": "VelocityEngine", "signature": "VelocityEngine getVelocityEngine(Map<String,String> veProperties)", "full_signature": "private VelocityEngine getVelocityEngine(Map<String,String> veProperties)", "class_method_signature": "TemplateRenderer.getVelocityEngine(Map<String,String> veProperties)", "testcase": false, "constructor": false}, {"identifier": "prepareVelocityEngine", "parameters": "(File templateFile)", "modifiers": "private", "return": "VelocityEngine", "signature": "VelocityEngine prepareVelocityEngine(File templateFile)", "full_signature": "private VelocityEngine prepareVelocityEngine(File templateFile)", "class_method_signature": "TemplateRenderer.prepareVelocityEngine(File templateFile)", "testcase": false, "constructor": false}, {"identifier": "renderTemplateFile", "parameters": "(File templateFile)", "modifiers": "public", "return": "String", "signature": "String renderTemplateFile(File templateFile)", "full_signature": "public String renderTemplateFile(File templateFile)", "class_method_signature": "TemplateRenderer.renderTemplateFile(File templateFile)", "testcase": false, "constructor": false}, {"identifier": "renderClassPathWorkflow", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> renderClassPathWorkflow()", "full_signature": "public Optional<String> renderClassPathWorkflow()", "class_method_signature": "TemplateRenderer.renderClassPathWorkflow()", "testcase": false, "constructor": false}, {"identifier": "renderTemplateWithCurrentRenderContext", "parameters": "(Template template)", "modifiers": "private", "return": "String", "signature": "String renderTemplateWithCurrentRenderContext(Template template)", "full_signature": "private String renderTemplateWithCurrentRenderContext(Template template)", "class_method_signature": "TemplateRenderer.renderTemplateWithCurrentRenderContext(Template template)", "testcase": false, "constructor": false}, {"identifier": "getPropertiesMapFromRenderedResult", "parameters": "(String result)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getPropertiesMapFromRenderedResult(String result)", "full_signature": "private Map<String, String> getPropertiesMapFromRenderedResult(String result)", "class_method_signature": "TemplateRenderer.getPropertiesMapFromRenderedResult(String result)", "testcase": false, "constructor": false}, {"identifier": "renderTemplate", "parameters": "(Template template)", "modifiers": "private", "return": "String", "signature": "String renderTemplate(Template template)", "full_signature": "private String renderTemplate(Template template)", "class_method_signature": "TemplateRenderer.renderTemplate(Template template)", "testcase": false, "constructor": false}], "file": "core/runtime/src/main/java/org/eclipse/sw360/antenna/util/TemplateRenderer.java"}, "focal_method": {"identifier": "renderTemplateFile", "parameters": "(File templateFile, Map<String, Object> contextMap)", "modifiers": "public", "return": "String", "body": "public String renderTemplateFile(File templateFile, Map<String, Object> contextMap) {\n        for (Map.Entry<String, Object> entry : contextMap.entrySet()) {\n            renderContext.put(entry.getKey(), entry.getValue());\n        }\n        return renderTemplateFile(templateFile);\n    }", "signature": "String renderTemplateFile(File templateFile, Map<String, Object> contextMap)", "full_signature": "public String renderTemplateFile(File templateFile, Map<String, Object> contextMap)", "class_method_signature": "TemplateRenderer.renderTemplateFile(File templateFile, Map<String, Object> contextMap)", "testcase": false, "constructor": false, "invocations": ["entrySet", "put", "getKey", "getValue", "renderTemplateFile"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}