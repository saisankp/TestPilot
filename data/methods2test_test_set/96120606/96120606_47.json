{"test_class": {"identifier": "ParamPathExpressionParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "nimbus-core/src/test/java/com/antheminc/oss/nimbus/domain/cmd/exec/ParamPathExpressionParserTest.java"}, "test_case": {"identifier": "t2_recursive_simple", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void t2_recursive_simple() {\n\t\tString in = \"abc/<!p1!>/another2/<!../p2/<!../p3!>/p4!>/another3/<!p100/someB/<!../p5/someA/!>/xyz/<!p6!>/someC!>\";\n\t\t\n\t\tMap<Integer, String> entries = ParamPathExpressionParser.parse(in);\n\t\tassertSame(3, entries.size());\n\t\t\n\t\tIterator<String> iter = entries.values().iterator();\n\t\tassertEquals(\"<!p1!>\", iter.next());\n\t\tassertEquals(\"<!../p2/<!../p3!>/p4!>\", iter.next());\n\t\tassertEquals(\"<!p100/someB/<!../p5/someA/!>/xyz/<!p6!>/someC!>\", iter.next());\n\t}", "signature": "void t2_recursive_simple()", "full_signature": "@Test public void t2_recursive_simple()", "class_method_signature": "ParamPathExpressionParserTest.t2_recursive_simple()", "testcase": true, "constructor": false, "invocations": ["parse", "assertSame", "size", "iterator", "values", "assertEquals", "next", "assertEquals", "next", "assertEquals", "next"]}, "focal_class": {"identifier": "ParamPathExpressionParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String KEY_PREFIX = \"<!\";", "modifier": "public static final", "type": "String", "declarator": "KEY_PREFIX = \"<!\"", "var_name": "KEY_PREFIX"}, {"original_string": "public static final String KEY_SUFFIX = \"!>\";", "modifier": "public static final", "type": "String", "declarator": "KEY_SUFFIX = \"!>\"", "var_name": "KEY_SUFFIX"}], "methods": [{"identifier": "parse", "parameters": "(String in)", "modifiers": "public static", "return": "Map<Integer, String>", "signature": "Map<Integer, String> parse(String in)", "full_signature": "public static Map<Integer, String> parse(String in)", "class_method_signature": "ParamPathExpressionParser.parse(String in)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String in, int startPos, Map<Integer, String> entries)", "modifiers": "private static", "return": "void", "signature": "void parse(String in, int startPos, Map<Integer, String> entries)", "full_signature": "private static void parse(String in, int startPos, Map<Integer, String> entries)", "class_method_signature": "ParamPathExpressionParser.parse(String in, int startPos, Map<Integer, String> entries)", "testcase": false, "constructor": false}, {"identifier": "findEndRecursive", "parameters": "(String in, int iStart)", "modifiers": "private static", "return": "int", "signature": "int findEndRecursive(String in, int iStart)", "full_signature": "private static int findEndRecursive(String in, int iStart)", "class_method_signature": "ParamPathExpressionParser.findEndRecursive(String in, int iStart)", "testcase": false, "constructor": false}, {"identifier": "countRecursive", "parameters": "(String in, int iStart, int iFirstEnd)", "modifiers": "private static", "return": "int", "signature": "int countRecursive(String in, int iStart, int iFirstEnd)", "full_signature": "private static int countRecursive(String in, int iStart, int iFirstEnd)", "class_method_signature": "ParamPathExpressionParser.countRecursive(String in, int iStart, int iFirstEnd)", "testcase": false, "constructor": false}, {"identifier": "stripPrefixSuffix", "parameters": "(String in)", "modifiers": "public static", "return": "String", "signature": "String stripPrefixSuffix(String in)", "full_signature": "public static String stripPrefixSuffix(String in)", "class_method_signature": "ParamPathExpressionParser.stripPrefixSuffix(String in)", "testcase": false, "constructor": false}, {"identifier": "containsPrefixSuffix", "parameters": "(String in)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsPrefixSuffix(String in)", "full_signature": "public static boolean containsPrefixSuffix(String in)", "class_method_signature": "ParamPathExpressionParser.containsPrefixSuffix(String in)", "testcase": false, "constructor": false}], "file": "nimbus-core/src/main/java/com/antheminc/oss/nimbus/domain/cmd/exec/ParamPathExpressionParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String in)", "modifiers": "public static", "return": "Map<Integer, String>", "body": "public static Map<Integer, String> parse(String in) {\n\t\tMap<Integer, String> entries = new LinkedHashMap<>();\n\t\tparse(in, 0, entries);\n\t\t\n\t\treturn entries;\n\t}", "signature": "Map<Integer, String> parse(String in)", "full_signature": "public static Map<Integer, String> parse(String in)", "class_method_signature": "ParamPathExpressionParser.parse(String in)", "testcase": false, "constructor": false, "invocations": ["parse"]}, "repository": {"repo_id": 96120606, "url": "https://github.com/openanthem/nimbus-core", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 9, "size": 55787, "license": "licensed"}}