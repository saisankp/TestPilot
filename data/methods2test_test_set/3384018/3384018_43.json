{"test_class": {"identifier": "TestRequestAcceptEncoding", "superclass": "", "interfaces": "", "fields": [], "file": "external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/client/protocol/TestRequestAcceptEncoding.java"}, "test_case": {"identifier": "testAcceptEncoding", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAcceptEncoding() throws Exception {\n        HttpRequest request = new BasicHttpRequest(\"GET\", \"/\");\n        HttpContext context = new BasicHttpContext();\n\n        HttpRequestInterceptor interceptor = new RequestAcceptEncoding();\n        interceptor.process(request, context);\n        Header header = request.getFirstHeader(\"Accept-Encoding\");\n        Assert.assertNotNull(header);\n        Assert.assertEquals(\"gzip,deflate\", header.getValue());\n    }", "signature": "void testAcceptEncoding()", "full_signature": "@Test public void testAcceptEncoding()", "class_method_signature": "TestRequestAcceptEncoding.testAcceptEncoding()", "testcase": true, "constructor": false, "invocations": ["process", "getFirstHeader", "assertNotNull", "assertEquals", "getValue"]}, "focal_class": {"identifier": "RequestAcceptEncoding", "superclass": "", "interfaces": "implements HttpRequestInterceptor", "fields": [], "methods": [{"identifier": "process", "parameters": "(\n            final HttpRequest request,\n            final HttpContext context)", "modifiers": "public", "return": "void", "signature": "void process(\n            final HttpRequest request,\n            final HttpContext context)", "full_signature": "public void process(\n            final HttpRequest request,\n            final HttpContext context)", "class_method_signature": "RequestAcceptEncoding.process(\n            final HttpRequest request,\n            final HttpContext context)", "testcase": false, "constructor": false}], "file": "external_sources/httpclient-4.1.1/httpclient/src/main/java/org/apache/ogt/http/client/protocol/RequestAcceptEncoding.java"}, "focal_method": {"identifier": "process", "parameters": "(\n            final HttpRequest request,\n            final HttpContext context)", "modifiers": "public", "return": "void", "body": "public void process(\n            final HttpRequest request,\n            final HttpContext context) throws HttpException, IOException {\n\n        /* Signal support for Accept-Encoding transfer encodings. */\n        request.addHeader(\"Accept-Encoding\", \"gzip,deflate\");\n    }", "signature": "void process(\n            final HttpRequest request,\n            final HttpContext context)", "full_signature": "public void process(\n            final HttpRequest request,\n            final HttpContext context)", "class_method_signature": "RequestAcceptEncoding.process(\n            final HttpRequest request,\n            final HttpContext context)", "testcase": false, "constructor": false, "invocations": ["addHeader"]}, "repository": {"repo_id": 3384018, "url": "https://github.com/f8full/open-bixi-gpstracker", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2028, "license": "licensed"}}