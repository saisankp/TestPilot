{"test_class": {"identifier": "NavTreeEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    NavTreeEditorView view;", "modifier": "@Mock", "type": "NavTreeEditorView", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    SyncBeanManager beanManager;", "modifier": "@Mock", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "@Mock\n    PerspectiveTreeProvider perspectiveTreeProvider;", "modifier": "@Mock", "type": "PerspectiveTreeProvider", "declarator": "perspectiveTreeProvider", "var_name": "perspectiveTreeProvider"}, {"original_string": "@Mock\n    EventSourceMock<NavItemEditStartedEvent> navItemEditStartedEvent;", "modifier": "@Mock", "type": "EventSourceMock<NavItemEditStartedEvent>", "declarator": "navItemEditStartedEvent", "var_name": "navItemEditStartedEvent"}, {"original_string": "@Mock\n    EventSourceMock<NavItemEditCancelledEvent> navItemEditCancelledEvent;", "modifier": "@Mock", "type": "EventSourceMock<NavItemEditCancelledEvent>", "declarator": "navItemEditCancelledEvent", "var_name": "navItemEditCancelledEvent"}, {"original_string": "@Mock\n    EventSourceMock<NavItemGotoEvent> navItemGotoEvent;", "modifier": "@Mock", "type": "EventSourceMock<NavItemGotoEvent>", "declarator": "navItemGotoEvent", "var_name": "navItemGotoEvent"}, {"original_string": "@Mock\n    EventSourceMock<NavTreeLoadedEvent> navTreeLoadedEvent;", "modifier": "@Mock", "type": "EventSourceMock<NavTreeLoadedEvent>", "declarator": "navTreeLoadedEvent", "var_name": "navTreeLoadedEvent"}, {"original_string": "@Mock\n    EventSourceMock<NavTreeChangedEvent> navTreeChangedEvent;", "modifier": "@Mock", "type": "EventSourceMock<NavTreeChangedEvent>", "declarator": "navTreeChangedEvent", "var_name": "navTreeChangedEvent"}, {"original_string": "@Mock\n    NavigationServices navServices;", "modifier": "@Mock", "type": "NavigationServices", "declarator": "navServices", "var_name": "navServices"}, {"original_string": "@Mock\n    NavSecurityController navController;", "modifier": "@Mock", "type": "NavSecurityController", "declarator": "navController", "var_name": "navController"}, {"original_string": "@Mock\n    PlaceManager placeManager;", "modifier": "@Mock", "type": "PlaceManager", "declarator": "placeManager", "var_name": "placeManager"}, {"original_string": "@Mock\n    TargetPerspectiveEditor targetPerspectiveEditor;", "modifier": "@Mock", "type": "TargetPerspectiveEditor", "declarator": "targetPerspectiveEditor", "var_name": "targetPerspectiveEditor"}, {"original_string": "@Mock\n    PerspectivePluginManager perspectivePluginManager;", "modifier": "@Mock", "type": "PerspectivePluginManager", "declarator": "perspectivePluginManager", "var_name": "perspectivePluginManager"}, {"original_string": "@Mock\n    NavItemDefaultEditorView navItemEditorView;", "modifier": "@Mock", "type": "NavItemDefaultEditorView", "declarator": "navItemEditorView", "var_name": "navItemEditorView"}, {"original_string": "@Mock\n    NavRootNodeEditorView navRootNodeEditorView;", "modifier": "@Mock", "type": "NavRootNodeEditorView", "declarator": "navRootNodeEditorView", "var_name": "navRootNodeEditorView"}, {"original_string": "@Mock\n    SyncBeanDef<NavItemDefaultEditor> navItemEditorBeanDef;", "modifier": "@Mock", "type": "SyncBeanDef<NavItemDefaultEditor>", "declarator": "navItemEditorBeanDef", "var_name": "navItemEditorBeanDef"}, {"original_string": "@Mock\n    SyncBeanDef<NavRootNodeEditor> navRootNodeEditorBeanDef;", "modifier": "@Mock", "type": "SyncBeanDef<NavRootNodeEditor>", "declarator": "navRootNodeEditorBeanDef", "var_name": "navRootNodeEditorBeanDef"}, {"original_string": "@Mock\n    Command updateCommand;", "modifier": "@Mock", "type": "Command", "declarator": "updateCommand", "var_name": "updateCommand"}, {"original_string": "@Mock\n    Plugin perspectivePlugin;", "modifier": "@Mock", "type": "Plugin", "declarator": "perspectivePlugin", "var_name": "perspectivePlugin"}, {"original_string": "Collection<Plugin> perspectivePlugins = new HashSet<>();", "modifier": "", "type": "Collection<Plugin>", "declarator": "perspectivePlugins = new HashSet<>()", "var_name": "perspectivePlugins"}, {"original_string": "NavigationManager navigationManager;", "modifier": "", "type": "NavigationManager", "declarator": "navigationManager", "var_name": "navigationManager"}, {"original_string": "NavTreeEditor navTreeEditor;", "modifier": "", "type": "NavTreeEditor", "declarator": "navTreeEditor", "var_name": "navTreeEditor"}, {"original_string": "NavItemDefaultEditor navItemEditor;", "modifier": "", "type": "NavItemDefaultEditor", "declarator": "navItemEditor", "var_name": "navItemEditor"}, {"original_string": "NavRootNodeEditor navRootNodeEditor;", "modifier": "", "type": "NavRootNodeEditor", "declarator": "navRootNodeEditor", "var_name": "navRootNodeEditor"}, {"original_string": "NavTree NAV_TREE = new NavTreeBuilder()\n            .group(\"level1a\", \"level1a\", \"level1a\", true)\n                .group(\"level2a\", \"level2a\", \"level2a\", true)\n                .endGroup()\n            .endGroup()\n            .group(\"level1b\", \"level1b\", \"level1b\", true)\n                .group(\"level2b\", \"level2b\", \"level2b\", true)\n                .endGroup()\n            .endGroup()\n            .build();", "modifier": "", "type": "NavTree", "declarator": "NAV_TREE = new NavTreeBuilder()\n            .group(\"level1a\", \"level1a\", \"level1a\", true)\n                .group(\"level2a\", \"level2a\", \"level2a\", true)\n                .endGroup()\n            .endGroup()\n            .group(\"level1b\", \"level1b\", \"level1b\", true)\n                .group(\"level2b\", \"level2b\", \"level2b\", true)\n                .endGroup()\n            .endGroup()\n            .build()", "var_name": "NAV_TREE"}], "file": "dashbuilder-client/dashbuilder-navigation-client/src/test/java/org/dashbuilder/client/navigation/widget/editor/NavTreeEditorTest.java"}, "test_case": {"identifier": "testNewDividerEnabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNewDividerEnabled() {\n        navTreeEditor.getSettings().setNewDividerEnabled(true);\n        assertTrue(navTreeEditor.getSettings().isNewDividerEnabled(NAV_TREE.getItemById(\"level1b\")));\n\n        navTreeEditor.setNewDividerEnabled(\"level1b\", false);\n        assertFalse(navTreeEditor.getSettings().isNewDividerEnabled(NAV_TREE.getItemById(\"level1b\")));\n        assertTrue(navTreeEditor.getSettings().isNewDividerEnabled(NAV_TREE.getItemById(\"level2b\")));\n\n        navTreeEditor.setNewDividerEnabled(\"level1b\", false).applyToAllChildren();\n        assertFalse(navTreeEditor.getSettings().isNewDividerEnabled(NAV_TREE.getItemById(\"level1b\")));\n        assertFalse(navTreeEditor.getSettings().isNewDividerEnabled(NAV_TREE.getItemById(\"level2b\")));\n    }", "signature": "void testNewDividerEnabled()", "full_signature": "@Test public void testNewDividerEnabled()", "class_method_signature": "NavTreeEditorTest.testNewDividerEnabled()", "testcase": true, "constructor": false, "invocations": ["setNewDividerEnabled", "getSettings", "assertTrue", "isNewDividerEnabled", "getSettings", "getItemById", "setNewDividerEnabled", "assertFalse", "isNewDividerEnabled", "getSettings", "getItemById", "assertTrue", "isNewDividerEnabled", "getSettings", "getItemById", "applyToAllChildren", "setNewDividerEnabled", "assertFalse", "isNewDividerEnabled", "getSettings", "getItemById", "assertFalse", "isNewDividerEnabled", "getSettings", "getItemById"]}, "focal_class": {"identifier": "NavTreeEditor", "superclass": "extends NavItemEditor", "interfaces": "", "fields": [{"original_string": "public static final NavigationConstants i18n = NavigationConstants.INSTANCE;", "modifier": "public static final", "type": "NavigationConstants", "declarator": "i18n = NavigationConstants.INSTANCE", "var_name": "i18n"}, {"original_string": "public static final String ROOT_GROUP_ID = \"NavTreeEditorRootGroupId\";", "modifier": "public static final", "type": "String", "declarator": "ROOT_GROUP_ID = \"NavTreeEditorRootGroupId\"", "var_name": "ROOT_GROUP_ID"}, {"original_string": "NavTreeEditorView view;", "modifier": "", "type": "NavTreeEditorView", "declarator": "view", "var_name": "view"}, {"original_string": "NavigationManager navigationManager;", "modifier": "", "type": "NavigationManager", "declarator": "navigationManager", "var_name": "navigationManager"}, {"original_string": "NavTree navTree;", "modifier": "", "type": "NavTree", "declarator": "navTree", "var_name": "navTree"}, {"original_string": "Command onSaveCommand;", "modifier": "", "type": "Command", "declarator": "onSaveCommand", "var_name": "onSaveCommand"}, {"original_string": "Optional<NavItemEditor> currentlyEditedItem = Optional.empty();", "modifier": "", "type": "Optional<NavItemEditor>", "declarator": "currentlyEditedItem = Optional.empty()", "var_name": "currentlyEditedItem"}], "methods": [{"identifier": "NavTreeEditor", "parameters": "(NavTreeEditorView view,\n                         NavigationManager navigationManager,\n                         SyncBeanManager beanManager,\n                         PlaceManager placeManager,\n                         PerspectiveTreeProvider perspectiveTreeProvider,\n                         TargetPerspectiveEditor targetPerspectiveEditor,\n                         PerspectivePluginManager perspectivePluginManager,\n                         Event<NavItemEditStartedEvent> navItemEditStartedEvent,\n                         Event<NavItemEditCancelledEvent> navItemEditCancelledEvent)", "modifiers": "@Inject public", "return": "", "signature": " NavTreeEditor(NavTreeEditorView view,\n                         NavigationManager navigationManager,\n                         SyncBeanManager beanManager,\n                         PlaceManager placeManager,\n                         PerspectiveTreeProvider perspectiveTreeProvider,\n                         TargetPerspectiveEditor targetPerspectiveEditor,\n                         PerspectivePluginManager perspectivePluginManager,\n                         Event<NavItemEditStartedEvent> navItemEditStartedEvent,\n                         Event<NavItemEditCancelledEvent> navItemEditCancelledEvent)", "full_signature": "@Inject public  NavTreeEditor(NavTreeEditorView view,\n                         NavigationManager navigationManager,\n                         SyncBeanManager beanManager,\n                         PlaceManager placeManager,\n                         PerspectiveTreeProvider perspectiveTreeProvider,\n                         TargetPerspectiveEditor targetPerspectiveEditor,\n                         PerspectivePluginManager perspectivePluginManager,\n                         Event<NavItemEditStartedEvent> navItemEditStartedEvent,\n                         Event<NavItemEditCancelledEvent> navItemEditCancelledEvent)", "class_method_signature": "NavTreeEditor.NavTreeEditor(NavTreeEditorView view,\n                         NavigationManager navigationManager,\n                         SyncBeanManager beanManager,\n                         PlaceManager placeManager,\n                         PerspectiveTreeProvider perspectiveTreeProvider,\n                         TargetPerspectiveEditor targetPerspectiveEditor,\n                         PerspectivePluginManager perspectivePluginManager,\n                         Event<NavItemEditStartedEvent> navItemEditStartedEvent,\n                         Event<NavItemEditCancelledEvent> navItemEditCancelledEvent)", "testcase": false, "constructor": true}, {"identifier": "setOnSaveCommand", "parameters": "(Command onSaveCommand)", "modifiers": "public", "return": "void", "signature": "void setOnSaveCommand(Command onSaveCommand)", "full_signature": "public void setOnSaveCommand(Command onSaveCommand)", "class_method_signature": "NavTreeEditor.setOnSaveCommand(Command onSaveCommand)", "testcase": false, "constructor": false}, {"identifier": "getGroupLiteral", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getGroupLiteral()", "full_signature": "@Override public String getGroupLiteral()", "class_method_signature": "NavTreeEditor.getGroupLiteral()", "testcase": false, "constructor": false}, {"identifier": "setMaximized", "parameters": "(boolean maximized)", "modifiers": "public", "return": "void", "signature": "void setMaximized(boolean maximized)", "full_signature": "public void setMaximized(boolean maximized)", "class_method_signature": "NavTreeEditor.setMaximized(boolean maximized)", "testcase": false, "constructor": false}, {"identifier": "getNavTree", "parameters": "()", "modifiers": "public", "return": "NavTree", "signature": "NavTree getNavTree()", "full_signature": "public NavTree getNavTree()", "class_method_signature": "NavTreeEditor.getNavTree()", "testcase": false, "constructor": false}, {"identifier": "edit", "parameters": "(NavTree navTree)", "modifiers": "public", "return": "void", "signature": "void edit(NavTree navTree)", "full_signature": "public void edit(NavTree navTree)", "class_method_signature": "NavTreeEditor.edit(NavTree navTree)", "testcase": false, "constructor": false}, {"identifier": "onItemUpdated", "parameters": "()", "modifiers": "@Override", "return": "void", "signature": "void onItemUpdated()", "full_signature": "@Override void onItemUpdated()", "class_method_signature": "NavTreeEditor.onItemUpdated()", "testcase": false, "constructor": false}, {"identifier": "onNewTreeClicked", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onNewTreeClicked()", "full_signature": " void onNewTreeClicked()", "class_method_signature": "NavTreeEditor.onNewTreeClicked()", "testcase": false, "constructor": false}, {"identifier": "onSaveClicked", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onSaveClicked()", "full_signature": " void onSaveClicked()", "class_method_signature": "NavTreeEditor.onSaveClicked()", "testcase": false, "constructor": false}, {"identifier": "onCancelClicked", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onCancelClicked()", "full_signature": " void onCancelClicked()", "class_method_signature": "NavTreeEditor.onCancelClicked()", "testcase": false, "constructor": false}, {"identifier": "onItemEditStarted", "parameters": "(@Observes NavItemEditStartedEvent event)", "modifiers": "", "return": "void", "signature": "void onItemEditStarted(@Observes NavItemEditStartedEvent event)", "full_signature": " void onItemEditStarted(@Observes NavItemEditStartedEvent event)", "class_method_signature": "NavTreeEditor.onItemEditStarted(@Observes NavItemEditStartedEvent event)", "testcase": false, "constructor": false}, {"identifier": "onItemEditCancelled", "parameters": "(@Observes NavItemEditCancelledEvent event)", "modifiers": "", "return": "void", "signature": "void onItemEditCancelled(@Observes NavItemEditCancelledEvent event)", "full_signature": " void onItemEditCancelled(@Observes NavItemEditCancelledEvent event)", "class_method_signature": "NavTreeEditor.onItemEditCancelled(@Observes NavItemEditCancelledEvent event)", "testcase": false, "constructor": false}, {"identifier": "getCurrentlyEditedItem", "parameters": "()", "modifiers": "", "return": "NavItemEditor", "signature": "NavItemEditor getCurrentlyEditedItem()", "full_signature": " NavItemEditor getCurrentlyEditedItem()", "class_method_signature": "NavTreeEditor.getCurrentlyEditedItem()", "testcase": false, "constructor": false}, {"identifier": "setMaxLevels", "parameters": "(String navItemId, int maxLevels)", "modifiers": "public", "return": "NavItemEditorSettings", "signature": "NavItemEditorSettings setMaxLevels(String navItemId, int maxLevels)", "full_signature": "public NavItemEditorSettings setMaxLevels(String navItemId, int maxLevels)", "class_method_signature": "NavTreeEditor.setMaxLevels(String navItemId, int maxLevels)", "testcase": false, "constructor": false}, {"identifier": "setNewGroupEnabled", "parameters": "(String navItemId, boolean enabled)", "modifiers": "public", "return": "NavItemEditorSettings.Flags", "signature": "NavItemEditorSettings.Flags setNewGroupEnabled(String navItemId, boolean enabled)", "full_signature": "public NavItemEditorSettings.Flags setNewGroupEnabled(String navItemId, boolean enabled)", "class_method_signature": "NavTreeEditor.setNewGroupEnabled(String navItemId, boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "setNewPerspectiveEnabled", "parameters": "(String navItemId, boolean enabled)", "modifiers": "public", "return": "NavItemEditorSettings.Flags", "signature": "NavItemEditorSettings.Flags setNewPerspectiveEnabled(String navItemId, boolean enabled)", "full_signature": "public NavItemEditorSettings.Flags setNewPerspectiveEnabled(String navItemId, boolean enabled)", "class_method_signature": "NavTreeEditor.setNewPerspectiveEnabled(String navItemId, boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "setNewDividerEnabled", "parameters": "(String navItemId, boolean enabled)", "modifiers": "public", "return": "NavItemEditorSettings.Flags", "signature": "NavItemEditorSettings.Flags setNewDividerEnabled(String navItemId, boolean enabled)", "full_signature": "public NavItemEditorSettings.Flags setNewDividerEnabled(String navItemId, boolean enabled)", "class_method_signature": "NavTreeEditor.setNewDividerEnabled(String navItemId, boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "setOnlyRuntimePerspectives", "parameters": "(String navItemId, boolean enabled)", "modifiers": "public", "return": "NavItemEditorSettings.Flags", "signature": "NavItemEditorSettings.Flags setOnlyRuntimePerspectives(String navItemId, boolean enabled)", "full_signature": "public NavItemEditorSettings.Flags setOnlyRuntimePerspectives(String navItemId, boolean enabled)", "class_method_signature": "NavTreeEditor.setOnlyRuntimePerspectives(String navItemId, boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "setPerspectiveContextEnabled", "parameters": "(String navItemId, boolean enabled)", "modifiers": "public", "return": "NavItemEditorSettings.Flags", "signature": "NavItemEditorSettings.Flags setPerspectiveContextEnabled(String navItemId, boolean enabled)", "full_signature": "public NavItemEditorSettings.Flags setPerspectiveContextEnabled(String navItemId, boolean enabled)", "class_method_signature": "NavTreeEditor.setPerspectiveContextEnabled(String navItemId, boolean enabled)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-navigation-client/src/main/java/org/dashbuilder/client/navigation/widget/editor/NavTreeEditor.java"}, "focal_method": {"identifier": "setNewDividerEnabled", "parameters": "(String navItemId, boolean enabled)", "modifiers": "public", "return": "NavItemEditorSettings.Flags", "body": "public NavItemEditorSettings.Flags setNewDividerEnabled(String navItemId, boolean enabled) {\n        return getSettings().setNewDividerEnabled(navItemId, enabled);\n    }", "signature": "NavItemEditorSettings.Flags setNewDividerEnabled(String navItemId, boolean enabled)", "full_signature": "public NavItemEditorSettings.Flags setNewDividerEnabled(String navItemId, boolean enabled)", "class_method_signature": "NavTreeEditor.setNewDividerEnabled(String navItemId, boolean enabled)", "testcase": false, "constructor": false, "invocations": ["setNewDividerEnabled", "getSettings"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}