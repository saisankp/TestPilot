{"test_class": {"identifier": "SearchPresenterTest", "superclass": "extends UnitTest", "interfaces": "", "fields": [{"original_string": "@Mock private SearchPresenter.View view;", "modifier": "@Mock private", "type": "SearchPresenter.View", "declarator": "view", "var_name": "view"}, {"original_string": "private SearchPresenter presenter;", "modifier": "private", "type": "SearchPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "private static final String TEST_QUERY = \"test query\";", "modifier": "private static final", "type": "String", "declarator": "TEST_QUERY = \"test query\"", "var_name": "TEST_QUERY"}, {"original_string": "private static final int CINEMAS_TAB_POSITION = 0;", "modifier": "private static final", "type": "int", "declarator": "CINEMAS_TAB_POSITION = 0", "var_name": "CINEMAS_TAB_POSITION"}, {"original_string": "private static final int ACTORS_TAB_POSITION = 1;", "modifier": "private static final", "type": "int", "declarator": "ACTORS_TAB_POSITION = 1", "var_name": "ACTORS_TAB_POSITION"}], "file": "app/src/test/java/com/ru/devit/mediateka/presentation/search/SearchPresenterTest.java"}, "test_case": {"identifier": "shouldSelectCinemaPositionWhenCinemaTabSelected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSelectCinemaPositionWhenCinemaTabSelected(){\n        presenter.setView(view);\n        presenter.onTabSelected(CINEMAS_TAB_POSITION);\n\n        verify(view).onCinemaTabSelected();\n    }", "signature": "void shouldSelectCinemaPositionWhenCinemaTabSelected()", "full_signature": "@Test public void shouldSelectCinemaPositionWhenCinemaTabSelected()", "class_method_signature": "SearchPresenterTest.shouldSelectCinemaPositionWhenCinemaTabSelected()", "testcase": true, "constructor": false, "invocations": ["setView", "onTabSelected", "onCinemaTabSelected", "verify"]}, "focal_class": {"identifier": "SearchPresenter", "superclass": "extends BasePresenter<SearchPresenter.View>", "interfaces": "", "fields": [{"original_string": "private String query = \"\";", "modifier": "private", "type": "String", "declarator": "query = \"\"", "var_name": "query"}, {"original_string": "private static int currentTabPosition = 0;", "modifier": "private static", "type": "int", "declarator": "currentTabPosition = 0", "var_name": "currentTabPosition"}, {"original_string": "private static final int CINEMAS_TAB_POSITION = 0;", "modifier": "private static final", "type": "int", "declarator": "CINEMAS_TAB_POSITION = 0", "var_name": "CINEMAS_TAB_POSITION"}, {"original_string": "private static final int ACTORS_TAB_POSITION = 1;", "modifier": "private static final", "type": "int", "declarator": "ACTORS_TAB_POSITION = 1", "var_name": "ACTORS_TAB_POSITION"}], "methods": [{"identifier": "SearchPresenter", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " SearchPresenter()", "full_signature": "@Inject public  SearchPresenter()", "class_method_signature": "SearchPresenter.SearchPresenter()", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "SearchPresenter.initialize()", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override public void onDestroy()", "class_method_signature": "SearchPresenter.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "onTabSelected", "parameters": "(int position)", "modifiers": "public", "return": "void", "signature": "void onTabSelected(int position)", "full_signature": "public void onTabSelected(int position)", "class_method_signature": "SearchPresenter.onTabSelected(int position)", "testcase": false, "constructor": false}, {"identifier": "onTextChanged", "parameters": "(String query)", "modifiers": "public", "return": "void", "signature": "void onTextChanged(String query)", "full_signature": "public void onTextChanged(String query)", "class_method_signature": "SearchPresenter.onTextChanged(String query)", "testcase": false, "constructor": false}, {"identifier": "onClearEditTextClicked", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onClearEditTextClicked()", "full_signature": "public void onClearEditTextClicked()", "class_method_signature": "SearchPresenter.onClearEditTextClicked()", "testcase": false, "constructor": false}, {"identifier": "checkClearEditTextBtnState", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkClearEditTextBtnState()", "full_signature": "private void checkClearEditTextBtnState()", "class_method_signature": "SearchPresenter.checkClearEditTextBtnState()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/ru/devit/mediateka/presentation/search/SearchPresenter.java"}, "focal_method": {"identifier": "onTabSelected", "parameters": "(int position)", "modifiers": "public", "return": "void", "body": "public void onTabSelected(int position) {\n        switch (position) {\n            case CINEMAS_TAB_POSITION : {\n                getView().onCinemaTabSelected();\n                currentTabPosition = CINEMAS_TAB_POSITION;\n                break;\n            }\n            case ACTORS_TAB_POSITION : {\n                getView().onActorTabSelected();\n                currentTabPosition = ACTORS_TAB_POSITION;\n                break;\n            }\n        }\n    }", "signature": "void onTabSelected(int position)", "full_signature": "public void onTabSelected(int position)", "class_method_signature": "SearchPresenter.onTabSelected(int position)", "testcase": false, "constructor": false, "invocations": ["onCinemaTabSelected", "getView", "onActorTabSelected", "getView"]}, "repository": {"repo_id": 132759831, "url": "https://github.com/Devit951/Mediateka", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 33, "size": 679, "license": "licensed"}}