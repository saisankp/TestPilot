{"test_class": {"identifier": "SwaggerGenMojoTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "herd-build/herd-swaggergen-maven-plugin/src/test/java/org/finra/herd/swaggergen/SwaggerGenMojoTest.java"}, "test_case": {"identifier": "test_4", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_4() throws Exception\n    {\n        File tempDir = Files.createTempDir();\n        String outputFileName = \"swagger.yaml\";\n\n        SwaggerGenMojo swaggerGenMojo = new SwaggerGenMojo();\n        ReflectionTestUtils.setField(swaggerGenMojo, \"outputDirectory\", tempDir);\n        ReflectionTestUtils.setField(swaggerGenMojo, \"outputFilename\", outputFileName);\n        ReflectionTestUtils.setField(swaggerGenMojo, \"restJavaPackage\", \"org.finra.herd.swaggergen.test.swaggerGenMojo.rest\");\n        ReflectionTestUtils.setField(swaggerGenMojo, \"modelJavaPackage\", \"org.finra.herd.swaggergen.test.swaggerGenMojo.model\");\n        ReflectionTestUtils.setField(swaggerGenMojo, \"modelErrorClassName\", \"ErrorResponse\");\n        ReflectionTestUtils.setField(swaggerGenMojo, \"tagPatternParameter\", \"(?<tag>.+?)RestController\");\n        ReflectionTestUtils.setField(swaggerGenMojo, \"title\", \"test_title\");\n        ReflectionTestUtils.setField(swaggerGenMojo, \"version\", \"test_version\");\n        ReflectionTestUtils.setField(swaggerGenMojo, \"basePath\", \"/test_basePath\");\n        ReflectionTestUtils.setField(swaggerGenMojo, \"schemeParameters\", Arrays.asList(\"http\", null));\n        try\n        {\n            swaggerGenMojo.execute();\n            fail();\n        }\n        catch (Exception e)\n        {\n            assertEquals(MojoExecutionException.class, e.getClass());\n            assertEquals(\"Invalid scheme specified: null\", e.getMessage());\n        }\n    }", "signature": "void test_4()", "full_signature": "@Test public void test_4()", "class_method_signature": "SwaggerGenMojoTest.test_4()", "testcase": true, "constructor": false, "invocations": ["createTempDir", "setField", "setField", "setField", "setField", "setField", "setField", "setField", "setField", "setField", "setField", "asList", "execute", "fail", "assertEquals", "getClass", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "SwaggerGenMojo", "superclass": "extends AbstractMojo", "interfaces": "", "fields": [{"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"outputDir\", required = true,\n        defaultValue = \"${project.build.directory}/generated-sources/herd-swaggergen\")\n    private File outputDirectory;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"outputDir\", required = true,\n        defaultValue = \"${project.build.directory}/generated-sources/herd-swaggergen\")\n    private", "type": "File", "declarator": "outputDirectory", "var_name": "outputDirectory"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"outputFilename\", required = true, defaultValue = \"swagger.yaml\")\n    private String outputFilename;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"outputFilename\", required = true, defaultValue = \"swagger.yaml\")\n    private", "type": "String", "declarator": "outputFilename", "var_name": "outputFilename"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"restJavaPackage\", required = true)\n    private String restJavaPackage;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"restJavaPackage\", required = true)\n    private", "type": "String", "declarator": "restJavaPackage", "var_name": "restJavaPackage"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"modelJavaPackage\", required = true)\n    private String modelJavaPackage;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"modelJavaPackage\", required = true)\n    private", "type": "String", "declarator": "modelJavaPackage", "var_name": "modelJavaPackage"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"modelErrorClassName\")\n    private String modelErrorClassName;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"modelErrorClassName\")\n    private", "type": "String", "declarator": "modelErrorClassName", "var_name": "modelErrorClassName"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"tagPattern\", required = true, defaultValue = \"(?<tag>.+?)RestController\")\n    private String tagPatternParameter;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"tagPattern\", required = true, defaultValue = \"(?<tag>.+?)RestController\")\n    private", "type": "String", "declarator": "tagPatternParameter", "var_name": "tagPatternParameter"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"title\", required = true, defaultValue = \"Application\")\n    private String title;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"title\", required = true, defaultValue = \"Application\")\n    private", "type": "String", "declarator": "title", "var_name": "title"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"version\", required = true, defaultValue = \"${project.version}\")\n    private String version;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"version\", required = true, defaultValue = \"${project.version}\")\n    private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"basePath\", required = true, defaultValue = \"/rest\")\n    private String basePath;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"basePath\", required = true, defaultValue = \"/rest\")\n    private", "type": "String", "declarator": "basePath", "var_name": "basePath"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"schemes\")\n    private List<String> schemeParameters;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"schemes\")\n    private", "type": "List<String>", "declarator": "schemeParameters", "var_name": "schemeParameters"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"xsdName\", required = false)\n    private String xsdName;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"xsdName\", required = false)\n    private", "type": "String", "declarator": "xsdName", "var_name": "xsdName"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"authType\")\n    private String authType;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"authType\")\n    private", "type": "String", "declarator": "authType", "var_name": "authType"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"applyOperationsFilter\")\n    private Boolean applyOperationsFilter;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"applyOperationsFilter\")\n    private", "type": "Boolean", "declarator": "applyOperationsFilter", "var_name": "applyOperationsFilter"}, {"original_string": "@org.apache.maven.plugins.annotations.Parameter(property = \"includeOperations\")\n    private String[] includeOperations;", "modifier": "@org.apache.maven.plugins.annotations.Parameter(property = \"includeOperations\")\n    private", "type": "String[]", "declarator": "includeOperations", "var_name": "includeOperations"}, {"original_string": "private static final List<SecuritySchemeDefinition> SECURITY_SCHEME_DEFINITIONS =\n        new ArrayList<>(Arrays.asList(new BasicAuthDefinition(), new OAuth2Definition(), new ApiKeyAuthDefinition()));", "modifier": "private static final", "type": "List<SecuritySchemeDefinition>", "declarator": "SECURITY_SCHEME_DEFINITIONS =\n        new ArrayList<>(Arrays.asList(new BasicAuthDefinition(), new OAuth2Definition(), new ApiKeyAuthDefinition()))", "var_name": "SECURITY_SCHEME_DEFINITIONS"}], "methods": [{"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "SwaggerGenMojo.execute()", "testcase": false, "constructor": false}, {"identifier": "getSwagger", "parameters": "()", "modifiers": "private", "return": "Swagger", "signature": "Swagger getSwagger()", "full_signature": "private Swagger getSwagger()", "class_method_signature": "SwaggerGenMojo.getSwagger()", "testcase": false, "constructor": false}, {"identifier": "createYamlFile", "parameters": "(Swagger swagger)", "modifiers": "private", "return": "void", "signature": "void createYamlFile(Swagger swagger)", "full_signature": "private void createYamlFile(Swagger swagger)", "class_method_signature": "SwaggerGenMojo.createYamlFile(Swagger swagger)", "testcase": false, "constructor": false}], "file": "herd-build/herd-swaggergen-maven-plugin/src/main/java/org/finra/herd/swaggergen/SwaggerGenMojo.java"}, "focal_method": {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void execute() throws MojoExecutionException\n    {\n        // Create the output directory if it doesn't already exist.\n        getLog().debug(\"Creating output directory \\\"\" + outputDirectory + \"\\\".\");\n        java.nio.file.Path outputDirectoryPath = Paths.get(outputDirectory.toURI());\n        if (!Files.exists(outputDirectoryPath))\n        {\n            try\n            {\n                Files.createDirectories(outputDirectoryPath);\n            }\n            catch (IOException e)\n            {\n                throw new MojoExecutionException(\"Unable to create directory for output path \\\"\" + outputDirectoryPath + \"\\\".\", e);\n            }\n        }\n\n        // Get a new Swagger metadata object.\n        Swagger swagger = getSwagger();\n\n        // Find all the model classes.\n        // Note: this needs to be done before we process the REST controllers below because it finds the modelErrorClass.\n        ModelClassFinder modelClassFinder = new ModelClassFinder(getLog(), modelJavaPackage, modelErrorClassName);\n\n        // Find and process all the REST controllers and add them to the Swagger metadata.\n        RestControllerProcessor restControllerProcessor =\n            new RestControllerProcessor(getLog(), swagger, restJavaPackage, tagPatternParameter, modelClassFinder.getModelErrorClass());\n\n        XsdParser xsdParser = null;\n        if (xsdName != null)\n        {\n            xsdParser = new XsdParser(xsdName);\n        }\n\n        // Generate the definitions into Swagger based on the model classes collected.\n        new DefinitionGenerator(getLog(), swagger, restControllerProcessor.getExampleClassNames(), modelClassFinder.getModelClasses(), xsdParser);\n\n        if (applyOperationsFilter != null && applyOperationsFilter.equals(Boolean.TRUE))\n        {\n            OperationsFilter specFilter = new OperationsFilter(includeOperations);\n            swagger = new SpecFilter().filter(swagger, specFilter, null, null, null);\n        }\n\n        // Write to Swagger information to a YAML file.\n        createYamlFile(swagger);\n    }", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "SwaggerGenMojo.execute()", "testcase": false, "constructor": false, "invocations": ["debug", "getLog", "get", "toURI", "exists", "createDirectories", "getSwagger", "getLog", "getLog", "getModelErrorClass", "getLog", "getExampleClassNames", "getModelClasses", "equals", "filter", "createYamlFile"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}