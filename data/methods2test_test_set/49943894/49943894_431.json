{"test_class": {"identifier": "StaticResourceServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "File rootDirectory;", "modifier": "", "type": "File", "declarator": "rootDirectory", "var_name": "rootDirectory"}], "file": "server/src/test/java/com/cloud/servlet/StaticResourceServletTest.java"}, "test_case": {"identifier": "getContentType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getContentType() {\n        Assert.assertEquals(\"text/plain\",\n                StaticResourceServlet.getContentType(\"foo.txt\"));\n        Assert.assertEquals(\"text/html\",\n                StaticResourceServlet.getContentType(\"index.html\"));\n        Assert.assertEquals(\"text/plain\",\n                StaticResourceServlet.getContentType(\"README.TXT\"));\n    }", "signature": "void getContentType()", "full_signature": "@Test public void getContentType()", "class_method_signature": "StaticResourceServletTest.getContentType()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getContentType", "assertEquals", "getContentType", "assertEquals", "getContentType"]}, "focal_class": {"identifier": "StaticResourceServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -8833228931973461812L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8833228931973461812L", "var_name": "serialVersionUID"}, {"original_string": "@SuppressWarnings(\"serial\")\n    static final Map<String, String> contentTypes = Collections\n            .unmodifiableMap(new HashMap<String, String>() {\n                {\n                    put(\"css\", \"text/css\");\n                    put(\"svg\", \"image/svg+xml\");\n                    put(\"js\", \"application/javascript\");\n                    put(\"htm\", \"text/html\");\n                    put(\"html\", \"text/html\");\n                    put(\"txt\", \"text/plain\");\n                    put(\"xml\", \"text/xml\");\n                }\n            });", "modifier": "@SuppressWarnings(\"serial\")\n    static final", "type": "Map<String, String>", "declarator": "contentTypes = Collections\n            .unmodifiableMap(new HashMap<String, String>() {\n                {\n                    put(\"css\", \"text/css\");\n                    put(\"svg\", \"image/svg+xml\");\n                    put(\"js\", \"application/javascript\");\n                    put(\"htm\", \"text/html\");\n                    put(\"html\", \"text/html\");\n                    put(\"txt\", \"text/plain\");\n                    put(\"xml\", \"text/xml\");\n                }\n            })", "var_name": "contentTypes"}], "methods": [{"identifier": "getRequestedFile", "parameters": "(final HttpServletRequest req)", "modifiers": "private", "return": "File", "signature": "File getRequestedFile(final HttpServletRequest req)", "full_signature": "private File getRequestedFile(final HttpServletRequest req)", "class_method_signature": "StaticResourceServlet.getRequestedFile(final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "doGet", "parameters": "(final HttpServletRequest req,\n            final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(final HttpServletRequest req,\n            final HttpServletResponse resp)", "full_signature": "@Override protected void doGet(final HttpServletRequest req,\n            final HttpServletResponse resp)", "class_method_signature": "StaticResourceServlet.doGet(final HttpServletRequest req,\n            final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "(final String fileName)", "modifiers": "static", "return": "String", "signature": "String getContentType(final String fileName)", "full_signature": "static String getContentType(final String fileName)", "class_method_signature": "StaticResourceServlet.getContentType(final String fileName)", "testcase": false, "constructor": false}, {"identifier": "getCompressedVersion", "parameters": "(final File requestedFile)", "modifiers": "static", "return": "File", "signature": "File getCompressedVersion(final File requestedFile)", "full_signature": "static File getCompressedVersion(final File requestedFile)", "class_method_signature": "StaticResourceServlet.getCompressedVersion(final File requestedFile)", "testcase": false, "constructor": false}, {"identifier": "isClientCompressionSupported", "parameters": "(final HttpServletRequest req)", "modifiers": "static", "return": "boolean", "signature": "boolean isClientCompressionSupported(final HttpServletRequest req)", "full_signature": "static boolean isClientCompressionSupported(final HttpServletRequest req)", "class_method_signature": "StaticResourceServlet.isClientCompressionSupported(final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "getEtag", "parameters": "(final File resource)", "modifiers": "static", "return": "String", "signature": "String getEtag(final File resource)", "full_signature": "static String getEtag(final File resource)", "class_method_signature": "StaticResourceServlet.getEtag(final File resource)", "testcase": false, "constructor": false}], "file": "server/src/main/java/com/cloud/servlet/StaticResourceServlet.java"}, "focal_method": {"identifier": "getContentType", "parameters": "(final String fileName)", "modifiers": "static", "return": "String", "body": "static String getContentType(final String fileName) {\n        return contentTypes.get(StringUtils.lowerCase(StringUtils\n                .substringAfterLast(fileName, \".\")));\n    }", "signature": "String getContentType(final String fileName)", "full_signature": "static String getContentType(final String fileName)", "class_method_signature": "StaticResourceServlet.getContentType(final String fileName)", "testcase": false, "constructor": false, "invocations": ["get", "lowerCase", "substringAfterLast"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}