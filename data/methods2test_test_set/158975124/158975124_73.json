{"test_class": {"identifier": "UtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "jdbc/src/test/java/org/apache/iotdb/jdbc/UtilsTest.java"}, "test_case": {"identifier": "testParseWrongUrl1", "parameters": "()", "modifiers": "@Test(expected = IoTDBURLException.class) public", "return": "void", "body": "@Test(expected = IoTDBURLException.class)\n  public void testParseWrongUrl1() throws IoTDBURLException {\n    Properties properties = new Properties();\n    Utils.parseUrl(\"jdbc:iotdb//test6667\", properties);\n  }", "signature": "void testParseWrongUrl1()", "full_signature": "@Test(expected = IoTDBURLException.class) public void testParseWrongUrl1()", "class_method_signature": "UtilsTest.testParseWrongUrl1()", "testcase": true, "constructor": false, "invocations": ["parseUrl"]}, "focal_class": {"identifier": "Utils", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Pattern URL_PATTERN = Pattern.compile(\"([^:]+):([0-9]{1,5})/?\");", "modifier": "static final", "type": "Pattern", "declarator": "URL_PATTERN = Pattern.compile(\"([^:]+):([0-9]{1,5})/?\")", "var_name": "URL_PATTERN"}], "methods": [{"identifier": "parseUrl", "parameters": "(String url, Properties info)", "modifiers": "static", "return": "IoTDBConnectionParams", "signature": "IoTDBConnectionParams parseUrl(String url, Properties info)", "full_signature": "static IoTDBConnectionParams parseUrl(String url, Properties info)", "class_method_signature": "Utils.parseUrl(String url, Properties info)", "testcase": false, "constructor": false}], "file": "jdbc/src/main/java/org/apache/iotdb/jdbc/Utils.java"}, "focal_method": {"identifier": "parseUrl", "parameters": "(String url, Properties info)", "modifiers": "static", "return": "IoTDBConnectionParams", "body": "static IoTDBConnectionParams parseUrl(String url, Properties info)\n      throws IoTDBURLException {\n    IoTDBConnectionParams params = new IoTDBConnectionParams(url);\n    if (url.trim().equalsIgnoreCase(Config.IOTDB_URL_PREFIX)) {\n      return params;\n    }\n    boolean isUrlLegal = false;\n    Matcher matcher = null;\n    if (url.startsWith(Config.IOTDB_URL_PREFIX)) {\n      String subURL = url.substring(Config.IOTDB_URL_PREFIX.length());\n      matcher = URL_PATTERN.matcher(subURL);\n      if (matcher.matches()) {\n        isUrlLegal = true;\n      }\n    }\n    if (!isUrlLegal) {\n      throw new IoTDBURLException(\"Error url format, url should be jdbc:iotdb://anything:port/ or jdbc:iotdb://anything:port\");\n    }\n    params.setHost(matcher.group(1));\n    params.setPort(Integer.parseInt(matcher.group(2)));\n\n    if (info.containsKey(Config.AUTH_USER)) {\n      params.setUsername(info.getProperty(Config.AUTH_USER));\n    }\n    if (info.containsKey(Config.AUTH_PASSWORD)) {\n      params.setPassword(info.getProperty(Config.AUTH_PASSWORD));\n    }\n\n    return params;\n  }", "signature": "IoTDBConnectionParams parseUrl(String url, Properties info)", "full_signature": "static IoTDBConnectionParams parseUrl(String url, Properties info)", "class_method_signature": "Utils.parseUrl(String url, Properties info)", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "trim", "startsWith", "substring", "length", "matcher", "matches", "setHost", "group", "setPort", "parseInt", "group", "containsKey", "setUsername", "getProperty", "containsKey", "setPassword", "getProperty"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}