{"test_class": {"identifier": "HTTPTest", "superclass": "", "interfaces": "", "fields": [], "file": "restx-core/src/test/java/restx/http/HTTPTest.java"}, "test_case": {"identifier": "should_find_mime_type", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_find_mime_type() throws Exception {\n        assertThat(HTTP.getContentTypeFromExtension(\"test.js\")).isEqualTo(Optional.of(\"application/x-javascript\"));\n        assertThat(HTTP.getContentTypeFromExtension(\"html\")).isEqualTo(Optional.of(\"text/html\"));\n        assertThat(HTTP.getContentTypeFromExtension(\"css\")).isEqualTo(Optional.of(\"text/css\"));\n    }", "signature": "void should_find_mime_type()", "full_signature": "@Test public void should_find_mime_type()", "class_method_signature": "HTTPTest.should_find_mime_type()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getContentTypeFromExtension", "of", "isEqualTo", "assertThat", "getContentTypeFromExtension", "of", "isEqualTo", "assertThat", "getContentTypeFromExtension", "of"]}, "focal_class": {"identifier": "HTTP", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Properties mimeTypes;", "modifier": "private static final", "type": "Properties", "declarator": "mimeTypes", "var_name": "mimeTypes"}, {"original_string": "private final static String RFC_2616_TOKEN_SPECIAL_CHARS_REGEX = \"[\\\\s\\\\(\\\\)<>@,;:\\\\\\\\\\\"/\\\\[\\\\]\\\\?=\\\\{\\\\}]\";", "modifier": "private final static", "type": "String", "declarator": "RFC_2616_TOKEN_SPECIAL_CHARS_REGEX = \"[\\\\s\\\\(\\\\)<>@,;:\\\\\\\\\\\"/\\\\[\\\\]\\\\?=\\\\{\\\\}]\"", "var_name": "RFC_2616_TOKEN_SPECIAL_CHARS_REGEX"}], "methods": [{"identifier": "getContentTypeFromExtension", "parameters": "(String filename)", "modifiers": "public static", "return": "Optional<String>", "signature": "Optional<String> getContentTypeFromExtension(String filename)", "full_signature": "public static Optional<String> getContentTypeFromExtension(String filename)", "class_method_signature": "HTTP.getContentTypeFromExtension(String filename)", "testcase": false, "constructor": false}, {"identifier": "isTextContentType", "parameters": "(String contentType)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTextContentType(String contentType)", "full_signature": "public static boolean isTextContentType(String contentType)", "class_method_signature": "HTTP.isTextContentType(String contentType)", "testcase": false, "constructor": false}, {"identifier": "charsetFromContentType", "parameters": "(String s)", "modifiers": "public static", "return": "Optional<String>", "signature": "Optional<String> charsetFromContentType(String s)", "full_signature": "public static Optional<String> charsetFromContentType(String s)", "class_method_signature": "HTTP.charsetFromContentType(String s)", "testcase": false, "constructor": false}, {"identifier": "headerTokenCompatible", "parameters": "(String s, String specialCharsReplacement)", "modifiers": "public static", "return": "String", "signature": "String headerTokenCompatible(String s, String specialCharsReplacement)", "full_signature": "public static String headerTokenCompatible(String s, String specialCharsReplacement)", "class_method_signature": "HTTP.headerTokenCompatible(String s, String specialCharsReplacement)", "testcase": false, "constructor": false}], "file": "restx-core/src/main/java/restx/http/HTTP.java"}, "focal_method": {"identifier": "getContentTypeFromExtension", "parameters": "(String filename)", "modifiers": "public static", "return": "Optional<String>", "body": "public static Optional<String> getContentTypeFromExtension(String filename) {\n        String ext = filename.substring(filename.lastIndexOf('.') + 1);\n\n        return Optional.fromNullable(mimeTypes.getProperty(ext));\n    }", "signature": "Optional<String> getContentTypeFromExtension(String filename)", "full_signature": "public static Optional<String> getContentTypeFromExtension(String filename)", "class_method_signature": "HTTP.getContentTypeFromExtension(String filename)", "testcase": false, "constructor": false, "invocations": ["substring", "lastIndexOf", "fromNullable", "getProperty"]}, "repository": {"repo_id": 9836833, "url": "https://github.com/restx/restx", "language": "Java", "is_fork": false, "fork_count": 78, "stargazer_count": 433, "size": 7896, "license": "licensed"}}