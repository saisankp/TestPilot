{"test_class": {"identifier": "UpgradeRestServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UpgradeRestService service;", "modifier": "private", "type": "UpgradeRestService", "declarator": "service", "var_name": "service"}, {"original_string": "private String message = null;", "modifier": "private", "type": "String", "declarator": "message = null", "var_name": "message"}, {"original_string": "private OobUpgradeSpec upgradeSpec;", "modifier": "private", "type": "OobUpgradeSpec", "declarator": "upgradeSpec", "var_name": "upgradeSpec"}, {"original_string": "private RollbackSpec rollbackSpec;", "modifier": "private", "type": "RollbackSpec", "declarator": "rollbackSpec", "var_name": "rollbackSpec"}], "file": "modules/hms-core/src/test/java/com/vmware/vrack/hms/rest/services/UpgradeRestServiceTest.java"}, "test_case": {"identifier": "testRollbackWithBlankHmsToken", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRollbackWithBlankHmsToken()\n    {\n\n        rollbackSpec.setId( \" \" );\n        HMSRestException e = rollback( rollbackSpec );\n        assertNotNull( e );\n\n        assertEquals( e.getResponseErrorCode(), Status.BAD_REQUEST.getStatusCode() );\n        message = \"'id' is a mandatory parameter for HMS Upgrade rollback.\";\n        assertEquals( message, e.getReason() );\n    }", "signature": "void testRollbackWithBlankHmsToken()", "full_signature": "@Test public void testRollbackWithBlankHmsToken()", "class_method_signature": "UpgradeRestServiceTest.testRollbackWithBlankHmsToken()", "testcase": true, "constructor": false, "invocations": ["setId", "rollback", "assertNotNull", "assertEquals", "getResponseErrorCode", "getStatusCode", "assertEquals", "getReason"]}, "focal_class": {"identifier": "UpgradeRestService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger( getClass() );", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( getClass() )", "var_name": "logger"}, {"original_string": "private static final String RESTART_PROXY_SCRIPT = \"hms_oob_restart_lighttpd_wrapper.sh\";", "modifier": "private static final", "type": "String", "declarator": "RESTART_PROXY_SCRIPT = \"hms_oob_restart_lighttpd_wrapper.sh\"", "var_name": "RESTART_PROXY_SCRIPT"}], "methods": [{"identifier": "upgrade", "parameters": "( OobUpgradeSpec upgradeSpec )", "modifiers": "@POST public", "return": "Response", "signature": "Response upgrade( OobUpgradeSpec upgradeSpec )", "full_signature": "@POST public Response upgrade( OobUpgradeSpec upgradeSpec )", "class_method_signature": "UpgradeRestService.upgrade( OobUpgradeSpec upgradeSpec )", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "( RollbackSpec rollbackSpec )", "modifiers": "@POST @Path( \"/rollback\" ) public", "return": "Response", "signature": "Response rollback( RollbackSpec rollbackSpec )", "full_signature": "@POST @Path( \"/rollback\" ) public Response rollback( RollbackSpec rollbackSpec )", "class_method_signature": "UpgradeRestService.rollback( RollbackSpec rollbackSpec )", "testcase": false, "constructor": false}, {"identifier": "uploadFile", "parameters": "( MultipartFormDataInput multipartFormDataInput )", "modifiers": "@POST @Path( \"/upload\" ) @Consumes( MediaType.MULTIPART_FORM_DATA ) public", "return": "Response", "signature": "Response uploadFile( MultipartFormDataInput multipartFormDataInput )", "full_signature": "@POST @Path( \"/upload\" ) @Consumes( MediaType.MULTIPART_FORM_DATA ) public Response uploadFile( MultipartFormDataInput multipartFormDataInput )", "class_method_signature": "UpgradeRestService.uploadFile( MultipartFormDataInput multipartFormDataInput )", "testcase": false, "constructor": false}, {"identifier": "getUpgradeStatus", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@GET @Path( \"/monitor/{upgradeId}\" ) public", "return": "Response", "signature": "Response getUpgradeStatus( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@GET @Path( \"/monitor/{upgradeId}\" ) public Response getUpgradeStatus( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.getUpgradeStatus( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false}, {"identifier": "deleteBackup", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@DELETE @Path( \"/backup/{upgradeId}\" ) public", "return": "Response", "signature": "Response deleteBackup( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@DELETE @Path( \"/backup/{upgradeId}\" ) public Response deleteBackup( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.deleteBackup( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false}, {"identifier": "restartProxy", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@POST @Path( \"/proxy/restart/{upgradeId}\" ) public", "return": "Response", "signature": "Response restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@POST @Path( \"/proxy/restart/{upgradeId}\" ) public Response restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false}, {"identifier": "downloadInventoryFile", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@GET @Path( \"/download/inventory/{upgradeId}\" ) public", "return": "File", "signature": "File downloadInventoryFile( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@GET @Path( \"/download/inventory/{upgradeId}\" ) public File downloadInventoryFile( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.downloadInventoryFile( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false}], "file": "modules/hms-core/src/main/java/com/vmware/vrack/hms/rest/services/UpgradeRestService.java"}, "focal_method": {"identifier": "rollback", "parameters": "( RollbackSpec rollbackSpec )", "modifiers": "@POST @Path( \"/rollback\" ) public", "return": "Response", "body": "@POST\n    @Path( \"/rollback\" )\n    public Response rollback( RollbackSpec rollbackSpec )\n        throws HMSRestException\n    {\n\n        // validate rollback upgrade request\n        UpgradeUtil.validateRollbackRequest( rollbackSpec );\n\n        boolean rollbackInitiated = UpgradeUtil.rollbackUpgrade( rollbackSpec );\n\n        if ( rollbackInitiated )\n        {\n            // respond as rollback request accepted\n            BaseResponse response =\n                new BaseResponse( Status.ACCEPTED.getStatusCode(), Status.ACCEPTED.getReasonPhrase(),\n                                  \"Rollback of upgrade initiated.\" );\n            return Response.accepted().entity( response ).build();\n\n        }\n        else\n        {\n\n            throw new HMSRestException( Status.INTERNAL_SERVER_ERROR.getStatusCode(),\n                                        Status.INTERNAL_SERVER_ERROR.getReasonPhrase(),\n                                        \"Initiating rollback of upgrade failed.\" );\n        }\n    }", "signature": "Response rollback( RollbackSpec rollbackSpec )", "full_signature": "@POST @Path( \"/rollback\" ) public Response rollback( RollbackSpec rollbackSpec )", "class_method_signature": "UpgradeRestService.rollback( RollbackSpec rollbackSpec )", "testcase": false, "constructor": false, "invocations": ["validateRollbackRequest", "rollbackUpgrade", "getStatusCode", "getReasonPhrase", "build", "entity", "accepted", "getStatusCode", "getReasonPhrase"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}