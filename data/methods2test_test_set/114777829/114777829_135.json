{"test_class": {"identifier": "DefaultWebApplicationExtensionContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/impl/src/test/java/cloud/piranha/webapp/impl/DefaultWebApplicationExtensionContextTest.java"}, "test_case": {"identifier": "testAdd", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testAdd() {\n        DefaultWebApplicationExtensionContext context = new DefaultWebApplicationExtensionContext();\n        DefaultWebApplication webApplication = new DefaultWebApplication();\n        context.add(TestExtension.class);\n        context.configure(webApplication);\n        webApplication.initialize();\n        assertNotNull(webApplication.getAttribute(TestInitializer.class.getName()));\n    }", "signature": "void testAdd()", "full_signature": "@Test void testAdd()", "class_method_signature": "DefaultWebApplicationExtensionContextTest.testAdd()", "testcase": true, "constructor": false, "invocations": ["add", "configure", "initialize", "assertNotNull", "getAttribute", "getName"]}, "focal_class": {"identifier": "DefaultWebApplicationExtensionContext", "superclass": "", "interfaces": "implements WebApplicationExtensionContext", "fields": [{"original_string": "private final ArrayList<WebApplicationExtension> extensions;", "modifier": "private final", "type": "ArrayList<WebApplicationExtension>", "declarator": "extensions", "var_name": "extensions"}, {"original_string": "private final ArrayList<Class<? extends WebApplicationExtension>> extensionClasses;", "modifier": "private final", "type": "ArrayList<Class<? extends WebApplicationExtension>>", "declarator": "extensionClasses", "var_name": "extensionClasses"}], "methods": [{"identifier": "DefaultWebApplicationExtensionContext", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultWebApplicationExtensionContext()", "full_signature": "public  DefaultWebApplicationExtensionContext()", "class_method_signature": "DefaultWebApplicationExtensionContext.DefaultWebApplicationExtensionContext()", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(Class<? extends WebApplicationExtension> extension)", "modifiers": "@Override public", "return": "void", "signature": "void add(Class<? extends WebApplicationExtension> extension)", "full_signature": "@Override public void add(Class<? extends WebApplicationExtension> extension)", "class_method_signature": "DefaultWebApplicationExtensionContext.add(Class<? extends WebApplicationExtension> extension)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(WebApplicationExtension extension)", "modifiers": "@Override public", "return": "void", "signature": "void add(WebApplicationExtension extension)", "full_signature": "@Override public void add(WebApplicationExtension extension)", "class_method_signature": "DefaultWebApplicationExtensionContext.add(WebApplicationExtension extension)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(WebApplication webApplication)", "modifiers": "public", "return": "void", "signature": "void configure(WebApplication webApplication)", "full_signature": "public void configure(WebApplication webApplication)", "class_method_signature": "DefaultWebApplicationExtensionContext.configure(WebApplication webApplication)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Class<? extends WebApplicationExtension> extension)", "modifiers": "@Override public", "return": "void", "signature": "void remove(Class<? extends WebApplicationExtension> extension)", "full_signature": "@Override public void remove(Class<? extends WebApplicationExtension> extension)", "class_method_signature": "DefaultWebApplicationExtensionContext.remove(Class<? extends WebApplicationExtension> extension)", "testcase": false, "constructor": false}], "file": "webapp/impl/src/main/java/cloud/piranha/webapp/impl/DefaultWebApplicationExtensionContext.java"}, "focal_method": {"identifier": "add", "parameters": "(Class<? extends WebApplicationExtension> extension)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void add(Class<? extends WebApplicationExtension> extension) {\n        try {\n            WebApplicationExtension instance = extension.getDeclaredConstructor().newInstance();\n            instance.extend(this);\n            extensions.add(instance);\n            extensionClasses.add(extension);\n        } catch (InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException | NoSuchMethodException | SecurityException ex) {\n            ex.printStackTrace();\n        }\n    }", "signature": "void add(Class<? extends WebApplicationExtension> extension)", "full_signature": "@Override public void add(Class<? extends WebApplicationExtension> extension)", "class_method_signature": "DefaultWebApplicationExtensionContext.add(Class<? extends WebApplicationExtension> extension)", "testcase": false, "constructor": false, "invocations": ["newInstance", "getDeclaredConstructor", "extend", "add", "add", "printStackTrace"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}