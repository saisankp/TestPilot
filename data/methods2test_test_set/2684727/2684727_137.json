{"test_class": {"identifier": "AlphabeticalCaseInsensitiveCharSequenceComparatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/co/smartreceipts/android/utils/sorting/AlphabeticalCaseInsensitiveCharSequenceComparatorTest.java"}, "test_case": {"identifier": "compare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compare() {\n        final AlphabeticalCaseInsensitiveCharSequenceComparator comparator = new AlphabeticalCaseInsensitiveCharSequenceComparator();\n        final String string1 = \"abcde\";\n        final String string2 = \"wxyz\";\n        assertTrue(comparator.compare(string1, string1) == 0);\n        assertTrue(comparator.compare(string2, string2) == 0);\n        assertTrue(comparator.compare(string1, string2) < 0);\n        assertTrue(comparator.compare(string2, string1) > 0);\n    }", "signature": "void compare()", "full_signature": "@Test public void compare()", "class_method_signature": "AlphabeticalCaseInsensitiveCharSequenceComparatorTest.compare()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "compare", "assertTrue", "compare", "assertTrue", "compare", "assertTrue", "compare"]}, "focal_class": {"identifier": "AlphabeticalCaseInsensitiveCharSequenceComparator", "superclass": "", "interfaces": "implements Comparator<CharSequence>", "fields": [], "methods": [{"identifier": "compare", "parameters": "(CharSequence charSequence1, CharSequence charSequence2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(CharSequence charSequence1, CharSequence charSequence2)", "full_signature": "@Override public int compare(CharSequence charSequence1, CharSequence charSequence2)", "class_method_signature": "AlphabeticalCaseInsensitiveCharSequenceComparator.compare(CharSequence charSequence1, CharSequence charSequence2)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/utils/sorting/AlphabeticalCaseInsensitiveCharSequenceComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(CharSequence charSequence1, CharSequence charSequence2)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compare(CharSequence charSequence1, CharSequence charSequence2) {\n        return charSequence1.toString().compareToIgnoreCase(charSequence2.toString());\n    }", "signature": "int compare(CharSequence charSequence1, CharSequence charSequence2)", "full_signature": "@Override public int compare(CharSequence charSequence1, CharSequence charSequence2)", "class_method_signature": "AlphabeticalCaseInsensitiveCharSequenceComparator.compare(CharSequence charSequence1, CharSequence charSequence2)", "testcase": false, "constructor": false, "invocations": ["compareToIgnoreCase", "toString", "toString"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}