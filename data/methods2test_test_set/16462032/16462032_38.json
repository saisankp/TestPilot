{"test_class": {"identifier": "PathUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "mucommander-commons-file/src/test/java/com/mucommander/commons/file/util/PathUtilsTest.java"}, "test_case": {"identifier": "testRemoveLeadingFragments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveLeadingFragments() {\n        assert \"home/maxence/\".equals(PathUtils.removeLeadingFragments(\"/home/maxence/\", \"/\", 0));\n        assert \"maxence/\".equals(PathUtils.removeLeadingFragments(\"/home/maxence/\", \"/\", 1));\n        assert \"\".equals(PathUtils.removeLeadingFragments(\"/home/maxence/\", \"/\", 2));\n        assert \"\".equals(PathUtils.removeLeadingFragments(\"/home/maxence/\", \"/\", 3));\n        assert \"\".equals(PathUtils.removeLeadingFragments(\"/home/maxence/\", \"\\\\\", 1));\n    }", "signature": "void testRemoveLeadingFragments()", "full_signature": "@Test public void testRemoveLeadingFragments()", "class_method_signature": "PathUtilsTest.testRemoveLeadingFragments()", "testcase": true, "constructor": false, "invocations": ["equals", "removeLeadingFragments", "equals", "removeLeadingFragments", "equals", "removeLeadingFragments", "equals", "removeLeadingFragments", "equals", "removeLeadingFragments"]}, "focal_class": {"identifier": "PathUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PathUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PathUtils.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "resolveDestination", "parameters": "(String destPath, AbstractFile baseFolder)", "modifiers": "public static", "return": "ResolvedDestination", "signature": "ResolvedDestination resolveDestination(String destPath, AbstractFile baseFolder)", "full_signature": "public static ResolvedDestination resolveDestination(String destPath, AbstractFile baseFolder)", "class_method_signature": "PathUtils.resolveDestination(String destPath, AbstractFile baseFolder)", "testcase": false, "constructor": false}, {"identifier": "removeLeadingSeparator", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String removeLeadingSeparator(String path)", "full_signature": "public static String removeLeadingSeparator(String path)", "class_method_signature": "PathUtils.removeLeadingSeparator(String path)", "testcase": false, "constructor": false}, {"identifier": "removeLeadingSeparator", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "String", "signature": "String removeLeadingSeparator(String path, String separator)", "full_signature": "public static String removeLeadingSeparator(String path, String separator)", "class_method_signature": "PathUtils.removeLeadingSeparator(String path, String separator)", "testcase": false, "constructor": false}, {"identifier": "removeTrailingSeparator", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String removeTrailingSeparator(String path)", "full_signature": "public static String removeTrailingSeparator(String path)", "class_method_signature": "PathUtils.removeTrailingSeparator(String path)", "testcase": false, "constructor": false}, {"identifier": "removeTrailingSeparator", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "String", "signature": "String removeTrailingSeparator(String path, String separator)", "full_signature": "public static String removeTrailingSeparator(String path, String separator)", "class_method_signature": "PathUtils.removeTrailingSeparator(String path, String separator)", "testcase": false, "constructor": false}, {"identifier": "pathEquals", "parameters": "(String path1, String path2, String separator)", "modifiers": "public static", "return": "boolean", "signature": "boolean pathEquals(String path1, String path2, String separator)", "full_signature": "public static boolean pathEquals(String path1, String path2, String separator)", "class_method_signature": "PathUtils.pathEquals(String path1, String path2, String separator)", "testcase": false, "constructor": false}, {"identifier": "getPathHashCode", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "int", "signature": "int getPathHashCode(String path, String separator)", "full_signature": "public static int getPathHashCode(String path, String separator)", "class_method_signature": "PathUtils.getPathHashCode(String path, String separator)", "testcase": false, "constructor": false}, {"identifier": "removeLeadingFragments", "parameters": "(String path, String separator, int nbFragments)", "modifiers": "public static", "return": "String", "signature": "String removeLeadingFragments(String path, String separator, int nbFragments)", "full_signature": "public static String removeLeadingFragments(String path, String separator, int nbFragments)", "class_method_signature": "PathUtils.removeLeadingFragments(String path, String separator, int nbFragments)", "testcase": false, "constructor": false}, {"identifier": "getDepth", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "int", "signature": "int getDepth(String path, String separator)", "full_signature": "public static int getDepth(String path, String separator)", "class_method_signature": "PathUtils.getDepth(String path, String separator)", "testcase": false, "constructor": false}], "file": "mucommander-commons-file/src/main/java/com/mucommander/commons/file/util/PathUtils.java"}, "focal_method": {"identifier": "removeLeadingFragments", "parameters": "(String path, String separator, int nbFragments)", "modifiers": "public static", "return": "String", "body": "public static String removeLeadingFragments(String path, String separator, int nbFragments) {\n        path = removeLeadingSeparator(path, separator);\n\n        if(nbFragments==0)\n            return path;\n\n        int pos=-1;\n        for(int i=0; i<nbFragments && (pos=path.indexOf(separator, pos+1))!=-1; i++);\n\n        if(pos==-1 || pos==path.length()-1)\n            return \"\";\n\n        return path.substring(pos+1);\n    }", "signature": "String removeLeadingFragments(String path, String separator, int nbFragments)", "full_signature": "public static String removeLeadingFragments(String path, String separator, int nbFragments)", "class_method_signature": "PathUtils.removeLeadingFragments(String path, String separator, int nbFragments)", "testcase": false, "constructor": false, "invocations": ["removeLeadingSeparator", "indexOf", "length", "substring"]}, "repository": {"repo_id": 16462032, "url": "https://github.com/mucommander/mucommander", "language": "Java", "is_fork": false, "fork_count": 124, "stargazer_count": 448, "size": 47123, "license": "licensed"}}