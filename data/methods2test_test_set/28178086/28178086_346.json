{"test_class": {"identifier": "InformationSetTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/tstoolkit/information/InformationSetTest.java"}, "test_case": {"identifier": "testConvert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvert() {\n        Object[] s = new Object[]{\"a\", \"b\"};\n        String[] o = InformationSet.convert(s, String[].class);\n        Object p = InformationSet.convert(o, Object[].class);\n        assertTrue(Arrays.deepEquals(s, (Object[]) p));\n    }", "signature": "void testConvert()", "full_signature": "@Test public void testConvert()", "class_method_signature": "InformationSetTest.testConvert()", "testcase": true, "constructor": false, "invocations": ["convert", "convert", "assertTrue", "deepEquals"]}, "focal_class": {"identifier": "InformationSet", "superclass": "", "interfaces": "implements Cloneable", "fields": [{"original_string": "public static final char SEP = '.';", "modifier": "public static final", "type": "char", "declarator": "SEP = '.'", "var_name": "SEP"}, {"original_string": "public static final String STRSEP = new String(new char[]{SEP});", "modifier": "public static final", "type": "String", "declarator": "STRSEP = new String(new char[]{SEP})", "var_name": "STRSEP"}, {"original_string": "public static final String CONTENT = \"content\", TYPE_KEY = \"type\", VERSION_KEY = \"version\";", "modifier": "public static final", "type": "String", "declarator": "CONTENT = \"content\"", "var_name": "CONTENT"}, {"original_string": "public static final String LOG = \"log\";", "modifier": "public static final", "type": "String", "declarator": "LOG = \"log\"", "var_name": "LOG"}, {"original_string": "private ConcurrentHashMap<String, IndexedObject<?>> information_ = new ConcurrentHashMap<>();", "modifier": "private", "type": "ConcurrentHashMap<String, IndexedObject<?>>", "declarator": "information_ = new ConcurrentHashMap<>()", "var_name": "information_"}, {"original_string": "private boolean locked_;", "modifier": "private", "type": "boolean", "declarator": "locked_", "var_name": "locked_"}, {"original_string": "public static final String ERRORS = \"errors\", WARNINGS = \"warnings\";", "modifier": "public static final", "type": "String", "declarator": "ERRORS = \"errors\"", "var_name": "ERRORS"}], "methods": [{"identifier": "concatenate", "parameters": "(String... s)", "modifiers": "public static", "return": "String", "signature": "String concatenate(String... s)", "full_signature": "public static String concatenate(String... s)", "class_method_signature": "InformationSet.concatenate(String... s)", "testcase": false, "constructor": false}, {"identifier": "isPrefix", "parameters": "(String fullName, String prefix)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPrefix(String fullName, String prefix)", "full_signature": "public static boolean isPrefix(String fullName, String prefix)", "class_method_signature": "InformationSet.isPrefix(String fullName, String prefix)", "testcase": false, "constructor": false}, {"identifier": "hasWildCards", "parameters": "(String str)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasWildCards(String str)", "full_signature": "public static boolean hasWildCards(String str)", "class_method_signature": "InformationSet.hasWildCards(String str)", "testcase": false, "constructor": false}, {"identifier": "removePrefix", "parameters": "(String name)", "modifiers": "public static", "return": "String", "signature": "String removePrefix(String name)", "full_signature": "public static String removePrefix(String name)", "class_method_signature": "InformationSet.removePrefix(String name)", "testcase": false, "constructor": false}, {"identifier": "simpleName", "parameters": "(String fullName)", "modifiers": "public static", "return": "String", "signature": "String simpleName(String fullName)", "full_signature": "public static String simpleName(String fullName)", "class_method_signature": "InformationSet.simpleName(String fullName)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(String fullName)", "modifiers": "public static", "return": "String[]", "signature": "String[] split(String fullName)", "full_signature": "public static String[] split(String fullName)", "class_method_signature": "InformationSet.split(String fullName)", "testcase": false, "constructor": false}, {"identifier": "wildCompare", "parameters": "(String wString, String curString)", "modifiers": "public static", "return": "boolean", "signature": "boolean wildCompare(String wString, String curString)", "full_signature": "public static boolean wildCompare(String wString, String curString)", "class_method_signature": "InformationSet.wildCompare(String wString, String curString)", "testcase": false, "constructor": false}, {"identifier": "item", "parameters": "(String prefix, String name)", "modifiers": "public static", "return": "String", "signature": "String item(String prefix, String name)", "full_signature": "public static String item(String prefix, String name)", "class_method_signature": "InformationSet.item(String prefix, String name)", "testcase": false, "constructor": false}, {"identifier": "InformationSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " InformationSet()", "full_signature": "public  InformationSet()", "class_method_signature": "InformationSet.InformationSet()", "testcase": false, "constructor": true}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "InformationSet", "signature": "InformationSet clone()", "full_signature": "@Override public InformationSet clone()", "class_method_signature": "InformationSet.clone()", "testcase": false, "constructor": false}, {"identifier": "isLocked", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLocked()", "full_signature": "public boolean isLocked()", "class_method_signature": "InformationSet.isLocked()", "testcase": false, "constructor": false}, {"identifier": "setLocked", "parameters": "(boolean locked)", "modifiers": "public", "return": "void", "signature": "void setLocked(boolean locked)", "full_signature": "public void setLocked(boolean locked)", "class_method_signature": "InformationSet.setLocked(boolean locked)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final Information<?> info)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "boolean", "signature": "boolean set(final Information<?> info)", "full_signature": "@SuppressWarnings(\"unchecked\") public boolean set(final Information<?> info)", "class_method_signature": "InformationSet.set(final Information<?> info)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final Information<?> info)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "boolean", "signature": "boolean add(final Information<?> info)", "full_signature": "@SuppressWarnings(\"unchecked\") public boolean add(final Information<?> info)", "class_method_signature": "InformationSet.add(final Information<?> info)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final String name, final S info)", "modifiers": "public", "return": "boolean", "signature": "boolean add(final String name, final S info)", "full_signature": "public boolean add(final String name, final S info)", "class_method_signature": "InformationSet.add(final String name, final S info)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final String[] deepname, final S info)", "modifiers": "public", "return": "boolean", "signature": "boolean add(final String[] deepname, final S info)", "full_signature": "public boolean add(final String[] deepname, final S info)", "class_method_signature": "InformationSet.add(final String[] deepname, final S info)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final String[] deepname, final S info)", "modifiers": "public", "return": "boolean", "signature": "boolean set(final String[] deepname, final S info)", "full_signature": "public boolean set(final String[] deepname, final S info)", "class_method_signature": "InformationSet.set(final String[] deepname, final S info)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final Enum e, final S info)", "modifiers": "public", "return": "boolean", "signature": "boolean add(final Enum e, final S info)", "full_signature": "public boolean add(final Enum e, final S info)", "class_method_signature": "InformationSet.add(final Enum e, final S info)", "testcase": false, "constructor": false}, {"identifier": "addWarning", "parameters": "(String string)", "modifiers": "public", "return": "void", "signature": "void addWarning(String string)", "full_signature": "public void addWarning(String string)", "class_method_signature": "InformationSet.addWarning(String string)", "testcase": false, "constructor": false}, {"identifier": "addError", "parameters": "(String string)", "modifiers": "public", "return": "void", "signature": "void addError(String string)", "full_signature": "public void addError(String string)", "class_method_signature": "InformationSet.addError(String string)", "testcase": false, "constructor": false}, {"identifier": "addMessage", "parameters": "(String item, String msg)", "modifiers": "private", "return": "void", "signature": "void addMessage(String item, String msg)", "full_signature": "private void addMessage(String item, String msg)", "class_method_signature": "InformationSet.addMessage(String item, String msg)", "testcase": false, "constructor": false}, {"identifier": "addMessages", "parameters": "(String item, String[] msg)", "modifiers": "private", "return": "void", "signature": "void addMessages(String item, String[] msg)", "full_signature": "private void addMessages(String item, String[] msg)", "class_method_signature": "InformationSet.addMessages(String item, String[] msg)", "testcase": false, "constructor": false}, {"identifier": "allItems", "parameters": "(String name)", "modifiers": "private", "return": "List<String>", "signature": "List<String> allItems(String name)", "full_signature": "private List<String> allItems(String name)", "class_method_signature": "InformationSet.allItems(String name)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "InformationSet.clear()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InformationSet info)", "modifiers": "public", "return": "void", "signature": "void copy(InformationSet info)", "full_signature": "public void copy(InformationSet info)", "class_method_signature": "InformationSet.copy(InformationSet info)", "testcase": false, "constructor": false}, {"identifier": "content", "parameters": "()", "modifiers": "@NewObject public", "return": "String[]", "signature": "String[] content()", "full_signature": "@NewObject public String[] content()", "class_method_signature": "InformationSet.content()", "testcase": false, "constructor": false}, {"identifier": "deepSearch", "parameters": "(String name, Class<S> sclass)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "S", "signature": "S deepSearch(String name, Class<S> sclass)", "full_signature": "@SuppressWarnings(\"unchecked\") public S deepSearch(String name, Class<S> sclass)", "class_method_signature": "InformationSet.deepSearch(String name, Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "fillSelection", "parameters": "(String path, InformationSet set, List<Information<S>> sel, Class<S> sclass)", "modifiers": "private", "return": "void", "signature": "void fillSelection(String path, InformationSet set, List<Information<S>> sel, Class<S> sclass)", "full_signature": "private void fillSelection(String path, InformationSet set, List<Information<S>> sel, Class<S> sclass)", "class_method_signature": "InformationSet.fillSelection(String path, InformationSet set, List<Information<S>> sel, Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "fillSelection", "parameters": "(String path, InformationSet set, List<Information<S>> sel, WildCards wc, Class<S> sclass)", "modifiers": "private", "return": "void", "signature": "void fillSelection(String path, InformationSet set, List<Information<S>> sel, WildCards wc, Class<S> sclass)", "full_signature": "private void fillSelection(String path, InformationSet set, List<Information<S>> sel, WildCards wc, Class<S> sclass)", "class_method_signature": "InformationSet.fillSelection(String path, InformationSet set, List<Information<S>> sel, WildCards wc, Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "deepSelect", "parameters": "(String wc, Class<S> sclass)", "modifiers": "public", "return": "List<Information<S>>", "signature": "List<Information<S>> deepSelect(String wc, Class<S> sclass)", "full_signature": "public List<Information<S>> deepSelect(String wc, Class<S> sclass)", "class_method_signature": "InformationSet.deepSelect(String wc, Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "deepSelect", "parameters": "(Class<S> sclass)", "modifiers": "public", "return": "List<Information<S>>", "signature": "List<Information<S>> deepSelect(Class<S> sclass)", "full_signature": "public List<Information<S>> deepSelect(Class<S> sclass)", "class_method_signature": "InformationSet.deepSelect(Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "errors", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> errors()", "full_signature": "public List<String> errors()", "class_method_signature": "InformationSet.errors()", "testcase": false, "constructor": false}, {"identifier": "fillDictionary", "parameters": "(String prefix, List<String> items)", "modifiers": "public", "return": "void", "signature": "void fillDictionary(String prefix, List<String> items)", "full_signature": "public void fillDictionary(String prefix, List<String> items)", "class_method_signature": "InformationSet.fillDictionary(String prefix, List<String> items)", "testcase": false, "constructor": false}, {"identifier": "fillDictionary", "parameters": "(String prefix, Map<String, Class> items)", "modifiers": "public", "return": "void", "signature": "void fillDictionary(String prefix, Map<String, Class> items)", "full_signature": "public void fillDictionary(String prefix, Map<String, Class> items)", "class_method_signature": "InformationSet.fillDictionary(String prefix, Map<String, Class> items)", "testcase": false, "constructor": false}, {"identifier": "fillDictionary", "parameters": "(String prefix, List<String> items,\n            Class<T> tclass)", "modifiers": "public", "return": "void", "signature": "void fillDictionary(String prefix, List<String> items,\n            Class<T> tclass)", "full_signature": "public void fillDictionary(String prefix, List<String> items,\n            Class<T> tclass)", "class_method_signature": "InformationSet.fillDictionary(String prefix, List<String> items,\n            Class<T> tclass)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final String name)", "modifiers": "public", "return": "Object", "signature": "Object get(final String name)", "full_signature": "public Object get(final String name)", "class_method_signature": "InformationSet.get(final String name)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final Enum e)", "modifiers": "public", "return": "Object", "signature": "Object get(final Enum e)", "full_signature": "public Object get(final Enum e)", "class_method_signature": "InformationSet.get(final Enum e)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final String name, final Class<S> sclass)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "S", "signature": "S get(final String name, final Class<S> sclass)", "full_signature": "@SuppressWarnings(\"unchecked\") public S get(final String name, final Class<S> sclass)", "class_method_signature": "InformationSet.get(final String name, final Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final Enum e, final Class<S> sclass)", "modifiers": "public", "return": "S", "signature": "S get(final Enum e, final Class<S> sclass)", "full_signature": "public S get(final Enum e, final Class<S> sclass)", "class_method_signature": "InformationSet.get(final Enum e, final Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "getDictionary", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getDictionary()", "full_signature": "public List<String> getDictionary()", "class_method_signature": "InformationSet.getDictionary()", "testcase": false, "constructor": false}, {"identifier": "getDictionary", "parameters": "(Class<T> tclass)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getDictionary(Class<T> tclass)", "full_signature": "public List<String> getDictionary(Class<T> tclass)", "class_method_signature": "InformationSet.getDictionary(Class<T> tclass)", "testcase": false, "constructor": false}, {"identifier": "getSubSet", "parameters": "(final String name)", "modifiers": "public", "return": "InformationSet", "signature": "InformationSet getSubSet(final String name)", "full_signature": "public InformationSet getSubSet(final String name)", "class_method_signature": "InformationSet.getSubSet(final String name)", "testcase": false, "constructor": false}, {"identifier": "items", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @NewObject public", "return": "List<Information<?>>", "signature": "List<Information<?>> items()", "full_signature": "@SuppressWarnings(\"unchecked\") @NewObject public List<Information<?>> items()", "class_method_signature": "InformationSet.items()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final String name)", "modifiers": "public", "return": "void", "signature": "void remove(final String name)", "full_signature": "public void remove(final String name)", "class_method_signature": "InformationSet.remove(final String name)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final Enum e)", "modifiers": "public", "return": "void", "signature": "void remove(final Enum e)", "full_signature": "public void remove(final Enum e)", "class_method_signature": "InformationSet.remove(final Enum e)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(final String fullName, final Class<S> sclass)", "modifiers": "public", "return": "S", "signature": "S search(final String fullName, final Class<S> sclass)", "full_signature": "public S search(final String fullName, final Class<S> sclass)", "class_method_signature": "InformationSet.search(final String fullName, final Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "root", "parameters": "(final String[] names)", "modifiers": "private", "return": "InformationSet", "signature": "InformationSet root(final String[] names)", "full_signature": "private InformationSet root(final String[] names)", "class_method_signature": "InformationSet.root(final String[] names)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(final String[] names, final Class<S> sclass)", "modifiers": "public", "return": "S", "signature": "S search(final String[] names, final Class<S> sclass)", "full_signature": "public S search(final String[] names, final Class<S> sclass)", "class_method_signature": "InformationSet.search(final String[] names, final Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(final Class<S> sclass)", "modifiers": "@SuppressWarnings(\"unchecked\") @NewObject public", "return": "List<Information<S>>", "signature": "List<Information<S>> select(final Class<S> sclass)", "full_signature": "@SuppressWarnings(\"unchecked\") @NewObject public List<Information<S>> select(final Class<S> sclass)", "class_method_signature": "InformationSet.select(final Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(final String wc)", "modifiers": "@NewObject public", "return": "List<Information<Object>>", "signature": "List<Information<Object>> select(final String wc)", "full_signature": "@NewObject public List<Information<Object>> select(final String wc)", "class_method_signature": "InformationSet.select(final String wc)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(final String wc,\n            final Class<S> sclass)", "modifiers": "@SuppressWarnings(\"unchecked\") @NewObject public", "return": "List<Information<S>>", "signature": "List<Information<S>> select(final String wc,\n            final Class<S> sclass)", "full_signature": "@SuppressWarnings(\"unchecked\") @NewObject public List<Information<S>> select(final String wc,\n            final Class<S> sclass)", "class_method_signature": "InformationSet.select(final String wc,\n            final Class<S> sclass)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final String name, final S info)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "boolean", "signature": "boolean set(final String name, final S info)", "full_signature": "@SuppressWarnings(\"unchecked\") public boolean set(final String name, final S info)", "class_method_signature": "InformationSet.set(final String name, final S info)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final Enum e, final S info)", "modifiers": "public", "return": "boolean", "signature": "boolean set(final Enum e, final S info)", "full_signature": "public boolean set(final Enum e, final S info)", "class_method_signature": "InformationSet.set(final Enum e, final S info)", "testcase": false, "constructor": false}, {"identifier": "subSet", "parameters": "(final String name)", "modifiers": "public", "return": "InformationSet", "signature": "InformationSet subSet(final String name)", "full_signature": "public InformationSet subSet(final String name)", "class_method_signature": "InformationSet.subSet(final String name)", "testcase": false, "constructor": false}, {"identifier": "warnings", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> warnings()", "full_signature": "public List<String> warnings()", "class_method_signature": "InformationSet.warnings()", "testcase": false, "constructor": false}, {"identifier": "setContent", "parameters": "(String type, String version)", "modifiers": "public", "return": "void", "signature": "void setContent(String type, String version)", "full_signature": "public void setContent(String type, String version)", "class_method_signature": "InformationSet.setContent(String type, String version)", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContentType()", "full_signature": "public String getContentType()", "class_method_signature": "InformationSet.getContentType()", "testcase": false, "constructor": false}, {"identifier": "getContentVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContentVersion()", "full_signature": "public String getContentVersion()", "class_method_signature": "InformationSet.getContentVersion()", "testcase": false, "constructor": false}, {"identifier": "isContent", "parameters": "(String type, String version)", "modifiers": "public", "return": "boolean", "signature": "boolean isContent(String type, String version)", "full_signature": "public boolean isContent(String type, String version)", "class_method_signature": "InformationSet.isContent(String type, String version)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(List<String> dictionary)", "modifiers": "public", "return": "InformationSet", "signature": "InformationSet filter(List<String> dictionary)", "full_signature": "public InformationSet filter(List<String> dictionary)", "class_method_signature": "InformationSet.filter(List<String> dictionary)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(InformationSet info)", "modifiers": "public", "return": "boolean", "signature": "boolean merge(InformationSet info)", "full_signature": "public boolean merge(InformationSet info)", "class_method_signature": "InformationSet.merge(InformationSet info)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(InformationSet info)", "modifiers": "public", "return": "boolean", "signature": "boolean update(InformationSet info)", "full_signature": "public boolean update(InformationSet info)", "class_method_signature": "InformationSet.update(InformationSet info)", "testcase": false, "constructor": false}, {"identifier": "addLog", "parameters": "(final String name, final S info)", "modifiers": "public", "return": "boolean", "signature": "boolean addLog(final String name, final S info)", "full_signature": "public boolean addLog(final String name, final S info)", "class_method_signature": "InformationSet.addLog(final String name, final S info)", "testcase": false, "constructor": false}, {"identifier": "setLog", "parameters": "(final String name, final S info)", "modifiers": "public", "return": "boolean", "signature": "boolean setLog(final String name, final S info)", "full_signature": "public boolean setLog(final String name, final S info)", "class_method_signature": "InformationSet.setLog(final String name, final S info)", "testcase": false, "constructor": false}, {"identifier": "getLog", "parameters": "()", "modifiers": "public", "return": "InformationSet", "signature": "InformationSet getLog()", "full_signature": "public InformationSet getLog()", "class_method_signature": "InformationSet.getLog()", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(Object obj, Class<T> tclass)", "modifiers": "public static", "return": "T", "signature": "T convert(Object obj, Class<T> tclass)", "full_signature": "public static T convert(Object obj, Class<T> tclass)", "class_method_signature": "InformationSet.convert(Object obj, Class<T> tclass)", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/information/InformationSet.java"}, "focal_method": {"identifier": "convert", "parameters": "(Object obj, Class<T> tclass)", "modifiers": "public static", "return": "T", "body": "public static <T> T convert(Object obj, Class<T> tclass) {\n        if (obj == null) {\n            return null;\n        }\n        if (tclass.isInstance(obj)) {\n            return (T) obj;\n        } else if (tclass.isArray()) {\n            Class oclass = obj.getClass();\n            if (oclass.isArray()) {\n                int len = Array.getLength(obj);\n                Object nobj = Array.newInstance(tclass.getComponentType(), len);\n                try {\n                    System.arraycopy(obj, 0, nobj, 0, len);\n                    return (T) nobj;\n                } catch (ArrayStoreException ex) {\n                    return null;\n                }\n            }\n        }\n        return null;\n    }", "signature": "T convert(Object obj, Class<T> tclass)", "full_signature": "public static T convert(Object obj, Class<T> tclass)", "class_method_signature": "InformationSet.convert(Object obj, Class<T> tclass)", "testcase": false, "constructor": false, "invocations": ["isInstance", "isArray", "getClass", "isArray", "getLength", "newInstance", "getComponentType", "arraycopy"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}