{"test_class": {"identifier": "NotInServiceMenuFacetDerivedFromDomainServiceFacetFactoryTest", "superclass": "extends AbstractFacetFactoryJUnit4TestCase", "interfaces": "", "fields": [{"original_string": "private NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory facetFactory;", "modifier": "private", "type": "NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory", "declarator": "facetFactory", "var_name": "facetFactory"}], "file": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/actions/notinservicemenu/derived/NotInServiceMenuFacetDerivedFromDomainServiceFacetFactoryTest.java"}, "test_case": {"identifier": "whenDomain", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenDomain() throws Exception {\n\n        // given\n        @DomainService(nature = NatureOfService.DOMAIN)\n        class CustomerService {\n\n            public String name() {\n                return \"Joe\";\n            }\n        }\n\n        context.checking(new Expectations() {{\n            allowing(mockSpecificationLoader).loadSpecification(CustomerService.class);\n            will(returnValue(mockObjSpec));\n\n            allowing(mockObjSpec).getFacet(DomainServiceFacet.class);\n            will(returnValue(new DomainServiceFacetAbstract(mockObjSpec, null, NatureOfService.DOMAIN) {\n            }));\n        }});\n\n        expectNoMethodsRemoved();\n\n        facetedMethod = FacetedMethod.createForAction(CustomerService.class, \"name\");\n        facetFactory.setMetaModelContext(super.metaModelContext);\n\n        // when\n        facetFactory.process(new FacetFactory.ProcessMethodContext(CustomerService.class, null, facetedMethod.getMethod(), mockMethodRemover, facetedMethod));\n\n        // then\n        final Facet facet = facetedMethod.getFacet(NotInServiceMenuFacet.class);\n        assertThat(facet, is(not(nullValue())));\n        assertThat(facet instanceof NotInServiceMenuFacetDerivedFromDomainServiceFacet, is(true));\n        final NotInServiceMenuFacetDerivedFromDomainServiceFacet facetDerivedFromDomainServiceFacet = (NotInServiceMenuFacetDerivedFromDomainServiceFacet) facet;\n        assertThat(facetDerivedFromDomainServiceFacet.getNatureOfService(), equalTo(NatureOfService.DOMAIN));\n    }", "signature": "void whenDomain()", "full_signature": "@Test public void whenDomain()", "class_method_signature": "NotInServiceMenuFacetDerivedFromDomainServiceFacetFactoryTest.whenDomain()", "testcase": true, "constructor": false, "invocations": ["checking", "loadSpecification", "allowing", "will", "returnValue", "getFacet", "allowing", "will", "returnValue", "expectNoMethodsRemoved", "createForAction", "setMetaModelContext", "process", "getMethod", "getFacet", "assertThat", "is", "not", "nullValue", "assertThat", "is", "assertThat", "getNatureOfService", "equalTo"]}, "focal_class": {"identifier": "NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory", "superclass": "extends FacetFactoryAbstract", "interfaces": "", "fields": [], "methods": [{"identifier": "NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory()", "full_signature": "public  NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory()", "class_method_signature": "NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory.NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory()", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(final ProcessMethodContext processMethodContext)", "modifiers": "@Override public", "return": "void", "signature": "void process(final ProcessMethodContext processMethodContext)", "full_signature": "@Override public void process(final ProcessMethodContext processMethodContext)", "class_method_signature": "NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory.process(final ProcessMethodContext processMethodContext)", "testcase": false, "constructor": false}], "file": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/actions/notinservicemenu/derived/NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory.java"}, "focal_method": {"identifier": "process", "parameters": "(final ProcessMethodContext processMethodContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final ProcessMethodContext processMethodContext) {\n\n        final Method method = processMethodContext.getMethod();\n        final Class<?> declaringClass = method.getDeclaringClass();\n        final ObjectSpecification spec = getSpecificationLoader().loadSpecification(declaringClass);\n\n        final DomainServiceFacet domainServiceFacet = spec.getFacet(DomainServiceFacet.class);\n        if(domainServiceFacet == null || domainServiceFacet.isFallback()) {\n            return;\n        }\n\n        final NatureOfService natureOfService = domainServiceFacet.getNatureOfService();\n        if(natureOfService.isView()) {\n            return;\n        }\n\n        final FacetedMethod facetHolder = processMethodContext.getFacetHolder();\n        FacetUtil.addFacet(new NotInServiceMenuFacetDerivedFromDomainServiceFacet(natureOfService, facetHolder));\n    }", "signature": "void process(final ProcessMethodContext processMethodContext)", "full_signature": "@Override public void process(final ProcessMethodContext processMethodContext)", "class_method_signature": "NotInServiceMenuFacetDerivedFromDomainServiceFacetFactory.process(final ProcessMethodContext processMethodContext)", "testcase": false, "constructor": false, "invocations": ["getMethod", "getDeclaringClass", "loadSpecification", "getSpecificationLoader", "getFacet", "isFallback", "getNatureOfService", "isView", "getFacetHolder", "addFacet"]}, "repository": {"repo_id": 6935442, "url": "https://github.com/apache/isis", "stars": 516, "created": "11/30/2012 8:00:24 AM +00:00", "updates": "2020-01-27T13:28:09+00:00", "fork": "False", "license": "licensed"}}