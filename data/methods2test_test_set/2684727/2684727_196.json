{"test_class": {"identifier": "DistanceTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double DISTANCE_1 = 12.55d;", "modifier": "private static final", "type": "double", "declarator": "DISTANCE_1 = 12.55d", "var_name": "DISTANCE_1"}, {"original_string": "private static final String LOCATION_1 = \"Location\";", "modifier": "private static final", "type": "String", "declarator": "LOCATION_1 = \"Location\"", "var_name": "LOCATION_1"}, {"original_string": "private static final int TRIP_ID_1 = 5;", "modifier": "private static final", "type": "int", "declarator": "TRIP_ID_1 = 5", "var_name": "TRIP_ID_1"}, {"original_string": "private static final double DISTANCE_2 = 140d;", "modifier": "private static final", "type": "double", "declarator": "DISTANCE_2 = 140d", "var_name": "DISTANCE_2"}, {"original_string": "private static final String LOCATION_2 = \"Location2\";", "modifier": "private static final", "type": "String", "declarator": "LOCATION_2 = \"Location2\"", "var_name": "LOCATION_2"}, {"original_string": "private static final int TRIP_ID_2 = 7;", "modifier": "private static final", "type": "int", "declarator": "TRIP_ID_2 = 7", "var_name": "TRIP_ID_2"}, {"original_string": "private static final double DISTANCE_3 = 12.123;", "modifier": "private static final", "type": "double", "declarator": "DISTANCE_3 = 12.123", "var_name": "DISTANCE_3"}, {"original_string": "private static final String LOCATION_3 = \"Location3\";", "modifier": "private static final", "type": "String", "declarator": "LOCATION_3 = \"Location3\"", "var_name": "LOCATION_3"}, {"original_string": "private static final int TRIP_ID_3 = 8;", "modifier": "private static final", "type": "int", "declarator": "TRIP_ID_3 = 8", "var_name": "TRIP_ID_3"}, {"original_string": "private static final long DATE = 1409703721000L;", "modifier": "private static final", "type": "long", "declarator": "DATE = 1409703721000L", "var_name": "DATE"}, {"original_string": "private static final String TIMEZONE = TimeZone.getDefault().getID();", "modifier": "private static final", "type": "String", "declarator": "TIMEZONE = TimeZone.getDefault().getID()", "var_name": "TIMEZONE"}, {"original_string": "private static final String COMMENT = \"Comment\";", "modifier": "private static final", "type": "String", "declarator": "COMMENT = \"Comment\"", "var_name": "COMMENT"}, {"original_string": "private static final double RATE = 0.33d;", "modifier": "private static final", "type": "double", "declarator": "RATE = 0.33d", "var_name": "RATE"}, {"original_string": "private static final String CURRENCY_CODE = \"USD\";", "modifier": "private static final", "type": "String", "declarator": "CURRENCY_CODE = \"USD\"", "var_name": "CURRENCY_CODE"}, {"original_string": "DistanceTable mDistanceTable;", "modifier": "", "type": "DistanceTable", "declarator": "mDistanceTable", "var_name": "mDistanceTable"}, {"original_string": "@Mock\n    SQLiteDatabase mSQLiteDatabase;", "modifier": "@Mock", "type": "SQLiteDatabase", "declarator": "mSQLiteDatabase", "var_name": "mSQLiteDatabase"}, {"original_string": "@Mock\n    TableDefaultsCustomizer mTableDefaultsCustomizer;", "modifier": "@Mock", "type": "TableDefaultsCustomizer", "declarator": "mTableDefaultsCustomizer", "var_name": "mTableDefaultsCustomizer"}, {"original_string": "@Mock\n    Table<Trip> mTripsTable;", "modifier": "@Mock", "type": "Table<Trip>", "declarator": "mTripsTable", "var_name": "mTripsTable"}, {"original_string": "@Mock\n    Table<PaymentMethod> mPaymentMethodsTable;", "modifier": "@Mock", "type": "Table<PaymentMethod>", "declarator": "mPaymentMethodsTable", "var_name": "mPaymentMethodsTable"}, {"original_string": "@Mock\n    UserPreferenceManager userPreferenceManager;", "modifier": "@Mock", "type": "UserPreferenceManager", "declarator": "userPreferenceManager", "var_name": "userPreferenceManager"}, {"original_string": "@Mock\n    Trip mTrip1;", "modifier": "@Mock", "type": "Trip", "declarator": "mTrip1", "var_name": "mTrip1"}, {"original_string": "@Mock\n    Trip mTrip2;", "modifier": "@Mock", "type": "Trip", "declarator": "mTrip2", "var_name": "mTrip2"}, {"original_string": "@Mock\n    Trip mTrip3;", "modifier": "@Mock", "type": "Trip", "declarator": "mTrip3", "var_name": "mTrip3"}, {"original_string": "@Mock\n    PaymentMethod mPaymentMethod;", "modifier": "@Mock", "type": "PaymentMethod", "declarator": "mPaymentMethod", "var_name": "mPaymentMethod"}, {"original_string": "@Captor\n    ArgumentCaptor<String> mSqlCaptor;", "modifier": "@Captor", "type": "ArgumentCaptor<String>", "declarator": "mSqlCaptor", "var_name": "mSqlCaptor"}, {"original_string": "SQLiteOpenHelper mSQLiteOpenHelper;", "modifier": "", "type": "SQLiteOpenHelper", "declarator": "mSQLiteOpenHelper", "var_name": "mSQLiteOpenHelper"}, {"original_string": "Distance mDistance1;", "modifier": "", "type": "Distance", "declarator": "mDistance1", "var_name": "mDistance1"}, {"original_string": "Distance mDistance2;", "modifier": "", "type": "Distance", "declarator": "mDistance2", "var_name": "mDistance2"}, {"original_string": "DistanceBuilderFactory mBuilder;", "modifier": "", "type": "DistanceBuilderFactory", "declarator": "mBuilder", "var_name": "mBuilder"}], "file": "app/src/test/java/co/smartreceipts/android/persistence/database/tables/DistanceTableTest.java"}, "test_case": {"identifier": "onCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onCreate() {\n        final TableDefaultsCustomizer customizer = mock(TableDefaultsCustomizer.class);\n        mDistanceTable.onCreate(mSQLiteDatabase, customizer);\n        verify(mSQLiteDatabase).execSQL(mSqlCaptor.capture());\n        verifyZeroInteractions(customizer);\n\n        assertTrue(mSqlCaptor.getValue().contains(\"CREATE TABLE distance\")); // Table name\n        assertTrue(mSqlCaptor.getValue().contains(\"id INTEGER PRIMARY KEY AUTOINCREMENT\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"parentKey INTEGER\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"distance DECIMAL(10, 2)\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"location TEXT\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"date DATE\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"timezone TEXT\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"comment TEXT\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"rate DECIMAL(10, 2)\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"rate_currency TEXT\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"drive_sync_id TEXT\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"drive_is_synced BOOLEAN DEFAULT 0\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"drive_marked_for_deletion BOOLEAN DEFAULT 0\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"last_local_modification_time DATE\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"entity_uuid TEXT\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"location_hidden_auto_complete BOOLEAN DEFAULT 0\"));\n        assertTrue(mSqlCaptor.getValue().contains(\"comment_hidden_auto_complete BOOLEAN DEFAULT 0\"));\n    }", "signature": "void onCreate()", "full_signature": "@Test public void onCreate()", "class_method_signature": "DistanceTableTest.onCreate()", "testcase": true, "constructor": false, "invocations": ["mock", "onCreate", "execSQL", "verify", "capture", "verifyZeroInteractions", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue", "assertTrue", "contains", "getValue"]}, "focal_class": {"identifier": "DistanceTable", "superclass": "extends TripForeignKeyAbstractSqlTable<Distance>", "interfaces": "", "fields": [{"original_string": "public static final String TABLE_NAME = \"distance\";", "modifier": "public static final", "type": "String", "declarator": "TABLE_NAME = \"distance\"", "var_name": "TABLE_NAME"}, {"original_string": "public static final String COLUMN_PARENT_TRIP_ID = \"parentKey\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_PARENT_TRIP_ID = \"parentKey\"", "var_name": "COLUMN_PARENT_TRIP_ID"}, {"original_string": "public static final String COLUMN_DISTANCE = \"distance\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_DISTANCE = \"distance\"", "var_name": "COLUMN_DISTANCE"}, {"original_string": "public static final String COLUMN_LOCATION = \"location\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_LOCATION = \"location\"", "var_name": "COLUMN_LOCATION"}, {"original_string": "public static final String COLUMN_DATE = \"date\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_DATE = \"date\"", "var_name": "COLUMN_DATE"}, {"original_string": "public static final String COLUMN_TIMEZONE = \"timezone\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_TIMEZONE = \"timezone\"", "var_name": "COLUMN_TIMEZONE"}, {"original_string": "public static final String COLUMN_COMMENT = \"comment\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_COMMENT = \"comment\"", "var_name": "COLUMN_COMMENT"}, {"original_string": "public static final String COLUMN_RATE = \"rate\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_RATE = \"rate\"", "var_name": "COLUMN_RATE"}, {"original_string": "public static final String COLUMN_RATE_CURRENCY = \"rate_currency\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_RATE_CURRENCY = \"rate_currency\"", "var_name": "COLUMN_RATE_CURRENCY"}, {"original_string": "public static final String COLUMN_PAYMENT_METHOD_ID = \"paymentMethodKey\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_PAYMENT_METHOD_ID = \"paymentMethodKey\"", "var_name": "COLUMN_PAYMENT_METHOD_ID"}, {"original_string": "public static final String COLUMN_LOCATION_HIDDEN_AUTO_COMPLETE = \"location_hidden_auto_complete\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_LOCATION_HIDDEN_AUTO_COMPLETE = \"location_hidden_auto_complete\"", "var_name": "COLUMN_LOCATION_HIDDEN_AUTO_COMPLETE"}, {"original_string": "public static final String COLUMN_COMMENT_HIDDEN_AUTO_COMPLETE = \"comment_hidden_auto_complete\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_COMMENT_HIDDEN_AUTO_COMPLETE = \"comment_hidden_auto_complete\"", "var_name": "COLUMN_COMMENT_HIDDEN_AUTO_COMPLETE"}, {"original_string": "@Deprecated\n    public static final String COLUMN_PARENT = \"parent\";", "modifier": "@Deprecated\n    public static final", "type": "String", "declarator": "COLUMN_PARENT = \"parent\"", "var_name": "COLUMN_PARENT"}, {"original_string": "private final UserPreferenceManager userPreferenceManager;", "modifier": "private final", "type": "UserPreferenceManager", "declarator": "userPreferenceManager", "var_name": "userPreferenceManager"}], "methods": [{"identifier": "DistanceTable", "parameters": "(@NonNull SQLiteOpenHelper sqLiteOpenHelper, @NonNull Table<Trip> tripsTable,\n                         @NonNull Table<PaymentMethod> paymentMethodTable, @NonNull UserPreferenceManager userPreferenceManager)", "modifiers": "public", "return": "", "signature": " DistanceTable(@NonNull SQLiteOpenHelper sqLiteOpenHelper, @NonNull Table<Trip> tripsTable,\n                         @NonNull Table<PaymentMethod> paymentMethodTable, @NonNull UserPreferenceManager userPreferenceManager)", "full_signature": "public  DistanceTable(@NonNull SQLiteOpenHelper sqLiteOpenHelper, @NonNull Table<Trip> tripsTable,\n                         @NonNull Table<PaymentMethod> paymentMethodTable, @NonNull UserPreferenceManager userPreferenceManager)", "class_method_signature": "DistanceTable.DistanceTable(@NonNull SQLiteOpenHelper sqLiteOpenHelper, @NonNull Table<Trip> tripsTable,\n                         @NonNull Table<PaymentMethod> paymentMethodTable, @NonNull UserPreferenceManager userPreferenceManager)", "testcase": false, "constructor": true}, {"identifier": "onCreate", "parameters": "(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "full_signature": "@Override public synchronized void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "class_method_signature": "DistanceTable.onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "testcase": false, "constructor": false}, {"identifier": "onUpgrade", "parameters": "(@NonNull SQLiteDatabase db, int oldVersion, int newVersion, @NonNull TableDefaultsCustomizer customizer)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion, @NonNull TableDefaultsCustomizer customizer)", "full_signature": "@Override public synchronized void onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion, @NonNull TableDefaultsCustomizer customizer)", "class_method_signature": "DistanceTable.onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion, @NonNull TableDefaultsCustomizer customizer)", "testcase": false, "constructor": false}, {"identifier": "getTripFor", "parameters": "(@NonNull Distance distance)", "modifiers": "@NonNull @Override protected", "return": "Trip", "signature": "Trip getTripFor(@NonNull Distance distance)", "full_signature": "@NonNull @Override protected Trip getTripFor(@NonNull Distance distance)", "class_method_signature": "DistanceTable.getTripFor(@NonNull Distance distance)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/persistence/database/tables/DistanceTable.java"}, "focal_method": {"identifier": "onCreate", "parameters": "(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n    public synchronized void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer) {\n        super.onCreate(db, customizer);\n        final String sql = \"CREATE TABLE \" + TABLE_NAME + \" (\"\n                + COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\"\n                + COLUMN_PARENT_TRIP_ID + \" INTEGER REFERENCES \" + TripsTable.COLUMN_NAME + \" ON DELETE CASCADE,\"\n                + COLUMN_DISTANCE + \" DECIMAL(10, 2) DEFAULT 0.00,\"\n                + COLUMN_LOCATION + \" TEXT,\"\n                + COLUMN_DATE + \" DATE,\"\n                + COLUMN_TIMEZONE + \" TEXT,\"\n                + COLUMN_COMMENT + \" TEXT,\"\n                + COLUMN_RATE_CURRENCY + \" TEXT NOT NULL, \"\n                + COLUMN_RATE + \" DECIMAL(10, 2) DEFAULT 0.00, \"\n                + COLUMN_PAYMENT_METHOD_ID + \" INTEGER REFERENCES \" + PaymentMethodsTable.TABLE_NAME + \" ON DELETE NO ACTION, \"\n                + COLUMN_LOCATION_HIDDEN_AUTO_COMPLETE + \" BOOLEAN DEFAULT 0, \"\n                + COLUMN_COMMENT_HIDDEN_AUTO_COMPLETE + \" BOOLEAN DEFAULT 0, \"\n                + AbstractSqlTable.COLUMN_DRIVE_SYNC_ID + \" TEXT, \"\n                + AbstractSqlTable.COLUMN_DRIVE_IS_SYNCED + \" BOOLEAN DEFAULT 0, \"\n                + AbstractSqlTable.COLUMN_DRIVE_MARKED_FOR_DELETION + \" BOOLEAN DEFAULT 0, \"\n                + AbstractSqlTable.COLUMN_LAST_LOCAL_MODIFICATION_TIME + \" DATE ,\"\n                + AbstractSqlTable.COLUMN_UUID + \" TEXT \"\n                + \");\";\n        Logger.debug(this, sql);\n        db.execSQL(sql);\n    }", "signature": "void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "full_signature": "@Override public synchronized void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "class_method_signature": "DistanceTable.onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "testcase": false, "constructor": false, "invocations": ["onCreate", "debug", "execSQL"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}