{"test_class": {"identifier": "JsonHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(JsonHandlerTest.class\n\t\t\t.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(JsonHandlerTest.class\n\t\t\t.getName())", "var_name": "LOGGER"}, {"original_string": "private static final String TIME_PATTERN = \"\\\"[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\+[0-9]{2}:[0-9]{2})?\\\"\";", "modifier": "private static final", "type": "String", "declarator": "TIME_PATTERN = \"\\\"[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\+[0-9]{2}:[0-9]{2})?\\\"\"", "var_name": "TIME_PATTERN"}, {"original_string": "private static final String DATE_PATTERN = \"\\\"date\\\":\\\"[^\\\"]+\\\"\";", "modifier": "private static final", "type": "String", "declarator": "DATE_PATTERN = \"\\\"date\\\":\\\"[^\\\"]+\\\"\"", "var_name": "DATE_PATTERN"}, {"original_string": "private static final String DATE_REPLACEMENT = \"\\\"date\\\":\\\"2010-01-01\\\"\";", "modifier": "private static final", "type": "String", "declarator": "DATE_REPLACEMENT = \"\\\"date\\\":\\\"2010-01-01\\\"\"", "var_name": "DATE_REPLACEMENT"}, {"original_string": "private static final String RELEASE_PATTERN = \"\\\"release\\\":\\\"[^\\\"]+\\\"\";", "modifier": "private static final", "type": "String", "declarator": "RELEASE_PATTERN = \"\\\"release\\\":\\\"[^\\\"]+\\\"\"", "var_name": "RELEASE_PATTERN"}, {"original_string": "private static final String RELEASE_REPLACEMENT = \"\\\"release\\\":\\\"DUMMY\\\"\";", "modifier": "private static final", "type": "String", "declarator": "RELEASE_REPLACEMENT = \"\\\"release\\\":\\\"DUMMY\\\"\"", "var_name": "RELEASE_REPLACEMENT"}, {"original_string": "private static final String DIR_PATTERN = \"\\\"tempDirectory\\\":\\\"[^\\\"]+\\\"\";", "modifier": "private static final", "type": "String", "declarator": "DIR_PATTERN = \"\\\"tempDirectory\\\":\\\"[^\\\"]+\\\"\"", "var_name": "DIR_PATTERN"}, {"original_string": "private static final String DIR_REPLACEMENT = \"\\\"tempDirectory\\\":\\\"DUMMY\\\"\";", "modifier": "private static final", "type": "String", "declarator": "DIR_REPLACEMENT = \"\\\"tempDirectory\\\":\\\"DUMMY\\\"\"", "var_name": "DIR_REPLACEMENT"}, {"original_string": "private static final String CONF_PATTERN = \"\\\"configuration\\\":\\\"[^\\\"]+\\\"\";", "modifier": "private static final", "type": "String", "declarator": "CONF_PATTERN = \"\\\"configuration\\\":\\\"[^\\\"]+\\\"\"", "var_name": "CONF_PATTERN"}, {"original_string": "private static final String CONF_REPLACEMENT = \"\\\"configuration\\\":\\\"DUMMY\\\"\";", "modifier": "private static final", "type": "String", "declarator": "CONF_REPLACEMENT = \"\\\"configuration\\\":\\\"DUMMY\\\"\"", "var_name": "CONF_REPLACEMENT"}, {"original_string": "private static final String RIGHTS_PATTERN = \"\\\"rights\\\":\\\"[^\\\"]+\\\"\";", "modifier": "private static final", "type": "String", "declarator": "RIGHTS_PATTERN = \"\\\"rights\\\":\\\"[^\\\"]+\\\"\"", "var_name": "RIGHTS_PATTERN"}, {"original_string": "private static final String RIGHTS_REPLACEMENT = \"\\\"rights\\\":\\\"DUMMY\\\"\";", "modifier": "private static final", "type": "String", "declarator": "RIGHTS_REPLACEMENT = \"\\\"rights\\\":\\\"DUMMY\\\"\"", "var_name": "RIGHTS_REPLACEMENT"}, {"original_string": "private static final String VENDOR_PATTERN = \"\\\"vendor\\\":\\\\{[^\\\\}]+\\\\}\";", "modifier": "private static final", "type": "String", "declarator": "VENDOR_PATTERN = \"\\\"vendor\\\":\\\\{[^\\\\}]+\\\\}\"", "var_name": "VENDOR_PATTERN"}, {"original_string": "private static final String VENDOR_REPLACEMENT = \"\\\"vendor\\\":{\\\"kind\\\":\\\"Vendor\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "VENDOR_REPLACEMENT = \"\\\"vendor\\\":{\\\"kind\\\":\\\"Vendor\\\"}\"", "var_name": "VENDOR_REPLACEMENT"}, {"original_string": "private static final String DUMMY = \"\\\"DUMMY\\\"\";", "modifier": "private static final", "type": "String", "declarator": "DUMMY = \"\\\"DUMMY\\\"\"", "var_name": "DUMMY"}, {"original_string": "private static final String DUMMY_CK = \"8747e564eb53cb2f1dcb9aae0779c2aa\";", "modifier": "private static final", "type": "String", "declarator": "DUMMY_CK = \"8747e564eb53cb2f1dcb9aae0779c2aa\"", "var_name": "DUMMY_CK"}, {"original_string": "private static final String APP_JSON = \n\t\t\t\"\\\"name\\\":\\\"TEST\\\",\\\"release\\\":\\\"DUMMY\\\",\\\"date\\\":\\\"2010-01-01\\\",\\\"executionTime\\\":\\\"DUMMY\\\"\";", "modifier": "private static final", "type": "String", "declarator": "APP_JSON = \n\t\t\t\"\\\"name\\\":\\\"TEST\\\",\\\"release\\\":\\\"DUMMY\\\",\\\"date\\\":\\\"2010-01-01\\\",\\\"executionTime\\\":\\\"DUMMY\\\"\"", "var_name": "APP_JSON"}, {"original_string": "private static final String API_JSON = \n\t\t\t\"\\\"app\\\":{\\\"api\\\":{\\\"version\\\":\\\"1.0\\\",\\\"date\\\":\\\"2010-01-01\\\"},\" +\n\t\t\t\"\\\"configuration\\\":\\\"DUMMY\\\",\\\"jhoveHome\\\":\\\"TEST\\\",\\\"encoding\\\":\\\"utf-8\\\",\\\"tempDirectory\\\":\\\"DUMMY\\\",\" +\n\t\t    \"\\\"bufferSize\\\":131072,\\\"modules\\\":[{\\\"module\\\":\\\"BYTESTREAM\\\",\\\"release\\\":\\\"DUMMY\\\"}],\" +\n\t\t    \"\\\"outputHandlers\\\":[{\\\"outputHandler\\\":\\\"Audit\\\",\\\"release\\\":\\\"DUMMY\\\"},\" +\n\t\t    \"{\\\"outputHandler\\\":\\\"JSON\\\",\\\"release\\\":\\\"DUMMY\\\"},{\\\"outputHandler\\\":\\\"TEXT\\\",\\\"release\\\":\\\"DUMMY\\\"},\" +\n\t\t    \"{\\\"outputHandler\\\":\\\"XML\\\",\\\"release\\\":\\\"DUMMY\\\"}],\\\"usage\\\":\\\"usage\\\",\\\"rights\\\":\\\"DUMMY\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "API_JSON = \n\t\t\t\"\\\"app\\\":{\\\"api\\\":{\\\"version\\\":\\\"1.0\\\",\\\"date\\\":\\\"2010-01-01\\\"},\" +\n\t\t\t\"\\\"configuration\\\":\\\"DUMMY\\\",\\\"jhoveHome\\\":\\\"TEST\\\",\\\"encoding\\\":\\\"utf-8\\\",\\\"tempDirectory\\\":\\\"DUMMY\\\",\" +\n\t\t    \"\\\"bufferSize\\\":131072,\\\"modules\\\":[{\\\"module\\\":\\\"BYTESTREAM\\\",\\\"release\\\":\\\"DUMMY\\\"}],\" +\n\t\t    \"\\\"outputHandlers\\\":[{\\\"outputHandler\\\":\\\"Audit\\\",\\\"release\\\":\\\"DUMMY\\\"},\" +\n\t\t    \"{\\\"outputHandler\\\":\\\"JSON\\\",\\\"release\\\":\\\"DUMMY\\\"},{\\\"outputHandler\\\":\\\"TEXT\\\",\\\"release\\\":\\\"DUMMY\\\"},\" +\n\t\t    \"{\\\"outputHandler\\\":\\\"XML\\\",\\\"release\\\":\\\"DUMMY\\\"}],\\\"usage\\\":\\\"usage\\\",\\\"rights\\\":\\\"DUMMY\\\"}\"", "var_name": "API_JSON"}, {"original_string": "private static final String HANDLER_JSON = \n\t\t\t\"\\\"handler\\\":{\\\"name\\\":\\\"JSON\\\",\\\"release\\\":\\\"DUMMY\\\",\\\"date\\\":\\\"2010-01-01\\\",\" +\n\t\t\t\"\\\"vendor\\\":{\\\"kind\\\":\\\"Vendor\\\",\\\"name\\\":\\\"Biblioth\u00e8que nationale de France\\\",\\\"type\\\":\\\"Educational\\\",\" +\n\t\t\t\"\\\"web\\\":\\\"http://www.bnf.fr\\\"},\\\"note\\\":\\\"\\\",\" +\n\t\t\t\"\\\"rights\\\":\\\"DUMMY\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "HANDLER_JSON = \n\t\t\t\"\\\"handler\\\":{\\\"name\\\":\\\"JSON\\\",\\\"release\\\":\\\"DUMMY\\\",\\\"date\\\":\\\"2010-01-01\\\",\" +\n\t\t\t\"\\\"vendor\\\":{\\\"kind\\\":\\\"Vendor\\\",\\\"name\\\":\\\"Biblioth\u00e8que nationale de France\\\",\\\"type\\\":\\\"Educational\\\",\" +\n\t\t\t\"\\\"web\\\":\\\"http://www.bnf.fr\\\"},\\\"note\\\":\\\"\\\",\" +\n\t\t\t\"\\\"rights\\\":\\\"DUMMY\\\"}\"", "var_name": "HANDLER_JSON"}, {"original_string": "private static final String MODULE_JSON = \n\t\t\t\"\\\"module\\\":{\\\"name\\\":\\\"BYTESTREAM\\\",\\\"release\\\":\\\"DUMMY\\\",\\\"date\\\":\\\"2010-01-01\\\",\" +\n\t\t\t\"\\\"formats\\\":[\\\"bytestream\\\"],\\\"mimeTypes\\\":[\\\"application/octet-stream\\\"],\" +\n\t\t\t\"\\\"features\\\":[\\\"edu.harvard.hul.ois.jhove.canValidate\\\",\\\"edu.harvard.hul.ois.jhove.canCharacterize\\\"],\" +\n\t\t\t\"\\\"methodology\\\":{\\\"wellFormed\\\":\\\"All bytestreams are well-formed\\\"},\" +\n\t\t\t\"\\\"vendor\\\":{\\\"kind\\\":\\\"Vendor\\\"},\" +\n\t\t\t\"\\\"note\\\":\\\"This is the default format\\\",\\\"rights\\\":\\\"DUMMY\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "MODULE_JSON = \n\t\t\t\"\\\"module\\\":{\\\"name\\\":\\\"BYTESTREAM\\\",\\\"release\\\":\\\"DUMMY\\\",\\\"date\\\":\\\"2010-01-01\\\",\" +\n\t\t\t\"\\\"formats\\\":[\\\"bytestream\\\"],\\\"mimeTypes\\\":[\\\"application/octet-stream\\\"],\" +\n\t\t\t\"\\\"features\\\":[\\\"edu.harvard.hul.ois.jhove.canValidate\\\",\\\"edu.harvard.hul.ois.jhove.canCharacterize\\\"],\" +\n\t\t\t\"\\\"methodology\\\":{\\\"wellFormed\\\":\\\"All bytestreams are well-formed\\\"},\" +\n\t\t\t\"\\\"vendor\\\":{\\\"kind\\\":\\\"Vendor\\\"},\" +\n\t\t\t\"\\\"note\\\":\\\"This is the default format\\\",\\\"rights\\\":\\\"DUMMY\\\"}\"", "var_name": "MODULE_JSON"}, {"original_string": "private static final String INFO_JSON =\n\t\t\t\"\\\"repInfo\\\":{\\\"uri\\\":\\\"file://dummy.file\\\",\" +\n\t\t    \"\\\"reportingModule\\\":{\\\"name\\\":\\\"BYTESTREAM\\\",\\\"release\\\":\\\"DUMMY\\\",\\\"date\\\":\\\"2010-01-01\\\"},\" +\n\t\t    \"\\\"size\\\":1,\\\"format\\\":\\\"bytestream\\\",\\\"status\\\":\\\"Well-Formed and valid\\\",\\\"sigMatch\\\":[\\\"BYTESTREAM\\\"],\" +\n\t\t    \"\\\"mimeType\\\":\\\"application/octet-stream\\\",\\\"properties\\\":[{\\\"checksum\\\":\\\"\" +\n\t\t    DUMMY_CK + \"\\\",\\\"type\\\":\\\"MD5\\\"}]}\";", "modifier": "private static final", "type": "String", "declarator": "INFO_JSON =\n\t\t\t\"\\\"repInfo\\\":{\\\"uri\\\":\\\"file://dummy.file\\\",\" +\n\t\t    \"\\\"reportingModule\\\":{\\\"name\\\":\\\"BYTESTREAM\\\",\\\"release\\\":\\\"DUMMY\\\",\\\"date\\\":\\\"2010-01-01\\\"},\" +\n\t\t    \"\\\"size\\\":1,\\\"format\\\":\\\"bytestream\\\",\\\"status\\\":\\\"Well-Formed and valid\\\",\\\"sigMatch\\\":[\\\"BYTESTREAM\\\"],\" +\n\t\t    \"\\\"mimeType\\\":\\\"application/octet-stream\\\",\\\"properties\\\":[{\\\"checksum\\\":\\\"\" +\n\t\t    DUMMY_CK + \"\\\",\\\"type\\\":\\\"MD5\\\"}]}\"", "var_name": "INFO_JSON"}, {"original_string": "private static final String FIND = \"Find: \";", "modifier": "private static final", "type": "String", "declarator": "FIND = \"Find: \"", "var_name": "FIND"}, {"original_string": "private static App mockApp;", "modifier": "private static", "type": "App", "declarator": "mockApp", "var_name": "mockApp"}, {"original_string": "private static JhoveBase je;", "modifier": "private static", "type": "JhoveBase", "declarator": "je", "var_name": "je"}, {"original_string": "private File outputFile;", "modifier": "private", "type": "File", "declarator": "outputFile", "var_name": "outputFile"}, {"original_string": "private StringWriter outString;", "modifier": "private", "type": "StringWriter", "declarator": "outString", "var_name": "outString"}, {"original_string": "private PrintWriter writer;", "modifier": "private", "type": "PrintWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private JsonHandler handler;", "modifier": "private", "type": "JsonHandler", "declarator": "handler", "var_name": "handler"}], "file": "jhove-core/src/test/java/edu/harvard/hul/ois/jhove/handler/JsonHandlerTest.java"}, "test_case": {"identifier": "testShowAESAudioMetadata", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testShowAESAudioMetadata() throws IOException {\n\t\tfinal AESAudioMetadata aes = new AESAudioMetadata();\n\t\taes.setFormat(\"audio/wav\");\n\t\n\t\tJsonObjectBuilder b = this.handler.showAESAudioMetadata(aes);\n\t\tbuildJson(b);\n        handler.close();\n        \n\t\tString result = outString.toString();\n\t\tLOGGER.info(FIND + result);\n\t\tfinal String expected = \"{\\\"aes:schemaVersion\\\":\\\"1.02b\\\",\\\"aes:format\\\":\\\"audio/wav\\\",\" +\n\t\t\t\t\"\\\"aes:face\\\":{\\\"aes:timeline\\\":{\\\"tcf:startTime\\\":{\\\"tcf:frameCount\\\":30,\\\"tcf:timeBase\\\":1000,\" +\n\t\t\t\t\"\\\"tcf:videoField\\\":\\\"FIELD_1\\\",\\\"tcf:countingMode\\\":\\\"NTSC_NON_DROP_FRAME\\\",\\\"tcf:hours\\\":0,\" +\n\t\t\t\t\"\\\"tcf:minutes\\\":0,\\\"tcf:seconds\\\":0,\\\"tcf:frames\\\":0,\" +\n\t\t\t\t\"\\\"tcf:samples\\\":{\\\"tcf:sampleRate\\\":\\\"S44100\\\",\\\"tcf:numberOfSamples\\\":0},\" +\n\t\t\t\t\"\\\"tcf:filmFraming\\\":{\\\"tcf:framing\\\":\\\"NOT_APPLICABLE\\\",\\\"tcf:framingType\\\":\\\"tcf:ntscFilmFramingType\\\"}}},\" +\n\t\t\t\t\"\\\"aes:streams\\\":[]}}\";\n\n\t    assertEquals(expected, result);\n\t}", "signature": "void testShowAESAudioMetadata()", "full_signature": "@Test public void testShowAESAudioMetadata()", "class_method_signature": "JsonHandlerTest.testShowAESAudioMetadata()", "testcase": true, "constructor": false, "invocations": ["setFormat", "showAESAudioMetadata", "buildJson", "close", "toString", "info", "assertEquals"]}, "focal_class": {"identifier": "JsonHandler", "superclass": "extends HandlerBase", "interfaces": "", "fields": [{"original_string": "private static final String NAME = \"JSON\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"JSON\"", "var_name": "NAME"}, {"original_string": "private static final String RELEASE = \"1.0\";", "modifier": "private static final", "type": "String", "declarator": "RELEASE = \"1.0\"", "var_name": "RELEASE"}, {"original_string": "private static final int[] DATE = { 2019, 10, 18 };", "modifier": "private static final", "type": "int[]", "declarator": "DATE = { 2019, 10, 18 }", "var_name": "DATE"}, {"original_string": "private static final String NOTE = \"\";", "modifier": "private static final", "type": "String", "declarator": "NOTE = \"\"", "var_name": "NOTE"}, {"original_string": "private static final String RIGHTS = \"Version 1.0 release by Open Preservation Foundation. \"\n\t\t\t+ \"Released under the GNU Lesser General Public License.\";", "modifier": "private static final", "type": "String", "declarator": "RIGHTS = \"Version 1.0 release by Open Preservation Foundation. \"\n\t\t\t+ \"Released under the GNU Lesser General Public License.\"", "var_name": "RIGHTS"}, {"original_string": "private JsonObjectBuilder jhoveBuilder;", "modifier": "private", "type": "JsonObjectBuilder", "declarator": "jhoveBuilder", "var_name": "jhoveBuilder"}, {"original_string": "private double _sampleRate;", "modifier": "private", "type": "double", "declarator": "_sampleRate", "var_name": "_sampleRate"}], "methods": [{"identifier": "JsonHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " JsonHandler()", "full_signature": "public  JsonHandler()", "class_method_signature": "JsonHandler.JsonHandler()", "testcase": false, "constructor": true}, {"identifier": "JsonHandler", "parameters": "(String name, String release, int[] date, String note, String rights)", "modifiers": "public", "return": "", "signature": " JsonHandler(String name, String release, int[] date, String note, String rights)", "full_signature": "public  JsonHandler(String name, String release, int[] date, String note, String rights)", "class_method_signature": "JsonHandler.JsonHandler(String name, String release, int[] date, String note, String rights)", "testcase": false, "constructor": true}, {"identifier": "show", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void show()", "full_signature": "@Override public void show()", "class_method_signature": "JsonHandler.show()", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(App app)", "modifiers": "@Override public", "return": "void", "signature": "void show(App app)", "full_signature": "@Override public void show(App app)", "class_method_signature": "JsonHandler.show(App app)", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(OutputHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void show(OutputHandler handler)", "full_signature": "@Override public void show(OutputHandler handler)", "class_method_signature": "JsonHandler.show(OutputHandler handler)", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(Module module)", "modifiers": "@Override public", "return": "void", "signature": "void show(Module module)", "full_signature": "@Override public void show(Module module)", "class_method_signature": "JsonHandler.show(Module module)", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(RepInfo info)", "modifiers": "@Override public", "return": "void", "signature": "void show(RepInfo info)", "full_signature": "@Override public void show(RepInfo info)", "class_method_signature": "JsonHandler.show(RepInfo info)", "testcase": false, "constructor": false}, {"identifier": "showAgent", "parameters": "(Agent agent, String label)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showAgent(Agent agent, String label)", "full_signature": "protected JsonObjectBuilder showAgent(Agent agent, String label)", "class_method_signature": "JsonHandler.showAgent(Agent agent, String label)", "testcase": false, "constructor": false}, {"identifier": "showChecksum", "parameters": "(Checksum checksum)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showChecksum(Checksum checksum)", "full_signature": "protected JsonObjectBuilder showChecksum(Checksum checksum)", "class_method_signature": "JsonHandler.showChecksum(Checksum checksum)", "testcase": false, "constructor": false}, {"identifier": "showDocument", "parameters": "(Document document)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showDocument(Document document)", "full_signature": "protected JsonObjectBuilder showDocument(Document document)", "class_method_signature": "JsonHandler.showDocument(Document document)", "testcase": false, "constructor": false}, {"identifier": "showFooter", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showFooter()", "full_signature": "@Override public void showFooter()", "class_method_signature": "JsonHandler.showFooter()", "testcase": false, "constructor": false}, {"identifier": "showHeader", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showHeader()", "full_signature": "@Override public void showHeader()", "class_method_signature": "JsonHandler.showHeader()", "testcase": false, "constructor": false}, {"identifier": "showIdentifier", "parameters": "(Identifier identifier)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showIdentifier(Identifier identifier)", "full_signature": "protected JsonObjectBuilder showIdentifier(Identifier identifier)", "class_method_signature": "JsonHandler.showIdentifier(Identifier identifier)", "testcase": false, "constructor": false}, {"identifier": "showMessage", "parameters": "(Message message)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showMessage(Message message)", "full_signature": "protected JsonObjectBuilder showMessage(Message message)", "class_method_signature": "JsonHandler.showMessage(Message message)", "testcase": false, "constructor": false}, {"identifier": "showSignature", "parameters": "(Signature signature)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showSignature(Signature signature)", "full_signature": "protected JsonObjectBuilder showSignature(Signature signature)", "class_method_signature": "JsonHandler.showSignature(Signature signature)", "testcase": false, "constructor": false}, {"identifier": "valueToString", "parameters": "(Object obj)", "modifiers": "protected", "return": "String", "signature": "String valueToString(Object obj)", "full_signature": "protected String valueToString(Object obj)", "class_method_signature": "JsonHandler.valueToString(Object obj)", "testcase": false, "constructor": false}, {"identifier": "showProperty", "parameters": "(Property property)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showProperty(Property property)", "full_signature": "protected JsonObjectBuilder showProperty(Property property)", "class_method_signature": "JsonHandler.showProperty(Property property)", "testcase": false, "constructor": false}, {"identifier": "showScalarProperty", "parameters": "(Property property)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showScalarProperty(Property property)", "full_signature": "protected JsonObjectBuilder showScalarProperty(Property property)", "class_method_signature": "JsonHandler.showScalarProperty(Property property)", "testcase": false, "constructor": false}, {"identifier": "showListProperty", "parameters": "(Property property)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showListProperty(Property property)", "full_signature": "protected JsonObjectBuilder showListProperty(Property property)", "class_method_signature": "JsonHandler.showListProperty(Property property)", "testcase": false, "constructor": false}, {"identifier": "showSetProperty", "parameters": "(Property property)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showSetProperty(Property property)", "full_signature": "protected JsonObjectBuilder showSetProperty(Property property)", "class_method_signature": "JsonHandler.showSetProperty(Property property)", "testcase": false, "constructor": false}, {"identifier": "showMapProperty", "parameters": "(Property property)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showMapProperty(Property property)", "full_signature": "protected JsonObjectBuilder showMapProperty(Property property)", "class_method_signature": "JsonHandler.showMapProperty(Property property)", "testcase": false, "constructor": false}, {"identifier": "propertyLength", "parameters": "(Property property)", "modifiers": "protected", "return": "int", "signature": "int propertyLength(Property property)", "full_signature": "protected int propertyLength(Property property)", "class_method_signature": "JsonHandler.propertyLength(Property property)", "testcase": false, "constructor": false}, {"identifier": "showArrayProperty", "parameters": "(Property property)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showArrayProperty(Property property)", "full_signature": "protected JsonObjectBuilder showArrayProperty(Property property)", "class_method_signature": "JsonHandler.showArrayProperty(Property property)", "testcase": false, "constructor": false}, {"identifier": "showTextMDMetadata", "parameters": "(TextMDMetadata textMD)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showTextMDMetadata(TextMDMetadata textMD)", "full_signature": "protected JsonObjectBuilder showTextMDMetadata(TextMDMetadata textMD)", "class_method_signature": "JsonHandler.showTextMDMetadata(TextMDMetadata textMD)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageMetadata", "parameters": "(NisoImageMetadata niso)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showNisoImageMetadata(NisoImageMetadata niso)", "full_signature": "protected JsonObjectBuilder showNisoImageMetadata(NisoImageMetadata niso)", "class_method_signature": "JsonHandler.showNisoImageMetadata(NisoImageMetadata niso)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageMetadata", "parameters": "(NisoImageMetadata niso, boolean bMix10)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showNisoImageMetadata(NisoImageMetadata niso, boolean bMix10)", "full_signature": "protected JsonObjectBuilder showNisoImageMetadata(NisoImageMetadata niso, boolean bMix10)", "class_method_signature": "JsonHandler.showNisoImageMetadata(NisoImageMetadata niso, boolean bMix10)", "testcase": false, "constructor": false}, {"identifier": "showNisoBasicDigitalObjectInformation", "parameters": "(NisoImageMetadata niso, boolean bMix10)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showNisoBasicDigitalObjectInformation(NisoImageMetadata niso, boolean bMix10)", "full_signature": "protected JsonObjectBuilder showNisoBasicDigitalObjectInformation(NisoImageMetadata niso, boolean bMix10)", "class_method_signature": "JsonHandler.showNisoBasicDigitalObjectInformation(NisoImageMetadata niso, boolean bMix10)", "testcase": false, "constructor": false}, {"identifier": "showNisoBasicImageInformation", "parameters": "(NisoImageMetadata niso, boolean bMix10)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showNisoBasicImageInformation(NisoImageMetadata niso, boolean bMix10)", "full_signature": "protected JsonObjectBuilder showNisoBasicImageInformation(NisoImageMetadata niso, boolean bMix10)", "class_method_signature": "JsonHandler.showNisoBasicImageInformation(NisoImageMetadata niso, boolean bMix10)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageCaptureMetadata", "parameters": "(NisoImageMetadata niso, boolean bMix10)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showNisoImageCaptureMetadata(NisoImageMetadata niso, boolean bMix10)", "full_signature": "protected JsonObjectBuilder showNisoImageCaptureMetadata(NisoImageMetadata niso, boolean bMix10)", "class_method_signature": "JsonHandler.showNisoImageCaptureMetadata(NisoImageMetadata niso, boolean bMix10)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageAssessmentMetadata", "parameters": "(NisoImageMetadata niso, boolean bMix10)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showNisoImageAssessmentMetadata(NisoImageMetadata niso, boolean bMix10)", "full_signature": "protected JsonObjectBuilder showNisoImageAssessmentMetadata(NisoImageMetadata niso, boolean bMix10)", "class_method_signature": "JsonHandler.showNisoImageAssessmentMetadata(NisoImageMetadata niso, boolean bMix10)", "testcase": false, "constructor": false}, {"identifier": "showChangeHistory", "parameters": "(NisoImageMetadata niso, boolean bMix10)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showChangeHistory(NisoImageMetadata niso, boolean bMix10)", "full_signature": "protected JsonObjectBuilder showChangeHistory(NisoImageMetadata niso, boolean bMix10)", "class_method_signature": "JsonHandler.showChangeHistory(NisoImageMetadata niso, boolean bMix10)", "testcase": false, "constructor": false}, {"identifier": "meteringModeToString", "parameters": "(int n)", "modifiers": "private", "return": "String", "signature": "String meteringModeToString(int n)", "full_signature": "private String meteringModeToString(int n)", "class_method_signature": "JsonHandler.meteringModeToString(int n)", "testcase": false, "constructor": false}, {"identifier": "photometricInterpretationToString", "parameters": "(int n)", "modifiers": "private", "return": "String", "signature": "String photometricInterpretationToString(int n)", "full_signature": "private String photometricInterpretationToString(int n)", "class_method_signature": "JsonHandler.photometricInterpretationToString(int n)", "testcase": false, "constructor": false}, {"identifier": "compressionSchemeToString", "parameters": "(int n)", "modifiers": "private", "return": "String", "signature": "String compressionSchemeToString(int n)", "full_signature": "private String compressionSchemeToString(int n)", "class_method_signature": "JsonHandler.compressionSchemeToString(int n)", "testcase": false, "constructor": false}, {"identifier": "showAESAudioMetadata", "parameters": "(AESAudioMetadata aes)", "modifiers": "protected", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder showAESAudioMetadata(AESAudioMetadata aes)", "full_signature": "protected JsonObjectBuilder showAESAudioMetadata(AESAudioMetadata aes)", "class_method_signature": "JsonHandler.showAESAudioMetadata(AESAudioMetadata aes)", "testcase": false, "constructor": false}, {"identifier": "writeAESTimeRange", "parameters": "(AESAudioMetadata.TimeDesc start, AESAudioMetadata.TimeDesc duration)", "modifiers": "private", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder writeAESTimeRange(AESAudioMetadata.TimeDesc start, AESAudioMetadata.TimeDesc duration)", "full_signature": "private JsonObjectBuilder writeAESTimeRange(AESAudioMetadata.TimeDesc start, AESAudioMetadata.TimeDesc duration)", "class_method_signature": "JsonHandler.writeAESTimeRange(AESAudioMetadata.TimeDesc start, AESAudioMetadata.TimeDesc duration)", "testcase": false, "constructor": false}, {"identifier": "showArray", "parameters": "(int[] iarray)", "modifiers": "protected", "return": "JsonArrayBuilder", "signature": "JsonArrayBuilder showArray(int[] iarray)", "full_signature": "protected JsonArrayBuilder showArray(int[] iarray)", "class_method_signature": "JsonHandler.showArray(int[] iarray)", "testcase": false, "constructor": false}, {"identifier": "showArray", "parameters": "(double[] darray)", "modifiers": "protected", "return": "JsonArrayBuilder", "signature": "JsonArrayBuilder showArray(double[] darray)", "full_signature": "protected JsonArrayBuilder showArray(double[] darray)", "class_method_signature": "JsonHandler.showArray(double[] darray)", "testcase": false, "constructor": false}, {"identifier": "showArray", "parameters": "(String[] sarray)", "modifiers": "protected", "return": "JsonArrayBuilder", "signature": "JsonArrayBuilder showArray(String[] sarray)", "full_signature": "protected JsonArrayBuilder showArray(String[] sarray)", "class_method_signature": "JsonHandler.showArray(String[] sarray)", "testcase": false, "constructor": false}, {"identifier": "showArray", "parameters": "(Rational[] rarray)", "modifiers": "protected", "return": "JsonArrayBuilder", "signature": "JsonArrayBuilder showArray(Rational[] rarray)", "full_signature": "protected JsonArrayBuilder showArray(Rational[] rarray)", "class_method_signature": "JsonHandler.showArray(Rational[] rarray)", "testcase": false, "constructor": false}, {"identifier": "showRational", "parameters": "(Rational r)", "modifiers": "protected", "return": "JsonArrayBuilder", "signature": "JsonArrayBuilder showRational(Rational r)", "full_signature": "protected JsonArrayBuilder showRational(Rational r)", "class_method_signature": "JsonHandler.showRational(Rational r)", "testcase": false, "constructor": false}], "file": "jhove-core/src/main/java/edu/harvard/hul/ois/jhove/handler/JsonHandler.java"}, "focal_method": {"identifier": "showAESAudioMetadata", "parameters": "(AESAudioMetadata aes)", "modifiers": "protected", "return": "JsonObjectBuilder", "body": "protected JsonObjectBuilder showAESAudioMetadata(AESAudioMetadata aes) {\n\t\tJsonObjectBuilder aesBuilder = Json.createObjectBuilder();\n\n\t\t_sampleRate = aes.getSampleRate();\n\n\t\tString s = aes.getAnalogDigitalFlag();\n\t\tif (s != null) {\n\t\t\taesBuilder.add(\"aes:analogDigitalFlag\", s);\n\t\t}\n\t\ts = aes.getSchemaVersion();\n\t\tif (s != null) {\n\t\t\taesBuilder.add(\"aes:schemaVersion\", s);\n\t\t}\n\t\ts = aes.getFormat();\n\t\tif (s != null) {\n\t\t\taesBuilder.add(\"aes:format\", s);\n\t\t}\n\t\ts = aes.getSpecificationVersion();\n\t\tif (s != null) {\n\t\t\taesBuilder.add(\"aes:specificationVersion\", s);\n\t\t}\n\t\ts = aes.getAppSpecificData();\n\t\tif (s != null) {\n\t\t\taesBuilder.add(\"aes:appSpecificData\", s);\n\t\t}\n\t\ts = aes.getAudioDataEncoding();\n\t\tif (s != null) {\n\t\t\taesBuilder.add(\"aes:audioDataEncoding\", s);\n\t\t}\n\t\tint in = aes.getByteOrder();\n\t\tif (in != AESAudioMetadata.NULL) {\n\t\t\taesBuilder.add(\"aes:byteOrder\", (in == AESAudioMetadata.BIG_ENDIAN ? \"BIG_ENDIAN\" : \"LITTLE_ENDIAN\"));\n\t\t}\n\t\tlong lin = aes.getFirstSampleOffset();\n\t\tif (lin != AESAudioMetadata.NULL) {\n\t\t\taesBuilder.add(\"aes:firstSampleOffset\", lin);\n\t\t}\n\t\tString[] use = aes.getUse();\n\t\tif (use != null) {\n\t\t\taesBuilder.add(\"aes:use\",\n\t\t\t\t\tJson.createObjectBuilder().add(\"aes:useType\", use[0]).add(\"aes:otherType\", use[1]));\n\t\t}\n\t\ts = aes.getPrimaryIdentifier();\n\t\tif (s != null) {\n\t\t\tString t = aes.getPrimaryIdentifierType();\n\t\t\taesBuilder.add(\"aes:primaryIdentifier\", s);\n\t\t\tif (t != null) {\n\t\t\t\taesBuilder.add(\"aes:primaryIdentifierType\", t);\n\t\t\t}\n\t\t}\n\t\tList<AESAudioMetadata.Face> facelist = aes.getFaceList();\n\t\tif (facelist != null && !facelist.isEmpty()) {\n\t\t\t// Add the face information, which is mostly filler.\n\t\t\tAESAudioMetadata.Face f = facelist.get(0);\n\t\t\tJsonObjectBuilder faceBuilder = Json.createObjectBuilder();\n\n\t\t\tAESAudioMetadata.TimeDesc startTime = f.getStartTime();\n\t\t\tif (startTime != null) {\n\t\t\t\tfaceBuilder.add(\"aes:timeline\", writeAESTimeRange(startTime, f.getDuration()));\n\t\t\t}\n\t\t\tint nchan = aes.getNumChannels();\n\t\t\tif (nchan != AESAudioMetadata.NULL) {\n\t\t\t\tfaceBuilder.add(\"aes:numChannels\", nchan);\n\t\t\t}\n\t\t\tString[] locs = aes.getMapLocations();\n\t\t\tJsonArrayBuilder streamsBuilder = Json.createArrayBuilder();\n\t\t\tfor (int ch = 0; ch < nchan; ch++) {\n\t\t\t\t// write a stream description for each channel\n\t\t\t\tstreamsBuilder\n\t\t\t\t\t\t.add(Json.createObjectBuilder().add(\"aes:channelNum\", ch).add(\"aes:mapLocation\", locs[ch]));\n\t\t\t}\n\t\t\tfaceBuilder.add(\"aes:streams\", streamsBuilder);\n\t\t\taesBuilder.add(\"aes:face\", faceBuilder);\n\t\t}\n\n\t\t// In the general case, a FormatList can contain multiple\n\t\t// FormatRegions. This doesn't happen with any of the current\n\t\t// modules; if it's needed in the future, simply set up an\n\t\t// iteration loop on formatList.\n\t\tList<AESAudioMetadata.FormatRegion> flist = aes.getFormatList();\n\t\tif (flist != null && !flist.isEmpty()) {\n\t\t\tAESAudioMetadata.FormatRegion rgn = flist.get(0);\n\t\t\tint bitDepth = rgn.getBitDepth();\n\t\t\tdouble sampleRate = rgn.getSampleRate();\n\t\t\tint wordSize = rgn.getWordSize();\n\t\t\tString[] bitRed = rgn.getBitrateReduction();\n\t\t\t// Build a FormatRegion subtree if at least one piece of data\n\t\t\t// that goes into it is present.\n\t\t\tJsonArrayBuilder formatListBuilder = Json.createArrayBuilder();\n\t\t\tJsonObjectBuilder formatRegionBuilder = Json.createObjectBuilder();\n\t\t\tif (bitDepth != AESAudioMetadata.NULL || sampleRate != AESAudioMetadata.NILL\n\t\t\t\t\t|| wordSize != AESAudioMetadata.NULL) {\n\t\t\t\tif (bitDepth != AESAudioMetadata.NULL) {\n\t\t\t\t\tformatRegionBuilder.add(\"aes:bitDepth\", bitDepth);\n\t\t\t\t}\n\t\t\t\tif (sampleRate != AESAudioMetadata.NILL) {\n\t\t\t\t\tformatRegionBuilder.add(\"aes:sampleRate\", sampleRate);\n\t\t\t\t}\n\t\t\t\tif (wordSize != AESAudioMetadata.NULL) {\n\t\t\t\t\tformatRegionBuilder.add(\"aes:wordSize\", wordSize);\n\t\t\t\t}\n\t\t\t\tif (bitRed != null) {\n\t\t\t\t\tformatRegionBuilder.add(\"aes:bitrateReduction\", Json.createObjectBuilder()\n\t\t\t\t\t\t\t.add(\"aes:codecName\", bitRed[0]).add(\"aes:codecNameVersion\", bitRed[1])\n\t\t\t\t\t\t\t.add(\"aes:codecCreatorApplication\", bitRed[2])\n\t\t\t\t\t\t\t.add(\"aes:codecCreatorApplicationVersion\", bitRed[3]).add(\"aes:codecQuality\", bitRed[4])\n\t\t\t\t\t\t\t.add(\"aes:dataRate\", bitRed[5]).add(\"aes:dataRateMode\", bitRed[6]));\n\t\t\t\t}\n\n\t\t\t\tformatListBuilder.add(formatRegionBuilder);\n\t\t\t\taesBuilder.add(\"aes:formatList\", formatListBuilder);\n\t\t\t}\n\t\t}\n\t\treturn aesBuilder;\n\t}", "signature": "JsonObjectBuilder showAESAudioMetadata(AESAudioMetadata aes)", "full_signature": "protected JsonObjectBuilder showAESAudioMetadata(AESAudioMetadata aes)", "class_method_signature": "JsonHandler.showAESAudioMetadata(AESAudioMetadata aes)", "testcase": false, "constructor": false, "invocations": ["createObjectBuilder", "getSampleRate", "getAnalogDigitalFlag", "add", "getSchemaVersion", "add", "getFormat", "add", "getSpecificationVersion", "add", "getAppSpecificData", "add", "getAudioDataEncoding", "add", "getByteOrder", "add", "getFirstSampleOffset", "add", "getUse", "add", "add", "add", "createObjectBuilder", "getPrimaryIdentifier", "getPrimaryIdentifierType", "add", "add", "getFaceList", "isEmpty", "get", "createObjectBuilder", "getStartTime", "add", "writeAESTimeRange", "getDuration", "getNumChannels", "add", "getMapLocations", "createArrayBuilder", "add", "add", "add", "createObjectBuilder", "add", "add", "getFormatList", "isEmpty", "get", "getBitDepth", "getSampleRate", "getWordSize", "getBitrateReduction", "createArrayBuilder", "createObjectBuilder", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "createObjectBuilder", "add", "add"]}, "repository": {"repo_id": 17627031, "url": "https://github.com/openpreserve/jhove", "stars": 91, "created": "3/11/2014 10:47:10 AM +00:00", "updates": "2020-01-24T19:19:11+00:00", "fork": "False", "license": "licensed"}}