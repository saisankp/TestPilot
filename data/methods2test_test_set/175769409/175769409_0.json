{"test_class": {"identifier": "ApplicationTest", "superclass": "", "interfaces": "", "fields": [], "file": "engine-bootstrap/src/test/java/com/datacloudsec/bootstrap/ApplicationTest.java"}, "test_case": {"identifier": "applicationTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void applicationTest() throws InterruptedException {\n        String[] args = new String[]{\"F:\\\\github\\\\dcsec-collector-engine\\\\engine-bootstrap\\\\src\\\\test\\\\resources\\\\application.properties\"};\n\n        Application.main(args);\n        Thread.sleep(1000000000);\n    }", "signature": "void applicationTest()", "full_signature": "@Test public void applicationTest()", "class_method_signature": "ApplicationTest.applicationTest()", "testcase": true, "constructor": false, "invocations": ["main", "sleep"]}, "focal_class": {"identifier": "Application", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Application.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Application.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "Application.main(String[] args)", "testcase": false, "constructor": false}], "file": "engine-bootstrap/src/main/java/com/datacloudsec/bootstrap/Application.java"}, "focal_method": {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "body": "public static void main(String[] args) {\n        Integer serverPort = PORT;\n        try {\n            if (args.length > 0) {\n                serverPort = Integer.valueOf(args[0]);\n            }\n        } catch (NumberFormatException e) {\n            LOGGER.error(\"Error in input parameters\");\n        }\n        // \u521d\u59cb\u5316\u91c7\u96c6\u5668\u914d\u7f6e\u6587\u4ef6\n        EngineContext.applicationInitialization();\n        // \u91c7\u96c6\u5668\u5185\u7f6e\u89e3\u6790\u89c4\u5219\u7b49\u521d\u59cb\u5316\n        EngineContext.componentsInitialization();\n        // \u751f\u6210source\u3001channel\u3001sink\uff0c\n        // \u6301\u6709\u6240\u6709\u7ec4\u4ef6\u751f\u547d\u5468\u671f\n        AgentComponent.init();\n        // \u542f\u52a8Server\n        HttpServerManager.start(serverPort);\n\n    }", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "Application.main(String[] args)", "testcase": false, "constructor": false, "invocations": ["valueOf", "error", "applicationInitialization", "componentsInitialization", "init", "start"]}, "repository": {"repo_id": 175769409, "url": "https://github.com/gumizy/flume-collector", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 977, "license": "licensed"}}