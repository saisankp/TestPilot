{"test_class": {"identifier": "NormalizeUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "name-parser/src/test/java/org/gbif/nameparser/utils/NormalizeUtilsTest.java"}, "test_case": {"identifier": "testTrimToNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testTrimToNull() {\n    assertEquals(\"aCcepTed\", NormalizeUtils.trimToNull(\"aCcepTed \"));\n    assertEquals(\"nuller\", NormalizeUtils.trimToNull(\"nuller \"));\n    assertNull(NormalizeUtils.trimToNull(\"NuLL \"));\n    assertNull(NormalizeUtils.trimToNull(\" \"));\n    assertNull(NormalizeUtils.trimToNull(\" NULL \"));\n    assertNull(NormalizeUtils.trimToNull(\"       \"));\n    assertNull(NormalizeUtils.trimToNull(\"\\\\N \"));\n  }", "signature": "void testTrimToNull()", "full_signature": "@Test public void testTrimToNull()", "class_method_signature": "NormalizeUtilsTest.testTrimToNull()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "trimToNull", "assertEquals", "trimToNull", "assertNull", "trimToNull", "assertNull", "trimToNull", "assertNull", "trimToNull", "assertNull", "trimToNull", "assertNull", "trimToNull"]}, "focal_class": {"identifier": "NormalizeUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern NORM_TERM = Pattern.compile(\"[-_\\\\.\\\\s]+\");", "modifier": "private static final", "type": "Pattern", "declarator": "NORM_TERM = Pattern.compile(\"[-_\\\\.\\\\s]+\")", "var_name": "NORM_TERM"}, {"original_string": "private static final Pattern NORM_CITATION_PUNCT = Pattern.compile(\"\\\\. *\");", "modifier": "private static final", "type": "Pattern", "declarator": "NORM_CITATION_PUNCT = Pattern.compile(\"\\\\. *\")", "var_name": "NORM_CITATION_PUNCT"}, {"original_string": "private static final Pattern NORM_CITATION_WHITE = Pattern.compile(\"[_\\\\s]+\");", "modifier": "private static final", "type": "Pattern", "declarator": "NORM_CITATION_WHITE = Pattern.compile(\"[_\\\\s]+\")", "var_name": "NORM_CITATION_WHITE"}, {"original_string": "private static final Pattern XML_ENTITIES_DEC = Pattern.compile(\"&#([0-9]{2,});\");", "modifier": "private static final", "type": "Pattern", "declarator": "XML_ENTITIES_DEC = Pattern.compile(\"&#([0-9]{2,});\")", "var_name": "XML_ENTITIES_DEC"}, {"original_string": "private static final Pattern XML_ENTITIES_HEX = Pattern.compile(\"&#x([0-9abcdefABCDEF]{2,});\");", "modifier": "private static final", "type": "Pattern", "declarator": "XML_ENTITIES_HEX = Pattern.compile(\"&#x([0-9abcdefABCDEF]{2,});\")", "var_name": "XML_ENTITIES_HEX"}, {"original_string": "private static final Pattern UNICODE_HEX = Pattern.compile(\"\\\\\\\\u([0-9abcdefABCDEF]{4});\");", "modifier": "private static final", "type": "Pattern", "declarator": "UNICODE_HEX = Pattern.compile(\"\\\\\\\\u([0-9abcdefABCDEF]{4});\")", "var_name": "UNICODE_HEX"}], "methods": [{"identifier": "normalizeCitation", "parameters": "(String citation)", "modifiers": "public static", "return": "String", "signature": "String normalizeCitation(String citation)", "full_signature": "public static String normalizeCitation(String citation)", "class_method_signature": "NormalizeUtils.normalizeCitation(String citation)", "testcase": false, "constructor": false}, {"identifier": "normalizeTerm", "parameters": "(String term)", "modifiers": "public static", "return": "String", "signature": "String normalizeTerm(String term)", "full_signature": "public static String normalizeTerm(String term)", "class_method_signature": "NormalizeUtils.normalizeTerm(String term)", "testcase": false, "constructor": false}, {"identifier": "replaceUnicodeEntities", "parameters": "(String x)", "modifiers": "public static", "return": "String", "signature": "String replaceUnicodeEntities(String x)", "full_signature": "public static String replaceUnicodeEntities(String x)", "class_method_signature": "NormalizeUtils.replaceUnicodeEntities(String x)", "testcase": false, "constructor": false}, {"identifier": "trimToNull", "parameters": "(String x)", "modifiers": "public static", "return": "String", "signature": "String trimToNull(String x)", "full_signature": "public static String trimToNull(String x)", "class_method_signature": "NormalizeUtils.trimToNull(String x)", "testcase": false, "constructor": false}], "file": "name-parser/src/main/java/org/gbif/nameparser/utils/NormalizeUtils.java"}, "focal_method": {"identifier": "trimToNull", "parameters": "(String x)", "modifiers": "public static", "return": "String", "body": "public static String trimToNull(String x) {\n    x = StringUtils.trimToNull(x);\n    if (x != null && (x.equals(\"\\\\N\") || x.equalsIgnoreCase(\"NULL\"))) {\n      x = null;\n    }\n    return x;\n  }", "signature": "String trimToNull(String x)", "full_signature": "public static String trimToNull(String x)", "class_method_signature": "NormalizeUtils.trimToNull(String x)", "testcase": false, "constructor": false, "invocations": ["trimToNull", "equals", "equalsIgnoreCase"]}, "repository": {"repo_id": 16201889, "url": "https://github.com/gbif/name-parser", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 11, "size": 1978, "license": "licensed"}}