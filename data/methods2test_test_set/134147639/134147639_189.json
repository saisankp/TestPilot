{"test_class": {"identifier": "MetadataStatementsTrustAnchorsProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-metadata/src/test/java/com/webauthn4j/metadata/MetadataStatementsTrustAnchorsProviderTest.java"}, "test_case": {"identifier": "provide_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void provide_test() {\n        MetadataStatementsProvider metadataStatementsProvider = mock(MetadataStatementsProvider.class);\n        AAGUID aaguid = new AAGUID(\"49e25c43-a6d1-49f0-bcfa-23e23a7c0e52\");\n        when(metadataStatementsProvider.provide()).thenReturn(Collections.singletonMap(aaguid, Collections.singleton(TestDataUtil.createMetadataStatement())));\n        MetadataStatementsTrustAnchorsProvider metadataStatementsTrustAnchorsProvider = new MetadataStatementsTrustAnchorsProvider(metadataStatementsProvider);\n        Map<AAGUID, Set<TrustAnchor>> result = metadataStatementsTrustAnchorsProvider.provide();\n        assertThat(result.get(aaguid).stream().map(TrustAnchor::getTrustedCert)).contains(TestAttestationUtil.load3tierTestAuthenticatorAttestationCertificate());\n    }", "signature": "void provide_test()", "full_signature": "@Test void provide_test()", "class_method_signature": "MetadataStatementsTrustAnchorsProviderTest.provide_test()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "provide", "singletonMap", "singleton", "createMetadataStatement", "provide", "contains", "assertThat", "map", "stream", "get", "load3tierTestAuthenticatorAttestationCertificate"]}, "focal_class": {"identifier": "MetadataStatementsTrustAnchorsProvider", "superclass": "", "interfaces": "implements TrustAnchorsProvider", "fields": [{"original_string": "private final MetadataStatementsProvider metadataStatementsProvider;", "modifier": "private final", "type": "MetadataStatementsProvider", "declarator": "metadataStatementsProvider", "var_name": "metadataStatementsProvider"}], "methods": [{"identifier": "MetadataStatementsTrustAnchorsProvider", "parameters": "(MetadataStatementsProvider metadataStatementsProvider)", "modifiers": "public", "return": "", "signature": " MetadataStatementsTrustAnchorsProvider(MetadataStatementsProvider metadataStatementsProvider)", "full_signature": "public  MetadataStatementsTrustAnchorsProvider(MetadataStatementsProvider metadataStatementsProvider)", "class_method_signature": "MetadataStatementsTrustAnchorsProvider.MetadataStatementsTrustAnchorsProvider(MetadataStatementsProvider metadataStatementsProvider)", "testcase": false, "constructor": true}, {"identifier": "provide", "parameters": "()", "modifiers": "@Override public", "return": "Map<AAGUID, Set<TrustAnchor>>", "signature": "Map<AAGUID, Set<TrustAnchor>> provide()", "full_signature": "@Override public Map<AAGUID, Set<TrustAnchor>> provide()", "class_method_signature": "MetadataStatementsTrustAnchorsProvider.provide()", "testcase": false, "constructor": false}], "file": "webauthn4j-metadata/src/main/java/com/webauthn4j/metadata/MetadataStatementsTrustAnchorsProvider.java"}, "focal_method": {"identifier": "provide", "parameters": "()", "modifiers": "@Override public", "return": "Map<AAGUID, Set<TrustAnchor>>", "body": "@Override\n    public Map<AAGUID, Set<TrustAnchor>> provide() {\n        return metadataStatementsProvider.provide().entrySet().stream()\n                .collect(Collectors.toMap(\n                        Map.Entry::getKey,\n                        entry -> entry.getValue().stream().flatMap(metadataStatement ->\n                                metadataStatement.getAttestationRootCertificates().stream()\n                                        .map(certificate -> new TrustAnchor(certificate, null))\n                        ).collect(Collectors.toSet())\n                ));\n    }", "signature": "Map<AAGUID, Set<TrustAnchor>> provide()", "full_signature": "@Override public Map<AAGUID, Set<TrustAnchor>> provide()", "class_method_signature": "MetadataStatementsTrustAnchorsProvider.provide()", "testcase": false, "constructor": false, "invocations": ["collect", "stream", "entrySet", "provide", "toMap", "collect", "flatMap", "stream", "getValue", "map", "stream", "getAttestationRootCertificates", "toSet"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}