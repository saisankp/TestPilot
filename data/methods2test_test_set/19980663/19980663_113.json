{"test_class": {"identifier": "StatsActionTest", "superclass": "extends ActionTest", "interfaces": "", "fields": [], "file": "foxtrot-core/src/test/java/com/flipkart/foxtrot/core/querystore/actions/StatsActionTest.java"}, "test_case": {"identifier": "testStatsActionNullTable", "parameters": "()", "modifiers": "@Test(expected = MalformedQueryException.class) public", "return": "void", "body": "@Test(expected = MalformedQueryException.class)\n    public void testStatsActionNullTable() throws FoxtrotException {\n        StatsRequest request = new StatsRequest();\n        request.setTable(null);\n        request.setField(\"battery\");\n        request.setNesting(Lists.newArrayList(\"os\", \"version\"));\n        getQueryExecutor().execute(request);\n    }", "signature": "void testStatsActionNullTable()", "full_signature": "@Test(expected = MalformedQueryException.class) public void testStatsActionNullTable()", "class_method_signature": "StatsActionTest.testStatsActionNullTable()", "testcase": true, "constructor": false, "invocations": ["setTable", "setField", "setNesting", "newArrayList", "execute", "getQueryExecutor"]}, "focal_class": {"identifier": "StatsAction", "superclass": "extends Action<StatsRequest>", "interfaces": "", "fields": [{"original_string": "private final ElasticsearchTuningConfig elasticsearchTuningConfig;", "modifier": "private final", "type": "ElasticsearchTuningConfig", "declarator": "elasticsearchTuningConfig", "var_name": "elasticsearchTuningConfig"}], "methods": [{"identifier": "StatsAction", "parameters": "(StatsRequest parameter, AnalyticsLoader analyticsLoader)", "modifiers": "public", "return": "", "signature": " StatsAction(StatsRequest parameter, AnalyticsLoader analyticsLoader)", "full_signature": "public  StatsAction(StatsRequest parameter, AnalyticsLoader analyticsLoader)", "class_method_signature": "StatsAction.StatsAction(StatsRequest parameter, AnalyticsLoader analyticsLoader)", "testcase": false, "constructor": true}, {"identifier": "buildStatsValue", "parameters": "(String field, Aggregations aggregations)", "modifiers": "private static", "return": "StatsValue", "signature": "StatsValue buildStatsValue(String field, Aggregations aggregations)", "full_signature": "private static StatsValue buildStatsValue(String field, Aggregations aggregations)", "class_method_signature": "StatsAction.buildStatsValue(String field, Aggregations aggregations)", "testcase": false, "constructor": false}, {"identifier": "preprocess", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void preprocess()", "full_signature": "@Override public void preprocess()", "class_method_signature": "StatsAction.preprocess()", "testcase": false, "constructor": false}, {"identifier": "getMetricKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMetricKey()", "full_signature": "@Override public String getMetricKey()", "class_method_signature": "StatsAction.getMetricKey()", "testcase": false, "constructor": false}, {"identifier": "getRequestCacheKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRequestCacheKey()", "full_signature": "@Override public String getRequestCacheKey()", "class_method_signature": "StatsAction.getRequestCacheKey()", "testcase": false, "constructor": false}, {"identifier": "validateImpl", "parameters": "(StatsRequest parameter)", "modifiers": "@Override public", "return": "void", "signature": "void validateImpl(StatsRequest parameter)", "full_signature": "@Override public void validateImpl(StatsRequest parameter)", "class_method_signature": "StatsAction.validateImpl(StatsRequest parameter)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(StatsRequest parameter)", "modifiers": "@Override public", "return": "ActionResponse", "signature": "ActionResponse execute(StatsRequest parameter)", "full_signature": "@Override public ActionResponse execute(StatsRequest parameter)", "class_method_signature": "StatsAction.execute(StatsRequest parameter)", "testcase": false, "constructor": false}, {"identifier": "getRequestBuilder", "parameters": "(StatsRequest parameter)", "modifiers": "@Override public", "return": "SearchRequestBuilder", "signature": "SearchRequestBuilder getRequestBuilder(StatsRequest parameter)", "full_signature": "@Override public SearchRequestBuilder getRequestBuilder(StatsRequest parameter)", "class_method_signature": "StatsAction.getRequestBuilder(StatsRequest parameter)", "testcase": false, "constructor": false}, {"identifier": "getResponse", "parameters": "(org.elasticsearch.action.ActionResponse response, StatsRequest parameter)", "modifiers": "@Override public", "return": "ActionResponse", "signature": "ActionResponse getResponse(org.elasticsearch.action.ActionResponse response, StatsRequest parameter)", "full_signature": "@Override public ActionResponse getResponse(org.elasticsearch.action.ActionResponse response, StatsRequest parameter)", "class_method_signature": "StatsAction.getResponse(org.elasticsearch.action.ActionResponse response, StatsRequest parameter)", "testcase": false, "constructor": false}, {"identifier": "buildResponse", "parameters": "(StatsRequest request, Aggregations aggregations)", "modifiers": "private", "return": "StatsResponse", "signature": "StatsResponse buildResponse(StatsRequest request, Aggregations aggregations)", "full_signature": "private StatsResponse buildResponse(StatsRequest request, Aggregations aggregations)", "class_method_signature": "StatsAction.buildResponse(StatsRequest request, Aggregations aggregations)", "testcase": false, "constructor": false}, {"identifier": "buildNestedStats", "parameters": "(List<String> nesting, Aggregations aggregations)", "modifiers": "private", "return": "List<BucketResponse<StatsValue>>", "signature": "List<BucketResponse<StatsValue>> buildNestedStats(List<String> nesting, Aggregations aggregations)", "full_signature": "private List<BucketResponse<StatsValue>> buildNestedStats(List<String> nesting, Aggregations aggregations)", "class_method_signature": "StatsAction.buildNestedStats(List<String> nesting, Aggregations aggregations)", "testcase": false, "constructor": false}], "file": "foxtrot-core/src/main/java/com/flipkart/foxtrot/core/querystore/actions/StatsAction.java"}, "focal_method": {"identifier": "execute", "parameters": "(StatsRequest parameter)", "modifiers": "@Override public", "return": "ActionResponse", "body": "@Override\n    public ActionResponse execute(StatsRequest parameter) {\n        SearchRequestBuilder searchRequestBuilder = getRequestBuilder(parameter);\n        try {\n            SearchResponse response = searchRequestBuilder.execute()\n                    .actionGet(getGetQueryTimeout());\n            return getResponse(response, parameter);\n        }\n        catch (ElasticsearchException e) {\n            throw FoxtrotExceptions.createQueryExecutionException(parameter, e);\n        }\n    }", "signature": "ActionResponse execute(StatsRequest parameter)", "full_signature": "@Override public ActionResponse execute(StatsRequest parameter)", "class_method_signature": "StatsAction.execute(StatsRequest parameter)", "testcase": false, "constructor": false, "invocations": ["getRequestBuilder", "actionGet", "execute", "getGetQueryTimeout", "getResponse", "createQueryExecutionException"]}, "repository": {"repo_id": 19980663, "url": "https://github.com/Flipkart/foxtrot", "stars": 22, "created": "5/20/2014 12:52:55 PM +00:00", "updates": "2020-01-07T07:05:03+00:00", "fork": "False", "license": "licensed"}}