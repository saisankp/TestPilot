{"test_class": {"identifier": "P2MetadataMojoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final File MAIN_ARTIFACT = new File(\"bin.jar\");", "modifier": "private static final", "type": "File", "declarator": "MAIN_ARTIFACT = new File(\"bin.jar\")", "var_name": "MAIN_ARTIFACT"}, {"original_string": "private static final File SOURCE_ARTIFACT = new File(\"source.jar\");", "modifier": "private static final", "type": "File", "declarator": "SOURCE_ARTIFACT = new File(\"source.jar\")", "var_name": "SOURCE_ARTIFACT"}, {"original_string": "private static final File OTHER_ARTIFACT = new File(\"some/other.xml\");", "modifier": "private static final", "type": "File", "declarator": "OTHER_ARTIFACT = new File(\"some/other.xml\")", "var_name": "OTHER_ARTIFACT"}, {"original_string": "File testFile;", "modifier": "", "type": "File", "declarator": "testFile", "var_name": "testFile"}], "file": "tycho-p2/tycho-p2-plugin/src/test/java/org/eclipse/tycho/plugins/p2/P2MetadataMojoTest.java"}, "test_case": {"identifier": "testWriteArtifactLocations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWriteArtifactLocations() throws Exception {\n        Map<String, File> artifactLocations = new HashMap<>();\n        artifactLocations.put(null, MAIN_ARTIFACT);\n        artifactLocations.put(\"source\", SOURCE_ARTIFACT);\n        artifactLocations.put(\"other-classifier\", OTHER_ARTIFACT);\n\n        P2MetadataMojo.writeArtifactLocations(testFile, artifactLocations);\n\n        Properties result = loadProperties(testFile);\n        assertEquals(3, result.size());\n        assertEquals(MAIN_ARTIFACT.getCanonicalFile(), getFileEntry(\"artifact.main\", result));\n        assertEquals(SOURCE_ARTIFACT.getCanonicalFile(), getFileEntry(\"artifact.attached.source\", result));\n        assertEquals(OTHER_ARTIFACT.getCanonicalFile(), getFileEntry(\"artifact.attached.other-classifier\", result));\n    }", "signature": "void testWriteArtifactLocations()", "full_signature": "@Test public void testWriteArtifactLocations()", "class_method_signature": "P2MetadataMojoTest.testWriteArtifactLocations()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "writeArtifactLocations", "loadProperties", "assertEquals", "size", "assertEquals", "getCanonicalFile", "getFileEntry", "assertEquals", "getCanonicalFile", "getFileEntry", "assertEquals", "getCanonicalFile", "getFileEntry"]}, "focal_class": {"identifier": "P2MetadataMojo", "superclass": "extends AbstractMojo", "interfaces": "", "fields": [{"original_string": "private static final Object LOCK = new Object();", "modifier": "private static final", "type": "Object", "declarator": "LOCK = new Object()", "var_name": "LOCK"}, {"original_string": "@Parameter(property = \"project\")\n    protected MavenProject project;", "modifier": "@Parameter(property = \"project\")\n    protected", "type": "MavenProject", "declarator": "project", "var_name": "project"}, {"original_string": "@Parameter(property = \"mojoExecution\", readonly = true)\n    protected MojoExecution execution;", "modifier": "@Parameter(property = \"mojoExecution\", readonly = true)\n    protected", "type": "MojoExecution", "declarator": "execution", "var_name": "execution"}, {"original_string": "@Parameter(defaultValue = \"true\")\n    protected boolean attachP2Metadata;", "modifier": "@Parameter(defaultValue = \"true\")\n    protected", "type": "boolean", "declarator": "attachP2Metadata", "var_name": "attachP2Metadata"}, {"original_string": "@Component\n    protected MavenProjectHelper projectHelper;", "modifier": "@Component\n    protected", "type": "MavenProjectHelper", "declarator": "projectHelper", "var_name": "projectHelper"}, {"original_string": "@Component\n    private EquinoxServiceFactory equinox;", "modifier": "@Component\n    private", "type": "EquinoxServiceFactory", "declarator": "equinox", "var_name": "equinox"}, {"original_string": "@Parameter\n    private List<String> supportedProjectTypes = Arrays.asList(\"eclipse-plugin\", \"eclipse-test-plugin\",\n            \"eclipse-feature\", \"p2-installable-unit\");", "modifier": "@Parameter\n    private", "type": "List<String>", "declarator": "supportedProjectTypes = Arrays.asList(\"eclipse-plugin\", \"eclipse-test-plugin\",\n            \"eclipse-feature\", \"p2-installable-unit\")", "var_name": "supportedProjectTypes"}, {"original_string": "@Parameter\n    private List<Repository> baselineRepositories;", "modifier": "@Parameter\n    private", "type": "List<Repository>", "declarator": "baselineRepositories", "var_name": "baselineRepositories"}, {"original_string": "@Parameter(property = \"tycho.baseline\", defaultValue = \"warn\")\n    private BaselineMode baselineMode;", "modifier": "@Parameter(property = \"tycho.baseline\", defaultValue = \"warn\")\n    private", "type": "BaselineMode", "declarator": "baselineMode", "var_name": "baselineMode"}, {"original_string": "@Parameter(property = \"tycho.baseline.replace\", defaultValue = \"all\")\n    private BaselineReplace baselineReplace;", "modifier": "@Parameter(property = \"tycho.baseline.replace\", defaultValue = \"all\")\n    private", "type": "BaselineReplace", "declarator": "baselineReplace", "var_name": "baselineReplace"}, {"original_string": "@Parameter(property = \"tycho.generateDownloadStatsProperty\", defaultValue = \"false\")\n    private boolean generateDownloadStatsProperty;", "modifier": "@Parameter(property = \"tycho.generateDownloadStatsProperty\", defaultValue = \"false\")\n    private", "type": "boolean", "declarator": "generateDownloadStatsProperty", "var_name": "generateDownloadStatsProperty"}, {"original_string": "@Component\n    private BaselineValidator baselineValidator;", "modifier": "@Component\n    private", "type": "BaselineValidator", "declarator": "baselineValidator", "var_name": "baselineValidator"}], "methods": [{"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "P2MetadataMojo.execute()", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "(Class<T> type)", "modifiers": "private", "return": "T", "signature": "T getService(Class<T> type)", "full_signature": "private T getService(Class<T> type)", "class_method_signature": "P2MetadataMojo.getService(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "attachP2Metadata", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void attachP2Metadata()", "full_signature": "protected void attachP2Metadata()", "class_method_signature": "P2MetadataMojo.attachP2Metadata()", "testcase": false, "constructor": false}, {"identifier": "hasAttachedArtifact", "parameters": "(MavenProject project, String classifier)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasAttachedArtifact(MavenProject project, String classifier)", "full_signature": "private static boolean hasAttachedArtifact(MavenProject project, String classifier)", "class_method_signature": "P2MetadataMojo.hasAttachedArtifact(MavenProject project, String classifier)", "testcase": false, "constructor": false}, {"identifier": "getExtension", "parameters": "(File file)", "modifiers": "private static", "return": "String", "signature": "String getExtension(File file)", "full_signature": "private static String getExtension(File file)", "class_method_signature": "P2MetadataMojo.getExtension(File file)", "testcase": false, "constructor": false}, {"identifier": "getAllProjectArtifacts", "parameters": "(MavenProject project)", "modifiers": "private static", "return": "Map<String, File>", "signature": "Map<String, File> getAllProjectArtifacts(MavenProject project)", "full_signature": "private static Map<String, File> getAllProjectArtifacts(MavenProject project)", "class_method_signature": "P2MetadataMojo.getAllProjectArtifacts(MavenProject project)", "testcase": false, "constructor": false}, {"identifier": "writeArtifactLocations", "parameters": "(File outputFile, Map<String, File> artifactLocations)", "modifiers": "static", "return": "void", "signature": "void writeArtifactLocations(File outputFile, Map<String, File> artifactLocations)", "full_signature": "static void writeArtifactLocations(File outputFile, Map<String, File> artifactLocations)", "class_method_signature": "P2MetadataMojo.writeArtifactLocations(File outputFile, Map<String, File> artifactLocations)", "testcase": false, "constructor": false}, {"identifier": "writeProperties", "parameters": "(Properties properties, File outputFile)", "modifiers": "private static", "return": "void", "signature": "void writeProperties(Properties properties, File outputFile)", "full_signature": "private static void writeProperties(Properties properties, File outputFile)", "class_method_signature": "P2MetadataMojo.writeProperties(Properties properties, File outputFile)", "testcase": false, "constructor": false}], "file": "tycho-p2/tycho-p2-plugin/src/main/java/org/eclipse/tycho/plugins/p2/P2MetadataMojo.java"}, "focal_method": {"identifier": "writeArtifactLocations", "parameters": "(File outputFile, Map<String, File> artifactLocations)", "modifiers": "static", "return": "void", "body": "static void writeArtifactLocations(File outputFile, Map<String, File> artifactLocations)\n            throws MojoExecutionException {\n        Properties outputProperties = new Properties();\n\n        for (Entry<String, File> entry : artifactLocations.entrySet()) {\n            if (entry.getKey() == null) {\n                outputProperties.put(KEY_ARTIFACT_MAIN, entry.getValue().getAbsolutePath());\n            } else {\n                outputProperties.put(KEY_ARTIFACT_ATTACHED + entry.getKey(), entry.getValue().getAbsolutePath());\n            }\n        }\n\n        writeProperties(outputProperties, outputFile);\n    }", "signature": "void writeArtifactLocations(File outputFile, Map<String, File> artifactLocations)", "full_signature": "static void writeArtifactLocations(File outputFile, Map<String, File> artifactLocations)", "class_method_signature": "P2MetadataMojo.writeArtifactLocations(File outputFile, Map<String, File> artifactLocations)", "testcase": false, "constructor": false, "invocations": ["entrySet", "getKey", "put", "getAbsolutePath", "getValue", "put", "getKey", "getAbsolutePath", "getValue", "writeProperties"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}