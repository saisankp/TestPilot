{"test_class": {"identifier": "TestEventBus", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml/src/test/java/org/jvoicexml/event/TestEventBus.java"}, "test_case": {"identifier": "testPublish", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPublish() {\n        final MockEventSubscriber subscriber = new MockEventSubscriber();\n        final EventBus bus = new EventBus();\n        final String type = BadFetchError.EVENT_TYPE;\n        bus.subscribe(type, subscriber);\n        final JVoiceXMLEvent event = new BadFetchError(\"test message\");\n        bus.publish(event);\n        Assert.assertEquals(event, subscriber.getEvent());\n    }", "signature": "void testPublish()", "full_signature": "@Test public void testPublish()", "class_method_signature": "TestEventBus.testPublish()", "testcase": true, "constructor": false, "invocations": ["subscribe", "publish", "assertEquals", "getEvent"]}, "focal_class": {"identifier": "EventBus", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Collection<EventSubscription> subscriptions;", "modifier": "private final", "type": "Collection<EventSubscription>", "declarator": "subscriptions", "var_name": "subscriptions"}], "methods": [{"identifier": "EventBus", "parameters": "()", "modifiers": "public", "return": "", "signature": " EventBus()", "full_signature": "public  EventBus()", "class_method_signature": "EventBus.EventBus()", "testcase": false, "constructor": true}, {"identifier": "subscribe", "parameters": "(final String type, final EventSubscriber subscriber)", "modifiers": "public", "return": "void", "signature": "void subscribe(final String type, final EventSubscriber subscriber)", "full_signature": "public void subscribe(final String type, final EventSubscriber subscriber)", "class_method_signature": "EventBus.subscribe(final String type, final EventSubscriber subscriber)", "testcase": false, "constructor": false}, {"identifier": "unsubscribe", "parameters": "(final String type,\n            final EventSubscriber subscriber)", "modifiers": "public", "return": "boolean", "signature": "boolean unsubscribe(final String type,\n            final EventSubscriber subscriber)", "full_signature": "public boolean unsubscribe(final String type,\n            final EventSubscriber subscriber)", "class_method_signature": "EventBus.unsubscribe(final String type,\n            final EventSubscriber subscriber)", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(final JVoiceXMLEvent event)", "modifiers": "public", "return": "void", "signature": "void publish(final JVoiceXMLEvent event)", "full_signature": "public void publish(final JVoiceXMLEvent event)", "class_method_signature": "EventBus.publish(final JVoiceXMLEvent event)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/event/EventBus.java"}, "focal_method": {"identifier": "publish", "parameters": "(final JVoiceXMLEvent event)", "modifiers": "public", "return": "void", "body": "public void publish(final JVoiceXMLEvent event) {\n        final String type = event.getEventType();\n        synchronized (subscriptions) {\n            for (EventSubscription subscription : subscriptions) {\n                if (subscription.matches(type)) {\n                    subscription.publish(event);\n                }\n            }\n        }\n    }", "signature": "void publish(final JVoiceXMLEvent event)", "full_signature": "public void publish(final JVoiceXMLEvent event)", "class_method_signature": "EventBus.publish(final JVoiceXMLEvent event)", "testcase": false, "constructor": false, "invocations": ["getEventType", "matches", "publish"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}