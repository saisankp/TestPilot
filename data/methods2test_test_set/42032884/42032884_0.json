{"test_class": {"identifier": "UriUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TITLE\n            = \" %!\\\"$&'()*,\\\\-.\\\\/0-9:;=?@A-Z\\\\\\\\^_`a-z~\\\\x80-\\\\xFF+\";", "modifier": "private static final", "type": "String", "declarator": "TITLE\n            = \" %!\\\"$&'()*,\\\\-.\\\\/0-9:;=?@A-Z\\\\\\\\^_`a-z~\\\\x80-\\\\xFF+\"", "var_name": "TITLE"}, {"original_string": "private static final String LEGAL_FRAGMENT_CHARS\n            = \"!$&'()*+,;=-._~:@/?abc0123456789%D8%f6\";", "modifier": "private static final", "type": "String", "declarator": "LEGAL_FRAGMENT_CHARS\n            = \"!$&'()*+,;=-._~:@/?abc0123456789%D8%f6\"", "var_name": "LEGAL_FRAGMENT_CHARS"}], "file": "data-client/src/test/java/org/wikipedia/util/UriUtilTest.java"}, "test_case": {"identifier": "testRemoveFragment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveFragment() {\n        assertThat(UriUtil.removeFragment(TITLE + \"#\" + LEGAL_FRAGMENT_CHARS), is(TITLE));\n    }", "signature": "void testRemoveFragment()", "full_signature": "@Test public void testRemoveFragment()", "class_method_signature": "UriUtilTest.testRemoveFragment()", "testcase": true, "constructor": false, "invocations": ["assertThat", "removeFragment", "is"]}, "focal_class": {"identifier": "UriUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "decodeURL", "parameters": "(@NonNull String url)", "modifiers": "@NonNull public static", "return": "String", "signature": "String decodeURL(@NonNull String url)", "full_signature": "@NonNull public static String decodeURL(@NonNull String url)", "class_method_signature": "UriUtil.decodeURL(@NonNull String url)", "testcase": false, "constructor": false}, {"identifier": "encodeURL", "parameters": "(@NonNull String url)", "modifiers": "@NonNull public static", "return": "String", "signature": "String encodeURL(@NonNull String url)", "full_signature": "@NonNull public static String encodeURL(@NonNull String url)", "class_method_signature": "UriUtil.encodeURL(@NonNull String url)", "testcase": false, "constructor": false}, {"identifier": "resolveProtocolRelativeUrl", "parameters": "(@NonNull WikiSite wiki,\n                                                             @NonNull String url)", "modifiers": "@NonNull public static", "return": "String", "signature": "String resolveProtocolRelativeUrl(@NonNull WikiSite wiki,\n                                                             @NonNull String url)", "full_signature": "@NonNull public static String resolveProtocolRelativeUrl(@NonNull WikiSite wiki,\n                                                             @NonNull String url)", "class_method_signature": "UriUtil.resolveProtocolRelativeUrl(@NonNull WikiSite wiki,\n                                                             @NonNull String url)", "testcase": false, "constructor": false}, {"identifier": "resolveProtocolRelativeUrl", "parameters": "(@NonNull String url)", "modifiers": "@NonNull public static", "return": "String", "signature": "String resolveProtocolRelativeUrl(@NonNull String url)", "full_signature": "@NonNull public static String resolveProtocolRelativeUrl(@NonNull String url)", "class_method_signature": "UriUtil.resolveProtocolRelativeUrl(@NonNull String url)", "testcase": false, "constructor": false}, {"identifier": "isValidPageLink", "parameters": "(@NonNull Uri uri)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidPageLink(@NonNull Uri uri)", "full_signature": "public static boolean isValidPageLink(@NonNull Uri uri)", "class_method_signature": "UriUtil.isValidPageLink(@NonNull Uri uri)", "testcase": false, "constructor": false}, {"identifier": "isValidOfflinePageLink", "parameters": "(@NonNull Uri uri)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidOfflinePageLink(@NonNull Uri uri)", "full_signature": "public static boolean isValidOfflinePageLink(@NonNull Uri uri)", "class_method_signature": "UriUtil.isValidOfflinePageLink(@NonNull Uri uri)", "testcase": false, "constructor": false}, {"identifier": "getUrlWithProvenance", "parameters": "(Context context, PageTitle title,\n                                              @StringRes int provId)", "modifiers": "public static", "return": "String", "signature": "String getUrlWithProvenance(Context context, PageTitle title,\n                                              @StringRes int provId)", "full_signature": "public static String getUrlWithProvenance(Context context, PageTitle title,\n                                              @StringRes int provId)", "class_method_signature": "UriUtil.getUrlWithProvenance(Context context, PageTitle title,\n                                              @StringRes int provId)", "testcase": false, "constructor": false}, {"identifier": "getTitleFromUrl", "parameters": "(@NonNull String url)", "modifiers": "@NonNull public static", "return": "String", "signature": "String getTitleFromUrl(@NonNull String url)", "full_signature": "@NonNull public static String getTitleFromUrl(@NonNull String url)", "class_method_signature": "UriUtil.getTitleFromUrl(@NonNull String url)", "testcase": false, "constructor": false}, {"identifier": "getLanguageVariantFromUri", "parameters": "(@NonNull Uri uri)", "modifiers": "@NonNull public static", "return": "String", "signature": "String getLanguageVariantFromUri(@NonNull Uri uri)", "full_signature": "@NonNull public static String getLanguageVariantFromUri(@NonNull Uri uri)", "class_method_signature": "UriUtil.getLanguageVariantFromUri(@NonNull Uri uri)", "testcase": false, "constructor": false}, {"identifier": "removeInternalLinkPrefix", "parameters": "(@NonNull String link)", "modifiers": "@NonNull public static", "return": "String", "signature": "String removeInternalLinkPrefix(@NonNull String link)", "full_signature": "@NonNull public static String removeInternalLinkPrefix(@NonNull String link)", "class_method_signature": "UriUtil.removeInternalLinkPrefix(@NonNull String link)", "testcase": false, "constructor": false}, {"identifier": "removeLinkPrefix", "parameters": "(@NonNull String link)", "modifiers": "@NonNull private static", "return": "String", "signature": "String removeLinkPrefix(@NonNull String link)", "full_signature": "@NonNull private static String removeLinkPrefix(@NonNull String link)", "class_method_signature": "UriUtil.removeLinkPrefix(@NonNull String link)", "testcase": false, "constructor": false}, {"identifier": "removeFragment", "parameters": "(@NonNull String link)", "modifiers": "@VisibleForTesting @NonNull static", "return": "String", "signature": "String removeFragment(@NonNull String link)", "full_signature": "@VisibleForTesting @NonNull static String removeFragment(@NonNull String link)", "class_method_signature": "UriUtil.removeFragment(@NonNull String link)", "testcase": false, "constructor": false}, {"identifier": "getFragment", "parameters": "(String link)", "modifiers": "public static", "return": "String", "signature": "String getFragment(String link)", "full_signature": "public static String getFragment(String link)", "class_method_signature": "UriUtil.getFragment(String link)", "testcase": false, "constructor": false}, {"identifier": "UriUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " UriUtil()", "full_signature": "private  UriUtil()", "class_method_signature": "UriUtil.UriUtil()", "testcase": false, "constructor": true}], "file": "data-client/src/main/java/org/wikipedia/util/UriUtil.java"}, "focal_method": {"identifier": "removeFragment", "parameters": "(@NonNull String link)", "modifiers": "@VisibleForTesting @NonNull static", "return": "String", "body": "@VisibleForTesting\n    @NonNull\n    static String removeFragment(@NonNull String link) {\n        return link.replaceFirst(\"#.*$\", \"\");\n    }", "signature": "String removeFragment(@NonNull String link)", "full_signature": "@VisibleForTesting @NonNull static String removeFragment(@NonNull String link)", "class_method_signature": "UriUtil.removeFragment(@NonNull String link)", "testcase": false, "constructor": false, "invocations": ["replaceFirst"]}, "repository": {"repo_id": 42032884, "url": "https://github.com/commons-app/apps-android-commons", "stars": 546, "created": "9/7/2015 5:23:27 AM +00:00", "updates": "2020-01-27T16:36:58+00:00", "fork": "False", "license": "licensed"}}