{"test_class": {"identifier": "ApkFacetConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public TemporaryFolder myTemporaryFolder = new TemporaryFolder();", "modifier": "@Rule\n  public", "type": "TemporaryFolder", "declarator": "myTemporaryFolder = new TemporaryFolder()", "var_name": "myTemporaryFolder"}, {"original_string": "private ApkFacetConfiguration myConfiguration;", "modifier": "private", "type": "ApkFacetConfiguration", "declarator": "myConfiguration", "var_name": "myConfiguration"}], "file": "android/testSrc/com/android/tools/idea/apk/ApkFacetConfigurationTest.java"}, "test_case": {"identifier": "getLibrariesWithoutDebugSymbolsWithLibrariesHavingDebugSymbols", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getLibrariesWithoutDebugSymbolsWithLibrariesHavingDebugSymbols() {\n    NativeLibrary library1 = new NativeLibrary(\"x.c\");\n    library1.hasDebugSymbols = true;\n\n    NativeLibrary library2 = new NativeLibrary(\"x.h\");\n    library2.hasDebugSymbols = true;\n\n    NativeLibrary library3 = new NativeLibrary(\"y.c\");\n    library3.hasDebugSymbols = true;\n\n    myConfiguration.NATIVE_LIBRARIES.add(library1);\n    myConfiguration.NATIVE_LIBRARIES.add(library2);\n    myConfiguration.NATIVE_LIBRARIES.add(library3);\n\n    List<NativeLibrary> libraries = myConfiguration.getLibrariesWithoutDebugSymbols();\n    assertThat(libraries).isEmpty();\n  }", "signature": "void getLibrariesWithoutDebugSymbolsWithLibrariesHavingDebugSymbols()", "full_signature": "@Test public void getLibrariesWithoutDebugSymbolsWithLibrariesHavingDebugSymbols()", "class_method_signature": "ApkFacetConfigurationTest.getLibrariesWithoutDebugSymbolsWithLibrariesHavingDebugSymbols()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "getLibrariesWithoutDebugSymbols", "isEmpty", "assertThat"]}, "focal_class": {"identifier": "ApkFacetConfiguration", "superclass": "", "interfaces": "implements FacetConfiguration", "fields": [{"original_string": "private static final FacetEditorTab[] EDITOR_TABS = new FacetEditorTab[0];", "modifier": "private static final", "type": "FacetEditorTab[]", "declarator": "EDITOR_TABS = new FacetEditorTab[0]", "var_name": "EDITOR_TABS"}, {"original_string": "@NonNls public String APK_PATH;", "modifier": "@NonNls public", "type": "String", "declarator": "APK_PATH", "var_name": "APK_PATH"}, {"original_string": "@NonNls public String APP_PACKAGE;", "modifier": "@NonNls public", "type": "String", "declarator": "APP_PACKAGE", "var_name": "APP_PACKAGE"}, {"original_string": "@NotNull public List<SetupIssue> SETUP_ISSUES = new ArrayList<>();", "modifier": "@NotNull public", "type": "List<SetupIssue>", "declarator": "SETUP_ISSUES = new ArrayList<>()", "var_name": "SETUP_ISSUES"}, {"original_string": "@NotNull public List<NativeLibrary> NATIVE_LIBRARIES = new ArrayList<>();", "modifier": "@NotNull public", "type": "List<NativeLibrary>", "declarator": "NATIVE_LIBRARIES = new ArrayList<>()", "var_name": "NATIVE_LIBRARIES"}, {"original_string": "@NotNull public Set<String> JAVA_SOURCE_FOLDER_PATHS = new HashSet<>();", "modifier": "@NotNull public", "type": "Set<String>", "declarator": "JAVA_SOURCE_FOLDER_PATHS = new HashSet<>()", "var_name": "JAVA_SOURCE_FOLDER_PATHS"}], "methods": [{"identifier": "createEditorTabs", "parameters": "(FacetEditorContext editorContext, FacetValidatorsManager validatorsManager)", "modifiers": "@Override public", "return": "FacetEditorTab[]", "signature": "FacetEditorTab[] createEditorTabs(FacetEditorContext editorContext, FacetValidatorsManager validatorsManager)", "full_signature": "@Override public FacetEditorTab[] createEditorTabs(FacetEditorContext editorContext, FacetValidatorsManager validatorsManager)", "class_method_signature": "ApkFacetConfiguration.createEditorTabs(FacetEditorContext editorContext, FacetValidatorsManager validatorsManager)", "testcase": false, "constructor": false}, {"identifier": "getDebugSymbolFolderPaths", "parameters": "(@NotNull List<Abi> abis)", "modifiers": "@NotNull public", "return": "Collection<String>", "signature": "Collection<String> getDebugSymbolFolderPaths(@NotNull List<Abi> abis)", "full_signature": "@NotNull public Collection<String> getDebugSymbolFolderPaths(@NotNull List<Abi> abis)", "class_method_signature": "ApkFacetConfiguration.getDebugSymbolFolderPaths(@NotNull List<Abi> abis)", "testcase": false, "constructor": false}, {"identifier": "getExplicitModuleSymbolMap", "parameters": "(@NotNull final Abi abi)", "modifiers": "public @NotNull", "return": "Map<File, File>", "signature": "Map<File, File> getExplicitModuleSymbolMap(@NotNull final Abi abi)", "full_signature": "public @NotNull Map<File, File> getExplicitModuleSymbolMap(@NotNull final Abi abi)", "class_method_signature": "ApkFacetConfiguration.getExplicitModuleSymbolMap(@NotNull final Abi abi)", "testcase": false, "constructor": false}, {"identifier": "getSymbolFolderPathMappings", "parameters": "()", "modifiers": "@NotNull public", "return": "Map<String, String>", "signature": "Map<String, String> getSymbolFolderPathMappings()", "full_signature": "@NotNull public Map<String, String> getSymbolFolderPathMappings()", "class_method_signature": "ApkFacetConfiguration.getSymbolFolderPathMappings()", "testcase": false, "constructor": false}, {"identifier": "readExternal", "parameters": "(@NotNull Element element)", "modifiers": "@Override public", "return": "void", "signature": "void readExternal(@NotNull Element element)", "full_signature": "@Override public void readExternal(@NotNull Element element)", "class_method_signature": "ApkFacetConfiguration.readExternal(@NotNull Element element)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(@NotNull Element element)", "modifiers": "@Override public", "return": "void", "signature": "void writeExternal(@NotNull Element element)", "full_signature": "@Override public void writeExternal(@NotNull Element element)", "class_method_signature": "ApkFacetConfiguration.writeExternal(@NotNull Element element)", "testcase": false, "constructor": false}, {"identifier": "getLibrariesWithoutDebugSymbols", "parameters": "()", "modifiers": "@NotNull public", "return": "List<NativeLibrary>", "signature": "List<NativeLibrary> getLibrariesWithoutDebugSymbols()", "full_signature": "@NotNull public List<NativeLibrary> getLibrariesWithoutDebugSymbols()", "class_method_signature": "ApkFacetConfiguration.getLibrariesWithoutDebugSymbols()", "testcase": false, "constructor": false}, {"identifier": "removeIssues", "parameters": "(@NotNull String category)", "modifiers": "public", "return": "void", "signature": "void removeIssues(@NotNull String category)", "full_signature": "public void removeIssues(@NotNull String category)", "class_method_signature": "ApkFacetConfiguration.removeIssues(@NotNull String category)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/apk/ApkFacetConfiguration.java"}, "focal_method": {"identifier": "getLibrariesWithoutDebugSymbols", "parameters": "()", "modifiers": "@NotNull public", "return": "List<NativeLibrary>", "body": "@NotNull\n  public List<NativeLibrary> getLibrariesWithoutDebugSymbols() {\n    if (NATIVE_LIBRARIES.isEmpty()) {\n      return Collections.emptyList();\n    }\n    return NATIVE_LIBRARIES.stream().filter(library -> !library.hasDebugSymbols).collect(Collectors.toList());\n  }", "signature": "List<NativeLibrary> getLibrariesWithoutDebugSymbols()", "full_signature": "@NotNull public List<NativeLibrary> getLibrariesWithoutDebugSymbols()", "class_method_signature": "ApkFacetConfiguration.getLibrariesWithoutDebugSymbols()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "emptyList", "collect", "filter", "stream", "toList"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}