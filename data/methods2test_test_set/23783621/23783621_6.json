{"test_class": {"identifier": "DateCacheTest", "superclass": "", "interfaces": "", "fields": [], "file": "chronicle/src/test/java/net/openhft/chronicle/DateCacheTest.java"}, "test_case": {"identifier": "testFormatMillis", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFormatMillis() {\n        String format = \"yyyyMMddHHmmss\";\n        SimpleDateFormat sdf = new SimpleDateFormat(format);\n        sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n\n        DateCache dc = new DateCache(format, 1000);\n\n        int now = (int) (System.currentTimeMillis() / 1000);\n        for (int i = 0; i < 10000; i++) {\n            int now2 = now + i;\n            String str2 = sdf.format(new Date(now2 * 1000L));\n            String str = dc.formatFor(now2);\n            assertEquals(\"i: \" + i, str2, str);\n        }\n    }", "signature": "void testFormatMillis()", "full_signature": "@Test public void testFormatMillis()", "class_method_signature": "DateCacheTest.testFormatMillis()", "testcase": true, "constructor": false, "invocations": ["setTimeZone", "getTimeZone", "currentTimeMillis", "format", "formatFor", "assertEquals"]}, "focal_class": {"identifier": "DateCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int SIZE = 32;", "modifier": "private static final", "type": "int", "declarator": "SIZE = 32", "var_name": "SIZE"}, {"original_string": "private static final TimeZone GMT = TimeZone.getTimeZone(\"GMT\");", "modifier": "private static final", "type": "TimeZone", "declarator": "GMT = TimeZone.getTimeZone(\"GMT\")", "var_name": "GMT"}, {"original_string": "private final SimpleDateFormat format;", "modifier": "private final", "type": "SimpleDateFormat", "declarator": "format", "var_name": "format"}, {"original_string": "private final DateValue[] values = new DateValue[SIZE];", "modifier": "private final", "type": "DateValue[]", "declarator": "values = new DateValue[SIZE]", "var_name": "values"}, {"original_string": "private final int cycleLength;", "modifier": "private final", "type": "int", "declarator": "cycleLength", "var_name": "cycleLength"}], "methods": [{"identifier": "DateCache", "parameters": "(final String formatStr, int cycleLength)", "modifiers": "public", "return": "", "signature": " DateCache(final String formatStr, int cycleLength)", "full_signature": "public  DateCache(final String formatStr, int cycleLength)", "class_method_signature": "DateCache.DateCache(final String formatStr, int cycleLength)", "testcase": false, "constructor": true}, {"identifier": "formatFor", "parameters": "(int cycle)", "modifiers": "public", "return": "String", "signature": "String formatFor(int cycle)", "full_signature": "public String formatFor(int cycle)", "class_method_signature": "DateCache.formatFor(int cycle)", "testcase": false, "constructor": false}, {"identifier": "parseCount", "parameters": "(String name)", "modifiers": "public", "return": "long", "signature": "long parseCount(String name)", "full_signature": "public long parseCount(String name)", "class_method_signature": "DateCache.parseCount(String name)", "testcase": false, "constructor": false}], "file": "chronicle/src/main/java/net/openhft/chronicle/DateCache.java"}, "focal_method": {"identifier": "formatFor", "parameters": "(int cycle)", "modifiers": "public", "return": "String", "body": "public String formatFor(int cycle) {\n        long millis = (long) cycle * cycleLength;\n        int hash = Maths.hash(millis) & (SIZE - 1);\n        DateValue dv = values[hash];\n        if (dv == null || dv.millis != millis) {\n            synchronized (format) {\n                String text = format.format(new Date(millis));\n                values[hash] = new DateValue(millis, text);\n                return text;\n            }\n        }\n        return dv.text;\n    }", "signature": "String formatFor(int cycle)", "full_signature": "public String formatFor(int cycle)", "class_method_signature": "DateCache.formatFor(int cycle)", "testcase": false, "constructor": false, "invocations": ["hash", "format"]}, "repository": {"repo_id": 23783621, "url": "https://github.com/peter-lawrey/Java-Chronicle-OLD", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 33, "size": 1275, "license": "licensed"}}