{"test_class": {"identifier": "LmRuntimeBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ServerRuntime cayenneRuntime;", "modifier": "private", "type": "ServerRuntime", "declarator": "cayenneRuntime", "var_name": "cayenneRuntime"}], "file": "link-move/src/test/java/com/nhl/link/move/runtime/LmRuntimeBuilderTest.java"}, "test_case": {"identifier": "testBuild_NoTargetRuntime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuild_NoTargetRuntime() {\n        LmRuntimeBuilder builder = new LmRuntimeBuilder()\n                .extractorResolver(mock(ResourceResolver.class));\n        assertThrows(IllegalStateException.class, builder::build);\n    }", "signature": "void testBuild_NoTargetRuntime()", "full_signature": "@Test public void testBuild_NoTargetRuntime()", "class_method_signature": "LmRuntimeBuilderTest.testBuild_NoTargetRuntime()", "testcase": true, "constructor": false, "invocations": ["extractorResolver", "mock", "assertThrows"]}, "focal_class": {"identifier": "LmRuntimeBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String START_TOKEN_VAR = \"startToken\";", "modifier": "public static final", "type": "String", "declarator": "START_TOKEN_VAR = \"startToken\"", "var_name": "START_TOKEN_VAR"}, {"original_string": "public static final String END_TOKEN_VAR = \"endToken\";", "modifier": "public static final", "type": "String", "declarator": "END_TOKEN_VAR = \"endToken\"", "var_name": "END_TOKEN_VAR"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(LmRuntimeBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(LmRuntimeBuilder.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, Connector> connectors;", "modifier": "private final", "type": "Map<String, Connector>", "declarator": "connectors", "var_name": "connectors"}, {"original_string": "private final Map<String, IConnectorFactory> connectorFactories;", "modifier": "private final", "type": "Map<String, IConnectorFactory>", "declarator": "connectorFactories", "var_name": "connectorFactories"}, {"original_string": "private final Map<String, Class<? extends IConnectorFactory<? extends Connector>>> connectorFactoryTypes;", "modifier": "private final", "type": "Map<String, Class<? extends IConnectorFactory<? extends Connector>>>", "declarator": "connectorFactoryTypes", "var_name": "connectorFactoryTypes"}, {"original_string": "private final Map<String, IExtractorFactory> extractorFactories;", "modifier": "private final", "type": "Map<String, IExtractorFactory>", "declarator": "extractorFactories", "var_name": "extractorFactories"}, {"original_string": "private final Map<String, Class<? extends IExtractorFactory<?>>> extractorFactoryTypes;", "modifier": "private final", "type": "Map<String, Class<? extends IExtractorFactory<?>>>", "declarator": "extractorFactoryTypes", "var_name": "extractorFactoryTypes"}, {"original_string": "private final Map<String, ValueConverter> valueConverters;", "modifier": "private final", "type": "Map<String, ValueConverter>", "declarator": "valueConverters", "var_name": "valueConverters"}, {"original_string": "private Supplier<ResourceResolver> extractorResolverFactory;", "modifier": "private", "type": "Supplier<ResourceResolver>", "declarator": "extractorResolverFactory", "var_name": "extractorResolverFactory"}, {"original_string": "private ITokenManager tokenManager;", "modifier": "private", "type": "ITokenManager", "declarator": "tokenManager", "var_name": "tokenManager"}, {"original_string": "private ServerRuntime targetRuntime;", "modifier": "private", "type": "ServerRuntime", "declarator": "targetRuntime", "var_name": "targetRuntime"}, {"original_string": "private final Collection<LinkEtlAdapter> adapters;", "modifier": "private final", "type": "Collection<LinkEtlAdapter>", "declarator": "adapters", "var_name": "adapters"}], "methods": [{"identifier": "LmRuntimeBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " LmRuntimeBuilder()", "full_signature": "public  LmRuntimeBuilder()", "class_method_signature": "LmRuntimeBuilder.LmRuntimeBuilder()", "testcase": false, "constructor": true}, {"identifier": "createDefaultValueConverters", "parameters": "()", "modifiers": "protected", "return": "Map<String, ValueConverter>", "signature": "Map<String, ValueConverter> createDefaultValueConverters()", "full_signature": "protected Map<String, ValueConverter> createDefaultValueConverters()", "class_method_signature": "LmRuntimeBuilder.createDefaultValueConverters()", "testcase": false, "constructor": false}, {"identifier": "adapter", "parameters": "(LinkEtlAdapter adapter)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder adapter(LinkEtlAdapter adapter)", "full_signature": "public LmRuntimeBuilder adapter(LinkEtlAdapter adapter)", "class_method_signature": "LmRuntimeBuilder.adapter(LinkEtlAdapter adapter)", "testcase": false, "constructor": false}, {"identifier": "withTargetRuntime", "parameters": "(ServerRuntime targetRuntime)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder withTargetRuntime(ServerRuntime targetRuntime)", "full_signature": "public LmRuntimeBuilder withTargetRuntime(ServerRuntime targetRuntime)", "class_method_signature": "LmRuntimeBuilder.withTargetRuntime(ServerRuntime targetRuntime)", "testcase": false, "constructor": false}, {"identifier": "withTokenManager", "parameters": "(ITokenManager tokenManager)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder withTokenManager(ITokenManager tokenManager)", "full_signature": "public LmRuntimeBuilder withTokenManager(ITokenManager tokenManager)", "class_method_signature": "LmRuntimeBuilder.withTokenManager(ITokenManager tokenManager)", "testcase": false, "constructor": false}, {"identifier": "withConnector", "parameters": "(String id, Connector connector)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder withConnector(String id, Connector connector)", "full_signature": "public LmRuntimeBuilder withConnector(String id, Connector connector)", "class_method_signature": "LmRuntimeBuilder.withConnector(String id, Connector connector)", "testcase": false, "constructor": false}, {"identifier": "withConnectorFactory", "parameters": "(Class<C> connectorType,\n                                                                       IConnectorFactory<C> factory)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder withConnectorFactory(Class<C> connectorType,\n                                                                       IConnectorFactory<C> factory)", "full_signature": "public LmRuntimeBuilder withConnectorFactory(Class<C> connectorType,\n                                                                       IConnectorFactory<C> factory)", "class_method_signature": "LmRuntimeBuilder.withConnectorFactory(Class<C> connectorType,\n                                                                       IConnectorFactory<C> factory)", "testcase": false, "constructor": false}, {"identifier": "withConnectorFactory", "parameters": "(Class<C> connectorType,\n                                                                       Class<? extends IConnectorFactory<C>> factoryType)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder withConnectorFactory(Class<C> connectorType,\n                                                                       Class<? extends IConnectorFactory<C>> factoryType)", "full_signature": "public LmRuntimeBuilder withConnectorFactory(Class<C> connectorType,\n                                                                       Class<? extends IConnectorFactory<C>> factoryType)", "class_method_signature": "LmRuntimeBuilder.withConnectorFactory(Class<C> connectorType,\n                                                                       Class<? extends IConnectorFactory<C>> factoryType)", "testcase": false, "constructor": false}, {"identifier": "withConnectorFromTarget", "parameters": "()", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder withConnectorFromTarget()", "full_signature": "public LmRuntimeBuilder withConnectorFromTarget()", "class_method_signature": "LmRuntimeBuilder.withConnectorFromTarget()", "testcase": false, "constructor": false}, {"identifier": "withExtractorFactory", "parameters": "(String extractorType, Class<? extends IExtractorFactory<?>> factoryType)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder withExtractorFactory(String extractorType, Class<? extends IExtractorFactory<?>> factoryType)", "full_signature": "public LmRuntimeBuilder withExtractorFactory(String extractorType, Class<? extends IExtractorFactory<?>> factoryType)", "class_method_signature": "LmRuntimeBuilder.withExtractorFactory(String extractorType, Class<? extends IExtractorFactory<?>> factoryType)", "testcase": false, "constructor": false}, {"identifier": "withExtractorFactory", "parameters": "(String extractorType, IExtractorFactory<?> factory)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder withExtractorFactory(String extractorType, IExtractorFactory<?> factory)", "full_signature": "public LmRuntimeBuilder withExtractorFactory(String extractorType, IExtractorFactory<?> factory)", "class_method_signature": "LmRuntimeBuilder.withExtractorFactory(String extractorType, IExtractorFactory<?> factory)", "testcase": false, "constructor": false}, {"identifier": "valueConverter", "parameters": "(Class<?> javaType, ValueConverter converter)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder valueConverter(Class<?> javaType, ValueConverter converter)", "full_signature": "public LmRuntimeBuilder valueConverter(Class<?> javaType, ValueConverter converter)", "class_method_signature": "LmRuntimeBuilder.valueConverter(Class<?> javaType, ValueConverter converter)", "testcase": false, "constructor": false}, {"identifier": "extractorResolver", "parameters": "(ResourceResolver loader)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder extractorResolver(ResourceResolver loader)", "full_signature": "public LmRuntimeBuilder extractorResolver(ResourceResolver loader)", "class_method_signature": "LmRuntimeBuilder.extractorResolver(ResourceResolver loader)", "testcase": false, "constructor": false}, {"identifier": "extractorModelsRoot", "parameters": "(File rootDir)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder extractorModelsRoot(File rootDir)", "full_signature": "public LmRuntimeBuilder extractorModelsRoot(File rootDir)", "class_method_signature": "LmRuntimeBuilder.extractorModelsRoot(File rootDir)", "testcase": false, "constructor": false}, {"identifier": "extractorModelsRoot", "parameters": "(URL baseUrl)", "modifiers": "public", "return": "LmRuntimeBuilder", "signature": "LmRuntimeBuilder extractorModelsRoot(URL baseUrl)", "full_signature": "public LmRuntimeBuilder extractorModelsRoot(URL baseUrl)", "class_method_signature": "LmRuntimeBuilder.extractorModelsRoot(URL baseUrl)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "LmRuntime", "signature": "LmRuntime build()", "full_signature": "public LmRuntime build()", "class_method_signature": "LmRuntimeBuilder.build()", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/runtime/LmRuntimeBuilder.java"}, "focal_method": {"identifier": "extractorResolver", "parameters": "(ResourceResolver loader)", "modifiers": "public", "return": "LmRuntimeBuilder", "body": "public LmRuntimeBuilder extractorResolver(ResourceResolver loader) {\n        Objects.requireNonNull(loader);\n        this.extractorResolverFactory = () -> loader;\n        return this;\n    }", "signature": "LmRuntimeBuilder extractorResolver(ResourceResolver loader)", "full_signature": "public LmRuntimeBuilder extractorResolver(ResourceResolver loader)", "class_method_signature": "LmRuntimeBuilder.extractorResolver(ResourceResolver loader)", "testcase": false, "constructor": false, "invocations": ["requireNonNull"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}