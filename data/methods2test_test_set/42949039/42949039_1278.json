{"test_class": {"identifier": "CurrentUserRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private CurrentUserRestController currentUserRestController;", "modifier": "@InjectMocks\n    private", "type": "CurrentUserRestController", "declarator": "currentUserRestController", "var_name": "currentUserRestController"}, {"original_string": "@Mock\n    private CurrentUserService currentUserService;", "modifier": "@Mock\n    private", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/CurrentUserRestControllerTest.java"}, "test_case": {"identifier": "testGetCurrentUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCurrentUser() throws Exception\n    {\n        // Create a set of test namespace authorizations.\n        Set<NamespaceAuthorization> namespaceAuthorizations = new LinkedHashSet<>();\n        namespaceAuthorizations.add(new NamespaceAuthorization(NAMESPACE, SUPPORTED_NAMESPACE_PERMISSIONS));\n        namespaceAuthorizations.add(new NamespaceAuthorization(NAMESPACE_2, SUPPORTED_NAMESPACE_PERMISSIONS));\n\n        UserAuthorizations userAuthorizations = new UserAuthorizations();\n        userAuthorizations.setNamespaceAuthorizations(new ArrayList(namespaceAuthorizations));\n\n        when(currentUserService.getCurrentUser()).thenReturn(userAuthorizations);\n        // Get the current user information.\n        UserAuthorizations resultUserAuthorizations = currentUserRestController.getCurrentUser();\n\n        // Verify the external calls.\n        verify(currentUserService).getCurrentUser();\n        verifyNoMoreInteractions(currentUserService);\n        // Validate the returned object.\n        assertEquals(userAuthorizations, resultUserAuthorizations);\n    }", "signature": "void testGetCurrentUser()", "full_signature": "@Test public void testGetCurrentUser()", "class_method_signature": "CurrentUserRestControllerTest.testGetCurrentUser()", "testcase": true, "constructor": false, "invocations": ["add", "add", "setNamespaceAuthorizations", "thenReturn", "when", "getCurrentUser", "getCurrentUser", "getCurrentUser", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "CurrentUserRestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CURRENT_USER_URI_PREFIX = \"/currentUser\";", "modifier": "public static final", "type": "String", "declarator": "CURRENT_USER_URI_PREFIX = \"/currentUser\"", "var_name": "CURRENT_USER_URI_PREFIX"}, {"original_string": "@Autowired\n    private CurrentUserService currentUserService;", "modifier": "@Autowired\n    private", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}], "methods": [{"identifier": "getCurrentUser", "parameters": "()", "modifiers": "@RequestMapping(value = CURRENT_USER_URI_PREFIX, method = RequestMethod.GET) @PreAuthorize(\"isAuthenticated()\") @Secured(SecurityFunctions.FN_CURRENT_USER_GET) public", "return": "UserAuthorizations", "signature": "UserAuthorizations getCurrentUser()", "full_signature": "@RequestMapping(value = CURRENT_USER_URI_PREFIX, method = RequestMethod.GET) @PreAuthorize(\"isAuthenticated()\") @Secured(SecurityFunctions.FN_CURRENT_USER_GET) public UserAuthorizations getCurrentUser()", "class_method_signature": "CurrentUserRestController.getCurrentUser()", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/CurrentUserRestController.java"}, "focal_method": {"identifier": "getCurrentUser", "parameters": "()", "modifiers": "@RequestMapping(value = CURRENT_USER_URI_PREFIX, method = RequestMethod.GET) @PreAuthorize(\"isAuthenticated()\") @Secured(SecurityFunctions.FN_CURRENT_USER_GET) public", "return": "UserAuthorizations", "body": "@RequestMapping(value = CURRENT_USER_URI_PREFIX, method = RequestMethod.GET)\n    @PreAuthorize(\"isAuthenticated()\")\n    @Secured(SecurityFunctions.FN_CURRENT_USER_GET)\n    public UserAuthorizations getCurrentUser()\n    {\n        return currentUserService.getCurrentUser();\n    }", "signature": "UserAuthorizations getCurrentUser()", "full_signature": "@RequestMapping(value = CURRENT_USER_URI_PREFIX, method = RequestMethod.GET) @PreAuthorize(\"isAuthenticated()\") @Secured(SecurityFunctions.FN_CURRENT_USER_GET) public UserAuthorizations getCurrentUser()", "class_method_signature": "CurrentUserRestController.getCurrentUser()", "testcase": false, "constructor": false, "invocations": ["getCurrentUser"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}