{"test_class": {"identifier": "TableFieldMappingResourceTest", "superclass": "extends FoxtrotResourceTest", "interfaces": "", "fields": [{"original_string": "private final FoxtrotTableManager tableManager;", "modifier": "private final", "type": "FoxtrotTableManager", "declarator": "tableManager", "var_name": "tableManager"}, {"original_string": "@Rule\n    public ResourceTestRule resources;", "modifier": "@Rule\n    public", "type": "ResourceTestRule", "declarator": "resources", "var_name": "resources"}], "file": "foxtrot-server/src/test/java/com/flipkart/foxtrot/server/resources/TableFieldMappingResourceTest.java"}, "test_case": {"identifier": "getAllFields", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAllFields() throws Exception {\n        doNothing().when(getQueryStore())\n                .initializeTable(any(String.class));\n\n        getQueryStore().save(TestUtils.TEST_TABLE_NAME, TestUtils.getMappingDocuments(getMapper()));\n        await().pollDelay(500, TimeUnit.MILLISECONDS).until(() -> true);\n\n        Map<String, TableFieldMapping> response = resources.client()\n                .target(\"/v1/tables/fields\")\n                .request()\n                .get(new GenericType<Map<String, TableFieldMapping>>() {\n                });\n        //System.out.println(new ObjectMapper().writerWithDefaultPrettyPrinter().writeValueAsString(response));\n        Assert.assertFalse(response.isEmpty());\n        Assert.assertEquals(1, response.size());\n        Assert.assertTrue(response.containsKey(TestUtils.TEST_TABLE_NAME));\n    }", "signature": "void getAllFields()", "full_signature": "@Test public void getAllFields()", "class_method_signature": "TableFieldMappingResourceTest.getAllFields()", "testcase": true, "constructor": false, "invocations": ["initializeTable", "when", "doNothing", "getQueryStore", "any", "save", "getQueryStore", "getMappingDocuments", "getMapper", "until", "pollDelay", "await", "get", "request", "target", "client", "assertFalse", "isEmpty", "assertEquals", "size", "assertTrue", "containsKey"]}, "focal_class": {"identifier": "TableFieldMappingResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TableManager tableManager;", "modifier": "private final", "type": "TableManager", "declarator": "tableManager", "var_name": "tableManager"}, {"original_string": "private final TableMetadataManager tableMetadataManager;", "modifier": "private final", "type": "TableMetadataManager", "declarator": "tableMetadataManager", "var_name": "tableMetadataManager"}], "methods": [{"identifier": "TableFieldMappingResource", "parameters": "(TableManager tableManager, TableMetadataManager tableMetadataManager)", "modifiers": "@Inject public", "return": "", "signature": " TableFieldMappingResource(TableManager tableManager, TableMetadataManager tableMetadataManager)", "full_signature": "@Inject public  TableFieldMappingResource(TableManager tableManager, TableMetadataManager tableMetadataManager)", "class_method_signature": "TableFieldMappingResource.TableFieldMappingResource(TableManager tableManager, TableMetadataManager tableMetadataManager)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(@PathParam(\"name\") final String table,\n                        @QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                        @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "modifiers": "@GET @Timed @Path(\"/{name}/fields\") @ApiOperation(\"Get fields\") public", "return": "Response", "signature": "Response get(@PathParam(\"name\") final String table,\n                        @QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                        @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "full_signature": "@GET @Timed @Path(\"/{name}/fields\") @ApiOperation(\"Get fields\") public Response get(@PathParam(\"name\") final String table,\n                        @QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                        @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "class_method_signature": "TableFieldMappingResource.get(@PathParam(\"name\") final String table,\n                        @QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                        @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "testcase": false, "constructor": false}, {"identifier": "getAllFields", "parameters": "(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "modifiers": "@GET @Timed @Path(\"/fields\") @ApiOperation(\"Get all Fields\") public", "return": "Response", "signature": "Response getAllFields(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "full_signature": "@GET @Timed @Path(\"/fields\") @ApiOperation(\"Get all Fields\") public Response getAllFields(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "class_method_signature": "TableFieldMappingResource.getAllFields(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "testcase": false, "constructor": false}, {"identifier": "updateEstimation", "parameters": "(@PathParam(\"name\") final String table, @QueryParam(\"time\") @DefaultValue(\"0\") long epoch)", "modifiers": "@POST @Timed @Path(\"/{name}/fields/update\") @ApiOperation(\"Update Fields\") public", "return": "Response", "signature": "Response updateEstimation(@PathParam(\"name\") final String table, @QueryParam(\"time\") @DefaultValue(\"0\") long epoch)", "full_signature": "@POST @Timed @Path(\"/{name}/fields/update\") @ApiOperation(\"Update Fields\") public Response updateEstimation(@PathParam(\"name\") final String table, @QueryParam(\"time\") @DefaultValue(\"0\") long epoch)", "class_method_signature": "TableFieldMappingResource.updateEstimation(@PathParam(\"name\") final String table, @QueryParam(\"time\") @DefaultValue(\"0\") long epoch)", "testcase": false, "constructor": false}], "file": "foxtrot-server/src/main/java/com/flipkart/foxtrot/server/resources/TableFieldMappingResource.java"}, "focal_method": {"identifier": "getAllFields", "parameters": "(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "modifiers": "@GET @Timed @Path(\"/fields\") @ApiOperation(\"Get all Fields\") public", "return": "Response", "body": "@GET\n    @Timed\n    @Path(\"/fields\")\n    @ApiOperation(\"Get all Fields\")\n    public Response getAllFields(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality) {\n        return Response.ok()\n                .entity(tableManager.getAll()\n                                .stream()\n                                .collect(Collectors.toMap(Table::getName,\n                                                          table -> tableMetadataManager.getFieldMappings(table.getName(), withCardinality,\n                                                                                                         calculateCardinality\n                                                                                                        )\n                                                         )))\n                .build();\n    }", "signature": "Response getAllFields(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "full_signature": "@GET @Timed @Path(\"/fields\") @ApiOperation(\"Get all Fields\") public Response getAllFields(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "class_method_signature": "TableFieldMappingResource.getAllFields(@QueryParam(\"withCardinality\") @DefaultValue(\"false\") boolean withCardinality,\n                                 @QueryParam(\"calculateCardinality\") @DefaultValue(\"false\") boolean calculateCardinality)", "testcase": false, "constructor": false, "invocations": ["build", "entity", "ok", "collect", "stream", "getAll", "toMap", "getFieldMappings", "getName"]}, "repository": {"repo_id": 19980663, "url": "https://github.com/Flipkart/foxtrot", "stars": 22, "created": "5/20/2014 12:52:55 PM +00:00", "updates": "2020-01-07T07:05:03+00:00", "fork": "False", "license": "licensed"}}