{"test_class": {"identifier": "CategoryResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_NAME = \"AAAAAAAAAA\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_NAME = \"AAAAAAAAAA\"", "var_name": "DEFAULT_NAME"}, {"original_string": "private static final String UPDATED_NAME = \"BBBBBBBBBB\";", "modifier": "private static final", "type": "String", "declarator": "UPDATED_NAME = \"BBBBBBBBBB\"", "var_name": "UPDATED_NAME"}, {"original_string": "private static final String DEFAULT_DESCRIPTION = \"AAAAAAAAAA\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION = \"AAAAAAAAAA\"", "var_name": "DEFAULT_DESCRIPTION"}, {"original_string": "private static final String UPDATED_DESCRIPTION = \"BBBBBBBBBB\";", "modifier": "private static final", "type": "String", "declarator": "UPDATED_DESCRIPTION = \"BBBBBBBBBB\"", "var_name": "UPDATED_DESCRIPTION"}, {"original_string": "@Inject\n    CategoryRepository categoryRepository;", "modifier": "@Inject", "type": "CategoryRepository", "declarator": "categoryRepository", "var_name": "categoryRepository"}, {"original_string": "private Category category;", "modifier": "private", "type": "Category", "declarator": "category", "var_name": "category"}], "file": "product-service/src/test/java/io/maxilog/web/rest/CategoryResourceTest.java"}, "test_case": {"identifier": "createCategoryWithExistingId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createCategoryWithExistingId() {\n\n        int databaseSizeBeforeCreate = categoryRepository.findAll().size();\n        category.setId(10L);\n\n        given()\n                .contentType(JSON)\n                .body(category)\n                .when().post(\"/api/categories\")\n                .then()\n                .statusCode(400);\n\n        // Validate the Category in the database\n        List<Category> categoryList = categoryRepository.findAll();\n        Assertions.assertEquals(categoryList.size(), databaseSizeBeforeCreate);\n    }", "signature": "void createCategoryWithExistingId()", "full_signature": "@Test public void createCategoryWithExistingId()", "class_method_signature": "CategoryResourceTest.createCategoryWithExistingId()", "testcase": true, "constructor": false, "invocations": ["size", "findAll", "setId", "statusCode", "then", "post", "when", "body", "contentType", "given", "findAll", "assertEquals", "size"]}, "focal_class": {"identifier": "CategoryResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(CategoryResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(CategoryResource.class)", "var_name": "LOGGER"}, {"original_string": "private final CategoryService categoryService;", "modifier": "private final", "type": "CategoryService", "declarator": "categoryService", "var_name": "categoryService"}], "methods": [{"identifier": "CategoryResource", "parameters": "(CategoryService categoryService)", "modifiers": "@Inject public", "return": "", "signature": " CategoryResource(CategoryService categoryService)", "full_signature": "@Inject public  CategoryResource(CategoryService categoryService)", "class_method_signature": "CategoryResource.CategoryResource(CategoryService categoryService)", "testcase": false, "constructor": true}, {"identifier": "findAll", "parameters": "(@BeanParam PageableImpl pageable)", "modifiers": "@GET @Path(\"/categories\") public", "return": "Response", "signature": "Response findAll(@BeanParam PageableImpl pageable)", "full_signature": "@GET @Path(\"/categories\") public Response findAll(@BeanParam PageableImpl pageable)", "class_method_signature": "CategoryResource.findAll(@BeanParam PageableImpl pageable)", "testcase": false, "constructor": false}, {"identifier": "findAllByCategoryName", "parameters": "(@QueryParam(\"name\") String fullName)", "modifiers": "@GET @Path(\"/categories/search\") public", "return": "List<CategoryDTO>", "signature": "List<CategoryDTO> findAllByCategoryName(@QueryParam(\"name\") String fullName)", "full_signature": "@GET @Path(\"/categories/search\") public List<CategoryDTO> findAllByCategoryName(@QueryParam(\"name\") String fullName)", "class_method_signature": "CategoryResource.findAllByCategoryName(@QueryParam(\"name\") String fullName)", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(@PathParam(\"id\") long id)", "modifiers": "@GET @Path(\"/categories/{id}\") public", "return": "Response", "signature": "Response findById(@PathParam(\"id\") long id)", "full_signature": "@GET @Path(\"/categories/{id}\") public Response findById(@PathParam(\"id\") long id)", "class_method_signature": "CategoryResource.findById(@PathParam(\"id\") long id)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(CategoryDTO categoryDTO)", "modifiers": "@POST @Path(\"/categories\") public", "return": "Response", "signature": "Response create(CategoryDTO categoryDTO)", "full_signature": "@POST @Path(\"/categories\") public Response create(CategoryDTO categoryDTO)", "class_method_signature": "CategoryResource.create(CategoryDTO categoryDTO)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(CategoryDTO categoryDTO)", "modifiers": "@PUT @Path(\"/categories\") public", "return": "Response", "signature": "Response update(CategoryDTO categoryDTO)", "full_signature": "@PUT @Path(\"/categories\") public Response update(CategoryDTO categoryDTO)", "class_method_signature": "CategoryResource.update(CategoryDTO categoryDTO)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathParam(\"id\") long id)", "modifiers": "@DELETE @Path(\"/categories/{id}\") public", "return": "Response", "signature": "Response delete(@PathParam(\"id\") long id)", "full_signature": "@DELETE @Path(\"/categories/{id}\") public Response delete(@PathParam(\"id\") long id)", "class_method_signature": "CategoryResource.delete(@PathParam(\"id\") long id)", "testcase": false, "constructor": false}], "file": "product-service/src/main/java/io/maxilog/web/rest/CategoryResource.java"}, "focal_method": {"identifier": "findAll", "parameters": "(@BeanParam PageableImpl pageable)", "modifiers": "@GET @Path(\"/categories\") public", "return": "Response", "body": "@GET\n    @Path(\"/categories\")\n    public Response findAll(@BeanParam PageableImpl pageable) {\n        LOGGER.debug(\"REST request to get all Categories\");\n        return Response.ok().entity(categoryService.findAll(pageable)).build();\n    }", "signature": "Response findAll(@BeanParam PageableImpl pageable)", "full_signature": "@GET @Path(\"/categories\") public Response findAll(@BeanParam PageableImpl pageable)", "class_method_signature": "CategoryResource.findAll(@BeanParam PageableImpl pageable)", "testcase": false, "constructor": false, "invocations": ["debug", "build", "entity", "ok", "findAll"]}, "repository": {"repo_id": 221245123, "url": "https://github.com/MossabTN/quarkus-microservices-poc", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 889, "license": "licensed"}}