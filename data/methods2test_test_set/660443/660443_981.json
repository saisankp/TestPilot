{"test_class": {"identifier": "MmffTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static SmilesParser smipar = null;", "modifier": "private static", "type": "SmilesParser", "declarator": "smipar = null", "var_name": "smipar"}, {"original_string": "private static Mmff         mmff   = null;", "modifier": "private static", "type": "Mmff", "declarator": "mmff   = null", "var_name": "mmff"}], "file": "tool/forcefield/src/test/java/org/openscience/cdk/forcefield/mmff/MmffTest.java"}, "test_case": {"identifier": "clearProps", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void clearProps() throws InvalidSmilesException {\n        IAtomContainer mol = loadSmi(\"o1cccc1\");\n        int sizeBefore = mol.getProperties().size();\n        assertTrue(mmff.assignAtomTypes(mol));\n        assertTrue(mmff.partialCharges(mol));\n        mmff.clearProps(mol);\n        assertThat(mol.getProperties().size(), is(sizeBefore));\n    }", "signature": "void clearProps()", "full_signature": "@Test public void clearProps()", "class_method_signature": "MmffTest.clearProps()", "testcase": true, "constructor": false, "invocations": ["loadSmi", "size", "getProperties", "assertTrue", "assignAtomTypes", "assertTrue", "partialCharges", "clearProps", "assertThat", "size", "getProperties", "is"]}, "focal_class": {"identifier": "Mmff", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MMFF_ADJLIST_CACHE = \"mmff.adjlist.cache\";", "modifier": "private static final", "type": "String", "declarator": "MMFF_ADJLIST_CACHE = \"mmff.adjlist.cache\"", "var_name": "MMFF_ADJLIST_CACHE"}, {"original_string": "private static final String MMFF_EDGEMAP_CACHE = \"mmff.edgemap.cache\";", "modifier": "private static final", "type": "String", "declarator": "MMFF_EDGEMAP_CACHE = \"mmff.edgemap.cache\"", "var_name": "MMFF_EDGEMAP_CACHE"}, {"original_string": "private static final String MMFF_AROM          = \"mmff.arom\";", "modifier": "private static final", "type": "String", "declarator": "MMFF_AROM          = \"mmff.arom\"", "var_name": "MMFF_AROM"}, {"original_string": "private final MmffAtomTypeMatcher mmffAtomTyper = new MmffAtomTypeMatcher();", "modifier": "private final", "type": "MmffAtomTypeMatcher", "declarator": "mmffAtomTyper = new MmffAtomTypeMatcher()", "var_name": "mmffAtomTyper"}, {"original_string": "private final MmffParamSet        mmffParamSet  = MmffParamSet.INSTANCE;", "modifier": "private final", "type": "MmffParamSet", "declarator": "mmffParamSet  = MmffParamSet.INSTANCE", "var_name": "mmffParamSet"}], "methods": [{"identifier": "assignAtomTypes", "parameters": "(IAtomContainer mol)", "modifiers": "public", "return": "boolean", "signature": "boolean assignAtomTypes(IAtomContainer mol)", "full_signature": "public boolean assignAtomTypes(IAtomContainer mol)", "class_method_signature": "Mmff.assignAtomTypes(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "effectiveCharges", "parameters": "(IAtomContainer mol)", "modifiers": "public", "return": "boolean", "signature": "boolean effectiveCharges(IAtomContainer mol)", "full_signature": "public boolean effectiveCharges(IAtomContainer mol)", "class_method_signature": "Mmff.effectiveCharges(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "partialCharges", "parameters": "(IAtomContainer mol)", "modifiers": "public", "return": "boolean", "signature": "boolean partialCharges(IAtomContainer mol)", "full_signature": "public boolean partialCharges(IAtomContainer mol)", "class_method_signature": "Mmff.partialCharges(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "clearProps", "parameters": "(IAtomContainer mol)", "modifiers": "public", "return": "void", "signature": "void clearProps(IAtomContainer mol)", "full_signature": "public void clearProps(IAtomContainer mol)", "class_method_signature": "Mmff.clearProps(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "primaryCharges", "parameters": "(IAtomContainer mol, int[][] adjList, GraphUtil.EdgeToBondMap edgeMap)", "modifiers": "", "return": "void", "signature": "void primaryCharges(IAtomContainer mol, int[][] adjList, GraphUtil.EdgeToBondMap edgeMap)", "full_signature": " void primaryCharges(IAtomContainer mol, int[][] adjList, GraphUtil.EdgeToBondMap edgeMap)", "class_method_signature": "Mmff.primaryCharges(IAtomContainer mol, int[][] adjList, GraphUtil.EdgeToBondMap edgeMap)", "testcase": false, "constructor": false}, {"identifier": "effectiveCharges", "parameters": "(IAtomContainer mol, int[][] adjList)", "modifiers": "", "return": "void", "signature": "void effectiveCharges(IAtomContainer mol, int[][] adjList)", "full_signature": " void effectiveCharges(IAtomContainer mol, int[][] adjList)", "class_method_signature": "Mmff.effectiveCharges(IAtomContainer mol, int[][] adjList)", "testcase": false, "constructor": false}, {"identifier": "getAromatics", "parameters": "(IAtomContainer mol)", "modifiers": "private", "return": "Set<IChemObject>", "signature": "Set<IChemObject> getAromatics(IAtomContainer mol)", "full_signature": "private Set<IChemObject> getAromatics(IAtomContainer mol)", "class_method_signature": "Mmff.getAromatics(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "fCharge", "parameters": "(IAtom atom)", "modifiers": "", "return": "int", "signature": "int fCharge(IAtom atom)", "full_signature": " int fCharge(IAtom atom)", "class_method_signature": "Mmff.fCharge(IAtom atom)", "testcase": false, "constructor": false}], "file": "tool/forcefield/src/main/java/org/openscience/cdk/forcefield/mmff/Mmff.java"}, "focal_method": {"identifier": "clearProps", "parameters": "(IAtomContainer mol)", "modifiers": "public", "return": "void", "body": "public void clearProps(IAtomContainer mol) {\n        mol.removeProperty(MMFF_EDGEMAP_CACHE);\n        mol.removeProperty(MMFF_ADJLIST_CACHE);\n        for (IBond bond : mol.bonds())\n            bond.removeProperty(MMFF_AROM);\n    }", "signature": "void clearProps(IAtomContainer mol)", "full_signature": "public void clearProps(IAtomContainer mol)", "class_method_signature": "Mmff.clearProps(IAtomContainer mol)", "testcase": false, "constructor": false, "invocations": ["removeProperty", "removeProperty", "bonds", "removeProperty"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}