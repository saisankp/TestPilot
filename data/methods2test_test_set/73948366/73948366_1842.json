{"test_class": {"identifier": "ZMSClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String systemAdminUser = null;", "modifier": "private", "type": "String", "declarator": "systemAdminUser = null", "var_name": "systemAdminUser"}, {"original_string": "private String systemAdminFullUser = null;", "modifier": "private", "type": "String", "declarator": "systemAdminFullUser = null", "var_name": "systemAdminFullUser"}, {"original_string": "private static String ZMS_CLIENT_PROP_ZMS_URL = \"athenz.zms.client.zms_url\";", "modifier": "private static", "type": "String", "declarator": "ZMS_CLIENT_PROP_ZMS_URL = \"athenz.zms.client.zms_url\"", "var_name": "ZMS_CLIENT_PROP_ZMS_URL"}, {"original_string": "private static String ZMS_CLIENT_PROP_TEST_ADMIN = \"athenz.zms.client.test_admin\";", "modifier": "private static", "type": "String", "declarator": "ZMS_CLIENT_PROP_TEST_ADMIN = \"athenz.zms.client.test_admin\"", "var_name": "ZMS_CLIENT_PROP_TEST_ADMIN"}, {"original_string": "private static final String PUB_KEY_ZONE1 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BM\"\n            + \"EdDU3FHU0liM0RRRUJBUVVBQTRHTkFEQ0JpUUtCZ1FDMXRHU1ZDQTh3bDVldzVZNzZXajJySkFVRA\"\n            + \"pZYW5FSmZLbUFseDVjUS84aEtFVWZTU2dwWHIzQ3pkaDFhMjZkbGI3bW1LMjlxbVhKWGg2dW1XOUF\"\n            + \"5ZlRPS1ZvCis2QVNsb1ZVM2F2dnVmbEdVT0VnMmpzbWRha1IyNEtjTGpBdTZRclVlNDE3bEczdDhx\"\n            + \"U1BJR2pTNUMrQ3NKVXcKaDA0aEh4NWYrUEV3eFY0cmJRSURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLR\"\n            + \"VktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "PUB_KEY_ZONE1 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BM\"\n            + \"EdDU3FHU0liM0RRRUJBUVVBQTRHTkFEQ0JpUUtCZ1FDMXRHU1ZDQTh3bDVldzVZNzZXajJySkFVRA\"\n            + \"pZYW5FSmZLbUFseDVjUS84aEtFVWZTU2dwWHIzQ3pkaDFhMjZkbGI3bW1LMjlxbVhKWGg2dW1XOUF\"\n            + \"5ZlRPS1ZvCis2QVNsb1ZVM2F2dnVmbEdVT0VnMmpzbWRha1IyNEtjTGpBdTZRclVlNDE3bEczdDhx\"\n            + \"U1BJR2pTNUMrQ3NKVXcKaDA0aEh4NWYrUEV3eFY0cmJRSURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLR\"\n            + \"VktLS0tLQo-\"", "var_name": "PUB_KEY_ZONE1"}, {"original_string": "private static final String PUB_KEY_ZONE2 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZ3d0RRW\"\n            + \"UpLb1pJaHZjTkFRRUJCUUFEU3dBd1NBSkJBTDRnNlF1bGVRcG42bytpSmorK09nenNZM3hXekhHUw\"\n            + \"p4ZW1xZzZhdkkvbHhvT3Jzd2h4YW93MjMrR3AxZXhOWEdzQlNsTkFQSXh5N3RHTXZaRnY0Q3ZrQ0F\"\n            + \"3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "PUB_KEY_ZONE2 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZ3d0RRW\"\n            + \"UpLb1pJaHZjTkFRRUJCUUFEU3dBd1NBSkJBTDRnNlF1bGVRcG42bytpSmorK09nenNZM3hXekhHUw\"\n            + \"p4ZW1xZzZhdkkvbHhvT3Jzd2h4YW93MjMrR3AxZXhOWEdzQlNsTkFQSXh5N3RHTXZaRnY0Q3ZrQ0F\"\n            + \"3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "PUB_KEY_ZONE2"}, {"original_string": "private boolean printURL = true;", "modifier": "private", "type": "boolean", "declarator": "printURL = true", "var_name": "printURL"}, {"original_string": "static final Struct TABLE_PROVIDER_ROLE_ACTIONS = new Struct()\n        .with(\"admin\", \"*\").with(\"writer\", \"WRITE\").with(\"reader\", \"READ\");", "modifier": "static final", "type": "Struct", "declarator": "TABLE_PROVIDER_ROLE_ACTIONS = new Struct()\n        .with(\"admin\", \"*\").with(\"writer\", \"WRITE\").with(\"reader\", \"READ\")", "var_name": "TABLE_PROVIDER_ROLE_ACTIONS"}, {"original_string": "private static String AUDIT_REF = \"zmsjcltest\";", "modifier": "private static", "type": "String", "declarator": "AUDIT_REF = \"zmsjcltest\"", "var_name": "AUDIT_REF"}, {"original_string": "static final int BASE_PRODUCT_ID = 100000000;", "modifier": "static final", "type": "int", "declarator": "BASE_PRODUCT_ID = 100000000", "var_name": "BASE_PRODUCT_ID"}, {"original_string": "static java.util.Random domainProductId = new java.security.SecureRandom();", "modifier": "static", "type": "java.util.Random", "declarator": "domainProductId = new java.security.SecureRandom()", "var_name": "domainProductId"}], "file": "clients/java/zms/src/test/java/com/yahoo/athenz/zms/ZMSClientTest.java"}, "test_case": {"identifier": "testGetRoleList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetRoleList() {\n        ZMSClient client = createClient(systemAdminUser);\n        ZMSRDLGeneratedClient c = Mockito.mock(ZMSRDLGeneratedClient.class);\n        client.setZMSRDLGeneratedClient(c);\n        RoleList roleListMock = Mockito.mock(RoleList.class);\n        Mockito.when(c.getRoleList(\"RoleListParamDom1\", null, \"Role1\")).thenReturn(roleListMock);\n        RoleList roleList = client.getRoleList(\"RoleListParamDom1\", null, \"Role1\");\n        assertNotNull(roleList);\n        try {\n            Mockito.when(c.getRoleList(\"RoleListParamDom1\", null, \"Role2\")).thenThrow(new ResourceException(204));\n            client.getRoleList(\"RoleListParamDom1\", null, \"Role2\");\n            fail();\n        } catch  (ResourceException ex) {\n            assertTrue(true);\n        }\n        try {\n            Mockito.when(c.getRoleList(\"RoleListParamDom2\", null, \"Role2\")).thenThrow(new NullPointerException());\n            client.getRoleList(\"RoleListParamDom2\", null, \"Role2\");\n            fail();\n        } catch (ResourceException ex) {\n            assertTrue(true);\n        }\n        try {\n            Mockito.when(c.getRoleList(\"RoleListParamDom1\", null, null)).thenThrow(new ResourceException(204));\n            client.getRoleList(\"RoleListParamDom1\");\n            fail();\n        } catch (ResourceException ex) {\n            assertTrue(true);\n        }\n        try {\n            Mockito.when(c.getRoleList(\"RoleListParamDom2\", null, null)).thenThrow(new NullPointerException());\n            client.getRoleList(\"RoleListParamDom2\");\n            fail();\n        } catch (ResourceException ex) {\n            assertTrue(true);\n        }\n    }", "signature": "void testGetRoleList()", "full_signature": "@Test public void testGetRoleList()", "class_method_signature": "ZMSClientTest.testGetRoleList()", "testcase": true, "constructor": false, "invocations": ["createClient", "mock", "setZMSRDLGeneratedClient", "mock", "thenReturn", "when", "getRoleList", "getRoleList", "assertNotNull", "thenThrow", "when", "getRoleList", "getRoleList", "fail", "assertTrue", "thenThrow", "when", "getRoleList", "getRoleList", "fail", "assertTrue", "thenThrow", "when", "getRoleList", "getRoleList", "fail", "assertTrue", "thenThrow", "when", "getRoleList", "getRoleList", "fail", "assertTrue"]}, "focal_class": {"identifier": "ZMSClient", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private String zmsUrl = null;", "modifier": "private", "type": "String", "declarator": "zmsUrl = null", "var_name": "zmsUrl"}, {"original_string": "private Principal principal = null;", "modifier": "private", "type": "Principal", "declarator": "principal = null", "var_name": "principal"}, {"original_string": "private boolean principalCheckDone = false;", "modifier": "private", "type": "boolean", "declarator": "principalCheckDone = false", "var_name": "principalCheckDone"}, {"original_string": "protected ZMSRDLGeneratedClient client = null;", "modifier": "protected", "type": "ZMSRDLGeneratedClient", "declarator": "client = null", "var_name": "client"}, {"original_string": "private static final String STR_ENV_ROOT = \"ROOT\";", "modifier": "private static final", "type": "String", "declarator": "STR_ENV_ROOT = \"ROOT\"", "var_name": "STR_ENV_ROOT"}, {"original_string": "private static final String STR_DEF_ROOT = \"/home/athenz\";", "modifier": "private static final", "type": "String", "declarator": "STR_DEF_ROOT = \"/home/athenz\"", "var_name": "STR_DEF_ROOT"}, {"original_string": "private static final String HTTP_RFC1123_DATE_FORMAT = \"EEE, d MMM yyyy HH:mm:ss zzz\";", "modifier": "private static final", "type": "String", "declarator": "HTTP_RFC1123_DATE_FORMAT = \"EEE, d MMM yyyy HH:mm:ss zzz\"", "var_name": "HTTP_RFC1123_DATE_FORMAT"}, {"original_string": "public static final String ZMS_CLIENT_PROP_ATHENZ_CONF = \"athenz.athenz_conf\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_ATHENZ_CONF = \"athenz.athenz_conf\"", "var_name": "ZMS_CLIENT_PROP_ATHENZ_CONF"}, {"original_string": "public static final String ZMS_CLIENT_PROP_READ_TIMEOUT = \"athenz.zms.client.read_timeout\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_READ_TIMEOUT = \"athenz.zms.client.read_timeout\"", "var_name": "ZMS_CLIENT_PROP_READ_TIMEOUT"}, {"original_string": "public static final String ZMS_CLIENT_PROP_CONNECT_TIMEOUT = \"athenz.zms.client.connect_timeout\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_CONNECT_TIMEOUT = \"athenz.zms.client.connect_timeout\"", "var_name": "ZMS_CLIENT_PROP_CONNECT_TIMEOUT"}, {"original_string": "public static final String ZMS_CLIENT_PROP_CERT_ALIAS = \"athenz.zms.client.cert_alias\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_CERT_ALIAS = \"athenz.zms.client.cert_alias\"", "var_name": "ZMS_CLIENT_PROP_CERT_ALIAS"}, {"original_string": "public static final String ZMS_CLIENT_PROP_KEYSTORE_PATH = \"athenz.zms.client.keystore_path\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_KEYSTORE_PATH = \"athenz.zms.client.keystore_path\"", "var_name": "ZMS_CLIENT_PROP_KEYSTORE_PATH"}, {"original_string": "public static final String ZMS_CLIENT_PROP_KEYSTORE_TYPE = \"athenz.zms.client.keystore_type\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_KEYSTORE_TYPE = \"athenz.zms.client.keystore_type\"", "var_name": "ZMS_CLIENT_PROP_KEYSTORE_TYPE"}, {"original_string": "public static final String ZMS_CLIENT_PROP_KEYSTORE_PASSWORD = \"athenz.zms.client.keystore_password\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_KEYSTORE_PASSWORD = \"athenz.zms.client.keystore_password\"", "var_name": "ZMS_CLIENT_PROP_KEYSTORE_PASSWORD"}, {"original_string": "public static final String ZMS_CLIENT_PROP_KEYSTORE_PWD_APP_NAME = \"athenz.zms.client.keystore_pwd_app_name\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_KEYSTORE_PWD_APP_NAME = \"athenz.zms.client.keystore_pwd_app_name\"", "var_name": "ZMS_CLIENT_PROP_KEYSTORE_PWD_APP_NAME"}, {"original_string": "public static final String ZMS_CLIENT_PROP_KEY_MANAGER_PASSWORD = \"athenz.zms.client.keymanager_password\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_KEY_MANAGER_PASSWORD = \"athenz.zms.client.keymanager_password\"", "var_name": "ZMS_CLIENT_PROP_KEY_MANAGER_PASSWORD"}, {"original_string": "public static final String ZMS_CLIENT_PROP_KEY_MANAGER_PWD_APP_NAME = \"athenz.zms.client.keymanager_pwd_app_name\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_KEY_MANAGER_PWD_APP_NAME = \"athenz.zms.client.keymanager_pwd_app_name\"", "var_name": "ZMS_CLIENT_PROP_KEY_MANAGER_PWD_APP_NAME"}, {"original_string": "public static final String ZMS_CLIENT_PROP_TRUSTSTORE_PATH = \"athenz.zms.client.truststore_path\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_TRUSTSTORE_PATH = \"athenz.zms.client.truststore_path\"", "var_name": "ZMS_CLIENT_PROP_TRUSTSTORE_PATH"}, {"original_string": "public static final String ZMS_CLIENT_PROP_TRUSTSTORE_TYPE = \"athenz.zms.client.truststore_type\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_TRUSTSTORE_TYPE = \"athenz.zms.client.truststore_type\"", "var_name": "ZMS_CLIENT_PROP_TRUSTSTORE_TYPE"}, {"original_string": "public static final String ZMS_CLIENT_PROP_TRUSTSTORE_PASSWORD = \"athenz.zms.client.truststore_password\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_TRUSTSTORE_PASSWORD = \"athenz.zms.client.truststore_password\"", "var_name": "ZMS_CLIENT_PROP_TRUSTSTORE_PASSWORD"}, {"original_string": "public static final String ZMS_CLIENT_PROP_TRUSTSTORE_PWD_APP_NAME = \"athenz.zms.client.truststore_pwd_app_name\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_TRUSTSTORE_PWD_APP_NAME = \"athenz.zms.client.truststore_pwd_app_name\"", "var_name": "ZMS_CLIENT_PROP_TRUSTSTORE_PWD_APP_NAME"}, {"original_string": "public static final String ZMS_CLIENT_PROP_PRIVATE_KEY_STORE_FACTORY_CLASS = \"athenz.zms.client.private_keystore_factory_class\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_PRIVATE_KEY_STORE_FACTORY_CLASS = \"athenz.zms.client.private_keystore_factory_class\"", "var_name": "ZMS_CLIENT_PROP_PRIVATE_KEY_STORE_FACTORY_CLASS"}, {"original_string": "public static final String ZMS_CLIENT_PROP_CLIENT_PROTOCOL = \"athenz.zms.client.client_ssl_protocol\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PROP_CLIENT_PROTOCOL = \"athenz.zms.client.client_ssl_protocol\"", "var_name": "ZMS_CLIENT_PROP_CLIENT_PROTOCOL"}, {"original_string": "public static final String ZMS_CLIENT_PKEY_STORE_FACTORY_CLASS = \"com.yahoo.athenz.auth.impl.FilePrivateKeyStoreFactory\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_PKEY_STORE_FACTORY_CLASS = \"com.yahoo.athenz.auth.impl.FilePrivateKeyStoreFactory\"", "var_name": "ZMS_CLIENT_PKEY_STORE_FACTORY_CLASS"}, {"original_string": "public static final String ZMS_CLIENT_DEFAULT_CLIENT_SSL_PROTOCOL = \"TLSv1.2\";", "modifier": "public static final", "type": "String", "declarator": "ZMS_CLIENT_DEFAULT_CLIENT_SSL_PROTOCOL = \"TLSv1.2\"", "var_name": "ZMS_CLIENT_DEFAULT_CLIENT_SSL_PROTOCOL"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ZMSClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ZMSClient.class)", "var_name": "LOGGER"}, {"original_string": "private static final Authority PRINCIPAL_AUTHORITY = new PrincipalAuthority();", "modifier": "private static final", "type": "Authority", "declarator": "PRINCIPAL_AUTHORITY = new PrincipalAuthority()", "var_name": "PRINCIPAL_AUTHORITY"}, {"original_string": "private static PrivateKeyStore PRIVATE_KEY_STORE = loadServicePrivateKey();", "modifier": "private static", "type": "PrivateKeyStore", "declarator": "PRIVATE_KEY_STORE = loadServicePrivateKey()", "var_name": "PRIVATE_KEY_STORE"}], "methods": [{"identifier": "loadServicePrivateKey", "parameters": "()", "modifiers": "static", "return": "PrivateKeyStore", "signature": "PrivateKeyStore loadServicePrivateKey()", "full_signature": "static PrivateKeyStore loadServicePrivateKey()", "class_method_signature": "ZMSClient.loadServicePrivateKey()", "testcase": false, "constructor": false}, {"identifier": "ZMSClient", "parameters": "()", "modifiers": "public", "return": "", "signature": " ZMSClient()", "full_signature": "public  ZMSClient()", "class_method_signature": "ZMSClient.ZMSClient()", "testcase": false, "constructor": true}, {"identifier": "ZMSClient", "parameters": "(String url)", "modifiers": "public", "return": "", "signature": " ZMSClient(String url)", "full_signature": "public  ZMSClient(String url)", "class_method_signature": "ZMSClient.ZMSClient(String url)", "testcase": false, "constructor": true}, {"identifier": "ZMSClient", "parameters": "(String url, Principal identity)", "modifiers": "public", "return": "", "signature": " ZMSClient(String url, Principal identity)", "full_signature": "public  ZMSClient(String url, Principal identity)", "class_method_signature": "ZMSClient.ZMSClient(String url, Principal identity)", "testcase": false, "constructor": true}, {"identifier": "ZMSClient", "parameters": "(Principal identity)", "modifiers": "public", "return": "", "signature": " ZMSClient(Principal identity)", "full_signature": "public  ZMSClient(Principal identity)", "class_method_signature": "ZMSClient.ZMSClient(Principal identity)", "testcase": false, "constructor": true}, {"identifier": "ZMSClient", "parameters": "(String url, SSLContext sslContext)", "modifiers": "public", "return": "", "signature": " ZMSClient(String url, SSLContext sslContext)", "full_signature": "public  ZMSClient(String url, SSLContext sslContext)", "class_method_signature": "ZMSClient.ZMSClient(String url, SSLContext sslContext)", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ZMSClient.close()", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, Object value)", "modifiers": "public", "return": "void", "signature": "void setProperty(String name, Object value)", "full_signature": "public void setProperty(String name, Object value)", "class_method_signature": "ZMSClient.setProperty(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "setZMSRDLGeneratedClient", "parameters": "(ZMSRDLGeneratedClient client)", "modifiers": "public", "return": "void", "signature": "void setZMSRDLGeneratedClient(ZMSRDLGeneratedClient client)", "full_signature": "public void setZMSRDLGeneratedClient(ZMSRDLGeneratedClient client)", "class_method_signature": "ZMSClient.setZMSRDLGeneratedClient(ZMSRDLGeneratedClient client)", "testcase": false, "constructor": false}, {"identifier": "addCredentials", "parameters": "(String credHeader, String credToken)", "modifiers": "public", "return": "void", "signature": "void addCredentials(String credHeader, String credToken)", "full_signature": "public void addCredentials(String credHeader, String credToken)", "class_method_signature": "ZMSClient.addCredentials(String credHeader, String credToken)", "testcase": false, "constructor": false}, {"identifier": "addCredentials", "parameters": "(Principal identity)", "modifiers": "public", "return": "ZMSClient", "signature": "ZMSClient addCredentials(Principal identity)", "full_signature": "public ZMSClient addCredentials(Principal identity)", "class_method_signature": "ZMSClient.addCredentials(Principal identity)", "testcase": false, "constructor": false}, {"identifier": "clearCredentials", "parameters": "()", "modifiers": "public", "return": "ZMSClient", "signature": "ZMSClient clearCredentials()", "full_signature": "public ZMSClient clearCredentials()", "class_method_signature": "ZMSClient.clearCredentials()", "testcase": false, "constructor": false}, {"identifier": "updatePrincipal", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updatePrincipal()", "full_signature": "private void updatePrincipal()", "class_method_signature": "ZMSClient.updatePrincipal()", "testcase": false, "constructor": false}, {"identifier": "lookupZMSUrl", "parameters": "()", "modifiers": "", "return": "String", "signature": "String lookupZMSUrl()", "full_signature": " String lookupZMSUrl()", "class_method_signature": "ZMSClient.lookupZMSUrl()", "testcase": false, "constructor": false}, {"identifier": "getClientBuilder", "parameters": "()", "modifiers": "", "return": "ClientBuilder", "signature": "ClientBuilder getClientBuilder()", "full_signature": " ClientBuilder getClientBuilder()", "class_method_signature": "ZMSClient.getClientBuilder()", "testcase": false, "constructor": false}, {"identifier": "initClient", "parameters": "(String url, SSLContext sslContext)", "modifiers": "private", "return": "void", "signature": "void initClient(String url, SSLContext sslContext)", "full_signature": "private void initClient(String url, SSLContext sslContext)", "class_method_signature": "ZMSClient.initClient(String url, SSLContext sslContext)", "testcase": false, "constructor": false}, {"identifier": "createSSLContext", "parameters": "()", "modifiers": "", "return": "SSLContext", "signature": "SSLContext createSSLContext()", "full_signature": " SSLContext createSSLContext()", "class_method_signature": "ZMSClient.createSSLContext()", "testcase": false, "constructor": false}, {"identifier": "getZmsUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getZmsUrl()", "full_signature": "public String getZmsUrl()", "class_method_signature": "ZMSClient.getZmsUrl()", "testcase": false, "constructor": false}, {"identifier": "generateRoleName", "parameters": "(String domain, String role)", "modifiers": "public", "return": "String", "signature": "String generateRoleName(String domain, String role)", "full_signature": "public String generateRoleName(String domain, String role)", "class_method_signature": "ZMSClient.generateRoleName(String domain, String role)", "testcase": false, "constructor": false}, {"identifier": "generatePolicyName", "parameters": "(String domain, String policy)", "modifiers": "public", "return": "String", "signature": "String generatePolicyName(String domain, String policy)", "full_signature": "public String generatePolicyName(String domain, String policy)", "class_method_signature": "ZMSClient.generatePolicyName(String domain, String policy)", "testcase": false, "constructor": false}, {"identifier": "generateServiceIdentityName", "parameters": "(String domain, String service)", "modifiers": "public", "return": "String", "signature": "String generateServiceIdentityName(String domain, String service)", "full_signature": "public String generateServiceIdentityName(String domain, String service)", "class_method_signature": "ZMSClient.generateServiceIdentityName(String domain, String service)", "testcase": false, "constructor": false}, {"identifier": "getDomain", "parameters": "(String domain)", "modifiers": "public", "return": "Domain", "signature": "Domain getDomain(String domain)", "full_signature": "public Domain getDomain(String domain)", "class_method_signature": "ZMSClient.getDomain(String domain)", "testcase": false, "constructor": false}, {"identifier": "getJWSDomain", "parameters": "(String domain)", "modifiers": "public", "return": "JWSDomain", "signature": "JWSDomain getJWSDomain(String domain)", "full_signature": "public JWSDomain getJWSDomain(String domain)", "class_method_signature": "ZMSClient.getJWSDomain(String domain)", "testcase": false, "constructor": false}, {"identifier": "getDomainList", "parameters": "()", "modifiers": "public", "return": "DomainList", "signature": "DomainList getDomainList()", "full_signature": "public DomainList getDomainList()", "class_method_signature": "ZMSClient.getDomainList()", "testcase": false, "constructor": false}, {"identifier": "getDomainList", "parameters": "(Integer limit, String skip, String prefix, Integer depth,\n                                    String account, Integer productId, Date modifiedSince)", "modifiers": "public", "return": "DomainList", "signature": "DomainList getDomainList(Integer limit, String skip, String prefix, Integer depth,\n                                    String account, Integer productId, Date modifiedSince)", "full_signature": "public DomainList getDomainList(Integer limit, String skip, String prefix, Integer depth,\n                                    String account, Integer productId, Date modifiedSince)", "class_method_signature": "ZMSClient.getDomainList(Integer limit, String skip, String prefix, Integer depth,\n                                    String account, Integer productId, Date modifiedSince)", "testcase": false, "constructor": false}, {"identifier": "getDomainList", "parameters": "(String roleMember, String roleName)", "modifiers": "public", "return": "DomainList", "signature": "DomainList getDomainList(String roleMember, String roleName)", "full_signature": "public DomainList getDomainList(String roleMember, String roleName)", "class_method_signature": "ZMSClient.getDomainList(String roleMember, String roleName)", "testcase": false, "constructor": false}, {"identifier": "postTopLevelDomain", "parameters": "(String auditRef, TopLevelDomain detail)", "modifiers": "public", "return": "Domain", "signature": "Domain postTopLevelDomain(String auditRef, TopLevelDomain detail)", "full_signature": "public Domain postTopLevelDomain(String auditRef, TopLevelDomain detail)", "class_method_signature": "ZMSClient.postTopLevelDomain(String auditRef, TopLevelDomain detail)", "testcase": false, "constructor": false}, {"identifier": "postSubDomain", "parameters": "(String parent, String auditRef, SubDomain detail)", "modifiers": "public", "return": "Domain", "signature": "Domain postSubDomain(String parent, String auditRef, SubDomain detail)", "full_signature": "public Domain postSubDomain(String parent, String auditRef, SubDomain detail)", "class_method_signature": "ZMSClient.postSubDomain(String parent, String auditRef, SubDomain detail)", "testcase": false, "constructor": false}, {"identifier": "postUserDomain", "parameters": "(String name, String auditRef, UserDomain detail)", "modifiers": "public", "return": "Domain", "signature": "Domain postUserDomain(String name, String auditRef, UserDomain detail)", "full_signature": "public Domain postUserDomain(String name, String auditRef, UserDomain detail)", "class_method_signature": "ZMSClient.postUserDomain(String name, String auditRef, UserDomain detail)", "testcase": false, "constructor": false}, {"identifier": "deleteTopLevelDomain", "parameters": "(String name, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteTopLevelDomain(String name, String auditRef)", "full_signature": "public void deleteTopLevelDomain(String name, String auditRef)", "class_method_signature": "ZMSClient.deleteTopLevelDomain(String name, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deleteSubDomain", "parameters": "(String parent, String name, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteSubDomain(String parent, String name, String auditRef)", "full_signature": "public void deleteSubDomain(String parent, String name, String auditRef)", "class_method_signature": "ZMSClient.deleteSubDomain(String parent, String name, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deleteUserDomain", "parameters": "(String name, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteUserDomain(String name, String auditRef)", "full_signature": "public void deleteUserDomain(String name, String auditRef)", "class_method_signature": "ZMSClient.deleteUserDomain(String name, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "putDomainMeta", "parameters": "(String name, String auditRef, DomainMeta detail)", "modifiers": "public", "return": "void", "signature": "void putDomainMeta(String name, String auditRef, DomainMeta detail)", "full_signature": "public void putDomainMeta(String name, String auditRef, DomainMeta detail)", "class_method_signature": "ZMSClient.putDomainMeta(String name, String auditRef, DomainMeta detail)", "testcase": false, "constructor": false}, {"identifier": "putDomainSystemMeta", "parameters": "(String name, String attribute, String auditRef, DomainMeta detail)", "modifiers": "public", "return": "void", "signature": "void putDomainSystemMeta(String name, String attribute, String auditRef, DomainMeta detail)", "full_signature": "public void putDomainSystemMeta(String name, String attribute, String auditRef, DomainMeta detail)", "class_method_signature": "ZMSClient.putDomainSystemMeta(String name, String attribute, String auditRef, DomainMeta detail)", "testcase": false, "constructor": false}, {"identifier": "getRoleList", "parameters": "(String domainName)", "modifiers": "public", "return": "RoleList", "signature": "RoleList getRoleList(String domainName)", "full_signature": "public RoleList getRoleList(String domainName)", "class_method_signature": "ZMSClient.getRoleList(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getRoleList", "parameters": "(String domainName, Integer limit, String skip)", "modifiers": "public", "return": "RoleList", "signature": "RoleList getRoleList(String domainName, Integer limit, String skip)", "full_signature": "public RoleList getRoleList(String domainName, Integer limit, String skip)", "class_method_signature": "ZMSClient.getRoleList(String domainName, Integer limit, String skip)", "testcase": false, "constructor": false}, {"identifier": "getRoles", "parameters": "(String domainName, Boolean members)", "modifiers": "public", "return": "Roles", "signature": "Roles getRoles(String domainName, Boolean members)", "full_signature": "public Roles getRoles(String domainName, Boolean members)", "class_method_signature": "ZMSClient.getRoles(String domainName, Boolean members)", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "(String domainName, String roleName)", "modifiers": "public", "return": "Role", "signature": "Role getRole(String domainName, String roleName)", "full_signature": "public Role getRole(String domainName, String roleName)", "class_method_signature": "ZMSClient.getRole(String domainName, String roleName)", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "(String domainName, String roleName, boolean auditLog)", "modifiers": "public", "return": "Role", "signature": "Role getRole(String domainName, String roleName, boolean auditLog)", "full_signature": "public Role getRole(String domainName, String roleName, boolean auditLog)", "class_method_signature": "ZMSClient.getRole(String domainName, String roleName, boolean auditLog)", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "(String domainName, String roleName, boolean auditLog, boolean expand)", "modifiers": "public", "return": "Role", "signature": "Role getRole(String domainName, String roleName, boolean auditLog, boolean expand)", "full_signature": "public Role getRole(String domainName, String roleName, boolean auditLog, boolean expand)", "class_method_signature": "ZMSClient.getRole(String domainName, String roleName, boolean auditLog, boolean expand)", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "(String domainName, String roleName, boolean auditLog, boolean expand, boolean pending)", "modifiers": "public", "return": "Role", "signature": "Role getRole(String domainName, String roleName, boolean auditLog, boolean expand, boolean pending)", "full_signature": "public Role getRole(String domainName, String roleName, boolean auditLog, boolean expand, boolean pending)", "class_method_signature": "ZMSClient.getRole(String domainName, String roleName, boolean auditLog, boolean expand, boolean pending)", "testcase": false, "constructor": false}, {"identifier": "putRole", "parameters": "(String domainName, String roleName, String auditRef, Role role)", "modifiers": "public", "return": "void", "signature": "void putRole(String domainName, String roleName, String auditRef, Role role)", "full_signature": "public void putRole(String domainName, String roleName, String auditRef, Role role)", "class_method_signature": "ZMSClient.putRole(String domainName, String roleName, String auditRef, Role role)", "testcase": false, "constructor": false}, {"identifier": "deleteRole", "parameters": "(String domainName, String roleName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteRole(String domainName, String roleName, String auditRef)", "full_signature": "public void deleteRole(String domainName, String roleName, String auditRef)", "class_method_signature": "ZMSClient.deleteRole(String domainName, String roleName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getMembership", "parameters": "(String domainName, String roleName, String memberName)", "modifiers": "public", "return": "Membership", "signature": "Membership getMembership(String domainName, String roleName, String memberName)", "full_signature": "public Membership getMembership(String domainName, String roleName, String memberName)", "class_method_signature": "ZMSClient.getMembership(String domainName, String roleName, String memberName)", "testcase": false, "constructor": false}, {"identifier": "getMembership", "parameters": "(String domainName, String roleName, String memberName, String expiration)", "modifiers": "public", "return": "Membership", "signature": "Membership getMembership(String domainName, String roleName, String memberName, String expiration)", "full_signature": "public Membership getMembership(String domainName, String roleName, String memberName, String expiration)", "class_method_signature": "ZMSClient.getMembership(String domainName, String roleName, String memberName, String expiration)", "testcase": false, "constructor": false}, {"identifier": "getOverdueReview", "parameters": "(String domainName)", "modifiers": "public", "return": "DomainRoleMembers", "signature": "DomainRoleMembers getOverdueReview(String domainName)", "full_signature": "public DomainRoleMembers getOverdueReview(String domainName)", "class_method_signature": "ZMSClient.getOverdueReview(String domainName)", "testcase": false, "constructor": false}, {"identifier": "putMembership", "parameters": "(String domainName, String roleName, String memberName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void putMembership(String domainName, String roleName, String memberName, String auditRef)", "full_signature": "public void putMembership(String domainName, String roleName, String memberName, String auditRef)", "class_method_signature": "ZMSClient.putMembership(String domainName, String roleName, String memberName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "putMembership", "parameters": "(String domainName, String roleName, String memberName,\n                              Timestamp expiration, String auditRef)", "modifiers": "public", "return": "void", "signature": "void putMembership(String domainName, String roleName, String memberName,\n                              Timestamp expiration, String auditRef)", "full_signature": "public void putMembership(String domainName, String roleName, String memberName,\n                              Timestamp expiration, String auditRef)", "class_method_signature": "ZMSClient.putMembership(String domainName, String roleName, String memberName,\n                              Timestamp expiration, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "putMembershipWithReview", "parameters": "(String domainName, String roleName, String memberName,\n                              Timestamp expiration, Timestamp review, String auditRef)", "modifiers": "public", "return": "void", "signature": "void putMembershipWithReview(String domainName, String roleName, String memberName,\n                              Timestamp expiration, Timestamp review, String auditRef)", "full_signature": "public void putMembershipWithReview(String domainName, String roleName, String memberName,\n                              Timestamp expiration, Timestamp review, String auditRef)", "class_method_signature": "ZMSClient.putMembershipWithReview(String domainName, String roleName, String memberName,\n                              Timestamp expiration, Timestamp review, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deleteMembership", "parameters": "(String domainName, String roleName, String memberName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteMembership(String domainName, String roleName, String memberName, String auditRef)", "full_signature": "public void deleteMembership(String domainName, String roleName, String memberName, String auditRef)", "class_method_signature": "ZMSClient.deleteMembership(String domainName, String roleName, String memberName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deletePendingMembership", "parameters": "(String domainName, String roleName, String memberName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deletePendingMembership(String domainName, String roleName, String memberName, String auditRef)", "full_signature": "public void deletePendingMembership(String domainName, String roleName, String memberName, String auditRef)", "class_method_signature": "ZMSClient.deletePendingMembership(String domainName, String roleName, String memberName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getUserList", "parameters": "()", "modifiers": "public", "return": "UserList", "signature": "UserList getUserList()", "full_signature": "public UserList getUserList()", "class_method_signature": "ZMSClient.getUserList()", "testcase": false, "constructor": false}, {"identifier": "deleteUser", "parameters": "(String name, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteUser(String name, String auditRef)", "full_signature": "public void deleteUser(String name, String auditRef)", "class_method_signature": "ZMSClient.deleteUser(String name, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getPolicies", "parameters": "(String domainName, Boolean assertions)", "modifiers": "public", "return": "Policies", "signature": "Policies getPolicies(String domainName, Boolean assertions)", "full_signature": "public Policies getPolicies(String domainName, Boolean assertions)", "class_method_signature": "ZMSClient.getPolicies(String domainName, Boolean assertions)", "testcase": false, "constructor": false}, {"identifier": "getPolicyList", "parameters": "(String domainName)", "modifiers": "public", "return": "PolicyList", "signature": "PolicyList getPolicyList(String domainName)", "full_signature": "public PolicyList getPolicyList(String domainName)", "class_method_signature": "ZMSClient.getPolicyList(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getPolicyList", "parameters": "(String domainName, Integer limit, String skip)", "modifiers": "public", "return": "PolicyList", "signature": "PolicyList getPolicyList(String domainName, Integer limit, String skip)", "full_signature": "public PolicyList getPolicyList(String domainName, Integer limit, String skip)", "class_method_signature": "ZMSClient.getPolicyList(String domainName, Integer limit, String skip)", "testcase": false, "constructor": false}, {"identifier": "getAssertion", "parameters": "(String domainName, String policyName, Long assertionId)", "modifiers": "public", "return": "Assertion", "signature": "Assertion getAssertion(String domainName, String policyName, Long assertionId)", "full_signature": "public Assertion getAssertion(String domainName, String policyName, Long assertionId)", "class_method_signature": "ZMSClient.getAssertion(String domainName, String policyName, Long assertionId)", "testcase": false, "constructor": false}, {"identifier": "putAssertion", "parameters": "(String domainName, String policyName, String auditRef, Assertion assertion)", "modifiers": "public", "return": "Assertion", "signature": "Assertion putAssertion(String domainName, String policyName, String auditRef, Assertion assertion)", "full_signature": "public Assertion putAssertion(String domainName, String policyName, String auditRef, Assertion assertion)", "class_method_signature": "ZMSClient.putAssertion(String domainName, String policyName, String auditRef, Assertion assertion)", "testcase": false, "constructor": false}, {"identifier": "deleteAssertion", "parameters": "(String domainName, String policyName, Long assertionId, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteAssertion(String domainName, String policyName, Long assertionId, String auditRef)", "full_signature": "public void deleteAssertion(String domainName, String policyName, Long assertionId, String auditRef)", "class_method_signature": "ZMSClient.deleteAssertion(String domainName, String policyName, Long assertionId, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getPolicy", "parameters": "(String domainName, String policyName)", "modifiers": "public", "return": "Policy", "signature": "Policy getPolicy(String domainName, String policyName)", "full_signature": "public Policy getPolicy(String domainName, String policyName)", "class_method_signature": "ZMSClient.getPolicy(String domainName, String policyName)", "testcase": false, "constructor": false}, {"identifier": "putPolicy", "parameters": "(String domainName, String policyName, String auditRef, Policy policy)", "modifiers": "public", "return": "void", "signature": "void putPolicy(String domainName, String policyName, String auditRef, Policy policy)", "full_signature": "public void putPolicy(String domainName, String policyName, String auditRef, Policy policy)", "class_method_signature": "ZMSClient.putPolicy(String domainName, String policyName, String auditRef, Policy policy)", "testcase": false, "constructor": false}, {"identifier": "deletePolicy", "parameters": "(String domainName, String policyName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deletePolicy(String domainName, String policyName, String auditRef)", "full_signature": "public void deletePolicy(String domainName, String policyName, String auditRef)", "class_method_signature": "ZMSClient.deletePolicy(String domainName, String policyName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "putServiceIdentity", "parameters": "(String domainName, String serviceName,\n                                   String auditRef, ServiceIdentity service)", "modifiers": "public", "return": "void", "signature": "void putServiceIdentity(String domainName, String serviceName,\n                                   String auditRef, ServiceIdentity service)", "full_signature": "public void putServiceIdentity(String domainName, String serviceName,\n                                   String auditRef, ServiceIdentity service)", "class_method_signature": "ZMSClient.putServiceIdentity(String domainName, String serviceName,\n                                   String auditRef, ServiceIdentity service)", "testcase": false, "constructor": false}, {"identifier": "putServiceIdentitySystemMeta", "parameters": "(String domainName, String serviceName,\n                                             String attribute, String auditRef, ServiceIdentitySystemMeta meta)", "modifiers": "public", "return": "void", "signature": "void putServiceIdentitySystemMeta(String domainName, String serviceName,\n                                             String attribute, String auditRef, ServiceIdentitySystemMeta meta)", "full_signature": "public void putServiceIdentitySystemMeta(String domainName, String serviceName,\n                                             String attribute, String auditRef, ServiceIdentitySystemMeta meta)", "class_method_signature": "ZMSClient.putServiceIdentitySystemMeta(String domainName, String serviceName,\n                                             String attribute, String auditRef, ServiceIdentitySystemMeta meta)", "testcase": false, "constructor": false}, {"identifier": "getServiceIdentity", "parameters": "(String domainName, String serviceName)", "modifiers": "public", "return": "ServiceIdentity", "signature": "ServiceIdentity getServiceIdentity(String domainName, String serviceName)", "full_signature": "public ServiceIdentity getServiceIdentity(String domainName, String serviceName)", "class_method_signature": "ZMSClient.getServiceIdentity(String domainName, String serviceName)", "testcase": false, "constructor": false}, {"identifier": "deleteServiceIdentity", "parameters": "(String domainName, String serviceName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteServiceIdentity(String domainName, String serviceName, String auditRef)", "full_signature": "public void deleteServiceIdentity(String domainName, String serviceName, String auditRef)", "class_method_signature": "ZMSClient.deleteServiceIdentity(String domainName, String serviceName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getServiceIdentities", "parameters": "(String domainName, Boolean publicKeys, Boolean hosts)", "modifiers": "public", "return": "ServiceIdentities", "signature": "ServiceIdentities getServiceIdentities(String domainName, Boolean publicKeys, Boolean hosts)", "full_signature": "public ServiceIdentities getServiceIdentities(String domainName, Boolean publicKeys, Boolean hosts)", "class_method_signature": "ZMSClient.getServiceIdentities(String domainName, Boolean publicKeys, Boolean hosts)", "testcase": false, "constructor": false}, {"identifier": "getServiceIdentityList", "parameters": "(String domainName)", "modifiers": "public", "return": "ServiceIdentityList", "signature": "ServiceIdentityList getServiceIdentityList(String domainName)", "full_signature": "public ServiceIdentityList getServiceIdentityList(String domainName)", "class_method_signature": "ZMSClient.getServiceIdentityList(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getServiceIdentityList", "parameters": "(String domainName, Integer limit, String skip)", "modifiers": "public", "return": "ServiceIdentityList", "signature": "ServiceIdentityList getServiceIdentityList(String domainName, Integer limit, String skip)", "full_signature": "public ServiceIdentityList getServiceIdentityList(String domainName, Integer limit, String skip)", "class_method_signature": "ZMSClient.getServiceIdentityList(String domainName, Integer limit, String skip)", "testcase": false, "constructor": false}, {"identifier": "getPublicKeyEntry", "parameters": "(String domainName, String serviceName, String keyId)", "modifiers": "public", "return": "PublicKeyEntry", "signature": "PublicKeyEntry getPublicKeyEntry(String domainName, String serviceName, String keyId)", "full_signature": "public PublicKeyEntry getPublicKeyEntry(String domainName, String serviceName, String keyId)", "class_method_signature": "ZMSClient.getPublicKeyEntry(String domainName, String serviceName, String keyId)", "testcase": false, "constructor": false}, {"identifier": "putPublicKeyEntry", "parameters": "(String domainName, String serviceName, String keyId, String auditRef,\n                                  PublicKeyEntry publicKeyEntry)", "modifiers": "public", "return": "void", "signature": "void putPublicKeyEntry(String domainName, String serviceName, String keyId, String auditRef,\n                                  PublicKeyEntry publicKeyEntry)", "full_signature": "public void putPublicKeyEntry(String domainName, String serviceName, String keyId, String auditRef,\n                                  PublicKeyEntry publicKeyEntry)", "class_method_signature": "ZMSClient.putPublicKeyEntry(String domainName, String serviceName, String keyId, String auditRef,\n                                  PublicKeyEntry publicKeyEntry)", "testcase": false, "constructor": false}, {"identifier": "deletePublicKeyEntry", "parameters": "(String domainName, String serviceName, String keyId, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deletePublicKeyEntry(String domainName, String serviceName, String keyId, String auditRef)", "full_signature": "public void deletePublicKeyEntry(String domainName, String serviceName, String keyId, String auditRef)", "class_method_signature": "ZMSClient.deletePublicKeyEntry(String domainName, String serviceName, String keyId, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "putEntity", "parameters": "(String domainName, String entityName, String auditRef, Entity entity)", "modifiers": "public", "return": "void", "signature": "void putEntity(String domainName, String entityName, String auditRef, Entity entity)", "full_signature": "public void putEntity(String domainName, String entityName, String auditRef, Entity entity)", "class_method_signature": "ZMSClient.putEntity(String domainName, String entityName, String auditRef, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "getEntity", "parameters": "(String domainName, String entityName)", "modifiers": "public", "return": "Entity", "signature": "Entity getEntity(String domainName, String entityName)", "full_signature": "public Entity getEntity(String domainName, String entityName)", "class_method_signature": "ZMSClient.getEntity(String domainName, String entityName)", "testcase": false, "constructor": false}, {"identifier": "deleteEntity", "parameters": "(String domainName, String entityName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteEntity(String domainName, String entityName, String auditRef)", "full_signature": "public void deleteEntity(String domainName, String entityName, String auditRef)", "class_method_signature": "ZMSClient.deleteEntity(String domainName, String entityName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getEntityList", "parameters": "(String domainName)", "modifiers": "public", "return": "EntityList", "signature": "EntityList getEntityList(String domainName)", "full_signature": "public EntityList getEntityList(String domainName)", "class_method_signature": "ZMSClient.getEntityList(String domainName)", "testcase": false, "constructor": false}, {"identifier": "putTenancy", "parameters": "(String tenantDomain, String providerService, String auditRef, Tenancy tenant)", "modifiers": "public", "return": "void", "signature": "void putTenancy(String tenantDomain, String providerService, String auditRef, Tenancy tenant)", "full_signature": "public void putTenancy(String tenantDomain, String providerService, String auditRef, Tenancy tenant)", "class_method_signature": "ZMSClient.putTenancy(String tenantDomain, String providerService, String auditRef, Tenancy tenant)", "testcase": false, "constructor": false}, {"identifier": "deleteTenancy", "parameters": "(String tenantDomain, String providerService, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteTenancy(String tenantDomain, String providerService, String auditRef)", "full_signature": "public void deleteTenancy(String tenantDomain, String providerService, String auditRef)", "class_method_signature": "ZMSClient.deleteTenancy(String tenantDomain, String providerService, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "putTenant", "parameters": "(String providerDomain, String providerService, String tenantDomain, String auditRef, Tenancy tenant)", "modifiers": "public", "return": "void", "signature": "void putTenant(String providerDomain, String providerService, String tenantDomain, String auditRef, Tenancy tenant)", "full_signature": "public void putTenant(String providerDomain, String providerService, String tenantDomain, String auditRef, Tenancy tenant)", "class_method_signature": "ZMSClient.putTenant(String providerDomain, String providerService, String tenantDomain, String auditRef, Tenancy tenant)", "testcase": false, "constructor": false}, {"identifier": "deleteTenant", "parameters": "(String providerDomain, String providerService, String tenantDomain, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteTenant(String providerDomain, String providerService, String tenantDomain, String auditRef)", "full_signature": "public void deleteTenant(String providerDomain, String providerService, String tenantDomain, String auditRef)", "class_method_signature": "ZMSClient.deleteTenant(String providerDomain, String providerService, String tenantDomain, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "putTenantResourceGroupRoles", "parameters": "(String providerDomain, String providerServiceName, String tenantDomain,\n                                            String resourceGroup, String auditRef, TenantResourceGroupRoles tenantRoles)", "modifiers": "public", "return": "void", "signature": "void putTenantResourceGroupRoles(String providerDomain, String providerServiceName, String tenantDomain,\n                                            String resourceGroup, String auditRef, TenantResourceGroupRoles tenantRoles)", "full_signature": "public void putTenantResourceGroupRoles(String providerDomain, String providerServiceName, String tenantDomain,\n                                            String resourceGroup, String auditRef, TenantResourceGroupRoles tenantRoles)", "class_method_signature": "ZMSClient.putTenantResourceGroupRoles(String providerDomain, String providerServiceName, String tenantDomain,\n                                            String resourceGroup, String auditRef, TenantResourceGroupRoles tenantRoles)", "testcase": false, "constructor": false}, {"identifier": "getTenantResourceGroupRoles", "parameters": "(String providerDomain, String providerServiceName,\n                                                                String tenantDomain, String resourceGroup)", "modifiers": "public", "return": "TenantResourceGroupRoles", "signature": "TenantResourceGroupRoles getTenantResourceGroupRoles(String providerDomain, String providerServiceName,\n                                                                String tenantDomain, String resourceGroup)", "full_signature": "public TenantResourceGroupRoles getTenantResourceGroupRoles(String providerDomain, String providerServiceName,\n                                                                String tenantDomain, String resourceGroup)", "class_method_signature": "ZMSClient.getTenantResourceGroupRoles(String providerDomain, String providerServiceName,\n                                                                String tenantDomain, String resourceGroup)", "testcase": false, "constructor": false}, {"identifier": "deleteTenantResourceGroupRoles", "parameters": "(String providerDomain, String providerServiceName, String tenantDomain,\n                                               String resourceGroup, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteTenantResourceGroupRoles(String providerDomain, String providerServiceName, String tenantDomain,\n                                               String resourceGroup, String auditRef)", "full_signature": "public void deleteTenantResourceGroupRoles(String providerDomain, String providerServiceName, String tenantDomain,\n                                               String resourceGroup, String auditRef)", "class_method_signature": "ZMSClient.deleteTenantResourceGroupRoles(String providerDomain, String providerServiceName, String tenantDomain,\n                                               String resourceGroup, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getAccess", "parameters": "(String action, String resource, String trustDomain)", "modifiers": "public", "return": "Access", "signature": "Access getAccess(String action, String resource, String trustDomain)", "full_signature": "public Access getAccess(String action, String resource, String trustDomain)", "class_method_signature": "ZMSClient.getAccess(String action, String resource, String trustDomain)", "testcase": false, "constructor": false}, {"identifier": "getAccess", "parameters": "(String action, String resource, String trustDomain, String principal)", "modifiers": "public", "return": "Access", "signature": "Access getAccess(String action, String resource, String trustDomain, String principal)", "full_signature": "public Access getAccess(String action, String resource, String trustDomain, String principal)", "class_method_signature": "ZMSClient.getAccess(String action, String resource, String trustDomain, String principal)", "testcase": false, "constructor": false}, {"identifier": "getAccessExt", "parameters": "(String action, String resource, String trustDomain, String principal)", "modifiers": "public", "return": "Access", "signature": "Access getAccessExt(String action, String resource, String trustDomain, String principal)", "full_signature": "public Access getAccessExt(String action, String resource, String trustDomain, String principal)", "class_method_signature": "ZMSClient.getAccessExt(String action, String resource, String trustDomain, String principal)", "testcase": false, "constructor": false}, {"identifier": "getSignedDomains", "parameters": "(String domainName, String metaOnly, String matchingTag,\n                                          Map<String, List<String>> responseHeaders)", "modifiers": "public", "return": "SignedDomains", "signature": "SignedDomains getSignedDomains(String domainName, String metaOnly, String matchingTag,\n                                          Map<String, List<String>> responseHeaders)", "full_signature": "public SignedDomains getSignedDomains(String domainName, String metaOnly, String matchingTag,\n                                          Map<String, List<String>> responseHeaders)", "class_method_signature": "ZMSClient.getSignedDomains(String domainName, String metaOnly, String matchingTag,\n                                          Map<String, List<String>> responseHeaders)", "testcase": false, "constructor": false}, {"identifier": "getSignedDomains", "parameters": "(String domainName, String metaOnly, String metaAttr,\n                                          String matchingTag, Map<String, List<String>> responseHeaders)", "modifiers": "public", "return": "SignedDomains", "signature": "SignedDomains getSignedDomains(String domainName, String metaOnly, String metaAttr,\n                                          String matchingTag, Map<String, List<String>> responseHeaders)", "full_signature": "public SignedDomains getSignedDomains(String domainName, String metaOnly, String metaAttr,\n                                          String matchingTag, Map<String, List<String>> responseHeaders)", "class_method_signature": "ZMSClient.getSignedDomains(String domainName, String metaOnly, String metaAttr,\n                                          String matchingTag, Map<String, List<String>> responseHeaders)", "testcase": false, "constructor": false}, {"identifier": "getSignedDomains", "parameters": "(String domainName, String metaOnly, String metaAttr,\n                                          boolean masterCopy, String matchingTag, Map<String, List<String>> responseHeaders)", "modifiers": "public", "return": "SignedDomains", "signature": "SignedDomains getSignedDomains(String domainName, String metaOnly, String metaAttr,\n                                          boolean masterCopy, String matchingTag, Map<String, List<String>> responseHeaders)", "full_signature": "public SignedDomains getSignedDomains(String domainName, String metaOnly, String metaAttr,\n                                          boolean masterCopy, String matchingTag, Map<String, List<String>> responseHeaders)", "class_method_signature": "ZMSClient.getSignedDomains(String domainName, String metaOnly, String metaAttr,\n                                          boolean masterCopy, String matchingTag, Map<String, List<String>> responseHeaders)", "testcase": false, "constructor": false}, {"identifier": "getUserToken", "parameters": "(String userName)", "modifiers": "public", "return": "UserToken", "signature": "UserToken getUserToken(String userName)", "full_signature": "public UserToken getUserToken(String userName)", "class_method_signature": "ZMSClient.getUserToken(String userName)", "testcase": false, "constructor": false}, {"identifier": "getUserToken", "parameters": "(String userName, String serviceNames, Boolean header)", "modifiers": "public", "return": "UserToken", "signature": "UserToken getUserToken(String userName, String serviceNames, Boolean header)", "full_signature": "public UserToken getUserToken(String userName, String serviceNames, Boolean header)", "class_method_signature": "ZMSClient.getUserToken(String userName, String serviceNames, Boolean header)", "testcase": false, "constructor": false}, {"identifier": "getUserToken", "parameters": "(String userName, String serviceNames)", "modifiers": "public", "return": "UserToken", "signature": "UserToken getUserToken(String userName, String serviceNames)", "full_signature": "public UserToken getUserToken(String userName, String serviceNames)", "class_method_signature": "ZMSClient.getUserToken(String userName, String serviceNames)", "testcase": false, "constructor": false}, {"identifier": "putDefaultAdmins", "parameters": "(String domainName, String auditRef, DefaultAdmins defaultAdmins)", "modifiers": "public", "return": "void", "signature": "void putDefaultAdmins(String domainName, String auditRef, DefaultAdmins defaultAdmins)", "full_signature": "public void putDefaultAdmins(String domainName, String auditRef, DefaultAdmins defaultAdmins)", "class_method_signature": "ZMSClient.putDefaultAdmins(String domainName, String auditRef, DefaultAdmins defaultAdmins)", "testcase": false, "constructor": false}, {"identifier": "getPrincipal", "parameters": "(String serviceToken)", "modifiers": "public", "return": "Principal", "signature": "Principal getPrincipal(String serviceToken)", "full_signature": "public Principal getPrincipal(String serviceToken)", "class_method_signature": "ZMSClient.getPrincipal(String serviceToken)", "testcase": false, "constructor": false}, {"identifier": "getPrincipal", "parameters": "(String serviceToken, String tokenHeader)", "modifiers": "public", "return": "Principal", "signature": "Principal getPrincipal(String serviceToken, String tokenHeader)", "full_signature": "public Principal getPrincipal(String serviceToken, String tokenHeader)", "class_method_signature": "ZMSClient.getPrincipal(String serviceToken, String tokenHeader)", "testcase": false, "constructor": false}, {"identifier": "putProviderResourceGroupRoles", "parameters": "(String tenantDomain, String providerDomain,\n                                              String providerServiceName, String resourceGroup, String auditRef,\n                                              ProviderResourceGroupRoles providerRoles)", "modifiers": "public", "return": "void", "signature": "void putProviderResourceGroupRoles(String tenantDomain, String providerDomain,\n                                              String providerServiceName, String resourceGroup, String auditRef,\n                                              ProviderResourceGroupRoles providerRoles)", "full_signature": "public void putProviderResourceGroupRoles(String tenantDomain, String providerDomain,\n                                              String providerServiceName, String resourceGroup, String auditRef,\n                                              ProviderResourceGroupRoles providerRoles)", "class_method_signature": "ZMSClient.putProviderResourceGroupRoles(String tenantDomain, String providerDomain,\n                                              String providerServiceName, String resourceGroup, String auditRef,\n                                              ProviderResourceGroupRoles providerRoles)", "testcase": false, "constructor": false}, {"identifier": "deleteProviderResourceGroupRoles", "parameters": "(String tenantDomain, String providerDomain,\n                                                 String providerServiceName, String resourceGroup, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteProviderResourceGroupRoles(String tenantDomain, String providerDomain,\n                                                 String providerServiceName, String resourceGroup, String auditRef)", "full_signature": "public void deleteProviderResourceGroupRoles(String tenantDomain, String providerDomain,\n                                                 String providerServiceName, String resourceGroup, String auditRef)", "class_method_signature": "ZMSClient.deleteProviderResourceGroupRoles(String tenantDomain, String providerDomain,\n                                                 String providerServiceName, String resourceGroup, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getProviderResourceGroupRoles", "parameters": "(String tenantDomain,\n                                                                    String providerDomain, String providerServiceName, String resourceGroup)", "modifiers": "public", "return": "ProviderResourceGroupRoles", "signature": "ProviderResourceGroupRoles getProviderResourceGroupRoles(String tenantDomain,\n                                                                    String providerDomain, String providerServiceName, String resourceGroup)", "full_signature": "public ProviderResourceGroupRoles getProviderResourceGroupRoles(String tenantDomain,\n                                                                    String providerDomain, String providerServiceName, String resourceGroup)", "class_method_signature": "ZMSClient.getProviderResourceGroupRoles(String tenantDomain,\n                                                                    String providerDomain, String providerServiceName, String resourceGroup)", "testcase": false, "constructor": false}, {"identifier": "getDomainDataCheck", "parameters": "(String domain)", "modifiers": "public", "return": "DomainDataCheck", "signature": "DomainDataCheck getDomainDataCheck(String domain)", "full_signature": "public DomainDataCheck getDomainDataCheck(String domain)", "class_method_signature": "ZMSClient.getDomainDataCheck(String domain)", "testcase": false, "constructor": false}, {"identifier": "getTemplate", "parameters": "(String template)", "modifiers": "public", "return": "Template", "signature": "Template getTemplate(String template)", "full_signature": "public Template getTemplate(String template)", "class_method_signature": "ZMSClient.getTemplate(String template)", "testcase": false, "constructor": false}, {"identifier": "getServerTemplateList", "parameters": "()", "modifiers": "public", "return": "ServerTemplateList", "signature": "ServerTemplateList getServerTemplateList()", "full_signature": "public ServerTemplateList getServerTemplateList()", "class_method_signature": "ZMSClient.getServerTemplateList()", "testcase": false, "constructor": false}, {"identifier": "putDomainTemplate", "parameters": "(String domain, String auditRef, DomainTemplate templates)", "modifiers": "public", "return": "void", "signature": "void putDomainTemplate(String domain, String auditRef, DomainTemplate templates)", "full_signature": "public void putDomainTemplate(String domain, String auditRef, DomainTemplate templates)", "class_method_signature": "ZMSClient.putDomainTemplate(String domain, String auditRef, DomainTemplate templates)", "testcase": false, "constructor": false}, {"identifier": "putDomainTemplateExt", "parameters": "(String domain, String template, String auditRef, DomainTemplate templates)", "modifiers": "public", "return": "void", "signature": "void putDomainTemplateExt(String domain, String template, String auditRef, DomainTemplate templates)", "full_signature": "public void putDomainTemplateExt(String domain, String template, String auditRef, DomainTemplate templates)", "class_method_signature": "ZMSClient.putDomainTemplateExt(String domain, String template, String auditRef, DomainTemplate templates)", "testcase": false, "constructor": false}, {"identifier": "deleteDomainTemplate", "parameters": "(String domain, String template, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteDomainTemplate(String domain, String template, String auditRef)", "full_signature": "public void deleteDomainTemplate(String domain, String template, String auditRef)", "class_method_signature": "ZMSClient.deleteDomainTemplate(String domain, String template, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getDomainTemplateList", "parameters": "(String domain)", "modifiers": "public", "return": "DomainTemplateList", "signature": "DomainTemplateList getDomainTemplateList(String domain)", "full_signature": "public DomainTemplateList getDomainTemplateList(String domain)", "class_method_signature": "ZMSClient.getDomainTemplateList(String domain)", "testcase": false, "constructor": false}, {"identifier": "getResourceAccessList", "parameters": "(String principal, String action)", "modifiers": "public", "return": "ResourceAccessList", "signature": "ResourceAccessList getResourceAccessList(String principal, String action)", "full_signature": "public ResourceAccessList getResourceAccessList(String principal, String action)", "class_method_signature": "ZMSClient.getResourceAccessList(String principal, String action)", "testcase": false, "constructor": false}, {"identifier": "getQuota", "parameters": "(String domainName)", "modifiers": "public", "return": "Quota", "signature": "Quota getQuota(String domainName)", "full_signature": "public Quota getQuota(String domainName)", "class_method_signature": "ZMSClient.getQuota(String domainName)", "testcase": false, "constructor": false}, {"identifier": "putQuota", "parameters": "(String domainName, String auditRef, Quota quota)", "modifiers": "public", "return": "void", "signature": "void putQuota(String domainName, String auditRef, Quota quota)", "full_signature": "public void putQuota(String domainName, String auditRef, Quota quota)", "class_method_signature": "ZMSClient.putQuota(String domainName, String auditRef, Quota quota)", "testcase": false, "constructor": false}, {"identifier": "deleteQuota", "parameters": "(String domainName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteQuota(String domainName, String auditRef)", "full_signature": "public void deleteQuota(String domainName, String auditRef)", "class_method_signature": "ZMSClient.deleteQuota(String domainName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deleteDomainRoleMember", "parameters": "(String domainName, String memberName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteDomainRoleMember(String domainName, String memberName, String auditRef)", "full_signature": "public void deleteDomainRoleMember(String domainName, String memberName, String auditRef)", "class_method_signature": "ZMSClient.deleteDomainRoleMember(String domainName, String memberName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getDomainRoleMembers", "parameters": "(String domainName)", "modifiers": "public", "return": "DomainRoleMembers", "signature": "DomainRoleMembers getDomainRoleMembers(String domainName)", "full_signature": "public DomainRoleMembers getDomainRoleMembers(String domainName)", "class_method_signature": "ZMSClient.getDomainRoleMembers(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getPrincipalRoles", "parameters": "(String principal, String domainName)", "modifiers": "public", "return": "DomainRoleMember", "signature": "DomainRoleMember getPrincipalRoles(String principal, String domainName)", "full_signature": "public DomainRoleMember getPrincipalRoles(String principal, String domainName)", "class_method_signature": "ZMSClient.getPrincipalRoles(String principal, String domainName)", "testcase": false, "constructor": false}, {"identifier": "putRoleSystemMeta", "parameters": "(String domainName, String roleName, String attribute, String auditRef, RoleSystemMeta meta)", "modifiers": "public", "return": "void", "signature": "void putRoleSystemMeta(String domainName, String roleName, String attribute, String auditRef, RoleSystemMeta meta)", "full_signature": "public void putRoleSystemMeta(String domainName, String roleName, String attribute, String auditRef, RoleSystemMeta meta)", "class_method_signature": "ZMSClient.putRoleSystemMeta(String domainName, String roleName, String attribute, String auditRef, RoleSystemMeta meta)", "testcase": false, "constructor": false}, {"identifier": "putRoleMeta", "parameters": "(String domainName, String roleName, String auditRef, RoleMeta meta)", "modifiers": "public", "return": "void", "signature": "void putRoleMeta(String domainName, String roleName, String auditRef, RoleMeta meta)", "full_signature": "public void putRoleMeta(String domainName, String roleName, String auditRef, RoleMeta meta)", "class_method_signature": "ZMSClient.putRoleMeta(String domainName, String roleName, String auditRef, RoleMeta meta)", "testcase": false, "constructor": false}, {"identifier": "putMembershipDecision", "parameters": "(String domainName, String roleName, String memberName,\n                                      Timestamp expiration, boolean approval, String auditRef)", "modifiers": "public", "return": "void", "signature": "void putMembershipDecision(String domainName, String roleName, String memberName,\n                                      Timestamp expiration, boolean approval, String auditRef)", "full_signature": "public void putMembershipDecision(String domainName, String roleName, String memberName,\n                                      Timestamp expiration, boolean approval, String auditRef)", "class_method_signature": "ZMSClient.putMembershipDecision(String domainName, String roleName, String memberName,\n                                      Timestamp expiration, boolean approval, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getPendingDomainRoleMembersList", "parameters": "(String principal)", "modifiers": "public", "return": "DomainRoleMembership", "signature": "DomainRoleMembership getPendingDomainRoleMembersList(String principal)", "full_signature": "public DomainRoleMembership getPendingDomainRoleMembersList(String principal)", "class_method_signature": "ZMSClient.getPendingDomainRoleMembersList(String principal)", "testcase": false, "constructor": false}, {"identifier": "putRoleReview", "parameters": "(String domainName, String roleName, String auditRef, Role role)", "modifiers": "public", "return": "void", "signature": "void putRoleReview(String domainName, String roleName, String auditRef, Role role)", "full_signature": "public void putRoleReview(String domainName, String roleName, String auditRef, Role role)", "class_method_signature": "ZMSClient.putRoleReview(String domainName, String roleName, String auditRef, Role role)", "testcase": false, "constructor": false}, {"identifier": "deleteGroup", "parameters": "(String domainName, String groupName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteGroup(String domainName, String groupName, String auditRef)", "full_signature": "public void deleteGroup(String domainName, String groupName, String auditRef)", "class_method_signature": "ZMSClient.deleteGroup(String domainName, String groupName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deleteGroupMembership", "parameters": "(String domainName, String groupName, String memberName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deleteGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "full_signature": "public void deleteGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "class_method_signature": "ZMSClient.deleteGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deletePendingGroupMembership", "parameters": "(String domainName, String groupName, String memberName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void deletePendingGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "full_signature": "public void deletePendingGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "class_method_signature": "ZMSClient.deletePendingGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "generateGroupName", "parameters": "(String domain, String group)", "modifiers": "public", "return": "String", "signature": "String generateGroupName(String domain, String group)", "full_signature": "public String generateGroupName(String domain, String group)", "class_method_signature": "ZMSClient.generateGroupName(String domain, String group)", "testcase": false, "constructor": false}, {"identifier": "getGroupMembership", "parameters": "(String domainName, String groupName, String memberName, String expiration)", "modifiers": "public", "return": "GroupMembership", "signature": "GroupMembership getGroupMembership(String domainName, String groupName, String memberName, String expiration)", "full_signature": "public GroupMembership getGroupMembership(String domainName, String groupName, String memberName, String expiration)", "class_method_signature": "ZMSClient.getGroupMembership(String domainName, String groupName, String memberName, String expiration)", "testcase": false, "constructor": false}, {"identifier": "getPrincipalGroups", "parameters": "(String principal, String domainName)", "modifiers": "public", "return": "DomainGroupMember", "signature": "DomainGroupMember getPrincipalGroups(String principal, String domainName)", "full_signature": "public DomainGroupMember getPrincipalGroups(String principal, String domainName)", "class_method_signature": "ZMSClient.getPrincipalGroups(String principal, String domainName)", "testcase": false, "constructor": false}, {"identifier": "putGroupSystemMeta", "parameters": "(String domainName, String groupName, String attribute, String auditRef, GroupSystemMeta meta)", "modifiers": "public", "return": "void", "signature": "void putGroupSystemMeta(String domainName, String groupName, String attribute, String auditRef, GroupSystemMeta meta)", "full_signature": "public void putGroupSystemMeta(String domainName, String groupName, String attribute, String auditRef, GroupSystemMeta meta)", "class_method_signature": "ZMSClient.putGroupSystemMeta(String domainName, String groupName, String attribute, String auditRef, GroupSystemMeta meta)", "testcase": false, "constructor": false}, {"identifier": "putGroupMeta", "parameters": "(String domainName, String groupName, String auditRef, GroupMeta meta)", "modifiers": "public", "return": "void", "signature": "void putGroupMeta(String domainName, String groupName, String auditRef, GroupMeta meta)", "full_signature": "public void putGroupMeta(String domainName, String groupName, String auditRef, GroupMeta meta)", "class_method_signature": "ZMSClient.putGroupMeta(String domainName, String groupName, String auditRef, GroupMeta meta)", "testcase": false, "constructor": false}, {"identifier": "putGroupMembershipDecision", "parameters": "(String domainName, String groupName, String memberName, boolean approval, String auditRef)", "modifiers": "public", "return": "void", "signature": "void putGroupMembershipDecision(String domainName, String groupName, String memberName, boolean approval, String auditRef)", "full_signature": "public void putGroupMembershipDecision(String domainName, String groupName, String memberName, boolean approval, String auditRef)", "class_method_signature": "ZMSClient.putGroupMembershipDecision(String domainName, String groupName, String memberName, boolean approval, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getPendingDomainGroupMembersList", "parameters": "(String principal)", "modifiers": "public", "return": "DomainGroupMembership", "signature": "DomainGroupMembership getPendingDomainGroupMembersList(String principal)", "full_signature": "public DomainGroupMembership getPendingDomainGroupMembersList(String principal)", "class_method_signature": "ZMSClient.getPendingDomainGroupMembersList(String principal)", "testcase": false, "constructor": false}, {"identifier": "putGroupReview", "parameters": "(String domainName, String groupName, String auditRef, Group group)", "modifiers": "public", "return": "void", "signature": "void putGroupReview(String domainName, String groupName, String auditRef, Group group)", "full_signature": "public void putGroupReview(String domainName, String groupName, String auditRef, Group group)", "class_method_signature": "ZMSClient.putGroupReview(String domainName, String groupName, String auditRef, Group group)", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "(String domainName, String groupName, boolean auditLog, boolean pending)", "modifiers": "public", "return": "Group", "signature": "Group getGroup(String domainName, String groupName, boolean auditLog, boolean pending)", "full_signature": "public Group getGroup(String domainName, String groupName, boolean auditLog, boolean pending)", "class_method_signature": "ZMSClient.getGroup(String domainName, String groupName, boolean auditLog, boolean pending)", "testcase": false, "constructor": false}, {"identifier": "putGroup", "parameters": "(String domainName, String groupName, String auditRef, Group group)", "modifiers": "public", "return": "void", "signature": "void putGroup(String domainName, String groupName, String auditRef, Group group)", "full_signature": "public void putGroup(String domainName, String groupName, String auditRef, Group group)", "class_method_signature": "ZMSClient.putGroup(String domainName, String groupName, String auditRef, Group group)", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "(String domainName, Boolean members)", "modifiers": "public", "return": "Groups", "signature": "Groups getGroups(String domainName, Boolean members)", "full_signature": "public Groups getGroups(String domainName, Boolean members)", "class_method_signature": "ZMSClient.getGroups(String domainName, Boolean members)", "testcase": false, "constructor": false}, {"identifier": "putGroupMembership", "parameters": "(String domainName, String groupName, String memberName, String auditRef)", "modifiers": "public", "return": "void", "signature": "void putGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "full_signature": "public void putGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "class_method_signature": "ZMSClient.putGroupMembership(String domainName, String groupName, String memberName, String auditRef)", "testcase": false, "constructor": false}], "file": "clients/java/zms/src/main/java/com/yahoo/athenz/zms/ZMSClient.java"}, "focal_method": {"identifier": "getRoleList", "parameters": "(String domainName)", "modifiers": "public", "return": "RoleList", "body": "public RoleList getRoleList(String domainName) {\n        updatePrincipal();\n        try {\n            return client.getRoleList(domainName, null, null);\n        } catch (ResourceException ex) {\n            throw new ZMSClientException(ex.getCode(), ex.getData());\n        } catch (Exception ex) {\n            throw new ZMSClientException(ZMSClientException.BAD_REQUEST, ex.getMessage());\n        }\n    }", "signature": "RoleList getRoleList(String domainName)", "full_signature": "public RoleList getRoleList(String domainName)", "class_method_signature": "ZMSClient.getRoleList(String domainName)", "testcase": false, "constructor": false, "invocations": ["updatePrincipal", "getRoleList", "getCode", "getData", "getMessage"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}