{"test_class": {"identifier": "RealFunctionTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/core-map/src/test/java/org/orbisgis/coremap/renderer/se/parameter/real/RealFunctionTest.java"}, "test_case": {"identifier": "testGetOperator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetOperator() throws Exception {\n            RealFunction op1 = new RealFunction(\"log\");\n            assertTrue(op1.getOperator() == RealFunction.Operators.LOG);\n            assertTrue(op1.getOperands().isEmpty());\n    }", "signature": "void testGetOperator()", "full_signature": "@Test public void testGetOperator()", "class_method_signature": "RealFunctionTest.testGetOperator()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getOperator", "assertTrue", "isEmpty", "getOperands"]}, "focal_class": {"identifier": "RealFunction", "superclass": "extends AbstractSymbolizerNode", "interfaces": "implements SeParameter, RealParameter", "fields": [{"original_string": "private Operators op;", "modifier": "private", "type": "Operators", "declarator": "op", "var_name": "op"}, {"original_string": "private RealParameterContext ctx;", "modifier": "private", "type": "RealParameterContext", "declarator": "ctx", "var_name": "ctx"}, {"original_string": "private ArrayList<RealParameter> operands;", "modifier": "private", "type": "ArrayList<RealParameter>", "declarator": "operands", "var_name": "operands"}], "methods": [{"identifier": "RealFunction", "parameters": "(Operators operator)", "modifiers": "public", "return": "", "signature": " RealFunction(Operators operator)", "full_signature": "public  RealFunction(Operators operator)", "class_method_signature": "RealFunction.RealFunction(Operators operator)", "testcase": false, "constructor": true}, {"identifier": "RealFunction", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " RealFunction(String name)", "full_signature": "public  RealFunction(String name)", "class_method_signature": "RealFunction.RealFunction(String name)", "testcase": false, "constructor": true}, {"identifier": "RealFunction", "parameters": "(FunctionType fcn)", "modifiers": "public", "return": "", "signature": " RealFunction(FunctionType fcn)", "full_signature": "public  RealFunction(FunctionType fcn)", "class_method_signature": "RealFunction.RealFunction(FunctionType fcn)", "testcase": false, "constructor": true}, {"identifier": "RealFunction", "parameters": "(JAXBElement<FunctionType> fcn)", "modifiers": "public", "return": "", "signature": " RealFunction(JAXBElement<FunctionType> fcn)", "full_signature": "public  RealFunction(JAXBElement<FunctionType> fcn)", "class_method_signature": "RealFunction.RealFunction(JAXBElement<FunctionType> fcn)", "testcase": false, "constructor": true}, {"identifier": "getOperator", "parameters": "()", "modifiers": "public", "return": "Operators", "signature": "Operators getOperator()", "full_signature": "public Operators getOperator()", "class_method_signature": "RealFunction.getOperator()", "testcase": false, "constructor": false}, {"identifier": "getOperands", "parameters": "()", "modifiers": "public", "return": "List<RealParameter>", "signature": "List<RealParameter> getOperands()", "full_signature": "public List<RealParameter> getOperands()", "class_method_signature": "RealFunction.getOperands()", "testcase": false, "constructor": false}, {"identifier": "getOperand", "parameters": "(int i)", "modifiers": "public", "return": "RealParameter", "signature": "RealParameter getOperand(int i)", "full_signature": "public RealParameter getOperand(int i)", "class_method_signature": "RealFunction.getOperand(int i)", "testcase": false, "constructor": false}, {"identifier": "addOperand", "parameters": "(RealParameter operand)", "modifiers": "public", "return": "void", "signature": "void addOperand(RealParameter operand)", "full_signature": "public void addOperand(RealParameter operand)", "class_method_signature": "RealFunction.addOperand(RealParameter operand)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(ResultSet rs, long fid)", "modifiers": "@Override public", "return": "Double", "signature": "Double getValue(ResultSet rs, long fid)", "full_signature": "@Override public Double getValue(ResultSet rs, long fid)", "class_method_signature": "RealFunction.getValue(ResultSet rs, long fid)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(Map<String,Object> map)", "modifiers": "@Override public", "return": "Double", "signature": "Double getValue(Map<String,Object> map)", "full_signature": "@Override public Double getValue(Map<String,Object> map)", "class_method_signature": "RealFunction.getValue(Map<String,Object> map)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(List<Double> vals)", "modifiers": "private", "return": "Double", "signature": "Double getValue(List<Double> vals)", "full_signature": "private Double getValue(List<Double> vals)", "class_method_signature": "RealFunction.getValue(List<Double> vals)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RealFunction.toString()", "testcase": false, "constructor": false}, {"identifier": "setContext", "parameters": "(RealParameterContext ctx)", "modifiers": "@Override public", "return": "void", "signature": "void setContext(RealParameterContext ctx)", "full_signature": "@Override public void setContext(RealParameterContext ctx)", "class_method_signature": "RealFunction.setContext(RealParameterContext ctx)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "@Override public", "return": "RealParameterContext", "signature": "RealParameterContext getContext()", "full_signature": "@Override public RealParameterContext getContext()", "class_method_signature": "RealFunction.getContext()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Object o)", "full_signature": "@Override public int compareTo(Object o)", "class_method_signature": "RealFunction.compareTo(Object o)", "testcase": false, "constructor": false}, {"identifier": "getJAXBParameterValueType", "parameters": "()", "modifiers": "@Override public", "return": "ParameterValueType", "signature": "ParameterValueType getJAXBParameterValueType()", "full_signature": "@Override public ParameterValueType getJAXBParameterValueType()", "class_method_signature": "RealFunction.getJAXBParameterValueType()", "testcase": false, "constructor": false}, {"identifier": "getJAXBExpressionType", "parameters": "()", "modifiers": "@Override public", "return": "JAXBElement<?>", "signature": "JAXBElement<?> getJAXBExpressionType()", "full_signature": "@Override public JAXBElement<?> getJAXBExpressionType()", "class_method_signature": "RealFunction.getJAXBExpressionType()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<SymbolizerNode>", "signature": "List<SymbolizerNode> getChildren()", "full_signature": "@Override public List<SymbolizerNode> getChildren()", "class_method_signature": "RealFunction.getChildren()", "testcase": false, "constructor": false}], "file": "bundles/core-map/src/main/java/org/orbisgis/coremap/renderer/se/parameter/real/RealFunction.java"}, "focal_method": {"identifier": "getOperator", "parameters": "()", "modifiers": "public", "return": "Operators", "body": "public Operators getOperator() {\n            return op;\n    }", "signature": "Operators getOperator()", "full_signature": "public Operators getOperator()", "class_method_signature": "RealFunction.getOperator()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}