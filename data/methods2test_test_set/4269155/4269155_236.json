{"test_class": {"identifier": "MapEntryArrayValuesTest", "superclass": "", "interfaces": "", "fields": [], "file": "tiles-request-api/src/test/java/org/apache/tiles/request/collection/MapEntryArrayValuesTest.java"}, "test_case": {"identifier": "testEqualsObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEqualsObject() {\n        MapEntryArrayValues<String, String> entry = new MapEntryArrayValues<String, String>(\n                \"key\", new String[] { \"value1\", \"value2\" }, false);\n        assertFalse(entry.equals(null));\n        assertFalse(entry.equals(\"whatever\"));\n        MapEntryArrayValues<String, String> entry2 = new MapEntryArrayValues<String, String>(\n                \"key\", new String[] { \"value1\", \"value2\" }, false);\n        assertTrue(entry.equals(entry2));\n        entry2 = new MapEntryArrayValues<String, String>(\n                \"key\", null, false);\n        assertFalse(entry.equals(entry2));\n        entry2 = new MapEntryArrayValues<String, String>(\"key2\", new String[] {\n                \"value1\", \"value2\" }, false);\n        assertFalse(entry.equals(entry2));\n        entry2 = new MapEntryArrayValues<String, String>(\"key\", new String[] {\n                \"value1\", \"value3\" }, false);\n        assertFalse(entry.equals(entry2));\n        entry = new MapEntryArrayValues<String, String>(null, new String[] {\n                \"value1\", \"value2\" }, false);\n        entry2 = new MapEntryArrayValues<String, String>(null, new String[] {\n                \"value1\", \"value2\" }, false);\n        assertTrue(entry.equals(entry2));\n        entry = new MapEntryArrayValues<String, String>(\"key\", null, false);\n        entry2 = new MapEntryArrayValues<String, String>(\"key\", null, false);\n        assertTrue(entry.equals(entry2));\n        entry2 = new MapEntryArrayValues<String, String>(\"key\", new String[] {\n                \"value1\", \"value2\" }, false);\n        assertFalse(entry.equals(entry2));\n        entry = new MapEntryArrayValues<String, String>(null, new String[] {\n                null, \"value2\" }, false);\n        entry2 = new MapEntryArrayValues<String, String>(null, new String[] {\n                null, \"value2\" }, false);\n        assertTrue(entry.equals(entry2));\n        entry2 = new MapEntryArrayValues<String, String>(null, new String[] {\n                \"value1\", \"value2\" }, false);\n        assertFalse(entry.equals(entry2));\n    }", "signature": "void testEqualsObject()", "full_signature": "@Test public void testEqualsObject()", "class_method_signature": "MapEntryArrayValuesTest.testEqualsObject()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "MapEntryArrayValues", "superclass": "extends MapEntry<K, V[]>", "interfaces": "", "fields": [], "methods": [{"identifier": "MapEntryArrayValues", "parameters": "(K key, V[] value, boolean modifiable)", "modifiers": "public", "return": "", "signature": " MapEntryArrayValues(K key, V[] value, boolean modifiable)", "full_signature": "public  MapEntryArrayValues(K key, V[] value, boolean modifiable)", "class_method_signature": "MapEntryArrayValues.MapEntryArrayValues(K key, V[] value, boolean modifiable)", "testcase": false, "constructor": true}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MapEntryArrayValues.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public boolean equals(Object o)", "class_method_signature": "MapEntryArrayValues.equals(Object o)", "testcase": false, "constructor": false}], "file": "tiles-request-api/src/main/java/org/apache/tiles/request/collection/MapEntryArrayValues.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "boolean", "body": "@Override\n    @SuppressWarnings(\"unchecked\")\n    public boolean equals(Object o) {\n        if (o != null && o instanceof Map.Entry) {\n            Map.Entry<K, V[]> entry = (Map.Entry<K, V[]>) o;\n            if (this.getKey() == null ? entry.getKey() == null : this\n                    .getKey().equals(entry.getKey())) {\n                V[] values = getValue();\n                V[] otherValues = entry.getValue();\n                if (values != null) {\n                    if (otherValues != null) {\n                        if (values.length == otherValues.length) {\n                            boolean same = true;\n                            for (int i = 0; i < values.length && same; i++) {\n                                same = values[i] == null ? otherValues[i] == null\n                                        : values[i].equals(otherValues[i]);\n                            }\n                            return same;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return otherValues == null;\n                }\n            }\n        }\n        return false;\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public boolean equals(Object o)", "class_method_signature": "MapEntryArrayValues.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getKey", "getKey", "equals", "getKey", "getKey", "getValue", "getValue", "equals"]}, "repository": {"repo_id": 4269155, "url": "https://github.com/apache/tiles-request", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 865, "license": "licensed"}}