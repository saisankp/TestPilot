{"test_class": {"identifier": "I18nConfigOptionsProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final I18nConfigOptionsProvider provider = new I18nConfigOptionsProvider();", "modifier": "private final", "type": "I18nConfigOptionsProvider", "declarator": "provider = new I18nConfigOptionsProvider()", "var_name": "provider"}, {"original_string": "private final URI uriI18N = URI.create(\"system:i18n\");", "modifier": "private final", "type": "URI", "declarator": "uriI18N = URI.create(\"system:i18n\")", "var_name": "uriI18N"}, {"original_string": "private final ParameterOption empty = new ParameterOption(\"\", \"\");", "modifier": "private final", "type": "ParameterOption", "declarator": "empty = new ParameterOption(\"\", \"\")", "var_name": "empty"}, {"original_string": "private final ParameterOption expectedLangEN = new ParameterOption(\"en\", \"English\");", "modifier": "private final", "type": "ParameterOption", "declarator": "expectedLangEN = new ParameterOption(\"en\", \"English\")", "var_name": "expectedLangEN"}, {"original_string": "private final ParameterOption expectedLangFR = new ParameterOption(\"en\", \"anglais\");", "modifier": "private final", "type": "ParameterOption", "declarator": "expectedLangFR = new ParameterOption(\"en\", \"anglais\")", "var_name": "expectedLangFR"}, {"original_string": "private final ParameterOption expectedCntryEN = new ParameterOption(\"US\", \"United States\");", "modifier": "private final", "type": "ParameterOption", "declarator": "expectedCntryEN = new ParameterOption(\"US\", \"United States\")", "var_name": "expectedCntryEN"}, {"original_string": "private final ParameterOption expectedCntryFRJava8 = new ParameterOption(\"US\", \"Etats-Unis\");", "modifier": "private final", "type": "ParameterOption", "declarator": "expectedCntryFRJava8 = new ParameterOption(\"US\", \"Etats-Unis\")", "var_name": "expectedCntryFRJava8"}, {"original_string": "private final ParameterOption expectedCntryFRJava9 = new ParameterOption(\"US\", \"\u00c9tats-Unis\");", "modifier": "private final", "type": "ParameterOption", "declarator": "expectedCntryFRJava9 = new ParameterOption(\"US\", \"\u00c9tats-Unis\");", "var_name": "expectedCntryFRJava9"}], "file": "bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/i18n/I18nConfigOptionsProviderTest.java"}, "test_case": {"identifier": "testRegion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRegion() {\n        assertThat(provider.getParameterOptions(uriI18N, \"region\", null, Locale.US), hasItem(expectedCntryEN));\n        assertThat(provider.getParameterOptions(uriI18N, \"region\", null, Locale.US), not(hasItem(empty)));\n\n        assertThat(provider.getParameterOptions(uriI18N, \"region\", null, Locale.FRENCH),\n                anyOf(hasItem(expectedCntryFRJava8), hasItem(expectedCntryFRJava9)));\n        assertThat(provider.getParameterOptions(uriI18N, \"region\", null, Locale.FRENCH), not(hasItem(empty)));\n\n        assertThat(provider.getParameterOptions(uriI18N, \"region\", null, null), not(IsEmptyCollection.empty()));\n    }", "signature": "void testRegion()", "full_signature": "@Test public void testRegion()", "class_method_signature": "I18nConfigOptionsProviderTest.testRegion()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getParameterOptions", "hasItem", "assertThat", "getParameterOptions", "not", "hasItem", "assertThat", "getParameterOptions", "anyOf", "hasItem", "hasItem", "assertThat", "getParameterOptions", "not", "hasItem", "assertThat", "getParameterOptions", "not", "empty"]}, "focal_class": {"identifier": "I18nConfigOptionsProvider", "superclass": "", "interfaces": "implements ConfigOptionProvider", "fields": [{"original_string": "private static final String NO_OFFSET_FORMAT = \"(GMT) %s\";", "modifier": "private static final", "type": "String", "declarator": "NO_OFFSET_FORMAT = \"(GMT) %s\"", "var_name": "NO_OFFSET_FORMAT"}, {"original_string": "private static final String NEGATIVE_OFFSET_FORMAT = \"(GMT%d:%02d) %s\";", "modifier": "private static final", "type": "String", "declarator": "NEGATIVE_OFFSET_FORMAT = \"(GMT%d:%02d) %s\"", "var_name": "NEGATIVE_OFFSET_FORMAT"}, {"original_string": "private static final String POSITIVE_OFFSET_FORMAT = \"(GMT+%d:%02d) %s\";", "modifier": "private static final", "type": "String", "declarator": "POSITIVE_OFFSET_FORMAT = \"(GMT+%d:%02d) %s\"", "var_name": "POSITIVE_OFFSET_FORMAT"}], "methods": [{"identifier": "getParameterOptions", "parameters": "(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale)", "modifiers": "@Override public @Nullable", "return": "Collection<ParameterOption>", "signature": "Collection<ParameterOption> getParameterOptions(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale)", "full_signature": "@Override public @Nullable Collection<ParameterOption> getParameterOptions(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale)", "class_method_signature": "I18nConfigOptionsProvider.getParameterOptions(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale)", "testcase": false, "constructor": false}, {"identifier": "processParamType", "parameters": "(String param, @Nullable Locale locale,\n            Locale translation)", "modifiers": "private @Nullable", "return": "Collection<ParameterOption>", "signature": "Collection<ParameterOption> processParamType(String param, @Nullable Locale locale,\n            Locale translation)", "full_signature": "private @Nullable Collection<ParameterOption> processParamType(String param, @Nullable Locale locale,\n            Locale translation)", "class_method_signature": "I18nConfigOptionsProvider.processParamType(String param, @Nullable Locale locale,\n            Locale translation)", "testcase": false, "constructor": false}, {"identifier": "getTimeZoneRepresentation", "parameters": "(TimeZone tz)", "modifiers": "private static", "return": "String", "signature": "String getTimeZoneRepresentation(TimeZone tz)", "full_signature": "private static String getTimeZoneRepresentation(TimeZone tz)", "class_method_signature": "I18nConfigOptionsProvider.getTimeZoneRepresentation(TimeZone tz)", "testcase": false, "constructor": false}, {"identifier": "getAvailable", "parameters": "(@Nullable Locale locale,\n            Function<Locale, ParameterOption> mapFunction)", "modifiers": "private", "return": "Collection<ParameterOption>", "signature": "Collection<ParameterOption> getAvailable(@Nullable Locale locale,\n            Function<Locale, ParameterOption> mapFunction)", "full_signature": "private Collection<ParameterOption> getAvailable(@Nullable Locale locale,\n            Function<Locale, ParameterOption> mapFunction)", "class_method_signature": "I18nConfigOptionsProvider.getAvailable(@Nullable Locale locale,\n            Function<Locale, ParameterOption> mapFunction)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/i18n/I18nConfigOptionsProvider.java"}, "focal_method": {"identifier": "getParameterOptions", "parameters": "(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale)", "modifiers": "@Override public @Nullable", "return": "Collection<ParameterOption>", "body": "@Override\n    public @Nullable Collection<ParameterOption> getParameterOptions(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale) {\n        if (\"system:i18n\".equals(uri.toString())) {\n            Locale translation = locale != null ? locale : Locale.getDefault();\n            return processParamType(param, locale, translation);\n        }\n        return null;\n    }", "signature": "Collection<ParameterOption> getParameterOptions(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale)", "full_signature": "@Override public @Nullable Collection<ParameterOption> getParameterOptions(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale)", "class_method_signature": "I18nConfigOptionsProvider.getParameterOptions(URI uri, String param, @Nullable String context,\n            @Nullable Locale locale)", "testcase": false, "constructor": false, "invocations": ["equals", "toString", "getDefault", "processParamType"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}