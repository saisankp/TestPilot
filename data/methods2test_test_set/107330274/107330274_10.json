{"test_class": {"identifier": "FilterDataGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/data/generator/internal/FilterDataGeneratorTest.java"}, "test_case": {"identifier": "testFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFilter() throws Exception {\n        DataGenerator<List<Long>> filteredBatch = DataGenerator.range(0, 9).filter(v -> v % 2 == 0).batch(5);\n\n        assertThat(filteredBatch.getValue()).contains(0L, 2L, 4L, 6L, 8L);\n        assertThat(filteredBatch.isClosed()).isFalse();\n        assertThat(filteredBatch.apply().isClosed()).isTrue();\n    }", "signature": "void testFilter()", "full_signature": "@Test public void testFilter()", "class_method_signature": "FilterDataGeneratorTest.testFilter()", "testcase": true, "constructor": false, "invocations": ["batch", "filter", "range", "contains", "assertThat", "getValue", "isFalse", "assertThat", "isClosed", "isTrue", "assertThat", "isClosed", "apply"]}, "focal_class": {"identifier": "FilterDataGenerator", "superclass": "extends DataGenerator<A>", "interfaces": "", "fields": [{"original_string": "private final DataGenerator<A> source;", "modifier": "private final", "type": "DataGenerator<A>", "declarator": "source", "var_name": "source"}, {"original_string": "private final Function<A, Boolean> predicate;", "modifier": "private final", "type": "Function<A, Boolean>", "declarator": "predicate", "var_name": "predicate"}], "methods": [{"identifier": "FilterDataGenerator", "parameters": "(DataGenerator<A> source, Function<A, Boolean> predicate)", "modifiers": "private", "return": "", "signature": " FilterDataGenerator(DataGenerator<A> source, Function<A, Boolean> predicate)", "full_signature": "private  FilterDataGenerator(DataGenerator<A> source, Function<A, Boolean> predicate)", "class_method_signature": "FilterDataGenerator.FilterDataGenerator(DataGenerator<A> source, Function<A, Boolean> predicate)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "()", "modifiers": "@Override public", "return": "DataGenerator<A>", "signature": "DataGenerator<A> apply()", "full_signature": "@Override public DataGenerator<A> apply()", "class_method_signature": "FilterDataGenerator.apply()", "testcase": false, "constructor": false}, {"identifier": "getOptionalValue", "parameters": "()", "modifiers": "@Override public", "return": "Optional<A>", "signature": "Optional<A> getOptionalValue()", "full_signature": "@Override public Optional<A> getOptionalValue()", "class_method_signature": "FilterDataGenerator.getOptionalValue()", "testcase": false, "constructor": false}, {"identifier": "findNext", "parameters": "(DataGenerator<A> source, Function<A, Boolean> predicate)", "modifiers": "private static", "return": "DataGenerator<A>", "signature": "DataGenerator<A> findNext(DataGenerator<A> source, Function<A, Boolean> predicate)", "full_signature": "private static DataGenerator<A> findNext(DataGenerator<A> source, Function<A, Boolean> predicate)", "class_method_signature": "FilterDataGenerator.findNext(DataGenerator<A> source, Function<A, Boolean> predicate)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(DataGenerator<A> source, Function<A, Boolean> predicate)", "modifiers": "public static", "return": "DataGenerator<A>", "signature": "DataGenerator<A> newInstance(DataGenerator<A> source, Function<A, Boolean> predicate)", "full_signature": "public static DataGenerator<A> newInstance(DataGenerator<A> source, Function<A, Boolean> predicate)", "class_method_signature": "FilterDataGenerator.newInstance(DataGenerator<A> source, Function<A, Boolean> predicate)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/data/generator/internal/FilterDataGenerator.java"}, "focal_method": {"identifier": "apply", "parameters": "()", "modifiers": "@Override public", "return": "DataGenerator<A>", "body": "@Override\n    public DataGenerator<A> apply() {\n        DataGenerator<A> nextGen = source.apply();\n        if (nextGen.isClosed()) {\n            return (DataGenerator<A>) EOS;\n        }\n        return new FilterDataGenerator<>(nextGen, predicate);\n    }", "signature": "DataGenerator<A> apply()", "full_signature": "@Override public DataGenerator<A> apply()", "class_method_signature": "FilterDataGenerator.apply()", "testcase": false, "constructor": false, "invocations": ["apply", "isClosed"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}