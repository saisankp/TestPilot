{"test_class": {"identifier": "MongoLogServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private LogService logService;", "modifier": "@Autowired\n    private", "type": "LogService", "declarator": "logService", "var_name": "logService"}], "file": "myth-admin/src/test/java/org/dromara/myth/admin/service/log/MongoLogServiceImplTest.java"}, "test_case": {"identifier": "listByPage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void listByPage() {\n\n        ConditionQuery query = new ConditionQuery();\n\n        query.setApplicationName(\"alipay-service\");\n\n        PageParameter pageParameter = new PageParameter(1, 5);\n\n        query.setPageParameter(pageParameter);\n\n        final CommonPager<LogVO> voCommonPager = logService.listByPage(query);\n\n\n    }", "signature": "void listByPage()", "full_signature": "@Test public void listByPage()", "class_method_signature": "MongoLogServiceImplTest.listByPage()", "testcase": true, "constructor": false, "invocations": ["setApplicationName", "setPageParameter", "listByPage"]}, "focal_class": {"identifier": "MongoLogServiceImpl", "superclass": "", "interfaces": "implements LogService", "fields": [{"original_string": "private final MongoTemplate mongoTemplate;", "modifier": "private final", "type": "MongoTemplate", "declarator": "mongoTemplate", "var_name": "mongoTemplate"}], "methods": [{"identifier": "listByPage", "parameters": "(final ConditionQuery query)", "modifiers": "@Override public", "return": "CommonPager<LogVO>", "signature": "CommonPager<LogVO> listByPage(final ConditionQuery query)", "full_signature": "@Override public CommonPager<LogVO> listByPage(final ConditionQuery query)", "class_method_signature": "MongoLogServiceImpl.listByPage(final ConditionQuery query)", "testcase": false, "constructor": false}, {"identifier": "batchRemove", "parameters": "(final List<String> ids, final String appName)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean batchRemove(final List<String> ids, final String appName)", "full_signature": "@Override public Boolean batchRemove(final List<String> ids, final String appName)", "class_method_signature": "MongoLogServiceImpl.batchRemove(final List<String> ids, final String appName)", "testcase": false, "constructor": false}, {"identifier": "updateRetry", "parameters": "(final String id, final Integer retry, final String appName)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean updateRetry(final String id, final Integer retry, final String appName)", "full_signature": "@Override public Boolean updateRetry(final String id, final Integer retry, final String appName)", "class_method_signature": "MongoLogServiceImpl.updateRetry(final String id, final Integer retry, final String appName)", "testcase": false, "constructor": false}], "file": "myth-admin/src/main/java/org/dromara/myth/admin/service/log/MongoLogServiceImpl.java"}, "focal_method": {"identifier": "listByPage", "parameters": "(final ConditionQuery query)", "modifiers": "@Override public", "return": "CommonPager<LogVO>", "body": "@Override\n    public CommonPager<LogVO> listByPage(final ConditionQuery query) {\n        CommonPager<LogVO> voCommonPager = new CommonPager<>();\n        final String mongoTableName =\n                RepositoryPathUtils.buildMongoTableName(query.getApplicationName());\n        final PageParameter pageParameter = query.getPageParameter();\n        Query baseQuery = new Query();\n        if (StringUtils.isNoneBlank(query.getTransId())) {\n            baseQuery.addCriteria(new Criteria(\"transId\").is(query.getTransId()));\n        }\n        final long totalCount = mongoTemplate.count(baseQuery, mongoTableName);\n        if (totalCount <= 0) {\n            return voCommonPager;\n        }\n        final int currentPage = pageParameter.getCurrentPage();\n        final int pageSize = pageParameter.getPageSize();\n        int start = (currentPage - 1) * pageSize;\n        voCommonPager.setPage(PageHelper.buildPage(query.getPageParameter(), (int) totalCount));\n        baseQuery.skip(start).limit(pageSize);\n        final List<MongoAdapter> mongoAdapters =\n                mongoTemplate.find(baseQuery, MongoAdapter.class, mongoTableName);\n        if (CollectionUtils.isNotEmpty(mongoAdapters)) {\n            final List<LogVO> recoverVOS =\n                    mongoAdapters\n                            .stream()\n                            .map(ConvertHelper::buildVO)\n                            .collect(Collectors.toList());\n            voCommonPager.setDataList(recoverVOS);\n        }\n        return voCommonPager;\n    }", "signature": "CommonPager<LogVO> listByPage(final ConditionQuery query)", "full_signature": "@Override public CommonPager<LogVO> listByPage(final ConditionQuery query)", "class_method_signature": "MongoLogServiceImpl.listByPage(final ConditionQuery query)", "testcase": false, "constructor": false, "invocations": ["buildMongoTableName", "getApplicationName", "getPageParameter", "isNoneBlank", "getTransId", "addCriteria", "is", "getTransId", "count", "getCurrentPage", "getPageSize", "setPage", "buildPage", "getPageParameter", "limit", "skip", "find", "isNotEmpty", "collect", "map", "stream", "toList", "setDataList"]}, "repository": {"repo_id": 112703947, "url": "https://github.com/Dromara/myth", "language": "Java", "is_fork": false, "fork_count": 621, "stargazer_count": 1416, "size": 1399, "license": "licensed"}}