{"test_class": {"identifier": "GetRasterTilesCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double DOUBLE_TOLERANCE = .0000000001;", "modifier": "private static final", "type": "double", "declarator": "DOUBLE_TOLERANCE = .0000000001", "var_name": "DOUBLE_TOLERANCE"}, {"original_string": "private static final String CRS = \"EPSG:4326\";", "modifier": "private static final", "type": "String", "declarator": "CRS = \"EPSG:4326\"", "var_name": "CRS"}, {"original_string": "@Autowired\n\tprivate CommandDispatcher dispatcher;", "modifier": "@Autowired\n\tprivate", "type": "CommandDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}, {"original_string": "@Autowired\n\tprivate DtoConverterService dtoConverter;", "modifier": "@Autowired\n\tprivate", "type": "DtoConverterService", "declarator": "dtoConverter", "var_name": "dtoConverter"}], "file": "command/src/test/java/org/geomajas/command/render/GetRasterTilesCommandTest.java"}, "test_case": {"identifier": "testNoLayerIdRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testNoLayerIdRequest() throws Exception {\n\t\tGetRasterTilesRequest request = new GetRasterTilesRequest();\n\t\trequest.setCrs(CRS);\n\t\tGetRasterTilesResponse response = (GetRasterTilesResponse) dispatcher.execute(\n\t\t\t\tGetRasterTilesRequest.COMMAND, request, null, \"en\");\n\t\tAssert.assertTrue(response.isError());\n\t\tAssert.assertTrue(response.getErrors().get(0) instanceof GeomajasException);\n\t\tAssert.assertEquals(ExceptionCode.PARAMETER_MISSING,\n\t\t\t\t((GeomajasException) response.getErrors().get(0)).getExceptionCode());\n\t}", "signature": "void testNoLayerIdRequest()", "full_signature": "@Test public void testNoLayerIdRequest()", "class_method_signature": "GetRasterTilesCommandTest.testNoLayerIdRequest()", "testcase": true, "constructor": false, "invocations": ["setCrs", "execute", "assertTrue", "isError", "assertTrue", "get", "getErrors", "assertEquals", "getExceptionCode", "get", "getErrors"]}, "focal_class": {"identifier": "GetRasterTilesCommand", "superclass": "", "interfaces": "implements CommandHasRequest<GetRasterTilesRequest, GetRasterTilesResponse>", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(GetRasterTilesCommand.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(GetRasterTilesCommand.class)", "var_name": "log"}, {"original_string": "@Autowired\n\tprivate DtoConverterService converterService;", "modifier": "@Autowired\n\tprivate", "type": "DtoConverterService", "declarator": "converterService", "var_name": "converterService"}, {"original_string": "@Autowired\n\tprivate SecurityContext securityContext;", "modifier": "@Autowired\n\tprivate", "type": "SecurityContext", "declarator": "securityContext", "var_name": "securityContext"}, {"original_string": "@Autowired\n\tprivate RasterLayerService layerService;", "modifier": "@Autowired\n\tprivate", "type": "RasterLayerService", "declarator": "layerService", "var_name": "layerService"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}], "methods": [{"identifier": "getEmptyCommandRequest", "parameters": "()", "modifiers": "@Override public", "return": "GetRasterTilesRequest", "signature": "GetRasterTilesRequest getEmptyCommandRequest()", "full_signature": "@Override public GetRasterTilesRequest getEmptyCommandRequest()", "class_method_signature": "GetRasterTilesCommand.getEmptyCommandRequest()", "testcase": false, "constructor": false}, {"identifier": "getEmptyCommandResponse", "parameters": "()", "modifiers": "@Override public", "return": "GetRasterTilesResponse", "signature": "GetRasterTilesResponse getEmptyCommandResponse()", "full_signature": "@Override public GetRasterTilesResponse getEmptyCommandResponse()", "class_method_signature": "GetRasterTilesCommand.getEmptyCommandResponse()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(GetRasterTilesRequest request, GetRasterTilesResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void execute(GetRasterTilesRequest request, GetRasterTilesResponse response)", "full_signature": "@Override public void execute(GetRasterTilesRequest request, GetRasterTilesResponse response)", "class_method_signature": "GetRasterTilesCommand.execute(GetRasterTilesRequest request, GetRasterTilesResponse response)", "testcase": false, "constructor": false}], "file": "command/src/main/java/org/geomajas/command/render/GetRasterTilesCommand.java"}, "focal_method": {"identifier": "execute", "parameters": "(GetRasterTilesRequest request, GetRasterTilesResponse response)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void execute(GetRasterTilesRequest request, GetRasterTilesResponse response) throws Exception {\n\t\tlog.debug(\"request start layer {}, crs {}\", request.getLayerId(), request.getCrs());\n\t\tString layerId = request.getLayerId();\n\t\tif (null == layerId) {\n\t\t\tthrow new GeomajasException(ExceptionCode.PARAMETER_MISSING, \"layer\");\n\t\t}\n\t\tif (null == request.getCrs()) {\n\t\t\tthrow new GeomajasException(ExceptionCode.PARAMETER_MISSING, \"crs\");\n\t\t}\n\t\tif (!securityContext.isLayerVisible(layerId)) {\n\t\t\tthrow new GeomajasSecurityException(ExceptionCode.LAYER_NOT_VISIBLE, layerId, securityContext.getUserId());\n\t\t}\n\n\t\tlog.debug(\"execute() : bbox {}\", request.getBbox());\n\t\tList<RasterTile> images = layerService.getTiles(layerId, geoService.getCrs2(request.getCrs()),\n\t\t\t\tconverterService.toInternal(request.getBbox()),\trequest.getScale());\n\t\tlog.debug(\"execute() : returning {} images\", images.size());\n\n\t\tresponse.setRasterData(images);\n\t\tif (images.size() > 0) {\n\t\t\tresponse.setNodeId(layerId + \".\" + images.get(0).getCode().getTileLevel());\n\t\t}\n\t}", "signature": "void execute(GetRasterTilesRequest request, GetRasterTilesResponse response)", "full_signature": "@Override public void execute(GetRasterTilesRequest request, GetRasterTilesResponse response)", "class_method_signature": "GetRasterTilesCommand.execute(GetRasterTilesRequest request, GetRasterTilesResponse response)", "testcase": false, "constructor": false, "invocations": ["debug", "getLayerId", "getCrs", "getLayerId", "getCrs", "isLayerVisible", "getUserId", "debug", "getBbox", "getTiles", "getCrs2", "getCrs", "toInternal", "getBbox", "getScale", "debug", "size", "setRasterData", "size", "setNodeId", "getTileLevel", "getCode", "get"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}