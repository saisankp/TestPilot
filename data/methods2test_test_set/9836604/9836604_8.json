{"test_class": {"identifier": "DefaultLoginResultToViewTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultLoginResultToView loginResultToView = new DefaultLoginResultToView();", "modifier": "private", "type": "DefaultLoginResultToView", "declarator": "loginResultToView = new DefaultLoginResultToView()", "var_name": "loginResultToView"}], "file": "ki4so-web/src/test/java/com/github/ebnew/ki4so/web/action/DefaultLoginResultToViewTest.java"}, "test_case": {"identifier": "testLoginResultToView", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLoginResultToView(){\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u8f93\u5165null\u7684\u60c5\u51b5\u3002\n\t\t */\n\t\tAssert.assertNotNull(loginResultToView.loginResultToView(null, null, null, null));\n\t\t/**\n\t\t * \u6d4b\u8bd5\u8f93\u5165null\u7684\u60c5\u51b5\u3002\n\t\t */\n\t\tAssert.assertNotNull(loginResultToView.loginResultToView(new ModelAndView(), null, null, null));\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u8f93\u5165null\u7684\u60c5\u51b5\u3002\n\t\t */\n\t\tAssert.assertNotNull(loginResultToView.loginResultToView(new ModelAndView(), new LoginResult(), null, null));\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u8f93\u5165null\u7684\u60c5\u51b5\u3002\n\t\t */\n\t\tAssert.assertNotNull(loginResultToView.loginResultToView(new ModelAndView(), new LoginResult(), new MockHttpServletRequest(), null));\n\t\t\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u767b\u5f55\u5931\u8d25\u7684\u60c5\u51b5\u3002\n\t\t */\n\t\t//\u51c6\u5907\u6d4b\u8bd5\u8f93\u5165\u6570\u636e\u3002\n\t\tModelAndView mv = new ModelAndView();\n\t\tMockHttpServletRequest request = new MockHttpServletRequest();\n\t\tMockHttpServletResponse response = new MockHttpServletResponse();\n\t\tLoginResult result = new LoginResult();\n\t\tresult.setSuccess(false);\n\t\tresult.setCode(InvalidCredentialException.CODE);\n\t\tresult.setMsgKey(InvalidCredentialException.MSG_KEY);\n\t\trequest.setCookies(new Cookie(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY, \"test\"));\n\t\tModelAndView mvResult = loginResultToView.loginResultToView(mv, result, request, response);\n\t\t//\u68c0\u67e5\u8f93\u51fa\u7ed3\u679c\u3002\n\t\tAssert.assertNotNull(mvResult);\n\t\tAssert.assertEquals(InvalidCredentialException.CODE, mvResult.getModel().get(\"code\"));\n\t\tAssert.assertEquals(MessageUtils.getMessage(InvalidCredentialException.MSG_KEY), mvResult.getModel().get(\"msg\"));\n\t\tAssert.assertEquals(\"test\", response.getCookie(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY).getValue());\n\t\t\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u767b\u5f55\u6210\u529f\u7684\u60c5\u51b5\uff0c\u4e0d\u5b58\u5728service\u53c2\u6570\u7684\u60c5\u51b5\u3002\n\t\t */\n\t\t//\u51c6\u5907\u6d4b\u8bd5\u8f93\u5165\u6570\u636e\u3002\n\t\tmv = new ModelAndView();\n\t\trequest = new MockHttpServletRequest();\n\t\tresponse = new MockHttpServletResponse();\n\t\tresult = new LoginResult();\n\t\trequest.getSession().setAttribute(WebConstants.KI4SO_SERVICE_KEY_IN_SESSION, \"service\");\n\t\tresult.setSuccess(true);\n\t\tAuthenticationImpl authentication = new AuthenticationImpl();\n\t\tMap<String, Object> attributes = new HashMap<String, Object>();\n\t\tauthentication.setAttributes(attributes);\n\t\tattributes.put(AuthenticationPostHandler.KI4SO_SERVER_EC_KEY, \"ki4so-sever-key\");\n\t\tresult.setAuthentication(authentication);\n\t\tmvResult = loginResultToView.loginResultToView(mv, result, request, response);\n\t\t//\u68c0\u67e5\u8f93\u51fa\u7ed3\u679c\u3002\n\t\tAssert.assertNotNull(mvResult);\n\t\tAssert.assertNull(request.getSession().getAttribute(WebConstants.KI4SO_SERVICE_KEY_IN_SESSION));\n\t\tAssert.assertEquals(\"loginSucess\", mvResult.getViewName());\n\t\tAssert.assertEquals(authentication, mvResult.getModel().get(\"authentication\"));\n\t\tAssert.assertEquals(\"ki4so-sever-key\", response.getCookie(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY).getValue());\n\t\t\n\t\t\n\n\t\t/**\n\t\t * \u6d4b\u8bd5\u767b\u5f55\u6210\u529f\u7684\u60c5\u51b5\uff0c\u7ed3\u679c\u4e2d\u5b58\u5728service\u53c2\u6570\uff0c\u5219\u5e94\u8be5\u8df3\u8f6c\u5230\u8be5\u5730\u5740\u53bb\u3002\n\t\t */\n\t\tmv = new ModelAndView();\n\t\trequest = new MockHttpServletRequest();\n\t\tresponse = new MockHttpServletResponse();\n\t\tresult = new LoginResult();\n\t\tresult.setSuccess(true);\n\t\tauthentication = new AuthenticationImpl();\n\t\tattributes = new HashMap<String, Object>();\n\t\tauthentication.setAttributes(attributes);\n\t\tattributes.put(AuthenticationPostHandler.KI4SO_SERVER_EC_KEY, \"ki4so-sever-key\");\n\t\tattributes.put(AuthenticationPostHandler.KI4SO_CLIENT_EC_KEY, \"ki4so-client-key\");\n\t\tattributes.put(WebConstants.SERVICE_PARAM_NAME, \"htpp://localhost:8080/space-web/hello.jsp\");\n\t\tresult.setAuthentication(authentication);\n\t\tmvResult = loginResultToView.loginResultToView(mv, result, request, response);\n\t\t//\u68c0\u67e5\u8f93\u51fa\u7ed3\u679c\u3002\n\t\tAssert.assertNotNull(mvResult);\n\t\tAssert.assertNull(request.getSession().getAttribute(WebConstants.KI4SO_SERVICE_KEY_IN_SESSION));\n\t\tAssert.assertTrue(mvResult.getView() instanceof RedirectView);\n\t\tRedirectView view = (RedirectView)mvResult.getView();\n\t\tAssert.assertEquals(\"htpp://localhost:8080/space-web/hello.jsp?\"+WebConstants.KI4SO_CLIENT_ENCRYPTED_CREDENTIAL_COOKIE_KEY+\"=ki4so-client-key\",view.getUrl());\n\t\tAssert.assertEquals(authentication, mvResult.getModel().get(\"authentication\"));\n\t\tAssert.assertEquals(\"ki4so-sever-key\", response.getCookie(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY).getValue());\n\t\t\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u767b\u5f55\u6210\u529f\u7684\u60c5\u51b5\uff0c\u7ed3\u679c\u4e2d\u5b58\u5728service\u53c2\u6570\uff0c\u4e14URL\u5730\u5740\u4e2d\u662f\u5e26\"?\"\u7684\u3002\n\t\t */\n\t\tmv = new ModelAndView();\n\t\trequest = new MockHttpServletRequest();\n\t\tresponse = new MockHttpServletResponse();\n\t\tresult = new LoginResult();\n\t\tresult.setSuccess(true);\n\t\tauthentication = new AuthenticationImpl();\n\t\tattributes = new HashMap<String, Object>();\n\t\tauthentication.setAttributes(attributes);\n\t\tattributes.put(AuthenticationPostHandler.KI4SO_SERVER_EC_KEY, \"ki4so-sever-key\");\n\t\tattributes.put(AuthenticationPostHandler.KI4SO_CLIENT_EC_KEY, \"ki4so-client-key\");\n\t\tattributes.put(WebConstants.SERVICE_PARAM_NAME, \"htpp://localhost:8080/space-web/hello.jsp?hello=word\");\n\t\tresult.setAuthentication(authentication);\n\t\tmvResult = loginResultToView.loginResultToView(mv, result, request, response);\n\t\t//\u68c0\u67e5\u8f93\u51fa\u7ed3\u679c\u3002\n\t\tAssert.assertNotNull(mvResult);\n\t\tAssert.assertNull(request.getSession().getAttribute(WebConstants.KI4SO_SERVICE_KEY_IN_SESSION));\n\t\tAssert.assertTrue(mvResult.getView() instanceof RedirectView);\n\t\tview = (RedirectView)mvResult.getView();\n\t\tAssert.assertEquals(\"htpp://localhost:8080/space-web/hello.jsp?hello=word&\"+WebConstants.KI4SO_CLIENT_ENCRYPTED_CREDENTIAL_COOKIE_KEY+\"=ki4so-client-key\",view.getUrl());\n\t\tAssert.assertEquals(authentication, mvResult.getModel().get(\"authentication\"));\n\t\tAssert.assertEquals(\"ki4so-sever-key\", response.getCookie(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY).getValue());\n\t}", "signature": "void testLoginResultToView()", "full_signature": "@Test public void testLoginResultToView()", "class_method_signature": "DefaultLoginResultToViewTest.testLoginResultToView()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "loginResultToView", "assertNotNull", "loginResultToView", "assertNotNull", "loginResultToView", "assertNotNull", "loginResultToView", "setSuccess", "setCode", "setMsgKey", "setCookies", "loginResultToView", "assertNotNull", "assertEquals", "get", "getModel", "assertEquals", "getMessage", "get", "getModel", "assertEquals", "getValue", "getCookie", "setAttribute", "getSession", "setSuccess", "setAttributes", "put", "setAuthentication", "loginResultToView", "assertNotNull", "assertNull", "getAttribute", "getSession", "assertEquals", "getViewName", "assertEquals", "get", "getModel", "assertEquals", "getValue", "getCookie", "setSuccess", "setAttributes", "put", "put", "put", "setAuthentication", "loginResultToView", "assertNotNull", "assertNull", "getAttribute", "getSession", "assertTrue", "getView", "getView", "assertEquals", "getUrl", "assertEquals", "get", "getModel", "assertEquals", "getValue", "getCookie", "setSuccess", "setAttributes", "put", "put", "put", "setAuthentication", "loginResultToView", "assertNotNull", "assertNull", "getAttribute", "getSession", "assertTrue", "getView", "getView", "assertEquals", "getUrl", "assertEquals", "get", "getModel", "assertEquals", "getValue", "getCookie"]}, "focal_class": {"identifier": "DefaultLoginResultToView", "superclass": "", "interfaces": "implements LoginResultToView", "fields": [], "methods": [{"identifier": "loginResultToView", "parameters": "(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "modifiers": "@Override public", "return": "ModelAndView", "signature": "ModelAndView loginResultToView(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "full_signature": "@Override public ModelAndView loginResultToView(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "class_method_signature": "DefaultLoginResultToView.loginResultToView(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "buildRedirectView", "parameters": "(String service,\n\t\t\tString encryCredential)", "modifiers": "private", "return": "RedirectView", "signature": "RedirectView buildRedirectView(String service,\n\t\t\tString encryCredential)", "full_signature": "private RedirectView buildRedirectView(String service,\n\t\t\tString encryCredential)", "class_method_signature": "DefaultLoginResultToView.buildRedirectView(String service,\n\t\t\tString encryCredential)", "testcase": false, "constructor": false}], "file": "ki4so-web/src/main/java/com/github/ebnew/ki4so/web/action/DefaultLoginResultToView.java"}, "focal_method": {"identifier": "loginResultToView", "parameters": "(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "modifiers": "@Override public", "return": "ModelAndView", "body": "@Override\n\tpublic ModelAndView loginResultToView(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response) {\n\t\t// \u82e5\u767b\u5f55\u6210\u529f\uff0c\u5219\u8fd4\u56de\u6210\u529f\u9875\u9762\u3002\n\t\tif(mv==null){\n\t\t\tmv = new ModelAndView();\n\t\t}\n\t\tif(result==null || request==null || response==null){\n\t\t\treturn mv;\n\t\t}\n\t\tif (result.isSuccess()) {\n\t\t\t//\u767b\u5f55\u7ed3\u679c\u5bf9\u8c61\u3002\n\t\t\tAuthentication authentication = result.getAuthentication();\n\n\t\t\t//\u6e05\u9664session\u4e2d\u7684\u72b6\u6001\u4fe1\u606fservice\u503c\u3002\n\t\t\trequest.getSession().removeAttribute(WebConstants.KI4SO_SERVICE_KEY_IN_SESSION);\n\t\t\t\n\t\t\t// \u5982\u679c\u6709\u52a0\u5bc6\u51ed\u636e\u4fe1\u606f\uff0c\u5219\u5199\u5165\u52a0\u5bc6\u51ed\u636e\u503c\u5230cookie\u4e2d\u3002\n\t\t\tif (authentication != null\n\t\t\t\t\t&& authentication.getAttributes() != null) {\n\t\t\t\tMap<String, Object> attributes = authentication.getAttributes();\n\t\t\t\t// ki4so\u670d\u52a1\u7aef\u52a0\u5bc6\u7684\u51ed\u636e\u5b58\u5728\uff0c\u5219\u5199\u5165cookie\u4e2d\u3002\n\t\t\t\tif (attributes\n\t\t\t\t\t\t.get(AuthenticationPostHandler.KI4SO_SERVER_EC_KEY) != null) {\n\t\t\t\t\tresponse.addCookie(new Cookie(\n\t\t\t\t\t\t\tWebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY,\n\t\t\t\t\t\t\tattributes\n\t\t\t\t\t\t\t\t\t.get(AuthenticationPostHandler.KI4SO_SERVER_EC_KEY)\n\t\t\t\t\t\t\t\t\t.toString()));\n\t\t\t\t}\n\t\t\t\t// ki4so\u5ba2\u6237\u7aef\u52a0\u5bc6\u7684\u51ed\u636e\u548c\u53c2\u6570service\u5b58\u5728\uff0c\u5219\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u9875\u9762\u4e2d\u3002\n\t\t\t\tif (attributes\n\t\t\t\t\t\t.get(AuthenticationPostHandler.KI4SO_CLIENT_EC_KEY) != null\n\t\t\t\t\t\t&& !StringUtils.isEmpty(attributes.get(WebConstants.SERVICE_PARAM_NAME))) {\n\t\t\t\t\tmv.getModel().put(\"authentication\", authentication);\n\t\t\t\t\tmv.setView(this\n\t\t\t\t\t\t\t.buildRedirectView(\n\t\t\t\t\t\t\t\t\tattributes.get(WebConstants.SERVICE_PARAM_NAME).toString(),\n\t\t\t\t\t\t\t\t\tattributes\n\t\t\t\t\t\t\t\t\t\t\t.get(AuthenticationPostHandler.KI4SO_CLIENT_EC_KEY)\n\t\t\t\t\t\t\t\t\t\t\t.toString()));\n\t\t\t\t\treturn mv;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmv.getModel().put(\"authentication\", authentication);\n\t\t\tmv.setViewName(\"loginSucess\");\n\t\t} else {\n\t\t\t//\u5220\u9664\u4ee5\u524d\u4e0d\u5408\u6cd5\u7684\u51ed\u636e\u4fe1\u606f\u3002\n\t\t\t//\u6e05\u9664cookie\u503c\u3002\n\t\t\tCookie[] cookies = request.getCookies();\n\t\t\tif(cookies!=null && cookies.length>0){\n\t\t\t\tfor(Cookie cookie:cookies){\n\t\t\t\t\tif(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY.equals(cookie.getName())){\n\t\t\t\t\t\t//\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a\u7acb\u5373\u3002\n\t\t\t\t\t\tcookie.setMaxAge(0);\n\t\t\t\t\t\tresponse.addCookie(cookie);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmv.getModel().put(\"code\", result.getCode());\n\t\t\tmv.getModel().put(\"msg\",\n\t\t\t\t\tMessageUtils.getMessage(result.getMsgKey()));\n\t\t}\n\t\treturn mv;\n\t}", "signature": "ModelAndView loginResultToView(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "full_signature": "@Override public ModelAndView loginResultToView(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "class_method_signature": "DefaultLoginResultToView.loginResultToView(ModelAndView mv, LoginResult result, HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["isSuccess", "getAuthentication", "removeAttribute", "getSession", "getAttributes", "getAttributes", "get", "addCookie", "toString", "get", "get", "isEmpty", "get", "put", "getModel", "setView", "buildRedirectView", "toString", "get", "toString", "get", "put", "getModel", "setViewName", "getCookies", "equals", "getName", "setMaxAge", "addCookie", "put", "getModel", "getCode", "put", "getModel", "getMessage", "getMsgKey"]}, "repository": {"repo_id": 9836604, "url": "https://github.com/ebnew/ki4so", "language": "Java", "is_fork": false, "fork_count": 84, "stargazer_count": 100, "size": 4421, "license": "licensed"}}