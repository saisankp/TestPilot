{"test_class": {"identifier": "HashTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/org/web3j/crypto/HashTest.java"}, "test_case": {"identifier": "testSha3String", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSha3String() {\n        assertThat(Hash.sha3String(\"\"),\n                is(\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\"));\n\n        assertThat(Hash.sha3String(\"EVWithdraw(address,uint256,bytes32)\"),\n                is(\"0x953d0c27f84a9649b0e121099ffa9aeb7ed83e65eaed41d3627f895790c72d41\"));\n    }", "signature": "void testSha3String()", "full_signature": "@Test public void testSha3String()", "class_method_signature": "HashTest.testSha3String()", "testcase": true, "constructor": false, "invocations": ["assertThat", "sha3String", "is", "assertThat", "sha3String", "is"]}, "focal_class": {"identifier": "Hash", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Hash", "parameters": "()", "modifiers": "private", "return": "", "signature": " Hash()", "full_signature": "private  Hash()", "class_method_signature": "Hash.Hash()", "testcase": false, "constructor": true}, {"identifier": "sha3", "parameters": "(String hexInput)", "modifiers": "public static", "return": "String", "signature": "String sha3(String hexInput)", "full_signature": "public static String sha3(String hexInput)", "class_method_signature": "Hash.sha3(String hexInput)", "testcase": false, "constructor": false}, {"identifier": "sha3", "parameters": "(byte[] input, int offset, int length)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] sha3(byte[] input, int offset, int length)", "full_signature": "public static byte[] sha3(byte[] input, int offset, int length)", "class_method_signature": "Hash.sha3(byte[] input, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "sha3", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] sha3(byte[] input)", "full_signature": "public static byte[] sha3(byte[] input)", "class_method_signature": "Hash.sha3(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "sha3String", "parameters": "(String utf8String)", "modifiers": "public static", "return": "String", "signature": "String sha3String(String utf8String)", "full_signature": "public static String sha3String(String utf8String)", "class_method_signature": "Hash.sha3String(String utf8String)", "testcase": false, "constructor": false}, {"identifier": "sha256", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] sha256(byte[] input)", "full_signature": "public static byte[] sha256(byte[] input)", "class_method_signature": "Hash.sha256(byte[] input)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/org/web3j/crypto/Hash.java"}, "focal_method": {"identifier": "sha3String", "parameters": "(String utf8String)", "modifiers": "public static", "return": "String", "body": "public static String sha3String(String utf8String) {\n        return Numeric.toHexString(sha3(utf8String.getBytes(Charset.forName(\"UTF-8\"))));\n    }", "signature": "String sha3String(String utf8String)", "full_signature": "public static String sha3String(String utf8String)", "class_method_signature": "Hash.sha3String(String utf8String)", "testcase": false, "constructor": false, "invocations": ["toHexString", "sha3", "getBytes", "forName"]}, "repository": {"repo_id": 149736342, "url": "https://github.com/BrahmaOS/brahmaos-web3j", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 1779, "license": "licensed"}}