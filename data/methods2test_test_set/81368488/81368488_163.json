{"test_class": {"identifier": "SecondScreenFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "gazeplay-commons/src/test/java/net/gazeplay/commons/gaze/SecondScreenFactoryTest.java"}, "test_case": {"identifier": "shouldLaunchSecondScreen", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldLaunchSecondScreen() throws InterruptedException {\n        Platform.runLater(() -> {\n            SecondScreen result = SecondScreenFactory.launch();\n            assertNotNull(result);\n        });\n        TestingUtils.waitForRunLater();\n    }", "signature": "void shouldLaunchSecondScreen()", "full_signature": "@Test void shouldLaunchSecondScreen()", "class_method_signature": "SecondScreenFactoryTest.shouldLaunchSecondScreen()", "testcase": true, "constructor": false, "invocations": ["runLater", "launch", "assertNotNull", "waitForRunLater"]}, "focal_class": {"identifier": "SecondScreenFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "launch", "parameters": "()", "modifiers": "public static", "return": "SecondScreen", "signature": "SecondScreen launch()", "full_signature": "public static SecondScreen launch()", "class_method_signature": "SecondScreenFactory.launch()", "testcase": false, "constructor": false}], "file": "gazeplay-commons/src/main/java/net/gazeplay/commons/gaze/SecondScreenFactory.java"}, "focal_method": {"identifier": "launch", "parameters": "()", "modifiers": "public static", "return": "SecondScreen", "body": "public static SecondScreen launch() {\n        final ObservableList<Screen> screens = Screen.getScreens();\n\n        final Screen screen1 = screens.get(0);\n        final Screen screen2 = screens.size() == 1 ? screens.get(0) : screens.get(1);\n\n        log.debug(\"screen1.getBounds() = \" + screen1.getBounds());\n        log.debug(\"screen2.getBounds() = \" + screen2.getBounds());\n\n        final Stage stage2 = new Stage();\n        stage2.setScene(new Scene(new Label(\"primary\")));\n        stage2.setX(screen2.getVisualBounds().getMinX());\n        stage2.setY(screen2.getVisualBounds().getMinY());\n        stage2.setWidth(screen1.getBounds().getWidth());\n        stage2.setHeight(screen1.getBounds().getHeight());\n\n        final Group root = new Group();\n        final Scene scene = new Scene(\n            root,\n            screen1.getBounds().getWidth(),\n            screen1.getBounds().getHeight(),\n            Color.BLACK\n        );\n\n        final Lighting[][] lightingArray = SecondScreen.makeLighting(root, screen2.getBounds());\n\n        stage2.setScene(scene);\n\n        stage2.show();\n\n        return new SecondScreen(stage2, lightingArray);\n    }", "signature": "SecondScreen launch()", "full_signature": "public static SecondScreen launch()", "class_method_signature": "SecondScreenFactory.launch()", "testcase": false, "constructor": false, "invocations": ["getScreens", "get", "size", "get", "get", "debug", "getBounds", "debug", "getBounds", "setScene", "setX", "getMinX", "getVisualBounds", "setY", "getMinY", "getVisualBounds", "setWidth", "getWidth", "getBounds", "setHeight", "getHeight", "getBounds", "getWidth", "getBounds", "getHeight", "getBounds", "makeLighting", "getBounds", "setScene", "show"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}