{"test_class": {"identifier": "TransformFeatureSourceTest", "superclass": "extends AbstractTransformTest", "interfaces": "", "fields": [], "file": "modules/extension/transform/src/test/java/org/geotools/data/transform/TransformFeatureSourceTest.java"}, "test_case": {"identifier": "testBoundsWithRename", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBoundsWithRename() throws Exception {\n        SimpleFeatureSource transformed = transformWithRename();\n        ReferencedEnvelope re = transformed.getBounds();\n        ReferencedEnvelope ae = STATES.getBounds();\n        assertEquals(re, ae);\n    }", "signature": "void testBoundsWithRename()", "full_signature": "@Test public void testBoundsWithRename()", "class_method_signature": "TransformFeatureSourceTest.testBoundsWithRename()", "testcase": true, "constructor": false, "invocations": ["transformWithRename", "getBounds", "getBounds", "assertEquals"]}, "focal_class": {"identifier": "TransformFeatureSource", "superclass": "", "interfaces": "implements SimpleFeatureSource", "fields": [{"original_string": "protected static final Logger LOGGER = Logging.getLogger(TransformFeatureSource.class);", "modifier": "protected static final", "type": "Logger", "declarator": "LOGGER = Logging.getLogger(TransformFeatureSource.class)", "var_name": "LOGGER"}, {"original_string": "protected static final FilterFactory2 FF = CommonFactoryFinder.getFilterFactory2();", "modifier": "protected static final", "type": "FilterFactory2", "declarator": "FF = CommonFactoryFinder.getFilterFactory2()", "var_name": "FF"}, {"original_string": "protected Transformer transformer;", "modifier": "protected", "type": "Transformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "protected SimpleFeatureSource source;", "modifier": "protected", "type": "SimpleFeatureSource", "declarator": "source", "var_name": "source"}], "methods": [{"identifier": "TransformFeatureSource", "parameters": "(SimpleFeatureSource source, Name name, List<Definition> definitions)", "modifiers": "public", "return": "", "signature": " TransformFeatureSource(SimpleFeatureSource source, Name name, List<Definition> definitions)", "full_signature": "public  TransformFeatureSource(SimpleFeatureSource source, Name name, List<Definition> definitions)", "class_method_signature": "TransformFeatureSource.TransformFeatureSource(SimpleFeatureSource source, Name name, List<Definition> definitions)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "Name", "signature": "Name getName()", "full_signature": "@Override public Name getName()", "class_method_signature": "TransformFeatureSource.getName()", "testcase": false, "constructor": false}, {"identifier": "getInfo", "parameters": "()", "modifiers": "@Override public", "return": "ResourceInfo", "signature": "ResourceInfo getInfo()", "full_signature": "@Override public ResourceInfo getInfo()", "class_method_signature": "TransformFeatureSource.getInfo()", "testcase": false, "constructor": false}, {"identifier": "getDataStore", "parameters": "()", "modifiers": "@Override public", "return": "DataAccess<SimpleFeatureType, SimpleFeature>", "signature": "DataAccess<SimpleFeatureType, SimpleFeature> getDataStore()", "full_signature": "@Override public DataAccess<SimpleFeatureType, SimpleFeature> getDataStore()", "class_method_signature": "TransformFeatureSource.getDataStore()", "testcase": false, "constructor": false}, {"identifier": "getQueryCapabilities", "parameters": "()", "modifiers": "@Override public", "return": "QueryCapabilities", "signature": "QueryCapabilities getQueryCapabilities()", "full_signature": "@Override public QueryCapabilities getQueryCapabilities()", "class_method_signature": "TransformFeatureSource.getQueryCapabilities()", "testcase": false, "constructor": false}, {"identifier": "addFeatureListener", "parameters": "(FeatureListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addFeatureListener(FeatureListener listener)", "full_signature": "@Override public void addFeatureListener(FeatureListener listener)", "class_method_signature": "TransformFeatureSource.addFeatureListener(FeatureListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeFeatureListener", "parameters": "(FeatureListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeFeatureListener(FeatureListener listener)", "full_signature": "@Override public void removeFeatureListener(FeatureListener listener)", "class_method_signature": "TransformFeatureSource.removeFeatureListener(FeatureListener listener)", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "()", "modifiers": "@Override public", "return": "SimpleFeatureType", "signature": "SimpleFeatureType getSchema()", "full_signature": "@Override public SimpleFeatureType getSchema()", "class_method_signature": "TransformFeatureSource.getSchema()", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "@Override public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getBounds()", "full_signature": "@Override public ReferencedEnvelope getBounds()", "class_method_signature": "TransformFeatureSource.getBounds()", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "(Query query)", "modifiers": "@Override public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getBounds(Query query)", "full_signature": "@Override public ReferencedEnvelope getBounds(Query query)", "class_method_signature": "TransformFeatureSource.getBounds(Query query)", "testcase": false, "constructor": false}, {"identifier": "getSelectedAttributes", "parameters": "(List<String> attributeNames, Query query)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getSelectedAttributes(List<String> attributeNames, Query query)", "full_signature": "private List<String> getSelectedAttributes(List<String> attributeNames, Query query)", "class_method_signature": "TransformFeatureSource.getSelectedAttributes(List<String> attributeNames, Query query)", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "(Query query)", "modifiers": "@Override public", "return": "int", "signature": "int getCount(Query query)", "full_signature": "@Override public int getCount(Query query)", "class_method_signature": "TransformFeatureSource.getCount(Query query)", "testcase": false, "constructor": false}, {"identifier": "getSupportedHints", "parameters": "()", "modifiers": "@Override public", "return": "Set<Key>", "signature": "Set<Key> getSupportedHints()", "full_signature": "@Override public Set<Key> getSupportedHints()", "class_method_signature": "TransformFeatureSource.getSupportedHints()", "testcase": false, "constructor": false}, {"identifier": "getFeatures", "parameters": "()", "modifiers": "@Override public", "return": "SimpleFeatureCollection", "signature": "SimpleFeatureCollection getFeatures()", "full_signature": "@Override public SimpleFeatureCollection getFeatures()", "class_method_signature": "TransformFeatureSource.getFeatures()", "testcase": false, "constructor": false}, {"identifier": "getFeatures", "parameters": "(Filter filter)", "modifiers": "@Override public", "return": "SimpleFeatureCollection", "signature": "SimpleFeatureCollection getFeatures(Filter filter)", "full_signature": "@Override public SimpleFeatureCollection getFeatures(Filter filter)", "class_method_signature": "TransformFeatureSource.getFeatures(Filter filter)", "testcase": false, "constructor": false}, {"identifier": "getFeatures", "parameters": "(Query query)", "modifiers": "@Override public", "return": "SimpleFeatureCollection", "signature": "SimpleFeatureCollection getFeatures(Query query)", "full_signature": "@Override public SimpleFeatureCollection getFeatures(Query query)", "class_method_signature": "TransformFeatureSource.getFeatures(Query query)", "testcase": false, "constructor": false}], "file": "modules/extension/transform/src/main/java/org/geotools/data/transform/TransformFeatureSource.java"}, "focal_method": {"identifier": "getBounds", "parameters": "()", "modifiers": "@Override public", "return": "ReferencedEnvelope", "body": "@Override\n    public ReferencedEnvelope getBounds() throws IOException {\n        return getBounds(Query.ALL);\n    }", "signature": "ReferencedEnvelope getBounds()", "full_signature": "@Override public ReferencedEnvelope getBounds()", "class_method_signature": "TransformFeatureSource.getBounds()", "testcase": false, "constructor": false, "invocations": ["getBounds"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}