{"test_class": {"identifier": "DataSetLoaderProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DataSetLoaderProvider LOADER_PROVIDER = new DataSetLoaderProvider();", "modifier": "private static final", "type": "DataSetLoaderProvider", "declarator": "LOADER_PROVIDER = new DataSetLoaderProvider()", "var_name": "LOADER_PROVIDER"}], "file": "mongodb/src/test/java/eu/drus/jpa/unit/mongodb/DataSetLoaderProviderTest.java"}, "test_case": {"identifier": "testJsonLoaderLoadUsingNullFileName", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void testJsonLoaderLoadUsingNullFileName() throws IOException {\n        // WHEN\n        final DataSetLoader<Document> loader = LOADER_PROVIDER.jsonLoader();\n\n        // THEN\n        assertThat(loader, notNullValue());\n\n        // WHEN\n        loader.load(null);\n\n        // THEN\n        // NullPointerException is thrown\n    }", "signature": "void testJsonLoaderLoadUsingNullFileName()", "full_signature": "@Test(expected = NullPointerException.class) public void testJsonLoaderLoadUsingNullFileName()", "class_method_signature": "DataSetLoaderProviderTest.testJsonLoaderLoadUsingNullFileName()", "testcase": true, "constructor": false, "invocations": ["jsonLoader", "assertThat", "notNullValue", "load"]}, "focal_class": {"identifier": "DataSetLoaderProvider", "superclass": "", "interfaces": "implements LoaderProvider<Document>", "fields": [], "methods": [{"identifier": "xmlLoader", "parameters": "()", "modifiers": "@Override public", "return": "DataSetLoader<Document>", "signature": "DataSetLoader<Document> xmlLoader()", "full_signature": "@Override public DataSetLoader<Document> xmlLoader()", "class_method_signature": "DataSetLoaderProvider.xmlLoader()", "testcase": false, "constructor": false}, {"identifier": "yamlLoader", "parameters": "()", "modifiers": "@Override public", "return": "DataSetLoader<Document>", "signature": "DataSetLoader<Document> yamlLoader()", "full_signature": "@Override public DataSetLoader<Document> yamlLoader()", "class_method_signature": "DataSetLoaderProvider.yamlLoader()", "testcase": false, "constructor": false}, {"identifier": "jsonLoader", "parameters": "()", "modifiers": "@Override public", "return": "DataSetLoader<Document>", "signature": "DataSetLoader<Document> jsonLoader()", "full_signature": "@Override public DataSetLoader<Document> jsonLoader()", "class_method_signature": "DataSetLoaderProvider.jsonLoader()", "testcase": false, "constructor": false}, {"identifier": "csvLoader", "parameters": "()", "modifiers": "@Override public", "return": "DataSetLoader<Document>", "signature": "DataSetLoader<Document> csvLoader()", "full_signature": "@Override public DataSetLoader<Document> csvLoader()", "class_method_signature": "DataSetLoaderProvider.csvLoader()", "testcase": false, "constructor": false}, {"identifier": "xlsLoader", "parameters": "()", "modifiers": "@Override public", "return": "DataSetLoader<Document>", "signature": "DataSetLoader<Document> xlsLoader()", "full_signature": "@Override public DataSetLoader<Document> xlsLoader()", "class_method_signature": "DataSetLoaderProvider.xlsLoader()", "testcase": false, "constructor": false}], "file": "mongodb/src/main/java/eu/drus/jpa/unit/mongodb/DataSetLoaderProvider.java"}, "focal_method": {"identifier": "jsonLoader", "parameters": "()", "modifiers": "@Override public", "return": "DataSetLoader<Document>", "body": "@Override\n    public DataSetLoader<Document> jsonLoader() {\n        return (final File path) -> Document.parse(new String(Files.readAllBytes(path.toPath()), StandardCharsets.UTF_8));\n    }", "signature": "DataSetLoader<Document> jsonLoader()", "full_signature": "@Override public DataSetLoader<Document> jsonLoader()", "class_method_signature": "DataSetLoaderProvider.jsonLoader()", "testcase": false, "constructor": false, "invocations": ["parse", "readAllBytes", "toPath"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}