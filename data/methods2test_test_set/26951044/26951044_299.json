{"test_class": {"identifier": "PropertySourceChangeSupportTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/PropertySourceChangeSupportTest.java"}, "test_case": {"identifier": "update", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void update() {\n        PropertySource ps = BuildablePropertySource.builder().withName(\"test\").build();\n        PropertySourceChangeSupport support = new PropertySourceChangeSupport(ChangeSupport.IMMUTABLE, ps);\n        assertThatCode(() -> support.load(Collections.emptyMap())).doesNotThrowAnyException();\n    }", "signature": "void update()", "full_signature": "@Test public void update()", "class_method_signature": "PropertySourceChangeSupportTest.update()", "testcase": true, "constructor": false, "invocations": ["build", "withName", "builder", "doesNotThrowAnyException", "assertThatCode", "load", "emptyMap"]}, "focal_class": {"identifier": "PropertySourceChangeSupport", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(PropertySourceChangeSupport.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(PropertySourceChangeSupport.class.getName())", "var_name": "LOG"}, {"original_string": "private ChangeSupport changeSupport;", "modifier": "private", "type": "ChangeSupport", "declarator": "changeSupport", "var_name": "changeSupport"}, {"original_string": "private PropertySource propertySource;", "modifier": "private", "type": "PropertySource", "declarator": "propertySource", "var_name": "propertySource"}, {"original_string": "private AtomicLong version = new AtomicLong();", "modifier": "private", "type": "AtomicLong", "declarator": "version = new AtomicLong()", "var_name": "version"}, {"original_string": "private List<BiConsumer<Set<String>, PropertySource>> listeners  = new ArrayList<>();", "modifier": "private", "type": "List<BiConsumer<Set<String>, PropertySource>>", "declarator": "listeners  = new ArrayList<>()", "var_name": "listeners"}, {"original_string": "private int oldHash = 0;", "modifier": "private", "type": "int", "declarator": "oldHash = 0", "var_name": "oldHash"}, {"original_string": "private Map<String, PropertyValue> valueMap;", "modifier": "private", "type": "Map<String, PropertyValue>", "declarator": "valueMap", "var_name": "valueMap"}, {"original_string": "private long timestamp;", "modifier": "private", "type": "long", "declarator": "timestamp", "var_name": "timestamp"}, {"original_string": "private ScheduledFuture scheduleTask;", "modifier": "private", "type": "ScheduledFuture", "declarator": "scheduleTask", "var_name": "scheduleTask"}, {"original_string": "private static ScheduledExecutorService executorService = Executors.newScheduledThreadPool(4);", "modifier": "private static", "type": "ScheduledExecutorService", "declarator": "executorService = Executors.newScheduledThreadPool(4)", "var_name": "executorService"}], "methods": [{"identifier": "PropertySourceChangeSupport", "parameters": "(ChangeSupport changeSupport,\n                                       PropertySource propertySource)", "modifiers": "public", "return": "", "signature": " PropertySourceChangeSupport(ChangeSupport changeSupport,\n                                       PropertySource propertySource)", "full_signature": "public  PropertySourceChangeSupport(ChangeSupport changeSupport,\n                                       PropertySource propertySource)", "class_method_signature": "PropertySourceChangeSupport.PropertySourceChangeSupport(ChangeSupport changeSupport,\n                                       PropertySource propertySource)", "testcase": false, "constructor": true}, {"identifier": "getChangeSupport", "parameters": "()", "modifiers": "public", "return": "ChangeSupport", "signature": "ChangeSupport getChangeSupport()", "full_signature": "public ChangeSupport getChangeSupport()", "class_method_signature": "PropertySourceChangeSupport.getChangeSupport()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "PropertySourceChangeSupport.getVersion()", "testcase": false, "constructor": false}, {"identifier": "addChangeListener", "parameters": "(BiConsumer<Set<String>, PropertySource> l)", "modifiers": "public", "return": "void", "signature": "void addChangeListener(BiConsumer<Set<String>, PropertySource> l)", "full_signature": "public void addChangeListener(BiConsumer<Set<String>, PropertySource> l)", "class_method_signature": "PropertySourceChangeSupport.addChangeListener(BiConsumer<Set<String>, PropertySource> l)", "testcase": false, "constructor": false}, {"identifier": "removeChangeListener", "parameters": "(BiConsumer<Set<String>, PropertySource> l)", "modifiers": "public", "return": "void", "signature": "void removeChangeListener(BiConsumer<Set<String>, PropertySource> l)", "full_signature": "public void removeChangeListener(BiConsumer<Set<String>, PropertySource> l)", "class_method_signature": "PropertySourceChangeSupport.removeChangeListener(BiConsumer<Set<String>, PropertySource> l)", "testcase": false, "constructor": false}, {"identifier": "removeAllChangeListeners", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAllChangeListeners()", "full_signature": "public void removeAllChangeListeners()", "class_method_signature": "PropertySourceChangeSupport.removeAllChangeListeners()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Map<String, PropertyValue> properties)", "modifiers": "public", "return": "long", "signature": "long load(Map<String, PropertyValue> properties)", "full_signature": "public long load(Map<String, PropertyValue> properties)", "class_method_signature": "PropertySourceChangeSupport.load(Map<String, PropertyValue> properties)", "testcase": false, "constructor": false}, {"identifier": "calculateChangedKeys", "parameters": "(Map<String, PropertyValue> valueMap, Map<String, PropertyValue> newValues)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> calculateChangedKeys(Map<String, PropertyValue> valueMap, Map<String, PropertyValue> newValues)", "full_signature": "private Set<String> calculateChangedKeys(Map<String, PropertyValue> valueMap, Map<String, PropertyValue> newValues)", "class_method_signature": "PropertySourceChangeSupport.calculateChangedKeys(Map<String, PropertyValue> valueMap, Map<String, PropertyValue> newValues)", "testcase": false, "constructor": false}, {"identifier": "fireListeners", "parameters": "(Set<String> changedKeys)", "modifiers": "private", "return": "void", "signature": "void fireListeners(Set<String> changedKeys)", "full_signature": "private void fireListeners(Set<String> changedKeys)", "class_method_signature": "PropertySourceChangeSupport.fireListeners(Set<String> changedKeys)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String key)", "modifiers": "public", "return": "PropertyValue", "signature": "PropertyValue getValue(String key)", "full_signature": "public PropertyValue getValue(String key)", "class_method_signature": "PropertySourceChangeSupport.getValue(String key)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> getProperties()", "full_signature": "public Map<String, PropertyValue> getProperties()", "class_method_signature": "PropertySourceChangeSupport.getProperties()", "testcase": false, "constructor": false}, {"identifier": "scheduleChangeMonitor", "parameters": "(Supplier<Map<String, PropertyValue>> propertySupplier, long duration, TimeUnit timeUnit)", "modifiers": "public", "return": "void", "signature": "void scheduleChangeMonitor(Supplier<Map<String, PropertyValue>> propertySupplier, long duration, TimeUnit timeUnit)", "full_signature": "public void scheduleChangeMonitor(Supplier<Map<String, PropertyValue>> propertySupplier, long duration, TimeUnit timeUnit)", "class_method_signature": "PropertySourceChangeSupport.scheduleChangeMonitor(Supplier<Map<String, PropertyValue>> propertySupplier, long duration, TimeUnit timeUnit)", "testcase": false, "constructor": false}, {"identifier": "cancelSchedule", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cancelSchedule()", "full_signature": "public void cancelSchedule()", "class_method_signature": "PropertySourceChangeSupport.cancelSchedule()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "(Map<String, PropertyValue> valueMap)", "modifiers": "private", "return": "int", "signature": "int hashCode(Map<String, PropertyValue> valueMap)", "full_signature": "private int hashCode(Map<String, PropertyValue> valueMap)", "class_method_signature": "PropertySourceChangeSupport.hashCode(Map<String, PropertyValue> valueMap)", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/PropertySourceChangeSupport.java"}, "focal_method": {"identifier": "load", "parameters": "(Map<String, PropertyValue> properties)", "modifiers": "public", "return": "long", "body": "public long load(Map<String, PropertyValue> properties){\n        Objects.requireNonNull(properties);\n        if(changeSupport==ChangeSupport.SUPPORTED) {\n            Set<String> changedKeys = calculateChangedKeys(this.valueMap, properties);\n            if(!changedKeys.isEmpty()) {\n                this.valueMap = properties;\n                version.incrementAndGet();\n                fireListeners(changedKeys);\n            }\n        } else {\n            if(!properties.equals(this.valueMap)){\n                this.valueMap = properties;\n                version.incrementAndGet();\n            }\n        }\n        return version.get();\n    }", "signature": "long load(Map<String, PropertyValue> properties)", "full_signature": "public long load(Map<String, PropertyValue> properties)", "class_method_signature": "PropertySourceChangeSupport.load(Map<String, PropertyValue> properties)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "calculateChangedKeys", "isEmpty", "incrementAndGet", "fireListeners", "equals", "incrementAndGet", "get"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}