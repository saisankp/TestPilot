{"test_class": {"identifier": "BuiltInCohortDefinitionLibrary2_2Test", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BuiltInCohortDefinitionLibrary2_2 library;", "modifier": "private", "type": "BuiltInCohortDefinitionLibrary2_2", "declarator": "library", "var_name": "library"}], "file": "api-2.2/src/test/java/org/openmrs/module/reporting/cohort/definition/library/BuiltInCohortDefinitionLibrary2_2Test.java"}, "test_case": {"identifier": "testGetConditonSearchAdavanced", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetConditonSearchAdavanced() throws Exception {\n\t\tCohortDefinition cd = library.getConditonSearchAdvanced();\n\t\tassertTrue(ConditionCohortDefinition.class.isAssignableFrom(cd.getClass()));\n\t\tassertThat(cd, hasParameter(\"onsetDateOnOrBefore\", Date.class));\n\t    assertThat(cd, hasParameter(\"onsetDateOnOrAfter\", Date.class));\n\t    assertThat(cd, hasParameter(\"endDateOnOrBefore\", Date.class));\n\t    assertThat(cd, hasParameter(\"endDateOnOrAfter\", Date.class));\n\t    assertThat(cd, hasParameter(\"createdOnOrBefore\", Date.class));\n\t    assertThat(cd, hasParameter(\"createdOnOrAfter\", Date.class));\n\t    assertThat(cd, hasParameter(\"activeOnDate\", Date.class));\n\t    assertThat(cd, hasParameter(\"conditionNonCoded\", String.class));\n\t    assertThat(cd, hasParameter(\"conditionCoded\", Concept.class));\n\t}", "signature": "void testGetConditonSearchAdavanced()", "full_signature": "@Test public void testGetConditonSearchAdavanced()", "class_method_signature": "BuiltInCohortDefinitionLibrary2_2Test.testGetConditonSearchAdavanced()", "testcase": true, "constructor": false, "invocations": ["getConditonSearchAdvanced", "assertTrue", "isAssignableFrom", "getClass", "assertThat", "hasParameter", "assertThat", "hasParameter", "assertThat", "hasParameter", "assertThat", "hasParameter", "assertThat", "hasParameter", "assertThat", "hasParameter", "assertThat", "hasParameter", "assertThat", "hasParameter", "assertThat", "hasParameter"]}, "focal_class": {"identifier": "BuiltInCohortDefinitionLibrary2_2", "superclass": "extends BuiltInCohortDefinitionLibrary", "interfaces": "", "fields": [], "methods": [{"identifier": "getConditonSearchAdvanced", "parameters": "()", "modifiers": "@DocumentedDefinition(\"conditonSearchAdvanced\") public", "return": "CohortDefinition", "signature": "CohortDefinition getConditonSearchAdvanced()", "full_signature": "@DocumentedDefinition(\"conditonSearchAdvanced\") public CohortDefinition getConditonSearchAdvanced()", "class_method_signature": "BuiltInCohortDefinitionLibrary2_2.getConditonSearchAdvanced()", "testcase": false, "constructor": false}], "file": "api-2.2/src/main/java/org/openmrs/module/reporting/cohort/definition/library/BuiltInCohortDefinitionLibrary2_2.java"}, "focal_method": {"identifier": "getConditonSearchAdvanced", "parameters": "()", "modifiers": "@DocumentedDefinition(\"conditonSearchAdvanced\") public", "return": "CohortDefinition", "body": "@DocumentedDefinition(\"conditonSearchAdvanced\")\n\tpublic CohortDefinition getConditonSearchAdvanced() {\n\t\tConditionCohortDefinition cd = new ConditionCohortDefinition();\n\t\tcd.addParameter(new Parameter(\"conditionCoded\", \"reporting.parameter.conditionCoded\", Concept.class));\n\t\tcd.addParameter(new Parameter(\"conditionNonCoded\", \"reporting.parameter.conditionNonCoded\", String.class));\n\t\tcd.addParameter(new Parameter(\"onsetDateOnOrBefore\", \"reporting.parameter.onsetDateOnOrBefore\", Date.class));\n\t\tcd.addParameter(new Parameter(\"onsetDateOnOrAfter\", \"reporting.parameter.onsetDateOnOrAfter\", Date.class));\n\t\tcd.addParameter(new Parameter(\"endDateOnOrBefore\", \"reporting.parameter.endDateOnOrBefore\", Date.class));\n\t\tcd.addParameter(new Parameter(\"endDateOnOrAfter\", \"reporting.parameter.endDateOnOrAfter\", Date.class));\n\t\tcd.addParameter(new Parameter(\"createdOnOrBefore\", \"reporting.parameter.createdOnOrBefore\", Date.class));\n\t\tcd.addParameter(new Parameter(\"createdOnOrAfter\", \"reporting.parameter.createdOnOrAfter\", Date.class));\n\t\tcd.addParameter(new Parameter(\"activeOnDate\", \"reporting.parameter.activeOnDate\", Date.class));\n\t\treturn cd;\n\t}", "signature": "CohortDefinition getConditonSearchAdvanced()", "full_signature": "@DocumentedDefinition(\"conditonSearchAdvanced\") public CohortDefinition getConditonSearchAdvanced()", "class_method_signature": "BuiltInCohortDefinitionLibrary2_2.getConditonSearchAdvanced()", "testcase": false, "constructor": false, "invocations": ["addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter"]}, "repository": {"repo_id": 4713588, "url": "https://github.com/openmrs/openmrs-module-reporting", "language": "Java", "is_fork": false, "fork_count": 206, "stargazer_count": 15, "size": 58709, "license": "licensed"}}