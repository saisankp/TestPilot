{"test_class": {"identifier": "EngineUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "smartparam-engine/src/test/java/org/smartparam/engine/util/EngineUtilTest.java"}, "test_case": {"identifier": "testSplit__max", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSplit__max() {\n\n        // konfiguracja testu (key = string, value = oczekiwany wynik splitowania)\n        Map<String, String[]> casesMap = new LinkedHashMap<String, String[]>();\n        casesMap.put(\"A,B,C\", new String[]{\"A\", \"B\"});\n        casesMap.put(\",A,B\", new String[]{\"\", \"A\"});\n        casesMap.put(\",A,B,\", new String[]{\"\", \"A\"});\n        casesMap.put(\",,\", new String[]{\"\", \"\"});\n        casesMap.put(\"A,B\", new String[]{\"A\", \"B\"});\n        casesMap.put(\"A,\", new String[]{\"A\", \"\"});\n        casesMap.put(\",\", new String[]{\"\", \"\"});\n\n        // sprawdzenie wynikow testu\n        for (Map.Entry<String, String[]> e : casesMap.entrySet()) {\n            String str = e.getKey();\n            String[] expected = e.getValue();\n            String[] result = EngineUtil.split(str, ',', 2);\n\n            assertArrayEquals(expected, result);\n        }\n    }", "signature": "void testSplit__max()", "full_signature": "@Test public void testSplit__max()", "class_method_signature": "EngineUtilTest.testSplit__max()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "put", "put", "entrySet", "getKey", "getValue", "split", "assertArrayEquals"]}, "focal_class": {"identifier": "EngineUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "EngineUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " EngineUtil()", "full_signature": "private  EngineUtil()", "class_method_signature": "EngineUtil.EngineUtil()", "testcase": false, "constructor": true}, {"identifier": "hasText", "parameters": "(String text)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasText(String text)", "full_signature": "public static boolean hasText(String text)", "class_method_signature": "EngineUtil.hasText(String text)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(final String str, final char delim, final int maxTokens)", "modifiers": "public static", "return": "String[]", "signature": "String[] split(final String str, final char delim, final int maxTokens)", "full_signature": "public static String[] split(final String str, final char delim, final int maxTokens)", "class_method_signature": "EngineUtil.split(final String str, final char delim, final int maxTokens)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(final String str, final char delim)", "modifiers": "public static", "return": "String[]", "signature": "String[] split(final String str, final char delim)", "full_signature": "public static String[] split(final String str, final char delim)", "class_method_signature": "EngineUtil.split(final String str, final char delim)", "testcase": false, "constructor": false}, {"identifier": "split2", "parameters": "(final String str, final char delim)", "modifiers": "public static", "return": "String[]", "signature": "String[] split2(final String str, final char delim)", "full_signature": "public static String[] split2(final String str, final char delim)", "class_method_signature": "EngineUtil.split2(final String str, final char delim)", "testcase": false, "constructor": false}, {"identifier": "trimAllWhitespace", "parameters": "(final String str)", "modifiers": "public static", "return": "String", "signature": "String trimAllWhitespace(final String str)", "full_signature": "public static String trimAllWhitespace(final String str)", "class_method_signature": "EngineUtil.trimAllWhitespace(final String str)", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/util/EngineUtil.java"}, "focal_method": {"identifier": "split", "parameters": "(final String str, final char delim, final int maxTokens)", "modifiers": "public static", "return": "String[]", "body": "public static String[] split(final String str, final char delim, final int maxTokens) {\n        int max = maxTokens;\n        List<String> result = new ArrayList<String>(max);\n        if (max == 0) {\n            max = -1;\n        }\n\n        int curr = -1;\n        int prev = 0;\n        while (true) {\n            ++curr;\n            if (curr == str.length()) {\n                result.add(str.substring(prev, str.length()));\n                --max;\n                break;\n            }\n            if (str.charAt(curr) == delim) {\n                result.add(str.substring(prev, curr));\n                --max;\n                prev = curr + 1;\n            }\n\n            if (max == 0) {\n                break;\n            }\n        }\n        return result.toArray(new String[result.size()]);\n    }", "signature": "String[] split(final String str, final char delim, final int maxTokens)", "full_signature": "public static String[] split(final String str, final char delim, final int maxTokens)", "class_method_signature": "EngineUtil.split(final String str, final char delim, final int maxTokens)", "testcase": false, "constructor": false, "invocations": ["length", "add", "substring", "length", "charAt", "add", "substring", "toArray", "size"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}