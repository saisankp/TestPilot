{"test_class": {"identifier": "ModelMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ModelMapper modelMapper;", "modifier": "private", "type": "ModelMapper", "declarator": "modelMapper", "var_name": "modelMapper"}], "file": "rethinkdb-orm/src/test/java/de/jakobjarosch/rethinkdb/orm/dao/ModelMapperTest.java"}, "test_case": {"identifier": "modelToMap_ReqlLinePreserved", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void modelToMap_ReqlLinePreserved() {\n        final TestModel model = new TestModel();\n        model.id = \"test\";\n        model.geo = new ReqlLine(new ReqlPoint(20.1, 30.0), new ReqlPoint(22.1, 33.0));\n\n        Map result = modelMapper.map(model);\n\n        assertThat(result.get(\"geo\")).isEqualTo(model.geo);\n    }", "signature": "void modelToMap_ReqlLinePreserved()", "full_signature": "@Test public void modelToMap_ReqlLinePreserved()", "class_method_signature": "ModelMapperTest.modelToMap_ReqlLinePreserved()", "testcase": true, "constructor": false, "invocations": ["map", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "ModelMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ModelMapper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ModelMapper.class)", "var_name": "LOGGER"}, {"original_string": "private final ObjectMapper mapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "ModelMapper", "parameters": "()", "modifiers": "public", "return": "", "signature": " ModelMapper()", "full_signature": "public  ModelMapper()", "class_method_signature": "ModelMapper.ModelMapper()", "testcase": false, "constructor": true}, {"identifier": "map", "parameters": "(Object obj)", "modifiers": "public", "return": "Map<?, ?>", "signature": "Map<?, ?> map(Object obj)", "full_signature": "public Map<?, ?> map(Object obj)", "class_method_signature": "ModelMapper.map(Object obj)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(Map<?, ?> map, Class<T> clazz)", "modifiers": "public", "return": "T", "signature": "T map(Map<?, ?> map, Class<T> clazz)", "full_signature": "public T map(Map<?, ?> map, Class<T> clazz)", "class_method_signature": "ModelMapper.map(Map<?, ?> map, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "reconstructGeoObjects", "parameters": "(Map<?, ?> parentMap, Object key, Object value)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void reconstructGeoObjects(Map<?, ?> parentMap, Object key, Object value)", "full_signature": "@SuppressWarnings(\"unchecked\") private void reconstructGeoObjects(Map<?, ?> parentMap, Object key, Object value)", "class_method_signature": "ModelMapper.reconstructGeoObjects(Map<?, ?> parentMap, Object key, Object value)", "testcase": false, "constructor": false}], "file": "rethinkdb-orm/src/main/java/de/jakobjarosch/rethinkdb/orm/dao/ModelMapper.java"}, "focal_method": {"identifier": "map", "parameters": "(Object obj)", "modifiers": "public", "return": "Map<?, ?>", "body": "public Map<?, ?> map(Object obj) {\n        Map<?, ?> map = mapper.convertValue(obj, Map.class);\n        map.forEach((k, v) -> reconstructGeoObjects(map, k, v));\n        return map;\n    }", "signature": "Map<?, ?> map(Object obj)", "full_signature": "public Map<?, ?> map(Object obj)", "class_method_signature": "ModelMapper.map(Object obj)", "testcase": false, "constructor": false, "invocations": ["convertValue", "forEach", "reconstructGeoObjects"]}, "repository": {"repo_id": 61158193, "url": "https://github.com/foxylion/rethinkdb-orm-java", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 107, "license": "licensed"}}