{"test_class": {"identifier": "LogHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/utils/LogHelperTest.java"}, "test_case": {"identifier": "testTrace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTrace() throws Exception {\n        Logger logger = Mockito.mock(Logger.class);\n        when(logger.isTraceEnabled()).thenReturn(true);\n        LogHelper.trace(logger, \"trace\");\n        verify(logger).trace(\"trace\");\n        Throwable t = new RuntimeException();\n        LogHelper.trace(logger, t);\n        verify(logger).trace(t);\n        LogHelper.trace(logger, \"trace\", t);\n        verify(logger).trace(\"trace\", t);\n    }", "signature": "void testTrace()", "full_signature": "@Test public void testTrace()", "class_method_signature": "LogHelperTest.testTrace()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "isTraceEnabled", "trace", "trace", "verify", "trace", "trace", "verify", "trace", "trace", "verify"]}, "focal_class": {"identifier": "LogHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "LogHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " LogHelper()", "full_signature": "private  LogHelper()", "class_method_signature": "LogHelper.LogHelper()", "testcase": false, "constructor": true}, {"identifier": "trace", "parameters": "(Logger logger, String msg)", "modifiers": "public static", "return": "void", "signature": "void trace(Logger logger, String msg)", "full_signature": "public static void trace(Logger logger, String msg)", "class_method_signature": "LogHelper.trace(Logger logger, String msg)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(Logger logger, Throwable throwable)", "modifiers": "public static", "return": "void", "signature": "void trace(Logger logger, Throwable throwable)", "full_signature": "public static void trace(Logger logger, Throwable throwable)", "class_method_signature": "LogHelper.trace(Logger logger, Throwable throwable)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(Logger logger, String msg, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void trace(Logger logger, String msg, Throwable e)", "full_signature": "public static void trace(Logger logger, String msg, Throwable e)", "class_method_signature": "LogHelper.trace(Logger logger, String msg, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(Logger logger, String msg)", "modifiers": "public static", "return": "void", "signature": "void debug(Logger logger, String msg)", "full_signature": "public static void debug(Logger logger, String msg)", "class_method_signature": "LogHelper.debug(Logger logger, String msg)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(Logger logger, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void debug(Logger logger, Throwable e)", "full_signature": "public static void debug(Logger logger, Throwable e)", "class_method_signature": "LogHelper.debug(Logger logger, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(Logger logger, String msg, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void debug(Logger logger, String msg, Throwable e)", "full_signature": "public static void debug(Logger logger, String msg, Throwable e)", "class_method_signature": "LogHelper.debug(Logger logger, String msg, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(Logger logger, String msg)", "modifiers": "public static", "return": "void", "signature": "void info(Logger logger, String msg)", "full_signature": "public static void info(Logger logger, String msg)", "class_method_signature": "LogHelper.info(Logger logger, String msg)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(Logger logger, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void info(Logger logger, Throwable e)", "full_signature": "public static void info(Logger logger, Throwable e)", "class_method_signature": "LogHelper.info(Logger logger, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(Logger logger, String msg, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void info(Logger logger, String msg, Throwable e)", "full_signature": "public static void info(Logger logger, String msg, Throwable e)", "class_method_signature": "LogHelper.info(Logger logger, String msg, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(Logger logger, String msg, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void warn(Logger logger, String msg, Throwable e)", "full_signature": "public static void warn(Logger logger, String msg, Throwable e)", "class_method_signature": "LogHelper.warn(Logger logger, String msg, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(Logger logger, String msg)", "modifiers": "public static", "return": "void", "signature": "void warn(Logger logger, String msg)", "full_signature": "public static void warn(Logger logger, String msg)", "class_method_signature": "LogHelper.warn(Logger logger, String msg)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(Logger logger, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void warn(Logger logger, Throwable e)", "full_signature": "public static void warn(Logger logger, Throwable e)", "class_method_signature": "LogHelper.warn(Logger logger, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(Logger logger, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void error(Logger logger, Throwable e)", "full_signature": "public static void error(Logger logger, Throwable e)", "class_method_signature": "LogHelper.error(Logger logger, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(Logger logger, String msg)", "modifiers": "public static", "return": "void", "signature": "void error(Logger logger, String msg)", "full_signature": "public static void error(Logger logger, String msg)", "class_method_signature": "LogHelper.error(Logger logger, String msg)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(Logger logger, String msg, Throwable e)", "modifiers": "public static", "return": "void", "signature": "void error(Logger logger, String msg, Throwable e)", "full_signature": "public static void error(Logger logger, String msg, Throwable e)", "class_method_signature": "LogHelper.error(Logger logger, String msg, Throwable e)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/utils/LogHelper.java"}, "focal_method": {"identifier": "trace", "parameters": "(Logger logger, String msg)", "modifiers": "public static", "return": "void", "body": "public static void trace(Logger logger, String msg) {\n        if (logger == null) {\n            return;\n        }\n\n        if (logger.isTraceEnabled()) {\n            logger.trace(msg);\n        }\n    }", "signature": "void trace(Logger logger, String msg)", "full_signature": "public static void trace(Logger logger, String msg)", "class_method_signature": "LogHelper.trace(Logger logger, String msg)", "testcase": false, "constructor": false, "invocations": ["isTraceEnabled", "trace"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}