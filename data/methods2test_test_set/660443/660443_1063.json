{"test_class": {"identifier": "MolecularFormulaGeneratorTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "private final IChemObjectBuilder builder = SilentChemObjectBuilder\n            .getInstance();", "modifier": "private final", "type": "IChemObjectBuilder", "declarator": "builder = SilentChemObjectBuilder\n            .getInstance()", "var_name": "builder"}], "file": "tool/formula/src/test/java/org/openscience/cdk/formula/MolecularFormulaGeneratorTest.java"}, "test_case": {"identifier": "testGetNextFormula", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNextFormula() throws Exception {\n\n        IsotopeFactory ifac = Isotopes.getInstance();\n        IIsotope c = ifac.getMajorIsotope(\"C\");\n        IIsotope h = ifac.getMajorIsotope(\"H\");\n        IIsotope n = ifac.getMajorIsotope(\"N\");\n        IIsotope o = ifac.getMajorIsotope(\"O\");\n\n        MolecularFormulaRange mfRange = new MolecularFormulaRange();\n        mfRange.addIsotope(c, 0, 10);\n        mfRange.addIsotope(h, 0, 10);\n        mfRange.addIsotope(o, 0, 10);\n        mfRange.addIsotope(n, 0, 10);\n\n        double minMass = 100.0;\n        double maxMass = 100.05;\n\n        MolecularFormulaGenerator gen = new MolecularFormulaGenerator(builder,\n                minMass, maxMass, mfRange);\n        IMolecularFormula f = gen.getNextFormula();\n        Assert.assertNotNull(f);\n\n    }", "signature": "void testGetNextFormula()", "full_signature": "@Test public void testGetNextFormula()", "class_method_signature": "MolecularFormulaGeneratorTest.testGetNextFormula()", "testcase": true, "constructor": false, "invocations": ["getInstance", "getMajorIsotope", "getMajorIsotope", "getMajorIsotope", "getMajorIsotope", "addIsotope", "addIsotope", "addIsotope", "addIsotope", "getNextFormula", "assertNotNull"]}, "focal_class": {"identifier": "MolecularFormulaGenerator", "superclass": "", "interfaces": "implements IFormulaGenerator", "fields": [{"original_string": "protected final IFormulaGenerator formulaGenerator;", "modifier": "protected final", "type": "IFormulaGenerator", "declarator": "formulaGenerator", "var_name": "formulaGenerator"}], "methods": [{"identifier": "MolecularFormulaGenerator", "parameters": "(final IChemObjectBuilder builder,\n                                     final double minMass, final double maxMass,\n                                     final MolecularFormulaRange mfRange)", "modifiers": "public", "return": "", "signature": " MolecularFormulaGenerator(final IChemObjectBuilder builder,\n                                     final double minMass, final double maxMass,\n                                     final MolecularFormulaRange mfRange)", "full_signature": "public  MolecularFormulaGenerator(final IChemObjectBuilder builder,\n                                     final double minMass, final double maxMass,\n                                     final MolecularFormulaRange mfRange)", "class_method_signature": "MolecularFormulaGenerator.MolecularFormulaGenerator(final IChemObjectBuilder builder,\n                                     final double minMass, final double maxMass,\n                                     final MolecularFormulaRange mfRange)", "testcase": false, "constructor": true}, {"identifier": "isIllPosed", "parameters": "(double minMass, double maxMass, MolecularFormulaRange mfRange)", "modifiers": "private static", "return": "boolean", "signature": "boolean isIllPosed(double minMass, double maxMass, MolecularFormulaRange mfRange)", "full_signature": "private static boolean isIllPosed(double minMass, double maxMass, MolecularFormulaRange mfRange)", "class_method_signature": "MolecularFormulaGenerator.isIllPosed(double minMass, double maxMass, MolecularFormulaRange mfRange)", "testcase": false, "constructor": false}, {"identifier": "getNextFormula", "parameters": "()", "modifiers": "@Override public", "return": "IMolecularFormula", "signature": "IMolecularFormula getNextFormula()", "full_signature": "@Override public IMolecularFormula getNextFormula()", "class_method_signature": "MolecularFormulaGenerator.getNextFormula()", "testcase": false, "constructor": false}, {"identifier": "getAllFormulas", "parameters": "()", "modifiers": "@Override public", "return": "IMolecularFormulaSet", "signature": "IMolecularFormulaSet getAllFormulas()", "full_signature": "@Override public IMolecularFormulaSet getAllFormulas()", "class_method_signature": "MolecularFormulaGenerator.getAllFormulas()", "testcase": false, "constructor": false}, {"identifier": "getFinishedPercentage", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double getFinishedPercentage()", "full_signature": "@Override public double getFinishedPercentage()", "class_method_signature": "MolecularFormulaGenerator.getFinishedPercentage()", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "MolecularFormulaGenerator.cancel()", "testcase": false, "constructor": false}, {"identifier": "checkInputParameters", "parameters": "(final IChemObjectBuilder builder,\n                                        final double minMass, final double maxMass,\n                                        final MolecularFormulaRange mfRange)", "modifiers": "protected", "return": "void", "signature": "void checkInputParameters(final IChemObjectBuilder builder,\n                                        final double minMass, final double maxMass,\n                                        final MolecularFormulaRange mfRange)", "full_signature": "protected void checkInputParameters(final IChemObjectBuilder builder,\n                                        final double minMass, final double maxMass,\n                                        final MolecularFormulaRange mfRange)", "class_method_signature": "MolecularFormulaGenerator.checkInputParameters(final IChemObjectBuilder builder,\n                                        final double minMass, final double maxMass,\n                                        final MolecularFormulaRange mfRange)", "testcase": false, "constructor": false}], "file": "tool/formula/src/main/java/org/openscience/cdk/formula/MolecularFormulaGenerator.java"}, "focal_method": {"identifier": "getNextFormula", "parameters": "()", "modifiers": "@Override public", "return": "IMolecularFormula", "body": "@Override\n    public IMolecularFormula getNextFormula() {\n        return formulaGenerator.getNextFormula();\n    }", "signature": "IMolecularFormula getNextFormula()", "full_signature": "@Override public IMolecularFormula getNextFormula()", "class_method_signature": "MolecularFormulaGenerator.getNextFormula()", "testcase": false, "constructor": false, "invocations": ["getNextFormula"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}