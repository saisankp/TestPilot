{"test_class": {"identifier": "X13ProcessingFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CompositeResults process;", "modifier": "private", "type": "CompositeResults", "declarator": "process", "var_name": "process"}], "file": "jtstoolkit/src/test/java/ec/satoolkit/algorithm/implementation/X13ProcessingFactoryTest.java"}, "test_case": {"identifier": "simpleTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void simpleTest() {\n        IProcResults rslts = X13ProcessingFactory.process(Data.X, X13Specification.RSA4);\n        TsData sa = rslts.getData(\"sa\", TsData.class);\n        TsData fcasts = rslts.getData(\"y_f\", TsData.class);\n        TsData d8 = rslts.getData(\"decomposition.d-tables.d8\", TsData.class);\n        StatisticalTest lb=rslts.getData(\"residuals.lb\", StatisticalTest.class);\n        assertTrue(sa != null);\n        assertTrue(fcasts != null);\n        assertTrue(d8 != null);\n        assertTrue(lb != null);\n    }", "signature": "void simpleTest()", "full_signature": "@Test public void simpleTest()", "class_method_signature": "X13ProcessingFactoryTest.simpleTest()", "testcase": true, "constructor": false, "invocations": ["process", "getData", "getData", "getData", "getData", "assertTrue", "assertTrue", "assertTrue", "assertTrue"]}, "focal_class": {"identifier": "X13ProcessingFactory", "superclass": "extends GenericSaProcessingFactory", "interfaces": "implements IProcessingFactory<X13Specification, TsData, CompositeResults>", "fields": [{"original_string": "public static final String METHOD = \"x13\";", "modifier": "public static final", "type": "String", "declarator": "METHOD = \"x13\"", "var_name": "METHOD"}, {"original_string": "public static final String VERSION = \"0.1.0.0\";", "modifier": "public static final", "type": "String", "declarator": "VERSION = \"0.1.0.0\"", "var_name": "VERSION"}, {"original_string": "public static final AlgorithmDescriptor DESCRIPTOR = new AlgorithmDescriptor(FAMILY, METHOD, VERSION);", "modifier": "public static final", "type": "AlgorithmDescriptor", "declarator": "DESCRIPTOR = new AlgorithmDescriptor(FAMILY, METHOD, VERSION)", "var_name": "DESCRIPTOR"}, {"original_string": "public static final String MSTATISTICS = \"m-statistics\";", "modifier": "public static final", "type": "String", "declarator": "MSTATISTICS = \"m-statistics\"", "var_name": "MSTATISTICS"}, {"original_string": "public static final X13ProcessingFactory instance = new X13ProcessingFactory();", "modifier": "public static final", "type": "X13ProcessingFactory", "declarator": "instance = new X13ProcessingFactory()", "var_name": "instance"}], "methods": [{"identifier": "X13ProcessingFactory", "parameters": "()", "modifiers": "protected", "return": "", "signature": " X13ProcessingFactory()", "full_signature": "protected  X13ProcessingFactory()", "class_method_signature": "X13ProcessingFactory.X13ProcessingFactory()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(X13Specification xspec, ProcessingContext context)", "modifiers": "private static", "return": "SequentialProcessing<TsData>", "signature": "SequentialProcessing<TsData> create(X13Specification xspec, ProcessingContext context)", "full_signature": "private static SequentialProcessing<TsData> create(X13Specification xspec, ProcessingContext context)", "class_method_signature": "X13ProcessingFactory.create(X13Specification xspec, ProcessingContext context)", "testcase": false, "constructor": false}, {"identifier": "addMStep", "parameters": "(SequentialProcessing processing)", "modifiers": "private static", "return": "void", "signature": "void addMStep(SequentialProcessing processing)", "full_signature": "private static void addMStep(SequentialProcessing processing)", "class_method_signature": "X13ProcessingFactory.addMStep(SequentialProcessing processing)", "testcase": false, "constructor": false}, {"identifier": "generateProcessing", "parameters": "(X13Specification xspec, ProcessingContext context)", "modifiers": "@Override public", "return": "SequentialProcessing<TsData>", "signature": "SequentialProcessing<TsData> generateProcessing(X13Specification xspec, ProcessingContext context)", "full_signature": "@Override public SequentialProcessing<TsData> generateProcessing(X13Specification xspec, ProcessingContext context)", "class_method_signature": "X13ProcessingFactory.generateProcessing(X13Specification xspec, ProcessingContext context)", "testcase": false, "constructor": false}, {"identifier": "generateProcessing", "parameters": "(X13Specification xspec)", "modifiers": "public", "return": "SequentialProcessing<TsData>", "signature": "SequentialProcessing<TsData> generateProcessing(X13Specification xspec)", "full_signature": "public SequentialProcessing<TsData> generateProcessing(X13Specification xspec)", "class_method_signature": "X13ProcessingFactory.generateProcessing(X13Specification xspec)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(TsData s, X13Specification xspec, ProcessingContext context)", "modifiers": "public static", "return": "CompositeResults", "signature": "CompositeResults process(TsData s, X13Specification xspec, ProcessingContext context)", "full_signature": "public static CompositeResults process(TsData s, X13Specification xspec, ProcessingContext context)", "class_method_signature": "X13ProcessingFactory.process(TsData s, X13Specification xspec, ProcessingContext context)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(TsData s, X13Specification xspec)", "modifiers": "public static", "return": "CompositeResults", "signature": "CompositeResults process(TsData s, X13Specification xspec)", "full_signature": "public static CompositeResults process(TsData s, X13Specification xspec)", "class_method_signature": "X13ProcessingFactory.process(TsData s, X13Specification xspec)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "X13ProcessingFactory.dispose()", "testcase": false, "constructor": false}, {"identifier": "getInformation", "parameters": "()", "modifiers": "@Override public", "return": "AlgorithmDescriptor", "signature": "AlgorithmDescriptor getInformation()", "full_signature": "@Override public AlgorithmDescriptor getInformation()", "class_method_signature": "X13ProcessingFactory.getInformation()", "testcase": false, "constructor": false}, {"identifier": "canHandle", "parameters": "(IProcSpecification spec)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandle(IProcSpecification spec)", "full_signature": "@Override public boolean canHandle(IProcSpecification spec)", "class_method_signature": "X13ProcessingFactory.canHandle(IProcSpecification spec)", "testcase": false, "constructor": false}, {"identifier": "getSpecificationDictionary", "parameters": "(Class<X13Specification> specClass)", "modifiers": "@Override public", "return": "Map<String, Class>", "signature": "Map<String, Class> getSpecificationDictionary(Class<X13Specification> specClass)", "full_signature": "@Override public Map<String, Class> getSpecificationDictionary(Class<X13Specification> specClass)", "class_method_signature": "X13ProcessingFactory.getSpecificationDictionary(Class<X13Specification> specClass)", "testcase": false, "constructor": false}, {"identifier": "getOutputDictionary", "parameters": "(boolean compact)", "modifiers": "@Override public", "return": "Map<String, Class>", "signature": "Map<String, Class> getOutputDictionary(boolean compact)", "full_signature": "@Override public Map<String, Class> getOutputDictionary(boolean compact)", "class_method_signature": "X13ProcessingFactory.getOutputDictionary(boolean compact)", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/satoolkit/algorithm/implementation/X13ProcessingFactory.java"}, "focal_method": {"identifier": "process", "parameters": "(TsData s, X13Specification xspec, ProcessingContext context)", "modifiers": "public static", "return": "CompositeResults", "body": "public static CompositeResults process(TsData s, X13Specification xspec, ProcessingContext context) {\n        SequentialProcessing<TsData> processing = create(xspec, context);\n        return processing.process(s);\n    }", "signature": "CompositeResults process(TsData s, X13Specification xspec, ProcessingContext context)", "full_signature": "public static CompositeResults process(TsData s, X13Specification xspec, ProcessingContext context)", "class_method_signature": "X13ProcessingFactory.process(TsData s, X13Specification xspec, ProcessingContext context)", "testcase": false, "constructor": false, "invocations": ["create", "process"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}