{"test_class": {"identifier": "MapServerStrategyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static MapServerStrategy strategy;", "modifier": "private static", "type": "MapServerStrategy", "declarator": "strategy", "var_name": "strategy"}], "file": "modules/unsupported/wfs/src/test/java/org/geotools/data/wfs/v1_1_0/MapServerStrategyTest.java"}, "test_case": {"identifier": "testPrefixedTypeName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPrefixedTypeName() {\n        assertEquals(\"testFeature\", strategy.getPrefixedTypeName(new QName(\"\", \"testFeature\", \"\")));\n        assertEquals(\"testFeature\", strategy.getPrefixedTypeName(new QName(\"http://www.opengis.net/wfs\", \"testFeature\", \"wfs\")));\n        assertEquals(\"test:testFeature\", strategy.getPrefixedTypeName(new QName(\"http://www.opengis.net/test\", \"testFeature\", \"test\")));\n        \n        assertNotNull(DataTestSupport.wfs.getFeatureTypeName(MAPSRV_GOVUNITCE.FEATURETYPENAME));\n    }", "signature": "void testPrefixedTypeName()", "full_signature": "@Test public void testPrefixedTypeName()", "class_method_signature": "MapServerStrategyTest.testPrefixedTypeName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getPrefixedTypeName", "assertEquals", "getPrefixedTypeName", "assertEquals", "getPrefixedTypeName", "assertNotNull", "getFeatureTypeName"]}, "focal_class": {"identifier": "MapServerStrategy", "superclass": "extends DefaultWFSStrategy", "interfaces": "", "fields": [], "methods": [{"identifier": "getPrefixedTypeName", "parameters": "(QName typeName)", "modifiers": "@Override public", "return": "String", "signature": "String getPrefixedTypeName(QName typeName)", "full_signature": "@Override public String getPrefixedTypeName(QName typeName)", "class_method_signature": "MapServerStrategy.getPrefixedTypeName(QName typeName)", "testcase": false, "constructor": false}, {"identifier": "getNamespaceURIMappings", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getNamespaceURIMappings()", "full_signature": "@Override public Map<String, String> getNamespaceURIMappings()", "class_method_signature": "MapServerStrategy.getNamespaceURIMappings()", "testcase": false, "constructor": false}, {"identifier": "canIgnoreMissingElementDeclaration", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canIgnoreMissingElementDeclaration()", "full_signature": "@Override public boolean canIgnoreMissingElementDeclaration()", "class_method_signature": "MapServerStrategy.canIgnoreMissingElementDeclaration()", "testcase": false, "constructor": false}, {"identifier": "getFieldTypeMappings", "parameters": "()", "modifiers": "@Override public", "return": "Map<QName, Class<?>>", "signature": "Map<QName, Class<?>> getFieldTypeMappings()", "full_signature": "@Override public Map<QName, Class<?>> getFieldTypeMappings()", "class_method_signature": "MapServerStrategy.getFieldTypeMappings()", "testcase": false, "constructor": false}], "file": "modules/unsupported/wfs/src/main/java/org/geotools/data/wfs/v1_1_0/MapServerStrategy.java"}, "focal_method": {"identifier": "getPrefixedTypeName", "parameters": "(QName typeName)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getPrefixedTypeName(QName typeName) {\n        // no prefix if prefix is empty or wfs\n        return (\"\".equals(typeName.getPrefix()) || \"wfs\"\n                .equals(typeName.getPrefix())) ? typeName.getLocalPart() : typeName\n                .getPrefix() + \":\" + typeName.getLocalPart();\n    }", "signature": "String getPrefixedTypeName(QName typeName)", "full_signature": "@Override public String getPrefixedTypeName(QName typeName)", "class_method_signature": "MapServerStrategy.getPrefixedTypeName(QName typeName)", "testcase": false, "constructor": false, "invocations": ["equals", "getPrefix", "equals", "getPrefix", "getLocalPart", "getPrefix", "getLocalPart"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}