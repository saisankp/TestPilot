{"test_class": {"identifier": "UserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int USER_ID = 1111007;", "modifier": "public static final", "type": "int", "declarator": "USER_ID = 1111007", "var_name": "USER_ID"}, {"original_string": "public static final String PASSWORD = \"n1c3try\";", "modifier": "public static final", "type": "String", "declarator": "PASSWORD = \"n1c3try\"", "var_name": "PASSWORD"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@Mock\n    private WebService mockWebService;", "modifier": "@Mock\n    private", "type": "WebService", "declarator": "mockWebService", "var_name": "mockWebService"}, {"original_string": "@Mock\n    private LoginInterface mockLoginInterface;", "modifier": "@Mock\n    private", "type": "LoginInterface", "declarator": "mockLoginInterface", "var_name": "mockLoginInterface"}, {"original_string": "@Captor\n    private ArgumentCaptor<Response> responseArgumentCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Response>", "declarator": "responseArgumentCaptor", "var_name": "responseArgumentCaptor"}], "file": "app/src/test/java/com/jeroenmols/mockitoexample/UserTest.java"}, "test_case": {"identifier": "stubMethod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void stubMethod() throws Exception {\n        User user = new User(mockWebService, USER_ID, PASSWORD);\n        when(mockWebService.isNetworkOffline()).thenReturn(true);\n\n        user.login(mockLoginInterface);\n\n        verify(mockWebService, never()).login(anyInt(), anyString(), any(Response.class));\n    }", "signature": "void stubMethod()", "full_signature": "@Test public void stubMethod()", "class_method_signature": "UserTest.stubMethod()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isNetworkOffline", "login", "login", "verify", "never", "anyInt", "anyString", "any"]}, "focal_class": {"identifier": "User", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final WebService webService;", "modifier": "private final", "type": "WebService", "declarator": "webService", "var_name": "webService"}, {"original_string": "private final int userId;", "modifier": "private final", "type": "int", "declarator": "userId", "var_name": "userId"}, {"original_string": "private final String password;", "modifier": "private final", "type": "String", "declarator": "password", "var_name": "password"}], "methods": [{"identifier": "User", "parameters": "(WebService webService, int userId, String password)", "modifiers": "public", "return": "", "signature": " User(WebService webService, int userId, String password)", "full_signature": "public  User(WebService webService, int userId, String password)", "class_method_signature": "User.User(WebService webService, int userId, String password)", "testcase": false, "constructor": true}, {"identifier": "login", "parameters": "(final LoginInterface loginInterface)", "modifiers": "public", "return": "void", "signature": "void login(final LoginInterface loginInterface)", "full_signature": "public void login(final LoginInterface loginInterface)", "class_method_signature": "User.login(final LoginInterface loginInterface)", "testcase": false, "constructor": false}, {"identifier": "logout", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void logout()", "full_signature": "public void logout()", "class_method_signature": "User.logout()", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(String message)", "modifiers": "public", "return": "void", "signature": "void sendMessage(String message)", "full_signature": "public void sendMessage(String message)", "class_method_signature": "User.sendMessage(String message)", "testcase": false, "constructor": false}, {"identifier": "getMessages", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void getMessages()", "full_signature": "public void getMessages()", "class_method_signature": "User.getMessages()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/jeroenmols/mockitoexample/User.java"}, "focal_method": {"identifier": "login", "parameters": "(final LoginInterface loginInterface)", "modifiers": "public", "return": "void", "body": "public void login(final LoginInterface loginInterface) {\n        if (webService.isNetworkOffline()) {\n            loginInterface.onLoginFailed();\n            return;\n        }\n\n        Response response = new Response() {\n            @Override\n            public void onRequestCompleted(boolean isSuccess, String data) {\n                if (isSuccess) {\n                    loginInterface.onLoginSuccess();\n                } else {\n                    loginInterface.onLoginFailed();\n                }\n            }\n        };\n        webService.login(userId, password, response);\n    }", "signature": "void login(final LoginInterface loginInterface)", "full_signature": "public void login(final LoginInterface loginInterface)", "class_method_signature": "User.login(final LoginInterface loginInterface)", "testcase": false, "constructor": false, "invocations": ["isNetworkOffline", "onLoginFailed", "onLoginSuccess", "onLoginFailed", "login"]}, "repository": {"repo_id": 60958121, "url": "https://github.com/JeroenMols/MockitoExample", "language": "Java", "is_fork": false, "fork_count": 27, "stargazer_count": 79, "size": 115, "license": "licensed"}}