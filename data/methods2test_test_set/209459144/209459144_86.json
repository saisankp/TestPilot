{"test_class": {"identifier": "SysDeptRestApiTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static SysDeptRestApi sysDeptRestApi = new SysDeptRestApi();", "modifier": "private static", "type": "SysDeptRestApi", "declarator": "sysDeptRestApi = new SysDeptRestApi()", "var_name": "sysDeptRestApi"}, {"original_string": "private static GsonBuilder gsonBuilder = new GsonBuilder();", "modifier": "private static", "type": "GsonBuilder", "declarator": "gsonBuilder = new GsonBuilder()", "var_name": "gsonBuilder"}, {"original_string": "private static Gson gson = gsonBuilder.setDateFormat(\"yyyy-MM-dd HH:mm:ss\").create();", "modifier": "private static", "type": "Gson", "declarator": "gson = gsonBuilder.setDateFormat(\"yyyy-MM-dd HH:mm:ss\").create()", "var_name": "gson"}], "file": "submarine-server/server-core/src/test/java/org/apache/submarine/server/workbench/rest/SysDeptRestApiTest.java"}, "test_case": {"identifier": "correctDeptDepend", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void correctDeptDepend() {\n    // Correct department dependencies\n    SysDept deptA = new SysDept(\"A\", \"deptA\");\n    SysDept deptAA = new SysDept(\"AA\", \"deptAA\");\n    deptAA.setParentCode(\"A\");\n    SysDept deptAB = new SysDept(\"AB\", \"deptAB\");\n    deptAB.setParentCode(\"A\");\n    SysDept deptAAA = new SysDept(\"AAA\", \"deptAAA\");\n    deptAAA.setParentCode(\"AA\");\n    SysDept deptABA = new SysDept(\"ABA\", \"deptABA\");\n    deptABA.setParentCode(\"AB\");\n\n    List<SysDept> depts = new ArrayList<>();\n    depts.addAll(Arrays.asList(deptA, deptAA, deptAB, deptAAA, deptABA));\n\n    for (SysDept dept : depts) {\n      Response response = sysDeptRestApi.add(dept);\n      CommonDataTest.assertDeptResponseSuccess(response);\n    }\n\n    JsonResponse<ListResult<SysDeptTree>> response = CommonDataTest.queryDeptTreeList();\n    assertEquals(response.getAttributes().size(), 0);\n    assertEquals(response.getResult().getTotal(), 5);\n  }", "signature": "void correctDeptDepend()", "full_signature": "@Test public void correctDeptDepend()", "class_method_signature": "SysDeptRestApiTest.correctDeptDepend()", "testcase": true, "constructor": false, "invocations": ["setParentCode", "setParentCode", "setParentCode", "setParentCode", "addAll", "asList", "add", "assertDeptResponseSuccess", "queryDeptTreeList", "assertEquals", "size", "getAttributes", "assertEquals", "getTotal", "getResult"]}, "focal_class": {"identifier": "SysDeptRestApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SysDeptRestApi.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SysDeptRestApi.class)", "var_name": "LOG"}, {"original_string": "public static final String SHOW_ALERT = \"showAlert\";", "modifier": "public static final", "type": "String", "declarator": "SHOW_ALERT = \"showAlert\"", "var_name": "SHOW_ALERT"}], "methods": [{"identifier": "SysDeptRestApi", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " SysDeptRestApi()", "full_signature": "@Inject public  SysDeptRestApi()", "class_method_signature": "SysDeptRestApi.SysDeptRestApi()", "testcase": false, "constructor": true}, {"identifier": "tree", "parameters": "(@QueryParam(\"deptCode\") String likeDeptCode,\n                       @QueryParam(\"deptName\") String likeDeptName)", "modifiers": "@GET @Path(\"/tree\") @SubmarineApi // Query all departments and respond to the front end in tree structure data format public", "return": "Response", "signature": "Response tree(@QueryParam(\"deptCode\") String likeDeptCode,\n                       @QueryParam(\"deptName\") String likeDeptName)", "full_signature": "@GET @Path(\"/tree\") @SubmarineApi // Query all departments and respond to the front end in tree structure data format public Response tree(@QueryParam(\"deptCode\") String likeDeptCode,\n                       @QueryParam(\"deptName\") String likeDeptName)", "class_method_signature": "SysDeptRestApi.tree(@QueryParam(\"deptCode\") String likeDeptCode,\n                       @QueryParam(\"deptName\") String likeDeptName)", "testcase": false, "constructor": false}, {"identifier": "queryIdTree", "parameters": "(@QueryParam(\"disableDeptCode\") String disableDeptCode)", "modifiers": "@GET @Path(\"/queryIdTree\") @SubmarineApi public", "return": "Response", "signature": "Response queryIdTree(@QueryParam(\"disableDeptCode\") String disableDeptCode)", "full_signature": "@GET @Path(\"/queryIdTree\") @SubmarineApi public Response queryIdTree(@QueryParam(\"disableDeptCode\") String disableDeptCode)", "class_method_signature": "SysDeptRestApi.queryIdTree(@QueryParam(\"disableDeptCode\") String disableDeptCode)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(SysDept sysDept)", "modifiers": "@POST @Path(\"/add\") @SubmarineApi public", "return": "Response", "signature": "Response add(SysDept sysDept)", "full_signature": "@POST @Path(\"/add\") @SubmarineApi public Response add(SysDept sysDept)", "class_method_signature": "SysDeptRestApi.add(SysDept sysDept)", "testcase": false, "constructor": false}, {"identifier": "edit", "parameters": "(SysDept sysDept)", "modifiers": "@PUT @Path(\"/edit\") @SubmarineApi public", "return": "Response", "signature": "Response edit(SysDept sysDept)", "full_signature": "@PUT @Path(\"/edit\") @SubmarineApi public Response edit(SysDept sysDept)", "class_method_signature": "SysDeptRestApi.edit(SysDept sysDept)", "testcase": false, "constructor": false}, {"identifier": "resetParentDept", "parameters": "()", "modifiers": "@PUT @Path(\"/resetParentDept\") @SubmarineApi public", "return": "Response", "signature": "Response resetParentDept()", "full_signature": "@PUT @Path(\"/resetParentDept\") @SubmarineApi public Response resetParentDept()", "class_method_signature": "SysDeptRestApi.resetParentDept()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@QueryParam(\"id\") String id, @QueryParam(\"deleted\") int deleted)", "modifiers": "@DELETE @Path(\"/delete\") @SubmarineApi public", "return": "Response", "signature": "Response delete(@QueryParam(\"id\") String id, @QueryParam(\"deleted\") int deleted)", "full_signature": "@DELETE @Path(\"/delete\") @SubmarineApi public Response delete(@QueryParam(\"id\") String id, @QueryParam(\"deleted\") int deleted)", "class_method_signature": "SysDeptRestApi.delete(@QueryParam(\"id\") String id, @QueryParam(\"deleted\") int deleted)", "testcase": false, "constructor": false}, {"identifier": "deleteBatch", "parameters": "(@QueryParam(\"ids\") String ids)", "modifiers": "@DELETE @Path(\"/deleteBatch\") @SubmarineApi public", "return": "Response", "signature": "Response deleteBatch(@QueryParam(\"ids\") String ids)", "full_signature": "@DELETE @Path(\"/deleteBatch\") @SubmarineApi public Response deleteBatch(@QueryParam(\"ids\") String ids)", "class_method_signature": "SysDeptRestApi.deleteBatch(@QueryParam(\"ids\") String ids)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String id)", "modifiers": "@DELETE @Path(\"/remove\") @SubmarineApi public", "return": "Response", "signature": "Response remove(String id)", "full_signature": "@DELETE @Path(\"/remove\") @SubmarineApi public Response remove(String id)", "class_method_signature": "SysDeptRestApi.remove(String id)", "testcase": false, "constructor": false}], "file": "submarine-server/server-core/src/main/java/org/apache/submarine/server/workbench/rest/SysDeptRestApi.java"}, "focal_method": {"identifier": "add", "parameters": "(SysDept sysDept)", "modifiers": "@POST @Path(\"/add\") @SubmarineApi public", "return": "Response", "body": "@POST\n  @Path(\"/add\")\n  @SubmarineApi\n  public Response add(SysDept sysDept) {\n    LOG.info(\"add({})\", sysDept.toString());\n\n    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n      SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n      sysDeptMapper.add(sysDept);\n      sqlSession.commit();\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      return new JsonResponse.Builder<>(Response.Status.OK).success(false)\n          .message(\"Save department failed!\").build();\n    }\n\n    return new JsonResponse.Builder<SysDept>(Response.Status.OK)\n        .success(true).message(\"Save department successfully!\").result(sysDept).build();\n  }", "signature": "Response add(SysDept sysDept)", "full_signature": "@POST @Path(\"/add\") @SubmarineApi public Response add(SysDept sysDept)", "class_method_signature": "SysDeptRestApi.add(SysDept sysDept)", "testcase": false, "constructor": false, "invocations": ["info", "toString", "getSqlSession", "getMapper", "add", "commit", "error", "getMessage", "build", "message", "success", "build", "result", "message", "success"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}