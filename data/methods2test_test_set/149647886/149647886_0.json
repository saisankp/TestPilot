{"test_class": {"identifier": "HttpWarmerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(HttpWarmerTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(HttpWarmerTest.class)", "var_name": "logger"}, {"original_string": "private HttpWarmerTestServer testServer;", "modifier": "private", "type": "HttpWarmerTestServer", "declarator": "testServer", "var_name": "testServer"}], "file": "centrifuge-warmers/src/test/java/com/salesforce/centrifuge/warmers/HttpWarmerTest.java"}, "test_case": {"identifier": "testNext", "parameters": "()", "modifiers": "@Test(expectedExceptions = UnknownHostException.class) public", "return": "void", "body": "@Test(expectedExceptions = UnknownHostException.class)\n    public void testNext() throws Exception {\n        final Warmer warmer = new HttpWarmer();\n        warmer.init(ImmutableMap.of(\"urls\", Collections.singletonList(\"http://foo.bar\"), \"method\", \"get\"));\n        warmer.next();\n    }", "signature": "void testNext()", "full_signature": "@Test(expectedExceptions = UnknownHostException.class) public void testNext()", "class_method_signature": "HttpWarmerTest.testNext()", "testcase": true, "constructor": false, "invocations": ["init", "of", "singletonList", "next"]}, "focal_class": {"identifier": "HttpWarmer", "superclass": "", "interfaces": "implements Warmer", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(HttpWarmer.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(HttpWarmer.class)", "var_name": "logger"}, {"original_string": "private final HttpClient client;", "modifier": "private final", "type": "HttpClient", "declarator": "client", "var_name": "client"}, {"original_string": "private List<String> urls;", "modifier": "private", "type": "List<String>", "declarator": "urls", "var_name": "urls"}, {"original_string": "private String method = \"get\";", "modifier": "private", "type": "String", "declarator": "method = \"get\"", "var_name": "method"}, {"original_string": "private String body;", "modifier": "private", "type": "String", "declarator": "body", "var_name": "body"}, {"original_string": "private Map<String, String> headers = Collections.emptyMap();", "modifier": "private", "type": "Map<String, String>", "declarator": "headers = Collections.emptyMap()", "var_name": "headers"}], "methods": [{"identifier": "HttpWarmer", "parameters": "()", "modifiers": "public", "return": "", "signature": " HttpWarmer()", "full_signature": "public  HttpWarmer()", "class_method_signature": "HttpWarmer.HttpWarmer()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(final Map<String, Object> params)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "void", "signature": "void init(final Map<String, Object> params)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public void init(final Map<String, Object> params)", "class_method_signature": "HttpWarmer.init(final Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void next()", "full_signature": "@Override public void next()", "class_method_signature": "HttpWarmer.next()", "testcase": false, "constructor": false}, {"identifier": "doNext", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void doNext()", "full_signature": "protected void doNext()", "class_method_signature": "HttpWarmer.doNext()", "testcase": false, "constructor": false}], "file": "centrifuge-warmers/src/main/java/com/salesforce/centrifuge/warmers/HttpWarmer.java"}, "focal_method": {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void next() throws Exception {\n        doNext();\n    }", "signature": "void next()", "full_signature": "@Override public void next()", "class_method_signature": "HttpWarmer.next()", "testcase": false, "constructor": false, "invocations": ["doNext"]}, "repository": {"repo_id": 149647886, "url": "https://github.com/salesforce/centrifuge", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 14, "size": 98, "license": "licensed"}}