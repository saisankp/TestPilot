{"test_class": {"identifier": "TestJsapi20SynthesizedOutput", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER =\n        Logger.getLogger(TestJsapi20SynthesizedOutput.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n        Logger.getLogger(TestJsapi20SynthesizedOutput.class)", "var_name": "LOGGER"}, {"original_string": "private static final int TIMEOUT = 1000;", "modifier": "private static final", "type": "int", "declarator": "TIMEOUT = 1000", "var_name": "TIMEOUT"}, {"original_string": "private Jsapi20SynthesizedOutput output;", "modifier": "private", "type": "Jsapi20SynthesizedOutput", "declarator": "output", "var_name": "output"}, {"original_string": "private MockSynthesizedOutputListener listener;", "modifier": "private", "type": "MockSynthesizedOutputListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "private DocumentServer documentServer;", "modifier": "private", "type": "DocumentServer", "declarator": "documentServer", "var_name": "documentServer"}, {"original_string": "private String sessionId;", "modifier": "private", "type": "String", "declarator": "sessionId", "var_name": "sessionId"}], "file": "org.jvoicexml.implementation.jsapi20/src/test/java/org/jvoicexml/implementation/jsapi20/TestJsapi20SynthesizedOutput.java"}, "test_case": {"identifier": "testWaitQueueEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWaitQueueEmpty() throws JVoiceXMLEvent, Exception {\n        final SsmlDocument ssml = new SsmlDocument();\n        final Speak speak = ssml.getSpeak();\n        speak.addText(\"this is a test\");\n        final SpeakableText speakable1 = new SpeakableSsmlText(ssml);\n        output.queueSpeakable(speakable1, sessionId, documentServer);\n        output.waitQueueEmpty();\n        Assert.assertFalse(\"output should be busy\", output.isBusy());\n    }", "signature": "void testWaitQueueEmpty()", "full_signature": "@Test public void testWaitQueueEmpty()", "class_method_signature": "TestJsapi20SynthesizedOutput.testWaitQueueEmpty()", "testcase": true, "constructor": false, "invocations": ["getSpeak", "addText", "queueSpeakable", "waitQueueEmpty", "assertFalse", "isBusy"]}, "focal_class": {"identifier": "Jsapi20SynthesizedOutput", "superclass": "", "interfaces": "implements SynthesizedOutput, SpeakableListener, SynthesizerListener,\n        AudioSource", "fields": [{"original_string": "private static final Logger LOGGER = LogManager\n            .getLogger(Jsapi20SynthesizedOutput.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager\n            .getLogger(Jsapi20SynthesizedOutput.class)", "var_name": "LOGGER"}, {"original_string": "private static final int WAIT_EMPTY_TIMEINTERVALL = 300;", "modifier": "private static final", "type": "int", "declarator": "WAIT_EMPTY_TIMEINTERVALL = 300", "var_name": "WAIT_EMPTY_TIMEINTERVALL"}, {"original_string": "private Synthesizer synthesizer;", "modifier": "private", "type": "Synthesizer", "declarator": "synthesizer", "var_name": "synthesizer"}, {"original_string": "private final SynthesizerMode desc;", "modifier": "private final", "type": "SynthesizerMode", "declarator": "desc", "var_name": "desc"}, {"original_string": "private final Collection<SynthesizedOutputListener> listeners;", "modifier": "private final", "type": "Collection<SynthesizedOutputListener>", "declarator": "listeners", "var_name": "listeners"}, {"original_string": "private String type;", "modifier": "private", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "private String mediaLocator;", "modifier": "private", "type": "String", "declarator": "mediaLocator", "var_name": "mediaLocator"}, {"original_string": "private final Object emptyLock;", "modifier": "private final", "type": "Object", "declarator": "emptyLock", "var_name": "emptyLock"}, {"original_string": "private final Queue<SpeakableText> queuedSpeakables;", "modifier": "private final", "type": "Queue<SpeakableText>", "declarator": "queuedSpeakables", "var_name": "queuedSpeakables"}, {"original_string": "private final Map<SpeakableText, Integer> queuedIds;", "modifier": "private final", "type": "Map<SpeakableText, Integer>", "declarator": "queuedIds", "var_name": "queuedIds"}, {"original_string": "private boolean supportsMarkup;", "modifier": "private", "type": "boolean", "declarator": "supportsMarkup", "var_name": "supportsMarkup"}, {"original_string": "private String sessionId;", "modifier": "private", "type": "String", "declarator": "sessionId", "var_name": "sessionId"}], "methods": [{"identifier": "Jsapi20SynthesizedOutput", "parameters": "(final SynthesizerMode defaultDescriptor,\n            final OutputMediaLocatorFactory mediaLocatorFactory)", "modifiers": "public", "return": "", "signature": " Jsapi20SynthesizedOutput(final SynthesizerMode defaultDescriptor,\n            final OutputMediaLocatorFactory mediaLocatorFactory)", "full_signature": "public  Jsapi20SynthesizedOutput(final SynthesizerMode defaultDescriptor,\n            final OutputMediaLocatorFactory mediaLocatorFactory)", "class_method_signature": "Jsapi20SynthesizedOutput.Jsapi20SynthesizedOutput(final SynthesizerMode defaultDescriptor,\n            final OutputMediaLocatorFactory mediaLocatorFactory)", "testcase": false, "constructor": true}, {"identifier": "setMediaLocator", "parameters": "(final URI locator)", "modifiers": "public", "return": "void", "signature": "void setMediaLocator(final URI locator)", "full_signature": "public void setMediaLocator(final URI locator)", "class_method_signature": "Jsapi20SynthesizedOutput.setMediaLocator(final URI locator)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void open()", "full_signature": "@Override public void open()", "class_method_signature": "Jsapi20SynthesizedOutput.open()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Jsapi20SynthesizedOutput.close()", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(final SynthesizedOutputListener outputListener)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(final SynthesizedOutputListener outputListener)", "full_signature": "@Override public void addListener(final SynthesizedOutputListener outputListener)", "class_method_signature": "Jsapi20SynthesizedOutput.addListener(final SynthesizedOutputListener outputListener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(final SynthesizedOutputListener outputListener)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(final SynthesizedOutputListener outputListener)", "full_signature": "@Override public void removeListener(final SynthesizedOutputListener outputListener)", "class_method_signature": "Jsapi20SynthesizedOutput.removeListener(final SynthesizedOutputListener outputListener)", "testcase": false, "constructor": false}, {"identifier": "queueSpeakable", "parameters": "(final SpeakableText speakable,\n            final String sessId, final DocumentServer documentServer)", "modifiers": "@Override public", "return": "void", "signature": "void queueSpeakable(final SpeakableText speakable,\n            final String sessId, final DocumentServer documentServer)", "full_signature": "@Override public void queueSpeakable(final SpeakableText speakable,\n            final String sessId, final DocumentServer documentServer)", "class_method_signature": "Jsapi20SynthesizedOutput.queueSpeakable(final SpeakableText speakable,\n            final String sessId, final DocumentServer documentServer)", "testcase": false, "constructor": false}, {"identifier": "speakSSML", "parameters": "(final SpeakableSsmlText ssmlText)", "modifiers": "private", "return": "void", "signature": "void speakSSML(final SpeakableSsmlText ssmlText)", "full_signature": "private void speakSSML(final SpeakableSsmlText ssmlText)", "class_method_signature": "Jsapi20SynthesizedOutput.speakSSML(final SpeakableSsmlText ssmlText)", "testcase": false, "constructor": false}, {"identifier": "processNextSpeakable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void processNextSpeakable()", "full_signature": "private void processNextSpeakable()", "class_method_signature": "Jsapi20SynthesizedOutput.processNextSpeakable()", "testcase": false, "constructor": false}, {"identifier": "fireOutputStarted", "parameters": "(final SpeakableText speakable)", "modifiers": "private", "return": "void", "signature": "void fireOutputStarted(final SpeakableText speakable)", "full_signature": "private void fireOutputStarted(final SpeakableText speakable)", "class_method_signature": "Jsapi20SynthesizedOutput.fireOutputStarted(final SpeakableText speakable)", "testcase": false, "constructor": false}, {"identifier": "fireMarkerReached", "parameters": "(final String mark)", "modifiers": "private", "return": "void", "signature": "void fireMarkerReached(final String mark)", "full_signature": "private void fireMarkerReached(final String mark)", "class_method_signature": "Jsapi20SynthesizedOutput.fireMarkerReached(final String mark)", "testcase": false, "constructor": false}, {"identifier": "fireOutputEnded", "parameters": "(final SpeakableText speakable)", "modifiers": "private", "return": "void", "signature": "void fireOutputEnded(final SpeakableText speakable)", "full_signature": "private void fireOutputEnded(final SpeakableText speakable)", "class_method_signature": "Jsapi20SynthesizedOutput.fireOutputEnded(final SpeakableText speakable)", "testcase": false, "constructor": false}, {"identifier": "fireQueueEmpty", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void fireQueueEmpty()", "full_signature": "private void fireQueueEmpty()", "class_method_signature": "Jsapi20SynthesizedOutput.fireQueueEmpty()", "testcase": false, "constructor": false}, {"identifier": "speakPlaintext", "parameters": "(final SpeakableSsmlText speakable)", "modifiers": "private", "return": "void", "signature": "void speakPlaintext(final SpeakableSsmlText speakable)", "full_signature": "private void speakPlaintext(final SpeakableSsmlText speakable)", "class_method_signature": "Jsapi20SynthesizedOutput.speakPlaintext(final SpeakableSsmlText speakable)", "testcase": false, "constructor": false}, {"identifier": "supportsBargeIn", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsBargeIn()", "full_signature": "@Override public boolean supportsBargeIn()", "class_method_signature": "Jsapi20SynthesizedOutput.supportsBargeIn()", "testcase": false, "constructor": false}, {"identifier": "cancelOutput", "parameters": "(final BargeInType bargeInType)", "modifiers": "@Override public", "return": "void", "signature": "void cancelOutput(final BargeInType bargeInType)", "full_signature": "@Override public void cancelOutput(final BargeInType bargeInType)", "class_method_signature": "Jsapi20SynthesizedOutput.cancelOutput(final BargeInType bargeInType)", "testcase": false, "constructor": false}, {"identifier": "waitNonBargeInPlayed", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void waitNonBargeInPlayed()", "full_signature": "@Override public void waitNonBargeInPlayed()", "class_method_signature": "Jsapi20SynthesizedOutput.waitNonBargeInPlayed()", "testcase": false, "constructor": false}, {"identifier": "waitQueueEmpty", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void waitQueueEmpty()", "full_signature": "@Override public void waitQueueEmpty()", "class_method_signature": "Jsapi20SynthesizedOutput.waitQueueEmpty()", "testcase": false, "constructor": false}, {"identifier": "reachedMark", "parameters": "(final String mark)", "modifiers": "public", "return": "void", "signature": "void reachedMark(final String mark)", "full_signature": "public void reachedMark(final String mark)", "class_method_signature": "Jsapi20SynthesizedOutput.reachedMark(final String mark)", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void activate()", "full_signature": "@Override public void activate()", "class_method_signature": "Jsapi20SynthesizedOutput.activate()", "testcase": false, "constructor": false}, {"identifier": "getAudioFormat", "parameters": "()", "modifiers": "@Override public", "return": "AudioFormat", "signature": "AudioFormat getAudioFormat()", "full_signature": "@Override public AudioFormat getAudioFormat()", "class_method_signature": "Jsapi20SynthesizedOutput.getAudioFormat()", "testcase": false, "constructor": false}, {"identifier": "setOutputStream", "parameters": "(final OutputStream out)", "modifiers": "@Override public", "return": "void", "signature": "void setOutputStream(final OutputStream out)", "full_signature": "@Override public void setOutputStream(final OutputStream out)", "class_method_signature": "Jsapi20SynthesizedOutput.setOutputStream(final OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "passivate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void passivate()", "full_signature": "@Override public void passivate()", "class_method_signature": "Jsapi20SynthesizedOutput.passivate()", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(final ConnectionInformation info)", "modifiers": "@Override public", "return": "void", "signature": "void connect(final ConnectionInformation info)", "full_signature": "@Override public void connect(final ConnectionInformation info)", "class_method_signature": "Jsapi20SynthesizedOutput.connect(final ConnectionInformation info)", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "(final ConnectionInformation info)", "modifiers": "@Override public", "return": "void", "signature": "void disconnect(final ConnectionInformation info)", "full_signature": "@Override public void disconnect(final ConnectionInformation info)", "class_method_signature": "Jsapi20SynthesizedOutput.disconnect(final ConnectionInformation info)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getType()", "full_signature": "@Override public String getType()", "class_method_signature": "Jsapi20SynthesizedOutput.getType()", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(final String resourceType)", "modifiers": "public", "return": "void", "signature": "void setType(final String resourceType)", "full_signature": "public void setType(final String resourceType)", "class_method_signature": "Jsapi20SynthesizedOutput.setType(final String resourceType)", "testcase": false, "constructor": false}, {"identifier": "isBusy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isBusy()", "full_signature": "@Override public boolean isBusy()", "class_method_signature": "Jsapi20SynthesizedOutput.isBusy()", "testcase": false, "constructor": false}, {"identifier": "speakableUpdate", "parameters": "(final SpeakableEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void speakableUpdate(final SpeakableEvent event)", "full_signature": "@Override public void speakableUpdate(final SpeakableEvent event)", "class_method_signature": "Jsapi20SynthesizedOutput.speakableUpdate(final SpeakableEvent event)", "testcase": false, "constructor": false}, {"identifier": "synthesizerUpdate", "parameters": "(final SynthesizerEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void synthesizerUpdate(final SynthesizerEvent event)", "full_signature": "@Override public void synthesizerUpdate(final SynthesizerEvent event)", "class_method_signature": "Jsapi20SynthesizedOutput.synthesizerUpdate(final SynthesizerEvent event)", "testcase": false, "constructor": false}, {"identifier": "notifyError", "parameters": "(final ErrorEvent error)", "modifiers": "private", "return": "void", "signature": "void notifyError(final ErrorEvent error)", "full_signature": "private void notifyError(final ErrorEvent error)", "class_method_signature": "Jsapi20SynthesizedOutput.notifyError(final ErrorEvent error)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.implementation.jsapi20/src/main/java/org/jvoicexml/implementation/jsapi20/Jsapi20SynthesizedOutput.java"}, "focal_method": {"identifier": "waitQueueEmpty", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void waitQueueEmpty() {\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"waiting for empty queue...\");\n        }\n        while (!queuedSpeakables.isEmpty()) {\n            synchronized (emptyLock) {\n                try {\n                    emptyLock.wait(WAIT_EMPTY_TIMEINTERVALL);\n                } catch (InterruptedException e) {\n                    return;\n                }\n            }\n        }\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"...queue emptied\");\n        }\n    }", "signature": "void waitQueueEmpty()", "full_signature": "@Override public void waitQueueEmpty()", "class_method_signature": "Jsapi20SynthesizedOutput.waitQueueEmpty()", "testcase": false, "constructor": false, "invocations": ["isDebugEnabled", "debug", "isEmpty", "wait", "isDebugEnabled", "debug"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}