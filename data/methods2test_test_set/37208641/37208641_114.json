{"test_class": {"identifier": "OperationsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "WebDriver driver;", "modifier": "", "type": "WebDriver", "declarator": "driver", "var_name": "driver"}, {"original_string": "InBrowser browser;", "modifier": "", "type": "InBrowser", "declarator": "browser", "var_name": "browser"}, {"original_string": "WebElement webel;", "modifier": "", "type": "WebElement", "declarator": "webel", "var_name": "webel"}], "file": "jdollarx/src/test/java/com/github/loyada/jdollarx/OperationsTest.java"}, "test_case": {"identifier": "clickWithRetriesSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void clickWithRetriesSuccess() throws Exception {\n        when(browser.clickOn(any())).thenThrow(NoSuchElementException.class).thenThrow(NoSuchElementException.class).thenReturn(webel);\n        Operations.doWithRetries(() -> browser.clickOn(div), 5, 10);\n        verify(browser, times(3)).clickOn(div);\n\n    }", "signature": "void clickWithRetriesSuccess()", "full_signature": "@Test public void clickWithRetriesSuccess()", "class_method_signature": "OperationsTest.clickWithRetriesSuccess()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "thenThrow", "thenThrow", "when", "clickOn", "any", "doWithRetries", "clickOn", "clickOn", "verify", "times"]}, "focal_class": {"identifier": "Operations", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "doWithRetries", "parameters": "(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            )", "modifiers": "public static", "return": "void", "signature": "void doWithRetries(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            )", "full_signature": "public static void doWithRetries(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            )", "class_method_signature": "Operations.doWithRetries(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            )", "testcase": false, "constructor": false}, {"identifier": "doWithRetries", "parameters": "(\n            Callable<T> action,\n            int numberOfRetries,\n            int sleepInMillisec\n    )", "modifiers": "public static", "return": "T", "signature": "T doWithRetries(\n            Callable<T> action,\n            int numberOfRetries,\n            int sleepInMillisec\n    )", "full_signature": "public static T doWithRetries(\n            Callable<T> action,\n            int numberOfRetries,\n            int sleepInMillisec\n    )", "class_method_signature": "Operations.doWithRetries(\n            Callable<T> action,\n            int numberOfRetries,\n            int sleepInMillisec\n    )", "testcase": false, "constructor": false}, {"identifier": "preformActions", "parameters": "(WebDriver driver, UnaryOperator<Actions> func)", "modifiers": "private static", "return": "void", "signature": "void preformActions(WebDriver driver, UnaryOperator<Actions> func)", "full_signature": "private static void preformActions(WebDriver driver, UnaryOperator<Actions> func)", "class_method_signature": "Operations.preformActions(WebDriver driver, UnaryOperator<Actions> func)", "testcase": false, "constructor": false}], "file": "jdollarx/src/main/java/com/github/loyada/jdollarx/Operations.java"}, "focal_method": {"identifier": "doWithRetries", "parameters": "(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            )", "modifiers": "public static", "return": "void", "body": "public static  void doWithRetries(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            ){\n            int triesLeft = numberOfRetries;\n            while (true) {\n                try {\n                    action.run();\n                    return;\n                } catch (Exception|AssertionError e) {\n                    triesLeft-=1;\n                    if (triesLeft<=0) {\n                        throw e;\n                    }\n                    try {\n                        sleep(sleepInMillisec);\n                    } catch (InterruptedException intEx) {\n                        throw new RuntimeException(intEx);\n                    }\n                }\n        }\n    }", "signature": "void doWithRetries(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            )", "full_signature": "public static void doWithRetries(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            )", "class_method_signature": "Operations.doWithRetries(\n            Runnable action,\n            int numberOfRetries,\n            int sleepInMillisec\n            )", "testcase": false, "constructor": false, "invocations": ["run", "sleep"]}, "repository": {"repo_id": 37208641, "url": "https://github.com/loyada/dollarx", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 10, "size": 19585, "license": "licensed"}}