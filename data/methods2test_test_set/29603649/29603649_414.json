{"test_class": {"identifier": "MessageLoggingToggleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PropertyDto.Builder builder;", "modifier": "private", "type": "PropertyDto.Builder", "declarator": "builder", "var_name": "builder"}, {"original_string": "@InjectMocks\n    private MessageLoggingToggle underTest;", "modifier": "@InjectMocks\n    private", "type": "MessageLoggingToggle", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private ProcessorBase jmsRequestLogger;", "modifier": "@Mock\n    private", "type": "ProcessorBase", "declarator": "jmsRequestLogger", "var_name": "jmsRequestLogger"}, {"original_string": "@Mock\n    private ProcessorBase jmsResponseProcessor;", "modifier": "@Mock\n    private", "type": "ProcessorBase", "declarator": "jmsResponseProcessor", "var_name": "jmsResponseProcessor"}, {"original_string": "@Mock\n    private WilmaHttpRequestProcessor requestHandler;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequestProcessor", "declarator": "requestHandler", "var_name": "requestHandler"}, {"original_string": "@Mock\n    private WilmaHttpResponseProcessor responseHandler;", "modifier": "@Mock\n    private", "type": "WilmaHttpResponseProcessor", "declarator": "responseHandler", "var_name": "responseHandler"}, {"original_string": "@Mock\n    private CoreConfigurationAccess configurationAccess;", "modifier": "@Mock\n    private", "type": "CoreConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Mock\n    private ContextRefreshedEvent event;", "modifier": "@Mock\n    private", "type": "ContextRefreshedEvent", "declarator": "event", "var_name": "event"}], "file": "wilma-application/modules/wilma-core/src/test/java/com/epam/wilma/core/toggle/message/MessageLoggingToggleTest.java"}, "test_case": {"identifier": "testIsRequestLoggingOnReturnsFalseIfHandlerDoesntContainProcessor", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testIsRequestLoggingOnReturnsFalseIfHandlerDoesntContainProcessor() {\n        // GIVEN in setup\n        given(requestHandler.isProcessorEnabled(jmsRequestLogger)).willReturn(false);\n        // WHEN\n        boolean actual = underTest.isRequestLoggingOn();\n        // THEN\n        verify(requestHandler).isProcessorEnabled(jmsRequestLogger);\n        assertFalse(actual);\n    }", "signature": "void testIsRequestLoggingOnReturnsFalseIfHandlerDoesntContainProcessor()", "full_signature": "@Test public final void testIsRequestLoggingOnReturnsFalseIfHandlerDoesntContainProcessor()", "class_method_signature": "MessageLoggingToggleTest.testIsRequestLoggingOnReturnsFalseIfHandlerDoesntContainProcessor()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "isProcessorEnabled", "isRequestLoggingOn", "isProcessorEnabled", "verify", "assertFalse"]}, "focal_class": {"identifier": "MessageLoggingToggle", "superclass": "", "interfaces": "implements ApplicationListener<ContextRefreshedEvent>", "fields": [{"original_string": "@Autowired\n    @Qualifier(\"jmsResponseProcessor\")\n    private ProcessorBase jmsResponseProcessor;", "modifier": "@Autowired\n    @Qualifier(\"jmsResponseProcessor\")\n    private", "type": "ProcessorBase", "declarator": "jmsResponseProcessor", "var_name": "jmsResponseProcessor"}, {"original_string": "@Autowired\n    @Qualifier(\"jmsRequestLoggerProcessor\")\n    private ProcessorBase jmsRequestLoggerProcessor;", "modifier": "@Autowired\n    @Qualifier(\"jmsRequestLoggerProcessor\")\n    private", "type": "ProcessorBase", "declarator": "jmsRequestLoggerProcessor", "var_name": "jmsRequestLoggerProcessor"}, {"original_string": "@Autowired\n    private WilmaHttpRequestProcessor requestProcessor;", "modifier": "@Autowired\n    private", "type": "WilmaHttpRequestProcessor", "declarator": "requestProcessor", "var_name": "requestProcessor"}, {"original_string": "@Autowired\n    private WilmaHttpResponseProcessor responseProcessor;", "modifier": "@Autowired\n    private", "type": "WilmaHttpResponseProcessor", "declarator": "responseProcessor", "var_name": "responseProcessor"}, {"original_string": "@Autowired\n    private CoreConfigurationAccess configurationAccess;", "modifier": "@Autowired\n    private", "type": "CoreConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}], "methods": [{"identifier": "onApplicationEvent", "parameters": "(final ContextRefreshedEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void onApplicationEvent(final ContextRefreshedEvent event)", "full_signature": "@Override public void onApplicationEvent(final ContextRefreshedEvent event)", "class_method_signature": "MessageLoggingToggle.onApplicationEvent(final ContextRefreshedEvent event)", "testcase": false, "constructor": false}, {"identifier": "switchOffMessageLogging", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void switchOffMessageLogging()", "full_signature": "public void switchOffMessageLogging()", "class_method_signature": "MessageLoggingToggle.switchOffMessageLogging()", "testcase": false, "constructor": false}, {"identifier": "switchOnMessageLogging", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void switchOnMessageLogging()", "full_signature": "public void switchOnMessageLogging()", "class_method_signature": "MessageLoggingToggle.switchOnMessageLogging()", "testcase": false, "constructor": false}, {"identifier": "isRequestLoggingOn", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRequestLoggingOn()", "full_signature": "public boolean isRequestLoggingOn()", "class_method_signature": "MessageLoggingToggle.isRequestLoggingOn()", "testcase": false, "constructor": false}, {"identifier": "isResponseLoggingOn", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isResponseLoggingOn()", "full_signature": "public boolean isResponseLoggingOn()", "class_method_signature": "MessageLoggingToggle.isResponseLoggingOn()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-core/src/main/java/com/epam/wilma/core/toggle/message/MessageLoggingToggle.java"}, "focal_method": {"identifier": "isRequestLoggingOn", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isRequestLoggingOn() {\n        return requestProcessor.isProcessorEnabled(jmsRequestLoggerProcessor);\n    }", "signature": "boolean isRequestLoggingOn()", "full_signature": "public boolean isRequestLoggingOn()", "class_method_signature": "MessageLoggingToggle.isRequestLoggingOn()", "testcase": false, "constructor": false, "invocations": ["isProcessorEnabled"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}