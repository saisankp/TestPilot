{"test_class": {"identifier": "WorkDefinitionImplTest", "superclass": "extends AbstractBaseTest", "interfaces": "", "fields": [], "file": "jbpm-flow-builder/src/test/java/org/jbpm/process/workitem/WorkDefinitionImplTest.java"}, "test_case": {"identifier": "testParameterValuesWithEnumsOnly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParameterValuesWithEnumsOnly() throws Exception {\n        Map<String, WorkDefinitionImpl> repoResults = WorkItemRepository.getWorkDefinitions(getClass().getResource(\"repository\").toURI().toString());\n        assertNotNull(repoResults);\n        assertFalse(repoResults.isEmpty());\n        assertEquals(repoResults.size(), 9);\n\n        WorkDefinitionImpl testServiceWithParamValues = repoResults.get(\"TestServiceWithParamValues\");\n        assertNotNull(testServiceWithParamValues);\n        assertNotNull(testServiceWithParamValues.getParameterValues());\n\n        Map<String, Object> parameterValues = testServiceWithParamValues.getParameterValues();\n        assertNotNull(parameterValues);\n        assertEquals(parameterValues.size(), 2);\n        for( Map.Entry<String, Object> entry : parameterValues.entrySet() ) {\n            assertTrue( entry.getValue() instanceof  EnumDataType );\n\n            if (entry.getKey().equals(\"param1\")) {\n                EnumDataType paramEnum = (EnumDataType) entry.getValue();\n                assertEquals(\"org.jbpm.process.workitem.enums.AnimalsEnum\", paramEnum.getClassName());\n                Map<String, Object> paramValuesMap = paramEnum.getValueMap(null);\n                assertNotNull(paramValuesMap);\n                assertEquals(5, paramValuesMap.size());\n\n                assertTrue(paramValuesMap.containsKey(\"DOGS\"));\n                assertTrue(paramValuesMap.containsKey(\"CATS\"));\n                assertTrue(paramValuesMap.containsKey(\"ELEPHANTS\"));\n                assertTrue(paramValuesMap.containsKey(\"GIRAFFES\"));\n                assertTrue(paramValuesMap.containsKey(\"BIRDS\"));\n\n                assertEquals(paramValuesMap.get(\"DOGS\"), AnimalsEnum.DOGS);\n                assertEquals(paramValuesMap.get(\"CATS\"), AnimalsEnum.CATS);\n                assertEquals(paramValuesMap.get(\"ELEPHANTS\"), AnimalsEnum.ELEPHANTS);\n                assertEquals(paramValuesMap.get(\"GIRAFFES\"), AnimalsEnum.GIRAFFES);\n                assertEquals(paramValuesMap.get(\"BIRDS\"), AnimalsEnum.BIRDS);\n\n            } else if(entry.getKey().equals(\"param3\")) {\n                EnumDataType paramEnum = (EnumDataType) entry.getValue();\n                assertEquals(\"org.jbpm.process.workitem.enums.CarsEnum\", paramEnum.getClassName());\n                Map<String, Object> paramValuesMap = paramEnum.getValueMap(null);\n                assertNotNull(paramValuesMap);\n                assertEquals(5, paramValuesMap.size());\n\n                assertTrue(paramValuesMap.containsKey(\"HONDA\"));\n                assertTrue(paramValuesMap.containsKey(\"MAZDA\"));\n                assertTrue(paramValuesMap.containsKey(\"NISSAN\"));\n                assertTrue(paramValuesMap.containsKey(\"TOYOTA\"));\n                assertTrue(paramValuesMap.containsKey(\"FORD\"));\n\n                assertEquals(paramValuesMap.get(\"HONDA\"), CarsEnum.HONDA);\n                assertEquals(paramValuesMap.get(\"MAZDA\"), CarsEnum.MAZDA);\n                assertEquals(paramValuesMap.get(\"NISSAN\"), CarsEnum.NISSAN);\n                assertEquals(paramValuesMap.get(\"TOYOTA\"), CarsEnum.TOYOTA);\n                assertEquals(paramValuesMap.get(\"FORD\"), CarsEnum.FORD);\n            } else {\n                fail(\"invalid parameter name\");\n            }\n        }\n\n    }", "signature": "void testParameterValuesWithEnumsOnly()", "full_signature": "@Test public void testParameterValuesWithEnumsOnly()", "class_method_signature": "WorkDefinitionImplTest.testParameterValuesWithEnumsOnly()", "testcase": true, "constructor": false, "invocations": ["getWorkDefinitions", "toString", "toURI", "getResource", "getClass", "assertNotNull", "assertFalse", "isEmpty", "assertEquals", "size", "get", "assertNotNull", "assertNotNull", "getParameterValues", "getParameterValues", "assertNotNull", "assertEquals", "size", "entrySet", "assertTrue", "getValue", "equals", "getKey", "getValue", "assertEquals", "getClassName", "getValueMap", "assertNotNull", "assertEquals", "size", "assertTrue", "containsKey", "assertTrue", "containsKey", "assertTrue", "containsKey", "assertTrue", "containsKey", "assertTrue", "containsKey", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "equals", "getKey", "getValue", "assertEquals", "getClassName", "getValueMap", "assertNotNull", "assertEquals", "size", "assertTrue", "containsKey", "assertTrue", "containsKey", "assertTrue", "containsKey", "assertTrue", "containsKey", "assertTrue", "containsKey", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "fail"]}, "focal_class": {"identifier": "WorkDefinitionImpl", "superclass": "extends org.jbpm.process.core.impl.WorkDefinitionExtensionImpl", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 5L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 5L", "var_name": "serialVersionUID"}, {"original_string": "private String[] dependencies;", "modifier": "private", "type": "String[]", "declarator": "dependencies", "var_name": "dependencies"}, {"original_string": "private String[] mavenDependencies;", "modifier": "private", "type": "String[]", "declarator": "mavenDependencies", "var_name": "mavenDependencies"}, {"original_string": "private String description;", "modifier": "private", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "private String defaultHandler;", "modifier": "private", "type": "String", "declarator": "defaultHandler", "var_name": "defaultHandler"}, {"original_string": "private String category;", "modifier": "private", "type": "String", "declarator": "category", "var_name": "category"}, {"original_string": "private String path;", "modifier": "private", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "private String file;", "modifier": "private", "type": "String", "declarator": "file", "var_name": "file"}, {"original_string": "private String documentation;", "modifier": "private", "type": "String", "declarator": "documentation", "var_name": "documentation"}, {"original_string": "private String iconEncoded;", "modifier": "private", "type": "String", "declarator": "iconEncoded", "var_name": "iconEncoded"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private String widType;", "modifier": "private", "type": "String", "declarator": "widType", "var_name": "widType"}, {"original_string": "private Map<String, Object> parameterValues = new HashMap<>();", "modifier": "private", "type": "Map<String, Object>", "declarator": "parameterValues = new HashMap<>()", "var_name": "parameterValues"}], "methods": [{"identifier": "getDocumentation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDocumentation()", "full_signature": "public String getDocumentation()", "class_method_signature": "WorkDefinitionImpl.getDocumentation()", "testcase": false, "constructor": false}, {"identifier": "setDocumentation", "parameters": "(String documentation)", "modifiers": "public", "return": "void", "signature": "void setDocumentation(String documentation)", "full_signature": "public void setDocumentation(String documentation)", "class_method_signature": "WorkDefinitionImpl.setDocumentation(String documentation)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFile()", "full_signature": "public String getFile()", "class_method_signature": "WorkDefinitionImpl.getFile()", "testcase": false, "constructor": false}, {"identifier": "setFile", "parameters": "(String file)", "modifiers": "public", "return": "void", "signature": "void setFile(String file)", "full_signature": "public void setFile(String file)", "class_method_signature": "WorkDefinitionImpl.setFile(String file)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPath()", "full_signature": "public String getPath()", "class_method_signature": "WorkDefinitionImpl.getPath()", "testcase": false, "constructor": false}, {"identifier": "setPath", "parameters": "(String path)", "modifiers": "public", "return": "void", "signature": "void setPath(String path)", "full_signature": "public void setPath(String path)", "class_method_signature": "WorkDefinitionImpl.setPath(String path)", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCategory()", "full_signature": "public String getCategory()", "class_method_signature": "WorkDefinitionImpl.getCategory()", "testcase": false, "constructor": false}, {"identifier": "setCategory", "parameters": "(String category)", "modifiers": "public", "return": "void", "signature": "void setCategory(String category)", "full_signature": "public void setCategory(String category)", "class_method_signature": "WorkDefinitionImpl.setCategory(String category)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getDependencies()", "full_signature": "public String[] getDependencies()", "class_method_signature": "WorkDefinitionImpl.getDependencies()", "testcase": false, "constructor": false}, {"identifier": "setDependencies", "parameters": "(String[] dependencies)", "modifiers": "public", "return": "void", "signature": "void setDependencies(String[] dependencies)", "full_signature": "public void setDependencies(String[] dependencies)", "class_method_signature": "WorkDefinitionImpl.setDependencies(String[] dependencies)", "testcase": false, "constructor": false}, {"identifier": "getDefaultHandler", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultHandler()", "full_signature": "public String getDefaultHandler()", "class_method_signature": "WorkDefinitionImpl.getDefaultHandler()", "testcase": false, "constructor": false}, {"identifier": "setDefaultHandler", "parameters": "(String defaultHandler)", "modifiers": "public", "return": "void", "signature": "void setDefaultHandler(String defaultHandler)", "full_signature": "public void setDefaultHandler(String defaultHandler)", "class_method_signature": "WorkDefinitionImpl.setDefaultHandler(String defaultHandler)", "testcase": false, "constructor": false}, {"identifier": "getIconEncoded", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIconEncoded()", "full_signature": "public String getIconEncoded()", "class_method_signature": "WorkDefinitionImpl.getIconEncoded()", "testcase": false, "constructor": false}, {"identifier": "setIconEncoded", "parameters": "(String iconEncoded)", "modifiers": "public", "return": "void", "signature": "void setIconEncoded(String iconEncoded)", "full_signature": "public void setIconEncoded(String iconEncoded)", "class_method_signature": "WorkDefinitionImpl.setIconEncoded(String iconEncoded)", "testcase": false, "constructor": false}, {"identifier": "getMavenDependencies", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getMavenDependencies()", "full_signature": "public String[] getMavenDependencies()", "class_method_signature": "WorkDefinitionImpl.getMavenDependencies()", "testcase": false, "constructor": false}, {"identifier": "setMavenDependencies", "parameters": "(String[] mavenDependencies)", "modifiers": "public", "return": "void", "signature": "void setMavenDependencies(String[] mavenDependencies)", "full_signature": "public void setMavenDependencies(String[] mavenDependencies)", "class_method_signature": "WorkDefinitionImpl.setMavenDependencies(String[] mavenDependencies)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "WorkDefinitionImpl.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "void", "signature": "void setVersion(String version)", "full_signature": "public void setVersion(String version)", "class_method_signature": "WorkDefinitionImpl.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "WorkDefinitionImpl.getDescription()", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(String description)", "modifiers": "public", "return": "void", "signature": "void setDescription(String description)", "full_signature": "public void setDescription(String description)", "class_method_signature": "WorkDefinitionImpl.setDescription(String description)", "testcase": false, "constructor": false}, {"identifier": "getWidType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWidType()", "full_signature": "public String getWidType()", "class_method_signature": "WorkDefinitionImpl.getWidType()", "testcase": false, "constructor": false}, {"identifier": "setWidType", "parameters": "(String widType)", "modifiers": "public", "return": "void", "signature": "void setWidType(String widType)", "full_signature": "public void setWidType(String widType)", "class_method_signature": "WorkDefinitionImpl.setWidType(String widType)", "testcase": false, "constructor": false}, {"identifier": "getParameterValues", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getParameterValues()", "full_signature": "public Map<String, Object> getParameterValues()", "class_method_signature": "WorkDefinitionImpl.getParameterValues()", "testcase": false, "constructor": false}, {"identifier": "setParameterValues", "parameters": "(Map<String, Object> parameterValues)", "modifiers": "public", "return": "void", "signature": "void setParameterValues(Map<String, Object> parameterValues)", "full_signature": "public void setParameterValues(Map<String, Object> parameterValues)", "class_method_signature": "WorkDefinitionImpl.setParameterValues(Map<String, Object> parameterValues)", "testcase": false, "constructor": false}, {"identifier": "addParameterValue", "parameters": "(String key, Object value)", "modifiers": "public", "return": "void", "signature": "void addParameterValue(String key, Object value)", "full_signature": "public void addParameterValue(String key, Object value)", "class_method_signature": "WorkDefinitionImpl.addParameterValue(String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "removeParameterValue", "parameters": "(String key)", "modifiers": "public", "return": "void", "signature": "void removeParameterValue(String key)", "full_signature": "public void removeParameterValue(String key)", "class_method_signature": "WorkDefinitionImpl.removeParameterValue(String key)", "testcase": false, "constructor": false}, {"identifier": "getParameterValueNames", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getParameterValueNames()", "full_signature": "public String[] getParameterValueNames()", "class_method_signature": "WorkDefinitionImpl.getParameterValueNames()", "testcase": false, "constructor": false}], "file": "jbpm-flow-builder/src/main/java/org/jbpm/process/workitem/WorkDefinitionImpl.java"}, "focal_method": {"identifier": "getParameterValues", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "body": "public Map<String, Object> getParameterValues() {\n\t\treturn this.parameterValues;\n\t}", "signature": "Map<String, Object> getParameterValues()", "full_signature": "public Map<String, Object> getParameterValues()", "class_method_signature": "WorkDefinitionImpl.getParameterValues()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}