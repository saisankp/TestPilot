{"test_class": {"identifier": "TestC2NiFiRegistryClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NiFiRegistryClient client;", "modifier": "private", "type": "NiFiRegistryClient", "declarator": "client", "var_name": "client"}, {"original_string": "private BucketClient bucketClient;", "modifier": "private", "type": "BucketClient", "declarator": "bucketClient", "var_name": "bucketClient"}, {"original_string": "private static final String REGISTRY_URL = \"http://localhost:18080\";", "modifier": "private static final", "type": "String", "declarator": "REGISTRY_URL = \"http://localhost:18080\"", "var_name": "REGISTRY_URL"}, {"original_string": "private static final String BUCKET_ID = UUID.randomUUID().toString();", "modifier": "private static final", "type": "String", "declarator": "BUCKET_ID = UUID.randomUUID().toString()", "var_name": "BUCKET_ID"}, {"original_string": "private static final String BUCKET_NAME = \"Test Bucket\";", "modifier": "private static final", "type": "String", "declarator": "BUCKET_NAME = \"Test Bucket\"", "var_name": "BUCKET_NAME"}, {"original_string": "private Bucket noNameBucket;", "modifier": "private", "type": "Bucket", "declarator": "noNameBucket", "var_name": "noNameBucket"}, {"original_string": "private Bucket nonMatchingBucket;", "modifier": "private", "type": "Bucket", "declarator": "nonMatchingBucket", "var_name": "nonMatchingBucket"}, {"original_string": "private Bucket matchingBucket;", "modifier": "private", "type": "Bucket", "declarator": "matchingBucket", "var_name": "matchingBucket"}], "file": "efm/efm-c2-protocol/efm-c2-protocol-framework/src/test/java/com/cloudera/cem/efm/service/flow/client/TestC2NiFiRegistryClient.java"}, "test_case": {"identifier": "testResolveBucketIdWhenNameIsSetButNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolveBucketIdWhenNameIsSetButNotFound() throws Exception {\n        C2NiFiRegistryClient client = createC2NiFiRegistryClient(null, matchingBucket.getName());\n\n        when(bucketClient.getAll()).thenReturn(Arrays.asList(noNameBucket, nonMatchingBucket));\n\n        assertFalse(client.resolveNiFiRegistryBucketId().isPresent());\n    }", "signature": "void testResolveBucketIdWhenNameIsSetButNotFound()", "full_signature": "@Test public void testResolveBucketIdWhenNameIsSetButNotFound()", "class_method_signature": "TestC2NiFiRegistryClient.testResolveBucketIdWhenNameIsSetButNotFound()", "testcase": true, "constructor": false, "invocations": ["createC2NiFiRegistryClient", "getName", "thenReturn", "when", "getAll", "asList", "assertFalse", "isPresent", "resolveNiFiRegistryBucketId"]}, "focal_class": {"identifier": "C2NiFiRegistryClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(C2NiFiRegistryClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(C2NiFiRegistryClient.class)", "var_name": "logger"}, {"original_string": "private final String registryUrl;", "modifier": "private final", "type": "String", "declarator": "registryUrl", "var_name": "registryUrl"}, {"original_string": "private final String registryBucketId;", "modifier": "private final", "type": "String", "declarator": "registryBucketId", "var_name": "registryBucketId"}, {"original_string": "private final String registryBucketName;", "modifier": "private final", "type": "String", "declarator": "registryBucketName", "var_name": "registryBucketName"}, {"original_string": "private final NiFiRegistryClient client;", "modifier": "private final", "type": "NiFiRegistryClient", "declarator": "client", "var_name": "client"}], "methods": [{"identifier": "C2NiFiRegistryClient", "parameters": "(\n            final NifiRegistryProperties nifiRegistryProperties,\n            final ServerProperties serverProperties)", "modifiers": "@Autowired public", "return": "", "signature": " C2NiFiRegistryClient(\n            final NifiRegistryProperties nifiRegistryProperties,\n            final ServerProperties serverProperties)", "full_signature": "@Autowired public  C2NiFiRegistryClient(\n            final NifiRegistryProperties nifiRegistryProperties,\n            final ServerProperties serverProperties)", "class_method_signature": "C2NiFiRegistryClient.C2NiFiRegistryClient(\n            final NifiRegistryProperties nifiRegistryProperties,\n            final ServerProperties serverProperties)", "testcase": false, "constructor": true}, {"identifier": "C2NiFiRegistryClient", "parameters": "(\n            final NifiRegistryProperties nifiRegistryProperties,\n            final ServerProperties serverProperties,\n            final NiFiRegistryClient client)", "modifiers": "", "return": "", "signature": " C2NiFiRegistryClient(\n            final NifiRegistryProperties nifiRegistryProperties,\n            final ServerProperties serverProperties,\n            final NiFiRegistryClient client)", "full_signature": "  C2NiFiRegistryClient(\n            final NifiRegistryProperties nifiRegistryProperties,\n            final ServerProperties serverProperties,\n            final NiFiRegistryClient client)", "class_method_signature": "C2NiFiRegistryClient.C2NiFiRegistryClient(\n            final NifiRegistryProperties nifiRegistryProperties,\n            final ServerProperties serverProperties,\n            final NiFiRegistryClient client)", "testcase": false, "constructor": true}, {"identifier": "getNiFiRegistryUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNiFiRegistryUrl()", "full_signature": "public String getNiFiRegistryUrl()", "class_method_signature": "C2NiFiRegistryClient.getNiFiRegistryUrl()", "testcase": false, "constructor": false}, {"identifier": "getNiFiRegistryBucketId", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getNiFiRegistryBucketId()", "full_signature": "public Optional<String> getNiFiRegistryBucketId()", "class_method_signature": "C2NiFiRegistryClient.getNiFiRegistryBucketId()", "testcase": false, "constructor": false}, {"identifier": "getNiFiRegistryBucketName", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getNiFiRegistryBucketName()", "full_signature": "public Optional<String> getNiFiRegistryBucketName()", "class_method_signature": "C2NiFiRegistryClient.getNiFiRegistryBucketName()", "testcase": false, "constructor": false}, {"identifier": "resolveNiFiRegistryBucketId", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> resolveNiFiRegistryBucketId()", "full_signature": "public Optional<String> resolveNiFiRegistryBucketId()", "class_method_signature": "C2NiFiRegistryClient.resolveNiFiRegistryBucketId()", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "public", "return": "NiFiRegistryClient", "signature": "NiFiRegistryClient getClient()", "full_signature": "public NiFiRegistryClient getClient()", "class_method_signature": "C2NiFiRegistryClient.getClient()", "testcase": false, "constructor": false}, {"identifier": "getBucketIdByName", "parameters": "()", "modifiers": "private", "return": "Optional<String>", "signature": "Optional<String> getBucketIdByName()", "full_signature": "private Optional<String> getBucketIdByName()", "class_method_signature": "C2NiFiRegistryClient.getBucketIdByName()", "testcase": false, "constructor": false}], "file": "efm/efm-c2-protocol/efm-c2-protocol-framework/src/main/java/com/cloudera/cem/efm/service/flow/client/C2NiFiRegistryClient.java"}, "focal_method": {"identifier": "resolveNiFiRegistryBucketId", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "body": "public Optional<String> resolveNiFiRegistryBucketId() throws NiFiRegistryException, IOException {\n        if (registryBucketId != null) {\n            logger.debug(\"Using configured bucketId '{}'\", registryBucketId);\n            return Optional.of(registryBucketId);\n        }\n        Optional<String> bucketIdForName = getBucketIdByName();\n        if (bucketIdForName.isPresent()) {\n            logger.debug(\"Resolved bucketId={} for bucketName={}\", bucketIdForName.get(), registryBucketName);\n        } else {\n            logger.debug(\"Could not determine bucketId. Bucket named '{}' not found.\", registryBucketName);\n        }\n        return bucketIdForName;\n    }", "signature": "Optional<String> resolveNiFiRegistryBucketId()", "full_signature": "public Optional<String> resolveNiFiRegistryBucketId()", "class_method_signature": "C2NiFiRegistryClient.resolveNiFiRegistryBucketId()", "testcase": false, "constructor": false, "invocations": ["debug", "of", "getBucketIdByName", "isPresent", "debug", "get", "debug"]}, "repository": {"repo_id": 181071001, "url": "https://github.com/hortonworks/efm", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 2003, "license": "licensed"}}