{"test_class": {"identifier": "SymbolUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "dbfit-java/core/src/test/java/dbfit/util/SymbolUtilTest.java"}, "test_case": {"identifier": "canGetNonNullSetSymbols", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canGetNonNullSetSymbols() {\n        assertEquals(\"X\", getSymbol(\">>SYMBOL_X\"));\n    }", "signature": "void canGetNonNullSetSymbols()", "full_signature": "@Test public void canGetNonNullSetSymbols()", "class_method_signature": "SymbolUtilTest.canGetNonNullSetSymbols()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSymbol"]}, "focal_class": {"identifier": "SymbolUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Object dbNull = new Object();", "modifier": "private static final", "type": "Object", "declarator": "dbNull = new Object()", "var_name": "dbNull"}], "methods": [{"identifier": "setSymbol", "parameters": "(String name, Object value)", "modifiers": "public static", "return": "void", "signature": "void setSymbol(String name, Object value)", "full_signature": "public static void setSymbol(String name, Object value)", "class_method_signature": "SymbolUtil.setSymbol(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "getSymbol", "parameters": "(String name)", "modifiers": "public static", "return": "Object", "signature": "Object getSymbol(String name)", "full_signature": "public static Object getSymbol(String name)", "class_method_signature": "SymbolUtil.getSymbol(String name)", "testcase": false, "constructor": false}, {"identifier": "clearSymbols", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void clearSymbols()", "full_signature": "public static void clearSymbols()", "class_method_signature": "SymbolUtil.clearSymbols()", "testcase": false, "constructor": false}, {"identifier": "getDataTable", "parameters": "(String symbolName)", "modifiers": "public static", "return": "DataTable", "signature": "DataTable getDataTable(String symbolName)", "full_signature": "public static DataTable getDataTable(String symbolName)", "class_method_signature": "SymbolUtil.getDataTable(String symbolName)", "testcase": false, "constructor": false}, {"identifier": "getSymbolName", "parameters": "(String symbolFullName)", "modifiers": "public static", "return": "String", "signature": "String getSymbolName(String symbolFullName)", "full_signature": "public static String getSymbolName(String symbolFullName)", "class_method_signature": "SymbolUtil.getSymbolName(String symbolFullName)", "testcase": false, "constructor": false}, {"identifier": "isSymbolGetter", "parameters": "(String text)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSymbolGetter(String text)", "full_signature": "public static boolean isSymbolGetter(String text)", "class_method_signature": "SymbolUtil.isSymbolGetter(String text)", "testcase": false, "constructor": false}, {"identifier": "isSymbolSetter", "parameters": "(String text)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSymbolSetter(String text)", "full_signature": "public static boolean isSymbolSetter(String text)", "class_method_signature": "SymbolUtil.isSymbolSetter(String text)", "testcase": false, "constructor": false}, {"identifier": "isSymbolHidden", "parameters": "(String text)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSymbolHidden(String text)", "full_signature": "public static boolean isSymbolHidden(String text)", "class_method_signature": "SymbolUtil.isSymbolHidden(String text)", "testcase": false, "constructor": false}], "file": "dbfit-java/core/src/main/java/dbfit/util/SymbolUtil.java"}, "focal_method": {"identifier": "getSymbol", "parameters": "(String name)", "modifiers": "public static", "return": "Object", "body": "public static Object getSymbol(String name) {\n        Object value = fit.Fixture.getSymbol(getSymbolName(name));\n        return (value == dbNull) ? null : value;\n    }", "signature": "Object getSymbol(String name)", "full_signature": "public static Object getSymbol(String name)", "class_method_signature": "SymbolUtil.getSymbol(String name)", "testcase": false, "constructor": false, "invocations": ["getSymbol", "getSymbolName"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}