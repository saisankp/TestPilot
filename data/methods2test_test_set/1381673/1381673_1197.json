{"test_class": {"identifier": "KiePMMLRegressionClassificationTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DoubleUnaryOperator FIRST_ITEM_OPERATOR = aDouble -> 1 / aDouble;", "modifier": "private static final", "type": "DoubleUnaryOperator", "declarator": "FIRST_ITEM_OPERATOR = aDouble -> 1 / aDouble", "var_name": "FIRST_ITEM_OPERATOR"}, {"original_string": "private static final DoubleUnaryOperator SECOND_ITEM_OPERATOR = aDouble -> 1 - aDouble;", "modifier": "private static final", "type": "DoubleUnaryOperator", "declarator": "SECOND_ITEM_OPERATOR = aDouble -> 1 - aDouble", "var_name": "SECOND_ITEM_OPERATOR"}, {"original_string": "private static final String CASE_A = \"caseA\";", "modifier": "private static final", "type": "String", "declarator": "CASE_A = \"caseA\"", "var_name": "CASE_A"}, {"original_string": "private static final String CASE_B = \"caseB\";", "modifier": "private static final", "type": "String", "declarator": "CASE_B = \"caseB\"", "var_name": "CASE_B"}, {"original_string": "private static final String PROBABILITY_FALSE = String.format(\"probability(%s)\", CASE_A);", "modifier": "private static final", "type": "String", "declarator": "PROBABILITY_FALSE = String.format(\"probability(%s)\", CASE_A)", "var_name": "PROBABILITY_FALSE"}, {"original_string": "private static final String PROBABILITY_TRUE = String.format(\"probability(%s)\", CASE_B);", "modifier": "private static final", "type": "String", "declarator": "PROBABILITY_TRUE = String.format(\"probability(%s)\", CASE_B)", "var_name": "PROBABILITY_TRUE"}, {"original_string": "private final KiePMMLRegressionClassificationTable classificationTable;", "modifier": "private final", "type": "KiePMMLRegressionClassificationTable", "declarator": "classificationTable", "var_name": "classificationTable"}, {"original_string": "private final double firstTableResult;", "modifier": "private final", "type": "double", "declarator": "firstTableResult", "var_name": "firstTableResult"}, {"original_string": "private final double secondTableResult;", "modifier": "private final", "type": "double", "declarator": "secondTableResult", "var_name": "secondTableResult"}, {"original_string": "private final String expectedResult;", "modifier": "private final", "type": "String", "declarator": "expectedResult", "var_name": "expectedResult"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/src/test/java/org/kie/pmml/models/regression/model/KiePMMLRegressionClassificationTableTest.java"}, "test_case": {"identifier": "getProbabilityMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getProbabilityMap() {\n        LinkedHashMap<String, Double> resultMap = new LinkedHashMap<>();\n        resultMap.put(CASE_B, firstTableResult);\n        resultMap.put(CASE_A, secondTableResult);\n        LinkedHashMap<String, Double> retrieved = classificationTable.getProbabilityMap(resultMap,\n                                                                                        FIRST_ITEM_OPERATOR,\n                                                                                        SECOND_ITEM_OPERATOR);\n        double expectedDouble = FIRST_ITEM_OPERATOR.applyAsDouble(firstTableResult);\n        assertEquals(expectedDouble, retrieved.get(CASE_B), 0.0);\n        expectedDouble = SECOND_ITEM_OPERATOR.applyAsDouble(expectedDouble);\n        assertEquals(expectedDouble, retrieved.get(CASE_A), 0.0);\n    }", "signature": "void getProbabilityMap()", "full_signature": "@Test public void getProbabilityMap()", "class_method_signature": "KiePMMLRegressionClassificationTableTest.getProbabilityMap()", "testcase": true, "constructor": false, "invocations": ["put", "put", "getProbabilityMap", "applyAsDouble", "assertEquals", "get", "applyAsDouble", "assertEquals", "get"]}, "focal_class": {"identifier": "KiePMMLRegressionClassificationTable", "superclass": "extends KiePMMLRegressionTable", "interfaces": "", "fields": [{"original_string": "protected REGRESSION_NORMALIZATION_METHOD regressionNormalizationMethod;", "modifier": "protected", "type": "REGRESSION_NORMALIZATION_METHOD", "declarator": "regressionNormalizationMethod", "var_name": "regressionNormalizationMethod"}, {"original_string": "protected OP_TYPE opType;", "modifier": "protected", "type": "OP_TYPE", "declarator": "opType", "var_name": "opType"}, {"original_string": "protected Map<String, KiePMMLRegressionTable> categoryTableMap = new LinkedHashMap<>();", "modifier": "protected", "type": "Map<String, KiePMMLRegressionTable>", "declarator": "categoryTableMap = new LinkedHashMap<>()", "var_name": "categoryTableMap"}], "methods": [{"identifier": "evaluateRegression", "parameters": "(Map<String, Object> input)", "modifiers": "@Override public", "return": "Object", "signature": "Object evaluateRegression(Map<String, Object> input)", "full_signature": "@Override public Object evaluateRegression(Map<String, Object> input)", "class_method_signature": "KiePMMLRegressionClassificationTable.evaluateRegression(Map<String, Object> input)", "testcase": false, "constructor": false}, {"identifier": "isBinary", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isBinary()", "full_signature": "public abstract boolean isBinary()", "class_method_signature": "KiePMMLRegressionClassificationTable.isBinary()", "testcase": false, "constructor": false}, {"identifier": "getProbabilityMap", "parameters": "(final LinkedHashMap<String, Double> resultMap)", "modifiers": "protected abstract", "return": "LinkedHashMap<String, Double>", "signature": "LinkedHashMap<String, Double> getProbabilityMap(final LinkedHashMap<String, Double> resultMap)", "full_signature": "protected abstract LinkedHashMap<String, Double> getProbabilityMap(final LinkedHashMap<String, Double> resultMap)", "class_method_signature": "KiePMMLRegressionClassificationTable.getProbabilityMap(final LinkedHashMap<String, Double> resultMap)", "testcase": false, "constructor": false}, {"identifier": "populateOutputFieldsMapWithProbability", "parameters": "(final Map.Entry<String, Double> predictedEntry, final LinkedHashMap<String, Double> probabilityMap)", "modifiers": "protected abstract", "return": "void", "signature": "void populateOutputFieldsMapWithProbability(final Map.Entry<String, Double> predictedEntry, final LinkedHashMap<String, Double> probabilityMap)", "full_signature": "protected abstract void populateOutputFieldsMapWithProbability(final Map.Entry<String, Double> predictedEntry, final LinkedHashMap<String, Double> probabilityMap)", "class_method_signature": "KiePMMLRegressionClassificationTable.populateOutputFieldsMapWithProbability(final Map.Entry<String, Double> predictedEntry, final LinkedHashMap<String, Double> probabilityMap)", "testcase": false, "constructor": false}, {"identifier": "updateResult", "parameters": "(final AtomicReference<Double> toUpdate)", "modifiers": "protected", "return": "void", "signature": "void updateResult(final AtomicReference<Double> toUpdate)", "full_signature": "protected void updateResult(final AtomicReference<Double> toUpdate)", "class_method_signature": "KiePMMLRegressionClassificationTable.updateResult(final AtomicReference<Double> toUpdate)", "testcase": false, "constructor": false}, {"identifier": "getRegressionNormalizationMethod", "parameters": "()", "modifiers": "public", "return": "REGRESSION_NORMALIZATION_METHOD", "signature": "REGRESSION_NORMALIZATION_METHOD getRegressionNormalizationMethod()", "full_signature": "public REGRESSION_NORMALIZATION_METHOD getRegressionNormalizationMethod()", "class_method_signature": "KiePMMLRegressionClassificationTable.getRegressionNormalizationMethod()", "testcase": false, "constructor": false}, {"identifier": "getOpType", "parameters": "()", "modifiers": "public", "return": "OP_TYPE", "signature": "OP_TYPE getOpType()", "full_signature": "public OP_TYPE getOpType()", "class_method_signature": "KiePMMLRegressionClassificationTable.getOpType()", "testcase": false, "constructor": false}, {"identifier": "getCategoryTableMap", "parameters": "()", "modifiers": "public", "return": "Map<String, KiePMMLRegressionTable>", "signature": "Map<String, KiePMMLRegressionTable> getCategoryTableMap()", "full_signature": "public Map<String, KiePMMLRegressionTable> getCategoryTableMap()", "class_method_signature": "KiePMMLRegressionClassificationTable.getCategoryTableMap()", "testcase": false, "constructor": false}, {"identifier": "getProbabilityMap", "parameters": "(final LinkedHashMap<String, Double> resultMap, DoubleUnaryOperator firstItemOperator, DoubleUnaryOperator secondItemOperator)", "modifiers": "protected", "return": "LinkedHashMap<String, Double>", "signature": "LinkedHashMap<String, Double> getProbabilityMap(final LinkedHashMap<String, Double> resultMap, DoubleUnaryOperator firstItemOperator, DoubleUnaryOperator secondItemOperator)", "full_signature": "protected LinkedHashMap<String, Double> getProbabilityMap(final LinkedHashMap<String, Double> resultMap, DoubleUnaryOperator firstItemOperator, DoubleUnaryOperator secondItemOperator)", "class_method_signature": "KiePMMLRegressionClassificationTable.getProbabilityMap(final LinkedHashMap<String, Double> resultMap, DoubleUnaryOperator firstItemOperator, DoubleUnaryOperator secondItemOperator)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/src/main/java/org/kie/pmml/models/regression/model/KiePMMLRegressionClassificationTable.java"}, "focal_method": {"identifier": "getProbabilityMap", "parameters": "(final LinkedHashMap<String, Double> resultMap)", "modifiers": "protected abstract", "return": "LinkedHashMap<String, Double>", "body": "protected abstract LinkedHashMap<String, Double> getProbabilityMap(final LinkedHashMap<String, Double> resultMap);", "signature": "LinkedHashMap<String, Double> getProbabilityMap(final LinkedHashMap<String, Double> resultMap)", "full_signature": "protected abstract LinkedHashMap<String, Double> getProbabilityMap(final LinkedHashMap<String, Double> resultMap)", "class_method_signature": "KiePMMLRegressionClassificationTable.getProbabilityMap(final LinkedHashMap<String, Double> resultMap)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}