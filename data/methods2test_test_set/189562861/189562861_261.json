{"test_class": {"identifier": "ExecutorUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-common/src/test/java/com/alibaba/dubbo/common/utils/ExecutorUtilTest.java"}, "test_case": {"identifier": "testIsTerminated", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsTerminated() throws Exception {\n        ExecutorService executor = Mockito.mock(ExecutorService.class);\n        when(executor.isTerminated()).thenReturn(true);\n        assertThat(ExecutorUtil.isTerminated(executor), is(true));\n        Executor executor2 = Mockito.mock(Executor.class);\n        assertThat(ExecutorUtil.isTerminated(executor2), is(false));\n    }", "signature": "void testIsTerminated()", "full_signature": "@Test public void testIsTerminated()", "class_method_signature": "ExecutorUtilTest.testIsTerminated()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "isTerminated", "assertThat", "isTerminated", "is", "mock", "assertThat", "isTerminated", "is"]}, "focal_class": {"identifier": "ExecutorUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ExecutorUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ExecutorUtil.class)", "var_name": "logger"}, {"original_string": "private static final ThreadPoolExecutor shutdownExecutor = new ThreadPoolExecutor(0, 1,\n            0L, TimeUnit.MILLISECONDS,\n            new LinkedBlockingQueue<Runnable>(100),\n            new NamedThreadFactory(\"Close-ExecutorService-Timer\", true));", "modifier": "private static final", "type": "ThreadPoolExecutor", "declarator": "shutdownExecutor = new ThreadPoolExecutor(0, 1,\n            0L, TimeUnit.MILLISECONDS,\n            new LinkedBlockingQueue<Runnable>(100),\n            new NamedThreadFactory(\"Close-ExecutorService-Timer\", true))", "var_name": "shutdownExecutor"}], "methods": [{"identifier": "isTerminated", "parameters": "(Executor executor)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTerminated(Executor executor)", "full_signature": "public static boolean isTerminated(Executor executor)", "class_method_signature": "ExecutorUtil.isTerminated(Executor executor)", "testcase": false, "constructor": false}, {"identifier": "gracefulShutdown", "parameters": "(Executor executor, int timeout)", "modifiers": "public static", "return": "void", "signature": "void gracefulShutdown(Executor executor, int timeout)", "full_signature": "public static void gracefulShutdown(Executor executor, int timeout)", "class_method_signature": "ExecutorUtil.gracefulShutdown(Executor executor, int timeout)", "testcase": false, "constructor": false}, {"identifier": "shutdownNow", "parameters": "(Executor executor, final int timeout)", "modifiers": "public static", "return": "void", "signature": "void shutdownNow(Executor executor, final int timeout)", "full_signature": "public static void shutdownNow(Executor executor, final int timeout)", "class_method_signature": "ExecutorUtil.shutdownNow(Executor executor, final int timeout)", "testcase": false, "constructor": false}, {"identifier": "newThreadToCloseExecutor", "parameters": "(final ExecutorService es)", "modifiers": "private static", "return": "void", "signature": "void newThreadToCloseExecutor(final ExecutorService es)", "full_signature": "private static void newThreadToCloseExecutor(final ExecutorService es)", "class_method_signature": "ExecutorUtil.newThreadToCloseExecutor(final ExecutorService es)", "testcase": false, "constructor": false}, {"identifier": "setThreadName", "parameters": "(URL url, String defaultName)", "modifiers": "public static", "return": "URL", "signature": "URL setThreadName(URL url, String defaultName)", "full_signature": "public static URL setThreadName(URL url, String defaultName)", "class_method_signature": "ExecutorUtil.setThreadName(URL url, String defaultName)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java"}, "focal_method": {"identifier": "isTerminated", "parameters": "(Executor executor)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isTerminated(Executor executor) {\n        if (executor instanceof ExecutorService) {\n            if (((ExecutorService) executor).isTerminated()) {\n                return true;\n            }\n        }\n        return false;\n    }", "signature": "boolean isTerminated(Executor executor)", "full_signature": "public static boolean isTerminated(Executor executor)", "class_method_signature": "ExecutorUtil.isTerminated(Executor executor)", "testcase": false, "constructor": false, "invocations": ["isTerminated"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}