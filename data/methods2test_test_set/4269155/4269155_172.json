{"test_class": {"identifier": "RemovableKeySetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HasRemovableKeys<Integer> extractor;", "modifier": "private", "type": "HasRemovableKeys<Integer>", "declarator": "extractor", "var_name": "extractor"}, {"original_string": "private RemovableKeySet entrySet;", "modifier": "private", "type": "RemovableKeySet", "declarator": "entrySet", "var_name": "entrySet"}], "file": "tiles-request-api/src/test/java/org/apache/tiles/request/collection/RemovableKeySetTest.java"}, "test_case": {"identifier": "testRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemove() {\n        expect(extractor.getValue(\"one\")).andReturn(1);\n        extractor.removeValue(\"one\");\n\n        replay(extractor);\n        assertTrue(entrySet.remove(\"one\"));\n        verify(extractor);\n    }", "signature": "void testRemove()", "full_signature": "@Test public void testRemove()", "class_method_signature": "RemovableKeySetTest.testRemove()", "testcase": true, "constructor": false, "invocations": ["andReturn", "expect", "getValue", "removeValue", "replay", "assertTrue", "remove", "verify"]}, "focal_class": {"identifier": "RemovableKeySet", "superclass": "extends KeySet", "interfaces": "", "fields": [{"original_string": "private HasRemovableKeys<?> request;", "modifier": "private", "type": "HasRemovableKeys<?>", "declarator": "request", "var_name": "request"}], "methods": [{"identifier": "RemovableKeySet", "parameters": "(HasRemovableKeys<?> request)", "modifiers": "public", "return": "", "signature": " RemovableKeySet(HasRemovableKeys<?> request)", "full_signature": "public  RemovableKeySet(HasRemovableKeys<?> request)", "class_method_signature": "RemovableKeySet.RemovableKeySet(HasRemovableKeys<?> request)", "testcase": false, "constructor": true}, {"identifier": "remove", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object o)", "full_signature": "@Override public boolean remove(Object o)", "class_method_signature": "RemovableKeySet.remove(Object o)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<?> c)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "boolean", "signature": "boolean removeAll(Collection<?> c)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public boolean removeAll(Collection<?> c)", "class_method_signature": "RemovableKeySet.removeAll(Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(Collection<?> c)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "boolean", "signature": "boolean retainAll(Collection<?> c)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public boolean retainAll(Collection<?> c)", "class_method_signature": "RemovableKeySet.retainAll(Collection<?> c)", "testcase": false, "constructor": false}], "file": "tiles-request-api/src/main/java/org/apache/tiles/request/collection/RemovableKeySet.java"}, "focal_method": {"identifier": "remove", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean remove(Object o) {\n        String skey = key(o);\n        Object previous = request.getValue(skey);\n        if (previous != null) {\n            request.removeValue(skey);\n            return true;\n        }\n        return false;\n    }", "signature": "boolean remove(Object o)", "full_signature": "@Override public boolean remove(Object o)", "class_method_signature": "RemovableKeySet.remove(Object o)", "testcase": false, "constructor": false, "invocations": ["key", "getValue", "removeValue"]}, "repository": {"repo_id": 4269155, "url": "https://github.com/apache/tiles-request", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 865, "license": "licensed"}}