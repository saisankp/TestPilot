{"test_class": {"identifier": "DataflowJobStateMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DataflowJobStateMapper mapper = new DataflowJobStateMapper();", "modifier": "private", "type": "DataflowJobStateMapper", "declarator": "mapper = new DataflowJobStateMapper()", "var_name": "mapper"}], "file": "job-controller/src/test/java/feast/jobcontroller/runner/dataflow/DataflowJobStateMapperTest.java"}, "test_case": {"identifier": "shouldThrowIllegalArgumentExceptionForInvalidString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldThrowIllegalArgumentExceptionForInvalidString() {\n    assertThrows(IllegalArgumentException.class, () -> mapper.map(\"INVALID_STATE\"));\n  }", "signature": "void shouldThrowIllegalArgumentExceptionForInvalidString()", "full_signature": "@Test public void shouldThrowIllegalArgumentExceptionForInvalidString()", "class_method_signature": "DataflowJobStateMapperTest.shouldThrowIllegalArgumentExceptionForInvalidString()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "map"]}, "focal_class": {"identifier": "DataflowJobStateMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<DataflowJobState, JobStatus> DATAFLOW_TO_FEAST_JOB_STATUS;", "modifier": "private static final", "type": "Map<DataflowJobState, JobStatus>", "declarator": "DATAFLOW_TO_FEAST_JOB_STATUS", "var_name": "DATAFLOW_TO_FEAST_JOB_STATUS"}], "methods": [{"identifier": "map", "parameters": "(String jobState)", "modifiers": "public static", "return": "JobStatus", "signature": "JobStatus map(String jobState)", "full_signature": "public static JobStatus map(String jobState)", "class_method_signature": "DataflowJobStateMapper.map(String jobState)", "testcase": false, "constructor": false}], "file": "job-controller/src/main/java/feast/jobcontroller/runner/dataflow/DataflowJobStateMapper.java"}, "focal_method": {"identifier": "map", "parameters": "(String jobState)", "modifiers": "public static", "return": "JobStatus", "body": "public static JobStatus map(String jobState) {\n    DataflowJobState dfJobState = DataflowJobState.valueOf(jobState);\n    if (DATAFLOW_TO_FEAST_JOB_STATUS.containsKey(dfJobState)) {\n      return DATAFLOW_TO_FEAST_JOB_STATUS.get(dfJobState);\n    }\n    throw new IllegalArgumentException(\"Unknown job state: \" + jobState);\n  }", "signature": "JobStatus map(String jobState)", "full_signature": "public static JobStatus map(String jobState)", "class_method_signature": "DataflowJobStateMapper.map(String jobState)", "testcase": false, "constructor": false, "invocations": ["valueOf", "containsKey", "get"]}, "repository": {"repo_id": 161133770, "url": "https://github.com/gojek/feast", "stars": 633, "created": "12/10/2018 7:20:15 AM +00:00", "updates": "2020-01-27T12:39:33+00:00", "fork": "False", "license": "licensed"}}