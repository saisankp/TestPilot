{"test_class": {"identifier": "CveSearchApiImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "String VENDOR  = \"zyxel\";", "modifier": "", "type": "String", "declarator": "VENDOR  = \"zyxel\"", "var_name": "VENDOR"}, {"original_string": "String PRODUCT = \"zywall\";", "modifier": "", "type": "String", "declarator": "PRODUCT = \"zywall\"", "var_name": "PRODUCT"}, {"original_string": "String CPE     = \"cpe:2.3:a:zyxel:zywall:1050\";", "modifier": "", "type": "String", "declarator": "CPE     = \"cpe:2.3:a:zyxel:zywall:1050\"", "var_name": "CPE"}, {"original_string": "String CVE     = \"CVE-2008-1160\";", "modifier": "", "type": "String", "declarator": "CVE     = \"CVE-2008-1160\"", "var_name": "CVE"}, {"original_string": "private CveSearchApiImpl cveSearchApi;", "modifier": "private", "type": "CveSearchApiImpl", "declarator": "cveSearchApi", "var_name": "cveSearchApi"}], "file": "backend/src/src-cvesearch/src/test/java/org/eclipse/sw360/cvesearch/datasource/CveSearchApiImplTest.java"}, "test_case": {"identifier": "exactCveTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void exactCveTest() throws IOException {\n        CveSearchData result;\n        result = cveSearchApi.cve(CVE);\n        assert(result != null);\n    }", "signature": "void exactCveTest()", "full_signature": "@Test public void exactCveTest()", "class_method_signature": "CveSearchApiImplTest.exactCveTest()", "testcase": true, "constructor": false, "invocations": ["cve"]}, "focal_class": {"identifier": "CveSearchApiImpl", "superclass": "", "interfaces": "implements CveSearchApi", "fields": [{"original_string": "Logger log = Logger.getLogger(CveSearchApiImpl.class);", "modifier": "", "type": "Logger", "declarator": "log = Logger.getLogger(CveSearchApiImpl.class)", "var_name": "log"}, {"original_string": "private String host;", "modifier": "private", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "private String CVE_SEARCH_SEARCH  = \"search\";", "modifier": "private", "type": "String", "declarator": "CVE_SEARCH_SEARCH  = \"search\"", "var_name": "CVE_SEARCH_SEARCH"}, {"original_string": "private String CVE_SEARCH_CVEFOR  = \"cvefor\";", "modifier": "private", "type": "String", "declarator": "CVE_SEARCH_CVEFOR  = \"cvefor\"", "var_name": "CVE_SEARCH_CVEFOR"}, {"original_string": "private String CVE_SEARCH_BROWSE  = \"browse\";", "modifier": "private", "type": "String", "declarator": "CVE_SEARCH_BROWSE  = \"browse\"", "var_name": "CVE_SEARCH_BROWSE"}, {"original_string": "private String CVE_SEARCH_CVE     = \"cve\";", "modifier": "private", "type": "String", "declarator": "CVE_SEARCH_CVE     = \"cve\"", "var_name": "CVE_SEARCH_CVE"}, {"original_string": "public String CVE_SEARCH_WILDCARD = \".*\";", "modifier": "public", "type": "String", "declarator": "CVE_SEARCH_WILDCARD = \".*\"", "var_name": "CVE_SEARCH_WILDCARD"}, {"original_string": "private Type LIST_TARGET_TYPE = new TypeToken<List<CveSearchData>>(){}.getType();", "modifier": "private", "type": "Type", "declarator": "LIST_TARGET_TYPE = new TypeToken<List<CveSearchData>>(){}.getType()", "var_name": "LIST_TARGET_TYPE"}, {"original_string": "private Type SINGLE_TARGET_TYPE = new TypeToken<CveSearchData>(){}.getType();", "modifier": "private", "type": "Type", "declarator": "SINGLE_TARGET_TYPE = new TypeToken<CveSearchData>(){}.getType()", "var_name": "SINGLE_TARGET_TYPE"}, {"original_string": "private Type META_TARGET_TYPE = new TypeToken<Map<String,Object>>(){}.getType();", "modifier": "private", "type": "Type", "declarator": "META_TARGET_TYPE = new TypeToken<Map<String,Object>>(){}.getType()", "var_name": "META_TARGET_TYPE"}], "methods": [{"identifier": "CveSearchApiImpl", "parameters": "(String host)", "modifiers": "public", "return": "", "signature": " CveSearchApiImpl(String host)", "full_signature": "public  CveSearchApiImpl(String host)", "class_method_signature": "CveSearchApiImpl.CveSearchApiImpl(String host)", "testcase": false, "constructor": true}, {"identifier": "getParsedContentFor", "parameters": "(String query, Function<BufferedReader,Object> parser)", "modifiers": "private", "return": "Object", "signature": "Object getParsedContentFor(String query, Function<BufferedReader,Object> parser)", "full_signature": "private Object getParsedContentFor(String query, Function<BufferedReader,Object> parser)", "class_method_signature": "CveSearchApiImpl.getParsedContentFor(String query, Function<BufferedReader,Object> parser)", "testcase": false, "constructor": false}, {"identifier": "composeQuery", "parameters": "(String call, String ... path)", "modifiers": "private", "return": "String", "signature": "String composeQuery(String call, String ... path)", "full_signature": "private String composeQuery(String call, String ... path)", "class_method_signature": "CveSearchApiImpl.composeQuery(String call, String ... path)", "testcase": false, "constructor": false}, {"identifier": "getParsedCveSearchDatas", "parameters": "(String query)", "modifiers": "private", "return": "List<CveSearchData>", "signature": "List<CveSearchData> getParsedCveSearchDatas(String query)", "full_signature": "private List<CveSearchData> getParsedCveSearchDatas(String query)", "class_method_signature": "CveSearchApiImpl.getParsedCveSearchDatas(String query)", "testcase": false, "constructor": false}, {"identifier": "getParsedCveSearchData", "parameters": "(String query)", "modifiers": "private", "return": "CveSearchData", "signature": "CveSearchData getParsedCveSearchData(String query)", "full_signature": "private CveSearchData getParsedCveSearchData(String query)", "class_method_signature": "CveSearchApiImpl.getParsedCveSearchData(String query)", "testcase": false, "constructor": false}, {"identifier": "getParsedCveSearchMetadata", "parameters": "(String query, String key)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getParsedCveSearchMetadata(String query, String key)", "full_signature": "private List<String> getParsedCveSearchMetadata(String query, String key)", "class_method_signature": "CveSearchApiImpl.getParsedCveSearchMetadata(String query, String key)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String vendor, String product)", "modifiers": "@Override public", "return": "List<CveSearchData>", "signature": "List<CveSearchData> search(String vendor, String product)", "full_signature": "@Override public List<CveSearchData> search(String vendor, String product)", "class_method_signature": "CveSearchApiImpl.search(String vendor, String product)", "testcase": false, "constructor": false}, {"identifier": "cvefor", "parameters": "(String cpe)", "modifiers": "@Override public", "return": "List<CveSearchData>", "signature": "List<CveSearchData> cvefor(String cpe)", "full_signature": "@Override public List<CveSearchData> cvefor(String cpe)", "class_method_signature": "CveSearchApiImpl.cvefor(String cpe)", "testcase": false, "constructor": false}, {"identifier": "cve", "parameters": "(String cve)", "modifiers": "@Override public", "return": "CveSearchData", "signature": "CveSearchData cve(String cve)", "full_signature": "@Override public CveSearchData cve(String cve)", "class_method_signature": "CveSearchApiImpl.cve(String cve)", "testcase": false, "constructor": false}, {"identifier": "allVendorNames", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> allVendorNames()", "full_signature": "@Override public List<String> allVendorNames()", "class_method_signature": "CveSearchApiImpl.allVendorNames()", "testcase": false, "constructor": false}, {"identifier": "allProductsOfVendor", "parameters": "(String vendorName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> allProductsOfVendor(String vendorName)", "full_signature": "@Override public List<String> allProductsOfVendor(String vendorName)", "class_method_signature": "CveSearchApiImpl.allProductsOfVendor(String vendorName)", "testcase": false, "constructor": false}], "file": "backend/src/src-cvesearch/src/main/java/org/eclipse/sw360/cvesearch/datasource/CveSearchApiImpl.java"}, "focal_method": {"identifier": "cve", "parameters": "(String cve)", "modifiers": "@Override public", "return": "CveSearchData", "body": "@Override\n    public CveSearchData cve(String cve) throws IOException {\n        String query = composeQuery(CVE_SEARCH_CVE, cve.toUpperCase());\n\n        return getParsedCveSearchData(query);\n    }", "signature": "CveSearchData cve(String cve)", "full_signature": "@Override public CveSearchData cve(String cve)", "class_method_signature": "CveSearchApiImpl.cve(String cve)", "testcase": false, "constructor": false, "invocations": ["composeQuery", "toUpperCase", "getParsedCveSearchData"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}