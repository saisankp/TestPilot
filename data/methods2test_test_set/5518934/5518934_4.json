{"test_class": {"identifier": "JobPrinterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LINE_SEPARATOR = System.getProperty(\"line.separator\");", "modifier": "private static final", "type": "String", "declarator": "LINE_SEPARATOR = System.getProperty(\"line.separator\")", "var_name": "LINE_SEPARATOR"}], "file": "glacieruploader-printers/src/test/java/de/kopis/glacier/printers/JobPrinterTest.java"}, "test_case": {"identifier": "printJob", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void printJob() throws Exception {\n        final String jobId = UUID.randomUUID().toString();\n        final String statusMessage = UUID.randomUUID().toString();\n\n        final ByteArrayOutputStream out = new ByteArrayOutputStream();\n        final GlacierJobDescription job = new GlacierJobDescription();\n        job.setJobId(jobId);\n        job.setCompleted(true);\n        final DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.ENGLISH);\n        dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        job.setCompletionDate(dateFormat.format(new Date(0)));\n        job.setStatusCode(StatusCode.Succeeded);\n        job.setStatusMessage(statusMessage);\n        new JobPrinter().printJob(job, out);\n        assertEquals(\"Job ID:\\t\\t\\t\\t\" + jobId + LINE_SEPARATOR +\n                \"Creation date:\\t\\t\\tnull\" + LINE_SEPARATOR +\n                \"Completion date:\\t1970-01-01 00:00:00\" + LINE_SEPARATOR +\n                \"Status:\\t\\t\\t\\tSucceeded (\" + statusMessage + \")\" + LINE_SEPARATOR +\n                LINE_SEPARATOR, out.toString());\n    }", "signature": "void printJob()", "full_signature": "@Test public void printJob()", "class_method_signature": "JobPrinterTest.printJob()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "toString", "randomUUID", "setJobId", "setCompleted", "setTimeZone", "getTimeZone", "setCompletionDate", "format", "setStatusCode", "setStatusMessage", "printJob", "assertEquals", "toString"]}, "focal_class": {"identifier": "JobPrinter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "printJob", "parameters": "(GlacierJobDescription job, OutputStream o)", "modifiers": "public", "return": "void", "signature": "void printJob(GlacierJobDescription job, OutputStream o)", "full_signature": "public void printJob(GlacierJobDescription job, OutputStream o)", "class_method_signature": "JobPrinter.printJob(GlacierJobDescription job, OutputStream o)", "testcase": false, "constructor": false}], "file": "glacieruploader-printers/src/main/java/de/kopis/glacier/printers/JobPrinter.java"}, "focal_method": {"identifier": "printJob", "parameters": "(GlacierJobDescription job, OutputStream o)", "modifiers": "public", "return": "void", "body": "public void printJob(GlacierJobDescription job, OutputStream o) {\n        final PrintWriter out = new PrintWriter(o);\n        out.println(\"Job ID:\\t\\t\\t\\t\" + job.getJobId());\n        out.println(\"Creation date:\\t\\t\\t\" + job.getCreationDate());\n        if (job.getCompleted()) {\n            out.println(\"Completion date:\\t\" + job.getCompletionDate());\n        }\n        out.println(\"Status:\\t\\t\\t\\t\" + job.getStatusCode() + (job.getStatusMessage() != null ? \" (\" + job.getStatusMessage() + \")\" : \"\"));\n        out.println();\n        out.flush();\n    }", "signature": "void printJob(GlacierJobDescription job, OutputStream o)", "full_signature": "public void printJob(GlacierJobDescription job, OutputStream o)", "class_method_signature": "JobPrinter.printJob(GlacierJobDescription job, OutputStream o)", "testcase": false, "constructor": false, "invocations": ["println", "getJobId", "println", "getCreationDate", "getCompleted", "println", "getCompletionDate", "println", "getStatusCode", "getStatusMessage", "getStatusMessage", "println", "flush"]}, "repository": {"repo_id": 5518934, "url": "https://github.com/MoriTanosuke/glacieruploader", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 243, "size": 6248, "license": "licensed"}}