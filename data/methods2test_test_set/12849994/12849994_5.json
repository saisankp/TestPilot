{"test_class": {"identifier": "HeapCacheBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "imcache/src/test/java/com/cetsoft/imcache/cache/builder/HeapCacheBuilderTest.java"}, "test_case": {"identifier": "build", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void build() {\n    Cache<Object, Object> cache = CacheBuilder.heapCache()\n        .cacheLoader(BaseCacheBuilder.DEFAULT_CACHE_LOADER)\n        .name(\"my-heap-cache\").expiryUnit(TimeUnit.DAYS).expiry(1)\n        .evictionListener(BaseCacheBuilder.DEFAULT_EVICTION_LISTENER)\n        .indexHandler(DummyIndexHandler.getInstance())\n        .addIndex(\"age\", IndexType.RANGE_INDEX).capacity(1000).build();\n    assertTrue(cache instanceof SearchableCache);\n    assertTrue(cache instanceof HeapCache);\n  }", "signature": "void build()", "full_signature": "@Test public void build()", "class_method_signature": "HeapCacheBuilderTest.build()", "testcase": true, "constructor": false, "invocations": ["build", "capacity", "addIndex", "indexHandler", "evictionListener", "expiry", "expiryUnit", "name", "cacheLoader", "heapCache", "getInstance", "assertTrue", "assertTrue"]}, "focal_class": {"identifier": "HeapCacheBuilder", "superclass": "extends BaseCacheBuilder", "interfaces": "", "fields": [{"original_string": "private final AtomicInteger cacheNumber = new AtomicInteger();", "modifier": "private final", "type": "AtomicInteger", "declarator": "cacheNumber = new AtomicInteger()", "var_name": "cacheNumber"}, {"original_string": "private int capacity = 10000;", "modifier": "private", "type": "int", "declarator": "capacity = 10000", "var_name": "capacity"}, {"original_string": "private TimeUnit expiryUnit = TimeUnit.MILLISECONDS;", "modifier": "private", "type": "TimeUnit", "declarator": "expiryUnit = TimeUnit.MILLISECONDS", "var_name": "expiryUnit"}, {"original_string": "private long expiry = 5680281600L;", "modifier": "private", "type": "long", "declarator": "expiry = 5680281600L", "var_name": "expiry"}], "methods": [{"identifier": "HeapCacheBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " HeapCacheBuilder()", "full_signature": "public  HeapCacheBuilder()", "class_method_signature": "HeapCacheBuilder.HeapCacheBuilder()", "testcase": false, "constructor": true}, {"identifier": "expiryUnit", "parameters": "(final TimeUnit expiryUnit)", "modifiers": "public", "return": "HeapCacheBuilder", "signature": "HeapCacheBuilder expiryUnit(final TimeUnit expiryUnit)", "full_signature": "public HeapCacheBuilder expiryUnit(final TimeUnit expiryUnit)", "class_method_signature": "HeapCacheBuilder.expiryUnit(final TimeUnit expiryUnit)", "testcase": false, "constructor": false}, {"identifier": "expiry", "parameters": "(final long expiry)", "modifiers": "public", "return": "HeapCacheBuilder", "signature": "HeapCacheBuilder expiry(final long expiry)", "full_signature": "public HeapCacheBuilder expiry(final long expiry)", "class_method_signature": "HeapCacheBuilder.expiry(final long expiry)", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "(final String name)", "modifiers": "public", "return": "HeapCacheBuilder", "signature": "HeapCacheBuilder name(final String name)", "full_signature": "public HeapCacheBuilder name(final String name)", "class_method_signature": "HeapCacheBuilder.name(final String name)", "testcase": false, "constructor": false}, {"identifier": "cacheLoader", "parameters": "(final CacheLoader<K, V> cacheLoader)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "HeapCacheBuilder", "signature": "HeapCacheBuilder cacheLoader(final CacheLoader<K, V> cacheLoader)", "full_signature": "@SuppressWarnings(\"unchecked\") public HeapCacheBuilder cacheLoader(final CacheLoader<K, V> cacheLoader)", "class_method_signature": "HeapCacheBuilder.cacheLoader(final CacheLoader<K, V> cacheLoader)", "testcase": false, "constructor": false}, {"identifier": "evictionListener", "parameters": "(final EvictionListener<K, V> evictionListener)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "HeapCacheBuilder", "signature": "HeapCacheBuilder evictionListener(final EvictionListener<K, V> evictionListener)", "full_signature": "@SuppressWarnings(\"unchecked\") public HeapCacheBuilder evictionListener(final EvictionListener<K, V> evictionListener)", "class_method_signature": "HeapCacheBuilder.evictionListener(final EvictionListener<K, V> evictionListener)", "testcase": false, "constructor": false}, {"identifier": "indexHandler", "parameters": "(final IndexHandler<K, V> indexHandler)", "modifiers": "@SuppressWarnings(\"unchecked\") public synchronized", "return": "HeapCacheBuilder", "signature": "HeapCacheBuilder indexHandler(final IndexHandler<K, V> indexHandler)", "full_signature": "@SuppressWarnings(\"unchecked\") public synchronized HeapCacheBuilder indexHandler(final IndexHandler<K, V> indexHandler)", "class_method_signature": "HeapCacheBuilder.indexHandler(final IndexHandler<K, V> indexHandler)", "testcase": false, "constructor": false}, {"identifier": "capacity", "parameters": "(final int capacity)", "modifiers": "public", "return": "HeapCacheBuilder", "signature": "HeapCacheBuilder capacity(final int capacity)", "full_signature": "public HeapCacheBuilder capacity(final int capacity)", "class_method_signature": "HeapCacheBuilder.capacity(final int capacity)", "testcase": false, "constructor": false}, {"identifier": "addIndex", "parameters": "(final String attributeName,\n      final IndexType indexType)", "modifiers": "public synchronized", "return": "HeapCacheBuilder", "signature": "HeapCacheBuilder addIndex(final String attributeName,\n      final IndexType indexType)", "full_signature": "public synchronized HeapCacheBuilder addIndex(final String attributeName,\n      final IndexType indexType)", "class_method_signature": "HeapCacheBuilder.addIndex(final String attributeName,\n      final IndexType indexType)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "HeapCache<K, V>", "signature": "HeapCache<K, V> build()", "full_signature": "@SuppressWarnings(\"unchecked\") public HeapCache<K, V> build()", "class_method_signature": "HeapCacheBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(final String name)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "HeapCache<K, V>", "signature": "HeapCache<K, V> build(final String name)", "full_signature": "@SuppressWarnings(\"unchecked\") public HeapCache<K, V> build(final String name)", "class_method_signature": "HeapCacheBuilder.build(final String name)", "testcase": false, "constructor": false}], "file": "imcache/src/main/java/com/cetsoft/imcache/cache/builder/HeapCacheBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "HeapCache<K, V>", "body": "@SuppressWarnings(\"unchecked\")\n  public <K, V> HeapCache<K, V> build() {\n    return new HeapCache<>(name, (CacheLoader<K, V>) cacheLoader,\n        (EvictionListener<K, V>) evictionListener,\n        (IndexHandler<K, V>) indexHandler, capacity, expiryUnit, expiry);\n  }", "signature": "HeapCache<K, V> build()", "full_signature": "@SuppressWarnings(\"unchecked\") public HeapCache<K, V> build()", "class_method_signature": "HeapCacheBuilder.build()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}