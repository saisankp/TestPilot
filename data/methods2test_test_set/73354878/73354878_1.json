{"test_class": {"identifier": "AriaddnaExceptionTest", "superclass": "", "interfaces": "", "fields": [], "file": "common-utils/src/test/java/com/stnetix/ariaddna/commonutils/exception/AriaddnaExceptionTest.java"}, "test_case": {"identifier": "getErrorMessageTwoLevel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getErrorMessageTwoLevel() {\n        Throwable t1 = new AriaddnaException(\"1 \u0443\u0440\u043e\u0432\u0435\u043d\u044c\");\n        Throwable t2 = new AriaddnaException(\"2 \u0443\u0440\u043e\u0432\u0435\u043d\u044c\", t1);\n        try {\n            throw t2;\n        } catch (AriaddnaException e) {\n            System.out.println(e.getErrorMessage());\n        } catch (Throwable throwable) {\n            throwable.printStackTrace();\n        }\n    }", "signature": "void getErrorMessageTwoLevel()", "full_signature": "@Test public void getErrorMessageTwoLevel()", "class_method_signature": "AriaddnaExceptionTest.getErrorMessageTwoLevel()", "testcase": true, "constructor": false, "invocations": ["println", "getErrorMessage", "printStackTrace"]}, "focal_class": {"identifier": "AriaddnaException", "superclass": "extends Exception", "interfaces": "", "fields": [{"original_string": "private String errorMessage;", "modifier": "private", "type": "String", "declarator": "errorMessage", "var_name": "errorMessage"}], "methods": [{"identifier": "AriaddnaException", "parameters": "(Throwable cause)", "modifiers": "public", "return": "", "signature": " AriaddnaException(Throwable cause)", "full_signature": "public  AriaddnaException(Throwable cause)", "class_method_signature": "AriaddnaException.AriaddnaException(Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "AriaddnaException", "parameters": "(String traceMessage)", "modifiers": "public", "return": "", "signature": " AriaddnaException(String traceMessage)", "full_signature": "public  AriaddnaException(String traceMessage)", "class_method_signature": "AriaddnaException.AriaddnaException(String traceMessage)", "testcase": false, "constructor": true}, {"identifier": "AriaddnaException", "parameters": "(String traceMessage, String errorMessage)", "modifiers": "public", "return": "", "signature": " AriaddnaException(String traceMessage, String errorMessage)", "full_signature": "public  AriaddnaException(String traceMessage, String errorMessage)", "class_method_signature": "AriaddnaException.AriaddnaException(String traceMessage, String errorMessage)", "testcase": false, "constructor": true}, {"identifier": "AriaddnaException", "parameters": "(String traceMessage, Throwable cause)", "modifiers": "public", "return": "", "signature": " AriaddnaException(String traceMessage, Throwable cause)", "full_signature": "public  AriaddnaException(String traceMessage, Throwable cause)", "class_method_signature": "AriaddnaException.AriaddnaException(String traceMessage, Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "AriaddnaException", "parameters": "(String traceMessage, String errorMessage, Throwable cause)", "modifiers": "public", "return": "", "signature": " AriaddnaException(String traceMessage, String errorMessage, Throwable cause)", "full_signature": "public  AriaddnaException(String traceMessage, String errorMessage, Throwable cause)", "class_method_signature": "AriaddnaException.AriaddnaException(String traceMessage, String errorMessage, Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getErrorMessage()", "full_signature": "public String getErrorMessage()", "class_method_signature": "AriaddnaException.getErrorMessage()", "testcase": false, "constructor": false}], "file": "common-utils/src/main/java/com/stnetix/ariaddna/commonutils/exception/AriaddnaException.java"}, "focal_method": {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getErrorMessage() {\n        Throwable tmp = getCause();\n        if (tmp != null) {\n            Throwable t;\n            while (true) {\n                t = tmp.getCause();\n                if (t == null) {\n                    break;\n                }\n                tmp = tmp.getCause();\n            }\n            return tmp.getMessage();\n        }\n        return getMessage();\n    }", "signature": "String getErrorMessage()", "full_signature": "public String getErrorMessage()", "class_method_signature": "AriaddnaException.getErrorMessage()", "testcase": false, "constructor": false, "invocations": ["getCause", "getCause", "getCause", "getMessage", "getMessage"]}, "repository": {"repo_id": 73354878, "url": "https://github.com/StnetixDevTeam/ariADDna", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 11, "size": 971, "license": "licensed"}}