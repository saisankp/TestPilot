{"test_class": {"identifier": "ImmutableJsonArrayTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int KNOWN_INT_0 = 23;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_INT_0 = 23", "var_name": "KNOWN_INT_0"}, {"original_string": "private static final int KNOWN_INT_1 = 42;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_INT_1 = 42", "var_name": "KNOWN_INT_1"}, {"original_string": "private static final int KNOWN_INT_2 = 1337;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_INT_2 = 1337", "var_name": "KNOWN_INT_2"}, {"original_string": "private static final List<JsonValue> KNOWN_INT_VALUE_LIST = new ArrayList<>();", "modifier": "private static final", "type": "List<JsonValue>", "declarator": "KNOWN_INT_VALUE_LIST = new ArrayList<>()", "var_name": "KNOWN_INT_VALUE_LIST"}], "file": "json/src/test/java/org/eclipse/ditto/json/ImmutableJsonArrayTest.java"}, "test_case": {"identifier": "testHashCodeAndEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCodeAndEquals() {\n        final List<JsonValue> stringJsonValueList = toList(JsonValue.of(\"foo\"), JsonValue.of(\"bar\"));\n        final List<JsonValue> numberJsonValueList = toList(JsonValue.of(1), JsonValue.of(2), JsonValue.of(3));\n        final ImmutableJsonArray redArray = ImmutableJsonArray.of(stringJsonValueList);\n        final ImmutableJsonArray blackArray = ImmutableJsonArray.of(numberJsonValueList);\n        final ImmutableJsonArray.SoftReferencedValueList\n                redValueList = ImmutableJsonArray.SoftReferencedValueList.of(stringJsonValueList);\n        final ImmutableJsonArray.SoftReferencedValueList\n                blackValueList = ImmutableJsonArray.SoftReferencedValueList.of(numberJsonValueList);\n\n        EqualsVerifier.forClass(ImmutableJsonArray.class)\n                .withPrefabValues(ImmutableJsonArray.class, redArray, blackArray)\n                .withPrefabValues(ImmutableJsonArray.SoftReferencedValueList.class, redValueList, blackValueList)\n                .withNonnullFields(\"valueList\")\n                .verify();\n    }", "signature": "void testHashCodeAndEquals()", "full_signature": "@Test public void testHashCodeAndEquals()", "class_method_signature": "ImmutableJsonArrayTest.testHashCodeAndEquals()", "testcase": true, "constructor": false, "invocations": ["toList", "of", "of", "toList", "of", "of", "of", "of", "of", "of", "of", "verify", "withNonnullFields", "withPrefabValues", "withPrefabValues", "forClass"]}, "focal_class": {"identifier": "ImmutableJsonArray", "superclass": "extends AbstractJsonValue", "interfaces": "implements JsonArray", "fields": [{"original_string": "@Nullable private static ImmutableJsonArray emptyInstance = null;", "modifier": "@Nullable private static", "type": "ImmutableJsonArray", "declarator": "emptyInstance = null", "var_name": "emptyInstance"}, {"original_string": "private static final String ASSERTION_VALUES_OF_JSON_ARRAY = \"The values of the JSON array must not be null!\";", "modifier": "private static final", "type": "String", "declarator": "ASSERTION_VALUES_OF_JSON_ARRAY = \"The values of the JSON array must not be null!\"", "var_name": "ASSERTION_VALUES_OF_JSON_ARRAY"}, {"original_string": "private final SoftReferencedValueList valueList;", "modifier": "private final", "type": "SoftReferencedValueList", "declarator": "valueList", "var_name": "valueList"}], "methods": [{"identifier": "ImmutableJsonArray", "parameters": "(final SoftReferencedValueList theValueList)", "modifiers": "", "return": "", "signature": " ImmutableJsonArray(final SoftReferencedValueList theValueList)", "full_signature": "  ImmutableJsonArray(final SoftReferencedValueList theValueList)", "class_method_signature": "ImmutableJsonArray.ImmutableJsonArray(final SoftReferencedValueList theValueList)", "testcase": false, "constructor": true}, {"identifier": "empty", "parameters": "()", "modifiers": "public static", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray empty()", "full_signature": "public static ImmutableJsonArray empty()", "class_method_signature": "ImmutableJsonArray.empty()", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final List<JsonValue> values)", "modifiers": "public static", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray of(final List<JsonValue> values)", "full_signature": "public static ImmutableJsonArray of(final List<JsonValue> values)", "class_method_signature": "ImmutableJsonArray.of(final List<JsonValue> values)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final List<JsonValue> values, @Nullable final String stringRepresentation)", "modifiers": "public static", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray of(final List<JsonValue> values, @Nullable final String stringRepresentation)", "full_signature": "public static ImmutableJsonArray of(final List<JsonValue> values, @Nullable final String stringRepresentation)", "class_method_signature": "ImmutableJsonArray.of(final List<JsonValue> values, @Nullable final String stringRepresentation)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final List<JsonValue> values, @Nullable final byte[] cborRepresentation)", "modifiers": "public static", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray of(final List<JsonValue> values, @Nullable final byte[] cborRepresentation)", "full_signature": "public static ImmutableJsonArray of(final List<JsonValue> values, @Nullable final byte[] cborRepresentation)", "class_method_signature": "ImmutableJsonArray.of(final List<JsonValue> values, @Nullable final byte[] cborRepresentation)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final List<JsonValue> values, @Nullable final String stringRepresentation,\n            @Nullable final byte[] cborRepresentation)", "modifiers": "public static", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray of(final List<JsonValue> values, @Nullable final String stringRepresentation,\n            @Nullable final byte[] cborRepresentation)", "full_signature": "public static ImmutableJsonArray of(final List<JsonValue> values, @Nullable final String stringRepresentation,\n            @Nullable final byte[] cborRepresentation)", "class_method_signature": "ImmutableJsonArray.of(final List<JsonValue> values, @Nullable final String stringRepresentation,\n            @Nullable final byte[] cborRepresentation)", "testcase": false, "constructor": false}, {"identifier": "checkValue", "parameters": "(final Object value)", "modifiers": "private static", "return": "void", "signature": "void checkValue(final Object value)", "full_signature": "private static void checkValue(final Object value)", "class_method_signature": "ImmutableJsonArray.checkValue(final Object value)", "testcase": false, "constructor": false}, {"identifier": "checkFurtherValues", "parameters": "(final Object furtherValues)", "modifiers": "private static", "return": "void", "signature": "void checkFurtherValues(final Object furtherValues)", "full_signature": "private static void checkFurtherValues(final Object furtherValues)", "class_method_signature": "ImmutableJsonArray.checkFurtherValues(final Object furtherValues)", "testcase": false, "constructor": false}, {"identifier": "isArray", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isArray()", "full_signature": "@Override public boolean isArray()", "class_method_signature": "ImmutableJsonArray.isArray()", "testcase": false, "constructor": false}, {"identifier": "asArray", "parameters": "()", "modifiers": "@Override public", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray asArray()", "full_signature": "@Override public ImmutableJsonArray asArray()", "class_method_signature": "ImmutableJsonArray.asArray()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final int value, final int... furtherValues)", "modifiers": "@Override public", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray add(final int value, final int... furtherValues)", "full_signature": "@Override public ImmutableJsonArray add(final int value, final int... furtherValues)", "class_method_signature": "ImmutableJsonArray.add(final int value, final int... furtherValues)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final long value, final long... furtherValues)", "modifiers": "@Override public", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray add(final long value, final long... furtherValues)", "full_signature": "@Override public ImmutableJsonArray add(final long value, final long... furtherValues)", "class_method_signature": "ImmutableJsonArray.add(final long value, final long... furtherValues)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final double value, final double... furtherValues)", "modifiers": "@Override public", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray add(final double value, final double... furtherValues)", "full_signature": "@Override public ImmutableJsonArray add(final double value, final double... furtherValues)", "class_method_signature": "ImmutableJsonArray.add(final double value, final double... furtherValues)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final boolean value, final boolean... furtherValues)", "modifiers": "@Override public", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray add(final boolean value, final boolean... furtherValues)", "full_signature": "@Override public ImmutableJsonArray add(final boolean value, final boolean... furtherValues)", "class_method_signature": "ImmutableJsonArray.add(final boolean value, final boolean... furtherValues)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final String value, final String... furtherValues)", "modifiers": "@Override public", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray add(final String value, final String... furtherValues)", "full_signature": "@Override public ImmutableJsonArray add(final String value, final String... furtherValues)", "class_method_signature": "ImmutableJsonArray.add(final String value, final String... furtherValues)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final JsonValue value, final JsonValue... furtherValues)", "modifiers": "@Override public", "return": "ImmutableJsonArray", "signature": "ImmutableJsonArray add(final JsonValue value, final JsonValue... furtherValues)", "full_signature": "@Override public ImmutableJsonArray add(final JsonValue value, final JsonValue... furtherValues)", "class_method_signature": "ImmutableJsonArray.add(final JsonValue value, final JsonValue... furtherValues)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final int index)", "modifiers": "@Override public", "return": "Optional<JsonValue>", "signature": "Optional<JsonValue> get(final int index)", "full_signature": "@Override public Optional<JsonValue> get(final int index)", "class_method_signature": "ImmutableJsonArray.get(final int index)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "ImmutableJsonArray.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "ImmutableJsonArray.getSize()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final JsonValue value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(final JsonValue value)", "full_signature": "@Override public boolean contains(final JsonValue value)", "class_method_signature": "ImmutableJsonArray.contains(final JsonValue value)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(final JsonValue value)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(final JsonValue value)", "full_signature": "@Override public int indexOf(final JsonValue value)", "class_method_signature": "ImmutableJsonArray.indexOf(final JsonValue value)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<JsonValue>", "signature": "Iterator<JsonValue> iterator()", "full_signature": "@Override public Iterator<JsonValue> iterator()", "class_method_signature": "ImmutableJsonArray.iterator()", "testcase": false, "constructor": false}, {"identifier": "stream", "parameters": "()", "modifiers": "@Override public", "return": "Stream<JsonValue>", "signature": "Stream<JsonValue> stream()", "full_signature": "@Override public Stream<JsonValue> stream()", "class_method_signature": "ImmutableJsonArray.stream()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableJsonArray.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableJsonArray.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableJsonArray.toString()", "testcase": false, "constructor": false}, {"identifier": "writeValue", "parameters": "(final SerializationContext serializationContext)", "modifiers": "@Override public", "return": "void", "signature": "void writeValue(final SerializationContext serializationContext)", "full_signature": "@Override public void writeValue(final SerializationContext serializationContext)", "class_method_signature": "ImmutableJsonArray.writeValue(final SerializationContext serializationContext)", "testcase": false, "constructor": false}, {"identifier": "getUpperBoundForStringSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getUpperBoundForStringSize()", "full_signature": "@Override public long getUpperBoundForStringSize()", "class_method_signature": "ImmutableJsonArray.getUpperBoundForStringSize()", "testcase": false, "constructor": false}], "file": "json/src/main/java/org/eclipse/ditto/json/ImmutableJsonArray.java"}, "focal_method": {"identifier": "of", "parameters": "(final List<JsonValue> values)", "modifiers": "public static", "return": "ImmutableJsonArray", "body": "public static ImmutableJsonArray of(final List<JsonValue> values) {\n        return new ImmutableJsonArray(SoftReferencedValueList.of(values));\n    }", "signature": "ImmutableJsonArray of(final List<JsonValue> values)", "full_signature": "public static ImmutableJsonArray of(final List<JsonValue> values)", "class_method_signature": "ImmutableJsonArray.of(final List<JsonValue> values)", "testcase": false, "constructor": false, "invocations": ["of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}