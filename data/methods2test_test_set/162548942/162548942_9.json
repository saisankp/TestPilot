{"test_class": {"identifier": "CompressManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "brpc-java-communication/src/test/java/com/baidu/brpc/compress/CompressManagerTest.java"}, "test_case": {"identifier": "testGetCompress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCompress() {\n        CompressManager compressManager = CompressManager.getInstance();\n        Compress compress = compressManager.getCompress(Options.CompressType.COMPRESS_TYPE_NONE_VALUE);\n        Assert.assertNotNull(compress);\n        compress = compressManager.getCompress(Options.CompressType.COMPRESS_TYPE_GZIP_VALUE);\n        Assert.assertNotNull(compress);\n    }", "signature": "void testGetCompress()", "full_signature": "@Test public void testGetCompress()", "class_method_signature": "CompressManagerTest.testGetCompress()", "testcase": true, "constructor": false, "invocations": ["getInstance", "getCompress", "assertNotNull", "getCompress", "assertNotNull"]}, "focal_class": {"identifier": "CompressManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MAX_COMPRESS_NUM = 16;", "modifier": "private static final", "type": "int", "declarator": "MAX_COMPRESS_NUM = 16", "var_name": "MAX_COMPRESS_NUM"}, {"original_string": "private static volatile CompressManager instance;", "modifier": "private static volatile", "type": "CompressManager", "declarator": "instance", "var_name": "instance"}, {"original_string": "private Compress[] compressArray;", "modifier": "private", "type": "Compress[]", "declarator": "compressArray", "var_name": "compressArray"}, {"original_string": "private int compressNum;", "modifier": "private", "type": "int", "declarator": "compressNum", "var_name": "compressNum"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "CompressManager", "signature": "CompressManager getInstance()", "full_signature": "public static CompressManager getInstance()", "class_method_signature": "CompressManager.getInstance()", "testcase": false, "constructor": false}, {"identifier": "CompressManager", "parameters": "()", "modifiers": "private", "return": "", "signature": " CompressManager()", "full_signature": "private  CompressManager()", "class_method_signature": "CompressManager.CompressManager()", "testcase": false, "constructor": true}, {"identifier": "getCompress", "parameters": "(int compressType)", "modifiers": "public", "return": "Compress", "signature": "Compress getCompress(int compressType)", "full_signature": "public Compress getCompress(int compressType)", "class_method_signature": "CompressManager.getCompress(int compressType)", "testcase": false, "constructor": false}], "file": "brpc-java-communication/src/main/java/com/baidu/brpc/compress/CompressManager.java"}, "focal_method": {"identifier": "getCompress", "parameters": "(int compressType)", "modifiers": "public", "return": "Compress", "body": "public Compress getCompress(int compressType) {\n        if (compressType < 0 || compressType >= compressNum) {\n            throw new RuntimeException(\"out of bound\");\n        }\n        Compress compress = compressArray[compressType];\n        if (compress == null) {\n            String errMsg = String.format(\"compress type=%d not support\", compressType);\n            log.warn(errMsg);\n            throw new RuntimeException(errMsg);\n        }\n        return compress;\n    }", "signature": "Compress getCompress(int compressType)", "full_signature": "public Compress getCompress(int compressType)", "class_method_signature": "CompressManager.getCompress(int compressType)", "testcase": false, "constructor": false, "invocations": ["format", "warn"]}, "repository": {"repo_id": 162548942, "url": "https://github.com/baidu/brpc-java", "language": "Java", "is_fork": false, "fork_count": 175, "stargazer_count": 551, "size": 3271, "license": "licensed"}}