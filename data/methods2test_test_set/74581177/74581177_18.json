{"test_class": {"identifier": "ParserUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/bbva/kltt/apirest/core/util/parser/ParserUtilTest.java"}, "test_case": {"identifier": "generateExceptionRequiredField", "parameters": "()", "modifiers": "@Test(expected = APIRestGeneratorException.class) public", "return": "void", "body": "@Test(expected = APIRestGeneratorException.class)\n\tpublic void generateExceptionRequiredField() throws APIRestGeneratorException\n\t{\n\t\tParserUtil.generateExceptionRequiredField(ConstantsTest.NODE_NAME, ConstantsTest.FIELD_NAME) ;\n\t}", "signature": "void generateExceptionRequiredField()", "full_signature": "@Test(expected = APIRestGeneratorException.class) public void generateExceptionRequiredField()", "class_method_signature": "ParserUtilTest.generateExceptionRequiredField()", "testcase": true, "constructor": false, "invocations": ["generateExceptionRequiredField"]}, "focal_class": {"identifier": "ParserUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ParserUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ParserUtil.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "validateExtension", "parameters": "(final String filePath)", "modifiers": "public static", "return": "String", "signature": "String validateExtension(final String filePath)", "full_signature": "public static String validateExtension(final String filePath)", "class_method_signature": "ParserUtil.validateExtension(final String filePath)", "testcase": false, "constructor": false}, {"identifier": "deserializeIntoJson", "parameters": "(final String filePath)", "modifiers": "public static", "return": "JsonNode", "signature": "JsonNode deserializeIntoJson(final String filePath)", "full_signature": "public static JsonNode deserializeIntoJson(final String filePath)", "class_method_signature": "ParserUtil.deserializeIntoJson(final String filePath)", "testcase": false, "constructor": false}, {"identifier": "readFileContent", "parameters": "(final String filePath)", "modifiers": "public static", "return": "String", "signature": "String readFileContent(final String filePath)", "full_signature": "public static String readFileContent(final String filePath)", "class_method_signature": "ParserUtil.readFileContent(final String filePath)", "testcase": false, "constructor": false}, {"identifier": "generateSetStringFromString", "parameters": "(final ArrayNode arrayNode)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> generateSetStringFromString(final ArrayNode arrayNode)", "full_signature": "public static Set<String> generateSetStringFromString(final ArrayNode arrayNode)", "class_method_signature": "ParserUtil.generateSetStringFromString(final ArrayNode arrayNode)", "testcase": false, "constructor": false}, {"identifier": "getNodeValueJson", "parameters": "(final String nodeName, final JsonNode node, final String fieldName, final boolean isRequired)", "modifiers": "public static", "return": "JsonNode", "signature": "JsonNode getNodeValueJson(final String nodeName, final JsonNode node, final String fieldName, final boolean isRequired)", "full_signature": "public static JsonNode getNodeValueJson(final String nodeName, final JsonNode node, final String fieldName, final boolean isRequired)", "class_method_signature": "ParserUtil.getNodeValueJson(final String nodeName, final JsonNode node, final String fieldName, final boolean isRequired)", "testcase": false, "constructor": false}, {"identifier": "getNodeValueField", "parameters": "(final String nodeName, final JsonNode node, final String fieldName, final boolean isRequired)", "modifiers": "public static", "return": "String", "signature": "String getNodeValueField(final String nodeName, final JsonNode node, final String fieldName, final boolean isRequired)", "full_signature": "public static String getNodeValueField(final String nodeName, final JsonNode node, final String fieldName, final boolean isRequired)", "class_method_signature": "ParserUtil.getNodeValueField(final String nodeName, final JsonNode node, final String fieldName, final boolean isRequired)", "testcase": false, "constructor": false}, {"identifier": "getNodeValueSetField", "parameters": "(final String nodeName,\n                                                   final JsonNode node,\n                                                   final String fieldName,\n                                                   final boolean isRequired)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getNodeValueSetField(final String nodeName,\n                                                   final JsonNode node,\n                                                   final String fieldName,\n                                                   final boolean isRequired)", "full_signature": "public static Set<String> getNodeValueSetField(final String nodeName,\n                                                   final JsonNode node,\n                                                   final String fieldName,\n                                                   final boolean isRequired)", "class_method_signature": "ParserUtil.getNodeValueSetField(final String nodeName,\n                                                   final JsonNode node,\n                                                   final String fieldName,\n                                                   final boolean isRequired)", "testcase": false, "constructor": false}, {"identifier": "generateExceptionRequiredField", "parameters": "(final String nodeName, final String fieldName)", "modifiers": "public static", "return": "void", "signature": "void generateExceptionRequiredField(final String nodeName, final String fieldName)", "full_signature": "public static void generateExceptionRequiredField(final String nodeName, final String fieldName)", "class_method_signature": "ParserUtil.generateExceptionRequiredField(final String nodeName, final String fieldName)", "testcase": false, "constructor": false}, {"identifier": "generateExceptionRequiredNodeContent", "parameters": "(final String nodeName, final String fieldName)", "modifiers": "private static", "return": "void", "signature": "void generateExceptionRequiredNodeContent(final String nodeName, final String fieldName)", "full_signature": "private static void generateExceptionRequiredNodeContent(final String nodeName, final String fieldName)", "class_method_signature": "ParserUtil.generateExceptionRequiredNodeContent(final String nodeName, final String fieldName)", "testcase": false, "constructor": false}, {"identifier": "generateToStringFromSetString", "parameters": "(final Set<String> listString)", "modifiers": "public static", "return": "String", "signature": "String generateToStringFromSetString(final Set<String> listString)", "full_signature": "public static String generateToStringFromSetString(final Set<String> listString)", "class_method_signature": "ParserUtil.generateToStringFromSetString(final Set<String> listString)", "testcase": false, "constructor": false}, {"identifier": "getSchemasParser", "parameters": "(final GenerationParameters generationParameters)", "modifiers": "public static", "return": "IParser", "signature": "IParser getSchemasParser(final GenerationParameters generationParameters)", "full_signature": "public static IParser getSchemasParser(final GenerationParameters generationParameters)", "class_method_signature": "ParserUtil.getSchemasParser(final GenerationParameters generationParameters)", "testcase": false, "constructor": false}, {"identifier": "ParserUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ParserUtil()", "full_signature": "private  ParserUtil()", "class_method_signature": "ParserUtil.ParserUtil()", "testcase": false, "constructor": true}], "file": "core/src/main/java/com/bbva/kltt/apirest/core/util/parser/ParserUtil.java"}, "focal_method": {"identifier": "generateExceptionRequiredField", "parameters": "(final String nodeName, final String fieldName)", "modifiers": "public static", "return": "void", "body": "public static void generateExceptionRequiredField(final String nodeName, final String fieldName) throws APIRestGeneratorException\n    {\n        final String errorString = \"The field name '\" + fieldName + \"' is required in the node: \" + nodeName;\n\n        ParserUtil.LOGGER.error(errorString);\n        throw new APIRestGeneratorException(errorString);\n    }", "signature": "void generateExceptionRequiredField(final String nodeName, final String fieldName)", "full_signature": "public static void generateExceptionRequiredField(final String nodeName, final String fieldName)", "class_method_signature": "ParserUtil.generateExceptionRequiredField(final String nodeName, final String fieldName)", "testcase": false, "constructor": false, "invocations": ["error"]}, "repository": {"repo_id": 74581177, "url": "https://github.com/BBVA-CIB/APIRestGenerator", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 147303, "license": "licensed"}}