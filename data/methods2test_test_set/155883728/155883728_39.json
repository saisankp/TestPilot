{"test_class": {"identifier": "WebsterMojoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final File srcDir = new File(\"src/test/resources/WebsterMojoTest\");", "modifier": "private final", "type": "File", "declarator": "srcDir = new File(\"src/test/resources/WebsterMojoTest\")", "var_name": "srcDir"}, {"original_string": "private final File testOutBaseDir = new File(\"target/test-out/WebsterMojoTest\");", "modifier": "private final", "type": "File", "declarator": "testOutBaseDir = new File(\"target/test-out/WebsterMojoTest\")", "var_name": "testOutBaseDir"}], "file": "maven/src/test/java/net/adamcin/oakpal/maven/mojo/WebsterMojoTest.java"}, "test_case": {"identifier": "testExecuteWebsterPlan_tempFails", "parameters": "()", "modifiers": "@Test(expected = MojoFailureException.class) public", "return": "void", "body": "@Test(expected = MojoFailureException.class)\n    public void testExecuteWebsterPlan_tempFails() throws Exception {\n        final File testOutDir = new File(testOutBaseDir, \"testExecuteWebsterPlan_tempFails\");\n        recursiveDeleteWithRetry(testOutDir);\n        final File projectRoot = new File(testOutDir, \"content-package\");\n        FileUtils.copyDirectory(new File(srcDir, \"content-package\"), projectRoot);\n        WebsterMojo mojo = newMojo();\n        final File tempDir = new File(testOutDir, \"webster-tmp\");\n        FileUtils.touch(tempDir);\n        mojo.websterTempDirectory = tempDir;\n        final WebsterPlan.Builder builder = new WebsterPlan.Builder();\n        mojo.executeWebsterPlan(builder);\n    }", "signature": "void testExecuteWebsterPlan_tempFails()", "full_signature": "@Test(expected = MojoFailureException.class) public void testExecuteWebsterPlan_tempFails()", "class_method_signature": "WebsterMojoTest.testExecuteWebsterPlan_tempFails()", "testcase": true, "constructor": false, "invocations": ["recursiveDeleteWithRetry", "copyDirectory", "newMojo", "touch", "executeWebsterPlan"]}, "focal_class": {"identifier": "WebsterMojo", "superclass": "extends AbstractMojo", "interfaces": "", "fields": [{"original_string": "public static final String PARAM_REPOSITORY_HOME = \"webster.repositoryHome\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_REPOSITORY_HOME = \"webster.repositoryHome\"", "var_name": "PARAM_REPOSITORY_HOME"}, {"original_string": "public static final String PARAM_OAK_RUN_ARGS = \"webster.oakRunArgs\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_OAK_RUN_ARGS = \"webster.oakRunArgs\"", "var_name": "PARAM_OAK_RUN_ARGS"}, {"original_string": "public static final String PARAM_TMPDIR = \"webster.tmpdir\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_TMPDIR = \"webster.tmpdir\"", "var_name": "PARAM_TMPDIR"}, {"original_string": "@Parameter(property = PARAM_REPOSITORY_HOME)\n    File websterRepositoryHome;", "modifier": "@Parameter(property = PARAM_REPOSITORY_HOME)", "type": "File", "declarator": "websterRepositoryHome", "var_name": "websterRepositoryHome"}, {"original_string": "@Parameter(property = PARAM_OAK_RUN_ARGS)\n    String websterOakRunArgs;", "modifier": "@Parameter(property = PARAM_OAK_RUN_ARGS)", "type": "String", "declarator": "websterOakRunArgs", "var_name": "websterOakRunArgs"}, {"original_string": "@Parameter(property = PARAM_TMPDIR, defaultValue = \"${project.build.directory}/oakpal-plugin/webster-tmpdir\")\n    File websterTempDirectory;", "modifier": "@Parameter(property = PARAM_TMPDIR, defaultValue = \"${project.build.directory}/oakpal-plugin/webster-tmpdir\")", "type": "File", "declarator": "websterTempDirectory", "var_name": "websterTempDirectory"}, {"original_string": "@Parameter(defaultValue = \"${basedir}/src/main/content\")\n    File websterArchiveRoot;", "modifier": "@Parameter(defaultValue = \"${basedir}/src/main/content\")", "type": "File", "declarator": "websterArchiveRoot", "var_name": "websterArchiveRoot"}, {"original_string": "@Parameter\n    JsonObject websterTargets;", "modifier": "@Parameter", "type": "JsonObject", "declarator": "websterTargets", "var_name": "websterTargets"}, {"original_string": "@Parameter(property = \"webster.revealOakLogging\")\n    boolean revealOakLogging;", "modifier": "@Parameter(property = \"webster.revealOakLogging\")", "type": "boolean", "declarator": "revealOakLogging", "var_name": "revealOakLogging"}, {"original_string": "@Parameter(defaultValue = \"${project.basedir}\")\n    File baseDir;", "modifier": "@Parameter(defaultValue = \"${project.basedir}\")", "type": "File", "declarator": "baseDir", "var_name": "baseDir"}, {"original_string": "Fun.ThrowingConsumer<File> tempDirDeleter = FileUtils::deleteDirectory;", "modifier": "", "type": "Fun.ThrowingConsumer<File>", "declarator": "tempDirDeleter = FileUtils::deleteDirectory", "var_name": "tempDirDeleter"}], "methods": [{"identifier": "suppressOakLogging", "parameters": "(final @NotNull BiConsumer<String, String> propSetter)", "modifiers": "", "return": "void", "signature": "void suppressOakLogging(final @NotNull BiConsumer<String, String> propSetter)", "full_signature": " void suppressOakLogging(final @NotNull BiConsumer<String, String> propSetter)", "class_method_signature": "WebsterMojo.suppressOakLogging(final @NotNull BiConsumer<String, String> propSetter)", "testcase": false, "constructor": false}, {"identifier": "addTargets", "parameters": "(final @NotNull WebsterPlan.Builder builder,\n                    final @NotNull Fun.ThrowingBiFunction<File, JsonObject, List<WebsterTarget>> parser)", "modifiers": "", "return": "void", "signature": "void addTargets(final @NotNull WebsterPlan.Builder builder,\n                    final @NotNull Fun.ThrowingBiFunction<File, JsonObject, List<WebsterTarget>> parser)", "full_signature": " void addTargets(final @NotNull WebsterPlan.Builder builder,\n                    final @NotNull Fun.ThrowingBiFunction<File, JsonObject, List<WebsterTarget>> parser)", "class_method_signature": "WebsterMojo.addTargets(final @NotNull WebsterPlan.Builder builder,\n                    final @NotNull Fun.ThrowingBiFunction<File, JsonObject, List<WebsterTarget>> parser)", "testcase": false, "constructor": false}, {"identifier": "getFixtureProvider", "parameters": "()", "modifiers": "@Nullable", "return": "WebsterPlan.FixtureProvider", "signature": "WebsterPlan.FixtureProvider getFixtureProvider()", "full_signature": "@Nullable WebsterPlan.FixtureProvider getFixtureProvider()", "class_method_signature": "WebsterMojo.getFixtureProvider()", "testcase": false, "constructor": false}, {"identifier": "executeWebsterPlan", "parameters": "(final @NotNull WebsterPlan.Builder builder)", "modifiers": "", "return": "void", "signature": "void executeWebsterPlan(final @NotNull WebsterPlan.Builder builder)", "full_signature": " void executeWebsterPlan(final @NotNull WebsterPlan.Builder builder)", "class_method_signature": "WebsterMojo.executeWebsterPlan(final @NotNull WebsterPlan.Builder builder)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void execute()", "full_signature": "@Override public final void execute()", "class_method_signature": "WebsterMojo.execute()", "testcase": false, "constructor": false}], "file": "maven/src/main/java/net/adamcin/oakpal/maven/mojo/WebsterMojo.java"}, "focal_method": {"identifier": "executeWebsterPlan", "parameters": "(final @NotNull WebsterPlan.Builder builder)", "modifiers": "", "return": "void", "body": "void executeWebsterPlan(final @NotNull WebsterPlan.Builder builder) throws MojoFailureException {\n        try {\n            websterTempDirectory.mkdirs();\n            final File globalRepositoryHome = Files\n                    .createTempDirectory(websterTempDirectory.toPath(), \"webster_repository\")\n                    .toFile().getAbsoluteFile();\n\n            try {\n                WebsterPlan plan = builder\n                        .withGlobalSegmentStore(new File(globalRepositoryHome, \"segmentstore\")).build();\n                plan.perform();\n            } catch (Exception e) {\n                throw new MojoFailureException(\"Failed to execute Webster plan.\", e);\n            } finally {\n                try {\n                    tempDirDeleter.tryAccept(globalRepositoryHome);\n                } catch (Exception e) {\n                    getLog().error(\"Failed to delete temp global segment store: \"\n                            + globalRepositoryHome.getAbsolutePath(), e);\n                }\n            }\n        } catch (IOException e) {\n            throw new MojoFailureException(\"Failed to create temp global segment store\", e);\n        }\n    }", "signature": "void executeWebsterPlan(final @NotNull WebsterPlan.Builder builder)", "full_signature": " void executeWebsterPlan(final @NotNull WebsterPlan.Builder builder)", "class_method_signature": "WebsterMojo.executeWebsterPlan(final @NotNull WebsterPlan.Builder builder)", "testcase": false, "constructor": false, "invocations": ["mkdirs", "getAbsoluteFile", "toFile", "createTempDirectory", "toPath", "build", "withGlobalSegmentStore", "perform", "tryAccept", "error", "getLog", "getAbsolutePath"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}