{"test_class": {"identifier": "TableLineBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TableLineBuilder builder = new TableLineBuilder();", "modifier": "private final", "type": "TableLineBuilder", "declarator": "builder = new TableLineBuilder()", "var_name": "builder"}], "file": "OcavaCore/src/test/java/com/ocadotechnology/tableio/TableLineBuilderTest.java"}, "test_case": {"identifier": "testWithBoolean", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testWithBoolean() {\n        String columnName = \"ColumnName\";\n        TableLine tableLine = builder.withBoolean(columnName, false).build();\n\n        TableLine expectedTableLine = new TableLine(ImmutableMap.of(\n                columnName, \"false\"),\n                ImmutableSet.of());\n        checkTableLinesAreTheSame(expectedTableLine, tableLine);\n    }", "signature": "void testWithBoolean()", "full_signature": "@Test void testWithBoolean()", "class_method_signature": "TableLineBuilderTest.testWithBoolean()", "testcase": true, "constructor": false, "invocations": ["build", "withBoolean", "of", "of", "checkTableLinesAreTheSame"]}, "focal_class": {"identifier": "TableLineBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String nullValue = \"NULL\";", "modifier": "private static final", "type": "String", "declarator": "nullValue = \"NULL\"", "var_name": "nullValue"}, {"original_string": "private final ImmutableMap.Builder<String, String> lineMapBuilder = ImmutableMap.builder();", "modifier": "private final", "type": "ImmutableMap.Builder<String, String>", "declarator": "lineMapBuilder = ImmutableMap.builder()", "var_name": "lineMapBuilder"}, {"original_string": "private final ImmutableSet.Builder<String> stringColumnsBuilder = ImmutableSet.builder();", "modifier": "private final", "type": "ImmutableSet.Builder<String>", "declarator": "stringColumnsBuilder = ImmutableSet.builder()", "var_name": "stringColumnsBuilder"}], "methods": [{"identifier": "withInt", "parameters": "(String columnHeader, Integer value)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withInt(String columnHeader, Integer value)", "full_signature": "public TableLineBuilder withInt(String columnHeader, Integer value)", "class_method_signature": "TableLineBuilder.withInt(String columnHeader, Integer value)", "testcase": false, "constructor": false}, {"identifier": "withLong", "parameters": "(String columnHeader, Long value)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withLong(String columnHeader, Long value)", "full_signature": "public TableLineBuilder withLong(String columnHeader, Long value)", "class_method_signature": "TableLineBuilder.withLong(String columnHeader, Long value)", "testcase": false, "constructor": false}, {"identifier": "withId", "parameters": "(String columnHeader, Id<?> id)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withId(String columnHeader, Id<?> id)", "full_signature": "public TableLineBuilder withId(String columnHeader, Id<?> id)", "class_method_signature": "TableLineBuilder.withId(String columnHeader, Id<?> id)", "testcase": false, "constructor": false}, {"identifier": "withStringId", "parameters": "(String columnHeader, StringId<?> id)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withStringId(String columnHeader, StringId<?> id)", "full_signature": "public TableLineBuilder withStringId(String columnHeader, StringId<?> id)", "class_method_signature": "TableLineBuilder.withStringId(String columnHeader, StringId<?> id)", "testcase": false, "constructor": false}, {"identifier": "withDouble", "parameters": "(String columnHeader, Double value)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withDouble(String columnHeader, Double value)", "full_signature": "public TableLineBuilder withDouble(String columnHeader, Double value)", "class_method_signature": "TableLineBuilder.withDouble(String columnHeader, Double value)", "testcase": false, "constructor": false}, {"identifier": "withBoolean", "parameters": "(String columnHeader, Boolean value)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withBoolean(String columnHeader, Boolean value)", "full_signature": "public TableLineBuilder withBoolean(String columnHeader, Boolean value)", "class_method_signature": "TableLineBuilder.withBoolean(String columnHeader, Boolean value)", "testcase": false, "constructor": false}, {"identifier": "withTime", "parameters": "(String columnHeader, LocalDateTime value)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withTime(String columnHeader, LocalDateTime value)", "full_signature": "public TableLineBuilder withTime(String columnHeader, LocalDateTime value)", "class_method_signature": "TableLineBuilder.withTime(String columnHeader, LocalDateTime value)", "testcase": false, "constructor": false}, {"identifier": "withString", "parameters": "(String columnHeader, String value)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withString(String columnHeader, String value)", "full_signature": "public TableLineBuilder withString(String columnHeader, String value)", "class_method_signature": "TableLineBuilder.withString(String columnHeader, String value)", "testcase": false, "constructor": false}, {"identifier": "withEnumValue", "parameters": "(String columnHeader, T enumValue)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withEnumValue(String columnHeader, T enumValue)", "full_signature": "public TableLineBuilder withEnumValue(String columnHeader, T enumValue)", "class_method_signature": "TableLineBuilder.withEnumValue(String columnHeader, T enumValue)", "testcase": false, "constructor": false}, {"identifier": "withEnumCount", "parameters": "(\n            String statName,\n            Map<T, Integer> countByEnum,\n            Class<T> clazz)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withEnumCount(\n            String statName,\n            Map<T, Integer> countByEnum,\n            Class<T> clazz)", "full_signature": "public TableLineBuilder withEnumCount(\n            String statName,\n            Map<T, Integer> countByEnum,\n            Class<T> clazz)", "class_method_signature": "TableLineBuilder.withEnumCount(\n            String statName,\n            Map<T, Integer> countByEnum,\n            Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "withTableEnumCount", "parameters": "(\n            String statName,\n            Table<R, C, Integer> countTable,\n            Class<R> rowClass,\n            Class<C> columnClass)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withTableEnumCount(\n            String statName,\n            Table<R, C, Integer> countTable,\n            Class<R> rowClass,\n            Class<C> columnClass)", "full_signature": "public TableLineBuilder withTableEnumCount(\n            String statName,\n            Table<R, C, Integer> countTable,\n            Class<R> rowClass,\n            Class<C> columnClass)", "class_method_signature": "TableLineBuilder.withTableEnumCount(\n            String statName,\n            Table<R, C, Integer> countTable,\n            Class<R> rowClass,\n            Class<C> columnClass)", "testcase": false, "constructor": false}, {"identifier": "withExtension", "parameters": "(TableLineExtender extender)", "modifiers": "public", "return": "TableLineBuilder", "signature": "TableLineBuilder withExtension(TableLineExtender extender)", "full_signature": "public TableLineBuilder withExtension(TableLineExtender extender)", "class_method_signature": "TableLineBuilder.withExtension(TableLineExtender extender)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "TableLine", "signature": "TableLine build()", "full_signature": "public TableLine build()", "class_method_signature": "TableLineBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(String columnHeader, Object value)", "modifiers": "private", "return": "TableLineBuilder", "signature": "TableLineBuilder setObject(String columnHeader, Object value)", "full_signature": "private TableLineBuilder setObject(String columnHeader, Object value)", "class_method_signature": "TableLineBuilder.setObject(String columnHeader, Object value)", "testcase": false, "constructor": false}], "file": "OcavaCore/src/main/java/com/ocadotechnology/tableio/TableLineBuilder.java"}, "focal_method": {"identifier": "withBoolean", "parameters": "(String columnHeader, Boolean value)", "modifiers": "public", "return": "TableLineBuilder", "body": "public TableLineBuilder withBoolean(String columnHeader, Boolean value) {\n        return setObject(columnHeader, value);\n    }", "signature": "TableLineBuilder withBoolean(String columnHeader, Boolean value)", "full_signature": "public TableLineBuilder withBoolean(String columnHeader, Boolean value)", "class_method_signature": "TableLineBuilder.withBoolean(String columnHeader, Boolean value)", "testcase": false, "constructor": false, "invocations": ["setObject"]}, "repository": {"repo_id": 99997703, "url": "https://github.com/ocadotechnology/Ocava", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 1137, "license": "licensed"}}