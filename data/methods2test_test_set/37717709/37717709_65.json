{"test_class": {"identifier": "TestClearStrategy", "superclass": "extends TagStrategyTestBase", "interfaces": "", "fields": [], "file": "org.jvoicexml.profile.vxml21/src/test/java/org/jvoicexml/profile/vxml21/tagstrategy/TestClearStrategy.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws Exception {\n        final String var = \"test\";\n        final Block block = createBlock();\n        final Clear clear = block.appendChild(Clear.class);\n        clear.setNamelist(var);\n\n        final DataModel model = getDataModel();\n        Mockito.when(model.existsVariable(var)).thenReturn(true);\n        ClearStrategy strategy = new ClearStrategy();\n        try {\n            executeTagStrategy(clear, strategy);\n        } catch (JVoiceXMLEvent e) {\n            Assert.fail(e.getMessage());\n        }\n        Mockito.verify(model).updateVariable(var, null);\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "TestClearStrategy.testExecute()", "testcase": true, "constructor": false, "invocations": ["createBlock", "appendChild", "setNamelist", "getDataModel", "thenReturn", "when", "existsVariable", "executeTagStrategy", "fail", "getMessage", "updateVariable", "verify"]}, "focal_class": {"identifier": "ClearStrategy", "superclass": "extends AbstractTagStrategy", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LogManager.getLogger(ClearStrategy.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger(ClearStrategy.class)", "var_name": "LOGGER"}, {"original_string": "private TokenList namelist;", "modifier": "private", "type": "TokenList", "declarator": "namelist", "var_name": "namelist"}], "methods": [{"identifier": "ClearStrategy", "parameters": "()", "modifiers": "", "return": "", "signature": " ClearStrategy()", "full_signature": "  ClearStrategy()", "class_method_signature": "ClearStrategy.ClearStrategy()", "testcase": false, "constructor": true}, {"identifier": "getEvalAttributes", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getEvalAttributes()", "full_signature": "public Collection<String> getEvalAttributes()", "class_method_signature": "ClearStrategy.getEvalAttributes()", "testcase": false, "constructor": false}, {"identifier": "validateAttributes", "parameters": "(final DataModel model)", "modifiers": "@Override public", "return": "void", "signature": "void validateAttributes(final DataModel model)", "full_signature": "@Override public void validateAttributes(final DataModel model)", "class_method_signature": "ClearStrategy.validateAttributes(final DataModel model)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node)", "modifiers": "public", "return": "void", "signature": "void execute(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node)", "full_signature": "public void execute(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node)", "class_method_signature": "ClearStrategy.execute(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node)", "testcase": false, "constructor": false}, {"identifier": "clearAllFormItems", "parameters": "(final VoiceXmlInterpreterContext context,\n            final FormInterpretationAlgorithm fia)", "modifiers": "private", "return": "void", "signature": "void clearAllFormItems(final VoiceXmlInterpreterContext context,\n            final FormInterpretationAlgorithm fia)", "full_signature": "private void clearAllFormItems(final VoiceXmlInterpreterContext context,\n            final FormInterpretationAlgorithm fia)", "class_method_signature": "ClearStrategy.clearAllFormItems(final VoiceXmlInterpreterContext context,\n            final FormInterpretationAlgorithm fia)", "testcase": false, "constructor": false}, {"identifier": "resetCounter", "parameters": "(final DataModel model, final String name)", "modifiers": "private", "return": "void", "signature": "void resetCounter(final DataModel model, final String name)", "full_signature": "private void resetCounter(final DataModel model, final String name)", "class_method_signature": "ClearStrategy.resetCounter(final DataModel model, final String name)", "testcase": false, "constructor": false}, {"identifier": "clearVariables", "parameters": "(final VoiceXmlInterpreterContext context,\n            final FormInterpretationAlgorithm fia)", "modifiers": "private", "return": "void", "signature": "void clearVariables(final VoiceXmlInterpreterContext context,\n            final FormInterpretationAlgorithm fia)", "full_signature": "private void clearVariables(final VoiceXmlInterpreterContext context,\n            final FormInterpretationAlgorithm fia)", "class_method_signature": "ClearStrategy.clearVariables(final VoiceXmlInterpreterContext context,\n            final FormInterpretationAlgorithm fia)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.profile.vxml21/src/main/java/org/jvoicexml/profile/vxml21/tagstrategy/ClearStrategy.java"}, "focal_method": {"identifier": "execute", "parameters": "(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node)", "modifiers": "public", "return": "void", "body": "public void execute(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node) throws JVoiceXMLEvent {\n        if ((namelist == null) || namelist.isEmpty()) {\n            clearAllFormItems(context, fia);\n        } else {\n            clearVariables(context, fia);\n        }\n\n    }", "signature": "void execute(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node)", "full_signature": "public void execute(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node)", "class_method_signature": "ClearStrategy.execute(final VoiceXmlInterpreterContext context,\n            final VoiceXmlInterpreter interpreter,\n            final FormInterpretationAlgorithm fia, final FormItem item,\n            final VoiceXmlNode node)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "clearAllFormItems", "clearVariables"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}