{"test_class": {"identifier": "CollectionInputFormatTest", "superclass": "", "interfaces": "", "fields": [], "file": "flink-java/src/test/java/org/apache/flink/api/java/io/CollectionInputFormatTest.java"}, "test_case": {"identifier": "testSerializationFailure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSerializationFailure() {\n\t\ttry {\n\t\t\t// a mock serializer that fails when writing\n\t\t\tCollectionInputFormat<ElementType> inFormat = new CollectionInputFormat<ElementType>(\n\t\t\t\t\tCollections.singleton(new ElementType()), new TestSerializer(false, true));\n\t\t\t\n\t\t\tByteArrayOutputStream buffer = new ByteArrayOutputStream();\n\t\t\tObjectOutputStream out = new ObjectOutputStream(buffer);\n\t\t\t\n\t\t\ttry {\n\t\t\t\tout.writeObject(inFormat);\n\t\t\t\tfail(\"should throw an exception\");\n\t\t\t}\n\t\t\tcatch (TestException e) {\n\t\t\t\t// expected\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tfail(\"Exception not properly forwarded\");\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}", "signature": "void testSerializationFailure()", "full_signature": "@Test public void testSerializationFailure()", "class_method_signature": "CollectionInputFormatTest.testSerializationFailure()", "testcase": true, "constructor": false, "invocations": ["singleton", "writeObject", "fail", "fail", "printStackTrace", "fail", "getMessage"]}, "focal_class": {"identifier": "CollectionInputFormat", "superclass": "extends GenericInputFormat<T>", "interfaces": "implements NonParallelInput", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private TypeSerializer<T> serializer;", "modifier": "private", "type": "TypeSerializer<T>", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "private transient Collection<T> dataSet;", "modifier": "private transient", "type": "Collection<T>", "declarator": "dataSet", "var_name": "dataSet"}, {"original_string": "private transient Iterator<T> iterator;", "modifier": "private transient", "type": "Iterator<T>", "declarator": "iterator", "var_name": "iterator"}], "methods": [{"identifier": "CollectionInputFormat", "parameters": "(Collection<T> dataSet, TypeSerializer<T> serializer)", "modifiers": "public", "return": "", "signature": " CollectionInputFormat(Collection<T> dataSet, TypeSerializer<T> serializer)", "full_signature": "public  CollectionInputFormat(Collection<T> dataSet, TypeSerializer<T> serializer)", "class_method_signature": "CollectionInputFormat.CollectionInputFormat(Collection<T> dataSet, TypeSerializer<T> serializer)", "testcase": false, "constructor": true}, {"identifier": "reachedEnd", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean reachedEnd()", "full_signature": "@Override public boolean reachedEnd()", "class_method_signature": "CollectionInputFormat.reachedEnd()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(GenericInputSplit split)", "modifiers": "@Override public", "return": "void", "signature": "void open(GenericInputSplit split)", "full_signature": "@Override public void open(GenericInputSplit split)", "class_method_signature": "CollectionInputFormat.open(GenericInputSplit split)", "testcase": false, "constructor": false}, {"identifier": "nextRecord", "parameters": "(T record)", "modifiers": "@Override public", "return": "T", "signature": "T nextRecord(T record)", "full_signature": "@Override public T nextRecord(T record)", "class_method_signature": "CollectionInputFormat.nextRecord(T record)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream out)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream out)", "full_signature": "private void writeObject(ObjectOutputStream out)", "class_method_signature": "CollectionInputFormat.writeObject(ObjectOutputStream out)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream in)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream in)", "full_signature": "private void readObject(ObjectInputStream in)", "class_method_signature": "CollectionInputFormat.readObject(ObjectInputStream in)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CollectionInputFormat.toString()", "testcase": false, "constructor": false}, {"identifier": "checkCollection", "parameters": "(Collection<X> elements, Class<X> viewedAs)", "modifiers": "public static", "return": "void", "signature": "void checkCollection(Collection<X> elements, Class<X> viewedAs)", "full_signature": "public static void checkCollection(Collection<X> elements, Class<X> viewedAs)", "class_method_signature": "CollectionInputFormat.checkCollection(Collection<X> elements, Class<X> viewedAs)", "testcase": false, "constructor": false}], "file": "flink-java/src/main/java/org/apache/flink/api/java/io/CollectionInputFormat.java"}, "focal_method": {"identifier": "writeObject", "parameters": "(ObjectOutputStream out)", "modifiers": "private", "return": "void", "body": "private void writeObject(ObjectOutputStream out) throws IOException {\n\t\tout.defaultWriteObject();\n\t\t\n\t\tfinal int size = dataSet.size();\n\t\tout.writeInt(size);\n\t\t\n\t\tif (size > 0) {\n\t\t\tDataOutputViewStreamWrapper wrapper = new DataOutputViewStreamWrapper(out);\n\t\t\tfor (T element : dataSet){\n\t\t\t\tserializer.serialize(element, wrapper);\n\t\t\t}\n\t\t}\n\t}", "signature": "void writeObject(ObjectOutputStream out)", "full_signature": "private void writeObject(ObjectOutputStream out)", "class_method_signature": "CollectionInputFormat.writeObject(ObjectOutputStream out)", "testcase": false, "constructor": false, "invocations": ["defaultWriteObject", "size", "writeInt", "serialize"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}