{"test_class": {"identifier": "LDAPUserInfoImplTest", "superclass": "extends LDAPBaseTest", "interfaces": "", "fields": [{"original_string": "private static final User JOHN = TaskModelProvider.getFactory().newUser(\"john\");", "modifier": "private static final", "type": "User", "declarator": "JOHN = TaskModelProvider.getFactory().newUser(\"john\")", "var_name": "JOHN"}, {"original_string": "private static final User JOHN_DN = TaskModelProvider.getFactory().newUser(\"uid=john,ou=People,dc=jbpm,dc=org\");", "modifier": "private static final", "type": "User", "declarator": "JOHN_DN = TaskModelProvider.getFactory().newUser(\"uid=john,ou=People,dc=jbpm,dc=org\")", "var_name": "JOHN_DN"}, {"original_string": "private static final User MARY = TaskModelProvider.getFactory().newUser(\"mary\");", "modifier": "private static final", "type": "User", "declarator": "MARY = TaskModelProvider.getFactory().newUser(\"mary\")", "var_name": "MARY"}, {"original_string": "private static final User MARY_DN = TaskModelProvider.getFactory().newUser(\"uid=mary,ou=People,dc=jbpm,dc=org\");", "modifier": "private static final", "type": "User", "declarator": "MARY_DN = TaskModelProvider.getFactory().newUser(\"uid=mary,ou=People,dc=jbpm,dc=org\")", "var_name": "MARY_DN"}, {"original_string": "private static final User PETER = TaskModelProvider.getFactory().newUser(\"peter\");", "modifier": "private static final", "type": "User", "declarator": "PETER = TaskModelProvider.getFactory().newUser(\"peter\")", "var_name": "PETER"}, {"original_string": "private static final User MIKE = TaskModelProvider.getFactory().newUser(\"mike\");", "modifier": "private static final", "type": "User", "declarator": "MIKE = TaskModelProvider.getFactory().newUser(\"mike\")", "var_name": "MIKE"}, {"original_string": "private static final Group MANAGER = TaskModelProvider.getFactory().newGroup(\"manager\");", "modifier": "private static final", "type": "Group", "declarator": "MANAGER = TaskModelProvider.getFactory().newGroup(\"manager\")", "var_name": "MANAGER"}, {"original_string": "private static final Group MANAGER_DN = TaskModelProvider.getFactory().newGroup(\"cn=manager,ou=Roles,dc=jbpm,dc=org\");", "modifier": "private static final", "type": "Group", "declarator": "MANAGER_DN = TaskModelProvider.getFactory().newGroup(\"cn=manager,ou=Roles,dc=jbpm,dc=org\")", "var_name": "MANAGER_DN"}, {"original_string": "private static final Group USER = TaskModelProvider.getFactory().newGroup(\"user\");", "modifier": "private static final", "type": "Group", "declarator": "USER = TaskModelProvider.getFactory().newGroup(\"user\")", "var_name": "USER"}, {"original_string": "private static final Group USER_DN = TaskModelProvider.getFactory().newGroup(\"cn=user,ou=Roles,dc=jbpm,dc=org\");", "modifier": "private static final", "type": "Group", "declarator": "USER_DN = TaskModelProvider.getFactory().newGroup(\"cn=user,ou=Roles,dc=jbpm,dc=org\")", "var_name": "USER_DN"}, {"original_string": "private static final Group ANALYST = TaskModelProvider.getFactory().newGroup(\"analyst\");", "modifier": "private static final", "type": "Group", "declarator": "ANALYST = TaskModelProvider.getFactory().newGroup(\"analyst\")", "var_name": "ANALYST"}, {"original_string": "private static final Group DEVELOPER = TaskModelProvider.getFactory().newGroup(\"developer\");", "modifier": "private static final", "type": "Group", "declarator": "DEVELOPER = TaskModelProvider.getFactory().newGroup(\"developer\")", "var_name": "DEVELOPER"}, {"original_string": "private static final String JOHN_EMAIL = \"johndoe@jbpm.org\";", "modifier": "private static final", "type": "String", "declarator": "JOHN_EMAIL = \"johndoe@jbpm.org\"", "var_name": "JOHN_EMAIL"}], "file": "jbpm-human-task/jbpm-human-task-core/src/test/java/org/jbpm/services/task/identity/LDAPUserInfoImplTest.java"}, "test_case": {"identifier": "testGetEntityForEmail", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetEntityForEmail() {\n        testGetEntityForEmail(JOHN_EMAIL, JOHN.getId(), false);\n    }", "signature": "void testGetEntityForEmail()", "full_signature": "@Test public void testGetEntityForEmail()", "class_method_signature": "LDAPUserInfoImplTest.testGetEntityForEmail()", "testcase": true, "constructor": false, "invocations": ["testGetEntityForEmail", "getId"]}, "focal_class": {"identifier": "LDAPUserInfoImpl", "superclass": "extends AbstractLDAPUserGroupInfo", "interfaces": "implements UserInfo", "fields": [{"original_string": "private static final String DEFAULT_PROPERTIES_NAME = \"jbpm.user.info\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_PROPERTIES_NAME = \"jbpm.user.info\"", "var_name": "DEFAULT_PROPERTIES_NAME"}, {"original_string": "public static final String USER_CTX = \"ldap.user.ctx\";", "modifier": "public static final", "type": "String", "declarator": "USER_CTX = \"ldap.user.ctx\"", "var_name": "USER_CTX"}, {"original_string": "public static final String ROLE_CTX = \"ldap.role.ctx\";", "modifier": "public static final", "type": "String", "declarator": "ROLE_CTX = \"ldap.role.ctx\"", "var_name": "ROLE_CTX"}, {"original_string": "public static final String USER_FILTER = \"ldap.user.filter\";", "modifier": "public static final", "type": "String", "declarator": "USER_FILTER = \"ldap.user.filter\"", "var_name": "USER_FILTER"}, {"original_string": "public static final String ROLE_FILTER = \"ldap.role.filter\";", "modifier": "public static final", "type": "String", "declarator": "ROLE_FILTER = \"ldap.role.filter\"", "var_name": "ROLE_FILTER"}, {"original_string": "public static final String ROLE_MEMBERS_FILTER = \"ldap.role.members.filter\";", "modifier": "public static final", "type": "String", "declarator": "ROLE_MEMBERS_FILTER = \"ldap.role.members.filter\"", "var_name": "ROLE_MEMBERS_FILTER"}, {"original_string": "public static final String EMAIL_FILTER = \"ldap.email.filter\";", "modifier": "public static final", "type": "String", "declarator": "EMAIL_FILTER = \"ldap.email.filter\"", "var_name": "EMAIL_FILTER"}, {"original_string": "public static final String EMAIL_ATTR_ID = \"ldap.email.attr.id\";", "modifier": "public static final", "type": "String", "declarator": "EMAIL_ATTR_ID = \"ldap.email.attr.id\"", "var_name": "EMAIL_ATTR_ID"}, {"original_string": "public static final String NAME_ATTR_ID = \"ldap.name.attr.id\";", "modifier": "public static final", "type": "String", "declarator": "NAME_ATTR_ID = \"ldap.name.attr.id\"", "var_name": "NAME_ATTR_ID"}, {"original_string": "public static final String LANG_ATTR_ID = \"ldap.lang.attr.id\";", "modifier": "public static final", "type": "String", "declarator": "LANG_ATTR_ID = \"ldap.lang.attr.id\"", "var_name": "LANG_ATTR_ID"}, {"original_string": "public static final String MEMBER_ATTR_ID = \"ldap.member.attr.id\";", "modifier": "public static final", "type": "String", "declarator": "MEMBER_ATTR_ID = \"ldap.member.attr.id\"", "var_name": "MEMBER_ATTR_ID"}, {"original_string": "public static final String USER_ATTR_ID = \"ldap.user.attr.id\";", "modifier": "public static final", "type": "String", "declarator": "USER_ATTR_ID = \"ldap.user.attr.id\"", "var_name": "USER_ATTR_ID"}, {"original_string": "public static final String ROLE_ATTR_ID = \"ldap.role.attr.id\";", "modifier": "public static final", "type": "String", "declarator": "ROLE_ATTR_ID = \"ldap.role.attr.id\"", "var_name": "ROLE_ATTR_ID"}, {"original_string": "public static final String IS_ENTITY_ID_DN = \"ldap.entity.id.dn\";", "modifier": "public static final", "type": "String", "declarator": "IS_ENTITY_ID_DN = \"ldap.entity.id.dn\"", "var_name": "IS_ENTITY_ID_DN"}, {"original_string": "public static final String SEARCH_SCOPE = \"ldap.search.scope\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_SCOPE = \"ldap.search.scope\"", "var_name": "SEARCH_SCOPE"}, {"original_string": "private static final String[] REQUIRED_PROPERTIES = {USER_CTX, ROLE_CTX, USER_FILTER, ROLE_FILTER};", "modifier": "private static final", "type": "String[]", "declarator": "REQUIRED_PROPERTIES = {USER_CTX, ROLE_CTX, USER_FILTER, ROLE_FILTER}", "var_name": "REQUIRED_PROPERTIES"}, {"original_string": "private static final String DEFAULT_EMAIL_ATTR_ID = \"mail\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_EMAIL_ATTR_ID = \"mail\"", "var_name": "DEFAULT_EMAIL_ATTR_ID"}, {"original_string": "private static final String DEFAULT_ENTITY_ID_DN = \"false\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_ENTITY_ID_DN = \"false\"", "var_name": "DEFAULT_ENTITY_ID_DN"}, {"original_string": "private static final String DEFAULT_LANG_ATTR_ID = \"locale\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_LANG_ATTR_ID = \"locale\"", "var_name": "DEFAULT_LANG_ATTR_ID"}, {"original_string": "private static final String DEFAULT_MEMBER_ATTR_ID = \"member\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_MEMBER_ATTR_ID = \"member\"", "var_name": "DEFAULT_MEMBER_ATTR_ID"}, {"original_string": "private static final String DEFAULT_NAME_ATTR_ID = \"displayName\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_NAME_ATTR_ID = \"displayName\"", "var_name": "DEFAULT_NAME_ATTR_ID"}, {"original_string": "private static final String DEFAULT_LOCALE = \"en-UK\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_LOCALE = \"en-UK\"", "var_name": "DEFAULT_LOCALE"}], "methods": [{"identifier": "LDAPUserInfoImpl", "parameters": "(boolean activate)", "modifiers": "public", "return": "", "signature": " LDAPUserInfoImpl(boolean activate)", "full_signature": "public  LDAPUserInfoImpl(boolean activate)", "class_method_signature": "LDAPUserInfoImpl.LDAPUserInfoImpl(boolean activate)", "testcase": false, "constructor": true}, {"identifier": "LDAPUserInfoImpl", "parameters": "(Properties config)", "modifiers": "public", "return": "", "signature": " LDAPUserInfoImpl(Properties config)", "full_signature": "public  LDAPUserInfoImpl(Properties config)", "class_method_signature": "LDAPUserInfoImpl.LDAPUserInfoImpl(Properties config)", "testcase": false, "constructor": true}, {"identifier": "getDisplayName", "parameters": "(OrganizationalEntity entity)", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayName(OrganizationalEntity entity)", "full_signature": "@Override public String getDisplayName(OrganizationalEntity entity)", "class_method_signature": "LDAPUserInfoImpl.getDisplayName(OrganizationalEntity entity)", "testcase": false, "constructor": false}, {"identifier": "getMembersForGroup", "parameters": "(Group group)", "modifiers": "@Override public", "return": "Iterator<OrganizationalEntity>", "signature": "Iterator<OrganizationalEntity> getMembersForGroup(Group group)", "full_signature": "@Override public Iterator<OrganizationalEntity> getMembersForGroup(Group group)", "class_method_signature": "LDAPUserInfoImpl.getMembersForGroup(Group group)", "testcase": false, "constructor": false}, {"identifier": "hasEmail", "parameters": "(Group group)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasEmail(Group group)", "full_signature": "@Override public boolean hasEmail(Group group)", "class_method_signature": "LDAPUserInfoImpl.hasEmail(Group group)", "testcase": false, "constructor": false}, {"identifier": "getEmailForEntity", "parameters": "(OrganizationalEntity entity)", "modifiers": "@Override public", "return": "String", "signature": "String getEmailForEntity(OrganizationalEntity entity)", "full_signature": "@Override public String getEmailForEntity(OrganizationalEntity entity)", "class_method_signature": "LDAPUserInfoImpl.getEmailForEntity(OrganizationalEntity entity)", "testcase": false, "constructor": false}, {"identifier": "getLanguageForEntity", "parameters": "(OrganizationalEntity entity)", "modifiers": "@Override public", "return": "String", "signature": "String getLanguageForEntity(OrganizationalEntity entity)", "full_signature": "@Override public String getLanguageForEntity(OrganizationalEntity entity)", "class_method_signature": "LDAPUserInfoImpl.getLanguageForEntity(OrganizationalEntity entity)", "testcase": false, "constructor": false}, {"identifier": "getAttributeValueForEntity", "parameters": "(OrganizationalEntity entity, String attributeName, String defaultValue)", "modifiers": "private", "return": "String", "signature": "String getAttributeValueForEntity(OrganizationalEntity entity, String attributeName, String defaultValue)", "full_signature": "private String getAttributeValueForEntity(OrganizationalEntity entity, String attributeName, String defaultValue)", "class_method_signature": "LDAPUserInfoImpl.getAttributeValueForEntity(OrganizationalEntity entity, String attributeName, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getConfigPropertyByEntity", "parameters": "(OrganizationalEntity entity, String userKey, String roleKey)", "modifiers": "private", "return": "String", "signature": "String getConfigPropertyByEntity(OrganizationalEntity entity, String userKey, String roleKey)", "full_signature": "private String getConfigPropertyByEntity(OrganizationalEntity entity, String userKey, String roleKey)", "class_method_signature": "LDAPUserInfoImpl.getConfigPropertyByEntity(OrganizationalEntity entity, String userKey, String roleKey)", "testcase": false, "constructor": false}, {"identifier": "extractEntityId", "parameters": "(OrganizationalEntity entity)", "modifiers": "private", "return": "String", "signature": "String extractEntityId(OrganizationalEntity entity)", "full_signature": "private String extractEntityId(OrganizationalEntity entity)", "class_method_signature": "LDAPUserInfoImpl.extractEntityId(OrganizationalEntity entity)", "testcase": false, "constructor": false}, {"identifier": "extractAttribute", "parameters": "(String entityId, String entityAttrId)", "modifiers": "private", "return": "String", "signature": "String extractAttribute(String entityId, String entityAttrId)", "full_signature": "private String extractAttribute(String entityId, String entityAttrId)", "class_method_signature": "LDAPUserInfoImpl.extractAttribute(String entityId, String entityAttrId)", "testcase": false, "constructor": false}, {"identifier": "isEntityIdDn", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isEntityIdDn()", "full_signature": "private boolean isEntityIdDn()", "class_method_signature": "LDAPUserInfoImpl.isEntityIdDn()", "testcase": false, "constructor": false}, {"identifier": "getEntityForEmail", "parameters": "(String email)", "modifiers": "@Override public", "return": "String", "signature": "String getEntityForEmail(String email)", "full_signature": "@Override public String getEntityForEmail(String email)", "class_method_signature": "LDAPUserInfoImpl.getEntityForEmail(String email)", "testcase": false, "constructor": false}], "file": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/identity/LDAPUserInfoImpl.java"}, "focal_method": {"identifier": "getEntityForEmail", "parameters": "(String email)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getEntityForEmail(String email) {        \n        String context = getConfigProperty(USER_CTX);\n        String filter = getConfigProperty(EMAIL_FILTER);\n        String attributeId = getConfigProperty(USER_ATTR_ID, DEFAULT_USER_ATTR_ID);\n        LdapSearcher searcher = ldapSearcher.search(context, filter, email);\n\n        if (searcher.getSearchResults().isEmpty()) {\n            return null;\n        }\n        \n        if (isEntityIdDn()) {\n            return searcher.getSingleSearchResult().getNameInNamespace();\n        }\n        \n        return searcher.getSingleAttributeResult(attributeId);\n    }", "signature": "String getEntityForEmail(String email)", "full_signature": "@Override public String getEntityForEmail(String email)", "class_method_signature": "LDAPUserInfoImpl.getEntityForEmail(String email)", "testcase": false, "constructor": false, "invocations": ["getConfigProperty", "getConfigProperty", "getConfigProperty", "search", "isEmpty", "getSearchResults", "isEntityIdDn", "getNameInNamespace", "getSingleSearchResult", "getSingleAttributeResult"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}