{"test_class": {"identifier": "OGNLAttributeEvaluatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OGNLAttributeEvaluator evaluator;", "modifier": "private", "type": "OGNLAttributeEvaluator", "declarator": "evaluator", "var_name": "evaluator"}, {"original_string": "private Request request;", "modifier": "private", "type": "Request", "declarator": "request", "var_name": "request"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}], "file": "tiles-ognl/src/test/java/org/apache/tiles/ognl/OGNLAttributeEvaluatorTest.java"}, "test_case": {"identifier": "testEvaluateString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEvaluateString() {\n        String expression = \"requestScope.object1\";\n        assertEquals(\"The value is not correct\", \"value\", evaluator.evaluate(\n                expression, request));\n        expression = \"sessionScope.object2\";\n        assertEquals(\"The value is not correct\", new Integer(1), evaluator\n                .evaluate(expression, request));\n        expression = \"applicationScope.object3\";\n        assertEquals(\"The value is not correct\", new Float(2.0), evaluator\n                .evaluate(expression, request));\n        expression = \"object1\";\n        assertEquals(\"The value is not correct\", \"value\", evaluator.evaluate(\n                expression, request));\n        expression = \"object2\";\n        assertEquals(\"The value is not correct\", new Integer(1), evaluator\n                .evaluate(expression, request));\n        expression = \"object3\";\n        assertEquals(\"The value is not correct\", new Float(2.0), evaluator\n                .evaluate(expression, request));\n        expression = \"paulaBean.paula\";\n        assertEquals(\"The value is not correct\", \"Brillant\", evaluator\n                .evaluate(expression, request));\n        expression = \"'String literal'\";\n        assertEquals(\"The value is not correct\", \"String literal\", evaluator\n                .evaluate(expression, request));\n    }", "signature": "void testEvaluateString()", "full_signature": "@Test public void testEvaluateString()", "class_method_signature": "OGNLAttributeEvaluatorTest.testEvaluateString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "evaluate", "assertEquals", "evaluate", "assertEquals", "evaluate", "assertEquals", "evaluate", "assertEquals", "evaluate", "assertEquals", "evaluate", "assertEquals", "evaluate", "assertEquals", "evaluate"]}, "focal_class": {"identifier": "OGNLAttributeEvaluator", "superclass": "extends AbstractAttributeEvaluator", "interfaces": "", "fields": [], "methods": [{"identifier": "evaluate", "parameters": "(String expression, Request request)", "modifiers": "public", "return": "Object", "signature": "Object evaluate(String expression, Request request)", "full_signature": "public Object evaluate(String expression, Request request)", "class_method_signature": "OGNLAttributeEvaluator.evaluate(String expression, Request request)", "testcase": false, "constructor": false}], "file": "tiles-ognl/src/main/java/org/apache/tiles/ognl/OGNLAttributeEvaluator.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(String expression, Request request)", "modifiers": "public", "return": "Object", "body": "public Object evaluate(String expression, Request request) {\n        if (expression == null) {\n            throw new IllegalArgumentException(\"The expression parameter cannot be null\");\n        }\n        try {\n            return Ognl.getValue(expression, request);\n        } catch (OgnlException e) {\n            throw new EvaluationException(\"Cannot evaluate OGNL expression '\"\n                    + expression + \"'\", e);\n        }\n    }", "signature": "Object evaluate(String expression, Request request)", "full_signature": "public Object evaluate(String expression, Request request)", "class_method_signature": "OGNLAttributeEvaluator.evaluate(String expression, Request request)", "testcase": false, "constructor": false, "invocations": ["getValue"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}