{"test_class": {"identifier": "LocalesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static List<Locale> COMMON_LOCALES = Arrays.asList(Locale.CANADA, Locale.CANADA_FRENCH, Locale.CHINA, Locale.ENGLISH, Locale.GERMANY, Locale.FRANCE);", "modifier": "private static", "type": "List<Locale>", "declarator": "COMMON_LOCALES = Arrays.asList(Locale.CANADA, Locale.CANADA_FRENCH, Locale.CHINA, Locale.ENGLISH, Locale.GERMANY, Locale.FRANCE)", "var_name": "COMMON_LOCALES"}], "file": "handlebars/src/test/java/com/github/jknack/handlebars/internal/LocalesTest.java"}, "test_case": {"identifier": "testUnderscore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testUnderscore() {\n    for (Locale l : COMMON_LOCALES) {\n      // l.toString() returns format de_DE\n      assertEquals(l, Locales.fromString(l.toString()));\n    }\n  }", "signature": "void testUnderscore()", "full_signature": "@Test public void testUnderscore()", "class_method_signature": "LocalesTest.testUnderscore()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "fromString", "toString"]}, "focal_class": {"identifier": "Locales", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Locales", "parameters": "()", "modifiers": "private", "return": "", "signature": " Locales()", "full_signature": "private  Locales()", "class_method_signature": "Locales.Locales()", "testcase": false, "constructor": true}, {"identifier": "fromString", "parameters": "(final String string)", "modifiers": "public static", "return": "Locale", "signature": "Locale fromString(final String string)", "full_signature": "public static Locale fromString(final String string)", "class_method_signature": "Locales.fromString(final String string)", "testcase": false, "constructor": false}], "file": "handlebars/src/main/java/com/github/jknack/handlebars/internal/Locales.java"}, "focal_method": {"identifier": "fromString", "parameters": "(final String string)", "modifiers": "public static", "return": "Locale", "body": "public static Locale fromString(final String string) {\n    if (string == null) {\n      return null;\n    } else {\n      try {\n        /*\n         *  prefer https://en.wikipedia.org/wiki/IETF_language_tag\n         *  (only Locale.Builder throws exception for illegal format)\n         */\n        return new Locale.Builder().setLanguageTag(string).build();\n      } catch (final IllformedLocaleException ex) {\n        // use fallback\n        return LocaleUtils.toLocale(string);\n      }\n    }\n  }", "signature": "Locale fromString(final String string)", "full_signature": "public static Locale fromString(final String string)", "class_method_signature": "Locales.fromString(final String string)", "testcase": false, "constructor": false, "invocations": ["build", "setLanguageTag", "toLocale"]}, "repository": {"repo_id": 4459604, "url": "https://github.com/jknack/handlebars.java", "stars": 1107, "created": "5/27/2012 3:22:22 AM +00:00", "updates": "2020-01-24T06:58:31+00:00", "fork": "False", "license": "licensed"}}