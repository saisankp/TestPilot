{"test_class": {"identifier": "UsersTemplateTest", "superclass": "extends AbstractTemplateTest", "interfaces": "", "fields": [{"original_string": "protected UsersTemplate usersTemplate;", "modifier": "protected", "type": "UsersTemplate", "declarator": "usersTemplate", "var_name": "usersTemplate"}], "file": "misc/github-client-parent/github-client-spring/src/test/java/org/zalando/github/spring/UsersTemplateTest.java"}, "test_case": {"identifier": "addEmails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void addEmails() throws Exception {\n\t\tmockServer.expect(requestTo(\"https://api.github.com/user/emails\")).andExpect(method(HttpMethod.POST))\n\t\t\t\t// .andExpect(header(\"Authorization\", \"Bearer ACCESS_TOKEN\"))\n\t\t\t\t.andRespond(\n\t\t\t\t\t\twithSuccess(new ClassPathResource(\"addEmails.json\", getClass()), MediaType.APPLICATION_JSON));\n\n\t\tList<Email> emailList = usersTemplate.addEmails(\"octocat@github.com\", \"support@github.com\");\n\n\t\tAssertions.assertThat(emailList).isNotNull();\n\t\tAssertions.assertThat(emailList.size()).isEqualTo(2);\n\t}", "signature": "void addEmails()", "full_signature": "@Test public void addEmails()", "class_method_signature": "UsersTemplateTest.addEmails()", "testcase": true, "constructor": false, "invocations": ["andRespond", "andExpect", "expect", "requestTo", "method", "withSuccess", "getClass", "addEmails", "isNotNull", "assertThat", "isEqualTo", "assertThat", "size"]}, "focal_class": {"identifier": "UsersTemplate", "superclass": "extends AbstractGithubTemplate", "interfaces": "implements UsersOperations", "fields": [{"original_string": "public static final String USER_EMAILS_PATH = \"/user/emails\";", "modifier": "public static final", "type": "String", "declarator": "USER_EMAILS_PATH = \"/user/emails\"", "var_name": "USER_EMAILS_PATH"}, {"original_string": "private final ParameterizedTypeReference<List<Email>> emailListTypeRef = new ParameterizedTypeReference<List<Email>>() {\n\t};", "modifier": "private final", "type": "ParameterizedTypeReference<List<Email>>", "declarator": "emailListTypeRef = new ParameterizedTypeReference<List<Email>>() {\n\t}", "var_name": "emailListTypeRef"}, {"original_string": "private final ParameterizedTypeReference<List<ExtPubKey>> extPubKeyListTypeRef = new ParameterizedTypeReference<List<ExtPubKey>>() {\n\t};", "modifier": "private final", "type": "ParameterizedTypeReference<List<ExtPubKey>>", "declarator": "extPubKeyListTypeRef = new ParameterizedTypeReference<List<ExtPubKey>>() {\n\t}", "var_name": "extPubKeyListTypeRef"}, {"original_string": "private final ParameterizedTypeReference<List<PubKey>> pubKeyListTypeRef = new ParameterizedTypeReference<List<PubKey>>() {\n\t};", "modifier": "private final", "type": "ParameterizedTypeReference<List<PubKey>>", "declarator": "pubKeyListTypeRef = new ParameterizedTypeReference<List<PubKey>>() {\n\t}", "var_name": "pubKeyListTypeRef"}], "methods": [{"identifier": "UsersTemplate", "parameters": "(RestOperations restOperations)", "modifiers": "public", "return": "", "signature": " UsersTemplate(RestOperations restOperations)", "full_signature": "public  UsersTemplate(RestOperations restOperations)", "class_method_signature": "UsersTemplate.UsersTemplate(RestOperations restOperations)", "testcase": false, "constructor": true}, {"identifier": "listEmails", "parameters": "()", "modifiers": "@Override public", "return": "List<Email>", "signature": "List<Email> listEmails()", "full_signature": "@Override public List<Email> listEmails()", "class_method_signature": "UsersTemplate.listEmails()", "testcase": false, "constructor": false}, {"identifier": "addEmails", "parameters": "(String... emails)", "modifiers": "@Override public", "return": "List<Email>", "signature": "List<Email> addEmails(String... emails)", "full_signature": "@Override public List<Email> addEmails(String... emails)", "class_method_signature": "UsersTemplate.addEmails(String... emails)", "testcase": false, "constructor": false}, {"identifier": "addEmails", "parameters": "(List<String> emails)", "modifiers": "@Override public", "return": "List<Email>", "signature": "List<Email> addEmails(List<String> emails)", "full_signature": "@Override public List<Email> addEmails(List<String> emails)", "class_method_signature": "UsersTemplate.addEmails(List<String> emails)", "testcase": false, "constructor": false}, {"identifier": "deleteEmails", "parameters": "(String... emails)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEmails(String... emails)", "full_signature": "@Override public void deleteEmails(String... emails)", "class_method_signature": "UsersTemplate.deleteEmails(String... emails)", "testcase": false, "constructor": false}, {"identifier": "deleteEmails", "parameters": "(List<String> emails)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEmails(List<String> emails)", "full_signature": "@Override public void deleteEmails(List<String> emails)", "class_method_signature": "UsersTemplate.deleteEmails(List<String> emails)", "testcase": false, "constructor": false}, {"identifier": "listPublicKeys", "parameters": "(String username)", "modifiers": "@Override public", "return": "List<PubKey>", "signature": "List<PubKey> listPublicKeys(String username)", "full_signature": "@Override public List<PubKey> listPublicKeys(String username)", "class_method_signature": "UsersTemplate.listPublicKeys(String username)", "testcase": false, "constructor": false}, {"identifier": "listPublicKeys", "parameters": "()", "modifiers": "@Override public", "return": "List<ExtPubKey>", "signature": "List<ExtPubKey> listPublicKeys()", "full_signature": "@Override public List<ExtPubKey> listPublicKeys()", "class_method_signature": "UsersTemplate.listPublicKeys()", "testcase": false, "constructor": false}, {"identifier": "getPublicKey", "parameters": "(long id)", "modifiers": "@Override public", "return": "ExtPubKey", "signature": "ExtPubKey getPublicKey(long id)", "full_signature": "@Override public ExtPubKey getPublicKey(long id)", "class_method_signature": "UsersTemplate.getPublicKey(long id)", "testcase": false, "constructor": false}, {"identifier": "createPublicKey", "parameters": "(PubKeyInput pubKey)", "modifiers": "@Override public", "return": "ExtPubKey", "signature": "ExtPubKey createPublicKey(PubKeyInput pubKey)", "full_signature": "@Override public ExtPubKey createPublicKey(PubKeyInput pubKey)", "class_method_signature": "UsersTemplate.createPublicKey(PubKeyInput pubKey)", "testcase": false, "constructor": false}, {"identifier": "deletePublicKey", "parameters": "(long id)", "modifiers": "@Override public", "return": "void", "signature": "void deletePublicKey(long id)", "full_signature": "@Override public void deletePublicKey(long id)", "class_method_signature": "UsersTemplate.deletePublicKey(long id)", "testcase": false, "constructor": false}], "file": "misc/github-client-parent/github-client-spring/src/main/java/org/zalando/github/spring/UsersTemplate.java"}, "focal_method": {"identifier": "addEmails", "parameters": "(String... emails)", "modifiers": "@Override public", "return": "List<Email>", "body": "@Override\n\tpublic List<Email> addEmails(String... emails) {\n\t\treturn addEmails(Arrays.asList(emails));\n\t}", "signature": "List<Email> addEmails(String... emails)", "full_signature": "@Override public List<Email> addEmails(String... emails)", "class_method_signature": "UsersTemplate.addEmails(String... emails)", "testcase": false, "constructor": false, "invocations": ["addEmails", "asList"]}, "repository": {"repo_id": 32913234, "url": "https://github.com/zalando-stups/booties", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 35, "size": 330, "license": "licensed"}}