{"test_class": {"identifier": "TrustedUserAuthenticationFilterTest", "superclass": "extends AbstractAppTest", "interfaces": "", "fields": [], "file": "herd-code/herd-app/src/test/java/org/finra/herd/app/security/TrustedUserAuthenticationFilterTest.java"}, "test_case": {"identifier": "testTrustedUserFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTrustedUserFilter() throws Exception\n    {\n        // Override configuration.\n        Map<String, Object> overrideMap = new HashMap<>();\n        overrideMap.put(ConfigurationValue.SECURITY_ENABLED_SPEL_EXPRESSION.getKey(), \"false\");\n        modifyPropertySourceInEnvironment(overrideMap);\n\n        try\n        {\n            // Invalidate user session if exists.\n            invalidateApplicationUser(null);\n\n            trustedUserAuthenticationFilter.init(new MockFilterConfig());\n            trustedUserAuthenticationFilter.doFilter(new MockHttpServletRequest(), new MockHttpServletResponse(), new MockFilterChain());\n\n            validateTrustedApplicationUser();\n\n            // retry with same request.\n            trustedUserAuthenticationFilter.doFilter(new MockHttpServletRequest(), new MockHttpServletResponse(), new MockFilterChain());\n\n            validateTrustedApplicationUser();\n        }\n        finally\n        {\n            // Restore the property sources so we don't affect other tests.\n            restorePropertySourceInEnvironment();\n        }\n    }", "signature": "void testTrustedUserFilter()", "full_signature": "@Test public void testTrustedUserFilter()", "class_method_signature": "TrustedUserAuthenticationFilterTest.testTrustedUserFilter()", "testcase": true, "constructor": false, "invocations": ["put", "getKey", "modifyPropertySourceInEnvironment", "invalidateApplicationUser", "init", "doFilter", "validateTrustedApplicationUser", "doFilter", "validateTrustedApplicationUser", "restorePropertySourceInEnvironment"]}, "focal_class": {"identifier": "TrustedUserAuthenticationFilter", "superclass": "extends GenericFilterBean", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private SecurityHelper securityHelper;", "modifier": "@Autowired\n    private", "type": "SecurityHelper", "declarator": "securityHelper", "var_name": "securityHelper"}, {"original_string": "private AuthenticationManager authenticationManager = null;", "modifier": "private", "type": "AuthenticationManager", "declarator": "authenticationManager = null", "var_name": "authenticationManager"}, {"original_string": "private ApplicationUserBuilder applicationUserBuilder;", "modifier": "private", "type": "ApplicationUserBuilder", "declarator": "applicationUserBuilder", "var_name": "applicationUserBuilder"}, {"original_string": "private AuthenticationDetailsSource<HttpServletRequest, WebAuthenticationDetails> authenticationDetailsSource = new WebAuthenticationDetailsSource();", "modifier": "private", "type": "AuthenticationDetailsSource<HttpServletRequest, WebAuthenticationDetails>", "declarator": "authenticationDetailsSource = new WebAuthenticationDetailsSource()", "var_name": "authenticationDetailsSource"}], "methods": [{"identifier": "TrustedUserAuthenticationFilter", "parameters": "(AuthenticationManager authenticationManager, ApplicationUserBuilder applicationUserBuilder)", "modifiers": "public", "return": "", "signature": " TrustedUserAuthenticationFilter(AuthenticationManager authenticationManager, ApplicationUserBuilder applicationUserBuilder)", "full_signature": "public  TrustedUserAuthenticationFilter(AuthenticationManager authenticationManager, ApplicationUserBuilder applicationUserBuilder)", "class_method_signature": "TrustedUserAuthenticationFilter.TrustedUserAuthenticationFilter(AuthenticationManager authenticationManager, ApplicationUserBuilder applicationUserBuilder)", "testcase": false, "constructor": true}, {"identifier": "doFilter", "parameters": "(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)", "modifiers": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The ServletRequest is cast to an HttpServletRequest which is always the case since all requests use the HTTP protocol.\") public", "return": "void", "signature": "void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)", "full_signature": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The ServletRequest is cast to an HttpServletRequest which is always the case since all requests use the HTTP protocol.\") public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)", "class_method_signature": "TrustedUserAuthenticationFilter.doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)", "testcase": false, "constructor": false}, {"identifier": "doHttpFilter", "parameters": "(HttpServletRequest request, HttpServletResponse response, FilterChain chain)", "modifiers": "public", "return": "void", "signature": "void doHttpFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain)", "full_signature": "public void doHttpFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain)", "class_method_signature": "TrustedUserAuthenticationFilter.doHttpFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain)", "testcase": false, "constructor": false}], "file": "herd-code/herd-app/src/main/java/org/finra/herd/app/security/TrustedUserAuthenticationFilter.java"}, "focal_method": {"identifier": "doFilter", "parameters": "(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)", "modifiers": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The ServletRequest is cast to an HttpServletRequest which is always the case since all requests use the HTTP protocol.\") public", "return": "void", "body": "@Override\n    @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\",\n        justification = \"The ServletRequest is cast to an HttpServletRequest which is always the case since all requests use the HTTP protocol.\")\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException\n    {\n        doHttpFilter((HttpServletRequest) servletRequest, (HttpServletResponse) servletResponse, filterChain);\n    }", "signature": "void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)", "full_signature": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The ServletRequest is cast to an HttpServletRequest which is always the case since all requests use the HTTP protocol.\") public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)", "class_method_signature": "TrustedUserAuthenticationFilter.doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)", "testcase": false, "constructor": false, "invocations": ["doHttpFilter"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}