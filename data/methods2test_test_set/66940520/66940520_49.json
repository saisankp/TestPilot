{"test_class": {"identifier": "ProgramObjectBundleHookTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ProgramObjectBundleHook subject;", "modifier": "private", "type": "ProgramObjectBundleHook", "declarator": "subject", "var_name": "subject"}, {"original_string": "@Mock\n    private ProgramInstanceService programInstanceService;", "modifier": "@Mock\n    private", "type": "ProgramInstanceService", "declarator": "programInstanceService", "var_name": "programInstanceService"}, {"original_string": "@Mock\n    private ProgramService programService;", "modifier": "@Mock\n    private", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "@Mock\n    private ProgramStageService programStageService;", "modifier": "@Mock\n    private", "type": "ProgramStageService", "declarator": "programStageService", "var_name": "programStageService"}, {"original_string": "@Mock\n    private AclService aclService;", "modifier": "@Mock\n    private", "type": "AclService", "declarator": "aclService", "var_name": "aclService"}, {"original_string": "@Mock\n    private SessionFactory sessionFactory;", "modifier": "@Mock\n    private", "type": "SessionFactory", "declarator": "sessionFactory", "var_name": "sessionFactory"}, {"original_string": "@Rule\n    public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}, {"original_string": "private Program programA;", "modifier": "private", "type": "Program", "declarator": "programA", "var_name": "programA"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/metadata/objectbundle/hooks/ProgramObjectBundleHookTest.java"}, "test_case": {"identifier": "verifyValidationIsSkippedWhenObjectIsTransient", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyValidationIsSkippedWhenObjectIsTransient()\n    {\n        Program transientObj = createProgram( 'A' );\n        subject.validate( transientObj, null );\n\n        verifyNoInteractions( programInstanceService );\n    }", "signature": "void verifyValidationIsSkippedWhenObjectIsTransient()", "full_signature": "@Test public void verifyValidationIsSkippedWhenObjectIsTransient()", "class_method_signature": "ProgramObjectBundleHookTest.verifyValidationIsSkippedWhenObjectIsTransient()", "testcase": true, "constructor": false, "invocations": ["createProgram", "validate", "verifyNoInteractions"]}, "focal_class": {"identifier": "ProgramObjectBundleHook", "superclass": "extends\n    AbstractObjectBundleHook", "interfaces": "", "fields": [{"original_string": "private final ProgramInstanceService programInstanceService;", "modifier": "private final", "type": "ProgramInstanceService", "declarator": "programInstanceService", "var_name": "programInstanceService"}, {"original_string": "private final ProgramService programService;", "modifier": "private final", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "private final ProgramStageService programStageService;", "modifier": "private final", "type": "ProgramStageService", "declarator": "programStageService", "var_name": "programStageService"}, {"original_string": "private final AclService aclService;", "modifier": "private final", "type": "AclService", "declarator": "aclService", "var_name": "aclService"}], "methods": [{"identifier": "ProgramObjectBundleHook", "parameters": "( ProgramInstanceService programInstanceService, ProgramService programService,\n        ProgramStageService programStageService, AclService aclService )", "modifiers": "public", "return": "", "signature": " ProgramObjectBundleHook( ProgramInstanceService programInstanceService, ProgramService programService,\n        ProgramStageService programStageService, AclService aclService )", "full_signature": "public  ProgramObjectBundleHook( ProgramInstanceService programInstanceService, ProgramService programService,\n        ProgramStageService programStageService, AclService aclService )", "class_method_signature": "ProgramObjectBundleHook.ProgramObjectBundleHook( ProgramInstanceService programInstanceService, ProgramService programService,\n        ProgramStageService programStageService, AclService aclService )", "testcase": false, "constructor": true}, {"identifier": "postCreate", "parameters": "( IdentifiableObject object, ObjectBundle bundle )", "modifiers": "@Override public", "return": "void", "signature": "void postCreate( IdentifiableObject object, ObjectBundle bundle )", "full_signature": "@Override public void postCreate( IdentifiableObject object, ObjectBundle bundle )", "class_method_signature": "ProgramObjectBundleHook.postCreate( IdentifiableObject object, ObjectBundle bundle )", "testcase": false, "constructor": false}, {"identifier": "postUpdate", "parameters": "( IdentifiableObject object, ObjectBundle bundle )", "modifiers": "@Override public", "return": "void", "signature": "void postUpdate( IdentifiableObject object, ObjectBundle bundle )", "full_signature": "@Override public void postUpdate( IdentifiableObject object, ObjectBundle bundle )", "class_method_signature": "ProgramObjectBundleHook.postUpdate( IdentifiableObject object, ObjectBundle bundle )", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "( T object, ObjectBundle bundle )", "modifiers": "@Override public", "return": "List<ErrorReport>", "signature": "List<ErrorReport> validate( T object, ObjectBundle bundle )", "full_signature": "@Override public List<ErrorReport> validate( T object, ObjectBundle bundle )", "class_method_signature": "ProgramObjectBundleHook.validate( T object, ObjectBundle bundle )", "testcase": false, "constructor": false}, {"identifier": "syncSharingForEventProgram", "parameters": "( Program program )", "modifiers": "private", "return": "void", "signature": "void syncSharingForEventProgram( Program program )", "full_signature": "private void syncSharingForEventProgram( Program program )", "class_method_signature": "ProgramObjectBundleHook.syncSharingForEventProgram( Program program )", "testcase": false, "constructor": false}, {"identifier": "updateProgramStage", "parameters": "( Program program )", "modifiers": "private", "return": "void", "signature": "void updateProgramStage( Program program )", "full_signature": "private void updateProgramStage( Program program )", "class_method_signature": "ProgramObjectBundleHook.updateProgramStage( Program program )", "testcase": false, "constructor": false}, {"identifier": "addProgramInstance", "parameters": "( Program program )", "modifiers": "private", "return": "void", "signature": "void addProgramInstance( Program program )", "full_signature": "private void addProgramInstance( Program program )", "class_method_signature": "ProgramObjectBundleHook.addProgramInstance( Program program )", "testcase": false, "constructor": false}, {"identifier": "getProgramInstancesCount", "parameters": "( Program program )", "modifiers": "private", "return": "int", "signature": "int getProgramInstancesCount( Program program )", "full_signature": "private int getProgramInstancesCount( Program program )", "class_method_signature": "ProgramObjectBundleHook.getProgramInstancesCount( Program program )", "testcase": false, "constructor": false}, {"identifier": "isProgram", "parameters": "( Object object )", "modifiers": "private", "return": "boolean", "signature": "boolean isProgram( Object object )", "full_signature": "private boolean isProgram( Object object )", "class_method_signature": "ProgramObjectBundleHook.isProgram( Object object )", "testcase": false, "constructor": false}, {"identifier": "validateAttributeSecurity", "parameters": "( Program program, ObjectBundle bundle )", "modifiers": "private", "return": "List<ErrorReport>", "signature": "List<ErrorReport> validateAttributeSecurity( Program program, ObjectBundle bundle )", "full_signature": "private List<ErrorReport> validateAttributeSecurity( Program program, ObjectBundle bundle )", "class_method_signature": "ProgramObjectBundleHook.validateAttributeSecurity( Program program, ObjectBundle bundle )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/metadata/objectbundle/hooks/ProgramObjectBundleHook.java"}, "focal_method": {"identifier": "validate", "parameters": "( T object, ObjectBundle bundle )", "modifiers": "@Override public", "return": "List<ErrorReport>", "body": "@Override\n    public <T extends IdentifiableObject> List<ErrorReport> validate( T object, ObjectBundle bundle )\n    {\n        List<ErrorReport> errors = new ArrayList<>();\n\n        if ( !isProgram( object ) )\n        {\n            return errors;\n        }\n\n        Program program = (Program) object;\n\n        if ( program.getId() != 0 && getProgramInstancesCount( program ) > 1 )\n        {\n            errors.add( new ErrorReport( Program.class, ErrorCode.E6000, program.getName() ) );\n        }\n\n        errors.addAll( validateAttributeSecurity( program, bundle ) );\n\n        return errors;\n    }", "signature": "List<ErrorReport> validate( T object, ObjectBundle bundle )", "full_signature": "@Override public List<ErrorReport> validate( T object, ObjectBundle bundle )", "class_method_signature": "ProgramObjectBundleHook.validate( T object, ObjectBundle bundle )", "testcase": false, "constructor": false, "invocations": ["isProgram", "getId", "getProgramInstancesCount", "add", "getName", "addAll", "validateAttributeSecurity"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}