{"test_class": {"identifier": "UpdateOperationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String USER_DEFINED_COLLECTION_NAME_1 = \"some_collection_1\";", "modifier": "private static final", "type": "String", "declarator": "USER_DEFINED_COLLECTION_NAME_1 = \"some_collection_1\"", "var_name": "USER_DEFINED_COLLECTION_NAME_1"}, {"original_string": "private static final String USER_DEFINED_COLLECTION_NAME_2 = \"some_collection_2\";", "modifier": "private static final", "type": "String", "declarator": "USER_DEFINED_COLLECTION_NAME_2 = \"some_collection_2\"", "var_name": "USER_DEFINED_COLLECTION_NAME_2"}, {"original_string": "private static final Document DOCUMENT_1 = new Document().append(\"_id\", \"id1\").append(\"key1\", \"val1\");", "modifier": "private static final", "type": "Document", "declarator": "DOCUMENT_1 = new Document().append(\"_id\", \"id1\").append(\"key1\", \"val1\")", "var_name": "DOCUMENT_1"}, {"original_string": "private static final Document DOCUMENT_2 = new Document().append(\"_id\", \"id2\").append(\"key2\", \"val2\");", "modifier": "private static final", "type": "Document", "declarator": "DOCUMENT_2 = new Document().append(\"_id\", \"id2\").append(\"key2\", \"val2\")", "var_name": "DOCUMENT_2"}, {"original_string": "@Mock\n    private MongoDatabase connection;", "modifier": "@Mock\n    private", "type": "MongoDatabase", "declarator": "connection", "var_name": "connection"}, {"original_string": "@Mock\n    private MongoCollection<Document> collection;", "modifier": "@Mock\n    private", "type": "MongoCollection<Document>", "declarator": "collection", "var_name": "collection"}, {"original_string": "@Mock\n    private UpdateResult result;", "modifier": "@Mock\n    private", "type": "UpdateResult", "declarator": "result", "var_name": "result"}, {"original_string": "private UpdateOperation operation = new UpdateOperation();", "modifier": "private", "type": "UpdateOperation", "declarator": "operation = new UpdateOperation()", "var_name": "operation"}], "file": "mongodb/src/test/java/eu/drus/jpa/unit/mongodb/operation/UpdateOperationTest.java"}, "test_case": {"identifier": "testOperationExecution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOperationExecution() {\n        // GIVEN\n        final Document data = new Document().append(USER_DEFINED_COLLECTION_NAME_2, Arrays.asList(DOCUMENT_1))\n                .append(USER_DEFINED_COLLECTION_NAME_1, Arrays.asList(DOCUMENT_2));\n\n        // WHEN\n        operation.execute(connection, data);\n\n        // THEN\n        final ArgumentCaptor<Document> documentCaptor = ArgumentCaptor.forClass(Document.class);\n        verify(collection, times(2)).replaceOne(any(Bson.class), documentCaptor.capture());\n\n        final List<Document> capturedDocuments = documentCaptor.getAllValues();\n        assertThat(capturedDocuments.size(), equalTo(2));\n        assertThat(capturedDocuments, hasItems(DOCUMENT_1, DOCUMENT_2));\n    }", "signature": "void testOperationExecution()", "full_signature": "@Test public void testOperationExecution()", "class_method_signature": "UpdateOperationTest.testOperationExecution()", "testcase": true, "constructor": false, "invocations": ["append", "append", "asList", "asList", "execute", "forClass", "replaceOne", "verify", "times", "any", "capture", "getAllValues", "assertThat", "size", "equalTo", "assertThat", "hasItems"]}, "focal_class": {"identifier": "UpdateOperation", "superclass": "", "interfaces": "implements MongoDbOperation", "fields": [], "methods": [{"identifier": "execute", "parameters": "(final MongoDatabase connection, final Document data)", "modifiers": "@Override public", "return": "void", "signature": "void execute(final MongoDatabase connection, final Document data)", "full_signature": "@Override public void execute(final MongoDatabase connection, final Document data)", "class_method_signature": "UpdateOperation.execute(final MongoDatabase connection, final Document data)", "testcase": false, "constructor": false}], "file": "mongodb/src/main/java/eu/drus/jpa/unit/mongodb/operation/UpdateOperation.java"}, "focal_method": {"identifier": "execute", "parameters": "(final MongoDatabase connection, final Document data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void execute(final MongoDatabase connection, final Document data) {\n        for (final String collectionName : data.keySet()) {\n            @SuppressWarnings(\"unchecked\")\n            final List<Document> documents = data.get(collectionName, List.class);\n\n            final MongoCollection<Document> collection = connection.getCollection(collectionName);\n            documents.forEach(d -> collection.replaceOne(Filters.eq(d.get(\"_id\")), d));\n        }\n    }", "signature": "void execute(final MongoDatabase connection, final Document data)", "full_signature": "@Override public void execute(final MongoDatabase connection, final Document data)", "class_method_signature": "UpdateOperation.execute(final MongoDatabase connection, final Document data)", "testcase": false, "constructor": false, "invocations": ["keySet", "get", "getCollection", "forEach", "replaceOne", "eq", "get"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}