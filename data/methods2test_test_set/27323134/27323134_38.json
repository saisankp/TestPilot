{"test_class": {"identifier": "DefaultErrorBundleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultErrorBundle defaultErrorBundle;", "modifier": "private", "type": "DefaultErrorBundle", "declarator": "defaultErrorBundle", "var_name": "defaultErrorBundle"}, {"original_string": "@Mock\n    private Exception mockException;", "modifier": "@Mock\n    private", "type": "Exception", "declarator": "mockException", "var_name": "mockException"}], "file": "mythtv-player/src/test/java/org/mythtv/android/domain/exception/DefaultErrorBundleTest.java"}, "test_case": {"identifier": "testGetUnknownErrorMessageInteraction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetUnknownErrorMessageInteraction() {\n\n        defaultErrorBundle = new DefaultErrorBundle( null );\n        defaultErrorBundle.getErrorMessage();\n\n        assertThat( defaultErrorBundle.getErrorMessage(), equalTo( \"Unknown error\" ) );\n\n    }", "signature": "void testGetUnknownErrorMessageInteraction()", "full_signature": "@Test public void testGetUnknownErrorMessageInteraction()", "class_method_signature": "DefaultErrorBundleTest.testGetUnknownErrorMessageInteraction()", "testcase": true, "constructor": false, "invocations": ["getErrorMessage", "assertThat", "getErrorMessage", "equalTo"]}, "focal_class": {"identifier": "DefaultErrorBundle", "superclass": "", "interfaces": "implements ErrorBundle", "fields": [{"original_string": "private static final String DEFAULT_ERROR_MSG = \"Unknown error\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_ERROR_MSG = \"Unknown error\"", "var_name": "DEFAULT_ERROR_MSG"}, {"original_string": "private final Exception exception;", "modifier": "private final", "type": "Exception", "declarator": "exception", "var_name": "exception"}], "methods": [{"identifier": "DefaultErrorBundle", "parameters": "( Exception exception )", "modifiers": "public", "return": "", "signature": " DefaultErrorBundle( Exception exception )", "full_signature": "public  DefaultErrorBundle( Exception exception )", "class_method_signature": "DefaultErrorBundle.DefaultErrorBundle( Exception exception )", "testcase": false, "constructor": true}, {"identifier": "getException", "parameters": "()", "modifiers": "@Override public", "return": "Exception", "signature": "Exception getException()", "full_signature": "@Override public Exception getException()", "class_method_signature": "DefaultErrorBundle.getException()", "testcase": false, "constructor": false}, {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getErrorMessage()", "full_signature": "@Override public String getErrorMessage()", "class_method_signature": "DefaultErrorBundle.getErrorMessage()", "testcase": false, "constructor": false}], "file": "mythtv-player/src/main/java/org/mythtv/android/domain/exception/DefaultErrorBundle.java"}, "focal_method": {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getErrorMessage() {\n        return ( exception == null ) ? DEFAULT_ERROR_MSG : this.exception.getMessage();\n    }", "signature": "String getErrorMessage()", "full_signature": "@Override public String getErrorMessage()", "class_method_signature": "DefaultErrorBundle.getErrorMessage()", "testcase": false, "constructor": false, "invocations": ["getMessage"]}, "repository": {"repo_id": 27323134, "url": "https://github.com/MythTV-Clients/MythtvPlayerForAndroid", "stars": 17, "created": "11/30/2014 3:26:45 AM +00:00", "updates": "2019-12-31T22:13:00+00:00", "fork": "False", "license": "licensed"}}