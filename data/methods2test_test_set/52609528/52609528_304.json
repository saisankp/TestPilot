{"test_class": {"identifier": "RedisReducedPropagationStorageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Vertx vertx;", "modifier": "private static", "type": "Vertx", "declarator": "vertx", "var_name": "vertx"}, {"original_string": "private Jedis jedis;", "modifier": "private", "type": "Jedis", "declarator": "jedis", "var_name": "jedis"}, {"original_string": "private static RedisReducedPropagationStorage storage;", "modifier": "private static", "type": "RedisReducedPropagationStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "@org.junit.Rule\n    public Timeout rule = Timeout.seconds(30);", "modifier": "@org.junit.Rule\n    public", "type": "Timeout", "declarator": "rule = Timeout.seconds(30)", "var_name": "rule"}], "file": "gateleen-hook/src/test/java/org/swisspush/gateleen/hook/reducedpropagation/impl/RedisReducedPropagationStorageTest.java"}, "test_case": {"identifier": "testRemoveExpiredQueuesAllQueuesExpired", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveExpiredQueuesAllQueuesExpired(TestContext context) {\n        Async async = context.async();\n        context.assertFalse(jedis.exists(QUEUE_TIMERS));\n\n        jedis.zadd(QUEUE_TIMERS, 15, \"queue_1\");\n        jedis.zadd(QUEUE_TIMERS, 20, \"queue_2\");\n        jedis.zadd(QUEUE_TIMERS, 25, \"queue_3\");\n\n        storage.removeExpiredQueues(50).setHandler(event -> {\n            context.assertTrue(event.succeeded());\n            context.assertNotNull(event.result());\n            context.assertEquals(Arrays.asList(\"queue_1\", \"queue_2\", \"queue_3\"), event.result());\n\n            assertQueuesTimersSetContent(0, Collections.emptySet());\n\n            async.complete();\n        });\n    }", "signature": "void testRemoveExpiredQueuesAllQueuesExpired(TestContext context)", "full_signature": "@Test public void testRemoveExpiredQueuesAllQueuesExpired(TestContext context)", "class_method_signature": "RedisReducedPropagationStorageTest.testRemoveExpiredQueuesAllQueuesExpired(TestContext context)", "testcase": true, "constructor": false, "invocations": ["async", "assertFalse", "exists", "zadd", "zadd", "zadd", "setHandler", "removeExpiredQueues", "assertTrue", "succeeded", "assertNotNull", "result", "assertEquals", "asList", "result", "assertQueuesTimersSetContent", "emptySet", "complete"]}, "focal_class": {"identifier": "RedisReducedPropagationStorage", "superclass": "", "interfaces": "implements ReducedPropagationStorage", "fields": [{"original_string": "private RedisClient redisClient;", "modifier": "private", "type": "RedisClient", "declarator": "redisClient", "var_name": "redisClient"}, {"original_string": "private Logger log = LoggerFactory.getLogger(RedisReducedPropagationStorage.class);", "modifier": "private", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(RedisReducedPropagationStorage.class)", "var_name": "log"}, {"original_string": "static final String QUEUE_TIMERS = \"gateleen.hook-reducedpropagation-queuetimers\";", "modifier": "static final", "type": "String", "declarator": "QUEUE_TIMERS = \"gateleen.hook-reducedpropagation-queuetimers\"", "var_name": "QUEUE_TIMERS"}, {"original_string": "static final String QUEUE_REQUESTS = \"gateleen.hook-reducedpropagation-queuerequests\";", "modifier": "static final", "type": "String", "declarator": "QUEUE_REQUESTS = \"gateleen.hook-reducedpropagation-queuerequests\"", "var_name": "QUEUE_REQUESTS"}, {"original_string": "private LuaScriptState startQueueTimerLuaScriptState;", "modifier": "private", "type": "LuaScriptState", "declarator": "startQueueTimerLuaScriptState", "var_name": "startQueueTimerLuaScriptState"}, {"original_string": "private LuaScriptState removeExpiredQueuesRedisCommand;", "modifier": "private", "type": "LuaScriptState", "declarator": "removeExpiredQueuesRedisCommand", "var_name": "removeExpiredQueuesRedisCommand"}], "methods": [{"identifier": "RedisReducedPropagationStorage", "parameters": "(RedisClient redisClient)", "modifiers": "public", "return": "", "signature": " RedisReducedPropagationStorage(RedisClient redisClient)", "full_signature": "public  RedisReducedPropagationStorage(RedisClient redisClient)", "class_method_signature": "RedisReducedPropagationStorage.RedisReducedPropagationStorage(RedisClient redisClient)", "testcase": false, "constructor": true}, {"identifier": "removeExpiredQueues", "parameters": "(long currentTS)", "modifiers": "@Override public", "return": "Future<List<String>>", "signature": "Future<List<String>> removeExpiredQueues(long currentTS)", "full_signature": "@Override public Future<List<String>> removeExpiredQueues(long currentTS)", "class_method_signature": "RedisReducedPropagationStorage.removeExpiredQueues(long currentTS)", "testcase": false, "constructor": false}, {"identifier": "addQueue", "parameters": "(String queue, long expireTS)", "modifiers": "@Override public", "return": "Future<Boolean>", "signature": "Future<Boolean> addQueue(String queue, long expireTS)", "full_signature": "@Override public Future<Boolean> addQueue(String queue, long expireTS)", "class_method_signature": "RedisReducedPropagationStorage.addQueue(String queue, long expireTS)", "testcase": false, "constructor": false}, {"identifier": "storeQueueRequest", "parameters": "(String queue, JsonObject queueRequest)", "modifiers": "@Override public", "return": "Future<Void>", "signature": "Future<Void> storeQueueRequest(String queue, JsonObject queueRequest)", "full_signature": "@Override public Future<Void> storeQueueRequest(String queue, JsonObject queueRequest)", "class_method_signature": "RedisReducedPropagationStorage.storeQueueRequest(String queue, JsonObject queueRequest)", "testcase": false, "constructor": false}, {"identifier": "getQueueRequest", "parameters": "(String queue)", "modifiers": "@Override public", "return": "Future<JsonObject>", "signature": "Future<JsonObject> getQueueRequest(String queue)", "full_signature": "@Override public Future<JsonObject> getQueueRequest(String queue)", "class_method_signature": "RedisReducedPropagationStorage.getQueueRequest(String queue)", "testcase": false, "constructor": false}, {"identifier": "removeQueueRequest", "parameters": "(String queue)", "modifiers": "@Override public", "return": "Future<Void>", "signature": "Future<Void> removeQueueRequest(String queue)", "full_signature": "@Override public Future<Void> removeQueueRequest(String queue)", "class_method_signature": "RedisReducedPropagationStorage.removeQueueRequest(String queue)", "testcase": false, "constructor": false}, {"identifier": "logCause", "parameters": "(AsyncResult result)", "modifiers": "private static", "return": "String", "signature": "String logCause(AsyncResult result)", "full_signature": "private static String logCause(AsyncResult result)", "class_method_signature": "RedisReducedPropagationStorage.logCause(AsyncResult result)", "testcase": false, "constructor": false}], "file": "gateleen-hook/src/main/java/org/swisspush/gateleen/hook/reducedpropagation/impl/RedisReducedPropagationStorage.java"}, "focal_method": {"identifier": "removeExpiredQueues", "parameters": "(long currentTS)", "modifiers": "@Override public", "return": "Future<List<String>>", "body": "@Override\n    public Future<List<String>> removeExpiredQueues(long currentTS) {\n        Future<List<String>> future = Future.future();\n        List<String> keys = Collections.singletonList(QUEUE_TIMERS);\n        List<String> arguments = Collections.singletonList(String.valueOf(currentTS));\n        RemoveExpiredQueuesRedisCommand cmd = new RemoveExpiredQueuesRedisCommand(removeExpiredQueuesRedisCommand,\n                keys, arguments, redisClient, log, future);\n        cmd.exec(0);\n        return future;\n    }", "signature": "Future<List<String>> removeExpiredQueues(long currentTS)", "full_signature": "@Override public Future<List<String>> removeExpiredQueues(long currentTS)", "class_method_signature": "RedisReducedPropagationStorage.removeExpiredQueues(long currentTS)", "testcase": false, "constructor": false, "invocations": ["future", "singletonList", "singletonList", "valueOf", "exec"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}