{"test_class": {"identifier": "VersionTest", "superclass": "", "interfaces": "", "fields": [], "file": "maven-color-core/src/test/java/com/github/jcgay/maven/color/core/version/VersionTest.java"}, "test_case": {"identifier": "should_return_unknown_version_when_resource_does_not_exist", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_unknown_version_when_resource_does_not_exist() {\n        Version version = new Version(\"/does-not-exist\");\n\n        assertThat(version.get()).isEqualTo(\"unknown-version\");\n    }", "signature": "void should_return_unknown_version_when_resource_does_not_exist()", "full_signature": "@Test public void should_return_unknown_version_when_resource_does_not_exist()", "class_method_signature": "VersionTest.should_return_unknown_version_when_resource_does_not_exist()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "Version", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String UNKNOWN_VERSION = \"unknown-version\";", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_VERSION = \"unknown-version\"", "var_name": "UNKNOWN_VERSION"}, {"original_string": "private static final Logger LOGGER = getLogger(Version.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = getLogger(Version.class)", "var_name": "LOGGER"}, {"original_string": "private final String source;", "modifier": "private final", "type": "String", "declarator": "source", "var_name": "source"}], "methods": [{"identifier": "Version", "parameters": "(String classpathResource)", "modifiers": "", "return": "", "signature": " Version(String classpathResource)", "full_signature": "  Version(String classpathResource)", "class_method_signature": "Version.Version(String classpathResource)", "testcase": false, "constructor": true}, {"identifier": "current", "parameters": "()", "modifiers": "public static", "return": "Version", "signature": "Version current()", "full_signature": "public static Version current()", "class_method_signature": "Version.current()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String get()", "full_signature": "public String get()", "class_method_signature": "Version.get()", "testcase": false, "constructor": false}], "file": "maven-color-core/src/main/java/com/github/jcgay/maven/color/core/version/Version.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String get() {\n        InputStream resource = Version.class.getResourceAsStream(source);\n        if (resource == null) {\n            return UNKNOWN_VERSION;\n        }\n        try (BufferedReader reader = new BufferedReader(new InputStreamReader(resource, UTF_8))) {\n            String version = reader.readLine();\n            return version != null ? version : UNKNOWN_VERSION;\n        } catch (IOException e) {\n            LOGGER.warn(\"Error while trying to read current maven-color version.\", e);\n            return UNKNOWN_VERSION;\n        }\n    }", "signature": "String get()", "full_signature": "public String get()", "class_method_signature": "Version.get()", "testcase": false, "constructor": false, "invocations": ["getResourceAsStream", "readLine", "warn"]}, "repository": {"repo_id": 9132656, "url": "https://github.com/jcgay/maven-color", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 177, "size": 264, "license": "licensed"}}