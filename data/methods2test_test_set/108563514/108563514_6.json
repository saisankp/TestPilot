{"test_class": {"identifier": "GetTrainingDataTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private FederatedDataSet dataSet;", "modifier": "@Mock\n    private", "type": "FederatedDataSet", "declarator": "dataSet", "var_name": "dataSet"}, {"original_string": "@Mock\n    private UseCaseCallback<FederatedRepository> useCaseCallback;", "modifier": "@Mock\n    private", "type": "UseCaseCallback<FederatedRepository>", "declarator": "useCaseCallback", "var_name": "useCaseCallback"}], "file": "app/src/test/java/com/mccorby/federatedlearning/core/domain/usecase/GetTrainingDataTest.java"}, "test_case": {"identifier": "testGetTrainingData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetTrainingData() {\n        // Given\n        FederatedDataSource dataSource = Mockito.mock(FederatedDataSource.class);\n        FederatedRepository repository = Mockito.mock(FederatedRepository.class);\n\n        given(dataSource.getTrainingData()).willReturn(dataSet);\n        given(repository.getTrainingData()).willReturn(dataSet);\n\n        // When\n        GetTrainingData cut = new GetTrainingData(useCaseCallback, repository);\n        cut.execute();\n\n        // Then\n        Mockito.verify(repository).getTrainingData();\n        Mockito.verify(useCaseCallback).onSuccess(repository);\n    }", "signature": "void testGetTrainingData()", "full_signature": "@Test public void testGetTrainingData()", "class_method_signature": "GetTrainingDataTest.testGetTrainingData()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "willReturn", "given", "getTrainingData", "willReturn", "given", "getTrainingData", "execute", "getTrainingData", "verify", "onSuccess", "verify"]}, "focal_class": {"identifier": "GetTrainingData", "superclass": "", "interfaces": "implements UseCase", "fields": [{"original_string": "private final FederatedRepository repository;", "modifier": "private final", "type": "FederatedRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private UseCaseCallback<FederatedRepository> useCaseCallback;", "modifier": "private", "type": "UseCaseCallback<FederatedRepository>", "declarator": "useCaseCallback", "var_name": "useCaseCallback"}], "methods": [{"identifier": "GetTrainingData", "parameters": "(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository)", "modifiers": "public", "return": "", "signature": " GetTrainingData(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository)", "full_signature": "public  GetTrainingData(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository)", "class_method_signature": "GetTrainingData.GetTrainingData(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "GetTrainingData.execute()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/mccorby/federatedlearning/core/domain/usecase/GetTrainingData.java"}, "focal_method": {"identifier": "GetTrainingData", "parameters": "(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository)", "modifiers": "public", "return": "", "body": "public GetTrainingData(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository) {\n        this.useCaseCallback = useCaseCallback;\n\n        this.repository = repository;\n    }", "signature": " GetTrainingData(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository)", "full_signature": "public  GetTrainingData(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository)", "class_method_signature": "GetTrainingData.GetTrainingData(UseCaseCallback<FederatedRepository> useCaseCallback,\n                           FederatedRepository repository)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 108563514, "url": "https://github.com/mccorby/FederatedAndroidTrainer", "language": "Java", "is_fork": false, "fork_count": 24, "stargazer_count": 121, "size": 292, "license": "licensed"}}