{"test_class": {"identifier": "SchedulerServiceTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private SchedulerService schedulerService;", "modifier": "@Autowired\n    private", "type": "SchedulerService", "declarator": "schedulerService", "var_name": "schedulerService"}, {"original_string": "@Autowired\n    private EmailServiceClient emailServiceClient;", "modifier": "@Autowired\n    private", "type": "EmailServiceClient", "declarator": "emailServiceClient", "var_name": "emailServiceClient"}], "file": "services/task-server/src/test/java/com/opencloud/task/server/service/SchedulerServiceTest.java"}, "test_case": {"identifier": "resumeJob", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void resumeJob() {\n        schedulerService.resumeJob(\"\u5b9a\u65f6\u4efb\u52a1\u6d4b\u8bd5\", Scheduler.DEFAULT_GROUP);\n    }", "signature": "void resumeJob()", "full_signature": "@Test public void resumeJob()", "class_method_signature": "SchedulerServiceTest.resumeJob()", "testcase": true, "constructor": false, "invocations": ["resumeJob"]}, "focal_class": {"identifier": "SchedulerService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private Scheduler scheduler;", "modifier": "@Autowired\n    private", "type": "Scheduler", "declarator": "scheduler", "var_name": "scheduler"}], "methods": [{"identifier": "getJobGroupNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getJobGroupNames()", "full_signature": "public List<String> getJobGroupNames()", "class_method_signature": "SchedulerService.getJobGroupNames()", "testcase": false, "constructor": false}, {"identifier": "getJobList", "parameters": "()", "modifiers": "public", "return": "List<TaskInfo>", "signature": "List<TaskInfo> getJobList()", "full_signature": "public List<TaskInfo> getJobList()", "class_method_signature": "SchedulerService.getJobList()", "testcase": false, "constructor": false}, {"identifier": "addSimpleJob", "parameters": "(TaskInfo info)", "modifiers": "public", "return": "void", "signature": "void addSimpleJob(TaskInfo info)", "full_signature": "public void addSimpleJob(TaskInfo info)", "class_method_signature": "SchedulerService.addSimpleJob(TaskInfo info)", "testcase": false, "constructor": false}, {"identifier": "addCronJob", "parameters": "(TaskInfo info)", "modifiers": "public", "return": "void", "signature": "void addCronJob(TaskInfo info)", "full_signature": "public void addCronJob(TaskInfo info)", "class_method_signature": "SchedulerService.addCronJob(TaskInfo info)", "testcase": false, "constructor": false}, {"identifier": "editSimpleJob", "parameters": "(TaskInfo info)", "modifiers": "public", "return": "void", "signature": "void editSimpleJob(TaskInfo info)", "full_signature": "public void editSimpleJob(TaskInfo info)", "class_method_signature": "SchedulerService.editSimpleJob(TaskInfo info)", "testcase": false, "constructor": false}, {"identifier": "editCronJob", "parameters": "(TaskInfo info)", "modifiers": "public", "return": "void", "signature": "void editCronJob(TaskInfo info)", "full_signature": "public void editCronJob(TaskInfo info)", "class_method_signature": "SchedulerService.editCronJob(TaskInfo info)", "testcase": false, "constructor": false}, {"identifier": "deleteJob", "parameters": "(String jobName, String jobGroup)", "modifiers": "public", "return": "void", "signature": "void deleteJob(String jobName, String jobGroup)", "full_signature": "public void deleteJob(String jobName, String jobGroup)", "class_method_signature": "SchedulerService.deleteJob(String jobName, String jobGroup)", "testcase": false, "constructor": false}, {"identifier": "pauseJob", "parameters": "(String jobName, String jobGroup)", "modifiers": "public", "return": "void", "signature": "void pauseJob(String jobName, String jobGroup)", "full_signature": "public void pauseJob(String jobName, String jobGroup)", "class_method_signature": "SchedulerService.pauseJob(String jobName, String jobGroup)", "testcase": false, "constructor": false}, {"identifier": "resumeJob", "parameters": "(String jobName, String jobGroup)", "modifiers": "public", "return": "void", "signature": "void resumeJob(String jobName, String jobGroup)", "full_signature": "public void resumeJob(String jobName, String jobGroup)", "class_method_signature": "SchedulerService.resumeJob(String jobName, String jobGroup)", "testcase": false, "constructor": false}, {"identifier": "checkExists", "parameters": "(String jobName, String jobGroup)", "modifiers": "private", "return": "boolean", "signature": "boolean checkExists(String jobName, String jobGroup)", "full_signature": "private boolean checkExists(String jobName, String jobGroup)", "class_method_signature": "SchedulerService.checkExists(String jobName, String jobGroup)", "testcase": false, "constructor": false}], "file": "services/task-server/src/main/java/com/opencloud/task/server/service/SchedulerService.java"}, "focal_method": {"identifier": "resumeJob", "parameters": "(String jobName, String jobGroup)", "modifiers": "public", "return": "void", "body": "public void resumeJob(String jobName, String jobGroup) {\n        TriggerKey triggerKey = TriggerKey.triggerKey(jobName, jobGroup);\n        try {\n            if (checkExists(jobName, jobGroup)) {\n                scheduler.resumeTrigger(triggerKey);\n            }\n        } catch (SchedulerException e) {\n            throw new OpenAlertException(e.getMessage());\n        }\n    }", "signature": "void resumeJob(String jobName, String jobGroup)", "full_signature": "public void resumeJob(String jobName, String jobGroup)", "class_method_signature": "SchedulerService.resumeJob(String jobName, String jobGroup)", "testcase": false, "constructor": false, "invocations": ["triggerKey", "checkExists", "resumeTrigger", "getMessage"]}, "repository": {"repo_id": 227982692, "url": "https://github.com/uhonliu/open-platform", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 15471, "license": "licensed"}}