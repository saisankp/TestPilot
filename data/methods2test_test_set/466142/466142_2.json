{"test_class": {"identifier": "TestBoneCPConnectionProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static BoneCP mockPool;", "modifier": "private static", "type": "BoneCP", "declarator": "mockPool", "var_name": "mockPool"}, {"original_string": "private static ConnectionHandle mockConnection;", "modifier": "private static", "type": "ConnectionHandle", "declarator": "mockConnection", "var_name": "mockConnection"}, {"original_string": "private static Properties mockProperties;", "modifier": "private static", "type": "Properties", "declarator": "mockProperties", "var_name": "mockProperties"}, {"original_string": "private static BoneCPConnectionProvider testClass;", "modifier": "private static", "type": "BoneCPConnectionProvider", "declarator": "testClass", "var_name": "testClass"}, {"original_string": "private static String URL = \"jdbc:mock\";", "modifier": "private static", "type": "String", "declarator": "URL = \"jdbc:mock\"", "var_name": "URL"}, {"original_string": "private static String USERNAME = \"sa\";", "modifier": "private static", "type": "String", "declarator": "USERNAME = \"sa\"", "var_name": "USERNAME"}, {"original_string": "private static String PASSWORD = \"\";", "modifier": "private static", "type": "String", "declarator": "PASSWORD = \"\"", "var_name": "PASSWORD"}, {"original_string": "private static String DRIVER = \"com.jolbox.bonecp.MockJDBCDriver\";", "modifier": "private static", "type": "String", "declarator": "DRIVER = \"com.jolbox.bonecp.MockJDBCDriver\"", "var_name": "DRIVER"}, {"original_string": "public static final String TEST_QUERY = \"SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS\";", "modifier": "public static final", "type": "String", "declarator": "TEST_QUERY = \"SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS\"", "var_name": "TEST_QUERY"}, {"original_string": "private MockJDBCDriver driver;", "modifier": "private", "type": "MockJDBCDriver", "declarator": "driver", "var_name": "driver"}], "file": "bonecp-hbnprovider/src/test/java/com/jolbox/bonecp/provider/TestBoneCPConnectionProvider.java"}, "test_case": {"identifier": "testClose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClose() {\n\t\tmockPool.shutdown();\n\t\texpectLastCall().once();\n\t\treplay(mockPool);\n\t\ttestClass.close();\n\t\tverify(mockPool);\n\t}", "signature": "void testClose()", "full_signature": "@Test public void testClose()", "class_method_signature": "TestBoneCPConnectionProvider.testClose()", "testcase": true, "constructor": false, "invocations": ["shutdown", "once", "expectLastCall", "replay", "close", "verify"]}, "focal_class": {"identifier": "BoneCPConnectionProvider", "superclass": "", "interfaces": "implements ConnectionProvider,Configurable,Stoppable", "fields": [{"original_string": "private static final long serialVersionUID = -5236029951415598543L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -5236029951415598543L", "var_name": "serialVersionUID"}, {"original_string": "protected static final String CONFIG_CONNECTION_DRIVER_CLASS = \"hibernate.connection.driver_class\";", "modifier": "protected static final", "type": "String", "declarator": "CONFIG_CONNECTION_DRIVER_CLASS = \"hibernate.connection.driver_class\"", "var_name": "CONFIG_CONNECTION_DRIVER_CLASS"}, {"original_string": "protected static final String CONFIG_CONNECTION_PASSWORD = \"hibernate.connection.password\";", "modifier": "protected static final", "type": "String", "declarator": "CONFIG_CONNECTION_PASSWORD = \"hibernate.connection.password\"", "var_name": "CONFIG_CONNECTION_PASSWORD"}, {"original_string": "protected static final String CONFIG_CONNECTION_USERNAME = \"hibernate.connection.username\";", "modifier": "protected static final", "type": "String", "declarator": "CONFIG_CONNECTION_USERNAME = \"hibernate.connection.username\"", "var_name": "CONFIG_CONNECTION_USERNAME"}, {"original_string": "protected static final String CONFIG_CONNECTION_URL = \"hibernate.connection.url\";", "modifier": "protected static final", "type": "String", "declarator": "CONFIG_CONNECTION_URL = \"hibernate.connection.url\"", "var_name": "CONFIG_CONNECTION_URL"}, {"original_string": "protected static final String CONFIG_CONNECTION_DRIVER_CLASS_ALTERNATE = \"javax.persistence.jdbc.driver\";", "modifier": "protected static final", "type": "String", "declarator": "CONFIG_CONNECTION_DRIVER_CLASS_ALTERNATE = \"javax.persistence.jdbc.driver\"", "var_name": "CONFIG_CONNECTION_DRIVER_CLASS_ALTERNATE"}, {"original_string": "protected static final String CONFIG_CONNECTION_PASSWORD_ALTERNATE = \"javax.persistence.jdbc.password\";", "modifier": "protected static final", "type": "String", "declarator": "CONFIG_CONNECTION_PASSWORD_ALTERNATE = \"javax.persistence.jdbc.password\"", "var_name": "CONFIG_CONNECTION_PASSWORD_ALTERNATE"}, {"original_string": "protected static final String CONFIG_CONNECTION_USERNAME_ALTERNATE = \"javax.persistence.jdbc.user\";", "modifier": "protected static final", "type": "String", "declarator": "CONFIG_CONNECTION_USERNAME_ALTERNATE = \"javax.persistence.jdbc.user\"", "var_name": "CONFIG_CONNECTION_USERNAME_ALTERNATE"}, {"original_string": "protected static final String CONFIG_CONNECTION_URL_ALTERNATE = \"javax.persistence.jdbc.url\";", "modifier": "protected static final", "type": "String", "declarator": "CONFIG_CONNECTION_URL_ALTERNATE = \"javax.persistence.jdbc.url\"", "var_name": "CONFIG_CONNECTION_URL_ALTERNATE"}, {"original_string": "private BoneCP pool;", "modifier": "private", "type": "BoneCP", "declarator": "pool", "var_name": "pool"}, {"original_string": "private Integer isolation;", "modifier": "private", "type": "Integer", "declarator": "isolation", "var_name": "isolation"}, {"original_string": "private boolean autocommit;", "modifier": "private", "type": "boolean", "declarator": "autocommit", "var_name": "autocommit"}, {"original_string": "private ClassLoader classLoader;", "modifier": "private", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}, {"original_string": "private BoneCPConfig config;", "modifier": "private", "type": "BoneCPConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(BoneCPConnectionProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(BoneCPConnectionProvider.class)", "var_name": "logger"}], "methods": [{"identifier": "closeConnection", "parameters": "(Connection conn)", "modifiers": "public", "return": "void", "signature": "void closeConnection(Connection conn)", "full_signature": "public void closeConnection(Connection conn)", "class_method_signature": "BoneCPConnectionProvider.closeConnection(Connection conn)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Properties props)", "modifiers": "public", "return": "void", "signature": "void configure(Properties props)", "full_signature": "public void configure(Properties props)", "class_method_signature": "BoneCPConnectionProvider.configure(Properties props)", "testcase": false, "constructor": false}, {"identifier": "loadClass", "parameters": "(String clazz)", "modifiers": "protected", "return": "Class<?>", "signature": "Class<?> loadClass(String clazz)", "full_signature": "protected Class<?> loadClass(String clazz)", "class_method_signature": "BoneCPConnectionProvider.loadClass(String clazz)", "testcase": false, "constructor": false}, {"identifier": "createPool", "parameters": "(BoneCPConfig config)", "modifiers": "protected", "return": "BoneCP", "signature": "BoneCP createPool(BoneCPConfig config)", "full_signature": "protected BoneCP createPool(BoneCPConfig config)", "class_method_signature": "BoneCPConnectionProvider.createPool(BoneCPConfig config)", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "public", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "public Connection getConnection()", "class_method_signature": "BoneCPConnectionProvider.getConnection()", "testcase": false, "constructor": false}, {"identifier": "supportsAggressiveRelease", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean supportsAggressiveRelease()", "full_signature": "public boolean supportsAggressiveRelease()", "class_method_signature": "BoneCPConnectionProvider.supportsAggressiveRelease()", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "()", "modifiers": "protected", "return": "BoneCPConfig", "signature": "BoneCPConfig getConfig()", "full_signature": "protected BoneCPConfig getConfig()", "class_method_signature": "BoneCPConnectionProvider.getConfig()", "testcase": false, "constructor": false}, {"identifier": "getClassLoader", "parameters": "()", "modifiers": "public", "return": "ClassLoader", "signature": "ClassLoader getClassLoader()", "full_signature": "public ClassLoader getClassLoader()", "class_method_signature": "BoneCPConnectionProvider.getClassLoader()", "testcase": false, "constructor": false}, {"identifier": "setClassLoader", "parameters": "(ClassLoader classLoader)", "modifiers": "public", "return": "void", "signature": "void setClassLoader(ClassLoader classLoader)", "full_signature": "public void setClassLoader(ClassLoader classLoader)", "class_method_signature": "BoneCPConnectionProvider.setClassLoader(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "isUnwrappableAs", "parameters": "(Class unwrapType)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "boolean", "signature": "boolean isUnwrappableAs(Class unwrapType)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public boolean isUnwrappableAs(Class unwrapType)", "class_method_signature": "BoneCPConnectionProvider.isUnwrappableAs(Class unwrapType)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(Class<T> unwrapType)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T unwrap(Class<T> unwrapType)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T unwrap(Class<T> unwrapType)", "class_method_signature": "BoneCPConnectionProvider.unwrap(Class<T> unwrapType)", "testcase": false, "constructor": false}, {"identifier": "mapToProperties", "parameters": "(Map<String, String> map)", "modifiers": "private", "return": "Properties", "signature": "Properties mapToProperties(Map<String, String> map)", "full_signature": "private Properties mapToProperties(Map<String, String> map)", "class_method_signature": "BoneCPConnectionProvider.mapToProperties(Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Map configurationValues)", "modifiers": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" }) @Override public", "return": "void", "signature": "void configure(Map configurationValues)", "full_signature": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" }) @Override public void configure(Map configurationValues)", "class_method_signature": "BoneCPConnectionProvider.configure(Map configurationValues)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "BoneCPConnectionProvider.stop()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "BoneCPConnectionProvider.close()", "testcase": false, "constructor": false}], "file": "bonecp-hbnprovider/src/main/java/com/jolbox/bonecp/provider/BoneCPConnectionProvider.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void close(){\n\t\tthis.pool.shutdown();\n\t}", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "BoneCPConnectionProvider.close()", "testcase": false, "constructor": false, "invocations": ["shutdown"]}, "repository": {"repo_id": 466142, "url": "https://github.com/wwadge/bonecp", "language": "Java", "is_fork": false, "fork_count": 161, "stargazer_count": 544, "size": 3833, "license": "licensed"}}