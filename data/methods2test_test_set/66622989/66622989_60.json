{"test_class": {"identifier": "FetchSentenceAudioUCTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SAMPLE_AUDIO_URL = \"http:\\\\/\\\\/news.iciba.com\\\\/admin\\\\/tts\\\\/2016-08-12-day.mp3\";", "modifier": "private static final", "type": "String", "declarator": "SAMPLE_AUDIO_URL = \"http:\\\\/\\\\/news.iciba.com\\\\/admin\\\\/tts\\\\/2016-08-12-day.mp3\"", "var_name": "SAMPLE_AUDIO_URL"}, {"original_string": "private FetchSentenceAudioUC mFetchSentenceAudioUC;", "modifier": "private", "type": "FetchSentenceAudioUC", "declarator": "mFetchSentenceAudioUC", "var_name": "mFetchSentenceAudioUC"}, {"original_string": "@Mock\n    private SentenceRepository mSentenceRepository;", "modifier": "@Mock\n    private", "type": "SentenceRepository", "declarator": "mSentenceRepository", "var_name": "mSentenceRepository"}, {"original_string": "private long mToken;", "modifier": "private", "type": "long", "declarator": "mToken", "var_name": "mToken"}], "file": "app/src/test/java/com/xixicm/de/domain/interactor/FetchSentenceAudioUCTest.java"}, "test_case": {"identifier": "testFetchSentenceAudio", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFetchSentenceAudio() {\n        mFetchSentenceAudioUC.run();\n        // fetchSentenceAudio is called\n        verify(mSentenceRepository).fetchSentenceAudio(SAMPLE_AUDIO_URL, mToken);\n    }", "signature": "void testFetchSentenceAudio()", "full_signature": "@Test public void testFetchSentenceAudio()", "class_method_signature": "FetchSentenceAudioUCTest.testFetchSentenceAudio()", "testcase": true, "constructor": false, "invocations": ["run", "fetchSentenceAudio", "verify"]}, "focal_class": {"identifier": "FetchSentenceAudioUC", "superclass": "extends AbstractUseCase<FetchSentenceAudioUC.FetchSentenceAudioRequestParms, Void, Void>", "interfaces": "", "fields": [{"original_string": "SentenceRepository mSentenceRepository;", "modifier": "", "type": "SentenceRepository", "declarator": "mSentenceRepository", "var_name": "mSentenceRepository"}], "methods": [{"identifier": "FetchSentenceAudioUC", "parameters": "(SentenceRepository sentenceRepository)", "modifiers": "public", "return": "", "signature": " FetchSentenceAudioUC(SentenceRepository sentenceRepository)", "full_signature": "public  FetchSentenceAudioUC(SentenceRepository sentenceRepository)", "class_method_signature": "FetchSentenceAudioUC.FetchSentenceAudioUC(SentenceRepository sentenceRepository)", "testcase": false, "constructor": true}, {"identifier": "fetchSentenceAudio", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void fetchSentenceAudio()", "full_signature": "private void fetchSentenceAudio()", "class_method_signature": "FetchSentenceAudioUC.fetchSentenceAudio()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "FetchSentenceAudioUC.run()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/xixicm/de/domain/interactor/FetchSentenceAudioUC.java"}, "focal_method": {"identifier": "fetchSentenceAudio", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void fetchSentenceAudio() {\n        LogUtils.v(Constants.TAG, \"fetch audio: \" + getRequestValue() + \".\");\n        mSentenceRepository.fetchSentenceAudio(getRequestValue().getAudioUrl(), getRequestValue().getToken());\n    }", "signature": "void fetchSentenceAudio()", "full_signature": "private void fetchSentenceAudio()", "class_method_signature": "FetchSentenceAudioUC.fetchSentenceAudio()", "testcase": false, "constructor": false, "invocations": ["v", "getRequestValue", "fetchSentenceAudio", "getAudioUrl", "getRequestValue", "getToken", "getRequestValue"]}, "repository": {"repo_id": 66622989, "url": "https://github.com/enuoCM/DE-MVP-Clean", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 17, "size": 278, "license": "licensed"}}