{"test_class": {"identifier": "HypervisorManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    @InjectMocks\n    private HypervisorManager hypervisorManager;", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "HypervisorManager", "declarator": "hypervisorManager", "var_name": "hypervisorManager"}, {"original_string": "@Mock\n    private HostService hostService;", "modifier": "@Mock\n    private", "type": "HostService", "declarator": "hostService", "var_name": "hostService"}, {"original_string": "@Mock\n    private List<HypervisorHost> hypervisorHosts;", "modifier": "@Mock\n    private", "type": "List<HypervisorHost>", "declarator": "hypervisorHosts", "var_name": "hypervisorHosts"}, {"original_string": "private HypervisorHost hypervisor;", "modifier": "private", "type": "HypervisorHost", "declarator": "hypervisor", "var_name": "hypervisor"}], "file": "autonomic-administration-plugin/src/test/java/br/com/autonomiccs/autonomic/administration/plugin/HypervisorManagerTest.java"}, "test_case": {"identifier": "shutdownTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shutdownTest() {\n        HostVO host = new HostVO(\"\");\n        Mockito.doNothing().when(hostService).loadHostDetails(Mockito.any(HostVO.class));\n        Mockito.doNothing().when(hypervisor).shutdownHost(Mockito.any(HostVO.class));\n        Mockito.doNothing().when(hostService).markHostAsShutdownByAdministrationAgent(Mockito.anyLong());\n\n        hypervisorManager.shutdown(host, hypervisor);\n\n        InOrder inOrder = Mockito.inOrder(hostService);\n        inOrder.verify(hostService).loadHostDetails(Mockito.any(HostVO.class));\n        Mockito.verify(hypervisor).shutdownHost(Mockito.any(HostVO.class));\n        inOrder.verify(hostService).markHostAsShutdownByAdministrationAgent(Mockito.anyLong());\n    }", "signature": "void shutdownTest()", "full_signature": "@Test public void shutdownTest()", "class_method_signature": "HypervisorManagerTest.shutdownTest()", "testcase": true, "constructor": false, "invocations": ["loadHostDetails", "when", "doNothing", "any", "shutdownHost", "when", "doNothing", "any", "markHostAsShutdownByAdministrationAgent", "when", "doNothing", "anyLong", "shutdown", "inOrder", "loadHostDetails", "verify", "any", "shutdownHost", "verify", "any", "markHostAsShutdownByAdministrationAgent", "verify", "anyLong"]}, "focal_class": {"identifier": "HypervisorManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    private HostService hostService;", "modifier": "@Inject\n    private", "type": "HostService", "declarator": "hostService", "var_name": "hostService"}, {"original_string": "@Inject\n    protected List<HypervisorHost> hypervisorHosts;", "modifier": "@Inject\n    protected", "type": "List<HypervisorHost>", "declarator": "hypervisorHosts", "var_name": "hypervisorHosts"}], "methods": [{"identifier": "shutdownHost", "parameters": "(HostVO hostVo)", "modifiers": "public", "return": "void", "signature": "void shutdownHost(HostVO hostVo)", "full_signature": "public void shutdownHost(HostVO hostVo)", "class_method_signature": "HypervisorManager.shutdownHost(HostVO hostVo)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "(HostVO hostVo, HypervisorHost currentHypervisorHost)", "modifiers": "protected", "return": "void", "signature": "void shutdown(HostVO hostVo, HypervisorHost currentHypervisorHost)", "full_signature": "protected void shutdown(HostVO hostVo, HypervisorHost currentHypervisorHost)", "class_method_signature": "HypervisorManager.shutdown(HostVO hostVo, HypervisorHost currentHypervisorHost)", "testcase": false, "constructor": false}], "file": "autonomic-administration-plugin/src/main/java/br/com/autonomiccs/autonomic/administration/plugin/HypervisorManager.java"}, "focal_method": {"identifier": "shutdown", "parameters": "(HostVO hostVo, HypervisorHost currentHypervisorHost)", "modifiers": "protected", "return": "void", "body": "protected void shutdown(HostVO hostVo, HypervisorHost currentHypervisorHost) {\n        hostService.loadHostDetails(hostVo);\n        currentHypervisorHost.shutdownHost(hostVo);\n        hostService.markHostAsShutdownByAdministrationAgent(hostVo.getId());\n    }", "signature": "void shutdown(HostVO hostVo, HypervisorHost currentHypervisorHost)", "full_signature": "protected void shutdown(HostVO hostVo, HypervisorHost currentHypervisorHost)", "class_method_signature": "HypervisorManager.shutdown(HostVO hostVo, HypervisorHost currentHypervisorHost)", "testcase": false, "constructor": false, "invocations": ["loadHostDetails", "shutdownHost", "markHostAsShutdownByAdministrationAgent", "getId"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}