{"test_class": {"identifier": "UriUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/feign/template/UriUtilsTest.java"}, "test_case": {"identifier": "pctEncode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void pctEncode() {\n    String queryParameterValue = \"firstName=James;lastName=Bond;location=England&Britain?\";\n    assertThat(UriUtils.encode(queryParameterValue, UTF_8))\n        .isEqualToIgnoringCase(\n            \"firstName%3DJames%3BlastName%3DBond%3Blocation%3DEngland%26Britain%3F\");\n  }", "signature": "void pctEncode()", "full_signature": "@Test public void pctEncode()", "class_method_signature": "UriUtilsTest.pctEncode()", "testcase": true, "constructor": false, "invocations": ["isEqualToIgnoringCase", "assertThat", "encode"]}, "focal_class": {"identifier": "UriUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern PCT_ENCODED_PATTERN = Pattern.compile(\"%[0-9A-Fa-f][0-9A-Fa-f]\");", "modifier": "private static final", "type": "Pattern", "declarator": "PCT_ENCODED_PATTERN = Pattern.compile(\"%[0-9A-Fa-f][0-9A-Fa-f]\")", "var_name": "PCT_ENCODED_PATTERN"}], "methods": [{"identifier": "isEncoded", "parameters": "(String value, Charset charset)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEncoded(String value, Charset charset)", "full_signature": "public static boolean isEncoded(String value, Charset charset)", "class_method_signature": "UriUtils.isEncoded(String value, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(String value)", "modifiers": "public static", "return": "String", "signature": "String encode(String value)", "full_signature": "public static String encode(String value)", "class_method_signature": "UriUtils.encode(String value)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(String value, Charset charset)", "modifiers": "public static", "return": "String", "signature": "String encode(String value, Charset charset)", "full_signature": "public static String encode(String value, Charset charset)", "class_method_signature": "UriUtils.encode(String value, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(String value, boolean allowReservedCharacters)", "modifiers": "public static", "return": "String", "signature": "String encode(String value, boolean allowReservedCharacters)", "full_signature": "public static String encode(String value, boolean allowReservedCharacters)", "class_method_signature": "UriUtils.encode(String value, boolean allowReservedCharacters)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(String value, Charset charset, boolean allowReservedCharacters)", "modifiers": "public static", "return": "String", "signature": "String encode(String value, Charset charset, boolean allowReservedCharacters)", "full_signature": "public static String encode(String value, Charset charset, boolean allowReservedCharacters)", "class_method_signature": "UriUtils.encode(String value, Charset charset, boolean allowReservedCharacters)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(String value, Charset charset)", "modifiers": "public static", "return": "String", "signature": "String decode(String value, Charset charset)", "full_signature": "public static String decode(String value, Charset charset)", "class_method_signature": "UriUtils.decode(String value, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "isAbsolute", "parameters": "(String uri)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAbsolute(String uri)", "full_signature": "public static boolean isAbsolute(String uri)", "class_method_signature": "UriUtils.isAbsolute(String uri)", "testcase": false, "constructor": false}, {"identifier": "encodeInternal", "parameters": "(String value,\n                                      Charset charset,\n                                      boolean allowReservedCharacters)", "modifiers": "public static", "return": "String", "signature": "String encodeInternal(String value,\n                                      Charset charset,\n                                      boolean allowReservedCharacters)", "full_signature": "public static String encodeInternal(String value,\n                                      Charset charset,\n                                      boolean allowReservedCharacters)", "class_method_signature": "UriUtils.encodeInternal(String value,\n                                      Charset charset,\n                                      boolean allowReservedCharacters)", "testcase": false, "constructor": false}, {"identifier": "encodeChunk", "parameters": "(String value, Charset charset, boolean allowReserved)", "modifiers": "private static", "return": "String", "signature": "String encodeChunk(String value, Charset charset, boolean allowReserved)", "full_signature": "private static String encodeChunk(String value, Charset charset, boolean allowReserved)", "class_method_signature": "UriUtils.encodeChunk(String value, Charset charset, boolean allowReserved)", "testcase": false, "constructor": false}, {"identifier": "pctEncode", "parameters": "(byte data, ByteArrayOutputStream bos)", "modifiers": "private static", "return": "void", "signature": "void pctEncode(byte data, ByteArrayOutputStream bos)", "full_signature": "private static void pctEncode(byte data, ByteArrayOutputStream bos)", "class_method_signature": "UriUtils.pctEncode(byte data, ByteArrayOutputStream bos)", "testcase": false, "constructor": false}, {"identifier": "isAlpha", "parameters": "(int c)", "modifiers": "private static", "return": "boolean", "signature": "boolean isAlpha(int c)", "full_signature": "private static boolean isAlpha(int c)", "class_method_signature": "UriUtils.isAlpha(int c)", "testcase": false, "constructor": false}, {"identifier": "isDigit", "parameters": "(int c)", "modifiers": "private static", "return": "boolean", "signature": "boolean isDigit(int c)", "full_signature": "private static boolean isDigit(int c)", "class_method_signature": "UriUtils.isDigit(int c)", "testcase": false, "constructor": false}, {"identifier": "isGenericDelimiter", "parameters": "(int c)", "modifiers": "private static", "return": "boolean", "signature": "boolean isGenericDelimiter(int c)", "full_signature": "private static boolean isGenericDelimiter(int c)", "class_method_signature": "UriUtils.isGenericDelimiter(int c)", "testcase": false, "constructor": false}, {"identifier": "isSubDelimiter", "parameters": "(int c)", "modifiers": "private static", "return": "boolean", "signature": "boolean isSubDelimiter(int c)", "full_signature": "private static boolean isSubDelimiter(int c)", "class_method_signature": "UriUtils.isSubDelimiter(int c)", "testcase": false, "constructor": false}, {"identifier": "isUnreserved", "parameters": "(int c)", "modifiers": "private static", "return": "boolean", "signature": "boolean isUnreserved(int c)", "full_signature": "private static boolean isUnreserved(int c)", "class_method_signature": "UriUtils.isUnreserved(int c)", "testcase": false, "constructor": false}, {"identifier": "isReserved", "parameters": "(int c)", "modifiers": "private static", "return": "boolean", "signature": "boolean isReserved(int c)", "full_signature": "private static boolean isReserved(int c)", "class_method_signature": "UriUtils.isReserved(int c)", "testcase": false, "constructor": false}, {"identifier": "isPchar", "parameters": "(int c)", "modifiers": "private", "return": "boolean", "signature": "boolean isPchar(int c)", "full_signature": "private boolean isPchar(int c)", "class_method_signature": "UriUtils.isPchar(int c)", "testcase": false, "constructor": false}], "file": "core/src/main/java/feign/template/UriUtils.java"}, "focal_method": {"identifier": "pctEncode", "parameters": "(byte data, ByteArrayOutputStream bos)", "modifiers": "private static", "return": "void", "body": "private static void pctEncode(byte data, ByteArrayOutputStream bos) {\n    bos.write('%');\n    char hex1 = Character.toUpperCase(Character.forDigit((data >> 4) & 0xF, 16));\n    char hex2 = Character.toUpperCase(Character.forDigit(data & 0xF, 16));\n    bos.write(hex1);\n    bos.write(hex2);\n  }", "signature": "void pctEncode(byte data, ByteArrayOutputStream bos)", "full_signature": "private static void pctEncode(byte data, ByteArrayOutputStream bos)", "class_method_signature": "UriUtils.pctEncode(byte data, ByteArrayOutputStream bos)", "testcase": false, "constructor": false, "invocations": ["write", "toUpperCase", "forDigit", "toUpperCase", "forDigit", "write", "write"]}, "repository": {"repo_id": 10981994, "url": "https://github.com/OpenFeign/feign", "stars": 5385, "created": "6/26/2013 11:28:16 PM +00:00", "updates": "2020-01-27T14:44:13+00:00", "fork": "False", "license": "licensed"}}