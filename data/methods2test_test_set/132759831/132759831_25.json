{"test_class": {"identifier": "ActorDetailEntityToActorTest", "superclass": "extends UnitTest", "interfaces": "", "fields": [{"original_string": "@Mock private ActorEntity actorEntityMock;", "modifier": "@Mock private", "type": "ActorEntity", "declarator": "actorEntityMock", "var_name": "actorEntityMock"}, {"original_string": "@Mock private Actor actorMock;", "modifier": "@Mock private", "type": "Actor", "declarator": "actorMock", "var_name": "actorMock"}, {"original_string": "@Mock private List<CinemaEntity> cinemaEntitiesMock;", "modifier": "@Mock private", "type": "List<CinemaEntity>", "declarator": "cinemaEntitiesMock", "var_name": "cinemaEntitiesMock"}, {"original_string": "@Mock private Iterator<CinemaEntity> cinemaEntityIteratorMock;", "modifier": "@Mock private", "type": "Iterator<CinemaEntity>", "declarator": "cinemaEntityIteratorMock", "var_name": "cinemaEntityIteratorMock"}, {"original_string": "private ActorDetailEntityToActor mapper;", "modifier": "private", "type": "ActorDetailEntityToActor", "declarator": "mapper", "var_name": "mapper"}], "file": "app/src/test/java/com/ru/devit/mediateka/models/mapper/ActorDetailEntityToActorTest.java"}, "test_case": {"identifier": "correctlyMapActorEntityToActor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void correctlyMapActorEntityToActor(){\n        String expectedName = \"John\";\n        when(actorEntityMock.getActorName()).thenReturn(\"John\");\n\n        final Actor actor = mapper.reverseMap(actorEntityMock);\n        assertNotNull(actor);\n        assertThat(actor.getName() , is(expectedName));\n    }", "signature": "void correctlyMapActorEntityToActor()", "full_signature": "@Test public void correctlyMapActorEntityToActor()", "class_method_signature": "ActorDetailEntityToActorTest.correctlyMapActorEntityToActor()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getActorName", "reverseMap", "assertNotNull", "assertThat", "getName", "is"]}, "focal_class": {"identifier": "ActorDetailEntityToActor", "superclass": "extends Mapper<Actor , ActorEntity>", "interfaces": "", "fields": [], "methods": [{"identifier": "map", "parameters": "(final Actor value)", "modifiers": "@Override public", "return": "ActorEntity", "signature": "ActorEntity map(final Actor value)", "full_signature": "@Override public ActorEntity map(final Actor value)", "class_method_signature": "ActorDetailEntityToActor.map(final Actor value)", "testcase": false, "constructor": false}, {"identifier": "reverseMap", "parameters": "(final ActorEntity value)", "modifiers": "@Override public", "return": "Actor", "signature": "Actor reverseMap(final ActorEntity value)", "full_signature": "@Override public Actor reverseMap(final ActorEntity value)", "class_method_signature": "ActorDetailEntityToActor.reverseMap(final ActorEntity value)", "testcase": false, "constructor": false}, {"identifier": "mapCinemas", "parameters": "(List<Cinema> cinemas)", "modifiers": "public", "return": "List<CinemaEntity>", "signature": "List<CinemaEntity> mapCinemas(List<Cinema> cinemas)", "full_signature": "public List<CinemaEntity> mapCinemas(List<Cinema> cinemas)", "class_method_signature": "ActorDetailEntityToActor.mapCinemas(List<Cinema> cinemas)", "testcase": false, "constructor": false}, {"identifier": "mapDetailActor", "parameters": "(final ActorEntity value , final List<CinemaEntity> cinemaEntities)", "modifiers": "public", "return": "Actor", "signature": "Actor mapDetailActor(final ActorEntity value , final List<CinemaEntity> cinemaEntities)", "full_signature": "public Actor mapDetailActor(final ActorEntity value , final List<CinemaEntity> cinemaEntities)", "class_method_signature": "ActorDetailEntityToActor.mapDetailActor(final ActorEntity value , final List<CinemaEntity> cinemaEntities)", "testcase": false, "constructor": false}, {"identifier": "fillActor", "parameters": "(Actor actor, ActorEntity value)", "modifiers": "private", "return": "void", "signature": "void fillActor(Actor actor, ActorEntity value)", "full_signature": "private void fillActor(Actor actor, ActorEntity value)", "class_method_signature": "ActorDetailEntityToActor.fillActor(Actor actor, ActorEntity value)", "testcase": false, "constructor": false}, {"identifier": "fillActorEntity", "parameters": "(ActorEntity actorEntity, Actor value)", "modifiers": "private", "return": "void", "signature": "void fillActorEntity(ActorEntity actorEntity, Actor value)", "full_signature": "private void fillActorEntity(ActorEntity actorEntity, Actor value)", "class_method_signature": "ActorDetailEntityToActor.fillActorEntity(ActorEntity actorEntity, Actor value)", "testcase": false, "constructor": false}, {"identifier": "fillCinema", "parameters": "(Cinema cinema , CinemaEntity cinemaEntity)", "modifiers": "private", "return": "void", "signature": "void fillCinema(Cinema cinema , CinemaEntity cinemaEntity)", "full_signature": "private void fillCinema(Cinema cinema , CinemaEntity cinemaEntity)", "class_method_signature": "ActorDetailEntityToActor.fillCinema(Cinema cinema , CinemaEntity cinemaEntity)", "testcase": false, "constructor": false}, {"identifier": "fillCinemaEntity", "parameters": "(CinemaEntity cinemaEntity , Cinema cinema)", "modifiers": "private", "return": "void", "signature": "void fillCinemaEntity(CinemaEntity cinemaEntity , Cinema cinema)", "full_signature": "private void fillCinemaEntity(CinemaEntity cinemaEntity , Cinema cinema)", "class_method_signature": "ActorDetailEntityToActor.fillCinemaEntity(CinemaEntity cinemaEntity , Cinema cinema)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/ru/devit/mediateka/models/mapper/ActorDetailEntityToActor.java"}, "focal_method": {"identifier": "reverseMap", "parameters": "(final ActorEntity value)", "modifiers": "@Override public", "return": "Actor", "body": "@Override\n    public Actor reverseMap(final ActorEntity value) {\n        final Actor actor = new Actor();\n        fillActor(actor, value);\n        return actor;\n    }", "signature": "Actor reverseMap(final ActorEntity value)", "full_signature": "@Override public Actor reverseMap(final ActorEntity value)", "class_method_signature": "ActorDetailEntityToActor.reverseMap(final ActorEntity value)", "testcase": false, "constructor": false, "invocations": ["fillActor"]}, "repository": {"repo_id": 132759831, "url": "https://github.com/Devit951/Mediateka", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 33, "size": 679, "license": "licensed"}}