{"test_class": {"identifier": "DateUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/common/src/test/java/com/alipay/sofa/rpc/common/utils/DateUtilsTest.java"}, "test_case": {"identifier": "getDelayToNextMinute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getDelayToNextMinute() throws Exception {\n        long now = System.currentTimeMillis();\n        int delay = DateUtils.getDelayToNextMinute(now);\n        Assert.assertTrue(delay < 60000);\n    }", "signature": "void getDelayToNextMinute()", "full_signature": "@Test public void getDelayToNextMinute()", "class_method_signature": "DateUtilsTest.getDelayToNextMinute()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "getDelayToNextMinute", "assertTrue"]}, "focal_class": {"identifier": "DateUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int    MILLISECONDS_PER_SECONDE = 1000;", "modifier": "public static final", "type": "int", "declarator": "MILLISECONDS_PER_SECONDE = 1000", "var_name": "MILLISECONDS_PER_SECONDE"}, {"original_string": "public static final int    MILLISECONDS_PER_MINUTE  = 60000;", "modifier": "public static final", "type": "int", "declarator": "MILLISECONDS_PER_MINUTE  = 60000", "var_name": "MILLISECONDS_PER_MINUTE"}, {"original_string": "public static final int    MILLISECONDS_PER_HOUR    = 3600000;", "modifier": "public static final", "type": "int", "declarator": "MILLISECONDS_PER_HOUR    = 3600000", "var_name": "MILLISECONDS_PER_HOUR"}, {"original_string": "public static final long   MILLISECONDS_PER_DAY     = 86400000;", "modifier": "public static final", "type": "long", "declarator": "MILLISECONDS_PER_DAY     = 86400000", "var_name": "MILLISECONDS_PER_DAY"}, {"original_string": "public static final String DATE_FORMAT_TIME         = \"yyyy-MM-dd HH:mm:ss\";", "modifier": "public static final", "type": "String", "declarator": "DATE_FORMAT_TIME         = \"yyyy-MM-dd HH:mm:ss\"", "var_name": "DATE_FORMAT_TIME"}, {"original_string": "public static final String DATE_FORMAT_MILLS_TIME   = \"yyyy-MM-dd HH:mm:ss.SSS\";", "modifier": "public static final", "type": "String", "declarator": "DATE_FORMAT_MILLS_TIME   = \"yyyy-MM-dd HH:mm:ss.SSS\"", "var_name": "DATE_FORMAT_MILLS_TIME"}], "methods": [{"identifier": "getDelayToNextMinute", "parameters": "(long rightnow)", "modifiers": "public static", "return": "int", "signature": "int getDelayToNextMinute(long rightnow)", "full_signature": "public static int getDelayToNextMinute(long rightnow)", "class_method_signature": "DateUtils.getDelayToNextMinute(long rightnow)", "testcase": false, "constructor": false}, {"identifier": "getPreMinuteMills", "parameters": "(long rightnow)", "modifiers": "public static", "return": "long", "signature": "long getPreMinuteMills(long rightnow)", "full_signature": "public static long getPreMinuteMills(long rightnow)", "class_method_signature": "DateUtils.getPreMinuteMills(long rightnow)", "testcase": false, "constructor": false}, {"identifier": "dateToStr", "parameters": "(Date date)", "modifiers": "public static", "return": "String", "signature": "String dateToStr(Date date)", "full_signature": "public static String dateToStr(Date date)", "class_method_signature": "DateUtils.dateToStr(Date date)", "testcase": false, "constructor": false}, {"identifier": "dateToStr", "parameters": "(Date date, String format)", "modifiers": "public static", "return": "String", "signature": "String dateToStr(Date date, String format)", "full_signature": "public static String dateToStr(Date date, String format)", "class_method_signature": "DateUtils.dateToStr(Date date, String format)", "testcase": false, "constructor": false}, {"identifier": "strToDate", "parameters": "(String dateStr)", "modifiers": "public static", "return": "Date", "signature": "Date strToDate(String dateStr)", "full_signature": "public static Date strToDate(String dateStr)", "class_method_signature": "DateUtils.strToDate(String dateStr)", "testcase": false, "constructor": false}, {"identifier": "strToLong", "parameters": "(String dateStr)", "modifiers": "public static", "return": "Long", "signature": "Long strToLong(String dateStr)", "full_signature": "public static Long strToLong(String dateStr)", "class_method_signature": "DateUtils.strToLong(String dateStr)", "testcase": false, "constructor": false}, {"identifier": "strToDate", "parameters": "(String dateStr, String format)", "modifiers": "public static", "return": "Date", "signature": "Date strToDate(String dateStr, String format)", "full_signature": "public static Date strToDate(String dateStr, String format)", "class_method_signature": "DateUtils.strToDate(String dateStr, String format)", "testcase": false, "constructor": false}, {"identifier": "dateToMillisStr", "parameters": "(Date date)", "modifiers": "public static", "return": "String", "signature": "String dateToMillisStr(Date date)", "full_signature": "public static String dateToMillisStr(Date date)", "class_method_signature": "DateUtils.dateToMillisStr(Date date)", "testcase": false, "constructor": false}, {"identifier": "millisStrToDate", "parameters": "(String millisDateStr)", "modifiers": "public static", "return": "Date", "signature": "Date millisStrToDate(String millisDateStr)", "full_signature": "public static Date millisStrToDate(String millisDateStr)", "class_method_signature": "DateUtils.millisStrToDate(String millisDateStr)", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/com/alipay/sofa/rpc/common/utils/DateUtils.java"}, "focal_method": {"identifier": "getDelayToNextMinute", "parameters": "(long rightnow)", "modifiers": "public static", "return": "int", "body": "public static int getDelayToNextMinute(long rightnow) {\n        return (int) (MILLISECONDS_PER_MINUTE - (rightnow % MILLISECONDS_PER_MINUTE));\n    }", "signature": "int getDelayToNextMinute(long rightnow)", "full_signature": "public static int getDelayToNextMinute(long rightnow)", "class_method_signature": "DateUtils.getDelayToNextMinute(long rightnow)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}