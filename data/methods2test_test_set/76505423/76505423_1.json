{"test_class": {"identifier": "CodeOutputTest", "superclass": "", "interfaces": "", "fields": [], "file": "yqlplus_engine/src/test/java/com/yahoo/yqlplus/engine/internal/code/CodeOutputTest.java"}, "test_case": {"identifier": "testIndent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIndent() {\n        CodeOutput output = new CodeOutput();\n        output.println(\"a\");\n        output.indent();\n        output.println(\"b\");\n        output.dedent();\n        output.println(\"c\");\n        Assert.assertEquals(output.toString(), \"a\\n   b\\nc\\n\");\n    }", "signature": "void testIndent()", "full_signature": "@Test public void testIndent()", "class_method_signature": "CodeOutputTest.testIndent()", "testcase": true, "constructor": false, "invocations": ["println", "indent", "println", "dedent", "println", "assertEquals", "toString"]}, "focal_class": {"identifier": "CodeOutput", "superclass": "extends CodeChunk", "interfaces": "implements CodeBlock", "fields": [{"original_string": "private final Env env;", "modifier": "private final", "type": "Env", "declarator": "env", "var_name": "env"}, {"original_string": "private final StringBuilder indent;", "modifier": "private final", "type": "StringBuilder", "declarator": "indent", "var_name": "indent"}, {"original_string": "private final int blockIndent;", "modifier": "private final", "type": "int", "declarator": "blockIndent", "var_name": "blockIndent"}, {"original_string": "private StringBuilder buffer;", "modifier": "private", "type": "StringBuilder", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private boolean begin = true;", "modifier": "private", "type": "boolean", "declarator": "begin = true", "var_name": "begin"}], "methods": [{"identifier": "toDumpString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toDumpString()", "full_signature": "public String toDumpString()", "class_method_signature": "CodeOutput.toDumpString()", "testcase": false, "constructor": false}, {"identifier": "CodeOutput", "parameters": "()", "modifiers": "public", "return": "", "signature": " CodeOutput()", "full_signature": "public  CodeOutput()", "class_method_signature": "CodeOutput.CodeOutput()", "testcase": false, "constructor": true}, {"identifier": "CodeOutput", "parameters": "(Env env, String indent, StringBuilder buffer)", "modifiers": "protected", "return": "", "signature": " CodeOutput(Env env, String indent, StringBuilder buffer)", "full_signature": "protected  CodeOutput(Env env, String indent, StringBuilder buffer)", "class_method_signature": "CodeOutput.CodeOutput(Env env, String indent, StringBuilder buffer)", "testcase": false, "constructor": true}, {"identifier": "getWriter", "parameters": "()", "modifiers": "@Override public", "return": "Writer", "signature": "Writer getWriter()", "full_signature": "@Override public Writer getWriter()", "class_method_signature": "CodeOutput.getWriter()", "testcase": false, "constructor": false}, {"identifier": "renderChunk", "parameters": "(StringBuilder output)", "modifiers": "@Override protected", "return": "void", "signature": "void renderChunk(StringBuilder output)", "full_signature": "@Override protected void renderChunk(StringBuilder output)", "class_method_signature": "CodeOutput.renderChunk(StringBuilder output)", "testcase": false, "constructor": false}, {"identifier": "indent", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void indent()", "full_signature": "@Override public void indent()", "class_method_signature": "CodeOutput.indent()", "testcase": false, "constructor": false}, {"identifier": "dedent", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dedent()", "full_signature": "@Override public void dedent()", "class_method_signature": "CodeOutput.dedent()", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "(String pattern, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void print(String pattern, Object... args)", "full_signature": "@Override public void print(String pattern, Object... args)", "class_method_signature": "CodeOutput.print(String pattern, Object... args)", "testcase": false, "constructor": false}, {"identifier": "println", "parameters": "(String pattern, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void println(String pattern, Object... args)", "full_signature": "@Override public void println(String pattern, Object... args)", "class_method_signature": "CodeOutput.println(String pattern, Object... args)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(T chunk)", "modifiers": "@Override protected", "return": "T", "signature": "T insert(T chunk)", "full_signature": "@Override protected T insert(T chunk)", "class_method_signature": "CodeOutput.insert(T chunk)", "testcase": false, "constructor": false}, {"identifier": "block", "parameters": "()", "modifiers": "@Override public", "return": "CodeBlock", "signature": "CodeBlock block()", "full_signature": "@Override public CodeBlock block()", "class_method_signature": "CodeOutput.block()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(CodeRenderable renderable)", "modifiers": "public", "return": "CodeOutput", "signature": "CodeOutput add(CodeRenderable renderable)", "full_signature": "public CodeOutput add(CodeRenderable renderable)", "class_method_signature": "CodeOutput.add(CodeRenderable renderable)", "testcase": false, "constructor": false}, {"identifier": "gensym", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String gensym()", "full_signature": "@Override public String gensym()", "class_method_signature": "CodeOutput.gensym()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "CodeOutput.toString()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(CharSequence csq)", "modifiers": "@Override public", "return": "void", "signature": "void append(CharSequence csq)", "full_signature": "@Override public void append(CharSequence csq)", "class_method_signature": "CodeOutput.append(CharSequence csq)", "testcase": false, "constructor": false}], "file": "yqlplus_engine/src/main/java/com/yahoo/yqlplus/engine/internal/code/CodeOutput.java"}, "focal_method": {"identifier": "indent", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void indent() {\n        indent.append(\"   \");\n    }", "signature": "void indent()", "full_signature": "@Override public void indent()", "class_method_signature": "CodeOutput.indent()", "testcase": false, "constructor": false, "invocations": ["append"]}, "repository": {"repo_id": 76505423, "url": "https://github.com/yahoo/yql-plus", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 30, "size": 1315, "license": "licensed"}}