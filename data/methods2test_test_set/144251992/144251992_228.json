{"test_class": {"identifier": "HibernateSearchServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HibernateSearchService hibernateSearchService;", "modifier": "private", "type": "HibernateSearchService", "declarator": "hibernateSearchService", "var_name": "hibernateSearchService"}], "file": "backend/project-board/src/test/java/de/adesso/projectboard/base/search/HibernateSearchServiceTest.java"}, "test_case": {"identifier": "isIndexedEntityReturnsFalseWhenNotAnEntity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isIndexedEntityReturnsFalseWhenNotAnEntity() {\n        // given / when / then\n        assertThat(hibernateSearchService.isIndexedEntity(String.class)).isFalse();\n    }", "signature": "void isIndexedEntityReturnsFalseWhenNotAnEntity()", "full_signature": "@Test public void isIndexedEntityReturnsFalseWhenNotAnEntity()", "class_method_signature": "HibernateSearchServiceTest.isIndexedEntityReturnsFalseWhenNotAnEntity()", "testcase": true, "constructor": false, "invocations": ["isFalse", "assertThat", "isIndexedEntity"]}, "focal_class": {"identifier": "HibernateSearchService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MAX_CLAUSE_COUNT = 4096;", "modifier": "private static final", "type": "int", "declarator": "MAX_CLAUSE_COUNT = 4096", "var_name": "MAX_CLAUSE_COUNT"}, {"original_string": "private static final String LOB_FIELD_NAME = \"lob\";", "modifier": "private static final", "type": "String", "declarator": "LOB_FIELD_NAME = \"lob\"", "var_name": "LOB_FIELD_NAME"}, {"original_string": "private static final String STATUS_FIELD_NAME = \"status\";", "modifier": "private static final", "type": "String", "declarator": "STATUS_FIELD_NAME = \"status\"", "var_name": "STATUS_FIELD_NAME"}, {"original_string": "@PersistenceContext\n    EntityManager entityManager;", "modifier": "@PersistenceContext", "type": "EntityManager", "declarator": "entityManager", "var_name": "entityManager"}, {"original_string": "final Map<Class<?>, List<String>> classIndexedFieldMap;", "modifier": "final", "type": "Map<Class<?>, List<String>>", "declarator": "classIndexedFieldMap", "var_name": "classIndexedFieldMap"}, {"original_string": "private final Set<String> statusWithLobConstraint;", "modifier": "private final", "type": "Set<String>", "declarator": "statusWithLobConstraint", "var_name": "statusWithLobConstraint"}, {"original_string": "private final Set<String> excludedStatus;", "modifier": "private final", "type": "Set<String>", "declarator": "excludedStatus", "var_name": "excludedStatus"}], "methods": [{"identifier": "HibernateSearchService", "parameters": "(@NotNull Collection<String> statusWithLobConstraint, @NotNull Collection<String> excludedStatus)", "modifiers": "public", "return": "", "signature": " HibernateSearchService(@NotNull Collection<String> statusWithLobConstraint, @NotNull Collection<String> excludedStatus)", "full_signature": "public  HibernateSearchService(@NotNull Collection<String> statusWithLobConstraint, @NotNull Collection<String> excludedStatus)", "class_method_signature": "HibernateSearchService.HibernateSearchService(@NotNull Collection<String> statusWithLobConstraint, @NotNull Collection<String> excludedStatus)", "testcase": false, "constructor": true}, {"identifier": "searchProjects", "parameters": "(@NonNull String simpleQueryString, String lob)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<Project>", "signature": "List<Project> searchProjects(@NonNull String simpleQueryString, String lob)", "full_signature": "@SuppressWarnings(\"unchecked\") public List<Project> searchProjects(@NonNull String simpleQueryString, String lob)", "class_method_signature": "HibernateSearchService.searchProjects(@NonNull String simpleQueryString, String lob)", "testcase": false, "constructor": false}, {"identifier": "searchProjects", "parameters": "(@NonNull String simpleQueryString, @NonNull Pageable pageable, String lob)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Page<Project>", "signature": "Page<Project> searchProjects(@NonNull String simpleQueryString, @NonNull Pageable pageable, String lob)", "full_signature": "@SuppressWarnings(\"unchecked\") public Page<Project> searchProjects(@NonNull String simpleQueryString, @NonNull Pageable pageable, String lob)", "class_method_signature": "HibernateSearchService.searchProjects(@NonNull String simpleQueryString, @NonNull Pageable pageable, String lob)", "testcase": false, "constructor": false}, {"identifier": "searchUserData", "parameters": "(@NonNull List<User> users, @NonNull String simpleQueryString)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<UserData>", "signature": "List<UserData> searchUserData(@NonNull List<User> users, @NonNull String simpleQueryString)", "full_signature": "@SuppressWarnings(\"unchecked\") public List<UserData> searchUserData(@NonNull List<User> users, @NonNull String simpleQueryString)", "class_method_signature": "HibernateSearchService.searchUserData(@NonNull List<User> users, @NonNull String simpleQueryString)", "testcase": false, "constructor": false}, {"identifier": "getProjectBaseQuery", "parameters": "(String simpleQueryString, String lob)", "modifiers": "private", "return": "Query", "signature": "Query getProjectBaseQuery(String simpleQueryString, String lob)", "full_signature": "private Query getProjectBaseQuery(String simpleQueryString, String lob)", "class_method_signature": "HibernateSearchService.getProjectBaseQuery(String simpleQueryString, String lob)", "testcase": false, "constructor": false}, {"identifier": "buildLobIndependentOrLobNullOrEqualQuery", "parameters": "(QueryBuilder queryBuilder, String lob)", "modifiers": "private", "return": "Query", "signature": "Query buildLobIndependentOrLobNullOrEqualQuery(QueryBuilder queryBuilder, String lob)", "full_signature": "private Query buildLobIndependentOrLobNullOrEqualQuery(QueryBuilder queryBuilder, String lob)", "class_method_signature": "HibernateSearchService.buildLobIndependentOrLobNullOrEqualQuery(QueryBuilder queryBuilder, String lob)", "testcase": false, "constructor": false}, {"identifier": "buildNotInQuery", "parameters": "(QueryBuilder queryBuilder, String fieldName, Collection<String> unwantedValues)", "modifiers": "private", "return": "Query", "signature": "Query buildNotInQuery(QueryBuilder queryBuilder, String fieldName, Collection<String> unwantedValues)", "full_signature": "private Query buildNotInQuery(QueryBuilder queryBuilder, String fieldName, Collection<String> unwantedValues)", "class_method_signature": "HibernateSearchService.buildNotInQuery(QueryBuilder queryBuilder, String fieldName, Collection<String> unwantedValues)", "testcase": false, "constructor": false}, {"identifier": "buildInQuery", "parameters": "(QueryBuilder queryBuilder, String fieldName, Collection<String> wantedValues)", "modifiers": "private", "return": "Query", "signature": "Query buildInQuery(QueryBuilder queryBuilder, String fieldName, Collection<String> wantedValues)", "full_signature": "private Query buildInQuery(QueryBuilder queryBuilder, String fieldName, Collection<String> wantedValues)", "class_method_signature": "HibernateSearchService.buildInQuery(QueryBuilder queryBuilder, String fieldName, Collection<String> wantedValues)", "testcase": false, "constructor": false}, {"identifier": "buildFieldValueEqualsQuery", "parameters": "(QueryBuilder queryBuilder, String fieldName, String value)", "modifiers": "private", "return": "Query", "signature": "Query buildFieldValueEqualsQuery(QueryBuilder queryBuilder, String fieldName, String value)", "full_signature": "private Query buildFieldValueEqualsQuery(QueryBuilder queryBuilder, String fieldName, String value)", "class_method_signature": "HibernateSearchService.buildFieldValueEqualsQuery(QueryBuilder queryBuilder, String fieldName, String value)", "testcase": false, "constructor": false}, {"identifier": "getQuerySearchingForAllIndexedFields", "parameters": "(Class<?> entityType, String simpleQueryString)", "modifiers": "", "return": "Query", "signature": "Query getQuerySearchingForAllIndexedFields(Class<?> entityType, String simpleQueryString)", "full_signature": " Query getQuerySearchingForAllIndexedFields(Class<?> entityType, String simpleQueryString)", "class_method_signature": "HibernateSearchService.getQuerySearchingForAllIndexedFields(Class<?> entityType, String simpleQueryString)", "testcase": false, "constructor": false}, {"identifier": "getNamesOfAnnotatedStringFields", "parameters": "(Class<?> entityType)", "modifiers": "", "return": "List<String>", "signature": "List<String> getNamesOfAnnotatedStringFields(Class<?> entityType)", "full_signature": " List<String> getNamesOfAnnotatedStringFields(Class<?> entityType)", "class_method_signature": "HibernateSearchService.getNamesOfAnnotatedStringFields(Class<?> entityType)", "testcase": false, "constructor": false}, {"identifier": "isIndexedEntity", "parameters": "(Class<?> entityType)", "modifiers": "", "return": "boolean", "signature": "boolean isIndexedEntity(Class<?> entityType)", "full_signature": " boolean isIndexedEntity(Class<?> entityType)", "class_method_signature": "HibernateSearchService.isIndexedEntity(Class<?> entityType)", "testcase": false, "constructor": false}, {"identifier": "indexExistingEntities", "parameters": "(EntityManager initEntityManager)", "modifiers": "", "return": "void", "signature": "void indexExistingEntities(EntityManager initEntityManager)", "full_signature": " void indexExistingEntities(EntityManager initEntityManager)", "class_method_signature": "HibernateSearchService.indexExistingEntities(EntityManager initEntityManager)", "testcase": false, "constructor": false}, {"identifier": "getFullTextEntityManager", "parameters": "()", "modifiers": "", "return": "FullTextEntityManager", "signature": "FullTextEntityManager getFullTextEntityManager()", "full_signature": " FullTextEntityManager getFullTextEntityManager()", "class_method_signature": "HibernateSearchService.getFullTextEntityManager()", "testcase": false, "constructor": false}, {"identifier": "getQueryBuilder", "parameters": "(Class<?> type)", "modifiers": "", "return": "QueryBuilder", "signature": "QueryBuilder getQueryBuilder(Class<?> type)", "full_signature": " QueryBuilder getQueryBuilder(Class<?> type)", "class_method_signature": "HibernateSearchService.getQueryBuilder(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "allToLowerCase", "parameters": "(Collection<String> collection)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> allToLowerCase(Collection<String> collection)", "full_signature": "private Set<String> allToLowerCase(Collection<String> collection)", "class_method_signature": "HibernateSearchService.allToLowerCase(Collection<String> collection)", "testcase": false, "constructor": false}], "file": "backend/project-board/src/main/java/de/adesso/projectboard/base/search/HibernateSearchService.java"}, "focal_method": {"identifier": "isIndexedEntity", "parameters": "(Class<?> entityType)", "modifiers": "", "return": "boolean", "body": "boolean isIndexedEntity(Class<?> entityType) {\n        return Objects.nonNull(entityType.getAnnotation(Entity.class)) &&\n                Objects.nonNull(entityType.getAnnotation(Indexed.class));\n    }", "signature": "boolean isIndexedEntity(Class<?> entityType)", "full_signature": " boolean isIndexedEntity(Class<?> entityType)", "class_method_signature": "HibernateSearchService.isIndexedEntity(Class<?> entityType)", "testcase": false, "constructor": false, "invocations": ["nonNull", "getAnnotation", "nonNull", "getAnnotation"]}, "repository": {"repo_id": 144251992, "url": "https://github.com/adessoAG/project-board", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 2608, "license": "licensed"}}