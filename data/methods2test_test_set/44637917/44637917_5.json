{"test_class": {"identifier": "CassandraDependenciesJobTest", "superclass": "", "interfaces": "", "fields": [], "file": "cassandra3/src/test/java/zipkin2/dependencies/cassandra3/CassandraDependenciesJobTest.java"}, "test_case": {"identifier": "parsePort_defaultsTo9042_multi", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void parsePort_defaultsTo9042_multi() {\n    assertThat(parsePort(\"1.1.1.1:9143,2.2.2.2\"))\n        .isEqualTo(\"9042\");\n  }", "signature": "void parsePort_defaultsTo9042_multi()", "full_signature": "@Test public void parsePort_defaultsTo9042_multi()", "class_method_signature": "CassandraDependenciesJobTest.parsePort_defaultsTo9042_multi()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "parsePort"]}, "focal_class": {"identifier": "CassandraDependenciesJob", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Logger log = LoggerFactory.getLogger(CassandraDependenciesJob.class);", "modifier": "static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(CassandraDependenciesJob.class)", "var_name": "log"}, {"original_string": "final String keyspace;", "modifier": "final", "type": "String", "declarator": "keyspace", "var_name": "keyspace"}, {"original_string": "final long day;", "modifier": "final", "type": "long", "declarator": "day", "var_name": "day"}, {"original_string": "final boolean strictTraceId, inTest;", "modifier": "final", "type": "boolean", "declarator": "strictTraceId", "var_name": "strictTraceId"}, {"original_string": "final String dateStamp;", "modifier": "final", "type": "String", "declarator": "dateStamp", "var_name": "dateStamp"}, {"original_string": "final SparkConf conf;", "modifier": "final", "type": "SparkConf", "declarator": "conf", "var_name": "conf"}, {"original_string": "@Nullable final Runnable logInitializer;", "modifier": "@Nullable final", "type": "Runnable", "declarator": "logInitializer", "var_name": "logInitializer"}], "methods": [{"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "CassandraDependenciesJob.builder()", "testcase": false, "constructor": false}, {"identifier": "CassandraDependenciesJob", "parameters": "(Builder builder)", "modifiers": "", "return": "", "signature": " CassandraDependenciesJob(Builder builder)", "full_signature": "  CassandraDependenciesJob(Builder builder)", "class_method_signature": "CassandraDependenciesJob.CassandraDependenciesJob(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "CassandraDependenciesJob.run()", "testcase": false, "constructor": false}, {"identifier": "flatMapToLinksByTraceId", "parameters": "(\n      CassandraTableScanJavaRDD<CassandraRow> spans,\n      long microsUpper, long microsLower, boolean inTest\n  )", "modifiers": "", "return": "JavaPairRDD<String, DependencyLink>", "signature": "JavaPairRDD<String, DependencyLink> flatMapToLinksByTraceId(\n      CassandraTableScanJavaRDD<CassandraRow> spans,\n      long microsUpper, long microsLower, boolean inTest\n  )", "full_signature": " JavaPairRDD<String, DependencyLink> flatMapToLinksByTraceId(\n      CassandraTableScanJavaRDD<CassandraRow> spans,\n      long microsUpper, long microsLower, boolean inTest\n  )", "class_method_signature": "CassandraDependenciesJob.flatMapToLinksByTraceId(\n      CassandraTableScanJavaRDD<CassandraRow> spans,\n      long microsUpper, long microsLower, boolean inTest\n  )", "testcase": false, "constructor": false}, {"identifier": "getEnv", "parameters": "(String key, String defaultValue)", "modifiers": "static", "return": "String", "signature": "String getEnv(String key, String defaultValue)", "full_signature": "static String getEnv(String key, String defaultValue)", "class_method_signature": "CassandraDependenciesJob.getEnv(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "parseHosts", "parameters": "(String contactPoints)", "modifiers": "static", "return": "String", "signature": "String parseHosts(String contactPoints)", "full_signature": "static String parseHosts(String contactPoints)", "class_method_signature": "CassandraDependenciesJob.parseHosts(String contactPoints)", "testcase": false, "constructor": false}, {"identifier": "parsePort", "parameters": "(String contactPoints)", "modifiers": "static", "return": "String", "signature": "String parsePort(String contactPoints)", "full_signature": "static String parsePort(String contactPoints)", "class_method_signature": "CassandraDependenciesJob.parsePort(String contactPoints)", "testcase": false, "constructor": false}, {"identifier": "traceId", "parameters": "(CassandraRow r)", "modifiers": "static", "return": "String", "signature": "String traceId(CassandraRow r)", "full_signature": "static String traceId(CassandraRow r)", "class_method_signature": "CassandraDependenciesJob.traceId(CassandraRow r)", "testcase": false, "constructor": false}], "file": "cassandra3/src/main/java/zipkin2/dependencies/cassandra3/CassandraDependenciesJob.java"}, "focal_method": {"identifier": "parsePort", "parameters": "(String contactPoints)", "modifiers": "static", "return": "String", "body": "static String parsePort(String contactPoints) {\n    Set<Integer> ports = Sets.newLinkedHashSet();\n    for (String contactPoint : contactPoints.split(\",\", -1)) {\n      HostAndPort parsed = HostAndPort.fromString(contactPoint);\n      ports.add(parsed.getPortOrDefault(9042));\n    }\n    return ports.size() == 1 ? String.valueOf(ports.iterator().next()) : \"9042\";\n  }", "signature": "String parsePort(String contactPoints)", "full_signature": "static String parsePort(String contactPoints)", "class_method_signature": "CassandraDependenciesJob.parsePort(String contactPoints)", "testcase": false, "constructor": false, "invocations": ["newLinkedHashSet", "split", "fromString", "add", "getPortOrDefault", "size", "valueOf", "next", "iterator"]}, "repository": {"repo_id": 44637917, "url": "https://github.com/openzipkin/zipkin-dependencies", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 139, "size": 975, "license": "licensed"}}