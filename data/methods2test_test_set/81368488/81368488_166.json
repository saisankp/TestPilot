{"test_class": {"identifier": "EnumGameVariantGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Translator translator;", "modifier": "@Mock\n    private", "type": "Translator", "declarator": "translator", "var_name": "translator"}], "file": "gazeplay-games-commons/src/test/java/net/gazeplay/commons/gamevariants/generators/EnumGameVariantGeneratorTest.java"}, "test_case": {"identifier": "shouldGetVariants", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldGetVariants() {\n        EnumGameVariantGenerator<TestEnum> variantGenerator\n            = new EnumGameVariantGenerator<>(new TestEnum[]{TestEnum.TEST1, TestEnum.TEST2}, Objects::toString);\n\n        Set<IGameVariant> result = variantGenerator.getVariants();\n        ArrayList<String> expected = new ArrayList<>(List.of(\"TEST1\", \"TEST2\"));\n\n        for (IGameVariant variant : result) {\n            assertTrue(expected.contains(variant.getLabel(translator)));\n        }\n    }", "signature": "void shouldGetVariants()", "full_signature": "@Test void shouldGetVariants()", "class_method_signature": "EnumGameVariantGeneratorTest.shouldGetVariants()", "testcase": true, "constructor": false, "invocations": ["getVariants", "of", "assertTrue", "contains", "getLabel"]}, "focal_class": {"identifier": "EnumGameVariantGenerator", "superclass": "", "interfaces": "implements IGameVariantGenerator", "fields": [{"original_string": "private final K[] enumValues;", "modifier": "private final", "type": "K[]", "declarator": "enumValues", "var_name": "enumValues"}, {"original_string": "private final Function<K, String> extractLabelCodeFunction;", "modifier": "private final", "type": "Function<K, String>", "declarator": "extractLabelCodeFunction", "var_name": "extractLabelCodeFunction"}, {"original_string": "@Getter\n    @Setter\n    private String variantChooseText = \"Choose Game Variant\";", "modifier": "@Getter\n    @Setter\n    private", "type": "String", "declarator": "variantChooseText = \"Choose Game Variant\"", "var_name": "variantChooseText"}], "methods": [{"identifier": "getVariants", "parameters": "()", "modifiers": "@Override public", "return": "Set<IGameVariant>", "signature": "Set<IGameVariant> getVariants()", "full_signature": "@Override public Set<IGameVariant> getVariants()", "class_method_signature": "EnumGameVariantGenerator.getVariants()", "testcase": false, "constructor": false}], "file": "gazeplay-games-commons/src/main/java/net/gazeplay/commons/gamevariants/generators/EnumGameVariantGenerator.java"}, "focal_method": {"identifier": "getVariants", "parameters": "()", "modifiers": "@Override public", "return": "Set<IGameVariant>", "body": "@Override\n    public Set<IGameVariant> getVariants() {\n        final LinkedHashSet<IGameVariant> result = new LinkedHashSet<>();\n        for (final K value : enumValues) {\n            result.add(new EnumGameVariant<>(value, extractLabelCodeFunction));\n        }\n        return result;\n    }", "signature": "Set<IGameVariant> getVariants()", "full_signature": "@Override public Set<IGameVariant> getVariants()", "class_method_signature": "EnumGameVariantGenerator.getVariants()", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}