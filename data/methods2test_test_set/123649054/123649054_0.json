{"test_class": {"identifier": "SQSMessageProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Foo FIRST = new Foo(\"first\");", "modifier": "private static final", "type": "Foo", "declarator": "FIRST = new Foo(\"first\")", "var_name": "FIRST"}, {"original_string": "private static final Foo SECOND = new Foo(\"second\");", "modifier": "private static final", "type": "Foo", "declarator": "SECOND = new Foo(\"second\")", "var_name": "SECOND"}, {"original_string": "private static final Foo THIRD = new Foo(\"third\");", "modifier": "private static final", "type": "Foo", "declarator": "THIRD = new Foo(\"third\")", "var_name": "THIRD"}, {"original_string": "@Mock\n    private SQSMessageDeserializer<Foo> deserializer;", "modifier": "@Mock\n    private", "type": "SQSMessageDeserializer<Foo>", "declarator": "deserializer", "var_name": "deserializer"}, {"original_string": "@Mock\n    private Consumer<Foo> delegate;", "modifier": "@Mock\n    private", "type": "Consumer<Foo>", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private SQSMessageProcessor<Foo> messageProcessor;", "modifier": "private", "type": "SQSMessageProcessor<Foo>", "declarator": "messageProcessor", "var_name": "messageProcessor"}], "file": "aws-serverless-sqs-event-source-java-messageprocessor/src/test/java/com/amazonaws/serverless/sqseventsource/messageprocessor/SQSMessageProcessorTest.java"}, "test_case": {"identifier": "apply", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void apply() throws Exception {\n        doNothing()\n                .doThrow(new RetryMessageException(\"try again later...\").withRetryDelayInSeconds(60))\n                .doThrow(RuntimeException.class)\n                .when(delegate).accept(any(Foo.class));\n\n        Message m1 = new Message().withMessageId(\"1\");\n        Message m2 = new Message().withMessageId(\"2\");\n        Message m3 = new Message().withMessageId(\"3\");\n\n        SQSMessageProcessorRequest request = new SQSMessageProcessorRequest(Lists.newArrayList(m1, m2, m3));\n        SQSMessageProcessorResponse response = messageProcessor.apply(request);\n\n        SQSMessageProcessorResponse expected = new SQSMessageProcessorResponse(Lists.newArrayList(\n                new SQSMessageResult(\"1\", SQSMessageResult.Status.SUCCESS),\n                new SQSMessageResult(\"2\", SQSMessageResult.Status.RETRY, 60),\n                new SQSMessageResult(\"3\", SQSMessageResult.Status.ERROR)\n        ));\n        assertThat(response, is(expected));\n    }", "signature": "void apply()", "full_signature": "@Test public void apply()", "class_method_signature": "SQSMessageProcessorTest.apply()", "testcase": true, "constructor": false, "invocations": ["accept", "when", "doThrow", "doThrow", "doNothing", "withRetryDelayInSeconds", "any", "withMessageId", "withMessageId", "withMessageId", "newArrayList", "apply", "newArrayList", "assertThat", "is"]}, "focal_class": {"identifier": "SQSMessageProcessor", "superclass": "", "interfaces": "implements Function<SQSMessageProcessorRequest, SQSMessageProcessorResponse>", "fields": [{"original_string": "@NonNull\n    private final SQSMessageDeserializer<T> deserializer;", "modifier": "@NonNull\n    private final", "type": "SQSMessageDeserializer<T>", "declarator": "deserializer", "var_name": "deserializer"}, {"original_string": "@NonNull\n    private final Consumer<T> delegate;", "modifier": "@NonNull\n    private final", "type": "Consumer<T>", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "apply", "parameters": "(final SQSMessageProcessorRequest request)", "modifiers": "@Override public", "return": "SQSMessageProcessorResponse", "signature": "SQSMessageProcessorResponse apply(final SQSMessageProcessorRequest request)", "full_signature": "@Override public SQSMessageProcessorResponse apply(final SQSMessageProcessorRequest request)", "class_method_signature": "SQSMessageProcessor.apply(final SQSMessageProcessorRequest request)", "testcase": false, "constructor": false}, {"identifier": "processMessage", "parameters": "(final Message message)", "modifiers": "private", "return": "SQSMessageResult", "signature": "SQSMessageResult processMessage(final Message message)", "full_signature": "private SQSMessageResult processMessage(final Message message)", "class_method_signature": "SQSMessageProcessor.processMessage(final Message message)", "testcase": false, "constructor": false}], "file": "aws-serverless-sqs-event-source-java-messageprocessor/src/main/java/com/amazonaws/serverless/sqseventsource/messageprocessor/SQSMessageProcessor.java"}, "focal_method": {"identifier": "apply", "parameters": "(final SQSMessageProcessorRequest request)", "modifiers": "@Override public", "return": "SQSMessageProcessorResponse", "body": "@Override\n    public SQSMessageProcessorResponse apply(final SQSMessageProcessorRequest request) {\n        List<SQSMessageResult> messageResults = request.getMessages().stream()\n                .map(this::processMessage)\n                .filter(Objects::nonNull)\n                .collect(Collectors.toList());\n        return new SQSMessageProcessorResponse(messageResults);\n    }", "signature": "SQSMessageProcessorResponse apply(final SQSMessageProcessorRequest request)", "full_signature": "@Override public SQSMessageProcessorResponse apply(final SQSMessageProcessorRequest request)", "class_method_signature": "SQSMessageProcessor.apply(final SQSMessageProcessorRequest request)", "testcase": false, "constructor": false, "invocations": ["collect", "filter", "map", "stream", "getMessages", "toList"]}, "repository": {"repo_id": 123649054, "url": "https://github.com/awslabs/aws-serverless-sqs-event-source", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 33, "size": 79, "license": "licensed"}}