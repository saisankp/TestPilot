{"test_class": {"identifier": "BankOCRTest", "superclass": "", "interfaces": "", "fields": [], "file": "Paris/2014/2014-12-04-bank-ocr-group-1-Java-Randori/src/test/java/bank/ocr/BankOCRTest.java"}, "test_case": {"identifier": "it_parses_2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void\n   it_parses_2() {\n      assertThat(parse(\n            \" _ \\n\"\n          + \" _|\\n\"\n          + \"|_ \\n\"\n          + \"   \"))\n        .isEqualTo(2);\n   }", "signature": "void it_parses_2()", "full_signature": "@Test public void it_parses_2()", "class_method_signature": "BankOCRTest.it_parses_2()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "parse"]}, "focal_class": {"identifier": "BankOCR", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Map<List<String>, Integer> dictionary = new HashMap<List<String>, Integer>(10){{\n      put(digit(\n        \"   \",\n        \"  |\",\n        \"  |\",\n        \"   \"), 1);\n      put(digit(\n        \" _ \",\n        \" _|\",\n        \"|_ \",\n        \"   \"), 2);\n      put(digit(\n        \" _ \",\n        \" _|\",\n        \" _|\",\n        \"   \"), 3);\n      put(digit(\n        \"   \",\n        \"|_|\",\n        \"  |\",\n        \"   \"), 4);\n      put(digit(\n        \" _ \",\n        \"|_ \",\n        \" _|\",\n        \"   \"), 5);\n      put(digit(\n        \" _ \",\n        \"|_ \",\n        \"|_|\",\n        \"   \"), 6);\n      put(digit(\n        \" _ \",\n        \"  |\",\n        \"  |\",\n        \"   \"), 7);\n      put(digit(\n        \" _ \",\n        \"|_|\",\n        \"|_|\",\n        \"   \"), 8);\n      put(digit(\n        \" _ \",\n        \"|_|\",\n        \" _|\",\n        \"   \"), 9);\n   }} ;", "modifier": "private final static", "type": "Map<List<String>, Integer>", "declarator": "dictionary = new HashMap<List<String>, Integer>(10){{\n      put(digit(\n        \"   \",\n        \"  |\",\n        \"  |\",\n        \"   \"), 1);\n      put(digit(\n        \" _ \",\n        \" _|\",\n        \"|_ \",\n        \"   \"), 2);\n      put(digit(\n        \" _ \",\n        \" _|\",\n        \" _|\",\n        \"   \"), 3);\n      put(digit(\n        \"   \",\n        \"|_|\",\n        \"  |\",\n        \"   \"), 4);\n      put(digit(\n        \" _ \",\n        \"|_ \",\n        \" _|\",\n        \"   \"), 5);\n      put(digit(\n        \" _ \",\n        \"|_ \",\n        \"|_|\",\n        \"   \"), 6);\n      put(digit(\n        \" _ \",\n        \"  |\",\n        \"  |\",\n        \"   \"), 7);\n      put(digit(\n        \" _ \",\n        \"|_|\",\n        \"|_|\",\n        \"   \"), 8);\n      put(digit(\n        \" _ \",\n        \"|_|\",\n        \" _|\",\n        \"   \"), 9);\n   }}", "var_name": "dictionary"}, {"original_string": "public static final int DIGIT_WIDTH = 3;", "modifier": "public static final", "type": "int", "declarator": "DIGIT_WIDTH = 3", "var_name": "DIGIT_WIDTH"}], "methods": [{"identifier": "digit", "parameters": "(String... digitLines)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> digit(String... digitLines)", "full_signature": "private static List<String> digit(String... digitLines)", "class_method_signature": "BankOCR.digit(String... digitLines)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String lcdText)", "modifiers": "public static", "return": "int", "signature": "int parse(String lcdText)", "full_signature": "public static int parse(String lcdText)", "class_method_signature": "BankOCR.parse(String lcdText)", "testcase": false, "constructor": false}, {"identifier": "parseDigits", "parameters": "(List<List<String>> lcdText)", "modifiers": "private static", "return": "Integer", "signature": "Integer parseDigits(List<List<String>> lcdText)", "full_signature": "private static Integer parseDigits(List<List<String>> lcdText)", "class_method_signature": "BankOCR.parseDigits(List<List<String>> lcdText)", "testcase": false, "constructor": false}, {"identifier": "parseDigit", "parameters": "(List<String> lcdText)", "modifiers": "private static", "return": "Integer", "signature": "Integer parseDigit(List<String> lcdText)", "full_signature": "private static Integer parseDigit(List<String> lcdText)", "class_method_signature": "BankOCR.parseDigit(List<String> lcdText)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(String lcdText)", "modifiers": "private static", "return": "List<List<String>>", "signature": "List<List<String>> split(String lcdText)", "full_signature": "private static List<List<String>> split(String lcdText)", "class_method_signature": "BankOCR.split(String lcdText)", "testcase": false, "constructor": false}, {"identifier": "extractDigit", "parameters": "(int digitIndex, FluentIterable<String> lines)", "modifiers": "private static", "return": "ImmutableList<String>", "signature": "ImmutableList<String> extractDigit(int digitIndex, FluentIterable<String> lines)", "full_signature": "private static ImmutableList<String> extractDigit(int digitIndex, FluentIterable<String> lines)", "class_method_signature": "BankOCR.extractDigit(int digitIndex, FluentIterable<String> lines)", "testcase": false, "constructor": false}], "file": "Paris/2014/2014-12-04-bank-ocr-group-1-Java-Randori/src/main/java/bank/ocr/BankOCR.java"}, "focal_method": {"identifier": "parse", "parameters": "(String lcdText)", "modifiers": "public static", "return": "int", "body": "public static int parse(String lcdText) {\n      return parseDigits(split(lcdText));\n   }", "signature": "int parse(String lcdText)", "full_signature": "public static int parse(String lcdText)", "class_method_signature": "BankOCR.parse(String lcdText)", "testcase": false, "constructor": false, "invocations": ["parseDigits", "split"]}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}