{"test_class": {"identifier": "SubscriptionStateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SubscriptionState state = new SubscriptionState(OffsetResetStrategy.EARLIEST);", "modifier": "private final", "type": "SubscriptionState", "declarator": "state = new SubscriptionState(OffsetResetStrategy.EARLIEST)", "var_name": "state"}, {"original_string": "private final String topic = \"test\";", "modifier": "private final", "type": "String", "declarator": "topic = \"test\"", "var_name": "topic"}, {"original_string": "private final String topic1 = \"test1\";", "modifier": "private final", "type": "String", "declarator": "topic1 = \"test1\"", "var_name": "topic1"}, {"original_string": "private final TopicPartition tp0 = new TopicPartition(\"test\", 0);", "modifier": "private final", "type": "TopicPartition", "declarator": "tp0 = new TopicPartition(\"test\", 0)", "var_name": "tp0"}, {"original_string": "private final TopicPartition tp1 = new TopicPartition(\"test\", 1);", "modifier": "private final", "type": "TopicPartition", "declarator": "tp1 = new TopicPartition(\"test\", 1)", "var_name": "tp1"}, {"original_string": "private final MockRebalanceListener rebalanceListener = new MockRebalanceListener();", "modifier": "private final", "type": "MockRebalanceListener", "declarator": "rebalanceListener = new MockRebalanceListener()", "var_name": "rebalanceListener"}], "file": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/SubscriptionStateTest.java"}, "test_case": {"identifier": "cantChangePositionForNonAssignedPartition", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void cantChangePositionForNonAssignedPartition() {\n        state.position(tp0, 1);\n    }", "signature": "void cantChangePositionForNonAssignedPartition()", "full_signature": "@Test(expected = IllegalStateException.class) public void cantChangePositionForNonAssignedPartition()", "class_method_signature": "SubscriptionStateTest.cantChangePositionForNonAssignedPartition()", "testcase": true, "constructor": false, "invocations": ["position"]}, "focal_class": {"identifier": "SubscriptionState", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SubscriptionType subscriptionType;", "modifier": "private", "type": "SubscriptionType", "declarator": "subscriptionType", "var_name": "subscriptionType"}, {"original_string": "private Pattern subscribedPattern;", "modifier": "private", "type": "Pattern", "declarator": "subscribedPattern", "var_name": "subscribedPattern"}, {"original_string": "private final Set<String> subscription;", "modifier": "private final", "type": "Set<String>", "declarator": "subscription", "var_name": "subscription"}, {"original_string": "private final Set<TopicPartition> userAssignment;", "modifier": "private final", "type": "Set<TopicPartition>", "declarator": "userAssignment", "var_name": "userAssignment"}, {"original_string": "private final Map<TopicPartition, TopicPartitionState> assignment;", "modifier": "private final", "type": "Map<TopicPartition, TopicPartitionState>", "declarator": "assignment", "var_name": "assignment"}, {"original_string": "private final Set<String> groupSubscription;", "modifier": "private final", "type": "Set<String>", "declarator": "groupSubscription", "var_name": "groupSubscription"}, {"original_string": "private boolean needsPartitionAssignment;", "modifier": "private", "type": "boolean", "declarator": "needsPartitionAssignment", "var_name": "needsPartitionAssignment"}, {"original_string": "private boolean needsFetchCommittedOffsets;", "modifier": "private", "type": "boolean", "declarator": "needsFetchCommittedOffsets", "var_name": "needsFetchCommittedOffsets"}, {"original_string": "private final OffsetResetStrategy defaultResetStrategy;", "modifier": "private final", "type": "OffsetResetStrategy", "declarator": "defaultResetStrategy", "var_name": "defaultResetStrategy"}, {"original_string": "private ConsumerRebalanceListener listener;", "modifier": "private", "type": "ConsumerRebalanceListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "private static final String SUBSCRIPTION_EXCEPTION_MESSAGE =\n        \"Subscription to topics, partitions and pattern are mutually exclusive\";", "modifier": "private static final", "type": "String", "declarator": "SUBSCRIPTION_EXCEPTION_MESSAGE =\n        \"Subscription to topics, partitions and pattern are mutually exclusive\"", "var_name": "SUBSCRIPTION_EXCEPTION_MESSAGE"}], "methods": [{"identifier": "setSubscriptionType", "parameters": "(SubscriptionType type)", "modifiers": "private", "return": "void", "signature": "void setSubscriptionType(SubscriptionType type)", "full_signature": "private void setSubscriptionType(SubscriptionType type)", "class_method_signature": "SubscriptionState.setSubscriptionType(SubscriptionType type)", "testcase": false, "constructor": false}, {"identifier": "SubscriptionState", "parameters": "(OffsetResetStrategy defaultResetStrategy)", "modifiers": "public", "return": "", "signature": " SubscriptionState(OffsetResetStrategy defaultResetStrategy)", "full_signature": "public  SubscriptionState(OffsetResetStrategy defaultResetStrategy)", "class_method_signature": "SubscriptionState.SubscriptionState(OffsetResetStrategy defaultResetStrategy)", "testcase": false, "constructor": true}, {"identifier": "subscribe", "parameters": "(Collection<String> topics, ConsumerRebalanceListener listener)", "modifiers": "public", "return": "void", "signature": "void subscribe(Collection<String> topics, ConsumerRebalanceListener listener)", "full_signature": "public void subscribe(Collection<String> topics, ConsumerRebalanceListener listener)", "class_method_signature": "SubscriptionState.subscribe(Collection<String> topics, ConsumerRebalanceListener listener)", "testcase": false, "constructor": false}, {"identifier": "changeSubscription", "parameters": "(Collection<String> topicsToSubscribe)", "modifiers": "public", "return": "void", "signature": "void changeSubscription(Collection<String> topicsToSubscribe)", "full_signature": "public void changeSubscription(Collection<String> topicsToSubscribe)", "class_method_signature": "SubscriptionState.changeSubscription(Collection<String> topicsToSubscribe)", "testcase": false, "constructor": false}, {"identifier": "groupSubscribe", "parameters": "(Collection<String> topics)", "modifiers": "public", "return": "void", "signature": "void groupSubscribe(Collection<String> topics)", "full_signature": "public void groupSubscribe(Collection<String> topics)", "class_method_signature": "SubscriptionState.groupSubscribe(Collection<String> topics)", "testcase": false, "constructor": false}, {"identifier": "needReassignment", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void needReassignment()", "full_signature": "public void needReassignment()", "class_method_signature": "SubscriptionState.needReassignment()", "testcase": false, "constructor": false}, {"identifier": "assignFromUser", "parameters": "(Collection<TopicPartition> partitions)", "modifiers": "public", "return": "void", "signature": "void assignFromUser(Collection<TopicPartition> partitions)", "full_signature": "public void assignFromUser(Collection<TopicPartition> partitions)", "class_method_signature": "SubscriptionState.assignFromUser(Collection<TopicPartition> partitions)", "testcase": false, "constructor": false}, {"identifier": "assignFromSubscribed", "parameters": "(Collection<TopicPartition> assignments)", "modifiers": "public", "return": "void", "signature": "void assignFromSubscribed(Collection<TopicPartition> assignments)", "full_signature": "public void assignFromSubscribed(Collection<TopicPartition> assignments)", "class_method_signature": "SubscriptionState.assignFromSubscribed(Collection<TopicPartition> assignments)", "testcase": false, "constructor": false}, {"identifier": "subscribe", "parameters": "(Pattern pattern, ConsumerRebalanceListener listener)", "modifiers": "public", "return": "void", "signature": "void subscribe(Pattern pattern, ConsumerRebalanceListener listener)", "full_signature": "public void subscribe(Pattern pattern, ConsumerRebalanceListener listener)", "class_method_signature": "SubscriptionState.subscribe(Pattern pattern, ConsumerRebalanceListener listener)", "testcase": false, "constructor": false}, {"identifier": "hasPatternSubscription", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasPatternSubscription()", "full_signature": "public boolean hasPatternSubscription()", "class_method_signature": "SubscriptionState.hasPatternSubscription()", "testcase": false, "constructor": false}, {"identifier": "unsubscribe", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void unsubscribe()", "full_signature": "public void unsubscribe()", "class_method_signature": "SubscriptionState.unsubscribe()", "testcase": false, "constructor": false}, {"identifier": "getSubscribedPattern", "parameters": "()", "modifiers": "public", "return": "Pattern", "signature": "Pattern getSubscribedPattern()", "full_signature": "public Pattern getSubscribedPattern()", "class_method_signature": "SubscriptionState.getSubscribedPattern()", "testcase": false, "constructor": false}, {"identifier": "subscription", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> subscription()", "full_signature": "public Set<String> subscription()", "class_method_signature": "SubscriptionState.subscription()", "testcase": false, "constructor": false}, {"identifier": "pausedPartitions", "parameters": "()", "modifiers": "public", "return": "Set<TopicPartition>", "signature": "Set<TopicPartition> pausedPartitions()", "full_signature": "public Set<TopicPartition> pausedPartitions()", "class_method_signature": "SubscriptionState.pausedPartitions()", "testcase": false, "constructor": false}, {"identifier": "groupSubscription", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> groupSubscription()", "full_signature": "public Set<String> groupSubscription()", "class_method_signature": "SubscriptionState.groupSubscription()", "testcase": false, "constructor": false}, {"identifier": "assignedState", "parameters": "(TopicPartition tp)", "modifiers": "private", "return": "TopicPartitionState", "signature": "TopicPartitionState assignedState(TopicPartition tp)", "full_signature": "private TopicPartitionState assignedState(TopicPartition tp)", "class_method_signature": "SubscriptionState.assignedState(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "committed", "parameters": "(TopicPartition tp, OffsetAndMetadata offset)", "modifiers": "public", "return": "void", "signature": "void committed(TopicPartition tp, OffsetAndMetadata offset)", "full_signature": "public void committed(TopicPartition tp, OffsetAndMetadata offset)", "class_method_signature": "SubscriptionState.committed(TopicPartition tp, OffsetAndMetadata offset)", "testcase": false, "constructor": false}, {"identifier": "committed", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "OffsetAndMetadata", "signature": "OffsetAndMetadata committed(TopicPartition tp)", "full_signature": "public OffsetAndMetadata committed(TopicPartition tp)", "class_method_signature": "SubscriptionState.committed(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "needRefreshCommits", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void needRefreshCommits()", "full_signature": "public void needRefreshCommits()", "class_method_signature": "SubscriptionState.needRefreshCommits()", "testcase": false, "constructor": false}, {"identifier": "refreshCommitsNeeded", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean refreshCommitsNeeded()", "full_signature": "public boolean refreshCommitsNeeded()", "class_method_signature": "SubscriptionState.refreshCommitsNeeded()", "testcase": false, "constructor": false}, {"identifier": "commitsRefreshed", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void commitsRefreshed()", "full_signature": "public void commitsRefreshed()", "class_method_signature": "SubscriptionState.commitsRefreshed()", "testcase": false, "constructor": false}, {"identifier": "seek", "parameters": "(TopicPartition tp, long offset)", "modifiers": "public", "return": "void", "signature": "void seek(TopicPartition tp, long offset)", "full_signature": "public void seek(TopicPartition tp, long offset)", "class_method_signature": "SubscriptionState.seek(TopicPartition tp, long offset)", "testcase": false, "constructor": false}, {"identifier": "assignedPartitions", "parameters": "()", "modifiers": "public", "return": "Set<TopicPartition>", "signature": "Set<TopicPartition> assignedPartitions()", "full_signature": "public Set<TopicPartition> assignedPartitions()", "class_method_signature": "SubscriptionState.assignedPartitions()", "testcase": false, "constructor": false}, {"identifier": "fetchablePartitions", "parameters": "()", "modifiers": "public", "return": "Set<TopicPartition>", "signature": "Set<TopicPartition> fetchablePartitions()", "full_signature": "public Set<TopicPartition> fetchablePartitions()", "class_method_signature": "SubscriptionState.fetchablePartitions()", "testcase": false, "constructor": false}, {"identifier": "partitionsAutoAssigned", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean partitionsAutoAssigned()", "full_signature": "public boolean partitionsAutoAssigned()", "class_method_signature": "SubscriptionState.partitionsAutoAssigned()", "testcase": false, "constructor": false}, {"identifier": "position", "parameters": "(TopicPartition tp, long offset)", "modifiers": "public", "return": "void", "signature": "void position(TopicPartition tp, long offset)", "full_signature": "public void position(TopicPartition tp, long offset)", "class_method_signature": "SubscriptionState.position(TopicPartition tp, long offset)", "testcase": false, "constructor": false}, {"identifier": "position", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "Long", "signature": "Long position(TopicPartition tp)", "full_signature": "public Long position(TopicPartition tp)", "class_method_signature": "SubscriptionState.position(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "allConsumed", "parameters": "()", "modifiers": "public", "return": "Map<TopicPartition, OffsetAndMetadata>", "signature": "Map<TopicPartition, OffsetAndMetadata> allConsumed()", "full_signature": "public Map<TopicPartition, OffsetAndMetadata> allConsumed()", "class_method_signature": "SubscriptionState.allConsumed()", "testcase": false, "constructor": false}, {"identifier": "needOffsetReset", "parameters": "(TopicPartition partition, OffsetResetStrategy offsetResetStrategy)", "modifiers": "public", "return": "void", "signature": "void needOffsetReset(TopicPartition partition, OffsetResetStrategy offsetResetStrategy)", "full_signature": "public void needOffsetReset(TopicPartition partition, OffsetResetStrategy offsetResetStrategy)", "class_method_signature": "SubscriptionState.needOffsetReset(TopicPartition partition, OffsetResetStrategy offsetResetStrategy)", "testcase": false, "constructor": false}, {"identifier": "needOffsetReset", "parameters": "(TopicPartition partition)", "modifiers": "public", "return": "void", "signature": "void needOffsetReset(TopicPartition partition)", "full_signature": "public void needOffsetReset(TopicPartition partition)", "class_method_signature": "SubscriptionState.needOffsetReset(TopicPartition partition)", "testcase": false, "constructor": false}, {"identifier": "hasDefaultOffsetResetPolicy", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasDefaultOffsetResetPolicy()", "full_signature": "public boolean hasDefaultOffsetResetPolicy()", "class_method_signature": "SubscriptionState.hasDefaultOffsetResetPolicy()", "testcase": false, "constructor": false}, {"identifier": "isOffsetResetNeeded", "parameters": "(TopicPartition partition)", "modifiers": "public", "return": "boolean", "signature": "boolean isOffsetResetNeeded(TopicPartition partition)", "full_signature": "public boolean isOffsetResetNeeded(TopicPartition partition)", "class_method_signature": "SubscriptionState.isOffsetResetNeeded(TopicPartition partition)", "testcase": false, "constructor": false}, {"identifier": "resetStrategy", "parameters": "(TopicPartition partition)", "modifiers": "public", "return": "OffsetResetStrategy", "signature": "OffsetResetStrategy resetStrategy(TopicPartition partition)", "full_signature": "public OffsetResetStrategy resetStrategy(TopicPartition partition)", "class_method_signature": "SubscriptionState.resetStrategy(TopicPartition partition)", "testcase": false, "constructor": false}, {"identifier": "hasAllFetchPositions", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasAllFetchPositions()", "full_signature": "public boolean hasAllFetchPositions()", "class_method_signature": "SubscriptionState.hasAllFetchPositions()", "testcase": false, "constructor": false}, {"identifier": "missingFetchPositions", "parameters": "()", "modifiers": "public", "return": "Set<TopicPartition>", "signature": "Set<TopicPartition> missingFetchPositions()", "full_signature": "public Set<TopicPartition> missingFetchPositions()", "class_method_signature": "SubscriptionState.missingFetchPositions()", "testcase": false, "constructor": false}, {"identifier": "partitionAssignmentNeeded", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean partitionAssignmentNeeded()", "full_signature": "public boolean partitionAssignmentNeeded()", "class_method_signature": "SubscriptionState.partitionAssignmentNeeded()", "testcase": false, "constructor": false}, {"identifier": "isAssigned", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "boolean", "signature": "boolean isAssigned(TopicPartition tp)", "full_signature": "public boolean isAssigned(TopicPartition tp)", "class_method_signature": "SubscriptionState.isAssigned(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "isPaused", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "boolean", "signature": "boolean isPaused(TopicPartition tp)", "full_signature": "public boolean isPaused(TopicPartition tp)", "class_method_signature": "SubscriptionState.isPaused(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "isFetchable", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "boolean", "signature": "boolean isFetchable(TopicPartition tp)", "full_signature": "public boolean isFetchable(TopicPartition tp)", "class_method_signature": "SubscriptionState.isFetchable(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "pause", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "void", "signature": "void pause(TopicPartition tp)", "full_signature": "public void pause(TopicPartition tp)", "class_method_signature": "SubscriptionState.pause(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "resume", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "void", "signature": "void resume(TopicPartition tp)", "full_signature": "public void resume(TopicPartition tp)", "class_method_signature": "SubscriptionState.resume(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "addAssignedPartition", "parameters": "(TopicPartition tp)", "modifiers": "private", "return": "void", "signature": "void addAssignedPartition(TopicPartition tp)", "full_signature": "private void addAssignedPartition(TopicPartition tp)", "class_method_signature": "SubscriptionState.addAssignedPartition(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "listener", "parameters": "()", "modifiers": "public", "return": "ConsumerRebalanceListener", "signature": "ConsumerRebalanceListener listener()", "full_signature": "public ConsumerRebalanceListener listener()", "class_method_signature": "SubscriptionState.listener()", "testcase": false, "constructor": false}], "file": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java"}, "focal_method": {"identifier": "position", "parameters": "(TopicPartition tp, long offset)", "modifiers": "public", "return": "void", "body": "public void position(TopicPartition tp, long offset) {\n        assignedState(tp).position(offset);\n    }", "signature": "void position(TopicPartition tp, long offset)", "full_signature": "public void position(TopicPartition tp, long offset)", "class_method_signature": "SubscriptionState.position(TopicPartition tp, long offset)", "testcase": false, "constructor": false, "invocations": ["position", "assignedState"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}