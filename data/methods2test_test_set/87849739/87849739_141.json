{"test_class": {"identifier": "ImmutableJsonObjectTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int KNOWN_INT_23 = 23;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_INT_23 = 23", "var_name": "KNOWN_INT_23"}, {"original_string": "private static final int KNOWN_INT_42 = 42;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_INT_42 = 42", "var_name": "KNOWN_INT_42"}, {"original_string": "private static final JsonKey KNOWN_KEY_FOO = JsonKey.of(\"foo\");", "modifier": "private static final", "type": "JsonKey", "declarator": "KNOWN_KEY_FOO = JsonKey.of(\"foo\")", "var_name": "KNOWN_KEY_FOO"}, {"original_string": "private static final JsonKey KNOWN_KEY_BAR = JsonKey.of(\"bar\");", "modifier": "private static final", "type": "JsonKey", "declarator": "KNOWN_KEY_BAR = JsonKey.of(\"bar\")", "var_name": "KNOWN_KEY_BAR"}, {"original_string": "private static final JsonKey KNOWN_KEY_BAZ = JsonKey.of(\"baz\");", "modifier": "private static final", "type": "JsonKey", "declarator": "KNOWN_KEY_BAZ = JsonKey.of(\"baz\")", "var_name": "KNOWN_KEY_BAZ"}, {"original_string": "private static final JsonValue KNOWN_VALUE_FOO = JsonValue.of(\"bar\");", "modifier": "private static final", "type": "JsonValue", "declarator": "KNOWN_VALUE_FOO = JsonValue.of(\"bar\")", "var_name": "KNOWN_VALUE_FOO"}, {"original_string": "private static final JsonValue KNOWN_VALUE_BAR = JsonValue.of(\"baz\");", "modifier": "private static final", "type": "JsonValue", "declarator": "KNOWN_VALUE_BAR = JsonValue.of(\"baz\")", "var_name": "KNOWN_VALUE_BAR"}, {"original_string": "private static final JsonValue KNOWN_VALUE_BAZ = JsonValue.of(KNOWN_INT_42);", "modifier": "private static final", "type": "JsonValue", "declarator": "KNOWN_VALUE_BAZ = JsonValue.of(KNOWN_INT_42)", "var_name": "KNOWN_VALUE_BAZ"}, {"original_string": "private static final Map<String, JsonField> KNOWN_FIELDS = new LinkedHashMap<>();", "modifier": "private static final", "type": "Map<String, JsonField>", "declarator": "KNOWN_FIELDS = new LinkedHashMap<>()", "var_name": "KNOWN_FIELDS"}, {"original_string": "private static final String KNOWN_JSON_STRING;", "modifier": "private static final", "type": "String", "declarator": "KNOWN_JSON_STRING", "var_name": "KNOWN_JSON_STRING"}], "file": "json/src/test/java/org/eclipse/ditto/json/ImmutableJsonObjectTest.java"}, "test_case": {"identifier": "testHashCodeAndEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCodeAndEquals() {\n        final Map<String, JsonField> jsonFieldsRed = toMap(\"foo\", JsonValue.of(1));\n        final Map<String, JsonField> jsonFieldsBlack = toMap(\"foo\", JsonValue.of(2));\n        final ImmutableJsonObject.SoftReferencedFieldMap\n                redFieldMap = ImmutableJsonObject.SoftReferencedFieldMap.of(jsonFieldsRed);\n        final ImmutableJsonObject.SoftReferencedFieldMap\n                blackFieldMap = ImmutableJsonObject.SoftReferencedFieldMap\n                .of(jsonFieldsBlack);\n        final ImmutableJsonObject redObject = ImmutableJsonObject.of(jsonFieldsRed);\n        final ImmutableJsonObject blackObject = ImmutableJsonObject.of(jsonFieldsBlack);\n\n        EqualsVerifier.forClass(ImmutableJsonObject.class)\n                .withPrefabValues(ImmutableJsonObject.SoftReferencedFieldMap.class, redFieldMap, blackFieldMap)\n                .withPrefabValues(ImmutableJsonObject.class, redObject, blackObject)\n                .withNonnullFields(\"fieldMap\")\n                .verify();\n    }", "signature": "void testHashCodeAndEquals()", "full_signature": "@Test public void testHashCodeAndEquals()", "class_method_signature": "ImmutableJsonObjectTest.testHashCodeAndEquals()", "testcase": true, "constructor": false, "invocations": ["toMap", "of", "toMap", "of", "of", "of", "of", "of", "verify", "withNonnullFields", "withPrefabValues", "withPrefabValues", "forClass"]}, "focal_class": {"identifier": "ImmutableJsonObject", "superclass": "extends AbstractJsonValue", "interfaces": "implements JsonObject", "fields": [{"original_string": "private static final JsonKey ROOT_KEY = JsonKey.of(\"/\");", "modifier": "private static final", "type": "JsonKey", "declarator": "ROOT_KEY = JsonKey.of(\"/\")", "var_name": "ROOT_KEY"}, {"original_string": "@Nullable private static ImmutableJsonObject emptyInstance = null;", "modifier": "@Nullable private static", "type": "ImmutableJsonObject", "declarator": "emptyInstance = null", "var_name": "emptyInstance"}, {"original_string": "private final SoftReferencedFieldMap fieldMap;", "modifier": "private final", "type": "SoftReferencedFieldMap", "declarator": "fieldMap", "var_name": "fieldMap"}], "methods": [{"identifier": "ImmutableJsonObject", "parameters": "(final SoftReferencedFieldMap theFieldMap)", "modifiers": "", "return": "", "signature": " ImmutableJsonObject(final SoftReferencedFieldMap theFieldMap)", "full_signature": "  ImmutableJsonObject(final SoftReferencedFieldMap theFieldMap)", "class_method_signature": "ImmutableJsonObject.ImmutableJsonObject(final SoftReferencedFieldMap theFieldMap)", "testcase": false, "constructor": true}, {"identifier": "empty", "parameters": "()", "modifiers": "public static", "return": "ImmutableJsonObject", "signature": "ImmutableJsonObject empty()", "full_signature": "public static ImmutableJsonObject empty()", "class_method_signature": "ImmutableJsonObject.empty()", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final Map<String, JsonField> fields)", "modifiers": "public static", "return": "ImmutableJsonObject", "signature": "ImmutableJsonObject of(final Map<String, JsonField> fields)", "full_signature": "public static ImmutableJsonObject of(final Map<String, JsonField> fields)", "class_method_signature": "ImmutableJsonObject.of(final Map<String, JsonField> fields)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final Map<String, JsonField> fields,\n            @Nullable final String stringRepresentation)", "modifiers": "public static", "return": "ImmutableJsonObject", "signature": "ImmutableJsonObject of(final Map<String, JsonField> fields,\n            @Nullable final String stringRepresentation)", "full_signature": "public static ImmutableJsonObject of(final Map<String, JsonField> fields,\n            @Nullable final String stringRepresentation)", "class_method_signature": "ImmutableJsonObject.of(final Map<String, JsonField> fields,\n            @Nullable final String stringRepresentation)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final Map<String, JsonField> fields,\n            @Nullable final byte[] cborRepresentation)", "modifiers": "public static", "return": "ImmutableJsonObject", "signature": "ImmutableJsonObject of(final Map<String, JsonField> fields,\n            @Nullable final byte[] cborRepresentation)", "full_signature": "public static ImmutableJsonObject of(final Map<String, JsonField> fields,\n            @Nullable final byte[] cborRepresentation)", "class_method_signature": "ImmutableJsonObject.of(final Map<String, JsonField> fields,\n            @Nullable final byte[] cborRepresentation)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(final CharSequence key, final int value)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject setValue(final CharSequence key, final int value)", "full_signature": "@Override public JsonObject setValue(final CharSequence key, final int value)", "class_method_signature": "ImmutableJsonObject.setValue(final CharSequence key, final int value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(final CharSequence key, final long value)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject setValue(final CharSequence key, final long value)", "full_signature": "@Override public JsonObject setValue(final CharSequence key, final long value)", "class_method_signature": "ImmutableJsonObject.setValue(final CharSequence key, final long value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(final CharSequence key, final double value)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject setValue(final CharSequence key, final double value)", "full_signature": "@Override public JsonObject setValue(final CharSequence key, final double value)", "class_method_signature": "ImmutableJsonObject.setValue(final CharSequence key, final double value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(final CharSequence key, final boolean value)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject setValue(final CharSequence key, final boolean value)", "full_signature": "@Override public JsonObject setValue(final CharSequence key, final boolean value)", "class_method_signature": "ImmutableJsonObject.setValue(final CharSequence key, final boolean value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(final CharSequence key, final String value)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject setValue(final CharSequence key, final String value)", "full_signature": "@Override public JsonObject setValue(final CharSequence key, final String value)", "class_method_signature": "ImmutableJsonObject.setValue(final CharSequence key, final String value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(final CharSequence key, final JsonValue value)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject setValue(final CharSequence key, final JsonValue value)", "full_signature": "@Override public JsonObject setValue(final CharSequence key, final JsonValue value)", "class_method_signature": "ImmutableJsonObject.setValue(final CharSequence key, final JsonValue value)", "testcase": false, "constructor": false}, {"identifier": "getDefinitionForKey", "parameters": "(final CharSequence key)", "modifiers": "private", "return": "Optional<JsonFieldDefinition>", "signature": "Optional<JsonFieldDefinition> getDefinitionForKey(final CharSequence key)", "full_signature": "private Optional<JsonFieldDefinition> getDefinitionForKey(final CharSequence key)", "class_method_signature": "ImmutableJsonObject.getDefinitionForKey(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final JsonFieldDefinition<T> fieldDefinition, @Nullable final T value)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject set(final JsonFieldDefinition<T> fieldDefinition, @Nullable final T value)", "full_signature": "@Override public JsonObject set(final JsonFieldDefinition<T> fieldDefinition, @Nullable final T value)", "class_method_signature": "ImmutableJsonObject.set(final JsonFieldDefinition<T> fieldDefinition, @Nullable final T value)", "testcase": false, "constructor": false}, {"identifier": "setFieldInHierarchy", "parameters": "(final JsonObject target, final JsonPointer pointer,\n            final JsonField jsonField)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject setFieldInHierarchy(final JsonObject target, final JsonPointer pointer,\n            final JsonField jsonField)", "full_signature": "private static JsonObject setFieldInHierarchy(final JsonObject target, final JsonPointer pointer,\n            final JsonField jsonField)", "class_method_signature": "ImmutableJsonObject.setFieldInHierarchy(final JsonObject target, final JsonPointer pointer,\n            final JsonField jsonField)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final JsonField field)", "modifiers": "@Override public", "return": "ImmutableJsonObject", "signature": "ImmutableJsonObject set(final JsonField field)", "full_signature": "@Override public ImmutableJsonObject set(final JsonField field)", "class_method_signature": "ImmutableJsonObject.set(final JsonField field)", "testcase": false, "constructor": false}, {"identifier": "setAll", "parameters": "(final Iterable<JsonField> fields)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject setAll(final Iterable<JsonField> fields)", "full_signature": "@Override public JsonObject setAll(final Iterable<JsonField> fields)", "class_method_signature": "ImmutableJsonObject.setAll(final Iterable<JsonField> fields)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(final Iterable<?> iterable)", "modifiers": "private static", "return": "boolean", "signature": "boolean isEmpty(final Iterable<?> iterable)", "full_signature": "private static boolean isEmpty(final Iterable<?> iterable)", "class_method_signature": "ImmutableJsonObject.isEmpty(final Iterable<?> iterable)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final CharSequence key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(final CharSequence key)", "full_signature": "@Override public boolean contains(final CharSequence key)", "class_method_signature": "ImmutableJsonObject.contains(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "(final CharSequence key)", "modifiers": "private", "return": "boolean", "signature": "boolean containsKey(final CharSequence key)", "full_signature": "private boolean containsKey(final CharSequence key)", "class_method_signature": "ImmutableJsonObject.containsKey(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(final CharSequence key)", "modifiers": "@Override public", "return": "Optional<JsonValue>", "signature": "Optional<JsonValue> getValue(final CharSequence key)", "full_signature": "@Override public Optional<JsonValue> getValue(final CharSequence key)", "class_method_signature": "ImmutableJsonObject.getValue(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "getValueForPointer", "parameters": "(final JsonPointer pointer)", "modifiers": "private", "return": "Optional<JsonValue>", "signature": "Optional<JsonValue> getValueForPointer(final JsonPointer pointer)", "full_signature": "private Optional<JsonValue> getValueForPointer(final JsonPointer pointer)", "class_method_signature": "ImmutableJsonObject.getValueForPointer(final JsonPointer pointer)", "testcase": false, "constructor": false}, {"identifier": "getValueForKey", "parameters": "(final CharSequence key)", "modifiers": "private", "return": "Optional<JsonValue>", "signature": "Optional<JsonValue> getValueForKey(final CharSequence key)", "full_signature": "private Optional<JsonValue> getValueForKey(final CharSequence key)", "class_method_signature": "ImmutableJsonObject.getValueForKey(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(final JsonFieldDefinition<T> fieldDefinition)", "modifiers": "@Override public", "return": "Optional<T>", "signature": "Optional<T> getValue(final JsonFieldDefinition<T> fieldDefinition)", "full_signature": "@Override public Optional<T> getValue(final JsonFieldDefinition<T> fieldDefinition)", "class_method_signature": "ImmutableJsonObject.getValue(final JsonFieldDefinition<T> fieldDefinition)", "testcase": false, "constructor": false}, {"identifier": "checkFieldDefinition", "parameters": "(final JsonFieldDefinition fieldDefinition)", "modifiers": "private static", "return": "void", "signature": "void checkFieldDefinition(final JsonFieldDefinition fieldDefinition)", "full_signature": "private static void checkFieldDefinition(final JsonFieldDefinition fieldDefinition)", "class_method_signature": "ImmutableJsonObject.checkFieldDefinition(final JsonFieldDefinition fieldDefinition)", "testcase": false, "constructor": false}, {"identifier": "getValueOrThrow", "parameters": "(final JsonFieldDefinition<T> fieldDefinition)", "modifiers": "@Override public", "return": "T", "signature": "T getValueOrThrow(final JsonFieldDefinition<T> fieldDefinition)", "full_signature": "@Override public T getValueOrThrow(final JsonFieldDefinition<T> fieldDefinition)", "class_method_signature": "ImmutableJsonObject.getValueOrThrow(final JsonFieldDefinition<T> fieldDefinition)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final JsonPointer pointer)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject get(final JsonPointer pointer)", "full_signature": "@Override public JsonObject get(final JsonPointer pointer)", "class_method_signature": "ImmutableJsonObject.get(final JsonPointer pointer)", "testcase": false, "constructor": false}, {"identifier": "checkPointer", "parameters": "(final JsonPointer pointer)", "modifiers": "private static", "return": "void", "signature": "void checkPointer(final JsonPointer pointer)", "full_signature": "private static void checkPointer(final JsonPointer pointer)", "class_method_signature": "ImmutableJsonObject.checkPointer(final JsonPointer pointer)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final JsonFieldDefinition fieldDefinition)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject get(final JsonFieldDefinition fieldDefinition)", "full_signature": "@Override public JsonObject get(final JsonFieldDefinition fieldDefinition)", "class_method_signature": "ImmutableJsonObject.get(final JsonFieldDefinition fieldDefinition)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final JsonFieldSelector fieldSelector)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject get(final JsonFieldSelector fieldSelector)", "full_signature": "@Override public JsonObject get(final JsonFieldSelector fieldSelector)", "class_method_signature": "ImmutableJsonObject.get(final JsonFieldSelector fieldSelector)", "testcase": false, "constructor": false}, {"identifier": "filterByTrie", "parameters": "(final JsonObject self, final JsonFieldSelectorTrie trie)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "JsonObject", "signature": "JsonObject filterByTrie(final JsonObject self, final JsonFieldSelectorTrie trie)", "full_signature": "@SuppressWarnings(\"unchecked\") private static JsonObject filterByTrie(final JsonObject self, final JsonFieldSelectorTrie trie)", "class_method_signature": "ImmutableJsonObject.filterByTrie(final JsonObject self, final JsonFieldSelectorTrie trie)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final CharSequence key)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject remove(final CharSequence key)", "full_signature": "@Override public JsonObject remove(final CharSequence key)", "class_method_signature": "ImmutableJsonObject.remove(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "removeForPointer", "parameters": "(final JsonPointer pointer)", "modifiers": "private", "return": "JsonObject", "signature": "JsonObject removeForPointer(final JsonPointer pointer)", "full_signature": "private JsonObject removeForPointer(final JsonPointer pointer)", "class_method_signature": "ImmutableJsonObject.removeForPointer(final JsonPointer pointer)", "testcase": false, "constructor": false}, {"identifier": "removeValueForKey", "parameters": "(final CharSequence key)", "modifiers": "private", "return": "JsonObject", "signature": "JsonObject removeValueForKey(final CharSequence key)", "full_signature": "private JsonObject removeValueForKey(final CharSequence key)", "class_method_signature": "ImmutableJsonObject.removeValueForKey(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "@Override public", "return": "List<JsonKey>", "signature": "List<JsonKey> getKeys()", "full_signature": "@Override public List<JsonKey> getKeys()", "class_method_signature": "ImmutableJsonObject.getKeys()", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "(final CharSequence key)", "modifiers": "@Override public", "return": "Optional<JsonField>", "signature": "Optional<JsonField> getField(final CharSequence key)", "full_signature": "@Override public Optional<JsonField> getField(final CharSequence key)", "class_method_signature": "ImmutableJsonObject.getField(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "isObject", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isObject()", "full_signature": "@Override public boolean isObject()", "class_method_signature": "ImmutableJsonObject.isObject()", "testcase": false, "constructor": false}, {"identifier": "asObject", "parameters": "()", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject asObject()", "full_signature": "@Override public JsonObject asObject()", "class_method_signature": "ImmutableJsonObject.asObject()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<JsonField>", "signature": "Iterator<JsonField> iterator()", "full_signature": "@Override public Iterator<JsonField> iterator()", "class_method_signature": "ImmutableJsonObject.iterator()", "testcase": false, "constructor": false}, {"identifier": "stream", "parameters": "()", "modifiers": "@Override public", "return": "Stream<JsonField>", "signature": "Stream<JsonField> stream()", "full_signature": "@Override public Stream<JsonField> stream()", "class_method_signature": "ImmutableJsonObject.stream()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "ImmutableJsonObject.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "ImmutableJsonObject.getSize()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@SuppressWarnings({\"checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck\", \"squid:MethodCyclomaticComplexity\"}) @Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@SuppressWarnings({\"checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck\", \"squid:MethodCyclomaticComplexity\"}) @Override public boolean equals(final Object o)", "class_method_signature": "ImmutableJsonObject.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableJsonObject.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableJsonObject.toString()", "testcase": false, "constructor": false}, {"identifier": "writeValue", "parameters": "(final SerializationContext serializationContext)", "modifiers": "@Override public", "return": "void", "signature": "void writeValue(final SerializationContext serializationContext)", "full_signature": "@Override public void writeValue(final SerializationContext serializationContext)", "class_method_signature": "ImmutableJsonObject.writeValue(final SerializationContext serializationContext)", "testcase": false, "constructor": false}, {"identifier": "getUpperBoundForStringSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getUpperBoundForStringSize()", "full_signature": "@Override public long getUpperBoundForStringSize()", "class_method_signature": "ImmutableJsonObject.getUpperBoundForStringSize()", "testcase": false, "constructor": false}], "file": "json/src/main/java/org/eclipse/ditto/json/ImmutableJsonObject.java"}, "focal_method": {"identifier": "of", "parameters": "(final Map<String, JsonField> fields)", "modifiers": "public static", "return": "ImmutableJsonObject", "body": "public static ImmutableJsonObject of(final Map<String, JsonField> fields) {\n        return new ImmutableJsonObject(SoftReferencedFieldMap.of(fields));\n    }", "signature": "ImmutableJsonObject of(final Map<String, JsonField> fields)", "full_signature": "public static ImmutableJsonObject of(final Map<String, JsonField> fields)", "class_method_signature": "ImmutableJsonObject.of(final Map<String, JsonField> fields)", "testcase": false, "constructor": false, "invocations": ["of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}