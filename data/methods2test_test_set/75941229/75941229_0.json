{"test_class": {"identifier": "KafkaSenderExporterTest", "superclass": "", "interfaces": "", "fields": [], "file": "exporter-sender-kafka/src/test/java/io/zipkin/brave/exporter/sender/kafka/KafkaSenderExporterTest.java"}, "test_case": {"identifier": "testConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConfig() {\n    KafkaSenderExporter exporter = new KafkaSenderExporter();\n    Map<String, String> properties = new HashMap<String, String>();\n    properties.put(\"kafka.myprop\", \"myvalue\");\n    BundleContext context = mock(BundleContext.class);\n    Config config = mock(Config.class);\n    when(config.bootstrapServers()).thenReturn(\"server1\");\n    when(config.encoding()).thenReturn(Encoding.JSON);\n    when(config.topic()).thenReturn(\"mytopic\");\n    exporter.activate(config, context, properties);\n  }", "signature": "void testConfig()", "full_signature": "@Test public void testConfig()", "class_method_signature": "KafkaSenderExporterTest.testConfig()", "testcase": true, "constructor": false, "invocations": ["put", "mock", "mock", "thenReturn", "when", "bootstrapServers", "thenReturn", "when", "encoding", "thenReturn", "when", "topic", "activate"]}, "focal_class": {"identifier": "KafkaSenderExporter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String OVERRIDE_PREFIX = \"kafka.\";", "modifier": "private static final", "type": "String", "declarator": "OVERRIDE_PREFIX = \"kafka.\"", "var_name": "OVERRIDE_PREFIX"}, {"original_string": "private ServiceRegistration<Sender> reg;", "modifier": "private", "type": "ServiceRegistration<Sender>", "declarator": "reg", "var_name": "reg"}, {"original_string": "private KafkaSender sender;", "modifier": "private", "type": "KafkaSender", "declarator": "sender", "var_name": "sender"}], "methods": [{"identifier": "activate", "parameters": "(Config config, BundleContext context, Map<String, String> properties)", "modifiers": "@Activate public", "return": "void", "signature": "void activate(Config config, BundleContext context, Map<String, String> properties)", "full_signature": "@Activate public void activate(Config config, BundleContext context, Map<String, String> properties)", "class_method_signature": "KafkaSenderExporter.activate(Config config, BundleContext context, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "getOverrides", "parameters": "(Map<String, String> properties)", "modifiers": "private", "return": "HashMap<String, String>", "signature": "HashMap<String, String> getOverrides(Map<String, String> properties)", "full_signature": "private HashMap<String, String> getOverrides(Map<String, String> properties)", "class_method_signature": "KafkaSenderExporter.getOverrides(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "deactive", "parameters": "()", "modifiers": "@Deactivate public", "return": "void", "signature": "void deactive()", "full_signature": "@Deactivate public void deactive()", "class_method_signature": "KafkaSenderExporter.deactive()", "testcase": false, "constructor": false}], "file": "exporter-sender-kafka/src/main/java/io/zipkin/brave/exporter/sender/kafka/KafkaSenderExporter.java"}, "focal_method": {"identifier": "activate", "parameters": "(Config config, BundleContext context, Map<String, String> properties)", "modifiers": "@Activate public", "return": "void", "body": "@Activate\n  public void activate(Config config, BundleContext context, Map<String, String> properties) {\n    sender = KafkaSender.newBuilder()\n        .bootstrapServers(config.bootstrapServers())\n        .encoding(config.encoding())\n        .messageMaxBytes(config.messageMaxBytes())\n        .overrides(getOverrides(properties))\n        .topic(config.topic())\n        .build();\n    reg = context.registerService(Sender.class, sender, new Hashtable<String, String>(properties));\n  }", "signature": "void activate(Config config, BundleContext context, Map<String, String> properties)", "full_signature": "@Activate public void activate(Config config, BundleContext context, Map<String, String> properties)", "class_method_signature": "KafkaSenderExporter.activate(Config config, BundleContext context, Map<String, String> properties)", "testcase": false, "constructor": false, "invocations": ["build", "topic", "overrides", "messageMaxBytes", "encoding", "bootstrapServers", "newBuilder", "bootstrapServers", "encoding", "messageMaxBytes", "getOverrides", "topic", "registerService"]}, "repository": {"repo_id": 75941229, "url": "https://github.com/openzipkin/brave-karaf", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 243, "license": "licensed"}}