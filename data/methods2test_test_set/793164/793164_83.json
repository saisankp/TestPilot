{"test_class": {"identifier": "UriTransformerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UriTransformer transformer;", "modifier": "private", "type": "UriTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private StringBuilder veryLongUriString;", "modifier": "private", "type": "StringBuilder", "declarator": "veryLongUriString", "var_name": "veryLongUriString"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/transform/ebxml/UriTransformerTest.java"}, "test_case": {"identifier": "testToEbXMLWithShortestUriUsingTwoSlots", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToEbXMLWithShortestUriUsingTwoSlots() {\n        String uri = veryLongUriString.substring(0, 127);\n        String[] ebXML = transformer.toEbXML(uri);\n        String uriPart1 = uri.substring(0, 126);\n        String uriPart2 = uri.substring(126, 127);\n        assertEquals(2, ebXML.length);\n        assertEquals(\"1|\" + uriPart1, ebXML[0]);\n        assertEquals(\"2|\" + uriPart2, ebXML[1]);\n    }", "signature": "void testToEbXMLWithShortestUriUsingTwoSlots()", "full_signature": "@Test public void testToEbXMLWithShortestUriUsingTwoSlots()", "class_method_signature": "UriTransformerTest.testToEbXMLWithShortestUriUsingTwoSlots()", "testcase": true, "constructor": false, "invocations": ["substring", "toEbXML", "substring", "substring", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "UriTransformer", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "fromEbXML", "parameters": "(List<String> slotValues)", "modifiers": "public", "return": "String", "signature": "String fromEbXML(List<String> slotValues)", "full_signature": "public String fromEbXML(List<String> slotValues)", "class_method_signature": "UriTransformer.fromEbXML(List<String> slotValues)", "testcase": false, "constructor": false}, {"identifier": "toEbXML", "parameters": "(String uri)", "modifiers": "public", "return": "String[]", "signature": "String[] toEbXML(String uri)", "full_signature": "public String[] toEbXML(String uri)", "class_method_signature": "UriTransformer.toEbXML(String uri)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/transform/ebxml/UriTransformer.java"}, "focal_method": {"identifier": "toEbXML", "parameters": "(String uri)", "modifiers": "public", "return": "String[]", "body": "public String[] toEbXML(String uri) {\n        if (uri == null) {\n            return new String[0];\n        }\n        \n        List<String> uriParts = new ArrayList<String>();\n        \n        int slotIdx = 1;\n        int start = 0;\n        while (start < uri.length()) {\n            String prefix = slotIdx + \"|\";\n            int validLength = 128 - prefix.length();\n            if (uri.length() < start + validLength) {\n                validLength = uri.length() - start;\n            }\n            \n            String uriPart = uri.substring(start, start + validLength);\n            String slotValue = prefix + uriPart;\n            uriParts.add(slotValue);\n            \n            start += validLength;\n            ++slotIdx;\n        }\n        \n        return uriParts.toArray(new String[uriParts.size()]);\n    }", "signature": "String[] toEbXML(String uri)", "full_signature": "public String[] toEbXML(String uri)", "class_method_signature": "UriTransformer.toEbXML(String uri)", "testcase": false, "constructor": false, "invocations": ["length", "length", "length", "length", "substring", "add", "toArray", "size"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}