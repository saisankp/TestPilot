{"test_class": {"identifier": "ConfigManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ConfigManager configManager = getConfigManager();", "modifier": "private", "type": "ConfigManager", "declarator": "configManager = getConfigManager()", "var_name": "configManager"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/config/context/ConfigManagerTest.java"}, "test_case": {"identifier": "testDefaultConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaultConfig() {\n        ProviderConfig providerConfig = new ProviderConfig();\n        providerConfig.setDefault(false);\n        assertFalse(ConfigManager.isDefaultConfig(providerConfig));\n\n        ProviderConfig providerConfig1 = new ProviderConfig();\n        assertTrue(ConfigManager.isDefaultConfig(providerConfig1));\n\n        ProviderConfig providerConfig3 = new ProviderConfig();\n        providerConfig.setDefault(true);\n        assertTrue(ConfigManager.isDefaultConfig(providerConfig3));\n\n        ProtocolConfig protocolConfig = new ProtocolConfig();\n        protocolConfig.setDefault(false);\n        assertFalse(ConfigManager.isDefaultConfig(protocolConfig));\n    }", "signature": "void testDefaultConfig()", "full_signature": "@Test public void testDefaultConfig()", "class_method_signature": "ConfigManagerTest.testDefaultConfig()", "testcase": true, "constructor": false, "invocations": ["setDefault", "assertFalse", "isDefaultConfig", "assertTrue", "isDefaultConfig", "setDefault", "assertTrue", "isDefaultConfig", "setDefault", "assertFalse", "isDefaultConfig"]}, "focal_class": {"identifier": "ConfigManager", "superclass": "extends LifecycleAdapter", "interfaces": "implements FrameworkExt", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ConfigManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ConfigManager.class)", "var_name": "logger"}, {"original_string": "public static final String NAME = \"config\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"config\"", "var_name": "NAME"}, {"original_string": "private final ReadWriteLock lock = new ReentrantReadWriteLock();", "modifier": "private final", "type": "ReadWriteLock", "declarator": "lock = new ReentrantReadWriteLock()", "var_name": "lock"}, {"original_string": "final Map<String, Map<String, AbstractConfig>> configsCache = newMap();", "modifier": "final", "type": "Map<String, Map<String, AbstractConfig>>", "declarator": "configsCache = newMap()", "var_name": "configsCache"}], "methods": [{"identifier": "ConfigManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " ConfigManager()", "full_signature": "public  ConfigManager()", "class_method_signature": "ConfigManager.ConfigManager()", "testcase": false, "constructor": true}, {"identifier": "setApplication", "parameters": "(ApplicationConfig application)", "modifiers": "public", "return": "void", "signature": "void setApplication(ApplicationConfig application)", "full_signature": "public void setApplication(ApplicationConfig application)", "class_method_signature": "ConfigManager.setApplication(ApplicationConfig application)", "testcase": false, "constructor": false}, {"identifier": "getApplication", "parameters": "()", "modifiers": "public", "return": "Optional<ApplicationConfig>", "signature": "Optional<ApplicationConfig> getApplication()", "full_signature": "public Optional<ApplicationConfig> getApplication()", "class_method_signature": "ConfigManager.getApplication()", "testcase": false, "constructor": false}, {"identifier": "getApplicationOrElseThrow", "parameters": "()", "modifiers": "public", "return": "ApplicationConfig", "signature": "ApplicationConfig getApplicationOrElseThrow()", "full_signature": "public ApplicationConfig getApplicationOrElseThrow()", "class_method_signature": "ConfigManager.getApplicationOrElseThrow()", "testcase": false, "constructor": false}, {"identifier": "setMonitor", "parameters": "(MonitorConfig monitor)", "modifiers": "public", "return": "void", "signature": "void setMonitor(MonitorConfig monitor)", "full_signature": "public void setMonitor(MonitorConfig monitor)", "class_method_signature": "ConfigManager.setMonitor(MonitorConfig monitor)", "testcase": false, "constructor": false}, {"identifier": "getMonitor", "parameters": "()", "modifiers": "public", "return": "Optional<MonitorConfig>", "signature": "Optional<MonitorConfig> getMonitor()", "full_signature": "public Optional<MonitorConfig> getMonitor()", "class_method_signature": "ConfigManager.getMonitor()", "testcase": false, "constructor": false}, {"identifier": "setModule", "parameters": "(ModuleConfig module)", "modifiers": "public", "return": "void", "signature": "void setModule(ModuleConfig module)", "full_signature": "public void setModule(ModuleConfig module)", "class_method_signature": "ConfigManager.setModule(ModuleConfig module)", "testcase": false, "constructor": false}, {"identifier": "getModule", "parameters": "()", "modifiers": "public", "return": "Optional<ModuleConfig>", "signature": "Optional<ModuleConfig> getModule()", "full_signature": "public Optional<ModuleConfig> getModule()", "class_method_signature": "ConfigManager.getModule()", "testcase": false, "constructor": false}, {"identifier": "setMetrics", "parameters": "(MetricsConfig metrics)", "modifiers": "public", "return": "void", "signature": "void setMetrics(MetricsConfig metrics)", "full_signature": "public void setMetrics(MetricsConfig metrics)", "class_method_signature": "ConfigManager.setMetrics(MetricsConfig metrics)", "testcase": false, "constructor": false}, {"identifier": "getMetrics", "parameters": "()", "modifiers": "public", "return": "Optional<MetricsConfig>", "signature": "Optional<MetricsConfig> getMetrics()", "full_signature": "public Optional<MetricsConfig> getMetrics()", "class_method_signature": "ConfigManager.getMetrics()", "testcase": false, "constructor": false}, {"identifier": "setSsl", "parameters": "(SslConfig sslConfig)", "modifiers": "public", "return": "void", "signature": "void setSsl(SslConfig sslConfig)", "full_signature": "public void setSsl(SslConfig sslConfig)", "class_method_signature": "ConfigManager.setSsl(SslConfig sslConfig)", "testcase": false, "constructor": false}, {"identifier": "getSsl", "parameters": "()", "modifiers": "public", "return": "Optional<SslConfig>", "signature": "Optional<SslConfig> getSsl()", "full_signature": "public Optional<SslConfig> getSsl()", "class_method_signature": "ConfigManager.getSsl()", "testcase": false, "constructor": false}, {"identifier": "addConfigCenter", "parameters": "(ConfigCenterConfig configCenter)", "modifiers": "public", "return": "void", "signature": "void addConfigCenter(ConfigCenterConfig configCenter)", "full_signature": "public void addConfigCenter(ConfigCenterConfig configCenter)", "class_method_signature": "ConfigManager.addConfigCenter(ConfigCenterConfig configCenter)", "testcase": false, "constructor": false}, {"identifier": "addConfigCenters", "parameters": "(Iterable<ConfigCenterConfig> configCenters)", "modifiers": "public", "return": "void", "signature": "void addConfigCenters(Iterable<ConfigCenterConfig> configCenters)", "full_signature": "public void addConfigCenters(Iterable<ConfigCenterConfig> configCenters)", "class_method_signature": "ConfigManager.addConfigCenters(Iterable<ConfigCenterConfig> configCenters)", "testcase": false, "constructor": false}, {"identifier": "getDefaultConfigCenter", "parameters": "()", "modifiers": "public", "return": "Optional<Collection<ConfigCenterConfig>>", "signature": "Optional<Collection<ConfigCenterConfig>> getDefaultConfigCenter()", "full_signature": "public Optional<Collection<ConfigCenterConfig>> getDefaultConfigCenter()", "class_method_signature": "ConfigManager.getDefaultConfigCenter()", "testcase": false, "constructor": false}, {"identifier": "getConfigCenter", "parameters": "(String id)", "modifiers": "public", "return": "ConfigCenterConfig", "signature": "ConfigCenterConfig getConfigCenter(String id)", "full_signature": "public ConfigCenterConfig getConfigCenter(String id)", "class_method_signature": "ConfigManager.getConfigCenter(String id)", "testcase": false, "constructor": false}, {"identifier": "getConfigCenters", "parameters": "()", "modifiers": "public", "return": "Collection<ConfigCenterConfig>", "signature": "Collection<ConfigCenterConfig> getConfigCenters()", "full_signature": "public Collection<ConfigCenterConfig> getConfigCenters()", "class_method_signature": "ConfigManager.getConfigCenters()", "testcase": false, "constructor": false}, {"identifier": "addMetadataReport", "parameters": "(MetadataReportConfig metadataReportConfig)", "modifiers": "public", "return": "void", "signature": "void addMetadataReport(MetadataReportConfig metadataReportConfig)", "full_signature": "public void addMetadataReport(MetadataReportConfig metadataReportConfig)", "class_method_signature": "ConfigManager.addMetadataReport(MetadataReportConfig metadataReportConfig)", "testcase": false, "constructor": false}, {"identifier": "addMetadataReports", "parameters": "(Iterable<MetadataReportConfig> metadataReportConfigs)", "modifiers": "public", "return": "void", "signature": "void addMetadataReports(Iterable<MetadataReportConfig> metadataReportConfigs)", "full_signature": "public void addMetadataReports(Iterable<MetadataReportConfig> metadataReportConfigs)", "class_method_signature": "ConfigManager.addMetadataReports(Iterable<MetadataReportConfig> metadataReportConfigs)", "testcase": false, "constructor": false}, {"identifier": "getMetadataConfigs", "parameters": "()", "modifiers": "public", "return": "Collection<MetadataReportConfig>", "signature": "Collection<MetadataReportConfig> getMetadataConfigs()", "full_signature": "public Collection<MetadataReportConfig> getMetadataConfigs()", "class_method_signature": "ConfigManager.getMetadataConfigs()", "testcase": false, "constructor": false}, {"identifier": "getDefaultMetadataConfigs", "parameters": "()", "modifiers": "public", "return": "Collection<MetadataReportConfig>", "signature": "Collection<MetadataReportConfig> getDefaultMetadataConfigs()", "full_signature": "public Collection<MetadataReportConfig> getDefaultMetadataConfigs()", "class_method_signature": "ConfigManager.getDefaultMetadataConfigs()", "testcase": false, "constructor": false}, {"identifier": "addProvider", "parameters": "(ProviderConfig providerConfig)", "modifiers": "public", "return": "void", "signature": "void addProvider(ProviderConfig providerConfig)", "full_signature": "public void addProvider(ProviderConfig providerConfig)", "class_method_signature": "ConfigManager.addProvider(ProviderConfig providerConfig)", "testcase": false, "constructor": false}, {"identifier": "addProviders", "parameters": "(Iterable<ProviderConfig> providerConfigs)", "modifiers": "public", "return": "void", "signature": "void addProviders(Iterable<ProviderConfig> providerConfigs)", "full_signature": "public void addProviders(Iterable<ProviderConfig> providerConfigs)", "class_method_signature": "ConfigManager.addProviders(Iterable<ProviderConfig> providerConfigs)", "testcase": false, "constructor": false}, {"identifier": "getProvider", "parameters": "(String id)", "modifiers": "public", "return": "Optional<ProviderConfig>", "signature": "Optional<ProviderConfig> getProvider(String id)", "full_signature": "public Optional<ProviderConfig> getProvider(String id)", "class_method_signature": "ConfigManager.getProvider(String id)", "testcase": false, "constructor": false}, {"identifier": "getDefaultProvider", "parameters": "()", "modifiers": "public", "return": "Optional<ProviderConfig>", "signature": "Optional<ProviderConfig> getDefaultProvider()", "full_signature": "public Optional<ProviderConfig> getDefaultProvider()", "class_method_signature": "ConfigManager.getDefaultProvider()", "testcase": false, "constructor": false}, {"identifier": "getProviders", "parameters": "()", "modifiers": "public", "return": "Collection<ProviderConfig>", "signature": "Collection<ProviderConfig> getProviders()", "full_signature": "public Collection<ProviderConfig> getProviders()", "class_method_signature": "ConfigManager.getProviders()", "testcase": false, "constructor": false}, {"identifier": "addConsumer", "parameters": "(ConsumerConfig consumerConfig)", "modifiers": "public", "return": "void", "signature": "void addConsumer(ConsumerConfig consumerConfig)", "full_signature": "public void addConsumer(ConsumerConfig consumerConfig)", "class_method_signature": "ConfigManager.addConsumer(ConsumerConfig consumerConfig)", "testcase": false, "constructor": false}, {"identifier": "addConsumers", "parameters": "(Iterable<ConsumerConfig> consumerConfigs)", "modifiers": "public", "return": "void", "signature": "void addConsumers(Iterable<ConsumerConfig> consumerConfigs)", "full_signature": "public void addConsumers(Iterable<ConsumerConfig> consumerConfigs)", "class_method_signature": "ConfigManager.addConsumers(Iterable<ConsumerConfig> consumerConfigs)", "testcase": false, "constructor": false}, {"identifier": "getConsumer", "parameters": "(String id)", "modifiers": "public", "return": "Optional<ConsumerConfig>", "signature": "Optional<ConsumerConfig> getConsumer(String id)", "full_signature": "public Optional<ConsumerConfig> getConsumer(String id)", "class_method_signature": "ConfigManager.getConsumer(String id)", "testcase": false, "constructor": false}, {"identifier": "getDefaultConsumer", "parameters": "()", "modifiers": "public", "return": "Optional<ConsumerConfig>", "signature": "Optional<ConsumerConfig> getDefaultConsumer()", "full_signature": "public Optional<ConsumerConfig> getDefaultConsumer()", "class_method_signature": "ConfigManager.getDefaultConsumer()", "testcase": false, "constructor": false}, {"identifier": "getConsumers", "parameters": "()", "modifiers": "public", "return": "Collection<ConsumerConfig>", "signature": "Collection<ConsumerConfig> getConsumers()", "full_signature": "public Collection<ConsumerConfig> getConsumers()", "class_method_signature": "ConfigManager.getConsumers()", "testcase": false, "constructor": false}, {"identifier": "addProtocol", "parameters": "(ProtocolConfig protocolConfig)", "modifiers": "public", "return": "void", "signature": "void addProtocol(ProtocolConfig protocolConfig)", "full_signature": "public void addProtocol(ProtocolConfig protocolConfig)", "class_method_signature": "ConfigManager.addProtocol(ProtocolConfig protocolConfig)", "testcase": false, "constructor": false}, {"identifier": "addProtocols", "parameters": "(Iterable<ProtocolConfig> protocolConfigs)", "modifiers": "public", "return": "void", "signature": "void addProtocols(Iterable<ProtocolConfig> protocolConfigs)", "full_signature": "public void addProtocols(Iterable<ProtocolConfig> protocolConfigs)", "class_method_signature": "ConfigManager.addProtocols(Iterable<ProtocolConfig> protocolConfigs)", "testcase": false, "constructor": false}, {"identifier": "getProtocol", "parameters": "(String id)", "modifiers": "public", "return": "Optional<ProtocolConfig>", "signature": "Optional<ProtocolConfig> getProtocol(String id)", "full_signature": "public Optional<ProtocolConfig> getProtocol(String id)", "class_method_signature": "ConfigManager.getProtocol(String id)", "testcase": false, "constructor": false}, {"identifier": "getDefaultProtocols", "parameters": "()", "modifiers": "public", "return": "List<ProtocolConfig>", "signature": "List<ProtocolConfig> getDefaultProtocols()", "full_signature": "public List<ProtocolConfig> getDefaultProtocols()", "class_method_signature": "ConfigManager.getDefaultProtocols()", "testcase": false, "constructor": false}, {"identifier": "getProtocols", "parameters": "()", "modifiers": "public", "return": "Collection<ProtocolConfig>", "signature": "Collection<ProtocolConfig> getProtocols()", "full_signature": "public Collection<ProtocolConfig> getProtocols()", "class_method_signature": "ConfigManager.getProtocols()", "testcase": false, "constructor": false}, {"identifier": "getProtocolIds", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getProtocolIds()", "full_signature": "public Set<String> getProtocolIds()", "class_method_signature": "ConfigManager.getProtocolIds()", "testcase": false, "constructor": false}, {"identifier": "addRegistry", "parameters": "(RegistryConfig registryConfig)", "modifiers": "public", "return": "void", "signature": "void addRegistry(RegistryConfig registryConfig)", "full_signature": "public void addRegistry(RegistryConfig registryConfig)", "class_method_signature": "ConfigManager.addRegistry(RegistryConfig registryConfig)", "testcase": false, "constructor": false}, {"identifier": "addRegistries", "parameters": "(Iterable<RegistryConfig> registryConfigs)", "modifiers": "public", "return": "void", "signature": "void addRegistries(Iterable<RegistryConfig> registryConfigs)", "full_signature": "public void addRegistries(Iterable<RegistryConfig> registryConfigs)", "class_method_signature": "ConfigManager.addRegistries(Iterable<RegistryConfig> registryConfigs)", "testcase": false, "constructor": false}, {"identifier": "getRegistry", "parameters": "(String id)", "modifiers": "public", "return": "Optional<RegistryConfig>", "signature": "Optional<RegistryConfig> getRegistry(String id)", "full_signature": "public Optional<RegistryConfig> getRegistry(String id)", "class_method_signature": "ConfigManager.getRegistry(String id)", "testcase": false, "constructor": false}, {"identifier": "getDefaultRegistries", "parameters": "()", "modifiers": "public", "return": "List<RegistryConfig>", "signature": "List<RegistryConfig> getDefaultRegistries()", "full_signature": "public List<RegistryConfig> getDefaultRegistries()", "class_method_signature": "ConfigManager.getDefaultRegistries()", "testcase": false, "constructor": false}, {"identifier": "getRegistries", "parameters": "()", "modifiers": "public", "return": "Collection<RegistryConfig>", "signature": "Collection<RegistryConfig> getRegistries()", "full_signature": "public Collection<RegistryConfig> getRegistries()", "class_method_signature": "ConfigManager.getRegistries()", "testcase": false, "constructor": false}, {"identifier": "getRegistryIds", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getRegistryIds()", "full_signature": "public Set<String> getRegistryIds()", "class_method_signature": "ConfigManager.getRegistryIds()", "testcase": false, "constructor": false}, {"identifier": "addService", "parameters": "(ServiceConfigBase<?> serviceConfig)", "modifiers": "public", "return": "void", "signature": "void addService(ServiceConfigBase<?> serviceConfig)", "full_signature": "public void addService(ServiceConfigBase<?> serviceConfig)", "class_method_signature": "ConfigManager.addService(ServiceConfigBase<?> serviceConfig)", "testcase": false, "constructor": false}, {"identifier": "addServices", "parameters": "(Iterable<ServiceConfigBase<?>> serviceConfigs)", "modifiers": "public", "return": "void", "signature": "void addServices(Iterable<ServiceConfigBase<?>> serviceConfigs)", "full_signature": "public void addServices(Iterable<ServiceConfigBase<?>> serviceConfigs)", "class_method_signature": "ConfigManager.addServices(Iterable<ServiceConfigBase<?>> serviceConfigs)", "testcase": false, "constructor": false}, {"identifier": "getServices", "parameters": "()", "modifiers": "public", "return": "Collection<ServiceConfigBase>", "signature": "Collection<ServiceConfigBase> getServices()", "full_signature": "public Collection<ServiceConfigBase> getServices()", "class_method_signature": "ConfigManager.getServices()", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "(String id)", "modifiers": "public", "return": "ServiceConfigBase<T>", "signature": "ServiceConfigBase<T> getService(String id)", "full_signature": "public ServiceConfigBase<T> getService(String id)", "class_method_signature": "ConfigManager.getService(String id)", "testcase": false, "constructor": false}, {"identifier": "addReference", "parameters": "(ReferenceConfigBase<?> referenceConfig)", "modifiers": "public", "return": "void", "signature": "void addReference(ReferenceConfigBase<?> referenceConfig)", "full_signature": "public void addReference(ReferenceConfigBase<?> referenceConfig)", "class_method_signature": "ConfigManager.addReference(ReferenceConfigBase<?> referenceConfig)", "testcase": false, "constructor": false}, {"identifier": "addReferences", "parameters": "(Iterable<ReferenceConfigBase<?>> referenceConfigs)", "modifiers": "public", "return": "void", "signature": "void addReferences(Iterable<ReferenceConfigBase<?>> referenceConfigs)", "full_signature": "public void addReferences(Iterable<ReferenceConfigBase<?>> referenceConfigs)", "class_method_signature": "ConfigManager.addReferences(Iterable<ReferenceConfigBase<?>> referenceConfigs)", "testcase": false, "constructor": false}, {"identifier": "getReferences", "parameters": "()", "modifiers": "public", "return": "Collection<ReferenceConfigBase<?>>", "signature": "Collection<ReferenceConfigBase<?>> getReferences()", "full_signature": "public Collection<ReferenceConfigBase<?>> getReferences()", "class_method_signature": "ConfigManager.getReferences()", "testcase": false, "constructor": false}, {"identifier": "getReference", "parameters": "(String id)", "modifiers": "public", "return": "ReferenceConfigBase<T>", "signature": "ReferenceConfigBase<T> getReference(String id)", "full_signature": "public ReferenceConfigBase<T> getReference(String id)", "class_method_signature": "ConfigManager.getReference(String id)", "testcase": false, "constructor": false}, {"identifier": "getSubProperties", "parameters": "(Map<String, String> properties, String prefix)", "modifiers": "protected static", "return": "Set<String>", "signature": "Set<String> getSubProperties(Map<String, String> properties, String prefix)", "full_signature": "protected static Set<String> getSubProperties(Map<String, String> properties, String prefix)", "class_method_signature": "ConfigManager.getSubProperties(Map<String, String> properties, String prefix)", "testcase": false, "constructor": false}, {"identifier": "refreshAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void refreshAll()", "full_signature": "public void refreshAll()", "class_method_signature": "ConfigManager.refreshAll()", "testcase": false, "constructor": false}, {"identifier": "removeConfig", "parameters": "(AbstractConfig config)", "modifiers": "public", "return": "void", "signature": "void removeConfig(AbstractConfig config)", "full_signature": "public void removeConfig(AbstractConfig config)", "class_method_signature": "ConfigManager.removeConfig(AbstractConfig config)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "ConfigManager.clear()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "ConfigManager.destroy()", "testcase": false, "constructor": false}, {"identifier": "addConfig", "parameters": "(AbstractConfig config)", "modifiers": "public", "return": "void", "signature": "void addConfig(AbstractConfig config)", "full_signature": "public void addConfig(AbstractConfig config)", "class_method_signature": "ConfigManager.addConfig(AbstractConfig config)", "testcase": false, "constructor": false}, {"identifier": "addConfig", "parameters": "(AbstractConfig config, boolean unique)", "modifiers": "protected", "return": "void", "signature": "void addConfig(AbstractConfig config, boolean unique)", "full_signature": "protected void addConfig(AbstractConfig config, boolean unique)", "class_method_signature": "ConfigManager.addConfig(AbstractConfig config, boolean unique)", "testcase": false, "constructor": false}, {"identifier": "getConfigsMap", "parameters": "(String configType)", "modifiers": "protected", "return": "Map<String, C>", "signature": "Map<String, C> getConfigsMap(String configType)", "full_signature": "protected Map<String, C> getConfigsMap(String configType)", "class_method_signature": "ConfigManager.getConfigsMap(String configType)", "testcase": false, "constructor": false}, {"identifier": "getConfigs", "parameters": "(String configType)", "modifiers": "protected", "return": "Collection<C>", "signature": "Collection<C> getConfigs(String configType)", "full_signature": "protected Collection<C> getConfigs(String configType)", "class_method_signature": "ConfigManager.getConfigs(String configType)", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "(String configType, String id)", "modifiers": "protected", "return": "C", "signature": "C getConfig(String configType, String id)", "full_signature": "protected C getConfig(String configType, String id)", "class_method_signature": "ConfigManager.getConfig(String configType, String id)", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "(String configType)", "modifiers": "protected", "return": "C", "signature": "C getConfig(String configType)", "full_signature": "protected C getConfig(String configType)", "class_method_signature": "ConfigManager.getConfig(String configType)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Callable<V> callable)", "modifiers": "private", "return": "V", "signature": "V write(Callable<V> callable)", "full_signature": "private V write(Callable<V> callable)", "class_method_signature": "ConfigManager.write(Callable<V> callable)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Runnable runnable)", "modifiers": "private", "return": "void", "signature": "void write(Runnable runnable)", "full_signature": "private void write(Runnable runnable)", "class_method_signature": "ConfigManager.write(Runnable runnable)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Callable<V> callable)", "modifiers": "private", "return": "V", "signature": "V read(Callable<V> callable)", "full_signature": "private V read(Callable<V> callable)", "class_method_signature": "ConfigManager.read(Callable<V> callable)", "testcase": false, "constructor": false}, {"identifier": "checkDuplicate", "parameters": "(AbstractConfig oldOne, AbstractConfig newOne)", "modifiers": "private static", "return": "void", "signature": "void checkDuplicate(AbstractConfig oldOne, AbstractConfig newOne)", "full_signature": "private static void checkDuplicate(AbstractConfig oldOne, AbstractConfig newOne)", "class_method_signature": "ConfigManager.checkDuplicate(AbstractConfig oldOne, AbstractConfig newOne)", "testcase": false, "constructor": false}, {"identifier": "newMap", "parameters": "()", "modifiers": "private static", "return": "Map", "signature": "Map newMap()", "full_signature": "private static Map newMap()", "class_method_signature": "ConfigManager.newMap()", "testcase": false, "constructor": false}, {"identifier": "addIfAbsent", "parameters": "(C config, Map<String, C> configsMap, boolean unique)", "modifiers": "static", "return": "void", "signature": "void addIfAbsent(C config, Map<String, C> configsMap, boolean unique)", "full_signature": "static void addIfAbsent(C config, Map<String, C> configsMap, boolean unique)", "class_method_signature": "ConfigManager.addIfAbsent(C config, Map<String, C> configsMap, boolean unique)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "(C config)", "modifiers": "static", "return": "String", "signature": "String getId(C config)", "full_signature": "static String getId(C config)", "class_method_signature": "ConfigManager.getId(C config)", "testcase": false, "constructor": false}, {"identifier": "isDefaultConfig", "parameters": "(C config)", "modifiers": "static", "return": "boolean", "signature": "boolean isDefaultConfig(C config)", "full_signature": "static boolean isDefaultConfig(C config)", "class_method_signature": "ConfigManager.isDefaultConfig(C config)", "testcase": false, "constructor": false}, {"identifier": "getDefaultConfigs", "parameters": "(Map<String, C> configsMap)", "modifiers": "static", "return": "List<C>", "signature": "List<C> getDefaultConfigs(Map<String, C> configsMap)", "full_signature": "static List<C> getDefaultConfigs(Map<String, C> configsMap)", "class_method_signature": "ConfigManager.getDefaultConfigs(Map<String, C> configsMap)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/config/context/ConfigManager.java"}, "focal_method": {"identifier": "isDefaultConfig", "parameters": "(C config)", "modifiers": "static", "return": "boolean", "body": "static <C extends AbstractConfig> boolean isDefaultConfig(C config) {\n        Boolean isDefault = getProperty(config, \"isDefault\");\n        return isDefault == null || TRUE.equals(isDefault);\n    }", "signature": "boolean isDefaultConfig(C config)", "full_signature": "static boolean isDefaultConfig(C config)", "class_method_signature": "ConfigManager.isDefaultConfig(C config)", "testcase": false, "constructor": false, "invocations": ["getProperty", "equals"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}