{"test_class": {"identifier": "CurrentSpanCustomizerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TestSpanHandler spans = new TestSpanHandler();", "modifier": "", "type": "TestSpanHandler", "declarator": "spans = new TestSpanHandler()", "var_name": "spans"}, {"original_string": "Tracing tracing = Tracing.newBuilder().addSpanHandler(spans).build();", "modifier": "", "type": "Tracing", "declarator": "tracing = Tracing.newBuilder().addSpanHandler(spans).build()", "var_name": "tracing"}, {"original_string": "CurrentSpanCustomizer spanCustomizer = CurrentSpanCustomizer.create(tracing);", "modifier": "", "type": "CurrentSpanCustomizer", "declarator": "spanCustomizer = CurrentSpanCustomizer.create(tracing)", "var_name": "spanCustomizer"}, {"original_string": "Span span = tracing.tracer().newTrace();", "modifier": "", "type": "Span", "declarator": "span = tracing.tracer().newTrace()", "var_name": "span"}], "file": "brave/src/test/java/brave/CurrentSpanCustomizerTest.java"}, "test_case": {"identifier": "annotate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void annotate() {\n    span.start();\n    try (SpanInScope ws = tracing.tracer().withSpanInScope(span)) {\n      spanCustomizer.annotate(\"foo\");\n    }\n    span.flush();\n\n    assertThat(spans.get(0).annotations())\n      .extracting(Map.Entry::getValue)\n      .containsExactly(\"foo\");\n  }", "signature": "void annotate()", "full_signature": "@Test public void annotate()", "class_method_signature": "CurrentSpanCustomizerTest.annotate()", "testcase": true, "constructor": false, "invocations": ["start", "withSpanInScope", "tracer", "annotate", "flush", "containsExactly", "extracting", "assertThat", "annotations", "get"]}, "focal_class": {"identifier": "CurrentSpanCustomizer", "superclass": "", "interfaces": "implements SpanCustomizer", "fields": [{"original_string": "private final Tracer tracer;", "modifier": "private final", "type": "Tracer", "declarator": "tracer", "var_name": "tracer"}], "methods": [{"identifier": "create", "parameters": "(Tracing tracing)", "modifiers": "public static", "return": "CurrentSpanCustomizer", "signature": "CurrentSpanCustomizer create(Tracing tracing)", "full_signature": "public static CurrentSpanCustomizer create(Tracing tracing)", "class_method_signature": "CurrentSpanCustomizer.create(Tracing tracing)", "testcase": false, "constructor": false}, {"identifier": "CurrentSpanCustomizer", "parameters": "(Tracing tracing)", "modifiers": "", "return": "", "signature": " CurrentSpanCustomizer(Tracing tracing)", "full_signature": "  CurrentSpanCustomizer(Tracing tracing)", "class_method_signature": "CurrentSpanCustomizer.CurrentSpanCustomizer(Tracing tracing)", "testcase": false, "constructor": true}, {"identifier": "name", "parameters": "(String name)", "modifiers": "@Override public", "return": "SpanCustomizer", "signature": "SpanCustomizer name(String name)", "full_signature": "@Override public SpanCustomizer name(String name)", "class_method_signature": "CurrentSpanCustomizer.name(String name)", "testcase": false, "constructor": false}, {"identifier": "tag", "parameters": "(String key, String value)", "modifiers": "@Override public", "return": "SpanCustomizer", "signature": "SpanCustomizer tag(String key, String value)", "full_signature": "@Override public SpanCustomizer tag(String key, String value)", "class_method_signature": "CurrentSpanCustomizer.tag(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "annotate", "parameters": "(String value)", "modifiers": "@Override public", "return": "SpanCustomizer", "signature": "SpanCustomizer annotate(String value)", "full_signature": "@Override public SpanCustomizer annotate(String value)", "class_method_signature": "CurrentSpanCustomizer.annotate(String value)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/CurrentSpanCustomizer.java"}, "focal_method": {"identifier": "annotate", "parameters": "(String value)", "modifiers": "@Override public", "return": "SpanCustomizer", "body": "@Override public SpanCustomizer annotate(String value) {\n    return tracer.currentSpanCustomizer().annotate(value);\n  }", "signature": "SpanCustomizer annotate(String value)", "full_signature": "@Override public SpanCustomizer annotate(String value)", "class_method_signature": "CurrentSpanCustomizer.annotate(String value)", "testcase": false, "constructor": false, "invocations": ["annotate", "currentSpanCustomizer"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}