{"test_class": {"identifier": "ConnectionStatusMessageMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HEADER_HONO_DEVICE_ID = \"device_id\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_HONO_DEVICE_ID = \"device_id\"", "var_name": "HEADER_HONO_DEVICE_ID"}, {"original_string": "private static final String CREATION_TIME_STR = \"1571214120000\";", "modifier": "private static final", "type": "String", "declarator": "CREATION_TIME_STR = \"1571214120000\"", "var_name": "CREATION_TIME_STR"}, {"original_string": "private static final Instant CREATION_TIME = Instant.ofEpochMilli(Long.parseLong(CREATION_TIME_STR));", "modifier": "private static final", "type": "Instant", "declarator": "CREATION_TIME = Instant.ofEpochMilli(Long.parseLong(CREATION_TIME_STR))", "var_name": "CREATION_TIME"}, {"original_string": "private static final String TTD_STR = \"20\";", "modifier": "private static final", "type": "String", "declarator": "TTD_STR = \"20\"", "var_name": "TTD_STR"}, {"original_string": "private static final DittoProtocolAdapter DITTO_PROTOCOL_ADAPTER = DittoProtocolAdapter.newInstance();", "modifier": "private static final", "type": "DittoProtocolAdapter", "declarator": "DITTO_PROTOCOL_ADAPTER = DittoProtocolAdapter.newInstance()", "var_name": "DITTO_PROTOCOL_ADAPTER"}, {"original_string": "private static final String EXPECTED_READY_UNTIL_IN_DISTANT_FUTURE = \"9999-12-31T23:59:59Z\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_READY_UNTIL_IN_DISTANT_FUTURE = \"9999-12-31T23:59:59Z\"", "var_name": "EXPECTED_READY_UNTIL_IN_DISTANT_FUTURE"}, {"original_string": "private static MappingConfig mappingConfig;", "modifier": "private static", "type": "MappingConfig", "declarator": "mappingConfig", "var_name": "mappingConfig"}, {"original_string": "private Map<String, String> validHeader;", "modifier": "private", "type": "Map<String, String>", "declarator": "validHeader", "var_name": "validHeader"}, {"original_string": "private Map<String, JsonValue> validConfigProps;", "modifier": "private", "type": "Map<String, JsonValue>", "declarator": "validConfigProps", "var_name": "validConfigProps"}, {"original_string": "private Map<String, String> validConditions;", "modifier": "private", "type": "Map<String, String>", "declarator": "validConditions", "var_name": "validConditions"}, {"original_string": "private DefaultMessageMapperConfiguration validMapperConfig;", "modifier": "private", "type": "DefaultMessageMapperConfiguration", "declarator": "validMapperConfig", "var_name": "validMapperConfig"}, {"original_string": "private MessageMapper underTest;", "modifier": "private", "type": "MessageMapper", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Rule\n    public final ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}], "file": "services/connectivity/mapping/src/test/java/org/eclipse/ditto/services/connectivity/mapping/ConnectionStatusMessageMapperTest.java"}, "test_case": {"identifier": "doForwardMapWithMissingHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void doForwardMapWithMissingHeader() {\n        final Map<String, JsonValue> props =\n                Map.of(MAPPING_OPTIONS_PROPERTIES_THING_ID, JsonValue.of(\"{{ header:thing-id }}\"));\n        final MessageMapperConfiguration thingIdWithPlaceholder\n                = DefaultMessageMapperConfiguration.of(\"placeholder\", props, validConditions, validConditions);\n        underTest.configure(mappingConfig, thingIdWithPlaceholder);\n        final ExternalMessage externalMessage = ExternalMessageFactory.newExternalMessageBuilder(validHeader).build();\n        final List<Adaptable> mappingResult = underTest.map(externalMessage);\n        assertThat(mappingResult).isEmpty();\n    }", "signature": "void doForwardMapWithMissingHeader()", "full_signature": "@Test public void doForwardMapWithMissingHeader()", "class_method_signature": "ConnectionStatusMessageMapperTest.doForwardMapWithMissingHeader()", "testcase": true, "constructor": false, "invocations": ["of", "of", "of", "configure", "build", "newExternalMessageBuilder", "map", "isEmpty", "assertThat"]}, "focal_class": {"identifier": "ConnectionStatusMessageMapper", "superclass": "extends AbstractMessageMapper", "interfaces": "", "fields": [{"original_string": "private static final DittoLogger LOGGER = DittoLoggerFactory.getLogger(ConnectionStatusMessageMapper.class);", "modifier": "private static final", "type": "DittoLogger", "declarator": "LOGGER = DittoLoggerFactory.getLogger(ConnectionStatusMessageMapper.class)", "var_name": "LOGGER"}, {"original_string": "static final String HEADER_HONO_TTD = \"ttd\";", "modifier": "static final", "type": "String", "declarator": "HEADER_HONO_TTD = \"ttd\"", "var_name": "HEADER_HONO_TTD"}, {"original_string": "static final String HEADER_HONO_CREATION_TIME = \"creation-time\";", "modifier": "static final", "type": "String", "declarator": "HEADER_HONO_CREATION_TIME = \"creation-time\"", "var_name": "HEADER_HONO_CREATION_TIME"}, {"original_string": "static final String DEFAULT_FEATURE_ID = \"ConnectionStatus\";", "modifier": "static final", "type": "String", "declarator": "DEFAULT_FEATURE_ID = \"ConnectionStatus\"", "var_name": "DEFAULT_FEATURE_ID"}, {"original_string": "static final String MAPPING_OPTIONS_PROPERTIES_THING_ID = \"thingId\";", "modifier": "static final", "type": "String", "declarator": "MAPPING_OPTIONS_PROPERTIES_THING_ID = \"thingId\"", "var_name": "MAPPING_OPTIONS_PROPERTIES_THING_ID"}, {"original_string": "static final String MAPPING_OPTIONS_PROPERTIES_FEATURE_ID = \"featureId\";", "modifier": "static final", "type": "String", "declarator": "MAPPING_OPTIONS_PROPERTIES_FEATURE_ID = \"featureId\"", "var_name": "MAPPING_OPTIONS_PROPERTIES_FEATURE_ID"}, {"original_string": "static final String FEATURE_DEFINITION = \"org.eclipse.ditto:ConnectionStatus:1.0.0\";", "modifier": "static final", "type": "String", "declarator": "FEATURE_DEFINITION = \"org.eclipse.ditto:ConnectionStatus:1.0.0\"", "var_name": "FEATURE_DEFINITION"}, {"original_string": "static final String FEATURE_PROPERTY_CATEGORY_STATUS = \"status\";", "modifier": "static final", "type": "String", "declarator": "FEATURE_PROPERTY_CATEGORY_STATUS = \"status\"", "var_name": "FEATURE_PROPERTY_CATEGORY_STATUS"}, {"original_string": "static final String FEATURE_PROPERTY_READY_SINCE = \"readySince\";", "modifier": "static final", "type": "String", "declarator": "FEATURE_PROPERTY_READY_SINCE = \"readySince\"", "var_name": "FEATURE_PROPERTY_READY_SINCE"}, {"original_string": "static final String FEATURE_PROPERTY_READY_UNTIL = \"readyUntil\";", "modifier": "static final", "type": "String", "declarator": "FEATURE_PROPERTY_READY_UNTIL = \"readyUntil\"", "var_name": "FEATURE_PROPERTY_READY_UNTIL"}, {"original_string": "private static final Instant DISTANT_FUTURE_INSTANT = Instant.ofEpochSecond(253402300799L);", "modifier": "private static final", "type": "Instant", "declarator": "DISTANT_FUTURE_INSTANT = Instant.ofEpochSecond(253402300799L)", "var_name": "DISTANT_FUTURE_INSTANT"}, {"original_string": "private static final List<Adaptable> EMPTY_RESULT = Collections.emptyList();", "modifier": "private static final", "type": "List<Adaptable>", "declarator": "EMPTY_RESULT = Collections.emptyList()", "var_name": "EMPTY_RESULT"}, {"original_string": "private static final DittoProtocolAdapter DITTO_PROTOCOL_ADAPTER = DittoProtocolAdapter.newInstance();", "modifier": "private static final", "type": "DittoProtocolAdapter", "declarator": "DITTO_PROTOCOL_ADAPTER = DittoProtocolAdapter.newInstance()", "var_name": "DITTO_PROTOCOL_ADAPTER"}, {"original_string": "private static final HeadersPlaceholder HEADERS_PLACEHOLDER = PlaceholderFactory.newHeadersPlaceholder();", "modifier": "private static final", "type": "HeadersPlaceholder", "declarator": "HEADERS_PLACEHOLDER = PlaceholderFactory.newHeadersPlaceholder()", "var_name": "HEADERS_PLACEHOLDER"}, {"original_string": "private String mappingOptionFeatureId;", "modifier": "private", "type": "String", "declarator": "mappingOptionFeatureId", "var_name": "mappingOptionFeatureId"}, {"original_string": "private String mappingOptionThingId;", "modifier": "private", "type": "String", "declarator": "mappingOptionThingId", "var_name": "mappingOptionThingId"}], "methods": [{"identifier": "doConfigure", "parameters": "(final MappingConfig mappingConfig,\n            final MessageMapperConfiguration messageMapperConfiguration)", "modifiers": "@Override public", "return": "void", "signature": "void doConfigure(final MappingConfig mappingConfig,\n            final MessageMapperConfiguration messageMapperConfiguration)", "full_signature": "@Override public void doConfigure(final MappingConfig mappingConfig,\n            final MessageMapperConfiguration messageMapperConfiguration)", "class_method_signature": "ConnectionStatusMessageMapper.doConfigure(final MappingConfig mappingConfig,\n            final MessageMapperConfiguration messageMapperConfiguration)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(final ExternalMessage externalMessage)", "modifiers": "@Override public", "return": "List<Adaptable>", "signature": "List<Adaptable> map(final ExternalMessage externalMessage)", "full_signature": "@Override public List<Adaptable> map(final ExternalMessage externalMessage)", "class_method_signature": "ConnectionStatusMessageMapper.map(final ExternalMessage externalMessage)", "testcase": false, "constructor": false}, {"identifier": "doMap", "parameters": "(final ExternalMessage externalMessage)", "modifiers": "private", "return": "List<Adaptable>", "signature": "List<Adaptable> doMap(final ExternalMessage externalMessage)", "full_signature": "private List<Adaptable> doMap(final ExternalMessage externalMessage)", "class_method_signature": "ConnectionStatusMessageMapper.doMap(final ExternalMessage externalMessage)", "testcase": false, "constructor": false}, {"identifier": "getModifyFeaturePropertyAdaptable", "parameters": "(final ThingId thingId, final String featureId,\n            final Instant readyUntil, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "Adaptable", "signature": "Adaptable getModifyFeaturePropertyAdaptable(final ThingId thingId, final String featureId,\n            final Instant readyUntil, final DittoHeaders dittoHeaders)", "full_signature": "private Adaptable getModifyFeaturePropertyAdaptable(final ThingId thingId, final String featureId,\n            final Instant readyUntil, final DittoHeaders dittoHeaders)", "class_method_signature": "ConnectionStatusMessageMapper.getModifyFeaturePropertyAdaptable(final ThingId thingId, final String featureId,\n            final Instant readyUntil, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getModifyFeatureAdaptable", "parameters": "(final ThingId thingId, final String featureId, final Instant readyUntil,\n            @Nullable final Instant readySince, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "Adaptable", "signature": "Adaptable getModifyFeatureAdaptable(final ThingId thingId, final String featureId, final Instant readyUntil,\n            @Nullable final Instant readySince, final DittoHeaders dittoHeaders)", "full_signature": "private Adaptable getModifyFeatureAdaptable(final ThingId thingId, final String featureId, final Instant readyUntil,\n            @Nullable final Instant readySince, final DittoHeaders dittoHeaders)", "class_method_signature": "ConnectionStatusMessageMapper.getModifyFeatureAdaptable(final ThingId thingId, final String featureId, final Instant readyUntil,\n            @Nullable final Instant readySince, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "applyPlaceholderReplacement", "parameters": "(final String template, final ExpressionResolver expressionResolver)", "modifiers": "private", "return": "String", "signature": "String applyPlaceholderReplacement(final String template, final ExpressionResolver expressionResolver)", "full_signature": "private String applyPlaceholderReplacement(final String template, final ExpressionResolver expressionResolver)", "class_method_signature": "ConnectionStatusMessageMapper.applyPlaceholderReplacement(final String template, final ExpressionResolver expressionResolver)", "testcase": false, "constructor": false}, {"identifier": "getExpressionResolver", "parameters": "(final Map<String, String> headers)", "modifiers": "private static", "return": "ExpressionResolver", "signature": "ExpressionResolver getExpressionResolver(final Map<String, String> headers)", "full_signature": "private static ExpressionResolver getExpressionResolver(final Map<String, String> headers)", "class_method_signature": "ConnectionStatusMessageMapper.getExpressionResolver(final Map<String, String> headers)", "testcase": false, "constructor": false}, {"identifier": "getMappingFailedException", "parameters": "(final String message,\n            final String description, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "MessageMappingFailedException", "signature": "MessageMappingFailedException getMappingFailedException(final String message,\n            final String description, final DittoHeaders dittoHeaders)", "full_signature": "private MessageMappingFailedException getMappingFailedException(final String message,\n            final String description, final DittoHeaders dittoHeaders)", "class_method_signature": "ConnectionStatusMessageMapper.getMappingFailedException(final String message,\n            final String description, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "extractLongHeader", "parameters": "(final Map<String, String> headers, final String key,\n            final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "Long", "signature": "Long extractLongHeader(final Map<String, String> headers, final String key,\n            final DittoHeaders dittoHeaders)", "full_signature": "private Long extractLongHeader(final Map<String, String> headers, final String key,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "ConnectionStatusMessageMapper.extractLongHeader(final Map<String, String> headers, final String key,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(final Adaptable adaptable)", "modifiers": "@Override public", "return": "List<ExternalMessage>", "signature": "List<ExternalMessage> map(final Adaptable adaptable)", "full_signature": "@Override public List<ExternalMessage> map(final Adaptable adaptable)", "class_method_signature": "ConnectionStatusMessageMapper.map(final Adaptable adaptable)", "testcase": false, "constructor": false}], "file": "services/connectivity/mapping/src/main/java/org/eclipse/ditto/services/connectivity/mapping/ConnectionStatusMessageMapper.java"}, "focal_method": {"identifier": "map", "parameters": "(final ExternalMessage externalMessage)", "modifiers": "@Override public", "return": "List<Adaptable>", "body": "@Override\n    public List<Adaptable> map(final ExternalMessage externalMessage) {\n        try {\n            return doMap(externalMessage);\n        } catch (final Exception e) {\n            // we don't want to throw an exception in case something went wrong during the mapping\n            LOGGER.withCorrelationId(externalMessage.getInternalHeaders())\n                    .info(\"Error occurred during mapping: <{}>: {}\", e.getClass().getSimpleName(), e.getMessage());\n            return EMPTY_RESULT;\n        }\n    }", "signature": "List<Adaptable> map(final ExternalMessage externalMessage)", "full_signature": "@Override public List<Adaptable> map(final ExternalMessage externalMessage)", "class_method_signature": "ConnectionStatusMessageMapper.map(final ExternalMessage externalMessage)", "testcase": false, "constructor": false, "invocations": ["doMap", "info", "withCorrelationId", "getInternalHeaders", "getSimpleName", "getClass", "getMessage"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}