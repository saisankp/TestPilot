{"test_class": {"identifier": "ResourceHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-scenario-simulation/drools-scenario-simulation-backend/src/test/java/org/drools/scenariosimulation/backend/util/ResourceHelperTest.java"}, "test_case": {"identifier": "getResourcesFromDirectoryTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getResourcesFromDirectoryTest() {\n        List<String> classPathElements = Arrays.asList(getClassPathElements());\n        Optional<String> testFolder = classPathElements.stream().filter(elem -> elem.contains(\"test-classes\")).findFirst();\n        assertTrue(testFolder.isPresent());\n        File dir = new File(testFolder.get());\n        List<String> filesFound = getResourcesFromDirectory(dir, Pattern.compile(\".*testFile.txt\"))\n                .collect(Collectors.toList());\n        assertEquals(1, filesFound.size());\n\n        assertEquals(0, getResourcesFromDirectory(null, null).count());\n        assertEquals(0, getResourcesFromDirectory(dir, Pattern.compile(\"noMatch\")).count());\n    }", "signature": "void getResourcesFromDirectoryTest()", "full_signature": "@Test public void getResourcesFromDirectoryTest()", "class_method_signature": "ResourceHelperTest.getResourcesFromDirectoryTest()", "testcase": true, "constructor": false, "invocations": ["asList", "getClassPathElements", "findFirst", "filter", "stream", "contains", "assertTrue", "isPresent", "get", "collect", "getResourcesFromDirectory", "compile", "toList", "assertEquals", "size", "assertEquals", "count", "getResourcesFromDirectory", "assertEquals", "count", "getResourcesFromDirectory", "compile"]}, "focal_class": {"identifier": "ResourceHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ResourceHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " ResourceHelper()", "full_signature": "private  ResourceHelper()", "class_method_signature": "ResourceHelper.ResourceHelper()", "testcase": false, "constructor": true}, {"identifier": "getClassPathElements", "parameters": "()", "modifiers": "static", "return": "String[]", "signature": "String[] getClassPathElements()", "full_signature": "static String[] getClassPathElements()", "class_method_signature": "ResourceHelper.getClassPathElements()", "testcase": false, "constructor": false}, {"identifier": "getResourcesByExtension", "parameters": "(String extension)", "modifiers": "public static", "return": "Stream<String>", "signature": "Stream<String> getResourcesByExtension(String extension)", "full_signature": "public static Stream<String> getResourcesByExtension(String extension)", "class_method_signature": "ResourceHelper.getResourcesByExtension(String extension)", "testcase": false, "constructor": false}, {"identifier": "internalGetResources", "parameters": "(String path, Pattern pattern)", "modifiers": "static", "return": "Stream<String>", "signature": "Stream<String> internalGetResources(String path, Pattern pattern)", "full_signature": "static Stream<String> internalGetResources(String path, Pattern pattern)", "class_method_signature": "ResourceHelper.internalGetResources(String path, Pattern pattern)", "testcase": false, "constructor": false}, {"identifier": "getResourcesFromDirectory", "parameters": "(File directory, Pattern pattern)", "modifiers": "public static", "return": "Stream<String>", "signature": "Stream<String> getResourcesFromDirectory(File directory, Pattern pattern)", "full_signature": "public static Stream<String> getResourcesFromDirectory(File directory, Pattern pattern)", "class_method_signature": "ResourceHelper.getResourcesFromDirectory(File directory, Pattern pattern)", "testcase": false, "constructor": false}], "file": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ResourceHelper.java"}, "focal_method": {"identifier": "getResourcesFromDirectory", "parameters": "(File directory, Pattern pattern)", "modifiers": "public static", "return": "Stream<String>", "body": "public static Stream<String> getResourcesFromDirectory(File directory, Pattern pattern) {\n        if (directory == null || directory.listFiles() == null) {\n            return Stream.empty();\n        }\n        return Arrays.stream(directory.listFiles()).flatMap(elem -> {\n            if (elem.isDirectory()) {\n                return getResourcesFromDirectory(elem, pattern);\n            } else {\n                try {\n                    String fileName = elem.getCanonicalPath();\n                    if (pattern.matcher(fileName).matches()) {\n                        return Stream.of(fileName);\n                    }\n                } catch (final IOException e) {\n                    throw new ScenarioException(\"Impossible to access to resources\", e);\n                }\n            }\n            return Stream.empty();\n        });\n    }", "signature": "Stream<String> getResourcesFromDirectory(File directory, Pattern pattern)", "full_signature": "public static Stream<String> getResourcesFromDirectory(File directory, Pattern pattern)", "class_method_signature": "ResourceHelper.getResourcesFromDirectory(File directory, Pattern pattern)", "testcase": false, "constructor": false, "invocations": ["listFiles", "empty", "flatMap", "stream", "listFiles", "isDirectory", "getResourcesFromDirectory", "getCanonicalPath", "matches", "matcher", "of", "empty"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}