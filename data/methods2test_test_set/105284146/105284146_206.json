{"test_class": {"identifier": "GeneratorUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Network network;", "modifier": "private", "type": "Network", "declarator": "network", "var_name": "network"}, {"original_string": "private Bus bus1;", "modifier": "private", "type": "Bus", "declarator": "bus1", "var_name": "bus1"}, {"original_string": "private Generator g1;", "modifier": "private", "type": "Generator", "declarator": "g1", "var_name": "g1"}, {"original_string": "private Generator g2;", "modifier": "private", "type": "Generator", "declarator": "g2", "var_name": "g2"}, {"original_string": "private Generator g3;", "modifier": "private", "type": "Generator", "declarator": "g3", "var_name": "g3"}], "file": "action/action-util/src/test/java/com/powsybl/action/util/GeneratorUtilTest.java"}, "test_case": {"identifier": "testConnectVoltageRegulatorOff", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConnectVoltageRegulatorOff() {\n        g2.setVoltageRegulatorOn(false);\n        GeneratorUtil.connectGenerator(g2);\n        assertTrue(g2.getTerminal().isConnected());\n        assertEquals(22., g2.getTargetV(), 0.01);\n    }", "signature": "void testConnectVoltageRegulatorOff()", "full_signature": "@Test public void testConnectVoltageRegulatorOff()", "class_method_signature": "GeneratorUtilTest.testConnectVoltageRegulatorOff()", "testcase": true, "constructor": false, "invocations": ["setVoltageRegulatorOn", "connectGenerator", "assertTrue", "isConnected", "getTerminal", "assertEquals", "getTargetV"]}, "focal_class": {"identifier": "GeneratorUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "GeneratorUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " GeneratorUtil()", "full_signature": "private  GeneratorUtil()", "class_method_signature": "GeneratorUtil.GeneratorUtil()", "testcase": false, "constructor": true}, {"identifier": "connectGenerator", "parameters": "(Generator g)", "modifiers": "public static", "return": "void", "signature": "void connectGenerator(Generator g)", "full_signature": "public static void connectGenerator(Generator g)", "class_method_signature": "GeneratorUtil.connectGenerator(Generator g)", "testcase": false, "constructor": false}], "file": "action/action-util/src/main/java/com/powsybl/action/util/GeneratorUtil.java"}, "focal_method": {"identifier": "connectGenerator", "parameters": "(Generator g)", "modifiers": "public static", "return": "void", "body": "public static void connectGenerator(Generator g) {\n        Terminal t = g.getTerminal();\n        t.connect();\n        if (g.isVoltageRegulatorOn()) {\n            Bus bus = t.getBusView().getBus();\n            if (bus != null) {\n                // set voltage setpoint to the same as other generators connected to the bus\n                double targetV = bus.getGeneratorStream()\n                        .filter(g2 -> !g2.getId().equals(g.getId()))\n                        .findFirst().map(Generator::getTargetV).orElse(Double.NaN);\n                if (!Double.isNaN(targetV)) {\n                    g.setTargetV(targetV);\n                } else if (!Double.isNaN(bus.getV())) {\n                    // if no other generator connected to the bus, set voltage setpoint to network voltage\n                    g.setTargetV(bus.getV());\n                }\n            }\n        }\n    }", "signature": "void connectGenerator(Generator g)", "full_signature": "public static void connectGenerator(Generator g)", "class_method_signature": "GeneratorUtil.connectGenerator(Generator g)", "testcase": false, "constructor": false, "invocations": ["getTerminal", "connect", "isVoltageRegulatorOn", "getBus", "getBusView", "orElse", "map", "findFirst", "filter", "getGeneratorStream", "equals", "getId", "getId", "isNaN", "setTargetV", "isNaN", "getV", "setTargetV", "getV"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}