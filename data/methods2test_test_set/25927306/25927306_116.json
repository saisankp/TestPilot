{"test_class": {"identifier": "QueryTest", "superclass": "", "interfaces": "", "fields": [], "file": "templates/src/test/java/org/ldaptive/templates/QueryTest.java"}, "test_case": {"identifier": "format", "parameters": "(final Query query, final String[] terms)", "modifiers": "@Test(groups = \"querytest\", dataProvider = \"query-data\") public", "return": "void", "body": "@Test(groups = \"querytest\", dataProvider = \"query-data\")\n  public void format(final Query query, final String[] terms)\n  {\n    Assert.assertEquals(query.getTerms(), terms);\n  }", "signature": "void format(final Query query, final String[] terms)", "full_signature": "@Test(groups = \"querytest\", dataProvider = \"query-data\") public void format(final Query query, final String[] terms)", "class_method_signature": "QueryTest.format(final Query query, final String[] terms)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getTerms"]}, "focal_class": {"identifier": "Query", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] EMPTY_STRING_ARRAY = new String[0];", "modifier": "private static final", "type": "String[]", "declarator": "EMPTY_STRING_ARRAY = new String[0]", "var_name": "EMPTY_STRING_ARRAY"}, {"original_string": "private final String[] terms;", "modifier": "private final", "type": "String[]", "declarator": "terms", "var_name": "terms"}, {"original_string": "private String[] returnAttributes;", "modifier": "private", "type": "String[]", "declarator": "returnAttributes", "var_name": "returnAttributes"}, {"original_string": "private String searchRestrictions;", "modifier": "private", "type": "String", "declarator": "searchRestrictions", "var_name": "searchRestrictions"}, {"original_string": "private Integer fromResult;", "modifier": "private", "type": "Integer", "declarator": "fromResult", "var_name": "fromResult"}, {"original_string": "private Integer toResult;", "modifier": "private", "type": "Integer", "declarator": "toResult", "var_name": "toResult"}], "methods": [{"identifier": "Query", "parameters": "(final String query)", "modifiers": "public", "return": "", "signature": " Query(final String query)", "full_signature": "public  Query(final String query)", "class_method_signature": "Query.Query(final String query)", "testcase": false, "constructor": true}, {"identifier": "getTerms", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getTerms()", "full_signature": "public String[] getTerms()", "class_method_signature": "Query.getTerms()", "testcase": false, "constructor": false}, {"identifier": "setReturnAttributes", "parameters": "(final String[] attrs)", "modifiers": "public", "return": "void", "signature": "void setReturnAttributes(final String[] attrs)", "full_signature": "public void setReturnAttributes(final String[] attrs)", "class_method_signature": "Query.setReturnAttributes(final String[] attrs)", "testcase": false, "constructor": false}, {"identifier": "getReturnAttributes", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getReturnAttributes()", "full_signature": "public String[] getReturnAttributes()", "class_method_signature": "Query.getReturnAttributes()", "testcase": false, "constructor": false}, {"identifier": "setSearchRestrictions", "parameters": "(final String restrictions)", "modifiers": "public", "return": "void", "signature": "void setSearchRestrictions(final String restrictions)", "full_signature": "public void setSearchRestrictions(final String restrictions)", "class_method_signature": "Query.setSearchRestrictions(final String restrictions)", "testcase": false, "constructor": false}, {"identifier": "getSearchRestrictions", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSearchRestrictions()", "full_signature": "public String getSearchRestrictions()", "class_method_signature": "Query.getSearchRestrictions()", "testcase": false, "constructor": false}, {"identifier": "setFromResult", "parameters": "(final Integer i)", "modifiers": "public", "return": "void", "signature": "void setFromResult(final Integer i)", "full_signature": "public void setFromResult(final Integer i)", "class_method_signature": "Query.setFromResult(final Integer i)", "testcase": false, "constructor": false}, {"identifier": "getFromResult", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getFromResult()", "full_signature": "public Integer getFromResult()", "class_method_signature": "Query.getFromResult()", "testcase": false, "constructor": false}, {"identifier": "setToResult", "parameters": "(final Integer i)", "modifiers": "public", "return": "void", "signature": "void setToResult(final Integer i)", "full_signature": "public void setToResult(final Integer i)", "class_method_signature": "Query.setToResult(final Integer i)", "testcase": false, "constructor": false}, {"identifier": "getToResult", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getToResult()", "full_signature": "public Integer getToResult()", "class_method_signature": "Query.getToResult()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Query.toString()", "testcase": false, "constructor": false}], "file": "templates/src/main/java/org/ldaptive/templates/Query.java"}, "focal_method": {"identifier": "getTerms", "parameters": "()", "modifiers": "public", "return": "String[]", "body": "public String[] getTerms()\n  {\n    return terms;\n  }", "signature": "String[] getTerms()", "full_signature": "public String[] getTerms()", "class_method_signature": "Query.getTerms()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}