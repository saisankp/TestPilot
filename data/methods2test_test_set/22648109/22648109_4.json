{"test_class": {"identifier": "GeometryTest", "superclass": "", "interfaces": "", "fields": [], "file": "astroids/src/test/java/fr/octo/astroids/server/utils/GeometryTest.java"}, "test_case": {"identifier": "testCoordinatesAfterRotation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCoordinatesAfterRotation() {\n        Vector2 point = new Vector2(2d, 0d);\n        Double rotation = 50 * Math.PI / 180;// rotation of 50 degrees\n        DecimalFormat df = new DecimalFormat(\"0.00\", new DecimalFormatSymbols(Locale.ENGLISH));\n        assertThat(df.format(Geometry.coordinatesAfterRotation(point, rotation).x)).isEqualTo(\"1.29\");\n        assertThat(df.format(Geometry.coordinatesAfterRotation(point, rotation).y)).isEqualTo(\"1.53\");\n    }", "signature": "void testCoordinatesAfterRotation()", "full_signature": "@Test public void testCoordinatesAfterRotation()", "class_method_signature": "GeometryTest.testCoordinatesAfterRotation()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "format", "coordinatesAfterRotation", "isEqualTo", "assertThat", "format", "coordinatesAfterRotation"]}, "focal_class": {"identifier": "Geometry", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isInsideTriangle", "parameters": "(Vector2 p, Vector2 pA, Vector2 pB, Vector2 pC)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInsideTriangle(Vector2 p, Vector2 pA, Vector2 pB, Vector2 pC)", "full_signature": "public static boolean isInsideTriangle(Vector2 p, Vector2 pA, Vector2 pB, Vector2 pC)", "class_method_signature": "Geometry.isInsideTriangle(Vector2 p, Vector2 pA, Vector2 pB, Vector2 pC)", "testcase": false, "constructor": false}, {"identifier": "isInsideTriangle", "parameters": "(Vector2 p, Triangle triangle)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInsideTriangle(Vector2 p, Triangle triangle)", "full_signature": "public static boolean isInsideTriangle(Vector2 p, Triangle triangle)", "class_method_signature": "Geometry.isInsideTriangle(Vector2 p, Triangle triangle)", "testcase": false, "constructor": false}, {"identifier": "isBetweenZeroAndOne", "parameters": "(Double d)", "modifiers": "private static", "return": "boolean", "signature": "boolean isBetweenZeroAndOne(Double d)", "full_signature": "private static boolean isBetweenZeroAndOne(Double d)", "class_method_signature": "Geometry.isBetweenZeroAndOne(Double d)", "testcase": false, "constructor": false}, {"identifier": "areTrianglesColliding", "parameters": "(Triangle triangle1, Triangle triangle2)", "modifiers": "public static", "return": "boolean", "signature": "boolean areTrianglesColliding(Triangle triangle1, Triangle triangle2)", "full_signature": "public static boolean areTrianglesColliding(Triangle triangle1, Triangle triangle2)", "class_method_signature": "Geometry.areTrianglesColliding(Triangle triangle1, Triangle triangle2)", "testcase": false, "constructor": false}, {"identifier": "coordinatesAfterRotation", "parameters": "(Vector2 coordinates, Double rotation)", "modifiers": "public static", "return": "Vector2", "signature": "Vector2 coordinatesAfterRotation(Vector2 coordinates, Double rotation)", "full_signature": "public static Vector2 coordinatesAfterRotation(Vector2 coordinates, Double rotation)", "class_method_signature": "Geometry.coordinatesAfterRotation(Vector2 coordinates, Double rotation)", "testcase": false, "constructor": false}], "file": "astroids/src/main/java/fr/octo/astroids/server/utils/Geometry.java"}, "focal_method": {"identifier": "coordinatesAfterRotation", "parameters": "(Vector2 coordinates, Double rotation)", "modifiers": "public static", "return": "Vector2", "body": "public static Vector2 coordinatesAfterRotation(Vector2 coordinates, Double rotation) {\n        return new Vector2(\n                coordinates.x * Math.cos(rotation) - coordinates.y * Math.sin(rotation),\n                coordinates.x * Math.sin(rotation) - coordinates.y * Math.cos(rotation));\n    }", "signature": "Vector2 coordinatesAfterRotation(Vector2 coordinates, Double rotation)", "full_signature": "public static Vector2 coordinatesAfterRotation(Vector2 coordinates, Double rotation)", "class_method_signature": "Geometry.coordinatesAfterRotation(Vector2 coordinates, Double rotation)", "testcase": false, "constructor": false, "invocations": ["cos", "sin", "sin", "cos"]}, "repository": {"repo_id": 22648109, "url": "https://github.com/jpbriend/JavascriptGame", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 6, "size": 4632, "license": "licensed"}}