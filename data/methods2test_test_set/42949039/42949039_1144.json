{"test_class": {"identifier": "StorageRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private StorageRestController storageRestController;", "modifier": "@InjectMocks\n    private", "type": "StorageRestController", "declarator": "storageRestController", "var_name": "storageRestController"}, {"original_string": "@Mock\n    private StorageService storageService;", "modifier": "@Mock\n    private", "type": "StorageService", "declarator": "storageService", "var_name": "storageService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/StorageRestControllerTest.java"}, "test_case": {"identifier": "testDeleteStorage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeleteStorage()\n    {\n        // Create a storage key.\n        StorageKey storageKey = new StorageKey(STORAGE_NAME);\n\n        // Create a storage.\n        Storage storage = new Storage(STORAGE_NAME, STORAGE_PLATFORM_CODE, NO_ATTRIBUTES);\n\n        // Mock the external calls.\n        when(storageService.deleteStorage(storageKey)).thenReturn(storage);\n\n        // Call the method under test.\n        Storage result = storageRestController.deleteStorage(STORAGE_NAME);\n\n        // Verify the external calls.\n        verify(storageService).deleteStorage(storageKey);\n        verifyNoMoreInteractions(storageService);\n\n        // Validate the returned object.\n        assertEquals(storage, result);\n    }", "signature": "void testDeleteStorage()", "full_signature": "@Test public void testDeleteStorage()", "class_method_signature": "StorageRestControllerTest.testDeleteStorage()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "deleteStorage", "deleteStorage", "deleteStorage", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "StorageRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "private static final String STORAGE_URI_PREFIX = \"/storages\";", "modifier": "private static final", "type": "String", "declarator": "STORAGE_URI_PREFIX = \"/storages\"", "var_name": "STORAGE_URI_PREFIX"}, {"original_string": "@Autowired\n    private StorageService storageService;", "modifier": "@Autowired\n    private", "type": "StorageService", "declarator": "storageService", "var_name": "storageService"}], "methods": [{"identifier": "createStorage", "parameters": "(@RequestBody StorageCreateRequest storageCreateRequest)", "modifiers": "@RequestMapping(value = STORAGE_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGES_POST)", "return": "Storage", "signature": "Storage createStorage(@RequestBody StorageCreateRequest storageCreateRequest)", "full_signature": "@RequestMapping(value = STORAGE_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGES_POST) Storage createStorage(@RequestBody StorageCreateRequest storageCreateRequest)", "class_method_signature": "StorageRestController.createStorage(@RequestBody StorageCreateRequest storageCreateRequest)", "testcase": false, "constructor": false}, {"identifier": "deleteStorage", "parameters": "(@PathVariable(\"storageName\") String storageName)", "modifiers": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_STORAGES_DELETE)", "return": "Storage", "signature": "Storage deleteStorage(@PathVariable(\"storageName\") String storageName)", "full_signature": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_STORAGES_DELETE) Storage deleteStorage(@PathVariable(\"storageName\") String storageName)", "class_method_signature": "StorageRestController.deleteStorage(@PathVariable(\"storageName\") String storageName)", "testcase": false, "constructor": false}, {"identifier": "getStorage", "parameters": "(@PathVariable(\"storageName\") String storageName)", "modifiers": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGES_GET)", "return": "Storage", "signature": "Storage getStorage(@PathVariable(\"storageName\") String storageName)", "full_signature": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGES_GET) Storage getStorage(@PathVariable(\"storageName\") String storageName)", "class_method_signature": "StorageRestController.getStorage(@PathVariable(\"storageName\") String storageName)", "testcase": false, "constructor": false}, {"identifier": "getStorages", "parameters": "()", "modifiers": "@RequestMapping(value = STORAGE_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGES_ALL_GET)", "return": "StorageKeys", "signature": "StorageKeys getStorages()", "full_signature": "@RequestMapping(value = STORAGE_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGES_ALL_GET) StorageKeys getStorages()", "class_method_signature": "StorageRestController.getStorages()", "testcase": false, "constructor": false}, {"identifier": "updateStorage", "parameters": "(@PathVariable(\"storageName\") String storageName, @RequestBody StorageUpdateRequest storageUpdateRequest)", "modifiers": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGES_PUT)", "return": "Storage", "signature": "Storage updateStorage(@PathVariable(\"storageName\") String storageName, @RequestBody StorageUpdateRequest storageUpdateRequest)", "full_signature": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGES_PUT) Storage updateStorage(@PathVariable(\"storageName\") String storageName, @RequestBody StorageUpdateRequest storageUpdateRequest)", "class_method_signature": "StorageRestController.updateStorage(@PathVariable(\"storageName\") String storageName, @RequestBody StorageUpdateRequest storageUpdateRequest)", "testcase": false, "constructor": false}, {"identifier": "updateStorageAttributes", "parameters": "(@PathVariable(\"storageName\") String storageName, @RequestBody StorageAttributesUpdateRequest storageAttributesUpdateRequest)", "modifiers": "@RequestMapping(value = \"/storageAttributes/storages/{storageName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGE_ATTRIBUTES_PUT)", "return": "Storage", "signature": "Storage updateStorageAttributes(@PathVariable(\"storageName\") String storageName, @RequestBody StorageAttributesUpdateRequest storageAttributesUpdateRequest)", "full_signature": "@RequestMapping(value = \"/storageAttributes/storages/{storageName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGE_ATTRIBUTES_PUT) Storage updateStorageAttributes(@PathVariable(\"storageName\") String storageName, @RequestBody StorageAttributesUpdateRequest storageAttributesUpdateRequest)", "class_method_signature": "StorageRestController.updateStorageAttributes(@PathVariable(\"storageName\") String storageName, @RequestBody StorageAttributesUpdateRequest storageAttributesUpdateRequest)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/StorageRestController.java"}, "focal_method": {"identifier": "deleteStorage", "parameters": "(@PathVariable(\"storageName\") String storageName)", "modifiers": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_STORAGES_DELETE)", "return": "Storage", "body": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.DELETE)\n    @Secured(SecurityFunctions.FN_STORAGES_DELETE)\n    Storage deleteStorage(@PathVariable(\"storageName\") String storageName)\n    {\n        return storageService.deleteStorage(new StorageKey(storageName));\n    }", "signature": "Storage deleteStorage(@PathVariable(\"storageName\") String storageName)", "full_signature": "@RequestMapping(value = STORAGE_URI_PREFIX + \"/{storageName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_STORAGES_DELETE) Storage deleteStorage(@PathVariable(\"storageName\") String storageName)", "class_method_signature": "StorageRestController.deleteStorage(@PathVariable(\"storageName\") String storageName)", "testcase": false, "constructor": false, "invocations": ["deleteStorage"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}