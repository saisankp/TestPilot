{"test_class": {"identifier": "ImageSizesMergerTest", "superclass": "", "interfaces": "", "fields": [], "file": "s3tbx-slstr-pdu-stitching/src/test/java/org/esa/s3tbx/slstr/pdu/stitching/manifest/ImageSizesMergerTest.java"}, "test_case": {"identifier": "testMergeNodes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMergeNodes() throws Exception {\n        List<Node> fromParents = new ArrayList<>();\n        fromParents.add(ManifestTestUtils.createNode(\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n                        \"            <slstr:nadirImageSize grid=\\\"Tie Points\\\">\\n\" +\n                        \"              <sentinel3:startOffset>21687</sentinel3:startOffset>\\n\" +\n                        \"              <sentinel3:trackOffset>64</sentinel3:trackOffset>\\n\" +\n                        \"              <sentinel3:rows>2000</sentinel3:rows>\\n\" +\n                        \"              <sentinel3:columns>130</sentinel3:columns>\\n\" +\n                        \"            </slstr:nadirImageSize>\").getFirstChild());\n        fromParents.add(ManifestTestUtils.createNode(\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n                        \"                        <slstr:nadirImageSize grid=\\\"Tie Points\\\">\\n\" +\n                        \"                            <sentinel3:startOffset>23687</sentinel3:startOffset>\\n\" +\n                        \"                            <sentinel3:trackOffset>64</sentinel3:trackOffset>\\n\" +\n                        \"                            <sentinel3:rows>2000</sentinel3:rows>\\n\" +\n                        \"                            <sentinel3:columns>130</sentinel3:columns>\\n\" +\n                        \"                        </slstr:nadirImageSize>\").getFirstChild());\n        fromParents.add(ManifestTestUtils.createNode(\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n                        \"        <slstr:nadirImageSize grid=\\\"Tie Points\\\">\\n\" +\n                        \"        <sentinel3:startOffset>25687</sentinel3:startOffset>\\n\" +\n                        \"        <sentinel3:trackOffset>64</sentinel3:trackOffset>\\n\" +\n                        \"        <sentinel3:rows>2000</sentinel3:rows>\\n\" +\n                        \"        <sentinel3:columns>130</sentinel3:columns>\\n\" +\n                        \"        </slstr:nadirImageSize>\").getFirstChild());\n\n        Document manifest = ManifestTestUtils.createDocument();\n        final Element manifestElement = manifest.createElement(\"slstr:nadirImageSize\");\n        manifest.appendChild(manifestElement);\n\n        new ImageSizesMerger().mergeNodes(fromParents, manifestElement, manifest);\n\n        assertEquals(1, manifestElement.getAttributes().getLength());\n        assert(manifestElement.hasAttribute(\"grid\"));\n        assertEquals(\"Tie Points\", manifestElement.getAttribute(\"grid\"));\n\n        final NodeList childNodes = manifestElement.getChildNodes();\n        assertEquals(4, childNodes.getLength());\n        assertEquals(\"sentinel3:startOffset\", childNodes.item(0).getNodeName());\n        assertEquals(\"21687\", childNodes.item(0).getFirstChild().getNodeValue());\n        assertEquals(\"sentinel3:trackOffset\", childNodes.item(1).getNodeName());\n        assertEquals(\"64\", childNodes.item(1).getFirstChild().getNodeValue());\n        assertEquals(\"sentinel3:rows\", childNodes.item(2).getNodeName());\n        assertEquals(\"6000\", childNodes.item(2).getFirstChild().getNodeValue());\n        assertEquals(\"sentinel3:columns\", childNodes.item(3).getNodeName());\n        assertEquals(\"130\", childNodes.item(3).getFirstChild().getNodeValue());\n    }", "signature": "void testMergeNodes()", "full_signature": "@Test public void testMergeNodes()", "class_method_signature": "ImageSizesMergerTest.testMergeNodes()", "testcase": true, "constructor": false, "invocations": ["add", "getFirstChild", "createNode", "add", "getFirstChild", "createNode", "add", "getFirstChild", "createNode", "createDocument", "createElement", "appendChild", "mergeNodes", "assertEquals", "getLength", "getAttributes", "hasAttribute", "assertEquals", "getAttribute", "getChildNodes", "assertEquals", "getLength", "assertEquals", "getNodeName", "item", "assertEquals", "getNodeValue", "getFirstChild", "item", "assertEquals", "getNodeName", "item", "assertEquals", "getNodeValue", "getFirstChild", "item", "assertEquals", "getNodeName", "item", "assertEquals", "getNodeValue", "getFirstChild", "item", "assertEquals", "getNodeName", "item", "assertEquals", "getNodeValue", "getFirstChild", "item"]}, "focal_class": {"identifier": "ImageSizesMerger", "superclass": "extends AbstractElementMerger", "interfaces": "", "fields": [], "methods": [{"identifier": "mergeNodes", "parameters": "(List<Node> fromParents, Element toParent, Document toDocument)", "modifiers": "@Override public", "return": "void", "signature": "void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "full_signature": "@Override public void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "class_method_signature": "ImageSizesMerger.mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "testcase": false, "constructor": false}], "file": "s3tbx-slstr-pdu-stitching/src/main/java/org/esa/s3tbx/slstr/pdu/stitching/manifest/ImageSizesMerger.java"}, "focal_method": {"identifier": "mergeNodes", "parameters": "(List<Node> fromParents, Element toParent, Document toDocument)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument) throws PDUStitchingException {\n\n        ImageSize[] imageSizes = new ImageSize[fromParents.size()];\n        for (int i = 0; i < imageSizes.length; i++) {\n            imageSizes[i] = ImageSizeHandler.extractImageSizeFromNode(fromParents.get(i), \"\");\n        }\n        final ImageSize targetImageSize = ImageSizeHandler.createTargetImageSize(imageSizes);\n        final String grid = fromParents.get(0).getAttributes().item(0).getNodeValue();\n\n        toParent.setAttribute(\"grid\", grid);\n        final Element startOffsetElement = toDocument.createElement(\"sentinel3:startOffset\");\n        final Text startOffsetTextNode = toDocument.createTextNode(\"\" + targetImageSize.getStartOffset());\n        startOffsetElement.appendChild(startOffsetTextNode);\n        toParent.appendChild(startOffsetElement);\n        final Element trackOffsetElement = toDocument.createElement(\"sentinel3:trackOffset\");\n        final Text trackOffsetTextNode = toDocument.createTextNode(\"\" + targetImageSize.getTrackOffset());\n        trackOffsetElement.appendChild(trackOffsetTextNode);\n        toParent.appendChild(trackOffsetElement);\n        final Element rowsElement = toDocument.createElement(\"sentinel3:rows\");\n        final Text rowsTextNode = toDocument.createTextNode(\"\" + targetImageSize.getRows());\n        rowsElement.appendChild(rowsTextNode);\n        toParent.appendChild(rowsElement);\n        final Element columnsElement = toDocument.createElement(\"sentinel3:columns\");\n        final Text columnsTextNode = toDocument.createTextNode(\"\" + targetImageSize.getColumns());\n        columnsElement.appendChild(columnsTextNode);\n        toParent.appendChild(columnsElement);\n    }", "signature": "void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "full_signature": "@Override public void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "class_method_signature": "ImageSizesMerger.mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "testcase": false, "constructor": false, "invocations": ["size", "extractImageSizeFromNode", "get", "createTargetImageSize", "getNodeValue", "item", "getAttributes", "get", "setAttribute", "createElement", "createTextNode", "getStartOffset", "appendChild", "appendChild", "createElement", "createTextNode", "getTrackOffset", "appendChild", "appendChild", "createElement", "createTextNode", "getRows", "appendChild", "appendChild", "createElement", "createTextNode", "getColumns", "appendChild", "appendChild"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}