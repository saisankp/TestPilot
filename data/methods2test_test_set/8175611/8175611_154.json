{"test_class": {"identifier": "ObjectArrayConverterTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private ObjectArrayConverter underTest;", "modifier": "@InjectMocks\n    private", "type": "ObjectArrayConverter", "declarator": "underTest", "var_name": "underTest"}], "file": "junit4/src/test/java/com/tngtech/java/junit/dataprovider/internal/convert/ObjectArrayConverterTest.java"}, "test_case": {"identifier": "testConvertShouldCreateVarargsArrayForMultipleLastVarargsArguments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertShouldCreateVarargsArrayForMultipleLastVarargsArguments() {\n        // Given:\n        Object[] data = new Object[] { \"foobar\", 1l, 2l, 3l };\n        Class<?>[] parameterTypes = new Class<?>[] { String.class, long[].class };\n\n        // When:\n        Object[] result = underTest.convert(data, true, parameterTypes);\n\n        // Then:\n        assertThat(result).containsExactly(\"foobar\", new long[] { 1, 2, 3 });\n    }", "signature": "void testConvertShouldCreateVarargsArrayForMultipleLastVarargsArguments()", "full_signature": "@Test public void testConvertShouldCreateVarargsArrayForMultipleLastVarargsArguments()", "class_method_signature": "ObjectArrayConverterTest.testConvertShouldCreateVarargsArrayForMultipleLastVarargsArguments()", "testcase": true, "constructor": false, "invocations": ["convert", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "ObjectArrayConverter", "superclass": "extends com.tngtech.junit.dataprovider.convert.ObjectArrayConverter", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "full_signature": "@Override public Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "class_method_signature": "ObjectArrayConverter.convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "testcase": false, "constructor": false}, {"identifier": "checkIfArgumentsMatchParameterTypes", "parameters": "(Object[] arguments, Class<?>[] parameterTypes)", "modifiers": "@Override protected", "return": "void", "signature": "void checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "full_signature": "@Override protected void checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "class_method_signature": "ObjectArrayConverter.checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "testcase": false, "constructor": false}], "file": "junit4/src/main/java/com/tngtech/java/junit/dataprovider/internal/convert/ObjectArrayConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "modifiers": "@Override public", "return": "Object[]", "body": "@Override\n    public Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes) {\n        return super.convert(data, isVarargs, parameterTypes);\n    }", "signature": "Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "full_signature": "@Override public Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "class_method_signature": "ObjectArrayConverter.convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "testcase": false, "constructor": false, "invocations": ["convert"]}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}