{"test_class": {"identifier": "TestFailureHandlingHttpClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FailureHandlingHttpClient impl;", "modifier": "private", "type": "FailureHandlingHttpClient", "declarator": "impl", "var_name": "impl"}, {"original_string": "private HttpClient mockBackend;", "modifier": "private", "type": "HttpClient", "declarator": "mockBackend", "var_name": "mockBackend"}, {"original_string": "private HttpResponse resp;", "modifier": "private", "type": "HttpResponse", "declarator": "resp", "var_name": "resp"}, {"original_string": "private HttpHost host;", "modifier": "private", "type": "HttpHost", "declarator": "host", "var_name": "host"}, {"original_string": "private HttpRequest req;", "modifier": "private", "type": "HttpRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private HttpContext ctx;", "modifier": "private", "type": "HttpContext", "declarator": "ctx", "var_name": "ctx"}], "file": "jrugged-httpclient/src/test/java/org/fishwife/jrugged/httpclient/TestFailureHandlingHttpClient.java"}, "test_case": {"identifier": "throwsIOExceptionForCircuitBreakerException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void throwsIOExceptionForCircuitBreakerException() throws Exception {\n        expect(mockBackend.execute(host, req, ctx))\n            .andThrow(new CircuitBreakerException());\n        replay(mockBackend);\n        try {\n            impl.execute(host, req, ctx);\n            fail(\"should have thrown exception\");\n        } catch (IOException expected) {\n        }\n        verify(mockBackend);\n    }", "signature": "void throwsIOExceptionForCircuitBreakerException()", "full_signature": "@Test public void throwsIOExceptionForCircuitBreakerException()", "class_method_signature": "TestFailureHandlingHttpClient.throwsIOExceptionForCircuitBreakerException()", "testcase": true, "constructor": false, "invocations": ["andThrow", "expect", "execute", "replay", "execute", "fail", "verify"]}, "focal_class": {"identifier": "FailureHandlingHttpClient", "superclass": "extends AbstractHttpClientDecorator", "interfaces": "", "fields": [], "methods": [{"identifier": "FailureHandlingHttpClient", "parameters": "(HttpClient backend)", "modifiers": "public", "return": "", "signature": " FailureHandlingHttpClient(HttpClient backend)", "full_signature": "public  FailureHandlingHttpClient(HttpClient backend)", "class_method_signature": "FailureHandlingHttpClient.FailureHandlingHttpClient(HttpClient backend)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(HttpHost host, HttpRequest req, HttpContext ctx)", "modifiers": "public", "return": "HttpResponse", "signature": "HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)", "full_signature": "public HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)", "class_method_signature": "FailureHandlingHttpClient.execute(HttpHost host, HttpRequest req, HttpContext ctx)", "testcase": false, "constructor": false}], "file": "jrugged-httpclient/src/main/java/org/fishwife/jrugged/httpclient/FailureHandlingHttpClient.java"}, "focal_method": {"identifier": "execute", "parameters": "(HttpHost host, HttpRequest req, HttpContext ctx)", "modifiers": "public", "return": "HttpResponse", "body": "public HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)\n            throws IOException, ClientProtocolException {\n        try {\n            return backend.execute(host, req, ctx);\n        } catch (UnsuccessfulResponseException ure) {\n            return ure.getResponse();\n        } catch (CircuitBreakerException cbe) {\n            throw new IOException(cbe);\n        }\n    }", "signature": "HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)", "full_signature": "public HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)", "class_method_signature": "FailureHandlingHttpClient.execute(HttpHost host, HttpRequest req, HttpContext ctx)", "testcase": false, "constructor": false, "invocations": ["execute", "getResponse"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}