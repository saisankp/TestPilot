{"test_class": {"identifier": "URIBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "addons/jobs/jobs-api/src/test/java/org/kie/kogito/jobs/api/URIBuilderTest.java"}, "test_case": {"identifier": "testToURIHttpWithPort", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testToURIHttpWithPort() {\n        URI jobServiceURL = URIBuilder.toURI(\"http://localhost:8080/resource1/resource2?x=1&y=2\");\n        assertHttp(jobServiceURL, \"http\", 8080);\n    }", "signature": "void testToURIHttpWithPort()", "full_signature": "@Test void testToURIHttpWithPort()", "class_method_signature": "URIBuilderTest.testToURIHttpWithPort()", "testcase": true, "constructor": false, "invocations": ["toURI", "assertHttp"]}, "focal_class": {"identifier": "URIBuilder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "URIBuilder", "parameters": "()", "modifiers": "private", "return": "", "signature": " URIBuilder()", "full_signature": "private  URIBuilder()", "class_method_signature": "URIBuilder.URIBuilder()", "testcase": false, "constructor": true}, {"identifier": "toURI", "parameters": "(String urlStr)", "modifiers": "public static", "return": "URI", "signature": "URI toURI(String urlStr)", "full_signature": "public static URI toURI(String urlStr)", "class_method_signature": "URIBuilder.toURI(String urlStr)", "testcase": false, "constructor": false}], "file": "addons/jobs/jobs-api/src/main/java/org/kie/kogito/jobs/api/URIBuilder.java"}, "focal_method": {"identifier": "toURI", "parameters": "(String urlStr)", "modifiers": "public static", "return": "URI", "body": "public static URI toURI(String urlStr) {\n        try {\n            final URL url = new URL(urlStr);\n            final Integer port = Optional.of(url.getPort()).filter(p -> !p.equals(-1)).orElse(url.getDefaultPort());\n            final URI uri = url.toURI();\n            return new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), port, uri.getPath(), uri.getQuery(),\n                    uri.getFragment());\n\n        } catch (MalformedURLException | URISyntaxException e) {\n           throw new IllegalArgumentException(\"Not valid URI: \" + urlStr, e);\n        }\n    }", "signature": "URI toURI(String urlStr)", "full_signature": "public static URI toURI(String urlStr)", "class_method_signature": "URIBuilder.toURI(String urlStr)", "testcase": false, "constructor": false, "invocations": ["orElse", "filter", "of", "getPort", "equals", "getDefaultPort", "toURI", "getScheme", "getUserInfo", "getHost", "getPath", "getQuery", "getFragment"]}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}