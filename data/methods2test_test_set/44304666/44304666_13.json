{"test_class": {"identifier": "ProvinceInfoParserTaskTest", "superclass": "extends PickViewTestSupport", "interfaces": "", "fields": [{"original_string": "private ProvinceInfoParserTask provinceInfoParserTask;", "modifier": "private", "type": "ProvinceInfoParserTask", "declarator": "provinceInfoParserTask", "var_name": "provinceInfoParserTask"}, {"original_string": "@Mock\n    private Context mockContext;", "modifier": "@Mock\n    private", "type": "Context", "declarator": "mockContext", "var_name": "mockContext"}, {"original_string": "@Mock\n    private AssetManager mockAssetManager;", "modifier": "@Mock\n    private", "type": "AssetManager", "declarator": "mockAssetManager", "var_name": "mockAssetManager"}, {"original_string": "@Mock\n    private Handler mockHandler;", "modifier": "@Mock\n    private", "type": "Handler", "declarator": "mockHandler", "var_name": "mockHandler"}, {"original_string": "@Mock\n    private Message mockMessage;", "modifier": "@Mock\n    private", "type": "Message", "declarator": "mockMessage", "var_name": "mockMessage"}, {"original_string": "private List<ProvinceModel> provinces;", "modifier": "private", "type": "List<ProvinceModel>", "declarator": "provinces", "var_name": "provinces"}], "file": "app/src/test/java/com/brucetoo/pickview/provincepick/utils/ProvinceInfoParserTaskTest.java"}, "test_case": {"identifier": "testDoInBackground", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoInBackground() {\n        // when\n        List<ProvinceModel> actual = provinceInfoParserTask.doInBackground();\n\n        // then\n        assertNotNull(actual);\n        assertProvinceList(provinces, actual);\n    }", "signature": "void testDoInBackground()", "full_signature": "@Test public void testDoInBackground()", "class_method_signature": "ProvinceInfoParserTaskTest.testDoInBackground()", "testcase": true, "constructor": false, "invocations": ["doInBackground", "assertNotNull", "assertProvinceList"]}, "focal_class": {"identifier": "ProvinceInfoParserTask", "superclass": "extends AsyncTask<Void, Void, List<ProvinceModel>>", "interfaces": "", "fields": [{"original_string": "public static final int MSG_PARSE_RESULT_CALLBACK = 0x100;", "modifier": "public static final", "type": "int", "declarator": "MSG_PARSE_RESULT_CALLBACK = 0x100", "var_name": "MSG_PARSE_RESULT_CALLBACK"}, {"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "private Handler mHandler;", "modifier": "private", "type": "Handler", "declarator": "mHandler", "var_name": "mHandler"}], "methods": [{"identifier": "ProvinceInfoParserTask", "parameters": "(Context context, Handler handler)", "modifiers": "public", "return": "", "signature": " ProvinceInfoParserTask(Context context, Handler handler)", "full_signature": "public  ProvinceInfoParserTask(Context context, Handler handler)", "class_method_signature": "ProvinceInfoParserTask.ProvinceInfoParserTask(Context context, Handler handler)", "testcase": false, "constructor": true}, {"identifier": "doInBackground", "parameters": "(Void... params)", "modifiers": "@Override protected", "return": "List<ProvinceModel>", "signature": "List<ProvinceModel> doInBackground(Void... params)", "full_signature": "@Override protected List<ProvinceModel> doInBackground(Void... params)", "class_method_signature": "ProvinceInfoParserTask.doInBackground(Void... params)", "testcase": false, "constructor": false}, {"identifier": "onPostExecute", "parameters": "(List<ProvinceModel> result)", "modifiers": "@Override protected", "return": "void", "signature": "void onPostExecute(List<ProvinceModel> result)", "full_signature": "@Override protected void onPostExecute(List<ProvinceModel> result)", "class_method_signature": "ProvinceInfoParserTask.onPostExecute(List<ProvinceModel> result)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/brucetoo/pickview/provincepick/utils/ProvinceInfoParserTask.java"}, "focal_method": {"identifier": "doInBackground", "parameters": "(Void... params)", "modifiers": "@Override protected", "return": "List<ProvinceModel>", "body": "@Override\n\tprotected List<ProvinceModel> doInBackground(Void... params) {\n\n\t\tif (null == mContext)\n\t\t\treturn null;\n\n\t\tList<ProvinceModel> provinceList = new ArrayList<ProvinceModel>();\n\n\t\ttry {\n\t\t\tSAXParserFactory sax = SAXParserFactory.newInstance();// \u521b\u5efa\u89e3\u6790\u5668\n\t\t\tXMLReader reader = sax.newSAXParser().getXMLReader();\n\t\t\tInputStream in = mContext.getAssets().open(\"city.xml\");\n\n\t\t\treader.setContentHandler(new ProvinceInfoHandler(provinceList));// \u4e3areader\u8bbe\u7f6e\u5185\u5bb9\u5904\u7406\u5668\n\t\t\treader.parse(new InputSource(in));// \u5f00\u59cb\u89e3\u6790\u6587\u4ef6\n\t\t} catch (SAXException e) {\n\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\n\t\t\te.printStackTrace();\n\t\t} catch (ParserConfigurationException e) {\n\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\treturn provinceList;\n\t}", "signature": "List<ProvinceModel> doInBackground(Void... params)", "full_signature": "@Override protected List<ProvinceModel> doInBackground(Void... params)", "class_method_signature": "ProvinceInfoParserTask.doInBackground(Void... params)", "testcase": false, "constructor": false, "invocations": ["newInstance", "getXMLReader", "newSAXParser", "open", "getAssets", "setContentHandler", "parse", "printStackTrace", "printStackTrace", "printStackTrace"]}, "repository": {"repo_id": 44304666, "url": "https://github.com/brucetoo/PickView", "language": "Java", "is_fork": false, "fork_count": 271, "stargazer_count": 1060, "size": 5789, "license": "licensed"}}