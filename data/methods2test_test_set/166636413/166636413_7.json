{"test_class": {"identifier": "GridMultiWidgetTest", "superclass": "extends GeneralSelectMultiWidgetTest<GridMultiWidget>", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}, {"original_string": "@Mock\n    private ReferenceManager referenceManager;", "modifier": "@Mock\n    private", "type": "ReferenceManager", "declarator": "referenceManager", "var_name": "referenceManager"}, {"original_string": "@Mock\n    private AudioHelper audioHelper;", "modifier": "@Mock\n    private", "type": "AudioHelper", "declarator": "audioHelper", "var_name": "audioHelper"}, {"original_string": "@Mock\n    private Analytics analytics;", "modifier": "@Mock\n    private", "type": "Analytics", "declarator": "analytics", "var_name": "analytics"}], "file": "collect_app/src/test/java/org/odk/collect/android/widgets/GridMultiWidgetTest.java"}, "test_case": {"identifier": "whenChoicesHaveAudio_clickingChoice_doesNotPlayAudio", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenChoicesHaveAudio_clickingChoice_doesNotPlayAudio() throws Exception {\n        createMockReference(referenceManager, \"file://blah2.mp3\");\n        createMockReference(referenceManager, \"file://blah1.mp3\");\n\n        formEntryPrompt = new MockFormEntryPromptBuilder()\n                .withIndex(\"i am index\")\n                .withSelectChoices(asList(\n                        new SelectChoice(\"1\", \"1\"),\n                        new SelectChoice(\"2\", \"2\")\n                ))\n                .withSpecialFormSelectChoiceText(asList(\n                        new Pair<>(FormEntryCaption.TEXT_FORM_AUDIO, \"file://blah1.mp3\"),\n                        new Pair<>(FormEntryCaption.TEXT_FORM_AUDIO, \"file://blah2.mp3\")\n                ))\n                .build();\n\n        GridMultiWidget widget = getActualWidget();\n        widget.onItemClick(0);\n\n        verify(audioHelper, never()).play(any());\n    }", "signature": "void whenChoicesHaveAudio_clickingChoice_doesNotPlayAudio()", "full_signature": "@Test public void whenChoicesHaveAudio_clickingChoice_doesNotPlayAudio()", "class_method_signature": "GridMultiWidgetTest.whenChoicesHaveAudio_clickingChoice_doesNotPlayAudio()", "testcase": true, "constructor": false, "invocations": ["createMockReference", "createMockReference", "build", "withSpecialFormSelectChoiceText", "withSelectChoices", "withIndex", "asList", "asList", "getActualWidget", "onItemClick", "play", "verify", "never", "any"]}, "focal_class": {"identifier": "GridMultiWidget", "superclass": "extends BaseGridWidget", "interfaces": "", "fields": [], "methods": [{"identifier": "GridMultiWidget", "parameters": "(Context context, QuestionDetails questionDetails)", "modifiers": "public", "return": "", "signature": " GridMultiWidget(Context context, QuestionDetails questionDetails)", "full_signature": "public  GridMultiWidget(Context context, QuestionDetails questionDetails)", "class_method_signature": "GridMultiWidget.GridMultiWidget(Context context, QuestionDetails questionDetails)", "testcase": false, "constructor": true}, {"identifier": "fillInAnswer", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void fillInAnswer()", "full_signature": "@Override protected void fillInAnswer()", "class_method_signature": "GridMultiWidget.fillInAnswer()", "testcase": false, "constructor": false}, {"identifier": "onItemClick", "parameters": "(int index)", "modifiers": "@Override protected", "return": "void", "signature": "void onItemClick(int index)", "full_signature": "@Override protected void onItemClick(int index)", "class_method_signature": "GridMultiWidget.onItemClick(int index)", "testcase": false, "constructor": false}, {"identifier": "getAnswer", "parameters": "()", "modifiers": "@Override public", "return": "IAnswerData", "signature": "IAnswerData getAnswer()", "full_signature": "@Override public IAnswerData getAnswer()", "class_method_signature": "GridMultiWidget.getAnswer()", "testcase": false, "constructor": false}, {"identifier": "setChoiceSelected", "parameters": "(int choiceIndex, boolean isSelected)", "modifiers": "@Override public", "return": "void", "signature": "void setChoiceSelected(int choiceIndex, boolean isSelected)", "full_signature": "@Override public void setChoiceSelected(int choiceIndex, boolean isSelected)", "class_method_signature": "GridMultiWidget.setChoiceSelected(int choiceIndex, boolean isSelected)", "testcase": false, "constructor": false}], "file": "collect_app/src/main/java/org/odk/collect/android/widgets/GridMultiWidget.java"}, "focal_method": {"identifier": "onItemClick", "parameters": "(int index)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void onItemClick(int index) {\n        if (selectedItems.contains(index)) {\n            selectedItems.remove(Integer.valueOf(index));\n            if (noButtonsMode) {\n                itemViews[index].setBackgroundColor(0);\n                getAudioHelper().stop();\n            }\n        } else {\n            selectedItems.add(index);\n            if (noButtonsMode) {\n                itemViews[index].setBackgroundColor(bgOrange);\n\n                SelectChoice item = items.get(index);\n                Clip clip = getClip(getFormEntryPrompt(), item, getReferenceManager());\n\n                if (clip != null) {\n                    getAudioHelper().play(clip);\n                }\n            }\n        }\n        widgetValueChanged();\n    }", "signature": "void onItemClick(int index)", "full_signature": "@Override protected void onItemClick(int index)", "class_method_signature": "GridMultiWidget.onItemClick(int index)", "testcase": false, "constructor": false, "invocations": ["contains", "remove", "valueOf", "setBackgroundColor", "stop", "getAudioHelper", "add", "setBackgroundColor", "get", "getClip", "getFormEntryPrompt", "getReferenceManager", "play", "getAudioHelper", "widgetValueChanged"]}, "repository": {"repo_id": 166636413, "url": "https://github.com/fieldsight/fieldsight-mobile", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 14, "size": 41030, "license": "licensed"}}