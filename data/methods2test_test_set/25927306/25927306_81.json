{"test_class": {"identifier": "PasswordPolicyControlTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/control/PasswordPolicyControlTest.java"}, "test_case": {"identifier": "decode", "parameters": "(final DERBuffer berValue, final PasswordPolicyControl expected)", "modifiers": "@Test(groups = \"control\", dataProvider = \"response\") public", "return": "void", "body": "@Test(groups = \"control\", dataProvider = \"response\")\n  public void decode(final DERBuffer berValue, final PasswordPolicyControl expected)\n    throws Exception\n  {\n    final PasswordPolicyControl actual = new PasswordPolicyControl(expected.getCriticality());\n    actual.decode(berValue);\n    Assert.assertEquals(actual, expected);\n  }", "signature": "void decode(final DERBuffer berValue, final PasswordPolicyControl expected)", "full_signature": "@Test(groups = \"control\", dataProvider = \"response\") public void decode(final DERBuffer berValue, final PasswordPolicyControl expected)", "class_method_signature": "PasswordPolicyControlTest.decode(final DERBuffer berValue, final PasswordPolicyControl expected)", "testcase": true, "constructor": false, "invocations": ["getCriticality", "decode", "assertEquals"]}, "focal_class": {"identifier": "PasswordPolicyControl", "superclass": "extends AbstractControl", "interfaces": "implements RequestControl, ResponseControl", "fields": [{"original_string": "public static final String OID = \"1.3.6.1.4.1.42.2.27.8.5.1\";", "modifier": "public static final", "type": "String", "declarator": "OID = \"1.3.6.1.4.1.42.2.27.8.5.1\"", "var_name": "OID"}, {"original_string": "private static final int HASH_CODE_SEED = 719;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_SEED = 719", "var_name": "HASH_CODE_SEED"}, {"original_string": "private int timeBeforeExpiration = -1;", "modifier": "private", "type": "int", "declarator": "timeBeforeExpiration = -1", "var_name": "timeBeforeExpiration"}, {"original_string": "private int graceAuthNsRemaining = -1;", "modifier": "private", "type": "int", "declarator": "graceAuthNsRemaining = -1", "var_name": "graceAuthNsRemaining"}, {"original_string": "private Error error;", "modifier": "private", "type": "Error", "declarator": "error", "var_name": "error"}], "methods": [{"identifier": "PasswordPolicyControl", "parameters": "()", "modifiers": "public", "return": "", "signature": " PasswordPolicyControl()", "full_signature": "public  PasswordPolicyControl()", "class_method_signature": "PasswordPolicyControl.PasswordPolicyControl()", "testcase": false, "constructor": true}, {"identifier": "PasswordPolicyControl", "parameters": "(final boolean critical)", "modifiers": "public", "return": "", "signature": " PasswordPolicyControl(final boolean critical)", "full_signature": "public  PasswordPolicyControl(final boolean critical)", "class_method_signature": "PasswordPolicyControl.PasswordPolicyControl(final boolean critical)", "testcase": false, "constructor": true}, {"identifier": "hasValue", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasValue()", "full_signature": "@Override public boolean hasValue()", "class_method_signature": "PasswordPolicyControl.hasValue()", "testcase": false, "constructor": false}, {"identifier": "getTimeBeforeExpiration", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTimeBeforeExpiration()", "full_signature": "public int getTimeBeforeExpiration()", "class_method_signature": "PasswordPolicyControl.getTimeBeforeExpiration()", "testcase": false, "constructor": false}, {"identifier": "setTimeBeforeExpiration", "parameters": "(final int time)", "modifiers": "public", "return": "void", "signature": "void setTimeBeforeExpiration(final int time)", "full_signature": "public void setTimeBeforeExpiration(final int time)", "class_method_signature": "PasswordPolicyControl.setTimeBeforeExpiration(final int time)", "testcase": false, "constructor": false}, {"identifier": "getGraceAuthNsRemaining", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getGraceAuthNsRemaining()", "full_signature": "public int getGraceAuthNsRemaining()", "class_method_signature": "PasswordPolicyControl.getGraceAuthNsRemaining()", "testcase": false, "constructor": false}, {"identifier": "setGraceAuthNsRemaining", "parameters": "(final int count)", "modifiers": "public", "return": "void", "signature": "void setGraceAuthNsRemaining(final int count)", "full_signature": "public void setGraceAuthNsRemaining(final int count)", "class_method_signature": "PasswordPolicyControl.setGraceAuthNsRemaining(final int count)", "testcase": false, "constructor": false}, {"identifier": "getError", "parameters": "()", "modifiers": "public", "return": "Error", "signature": "Error getError()", "full_signature": "public Error getError()", "class_method_signature": "PasswordPolicyControl.getError()", "testcase": false, "constructor": false}, {"identifier": "setError", "parameters": "(final Error e)", "modifiers": "public", "return": "void", "signature": "void setError(final Error e)", "full_signature": "public void setError(final Error e)", "class_method_signature": "PasswordPolicyControl.setError(final Error e)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "PasswordPolicyControl.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PasswordPolicyControl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PasswordPolicyControl.toString()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] encode()", "full_signature": "@Override public byte[] encode()", "class_method_signature": "PasswordPolicyControl.encode()", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(final DERBuffer encoded)", "modifiers": "@Override public", "return": "void", "signature": "void decode(final DERBuffer encoded)", "full_signature": "@Override public void decode(final DERBuffer encoded)", "class_method_signature": "PasswordPolicyControl.decode(final DERBuffer encoded)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/control/PasswordPolicyControl.java"}, "focal_method": {"identifier": "decode", "parameters": "(final DERBuffer encoded)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void decode(final DERBuffer encoded)\n  {\n    final DERParser parser = new DERParser();\n    parser.registerHandler(TimeBeforeExpirationHandler.PATH, new TimeBeforeExpirationHandler(this));\n    parser.registerHandler(GraceAuthnsRemainingHandler.PATH, new GraceAuthnsRemainingHandler(this));\n    parser.registerHandler(ErrorHandler.PATH, new ErrorHandler(this));\n    parser.parse(encoded);\n  }", "signature": "void decode(final DERBuffer encoded)", "full_signature": "@Override public void decode(final DERBuffer encoded)", "class_method_signature": "PasswordPolicyControl.decode(final DERBuffer encoded)", "testcase": false, "constructor": false, "invocations": ["registerHandler", "registerHandler", "registerHandler", "parse"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}