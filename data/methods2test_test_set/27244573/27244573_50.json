{"test_class": {"identifier": "XviImporterTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/hwyl/sexytopo/control/io/thirdparty/xvi/XviImporterTest.java"}, "test_case": {"identifier": "testParseSketchEntryFailsForUnknownFirstCommand", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n    public void testParseSketchEntryFailsForUnknownFirstCommand() throws Exception {\n        String simpleText = \"connect 0 0\";\n        PathDetail pathDetail = XviImporter.parseSketchEntry(1, simpleText);\n    }", "signature": "void testParseSketchEntryFailsForUnknownFirstCommand()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void testParseSketchEntryFailsForUnknownFirstCommand()", "class_method_signature": "XviImporterTest.testParseSketchEntryFailsForUnknownFirstCommand()", "testcase": true, "constructor": false, "invocations": ["parseSketchEntry"]}, "focal_class": {"identifier": "XviImporter", "superclass": "extends Importer", "interfaces": "", "fields": [{"original_string": "private static XviImporter instance = new XviImporter();", "modifier": "private static", "type": "XviImporter", "declarator": "instance = new XviImporter()", "var_name": "instance"}], "methods": [{"identifier": "toSurvey", "parameters": "(File file)", "modifiers": "public", "return": "Survey", "signature": "Survey toSurvey(File file)", "full_signature": "public Survey toSurvey(File file)", "class_method_signature": "XviImporter.toSurvey(File file)", "testcase": false, "constructor": false}, {"identifier": "getSketch", "parameters": "(File file)", "modifiers": "public static", "return": "Sketch", "signature": "Sketch getSketch(File file)", "full_signature": "public static Sketch getSketch(File file)", "class_method_signature": "XviImporter.getSketch(File file)", "testcase": false, "constructor": false}, {"identifier": "canHandleFile", "parameters": "(File file)", "modifiers": "public", "return": "boolean", "signature": "boolean canHandleFile(File file)", "full_signature": "public boolean canHandleFile(File file)", "class_method_signature": "XviImporter.canHandleFile(File file)", "testcase": false, "constructor": false}, {"identifier": "parseGrid", "parameters": "(String contents)", "modifiers": "public", "return": "Grid", "signature": "Grid parseGrid(String contents)", "full_signature": "public Grid parseGrid(String contents)", "class_method_signature": "XviImporter.parseGrid(String contents)", "testcase": false, "constructor": false}, {"identifier": "parseSketchlineBlock", "parameters": "(double scale, String contents)", "modifiers": "public static", "return": "Set<PathDetail>", "signature": "Set<PathDetail> parseSketchlineBlock(double scale, String contents)", "full_signature": "public static Set<PathDetail> parseSketchlineBlock(double scale, String contents)", "class_method_signature": "XviImporter.parseSketchlineBlock(double scale, String contents)", "testcase": false, "constructor": false}, {"identifier": "parseBlockEntries", "parameters": "(String content)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> parseBlockEntries(String content)", "full_signature": "public static List<String> parseBlockEntries(String content)", "class_method_signature": "XviImporter.parseBlockEntries(String content)", "testcase": false, "constructor": false}, {"identifier": "parseSketchEntry", "parameters": "(double scale, String entry)", "modifiers": "public static", "return": "PathDetail", "signature": "PathDetail parseSketchEntry(double scale, String entry)", "full_signature": "public static PathDetail parseSketchEntry(double scale, String entry)", "class_method_signature": "XviImporter.parseSketchEntry(double scale, String entry)", "testcase": false, "constructor": false}, {"identifier": "getBlockContents", "parameters": "(String text, String command)", "modifiers": "public static", "return": "String", "signature": "String getBlockContents(String text, String command)", "full_signature": "public static String getBlockContents(String text, String command)", "class_method_signature": "XviImporter.getBlockContents(String text, String command)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/hwyl/sexytopo/control/io/thirdparty/xvi/XviImporter.java"}, "focal_method": {"identifier": "parseSketchEntry", "parameters": "(double scale, String entry)", "modifiers": "public static", "return": "PathDetail", "body": "public static PathDetail parseSketchEntry(double scale, String entry) throws IllegalArgumentException {\n        List<String> tokens = Arrays.asList(entry.split(\" \"));\n\n        if (tokens.size() <= 1) {\n            throw new IllegalArgumentException(\"Incomplete token? {\" + entry + \"}\");\n        }\n\n        String first = tokens.get(0);\n        if (first.equals(\"connect\")) {\n            throw new IllegalArgumentException(\"Not sure what to do with token {\" + entry + \"}\");\n        }\n\n        if (tokens.size() % 2 != 1) {\n            throw new IllegalArgumentException(\n                    \"There was an odd number of data points in the token (excluding first item): \"\n                            + tokens.size());\n        }\n\n        Colour colour = Colour.valueOf(first.toUpperCase());\n\n        List<Coord2D> points = new ArrayList<>(tokens.size() - 1);\n        for (int i = 1; i < tokens.size();) {\n            double x = Double.parseDouble(tokens.get(i++));\n            double y = Double.parseDouble(tokens.get(i++));\n\n            x /= scale;\n            y /= scale;\n\n            Coord2D coord2D = new Coord2D(x, -y);\n            points.add(coord2D);\n        }\n\n        PathDetail pathDetail = new PathDetail(points.get(0), colour);\n        for (Coord2D point : points.subList(1, points.size())) {\n            pathDetail.lineTo(point);\n        }\n\n        return pathDetail;\n    }", "signature": "PathDetail parseSketchEntry(double scale, String entry)", "full_signature": "public static PathDetail parseSketchEntry(double scale, String entry)", "class_method_signature": "XviImporter.parseSketchEntry(double scale, String entry)", "testcase": false, "constructor": false, "invocations": ["asList", "split", "size", "get", "equals", "size", "size", "valueOf", "toUpperCase", "size", "size", "parseDouble", "get", "parseDouble", "get", "add", "get", "subList", "size", "lineTo"]}, "repository": {"repo_id": 27244573, "url": "https://github.com/richsmith/sexytopo", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 83635, "license": "licensed"}}