{"test_class": {"identifier": "OadrPKISecurityTest", "superclass": "", "interfaces": "", "fields": [], "file": "OpenADRSecurity/src/test/java/com/avob/openadr/security/OadrPKISecurityTest.java"}, "test_case": {"identifier": "parseCertificateTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void parseCertificateTest() throws OadrSecurityException {\n\n\t\t// valid rsa\n\t\tX509Certificate parseCertificate = OadrPKISecurity.parseCertificate(TestUtils.TEST_CRT);\n\t\tassertNotNull(parseCertificate);\n\n\t\t// valid ecc\n\t\tparseCertificate = OadrPKISecurity.parseCertificate(TestUtils.TEST_ECC_CRT);\n\t\tassertNotNull(parseCertificate);\n\n\t\t// invalid path raise exception\n\t\tboolean exception = false;\n\t\ttry {\n\t\t\tOadrPKISecurity.parseCertificate(\"mouaiccool\");\n\t\t} catch (OadrSecurityException e) {\n\t\t\texception = true;\n\t\t}\n\t\tassertTrue(exception);\n\n\t\t// invalid pem raise exception\n\t\texception = false;\n\t\ttry {\n\t\t\tOadrPKISecurity.parseCertificate(TestUtils.TEST_KEY);\n\t\t} catch (OadrSecurityException e) {\n\t\t\texception = true;\n\t\t}\n\t\tassertTrue(exception);\n\n\t}", "signature": "void parseCertificateTest()", "full_signature": "@Test public void parseCertificateTest()", "class_method_signature": "OadrPKISecurityTest.parseCertificateTest()", "testcase": true, "constructor": false, "invocations": ["parseCertificate", "assertNotNull", "parseCertificate", "assertNotNull", "parseCertificate", "assertTrue", "parseCertificate", "assertTrue"]}, "focal_class": {"identifier": "OadrPKISecurity", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "OadrPKISecurity", "parameters": "()", "modifiers": "private", "return": "", "signature": " OadrPKISecurity()", "full_signature": "private  OadrPKISecurity()", "class_method_signature": "OadrPKISecurity.OadrPKISecurity()", "testcase": false, "constructor": true}, {"identifier": "parsePrivateKey", "parameters": "(String privateKeyFilePath)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey parsePrivateKey(String privateKeyFilePath)", "full_signature": "public static PrivateKey parsePrivateKey(String privateKeyFilePath)", "class_method_signature": "OadrPKISecurity.parsePrivateKey(String privateKeyFilePath)", "testcase": false, "constructor": false}, {"identifier": "parsePrivateKey", "parameters": "(FileReader fileReader)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey parsePrivateKey(FileReader fileReader)", "full_signature": "public static PrivateKey parsePrivateKey(FileReader fileReader)", "class_method_signature": "OadrPKISecurity.parsePrivateKey(FileReader fileReader)", "testcase": false, "constructor": false}, {"identifier": "parseCertificate", "parameters": "(String certificateFilePath)", "modifiers": "public static", "return": "X509Certificate", "signature": "X509Certificate parseCertificate(String certificateFilePath)", "full_signature": "public static X509Certificate parseCertificate(String certificateFilePath)", "class_method_signature": "OadrPKISecurity.parseCertificate(String certificateFilePath)", "testcase": false, "constructor": false}, {"identifier": "parseCertificate", "parameters": "(FileReader fileReader)", "modifiers": "public static", "return": "X509Certificate", "signature": "X509Certificate parseCertificate(FileReader fileReader)", "full_signature": "public static X509Certificate parseCertificate(FileReader fileReader)", "class_method_signature": "OadrPKISecurity.parseCertificate(FileReader fileReader)", "testcase": false, "constructor": false}, {"identifier": "createKeyStore", "parameters": "(String privateKeyFilePath, String clientCertificatefilePath, String password)", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore createKeyStore(String privateKeyFilePath, String clientCertificatefilePath, String password)", "full_signature": "public static KeyStore createKeyStore(String privateKeyFilePath, String clientCertificatefilePath, String password)", "class_method_signature": "OadrPKISecurity.createKeyStore(String privateKeyFilePath, String clientCertificatefilePath, String password)", "testcase": false, "constructor": false}, {"identifier": "createKeyManagerFactory", "parameters": "(String clientPrivateKeyPemFilePath,\n\t\t\tString clientCertificatePemFilePath, String password)", "modifiers": "public static", "return": "KeyManagerFactory", "signature": "KeyManagerFactory createKeyManagerFactory(String clientPrivateKeyPemFilePath,\n\t\t\tString clientCertificatePemFilePath, String password)", "full_signature": "public static KeyManagerFactory createKeyManagerFactory(String clientPrivateKeyPemFilePath,\n\t\t\tString clientCertificatePemFilePath, String password)", "class_method_signature": "OadrPKISecurity.createKeyManagerFactory(String clientPrivateKeyPemFilePath,\n\t\t\tString clientCertificatePemFilePath, String password)", "testcase": false, "constructor": false}, {"identifier": "createTrustStore", "parameters": "(List<String> certificates)", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore createTrustStore(List<String> certificates)", "full_signature": "public static KeyStore createTrustStore(List<String> certificates)", "class_method_signature": "OadrPKISecurity.createTrustStore(List<String> certificates)", "testcase": false, "constructor": false}, {"identifier": "createTrustManagerFactory", "parameters": "(List<String> trustedCertificateFilePath)", "modifiers": "public static", "return": "TrustManagerFactory", "signature": "TrustManagerFactory createTrustManagerFactory(List<String> trustedCertificateFilePath)", "full_signature": "public static TrustManagerFactory createTrustManagerFactory(List<String> trustedCertificateFilePath)", "class_method_signature": "OadrPKISecurity.createTrustManagerFactory(List<String> trustedCertificateFilePath)", "testcase": false, "constructor": false}, {"identifier": "createSSLContext", "parameters": "(String clientPrivateKeyPemFilePath, String clientCertificatePemFilePath,\n\t\t\tList<String> trustCertificates, String password)", "modifiers": "public static", "return": "SSLContext", "signature": "SSLContext createSSLContext(String clientPrivateKeyPemFilePath, String clientCertificatePemFilePath,\n\t\t\tList<String> trustCertificates, String password)", "full_signature": "public static SSLContext createSSLContext(String clientPrivateKeyPemFilePath, String clientCertificatePemFilePath,\n\t\t\tList<String> trustCertificates, String password)", "class_method_signature": "OadrPKISecurity.createSSLContext(String clientPrivateKeyPemFilePath, String clientCertificatePemFilePath,\n\t\t\tList<String> trustCertificates, String password)", "testcase": false, "constructor": false}, {"identifier": "md5Hex", "parameters": "(String data)", "modifiers": "public static", "return": "String", "signature": "String md5Hex(String data)", "full_signature": "public static String md5Hex(String data)", "class_method_signature": "OadrPKISecurity.md5Hex(String data)", "testcase": false, "constructor": false}, {"identifier": "generateRsaKeyPair", "parameters": "()", "modifiers": "public static", "return": "KeyPair", "signature": "KeyPair generateRsaKeyPair()", "full_signature": "public static KeyPair generateRsaKeyPair()", "class_method_signature": "OadrPKISecurity.generateRsaKeyPair()", "testcase": false, "constructor": false}, {"identifier": "generateEccKeyPair", "parameters": "()", "modifiers": "public static", "return": "KeyPair", "signature": "KeyPair generateEccKeyPair()", "full_signature": "public static KeyPair generateEccKeyPair()", "class_method_signature": "OadrPKISecurity.generateEccKeyPair()", "testcase": false, "constructor": false}, {"identifier": "generateCredentials", "parameters": "(KeyPair caKeyPair, X509Certificate caCert,\n\t\t\tString commonName, OadrPKIAlgorithm algo)", "modifiers": "public static", "return": "OadrUserX509Credential", "signature": "OadrUserX509Credential generateCredentials(KeyPair caKeyPair, X509Certificate caCert,\n\t\t\tString commonName, OadrPKIAlgorithm algo)", "full_signature": "public static OadrUserX509Credential generateCredentials(KeyPair caKeyPair, X509Certificate caCert,\n\t\t\tString commonName, OadrPKIAlgorithm algo)", "class_method_signature": "OadrPKISecurity.generateCredentials(KeyPair caKeyPair, X509Certificate caCert,\n\t\t\tString commonName, OadrPKIAlgorithm algo)", "testcase": false, "constructor": false}, {"identifier": "generateKeyPair", "parameters": "(String algo, int length)", "modifiers": "private static", "return": "KeyPair", "signature": "KeyPair generateKeyPair(String algo, int length)", "full_signature": "private static KeyPair generateKeyPair(String algo, int length)", "class_method_signature": "OadrPKISecurity.generateKeyPair(String algo, int length)", "testcase": false, "constructor": false}, {"identifier": "signCsr", "parameters": "(PKCS10CertificationRequest csr, KeyPair caKeyPair, X509Certificate caCert,\n\t\t\tBigInteger serialNumber)", "modifiers": "private static", "return": "X509Certificate", "signature": "X509Certificate signCsr(PKCS10CertificationRequest csr, KeyPair caKeyPair, X509Certificate caCert,\n\t\t\tBigInteger serialNumber)", "full_signature": "private static X509Certificate signCsr(PKCS10CertificationRequest csr, KeyPair caKeyPair, X509Certificate caCert,\n\t\t\tBigInteger serialNumber)", "class_method_signature": "OadrPKISecurity.signCsr(PKCS10CertificationRequest csr, KeyPair caKeyPair, X509Certificate caCert,\n\t\t\tBigInteger serialNumber)", "testcase": false, "constructor": false}, {"identifier": "writeCrtToString", "parameters": "(X509Certificate certificate)", "modifiers": "private static", "return": "String", "signature": "String writeCrtToString(X509Certificate certificate)", "full_signature": "private static String writeCrtToString(X509Certificate certificate)", "class_method_signature": "OadrPKISecurity.writeCrtToString(X509Certificate certificate)", "testcase": false, "constructor": false}, {"identifier": "writeKeyToString", "parameters": "(KeyPair pair)", "modifiers": "private static", "return": "String", "signature": "String writeKeyToString(KeyPair pair)", "full_signature": "private static String writeKeyToString(KeyPair pair)", "class_method_signature": "OadrPKISecurity.writeKeyToString(KeyPair pair)", "testcase": false, "constructor": false}, {"identifier": "writePemToString", "parameters": "(String type, byte[] content)", "modifiers": "private static", "return": "String", "signature": "String writePemToString(String type, byte[] content)", "full_signature": "private static String writePemToString(String type, byte[] content)", "class_method_signature": "OadrPKISecurity.writePemToString(String type, byte[] content)", "testcase": false, "constructor": false}, {"identifier": "writeToFile", "parameters": "(String fileName, String fileExtension, String content)", "modifiers": "private static", "return": "File", "signature": "File writeToFile(String fileName, String fileExtension, String content)", "full_signature": "private static File writeToFile(String fileName, String fileExtension, String content)", "class_method_signature": "OadrPKISecurity.writeToFile(String fileName, String fileExtension, String content)", "testcase": false, "constructor": false}, {"identifier": "generateCsr", "parameters": "(KeyPair pair, String x509PrincipalName, String algo)", "modifiers": "private static", "return": "PKCS10CertificationRequest", "signature": "PKCS10CertificationRequest generateCsr(KeyPair pair, String x509PrincipalName, String algo)", "full_signature": "private static PKCS10CertificationRequest generateCsr(KeyPair pair, String x509PrincipalName, String algo)", "class_method_signature": "OadrPKISecurity.generateCsr(KeyPair pair, String x509PrincipalName, String algo)", "testcase": false, "constructor": false}, {"identifier": "parsePem", "parameters": "(FileReader fileReader)", "modifiers": "private static", "return": "Object", "signature": "Object parsePem(FileReader fileReader)", "full_signature": "private static Object parsePem(FileReader fileReader)", "class_method_signature": "OadrPKISecurity.parsePem(FileReader fileReader)", "testcase": false, "constructor": false}], "file": "OpenADRSecurity/src/main/java/com/avob/openadr/security/OadrPKISecurity.java"}, "focal_method": {"identifier": "parseCertificate", "parameters": "(String certificateFilePath)", "modifiers": "public static", "return": "X509Certificate", "body": "public static X509Certificate parseCertificate(String certificateFilePath) throws OadrSecurityException {\n\t\ttry {\n\t\t\treturn parseCertificate(new FileReader(certificateFilePath));\n\t\t} catch (FileNotFoundException e) {\n\t\t\tthrow new OadrSecurityException(e);\n\t\t}\n\t}", "signature": "X509Certificate parseCertificate(String certificateFilePath)", "full_signature": "public static X509Certificate parseCertificate(String certificateFilePath)", "class_method_signature": "OadrPKISecurity.parseCertificate(String certificateFilePath)", "testcase": false, "constructor": false, "invocations": ["parseCertificate"]}, "repository": {"repo_id": 169761438, "url": "https://github.com/avob/OpenADR", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 55915, "license": "licensed"}}