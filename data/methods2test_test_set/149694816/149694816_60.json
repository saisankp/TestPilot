{"test_class": {"identifier": "BuildProjectConsoleModeTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected final ProjectFile projectFile = new ProjectFile();", "modifier": "protected final", "type": "ProjectFile", "declarator": "projectFile = new ProjectFile()", "var_name": "projectFile"}, {"original_string": "protected final BuildProjectConsoleMode buildProject = spy(new BuildProjectConsoleMode() {\n    @Override\n    public ProjectFile readProject() {\n      return projectFile;\n    }\n  });", "modifier": "protected final", "type": "BuildProjectConsoleMode", "declarator": "buildProject = spy(new BuildProjectConsoleMode() {\n    @Override\n    public ProjectFile readProject() {\n      return projectFile;\n    }\n  })", "var_name": "buildProject"}, {"original_string": "@Mock\n  protected DangerousConsumer<BuildDetails> listener;", "modifier": "@Mock\n  protected", "type": "DangerousConsumer<BuildDetails>", "declarator": "listener", "var_name": "listener"}], "file": "core/src/test/java/ship/command/BuildProjectConsoleModeTest.java"}, "test_case": {"identifier": "testResourceChanged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testResourceChanged() throws Exception {\n    // Given\n    final ResourceChangeEvent event = new ResourceChangeEvent(null);\n\n    // When\n    buildProject.resourceChanged(event);\n\n    // Then\n    verify(listener).accept(any());\n  }", "signature": "void testResourceChanged()", "full_signature": "@Test public void testResourceChanged()", "class_method_signature": "BuildProjectConsoleModeTest.testResourceChanged()", "testcase": true, "constructor": false, "invocations": ["resourceChanged", "accept", "verify", "any"]}, "focal_class": {"identifier": "BuildProjectConsoleMode", "superclass": "extends BuildProjectCommandMode", "interfaces": "", "fields": [{"original_string": "protected final List<DangerousConsumer<BuildDetails>> buildListeners = new ArrayList<>();", "modifier": "protected final", "type": "List<DangerousConsumer<BuildDetails>>", "declarator": "buildListeners = new ArrayList<>()", "var_name": "buildListeners"}], "methods": [{"identifier": "addListener", "parameters": "(final DangerousConsumer<BuildDetails> listener)", "modifiers": "public", "return": "void", "signature": "void addListener(final DangerousConsumer<BuildDetails> listener)", "full_signature": "public void addListener(final DangerousConsumer<BuildDetails> listener)", "class_method_signature": "BuildProjectConsoleMode.addListener(final DangerousConsumer<BuildDetails> listener)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(final Project project)", "modifiers": "@Override protected", "return": "BuildDetails", "signature": "BuildDetails build(final Project project)", "full_signature": "@Override protected BuildDetails build(final Project project)", "class_method_signature": "BuildProjectConsoleMode.build(final Project project)", "testcase": false, "constructor": false}, {"identifier": "startConsoleServer", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void startConsoleServer()", "full_signature": "protected void startConsoleServer()", "class_method_signature": "BuildProjectConsoleMode.startConsoleServer()", "testcase": false, "constructor": false}, {"identifier": "createFileWatcher", "parameters": "()", "modifiers": "protected", "return": "FileWatcher", "signature": "FileWatcher createFileWatcher()", "full_signature": "protected FileWatcher createFileWatcher()", "class_method_signature": "BuildProjectConsoleMode.createFileWatcher()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "BuildProjectConsoleMode.execute()", "testcase": false, "constructor": false}, {"identifier": "resourceChanged", "parameters": "(final ResourceChangeEvent event)", "modifiers": "protected", "return": "void", "signature": "void resourceChanged(final ResourceChangeEvent event)", "full_signature": "protected void resourceChanged(final ResourceChangeEvent event)", "class_method_signature": "BuildProjectConsoleMode.resourceChanged(final ResourceChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "test", "parameters": "(final BuildDetails buildDetails)", "modifiers": "protected", "return": "void", "signature": "void test(final BuildDetails buildDetails)", "full_signature": "protected void test(final BuildDetails buildDetails)", "class_method_signature": "BuildProjectConsoleMode.test(final BuildDetails buildDetails)", "testcase": false, "constructor": false}, {"identifier": "fireEvent", "parameters": "(final BuildDetails buildDetails)", "modifiers": "protected", "return": "void", "signature": "void fireEvent(final BuildDetails buildDetails)", "full_signature": "protected void fireEvent(final BuildDetails buildDetails)", "class_method_signature": "BuildProjectConsoleMode.fireEvent(final BuildDetails buildDetails)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/command/BuildProjectConsoleMode.java"}, "focal_method": {"identifier": "resourceChanged", "parameters": "(final ResourceChangeEvent event)", "modifiers": "protected", "return": "void", "body": "protected void resourceChanged(final ResourceChangeEvent event) {\n    logger.info(\"Resource changed: {}\", event);\n    final Resource changedResource = event.getResource();\n    if (changedResource instanceof PackageResource) {\n      logger.trace(\"Skip package resource: {}\", changedResource.getLocation());\n      return;\n    } else if (changedResource instanceof BuildResource) {\n      logger.trace(\"Skip build resource: {}\", changedResource.getLocation());\n      return;\n    }\n    this.build(project);\n  }", "signature": "void resourceChanged(final ResourceChangeEvent event)", "full_signature": "protected void resourceChanged(final ResourceChangeEvent event)", "class_method_signature": "BuildProjectConsoleMode.resourceChanged(final ResourceChangeEvent event)", "testcase": false, "constructor": false, "invocations": ["info", "getResource", "trace", "getLocation", "trace", "getLocation", "build"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}