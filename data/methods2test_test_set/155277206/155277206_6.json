{"test_class": {"identifier": "FingerprintMojoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(FingerprintMojoTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(FingerprintMojoTest.class)", "var_name": "logger"}, {"original_string": "private static final String version = MavenUtil.getArtifactVersion(new File(\"\").getAbsoluteFile());", "modifier": "private static final", "type": "String", "declarator": "version = MavenUtil.getArtifactVersion(new File(\"\").getAbsoluteFile())", "var_name": "version"}, {"original_string": "private static final String localRepositoryPath = System.getProperty(\"user.home\") + \"/.m2/repository\";", "modifier": "private static final", "type": "String", "declarator": "localRepositoryPath = System.getProperty(\"user.home\") + \"/.m2/repository\"", "var_name": "localRepositoryPath"}], "file": "specialagent-maven-plugin/src/test/java/io/opentracing/contrib/specialagent/FingerprintMojoTest.java"}, "test_case": {"identifier": "testJms1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testJms1() throws IOException {\n    final URL[] ruleDeps = new URL[] {\n      getPath(new MavenDependency(\"io.opentracing.contrib.specialagent.rule\", \"jms\", version)),\n      getPath(new MavenDependency(\"io.opentracing.contrib\", \"opentracing-jms-1\", \"0.1.7\")),\n      getPath(new MavenDependency(\"io.opentracing.contrib\", \"opentracing-jms-common\", \"0.1.7\"))\n    };\n    final URL[] libDeps = new URL[] {\n      getPath(new MavenDependency(\"javax.jms\", \"jms-api\", \"1.1-rev-1\"))\n    };\n\n    final LibraryFingerprint fingerprint = FingerprintMojo.fingerprint(ruleDeps, libDeps, null, null, logger);\n    System.out.println(fingerprint.toString());\n    assertNotEquals(\"\", fingerprint.toString());\n  }", "signature": "void testJms1()", "full_signature": "@Test public void testJms1()", "class_method_signature": "FingerprintMojoTest.testJms1()", "testcase": true, "constructor": false, "invocations": ["getPath", "getPath", "getPath", "getPath", "fingerprint", "println", "toString", "assertNotEquals", "toString"]}, "focal_class": {"identifier": "FingerprintMojo", "superclass": "extends TreeMojo", "interfaces": "", "fields": [{"original_string": "@Inject\n  private MojoExecutor executor;", "modifier": "@Inject\n  private", "type": "MojoExecutor", "declarator": "executor", "var_name": "executor"}, {"original_string": "@Inject\n  private ProjectDependenciesResolver projectDependenciesResolver;", "modifier": "@Inject\n  private", "type": "ProjectDependenciesResolver", "declarator": "projectDependenciesResolver", "var_name": "projectDependenciesResolver"}, {"original_string": "@Parameter(defaultValue = \"${localRepository}\", required = true, readonly = true)\n  private ArtifactRepository localRepository;", "modifier": "@Parameter(defaultValue = \"${localRepository}\", required = true, readonly = true)\n  private", "type": "ArtifactRepository", "declarator": "localRepository", "var_name": "localRepository"}, {"original_string": "@Parameter(defaultValue = \"${mojoExecution}\", required = true, readonly = true)\n  private MojoExecution execution;", "modifier": "@Parameter(defaultValue = \"${mojoExecution}\", required = true, readonly = true)\n  private", "type": "MojoExecution", "declarator": "execution", "var_name": "execution"}, {"original_string": "@Parameter(defaultValue = \"${sa.rule.name}\", required = true)\n  private String name;", "modifier": "@Parameter(defaultValue = \"${sa.rule.name}\", required = true)\n  private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@Parameter(property = \"debug\")\n  private boolean debug = false;", "modifier": "@Parameter(property = \"debug\")\n  private", "type": "boolean", "declarator": "debug = false", "var_name": "debug"}, {"original_string": "@Parameter\n  private List<IsolatedDependency> isolatedDependencies;", "modifier": "@Parameter\n  private", "type": "List<IsolatedDependency>", "declarator": "isolatedDependencies", "var_name": "isolatedDependencies"}, {"original_string": "@Parameter\n  private List<String> presents;", "modifier": "@Parameter\n  private", "type": "List<String>", "declarator": "presents", "var_name": "presents"}, {"original_string": "@Parameter\n  private List<String> absents;", "modifier": "@Parameter\n  private", "type": "List<String>", "declarator": "absents", "var_name": "absents"}, {"original_string": "private String apiVersion;", "modifier": "private", "type": "String", "declarator": "apiVersion", "var_name": "apiVersion"}, {"original_string": "private static boolean isRunning;", "modifier": "private static", "type": "boolean", "declarator": "isRunning", "var_name": "isRunning"}], "methods": [{"identifier": "getDependencyPaths", "parameters": "(final ArtifactRepository localRepository, final String scope, final boolean optional, final Iterator<Artifact> iterator, final int depth)", "modifiers": "private static", "return": "URL[]", "signature": "URL[] getDependencyPaths(final ArtifactRepository localRepository, final String scope, final boolean optional, final Iterator<Artifact> iterator, final int depth)", "full_signature": "private static URL[] getDependencyPaths(final ArtifactRepository localRepository, final String scope, final boolean optional, final Iterator<Artifact> iterator, final int depth)", "class_method_signature": "FingerprintMojo.getDependencyPaths(final ArtifactRepository localRepository, final String scope, final boolean optional, final Iterator<Artifact> iterator, final int depth)", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "()", "modifiers": "", "return": "MavenSession", "signature": "MavenSession getSession()", "full_signature": " MavenSession getSession()", "class_method_signature": "FingerprintMojo.getSession()", "testcase": false, "constructor": false}, {"identifier": "getSerializingDependencyNodeVisitor", "parameters": "(final Writer writer)", "modifiers": "@Override public", "return": "DependencyNodeVisitor", "signature": "DependencyNodeVisitor getSerializingDependencyNodeVisitor(final Writer writer)", "full_signature": "@Override public DependencyNodeVisitor getSerializingDependencyNodeVisitor(final Writer writer)", "class_method_signature": "FingerprintMojo.getSerializingDependencyNodeVisitor(final Writer writer)", "testcase": false, "constructor": false}, {"identifier": "createDependenciesTgf", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createDependenciesTgf()", "full_signature": "private void createDependenciesTgf()", "class_method_signature": "FingerprintMojo.createDependenciesTgf()", "testcase": false, "constructor": false}, {"identifier": "createLocalRepoFile", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createLocalRepoFile()", "full_signature": "private void createLocalRepoFile()", "class_method_signature": "FingerprintMojo.createLocalRepoFile()", "testcase": false, "constructor": false}, {"identifier": "createFingerprintBin", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createFingerprintBin()", "full_signature": "private void createFingerprintBin()", "class_method_signature": "FingerprintMojo.createFingerprintBin()", "testcase": false, "constructor": false}, {"identifier": "fingerprint", "parameters": "(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger)", "modifiers": "static", "return": "LibraryFingerprint", "signature": "LibraryFingerprint fingerprint(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger)", "full_signature": "static LibraryFingerprint fingerprint(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger)", "class_method_signature": "FingerprintMojo.fingerprint(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger)", "testcase": false, "constructor": false}, {"identifier": "createPluginName", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createPluginName()", "full_signature": "private void createPluginName()", "class_method_signature": "FingerprintMojo.createPluginName()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "FingerprintMojo.execute()", "testcase": false, "constructor": false}], "file": "specialagent-maven-plugin/src/main/java/io/opentracing/contrib/specialagent/FingerprintMojo.java"}, "focal_method": {"identifier": "fingerprint", "parameters": "(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger)", "modifiers": "static", "return": "LibraryFingerprint", "body": "static LibraryFingerprint fingerprint(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger) throws IOException {\n    try (final URLClassLoader classLoader = new URLClassLoader(ruleDeps, new URLClassLoader(libDeps != null ? libDeps : new URL[0], null))) {\n      return new LibraryFingerprint(classLoader, presents, absents, logger);\n    }\n  }", "signature": "LibraryFingerprint fingerprint(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger)", "full_signature": "static LibraryFingerprint fingerprint(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger)", "class_method_signature": "FingerprintMojo.fingerprint(final URL[] ruleDeps, final URL[] libDeps, final List<String> presents, final List<String> absents, final Logger logger)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155277206, "url": "https://github.com/opentracing-contrib/java-specialagent", "stars": 88, "created": "10/29/2018 8:31:40 PM +00:00", "updates": "2020-01-27T16:00:44+00:00", "fork": "False", "license": "licensed"}}