{"test_class": {"identifier": "StringUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final char input;", "modifier": "private final", "type": "char", "declarator": "input", "var_name": "input"}, {"original_string": "private final byte check1, check2;", "modifier": "private final", "type": "byte", "declarator": "check1", "var_name": "check1"}], "file": "itext/src/test/java/com/itextpdf/text/pdf/StringUtilsTest.java"}, "test_case": {"identifier": "convertCharsToBytesTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void convertCharsToBytesTest() {\n        byte[] check = {check1, check2};\n        char[] vals = {input};\n        byte[] result = StringUtils.convertCharsToBytes(vals);\n\n        Assert.assertArrayEquals(check, result);\n    }", "signature": "void convertCharsToBytesTest()", "full_signature": "@Test public void convertCharsToBytesTest()", "class_method_signature": "StringUtilsTest.convertCharsToBytesTest()", "testcase": true, "constructor": false, "invocations": ["convertCharsToBytes", "assertArrayEquals"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "final static private byte[] r = DocWriter.getISOBytes(\"\\\\r\");", "modifier": "final static private", "type": "byte[]", "declarator": "r = DocWriter.getISOBytes(\"\\\\r\")", "var_name": "r"}, {"original_string": "final static private byte[] n = DocWriter.getISOBytes(\"\\\\n\");", "modifier": "final static private", "type": "byte[]", "declarator": "n = DocWriter.getISOBytes(\"\\\\n\")", "var_name": "n"}, {"original_string": "final static private byte[] t = DocWriter.getISOBytes(\"\\\\t\");", "modifier": "final static private", "type": "byte[]", "declarator": "t = DocWriter.getISOBytes(\"\\\\t\")", "var_name": "t"}, {"original_string": "final static private byte[] b = DocWriter.getISOBytes(\"\\\\b\");", "modifier": "final static private", "type": "byte[]", "declarator": "b = DocWriter.getISOBytes(\"\\\\b\")", "var_name": "b"}, {"original_string": "final static private byte[] f = DocWriter.getISOBytes(\"\\\\f\");", "modifier": "final static private", "type": "byte[]", "declarator": "f = DocWriter.getISOBytes(\"\\\\f\")", "var_name": "f"}], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "escapeString", "parameters": "(final byte bytes[])", "modifiers": "public static", "return": "byte[]", "signature": "byte[] escapeString(final byte bytes[])", "full_signature": "public static byte[] escapeString(final byte bytes[])", "class_method_signature": "StringUtils.escapeString(final byte bytes[])", "testcase": false, "constructor": false}, {"identifier": "escapeString", "parameters": "(final byte bytes[], final ByteBuffer content)", "modifiers": "public static", "return": "void", "signature": "void escapeString(final byte bytes[], final ByteBuffer content)", "full_signature": "public static void escapeString(final byte bytes[], final ByteBuffer content)", "class_method_signature": "StringUtils.escapeString(final byte bytes[], final ByteBuffer content)", "testcase": false, "constructor": false}, {"identifier": "convertCharsToBytes", "parameters": "(char[] chars)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] convertCharsToBytes(char[] chars)", "full_signature": "public static byte[] convertCharsToBytes(char[] chars)", "class_method_signature": "StringUtils.convertCharsToBytes(char[] chars)", "testcase": false, "constructor": false}], "file": "itext/src/main/java/com/itextpdf/text/pdf/StringUtils.java"}, "focal_method": {"identifier": "convertCharsToBytes", "parameters": "(char[] chars)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] convertCharsToBytes(char[] chars) {\n        byte[] result = new byte[chars.length*2];\n        for (int i=0; i<chars.length;i++) {\n            result[2*i] = (byte) (chars[i] / 256);\n            result[2*i+1] = (byte) (chars[i] % 256);\n        }\n        return result;\n    }", "signature": "byte[] convertCharsToBytes(char[] chars)", "full_signature": "public static byte[] convertCharsToBytes(char[] chars)", "class_method_signature": "StringUtils.convertCharsToBytes(char[] chars)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}