{"test_class": {"identifier": "UrlDecoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/chillenious/common/util/UrlDecoderTest.java"}, "test_case": {"identifier": "badUrlEntities", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void badUrlEntities() throws Exception {\n        String url = \"http://localhost/test?a=%%%\";\n        String decoded = UrlDecoder.QUERY_INSTANCE.decode(url, \"UTF-8\");\n        assertEquals(\"http://localhost/test?a=\", decoded);\n\n        url = \"http://localhost/test?%%%\";\n        decoded = UrlDecoder.QUERY_INSTANCE.decode(url, \"UTF-8\");\n        assertEquals(\"http://localhost/test?\", decoded);\n\n        url = \"http://localhost/test?%a=%b%\";\n        decoded = UrlDecoder.QUERY_INSTANCE.decode(url, \"UTF-8\");\n        assertEquals(\"http://localhost/test?a=b\", decoded);\n    }", "signature": "void badUrlEntities()", "full_signature": "@Test public void badUrlEntities()", "class_method_signature": "UrlDecoderTest.badUrlEntities()", "testcase": true, "constructor": false, "invocations": ["decode", "assertEquals", "decode", "assertEquals", "decode", "assertEquals"]}, "focal_class": {"identifier": "UrlDecoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(UrlDecoder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(UrlDecoder.class)", "var_name": "LOG"}, {"original_string": "private final boolean decodePlus;", "modifier": "private final", "type": "boolean", "declarator": "decodePlus", "var_name": "decodePlus"}, {"original_string": "public static final UrlDecoder QUERY_INSTANCE = new UrlDecoder(true);", "modifier": "public static final", "type": "UrlDecoder", "declarator": "QUERY_INSTANCE = new UrlDecoder(true)", "var_name": "QUERY_INSTANCE"}, {"original_string": "public static final UrlDecoder PATH_INSTANCE = new UrlDecoder(false);", "modifier": "public static final", "type": "UrlDecoder", "declarator": "PATH_INSTANCE = new UrlDecoder(false)", "var_name": "PATH_INSTANCE"}], "methods": [{"identifier": "UrlDecoder", "parameters": "(final boolean decodePlus)", "modifiers": "private", "return": "", "signature": " UrlDecoder(final boolean decodePlus)", "full_signature": "private  UrlDecoder(final boolean decodePlus)", "class_method_signature": "UrlDecoder.UrlDecoder(final boolean decodePlus)", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "(final String s, final Charset enc)", "modifiers": "public", "return": "String", "signature": "String decode(final String s, final Charset enc)", "full_signature": "public String decode(final String s, final Charset enc)", "class_method_signature": "UrlDecoder.decode(final String s, final Charset enc)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(final String s, final String enc)", "modifiers": "public", "return": "String", "signature": "String decode(final String s, final String enc)", "full_signature": "public String decode(final String s, final String enc)", "class_method_signature": "UrlDecoder.decode(final String s, final String enc)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/chillenious/common/util/UrlDecoder.java"}, "focal_method": {"identifier": "decode", "parameters": "(final String s, final Charset enc)", "modifiers": "public", "return": "String", "body": "public String decode(final String s, final Charset enc) {\n        return decode(s, enc.name());\n    }", "signature": "String decode(final String s, final Charset enc)", "full_signature": "public String decode(final String s, final Charset enc)", "class_method_signature": "UrlDecoder.decode(final String s, final Charset enc)", "testcase": false, "constructor": false, "invocations": ["decode", "name"]}, "repository": {"repo_id": 27147147, "url": "https://github.com/chillenious/commons", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 11, "size": 248, "license": "licensed"}}