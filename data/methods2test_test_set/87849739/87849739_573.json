{"test_class": {"identifier": "ThingCreatedStrategyTest", "superclass": "extends AbstractStrategyTest", "interfaces": "", "fields": [{"original_string": "private static final Instant TIMESTAMP = Instant.now();", "modifier": "private static final", "type": "Instant", "declarator": "TIMESTAMP = Instant.now()", "var_name": "TIMESTAMP"}, {"original_string": "private static final Metadata METADATA = Metadata.newBuilder().set(\"foo\", \"bar\").build();", "modifier": "private static final", "type": "Metadata", "declarator": "METADATA = Metadata.newBuilder().set(\"foo\", \"bar\").build()", "var_name": "METADATA"}], "file": "services/things/persistence/src/test/java/org/eclipse/ditto/services/things/persistence/actors/strategies/events/ThingCreatedStrategyTest.java"}, "test_case": {"identifier": "appliesEventCorrectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void appliesEventCorrectly() {\n        final ThingCreatedStrategy strategy = new ThingCreatedStrategy();\n        final ThingCreated event = ThingCreated.of(THING, REVISION, TIMESTAMP, DittoHeaders.empty(), METADATA);\n\n        final Thing thingWithEventApplied = strategy.handle(event, null, NEXT_REVISION);\n\n        final Thing expected = THING.toBuilder()\n                .setLifecycle(ThingLifecycle.ACTIVE)\n                .setRevision(NEXT_REVISION)\n                .setModified(TIMESTAMP)\n                .setCreated(TIMESTAMP)\n                .setMetadata(METADATA)\n                .build();\n\n        assertThat(thingWithEventApplied).isEqualTo(expected);\n    }", "signature": "void appliesEventCorrectly()", "full_signature": "@Test public void appliesEventCorrectly()", "class_method_signature": "ThingCreatedStrategyTest.appliesEventCorrectly()", "testcase": true, "constructor": false, "invocations": ["of", "empty", "handle", "build", "setMetadata", "setCreated", "setModified", "setRevision", "setLifecycle", "toBuilder", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ThingCreatedStrategy", "superclass": "extends AbstractThingEventStrategy<ThingCreated>", "interfaces": "", "fields": [], "methods": [{"identifier": "handle", "parameters": "(final ThingCreated event, final @Nullable Thing thing, final long revision)", "modifiers": "@Override public", "return": "Thing", "signature": "Thing handle(final ThingCreated event, final @Nullable Thing thing, final long revision)", "full_signature": "@Override public Thing handle(final ThingCreated event, final @Nullable Thing thing, final long revision)", "class_method_signature": "ThingCreatedStrategy.handle(final ThingCreated event, final @Nullable Thing thing, final long revision)", "testcase": false, "constructor": false}], "file": "services/things/persistence/src/main/java/org/eclipse/ditto/services/things/persistence/actors/strategies/events/ThingCreatedStrategy.java"}, "focal_method": {"identifier": "handle", "parameters": "(final ThingCreated event, final @Nullable Thing thing, final long revision)", "modifiers": "@Override public", "return": "Thing", "body": "@Override\n    public Thing handle(final ThingCreated event, final @Nullable Thing thing, final long revision) {\n        return event.getThing()\n                .toBuilder()\n                .setLifecycle(ThingLifecycle.ACTIVE)\n                .setRevision(revision)\n                .setModified(event.getTimestamp().orElseGet(() -> event.getThing().getModified().orElse(null)))\n                .setCreated(event.getTimestamp().orElseGet(() -> event.getThing().getCreated().orElse(null)))\n                .setMetadata(event.getMetadata().orElseGet(() -> event.getThing().getMetadata().orElse(null)))\n                .build();\n    }", "signature": "Thing handle(final ThingCreated event, final @Nullable Thing thing, final long revision)", "full_signature": "@Override public Thing handle(final ThingCreated event, final @Nullable Thing thing, final long revision)", "class_method_signature": "ThingCreatedStrategy.handle(final ThingCreated event, final @Nullable Thing thing, final long revision)", "testcase": false, "constructor": false, "invocations": ["build", "setMetadata", "setCreated", "setModified", "setRevision", "setLifecycle", "toBuilder", "getThing", "orElseGet", "getTimestamp", "orElse", "getModified", "getThing", "orElseGet", "getTimestamp", "orElse", "getCreated", "getThing", "orElseGet", "getMetadata", "orElse", "getMetadata", "getThing"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}