{"test_class": {"identifier": "ColorPropertyTest", "superclass": "", "interfaces": "", "fields": [], "file": "observable-ui/testSrc/com/android/tools/idea/observable/ui/ColorPropertyTest.java"}, "test_case": {"identifier": "testColorProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testColorProperty() throws Exception {\n    ColorPanel colorPanel = new ColorPanel();\n    ColorProperty color = new ColorProperty(colorPanel);\n    CountListener listener = new CountListener();\n    color.addListener(listener);\n\n    assertThat(color.get().isPresent()).isFalse();\n    assertThat(listener.getCount()).isEqualTo(0);\n\n    colorPanel.setSelectedColor(Color.RED);\n    assertThat(color.get().isPresent()).isTrue();\n    assertThat(color.getValue()).isEqualTo(Color.RED);\n    // ColorPanel only fires its listener when the button is clicked, not when color is set\n    // programmatically. Otherwise, this should have been true:\n    // assertThat(listener.getCount()).isEqualTo(1);\n\n    color.setValue(Color.BLUE);\n    assertThat(colorPanel.getSelectedColor()).isEqualTo(Color.BLUE);\n    assertThat(listener.getCount()).isEqualTo(1);\n\n    color.clear();\n    assertThat(colorPanel.getSelectedColor()).isNull();\n    assertThat(listener.getCount()).isEqualTo(2);\n  }", "signature": "void testColorProperty()", "full_signature": "@Test public void testColorProperty()", "class_method_signature": "ColorPropertyTest.testColorProperty()", "testcase": true, "constructor": false, "invocations": ["addListener", "isFalse", "assertThat", "isPresent", "get", "isEqualTo", "assertThat", "getCount", "setSelectedColor", "isTrue", "assertThat", "isPresent", "get", "isEqualTo", "assertThat", "getValue", "setValue", "isEqualTo", "assertThat", "getSelectedColor", "isEqualTo", "assertThat", "getCount", "clear", "isNull", "assertThat", "getSelectedColor", "isEqualTo", "assertThat", "getCount"]}, "focal_class": {"identifier": "ColorProperty", "superclass": "extends OptionalProperty<Color>", "interfaces": "implements ActionListener", "fields": [{"original_string": "@NotNull private final ColorPanel myColorPanel;", "modifier": "@NotNull private final", "type": "ColorPanel", "declarator": "myColorPanel", "var_name": "myColorPanel"}], "methods": [{"identifier": "ColorProperty", "parameters": "(@NotNull ColorPanel colorPanel)", "modifiers": "public", "return": "", "signature": " ColorProperty(@NotNull ColorPanel colorPanel)", "full_signature": "public  ColorProperty(@NotNull ColorPanel colorPanel)", "class_method_signature": "ColorProperty.ColorProperty(@NotNull ColorPanel colorPanel)", "testcase": false, "constructor": true}, {"identifier": "actionPerformed", "parameters": "(ActionEvent actionEvent)", "modifiers": "@Override public", "return": "void", "signature": "void actionPerformed(ActionEvent actionEvent)", "full_signature": "@Override public void actionPerformed(ActionEvent actionEvent)", "class_method_signature": "ColorProperty.actionPerformed(ActionEvent actionEvent)", "testcase": false, "constructor": false}, {"identifier": "setDirectly", "parameters": "(@NotNull Optional<Color> value)", "modifiers": "@Override protected", "return": "void", "signature": "void setDirectly(@NotNull Optional<Color> value)", "full_signature": "@Override protected void setDirectly(@NotNull Optional<Color> value)", "class_method_signature": "ColorProperty.setDirectly(@NotNull Optional<Color> value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "Optional<Color>", "signature": "Optional<Color> get()", "full_signature": "@NotNull @Override public Optional<Color> get()", "class_method_signature": "ColorProperty.get()", "testcase": false, "constructor": false}], "file": "observable-ui/src/com/android/tools/idea/observable/ui/ColorProperty.java"}, "focal_method": {"identifier": "ColorProperty", "parameters": "(@NotNull ColorPanel colorPanel)", "modifiers": "public", "return": "", "body": "public ColorProperty(@NotNull ColorPanel colorPanel) {\n    myColorPanel = colorPanel;\n    myColorPanel.addActionListener(this);\n  }", "signature": " ColorProperty(@NotNull ColorPanel colorPanel)", "full_signature": "public  ColorProperty(@NotNull ColorPanel colorPanel)", "class_method_signature": "ColorProperty.ColorProperty(@NotNull ColorPanel colorPanel)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}