{"test_class": {"identifier": "TestJDBC", "superclass": "extends TestJDBCBase", "interfaces": "", "fields": [{"original_string": "static final String CREATE_TABLE = \"create table Test(id int not null, age int not null, \"\n            + \"first varchar (255), last varchar (255));\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE = \"create table Test(id int not null, age int not null, \"\n            + \"first varchar (255), last varchar (255));\"", "var_name": "CREATE_TABLE"}, {"original_string": "static final String PUBLISH_QUERY = \"INSERT INTO Test VALUES (1, 25, 'Santa', 'Claus');\";", "modifier": "static final", "type": "String", "declarator": "PUBLISH_QUERY = \"INSERT INTO Test VALUES (1, 25, 'Santa', 'Claus');\"", "var_name": "PUBLISH_QUERY"}, {"original_string": "static final String SELECT_QUERY = \"SELECT id, first, last, age FROM Test;\";", "modifier": "static final", "type": "String", "declarator": "SELECT_QUERY = \"SELECT id, first, last, age FROM Test;\"", "var_name": "SELECT_QUERY"}, {"original_string": "static final String DELETE_ROW = \"DELETE FROM Test WHERE first='Santa';\";", "modifier": "static final", "type": "String", "declarator": "DELETE_ROW = \"DELETE FROM Test WHERE first='Santa';\"", "var_name": "DELETE_ROW"}, {"original_string": "static final String DELETE_TABLE = \"DROP TABLE Test;\";", "modifier": "static final", "type": "String", "declarator": "DELETE_TABLE = \"DROP TABLE Test;\"", "var_name": "DELETE_TABLE"}, {"original_string": "static final String TIMESTAMP = \"2018-08-15 9:24:18\";", "modifier": "static final", "type": "String", "declarator": "TIMESTAMP = \"2018-08-15 9:24:18\"", "var_name": "TIMESTAMP"}, {"original_string": "static final String DATE = \"2018-08-15\";", "modifier": "static final", "type": "String", "declarator": "DATE = \"2018-08-15\"", "var_name": "DATE"}, {"original_string": "static final String TIME = \"9:24:18\";", "modifier": "static final", "type": "String", "declarator": "TIME = \"9:24:18\"", "var_name": "TIME"}, {"original_string": "static final String FORMATTED_TIMESTAMP = \"2018-08-15T09:24:18.000-0700\";", "modifier": "static final", "type": "String", "declarator": "FORMATTED_TIMESTAMP = \"2018-08-15T09:24:18.000-0700\"", "var_name": "FORMATTED_TIMESTAMP"}, {"original_string": "static final String FORMATTED_TIME = \"09:24:18.000-0800\";", "modifier": "static final", "type": "String", "declarator": "FORMATTED_TIME = \"09:24:18.000-0800\"", "var_name": "FORMATTED_TIME"}, {"original_string": "static final String VANTIQ_FORMATTED_TIMESTAMP = \"2018-08-15T16:24:18Z\";", "modifier": "static final", "type": "String", "declarator": "VANTIQ_FORMATTED_TIMESTAMP = \"2018-08-15T16:24:18Z\"", "var_name": "VANTIQ_FORMATTED_TIMESTAMP"}, {"original_string": "static final String CREATE_TABLE_EXTENDED_TYPES = \"create table TestTypes(id int, ts TIMESTAMP, testDate DATE, \"\n            + \"testTime TIME, testDec decimal(5,2));\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_EXTENDED_TYPES = \"create table TestTypes(id int, ts TIMESTAMP, testDate DATE, \"\n            + \"testTime TIME, testDec decimal(5,2));\"", "var_name": "CREATE_TABLE_EXTENDED_TYPES"}, {"original_string": "static final String PUBLISH_QUERY_EXTENDED_TYPES = \"INSERT INTO TestTypes VALUES (1, '\" + TIMESTAMP + \"', '\" + DATE + \"',\"\n            + \" '\" + TIME + \"', 145.86);\";", "modifier": "static final", "type": "String", "declarator": "PUBLISH_QUERY_EXTENDED_TYPES = \"INSERT INTO TestTypes VALUES (1, '\" + TIMESTAMP + \"', '\" + DATE + \"',\"\n            + \" '\" + TIME + \"', 145.86);\"", "var_name": "PUBLISH_QUERY_EXTENDED_TYPES"}, {"original_string": "static final String SELECT_QUERY_EXTENDED_TYPES = \"SELECT * FROM TestTypes;\";", "modifier": "static final", "type": "String", "declarator": "SELECT_QUERY_EXTENDED_TYPES = \"SELECT * FROM TestTypes;\"", "var_name": "SELECT_QUERY_EXTENDED_TYPES"}, {"original_string": "static final String DELETE_ROW_EXTENDED_TYPES = \"DELETE FROM TestTypes;\";", "modifier": "static final", "type": "String", "declarator": "DELETE_ROW_EXTENDED_TYPES = \"DELETE FROM TestTypes;\"", "var_name": "DELETE_ROW_EXTENDED_TYPES"}, {"original_string": "static final String DELETE_TABLE_EXTENDED_TYPES = \"DROP TABLE TestTypes;\";", "modifier": "static final", "type": "String", "declarator": "DELETE_TABLE_EXTENDED_TYPES = \"DROP TABLE TestTypes;\"", "var_name": "DELETE_TABLE_EXTENDED_TYPES"}, {"original_string": "static final String NO_TABLE = \"SELECT * FROM jibberish\";", "modifier": "static final", "type": "String", "declarator": "NO_TABLE = \"SELECT * FROM jibberish\"", "var_name": "NO_TABLE"}, {"original_string": "static final String NO_FIELD = \"SELECT jibberish FROM Test\";", "modifier": "static final", "type": "String", "declarator": "NO_FIELD = \"SELECT jibberish FROM Test\"", "var_name": "NO_FIELD"}, {"original_string": "static final String SYNTAX_ERROR = \"ELECT * FROM Test\";", "modifier": "static final", "type": "String", "declarator": "SYNTAX_ERROR = \"ELECT * FROM Test\"", "var_name": "SYNTAX_ERROR"}, {"original_string": "static final String INSERT_NO_FIELD = \"INSERT INTO Test VALUES (1, 25, 'Santa', 'Claus', 'jibberish')\";", "modifier": "static final", "type": "String", "declarator": "INSERT_NO_FIELD = \"INSERT INTO Test VALUES (1, 25, 'Santa', 'Claus', 'jibberish')\"", "var_name": "INSERT_NO_FIELD"}, {"original_string": "static final String INSERT_WRONG_TYPE = \"INSERT INTO Test VALUES ('string', 'string', 3, 4)\";", "modifier": "static final", "type": "String", "declarator": "INSERT_WRONG_TYPE = \"INSERT INTO Test VALUES ('string', 'string', 3, 4)\"", "var_name": "INSERT_WRONG_TYPE"}, {"original_string": "static final String CREATE_TABLE_DATETIME = \"CREATE TABLE TestDates(ts TIMESTAMP);\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_DATETIME = \"CREATE TABLE TestDates(ts TIMESTAMP);\"", "var_name": "CREATE_TABLE_DATETIME"}, {"original_string": "static final String INSERT_VALUE_DATETIME = \"INSERT INTO TestDates VALUES ('\" + TIMESTAMP + \"');\";", "modifier": "static final", "type": "String", "declarator": "INSERT_VALUE_DATETIME = \"INSERT INTO TestDates VALUES ('\" + TIMESTAMP + \"');\"", "var_name": "INSERT_VALUE_DATETIME"}, {"original_string": "static final String QUERY_TABLE_DATETIME = \"SELECT * FROM TestDates\";", "modifier": "static final", "type": "String", "declarator": "QUERY_TABLE_DATETIME = \"SELECT * FROM TestDates\"", "var_name": "QUERY_TABLE_DATETIME"}, {"original_string": "static final String DROP_TABLE_DATETIME = \"DROP TABLE TestDates\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_DATETIME = \"DROP TABLE TestDates\"", "var_name": "DROP_TABLE_DATETIME"}, {"original_string": "static final String CREATE_TABLE_NULL_VALUES = \"CREATE TABLE TestNullValues(ts TIMESTAMP, testDate DATE, testTime TIME, \"\n            + \"testInt int, testString varchar (255), testDec decimal(5,2));\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_NULL_VALUES = \"CREATE TABLE TestNullValues(ts TIMESTAMP, testDate DATE, testTime TIME, \"\n            + \"testInt int, testString varchar (255), testDec decimal(5,2));\"", "var_name": "CREATE_TABLE_NULL_VALUES"}, {"original_string": "static final String INSERT_ALL_NULL_VALUES = \"INSERT INTO TestNullValues VALUES (null, null, null, null, null, null)\";", "modifier": "static final", "type": "String", "declarator": "INSERT_ALL_NULL_VALUES = \"INSERT INTO TestNullValues VALUES (null, null, null, null, null, null)\"", "var_name": "INSERT_ALL_NULL_VALUES"}, {"original_string": "static final String QUERY_NULL_VALUES = \"SELECT * FROM TestNullValues\";", "modifier": "static final", "type": "String", "declarator": "QUERY_NULL_VALUES = \"SELECT * FROM TestNullValues\"", "var_name": "QUERY_NULL_VALUES"}, {"original_string": "static final String DELETE_ROW_NULL_VALUES = \"DELETE FROM TestNullValues\";", "modifier": "static final", "type": "String", "declarator": "DELETE_ROW_NULL_VALUES = \"DELETE FROM TestNullValues\"", "var_name": "DELETE_ROW_NULL_VALUES"}, {"original_string": "static final String DROP_TABLE_NULL_VALUES = \"DROP TABLE TestNullValues\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_NULL_VALUES = \"DROP TABLE TestNullValues\"", "var_name": "DROP_TABLE_NULL_VALUES"}, {"original_string": "static final String CREATE_TABLE_AFTER_LOST_CONNECTION = \"CREATE TABLE NoConnection(id int);\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_AFTER_LOST_CONNECTION = \"CREATE TABLE NoConnection(id int);\"", "var_name": "CREATE_TABLE_AFTER_LOST_CONNECTION"}, {"original_string": "static final String DROP_TABLE_AFTER_LOST_CONNECTION = \"DROP TABLE NoConnection;\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_AFTER_LOST_CONNECTION = \"DROP TABLE NoConnection;\"", "var_name": "DROP_TABLE_AFTER_LOST_CONNECTION"}, {"original_string": "static final String CREATE_TABLE_MAX_MESSAGE_SIZE = \"CREATE TABLE TestMessageSize(id int, first varchar (255), last varchar (255), \"\n            + \"age int, title varchar (255), is_active varchar (255), department varchar (255), salary int);\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_MAX_MESSAGE_SIZE = \"CREATE TABLE TestMessageSize(id int, first varchar (255), last varchar (255), \"\n            + \"age int, title varchar (255), is_active varchar (255), department varchar (255), salary int);\"", "var_name": "CREATE_TABLE_MAX_MESSAGE_SIZE"}, {"original_string": "static final String INSERT_ROW_MAX_MESSAGE_SIZE = \"INSERT INTO TestMessageSize VALUES(1, 'First', 'Last', 30, 'Title', 'Active',\"\n            + \" 'Department', 1000000);\";", "modifier": "static final", "type": "String", "declarator": "INSERT_ROW_MAX_MESSAGE_SIZE = \"INSERT INTO TestMessageSize VALUES(1, 'First', 'Last', 30, 'Title', 'Active',\"\n            + \" 'Department', 1000000);\"", "var_name": "INSERT_ROW_MAX_MESSAGE_SIZE"}, {"original_string": "static final String QUERY_TABLE_MAX_MESSAGE_SIZE = \"SELECT * FROM TestMessageSize;\";", "modifier": "static final", "type": "String", "declarator": "QUERY_TABLE_MAX_MESSAGE_SIZE = \"SELECT * FROM TestMessageSize;\"", "var_name": "QUERY_TABLE_MAX_MESSAGE_SIZE"}, {"original_string": "static final String DROP_TABLE_MAX_MESSAGE_SIZE = \"DROP TABLE TestMessageSize\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_MAX_MESSAGE_SIZE = \"DROP TABLE TestMessageSize\"", "var_name": "DROP_TABLE_MAX_MESSAGE_SIZE"}, {"original_string": "static final String CREATE_TABLE_ASYNCH = \"CREATE TABLE TestAsynchProcessing(id int, first varchar (255), last varchar (255));\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_ASYNCH = \"CREATE TABLE TestAsynchProcessing(id int, first varchar (255), last varchar (255));\"", "var_name": "CREATE_TABLE_ASYNCH"}, {"original_string": "static final String DROP_TABLE_ASYNCH = \"DROP TABLE TestAsynchProcessing\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_ASYNCH = \"DROP TABLE TestAsynchProcessing\"", "var_name": "DROP_TABLE_ASYNCH"}, {"original_string": "static final String CREATE_TABLE_INVALID_BATCH = \"CREATE TABLE TestInvalidBatch(id int, first varchar (255), last varchar (255));\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_INVALID_BATCH = \"CREATE TABLE TestInvalidBatch(id int, first varchar (255), last varchar (255));\"", "var_name": "CREATE_TABLE_INVALID_BATCH"}, {"original_string": "static final String SELECT_TABLE_INVALID_BATCH = \"SELECT * FROM TestInvalidBatch\";", "modifier": "static final", "type": "String", "declarator": "SELECT_TABLE_INVALID_BATCH = \"SELECT * FROM TestInvalidBatch\"", "var_name": "SELECT_TABLE_INVALID_BATCH"}, {"original_string": "static final String DROP_TABLE_INVALID_BATCH = \"DROP TABLE TestInvalidBatch\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_INVALID_BATCH = \"DROP TABLE TestInvalidBatch\"", "var_name": "DROP_TABLE_INVALID_BATCH"}, {"original_string": "static final String CREATE_TABLE_BATCH = \"CREATE TABLE TestBatch(id int, first varchar (255), last varchar (255));\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_BATCH = \"CREATE TABLE TestBatch(id int, first varchar (255), last varchar (255));\"", "var_name": "CREATE_TABLE_BATCH"}, {"original_string": "static final String INSERT_TABLE_BATCH = \"INSERT INTO TestBatch VALUES (1, 'First', 'Second');\";", "modifier": "static final", "type": "String", "declarator": "INSERT_TABLE_BATCH = \"INSERT INTO TestBatch VALUES (1, 'First', 'Second');\"", "var_name": "INSERT_TABLE_BATCH"}, {"original_string": "static final String SELECT_TABLE_BATCH = \"SELECT * FROM TestBatch;\";", "modifier": "static final", "type": "String", "declarator": "SELECT_TABLE_BATCH = \"SELECT * FROM TestBatch;\"", "var_name": "SELECT_TABLE_BATCH"}, {"original_string": "static final String DROP_TABLE_BATCH = \"DROP TABLE TestBatch\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_BATCH = \"DROP TABLE TestBatch\"", "var_name": "DROP_TABLE_BATCH"}, {"original_string": "static final String CREATE_TABLE_QUERY = \"CREATE TABLE TestQueryUpdate(id int, name varchar (255));\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_QUERY = \"CREATE TABLE TestQueryUpdate(id int, name varchar (255));\"", "var_name": "CREATE_TABLE_QUERY"}, {"original_string": "static final String INSERT_TABLE_QUERY = \"INSERT INTO TestQueryUpdate VALUES (1, 'Name');\";", "modifier": "static final", "type": "String", "declarator": "INSERT_TABLE_QUERY = \"INSERT INTO TestQueryUpdate VALUES (1, 'Name');\"", "var_name": "INSERT_TABLE_QUERY"}, {"original_string": "static final String SELECT_TABLE_QUERY = \"SELECT * FROM TestQueryUpdate;\";", "modifier": "static final", "type": "String", "declarator": "SELECT_TABLE_QUERY = \"SELECT * FROM TestQueryUpdate;\"", "var_name": "SELECT_TABLE_QUERY"}, {"original_string": "static final String DELETE_ROWS_QUERY = \"DELETE FROM TestQueryUpdate;\";", "modifier": "static final", "type": "String", "declarator": "DELETE_ROWS_QUERY = \"DELETE FROM TestQueryUpdate;\"", "var_name": "DELETE_ROWS_QUERY"}, {"original_string": "static final String DROP_TABLE_QUERY = \"DROP TABLE TestQueryUpdate;\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_QUERY = \"DROP TABLE TestQueryUpdate;\"", "var_name": "DROP_TABLE_QUERY"}, {"original_string": "static final String CREATE_TABLE_BATCH_QUERY = \"CREATE TABLE TestQueryBatchUpdate(id int);\";", "modifier": "static final", "type": "String", "declarator": "CREATE_TABLE_BATCH_QUERY = \"CREATE TABLE TestQueryBatchUpdate(id int);\"", "var_name": "CREATE_TABLE_BATCH_QUERY"}, {"original_string": "static final String INSERT_TABLE_BATCH_QUERY = \"INSERT INTO TestQueryBatchUpdate VALUES (1);\";", "modifier": "static final", "type": "String", "declarator": "INSERT_TABLE_BATCH_QUERY = \"INSERT INTO TestQueryBatchUpdate VALUES (1);\"", "var_name": "INSERT_TABLE_BATCH_QUERY"}, {"original_string": "static final String SELECT_TABLE_BATCH_QUERY = \"SELECT * FROM TestQueryBatchUpdate;\";", "modifier": "static final", "type": "String", "declarator": "SELECT_TABLE_BATCH_QUERY = \"SELECT * FROM TestQueryBatchUpdate;\"", "var_name": "SELECT_TABLE_BATCH_QUERY"}, {"original_string": "static final String DROP_TABLE_BATCH_QUERY = \"DROP TABLE TestQueryBatchUpdate;\";", "modifier": "static final", "type": "String", "declarator": "DROP_TABLE_BATCH_QUERY = \"DROP TABLE TestQueryBatchUpdate;\"", "var_name": "DROP_TABLE_BATCH_QUERY"}, {"original_string": "static final String timestampPattern = \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}-\\\\d{4}\";", "modifier": "static final", "type": "String", "declarator": "timestampPattern = \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}-\\\\d{4}\"", "var_name": "timestampPattern"}, {"original_string": "static final String datePattern = \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";", "modifier": "static final", "type": "String", "declarator": "datePattern = \"\\\\d{4}-\\\\d{2}-\\\\d{2}\"", "var_name": "datePattern"}, {"original_string": "static final String timePattern = \"\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}-\\\\d{4}\";", "modifier": "static final", "type": "String", "declarator": "timePattern = \"\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}-\\\\d{4}\"", "var_name": "timePattern"}, {"original_string": "static final String TEST_INT = \"10\";", "modifier": "static final", "type": "String", "declarator": "TEST_INT = \"10\"", "var_name": "TEST_INT"}, {"original_string": "static final String TEST_STRING = \"test\";", "modifier": "static final", "type": "String", "declarator": "TEST_STRING = \"test\"", "var_name": "TEST_STRING"}, {"original_string": "static final String TEST_DEC = \"123.45\";", "modifier": "static final", "type": "String", "declarator": "TEST_DEC = \"123.45\"", "var_name": "TEST_DEC"}, {"original_string": "static final int CORE_START_TIMEOUT = 10;", "modifier": "static final", "type": "int", "declarator": "CORE_START_TIMEOUT = 10", "var_name": "CORE_START_TIMEOUT"}, {"original_string": "static JDBCCore core;", "modifier": "static", "type": "JDBCCore", "declarator": "core", "var_name": "core"}, {"original_string": "static JDBC jdbc;", "modifier": "static", "type": "JDBC", "declarator": "jdbc", "var_name": "jdbc"}, {"original_string": "static Vantiq vantiq;", "modifier": "static", "type": "Vantiq", "declarator": "vantiq", "var_name": "vantiq"}], "file": "jdbcSource/src/test/java/io/vantiq/extsrc/jdbcSource/TestJDBC.java"}, "test_case": {"identifier": "testProcessPublish", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessPublish() throws VantiqSQLException {\n        assumeTrue(testDBUsername != null && testDBPassword != null && testDBURL != null && jdbcDriverLoc != null);\n        jdbc.setupJDBC(testDBURL, testDBUsername, testDBPassword, false, 0);\n        \n        int queryResult;\n        \n        // Try processPublish with a nonsense query\n        try {\n            queryResult = jdbc.processPublish(\"jibberish\");\n            fail(\"Should have thrown an exception\");\n        } catch (VantiqSQLException e) {\n            // Expected behavior\n        }\n        \n        // Create table that will be used for testing\n        try {\n            queryResult = jdbc.processPublish(CREATE_TABLE);\n            assert queryResult == 0;\n        } catch (VantiqSQLException e) {\n            fail(\"Should not throw an exception: \" + e.getMessage());\n        }\n        \n        // Insert a row of data into the table\n        try {\n            queryResult = jdbc.processPublish(PUBLISH_QUERY);\n            assert queryResult > 0;\n        } catch (VantiqSQLException e) {\n            fail(\"Should not throw an exception: \" + e.getMessage());\n        }\n        \n        jdbc.close();\n    }", "signature": "void testProcessPublish()", "full_signature": "@Test public void testProcessPublish()", "class_method_signature": "TestJDBC.testProcessPublish()", "testcase": true, "constructor": false, "invocations": ["assumeTrue", "setupJDBC", "processPublish", "fail", "processPublish", "fail", "getMessage", "processPublish", "fail", "getMessage", "close"]}, "focal_class": {"identifier": "JDBC", "superclass": "", "interfaces": "", "fields": [{"original_string": "Logger              log  = LoggerFactory.getLogger(this.getClass().getCanonicalName());", "modifier": "", "type": "Logger", "declarator": "log  = LoggerFactory.getLogger(this.getClass().getCanonicalName())", "var_name": "log"}, {"original_string": "private Connection  conn = null;", "modifier": "private", "type": "Connection", "declarator": "conn = null", "var_name": "conn"}, {"original_string": "boolean isAsync;", "modifier": "", "type": "boolean", "declarator": "isAsync", "var_name": "isAsync"}, {"original_string": "private String dbURL;", "modifier": "private", "type": "String", "declarator": "dbURL", "var_name": "dbURL"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private static final int CHECK_CONNECTION_TIMEOUT = 5;", "modifier": "private static final", "type": "int", "declarator": "CHECK_CONNECTION_TIMEOUT = 5", "var_name": "CHECK_CONNECTION_TIMEOUT"}, {"original_string": "private static final int CONNECTION_POOL_TIMEOUT = 5000;", "modifier": "private static final", "type": "int", "declarator": "CONNECTION_POOL_TIMEOUT = 5000", "var_name": "CONNECTION_POOL_TIMEOUT"}, {"original_string": "private HikariDataSource ds = null;", "modifier": "private", "type": "HikariDataSource", "declarator": "ds = null", "var_name": "ds"}, {"original_string": "DateFormat dfTimestamp  = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");", "modifier": "", "type": "DateFormat", "declarator": "dfTimestamp  = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\")", "var_name": "dfTimestamp"}, {"original_string": "DateFormat dfDate       = new SimpleDateFormat(\"yyyy-MM-dd\");", "modifier": "", "type": "DateFormat", "declarator": "dfDate       = new SimpleDateFormat(\"yyyy-MM-dd\")", "var_name": "dfDate"}, {"original_string": "DateFormat dfTime       = new SimpleDateFormat(\"HH:mm:ss.SSSZ\");", "modifier": "", "type": "DateFormat", "declarator": "dfTime       = new SimpleDateFormat(\"HH:mm:ss.SSSZ\")", "var_name": "dfTime"}], "methods": [{"identifier": "setupJDBC", "parameters": "(String dbURL, String username, String password, boolean asyncProcessing, int maxPoolSize)", "modifiers": "public", "return": "void", "signature": "void setupJDBC(String dbURL, String username, String password, boolean asyncProcessing, int maxPoolSize)", "full_signature": "public void setupJDBC(String dbURL, String username, String password, boolean asyncProcessing, int maxPoolSize)", "class_method_signature": "JDBC.setupJDBC(String dbURL, String username, String password, boolean asyncProcessing, int maxPoolSize)", "testcase": false, "constructor": false}, {"identifier": "processQuery", "parameters": "(String sqlQuery)", "modifiers": "public", "return": "HashMap[]", "signature": "HashMap[] processQuery(String sqlQuery)", "full_signature": "public HashMap[] processQuery(String sqlQuery)", "class_method_signature": "JDBC.processQuery(String sqlQuery)", "testcase": false, "constructor": false}, {"identifier": "processPublish", "parameters": "(String sqlQuery)", "modifiers": "public", "return": "int", "signature": "int processPublish(String sqlQuery)", "full_signature": "public int processPublish(String sqlQuery)", "class_method_signature": "JDBC.processPublish(String sqlQuery)", "testcase": false, "constructor": false}, {"identifier": "processBatchPublish", "parameters": "(List queryList)", "modifiers": "public", "return": "int[]", "signature": "int[] processBatchPublish(List queryList)", "full_signature": "public int[] processBatchPublish(List queryList)", "class_method_signature": "JDBC.processBatchPublish(List queryList)", "testcase": false, "constructor": false}, {"identifier": "createMapFromResults", "parameters": "(ResultSet queryResults)", "modifiers": "", "return": "HashMap[]", "signature": "HashMap[] createMapFromResults(ResultSet queryResults)", "full_signature": " HashMap[] createMapFromResults(ResultSet queryResults)", "class_method_signature": "JDBC.createMapFromResults(ResultSet queryResults)", "testcase": false, "constructor": false}, {"identifier": "diagnoseConnection", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void diagnoseConnection()", "full_signature": "public void diagnoseConnection()", "class_method_signature": "JDBC.diagnoseConnection()", "testcase": false, "constructor": false}, {"identifier": "reportSQLError", "parameters": "(SQLException e)", "modifiers": "public", "return": "void", "signature": "void reportSQLError(SQLException e)", "full_signature": "public void reportSQLError(SQLException e)", "class_method_signature": "JDBC.reportSQLError(SQLException e)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "JDBC.close()", "testcase": false, "constructor": false}], "file": "jdbcSource/src/main/java/io/vantiq/extsrc/jdbcSource/JDBC.java"}, "focal_method": {"identifier": "processPublish", "parameters": "(String sqlQuery)", "modifiers": "public", "return": "int", "body": "public int processPublish(String sqlQuery) throws VantiqSQLException {\n        int publishSuccess = -1;\n\n        if (isAsync) {\n            try (Connection conn = ds.getConnection();\n                 Statement stmt = conn.createStatement()) {\n                publishSuccess = stmt.executeUpdate(sqlQuery);\n            } catch (SQLException e) {\n                // Handle errors for JDBC\n                reportSQLError(e);\n            }\n        } else {\n            // Check that connection hasn't closed\n            diagnoseConnection();\n\n            try (Statement stmt = conn.createStatement()) {\n                publishSuccess = stmt.executeUpdate(sqlQuery);\n            } catch (SQLException e) {\n                // Handle errors for JDBC\n                reportSQLError(e);\n            }\n        }\n\n        return publishSuccess;\n    }", "signature": "int processPublish(String sqlQuery)", "full_signature": "public int processPublish(String sqlQuery)", "class_method_signature": "JDBC.processPublish(String sqlQuery)", "testcase": false, "constructor": false, "invocations": ["getConnection", "createStatement", "executeUpdate", "reportSQLError", "diagnoseConnection", "createStatement", "executeUpdate", "reportSQLError"]}, "repository": {"repo_id": 141492069, "url": "https://github.com/Vantiq/vantiq-extension-sources", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 9, "size": 16261, "license": "licensed"}}