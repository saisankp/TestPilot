{"test_class": {"identifier": "RemoteInputChannelTest", "superclass": "", "interfaces": "", "fields": [], "file": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java"}, "test_case": {"identifier": "testRetriggerWithoutPartitionRequest", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n\tpublic void testRetriggerWithoutPartitionRequest() throws Exception {\n\t\tTuple2<Integer, Integer> backoff = new Tuple2<Integer, Integer>(500, 3000);\n\t\tPartitionRequestClient connClient = mock(PartitionRequestClient.class);\n\t\tSingleInputGate inputGate = mock(SingleInputGate.class);\n\n\t\tRemoteInputChannel ch = createRemoteInputChannel(inputGate, connClient, backoff);\n\n\t\tch.retriggerSubpartitionRequest(0);\n\t}", "signature": "void testRetriggerWithoutPartitionRequest()", "full_signature": "@Test(expected = IllegalStateException.class) public void testRetriggerWithoutPartitionRequest()", "class_method_signature": "RemoteInputChannelTest.testRetriggerWithoutPartitionRequest()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "createRemoteInputChannel", "retriggerSubpartitionRequest"]}, "focal_class": {"identifier": "RemoteInputChannel", "superclass": "extends InputChannel", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(RemoteInputChannel.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(RemoteInputChannel.class)", "var_name": "LOG"}, {"original_string": "private final InputChannelID id = new InputChannelID();", "modifier": "private final", "type": "InputChannelID", "declarator": "id = new InputChannelID()", "var_name": "id"}, {"original_string": "private final ConnectionID connectionId;", "modifier": "private final", "type": "ConnectionID", "declarator": "connectionId", "var_name": "connectionId"}, {"original_string": "private final ConnectionManager connectionManager;", "modifier": "private final", "type": "ConnectionManager", "declarator": "connectionManager", "var_name": "connectionManager"}, {"original_string": "private final Queue<Buffer> receivedBuffers = new ArrayDeque<Buffer>();", "modifier": "private final", "type": "Queue<Buffer>", "declarator": "receivedBuffers = new ArrayDeque<Buffer>()", "var_name": "receivedBuffers"}, {"original_string": "private final AtomicBoolean isReleased = new AtomicBoolean();", "modifier": "private final", "type": "AtomicBoolean", "declarator": "isReleased = new AtomicBoolean()", "var_name": "isReleased"}, {"original_string": "private volatile PartitionRequestClient partitionRequestClient;", "modifier": "private volatile", "type": "PartitionRequestClient", "declarator": "partitionRequestClient", "var_name": "partitionRequestClient"}, {"original_string": "private int expectedSequenceNumber = 0;", "modifier": "private", "type": "int", "declarator": "expectedSequenceNumber = 0", "var_name": "expectedSequenceNumber"}], "methods": [{"identifier": "RemoteInputChannel", "parameters": "(\n\t\t\tSingleInputGate inputGate,\n\t\t\tint channelIndex,\n\t\t\tResultPartitionID partitionId,\n\t\t\tConnectionID connectionId,\n\t\t\tConnectionManager connectionManager)", "modifiers": "public", "return": "", "signature": " RemoteInputChannel(\n\t\t\tSingleInputGate inputGate,\n\t\t\tint channelIndex,\n\t\t\tResultPartitionID partitionId,\n\t\t\tConnectionID connectionId,\n\t\t\tConnectionManager connectionManager)", "full_signature": "public  RemoteInputChannel(\n\t\t\tSingleInputGate inputGate,\n\t\t\tint channelIndex,\n\t\t\tResultPartitionID partitionId,\n\t\t\tConnectionID connectionId,\n\t\t\tConnectionManager connectionManager)", "class_method_signature": "RemoteInputChannel.RemoteInputChannel(\n\t\t\tSingleInputGate inputGate,\n\t\t\tint channelIndex,\n\t\t\tResultPartitionID partitionId,\n\t\t\tConnectionID connectionId,\n\t\t\tConnectionManager connectionManager)", "testcase": false, "constructor": true}, {"identifier": "RemoteInputChannel", "parameters": "(\n\t\t\tSingleInputGate inputGate,\n\t\t\tint channelIndex,\n\t\t\tResultPartitionID partitionId,\n\t\t\tConnectionID connectionId,\n\t\t\tConnectionManager connectionManager,\n\t\t\tTuple2<Integer, Integer> initialAndMaxBackoff)", "modifiers": "public", "return": "", "signature": " RemoteInputChannel(\n\t\t\tSingleInputGate inputGate,\n\t\t\tint channelIndex,\n\t\t\tResultPartitionID partitionId,\n\t\t\tConnectionID connectionId,\n\t\t\tConnectionManager connectionManager,\n\t\t\tTuple2<Integer, Integer> initialAndMaxBackoff)", "full_signature": "public  RemoteInputChannel(\n\t\t\tSingleInputGate inputGate,\n\t\t\tint channelIndex,\n\t\t\tResultPartitionID partitionId,\n\t\t\tConnectionID connectionId,\n\t\t\tConnectionManager connectionManager,\n\t\t\tTuple2<Integer, Integer> initialAndMaxBackoff)", "class_method_signature": "RemoteInputChannel.RemoteInputChannel(\n\t\t\tSingleInputGate inputGate,\n\t\t\tint channelIndex,\n\t\t\tResultPartitionID partitionId,\n\t\t\tConnectionID connectionId,\n\t\t\tConnectionManager connectionManager,\n\t\t\tTuple2<Integer, Integer> initialAndMaxBackoff)", "testcase": false, "constructor": true}, {"identifier": "requestSubpartition", "parameters": "(int subpartitionIndex)", "modifiers": "@Override", "return": "void", "signature": "void requestSubpartition(int subpartitionIndex)", "full_signature": "@Override void requestSubpartition(int subpartitionIndex)", "class_method_signature": "RemoteInputChannel.requestSubpartition(int subpartitionIndex)", "testcase": false, "constructor": false}, {"identifier": "retriggerSubpartitionRequest", "parameters": "(int subpartitionIndex)", "modifiers": "", "return": "void", "signature": "void retriggerSubpartitionRequest(int subpartitionIndex)", "full_signature": " void retriggerSubpartitionRequest(int subpartitionIndex)", "class_method_signature": "RemoteInputChannel.retriggerSubpartitionRequest(int subpartitionIndex)", "testcase": false, "constructor": false}, {"identifier": "getNextBuffer", "parameters": "()", "modifiers": "@Override", "return": "Buffer", "signature": "Buffer getNextBuffer()", "full_signature": "@Override Buffer getNextBuffer()", "class_method_signature": "RemoteInputChannel.getNextBuffer()", "testcase": false, "constructor": false}, {"identifier": "sendTaskEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override", "return": "void", "signature": "void sendTaskEvent(TaskEvent event)", "full_signature": "@Override void sendTaskEvent(TaskEvent event)", "class_method_signature": "RemoteInputChannel.sendTaskEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "isReleased", "parameters": "()", "modifiers": "@Override", "return": "boolean", "signature": "boolean isReleased()", "full_signature": "@Override boolean isReleased()", "class_method_signature": "RemoteInputChannel.isReleased()", "testcase": false, "constructor": false}, {"identifier": "notifySubpartitionConsumed", "parameters": "()", "modifiers": "@Override", "return": "void", "signature": "void notifySubpartitionConsumed()", "full_signature": "@Override void notifySubpartitionConsumed()", "class_method_signature": "RemoteInputChannel.notifySubpartitionConsumed()", "testcase": false, "constructor": false}, {"identifier": "releaseAllResources", "parameters": "()", "modifiers": "@Override", "return": "void", "signature": "void releaseAllResources()", "full_signature": "@Override void releaseAllResources()", "class_method_signature": "RemoteInputChannel.releaseAllResources()", "testcase": false, "constructor": false}, {"identifier": "failPartitionRequest", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void failPartitionRequest()", "full_signature": "public void failPartitionRequest()", "class_method_signature": "RemoteInputChannel.failPartitionRequest()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RemoteInputChannel.toString()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfQueuedBuffers", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfQueuedBuffers()", "full_signature": "public int getNumberOfQueuedBuffers()", "class_method_signature": "RemoteInputChannel.getNumberOfQueuedBuffers()", "testcase": false, "constructor": false}, {"identifier": "getInputChannelId", "parameters": "()", "modifiers": "public", "return": "InputChannelID", "signature": "InputChannelID getInputChannelId()", "full_signature": "public InputChannelID getInputChannelId()", "class_method_signature": "RemoteInputChannel.getInputChannelId()", "testcase": false, "constructor": false}, {"identifier": "getBufferProvider", "parameters": "()", "modifiers": "public", "return": "BufferProvider", "signature": "BufferProvider getBufferProvider()", "full_signature": "public BufferProvider getBufferProvider()", "class_method_signature": "RemoteInputChannel.getBufferProvider()", "testcase": false, "constructor": false}, {"identifier": "onBuffer", "parameters": "(Buffer buffer, int sequenceNumber)", "modifiers": "public", "return": "void", "signature": "void onBuffer(Buffer buffer, int sequenceNumber)", "full_signature": "public void onBuffer(Buffer buffer, int sequenceNumber)", "class_method_signature": "RemoteInputChannel.onBuffer(Buffer buffer, int sequenceNumber)", "testcase": false, "constructor": false}, {"identifier": "onEmptyBuffer", "parameters": "(int sequenceNumber)", "modifiers": "public", "return": "void", "signature": "void onEmptyBuffer(int sequenceNumber)", "full_signature": "public void onEmptyBuffer(int sequenceNumber)", "class_method_signature": "RemoteInputChannel.onEmptyBuffer(int sequenceNumber)", "testcase": false, "constructor": false}, {"identifier": "onFailedPartitionRequest", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onFailedPartitionRequest()", "full_signature": "public void onFailedPartitionRequest()", "class_method_signature": "RemoteInputChannel.onFailedPartitionRequest()", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable cause)", "modifiers": "public", "return": "void", "signature": "void onError(Throwable cause)", "full_signature": "public void onError(Throwable cause)", "class_method_signature": "RemoteInputChannel.onError(Throwable cause)", "testcase": false, "constructor": false}], "file": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel.java"}, "focal_method": {"identifier": "retriggerSubpartitionRequest", "parameters": "(int subpartitionIndex)", "modifiers": "", "return": "void", "body": "void retriggerSubpartitionRequest(int subpartitionIndex) throws IOException, InterruptedException {\n\t\tcheckState(partitionRequestClient != null, \"Missing initial subpartition request.\");\n\n\t\tif (increaseBackoff()) {\n\t\t\tpartitionRequestClient.requestSubpartition(\n\t\t\t\t\tpartitionId, subpartitionIndex, this, getCurrentBackoff());\n\t\t}\n\t\telse {\n\t\t\tfailPartitionRequest();\n\t\t}\n\t}", "signature": "void retriggerSubpartitionRequest(int subpartitionIndex)", "full_signature": " void retriggerSubpartitionRequest(int subpartitionIndex)", "class_method_signature": "RemoteInputChannel.retriggerSubpartitionRequest(int subpartitionIndex)", "testcase": false, "constructor": false, "invocations": ["checkState", "increaseBackoff", "requestSubpartition", "getCurrentBackoff", "failPartitionRequest"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}