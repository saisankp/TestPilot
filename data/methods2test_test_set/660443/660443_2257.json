{"test_class": {"identifier": "AtomContainerTest", "superclass": "extends AbstractAtomContainerTest", "interfaces": "", "fields": [], "file": "base/silent/src/test/java/org/openscience/cdk/silent/AtomContainerTest.java"}, "test_case": {"identifier": "testAtomContainer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAtomContainer() {\n        // create an empty container with in the constructor defined array lengths\n        IAtomContainer container = new AtomContainer();\n\n        Assert.assertEquals(0, container.getAtomCount());\n        Assert.assertEquals(0, container.getBondCount());\n\n        // test whether the ElectronContainer is correctly initialized\n        container.addBond(container.getBuilder().newInstance(IBond.class,\n                container.getBuilder().newInstance(IAtom.class, \"C\"),\n                container.getBuilder().newInstance(IAtom.class, \"C\"), IBond.Order.DOUBLE));\n        container.addLonePair(container.getBuilder().newInstance(ILonePair.class,\n                container.getBuilder().newInstance(IAtom.class, \"N\")));\n    }", "signature": "void testAtomContainer()", "full_signature": "@Test public void testAtomContainer()", "class_method_signature": "AtomContainerTest.testAtomContainer()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getAtomCount", "assertEquals", "getBondCount", "addBond", "newInstance", "getBuilder", "newInstance", "getBuilder", "newInstance", "getBuilder", "addLonePair", "newInstance", "getBuilder", "newInstance", "getBuilder"]}, "focal_class": {"identifier": "AtomContainer", "superclass": "extends ChemObject", "interfaces": "implements IAtomContainer, IChemObjectListener, Serializable, Cloneable", "fields": [{"original_string": "private static final int DEFAULT_CAPACITY = 20;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_CAPACITY = 20", "var_name": "DEFAULT_CAPACITY"}, {"original_string": "private static final long serialVersionUID = 5678100348445919254L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 5678100348445919254L", "var_name": "serialVersionUID"}, {"original_string": "protected int atomCount;", "modifier": "protected", "type": "int", "declarator": "atomCount", "var_name": "atomCount"}, {"original_string": "protected int bondCount;", "modifier": "protected", "type": "int", "declarator": "bondCount", "var_name": "bondCount"}, {"original_string": "protected int lonePairCount;", "modifier": "protected", "type": "int", "declarator": "lonePairCount", "var_name": "lonePairCount"}, {"original_string": "protected int singleElectronCount;", "modifier": "protected", "type": "int", "declarator": "singleElectronCount", "var_name": "singleElectronCount"}, {"original_string": "protected int growArraySize = 10;", "modifier": "protected", "type": "int", "declarator": "growArraySize = 10", "var_name": "growArraySize"}, {"original_string": "protected IAtom[] atoms;", "modifier": "protected", "type": "IAtom[]", "declarator": "atoms", "var_name": "atoms"}, {"original_string": "protected IBond[] bonds;", "modifier": "protected", "type": "IBond[]", "declarator": "bonds", "var_name": "bonds"}, {"original_string": "protected ILonePair[] lonePairs;", "modifier": "protected", "type": "ILonePair[]", "declarator": "lonePairs", "var_name": "lonePairs"}, {"original_string": "protected ISingleElectron[] singleElectrons;", "modifier": "protected", "type": "ISingleElectron[]", "declarator": "singleElectrons", "var_name": "singleElectrons"}, {"original_string": "protected Set<IStereoElement> stereoElements;", "modifier": "protected", "type": "Set<IStereoElement>", "declarator": "stereoElements", "var_name": "stereoElements"}], "methods": [{"identifier": "AtomContainer", "parameters": "()", "modifiers": "public", "return": "", "signature": " AtomContainer()", "full_signature": "public  AtomContainer()", "class_method_signature": "AtomContainer.AtomContainer()", "testcase": false, "constructor": true}, {"identifier": "AtomContainer", "parameters": "(IAtomContainer container)", "modifiers": "public", "return": "", "signature": " AtomContainer(IAtomContainer container)", "full_signature": "public  AtomContainer(IAtomContainer container)", "class_method_signature": "AtomContainer.AtomContainer(IAtomContainer container)", "testcase": false, "constructor": true}, {"identifier": "AtomContainer", "parameters": "(int atomCount, int bondCount, int lpCount,\n                         int seCount)", "modifiers": "public", "return": "", "signature": " AtomContainer(int atomCount, int bondCount, int lpCount,\n                         int seCount)", "full_signature": "public  AtomContainer(int atomCount, int bondCount, int lpCount,\n                         int seCount)", "class_method_signature": "AtomContainer.AtomContainer(int atomCount, int bondCount, int lpCount,\n                         int seCount)", "testcase": false, "constructor": true}, {"identifier": "addStereoElement", "parameters": "(IStereoElement element)", "modifiers": "@Override public", "return": "void", "signature": "void addStereoElement(IStereoElement element)", "full_signature": "@Override public void addStereoElement(IStereoElement element)", "class_method_signature": "AtomContainer.addStereoElement(IStereoElement element)", "testcase": false, "constructor": false}, {"identifier": "setStereoElements", "parameters": "(List<IStereoElement> elements)", "modifiers": "@Override public", "return": "void", "signature": "void setStereoElements(List<IStereoElement> elements)", "full_signature": "@Override public void setStereoElements(List<IStereoElement> elements)", "class_method_signature": "AtomContainer.setStereoElements(List<IStereoElement> elements)", "testcase": false, "constructor": false}, {"identifier": "stereoElements", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IStereoElement>", "signature": "Iterable<IStereoElement> stereoElements()", "full_signature": "@Override public Iterable<IStereoElement> stereoElements()", "class_method_signature": "AtomContainer.stereoElements()", "testcase": false, "constructor": false}, {"identifier": "setAtoms", "parameters": "(IAtom[] newAtoms)", "modifiers": "@Override public", "return": "void", "signature": "void setAtoms(IAtom[] newAtoms)", "full_signature": "@Override public void setAtoms(IAtom[] newAtoms)", "class_method_signature": "AtomContainer.setAtoms(IAtom[] newAtoms)", "testcase": false, "constructor": false}, {"identifier": "setBonds", "parameters": "(IBond[] newBonds)", "modifiers": "@Override public", "return": "void", "signature": "void setBonds(IBond[] newBonds)", "full_signature": "@Override public void setBonds(IBond[] newBonds)", "class_method_signature": "AtomContainer.setBonds(IBond[] newBonds)", "testcase": false, "constructor": false}, {"identifier": "setAtom", "parameters": "(int idx, IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void setAtom(int idx, IAtom atom)", "full_signature": "@Override public void setAtom(int idx, IAtom atom)", "class_method_signature": "AtomContainer.setAtom(int idx, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getAtom", "parameters": "(int idx)", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getAtom(int idx)", "full_signature": "@Override public IAtom getAtom(int idx)", "class_method_signature": "AtomContainer.getAtom(int idx)", "testcase": false, "constructor": false}, {"identifier": "getBond", "parameters": "(int idx)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond getBond(int idx)", "full_signature": "@Override public IBond getBond(int idx)", "class_method_signature": "AtomContainer.getBond(int idx)", "testcase": false, "constructor": false}, {"identifier": "getLonePair", "parameters": "(int idx)", "modifiers": "@Override public", "return": "ILonePair", "signature": "ILonePair getLonePair(int idx)", "full_signature": "@Override public ILonePair getLonePair(int idx)", "class_method_signature": "AtomContainer.getLonePair(int idx)", "testcase": false, "constructor": false}, {"identifier": "getSingleElectron", "parameters": "(int idx)", "modifiers": "@Override public", "return": "ISingleElectron", "signature": "ISingleElectron getSingleElectron(int idx)", "full_signature": "@Override public ISingleElectron getSingleElectron(int idx)", "class_method_signature": "AtomContainer.getSingleElectron(int idx)", "testcase": false, "constructor": false}, {"identifier": "atoms", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IAtom>", "signature": "Iterable<IAtom> atoms()", "full_signature": "@Override public Iterable<IAtom> atoms()", "class_method_signature": "AtomContainer.atoms()", "testcase": false, "constructor": false}, {"identifier": "bonds", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IBond>", "signature": "Iterable<IBond> bonds()", "full_signature": "@Override public Iterable<IBond> bonds()", "class_method_signature": "AtomContainer.bonds()", "testcase": false, "constructor": false}, {"identifier": "lonePairs", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<ILonePair>", "signature": "Iterable<ILonePair> lonePairs()", "full_signature": "@Override public Iterable<ILonePair> lonePairs()", "class_method_signature": "AtomContainer.lonePairs()", "testcase": false, "constructor": false}, {"identifier": "singleElectrons", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<ISingleElectron>", "signature": "Iterable<ISingleElectron> singleElectrons()", "full_signature": "@Override public Iterable<ISingleElectron> singleElectrons()", "class_method_signature": "AtomContainer.singleElectrons()", "testcase": false, "constructor": false}, {"identifier": "electronContainers", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IElectronContainer>", "signature": "Iterable<IElectronContainer> electronContainers()", "full_signature": "@Override public Iterable<IElectronContainer> electronContainers()", "class_method_signature": "AtomContainer.electronContainers()", "testcase": false, "constructor": false}, {"identifier": "getFirstAtom", "parameters": "()", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getFirstAtom()", "full_signature": "@Override public IAtom getFirstAtom()", "class_method_signature": "AtomContainer.getFirstAtom()", "testcase": false, "constructor": false}, {"identifier": "getLastAtom", "parameters": "()", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getLastAtom()", "full_signature": "@Override public IAtom getLastAtom()", "class_method_signature": "AtomContainer.getLastAtom()", "testcase": false, "constructor": false}, {"identifier": "getAtomNumber", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getAtomNumber(IAtom atom)", "full_signature": "@Override public int getAtomNumber(IAtom atom)", "class_method_signature": "AtomContainer.getAtomNumber(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getBondNumber", "parameters": "(IAtom atom1, IAtom atom2)", "modifiers": "@Override public", "return": "int", "signature": "int getBondNumber(IAtom atom1, IAtom atom2)", "full_signature": "@Override public int getBondNumber(IAtom atom1, IAtom atom2)", "class_method_signature": "AtomContainer.getBondNumber(IAtom atom1, IAtom atom2)", "testcase": false, "constructor": false}, {"identifier": "getBondNumber", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "int", "signature": "int getBondNumber(IBond bond)", "full_signature": "@Override public int getBondNumber(IBond bond)", "class_method_signature": "AtomContainer.getBondNumber(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "getLonePairNumber", "parameters": "(ILonePair lonePair)", "modifiers": "@Override public", "return": "int", "signature": "int getLonePairNumber(ILonePair lonePair)", "full_signature": "@Override public int getLonePairNumber(ILonePair lonePair)", "class_method_signature": "AtomContainer.getLonePairNumber(ILonePair lonePair)", "testcase": false, "constructor": false}, {"identifier": "getSingleElectronNumber", "parameters": "(ISingleElectron singleElectron)", "modifiers": "@Override public", "return": "int", "signature": "int getSingleElectronNumber(ISingleElectron singleElectron)", "full_signature": "@Override public int getSingleElectronNumber(ISingleElectron singleElectron)", "class_method_signature": "AtomContainer.getSingleElectronNumber(ISingleElectron singleElectron)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(IAtom atom)", "full_signature": "@Override public int indexOf(IAtom atom)", "class_method_signature": "AtomContainer.indexOf(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(IBond bond)", "full_signature": "@Override public int indexOf(IBond bond)", "class_method_signature": "AtomContainer.indexOf(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(ISingleElectron electron)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(ISingleElectron electron)", "full_signature": "@Override public int indexOf(ISingleElectron electron)", "class_method_signature": "AtomContainer.indexOf(ISingleElectron electron)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(ILonePair pair)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(ILonePair pair)", "full_signature": "@Override public int indexOf(ILonePair pair)", "class_method_signature": "AtomContainer.indexOf(ILonePair pair)", "testcase": false, "constructor": false}, {"identifier": "getElectronContainer", "parameters": "(int number)", "modifiers": "@Override public", "return": "IElectronContainer", "signature": "IElectronContainer getElectronContainer(int number)", "full_signature": "@Override public IElectronContainer getElectronContainer(int number)", "class_method_signature": "AtomContainer.getElectronContainer(int number)", "testcase": false, "constructor": false}, {"identifier": "getBond", "parameters": "(IAtom atom1, IAtom atom2)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond getBond(IAtom atom1, IAtom atom2)", "full_signature": "@Override public IBond getBond(IAtom atom1, IAtom atom2)", "class_method_signature": "AtomContainer.getBond(IAtom atom1, IAtom atom2)", "testcase": false, "constructor": false}, {"identifier": "getAtomCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getAtomCount()", "full_signature": "@Override public int getAtomCount()", "class_method_signature": "AtomContainer.getAtomCount()", "testcase": false, "constructor": false}, {"identifier": "getBondCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getBondCount()", "full_signature": "@Override public int getBondCount()", "class_method_signature": "AtomContainer.getBondCount()", "testcase": false, "constructor": false}, {"identifier": "getLonePairCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLonePairCount()", "full_signature": "@Override public int getLonePairCount()", "class_method_signature": "AtomContainer.getLonePairCount()", "testcase": false, "constructor": false}, {"identifier": "getSingleElectronCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSingleElectronCount()", "full_signature": "@Override public int getSingleElectronCount()", "class_method_signature": "AtomContainer.getSingleElectronCount()", "testcase": false, "constructor": false}, {"identifier": "getElectronContainerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getElectronContainerCount()", "full_signature": "@Override public int getElectronContainerCount()", "class_method_signature": "AtomContainer.getElectronContainerCount()", "testcase": false, "constructor": false}, {"identifier": "getConnectedAtomsList", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "List<IAtom>", "signature": "List<IAtom> getConnectedAtomsList(IAtom atom)", "full_signature": "@Override public List<IAtom> getConnectedAtomsList(IAtom atom)", "class_method_signature": "AtomContainer.getConnectedAtomsList(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedBondsList", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "List<IBond>", "signature": "List<IBond> getConnectedBondsList(IAtom atom)", "full_signature": "@Override public List<IBond> getConnectedBondsList(IAtom atom)", "class_method_signature": "AtomContainer.getConnectedBondsList(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedLonePairsList", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "List<ILonePair>", "signature": "List<ILonePair> getConnectedLonePairsList(IAtom atom)", "full_signature": "@Override public List<ILonePair> getConnectedLonePairsList(IAtom atom)", "class_method_signature": "AtomContainer.getConnectedLonePairsList(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedSingleElectronsList", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "List<ISingleElectron>", "signature": "List<ISingleElectron> getConnectedSingleElectronsList(IAtom atom)", "full_signature": "@Override public List<ISingleElectron> getConnectedSingleElectronsList(IAtom atom)", "class_method_signature": "AtomContainer.getConnectedSingleElectronsList(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedElectronContainersList", "parameters": "(\n        IAtom atom)", "modifiers": "@Override public", "return": "List<IElectronContainer>", "signature": "List<IElectronContainer> getConnectedElectronContainersList(\n        IAtom atom)", "full_signature": "@Override public List<IElectronContainer> getConnectedElectronContainersList(\n        IAtom atom)", "class_method_signature": "AtomContainer.getConnectedElectronContainersList(\n        IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedBondsCount", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedBondsCount(IAtom atom)", "full_signature": "@Override public int getConnectedBondsCount(IAtom atom)", "class_method_signature": "AtomContainer.getConnectedBondsCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedAtomsCount", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedAtomsCount(IAtom atom)", "full_signature": "@Override public int getConnectedAtomsCount(IAtom atom)", "class_method_signature": "AtomContainer.getConnectedAtomsCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedBondsCount", "parameters": "(int idx)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedBondsCount(int idx)", "full_signature": "@Override public int getConnectedBondsCount(int idx)", "class_method_signature": "AtomContainer.getConnectedBondsCount(int idx)", "testcase": false, "constructor": false}, {"identifier": "getConnectedLonePairsCount", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedLonePairsCount(IAtom atom)", "full_signature": "@Override public int getConnectedLonePairsCount(IAtom atom)", "class_method_signature": "AtomContainer.getConnectedLonePairsCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedSingleElectronsCount", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedSingleElectronsCount(IAtom atom)", "full_signature": "@Override public int getConnectedSingleElectronsCount(IAtom atom)", "class_method_signature": "AtomContainer.getConnectedSingleElectronsCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getBondOrderSum", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "double", "signature": "double getBondOrderSum(IAtom atom)", "full_signature": "@Override public double getBondOrderSum(IAtom atom)", "class_method_signature": "AtomContainer.getBondOrderSum(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getMaximumBondOrder", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "Order", "signature": "Order getMaximumBondOrder(IAtom atom)", "full_signature": "@Override public Order getMaximumBondOrder(IAtom atom)", "class_method_signature": "AtomContainer.getMaximumBondOrder(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getMinimumBondOrder", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "Order", "signature": "Order getMinimumBondOrder(IAtom atom)", "full_signature": "@Override public Order getMinimumBondOrder(IAtom atom)", "class_method_signature": "AtomContainer.getMinimumBondOrder(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(IAtomContainer that)", "modifiers": "@Override public", "return": "void", "signature": "void add(IAtomContainer that)", "full_signature": "@Override public void add(IAtomContainer that)", "class_method_signature": "AtomContainer.add(IAtomContainer that)", "testcase": false, "constructor": false}, {"identifier": "addAtom", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void addAtom(IAtom atom)", "full_signature": "@Override public void addAtom(IAtom atom)", "class_method_signature": "AtomContainer.addAtom(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "addBond", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "void", "signature": "void addBond(IBond bond)", "full_signature": "@Override public void addBond(IBond bond)", "class_method_signature": "AtomContainer.addBond(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "addLonePair", "parameters": "(ILonePair lonePair)", "modifiers": "@Override public", "return": "void", "signature": "void addLonePair(ILonePair lonePair)", "full_signature": "@Override public void addLonePair(ILonePair lonePair)", "class_method_signature": "AtomContainer.addLonePair(ILonePair lonePair)", "testcase": false, "constructor": false}, {"identifier": "addSingleElectron", "parameters": "(ISingleElectron singleElectron)", "modifiers": "@Override public", "return": "void", "signature": "void addSingleElectron(ISingleElectron singleElectron)", "full_signature": "@Override public void addSingleElectron(ISingleElectron singleElectron)", "class_method_signature": "AtomContainer.addSingleElectron(ISingleElectron singleElectron)", "testcase": false, "constructor": false}, {"identifier": "addElectronContainer", "parameters": "(IElectronContainer electronContainer)", "modifiers": "@Override public", "return": "void", "signature": "void addElectronContainer(IElectronContainer electronContainer)", "full_signature": "@Override public void addElectronContainer(IElectronContainer electronContainer)", "class_method_signature": "AtomContainer.addElectronContainer(IElectronContainer electronContainer)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "void", "signature": "void remove(IAtomContainer atomContainer)", "full_signature": "@Override public void remove(IAtomContainer atomContainer)", "class_method_signature": "AtomContainer.remove(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "removeAtomOnly", "parameters": "(int position)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtomOnly(int position)", "full_signature": "@Override public void removeAtomOnly(int position)", "class_method_signature": "AtomContainer.removeAtomOnly(int position)", "testcase": false, "constructor": false}, {"identifier": "removeAtomOnly", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtomOnly(IAtom atom)", "full_signature": "@Override public void removeAtomOnly(IAtom atom)", "class_method_signature": "AtomContainer.removeAtomOnly(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "removeBond", "parameters": "(int position)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond removeBond(int position)", "full_signature": "@Override public IBond removeBond(int position)", "class_method_signature": "AtomContainer.removeBond(int position)", "testcase": false, "constructor": false}, {"identifier": "removeBond", "parameters": "(IAtom atom1, IAtom atom2)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond removeBond(IAtom atom1, IAtom atom2)", "full_signature": "@Override public IBond removeBond(IAtom atom1, IAtom atom2)", "class_method_signature": "AtomContainer.removeBond(IAtom atom1, IAtom atom2)", "testcase": false, "constructor": false}, {"identifier": "removeBond", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "void", "signature": "void removeBond(IBond bond)", "full_signature": "@Override public void removeBond(IBond bond)", "class_method_signature": "AtomContainer.removeBond(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "removeLonePair", "parameters": "(int position)", "modifiers": "@Override public", "return": "ILonePair", "signature": "ILonePair removeLonePair(int position)", "full_signature": "@Override public ILonePair removeLonePair(int position)", "class_method_signature": "AtomContainer.removeLonePair(int position)", "testcase": false, "constructor": false}, {"identifier": "removeLonePair", "parameters": "(ILonePair lonePair)", "modifiers": "@Override public", "return": "void", "signature": "void removeLonePair(ILonePair lonePair)", "full_signature": "@Override public void removeLonePair(ILonePair lonePair)", "class_method_signature": "AtomContainer.removeLonePair(ILonePair lonePair)", "testcase": false, "constructor": false}, {"identifier": "removeSingleElectron", "parameters": "(int position)", "modifiers": "@Override public", "return": "ISingleElectron", "signature": "ISingleElectron removeSingleElectron(int position)", "full_signature": "@Override public ISingleElectron removeSingleElectron(int position)", "class_method_signature": "AtomContainer.removeSingleElectron(int position)", "testcase": false, "constructor": false}, {"identifier": "removeSingleElectron", "parameters": "(ISingleElectron singleElectron)", "modifiers": "@Override public", "return": "void", "signature": "void removeSingleElectron(ISingleElectron singleElectron)", "full_signature": "@Override public void removeSingleElectron(ISingleElectron singleElectron)", "class_method_signature": "AtomContainer.removeSingleElectron(ISingleElectron singleElectron)", "testcase": false, "constructor": false}, {"identifier": "removeElectronContainer", "parameters": "(int number)", "modifiers": "@Override public", "return": "IElectronContainer", "signature": "IElectronContainer removeElectronContainer(int number)", "full_signature": "@Override public IElectronContainer removeElectronContainer(int number)", "class_method_signature": "AtomContainer.removeElectronContainer(int number)", "testcase": false, "constructor": false}, {"identifier": "removeElectronContainer", "parameters": "(IElectronContainer electronContainer)", "modifiers": "@Override public", "return": "void", "signature": "void removeElectronContainer(IElectronContainer electronContainer)", "full_signature": "@Override public void removeElectronContainer(IElectronContainer electronContainer)", "class_method_signature": "AtomContainer.removeElectronContainer(IElectronContainer electronContainer)", "testcase": false, "constructor": false}, {"identifier": "removeAtomAndConnectedElectronContainers", "parameters": "(IAtom atom)", "modifiers": "@Override @Deprecated public", "return": "void", "signature": "void removeAtomAndConnectedElectronContainers(IAtom atom)", "full_signature": "@Override @Deprecated public void removeAtomAndConnectedElectronContainers(IAtom atom)", "class_method_signature": "AtomContainer.removeAtomAndConnectedElectronContainers(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "removeAtom", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtom(IAtom atom)", "full_signature": "@Override public void removeAtom(IAtom atom)", "class_method_signature": "AtomContainer.removeAtom(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "removeAtom", "parameters": "(int pos)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtom(int pos)", "full_signature": "@Override public void removeAtom(int pos)", "class_method_signature": "AtomContainer.removeAtom(int pos)", "testcase": false, "constructor": false}, {"identifier": "removeAllElements", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllElements()", "full_signature": "@Override public void removeAllElements()", "class_method_signature": "AtomContainer.removeAllElements()", "testcase": false, "constructor": false}, {"identifier": "removeAllElectronContainers", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllElectronContainers()", "full_signature": "@Override public void removeAllElectronContainers()", "class_method_signature": "AtomContainer.removeAllElectronContainers()", "testcase": false, "constructor": false}, {"identifier": "removeAllBonds", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllBonds()", "full_signature": "@Override public void removeAllBonds()", "class_method_signature": "AtomContainer.removeAllBonds()", "testcase": false, "constructor": false}, {"identifier": "addBond", "parameters": "(int atom1, int atom2, IBond.Order order,\n                        IBond.Stereo stereo)", "modifiers": "@Override public", "return": "void", "signature": "void addBond(int atom1, int atom2, IBond.Order order,\n                        IBond.Stereo stereo)", "full_signature": "@Override public void addBond(int atom1, int atom2, IBond.Order order,\n                        IBond.Stereo stereo)", "class_method_signature": "AtomContainer.addBond(int atom1, int atom2, IBond.Order order,\n                        IBond.Stereo stereo)", "testcase": false, "constructor": false}, {"identifier": "addBond", "parameters": "(int atom1, int atom2, IBond.Order order)", "modifiers": "@Override public", "return": "void", "signature": "void addBond(int atom1, int atom2, IBond.Order order)", "full_signature": "@Override public void addBond(int atom1, int atom2, IBond.Order order)", "class_method_signature": "AtomContainer.addBond(int atom1, int atom2, IBond.Order order)", "testcase": false, "constructor": false}, {"identifier": "addLonePair", "parameters": "(int atomID)", "modifiers": "@Override public", "return": "void", "signature": "void addLonePair(int atomID)", "full_signature": "@Override public void addLonePair(int atomID)", "class_method_signature": "AtomContainer.addLonePair(int atomID)", "testcase": false, "constructor": false}, {"identifier": "addSingleElectron", "parameters": "(int atomID)", "modifiers": "@Override public", "return": "void", "signature": "void addSingleElectron(int atomID)", "full_signature": "@Override public void addSingleElectron(int atomID)", "class_method_signature": "AtomContainer.addSingleElectron(int atomID)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IAtom atom)", "full_signature": "@Override public boolean contains(IAtom atom)", "class_method_signature": "AtomContainer.contains(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IBond bond)", "full_signature": "@Override public boolean contains(IBond bond)", "class_method_signature": "AtomContainer.contains(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(ILonePair lonePair)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(ILonePair lonePair)", "full_signature": "@Override public boolean contains(ILonePair lonePair)", "class_method_signature": "AtomContainer.contains(ILonePair lonePair)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(ISingleElectron singleElectron)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(ISingleElectron singleElectron)", "full_signature": "@Override public boolean contains(ISingleElectron singleElectron)", "class_method_signature": "AtomContainer.contains(ISingleElectron singleElectron)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IElectronContainer electronContainer)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IElectronContainer electronContainer)", "full_signature": "@Override public boolean contains(IElectronContainer electronContainer)", "class_method_signature": "AtomContainer.contains(IElectronContainer electronContainer)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AtomContainer.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer clone()", "full_signature": "@Override public IAtomContainer clone()", "class_method_signature": "AtomContainer.clone()", "testcase": false, "constructor": false}, {"identifier": "grow", "parameters": "(T[] array, int required)", "modifiers": "private static", "return": "T[]", "signature": "T[] grow(T[] array, int required)", "full_signature": "private static T[] grow(T[] array, int required)", "class_method_signature": "AtomContainer.grow(T[] array, int required)", "testcase": false, "constructor": false}, {"identifier": "ensureAtomCapacity", "parameters": "(int required)", "modifiers": "private", "return": "void", "signature": "void ensureAtomCapacity(int required)", "full_signature": "private void ensureAtomCapacity(int required)", "class_method_signature": "AtomContainer.ensureAtomCapacity(int required)", "testcase": false, "constructor": false}, {"identifier": "ensureBondCapacity", "parameters": "(int required)", "modifiers": "private", "return": "void", "signature": "void ensureBondCapacity(int required)", "full_signature": "private void ensureBondCapacity(int required)", "class_method_signature": "AtomContainer.ensureBondCapacity(int required)", "testcase": false, "constructor": false}, {"identifier": "ensureElectronCapacity", "parameters": "(int required)", "modifiers": "private", "return": "void", "signature": "void ensureElectronCapacity(int required)", "full_signature": "private void ensureElectronCapacity(int required)", "class_method_signature": "AtomContainer.ensureElectronCapacity(int required)", "testcase": false, "constructor": false}, {"identifier": "ensureLonePairCapacity", "parameters": "(int required)", "modifiers": "private", "return": "void", "signature": "void ensureLonePairCapacity(int required)", "full_signature": "private void ensureLonePairCapacity(int required)", "class_method_signature": "AtomContainer.ensureLonePairCapacity(int required)", "testcase": false, "constructor": false}, {"identifier": "stateChanged", "parameters": "(IChemObjectChangeEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void stateChanged(IChemObjectChangeEvent event)", "full_signature": "@Override public void stateChanged(IChemObjectChangeEvent event)", "class_method_signature": "AtomContainer.stateChanged(IChemObjectChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "AtomContainer.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTitle()", "full_signature": "@Override public String getTitle()", "class_method_signature": "AtomContainer.getTitle()", "testcase": false, "constructor": false}, {"identifier": "setTitle", "parameters": "(String title)", "modifiers": "@Override public", "return": "void", "signature": "void setTitle(String title)", "full_signature": "@Override public void setTitle(String title)", "class_method_signature": "AtomContainer.setTitle(String title)", "testcase": false, "constructor": false}], "file": "base/silent/src/main/java/org/openscience/cdk/silent/AtomContainer.java"}, "focal_method": {"identifier": "AtomContainer", "parameters": "()", "modifiers": "public", "return": "", "body": "public AtomContainer() {\n        this(0, 0, 0, 0);\n    }", "signature": " AtomContainer()", "full_signature": "public  AtomContainer()", "class_method_signature": "AtomContainer.AtomContainer()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}