{"test_class": {"identifier": "CEPWindowTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CEPWindow cepWindowAllFieldsFilled;", "modifier": "private", "type": "CEPWindow", "declarator": "cepWindowAllFieldsFilled", "var_name": "cepWindowAllFieldsFilled"}, {"original_string": "private CEPWindow cepWindowDefaultValues;", "modifier": "private", "type": "CEPWindow", "declarator": "cepWindowDefaultValues", "var_name": "cepWindowDefaultValues"}, {"original_string": "private CEPWindow cepWindowNullValues;", "modifier": "private", "type": "CEPWindow", "declarator": "cepWindowNullValues", "var_name": "cepWindowNullValues"}, {"original_string": "private CEPWindow cepWindowNullParameters;", "modifier": "private", "type": "CEPWindow", "declarator": "cepWindowNullParameters", "var_name": "cepWindowNullParameters"}, {"original_string": "private CEPWindow cepWindowNullOperator;", "modifier": "private", "type": "CEPWindow", "declarator": "cepWindowNullOperator", "var_name": "cepWindowNullOperator"}], "file": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/CEPWindowTest.java"}, "test_case": {"identifier": "defaultValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultValues() {\n        final CEPWindow other = new CEPWindow();\n\n        assertNotNull(cepWindowDefaultValues.hashCode());\n        assertNotNull(other.hashCode());\n\n        assertEquals(cepWindowDefaultValues.hashCode(), other.hashCode());\n    }", "signature": "void defaultValues()", "full_signature": "@Test public void defaultValues()", "class_method_signature": "CEPWindowTest.defaultValues()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "hashCode", "assertNotNull", "hashCode", "assertEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "CEPWindow", "superclass": "", "interfaces": "implements HasParameterizedOperator", "fields": [{"original_string": "protected String operator;", "modifier": "protected", "type": "String", "declarator": "operator", "var_name": "operator"}, {"original_string": "protected Map<String, String> parameters;", "modifier": "protected", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}], "methods": [{"identifier": "CEPWindow", "parameters": "()", "modifiers": "public", "return": "", "signature": " CEPWindow()", "full_signature": "public  CEPWindow()", "class_method_signature": "CEPWindow.CEPWindow()", "testcase": false, "constructor": true}, {"identifier": "setOperator", "parameters": "( String operator )", "modifiers": "public", "return": "void", "signature": "void setOperator( String operator )", "full_signature": "public void setOperator( String operator )", "class_method_signature": "CEPWindow.setOperator( String operator )", "testcase": false, "constructor": false}, {"identifier": "getOperator", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOperator()", "full_signature": "public String getOperator()", "class_method_signature": "CEPWindow.getOperator()", "testcase": false, "constructor": false}, {"identifier": "clearParameters", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearParameters()", "full_signature": "public void clearParameters()", "class_method_signature": "CEPWindow.clearParameters()", "testcase": false, "constructor": false}, {"identifier": "getParameter", "parameters": "( String key )", "modifiers": "public", "return": "String", "signature": "String getParameter( String key )", "full_signature": "public String getParameter( String key )", "class_method_signature": "CEPWindow.getParameter( String key )", "testcase": false, "constructor": false}, {"identifier": "setParameter", "parameters": "( String key,\n                              String parameter )", "modifiers": "public", "return": "void", "signature": "void setParameter( String key,\n                              String parameter )", "full_signature": "public void setParameter( String key,\n                              String parameter )", "class_method_signature": "CEPWindow.setParameter( String key,\n                              String parameter )", "testcase": false, "constructor": false}, {"identifier": "deleteParameter", "parameters": "( String key )", "modifiers": "public", "return": "void", "signature": "void deleteParameter( String key )", "full_signature": "public void deleteParameter( String key )", "class_method_signature": "CEPWindow.deleteParameter( String key )", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getParameters()", "full_signature": "public Map<String, String> getParameters()", "class_method_signature": "CEPWindow.getParameters()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "( Map<String, String> parameters )", "modifiers": "public", "return": "void", "signature": "void setParameters( Map<String, String> parameters )", "full_signature": "public void setParameters( Map<String, String> parameters )", "class_method_signature": "CEPWindow.setParameters( Map<String, String> parameters )", "testcase": false, "constructor": false}, {"identifier": "isDefined", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDefined()", "full_signature": "public boolean isDefined()", "class_method_signature": "CEPWindow.isDefined()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "CEPWindow.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CEPWindow.hashCode()", "testcase": false, "constructor": false}], "file": "drools-workbench-models/drools-workbench-models-datamodel-api/src/main/java/org/drools/workbench/models/datamodel/rule/CEPWindow.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        int result = operator != null ? operator.hashCode() : 0;\n        result = ~~result;\n        result = 31 * result + (parameters != null ? parameters.hashCode() : 0);\n        result = ~~result;\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CEPWindow.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}