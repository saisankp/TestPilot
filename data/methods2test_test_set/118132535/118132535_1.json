{"test_class": {"identifier": "RxEventSourcesTest", "superclass": "", "interfaces": "", "fields": [], "file": "mobius-rx2/src/test/java/com/spotify/mobius/rx2/RxEventSourcesTest.java"}, "test_case": {"identifier": "disposePreventsFurtherEvents", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void disposePreventsFurtherEvents() throws Exception {\n    PublishSubject<Integer> subject = PublishSubject.create();\n    EventSource<Integer> source = RxEventSources.fromObservables(subject);\n    RecordingConsumer<Integer> consumer = new RecordingConsumer<>();\n\n    Disposable d = source.subscribe(consumer);\n\n    subject.onNext(1);\n    subject.onNext(2);\n    d.dispose();\n    subject.onNext(3);\n\n    consumer.waitForChange(50);\n    consumer.assertValues(1, 2);\n  }", "signature": "void disposePreventsFurtherEvents()", "full_signature": "@Test public void disposePreventsFurtherEvents()", "class_method_signature": "RxEventSourcesTest.disposePreventsFurtherEvents()", "testcase": true, "constructor": false, "invocations": ["create", "fromObservables", "subscribe", "onNext", "onNext", "dispose", "onNext", "waitForChange", "assertValues"]}, "focal_class": {"identifier": "RxEventSources", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "RxEventSources", "parameters": "()", "modifiers": "private", "return": "", "signature": " RxEventSources()", "full_signature": "private  RxEventSources()", "class_method_signature": "RxEventSources.RxEventSources()", "testcase": false, "constructor": true}, {"identifier": "fromObservables", "parameters": "(ObservableSource<E>... sources)", "modifiers": "@SafeVarargs public static", "return": "EventSource<E>", "signature": "EventSource<E> fromObservables(ObservableSource<E>... sources)", "full_signature": "@SafeVarargs public static EventSource<E> fromObservables(ObservableSource<E>... sources)", "class_method_signature": "RxEventSources.fromObservables(ObservableSource<E>... sources)", "testcase": false, "constructor": false}, {"identifier": "toObservable", "parameters": "(final EventSource<E> eventSource)", "modifiers": "public static", "return": "Observable<E>", "signature": "Observable<E> toObservable(final EventSource<E> eventSource)", "full_signature": "public static Observable<E> toObservable(final EventSource<E> eventSource)", "class_method_signature": "RxEventSources.toObservable(final EventSource<E> eventSource)", "testcase": false, "constructor": false}], "file": "mobius-rx2/src/main/java/com/spotify/mobius/rx2/RxEventSources.java"}, "focal_method": {"identifier": "fromObservables", "parameters": "(ObservableSource<E>... sources)", "modifiers": "@SafeVarargs public static", "return": "EventSource<E>", "body": "@SafeVarargs\n  public static <E> EventSource<E> fromObservables(ObservableSource<E>... sources) {\n    final Observable<E> eventSource = Observable.mergeArray(sources);\n\n    return new EventSource<E>() {\n      @Nonnull\n      @Override\n      public Disposable subscribe(final Consumer<E> eventConsumer) {\n        final io.reactivex.disposables.Disposable subscription =\n            eventSource.subscribe(\n                new io.reactivex.functions.Consumer<E>() {\n                  @Override\n                  public void accept(E e) throws Exception {\n                    eventConsumer.accept(e);\n                  }\n                },\n                new io.reactivex.functions.Consumer<Throwable>() {\n                  @Override\n                  public void accept(Throwable e) throws Exception {\n                    RxJavaPlugins.onError(e);\n                  }\n                });\n\n        return new Disposable() {\n          @Override\n          public void dispose() {\n            subscription.dispose();\n          }\n        };\n      }\n    };\n  }", "signature": "EventSource<E> fromObservables(ObservableSource<E>... sources)", "full_signature": "@SafeVarargs public static EventSource<E> fromObservables(ObservableSource<E>... sources)", "class_method_signature": "RxEventSources.fromObservables(ObservableSource<E>... sources)", "testcase": false, "constructor": false, "invocations": ["mergeArray", "subscribe", "accept", "onError", "dispose"]}, "repository": {"repo_id": 118132535, "url": "https://github.com/spotify/mobius", "stars": 663, "created": "1/19/2018 2:07:51 PM +00:00", "updates": "2020-01-27T22:05:43+00:00", "fork": "False", "license": "licensed"}}