{"test_class": {"identifier": "FeatureRecordTest", "superclass": "", "interfaces": "", "fields": [], "file": "outland-feature-java/src/test/java/outland/feature/FeatureRecordTest.java"}, "test_case": {"identifier": "testPrepare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPrepare() {\n    final Feature feature = TestSupport.loadFeature(\"json/feature-1.json\");\n    FeatureRecord record = FeatureRecord.build(feature);\n\n    assertEquals(feature, record.feature());\n\n    final FeatureOption controlFeatureOption = record.controlFeatureOption();\n    assertNotNull(controlFeatureOption);\n    assertEquals(\"option-green\", controlFeatureOption.getKey());\n    assertEquals(\"green\", controlFeatureOption.getValue());\n    assertEquals(3000, controlFeatureOption.getWeight());\n\n    final NamespaceFeature staging = record.namespace(\"staging\");\n    assertNotNull(staging);\n\n    final FeatureOption stagingControlOptionRecord = record.controlFeatureOption(\"staging\");\n    assertNotNull(stagingControlOptionRecord);\n\n    FeatureOption stagingControlOptionData = null;\n    final String control = staging.getFeature().getOptions().getControl();\n    for (FeatureOption featureOption : staging.getFeature().getOptions().getItemsList()) {\n\n      if (featureOption.getKey().equals(control)) {\n        stagingControlOptionData = featureOption;\n        break;\n      }\n    }\n\n    assertEquals(stagingControlOptionData, stagingControlOptionRecord);\n\n    assertNotNull(record.optionSelectorWeighted());\n    assertNotNull(record.optionSelectorWeighted(\"staging\"));\n  }", "signature": "void testPrepare()", "full_signature": "@Test public void testPrepare()", "class_method_signature": "FeatureRecordTest.testPrepare()", "testcase": true, "constructor": false, "invocations": ["loadFeature", "build", "assertEquals", "feature", "controlFeatureOption", "assertNotNull", "assertEquals", "getKey", "assertEquals", "getValue", "assertEquals", "getWeight", "namespace", "assertNotNull", "controlFeatureOption", "assertNotNull", "getControl", "getOptions", "getFeature", "getItemsList", "getOptions", "getFeature", "equals", "getKey", "assertEquals", "assertNotNull", "optionSelectorWeighted", "assertNotNull", "optionSelectorWeighted"]}, "focal_class": {"identifier": "FeatureRecord", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Feature feature;", "modifier": "private final", "type": "Feature", "declarator": "feature", "var_name": "feature"}, {"original_string": "private final Map<String, NamespaceFeature> namespaceFeatureMap = Maps.newHashMap();", "modifier": "private final", "type": "Map<String, NamespaceFeature>", "declarator": "namespaceFeatureMap = Maps.newHashMap()", "var_name": "namespaceFeatureMap"}, {"original_string": "private final Map<String, FeatureOption> namespaceControlFeatureOptionMap = Maps.newHashMap();", "modifier": "private final", "type": "Map<String, FeatureOption>", "declarator": "namespaceControlFeatureOptionMap = Maps.newHashMap()", "var_name": "namespaceControlFeatureOptionMap"}, {"original_string": "private final Map<String, OptionSelectorWeighted> namespaceOptionSelectorWeightedMap =\n      Maps.newHashMap();", "modifier": "private final", "type": "Map<String, OptionSelectorWeighted>", "declarator": "namespaceOptionSelectorWeightedMap =\n      Maps.newHashMap()", "var_name": "namespaceOptionSelectorWeightedMap"}, {"original_string": "private OptionSelectorWeighted optionSelectorWeighted;", "modifier": "private", "type": "OptionSelectorWeighted", "declarator": "optionSelectorWeighted", "var_name": "optionSelectorWeighted"}, {"original_string": "private FeatureOption controlFeatureOption;", "modifier": "private", "type": "FeatureOption", "declarator": "controlFeatureOption", "var_name": "controlFeatureOption"}], "methods": [{"identifier": "FeatureRecord", "parameters": "(Feature feature)", "modifiers": "private", "return": "", "signature": " FeatureRecord(Feature feature)", "full_signature": "private  FeatureRecord(Feature feature)", "class_method_signature": "FeatureRecord.FeatureRecord(Feature feature)", "testcase": false, "constructor": true}, {"identifier": "build", "parameters": "(Feature feature)", "modifiers": "static", "return": "FeatureRecord", "signature": "FeatureRecord build(Feature feature)", "full_signature": "static FeatureRecord build(Feature feature)", "class_method_signature": "FeatureRecord.build(Feature feature)", "testcase": false, "constructor": false}, {"identifier": "feature", "parameters": "()", "modifiers": "public", "return": "Feature", "signature": "Feature feature()", "full_signature": "public Feature feature()", "class_method_signature": "FeatureRecord.feature()", "testcase": false, "constructor": false}, {"identifier": "namespace", "parameters": "(String namespace)", "modifiers": "", "return": "NamespaceFeature", "signature": "NamespaceFeature namespace(String namespace)", "full_signature": " NamespaceFeature namespace(String namespace)", "class_method_signature": "FeatureRecord.namespace(String namespace)", "testcase": false, "constructor": false}, {"identifier": "controlFeatureOption", "parameters": "()", "modifiers": "", "return": "FeatureOption", "signature": "FeatureOption controlFeatureOption()", "full_signature": " FeatureOption controlFeatureOption()", "class_method_signature": "FeatureRecord.controlFeatureOption()", "testcase": false, "constructor": false}, {"identifier": "controlFeatureOption", "parameters": "(String namespace)", "modifiers": "", "return": "FeatureOption", "signature": "FeatureOption controlFeatureOption(String namespace)", "full_signature": " FeatureOption controlFeatureOption(String namespace)", "class_method_signature": "FeatureRecord.controlFeatureOption(String namespace)", "testcase": false, "constructor": false}, {"identifier": "optionSelectorWeighted", "parameters": "()", "modifiers": "", "return": "OptionSelectorWeighted", "signature": "OptionSelectorWeighted optionSelectorWeighted()", "full_signature": " OptionSelectorWeighted optionSelectorWeighted()", "class_method_signature": "FeatureRecord.optionSelectorWeighted()", "testcase": false, "constructor": false}, {"identifier": "optionSelectorWeighted", "parameters": "(String namespace)", "modifiers": "", "return": "OptionSelectorWeighted", "signature": "OptionSelectorWeighted optionSelectorWeighted(String namespace)", "full_signature": " OptionSelectorWeighted optionSelectorWeighted(String namespace)", "class_method_signature": "FeatureRecord.optionSelectorWeighted(String namespace)", "testcase": false, "constructor": false}, {"identifier": "enabled", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean enabled()", "full_signature": " boolean enabled()", "class_method_signature": "FeatureRecord.enabled()", "testcase": false, "constructor": false}, {"identifier": "enabled", "parameters": "(String namespace)", "modifiers": "", "return": "boolean", "signature": "boolean enabled(String namespace)", "full_signature": " boolean enabled(String namespace)", "class_method_signature": "FeatureRecord.enabled(String namespace)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "()", "modifiers": "", "return": "String", "signature": "String select()", "full_signature": " String select()", "class_method_signature": "FeatureRecord.select()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(String namespace)", "modifiers": "", "return": "String", "signature": "String select(String namespace)", "full_signature": " String select(String namespace)", "class_method_signature": "FeatureRecord.select(String namespace)", "testcase": false, "constructor": false}, {"identifier": "selectBoolean", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean selectBoolean()", "full_signature": " boolean selectBoolean()", "class_method_signature": "FeatureRecord.selectBoolean()", "testcase": false, "constructor": false}, {"identifier": "selectBoolean", "parameters": "(String namespace)", "modifiers": "", "return": "boolean", "signature": "boolean selectBoolean(String namespace)", "full_signature": " boolean selectBoolean(String namespace)", "class_method_signature": "FeatureRecord.selectBoolean(String namespace)", "testcase": false, "constructor": false}, {"identifier": "selectControlOption", "parameters": "(String namespace)", "modifiers": "private", "return": "String", "signature": "String selectControlOption(String namespace)", "full_signature": "private String selectControlOption(String namespace)", "class_method_signature": "FeatureRecord.selectControlOption(String namespace)", "testcase": false, "constructor": false}, {"identifier": "isDefaultNamespace", "parameters": "(String namespace)", "modifiers": "private", "return": "boolean", "signature": "boolean isDefaultNamespace(String namespace)", "full_signature": "private boolean isDefaultNamespace(String namespace)", "class_method_signature": "FeatureRecord.isDefaultNamespace(String namespace)", "testcase": false, "constructor": false}, {"identifier": "prepare", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void prepare()", "full_signature": "private void prepare()", "class_method_signature": "FeatureRecord.prepare()", "testcase": false, "constructor": false}, {"identifier": "prepareDefault", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void prepareDefault()", "full_signature": "private void prepareDefault()", "class_method_signature": "FeatureRecord.prepareDefault()", "testcase": false, "constructor": false}, {"identifier": "prepareNamespaces", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void prepareNamespaces()", "full_signature": "private void prepareNamespaces()", "class_method_signature": "FeatureRecord.prepareNamespaces()", "testcase": false, "constructor": false}, {"identifier": "matchesControlOption", "parameters": "(String control, FeatureOption featureOption)", "modifiers": "private", "return": "boolean", "signature": "boolean matchesControlOption(String control, FeatureOption featureOption)", "full_signature": "private boolean matchesControlOption(String control, FeatureOption featureOption)", "class_method_signature": "FeatureRecord.matchesControlOption(String control, FeatureOption featureOption)", "testcase": false, "constructor": false}, {"identifier": "isOptionalType", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isOptionalType()", "full_signature": "private boolean isOptionalType()", "class_method_signature": "FeatureRecord.isOptionalType()", "testcase": false, "constructor": false}, {"identifier": "isOptionalType", "parameters": "(OptionCollection options)", "modifiers": "private", "return": "boolean", "signature": "boolean isOptionalType(OptionCollection options)", "full_signature": "private boolean isOptionalType(OptionCollection options)", "class_method_signature": "FeatureRecord.isOptionalType(OptionCollection options)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FeatureRecord.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "FeatureRecord.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FeatureRecord.toString()", "testcase": false, "constructor": false}], "file": "outland-feature-java/src/main/java/outland/feature/FeatureRecord.java"}, "focal_method": {"identifier": "prepare", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void prepare() {\n    prepareDefault();\n    prepareNamespaces();\n  }", "signature": "void prepare()", "full_signature": "private void prepare()", "class_method_signature": "FeatureRecord.prepare()", "testcase": false, "constructor": false, "invocations": ["prepareDefault", "prepareNamespaces"]}, "repository": {"repo_id": 83838306, "url": "https://github.com/dehora/outland", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 944, "license": "licensed"}}