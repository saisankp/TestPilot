{"test_class": {"identifier": "GridInfoTest", "superclass": "", "interfaces": "", "fields": [], "file": "designer/testSrc/com/android/tools/idea/uibuilder/handlers/grid/GridInfoTest.java"}, "test_case": {"identifier": "getIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getIndex() {\n    final int[] lineLocatoin = {100, 248, 248, 248, 248, 248, 248, 248, 248, 520, 767};\n\n    assertEquals(1, GridInfo.getIndex(lineLocatoin, 380, true));\n    assertEquals(2, GridInfo.getIndex(lineLocatoin, 600, true));\n    assertEquals(8, GridInfo.getIndex(lineLocatoin, 380, false));\n    assertEquals(-1, GridInfo.getIndex(lineLocatoin, 50, true));\n    assertEquals(-1, GridInfo.getIndex(lineLocatoin, 800, true));\n  }", "signature": "void getIndex()", "full_signature": "@Test public void getIndex()", "class_method_signature": "GridInfoTest.getIndex()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getIndex", "assertEquals", "getIndex", "assertEquals", "getIndex", "assertEquals", "getIndex", "assertEquals", "getIndex"]}, "focal_class": {"identifier": "GridInfo", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int NEW_CELL_SIZE = 32;", "modifier": "private static final", "type": "int", "declarator": "NEW_CELL_SIZE = 32", "var_name": "NEW_CELL_SIZE"}, {"original_string": "@AndroidCoordinate private int[] verticalLineLocations;", "modifier": "@AndroidCoordinate private", "type": "int[]", "declarator": "verticalLineLocations", "var_name": "verticalLineLocations"}, {"original_string": "@AndroidCoordinate private int[] horizontalLineLocations;", "modifier": "@AndroidCoordinate private", "type": "int[]", "declarator": "horizontalLineLocations", "var_name": "horizontalLineLocations"}, {"original_string": "private NlComponent[][] children;", "modifier": "private", "type": "NlComponent[][]", "declarator": "children", "var_name": "children"}, {"original_string": "private final int rowCount;", "modifier": "private final", "type": "int", "declarator": "rowCount", "var_name": "rowCount"}, {"original_string": "private final int columnCount;", "modifier": "private final", "type": "int", "declarator": "columnCount", "var_name": "columnCount"}, {"original_string": "private final NlComponent layout;", "modifier": "private final", "type": "NlComponent", "declarator": "layout", "var_name": "layout"}, {"original_string": "private final Dimension size;", "modifier": "private final", "type": "Dimension", "declarator": "size", "var_name": "size"}], "methods": [{"identifier": "GridInfo", "parameters": "(NlComponent layout)", "modifiers": "", "return": "", "signature": " GridInfo(NlComponent layout)", "full_signature": "  GridInfo(NlComponent layout)", "class_method_signature": "GridInfo.GridInfo(NlComponent layout)", "testcase": false, "constructor": true}, {"identifier": "getSize", "parameters": "()", "modifiers": "@AndroidCoordinate private", "return": "Dimension", "signature": "Dimension getSize()", "full_signature": "@AndroidCoordinate private Dimension getSize()", "class_method_signature": "GridInfo.getSize()", "testcase": false, "constructor": false}, {"identifier": "initVerticalLineLocations", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initVerticalLineLocations()", "full_signature": "private void initVerticalLineLocations()", "class_method_signature": "GridInfo.initVerticalLineLocations()", "testcase": false, "constructor": false}, {"identifier": "initHorizontalLineLocations", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initHorizontalLineLocations()", "full_signature": "private void initHorizontalLineLocations()", "class_method_signature": "GridInfo.initHorizontalLineLocations()", "testcase": false, "constructor": false}, {"identifier": "getAxisLocations", "parameters": "(String name1, String name2)", "modifiers": "@AndroidCoordinate private", "return": "int[]", "signature": "int[] getAxisLocations(String name1, String name2)", "full_signature": "@AndroidCoordinate private int[] getAxisLocations(String name1, String name2)", "class_method_signature": "GridInfo.getAxisLocations(String name1, String name2)", "testcase": false, "constructor": false}, {"identifier": "getDeclaredField", "parameters": "(Class<?> c, String name1, String name2)", "modifiers": "private static", "return": "Field", "signature": "Field getDeclaredField(Class<?> c, String name1, String name2)", "full_signature": "private static Field getDeclaredField(Class<?> c, String name1, String name2)", "class_method_signature": "GridInfo.getDeclaredField(Class<?> c, String name1, String name2)", "testcase": false, "constructor": false}, {"identifier": "initLineLocations", "parameters": "(int layoutSize, int gridInfoSize, int[] axisLocations)", "modifiers": "@AndroidCoordinate static", "return": "int[]", "signature": "int[] initLineLocations(int layoutSize, int gridInfoSize, int[] axisLocations)", "full_signature": "@AndroidCoordinate static int[] initLineLocations(int layoutSize, int gridInfoSize, int[] axisLocations)", "class_method_signature": "GridInfo.initLineLocations(int layoutSize, int gridInfoSize, int[] axisLocations)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(@AndroidCoordinate int[] locations, @AndroidCoordinate int distance)", "modifiers": "private static", "return": "void", "signature": "void translate(@AndroidCoordinate int[] locations, @AndroidCoordinate int distance)", "full_signature": "private static void translate(@AndroidCoordinate int[] locations, @AndroidCoordinate int distance)", "class_method_signature": "GridInfo.translate(@AndroidCoordinate int[] locations, @AndroidCoordinate int distance)", "testcase": false, "constructor": false}, {"identifier": "initChildren", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initChildren()", "full_signature": "private void initChildren()", "class_method_signature": "GridInfo.initChildren()", "testcase": false, "constructor": false}, {"identifier": "getInfo", "parameters": "(NlComponent child)", "modifiers": "private static", "return": "ChildInfo", "signature": "ChildInfo getInfo(NlComponent child)", "full_signature": "private static ChildInfo getInfo(NlComponent child)", "class_method_signature": "GridInfo.getInfo(NlComponent child)", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(@AndroidCoordinate int y)", "modifiers": "", "return": "int", "signature": "int getRow(@AndroidCoordinate int y)", "full_signature": " int getRow(@AndroidCoordinate int y)", "class_method_signature": "GridInfo.getRow(@AndroidCoordinate int y)", "testcase": false, "constructor": false}, {"identifier": "getRowSkippingEqualLineLocations", "parameters": "(@AndroidCoordinate int y)", "modifiers": "", "return": "int", "signature": "int getRowSkippingEqualLineLocations(@AndroidCoordinate int y)", "full_signature": " int getRowSkippingEqualLineLocations(@AndroidCoordinate int y)", "class_method_signature": "GridInfo.getRowSkippingEqualLineLocations(@AndroidCoordinate int y)", "testcase": false, "constructor": false}, {"identifier": "getColumn", "parameters": "(@AndroidCoordinate int x)", "modifiers": "", "return": "int", "signature": "int getColumn(@AndroidCoordinate int x)", "full_signature": " int getColumn(@AndroidCoordinate int x)", "class_method_signature": "GridInfo.getColumn(@AndroidCoordinate int x)", "testcase": false, "constructor": false}, {"identifier": "getColumnSkippingEqualLineLocations", "parameters": "(@AndroidCoordinate int x)", "modifiers": "", "return": "int", "signature": "int getColumnSkippingEqualLineLocations(@AndroidCoordinate int x)", "full_signature": " int getColumnSkippingEqualLineLocations(@AndroidCoordinate int x)", "class_method_signature": "GridInfo.getColumnSkippingEqualLineLocations(@AndroidCoordinate int x)", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "(int[] lineLocations, int location, boolean skipEqualLineLocations)", "modifiers": "static", "return": "int", "signature": "int getIndex(int[] lineLocations, int location, boolean skipEqualLineLocations)", "full_signature": "static int getIndex(int[] lineLocations, int location, boolean skipEqualLineLocations)", "class_method_signature": "GridInfo.getIndex(int[] lineLocations, int location, boolean skipEqualLineLocations)", "testcase": false, "constructor": false}, {"identifier": "getVerticalLineLocations", "parameters": "()", "modifiers": "", "return": "int[]", "signature": "int[] getVerticalLineLocations()", "full_signature": " int[] getVerticalLineLocations()", "class_method_signature": "GridInfo.getVerticalLineLocations()", "testcase": false, "constructor": false}, {"identifier": "getHorizontalLineLocations", "parameters": "()", "modifiers": "", "return": "int[]", "signature": "int[] getHorizontalLineLocations()", "full_signature": " int[] getHorizontalLineLocations()", "class_method_signature": "GridInfo.getHorizontalLineLocations()", "testcase": false, "constructor": false}, {"identifier": "cellHasChild", "parameters": "(int row, int column)", "modifiers": "", "return": "boolean", "signature": "boolean cellHasChild(int row, int column)", "full_signature": " boolean cellHasChild(int row, int column)", "class_method_signature": "GridInfo.cellHasChild(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "", "return": "NlComponent[][]", "signature": "NlComponent[][] getChildren()", "full_signature": " NlComponent[][] getChildren()", "class_method_signature": "GridInfo.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getRowCount()", "full_signature": " int getRowCount()", "class_method_signature": "GridInfo.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getColumnCount()", "full_signature": " int getColumnCount()", "class_method_signature": "GridInfo.getColumnCount()", "testcase": false, "constructor": false}], "file": "designer/src/com/android/tools/idea/uibuilder/handlers/grid/GridInfo.java"}, "focal_method": {"identifier": "getIndex", "parameters": "(int[] lineLocations, int location, boolean skipEqualLineLocations)", "modifiers": "static", "return": "int", "body": "static int getIndex(int[] lineLocations, int location, boolean skipEqualLineLocations) {\n    if (lineLocations.length < 2) {\n      throw new IllegalArgumentException(Arrays.toString(lineLocations));\n    }\n    else if (location < lineLocations[0] || location > lineLocations[lineLocations.length - 1]) {\n      return -1;\n    }\n\n    for (int i = 0, j = 0; i < lineLocations.length - 1; i++) {\n      if (skipEqualLineLocations && lineLocations[i] == lineLocations[i + 1]) {\n        continue;\n      }\n\n      if (lineLocations[i] <= location && location < lineLocations[i + 1]) {\n        return j;\n      }\n\n      // noinspection AssignmentToForLoopParameter\n      j++;\n    }\n\n    throw new AssertionError();\n  }", "signature": "int getIndex(int[] lineLocations, int location, boolean skipEqualLineLocations)", "full_signature": "static int getIndex(int[] lineLocations, int location, boolean skipEqualLineLocations)", "class_method_signature": "GridInfo.getIndex(int[] lineLocations, int location, boolean skipEqualLineLocations)", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}