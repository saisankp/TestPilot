{"test_class": {"identifier": "TestWineryRepositoryClient", "superclass": "extends TestWithGitBackedRepository", "interfaces": "", "fields": [{"original_string": "private static final org.slf4j.Logger LOGGER = LoggerFactory.getLogger(TestWineryRepositoryClient.class);", "modifier": "private static final", "type": "org.slf4j.Logger", "declarator": "LOGGER = LoggerFactory.getLogger(TestWineryRepositoryClient.class)", "var_name": "LOGGER"}, {"original_string": "private static final String repositoryURI = \"http://localhost:8080/winery\";", "modifier": "private static final", "type": "String", "declarator": "repositoryURI = \"http://localhost:8080/winery\"", "var_name": "repositoryURI"}, {"original_string": "private static final boolean USE_PROXY = false;", "modifier": "private static final", "type": "boolean", "declarator": "USE_PROXY = false", "var_name": "USE_PROXY"}, {"original_string": "private static final IWineryRepositoryClient client = new WineryRepositoryClient(TestWineryRepositoryClient.USE_PROXY);", "modifier": "private static final", "type": "IWineryRepositoryClient", "declarator": "client = new WineryRepositoryClient(TestWineryRepositoryClient.USE_PROXY)", "var_name": "client"}, {"original_string": "private static final String NAMESPACE_FOR_NEW_ARTIFACTS = \"http://www.example.org/test/wineryclient/\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE_FOR_NEW_ARTIFACTS = \"http://www.example.org/test/wineryclient/\"", "var_name": "NAMESPACE_FOR_NEW_ARTIFACTS"}, {"original_string": "private static Server server;", "modifier": "private static", "type": "Server", "declarator": "server", "var_name": "server"}], "file": "org.eclipse.winery.repository.client/src/test/java/org/eclipse/winery/repository/client/TestWineryRepositoryClient.java"}, "test_case": {"identifier": "artifactTypeForWarFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void artifactTypeForWarFiles() throws Exception {\n        this.setRevisionTo(\"origin/plain\");\n        QName artifactType = TestWineryRepositoryClient.client.getArtifactTypeQNameForExtension(\"war\");\n        assertNotNull(artifactType, \"Artifact Type for .war does not exist\");\n    }", "signature": "void artifactTypeForWarFiles()", "full_signature": "@Test public void artifactTypeForWarFiles()", "class_method_signature": "TestWineryRepositoryClient.artifactTypeForWarFiles()", "testcase": true, "constructor": false, "invocations": ["setRevisionTo", "getArtifactTypeQNameForExtension", "assertNotNull"]}, "focal_class": {"identifier": "WineryRepositoryClient", "superclass": "", "interfaces": "implements IWineryRepositoryClient", "fields": [{"original_string": "public static final JAXBContext context = WineryRepositoryClient.initContext();", "modifier": "public static final", "type": "JAXBContext", "declarator": "context = WineryRepositoryClient.initContext()", "var_name": "context"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(WineryRepositoryClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(WineryRepositoryClient.class)", "var_name": "LOGGER"}, {"original_string": "private static final boolean VALIDATING = false;", "modifier": "private static final", "type": "boolean", "declarator": "VALIDATING = false", "var_name": "VALIDATING"}, {"original_string": "private static final int MAX_NAME_CACHE_SIZE = 1000;", "modifier": "private static final", "type": "int", "declarator": "MAX_NAME_CACHE_SIZE = 1000", "var_name": "MAX_NAME_CACHE_SIZE"}, {"original_string": "private final Collection<WebTarget> repositoryResources = new HashSet<>();", "modifier": "private final", "type": "Collection<WebTarget>", "declarator": "repositoryResources = new HashSet<>()", "var_name": "repositoryResources"}, {"original_string": "private final Collection<String> knownURIs = new HashSet<String>();", "modifier": "private final", "type": "Collection<String>", "declarator": "knownURIs = new HashSet<String>()", "var_name": "knownURIs"}, {"original_string": "private final Client client;", "modifier": "private final", "type": "Client", "declarator": "client", "var_name": "client"}, {"original_string": "private final Map<Class<? extends TEntityType>, Map<QName, TEntityType>> entityTypeDataCache;", "modifier": "private final", "type": "Map<Class<? extends TEntityType>, Map<QName, TEntityType>>", "declarator": "entityTypeDataCache", "var_name": "entityTypeDataCache"}, {"original_string": "private final Map<GenericId, String> nameCache;", "modifier": "private final", "type": "Map<GenericId, String>", "declarator": "nameCache", "var_name": "nameCache"}, {"original_string": "private String primaryRepository = null;", "modifier": "private", "type": "String", "declarator": "primaryRepository = null", "var_name": "primaryRepository"}, {"original_string": "private WebTarget primaryWebTarget = null;", "modifier": "private", "type": "WebTarget", "declarator": "primaryWebTarget = null", "var_name": "primaryWebTarget"}], "methods": [{"identifier": "WineryRepositoryClient", "parameters": "()", "modifiers": "public", "return": "", "signature": " WineryRepositoryClient()", "full_signature": "public  WineryRepositoryClient()", "class_method_signature": "WineryRepositoryClient.WineryRepositoryClient()", "testcase": false, "constructor": true}, {"identifier": "WineryRepositoryClient", "parameters": "(boolean useProxy)", "modifiers": "public", "return": "", "signature": " WineryRepositoryClient(boolean useProxy)", "full_signature": "public  WineryRepositoryClient(boolean useProxy)", "class_method_signature": "WineryRepositoryClient.WineryRepositoryClient(boolean useProxy)", "testcase": false, "constructor": true}, {"identifier": "initContext", "parameters": "()", "modifiers": "private static", "return": "JAXBContext", "signature": "JAXBContext initContext()", "full_signature": "private static JAXBContext initContext()", "class_method_signature": "WineryRepositoryClient.initContext()", "testcase": false, "constructor": false}, {"identifier": "createUnmarshaller", "parameters": "()", "modifiers": "private static", "return": "Unmarshaller", "signature": "Unmarshaller createUnmarshaller()", "full_signature": "private static Unmarshaller createUnmarshaller()", "class_method_signature": "WineryRepositoryClient.createUnmarshaller()", "testcase": false, "constructor": false}, {"identifier": "getTopologyTemplateWebTarget", "parameters": "(WebTarget base, QName serviceTemplate)", "modifiers": "private static", "return": "WebTarget", "signature": "WebTarget getTopologyTemplateWebTarget(WebTarget base, QName serviceTemplate)", "full_signature": "private static WebTarget getTopologyTemplateWebTarget(WebTarget base, QName serviceTemplate)", "class_method_signature": "WineryRepositoryClient.getTopologyTemplateWebTarget(WebTarget base, QName serviceTemplate)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTemplateWebTarget", "parameters": "(WebTarget base, QName serviceTemplate, String parentPath, String elementPath)", "modifiers": "private static", "return": "WebTarget", "signature": "WebTarget getTopologyTemplateWebTarget(WebTarget base, QName serviceTemplate, String parentPath, String elementPath)", "full_signature": "private static WebTarget getTopologyTemplateWebTarget(WebTarget base, QName serviceTemplate, String parentPath, String elementPath)", "class_method_signature": "WineryRepositoryClient.getTopologyTemplateWebTarget(WebTarget base, QName serviceTemplate, String parentPath, String elementPath)", "testcase": false, "constructor": false}, {"identifier": "getDefinitions", "parameters": "(WebTarget wr, String path, String ns, String localPart)", "modifiers": "private static", "return": "TDefinitions", "signature": "TDefinitions getDefinitions(WebTarget wr, String path, String ns, String localPart)", "full_signature": "private static TDefinitions getDefinitions(WebTarget wr, String path, String ns, String localPart)", "class_method_signature": "WineryRepositoryClient.getDefinitions(WebTarget wr, String path, String ns, String localPart)", "testcase": false, "constructor": false}, {"identifier": "getDefinitions", "parameters": "(WebTarget instanceResource)", "modifiers": "private static", "return": "Definitions", "signature": "Definitions getDefinitions(WebTarget instanceResource)", "full_signature": "private static Definitions getDefinitions(WebTarget instanceResource)", "class_method_signature": "WineryRepositoryClient.getDefinitions(WebTarget instanceResource)", "testcase": false, "constructor": false}, {"identifier": "getDefinitions", "parameters": "(WebTarget componentListResource, String ns, String localPart)", "modifiers": "private static", "return": "TDefinitions", "signature": "TDefinitions getDefinitions(WebTarget componentListResource, String ns, String localPart)", "full_signature": "private static TDefinitions getDefinitions(WebTarget componentListResource, String ns, String localPart)", "class_method_signature": "WineryRepositoryClient.getDefinitions(WebTarget componentListResource, String ns, String localPart)", "testcase": false, "constructor": false}, {"identifier": "addRepository", "parameters": "(String uri)", "modifiers": "@Override public", "return": "void", "signature": "void addRepository(String uri)", "full_signature": "@Override public void addRepository(String uri)", "class_method_signature": "WineryRepositoryClient.addRepository(String uri)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryRepository", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPrimaryRepository()", "full_signature": "@Override public String getPrimaryRepository()", "class_method_signature": "WineryRepositoryClient.getPrimaryRepository()", "testcase": false, "constructor": false}, {"identifier": "setPrimaryRepository", "parameters": "(String uri)", "modifiers": "@Override public", "return": "void", "signature": "void setPrimaryRepository(String uri)", "full_signature": "@Override public void setPrimaryRepository(String uri)", "class_method_signature": "WineryRepositoryClient.setPrimaryRepository(String uri)", "testcase": false, "constructor": false}, {"identifier": "getNamespaces", "parameters": "()", "modifiers": "@Override public", "return": "SortedSet<String>", "signature": "SortedSet<String> getNamespaces()", "full_signature": "@Override public SortedSet<String> getNamespaces()", "class_method_signature": "WineryRepositoryClient.getNamespaces()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "(GenericId id)", "modifiers": "@Override public", "return": "String", "signature": "String getName(GenericId id)", "full_signature": "@Override public String getName(GenericId id)", "class_method_signature": "WineryRepositoryClient.getName(GenericId id)", "testcase": false, "constructor": false}, {"identifier": "getQNameListOfAllTypes", "parameters": "(Class<T> className)", "modifiers": "@Override public", "return": "List<QName>", "signature": "List<QName> getQNameListOfAllTypes(Class<T> className)", "full_signature": "@Override public List<QName> getQNameListOfAllTypes(Class<T> className)", "class_method_signature": "WineryRepositoryClient.getQNameListOfAllTypes(Class<T> className)", "testcase": false, "constructor": false}, {"identifier": "getListOfAllInstances", "parameters": "(Class<? extends DefinitionsChildId> clazz)", "modifiers": "@Override public", "return": "Collection<QNameWithName>", "signature": "Collection<QNameWithName> getListOfAllInstances(Class<? extends DefinitionsChildId> clazz)", "full_signature": "@Override public Collection<QNameWithName> getListOfAllInstances(Class<? extends DefinitionsChildId> clazz)", "class_method_signature": "WineryRepositoryClient.getListOfAllInstances(Class<? extends DefinitionsChildId> clazz)", "testcase": false, "constructor": false}, {"identifier": "getAllTypes", "parameters": "(Class<T> c)", "modifiers": "@Override public", "return": "Collection<T>", "signature": "Collection<T> getAllTypes(Class<T> c)", "full_signature": "@Override public Collection<T> getAllTypes(Class<T> c)", "class_method_signature": "WineryRepositoryClient.getAllTypes(Class<T> c)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(QName qname, Class<T> type)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T getType(QName qname, Class<T> type)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public T getType(QName qname, Class<T> type)", "class_method_signature": "WineryRepositoryClient.getType(QName qname, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getDefinitions", "parameters": "(DefinitionsChildId id)", "modifiers": "@Override public", "return": "Definitions", "signature": "Definitions getDefinitions(DefinitionsChildId id)", "full_signature": "@Override public Definitions getDefinitions(DefinitionsChildId id)", "class_method_signature": "WineryRepositoryClient.getDefinitions(DefinitionsChildId id)", "testcase": false, "constructor": false}, {"identifier": "getAllTypesWithAssociatedElements", "parameters": "(Class<T> c)", "modifiers": "@Override public", "return": "Collection<TDefinitions>", "signature": "Collection<TDefinitions> getAllTypesWithAssociatedElements(Class<T> c)", "full_signature": "@Override public Collection<TDefinitions> getAllTypesWithAssociatedElements(Class<T> c)", "class_method_signature": "WineryRepositoryClient.getAllTypesWithAssociatedElements(Class<T> c)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTemplate", "parameters": "(QName serviceTemplate)", "modifiers": "@Override public", "return": "TTopologyTemplate", "signature": "TTopologyTemplate getTopologyTemplate(QName serviceTemplate)", "full_signature": "@Override public TTopologyTemplate getTopologyTemplate(QName serviceTemplate)", "class_method_signature": "WineryRepositoryClient.getTopologyTemplate(QName serviceTemplate)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTemplate", "parameters": "(QName serviceTemplate, String parentPath, String elementPath)", "modifiers": "@Override public", "return": "TTopologyTemplate", "signature": "TTopologyTemplate getTopologyTemplate(QName serviceTemplate, String parentPath, String elementPath)", "full_signature": "@Override public TTopologyTemplate getTopologyTemplate(QName serviceTemplate, String parentPath, String elementPath)", "class_method_signature": "WineryRepositoryClient.getTopologyTemplate(QName serviceTemplate, String parentPath, String elementPath)", "testcase": false, "constructor": false}, {"identifier": "setTopologyTemplate", "parameters": "(QName serviceTemplate, TTopologyTemplate topologyTemplate)", "modifiers": "@Override public", "return": "void", "signature": "void setTopologyTemplate(QName serviceTemplate, TTopologyTemplate topologyTemplate)", "full_signature": "@Override public void setTopologyTemplate(QName serviceTemplate, TTopologyTemplate topologyTemplate)", "class_method_signature": "WineryRepositoryClient.setTopologyTemplate(QName serviceTemplate, TTopologyTemplate topologyTemplate)", "testcase": false, "constructor": false}, {"identifier": "getArtifactTypeQNameForExtension", "parameters": "(String extension)", "modifiers": "@Override public", "return": "QName", "signature": "QName getArtifactTypeQNameForExtension(String extension)", "full_signature": "@Override public QName getArtifactTypeQNameForExtension(String extension)", "class_method_signature": "WineryRepositoryClient.getArtifactTypeQNameForExtension(String extension)", "testcase": false, "constructor": false}, {"identifier": "createArtifactTemplate", "parameters": "(QName qname, QName artifactType)", "modifiers": "@Override public", "return": "void", "signature": "void createArtifactTemplate(QName qname, QName artifactType)", "full_signature": "@Override public void createArtifactTemplate(QName qname, QName artifactType)", "class_method_signature": "WineryRepositoryClient.createArtifactTemplate(QName qname, QName artifactType)", "testcase": false, "constructor": false}, {"identifier": "createComponent", "parameters": "(QName qname, Class<? extends DefinitionsChildId> idClass)", "modifiers": "@Override public", "return": "void", "signature": "void createComponent(QName qname, Class<? extends DefinitionsChildId> idClass)", "full_signature": "@Override public void createComponent(QName qname, Class<? extends DefinitionsChildId> idClass)", "class_method_signature": "WineryRepositoryClient.createComponent(QName qname, Class<? extends DefinitionsChildId> idClass)", "testcase": false, "constructor": false}, {"identifier": "forceDelete", "parameters": "(GenericId id)", "modifiers": "@Override public", "return": "void", "signature": "void forceDelete(GenericId id)", "full_signature": "@Override public void forceDelete(GenericId id)", "class_method_signature": "WineryRepositoryClient.forceDelete(GenericId id)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(DefinitionsChildId oldId, DefinitionsChildId newId)", "modifiers": "@Override public", "return": "void", "signature": "void rename(DefinitionsChildId oldId, DefinitionsChildId newId)", "full_signature": "@Override public void rename(DefinitionsChildId oldId, DefinitionsChildId newId)", "class_method_signature": "WineryRepositoryClient.rename(DefinitionsChildId oldId, DefinitionsChildId newId)", "testcase": false, "constructor": false}, {"identifier": "duplicate", "parameters": "(DefinitionsChildId from, DefinitionsChildId newId)", "modifiers": "@Override public", "return": "void", "signature": "void duplicate(DefinitionsChildId from, DefinitionsChildId newId)", "full_signature": "@Override public void duplicate(DefinitionsChildId from, DefinitionsChildId newId)", "class_method_signature": "WineryRepositoryClient.duplicate(DefinitionsChildId from, DefinitionsChildId newId)", "testcase": false, "constructor": false}, {"identifier": "forceDelete", "parameters": "(Class<? extends DefinitionsChildId> definitionsChildIdClazz, Namespace namespace)", "modifiers": "@Override public", "return": "void", "signature": "void forceDelete(Class<? extends DefinitionsChildId> definitionsChildIdClazz, Namespace namespace)", "full_signature": "@Override public void forceDelete(Class<? extends DefinitionsChildId> definitionsChildIdClazz, Namespace namespace)", "class_method_signature": "WineryRepositoryClient.forceDelete(Class<? extends DefinitionsChildId> definitionsChildIdClazz, Namespace namespace)", "testcase": false, "constructor": false}, {"identifier": "primaryRepositoryAvailable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean primaryRepositoryAvailable()", "full_signature": "@Override public boolean primaryRepositoryAvailable()", "class_method_signature": "WineryRepositoryClient.primaryRepositoryAvailable()", "testcase": false, "constructor": false}, {"identifier": "getWRtoNamespaceAndIdListMapOfAllTypes", "parameters": "(String path)", "modifiers": "private", "return": "Map<WebTarget, List<NamespaceIdOptionalName>>", "signature": "Map<WebTarget, List<NamespaceIdOptionalName>> getWRtoNamespaceAndIdListMapOfAllTypes(String path)", "full_signature": "private Map<WebTarget, List<NamespaceIdOptionalName>> getWRtoNamespaceAndIdListMapOfAllTypes(String path)", "class_method_signature": "WineryRepositoryClient.getWRtoNamespaceAndIdListMapOfAllTypes(String path)", "testcase": false, "constructor": false}, {"identifier": "cache", "parameters": "(TEntityType et, QName qName)", "modifiers": "private", "return": "void", "signature": "void cache(TEntityType et, QName qName)", "full_signature": "private void cache(TEntityType et, QName qName)", "class_method_signature": "WineryRepositoryClient.cache(TEntityType et, QName qName)", "testcase": false, "constructor": false}, {"identifier": "getAllTypes", "parameters": "(String path, Class<T> className)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Collection<T>", "signature": "Collection<T> getAllTypes(String path, Class<T> className)", "full_signature": "@SuppressWarnings(\"unchecked\") private Collection<T> getAllTypes(String path, Class<T> className)", "class_method_signature": "WineryRepositoryClient.getAllTypes(String path, Class<T> className)", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.repository.client/src/main/java/org/eclipse/winery/repository/client/WineryRepositoryClient.java"}, "focal_method": {"identifier": "getArtifactTypeQNameForExtension", "parameters": "(String extension)", "modifiers": "@Override public", "return": "QName", "body": "@Override\n    public QName getArtifactTypeQNameForExtension(String extension) {\n        // we try all repositories until the first hit\n        for (WebTarget wr : this.repositoryResources) {\n            Response response = wr.path(\"artifacttypes\").queryParam(\"extension\", extension)\n                .request(MediaType.TEXT_PLAIN)\n                .get();\n            if (response.getStatusInfo().equals(Response.Status.OK)) {\n                return QName.valueOf(response.readEntity(String.class));\n            }\n        }\n        return null;\n    }", "signature": "QName getArtifactTypeQNameForExtension(String extension)", "full_signature": "@Override public QName getArtifactTypeQNameForExtension(String extension)", "class_method_signature": "WineryRepositoryClient.getArtifactTypeQNameForExtension(String extension)", "testcase": false, "constructor": false, "invocations": ["get", "request", "queryParam", "path", "equals", "getStatusInfo", "valueOf", "readEntity"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}