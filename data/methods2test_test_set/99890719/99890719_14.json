{"test_class": {"identifier": "PatternSupportWeightFunctionTest", "superclass": "", "interfaces": "", "fields": [], "file": "mubench/src/test/java/de/tu_darmstadt/stg/mudetect/ranking/PatternSupportWeightFunctionTest.java"}, "test_case": {"identifier": "weightsRelativeToLargestSupport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void weightsRelativeToLargestSupport() throws Exception {\n        APIUsagePattern pattern = somePattern(2);\n        Model model = () -> asSet(pattern, somePattern(4));\n        ViolationWeightFunction weigthFunction = new PatternSupportWeightFunction();\n\n        double weight = weigthFunction.getWeight(emptyOverlap(pattern), null, model);\n\n        assertThat(weight, is(0.5));\n    }", "signature": "void weightsRelativeToLargestSupport()", "full_signature": "@Test public void weightsRelativeToLargestSupport()", "class_method_signature": "PatternSupportWeightFunctionTest.weightsRelativeToLargestSupport()", "testcase": true, "constructor": false, "invocations": ["somePattern", "asSet", "somePattern", "getWeight", "emptyOverlap", "assertThat", "is"]}, "focal_class": {"identifier": "PatternSupportWeightFunction", "superclass": "", "interfaces": "implements ViolationWeightFunction", "fields": [], "methods": [{"identifier": "getWeight", "parameters": "(Overlap violation, Overlaps overlaps, Model model)", "modifiers": "@Override public", "return": "double", "signature": "double getWeight(Overlap violation, Overlaps overlaps, Model model)", "full_signature": "@Override public double getWeight(Overlap violation, Overlaps overlaps, Model model)", "class_method_signature": "PatternSupportWeightFunction.getWeight(Overlap violation, Overlaps overlaps, Model model)", "testcase": false, "constructor": false}, {"identifier": "getFormula", "parameters": "(Overlap violation, Overlaps overlaps, Model model)", "modifiers": "@Override public", "return": "String", "signature": "String getFormula(Overlap violation, Overlaps overlaps, Model model)", "full_signature": "@Override public String getFormula(Overlap violation, Overlaps overlaps, Model model)", "class_method_signature": "PatternSupportWeightFunction.getFormula(Overlap violation, Overlaps overlaps, Model model)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "PatternSupportWeightFunction.getId()", "testcase": false, "constructor": false}], "file": "mubench/src/main/java/de/tu_darmstadt/stg/mudetect/ranking/PatternSupportWeightFunction.java"}, "focal_method": {"identifier": "getWeight", "parameters": "(Overlap violation, Overlaps overlaps, Model model)", "modifiers": "@Override public", "return": "double", "body": "@Override\n    public double getWeight(Overlap violation, Overlaps overlaps, Model model) {\n        return violation.getPattern().getSupport() / (double) model.getMaxPatternSupport();\n    }", "signature": "double getWeight(Overlap violation, Overlaps overlaps, Model model)", "full_signature": "@Override public double getWeight(Overlap violation, Overlaps overlaps, Model model)", "class_method_signature": "PatternSupportWeightFunction.getWeight(Overlap violation, Overlaps overlaps, Model model)", "testcase": false, "constructor": false, "invocations": ["getSupport", "getPattern", "getMaxPatternSupport"]}, "repository": {"repo_id": 99890719, "url": "https://github.com/stg-tud/MUDetect", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 5, "size": 11835, "license": "licensed"}}