{"test_class": {"identifier": "RemoteActionRegistryMXBeanImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final QName LOCAL_QNAME = QName.create(\"base\", \"local\");", "modifier": "private static final", "type": "QName", "declarator": "LOCAL_QNAME = QName.create(\"base\", \"local\")", "var_name": "LOCAL_QNAME"}, {"original_string": "private static final QName REMOTE_QNAME = QName.create(\"base\", \"local\");", "modifier": "private static final", "type": "QName", "declarator": "REMOTE_QNAME = QName.create(\"base\", \"local\")", "var_name": "REMOTE_QNAME"}, {"original_string": "private static final Absolute LOCAL_SCHEMA_PATH = Absolute.of(LOCAL_QNAME);", "modifier": "private static final", "type": "Absolute", "declarator": "LOCAL_SCHEMA_PATH = Absolute.of(LOCAL_QNAME)", "var_name": "LOCAL_SCHEMA_PATH"}, {"original_string": "private static final Absolute REMOTE_SCHEMA_PATH = Absolute.of(REMOTE_QNAME);", "modifier": "private static final", "type": "Absolute", "declarator": "REMOTE_SCHEMA_PATH = Absolute.of(REMOTE_QNAME)", "var_name": "REMOTE_SCHEMA_PATH"}, {"original_string": "private ActorSystem system;", "modifier": "private", "type": "ActorSystem", "declarator": "system", "var_name": "system"}, {"original_string": "private TestActorRef<ActionRegistry> testActor;", "modifier": "private", "type": "TestActorRef<ActionRegistry>", "declarator": "testActor", "var_name": "testActor"}, {"original_string": "private List<DOMActionInstance> buckets;", "modifier": "private", "type": "List<DOMActionInstance>", "declarator": "buckets", "var_name": "buckets"}, {"original_string": "private RemoteActionRegistryMXBeanImpl mxBean;", "modifier": "private", "type": "RemoteActionRegistryMXBeanImpl", "declarator": "mxBean", "var_name": "mxBean"}], "file": "opendaylight/md-sal/sal-remoterpc-connector/src/test/java/org/opendaylight/controller/remote/rpc/registry/mbeans/RemoteActionRegistryMXBeanImplTest.java"}, "test_case": {"identifier": "testGetBucketVersions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetBucketVersions() {\n        testActor.tell(new ActionRegistry.Messages.UpdateActions(Lists.newArrayList(buckets),\n                Collections.emptyList()), ActorRef.noSender());\n        final String bucketVersions = mxBean.getBucketVersions();\n\n        Assert.assertTrue(bucketVersions.contains(testActor.provider().getDefaultAddress().toString()));\n    }", "signature": "void testGetBucketVersions()", "full_signature": "@Test public void testGetBucketVersions()", "class_method_signature": "RemoteActionRegistryMXBeanImplTest.testGetBucketVersions()", "testcase": true, "constructor": false, "invocations": ["tell", "newArrayList", "emptyList", "noSender", "getBucketVersions", "assertTrue", "contains", "toString", "getDefaultAddress", "provider"]}, "focal_class": {"identifier": "RemoteActionRegistryMXBeanImpl", "superclass": "extends AbstractRegistryMXBean<ActionRoutingTable, DOMActionInstance>", "interfaces": "implements RemoteActionRegistryMXBean", "fields": [], "methods": [{"identifier": "RemoteActionRegistryMXBeanImpl", "parameters": "(final BucketStoreAccess actionRegistryAccess, final Timeout timeout)", "modifiers": "public", "return": "", "signature": " RemoteActionRegistryMXBeanImpl(final BucketStoreAccess actionRegistryAccess, final Timeout timeout)", "full_signature": "public  RemoteActionRegistryMXBeanImpl(final BucketStoreAccess actionRegistryAccess, final Timeout timeout)", "class_method_signature": "RemoteActionRegistryMXBeanImpl.RemoteActionRegistryMXBeanImpl(final BucketStoreAccess actionRegistryAccess, final Timeout timeout)", "testcase": false, "constructor": true}, {"identifier": "getLocalRegisteredAction", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getLocalRegisteredAction()", "full_signature": "@Override public Set<String> getLocalRegisteredAction()", "class_method_signature": "RemoteActionRegistryMXBeanImpl.getLocalRegisteredAction()", "testcase": false, "constructor": false}, {"identifier": "findActionByName", "parameters": "(final String name)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> findActionByName(final String name)", "full_signature": "@Override public Map<String, String> findActionByName(final String name)", "class_method_signature": "RemoteActionRegistryMXBeanImpl.findActionByName(final String name)", "testcase": false, "constructor": false}, {"identifier": "findActionByRoute", "parameters": "(final String routeId)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> findActionByRoute(final String routeId)", "full_signature": "@Override public Map<String, String> findActionByRoute(final String routeId)", "class_method_signature": "RemoteActionRegistryMXBeanImpl.findActionByRoute(final String routeId)", "testcase": false, "constructor": false}, {"identifier": "getActionMemberMapByAction", "parameters": "(final ActionRoutingTable table,\n                                                                  final String routeName, final String address)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> getActionMemberMapByAction(final ActionRoutingTable table,\n                                                                  final String routeName, final String address)", "full_signature": "private static Map<String, String> getActionMemberMapByAction(final ActionRoutingTable table,\n                                                                  final String routeName, final String address)", "class_method_signature": "RemoteActionRegistryMXBeanImpl.getActionMemberMapByAction(final ActionRoutingTable table,\n                                                                  final String routeName, final String address)", "testcase": false, "constructor": false}, {"identifier": "getActionMemberMapByName", "parameters": "(final ActionRoutingTable table, final String name,\n                                                                final String address)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> getActionMemberMapByName(final ActionRoutingTable table, final String name,\n                                                                final String address)", "full_signature": "private static Map<String, String> getActionMemberMapByName(final ActionRoutingTable table, final String name,\n                                                                final String address)", "class_method_signature": "RemoteActionRegistryMXBeanImpl.getActionMemberMapByName(final ActionRoutingTable table, final String name,\n                                                                final String address)", "testcase": false, "constructor": false}, {"identifier": "getBucketVersions", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getBucketVersions()", "full_signature": "@Override public String getBucketVersions()", "class_method_signature": "RemoteActionRegistryMXBeanImpl.getBucketVersions()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-remoterpc-connector/src/main/java/org/opendaylight/controller/remote/rpc/registry/mbeans/RemoteActionRegistryMXBeanImpl.java"}, "focal_method": {"identifier": "getBucketVersions", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getBucketVersions() {\n        return bucketVersions();\n    }", "signature": "String getBucketVersions()", "full_signature": "@Override public String getBucketVersions()", "class_method_signature": "RemoteActionRegistryMXBeanImpl.getBucketVersions()", "testcase": false, "constructor": false, "invocations": ["bucketVersions"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}