{"test_class": {"identifier": "BigQueryConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"DoubleBraceInitialization\")\n  private static final Map<String, Object> expectedDefaultConfiguration =\n      new HashMap<String, Object>() {\n        {\n          put(\"mapred.bq.bigquery.root.url\", \"https://bigquery.googleapis.com/\");\n          put(\"mapred.bq.dynamic.file.list.record.reader.poll.interval\", 10000);\n          put(\"mapred.bq.dynamic.file.list.record.reader.poll.max.attempts\", -1);\n          put(\"mapred.bq.gcs.bucket\", null);\n          put(\"mapred.bq.input.dataset.id\", null);\n          put(\"mapred.bq.input.export.files.delete\", true);\n          put(\"mapred.bq.input.project.id\", null);\n          put(\"mapred.bq.input.selected.fields\", null);\n          put(\"mapred.bq.input.skew.limit\", 1.5);\n          put(\"mapred.bq.input.sql.filter\", \"\");\n          put(\"mapred.bq.input.table.id\", null);\n          put(\"mapred.bq.output.buffer.size\", 67108864);\n          put(\"mapred.bq.output.dataset.id\", null);\n          put(\"mapred.bq.output.gcs.cleanup\", true);\n          put(\"mapred.bq.output.gcs.fileformat\", null);\n          put(\"mapred.bq.output.gcs.outputformatclass\", null);\n          put(\"mapred.bq.output.location\", \"US\");\n          put(\"mapred.bq.output.project.id\", null);\n          put(\"mapred.bq.output.table.createdisposition\", \"CREATE_IF_NEEDED\");\n          put(\"mapred.bq.output.table.id\", null);\n          put(\"mapred.bq.output.table.kmskeyname\", null);\n          put(\"mapred.bq.output.table.partitioning\", null);\n          put(\"mapred.bq.output.table.schema\", null);\n          put(\"mapred.bq.output.table.writedisposition\", \"WRITE_APPEND\");\n          put(\"mapred.bq.project.id\", null);\n          put(\"mapred.bq.temp.gcs.path\", null);\n        }\n      };", "modifier": "@SuppressWarnings(\"DoubleBraceInitialization\")\n  private static final", "type": "Map<String, Object>", "declarator": "expectedDefaultConfiguration =\n      new HashMap<String, Object>() {\n        {\n          put(\"mapred.bq.bigquery.root.url\", \"https://bigquery.googleapis.com/\");\n          put(\"mapred.bq.dynamic.file.list.record.reader.poll.interval\", 10000);\n          put(\"mapred.bq.dynamic.file.list.record.reader.poll.max.attempts\", -1);\n          put(\"mapred.bq.gcs.bucket\", null);\n          put(\"mapred.bq.input.dataset.id\", null);\n          put(\"mapred.bq.input.export.files.delete\", true);\n          put(\"mapred.bq.input.project.id\", null);\n          put(\"mapred.bq.input.selected.fields\", null);\n          put(\"mapred.bq.input.skew.limit\", 1.5);\n          put(\"mapred.bq.input.sql.filter\", \"\");\n          put(\"mapred.bq.input.table.id\", null);\n          put(\"mapred.bq.output.buffer.size\", 67108864);\n          put(\"mapred.bq.output.dataset.id\", null);\n          put(\"mapred.bq.output.gcs.cleanup\", true);\n          put(\"mapred.bq.output.gcs.fileformat\", null);\n          put(\"mapred.bq.output.gcs.outputformatclass\", null);\n          put(\"mapred.bq.output.location\", \"US\");\n          put(\"mapred.bq.output.project.id\", null);\n          put(\"mapred.bq.output.table.createdisposition\", \"CREATE_IF_NEEDED\");\n          put(\"mapred.bq.output.table.id\", null);\n          put(\"mapred.bq.output.table.kmskeyname\", null);\n          put(\"mapred.bq.output.table.partitioning\", null);\n          put(\"mapred.bq.output.table.schema\", null);\n          put(\"mapred.bq.output.table.writedisposition\", \"WRITE_APPEND\");\n          put(\"mapred.bq.project.id\", null);\n          put(\"mapred.bq.temp.gcs.path\", null);\n        }\n      }", "var_name": "expectedDefaultConfiguration"}, {"original_string": "private static final String JOB_PROJECT_ID = \"google.com:foo-project\";", "modifier": "private static final", "type": "String", "declarator": "JOB_PROJECT_ID = \"google.com:foo-project\"", "var_name": "JOB_PROJECT_ID"}, {"original_string": "private static final String INPUT_PROJECT_ID = \"google.com:input-project\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_PROJECT_ID = \"google.com:input-project\"", "var_name": "INPUT_PROJECT_ID"}, {"original_string": "private static final String INPUT_DATASET_ID = \"test_input_dataset\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_DATASET_ID = \"test_input_dataset\"", "var_name": "INPUT_DATASET_ID"}, {"original_string": "private static final String INPUT_TABLE_ID = \"test_input_table\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_TABLE_ID = \"test_input_table\"", "var_name": "INPUT_TABLE_ID"}, {"original_string": "private static final String OUTPUT_PROJECT_ID = \"google.com:output-project\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_PROJECT_ID = \"google.com:output-project\"", "var_name": "OUTPUT_PROJECT_ID"}, {"original_string": "private static final String OUTPUT_DATASET_ID = \"test_output_dataset\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_DATASET_ID = \"test_output_dataset\"", "var_name": "OUTPUT_DATASET_ID"}, {"original_string": "private static final String OUTPUT_TABLE_ID = \"test_output_table\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_TABLE_ID = \"test_output_table\"", "var_name": "OUTPUT_TABLE_ID"}, {"original_string": "private static final String OUTPUT_TABLE_SCHEMA = \"test_schema\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_TABLE_SCHEMA = \"test_schema\"", "var_name": "OUTPUT_TABLE_SCHEMA"}, {"original_string": "private static final String GCS_BUCKET = \"test\";", "modifier": "private static final", "type": "String", "declarator": "GCS_BUCKET = \"test\"", "var_name": "GCS_BUCKET"}, {"original_string": "private static final String GCS_TEMP_PATH = \"gs://test\";", "modifier": "private static final", "type": "String", "declarator": "GCS_TEMP_PATH = \"gs://test\"", "var_name": "GCS_TEMP_PATH"}, {"original_string": "private static JobConf conf;", "modifier": "private static", "type": "JobConf", "declarator": "conf", "var_name": "conf"}, {"original_string": "@Mock private JobID mockJobID;", "modifier": "@Mock private", "type": "JobID", "declarator": "mockJobID", "var_name": "mockJobID"}], "file": "bigquery/src/test/java/com/google/cloud/hadoop/io/bigquery/BigQueryConfigurationTest.java"}, "test_case": {"identifier": "testConfigureBigQueryInput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConfigureBigQueryInput() throws IOException {\n    BigQueryConfiguration.configureBigQueryInput(\n        conf,\n        INPUT_PROJECT_ID,\n        INPUT_DATASET_ID,\n        INPUT_TABLE_ID);\n    assertThat(BigQueryConfiguration.INPUT_PROJECT_ID.get(conf, conf::get))\n        .isEqualTo(INPUT_PROJECT_ID);\n    assertThat(BigQueryConfiguration.INPUT_DATASET_ID.get(conf, conf::get))\n        .isEqualTo(INPUT_DATASET_ID);\n    assertThat(BigQueryConfiguration.INPUT_TABLE_ID.get(conf, conf::get)).isEqualTo(INPUT_TABLE_ID);\n\n    // By default, the job-level projectId inherits the input projectId if it's not already set.\n    assertThat(BigQueryConfiguration.PROJECT_ID.get(conf, conf::get)).isEqualTo(INPUT_PROJECT_ID);\n  }", "signature": "void testConfigureBigQueryInput()", "full_signature": "@Test public void testConfigureBigQueryInput()", "class_method_signature": "BigQueryConfigurationTest.testConfigureBigQueryInput()", "testcase": true, "constructor": false, "invocations": ["configureBigQueryInput", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "BigQueryConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String BIGQUERY_CONFIG_PREFIX = \"mapred.bq\";", "modifier": "public static final", "type": "String", "declarator": "BIGQUERY_CONFIG_PREFIX = \"mapred.bq\"", "var_name": "BIGQUERY_CONFIG_PREFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> BQ_ROOT_URL =\n      new HadoopConfigurationProperty<>(\n          \"mapred.bq.bigquery.root.url\", \"https://bigquery.googleapis.com/\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "BQ_ROOT_URL =\n      new HadoopConfigurationProperty<>(\n          \"mapred.bq.bigquery.root.url\", \"https://bigquery.googleapis.com/\")", "var_name": "BQ_ROOT_URL"}, {"original_string": "public static final HadoopConfigurationProperty<String> PROJECT_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.project.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "PROJECT_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.project.id\")", "var_name": "PROJECT_ID"}, {"original_string": "public static final HadoopConfigurationProperty<String> INPUT_PROJECT_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.project.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "INPUT_PROJECT_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.project.id\")", "var_name": "INPUT_PROJECT_ID"}, {"original_string": "public static final HadoopConfigurationProperty<String> INPUT_DATASET_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.dataset.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "INPUT_DATASET_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.dataset.id\")", "var_name": "INPUT_DATASET_ID"}, {"original_string": "public static final HadoopConfigurationProperty<String> INPUT_TABLE_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.table.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "INPUT_TABLE_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.table.id\")", "var_name": "INPUT_TABLE_ID"}, {"original_string": "public static final HadoopConfigurationProperty<String> TEMP_GCS_PATH =\n      new HadoopConfigurationProperty<>(\"mapred.bq.temp.gcs.path\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "TEMP_GCS_PATH =\n      new HadoopConfigurationProperty<>(\"mapred.bq.temp.gcs.path\")", "var_name": "TEMP_GCS_PATH"}, {"original_string": "public static final HadoopConfigurationProperty<String> GCS_BUCKET =\n      new HadoopConfigurationProperty<>(\"mapred.bq.gcs.bucket\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "GCS_BUCKET =\n      new HadoopConfigurationProperty<>(\"mapred.bq.gcs.bucket\")", "var_name": "GCS_BUCKET"}, {"original_string": "public static final HadoopConfigurationProperty<Boolean> DELETE_EXPORT_FILES_FROM_GCS =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.export.files.delete\", true);", "modifier": "public static final", "type": "HadoopConfigurationProperty<Boolean>", "declarator": "DELETE_EXPORT_FILES_FROM_GCS =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.export.files.delete\", true)", "var_name": "DELETE_EXPORT_FILES_FROM_GCS"}, {"original_string": "public static final HadoopConfigurationProperty<Integer>\n      DYNAMIC_FILE_LIST_RECORD_READER_POLL_INTERVAL_MS =\n          new HadoopConfigurationProperty<>(\n              \"mapred.bq.dynamic.file.list.record.reader.poll.interval\", 10_000);", "modifier": "public static final", "type": "HadoopConfigurationProperty<Integer>", "declarator": "DYNAMIC_FILE_LIST_RECORD_READER_POLL_INTERVAL_MS =\n          new HadoopConfigurationProperty<>(\n              \"mapred.bq.dynamic.file.list.record.reader.poll.interval\", 10_000)", "var_name": "DYNAMIC_FILE_LIST_RECORD_READER_POLL_INTERVAL_MS"}, {"original_string": "public static final HadoopConfigurationProperty<Integer>\n      DYNAMIC_FILE_LIST_RECORD_READER_POLL_MAX_ATTEMPTS =\n          new HadoopConfigurationProperty<>(\n              \"mapred.bq.dynamic.file.list.record.reader.poll.max.attempts\", -1);", "modifier": "public static final", "type": "HadoopConfigurationProperty<Integer>", "declarator": "DYNAMIC_FILE_LIST_RECORD_READER_POLL_MAX_ATTEMPTS =\n          new HadoopConfigurationProperty<>(\n              \"mapred.bq.dynamic.file.list.record.reader.poll.max.attempts\", -1)", "var_name": "DYNAMIC_FILE_LIST_RECORD_READER_POLL_MAX_ATTEMPTS"}, {"original_string": "public static final List<HadoopConfigurationProperty<?>> MANDATORY_CONFIG_PROPERTIES_INPUT =\n      ImmutableList.of(PROJECT_ID, INPUT_PROJECT_ID, INPUT_DATASET_ID, INPUT_TABLE_ID);", "modifier": "public static final", "type": "List<HadoopConfigurationProperty<?>>", "declarator": "MANDATORY_CONFIG_PROPERTIES_INPUT =\n      ImmutableList.of(PROJECT_ID, INPUT_PROJECT_ID, INPUT_DATASET_ID, INPUT_TABLE_ID)", "var_name": "MANDATORY_CONFIG_PROPERTIES_INPUT"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_PROJECT_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.project.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_PROJECT_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.project.id\")", "var_name": "OUTPUT_PROJECT_ID"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_DATASET_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.dataset.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_DATASET_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.dataset.id\")", "var_name": "OUTPUT_DATASET_ID"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_TABLE_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_TABLE_ID =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.id\")", "var_name": "OUTPUT_TABLE_ID"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_TABLE_SCHEMA =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.schema\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_TABLE_SCHEMA =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.schema\")", "var_name": "OUTPUT_TABLE_SCHEMA"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_TABLE_PARTITIONING =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.partitioning\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_TABLE_PARTITIONING =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.partitioning\")", "var_name": "OUTPUT_TABLE_PARTITIONING"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_TABLE_KMS_KEY_NAME =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.kmskeyname\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_TABLE_KMS_KEY_NAME =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.kmskeyname\")", "var_name": "OUTPUT_TABLE_KMS_KEY_NAME"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_TABLE_WRITE_DISPOSITION =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.writedisposition\", \"WRITE_APPEND\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_TABLE_WRITE_DISPOSITION =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.table.writedisposition\", \"WRITE_APPEND\")", "var_name": "OUTPUT_TABLE_WRITE_DISPOSITION"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_TABLE_CREATE_DISPOSITION =\n      new HadoopConfigurationProperty<>(\n          \"mapred.bq.output.table.createdisposition\", \"CREATE_IF_NEEDED\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_TABLE_CREATE_DISPOSITION =\n      new HadoopConfigurationProperty<>(\n          \"mapred.bq.output.table.createdisposition\", \"CREATE_IF_NEEDED\")", "var_name": "OUTPUT_TABLE_CREATE_DISPOSITION"}, {"original_string": "public static final HadoopConfigurationProperty<String> OUTPUT_FILE_FORMAT =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.gcs.fileformat\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OUTPUT_FILE_FORMAT =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.gcs.fileformat\")", "var_name": "OUTPUT_FILE_FORMAT"}, {"original_string": "public static final HadoopConfigurationProperty<Class<?>> OUTPUT_FORMAT_CLASS =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.gcs.outputformatclass\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<Class<?>>", "declarator": "OUTPUT_FORMAT_CLASS =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.gcs.outputformatclass\")", "var_name": "OUTPUT_FORMAT_CLASS"}, {"original_string": "public static final HadoopConfigurationProperty<Boolean> OUTPUT_CLEANUP_TEMP =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.gcs.cleanup\", true);", "modifier": "public static final", "type": "HadoopConfigurationProperty<Boolean>", "declarator": "OUTPUT_CLEANUP_TEMP =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.gcs.cleanup\", true)", "var_name": "OUTPUT_CLEANUP_TEMP"}, {"original_string": "public static final HadoopConfigurationProperty<Integer> OUTPUT_WRITE_BUFFER_SIZE =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.buffer.size\", 64 * 1024 * 1024);", "modifier": "public static final", "type": "HadoopConfigurationProperty<Integer>", "declarator": "OUTPUT_WRITE_BUFFER_SIZE =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.buffer.size\", 64 * 1024 * 1024)", "var_name": "OUTPUT_WRITE_BUFFER_SIZE"}, {"original_string": "public static final HadoopConfigurationProperty<String> DATA_LOCATION =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.location\", \"US\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "DATA_LOCATION =\n      new HadoopConfigurationProperty<>(\"mapred.bq.output.location\", \"US\")", "var_name": "DATA_LOCATION"}, {"original_string": "public static final HadoopConfigurationProperty<String> SQL_FILTER =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.sql.filter\", \"\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "SQL_FILTER =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.sql.filter\", \"\")", "var_name": "SQL_FILTER"}, {"original_string": "public static final HadoopConfigurationProperty<String> SELECTED_FIELDS =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.selected.fields\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "SELECTED_FIELDS =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.selected.fields\")", "var_name": "SELECTED_FIELDS"}, {"original_string": "public static final HadoopConfigurationProperty<Double> SKEW_LIMIT =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.skew.limit\", 1.5);", "modifier": "public static final", "type": "HadoopConfigurationProperty<Double>", "declarator": "SKEW_LIMIT =\n      new HadoopConfigurationProperty<>(\"mapred.bq.input.skew.limit\", 1.5)", "var_name": "SKEW_LIMIT"}, {"original_string": "private static final GoogleLogger logger = GoogleLogger.forEnclosingClass();", "modifier": "private static final", "type": "GoogleLogger", "declarator": "logger = GoogleLogger.forEnclosingClass()", "var_name": "logger"}], "methods": [{"identifier": "configureBigQueryInput", "parameters": "(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)", "modifiers": "public static", "return": "void", "signature": "void configureBigQueryInput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)", "full_signature": "public static void configureBigQueryInput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)", "class_method_signature": "BigQueryConfiguration.configureBigQueryInput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)", "testcase": false, "constructor": false}, {"identifier": "configureBigQueryInput", "parameters": "(\n      Configuration config, String fullyQualifiedInputTableId)", "modifiers": "public static", "return": "void", "signature": "void configureBigQueryInput(\n      Configuration config, String fullyQualifiedInputTableId)", "full_signature": "public static void configureBigQueryInput(\n      Configuration config, String fullyQualifiedInputTableId)", "class_method_signature": "BigQueryConfiguration.configureBigQueryInput(\n      Configuration config, String fullyQualifiedInputTableId)", "testcase": false, "constructor": false}, {"identifier": "configureBigQueryOutput", "parameters": "(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId,\n      String tableSchema)", "modifiers": "public static", "return": "void", "signature": "void configureBigQueryOutput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId,\n      String tableSchema)", "full_signature": "public static void configureBigQueryOutput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId,\n      String tableSchema)", "class_method_signature": "BigQueryConfiguration.configureBigQueryOutput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId,\n      String tableSchema)", "testcase": false, "constructor": false}, {"identifier": "configureBigQueryOutput", "parameters": "(\n      Configuration config, String fullyQualifiedOutputTableId, String tableSchema)", "modifiers": "public static", "return": "void", "signature": "void configureBigQueryOutput(\n      Configuration config, String fullyQualifiedOutputTableId, String tableSchema)", "full_signature": "public static void configureBigQueryOutput(\n      Configuration config, String fullyQualifiedOutputTableId, String tableSchema)", "class_method_signature": "BigQueryConfiguration.configureBigQueryOutput(\n      Configuration config, String fullyQualifiedOutputTableId, String tableSchema)", "testcase": false, "constructor": false}, {"identifier": "getTemporaryPathRoot", "parameters": "(Configuration conf, @Nullable JobID jobId)", "modifiers": "public static", "return": "String", "signature": "String getTemporaryPathRoot(Configuration conf, @Nullable JobID jobId)", "full_signature": "public static String getTemporaryPathRoot(Configuration conf, @Nullable JobID jobId)", "class_method_signature": "BigQueryConfiguration.getTemporaryPathRoot(Configuration conf, @Nullable JobID jobId)", "testcase": false, "constructor": false}], "file": "bigquery/src/main/java/com/google/cloud/hadoop/io/bigquery/BigQueryConfiguration.java"}, "focal_method": {"identifier": "configureBigQueryInput", "parameters": "(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)", "modifiers": "public static", "return": "void", "body": "public static void configureBigQueryInput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)\n      throws IOException {\n    // Check preconditions.\n    Preconditions.checkArgument(\n        !Strings.isNullOrEmpty(datasetId), \"datasetId must not be null or empty.\");\n    Preconditions.checkArgument(\n        !Strings.isNullOrEmpty(tableId), \"tableId must not be null or empty.\");\n\n    // Project is optional, if not set use default project.\n    if (!Strings.isNullOrEmpty(projectId)) {\n      logger.atInfo().log(\"Using specified project-id '%s' for input\", projectId);\n      config.set(INPUT_PROJECT_ID.getKey(), projectId);\n\n      // For user-friendliness, we'll helpfully backfill the input-specific projectId into the\n      // \"global\" projectId for now.\n      // TODO(user): Maybe don't try to be user-friendly here.\n      if (Strings.isNullOrEmpty(PROJECT_ID.get(config, config::get))) {\n        logger.atWarning().log(\n            \"No job-level projectId specified in '%s', using '%s' for it.\",\n            PROJECT_ID.getKey(), projectId);\n        config.set(PROJECT_ID.getKey(), projectId);\n      }\n    } else {\n      String defaultProjectId = getMandatoryConfig(config, PROJECT_ID);\n      logger.atInfo().log(\n          \"Using default project-id '%s' since none specified for input.\", defaultProjectId);\n      config.set(INPUT_PROJECT_ID.getKey(), defaultProjectId);\n    }\n    config.set(INPUT_DATASET_ID.getKey(), datasetId);\n    config.set(INPUT_TABLE_ID.getKey(), tableId);\n  }", "signature": "void configureBigQueryInput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)", "full_signature": "public static void configureBigQueryInput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)", "class_method_signature": "BigQueryConfiguration.configureBigQueryInput(\n      Configuration config,\n      String projectId,\n      String datasetId,\n      String tableId)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "isNullOrEmpty", "checkArgument", "isNullOrEmpty", "isNullOrEmpty", "log", "atInfo", "set", "getKey", "isNullOrEmpty", "get", "log", "atWarning", "getKey", "set", "getKey", "getMandatoryConfig", "log", "atInfo", "set", "getKey", "set", "getKey", "set", "getKey"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}