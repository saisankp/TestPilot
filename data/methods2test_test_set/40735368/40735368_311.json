{"test_class": {"identifier": "InfoToolHelperLookupTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/unsupported/swing/src/test/java/org/geotools/swing/tool/InfoToolHelperLookupTest.java"}, "test_case": {"identifier": "gridCoverageLayerHelper", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void gridCoverageLayerHelper() throws Exception {\n        float[][] data = {\n            {1, 2, 3, 4},\n            {5, 6, 7, 8}\n        };\n        \n        ReferencedEnvelope env = new ReferencedEnvelope(0, 4, 0, 2, null);\n        GridCoverageFactory gcf = CoverageFactoryFinder.getGridCoverageFactory(null);\n        GridCoverage2D cov = gcf.create(\"coverage\", data, env);\n        Layer layer = new GridCoverageLayer(cov, null);\n        \n        InfoToolHelper helper = InfoToolHelperLookup.getHelper(layer);\n        assertNotNull(helper);\n        assertEquals(GridCoverageLayerHelper.class, helper.getClass());\n    }", "signature": "void gridCoverageLayerHelper()", "full_signature": "@Test public void gridCoverageLayerHelper()", "class_method_signature": "InfoToolHelperLookupTest.gridCoverageLayerHelper()", "testcase": true, "constructor": false, "invocations": ["getGridCoverageFactory", "create", "getHelper", "assertNotNull", "assertEquals", "getClass"]}, "focal_class": {"identifier": "InfoToolHelperLookup", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(\"org.geotools.swing\");", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(\"org.geotools.swing\")", "var_name": "LOGGER"}, {"original_string": "private static List<InfoToolHelper> cachedInstances;", "modifier": "private static", "type": "List<InfoToolHelper>", "declarator": "cachedInstances", "var_name": "cachedInstances"}], "methods": [{"identifier": "getHelper", "parameters": "(Layer layer)", "modifiers": "public static", "return": "InfoToolHelper", "signature": "InfoToolHelper getHelper(Layer layer)", "full_signature": "public static InfoToolHelper getHelper(Layer layer)", "class_method_signature": "InfoToolHelperLookup.getHelper(Layer layer)", "testcase": false, "constructor": false}, {"identifier": "loadProviders", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void loadProviders()", "full_signature": "private static void loadProviders()", "class_method_signature": "InfoToolHelperLookup.loadProviders()", "testcase": false, "constructor": false}], "file": "modules/unsupported/swing/src/main/java/org/geotools/swing/tool/InfoToolHelperLookup.java"}, "focal_method": {"identifier": "getHelper", "parameters": "(Layer layer)", "modifiers": "public static", "return": "InfoToolHelper", "body": "public static InfoToolHelper getHelper(Layer layer) {\n        loadProviders();\n        \n        for (InfoToolHelper helper : cachedInstances) {\n            try {\n                if (helper.isSupportedLayer(layer)) {\n                    return helper.getClass().newInstance();\n                }\n                \n            } catch (Exception ex) {\n                throw new RuntimeException(ex);\n            }\n        }\n\n        return null;\n    }", "signature": "InfoToolHelper getHelper(Layer layer)", "full_signature": "public static InfoToolHelper getHelper(Layer layer)", "class_method_signature": "InfoToolHelperLookup.getHelper(Layer layer)", "testcase": false, "constructor": false, "invocations": ["loadProviders", "isSupportedLayer", "newInstance", "getClass"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}