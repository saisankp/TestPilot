{"test_class": {"identifier": "SimplePathBuilderTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private File userHome;", "modifier": "private", "type": "File", "declarator": "userHome", "var_name": "userHome"}, {"original_string": "private SimplePathBuilder builder;", "modifier": "private", "type": "SimplePathBuilder", "declarator": "builder", "var_name": "builder"}], "file": "core/inputoutput/src/test/java/org/arakhne/afc/inputoutput/path/SimplePathBuilderTest.java"}, "test_case": {"identifier": "testGetCurrentDirectoryString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetCurrentDirectoryString() throws Exception {\n\t\tassertEquals(this.userHome.toURI().toURL().toExternalForm(), this.builder.getCurrentDirectoryString());\n\n\t\tthis.builder.setCurrentDirectory(\"file:./toto\"); //$NON-NLS-1$\n\t\tassertEquals(\"file:./toto\", this.builder.getCurrentDirectoryString()); //$NON-NLS-1$\n\t\t\n\t\tthis.builder.setCurrentDirectory(\"http://www.multiagent.fr/toto\"); //$NON-NLS-1$\n\t\tassertEquals(\"http://www.multiagent.fr/toto\", this.builder.getCurrentDirectoryString()); //$NON-NLS-1$\n\n\t\tthis.builder.setCurrentDirectory(\"https://set.utbm.fr/toto\"); //$NON-NLS-1$\n\t\tassertEquals(\"https://set.utbm.fr/toto\", this.builder.getCurrentDirectoryString()); //$NON-NLS-1$\n\n\t\tthis.builder.setCurrentDirectory(\"ftp://set.utbm.fr/toto\"); //$NON-NLS-1$\n\t\tassertEquals(\"ftp://set.utbm.fr/toto\", this.builder.getCurrentDirectoryString()); //$NON-NLS-1$\n\n\t\tthis.builder.setCurrentDirectory(\"jar:file:test.jar!/toto\"); //$NON-NLS-1$\n\t\tassertEquals(\"jar:file:test.jar!/toto\", this.builder.getCurrentDirectoryString()); //$NON-NLS-1$\n\n\t\tthis.builder.setCurrentDirectory(\"./toto\"); //$NON-NLS-1$\n\t\tassertEquals(new File(\"./toto\").toURI().toURL().toExternalForm(), this.builder.getCurrentDirectoryString()); //$NON-NLS-1$\n\t}", "signature": "void testGetCurrentDirectoryString()", "full_signature": "@Test public void testGetCurrentDirectoryString()", "class_method_signature": "SimplePathBuilderTest.testGetCurrentDirectoryString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toExternalForm", "toURL", "toURI", "getCurrentDirectoryString", "setCurrentDirectory", "assertEquals", "getCurrentDirectoryString", "setCurrentDirectory", "assertEquals", "getCurrentDirectoryString", "setCurrentDirectory", "assertEquals", "getCurrentDirectoryString", "setCurrentDirectory", "assertEquals", "getCurrentDirectoryString", "setCurrentDirectory", "assertEquals", "getCurrentDirectoryString", "setCurrentDirectory", "assertEquals", "toExternalForm", "toURL", "toURI", "getCurrentDirectoryString"]}, "focal_class": {"identifier": "SimplePathBuilder", "superclass": "", "interfaces": "implements PathBuilder", "fields": [{"original_string": "private File currentFile;", "modifier": "private", "type": "File", "declarator": "currentFile", "var_name": "currentFile"}, {"original_string": "private URL currentURL;", "modifier": "private", "type": "URL", "declarator": "currentURL", "var_name": "currentURL"}], "methods": [{"identifier": "SimplePathBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " SimplePathBuilder()", "full_signature": "public  SimplePathBuilder()", "class_method_signature": "SimplePathBuilder.SimplePathBuilder()", "testcase": false, "constructor": true}, {"identifier": "SimplePathBuilder", "parameters": "(String currentDirectory)", "modifiers": "public", "return": "", "signature": " SimplePathBuilder(String currentDirectory)", "full_signature": "public  SimplePathBuilder(String currentDirectory)", "class_method_signature": "SimplePathBuilder.SimplePathBuilder(String currentDirectory)", "testcase": false, "constructor": true}, {"identifier": "SimplePathBuilder", "parameters": "(File currentDirectory)", "modifiers": "public", "return": "", "signature": " SimplePathBuilder(File currentDirectory)", "full_signature": "public  SimplePathBuilder(File currentDirectory)", "class_method_signature": "SimplePathBuilder.SimplePathBuilder(File currentDirectory)", "testcase": false, "constructor": true}, {"identifier": "SimplePathBuilder", "parameters": "(URL currentDirectory)", "modifiers": "public", "return": "", "signature": " SimplePathBuilder(URL currentDirectory)", "full_signature": "public  SimplePathBuilder(URL currentDirectory)", "class_method_signature": "SimplePathBuilder.SimplePathBuilder(URL currentDirectory)", "testcase": false, "constructor": true}, {"identifier": "setCurrentDirectory", "parameters": "(String currentDirectory)", "modifiers": "@Override public", "return": "void", "signature": "void setCurrentDirectory(String currentDirectory)", "full_signature": "@Override public void setCurrentDirectory(String currentDirectory)", "class_method_signature": "SimplePathBuilder.setCurrentDirectory(String currentDirectory)", "testcase": false, "constructor": false}, {"identifier": "setCurrentDirectory", "parameters": "(File currentDirectory)", "modifiers": "@Override public", "return": "void", "signature": "void setCurrentDirectory(File currentDirectory)", "full_signature": "@Override public void setCurrentDirectory(File currentDirectory)", "class_method_signature": "SimplePathBuilder.setCurrentDirectory(File currentDirectory)", "testcase": false, "constructor": false}, {"identifier": "setCurrentDirectory", "parameters": "(URL currentDirectory)", "modifiers": "@Override public", "return": "void", "signature": "void setCurrentDirectory(URL currentDirectory)", "full_signature": "@Override public void setCurrentDirectory(URL currentDirectory)", "class_method_signature": "SimplePathBuilder.setCurrentDirectory(URL currentDirectory)", "testcase": false, "constructor": false}, {"identifier": "getCurrentDirectoryFile", "parameters": "()", "modifiers": "@Override public", "return": "File", "signature": "File getCurrentDirectoryFile()", "full_signature": "@Override public File getCurrentDirectoryFile()", "class_method_signature": "SimplePathBuilder.getCurrentDirectoryFile()", "testcase": false, "constructor": false}, {"identifier": "getCurrentDirectoryURL", "parameters": "()", "modifiers": "@Override public", "return": "URL", "signature": "URL getCurrentDirectoryURL()", "full_signature": "@Override public URL getCurrentDirectoryURL()", "class_method_signature": "SimplePathBuilder.getCurrentDirectoryURL()", "testcase": false, "constructor": false}], "file": "core/inputoutput/src/main/java/org/arakhne/afc/inputoutput/path/SimplePathBuilder.java"}, "focal_method": {"identifier": "setCurrentDirectory", "parameters": "(String currentDirectory)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void setCurrentDirectory(String currentDirectory) {\n\t\tif (currentDirectory == null) {\n\t\t\tthis.currentFile =  null;\n\t\t\tthis.currentURL = null;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis.currentURL = new URL(currentDirectory);\n\t\t\t\tthis.currentFile = null;\n\t\t\t} catch (MalformedURLException exception) {\n\t\t\t\tthis.currentFile = new File(currentDirectory);\n\t\t\t\tthis.currentURL = null;\n\t\t\t}\n\t\t}\n\t}", "signature": "void setCurrentDirectory(String currentDirectory)", "full_signature": "@Override public void setCurrentDirectory(String currentDirectory)", "class_method_signature": "SimplePathBuilder.setCurrentDirectory(String currentDirectory)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}