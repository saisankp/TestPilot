{"test_class": {"identifier": "HttpServletConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpServletConnection connection;", "modifier": "private", "type": "HttpServletConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private MockHttpServletRequest httpServletRequest;", "modifier": "private", "type": "MockHttpServletRequest", "declarator": "httpServletRequest", "var_name": "httpServletRequest"}, {"original_string": "private MockHttpServletResponse httpServletResponse;", "modifier": "private", "type": "MockHttpServletResponse", "declarator": "httpServletResponse", "var_name": "httpServletResponse"}, {"original_string": "private static final String HEADER_NAME = \"RequestHeader\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_NAME = \"RequestHeader\"", "var_name": "HEADER_NAME"}, {"original_string": "private static final String HEADER_VALUE = \"RequestHeaderValue\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_VALUE = \"RequestHeaderValue\"", "var_name": "HEADER_VALUE"}, {"original_string": "private static final String CONTENT = \"<Request xmlns='http://springframework.org/spring-ws/' />\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT = \"<Request xmlns='http://springframework.org/spring-ws/' />\"", "var_name": "CONTENT"}, {"original_string": "private static final String SOAP_CONTENT = \"<SOAP-ENV:Envelope xmlns:SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/'><SOAP-ENV:Header/><SOAP-ENV:Body>\"\n\t\t\t+ CONTENT + \"</SOAP-ENV:Body></SOAP-ENV:Envelope>\";", "modifier": "private static final", "type": "String", "declarator": "SOAP_CONTENT = \"<SOAP-ENV:Envelope xmlns:SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/'><SOAP-ENV:Header/><SOAP-ENV:Body>\"\n\t\t\t+ CONTENT + \"</SOAP-ENV:Body></SOAP-ENV:Envelope>\"", "var_name": "SOAP_CONTENT"}, {"original_string": "private SaajSoapMessageFactory messageFactory;", "modifier": "private", "type": "SaajSoapMessageFactory", "declarator": "messageFactory", "var_name": "messageFactory"}, {"original_string": "private TransformerFactory transformerFactory;", "modifier": "private", "type": "TransformerFactory", "declarator": "transformerFactory", "var_name": "transformerFactory"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/transport/http/HttpServletConnectionTest.java"}, "test_case": {"identifier": "faultCodes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void faultCodes() throws IOException {\n\t\tconnection.setFaultCode(SoapVersion.SOAP_11.getClientOrSenderFaultName());\n\t\tassertEquals(500, httpServletResponse.getStatus());\n\n\t\tconnection.setFaultCode(SoapVersion.SOAP_11.getServerOrReceiverFaultName());\n\t\tassertEquals(500, httpServletResponse.getStatus());\n\n\t\tconnection.setFaultCode(SoapVersion.SOAP_12.getClientOrSenderFaultName());\n\t\tassertEquals(400, httpServletResponse.getStatus());\n\n\t\tconnection.setFaultCode(SoapVersion.SOAP_12.getServerOrReceiverFaultName());\n\t\tassertEquals(500, httpServletResponse.getStatus());\n\t}", "signature": "void faultCodes()", "full_signature": "@Test public void faultCodes()", "class_method_signature": "HttpServletConnectionTest.faultCodes()", "testcase": true, "constructor": false, "invocations": ["setFaultCode", "getClientOrSenderFaultName", "assertEquals", "getStatus", "setFaultCode", "getServerOrReceiverFaultName", "assertEquals", "getStatus", "setFaultCode", "getClientOrSenderFaultName", "assertEquals", "getStatus", "setFaultCode", "getServerOrReceiverFaultName", "assertEquals", "getStatus"]}, "focal_class": {"identifier": "HttpServletConnection", "superclass": "extends AbstractReceiverConnection", "interfaces": "implements EndpointAwareWebServiceConnection, FaultAwareWebServiceConnection", "fields": [{"original_string": "private final HttpServletRequest httpServletRequest;", "modifier": "private final", "type": "HttpServletRequest", "declarator": "httpServletRequest", "var_name": "httpServletRequest"}, {"original_string": "private final HttpServletResponse httpServletResponse;", "modifier": "private final", "type": "HttpServletResponse", "declarator": "httpServletResponse", "var_name": "httpServletResponse"}, {"original_string": "private boolean statusCodeSet = false;", "modifier": "private", "type": "boolean", "declarator": "statusCodeSet = false", "var_name": "statusCodeSet"}], "methods": [{"identifier": "HttpServletConnection", "parameters": "(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)", "modifiers": "protected", "return": "", "signature": " HttpServletConnection(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)", "full_signature": "protected  HttpServletConnection(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)", "class_method_signature": "HttpServletConnection.HttpServletConnection(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)", "testcase": false, "constructor": true}, {"identifier": "getHttpServletRequest", "parameters": "()", "modifiers": "public", "return": "HttpServletRequest", "signature": "HttpServletRequest getHttpServletRequest()", "full_signature": "public HttpServletRequest getHttpServletRequest()", "class_method_signature": "HttpServletConnection.getHttpServletRequest()", "testcase": false, "constructor": false}, {"identifier": "getHttpServletResponse", "parameters": "()", "modifiers": "public", "return": "HttpServletResponse", "signature": "HttpServletResponse getHttpServletResponse()", "full_signature": "public HttpServletResponse getHttpServletResponse()", "class_method_signature": "HttpServletConnection.getHttpServletResponse()", "testcase": false, "constructor": false}, {"identifier": "endpointNotFound", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endpointNotFound()", "full_signature": "@Override public void endpointNotFound()", "class_method_signature": "HttpServletConnection.endpointNotFound()", "testcase": false, "constructor": false}, {"identifier": "hasError", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasError()", "full_signature": "@Override public boolean hasError()", "class_method_signature": "HttpServletConnection.hasError()", "testcase": false, "constructor": false}, {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getErrorMessage()", "full_signature": "@Override public String getErrorMessage()", "class_method_signature": "HttpServletConnection.getErrorMessage()", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "HttpServletConnection.getUri()", "testcase": false, "constructor": false}, {"identifier": "getRequestHeaderNames", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> getRequestHeaderNames()", "full_signature": "@Override public Iterator<String> getRequestHeaderNames()", "class_method_signature": "HttpServletConnection.getRequestHeaderNames()", "testcase": false, "constructor": false}, {"identifier": "getRequestHeaders", "parameters": "(String name)", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> getRequestHeaders(String name)", "full_signature": "@Override public Iterator<String> getRequestHeaders(String name)", "class_method_signature": "HttpServletConnection.getRequestHeaders(String name)", "testcase": false, "constructor": false}, {"identifier": "getRequestInputStream", "parameters": "()", "modifiers": "@Override protected", "return": "InputStream", "signature": "InputStream getRequestInputStream()", "full_signature": "@Override protected InputStream getRequestInputStream()", "class_method_signature": "HttpServletConnection.getRequestInputStream()", "testcase": false, "constructor": false}, {"identifier": "addResponseHeader", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "void", "signature": "void addResponseHeader(String name, String value)", "full_signature": "@Override public void addResponseHeader(String name, String value)", "class_method_signature": "HttpServletConnection.addResponseHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "getResponseOutputStream", "parameters": "()", "modifiers": "@Override protected", "return": "OutputStream", "signature": "OutputStream getResponseOutputStream()", "full_signature": "@Override protected OutputStream getResponseOutputStream()", "class_method_signature": "HttpServletConnection.getResponseOutputStream()", "testcase": false, "constructor": false}, {"identifier": "onSendAfterWrite", "parameters": "(WebServiceMessage message)", "modifiers": "@Override protected", "return": "void", "signature": "void onSendAfterWrite(WebServiceMessage message)", "full_signature": "@Override protected void onSendAfterWrite(WebServiceMessage message)", "class_method_signature": "HttpServletConnection.onSendAfterWrite(WebServiceMessage message)", "testcase": false, "constructor": false}, {"identifier": "onClose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onClose()", "full_signature": "@Override public void onClose()", "class_method_signature": "HttpServletConnection.onClose()", "testcase": false, "constructor": false}, {"identifier": "hasFault", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasFault()", "full_signature": "@Override public boolean hasFault()", "class_method_signature": "HttpServletConnection.hasFault()", "testcase": false, "constructor": false}, {"identifier": "setFault", "parameters": "(boolean fault)", "modifiers": "@Override @Deprecated public", "return": "void", "signature": "void setFault(boolean fault)", "full_signature": "@Override @Deprecated public void setFault(boolean fault)", "class_method_signature": "HttpServletConnection.setFault(boolean fault)", "testcase": false, "constructor": false}, {"identifier": "setFaultCode", "parameters": "(QName faultCode)", "modifiers": "@Override public", "return": "void", "signature": "void setFaultCode(QName faultCode)", "full_signature": "@Override public void setFaultCode(QName faultCode)", "class_method_signature": "HttpServletConnection.setFaultCode(QName faultCode)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/transport/http/HttpServletConnection.java"}, "focal_method": {"identifier": "setFaultCode", "parameters": "(QName faultCode)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void setFaultCode(QName faultCode) throws IOException {\n\t\tif (faultCode != null) {\n\t\t\tif (SOAPConstants.SOAP_SENDER_FAULT.equals(faultCode)) {\n\t\t\t\tgetHttpServletResponse().setStatus(HttpTransportConstants.STATUS_BAD_REQUEST);\n\t\t\t} else {\n\t\t\t\tgetHttpServletResponse().setStatus(HttpTransportConstants.STATUS_INTERNAL_SERVER_ERROR);\n\t\t\t}\n\t\t} else {\n\t\t\tgetHttpServletResponse().setStatus(HttpTransportConstants.STATUS_OK);\n\t\t}\n\t\tstatusCodeSet = true;\n\t}", "signature": "void setFaultCode(QName faultCode)", "full_signature": "@Override public void setFaultCode(QName faultCode)", "class_method_signature": "HttpServletConnection.setFaultCode(QName faultCode)", "testcase": false, "constructor": false, "invocations": ["equals", "setStatus", "getHttpServletResponse", "setStatus", "getHttpServletResponse", "setStatus", "getHttpServletResponse"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}