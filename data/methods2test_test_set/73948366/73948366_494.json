{"test_class": {"identifier": "PrometheusPullServerTest", "superclass": "", "interfaces": "", "fields": [], "file": "contributions/metric/prometheus/src/test/java/com/yahoo/athenz/common/metrics/impl/prometheus/PrometheusPullServerTest.java"}, "test_case": {"identifier": "testConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConstructor() throws IOException {\n\n        int port = 8181;\n        String counterName = \"constructor_test_total\";\n        String counterHelp = \"constructor_test_help\";\n        double counterValue = 1234.6789;\n\n        CollectorRegistry registry = new CollectorRegistry();\n        Counter counter = Counter.build().name(counterName).help(counterHelp).register(registry);\n        counter.inc(counterValue);\n\n        // new\n        String expectedResponseText = String.join(\n            \"\\n\",\n            String.format(\"# HELP %s %s\", counterName, counterHelp),\n            String.format(\"# TYPE %s %s\", counterName, counter.getClass().getSimpleName().toLowerCase()),\n            String.format(\"%s %.4f\", counterName, counterValue)\n        );\n        PrometheusPullServer exporter = null;\n        try {\n            exporter = new PrometheusPullServer(port, registry);\n\n            HttpClient client = HttpClientBuilder.create().build();\n            HttpGet request = new HttpGet(String.format(\"http://localhost:%d/metrics\", port));\n            HttpResponse response = client.execute(request);\n            BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));\n            String responseText = rd.lines().collect(Collectors.joining(\"\\n\"));\n\n            // assertions\n            Assert.assertEquals(responseText, expectedResponseText);\n        } finally {\n            // cleanup\n            if (exporter != null) {\n                exporter.quit();\n            }\n        }\n    }", "signature": "void testConstructor()", "full_signature": "@Test public void testConstructor()", "class_method_signature": "PrometheusPullServerTest.testConstructor()", "testcase": true, "constructor": false, "invocations": ["register", "help", "name", "build", "inc", "join", "format", "format", "toLowerCase", "getSimpleName", "getClass", "format", "build", "create", "format", "execute", "getContent", "getEntity", "collect", "lines", "joining", "assertEquals", "quit"]}, "focal_class": {"identifier": "PrometheusPullServer", "superclass": "", "interfaces": "implements PrometheusExporter", "fields": [{"original_string": "private HTTPServer server;", "modifier": "private", "type": "HTTPServer", "declarator": "server", "var_name": "server"}], "methods": [{"identifier": "PrometheusPullServer", "parameters": "(int pullingPort, CollectorRegistry registry)", "modifiers": "public", "return": "", "signature": " PrometheusPullServer(int pullingPort, CollectorRegistry registry)", "full_signature": "public  PrometheusPullServer(int pullingPort, CollectorRegistry registry)", "class_method_signature": "PrometheusPullServer.PrometheusPullServer(int pullingPort, CollectorRegistry registry)", "testcase": false, "constructor": true}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "PrometheusPullServer.flush()", "testcase": false, "constructor": false}, {"identifier": "quit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void quit()", "full_signature": "@Override public void quit()", "class_method_signature": "PrometheusPullServer.quit()", "testcase": false, "constructor": false}], "file": "contributions/metric/prometheus/src/main/java/com/yahoo/athenz/common/metrics/impl/prometheus/PrometheusPullServer.java"}, "focal_method": {"identifier": "quit", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void quit() {\n        this.server.stop();\n    }", "signature": "void quit()", "full_signature": "@Override public void quit()", "class_method_signature": "PrometheusPullServer.quit()", "testcase": false, "constructor": false, "invocations": ["stop"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}