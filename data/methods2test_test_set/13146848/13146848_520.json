{"test_class": {"identifier": "PdfFileSourceAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private File file;", "modifier": "private", "type": "File", "declarator": "file", "var_name": "file"}], "file": "sejda-conversion/src/test/java/org/sejda/conversion/PdfFileSourceAdapterTest.java"}, "test_case": {"identifier": "windowsFileWithPassword", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void windowsFileWithPassword() {\n        PdfFileSource result = new PdfFileSourceAdapter(\"/tmp/inputFile1.pdf:secret123\").getPdfFileSource();\n        assertThat(result.getPassword(), is(\"secret123\"));\n        assertThat(result.getSource(),\n                CombinableMatcher.<File> either(is(new File(\"/tmp/inputFile1.pdf\"))).or(\n                        is(new File(\"c:\\\\tmp\\\\inputFile1.pdf\"))));\n    }", "signature": "void windowsFileWithPassword()", "full_signature": "@Test public void windowsFileWithPassword()", "class_method_signature": "PdfFileSourceAdapterTest.windowsFileWithPassword()", "testcase": true, "constructor": false, "invocations": ["getPdfFileSource", "assertThat", "getPassword", "is", "assertThat", "getSource", "or", "either", "is", "is"]}, "focal_class": {"identifier": "PdfFileSourceAdapter", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String PASSWORD_SEPARATOR_CHARACTER = \":\";", "modifier": "public static final", "type": "String", "declarator": "PASSWORD_SEPARATOR_CHARACTER = \":\"", "var_name": "PASSWORD_SEPARATOR_CHARACTER"}, {"original_string": "private static final String PDF_EXTENSION = \".pdf\";", "modifier": "private static final", "type": "String", "declarator": "PDF_EXTENSION = \".pdf\"", "var_name": "PDF_EXTENSION"}, {"original_string": "private static final String PDF_EXTENSION_AND_PASSWORD_SEPARATOR = PDF_EXTENSION + PASSWORD_SEPARATOR_CHARACTER;", "modifier": "private static final", "type": "String", "declarator": "PDF_EXTENSION_AND_PASSWORD_SEPARATOR = PDF_EXTENSION + PASSWORD_SEPARATOR_CHARACTER", "var_name": "PDF_EXTENSION_AND_PASSWORD_SEPARATOR"}, {"original_string": "private final PdfFileSource pdfFileSource;", "modifier": "private final", "type": "PdfFileSource", "declarator": "pdfFileSource", "var_name": "pdfFileSource"}], "methods": [{"identifier": "PdfFileSourceAdapter", "parameters": "(String filePathAndPassword)", "modifiers": "public", "return": "", "signature": " PdfFileSourceAdapter(String filePathAndPassword)", "full_signature": "public  PdfFileSourceAdapter(String filePathAndPassword)", "class_method_signature": "PdfFileSourceAdapter.PdfFileSourceAdapter(String filePathAndPassword)", "testcase": false, "constructor": true}, {"identifier": "getPdfFileSource", "parameters": "()", "modifiers": "public", "return": "PdfFileSource", "signature": "PdfFileSource getPdfFileSource()", "full_signature": "public PdfFileSource getPdfFileSource()", "class_method_signature": "PdfFileSourceAdapter.getPdfFileSource()", "testcase": false, "constructor": false}, {"identifier": "extractFilePath", "parameters": "(String filePathAndPassword)", "modifiers": "static", "return": "String", "signature": "String extractFilePath(String filePathAndPassword)", "full_signature": "static String extractFilePath(String filePathAndPassword)", "class_method_signature": "PdfFileSourceAdapter.extractFilePath(String filePathAndPassword)", "testcase": false, "constructor": false}, {"identifier": "extractPassword", "parameters": "(String filePathAndPassword)", "modifiers": "static", "return": "String", "signature": "String extractPassword(String filePathAndPassword)", "full_signature": "static String extractPassword(String filePathAndPassword)", "class_method_signature": "PdfFileSourceAdapter.extractPassword(String filePathAndPassword)", "testcase": false, "constructor": false}, {"identifier": "fromStrings", "parameters": "(List<String> filenames)", "modifiers": "static", "return": "List<PdfFileSource>", "signature": "List<PdfFileSource> fromStrings(List<String> filenames)", "full_signature": "static List<PdfFileSource> fromStrings(List<String> filenames)", "class_method_signature": "PdfFileSourceAdapter.fromStrings(List<String> filenames)", "testcase": false, "constructor": false}], "file": "sejda-conversion/src/main/java/org/sejda/conversion/PdfFileSourceAdapter.java"}, "focal_method": {"identifier": "getPdfFileSource", "parameters": "()", "modifiers": "public", "return": "PdfFileSource", "body": "public PdfFileSource getPdfFileSource() {\n        return pdfFileSource;\n    }", "signature": "PdfFileSource getPdfFileSource()", "full_signature": "public PdfFileSource getPdfFileSource()", "class_method_signature": "PdfFileSourceAdapter.getPdfFileSource()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}