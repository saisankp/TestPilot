{"test_class": {"identifier": "Log4jAuditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Auditor auditor;", "modifier": "private", "type": "Auditor", "declarator": "auditor", "var_name": "auditor"}], "file": "auditor-log4j/src/test/java/ro/fortsoft/auditor/log4j/Log4jAuditorTest.java"}, "test_case": {"identifier": "logEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void logEvent() {\n        auditor.audit(new AuditEvent(\"Login\").setUsername(\"decebal1\").setSession(getUUID()).setIp(\"localhost\"));\n    }", "signature": "void logEvent()", "full_signature": "@Test public void logEvent()", "class_method_signature": "Log4jAuditorTest.logEvent()", "testcase": true, "constructor": false, "invocations": ["audit", "setIp", "setSession", "setUsername", "getUUID"]}, "focal_class": {"identifier": "Log4jAuditor", "superclass": "", "interfaces": "implements Auditor", "fields": [{"original_string": "private final Logger log;", "modifier": "private final", "type": "Logger", "declarator": "log", "var_name": "log"}], "methods": [{"identifier": "Log4jAuditor", "parameters": "()", "modifiers": "public", "return": "", "signature": " Log4jAuditor()", "full_signature": "public  Log4jAuditor()", "class_method_signature": "Log4jAuditor.Log4jAuditor()", "testcase": false, "constructor": true}, {"identifier": "Log4jAuditor", "parameters": "(String loggerName)", "modifiers": "public", "return": "", "signature": " Log4jAuditor(String loggerName)", "full_signature": "public  Log4jAuditor(String loggerName)", "class_method_signature": "Log4jAuditor.Log4jAuditor(String loggerName)", "testcase": false, "constructor": true}, {"identifier": "audit", "parameters": "(AuditEvent event)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void audit(AuditEvent event)", "full_signature": "@SuppressWarnings(\"unchecked\") public void audit(AuditEvent event)", "class_method_signature": "Log4jAuditor.audit(AuditEvent event)", "testcase": false, "constructor": false}, {"identifier": "initFromMDC", "parameters": "(AuditEvent event)", "modifiers": "protected", "return": "void", "signature": "void initFromMDC(AuditEvent event)", "full_signature": "protected void initFromMDC(AuditEvent event)", "class_method_signature": "Log4jAuditor.initFromMDC(AuditEvent event)", "testcase": false, "constructor": false}], "file": "auditor-log4j/src/main/java/ro/fortsoft/auditor/log4j/Log4jAuditor.java"}, "focal_method": {"identifier": "audit", "parameters": "(AuditEvent event)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    public void audit(AuditEvent event) {\n        initFromMDC(event);\n\n        // create the logging event from audit event\n        LoggingEvent loggingEvent = new LoggingEvent(log.getName(), log, Level.DEBUG, event.getAction(), null);\n        loggingEvent.setProperty(\"username\", event.getUsername());\n        loggingEvent.setProperty(\"session\", event.getSession());\n        loggingEvent.setProperty(\"ip\", event.getIp());\n\n        // add the logging event to all appenders\n        Enumeration<Appender> en = log.getAllAppenders();\n        while (en.hasMoreElements()) {\n            en.nextElement().doAppend(loggingEvent);\n        }\n    }", "signature": "void audit(AuditEvent event)", "full_signature": "@SuppressWarnings(\"unchecked\") public void audit(AuditEvent event)", "class_method_signature": "Log4jAuditor.audit(AuditEvent event)", "testcase": false, "constructor": false, "invocations": ["initFromMDC", "getName", "getAction", "setProperty", "getUsername", "setProperty", "getSession", "setProperty", "getIp", "getAllAppenders", "hasMoreElements", "doAppend", "nextElement"]}, "repository": {"repo_id": 115276927, "url": "https://github.com/decebals/auditor", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 8, "size": 50, "license": "licensed"}}