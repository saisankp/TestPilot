{"test_class": {"identifier": "EnumColorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Color COLOR_A_0 = Color.RED;", "modifier": "private", "type": "Color", "declarator": "COLOR_A_0 = Color.RED", "var_name": "COLOR_A_0"}, {"original_string": "private Color COLOR_B_0 = Color.GREEN;", "modifier": "private", "type": "Color", "declarator": "COLOR_B_0 = Color.GREEN", "var_name": "COLOR_B_0"}, {"original_string": "private Color COLOR_C_0 = Color.BLUE;", "modifier": "private", "type": "Color", "declarator": "COLOR_C_0 = Color.BLUE", "var_name": "COLOR_C_0"}, {"original_string": "private Color COLOR_A_1 = Color.BLACK;", "modifier": "private", "type": "Color", "declarator": "COLOR_A_1 = Color.BLACK", "var_name": "COLOR_A_1"}, {"original_string": "private Color COLOR_B_1 = Color.GRAY;", "modifier": "private", "type": "Color", "declarator": "COLOR_B_1 = Color.GRAY", "var_name": "COLOR_B_1"}, {"original_string": "private Color COLOR_C_1 = Color.WHITE;", "modifier": "private", "type": "Color", "declarator": "COLOR_C_1 = Color.WHITE", "var_name": "COLOR_C_1"}], "file": "adt-ui/src/test/java/com/android/tools/adtui/common/EnumColorsTest.java"}, "test_case": {"identifier": "createSimpleColorGroupUsingBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void createSimpleColorGroupUsingBuilder() throws Exception {\n    EnumColors<TestStates> g = new EnumColors.Builder<TestStates>(1)\n      .add(TestStates.A, COLOR_A_0)\n      .add(TestStates.B, COLOR_B_0)\n      .add(TestStates.C, COLOR_C_0)\n      .build();\n    assertThat(g.getColor(TestStates.A)).isEqualTo(COLOR_A_0);\n    assertThat(g.getColor(TestStates.B)).isEqualTo(COLOR_B_0);\n    assertThat(g.getColor(TestStates.C)).isEqualTo(COLOR_C_0);\n  }", "signature": "void createSimpleColorGroupUsingBuilder()", "full_signature": "@Test public void createSimpleColorGroupUsingBuilder()", "class_method_signature": "EnumColorsTest.createSimpleColorGroupUsingBuilder()", "testcase": true, "constructor": false, "invocations": ["build", "add", "add", "add", "isEqualTo", "assertThat", "getColor", "isEqualTo", "assertThat", "getColor", "isEqualTo", "assertThat", "getColor"]}, "focal_class": {"identifier": "EnumColors", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull\n  private final Map<E, List<Color>> myColors;", "modifier": "@NotNull\n  private final", "type": "Map<E, List<Color>>", "declarator": "myColors", "var_name": "myColors"}, {"original_string": "private int myColorIndex;", "modifier": "private", "type": "int", "declarator": "myColorIndex", "var_name": "myColorIndex"}], "methods": [{"identifier": "EnumColors", "parameters": "(@NotNull Map<E, Color> colors)", "modifiers": "public", "return": "", "signature": " EnumColors(@NotNull Map<E, Color> colors)", "full_signature": "public  EnumColors(@NotNull Map<E, Color> colors)", "class_method_signature": "EnumColors.EnumColors(@NotNull Map<E, Color> colors)", "testcase": false, "constructor": true}, {"identifier": "EnumColors", "parameters": "(@NotNull Builder<E> builder)", "modifiers": "private", "return": "", "signature": " EnumColors(@NotNull Builder<E> builder)", "full_signature": "private  EnumColors(@NotNull Builder<E> builder)", "class_method_signature": "EnumColors.EnumColors(@NotNull Builder<E> builder)", "testcase": false, "constructor": true}, {"identifier": "getColor", "parameters": "(@NotNull E type)", "modifiers": "@NotNull public", "return": "Color", "signature": "Color getColor(@NotNull E type)", "full_signature": "@NotNull public Color getColor(@NotNull E type)", "class_method_signature": "EnumColors.getColor(@NotNull E type)", "testcase": false, "constructor": false}, {"identifier": "setColorIndex", "parameters": "(int colorIndex)", "modifiers": "public", "return": "void", "signature": "void setColorIndex(int colorIndex)", "full_signature": "public void setColorIndex(int colorIndex)", "class_method_signature": "EnumColors.setColorIndex(int colorIndex)", "testcase": false, "constructor": false}], "file": "adt-ui/src/main/java/com/android/tools/adtui/common/EnumColors.java"}, "focal_method": {"identifier": "getColor", "parameters": "(@NotNull E type)", "modifiers": "@NotNull public", "return": "Color", "body": "@NotNull\n  public Color getColor(@NotNull E type) {\n    List<Color> colorList = myColors.get(type);\n    if (colorList == null) {\n      throw new IllegalStateException(\"No colors for value \" + type);\n    }\n    return colorList.get(myColorIndex % colorList.size());\n  }", "signature": "Color getColor(@NotNull E type)", "full_signature": "@NotNull public Color getColor(@NotNull E type)", "class_method_signature": "EnumColors.getColor(@NotNull E type)", "testcase": false, "constructor": false, "invocations": ["get", "get", "size"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}