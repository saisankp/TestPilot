{"test_class": {"identifier": "BusinessObjectFormatExternalInterfaceDaoHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Mock\n    private BusinessObjectFormatDao businessObjectFormatDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatDao", "declarator": "businessObjectFormatDao", "var_name": "businessObjectFormatDao"}, {"original_string": "@Mock\n    private BusinessObjectFormatExternalInterfaceDao businessObjectFormatExternalInterfaceDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatExternalInterfaceDao", "declarator": "businessObjectFormatExternalInterfaceDao", "var_name": "businessObjectFormatExternalInterfaceDao"}, {"original_string": "@InjectMocks\n    private BusinessObjectFormatExternalInterfaceDaoHelper businessObjectFormatExternalInterfaceDaoHelper;", "modifier": "@InjectMocks\n    private", "type": "BusinessObjectFormatExternalInterfaceDaoHelper", "declarator": "businessObjectFormatExternalInterfaceDaoHelper", "var_name": "businessObjectFormatExternalInterfaceDaoHelper"}, {"original_string": "@Mock\n    private ExternalInterfaceDao externalInterfaceDao;", "modifier": "@Mock\n    private", "type": "ExternalInterfaceDao", "declarator": "externalInterfaceDao", "var_name": "externalInterfaceDao"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/BusinessObjectFormatExternalInterfaceDaoHelperTest.java"}, "test_case": {"identifier": "testGetBusinessObjectFormatExternalInterfaceEntityExternalInterfaceNoExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetBusinessObjectFormatExternalInterfaceEntityExternalInterfaceNoExists()\n    {\n        // Create a business object format to external interface mapping key.\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey =\n            new BusinessObjectFormatExternalInterfaceKey(NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, EXTERNAL_INTERFACE);\n\n        // Create a version-less business object format key.\n        BusinessObjectFormatKey businessObjectFormatKey = new BusinessObjectFormatKey(NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, null);\n\n        // Create a business object format entity.\n        BusinessObjectFormatEntity businessObjectFormatEntity = new BusinessObjectFormatEntity();\n\n        // Mock the external calls.\n        when(businessObjectFormatDao.getBusinessObjectFormatByAltKey(businessObjectFormatKey)).thenReturn(businessObjectFormatEntity);\n        when(externalInterfaceDao.getExternalInterfaceByName(EXTERNAL_INTERFACE)).thenReturn(null);\n\n        // Specify the expected exception.\n        expectedException.expect(ObjectNotFoundException.class);\n        expectedException.expectMessage(String.format(\"Business object format to external interface mapping with \\\"%s\\\" namespace, \" +\n            \"\\\"%s\\\" business object definition name, \\\"%s\\\" business object format usage, \\\"%s\\\" business object format file type, and \" +\n            \"\\\"%s\\\" external interface name doesn't exist.\", NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, EXTERNAL_INTERFACE));\n\n        // Call the method under test.\n        businessObjectFormatExternalInterfaceDaoHelper.getBusinessObjectFormatExternalInterfaceEntity(businessObjectFormatExternalInterfaceKey);\n\n        // Verify the external calls.\n        verify(businessObjectFormatDao).getBusinessObjectFormatByAltKey(businessObjectFormatKey);\n        verify(externalInterfaceDao).getExternalInterfaceByName(EXTERNAL_INTERFACE);\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testGetBusinessObjectFormatExternalInterfaceEntityExternalInterfaceNoExists()", "full_signature": "@Test public void testGetBusinessObjectFormatExternalInterfaceEntityExternalInterfaceNoExists()", "class_method_signature": "BusinessObjectFormatExternalInterfaceDaoHelperTest.testGetBusinessObjectFormatExternalInterfaceEntityExternalInterfaceNoExists()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getBusinessObjectFormatByAltKey", "thenReturn", "when", "getExternalInterfaceByName", "expect", "expectMessage", "format", "getBusinessObjectFormatExternalInterfaceEntity", "getBusinessObjectFormatByAltKey", "verify", "getExternalInterfaceByName", "verify", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "BusinessObjectFormatExternalInterfaceDaoHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private BusinessObjectFormatDao businessObjectFormatDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatDao", "declarator": "businessObjectFormatDao", "var_name": "businessObjectFormatDao"}, {"original_string": "@Autowired\n    private BusinessObjectFormatExternalInterfaceDao businessObjectFormatExternalInterfaceDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatExternalInterfaceDao", "declarator": "businessObjectFormatExternalInterfaceDao", "var_name": "businessObjectFormatExternalInterfaceDao"}, {"original_string": "@Autowired\n    private ExternalInterfaceDao externalInterfaceDao;", "modifier": "@Autowired\n    private", "type": "ExternalInterfaceDao", "declarator": "externalInterfaceDao", "var_name": "externalInterfaceDao"}], "methods": [{"identifier": "getBusinessObjectFormatExternalInterfaceEntity", "parameters": "(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "modifiers": "public", "return": "BusinessObjectFormatExternalInterfaceEntity", "signature": "BusinessObjectFormatExternalInterfaceEntity getBusinessObjectFormatExternalInterfaceEntity(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "full_signature": "public BusinessObjectFormatExternalInterfaceEntity getBusinessObjectFormatExternalInterfaceEntity(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "class_method_signature": "BusinessObjectFormatExternalInterfaceDaoHelper.getBusinessObjectFormatExternalInterfaceEntity(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/BusinessObjectFormatExternalInterfaceDaoHelper.java"}, "focal_method": {"identifier": "getBusinessObjectFormatExternalInterfaceEntity", "parameters": "(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "modifiers": "public", "return": "BusinessObjectFormatExternalInterfaceEntity", "body": "public BusinessObjectFormatExternalInterfaceEntity getBusinessObjectFormatExternalInterfaceEntity(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)\n    {\n        // Get a business object format entity. Since business object format to external interface\n        // mapping is version-less, retrieve the latest version of the business object format.\n        BusinessObjectFormatEntity businessObjectFormatEntity = businessObjectFormatDao.getBusinessObjectFormatByAltKey(\n            new BusinessObjectFormatKey(businessObjectFormatExternalInterfaceKey.getNamespace(),\n                businessObjectFormatExternalInterfaceKey.getBusinessObjectDefinitionName(),\n                businessObjectFormatExternalInterfaceKey.getBusinessObjectFormatUsage(),\n                businessObjectFormatExternalInterfaceKey.getBusinessObjectFormatFileType(), null));\n\n        // If business object format exists, then try to retrieve specified external interface.\n        ExternalInterfaceEntity externalInterfaceEntity = null;\n        if (businessObjectFormatEntity != null)\n        {\n            externalInterfaceEntity = externalInterfaceDao.getExternalInterfaceByName(businessObjectFormatExternalInterfaceKey.getExternalInterfaceName());\n        }\n\n        // If business object format and external interface both exist, then try to retrieve business object format to external interface mapping.\n        BusinessObjectFormatExternalInterfaceEntity businessObjectFormatExternalInterfaceEntity = null;\n        if (externalInterfaceEntity != null)\n        {\n            businessObjectFormatExternalInterfaceEntity = businessObjectFormatExternalInterfaceDao\n                .getBusinessObjectFormatExternalInterfaceByBusinessObjectFormatAndExternalInterface(businessObjectFormatEntity, externalInterfaceEntity);\n        }\n\n        // Throw an exception if specified business object format to external interface mapping does not exist.\n        if (businessObjectFormatExternalInterfaceEntity == null)\n        {\n            throw new ObjectNotFoundException(String.format(\n                \"Business object format to external interface mapping with \\\"%s\\\" namespace, \\\"%s\\\" business object definition name, \" +\n                    \"\\\"%s\\\" business object format usage, \\\"%s\\\" business object format file type, and \\\"%s\\\" external interface name doesn't exist.\",\n                businessObjectFormatExternalInterfaceKey.getNamespace(), businessObjectFormatExternalInterfaceKey.getBusinessObjectDefinitionName(),\n                businessObjectFormatExternalInterfaceKey.getBusinessObjectFormatUsage(),\n                businessObjectFormatExternalInterfaceKey.getBusinessObjectFormatFileType(),\n                businessObjectFormatExternalInterfaceKey.getExternalInterfaceName()));\n        }\n\n        return businessObjectFormatExternalInterfaceEntity;\n    }", "signature": "BusinessObjectFormatExternalInterfaceEntity getBusinessObjectFormatExternalInterfaceEntity(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "full_signature": "public BusinessObjectFormatExternalInterfaceEntity getBusinessObjectFormatExternalInterfaceEntity(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "class_method_signature": "BusinessObjectFormatExternalInterfaceDaoHelper.getBusinessObjectFormatExternalInterfaceEntity(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "testcase": false, "constructor": false, "invocations": ["getBusinessObjectFormatByAltKey", "getNamespace", "getBusinessObjectDefinitionName", "getBusinessObjectFormatUsage", "getBusinessObjectFormatFileType", "getExternalInterfaceByName", "getExternalInterfaceName", "getBusinessObjectFormatExternalInterfaceByBusinessObjectFormatAndExternalInterface", "format", "getNamespace", "getBusinessObjectDefinitionName", "getBusinessObjectFormatUsage", "getBusinessObjectFormatFileType", "getExternalInterfaceName"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}