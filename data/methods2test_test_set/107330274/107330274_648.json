{"test_class": {"identifier": "ErrorResponsesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper mapper = new ObjectMapper();", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}], "file": "titus-common-server/src/test/java/com/netflix/titus/runtime/endpoint/rest/ErrorResponsesTest.java"}, "test_case": {"identifier": "testBuildOfHttpRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildOfHttpRequest() {\n        HttpServletRequest httpRequest = mock(HttpServletRequest.class);\n        when(httpRequest.getServletPath()).thenReturn(\"/servletPath\");\n        when(httpRequest.getPathInfo()).thenReturn(\"/pathInfo\");\n        when(httpRequest.getHeaderNames()).thenReturn(enumerationOf(\"Content-Type\"));\n\n        Map<String, Object> mappedRequest = ErrorResponses.buildHttpRequestContext(httpRequest);\n\n        assertThat(mappedRequest.get(\"relativeURI\"), is(equalTo(\"/servletPath/pathInfo\")));\n    }", "signature": "void testBuildOfHttpRequest()", "full_signature": "@Test public void testBuildOfHttpRequest()", "class_method_signature": "ErrorResponsesTest.testBuildOfHttpRequest()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getServletPath", "thenReturn", "when", "getPathInfo", "thenReturn", "when", "getHeaderNames", "enumerationOf", "buildHttpRequestContext", "assertThat", "get", "is", "equalTo"]}, "focal_class": {"identifier": "ErrorResponses", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ErrorResponses.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ErrorResponses.class)", "var_name": "logger"}, {"original_string": "private static final ObjectMapper errorMapper = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "errorMapper = new ObjectMapper()", "var_name": "errorMapper"}], "methods": [{"identifier": "ErrorResponses", "parameters": "()", "modifiers": "private", "return": "", "signature": " ErrorResponses()", "full_signature": "private  ErrorResponses()", "class_method_signature": "ErrorResponses.ErrorResponses()", "testcase": false, "constructor": true}, {"identifier": "noRequestBody", "parameters": "(HttpServletRequest httpServletRequest)", "modifiers": "public static", "return": "ErrorResponse", "signature": "ErrorResponse noRequestBody(HttpServletRequest httpServletRequest)", "full_signature": "public static ErrorResponse noRequestBody(HttpServletRequest httpServletRequest)", "class_method_signature": "ErrorResponses.noRequestBody(HttpServletRequest httpServletRequest)", "testcase": false, "constructor": false}, {"identifier": "badRequest", "parameters": "(HttpServletRequest httpServletRequest, String message)", "modifiers": "public static", "return": "ErrorResponse", "signature": "ErrorResponse badRequest(HttpServletRequest httpServletRequest, String message)", "full_signature": "public static ErrorResponse badRequest(HttpServletRequest httpServletRequest, String message)", "class_method_signature": "ErrorResponses.badRequest(HttpServletRequest httpServletRequest, String message)", "testcase": false, "constructor": false}, {"identifier": "badRequest", "parameters": "(HttpServletRequest httpServletRequest, String message, Exception cause)", "modifiers": "public static", "return": "ErrorResponse", "signature": "ErrorResponse badRequest(HttpServletRequest httpServletRequest, String message, Exception cause)", "full_signature": "public static ErrorResponse badRequest(HttpServletRequest httpServletRequest, String message, Exception cause)", "class_method_signature": "ErrorResponses.badRequest(HttpServletRequest httpServletRequest, String message, Exception cause)", "testcase": false, "constructor": false}, {"identifier": "badRequest", "parameters": "(HttpServletRequest httpServletRequest, Exception cause)", "modifiers": "public static", "return": "ErrorResponse", "signature": "ErrorResponse badRequest(HttpServletRequest httpServletRequest, Exception cause)", "full_signature": "public static ErrorResponse badRequest(HttpServletRequest httpServletRequest, Exception cause)", "class_method_signature": "ErrorResponses.badRequest(HttpServletRequest httpServletRequest, Exception cause)", "testcase": false, "constructor": false}, {"identifier": "internalServerError", "parameters": "(HttpServletRequest httpServletRequest, Exception cause)", "modifiers": "public static", "return": "ErrorResponse", "signature": "ErrorResponse internalServerError(HttpServletRequest httpServletRequest, Exception cause)", "full_signature": "public static ErrorResponse internalServerError(HttpServletRequest httpServletRequest, Exception cause)", "class_method_signature": "ErrorResponses.internalServerError(HttpServletRequest httpServletRequest, Exception cause)", "testcase": false, "constructor": false}, {"identifier": "sendError", "parameters": "(HttpServletResponse httpServletResponse, ErrorResponse.ErrorResponseBuilder errorResponseBuilder)", "modifiers": "public static", "return": "void", "signature": "void sendError(HttpServletResponse httpServletResponse, ErrorResponse.ErrorResponseBuilder errorResponseBuilder)", "full_signature": "public static void sendError(HttpServletResponse httpServletResponse, ErrorResponse.ErrorResponseBuilder errorResponseBuilder)", "class_method_signature": "ErrorResponses.sendError(HttpServletResponse httpServletResponse, ErrorResponse.ErrorResponseBuilder errorResponseBuilder)", "testcase": false, "constructor": false}, {"identifier": "sendError", "parameters": "(HttpServletResponse httpServletResponse, ErrorResponse errorResponse)", "modifiers": "public static", "return": "void", "signature": "void sendError(HttpServletResponse httpServletResponse, ErrorResponse errorResponse)", "full_signature": "public static void sendError(HttpServletResponse httpServletResponse, ErrorResponse errorResponse)", "class_method_signature": "ErrorResponses.sendError(HttpServletResponse httpServletResponse, ErrorResponse errorResponse)", "testcase": false, "constructor": false}, {"identifier": "toMessageChain", "parameters": "(Throwable cause)", "modifiers": "private static", "return": "String", "signature": "String toMessageChain(Throwable cause)", "full_signature": "private static String toMessageChain(Throwable cause)", "class_method_signature": "ErrorResponses.toMessageChain(Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "getDesiredMessage", "parameters": "(Throwable cause)", "modifiers": "private static", "return": "String", "signature": "String getDesiredMessage(Throwable cause)", "full_signature": "private static String getDesiredMessage(Throwable cause)", "class_method_signature": "ErrorResponses.getDesiredMessage(Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "buildHttpRequestContext", "parameters": "(HttpServletRequest req)", "modifiers": "static", "return": "Map<String, Object>", "signature": "Map<String, Object> buildHttpRequestContext(HttpServletRequest req)", "full_signature": "static Map<String, Object> buildHttpRequestContext(HttpServletRequest req)", "class_method_signature": "ErrorResponses.buildHttpRequestContext(HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "buildWebRequestContext", "parameters": "(WebRequest webRequest)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> buildWebRequestContext(WebRequest webRequest)", "full_signature": "public static Map<String, Object> buildWebRequestContext(WebRequest webRequest)", "class_method_signature": "ErrorResponses.buildWebRequestContext(WebRequest webRequest)", "testcase": false, "constructor": false}, {"identifier": "buildServerContext", "parameters": "()", "modifiers": "static", "return": "Map<String, Object>", "signature": "Map<String, Object> buildServerContext()", "full_signature": "static Map<String, Object> buildServerContext()", "class_method_signature": "ErrorResponses.buildServerContext()", "testcase": false, "constructor": false}, {"identifier": "buildExceptionContext", "parameters": "(Throwable cause)", "modifiers": "static", "return": "List<StackTraceRepresentation>", "signature": "List<StackTraceRepresentation> buildExceptionContext(Throwable cause)", "full_signature": "static List<StackTraceRepresentation> buildExceptionContext(Throwable cause)", "class_method_signature": "ErrorResponses.buildExceptionContext(Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "buildThreadContext", "parameters": "()", "modifiers": "static", "return": "List<String>", "signature": "List<String> buildThreadContext()", "full_signature": "static List<String> buildThreadContext()", "class_method_signature": "ErrorResponses.buildThreadContext()", "testcase": false, "constructor": false}, {"identifier": "isErrorFrameworkClass", "parameters": "(String className)", "modifiers": "private static", "return": "boolean", "signature": "boolean isErrorFrameworkClass(String className)", "full_signature": "private static boolean isErrorFrameworkClass(String className)", "class_method_signature": "ErrorResponses.isErrorFrameworkClass(String className)", "testcase": false, "constructor": false}], "file": "titus-common-server/src/main/java/com/netflix/titus/runtime/endpoint/rest/ErrorResponses.java"}, "focal_method": {"identifier": "buildHttpRequestContext", "parameters": "(HttpServletRequest req)", "modifiers": "static", "return": "Map<String, Object>", "body": "static Map<String, Object> buildHttpRequestContext(HttpServletRequest req) {\n        Map<String, Object> result = new TreeMap<>();\n\n        StringBuilder uriBuilder = new StringBuilder(req.getServletPath());\n        if (req.getPathInfo() != null) {\n            uriBuilder.append(req.getPathInfo());\n        }\n        if (req.getQueryString() != null) {\n            uriBuilder.append('?').append(req.getQueryString());\n        }\n        result.put(\"relativeURI\", uriBuilder.toString());\n        result.put(\"method\", req.getMethod());\n\n        Enumeration<String> headerIt = req.getHeaderNames();\n        while (headerIt.hasMoreElements()) {\n            String header = headerIt.nextElement();\n            result.put(header, req.getHeader(header));\n        }\n\n        return result;\n    }", "signature": "Map<String, Object> buildHttpRequestContext(HttpServletRequest req)", "full_signature": "static Map<String, Object> buildHttpRequestContext(HttpServletRequest req)", "class_method_signature": "ErrorResponses.buildHttpRequestContext(HttpServletRequest req)", "testcase": false, "constructor": false, "invocations": ["getServletPath", "getPathInfo", "append", "getPathInfo", "getQueryString", "append", "append", "getQueryString", "put", "toString", "put", "getMethod", "getHeaderNames", "hasMoreElements", "nextElement", "put", "getHeader"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}