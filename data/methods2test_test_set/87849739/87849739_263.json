{"test_class": {"identifier": "DefaultConnectionMetricsCounterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultConnectionMetricsCounter underTest;", "modifier": "private", "type": "DefaultConnectionMetricsCounter", "declarator": "underTest", "var_name": "underTest"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/metrics/DefaultConnectionMetricsCounterTest.java"}, "test_case": {"identifier": "testResetCounter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResetCounter() {\n        // initially counter is expected to be empty\n        assertCounterValues(0L, 0L);\n\n        // record some values\n        recordCounterValues(10, 5);\n\n        // expect the correct counter values\n        assertCounterValues(10L, 5L);\n\n        // reset counter\n        underTest.reset();\n\n        // counter is expected to be empty after reset\n        assertCounterValues(0L, 0L);\n\n        // record some values again\n        recordCounterValues(20, 10);\n        // expect the correct counter values\n        assertCounterValues(20L, 10L);\n    }", "signature": "void testResetCounter()", "full_signature": "@Test public void testResetCounter()", "class_method_signature": "DefaultConnectionMetricsCounterTest.testResetCounter()", "testcase": true, "constructor": false, "invocations": ["assertCounterValues", "recordCounterValues", "assertCounterValues", "reset", "assertCounterValues", "recordCounterValues", "assertCounterValues"]}, "focal_class": {"identifier": "DefaultConnectionMetricsCounter", "superclass": "", "interfaces": "implements ConnectionMetricsCounter", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DefaultConnectionMetricsCounter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DefaultConnectionMetricsCounter.class)", "var_name": "LOGGER"}, {"original_string": "private final MetricDirection metricDirection;", "modifier": "private final", "type": "MetricDirection", "declarator": "metricDirection", "var_name": "metricDirection"}, {"original_string": "private final String address;", "modifier": "private final", "type": "String", "declarator": "address", "var_name": "address"}, {"original_string": "private final MetricType metricType;", "modifier": "private final", "type": "MetricType", "declarator": "metricType", "var_name": "metricType"}, {"original_string": "private final SlidingWindowCounter counter;", "modifier": "private final", "type": "SlidingWindowCounter", "declarator": "counter", "var_name": "counter"}], "methods": [{"identifier": "DefaultConnectionMetricsCounter", "parameters": "(\n            final MetricDirection metricDirection,\n            final String address,\n            final MetricType metricType,\n            SlidingWindowCounter counter)", "modifiers": "", "return": "", "signature": " DefaultConnectionMetricsCounter(\n            final MetricDirection metricDirection,\n            final String address,\n            final MetricType metricType,\n            SlidingWindowCounter counter)", "full_signature": "  DefaultConnectionMetricsCounter(\n            final MetricDirection metricDirection,\n            final String address,\n            final MetricType metricType,\n            SlidingWindowCounter counter)", "class_method_signature": "DefaultConnectionMetricsCounter.DefaultConnectionMetricsCounter(\n            final MetricDirection metricDirection,\n            final String address,\n            final MetricType metricType,\n            SlidingWindowCounter counter)", "testcase": false, "constructor": true}, {"identifier": "recordSuccess", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void recordSuccess()", "full_signature": "@Override public void recordSuccess()", "class_method_signature": "DefaultConnectionMetricsCounter.recordSuccess()", "testcase": false, "constructor": false}, {"identifier": "recordFailure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void recordFailure()", "full_signature": "@Override public void recordFailure()", "class_method_signature": "DefaultConnectionMetricsCounter.recordFailure()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "DefaultConnectionMetricsCounter.reset()", "testcase": false, "constructor": false}, {"identifier": "logAction", "parameters": "(final String action)", "modifiers": "private", "return": "void", "signature": "void logAction(final String action)", "full_signature": "private void logAction(final String action)", "class_method_signature": "DefaultConnectionMetricsCounter.logAction(final String action)", "testcase": false, "constructor": false}, {"identifier": "getMetricType", "parameters": "()", "modifiers": "@Override public", "return": "MetricType", "signature": "MetricType getMetricType()", "full_signature": "@Override public MetricType getMetricType()", "class_method_signature": "DefaultConnectionMetricsCounter.getMetricType()", "testcase": false, "constructor": false}, {"identifier": "getMetricDirection", "parameters": "()", "modifiers": "", "return": "MetricDirection", "signature": "MetricDirection getMetricDirection()", "full_signature": " MetricDirection getMetricDirection()", "class_method_signature": "DefaultConnectionMetricsCounter.getMetricDirection()", "testcase": false, "constructor": false}, {"identifier": "getAddress", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getAddress()", "full_signature": " String getAddress()", "class_method_signature": "DefaultConnectionMetricsCounter.getAddress()", "testcase": false, "constructor": false}, {"identifier": "toMeasurement", "parameters": "(final boolean success)", "modifiers": "", "return": "Measurement", "signature": "Measurement toMeasurement(final boolean success)", "full_signature": " Measurement toMeasurement(final boolean success)", "class_method_signature": "DefaultConnectionMetricsCounter.toMeasurement(final boolean success)", "testcase": false, "constructor": false}, {"identifier": "getLastMessageTimestamp", "parameters": "(final boolean success)", "modifiers": "private", "return": "Instant", "signature": "Instant getLastMessageTimestamp(final boolean success)", "full_signature": "private Instant getLastMessageTimestamp(final boolean success)", "class_method_signature": "DefaultConnectionMetricsCounter.getLastMessageTimestamp(final boolean success)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "DefaultConnectionMetricsCounter.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultConnectionMetricsCounter.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultConnectionMetricsCounter.toString()", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/metrics/DefaultConnectionMetricsCounter.java"}, "focal_method": {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void reset() {\n        logAction(\"Reset counter\");\n        counter.reset();\n    }", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "DefaultConnectionMetricsCounter.reset()", "testcase": false, "constructor": false, "invocations": ["logAction", "reset"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}