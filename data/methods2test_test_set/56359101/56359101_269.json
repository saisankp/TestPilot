{"test_class": {"identifier": "HttpUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpUtils spy;", "modifier": "private", "type": "HttpUtils", "declarator": "spy", "var_name": "spy"}, {"original_string": "private URL url;", "modifier": "private", "type": "URL", "declarator": "url", "var_name": "url"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/utils/HttpUtilsTest.java"}, "test_case": {"identifier": "wakeHaltedHostUsingHttpGetTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void wakeHaltedHostUsingHttpGetTest() throws Exception {\n        Mockito.doReturn(\"result\").when(spy).executeHttpGetRequest(Mockito.any(URL.class));\n        String result = spy.wakeHaltedHostUsingHttpGet(\"systemVmIp\", \"hostMac\");\n        verifyWakeHaltedHostUsingHttpGetTest(\"result\", result);\n    }", "signature": "void wakeHaltedHostUsingHttpGetTest()", "full_signature": "@Test public void wakeHaltedHostUsingHttpGetTest()", "class_method_signature": "HttpUtilsTest.wakeHaltedHostUsingHttpGetTest()", "testcase": true, "constructor": false, "invocations": ["executeHttpGetRequest", "when", "doReturn", "any", "wakeHaltedHostUsingHttpGet", "verifyWakeHaltedHostUsingHttpGetTest"]}, "focal_class": {"identifier": "HttpUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}], "methods": [{"identifier": "wakeHaltedHostUsingHttpGet", "parameters": "(String systemVmIp, String hostMac)", "modifiers": "public", "return": "String", "signature": "String wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "full_signature": "public String wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "class_method_signature": "HttpUtils.wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "testcase": false, "constructor": false}, {"identifier": "executeHttpGetRequest", "parameters": "(URL url)", "modifiers": "public", "return": "String", "signature": "String executeHttpGetRequest(URL url)", "full_signature": "public String executeHttpGetRequest(URL url)", "class_method_signature": "HttpUtils.executeHttpGetRequest(URL url)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/utils/HttpUtils.java"}, "focal_method": {"identifier": "wakeHaltedHostUsingHttpGet", "parameters": "(String systemVmIp, String hostMac)", "modifiers": "public", "return": "String", "body": "public String wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac) {\n        try {\n            URL url = new URL(String.format(\"http://%s:8080/boot/wakeonlan/%s\", systemVmIp, hostMac));\n            return executeHttpGetRequest(url);\n        } catch (IOException e) {\n            logger.debug(String.format(\"Error while calling Wakeonlan service for host mac address[%s]\", hostMac), e);\n            return e.getMessage();\n        }\n    }", "signature": "String wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "full_signature": "public String wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "class_method_signature": "HttpUtils.wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "testcase": false, "constructor": false, "invocations": ["format", "executeHttpGetRequest", "debug", "format", "getMessage"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}