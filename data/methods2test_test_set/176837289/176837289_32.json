{"test_class": {"identifier": "HybridProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<String> SCOPES = List.of(\"https://www.googleapis.com/auth/devstorage.read_write\");", "modifier": "private static final", "type": "List<String>", "declarator": "SCOPES = List.of(\"https://www.googleapis.com/auth/devstorage.read_write\")", "var_name": "SCOPES"}, {"original_string": "private final static String projectId = AppSettings.getInstance().getString(AppSettings.GCP_PROJECT);", "modifier": "private final static", "type": "String", "declarator": "projectId = AppSettings.getInstance().getString(AppSettings.GCP_PROJECT)", "var_name": "projectId"}, {"original_string": "@ClassRule\n    public static SettingsOverride settingsOverride = new SettingsOverride(Map.of(\n        AppSettings.USER_MAPPER, \"com.google.cloud.broker.usermapping.MockUserMapper\",\n        AppSettings.HYBRID_USER_PROVIDER, \"com.google.cloud.broker.apps.brokerserver.accesstokens.providers.MockProvider\"\n    ));", "modifier": "@ClassRule\n    public static", "type": "SettingsOverride", "declarator": "settingsOverride = new SettingsOverride(Map.of(\n        AppSettings.USER_MAPPER, \"com.google.cloud.broker.usermapping.MockUserMapper\",\n        AppSettings.HYBRID_USER_PROVIDER, \"com.google.cloud.broker.apps.brokerserver.accesstokens.providers.MockProvider\"\n    ))", "var_name": "settingsOverride"}], "file": "code/broker-server/src/test/java/com/google/cloud/broker/apps/brokerserver/accesstokens/providers/HybridProviderTest.java"}, "test_case": {"identifier": "testServiceAccount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testServiceAccount() {\n        HybridProvider provider = new HybridProvider();\n        AccessToken accessToken = provider.getAccessToken(\"alice-shadow@\" + projectId + \".iam.gserviceaccount.com\", SCOPES);\n        assertTrue(accessToken.getValue().startsWith(\"y\"));\n        assertEquals(2, CharMatcher.is('.').countIn(accessToken.getValue()));\n        assertTrue(accessToken.getExpiresAt() > 0);\n    }", "signature": "void testServiceAccount()", "full_signature": "@Test public void testServiceAccount()", "class_method_signature": "HybridProviderTest.testServiceAccount()", "testcase": true, "constructor": false, "invocations": ["getAccessToken", "assertTrue", "startsWith", "getValue", "assertEquals", "countIn", "is", "getValue", "assertTrue", "getExpiresAt"]}, "focal_class": {"identifier": "HybridProvider", "superclass": "extends AbstractProvider", "interfaces": "", "fields": [{"original_string": "AbstractUserProvider userProvider;", "modifier": "", "type": "AbstractUserProvider", "declarator": "userProvider", "var_name": "userProvider"}, {"original_string": "ServiceAccountProvider serviceAccountProvider;", "modifier": "", "type": "ServiceAccountProvider", "declarator": "serviceAccountProvider", "var_name": "serviceAccountProvider"}], "methods": [{"identifier": "HybridProvider", "parameters": "()", "modifiers": "public", "return": "", "signature": " HybridProvider()", "full_signature": "public  HybridProvider()", "class_method_signature": "HybridProvider.HybridProvider()", "testcase": false, "constructor": true}, {"identifier": "getAccessToken", "parameters": "(String googleIdentity, List<String> scopes)", "modifiers": "@Override public", "return": "AccessToken", "signature": "AccessToken getAccessToken(String googleIdentity, List<String> scopes)", "full_signature": "@Override public AccessToken getAccessToken(String googleIdentity, List<String> scopes)", "class_method_signature": "HybridProvider.getAccessToken(String googleIdentity, List<String> scopes)", "testcase": false, "constructor": false}], "file": "code/broker-server/src/main/java/com/google/cloud/broker/apps/brokerserver/accesstokens/providers/HybridProvider.java"}, "focal_method": {"identifier": "getAccessToken", "parameters": "(String googleIdentity, List<String> scopes)", "modifiers": "@Override public", "return": "AccessToken", "body": "@Override\n    public AccessToken getAccessToken(String googleIdentity, List<String> scopes) {\n        if (googleIdentity.endsWith(\".iam.gserviceaccount.com\")) {\n            return serviceAccountProvider.getAccessToken(googleIdentity, scopes);\n        }\n        else {\n            return userProvider.getAccessToken(googleIdentity, scopes);\n        }\n    }", "signature": "AccessToken getAccessToken(String googleIdentity, List<String> scopes)", "full_signature": "@Override public AccessToken getAccessToken(String googleIdentity, List<String> scopes)", "class_method_signature": "HybridProvider.getAccessToken(String googleIdentity, List<String> scopes)", "testcase": false, "constructor": false, "invocations": ["endsWith", "getAccessToken", "getAccessToken"]}, "repository": {"repo_id": 176837289, "url": "https://github.com/GoogleCloudPlatform/gcp-token-broker", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 27, "size": 1700, "license": "licensed"}}