{"test_class": {"identifier": "AnalyzeImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "sqlitebuilder/src/test/java/com/nhaarman/sqlitebuilder/impl/AnalyzeImplTest.java"}, "test_case": {"identifier": "appendEmptyAnalyze_appendsProperSql", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void appendEmptyAnalyze_appendsProperSql() {\n    /* Given */\n    AnalyzeImpl analyze = new AnalyzeImpl();\n    RawSqlBuilder builder = new RawSqlBuilderImpl();\n\n    /* When */\n    analyze.prependTo(builder);\n\n    /* Then */\n    assertThat(builder.toString(), is(\"ANALYZE\"));\n  }", "signature": "void appendEmptyAnalyze_appendsProperSql()", "full_signature": "@Test public void appendEmptyAnalyze_appendsProperSql()", "class_method_signature": "AnalyzeImplTest.appendEmptyAnalyze_appendsProperSql()", "testcase": true, "constructor": false, "invocations": ["prependTo", "assertThat", "toString", "is"]}, "focal_class": {"identifier": "AnalyzeImpl", "superclass": "extends BaseFinishedStatement", "interfaces": "implements Analyze", "fields": [{"original_string": "@Nullable\n  private String mDatabaseName;", "modifier": "@Nullable\n  private", "type": "String", "declarator": "mDatabaseName", "var_name": "mDatabaseName"}, {"original_string": "@Nullable\n  private String mTableOrIndexName;", "modifier": "@Nullable\n  private", "type": "String", "declarator": "mTableOrIndexName", "var_name": "mTableOrIndexName"}], "methods": [{"identifier": "database", "parameters": "(@NotNull final String databaseName)", "modifiers": "@Override public", "return": "AnalyzeImpl", "signature": "AnalyzeImpl database(@NotNull final String databaseName)", "full_signature": "@Override public AnalyzeImpl database(@NotNull final String databaseName)", "class_method_signature": "AnalyzeImpl.database(@NotNull final String databaseName)", "testcase": false, "constructor": false}, {"identifier": "tableOrIndex", "parameters": "(@NotNull final String tableOrIndexName)", "modifiers": "@Override public", "return": "AnalyzeImpl", "signature": "AnalyzeImpl tableOrIndex(@NotNull final String tableOrIndexName)", "full_signature": "@Override public AnalyzeImpl tableOrIndex(@NotNull final String tableOrIndexName)", "class_method_signature": "AnalyzeImpl.tableOrIndex(@NotNull final String tableOrIndexName)", "testcase": false, "constructor": false}, {"identifier": "databaseAndTableOrIndex", "parameters": "(@NotNull final String databaseName, @NotNull final String tableOrIndexName)", "modifiers": "@Override public", "return": "AnalyzeImpl", "signature": "AnalyzeImpl databaseAndTableOrIndex(@NotNull final String databaseName, @NotNull final String tableOrIndexName)", "full_signature": "@Override public AnalyzeImpl databaseAndTableOrIndex(@NotNull final String databaseName, @NotNull final String tableOrIndexName)", "class_method_signature": "AnalyzeImpl.databaseAndTableOrIndex(@NotNull final String databaseName, @NotNull final String tableOrIndexName)", "testcase": false, "constructor": false}, {"identifier": "prependTo", "parameters": "(@NotNull final RawSqlBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void prependTo(@NotNull final RawSqlBuilder builder)", "full_signature": "@Override public void prependTo(@NotNull final RawSqlBuilder builder)", "class_method_signature": "AnalyzeImpl.prependTo(@NotNull final RawSqlBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "SqlPart", "signature": "SqlPart previous()", "full_signature": "@Nullable @Override public SqlPart previous()", "class_method_signature": "AnalyzeImpl.previous()", "testcase": false, "constructor": false}], "file": "sqlitebuilder/src/main/java/com/nhaarman/sqlitebuilder/impl/AnalyzeImpl.java"}, "focal_method": {"identifier": "prependTo", "parameters": "(@NotNull final RawSqlBuilder builder)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void prependTo(@NotNull final RawSqlBuilder builder) {\n    if (mTableOrIndexName != null) {\n      builder.prepend(mTableOrIndexName);\n      builder.prepend(mDatabaseName == null ? ' ' : '.');\n    }\n\n    if (mDatabaseName != null) {\n      builder.prepend(mDatabaseName).prepend(' ');\n    }\n\n    builder.prepend(\"ANALYZE\");\n  }", "signature": "void prependTo(@NotNull final RawSqlBuilder builder)", "full_signature": "@Override public void prependTo(@NotNull final RawSqlBuilder builder)", "class_method_signature": "AnalyzeImpl.prependTo(@NotNull final RawSqlBuilder builder)", "testcase": false, "constructor": false, "invocations": ["prepend", "prepend", "prepend", "prepend", "prepend"]}, "repository": {"repo_id": 35126599, "url": "https://github.com/nhaarman/SQLiteBuilder", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 69, "size": 1040, "license": "licensed"}}