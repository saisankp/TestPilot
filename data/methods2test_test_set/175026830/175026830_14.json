{"test_class": {"identifier": "EmailUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "jmap-mua-util/src/test/java/rs/ltt/jmap/mua/util/EmailUtilTest.java"}, "test_case": {"identifier": "secondResponseSubjectExcessWhitespace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void secondResponseSubjectExcessWhitespace() {\n        Assert.assertEquals(\n                \"Re: Hello\",\n                EmailUtil.getResponseSubject(\n                        Email.builder()\n                                .subject(\"RE:    Hello  \")\n                                .build()\n                )\n        );\n    }", "signature": "void secondResponseSubjectExcessWhitespace()", "full_signature": "@Test public void secondResponseSubjectExcessWhitespace()", "class_method_signature": "EmailUtilTest.secondResponseSubjectExcessWhitespace()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getResponseSubject", "build", "subject", "builder"]}, "focal_class": {"identifier": "EmailUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RESPONSE_PREFIX = \"Re\";", "modifier": "private static final", "type": "String", "declarator": "RESPONSE_PREFIX = \"Re\"", "var_name": "RESPONSE_PREFIX"}, {"original_string": "private static final List<String> RESPONSE_PREFIXES = Arrays.asList(\"re\", \"aw\");", "modifier": "private static final", "type": "List<String>", "declarator": "RESPONSE_PREFIXES = Arrays.asList(\"re\", \"aw\")", "var_name": "RESPONSE_PREFIXES"}], "methods": [{"identifier": "EmailUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " EmailUtil()", "full_signature": "private  EmailUtil()", "class_method_signature": "EmailUtil.EmailUtil()", "testcase": false, "constructor": true}, {"identifier": "getResponseSubject", "parameters": "(IdentifiableEmailWithSubject emailWithSubject)", "modifiers": "public static", "return": "String", "signature": "String getResponseSubject(IdentifiableEmailWithSubject emailWithSubject)", "full_signature": "public static String getResponseSubject(IdentifiableEmailWithSubject emailWithSubject)", "class_method_signature": "EmailUtil.getResponseSubject(IdentifiableEmailWithSubject emailWithSubject)", "testcase": false, "constructor": false}, {"identifier": "subjectWithPrefix", "parameters": "(final String subject)", "modifiers": "private static", "return": "String", "signature": "String subjectWithPrefix(final String subject)", "full_signature": "private static String subjectWithPrefix(final String subject)", "class_method_signature": "EmailUtil.subjectWithPrefix(final String subject)", "testcase": false, "constructor": false}, {"identifier": "reply", "parameters": "(IdentifiableEmailWithAddresses emailWithAddresses)", "modifiers": "public static", "return": "ReplyAddresses", "signature": "ReplyAddresses reply(IdentifiableEmailWithAddresses emailWithAddresses)", "full_signature": "public static ReplyAddresses reply(IdentifiableEmailWithAddresses emailWithAddresses)", "class_method_signature": "EmailUtil.reply(IdentifiableEmailWithAddresses emailWithAddresses)", "testcase": false, "constructor": false}, {"identifier": "replyTo", "parameters": "(IdentifiableEmailWithAddresses emailWithAddresses)", "modifiers": "private static", "return": "Collection<EmailAddress>", "signature": "Collection<EmailAddress> replyTo(IdentifiableEmailWithAddresses emailWithAddresses)", "full_signature": "private static Collection<EmailAddress> replyTo(IdentifiableEmailWithAddresses emailWithAddresses)", "class_method_signature": "EmailUtil.replyTo(IdentifiableEmailWithAddresses emailWithAddresses)", "testcase": false, "constructor": false}, {"identifier": "replyAll", "parameters": "(IdentifiableEmailWithAddresses emailWithAddresses)", "modifiers": "public static", "return": "ReplyAddresses", "signature": "ReplyAddresses replyAll(IdentifiableEmailWithAddresses emailWithAddresses)", "full_signature": "public static ReplyAddresses replyAll(IdentifiableEmailWithAddresses emailWithAddresses)", "class_method_signature": "EmailUtil.replyAll(IdentifiableEmailWithAddresses emailWithAddresses)", "testcase": false, "constructor": false}], "file": "jmap-mua-util/src/main/java/rs/ltt/jmap/mua/util/EmailUtil.java"}, "focal_method": {"identifier": "getResponseSubject", "parameters": "(IdentifiableEmailWithSubject emailWithSubject)", "modifiers": "public static", "return": "String", "body": "public static String getResponseSubject(IdentifiableEmailWithSubject emailWithSubject) {\n        final String subject = emailWithSubject.getSubject();\n        final int length = subject.length();\n        if (length <= 3) {\n            return subjectWithPrefix(subject);\n        }\n        final String prefix = subject.substring(0, 3);\n        if (prefix.charAt(2) == ':' && RESPONSE_PREFIXES.contains(prefix.substring(0, 2).toLowerCase())) {\n            return subjectWithPrefix(subject.substring(3));\n        }\n        return subjectWithPrefix(subject);\n    }", "signature": "String getResponseSubject(IdentifiableEmailWithSubject emailWithSubject)", "full_signature": "public static String getResponseSubject(IdentifiableEmailWithSubject emailWithSubject)", "class_method_signature": "EmailUtil.getResponseSubject(IdentifiableEmailWithSubject emailWithSubject)", "testcase": false, "constructor": false, "invocations": ["getSubject", "length", "subjectWithPrefix", "substring", "charAt", "contains", "toLowerCase", "substring", "subjectWithPrefix", "substring", "subjectWithPrefix"]}, "repository": {"repo_id": 175026830, "url": "https://github.com/iNPUTmice/jmap", "stars": 19, "created": "3/11/2019 3:14:44 PM +00:00", "updates": "2020-01-23T18:47:37+00:00", "fork": "False", "license": "licensed"}}