{"test_class": {"identifier": "HaikuReviewTest", "superclass": "", "interfaces": "", "fields": [], "file": "haikuReview/20160223-paul-jose/src/test/java/HaikuReviewTest.java"}, "test_case": {"identifier": "testAlmostWordForLineFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAlmostWordForLineFails(){\n        String text = \"\";\n\n        assertThat(HaikuReview.hasWord(text) ).isEqualTo(false);\n\n    }", "signature": "void testAlmostWordForLineFails()", "full_signature": "@Test public void testAlmostWordForLineFails()", "class_method_signature": "HaikuReviewTest.testAlmostWordForLineFails()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "hasWord"]}, "focal_class": {"identifier": "HaikuReview", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String INPUT_ONE = \"happy purple frog/eating bugs in the marshes/get indigestion\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_ONE = \"happy purple frog/eating bugs in the marshes/get indigestion\"", "var_name": "INPUT_ONE"}, {"original_string": "private static final String INPUT_TWO = \"computer programs/the bugs try to eat my code/i will not let them\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_TWO = \"computer programs/the bugs try to eat my code/i will not let them\"", "var_name": "INPUT_TWO"}], "methods": [{"identifier": "hasThreeLines", "parameters": "(String input)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasThreeLines(String input)", "full_signature": "public static boolean hasThreeLines(String input)", "class_method_signature": "HaikuReview.hasThreeLines(String input)", "testcase": false, "constructor": false}, {"identifier": "hasWord", "parameters": "(String input)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasWord(String input)", "full_signature": "public static boolean hasWord(String input)", "class_method_signature": "HaikuReview.hasWord(String input)", "testcase": false, "constructor": false}, {"identifier": "checkWordsInEachLine", "parameters": "(String haiku)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkWordsInEachLine(String haiku)", "full_signature": "public static boolean checkWordsInEachLine(String haiku)", "class_method_signature": "HaikuReview.checkWordsInEachLine(String haiku)", "testcase": false, "constructor": false}], "file": "haikuReview/20160223-paul-jose/src/main/java/HaikuReview.java"}, "focal_method": {"identifier": "hasWord", "parameters": "(String input)", "modifiers": "public static", "return": "boolean", "body": "public static boolean hasWord(String input) {\n\n        if (input == null) return false;\n\n        return (input.matches(\"[a-z]+\"));\n    }", "signature": "boolean hasWord(String input)", "full_signature": "public static boolean hasWord(String input)", "class_method_signature": "HaikuReview.hasWord(String input)", "testcase": false, "constructor": false, "invocations": ["matches"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}