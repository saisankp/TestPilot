{"test_class": {"identifier": "ActorReceiverCreatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/MessageProcessing/ActorReceiverCreator/src/test/java/info/smart_tools/smartactors/message_processing/actor_receiver_creator/ActorReceiverCreatorTest.java"}, "test_case": {"identifier": "checkMethodExceptionOnWrongArgs", "parameters": "()", "modifiers": "@Test (expected = ObjectCreationException.class) public", "return": "void", "body": "@Test (expected = ObjectCreationException.class)\n    public void checkMethodExceptionOnWrongArgs()\n            throws Exception {\n        IOC.register(\n                IOC.resolve(IOC.getKeyForKeyStorage(), \"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"),\n                new ResolveByNameIocStrategy(\n                        (a) -> {\n                            try {\n                                return new FieldName((String) a[0]);\n                            } catch (Throwable e) {\n                                throw new RuntimeException(\"Could not create new instance of FieldName\", e);\n                            }\n                        }\n                )\n        );\n        ActorReceiverCreator arc = new ActorReceiverCreator();\n        arc.createObject(null, null);\n        fail();\n    }", "signature": "void checkMethodExceptionOnWrongArgs()", "full_signature": "@Test (expected = ObjectCreationException.class) public void checkMethodExceptionOnWrongArgs()", "class_method_signature": "ActorReceiverCreatorTest.checkMethodExceptionOnWrongArgs()", "testcase": true, "constructor": false, "invocations": ["register", "resolve", "getKeyForKeyStorage", "createObject", "fail"]}, "focal_class": {"identifier": "ActorReceiverCreator", "superclass": "", "interfaces": "implements IRoutedObjectCreator", "fields": [{"original_string": "private FieldName name;", "modifier": "private", "type": "FieldName", "declarator": "name", "var_name": "name"}, {"original_string": "private FieldName dependency;", "modifier": "private", "type": "FieldName", "declarator": "dependency", "var_name": "dependency"}], "methods": [{"identifier": "ActorReceiverCreator", "parameters": "()", "modifiers": "public", "return": "", "signature": " ActorReceiverCreator()", "full_signature": "public  ActorReceiverCreator()", "class_method_signature": "ActorReceiverCreator.ActorReceiverCreator()", "testcase": false, "constructor": true}, {"identifier": "createObject", "parameters": "(final IRouter router, final IObject description)", "modifiers": "@Override public", "return": "void", "signature": "void createObject(final IRouter router, final IObject description)", "full_signature": "@Override public void createObject(final IRouter router, final IObject description)", "class_method_signature": "ActorReceiverCreator.createObject(final IRouter router, final IObject description)", "testcase": false, "constructor": false}], "file": "CoreFeatures/MessageProcessing/ActorReceiverCreator/src/main/java/info/smart_tools/smartactors/message_processing/actor_receiver_creator/ActorReceiverCreator.java"}, "focal_method": {"identifier": "createObject", "parameters": "(final IRouter router, final IObject description)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void createObject(final IRouter router, final IObject description)\n            throws ObjectCreationException, InvalidArgumentException {\n        try {\n            Map<Object, IMessageReceiver> handlerReceiversMap = new HashMap<>();\n            IWrapperGenerator wg = IOC.resolve(Keys.getOrAdd(IWrapperGenerator.class.getCanonicalName()));\n            IReceiverGenerator rg = IOC.resolve(Keys.getOrAdd(IReceiverGenerator.class.getCanonicalName()));\n            Object object = IOC.resolve(\n                    Keys.getOrAdd((String) description.getValue(this.dependency)),\n                    description\n            );\n            List<Method> methods = new LinkedList<>(Arrays.asList(object.getClass().getDeclaredMethods()));\n            methods.removeIf(m -> m.isSynthetic() || !Modifier.isPublic(m.getModifiers()));\n            for (Method m : methods) {\n                Class wrapperInterface = m.getParameterTypes()[0];\n                Object wrapper = wg.generate(wrapperInterface);\n                IResolveDependencyStrategy strategy = new SingletonStrategy(wrapper);\n                IMessageReceiver handlerReceiver = rg.generate(object, strategy, m.getName());\n                handlerReceiversMap.put(m.getName(), handlerReceiver);\n            }\n            IMessageReceiver handlerRoutingReceiver = new HandlerRoutingReceiver(handlerReceiversMap);\n            IMessageReceiver actorReceiver = new ActorReceiver(handlerRoutingReceiver);\n            router.register(description.getValue(this.name) , actorReceiver);\n        } catch (Throwable e) {\n            throw new ObjectCreationException(\"Could not create receiver chain.\", e);\n        }\n    }", "signature": "void createObject(final IRouter router, final IObject description)", "full_signature": "@Override public void createObject(final IRouter router, final IObject description)", "class_method_signature": "ActorReceiverCreator.createObject(final IRouter router, final IObject description)", "testcase": false, "constructor": false, "invocations": ["resolve", "getOrAdd", "getCanonicalName", "resolve", "getOrAdd", "getCanonicalName", "resolve", "getOrAdd", "getValue", "asList", "getDeclaredMethods", "getClass", "removeIf", "isSynthetic", "isPublic", "getModifiers", "getParameterTypes", "generate", "generate", "getName", "put", "getName", "register", "getValue"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}