{"test_class": {"identifier": "OFSwitchImplTest", "superclass": "extends FloodlightTestCase", "interfaces": "", "fields": [{"original_string": "protected OFSwitchImpl sw;", "modifier": "protected", "type": "OFSwitchImpl", "declarator": "sw", "var_name": "sw"}], "file": "network-level/fl-ho-nl/src/test/java/net/floodlightcontroller/core/internal/OFSwitchImplTest.java"}, "test_case": {"identifier": "testDeliverRoleReplyNonePending", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeliverRoleReplyNonePending() {\n        // nothing pending \n        expect(sw.channel.close()).andReturn(null);\n        replay(sw.channel);\n        sw.deliverRoleReply(1, Role.MASTER);\n        verify(sw.channel);\n        assertEquals(0, sw.pendingRoleRequests.size());\n    }", "signature": "void testDeliverRoleReplyNonePending()", "full_signature": "@Test public void testDeliverRoleReplyNonePending()", "class_method_signature": "OFSwitchImplTest.testDeliverRoleReplyNonePending()", "testcase": true, "constructor": false, "invocations": ["andReturn", "expect", "close", "replay", "deliverRoleReply", "verify", "assertEquals", "size"]}, "focal_class": {"identifier": "OFSwitchImpl", "superclass": "", "interfaces": "implements IOFSwitch", "fields": [{"original_string": "protected static Logger log = LoggerFactory.getLogger(OFSwitchImpl.class);", "modifier": "protected static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(OFSwitchImpl.class)", "var_name": "log"}, {"original_string": "private static final String HA_CHECK_SWITCH = \n            \"Check the health of the indicated switch.  If the problem \" +\n            \"persists or occurs repeatedly, it likely indicates a defect \" +\n            \"in the switch HA implementation.\";", "modifier": "private static final", "type": "String", "declarator": "HA_CHECK_SWITCH = \n            \"Check the health of the indicated switch.  If the problem \" +\n            \"persists or occurs repeatedly, it likely indicates a defect \" +\n            \"in the switch HA implementation.\"", "var_name": "HA_CHECK_SWITCH"}, {"original_string": "protected ConcurrentMap<Object, Object> attributes;", "modifier": "protected", "type": "ConcurrentMap<Object, Object>", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "protected IFloodlightProviderService floodlightProvider;", "modifier": "protected", "type": "IFloodlightProviderService", "declarator": "floodlightProvider", "var_name": "floodlightProvider"}, {"original_string": "protected IThreadPoolService threadPool;", "modifier": "protected", "type": "IThreadPoolService", "declarator": "threadPool", "var_name": "threadPool"}, {"original_string": "protected Date connectedSince;", "modifier": "protected", "type": "Date", "declarator": "connectedSince", "var_name": "connectedSince"}, {"original_string": "protected String stringId;", "modifier": "protected", "type": "String", "declarator": "stringId", "var_name": "stringId"}, {"original_string": "protected Channel channel;", "modifier": "protected", "type": "Channel", "declarator": "channel", "var_name": "channel"}, {"original_string": "protected AtomicInteger transactionIdSource;", "modifier": "protected", "type": "AtomicInteger", "declarator": "transactionIdSource", "var_name": "transactionIdSource"}, {"original_string": "private Object portLock;", "modifier": "private", "type": "Object", "declarator": "portLock", "var_name": "portLock"}, {"original_string": "protected ConcurrentHashMap<Short, OFPhysicalPort> portsByNumber;", "modifier": "protected", "type": "ConcurrentHashMap<Short, OFPhysicalPort>", "declarator": "portsByNumber", "var_name": "portsByNumber"}, {"original_string": "protected ConcurrentHashMap<String, OFPhysicalPort> portsByName;", "modifier": "protected", "type": "ConcurrentHashMap<String, OFPhysicalPort>", "declarator": "portsByName", "var_name": "portsByName"}, {"original_string": "protected Map<Integer,OFStatisticsFuture> statsFutureMap;", "modifier": "protected", "type": "Map<Integer,OFStatisticsFuture>", "declarator": "statsFutureMap", "var_name": "statsFutureMap"}, {"original_string": "protected Map<Integer, IOFMessageListener> iofMsgListenersMap;", "modifier": "protected", "type": "Map<Integer, IOFMessageListener>", "declarator": "iofMsgListenersMap", "var_name": "iofMsgListenersMap"}, {"original_string": "protected Map<Integer,OFFeaturesReplyFuture> featuresFutureMap;", "modifier": "protected", "type": "Map<Integer,OFFeaturesReplyFuture>", "declarator": "featuresFutureMap", "var_name": "featuresFutureMap"}, {"original_string": "protected boolean connected;", "modifier": "protected", "type": "boolean", "declarator": "connected", "var_name": "connected"}, {"original_string": "protected Role role;", "modifier": "protected", "type": "Role", "declarator": "role", "var_name": "role"}, {"original_string": "protected TimedCache<Long> timedCache;", "modifier": "protected", "type": "TimedCache<Long>", "declarator": "timedCache", "var_name": "timedCache"}, {"original_string": "protected ReentrantReadWriteLock listenerLock;", "modifier": "protected", "type": "ReentrantReadWriteLock", "declarator": "listenerLock", "var_name": "listenerLock"}, {"original_string": "protected ConcurrentMap<Short, Long> portBroadcastCacheHitMap;", "modifier": "protected", "type": "ConcurrentMap<Short, Long>", "declarator": "portBroadcastCacheHitMap", "var_name": "portBroadcastCacheHitMap"}, {"original_string": "protected LinkedList<PendingRoleRequestEntry> pendingRoleRequests;", "modifier": "protected", "type": "LinkedList<PendingRoleRequestEntry>", "declarator": "pendingRoleRequests", "var_name": "pendingRoleRequests"}, {"original_string": "protected int capabilities;", "modifier": "protected", "type": "int", "declarator": "capabilities", "var_name": "capabilities"}, {"original_string": "protected int buffers;", "modifier": "protected", "type": "int", "declarator": "buffers", "var_name": "buffers"}, {"original_string": "protected int actions;", "modifier": "protected", "type": "int", "declarator": "actions", "var_name": "actions"}, {"original_string": "protected byte tables;", "modifier": "protected", "type": "byte", "declarator": "tables", "var_name": "tables"}, {"original_string": "protected long datapathId;", "modifier": "protected", "type": "long", "declarator": "datapathId", "var_name": "datapathId"}, {"original_string": "public static IOFSwitchFeatures switchFeatures;", "modifier": "public static", "type": "IOFSwitchFeatures", "declarator": "switchFeatures", "var_name": "switchFeatures"}, {"original_string": "protected static final ThreadLocal<Map<OFSwitchImpl,List<OFMessage>>> local_msg_buffer =\n            new ThreadLocal<Map<OFSwitchImpl,List<OFMessage>>>() {\n            @Override\n            protected Map<OFSwitchImpl,List<OFMessage>> initialValue() {\n                return new HashMap<OFSwitchImpl,List<OFMessage>>();\n            }\n    };", "modifier": "protected static final", "type": "ThreadLocal<Map<OFSwitchImpl,List<OFMessage>>>", "declarator": "local_msg_buffer =\n            new ThreadLocal<Map<OFSwitchImpl,List<OFMessage>>>() {\n            @Override\n            protected Map<OFSwitchImpl,List<OFMessage>> initialValue() {\n                return new HashMap<OFSwitchImpl,List<OFMessage>>();\n            }\n    }", "var_name": "local_msg_buffer"}, {"original_string": "protected static final int MAX_MACS_PER_SWITCH  = 1000;", "modifier": "protected static final", "type": "int", "declarator": "MAX_MACS_PER_SWITCH  = 1000", "var_name": "MAX_MACS_PER_SWITCH"}], "methods": [{"identifier": "OFSwitchImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " OFSwitchImpl()", "full_signature": "public  OFSwitchImpl()", "class_method_signature": "OFSwitchImpl.OFSwitchImpl()", "testcase": false, "constructor": true}, {"identifier": "getAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getAttribute(String name)", "full_signature": "@Override public Object getAttribute(String name)", "class_method_signature": "OFSwitchImpl.getAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void setAttribute(String name, Object value)", "full_signature": "@Override public void setAttribute(String name, Object value)", "class_method_signature": "OFSwitchImpl.setAttribute(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "removeAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object removeAttribute(String name)", "full_signature": "@Override public Object removeAttribute(String name)", "class_method_signature": "OFSwitchImpl.removeAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "hasAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasAttribute(String name)", "full_signature": "@Override public boolean hasAttribute(String name)", "class_method_signature": "OFSwitchImpl.hasAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "getChannel", "parameters": "()", "modifiers": "@Override @JsonIgnore public", "return": "Channel", "signature": "Channel getChannel()", "full_signature": "@Override @JsonIgnore public Channel getChannel()", "class_method_signature": "OFSwitchImpl.getChannel()", "testcase": false, "constructor": false}, {"identifier": "setChannel", "parameters": "(Channel channel)", "modifiers": "@JsonIgnore public", "return": "void", "signature": "void setChannel(Channel channel)", "full_signature": "@JsonIgnore public void setChannel(Channel channel)", "class_method_signature": "OFSwitchImpl.setChannel(Channel channel)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(OFMessage m, FloodlightContext bc)", "modifiers": "@Override public", "return": "void", "signature": "void write(OFMessage m, FloodlightContext bc)", "full_signature": "@Override public void write(OFMessage m, FloodlightContext bc)", "class_method_signature": "OFSwitchImpl.write(OFMessage m, FloodlightContext bc)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(List<OFMessage> msglist, \n                      FloodlightContext bc)", "modifiers": "@Override @LogMessageDoc(level=\"WARN\", message=\"Sending OF message that modifies switch \" + \"state while in the slave role: {switch}\", explanation=\"An application has sent a message to a switch \" + \"that is not valid when the switch is in a slave role\", recommendation=LogMessageDoc.REPORT_CONTROLLER_BUG) public", "return": "void", "signature": "void write(List<OFMessage> msglist, \n                      FloodlightContext bc)", "full_signature": "@Override @LogMessageDoc(level=\"WARN\", message=\"Sending OF message that modifies switch \" + \"state while in the slave role: {switch}\", explanation=\"An application has sent a message to a switch \" + \"that is not valid when the switch is in a slave role\", recommendation=LogMessageDoc.REPORT_CONTROLLER_BUG) public void write(List<OFMessage> msglist, \n                      FloodlightContext bc)", "class_method_signature": "OFSwitchImpl.write(List<OFMessage> msglist, \n                      FloodlightContext bc)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(List<OFMessage> msglist)", "modifiers": "public", "return": "void", "signature": "void write(List<OFMessage> msglist)", "full_signature": "public void write(List<OFMessage> msglist)", "class_method_signature": "OFSwitchImpl.write(List<OFMessage> msglist)", "testcase": false, "constructor": false}, {"identifier": "disconnectOutputStream", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void disconnectOutputStream()", "full_signature": "@Override public void disconnectOutputStream()", "class_method_signature": "OFSwitchImpl.disconnectOutputStream()", "testcase": false, "constructor": false}, {"identifier": "setFeaturesReply", "parameters": "(OFFeaturesReply featuresReply)", "modifiers": "@Override @JsonIgnore public", "return": "void", "signature": "void setFeaturesReply(OFFeaturesReply featuresReply)", "full_signature": "@Override @JsonIgnore public void setFeaturesReply(OFFeaturesReply featuresReply)", "class_method_signature": "OFSwitchImpl.setFeaturesReply(OFFeaturesReply featuresReply)", "testcase": false, "constructor": false}, {"identifier": "getEnabledPorts", "parameters": "()", "modifiers": "@Override @JsonIgnore public", "return": "Collection<OFPhysicalPort>", "signature": "Collection<OFPhysicalPort> getEnabledPorts()", "full_signature": "@Override @JsonIgnore public Collection<OFPhysicalPort> getEnabledPorts()", "class_method_signature": "OFSwitchImpl.getEnabledPorts()", "testcase": false, "constructor": false}, {"identifier": "getEnabledPortNumbers", "parameters": "()", "modifiers": "@Override @JsonIgnore public", "return": "Collection<Short>", "signature": "Collection<Short> getEnabledPortNumbers()", "full_signature": "@Override @JsonIgnore public Collection<Short> getEnabledPortNumbers()", "class_method_signature": "OFSwitchImpl.getEnabledPortNumbers()", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "(short portNumber)", "modifiers": "@Override public", "return": "OFPhysicalPort", "signature": "OFPhysicalPort getPort(short portNumber)", "full_signature": "@Override public OFPhysicalPort getPort(short portNumber)", "class_method_signature": "OFSwitchImpl.getPort(short portNumber)", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "(String portName)", "modifiers": "@Override public", "return": "OFPhysicalPort", "signature": "OFPhysicalPort getPort(String portName)", "full_signature": "@Override public OFPhysicalPort getPort(String portName)", "class_method_signature": "OFSwitchImpl.getPort(String portName)", "testcase": false, "constructor": false}, {"identifier": "setPort", "parameters": "(OFPhysicalPort port)", "modifiers": "@Override @JsonIgnore public", "return": "void", "signature": "void setPort(OFPhysicalPort port)", "full_signature": "@Override @JsonIgnore public void setPort(OFPhysicalPort port)", "class_method_signature": "OFSwitchImpl.setPort(OFPhysicalPort port)", "testcase": false, "constructor": false}, {"identifier": "getPorts", "parameters": "()", "modifiers": "@Override @JsonProperty(\"ports\") public", "return": "Collection<OFPhysicalPort>", "signature": "Collection<OFPhysicalPort> getPorts()", "full_signature": "@Override @JsonProperty(\"ports\") public Collection<OFPhysicalPort> getPorts()", "class_method_signature": "OFSwitchImpl.getPorts()", "testcase": false, "constructor": false}, {"identifier": "deletePort", "parameters": "(short portNumber)", "modifiers": "@Override public", "return": "void", "signature": "void deletePort(short portNumber)", "full_signature": "@Override public void deletePort(short portNumber)", "class_method_signature": "OFSwitchImpl.deletePort(short portNumber)", "testcase": false, "constructor": false}, {"identifier": "deletePort", "parameters": "(String portName)", "modifiers": "@Override public", "return": "void", "signature": "void deletePort(String portName)", "full_signature": "@Override public void deletePort(String portName)", "class_method_signature": "OFSwitchImpl.deletePort(String portName)", "testcase": false, "constructor": false}, {"identifier": "portEnabled", "parameters": "(short portNumber)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean portEnabled(short portNumber)", "full_signature": "@Override public boolean portEnabled(short portNumber)", "class_method_signature": "OFSwitchImpl.portEnabled(short portNumber)", "testcase": false, "constructor": false}, {"identifier": "portEnabled", "parameters": "(String portName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean portEnabled(String portName)", "full_signature": "@Override public boolean portEnabled(String portName)", "class_method_signature": "OFSwitchImpl.portEnabled(String portName)", "testcase": false, "constructor": false}, {"identifier": "portEnabled", "parameters": "(OFPhysicalPort port)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean portEnabled(OFPhysicalPort port)", "full_signature": "@Override public boolean portEnabled(OFPhysicalPort port)", "class_method_signature": "OFSwitchImpl.portEnabled(OFPhysicalPort port)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override @JsonSerialize(using=DPIDSerializer.class) @JsonProperty(\"dpid\") public", "return": "long", "signature": "long getId()", "full_signature": "@Override @JsonSerialize(using=DPIDSerializer.class) @JsonProperty(\"dpid\") public long getId()", "class_method_signature": "OFSwitchImpl.getId()", "testcase": false, "constructor": false}, {"identifier": "getStringId", "parameters": "()", "modifiers": "@JsonIgnore @Override public", "return": "String", "signature": "String getStringId()", "full_signature": "@JsonIgnore @Override public String getStringId()", "class_method_signature": "OFSwitchImpl.getStringId()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "OFSwitchImpl.toString()", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "()", "modifiers": "@Override public", "return": "ConcurrentMap<Object, Object>", "signature": "ConcurrentMap<Object, Object> getAttributes()", "full_signature": "@Override public ConcurrentMap<Object, Object> getAttributes()", "class_method_signature": "OFSwitchImpl.getAttributes()", "testcase": false, "constructor": false}, {"identifier": "getConnectedSince", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getConnectedSince()", "full_signature": "@Override public Date getConnectedSince()", "class_method_signature": "OFSwitchImpl.getConnectedSince()", "testcase": false, "constructor": false}, {"identifier": "getNextTransactionId", "parameters": "()", "modifiers": "@JsonIgnore @Override public", "return": "int", "signature": "int getNextTransactionId()", "full_signature": "@JsonIgnore @Override public int getNextTransactionId()", "class_method_signature": "OFSwitchImpl.getNextTransactionId()", "testcase": false, "constructor": false}, {"identifier": "sendStatsQuery", "parameters": "(OFStatisticsRequest request, int xid,\n                                IOFMessageListener caller)", "modifiers": "@Override public", "return": "void", "signature": "void sendStatsQuery(OFStatisticsRequest request, int xid,\n                                IOFMessageListener caller)", "full_signature": "@Override public void sendStatsQuery(OFStatisticsRequest request, int xid,\n                                IOFMessageListener caller)", "class_method_signature": "OFSwitchImpl.sendStatsQuery(OFStatisticsRequest request, int xid,\n                                IOFMessageListener caller)", "testcase": false, "constructor": false}, {"identifier": "getStatistics", "parameters": "(OFStatisticsRequest request)", "modifiers": "@Override public", "return": "Future<List<OFStatistics>>", "signature": "Future<List<OFStatistics>> getStatistics(OFStatisticsRequest request)", "full_signature": "@Override public Future<List<OFStatistics>> getStatistics(OFStatisticsRequest request)", "class_method_signature": "OFSwitchImpl.getStatistics(OFStatisticsRequest request)", "testcase": false, "constructor": false}, {"identifier": "deliverStatisticsReply", "parameters": "(OFMessage reply)", "modifiers": "@Override public", "return": "void", "signature": "void deliverStatisticsReply(OFMessage reply)", "full_signature": "@Override public void deliverStatisticsReply(OFMessage reply)", "class_method_signature": "OFSwitchImpl.deliverStatisticsReply(OFMessage reply)", "testcase": false, "constructor": false}, {"identifier": "cancelStatisticsReply", "parameters": "(int transactionId)", "modifiers": "@Override public", "return": "void", "signature": "void cancelStatisticsReply(int transactionId)", "full_signature": "@Override public void cancelStatisticsReply(int transactionId)", "class_method_signature": "OFSwitchImpl.cancelStatisticsReply(int transactionId)", "testcase": false, "constructor": false}, {"identifier": "cancelAllStatisticsReplies", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancelAllStatisticsReplies()", "full_signature": "@Override public void cancelAllStatisticsReplies()", "class_method_signature": "OFSwitchImpl.cancelAllStatisticsReplies()", "testcase": false, "constructor": false}, {"identifier": "setFloodlightProvider", "parameters": "(IFloodlightProviderService floodlightProvider)", "modifiers": "@JsonIgnore public", "return": "void", "signature": "void setFloodlightProvider(IFloodlightProviderService floodlightProvider)", "full_signature": "@JsonIgnore public void setFloodlightProvider(IFloodlightProviderService floodlightProvider)", "class_method_signature": "OFSwitchImpl.setFloodlightProvider(IFloodlightProviderService floodlightProvider)", "testcase": false, "constructor": false}, {"identifier": "setThreadPoolService", "parameters": "(IThreadPoolService tp)", "modifiers": "@JsonIgnore public", "return": "void", "signature": "void setThreadPoolService(IThreadPoolService tp)", "full_signature": "@JsonIgnore public void setThreadPoolService(IThreadPoolService tp)", "class_method_signature": "OFSwitchImpl.setThreadPoolService(IThreadPoolService tp)", "testcase": false, "constructor": false}, {"identifier": "isConnected", "parameters": "()", "modifiers": "@JsonIgnore @Override public synchronized", "return": "boolean", "signature": "boolean isConnected()", "full_signature": "@JsonIgnore @Override public synchronized boolean isConnected()", "class_method_signature": "OFSwitchImpl.isConnected()", "testcase": false, "constructor": false}, {"identifier": "setConnected", "parameters": "(boolean connected)", "modifiers": "@Override @JsonIgnore public synchronized", "return": "void", "signature": "void setConnected(boolean connected)", "full_signature": "@Override @JsonIgnore public synchronized void setConnected(boolean connected)", "class_method_signature": "OFSwitchImpl.setConnected(boolean connected)", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "()", "modifiers": "@Override public", "return": "Role", "signature": "Role getRole()", "full_signature": "@Override public Role getRole()", "class_method_signature": "OFSwitchImpl.getRole()", "testcase": false, "constructor": false}, {"identifier": "isActive", "parameters": "()", "modifiers": "@JsonIgnore @Override public", "return": "boolean", "signature": "boolean isActive()", "full_signature": "@JsonIgnore @Override public boolean isActive()", "class_method_signature": "OFSwitchImpl.isActive()", "testcase": false, "constructor": false}, {"identifier": "setSwitchProperties", "parameters": "(OFDescriptionStatistics description)", "modifiers": "@Override @JsonIgnore public", "return": "void", "signature": "void setSwitchProperties(OFDescriptionStatistics description)", "full_signature": "@Override @JsonIgnore public void setSwitchProperties(OFDescriptionStatistics description)", "class_method_signature": "OFSwitchImpl.setSwitchProperties(OFDescriptionStatistics description)", "testcase": false, "constructor": false}, {"identifier": "clearAllFlowMods", "parameters": "()", "modifiers": "@Override @LogMessageDoc(level=\"ERROR\", message=\"Failed to clear all flows on switch {switch}\", explanation=\"An I/O error occured while trying to clear \" + \"flows on the switch.\", recommendation=LogMessageDoc.CHECK_SWITCH) public", "return": "void", "signature": "void clearAllFlowMods()", "full_signature": "@Override @LogMessageDoc(level=\"ERROR\", message=\"Failed to clear all flows on switch {switch}\", explanation=\"An I/O error occured while trying to clear \" + \"flows on the switch.\", recommendation=LogMessageDoc.CHECK_SWITCH) public void clearAllFlowMods()", "class_method_signature": "OFSwitchImpl.clearAllFlowMods()", "testcase": false, "constructor": false}, {"identifier": "updateBroadcastCache", "parameters": "(Long entry, Short port)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateBroadcastCache(Long entry, Short port)", "full_signature": "@Override public boolean updateBroadcastCache(Long entry, Short port)", "class_method_signature": "OFSwitchImpl.updateBroadcastCache(Long entry, Short port)", "testcase": false, "constructor": false}, {"identifier": "getPortBroadcastHits", "parameters": "()", "modifiers": "@Override @JsonIgnore public", "return": "Map<Short, Long>", "signature": "Map<Short, Long> getPortBroadcastHits()", "full_signature": "@Override @JsonIgnore public Map<Short, Long> getPortBroadcastHits()", "class_method_signature": "OFSwitchImpl.getPortBroadcastHits()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "OFSwitchImpl.flush()", "testcase": false, "constructor": false}, {"identifier": "flush_all", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void flush_all()", "full_signature": "public static void flush_all()", "class_method_signature": "OFSwitchImpl.flush_all()", "testcase": false, "constructor": false}, {"identifier": "getListenerReadLock", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "Lock", "signature": "Lock getListenerReadLock()", "full_signature": "@JsonIgnore public Lock getListenerReadLock()", "class_method_signature": "OFSwitchImpl.getListenerReadLock()", "testcase": false, "constructor": false}, {"identifier": "getListenerWriteLock", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "Lock", "signature": "Lock getListenerWriteLock()", "full_signature": "@JsonIgnore public Lock getListenerWriteLock()", "class_method_signature": "OFSwitchImpl.getListenerWriteLock()", "testcase": false, "constructor": false}, {"identifier": "getInetAddress", "parameters": "()", "modifiers": "@JsonSerialize(using=ToStringSerializer.class) public", "return": "SocketAddress", "signature": "SocketAddress getInetAddress()", "full_signature": "@JsonSerialize(using=ToStringSerializer.class) public SocketAddress getInetAddress()", "class_method_signature": "OFSwitchImpl.getInetAddress()", "testcase": false, "constructor": false}, {"identifier": "sendNxRoleRequest", "parameters": "(Role role, long cookie)", "modifiers": "protected", "return": "int", "signature": "int sendNxRoleRequest(Role role, long cookie)", "full_signature": "protected int sendNxRoleRequest(Role role, long cookie)", "class_method_signature": "OFSwitchImpl.sendNxRoleRequest(Role role, long cookie)", "testcase": false, "constructor": false}, {"identifier": "deliverRoleReply", "parameters": "(int xid, Role role)", "modifiers": "@LogMessageDocs({ @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: received unexpected role reply for \" + \"Role {role}\" + \" Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH), @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: expected role reply with \" + \"Xid {xid}, got {xid}. Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH), @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: expected role reply with \" + \"Role {role}, got {role}. Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH) }) protected", "return": "void", "signature": "void deliverRoleReply(int xid, Role role)", "full_signature": "@LogMessageDocs({ @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: received unexpected role reply for \" + \"Role {role}\" + \" Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH), @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: expected role reply with \" + \"Xid {xid}, got {xid}. Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH), @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: expected role reply with \" + \"Role {role}, got {role}. Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH) }) protected void deliverRoleReply(int xid, Role role)", "class_method_signature": "OFSwitchImpl.deliverRoleReply(int xid, Role role)", "testcase": false, "constructor": false}, {"identifier": "checkFirstPendingRoleRequestXid", "parameters": "(int xid)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkFirstPendingRoleRequestXid(int xid)", "full_signature": "protected boolean checkFirstPendingRoleRequestXid(int xid)", "class_method_signature": "OFSwitchImpl.checkFirstPendingRoleRequestXid(int xid)", "testcase": false, "constructor": false}, {"identifier": "checkFirstPendingRoleRequestCookie", "parameters": "(long cookie)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkFirstPendingRoleRequestCookie(long cookie)", "full_signature": "protected boolean checkFirstPendingRoleRequestCookie(long cookie)", "class_method_signature": "OFSwitchImpl.checkFirstPendingRoleRequestCookie(long cookie)", "testcase": false, "constructor": false}, {"identifier": "deliverRoleRequestNotSupported", "parameters": "(int xid)", "modifiers": "protected", "return": "void", "signature": "void deliverRoleRequestNotSupported(int xid)", "full_signature": "protected void deliverRoleRequestNotSupported(int xid)", "class_method_signature": "OFSwitchImpl.deliverRoleRequestNotSupported(int xid)", "testcase": false, "constructor": false}, {"identifier": "getFeaturesReplyFromSwitch", "parameters": "()", "modifiers": "@Override public", "return": "Future<OFFeaturesReply>", "signature": "Future<OFFeaturesReply> getFeaturesReplyFromSwitch()", "full_signature": "@Override public Future<OFFeaturesReply> getFeaturesReplyFromSwitch()", "class_method_signature": "OFSwitchImpl.getFeaturesReplyFromSwitch()", "testcase": false, "constructor": false}, {"identifier": "deliverOFFeaturesReply", "parameters": "(OFMessage reply)", "modifiers": "@Override public", "return": "void", "signature": "void deliverOFFeaturesReply(OFMessage reply)", "full_signature": "@Override public void deliverOFFeaturesReply(OFMessage reply)", "class_method_signature": "OFSwitchImpl.deliverOFFeaturesReply(OFMessage reply)", "testcase": false, "constructor": false}, {"identifier": "cancelFeaturesReply", "parameters": "(int transactionId)", "modifiers": "@Override public", "return": "void", "signature": "void cancelFeaturesReply(int transactionId)", "full_signature": "@Override public void cancelFeaturesReply(int transactionId)", "class_method_signature": "OFSwitchImpl.cancelFeaturesReply(int transactionId)", "testcase": false, "constructor": false}, {"identifier": "getBuffers", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getBuffers()", "full_signature": "@Override public int getBuffers()", "class_method_signature": "OFSwitchImpl.getBuffers()", "testcase": false, "constructor": false}, {"identifier": "getActions", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getActions()", "full_signature": "@Override public int getActions()", "class_method_signature": "OFSwitchImpl.getActions()", "testcase": false, "constructor": false}, {"identifier": "getCapabilities", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getCapabilities()", "full_signature": "@Override public int getCapabilities()", "class_method_signature": "OFSwitchImpl.getCapabilities()", "testcase": false, "constructor": false}, {"identifier": "getTables", "parameters": "()", "modifiers": "@Override public", "return": "byte", "signature": "byte getTables()", "full_signature": "@Override public byte getTables()", "class_method_signature": "OFSwitchImpl.getTables()", "testcase": false, "constructor": false}], "file": "network-level/fl-ho-nl/src/main/java/net/floodlightcontroller/core/internal/OFSwitchImpl.java"}, "focal_method": {"identifier": "deliverRoleReply", "parameters": "(int xid, Role role)", "modifiers": "@LogMessageDocs({ @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: received unexpected role reply for \" + \"Role {role}\" + \" Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH), @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: expected role reply with \" + \"Xid {xid}, got {xid}. Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH), @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: expected role reply with \" + \"Role {role}, got {role}. Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH) }) protected", "return": "void", "body": "@LogMessageDocs({\n        @LogMessageDoc(level=\"ERROR\",\n                message=\"Switch {switch}: received unexpected role reply for \" +\n                        \"Role {role}\" + \n                        \" Disconnecting switch\",\n                explanation=\"The switch sent an unexpected HA role reply\",\n                recommendation=HA_CHECK_SWITCH),                           \n        @LogMessageDoc(level=\"ERROR\",\n                message=\"Switch {switch}: expected role reply with \" +\n                        \"Xid {xid}, got {xid}. Disconnecting switch\",\n                explanation=\"The switch sent an unexpected HA role reply\",\n                recommendation=HA_CHECK_SWITCH),                           \n        @LogMessageDoc(level=\"ERROR\",\n                message=\"Switch {switch}: expected role reply with \" +\n                        \"Role {role}, got {role}. Disconnecting switch\",\n                explanation=\"The switch sent an unexpected HA role reply\",\n                recommendation=HA_CHECK_SWITCH)                           \n    })\n    protected void deliverRoleReply(int xid, Role role) {\n        synchronized(pendingRoleRequests) {\n            PendingRoleRequestEntry head = pendingRoleRequests.poll();\n            if (head == null) {\n                // Maybe don't disconnect if the role reply we received is \n                // for the same role we are already in. \n                log.error(\"Switch {}: received unexpected role reply for Role {}\" + \n                          \" Disconnecting switch\", this, role );\n                this.channel.close();\n            }\n            else if (head.xid != xid) {\n                // check xid before role!!\n                log.error(\"Switch {}: expected role reply with \" +\n                       \"Xid {}, got {}. Disconnecting switch\",\n                       new Object[] { this, head.xid, xid } );\n                this.channel.close();\n            }\n            else if (head.role != role) {\n                log.error(\"Switch {}: expected role reply with \" +\n                       \"Role {}, got {}. Disconnecting switch\",\n                       new Object[] { this, head.role, role } );\n                this.channel.close();\n            }\n            else {\n                log.debug(\"Received role reply message from {}, setting role to {}\",\n                          this, role);\n                if (this.role == null && getAttribute(SWITCH_SUPPORTS_NX_ROLE) == null) {\n                    // The first role reply we received. Set the attribute\n                    // that the switch supports roles\n                    setAttribute(SWITCH_SUPPORTS_NX_ROLE, true);\n                }\n                this.role = role;\n            }\n        }\n    }", "signature": "void deliverRoleReply(int xid, Role role)", "full_signature": "@LogMessageDocs({ @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: received unexpected role reply for \" + \"Role {role}\" + \" Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH), @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: expected role reply with \" + \"Xid {xid}, got {xid}. Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH), @LogMessageDoc(level=\"ERROR\", message=\"Switch {switch}: expected role reply with \" + \"Role {role}, got {role}. Disconnecting switch\", explanation=\"The switch sent an unexpected HA role reply\", recommendation=HA_CHECK_SWITCH) }) protected void deliverRoleReply(int xid, Role role)", "class_method_signature": "OFSwitchImpl.deliverRoleReply(int xid, Role role)", "testcase": false, "constructor": false, "invocations": ["poll", "error", "close", "error", "close", "error", "close", "debug", "getAttribute", "setAttribute"]}, "repository": {"repo_id": 10459637, "url": "https://github.com/rizard/geni-openflow-vertical-handover", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 33971, "license": "licensed"}}