{"test_class": {"identifier": "ConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private CloseableHttpClient httpc;", "modifier": "@Mock\n    private", "type": "CloseableHttpClient", "declarator": "httpc", "var_name": "httpc"}, {"original_string": "@Mock\n    private PoolingHttpClientConnectionManager clientManager;", "modifier": "@Mock\n    private", "type": "PoolingHttpClientConnectionManager", "declarator": "clientManager", "var_name": "clientManager"}, {"original_string": "@Mock\n    private CloseableHttpAsyncClient asyncClient;", "modifier": "@Mock\n    private", "type": "CloseableHttpAsyncClient", "declarator": "asyncClient", "var_name": "asyncClient"}, {"original_string": "@Mock\n    private AsyncIdleConnectionMonitorThread asyncMonitor;", "modifier": "@Mock\n    private", "type": "AsyncIdleConnectionMonitorThread", "declarator": "asyncMonitor", "var_name": "asyncMonitor"}, {"original_string": "@Mock\n    private PoolingNHttpClientConnectionManager manager;", "modifier": "@Mock\n    private", "type": "PoolingNHttpClientConnectionManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "@InjectMocks\n    private Config config;", "modifier": "@InjectMocks\n    private", "type": "Config", "declarator": "config", "var_name": "config"}], "file": "unirest/src/test/java/kong/unirest/ConfigTest.java"}, "test_case": {"identifier": "testShutdown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShutdown() throws IOException {\n        when(asyncClient.isRunning()).thenReturn(true);\n\n        Unirest.config()\n                .httpClient(new ApacheClient(httpc, null, clientManager))\n                .asyncClient(new ApacheAsyncClient(asyncClient, null, manager, asyncMonitor));\n\n        Unirest.shutDown();\n\n        verify(httpc).close();\n        verify(clientManager).close();\n        verify(asyncClient).close();\n        verify(asyncMonitor).interrupt();\n    }", "signature": "void testShutdown()", "full_signature": "@Test public void testShutdown()", "class_method_signature": "ConfigTest.testShutdown()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isRunning", "asyncClient", "httpClient", "config", "shutDown", "close", "verify", "close", "verify", "close", "verify", "interrupt", "verify"]}, "focal_class": {"identifier": "Config", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_CONNECTION_TIMEOUT = 10000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_CONNECTION_TIMEOUT = 10000", "var_name": "DEFAULT_CONNECTION_TIMEOUT"}, {"original_string": "public static final int DEFAULT_MAX_CONNECTIONS = 200;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_MAX_CONNECTIONS = 200", "var_name": "DEFAULT_MAX_CONNECTIONS"}, {"original_string": "public static final int DEFAULT_MAX_PER_ROUTE = 20;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_MAX_PER_ROUTE = 20", "var_name": "DEFAULT_MAX_PER_ROUTE"}, {"original_string": "public static final int DEFAULT_CONNECT_TIMEOUT = 10000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_CONNECT_TIMEOUT = 10000", "var_name": "DEFAULT_CONNECT_TIMEOUT"}, {"original_string": "public static final int DEFAULT_SOCKET_TIMEOUT = 60000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_SOCKET_TIMEOUT = 60000", "var_name": "DEFAULT_SOCKET_TIMEOUT"}, {"original_string": "private Optional<Client> client = Optional.empty();", "modifier": "private", "type": "Optional<Client>", "declarator": "client = Optional.empty()", "var_name": "client"}, {"original_string": "private Optional<AsyncClient> asyncClient = Optional.empty();", "modifier": "private", "type": "Optional<AsyncClient>", "declarator": "asyncClient = Optional.empty()", "var_name": "asyncClient"}, {"original_string": "private Optional<ObjectMapper> objectMapper = Optional.of(new JsonObjectMapper());", "modifier": "private", "type": "Optional<ObjectMapper>", "declarator": "objectMapper = Optional.of(new JsonObjectMapper())", "var_name": "objectMapper"}, {"original_string": "private List<HttpRequestInterceptor> apacheinterceptors = new ArrayList<>();", "modifier": "private", "type": "List<HttpRequestInterceptor>", "declarator": "apacheinterceptors = new ArrayList<>()", "var_name": "apacheinterceptors"}, {"original_string": "private Headers headers;", "modifier": "private", "type": "Headers", "declarator": "headers", "var_name": "headers"}, {"original_string": "private Proxy proxy;", "modifier": "private", "type": "Proxy", "declarator": "proxy", "var_name": "proxy"}, {"original_string": "private int connectionTimeout;", "modifier": "private", "type": "int", "declarator": "connectionTimeout", "var_name": "connectionTimeout"}, {"original_string": "private int socketTimeout;", "modifier": "private", "type": "int", "declarator": "socketTimeout", "var_name": "socketTimeout"}, {"original_string": "private int maxTotal;", "modifier": "private", "type": "int", "declarator": "maxTotal", "var_name": "maxTotal"}, {"original_string": "private int maxPerRoute;", "modifier": "private", "type": "int", "declarator": "maxPerRoute", "var_name": "maxPerRoute"}, {"original_string": "private boolean followRedirects;", "modifier": "private", "type": "boolean", "declarator": "followRedirects", "var_name": "followRedirects"}, {"original_string": "private boolean cookieManagement;", "modifier": "private", "type": "boolean", "declarator": "cookieManagement", "var_name": "cookieManagement"}, {"original_string": "private boolean useSystemProperties;", "modifier": "private", "type": "boolean", "declarator": "useSystemProperties", "var_name": "useSystemProperties"}, {"original_string": "private String defaultResponseEncoding = StandardCharsets.UTF_8.name();", "modifier": "private", "type": "String", "declarator": "defaultResponseEncoding = StandardCharsets.UTF_8.name()", "var_name": "defaultResponseEncoding"}, {"original_string": "private Function<Config, AsyncClient> asyncBuilder;", "modifier": "private", "type": "Function<Config, AsyncClient>", "declarator": "asyncBuilder", "var_name": "asyncBuilder"}, {"original_string": "private Function<Config, Client> clientBuilder;", "modifier": "private", "type": "Function<Config, Client>", "declarator": "clientBuilder", "var_name": "clientBuilder"}, {"original_string": "private boolean requestCompressionOn = true;", "modifier": "private", "type": "boolean", "declarator": "requestCompressionOn = true", "var_name": "requestCompressionOn"}, {"original_string": "private boolean automaticRetries;", "modifier": "private", "type": "boolean", "declarator": "automaticRetries", "var_name": "automaticRetries"}, {"original_string": "private boolean verifySsl = true;", "modifier": "private", "type": "boolean", "declarator": "verifySsl = true", "var_name": "verifySsl"}, {"original_string": "private boolean addShutdownHook = false;", "modifier": "private", "type": "boolean", "declarator": "addShutdownHook = false", "var_name": "addShutdownHook"}, {"original_string": "private KeyStore keystore;", "modifier": "private", "type": "KeyStore", "declarator": "keystore", "var_name": "keystore"}, {"original_string": "private Supplier<String> keystorePassword = () -> null;", "modifier": "private", "type": "Supplier<String>", "declarator": "keystorePassword = () -> null", "var_name": "keystorePassword"}, {"original_string": "private String cookieSpec;", "modifier": "private", "type": "String", "declarator": "cookieSpec", "var_name": "cookieSpec"}, {"original_string": "private UniMetric metrics = new NoopMetric();", "modifier": "private", "type": "UniMetric", "declarator": "metrics = new NoopMetric()", "var_name": "metrics"}, {"original_string": "private long ttl = -1;", "modifier": "private", "type": "long", "declarator": "ttl = -1", "var_name": "ttl"}, {"original_string": "private SSLContext sslContext;", "modifier": "private", "type": "SSLContext", "declarator": "sslContext", "var_name": "sslContext"}, {"original_string": "private CompoundInterceptor interceptor = new CompoundInterceptor();", "modifier": "private", "type": "CompoundInterceptor", "declarator": "interceptor = new CompoundInterceptor()", "var_name": "interceptor"}, {"original_string": "private HostnameVerifier hostnameVerifier;", "modifier": "private", "type": "HostnameVerifier", "declarator": "hostnameVerifier", "var_name": "hostnameVerifier"}, {"original_string": "private String defaultBaseUrl;", "modifier": "private", "type": "String", "declarator": "defaultBaseUrl", "var_name": "defaultBaseUrl"}, {"original_string": "private CacheManager cache;", "modifier": "private", "type": "CacheManager", "declarator": "cache", "var_name": "cache"}], "methods": [{"identifier": "Config", "parameters": "()", "modifiers": "public", "return": "", "signature": " Config()", "full_signature": "public  Config()", "class_method_signature": "Config.Config()", "testcase": false, "constructor": true}, {"identifier": "setDefaults", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setDefaults()", "full_signature": "private void setDefaults()", "class_method_signature": "Config.setDefaults()", "testcase": false, "constructor": false}, {"identifier": "httpClient", "parameters": "(HttpClient httpClient)", "modifiers": "@Deprecated // use httpClient(Function<Config, Client> httpClient) with the ApacheConfig.builder() public", "return": "Config", "signature": "Config httpClient(HttpClient httpClient)", "full_signature": "@Deprecated // use httpClient(Function<Config, Client> httpClient) with the ApacheConfig.builder() public Config httpClient(HttpClient httpClient)", "class_method_signature": "Config.httpClient(HttpClient httpClient)", "testcase": false, "constructor": false}, {"identifier": "httpClient", "parameters": "(Client httpClient)", "modifiers": "public", "return": "Config", "signature": "Config httpClient(Client httpClient)", "full_signature": "public Config httpClient(Client httpClient)", "class_method_signature": "Config.httpClient(Client httpClient)", "testcase": false, "constructor": false}, {"identifier": "httpClient", "parameters": "(Function<Config, Client> httpClient)", "modifiers": "public", "return": "Config", "signature": "Config httpClient(Function<Config, Client> httpClient)", "full_signature": "public Config httpClient(Function<Config, Client> httpClient)", "class_method_signature": "Config.httpClient(Function<Config, Client> httpClient)", "testcase": false, "constructor": false}, {"identifier": "asyncClient", "parameters": "(HttpAsyncClient value)", "modifiers": "@Deprecated public", "return": "Config", "signature": "Config asyncClient(HttpAsyncClient value)", "full_signature": "@Deprecated public Config asyncClient(HttpAsyncClient value)", "class_method_signature": "Config.asyncClient(HttpAsyncClient value)", "testcase": false, "constructor": false}, {"identifier": "asyncClient", "parameters": "(AsyncClient value)", "modifiers": "public", "return": "Config", "signature": "Config asyncClient(AsyncClient value)", "full_signature": "public Config asyncClient(AsyncClient value)", "class_method_signature": "Config.asyncClient(AsyncClient value)", "testcase": false, "constructor": false}, {"identifier": "asyncClient", "parameters": "(Function<Config, AsyncClient> asyncClientBuilder)", "modifiers": "public", "return": "Config", "signature": "Config asyncClient(Function<Config, AsyncClient> asyncClientBuilder)", "full_signature": "public Config asyncClient(Function<Config, AsyncClient> asyncClientBuilder)", "class_method_signature": "Config.asyncClient(Function<Config, AsyncClient> asyncClientBuilder)", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "(Proxy value)", "modifiers": "public", "return": "Config", "signature": "Config proxy(Proxy value)", "full_signature": "public Config proxy(Proxy value)", "class_method_signature": "Config.proxy(Proxy value)", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "(String host, int port)", "modifiers": "public", "return": "Config", "signature": "Config proxy(String host, int port)", "full_signature": "public Config proxy(String host, int port)", "class_method_signature": "Config.proxy(String host, int port)", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "(String host, int port, String username, String password)", "modifiers": "public", "return": "Config", "signature": "Config proxy(String host, int port, String username, String password)", "full_signature": "public Config proxy(String host, int port, String username, String password)", "class_method_signature": "Config.proxy(String host, int port, String username, String password)", "testcase": false, "constructor": false}, {"identifier": "setObjectMapper", "parameters": "(ObjectMapper om)", "modifiers": "public", "return": "Config", "signature": "Config setObjectMapper(ObjectMapper om)", "full_signature": "public Config setObjectMapper(ObjectMapper om)", "class_method_signature": "Config.setObjectMapper(ObjectMapper om)", "testcase": false, "constructor": false}, {"identifier": "sslContext", "parameters": "(SSLContext ssl)", "modifiers": "public", "return": "Config", "signature": "Config sslContext(SSLContext ssl)", "full_signature": "public Config sslContext(SSLContext ssl)", "class_method_signature": "Config.sslContext(SSLContext ssl)", "testcase": false, "constructor": false}, {"identifier": "hostnameVerifier", "parameters": "(HostnameVerifier value)", "modifiers": "public", "return": "Config", "signature": "Config hostnameVerifier(HostnameVerifier value)", "full_signature": "public Config hostnameVerifier(HostnameVerifier value)", "class_method_signature": "Config.hostnameVerifier(HostnameVerifier value)", "testcase": false, "constructor": false}, {"identifier": "verifySecurityConfig", "parameters": "(Object thing)", "modifiers": "private", "return": "void", "signature": "void verifySecurityConfig(Object thing)", "full_signature": "private void verifySecurityConfig(Object thing)", "class_method_signature": "Config.verifySecurityConfig(Object thing)", "testcase": false, "constructor": false}, {"identifier": "clientCertificateStore", "parameters": "(KeyStore store, String password)", "modifiers": "public", "return": "Config", "signature": "Config clientCertificateStore(KeyStore store, String password)", "full_signature": "public Config clientCertificateStore(KeyStore store, String password)", "class_method_signature": "Config.clientCertificateStore(KeyStore store, String password)", "testcase": false, "constructor": false}, {"identifier": "clientCertificateStore", "parameters": "(String fileLocation, String password)", "modifiers": "public", "return": "Config", "signature": "Config clientCertificateStore(String fileLocation, String password)", "full_signature": "public Config clientCertificateStore(String fileLocation, String password)", "class_method_signature": "Config.clientCertificateStore(String fileLocation, String password)", "testcase": false, "constructor": false}, {"identifier": "connectTimeout", "parameters": "(int inMillies)", "modifiers": "public", "return": "Config", "signature": "Config connectTimeout(int inMillies)", "full_signature": "public Config connectTimeout(int inMillies)", "class_method_signature": "Config.connectTimeout(int inMillies)", "testcase": false, "constructor": false}, {"identifier": "socketTimeout", "parameters": "(int inMillies)", "modifiers": "public", "return": "Config", "signature": "Config socketTimeout(int inMillies)", "full_signature": "public Config socketTimeout(int inMillies)", "class_method_signature": "Config.socketTimeout(int inMillies)", "testcase": false, "constructor": false}, {"identifier": "concurrency", "parameters": "(int total, int perRoute)", "modifiers": "public", "return": "Config", "signature": "Config concurrency(int total, int perRoute)", "full_signature": "public Config concurrency(int total, int perRoute)", "class_method_signature": "Config.concurrency(int total, int perRoute)", "testcase": false, "constructor": false}, {"identifier": "clearDefaultHeaders", "parameters": "()", "modifiers": "public", "return": "Config", "signature": "Config clearDefaultHeaders()", "full_signature": "public Config clearDefaultHeaders()", "class_method_signature": "Config.clearDefaultHeaders()", "testcase": false, "constructor": false}, {"identifier": "setDefaultBasicAuth", "parameters": "(String username, String password)", "modifiers": "public", "return": "Config", "signature": "Config setDefaultBasicAuth(String username, String password)", "full_signature": "public Config setDefaultBasicAuth(String username, String password)", "class_method_signature": "Config.setDefaultBasicAuth(String username, String password)", "testcase": false, "constructor": false}, {"identifier": "setDefaultHeader", "parameters": "(String name, String value)", "modifiers": "public", "return": "Config", "signature": "Config setDefaultHeader(String name, String value)", "full_signature": "public Config setDefaultHeader(String name, String value)", "class_method_signature": "Config.setDefaultHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "setDefaultHeader", "parameters": "(String name, Supplier<String> value)", "modifiers": "public", "return": "Config", "signature": "Config setDefaultHeader(String name, Supplier<String> value)", "full_signature": "public Config setDefaultHeader(String name, Supplier<String> value)", "class_method_signature": "Config.setDefaultHeader(String name, Supplier<String> value)", "testcase": false, "constructor": false}, {"identifier": "addDefaultHeader", "parameters": "(String name, String value)", "modifiers": "public", "return": "Config", "signature": "Config addDefaultHeader(String name, String value)", "full_signature": "public Config addDefaultHeader(String name, String value)", "class_method_signature": "Config.addDefaultHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "instrumentWith", "parameters": "(UniMetric metric)", "modifiers": "public", "return": "Config", "signature": "Config instrumentWith(UniMetric metric)", "full_signature": "public Config instrumentWith(UniMetric metric)", "class_method_signature": "Config.instrumentWith(UniMetric metric)", "testcase": false, "constructor": false}, {"identifier": "errorHandler", "parameters": "(Consumer<HttpResponse<?>> consumer)", "modifiers": "@Deprecated public", "return": "Config", "signature": "Config errorHandler(Consumer<HttpResponse<?>> consumer)", "full_signature": "@Deprecated public Config errorHandler(Consumer<HttpResponse<?>> consumer)", "class_method_signature": "Config.errorHandler(Consumer<HttpResponse<?>> consumer)", "testcase": false, "constructor": false}, {"identifier": "interceptor", "parameters": "(Interceptor value)", "modifiers": "public", "return": "Config", "signature": "Config interceptor(Interceptor value)", "full_signature": "public Config interceptor(Interceptor value)", "class_method_signature": "Config.interceptor(Interceptor value)", "testcase": false, "constructor": false}, {"identifier": "addInterceptor", "parameters": "(HttpRequestInterceptor value)", "modifiers": "@Deprecated public", "return": "Config", "signature": "Config addInterceptor(HttpRequestInterceptor value)", "full_signature": "@Deprecated public Config addInterceptor(HttpRequestInterceptor value)", "class_method_signature": "Config.addInterceptor(HttpRequestInterceptor value)", "testcase": false, "constructor": false}, {"identifier": "followRedirects", "parameters": "(boolean enable)", "modifiers": "public", "return": "Config", "signature": "Config followRedirects(boolean enable)", "full_signature": "public Config followRedirects(boolean enable)", "class_method_signature": "Config.followRedirects(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "enableCookieManagement", "parameters": "(boolean enable)", "modifiers": "public", "return": "Config", "signature": "Config enableCookieManagement(boolean enable)", "full_signature": "public Config enableCookieManagement(boolean enable)", "class_method_signature": "Config.enableCookieManagement(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "verifySsl", "parameters": "(boolean value)", "modifiers": "public", "return": "Config", "signature": "Config verifySsl(boolean value)", "full_signature": "public Config verifySsl(boolean value)", "class_method_signature": "Config.verifySsl(boolean value)", "testcase": false, "constructor": false}, {"identifier": "useSystemProperties", "parameters": "(boolean value)", "modifiers": "public", "return": "Config", "signature": "Config useSystemProperties(boolean value)", "full_signature": "public Config useSystemProperties(boolean value)", "class_method_signature": "Config.useSystemProperties(boolean value)", "testcase": false, "constructor": false}, {"identifier": "requestCompression", "parameters": "(boolean value)", "modifiers": "public", "return": "Config", "signature": "Config requestCompression(boolean value)", "full_signature": "public Config requestCompression(boolean value)", "class_method_signature": "Config.requestCompression(boolean value)", "testcase": false, "constructor": false}, {"identifier": "automaticRetries", "parameters": "(boolean value)", "modifiers": "public", "return": "Config", "signature": "Config automaticRetries(boolean value)", "full_signature": "public Config automaticRetries(boolean value)", "class_method_signature": "Config.automaticRetries(boolean value)", "testcase": false, "constructor": false}, {"identifier": "cookieSpec", "parameters": "(String policy)", "modifiers": "public", "return": "Config", "signature": "Config cookieSpec(String policy)", "full_signature": "public Config cookieSpec(String policy)", "class_method_signature": "Config.cookieSpec(String policy)", "testcase": false, "constructor": false}, {"identifier": "cacheResponses", "parameters": "(boolean value)", "modifiers": "public", "return": "void", "signature": "void cacheResponses(boolean value)", "full_signature": "public void cacheResponses(boolean value)", "class_method_signature": "Config.cacheResponses(boolean value)", "testcase": false, "constructor": false}, {"identifier": "cacheResponses", "parameters": "(Cache.Builder value)", "modifiers": "public", "return": "void", "signature": "void cacheResponses(Cache.Builder value)", "full_signature": "public void cacheResponses(Cache.Builder value)", "class_method_signature": "Config.cacheResponses(Cache.Builder value)", "testcase": false, "constructor": false}, {"identifier": "setDefaultResponseEncoding", "parameters": "(String value)", "modifiers": "public", "return": "Config", "signature": "Config setDefaultResponseEncoding(String value)", "full_signature": "public Config setDefaultResponseEncoding(String value)", "class_method_signature": "Config.setDefaultResponseEncoding(String value)", "testcase": false, "constructor": false}, {"identifier": "connectionTTL", "parameters": "(long duration, TimeUnit unit)", "modifiers": "public", "return": "Config", "signature": "Config connectionTTL(long duration, TimeUnit unit)", "full_signature": "public Config connectionTTL(long duration, TimeUnit unit)", "class_method_signature": "Config.connectionTTL(long duration, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "connectionTTL", "parameters": "(Duration duration)", "modifiers": "public", "return": "Config", "signature": "Config connectionTTL(Duration duration)", "full_signature": "public Config connectionTTL(Duration duration)", "class_method_signature": "Config.connectionTTL(Duration duration)", "testcase": false, "constructor": false}, {"identifier": "addShutdownHook", "parameters": "(boolean value)", "modifiers": "public", "return": "Config", "signature": "Config addShutdownHook(boolean value)", "full_signature": "public Config addShutdownHook(boolean value)", "class_method_signature": "Config.addShutdownHook(boolean value)", "testcase": false, "constructor": false}, {"identifier": "defaultBaseUrl", "parameters": "(String value)", "modifiers": "public", "return": "Config", "signature": "Config defaultBaseUrl(String value)", "full_signature": "public Config defaultBaseUrl(String value)", "class_method_signature": "Config.defaultBaseUrl(String value)", "testcase": false, "constructor": false}, {"identifier": "getDefaultHeaders", "parameters": "()", "modifiers": "public", "return": "Headers", "signature": "Headers getDefaultHeaders()", "full_signature": "public Headers getDefaultHeaders()", "class_method_signature": "Config.getDefaultHeaders()", "testcase": false, "constructor": false}, {"identifier": "isRunning", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRunning()", "full_signature": "public boolean isRunning()", "class_method_signature": "Config.isRunning()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "Config", "signature": "Config reset()", "full_signature": "public Config reset()", "class_method_signature": "Config.reset()", "testcase": false, "constructor": false}, {"identifier": "shutDown", "parameters": "(boolean clearOptions)", "modifiers": "public", "return": "void", "signature": "void shutDown(boolean clearOptions)", "full_signature": "public void shutDown(boolean clearOptions)", "class_method_signature": "Config.shutDown(boolean clearOptions)", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "public", "return": "Client", "signature": "Client getClient()", "full_signature": "public Client getClient()", "class_method_signature": "Config.getClient()", "testcase": false, "constructor": false}, {"identifier": "getFinalClient", "parameters": "()", "modifiers": "private", "return": "Client", "signature": "Client getFinalClient()", "full_signature": "private Client getFinalClient()", "class_method_signature": "Config.getFinalClient()", "testcase": false, "constructor": false}, {"identifier": "buildClient", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void buildClient()", "full_signature": "private synchronized void buildClient()", "class_method_signature": "Config.buildClient()", "testcase": false, "constructor": false}, {"identifier": "getAsyncClient", "parameters": "()", "modifiers": "public", "return": "AsyncClient", "signature": "AsyncClient getAsyncClient()", "full_signature": "public AsyncClient getAsyncClient()", "class_method_signature": "Config.getAsyncClient()", "testcase": false, "constructor": false}, {"identifier": "getFinalAsyncClient", "parameters": "()", "modifiers": "private", "return": "AsyncClient", "signature": "AsyncClient getFinalAsyncClient()", "full_signature": "private AsyncClient getFinalAsyncClient()", "class_method_signature": "Config.getFinalAsyncClient()", "testcase": false, "constructor": false}, {"identifier": "asyncClientIsReady", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean asyncClientIsReady()", "full_signature": "private boolean asyncClientIsReady()", "class_method_signature": "Config.asyncClientIsReady()", "testcase": false, "constructor": false}, {"identifier": "buildAsyncClient", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void buildAsyncClient()", "full_signature": "private synchronized void buildAsyncClient()", "class_method_signature": "Config.buildAsyncClient()", "testcase": false, "constructor": false}, {"identifier": "verifyIsOn", "parameters": "(AsyncClient value)", "modifiers": "private", "return": "void", "signature": "void verifyIsOn(AsyncClient value)", "full_signature": "private void verifyIsOn(AsyncClient value)", "class_method_signature": "Config.verifyIsOn(AsyncClient value)", "testcase": false, "constructor": false}, {"identifier": "getEnabledCookieManagement", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getEnabledCookieManagement()", "full_signature": "public boolean getEnabledCookieManagement()", "class_method_signature": "Config.getEnabledCookieManagement()", "testcase": false, "constructor": false}, {"identifier": "getFollowRedirects", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getFollowRedirects()", "full_signature": "public boolean getFollowRedirects()", "class_method_signature": "Config.getFollowRedirects()", "testcase": false, "constructor": false}, {"identifier": "getMaxConnections", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxConnections()", "full_signature": "public int getMaxConnections()", "class_method_signature": "Config.getMaxConnections()", "testcase": false, "constructor": false}, {"identifier": "getMaxPerRoutes", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxPerRoutes()", "full_signature": "public int getMaxPerRoutes()", "class_method_signature": "Config.getMaxPerRoutes()", "testcase": false, "constructor": false}, {"identifier": "getConnectionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getConnectionTimeout()", "full_signature": "public int getConnectionTimeout()", "class_method_signature": "Config.getConnectionTimeout()", "testcase": false, "constructor": false}, {"identifier": "getSocketTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSocketTimeout()", "full_signature": "public int getSocketTimeout()", "class_method_signature": "Config.getSocketTimeout()", "testcase": false, "constructor": false}, {"identifier": "getKeystore", "parameters": "()", "modifiers": "public", "return": "KeyStore", "signature": "KeyStore getKeystore()", "full_signature": "public KeyStore getKeystore()", "class_method_signature": "Config.getKeystore()", "testcase": false, "constructor": false}, {"identifier": "getKeyStorePassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKeyStorePassword()", "full_signature": "public String getKeyStorePassword()", "class_method_signature": "Config.getKeyStorePassword()", "testcase": false, "constructor": false}, {"identifier": "getObjectMapper", "parameters": "()", "modifiers": "public", "return": "ObjectMapper", "signature": "ObjectMapper getObjectMapper()", "full_signature": "public ObjectMapper getObjectMapper()", "class_method_signature": "Config.getObjectMapper()", "testcase": false, "constructor": false}, {"identifier": "validateClientsNotRunning", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateClientsNotRunning()", "full_signature": "private void validateClientsNotRunning()", "class_method_signature": "Config.validateClientsNotRunning()", "testcase": false, "constructor": false}, {"identifier": "getInterceptor", "parameters": "()", "modifiers": "public", "return": "List<HttpRequestInterceptor>", "signature": "List<HttpRequestInterceptor> getInterceptor()", "full_signature": "public List<HttpRequestInterceptor> getInterceptor()", "class_method_signature": "Config.getInterceptor()", "testcase": false, "constructor": false}, {"identifier": "getProxy", "parameters": "()", "modifiers": "public", "return": "Proxy", "signature": "Proxy getProxy()", "full_signature": "public Proxy getProxy()", "class_method_signature": "Config.getProxy()", "testcase": false, "constructor": false}, {"identifier": "useSystemProperties", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean useSystemProperties()", "full_signature": "public boolean useSystemProperties()", "class_method_signature": "Config.useSystemProperties()", "testcase": false, "constructor": false}, {"identifier": "getDefaultResponseEncoding", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultResponseEncoding()", "full_signature": "public String getDefaultResponseEncoding()", "class_method_signature": "Config.getDefaultResponseEncoding()", "testcase": false, "constructor": false}, {"identifier": "isRequestCompressionOn", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRequestCompressionOn()", "full_signature": "public boolean isRequestCompressionOn()", "class_method_signature": "Config.isRequestCompressionOn()", "testcase": false, "constructor": false}, {"identifier": "isAutomaticRetries", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAutomaticRetries()", "full_signature": "public boolean isAutomaticRetries()", "class_method_signature": "Config.isAutomaticRetries()", "testcase": false, "constructor": false}, {"identifier": "isVerifySsl", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isVerifySsl()", "full_signature": "public boolean isVerifySsl()", "class_method_signature": "Config.isVerifySsl()", "testcase": false, "constructor": false}, {"identifier": "shouldAddShutdownHook", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean shouldAddShutdownHook()", "full_signature": "public boolean shouldAddShutdownHook()", "class_method_signature": "Config.shouldAddShutdownHook()", "testcase": false, "constructor": false}, {"identifier": "getCookieSpec", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCookieSpec()", "full_signature": "public String getCookieSpec()", "class_method_signature": "Config.getCookieSpec()", "testcase": false, "constructor": false}, {"identifier": "getMetric", "parameters": "()", "modifiers": "public", "return": "UniMetric", "signature": "UniMetric getMetric()", "full_signature": "public UniMetric getMetric()", "class_method_signature": "Config.getMetric()", "testcase": false, "constructor": false}, {"identifier": "getTTL", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTTL()", "full_signature": "public long getTTL()", "class_method_signature": "Config.getTTL()", "testcase": false, "constructor": false}, {"identifier": "getUniInterceptor", "parameters": "()", "modifiers": "public", "return": "Interceptor", "signature": "Interceptor getUniInterceptor()", "full_signature": "public Interceptor getUniInterceptor()", "class_method_signature": "Config.getUniInterceptor()", "testcase": false, "constructor": false}, {"identifier": "getErrorHandler", "parameters": "()", "modifiers": "@Deprecated public", "return": "Consumer<HttpResponse<?>>", "signature": "Consumer<HttpResponse<?>> getErrorHandler()", "full_signature": "@Deprecated public Consumer<HttpResponse<?>> getErrorHandler()", "class_method_signature": "Config.getErrorHandler()", "testcase": false, "constructor": false}, {"identifier": "getSslContext", "parameters": "()", "modifiers": "public", "return": "SSLContext", "signature": "SSLContext getSslContext()", "full_signature": "public SSLContext getSslContext()", "class_method_signature": "Config.getSslContext()", "testcase": false, "constructor": false}, {"identifier": "getDefaultInterceptor", "parameters": "()", "modifiers": "private", "return": "Optional<DefaultInterceptor>", "signature": "Optional<DefaultInterceptor> getDefaultInterceptor()", "full_signature": "private Optional<DefaultInterceptor> getDefaultInterceptor()", "class_method_signature": "Config.getDefaultInterceptor()", "testcase": false, "constructor": false}, {"identifier": "getHostnameVerifier", "parameters": "()", "modifiers": "public", "return": "HostnameVerifier", "signature": "HostnameVerifier getHostnameVerifier()", "full_signature": "public HostnameVerifier getHostnameVerifier()", "class_method_signature": "Config.getHostnameVerifier()", "testcase": false, "constructor": false}, {"identifier": "getDefaultBaseUrl", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getDefaultBaseUrl()", "full_signature": " String getDefaultBaseUrl()", "class_method_signature": "Config.getDefaultBaseUrl()", "testcase": false, "constructor": false}], "file": "unirest/src/main/java/kong/unirest/Config.java"}, "focal_method": {"identifier": "shutDown", "parameters": "(boolean clearOptions)", "modifiers": "public", "return": "void", "body": "public void shutDown(boolean clearOptions) {\n        List<Exception> ex = Stream.concat(\n                client.map(Client::close).orElseGet(Stream::empty),\n                asyncClient.map(AsyncClient::close).orElseGet(Stream::empty)\n        ).collect(Collectors.toList());\n\n        client = Optional.empty();\n        asyncClient = Optional.empty();\n\n        if (clearOptions) {\n            setDefaults();\n        }\n\n        if (!ex.isEmpty()) {\n            throw new UnirestException(ex);\n        }\n    }", "signature": "void shutDown(boolean clearOptions)", "full_signature": "public void shutDown(boolean clearOptions)", "class_method_signature": "Config.shutDown(boolean clearOptions)", "testcase": false, "constructor": false, "invocations": ["collect", "concat", "orElseGet", "map", "orElseGet", "map", "toList", "empty", "empty", "setDefaults", "isEmpty"]}, "repository": {"repo_id": 1601209, "url": "https://github.com/Kong/unirest-java", "stars": 1855, "created": "4/11/2011 9:19:53 PM +00:00", "updates": "2020-01-25T12:07:58+00:00", "fork": "False", "license": "licensed"}}