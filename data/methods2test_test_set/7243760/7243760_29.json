{"test_class": {"identifier": "TestRingBufferSimple", "superclass": "", "interfaces": "", "fields": [], "file": "base/src/test/java/com/barchart/feed/base/collections/TestRingBufferSimple.java"}, "test_case": {"identifier": "testAsMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAsMap() {\n\n\t\tfinal RingBuffer<Integer> ring = new RingBufferSimple<Integer>(10);\n\t\tassertEquals(ring.length(), 10);\n\n\t\tring.setHead(100, 100);\n\n\t\tfor (int k = 101; k < 110; k++) {\n\t\t\tring.set(k, k);\n\t\t}\n\n\t\tring.set(102, null);\n\t\tring.set(107, null);\n\t\tassertEquals(ring.count(), 8);\n\n\t\tfinal Map<Integer, Integer> map = ring.asMap();\n\n\t\tassertEquals(map.size(), ring.count());\n\n\t\t// SortedMap<Integer, Integer> map1 = new TreeMap<Integer,\n\t\t// Integer>(map);\n\n\t\tfor (int k = 100; k < 110; k++) {\n\t\t\tfinal Integer ringItem = ring.get(k);\n\t\t\tfinal Integer mapItem = map.get(k);\n\t\t\tassertEquals(ringItem, mapItem);\n\t\t}\n\n\t}", "signature": "void testAsMap()", "full_signature": "@Test public void testAsMap()", "class_method_signature": "TestRingBufferSimple.testAsMap()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "length", "setHead", "set", "set", "set", "assertEquals", "count", "asMap", "assertEquals", "size", "count", "get", "get", "assertEquals"]}, "focal_class": {"identifier": "RingBufferSimple", "superclass": "extends RingBufferBase<V>", "interfaces": "", "fields": [{"original_string": "protected final V[] array;", "modifier": "protected final", "type": "V[]", "declarator": "array", "var_name": "array"}], "methods": [{"identifier": "length", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int length()", "full_signature": "@Override public final int length()", "class_method_signature": "RingBufferSimple.length()", "testcase": false, "constructor": false}, {"identifier": "arrayGet", "parameters": "(final int clue)", "modifiers": "@Override protected final", "return": "V", "signature": "V arrayGet(final int clue)", "full_signature": "@Override protected final V arrayGet(final int clue)", "class_method_signature": "RingBufferSimple.arrayGet(final int clue)", "testcase": false, "constructor": false}, {"identifier": "arraySet", "parameters": "(final int clue, final V value)", "modifiers": "@Override protected final", "return": "void", "signature": "void arraySet(final int clue, final V value)", "full_signature": "@Override protected final void arraySet(final int clue, final V value)", "class_method_signature": "RingBufferSimple.arraySet(final int clue, final V value)", "testcase": false, "constructor": false}, {"identifier": "RingBufferSimple", "parameters": "(final int size)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " RingBufferSimple(final int size)", "full_signature": "@SuppressWarnings(\"unchecked\") public  RingBufferSimple(final int size)", "class_method_signature": "RingBufferSimple.RingBufferSimple(final int size)", "testcase": false, "constructor": true}, {"identifier": "isEmpty", "parameters": "(final int clue)", "modifiers": "@Override protected final", "return": "boolean", "signature": "boolean isEmpty(final int clue)", "full_signature": "@Override protected final boolean isEmpty(final int clue)", "class_method_signature": "RingBufferSimple.isEmpty(final int clue)", "testcase": false, "constructor": false}], "file": "base/src/main/java/com/barchart/feed/base/collections/RingBufferSimple.java"}, "focal_method": {"identifier": "length", "parameters": "()", "modifiers": "@Override public final", "return": "int", "body": "@Override\n\tpublic final int length() {\n\t\treturn array.length;\n\t}", "signature": "int length()", "full_signature": "@Override public final int length()", "class_method_signature": "RingBufferSimple.length()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7243760, "url": "https://github.com/barchart/barchart-feed", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 64172, "license": "licensed"}}