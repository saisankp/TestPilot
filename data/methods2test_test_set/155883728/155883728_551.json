{"test_class": {"identifier": "ItemFacadeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Session session;", "modifier": "@Mock", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "JcrSessionFacade sessionFacade;", "modifier": "", "type": "JcrSessionFacade", "declarator": "sessionFacade", "var_name": "sessionFacade"}], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/ItemFacadeTest.java"}, "test_case": {"identifier": "testGetDepth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDepth() throws Exception {\n        Item delegate = mock(Item.class);\n        ItemFacade<Item, Session> facade = getFacade(delegate);\n        final int value = 4;\n        when(delegate.getDepth()).thenReturn(value);\n        assertEquals(\"same value\", value, facade.getDepth());\n    }", "signature": "void testGetDepth()", "full_signature": "@Test public void testGetDepth()", "class_method_signature": "ItemFacadeTest.testGetDepth()", "testcase": true, "constructor": false, "invocations": ["mock", "getFacade", "thenReturn", "when", "getDepth", "assertEquals", "getDepth"]}, "focal_class": {"identifier": "ItemFacade", "superclass": "", "interfaces": "implements Item", "fields": [{"original_string": "protected final @NotNull J delegate;", "modifier": "protected final @NotNull", "type": "J", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "protected final @NotNull SessionFacade<S> session;", "modifier": "protected final @NotNull", "type": "SessionFacade<S>", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "ItemFacade", "parameters": "(final @NotNull J delegate, final @NotNull SessionFacade<S> session)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " ItemFacade(final @NotNull J delegate, final @NotNull SessionFacade<S> session)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  ItemFacade(final @NotNull J delegate, final @NotNull SessionFacade<S> session)", "class_method_signature": "ItemFacade.ItemFacade(final @NotNull J delegate, final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "ensureBestWrapper", "parameters": "(final @NotNull Item primaryItem, final @NotNull SessionFacade<?> session)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static @NotNull", "return": "Item", "signature": "Item ensureBestWrapper(final @NotNull Item primaryItem, final @NotNull SessionFacade<?> session)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static @NotNull Item ensureBestWrapper(final @NotNull Item primaryItem, final @NotNull SessionFacade<?> session)", "class_method_signature": "ItemFacade.ensureBestWrapper(final @NotNull Item primaryItem, final @NotNull SessionFacade<?> session)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(final @Nullable Item item)", "modifiers": "static @Nullable", "return": "Item", "signature": "Item unwrap(final @Nullable Item item)", "full_signature": "static @Nullable Item unwrap(final @Nullable Item item)", "class_method_signature": "ItemFacade.unwrap(final @Nullable Item item)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getPath()", "full_signature": "@Override public final String getPath()", "class_method_signature": "ItemFacade.getPath()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getName()", "full_signature": "@Override public final String getName()", "class_method_signature": "ItemFacade.getName()", "testcase": false, "constructor": false}, {"identifier": "getAncestor", "parameters": "(int depth)", "modifiers": "@Override public final", "return": "Item", "signature": "Item getAncestor(int depth)", "full_signature": "@Override public final Item getAncestor(int depth)", "class_method_signature": "ItemFacade.getAncestor(int depth)", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "@Override public final", "return": "Node", "signature": "Node getParent()", "full_signature": "@Override public final Node getParent()", "class_method_signature": "ItemFacade.getParent()", "testcase": false, "constructor": false}, {"identifier": "getDepth", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int getDepth()", "full_signature": "@Override public final int getDepth()", "class_method_signature": "ItemFacade.getDepth()", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "()", "modifiers": "@Override public final", "return": "Session", "signature": "Session getSession()", "full_signature": "@Override public final Session getSession()", "class_method_signature": "ItemFacade.getSession()", "testcase": false, "constructor": false}, {"identifier": "isNode", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isNode()", "full_signature": "@Override public final boolean isNode()", "class_method_signature": "ItemFacade.isNode()", "testcase": false, "constructor": false}, {"identifier": "isNew", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isNew()", "full_signature": "@Override public final boolean isNew()", "class_method_signature": "ItemFacade.isNew()", "testcase": false, "constructor": false}, {"identifier": "isModified", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isModified()", "full_signature": "@Override public final boolean isModified()", "class_method_signature": "ItemFacade.isModified()", "testcase": false, "constructor": false}, {"identifier": "isSame", "parameters": "(Item otherItem)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isSame(Item otherItem)", "full_signature": "@Override public final boolean isSame(Item otherItem)", "class_method_signature": "ItemFacade.isSame(Item otherItem)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(ItemVisitor visitor)", "modifiers": "@Override public final", "return": "void", "signature": "void accept(ItemVisitor visitor)", "full_signature": "@Override public final void accept(ItemVisitor visitor)", "class_method_signature": "ItemFacade.accept(ItemVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(boolean keepChanges)", "modifiers": "@Override public final", "return": "void", "signature": "void refresh(boolean keepChanges)", "full_signature": "@Override public final void refresh(boolean keepChanges)", "class_method_signature": "ItemFacade.refresh(boolean keepChanges)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void save()", "full_signature": "@Override public final void save()", "class_method_signature": "ItemFacade.save()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void remove()", "full_signature": "@Override public final void remove()", "class_method_signature": "ItemFacade.remove()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/ItemFacade.java"}, "focal_method": {"identifier": "getDepth", "parameters": "()", "modifiers": "@Override public final", "return": "int", "body": "@Override\n    public final int getDepth() throws RepositoryException {\n        return delegate.getDepth();\n    }", "signature": "int getDepth()", "full_signature": "@Override public final int getDepth()", "class_method_signature": "ItemFacade.getDepth()", "testcase": false, "constructor": false, "invocations": ["getDepth"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}