{"test_class": {"identifier": "TestLifecycleController", "superclass": "", "interfaces": "", "fields": [], "file": "flume-ng-core/src/test/java/org/apache/flume/lifecycle/TestLifecycleController.java"}, "test_case": {"identifier": "testWaitForOneOf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testWaitForOneOf() throws LifecycleException,\n      InterruptedException {\n\n    LifecycleAware delegate = new SleeperLifecycleDelegate();\n\n    Assert.assertEquals(LifecycleState.IDLE, delegate.getLifecycleState());\n\n    delegate.start();\n\n    boolean reached = LifecycleController.waitForOneOf(delegate,\n        new LifecycleState[] { LifecycleState.STOP, LifecycleState.START },\n        2000);\n\n    Assert.assertTrue(\"Matched a state change\", reached);\n    Assert.assertEquals(LifecycleState.START, delegate.getLifecycleState());\n  }", "signature": "void testWaitForOneOf()", "full_signature": "@Test public void testWaitForOneOf()", "class_method_signature": "TestLifecycleController.testWaitForOneOf()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getLifecycleState", "start", "waitForOneOf", "assertTrue", "assertEquals", "getLifecycleState"]}, "focal_class": {"identifier": "LifecycleController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory\n      .getLogger(LifecycleController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory\n      .getLogger(LifecycleController.class)", "var_name": "logger"}, {"original_string": "private static final long shortestSleepDuration = 50;", "modifier": "private static final", "type": "long", "declarator": "shortestSleepDuration = 50", "var_name": "shortestSleepDuration"}, {"original_string": "private static final int maxNumberOfChecks = 5;", "modifier": "private static final", "type": "int", "declarator": "maxNumberOfChecks = 5", "var_name": "maxNumberOfChecks"}], "methods": [{"identifier": "waitForState", "parameters": "(LifecycleAware delegate,\n      LifecycleState state)", "modifiers": "public static", "return": "boolean", "signature": "boolean waitForState(LifecycleAware delegate,\n      LifecycleState state)", "full_signature": "public static boolean waitForState(LifecycleAware delegate,\n      LifecycleState state)", "class_method_signature": "LifecycleController.waitForState(LifecycleAware delegate,\n      LifecycleState state)", "testcase": false, "constructor": false}, {"identifier": "waitForState", "parameters": "(LifecycleAware delegate,\n      LifecycleState state, long timeout)", "modifiers": "public static", "return": "boolean", "signature": "boolean waitForState(LifecycleAware delegate,\n      LifecycleState state, long timeout)", "full_signature": "public static boolean waitForState(LifecycleAware delegate,\n      LifecycleState state, long timeout)", "class_method_signature": "LifecycleController.waitForState(LifecycleAware delegate,\n      LifecycleState state, long timeout)", "testcase": false, "constructor": false}, {"identifier": "waitForOneOf", "parameters": "(LifecycleAware delegate,\n      LifecycleState[] states)", "modifiers": "public static", "return": "boolean", "signature": "boolean waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states)", "full_signature": "public static boolean waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states)", "class_method_signature": "LifecycleController.waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states)", "testcase": false, "constructor": false}, {"identifier": "waitForOneOf", "parameters": "(LifecycleAware delegate,\n      LifecycleState[] states, long timeout)", "modifiers": "public static", "return": "boolean", "signature": "boolean waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states, long timeout)", "full_signature": "public static boolean waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states, long timeout)", "class_method_signature": "LifecycleController.waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states, long timeout)", "testcase": false, "constructor": false}, {"identifier": "stopAll", "parameters": "(List<LifecycleAware> services)", "modifiers": "public static", "return": "void", "signature": "void stopAll(List<LifecycleAware> services)", "full_signature": "public static void stopAll(List<LifecycleAware> services)", "class_method_signature": "LifecycleController.stopAll(List<LifecycleAware> services)", "testcase": false, "constructor": false}], "file": "flume-ng-core/src/main/java/org/apache/flume/lifecycle/LifecycleController.java"}, "focal_method": {"identifier": "waitForOneOf", "parameters": "(LifecycleAware delegate,\n      LifecycleState[] states)", "modifiers": "public static", "return": "boolean", "body": "public static boolean waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states) throws InterruptedException {\n\n    return waitForOneOf(delegate, states, 0);\n  }", "signature": "boolean waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states)", "full_signature": "public static boolean waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states)", "class_method_signature": "LifecycleController.waitForOneOf(LifecycleAware delegate,\n      LifecycleState[] states)", "testcase": false, "constructor": false, "invocations": ["waitForOneOf"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}