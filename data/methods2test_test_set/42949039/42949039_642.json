{"test_class": {"identifier": "EmrHelperServiceImplTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AwsServiceHelper awsServiceHelper;", "modifier": "@Mock\n    private", "type": "AwsServiceHelper", "declarator": "awsServiceHelper", "var_name": "awsServiceHelper"}, {"original_string": "@Mock\n    private ConfigurationHelper configurationHelper;", "modifier": "@Mock\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Mock\n    private EmrClusterDefinitionDaoHelper emrClusterDefinitionDaoHelper;", "modifier": "@Mock\n    private", "type": "EmrClusterDefinitionDaoHelper", "declarator": "emrClusterDefinitionDaoHelper", "var_name": "emrClusterDefinitionDaoHelper"}, {"original_string": "@Mock\n    private EmrClusterDefinitionHelper emrClusterDefinitionHelper;", "modifier": "@Mock\n    private", "type": "EmrClusterDefinitionHelper", "declarator": "emrClusterDefinitionHelper", "var_name": "emrClusterDefinitionHelper"}, {"original_string": "@Mock\n    private EmrDao emrDao;", "modifier": "@Mock\n    private", "type": "EmrDao", "declarator": "emrDao", "var_name": "emrDao"}, {"original_string": "@Mock\n    private EmrHelper emrHelper;", "modifier": "@Mock\n    private", "type": "EmrHelper", "declarator": "emrHelper", "var_name": "emrHelper"}, {"original_string": "@InjectMocks\n    private EmrHelperServiceImpl emrHelperServiceImpl;", "modifier": "@InjectMocks\n    private", "type": "EmrHelperServiceImpl", "declarator": "emrHelperServiceImpl", "var_name": "emrHelperServiceImpl"}, {"original_string": "@Mock\n    private EmrPricingHelper emrPricingHelper;", "modifier": "@Mock\n    private", "type": "EmrPricingHelper", "declarator": "emrPricingHelper", "var_name": "emrPricingHelper"}, {"original_string": "@Mock\n    private HerdDao herdDao;", "modifier": "@Mock\n    private", "type": "HerdDao", "declarator": "herdDao", "var_name": "herdDao"}, {"original_string": "@Mock\n    private NamespaceDaoHelper namespaceDaoHelper;", "modifier": "@Mock\n    private", "type": "NamespaceDaoHelper", "declarator": "namespaceDaoHelper", "var_name": "namespaceDaoHelper"}, {"original_string": "@Mock\n    private NamespaceIamRoleAuthorizationHelper namespaceIamRoleAuthorizationHelper;", "modifier": "@Mock\n    private", "type": "NamespaceIamRoleAuthorizationHelper", "declarator": "namespaceIamRoleAuthorizationHelper", "var_name": "namespaceIamRoleAuthorizationHelper"}, {"original_string": "@Mock\n    private XmlHelper xmlHelper;", "modifier": "@Mock\n    private", "type": "XmlHelper", "declarator": "xmlHelper", "var_name": "xmlHelper"}, {"original_string": "@Mock\n    private JsonHelper jsonHelper;", "modifier": "@Mock\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/EmrHelperServiceImplTest.java"}, "test_case": {"identifier": "testLogEmrClusterCreationImpl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLogEmrClusterCreationImpl() throws Exception\n    {\n        // Create a namespace entity.\n        NamespaceEntity namespaceEntity = new NamespaceEntity();\n        namespaceEntity.setCode(NAMESPACE);\n\n        // Create an EMR cluster alternate key DTO\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto = new EmrClusterAlternateKeyDto(NAMESPACE, EMR_CLUSTER_DEFINITION_NAME, EMR_CLUSTER_NAME);\n\n        // Create an EMR cluster definition object\n        EmrClusterDefinition emrClusterDefinition = new EmrClusterDefinition();\n\n        // Mock the external calls.\n        when(namespaceDaoHelper.getNamespaceEntity(NAMESPACE)).thenReturn(namespaceEntity);\n        when(xmlHelper.objectToXml(emrClusterDefinition)).thenReturn(EMR_CLUSTER_DEFINITION_XML_FILE_MINIMAL_CLASSPATH);\n\n        // Call the method under test.\n        emrHelperServiceImpl.logEmrClusterCreation(emrClusterAlternateKeyDto, emrClusterDefinition, EMR_CLUSTER_ID);\n\n        // Verify the external calls.\n        verify(namespaceDaoHelper).getNamespaceEntity(NAMESPACE);\n        verify(xmlHelper).objectToXml(emrClusterDefinition);\n        verify(herdDao).saveAndRefresh(any(EmrClusterCreationLogEntity.class));\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testLogEmrClusterCreationImpl()", "full_signature": "@Test public void testLogEmrClusterCreationImpl()", "class_method_signature": "EmrHelperServiceImplTest.testLogEmrClusterCreationImpl()", "testcase": true, "constructor": false, "invocations": ["setCode", "thenReturn", "when", "getNamespaceEntity", "thenReturn", "when", "objectToXml", "logEmrClusterCreation", "getNamespaceEntity", "verify", "objectToXml", "verify", "saveAndRefresh", "verify", "any", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "EmrHelperServiceImpl", "superclass": "", "interfaces": "implements EmrHelperService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(EmrHelperServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(EmrHelperServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private AwsServiceHelper awsServiceHelper;", "modifier": "@Autowired\n    private", "type": "AwsServiceHelper", "declarator": "awsServiceHelper", "var_name": "awsServiceHelper"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Autowired\n    private EmrClusterDefinitionDaoHelper emrClusterDefinitionDaoHelper;", "modifier": "@Autowired\n    private", "type": "EmrClusterDefinitionDaoHelper", "declarator": "emrClusterDefinitionDaoHelper", "var_name": "emrClusterDefinitionDaoHelper"}, {"original_string": "@Autowired\n    private EmrClusterDefinitionHelper emrClusterDefinitionHelper;", "modifier": "@Autowired\n    private", "type": "EmrClusterDefinitionHelper", "declarator": "emrClusterDefinitionHelper", "var_name": "emrClusterDefinitionHelper"}, {"original_string": "@Autowired\n    private EmrDao emrDao;", "modifier": "@Autowired\n    private", "type": "EmrDao", "declarator": "emrDao", "var_name": "emrDao"}, {"original_string": "@Autowired\n    private EmrHelper emrHelper;", "modifier": "@Autowired\n    private", "type": "EmrHelper", "declarator": "emrHelper", "var_name": "emrHelper"}, {"original_string": "@Autowired\n    private EmrPricingHelper emrPricingHelper;", "modifier": "@Autowired\n    private", "type": "EmrPricingHelper", "declarator": "emrPricingHelper", "var_name": "emrPricingHelper"}, {"original_string": "@Autowired\n    private HerdDao herdDao;", "modifier": "@Autowired\n    private", "type": "HerdDao", "declarator": "herdDao", "var_name": "herdDao"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}, {"original_string": "@Autowired\n    private NamespaceDaoHelper namespaceDaoHelper;", "modifier": "@Autowired\n    private", "type": "NamespaceDaoHelper", "declarator": "namespaceDaoHelper", "var_name": "namespaceDaoHelper"}, {"original_string": "@Autowired\n    private NamespaceIamRoleAuthorizationHelper namespaceIamRoleAuthorizationHelper;", "modifier": "@Autowired\n    private", "type": "NamespaceIamRoleAuthorizationHelper", "declarator": "namespaceIamRoleAuthorizationHelper", "var_name": "namespaceIamRoleAuthorizationHelper"}, {"original_string": "@Autowired\n    private XmlHelper xmlHelper;", "modifier": "@Autowired\n    private", "type": "XmlHelper", "declarator": "xmlHelper", "var_name": "xmlHelper"}], "methods": [{"identifier": "emrCreateClusterAwsSpecificSteps", "parameters": "(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "modifiers": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public", "return": "EmrClusterCreateDto", "signature": "EmrClusterCreateDto emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "full_signature": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public EmrClusterCreateDto emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "class_method_signature": "EmrHelperServiceImpl.emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "testcase": false, "constructor": false}, {"identifier": "emrPreCreateClusterSteps", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest emrClusterCreateRequest)", "modifiers": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "EmrClusterPreCreateDto", "signature": "EmrClusterPreCreateDto emrPreCreateClusterSteps(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest emrClusterCreateRequest)", "full_signature": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public EmrClusterPreCreateDto emrPreCreateClusterSteps(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest emrClusterCreateRequest)", "class_method_signature": "EmrHelperServiceImpl.emrPreCreateClusterSteps(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest emrClusterCreateRequest)", "testcase": false, "constructor": false}, {"identifier": "logEmrClusterCreation", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "modifiers": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "void", "signature": "void logEmrClusterCreation(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "full_signature": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public void logEmrClusterCreation(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "class_method_signature": "EmrHelperServiceImpl.logEmrClusterCreation(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "testcase": false, "constructor": false}, {"identifier": "emrCreateClusterAwsSpecificStepsImpl", "parameters": "(EmrClusterCreateRequest request, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "modifiers": "", "return": "EmrClusterCreateDto", "signature": "EmrClusterCreateDto emrCreateClusterAwsSpecificStepsImpl(EmrClusterCreateRequest request, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "full_signature": " EmrClusterCreateDto emrCreateClusterAwsSpecificStepsImpl(EmrClusterCreateRequest request, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "class_method_signature": "EmrHelperServiceImpl.emrCreateClusterAwsSpecificStepsImpl(EmrClusterCreateRequest request, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "testcase": false, "constructor": false}, {"identifier": "emrPreCreateClusterStepsImpl", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest request)", "modifiers": "", "return": "EmrClusterPreCreateDto", "signature": "EmrClusterPreCreateDto emrPreCreateClusterStepsImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest request)", "full_signature": " EmrClusterPreCreateDto emrPreCreateClusterStepsImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest request)", "class_method_signature": "EmrHelperServiceImpl.emrPreCreateClusterStepsImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "logEmrClusterCreationImpl", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "modifiers": "", "return": "void", "signature": "void logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "full_signature": " void logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "class_method_signature": "EmrHelperServiceImpl.logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "testcase": false, "constructor": false}, {"identifier": "getS3ManagedReplaceString", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getS3ManagedReplaceString()", "full_signature": "private String getS3ManagedReplaceString()", "class_method_signature": "EmrHelperServiceImpl.getS3ManagedReplaceString()", "testcase": false, "constructor": false}, {"identifier": "overrideEmrClusterDefinition", "parameters": "(EmrClusterDefinition emrClusterDefinition, EmrClusterDefinition emrClusterDefinitionOverride)", "modifiers": "@SuppressWarnings(\"PMD.CyclomaticComplexity\") // Method is not complex. It's just very repetitive. protected", "return": "void", "signature": "void overrideEmrClusterDefinition(EmrClusterDefinition emrClusterDefinition, EmrClusterDefinition emrClusterDefinitionOverride)", "full_signature": "@SuppressWarnings(\"PMD.CyclomaticComplexity\") // Method is not complex. It's just very repetitive. protected void overrideEmrClusterDefinition(EmrClusterDefinition emrClusterDefinition, EmrClusterDefinition emrClusterDefinitionOverride)", "class_method_signature": "EmrHelperServiceImpl.overrideEmrClusterDefinition(EmrClusterDefinition emrClusterDefinition, EmrClusterDefinition emrClusterDefinitionOverride)", "testcase": false, "constructor": false}, {"identifier": "updateEmrClusterDefinitionWithValidInstanceFleetSubnets", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition,\n        AwsParamsDto awsParamsDto)", "modifiers": "", "return": "void", "signature": "void updateEmrClusterDefinitionWithValidInstanceFleetSubnets(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition,\n        AwsParamsDto awsParamsDto)", "full_signature": " void updateEmrClusterDefinitionWithValidInstanceFleetSubnets(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition,\n        AwsParamsDto awsParamsDto)", "class_method_signature": "EmrHelperServiceImpl.updateEmrClusterDefinitionWithValidInstanceFleetSubnets(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition,\n        AwsParamsDto awsParamsDto)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/EmrHelperServiceImpl.java"}, "focal_method": {"identifier": "logEmrClusterCreationImpl", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "modifiers": "", "return": "void", "body": "void logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)\n        throws Exception\n    {\n        EmrClusterCreationLogEntity emrClusterCreationLogEntity = new EmrClusterCreationLogEntity();\n        emrClusterCreationLogEntity.setNamespace(namespaceDaoHelper.getNamespaceEntity(emrClusterAlternateKeyDto.getNamespace()));\n        emrClusterCreationLogEntity.setEmrClusterDefinitionName(emrClusterAlternateKeyDto.getEmrClusterDefinitionName());\n        emrClusterCreationLogEntity.setEmrClusterName(emrClusterAlternateKeyDto.getEmrClusterName());\n        emrClusterCreationLogEntity.setEmrClusterId(clusterId);\n        emrClusterCreationLogEntity.setEmrClusterDefinition(xmlHelper.objectToXml(emrClusterDefinition));\n        herdDao.saveAndRefresh(emrClusterCreationLogEntity);\n    }", "signature": "void logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "full_signature": " void logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "class_method_signature": "EmrHelperServiceImpl.logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "testcase": false, "constructor": false, "invocations": ["setNamespace", "getNamespaceEntity", "getNamespace", "setEmrClusterDefinitionName", "getEmrClusterDefinitionName", "setEmrClusterName", "getEmrClusterName", "setEmrClusterId", "setEmrClusterDefinition", "objectToXml", "saveAndRefresh"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}