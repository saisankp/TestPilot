{"test_class": {"identifier": "KujakuNotificationTest", "superclass": "extends BaseNotificationTest", "interfaces": "", "fields": [], "file": "library/src/test/java/io/ona/kujaku/notifications/KujakuNotificationTest.java"}, "test_case": {"identifier": "createNotificationShouldCreateValidNotifcationBuilderWithTextOnly", "parameters": "()", "modifiers": "@Config(sdk = 25) @Test public", "return": "void", "body": "@Config(sdk = 25)\n    @Test\n    public void createNotificationShouldCreateValidNotifcationBuilderWithTextOnly() throws NoSuchFieldException, IllegalAccessException {\n        KujakuNotificationImplClass kujakuNotification = new KujakuNotificationImplClass();\n        String title = \"sample tiTle 4\";\n        String content = \"This is some sample content for the notification\";\n\n        NotificationCompat.Builder builder = kujakuNotification.createNotification(title, content);\n\n        assertNotificationBuilder(builder, title, content, null);\n        assertEquals(null, getValueInPrivateField(NotificationCompat.Builder.class, builder, \"mChannelId\"));\n    }", "signature": "void createNotificationShouldCreateValidNotifcationBuilderWithTextOnly()", "full_signature": "@Config(sdk = 25) @Test public void createNotificationShouldCreateValidNotifcationBuilderWithTextOnly()", "class_method_signature": "KujakuNotificationTest.createNotificationShouldCreateValidNotifcationBuilderWithTextOnly()", "testcase": true, "constructor": false, "invocations": ["createNotification", "assertNotificationBuilder", "assertEquals", "getValueInPrivateField"]}, "focal_class": {"identifier": "KujakuNotification", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected NotificationChannel notificationChannel;", "modifier": "protected", "type": "NotificationChannel", "declarator": "notificationChannel", "var_name": "notificationChannel"}, {"original_string": "public static final int NO_LED_COLOR = 0;", "modifier": "public static final", "type": "int", "declarator": "NO_LED_COLOR = 0", "var_name": "NO_LED_COLOR"}, {"original_string": "private int smallIcon;", "modifier": "private", "type": "int", "declarator": "smallIcon", "var_name": "smallIcon"}, {"original_string": "protected Context context;", "modifier": "protected", "type": "Context", "declarator": "context", "var_name": "context"}], "methods": [{"identifier": "createNotificationChannel", "parameters": "(int importance, String channelName, String channelId)", "modifiers": "public", "return": "void", "signature": "void createNotificationChannel(int importance, String channelName, String channelId)", "full_signature": "public void createNotificationChannel(int importance, String channelName, String channelId)", "class_method_signature": "KujakuNotification.createNotificationChannel(int importance, String channelName, String channelId)", "testcase": false, "constructor": false}, {"identifier": "createNotificationChannel", "parameters": "(int importance, String channelName, String channelId, @Nullable String description)", "modifiers": "public", "return": "void", "signature": "void createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description)", "full_signature": "public void createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description)", "class_method_signature": "KujakuNotification.createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description)", "testcase": false, "constructor": false}, {"identifier": "createNotificationChannel", "parameters": "(int importance, String channelName, String channelId, @Nullable String description, @ColorInt int ledColor, @Nullable long[] vibrationPattern)", "modifiers": "public", "return": "void", "signature": "void createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, @ColorInt int ledColor, @Nullable long[] vibrationPattern)", "full_signature": "public void createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, @ColorInt int ledColor, @Nullable long[] vibrationPattern)", "class_method_signature": "KujakuNotification.createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, @ColorInt int ledColor, @Nullable long[] vibrationPattern)", "testcase": false, "constructor": false}, {"identifier": "createNotificationChannel", "parameters": "(int importance, String channelName, String channelId, @Nullable String description, @ColorInt int ledColor)", "modifiers": "@RequiresApi(api = Build.VERSION_CODES.O) public", "return": "void", "signature": "void createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, @ColorInt int ledColor)", "full_signature": "@RequiresApi(api = Build.VERSION_CODES.O) public void createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, @ColorInt int ledColor)", "class_method_signature": "KujakuNotification.createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, @ColorInt int ledColor)", "testcase": false, "constructor": false}, {"identifier": "createNotificationChannel", "parameters": "(int importance, String channelName, String channelId, @Nullable String description, long[] vibrationPattern)", "modifiers": "@RequiresApi(api = Build.VERSION_CODES.O) public", "return": "void", "signature": "void createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, long[] vibrationPattern)", "full_signature": "@RequiresApi(api = Build.VERSION_CODES.O) public void createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, long[] vibrationPattern)", "class_method_signature": "KujakuNotification.createNotificationChannel(int importance, String channelName, String channelId, @Nullable String description, long[] vibrationPattern)", "testcase": false, "constructor": false}, {"identifier": "getNotificationChannel", "parameters": "()", "modifiers": "", "return": "NotificationChannel", "signature": "NotificationChannel getNotificationChannel()", "full_signature": " NotificationChannel getNotificationChannel()", "class_method_signature": "KujakuNotification.getNotificationChannel()", "testcase": false, "constructor": false}, {"identifier": "createNotification", "parameters": "(String title, @Nullable String content)", "modifiers": "@SuppressWarnings(\"deprecation\") public", "return": "NotificationCompat.Builder", "signature": "NotificationCompat.Builder createNotification(String title, @Nullable String content)", "full_signature": "@SuppressWarnings(\"deprecation\") public NotificationCompat.Builder createNotification(String title, @Nullable String content)", "class_method_signature": "KujakuNotification.createNotification(String title, @Nullable String content)", "testcase": false, "constructor": false}, {"identifier": "createNotification", "parameters": "(String title)", "modifiers": "public", "return": "NotificationCompat.Builder", "signature": "NotificationCompat.Builder createNotification(String title)", "full_signature": "public NotificationCompat.Builder createNotification(String title)", "class_method_signature": "KujakuNotification.createNotification(String title)", "testcase": false, "constructor": false}, {"identifier": "displayNotification", "parameters": "(NotificationCompat.Builder notificationBuilder, int notificationId)", "modifiers": "public", "return": "void", "signature": "void displayNotification(NotificationCompat.Builder notificationBuilder, int notificationId)", "full_signature": "public void displayNotification(NotificationCompat.Builder notificationBuilder, int notificationId)", "class_method_signature": "KujakuNotification.displayNotification(NotificationCompat.Builder notificationBuilder, int notificationId)", "testcase": false, "constructor": false}, {"identifier": "setSmallIcon", "parameters": "(int icon)", "modifiers": "public", "return": "void", "signature": "void setSmallIcon(int icon)", "full_signature": "public void setSmallIcon(int icon)", "class_method_signature": "KujakuNotification.setSmallIcon(int icon)", "testcase": false, "constructor": false}, {"identifier": "setContext", "parameters": "(Context context)", "modifiers": "public", "return": "void", "signature": "void setContext(Context context)", "full_signature": "public void setContext(Context context)", "class_method_signature": "KujakuNotification.setContext(Context context)", "testcase": false, "constructor": false}], "file": "library/src/main/java/io/ona/kujaku/notifications/KujakuNotification.java"}, "focal_method": {"identifier": "createNotification", "parameters": "(String title, @Nullable String content)", "modifiers": "@SuppressWarnings(\"deprecation\") public", "return": "NotificationCompat.Builder", "body": "@SuppressWarnings(\"deprecation\")\n    public NotificationCompat.Builder createNotification(String title, @Nullable String content) {\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(context)\n                .setContentTitle(title)\n                .setSmallIcon(smallIcon);\n\n        if (content != null) {\n            builder.setContentText(content);\n        }\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            builder.setChannelId(notificationChannel.getId());\n        }\n\n        return builder;\n    }", "signature": "NotificationCompat.Builder createNotification(String title, @Nullable String content)", "full_signature": "@SuppressWarnings(\"deprecation\") public NotificationCompat.Builder createNotification(String title, @Nullable String content)", "class_method_signature": "KujakuNotification.createNotification(String title, @Nullable String content)", "testcase": false, "constructor": false, "invocations": ["setSmallIcon", "setContentTitle", "setContentText", "setChannelId", "getId"]}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}