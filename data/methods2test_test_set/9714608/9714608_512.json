{"test_class": {"identifier": "XMLBusNetworkUtilTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private static final URL shpUrl = Resources.getResource(XMLBusNetworkUtilTest.class, \"test.shp\");", "modifier": "private static final", "type": "URL", "declarator": "shpUrl = Resources.getResource(XMLBusNetworkUtilTest.class, \"test.shp\")", "var_name": "shpUrl"}, {"original_string": "private StandardRoadNetwork network;", "modifier": "private", "type": "StandardRoadNetwork", "declarator": "network", "var_name": "network"}], "file": "advanced/gis/gisbusinputoutput/src/test/java/org/arakhne/afc/gis/bus/io/xml/XMLBusNetworkUtilTest.java"}, "test_case": {"identifier": "writeBusNetworkBusNetworkXMLBuilderXMLResources", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void writeBusNetworkBusNetworkXMLBuilderXMLResources() throws Exception {\n\t\tBusNetwork busNetwork = new BusNetwork(this.network);\n\t\tBusStop stop1 = new BusStop(\"Stop1\"); //$NON-NLS-1$\n\t\tstop1.setPosition(new GeoLocationPoint(935665.0, 2311306.9));\n\t\tbusNetwork.addBusStop(stop1);\n\t\tBusStop stop2 = new BusStop(\"Stop2\"); //$NON-NLS-1$\n\t\tstop2.setPosition(new GeoLocationPoint(935665.0, 2311306.9));\n\t\tbusNetwork.addBusStop(stop2);\n\t\tBusLine line1 = new BusLine(\"Line1\"); //$NON-NLS-1$\n\t\tbusNetwork.addBusLine(line1);\n\t\tBusItinerary itinerary1 = new BusItinerary(\"Itinerary1\"); //$NON-NLS-1$\n\t\tline1.addBusItinerary(itinerary1);\n\t\tRoadSegment road1 = this.network.getRoadSegment(GeoId.valueOf(\"ccf6f6d64c911eec7e16dd51c3385a28#935646;2311307;935665;2311320\")); //$NON-NLS-1$\n\t\titinerary1.addRoadSegment(road1);\n\t\tRoadSegment road2 = this.network.getRoadSegment(GeoId.valueOf(\"67b453c1f5f2a55c3e91aa0468fc861a#935579;2311319;935647;2311395\")); //$NON-NLS-1$\n\t\titinerary1.addRoadSegment(road2);\n\t\tRoadSegment road3 = this.network.getRoadSegment(GeoId.valueOf(\"42bc6f398c0552f66138fe953a9a52d8#935561;2311395;935580;2311432\")); //$NON-NLS-1$\n\t\titinerary1.addRoadSegment(road3);\n\t\tBusItineraryHalt halt1 = itinerary1.addBusHalt(\"Halt1\", BusItineraryHaltType.SYSTEMATIC_STOP); //$NON-NLS-1$\n\t\thalt1.setBusStop(stop1);\n\t\tBusItineraryHalt halt2 = itinerary1.addBusHalt(\"Halt1\", BusItineraryHaltType.SYSTEMATIC_STOP); //$NON-NLS-1$\n\t\thalt2.setBusStop(stop2);\n\t\tbusNetwork.revalidate();\n\t\t\n\t\tPathBuilder pathBuilder = new SimplePathBuilder();\n\t\tXMLResources res = new XMLResources(pathBuilder);\n\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder builder = factory.newDocumentBuilder();\n\t\tDocument doc = builder.newDocument();\n\t\tXMLBuilder xmlBuilder = new XMLBuilder() {\n\t\t\t@Override\n\t\t\tpublic Document getDocument() throws DOMException {\n\t\t\t\treturn doc;\n\t\t\t}\n\t\t};\n\t\tElement root = xmlBuilder.createElement(\"root\"); //$NON-NLS-1$\n\t\tdoc.appendChild(root);\n\n\t\tNode result = XMLBusNetworkUtil.writeBusNetwork(busNetwork, xmlBuilder, res);\n\t\troot.appendChild(result);\n\n\t\tString actual;\n\t\ttry (StringWriter sw = new StringWriter()) {\n\t\t\tXMLUtil.writeXML(doc, sw);\n\t\t\tsw.close();\n\t\t\tactual = sw.toString();\n\t\t}\n\t\tassertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\" //$NON-NLS-1$\n\t\t\t\t+ \"<root><busNetwork geoId=\\\"\" + busNetwork.getGeoId().toString() //$NON-NLS-1$\n\t\t\t\t+ \"\\\" id=\\\"\" + busNetwork.getUUID().toString() //$NON-NLS-1$\n\t\t\t\t+ \"\\\" name=\\\"\\\"><stops><stop geoId=\\\"6ebac3fcff724d6ebe66e7f67f77a2e9#935665;2311307;935665;2311307\\\" \" //$NON-NLS-1$\n\t\t\t\t+ \"id=\\\"\" + stop1.getUUID().toString() + \"\\\" name=\\\"Stop1\\\" x=\\\"935665.0\\\" y=\\\"2311307.0\\\"/>\" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"<stop geoId=\\\"6ebac3fcff724d6ebe66e7f67f77a2e9#935665;2311307;935665;2311307\\\" \" //$NON-NLS-1$\n\t\t\t\t+ \"id=\\\"\" + stop2.getUUID().toString() + \"\\\" name=\\\"Stop2\\\" x=\\\"935665.0\\\" \" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"y=\\\"2311307.0\\\"/></stops><lines><line geoId=\\\"\" + line1.getGeoId().toString() //$NON-NLS-1$\n\t\t\t\t+ \"\\\" id=\\\"\" + line1.getUUID().toString() + \"\\\" name=\\\"Line1\\\"><itineraries>\" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"<itinerary geoId=\\\"fbee950d00913708b1d6bece061b87c7#935558;2311303;935669;2311435\\\" \" //$NON-NLS-1$\n\t\t\t\t+ \"id=\\\"\" + itinerary1.getUUID().toString() + \"\\\" name=\\\"Itinerary1\\\"><roads>\" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"<road geoId=\\\"ccf6f6d64c911eec7e16dd51c3385a28#935646;2311307;935665;2311320\\\" \" //$NON-NLS-1$\n\t\t\t\t+ \"id=\\\"\" + road1.getUUID().toString() + \"\\\"/><road \" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"geoId=\\\"67b453c1f5f2a55c3e91aa0468fc861a#935579;2311319;935647;2311395\\\" \" //$NON-NLS-1$\n\t\t\t\t+ \"id=\\\"\" + road2.getUUID().toString() + \"\\\"/><road \" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"geoId=\\\"42bc6f398c0552f66138fe953a9a52d8#935561;2311395;935580;2311432\\\" \" //$NON-NLS-1$\n\t\t\t\t+ \"id=\\\"\" + road3.getUUID().toString() + \"\\\"/></roads><halts><halt \" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"geoId=\\\"\" + halt1.getGeoId().toString() + \"\\\" id=\\\"\" + halt1.getUUID().toString() + \"\\\" \" //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t\t\t+ \"name=\\\"Halt1\\\" stopId=\\\"\" + stop1.getUUID().toString() + \"\\\" \" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"type=\\\"SYSTEMATIC_STOP\\\"/><halt geoId=\\\"\" + halt2.getGeoId().toString() + \"\\\" \" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"id=\\\"\" + halt2.getUUID().toString() + \"\\\" name=\\\"Halt1\\\" \" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"stopId=\\\"\" + stop2.getUUID().toString() + \"\\\" type=\\\"SYSTEMATIC_STOP\\\"/>\" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"</halts></itinerary></itineraries></line></lines></busNetwork></root>\", actual); //$NON-NLS-1$\n\t}", "signature": "void writeBusNetworkBusNetworkXMLBuilderXMLResources()", "full_signature": "@Test public void writeBusNetworkBusNetworkXMLBuilderXMLResources()", "class_method_signature": "XMLBusNetworkUtilTest.writeBusNetworkBusNetworkXMLBuilderXMLResources()", "testcase": true, "constructor": false, "invocations": ["setPosition", "addBusStop", "setPosition", "addBusStop", "addBusLine", "addBusItinerary", "getRoadSegment", "valueOf", "addRoadSegment", "getRoadSegment", "valueOf", "addRoadSegment", "getRoadSegment", "valueOf", "addRoadSegment", "addBusHalt", "setBusStop", "addBusHalt", "setBusStop", "revalidate", "newInstance", "newDocumentBuilder", "newDocument", "createElement", "appendChild", "writeBusNetwork", "appendChild", "writeXML", "close", "toString", "assertEquals", "toString", "getGeoId", "toString", "getUUID", "toString", "getUUID", "toString", "getUUID", "toString", "getGeoId", "toString", "getUUID", "toString", "getUUID", "toString", "getUUID", "toString", "getUUID", "toString", "getUUID", "toString", "getGeoId", "toString", "getUUID", "toString", "getUUID", "toString", "getGeoId", "toString", "getUUID", "toString", "getUUID"]}, "focal_class": {"identifier": "XMLBusNetworkUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String NODE_BUSHALTS = \"halts\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSHALTS = \"halts\"", "var_name": "NODE_BUSHALTS"}, {"original_string": "public static final String NODE_BUSHALT = \"halt\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSHALT = \"halt\"", "var_name": "NODE_BUSHALT"}, {"original_string": "public static final String NODE_BUSHUBS = \"hubs\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSHUBS = \"hubs\"", "var_name": "NODE_BUSHUBS"}, {"original_string": "public static final String NODE_BUSHUB = \"hub\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSHUB = \"hub\"", "var_name": "NODE_BUSHUB"}, {"original_string": "public static final String NODE_BUSITINERARIES = \"itineraries\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSITINERARIES = \"itineraries\"", "var_name": "NODE_BUSITINERARIES"}, {"original_string": "public static final String NODE_BUSITINERARY = \"itinerary\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSITINERARY = \"itinerary\"", "var_name": "NODE_BUSITINERARY"}, {"original_string": "public static final String NODE_BUSLINES = \"lines\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSLINES = \"lines\"", "var_name": "NODE_BUSLINES"}, {"original_string": "public static final String NODE_BUSLINE = \"line\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSLINE = \"line\"", "var_name": "NODE_BUSLINE"}, {"original_string": "public static final String NODE_BUSNETWORK = \"busNetwork\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSNETWORK = \"busNetwork\"", "var_name": "NODE_BUSNETWORK"}, {"original_string": "public static final String NODE_BUSSTOPS = \"stops\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSSTOPS = \"stops\"", "var_name": "NODE_BUSSTOPS"}, {"original_string": "public static final String NODE_BUSSTOP = \"stop\";", "modifier": "public static final", "type": "String", "declarator": "NODE_BUSSTOP = \"stop\"", "var_name": "NODE_BUSSTOP"}, {"original_string": "public static final String NODE_ROADS = \"roads\";", "modifier": "public static final", "type": "String", "declarator": "NODE_ROADS = \"roads\"", "var_name": "NODE_ROADS"}, {"original_string": "public static final String ATTR_ROADID = \"roadId\";", "modifier": "public static final", "type": "String", "declarator": "ATTR_ROADID = \"roadId\"", "var_name": "ATTR_ROADID"}, {"original_string": "private static final String ATTR_STOPID = \"stopId\";", "modifier": "private static final", "type": "String", "declarator": "ATTR_STOPID = \"stopId\"", "var_name": "ATTR_STOPID"}], "methods": [{"identifier": "XMLBusNetworkUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " XMLBusNetworkUtil()", "full_signature": "private  XMLBusNetworkUtil()", "class_method_signature": "XMLBusNetworkUtil.XMLBusNetworkUtil()", "testcase": false, "constructor": true}, {"identifier": "writeBusNetwork", "parameters": "(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources)", "modifiers": "@SuppressWarnings(\"checkstyle:npathcomplexity\") public static", "return": "Node", "signature": "Node writeBusNetwork(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources)", "full_signature": "@SuppressWarnings(\"checkstyle:npathcomplexity\") public static Node writeBusNetwork(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.writeBusNetwork(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "writeBusStop", "parameters": "(BusStop stop, XMLBuilder builder, XMLResources resources)", "modifiers": "private static", "return": "Node", "signature": "Node writeBusStop(BusStop stop, XMLBuilder builder, XMLResources resources)", "full_signature": "private static Node writeBusStop(BusStop stop, XMLBuilder builder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.writeBusStop(BusStop stop, XMLBuilder builder, XMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "writeBusHub", "parameters": "(BusHub hub, XMLBuilder builder, XMLResources resources)", "modifiers": "private static", "return": "Node", "signature": "Node writeBusHub(BusHub hub, XMLBuilder builder, XMLResources resources)", "full_signature": "private static Node writeBusHub(BusHub hub, XMLBuilder builder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.writeBusHub(BusHub hub, XMLBuilder builder, XMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "writeBusLine", "parameters": "(BusLine line, XMLBuilder builder, XMLResources resources)", "modifiers": "private static", "return": "Node", "signature": "Node writeBusLine(BusLine line, XMLBuilder builder, XMLResources resources)", "full_signature": "private static Node writeBusLine(BusLine line, XMLBuilder builder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.writeBusLine(BusLine line, XMLBuilder builder, XMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "writeBusItinerary", "parameters": "(BusItinerary itinerary, XMLBuilder builder, XMLResources resources)", "modifiers": "private static", "return": "Node", "signature": "Node writeBusItinerary(BusItinerary itinerary, XMLBuilder builder, XMLResources resources)", "full_signature": "private static Node writeBusItinerary(BusItinerary itinerary, XMLBuilder builder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.writeBusItinerary(BusItinerary itinerary, XMLBuilder builder, XMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "writeBusItineraryHalt", "parameters": "(BusItineraryHalt halt, XMLBuilder builder,\n\t\t\tXMLResources resources)", "modifiers": "private static", "return": "Node", "signature": "Node writeBusItineraryHalt(BusItineraryHalt halt, XMLBuilder builder,\n\t\t\tXMLResources resources)", "full_signature": "private static Node writeBusItineraryHalt(BusItineraryHalt halt, XMLBuilder builder,\n\t\t\tXMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.writeBusItineraryHalt(BusItineraryHalt halt, XMLBuilder builder,\n\t\t\tXMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "writeItineraryRoad", "parameters": "(RoadSegment road, XMLBuilder builder)", "modifiers": "private static", "return": "Node", "signature": "Node writeItineraryRoad(RoadSegment road, XMLBuilder builder)", "full_signature": "private static Node writeItineraryRoad(RoadSegment road, XMLBuilder builder)", "class_method_signature": "XMLBusNetworkUtil.writeItineraryRoad(RoadSegment road, XMLBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "readBusNetwork", "parameters": "(Element xmlNode, RoadNetwork roadNetwork,\n\t\t\tPathBuilder pathBuilder, XMLResources resources)", "modifiers": "public static", "return": "BusNetwork", "signature": "BusNetwork readBusNetwork(Element xmlNode, RoadNetwork roadNetwork,\n\t\t\tPathBuilder pathBuilder, XMLResources resources)", "full_signature": "public static BusNetwork readBusNetwork(Element xmlNode, RoadNetwork roadNetwork,\n\t\t\tPathBuilder pathBuilder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.readBusNetwork(Element xmlNode, RoadNetwork roadNetwork,\n\t\t\tPathBuilder pathBuilder, XMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "readItineraryRoad", "parameters": "(Element xmlNode, RoadNetwork roadNetwork, Map<UUID, RoadSegment> roadMap)", "modifiers": "private static", "return": "RoadSegment", "signature": "RoadSegment readItineraryRoad(Element xmlNode, RoadNetwork roadNetwork, Map<UUID, RoadSegment> roadMap)", "full_signature": "private static RoadSegment readItineraryRoad(Element xmlNode, RoadNetwork roadNetwork, Map<UUID, RoadSegment> roadMap)", "class_method_signature": "XMLBusNetworkUtil.readItineraryRoad(Element xmlNode, RoadNetwork roadNetwork, Map<UUID, RoadSegment> roadMap)", "testcase": false, "constructor": false}, {"identifier": "readBusItineraryHalt", "parameters": "(Element xmlNode, BusItinerary itinerary,\n\t\t\tBusNetwork busNetwork, Map<UUID, RoadSegment> roadMap, PathBuilder pathBuilder,\n\t\t\tXMLResources resources)", "modifiers": "private static", "return": "BusItineraryHalt", "signature": "BusItineraryHalt readBusItineraryHalt(Element xmlNode, BusItinerary itinerary,\n\t\t\tBusNetwork busNetwork, Map<UUID, RoadSegment> roadMap, PathBuilder pathBuilder,\n\t\t\tXMLResources resources)", "full_signature": "private static BusItineraryHalt readBusItineraryHalt(Element xmlNode, BusItinerary itinerary,\n\t\t\tBusNetwork busNetwork, Map<UUID, RoadSegment> roadMap, PathBuilder pathBuilder,\n\t\t\tXMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.readBusItineraryHalt(Element xmlNode, BusItinerary itinerary,\n\t\t\tBusNetwork busNetwork, Map<UUID, RoadSegment> roadMap, PathBuilder pathBuilder,\n\t\t\tXMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "readBusItinerary", "parameters": "(Element xmlNode, BusNetwork busNetwork,\n\t\t\tRoadNetwork roadNetwork, PathBuilder pathBuilder, XMLResources resources)", "modifiers": "private static", "return": "BusItinerary", "signature": "BusItinerary readBusItinerary(Element xmlNode, BusNetwork busNetwork,\n\t\t\tRoadNetwork roadNetwork, PathBuilder pathBuilder, XMLResources resources)", "full_signature": "private static BusItinerary readBusItinerary(Element xmlNode, BusNetwork busNetwork,\n\t\t\tRoadNetwork roadNetwork, PathBuilder pathBuilder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.readBusItinerary(Element xmlNode, BusNetwork busNetwork,\n\t\t\tRoadNetwork roadNetwork, PathBuilder pathBuilder, XMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "readBusLine", "parameters": "(Element xmlNode, BusNetwork busNetwork, RoadNetwork roadNetwork,\n\t\t\tPathBuilder pathBuilder, XMLResources resources)", "modifiers": "private static", "return": "BusLine", "signature": "BusLine readBusLine(Element xmlNode, BusNetwork busNetwork, RoadNetwork roadNetwork,\n\t\t\tPathBuilder pathBuilder, XMLResources resources)", "full_signature": "private static BusLine readBusLine(Element xmlNode, BusNetwork busNetwork, RoadNetwork roadNetwork,\n\t\t\tPathBuilder pathBuilder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.readBusLine(Element xmlNode, BusNetwork busNetwork, RoadNetwork roadNetwork,\n\t\t\tPathBuilder pathBuilder, XMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "readBusHub", "parameters": "(Element xmlNode, BusNetwork busNetwork, PathBuilder pathBuilder,\n\t\t\tXMLResources resources)", "modifiers": "private static", "return": "void", "signature": "void readBusHub(Element xmlNode, BusNetwork busNetwork, PathBuilder pathBuilder,\n\t\t\tXMLResources resources)", "full_signature": "private static void readBusHub(Element xmlNode, BusNetwork busNetwork, PathBuilder pathBuilder,\n\t\t\tXMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.readBusHub(Element xmlNode, BusNetwork busNetwork, PathBuilder pathBuilder,\n\t\t\tXMLResources resources)", "testcase": false, "constructor": false}, {"identifier": "readBusStop", "parameters": "(Element xmlNode, PathBuilder pathBuilder, XMLResources resources)", "modifiers": "private static", "return": "BusStop", "signature": "BusStop readBusStop(Element xmlNode, PathBuilder pathBuilder, XMLResources resources)", "full_signature": "private static BusStop readBusStop(Element xmlNode, PathBuilder pathBuilder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.readBusStop(Element xmlNode, PathBuilder pathBuilder, XMLResources resources)", "testcase": false, "constructor": false}], "file": "advanced/gis/gisbusinputoutput/src/main/java/org/arakhne/afc/gis/bus/io/xml/XMLBusNetworkUtil.java"}, "focal_method": {"identifier": "writeBusNetwork", "parameters": "(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources)", "modifiers": "@SuppressWarnings(\"checkstyle:npathcomplexity\") public static", "return": "Node", "body": "@SuppressWarnings(\"checkstyle:npathcomplexity\")\n\tpublic static Node writeBusNetwork(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources) throws IOException {\n\t\tfinal Element element = builder.createElement(NODE_BUSNETWORK);\n\n\t\twriteGISElementAttributes(element, busNetwork, builder, resources);\n\t\tfinal Integer color = busNetwork.getRawColor();\n\t\tif (color != null) {\n\t\t\telement.setAttribute(ATTR_COLOR, toColor(color));\n\t\t}\n\n\t\tfinal Element stopsNode = builder.createElement(NODE_BUSSTOPS);\n\t\tfor (final BusStop stop : busNetwork.busStops()) {\n\t\t\tfinal Node stopNode = writeBusStop(stop, builder, resources);\n\t\t\tif (stopNode != null) {\n\t\t\t\tstopsNode.appendChild(stopNode);\n\t\t\t}\n\t\t}\n\t\tif (stopsNode.getChildNodes().getLength() > 0) {\n\t\t\telement.appendChild(stopsNode);\n\t\t}\n\n\t\tfinal Element hubsNode = builder.createElement(NODE_BUSHUBS);\n\t\tfor (final BusHub hub : busNetwork.busHubs()) {\n\t\t\tfinal Node hubNode = writeBusHub(hub, builder, resources);\n\t\t\tif (hubNode != null) {\n\t\t\t\thubsNode.appendChild(hubNode);\n\t\t\t}\n\t\t}\n\t\tif (hubsNode.getChildNodes().getLength() > 0) {\n\t\t\telement.appendChild(hubsNode);\n\t\t}\n\n\t\tfinal Element linesNode = builder.createElement(NODE_BUSLINES);\n\t\tfor (final BusLine line : busNetwork.busLines()) {\n\t\t\tfinal Node lineNode = writeBusLine(line, builder, resources);\n\t\t\tif (lineNode != null) {\n\t\t\t\tlinesNode.appendChild(lineNode);\n\t\t\t}\n\t\t}\n\t\tif (linesNode.getChildNodes().getLength() > 0) {\n\t\t\telement.appendChild(linesNode);\n\t\t}\n\n\t\treturn element;\n\t}", "signature": "Node writeBusNetwork(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources)", "full_signature": "@SuppressWarnings(\"checkstyle:npathcomplexity\") public static Node writeBusNetwork(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources)", "class_method_signature": "XMLBusNetworkUtil.writeBusNetwork(BusNetwork busNetwork, XMLBuilder builder, XMLResources resources)", "testcase": false, "constructor": false, "invocations": ["createElement", "writeGISElementAttributes", "getRawColor", "setAttribute", "toColor", "createElement", "busStops", "writeBusStop", "appendChild", "getLength", "getChildNodes", "appendChild", "createElement", "busHubs", "writeBusHub", "appendChild", "getLength", "getChildNodes", "appendChild", "createElement", "busLines", "writeBusLine", "appendChild", "getLength", "getChildNodes", "appendChild"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}