{"test_class": {"identifier": "BackupProvidersManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "BackupProvidersManager mBackupProvidersManager;", "modifier": "", "type": "BackupProvidersManager", "declarator": "mBackupProvidersManager", "var_name": "mBackupProvidersManager"}, {"original_string": "@Mock\n    BackupProvider mNoneBackupProvider;", "modifier": "@Mock", "type": "BackupProvider", "declarator": "mNoneBackupProvider", "var_name": "mNoneBackupProvider"}, {"original_string": "@Mock\n    BackupProvider mDriveBackupProvider;", "modifier": "@Mock", "type": "BackupProvider", "declarator": "mDriveBackupProvider", "var_name": "mDriveBackupProvider"}, {"original_string": "@Mock\n    SyncProviderFactory mSyncProviderFactory;", "modifier": "@Mock", "type": "SyncProviderFactory", "declarator": "mSyncProviderFactory", "var_name": "mSyncProviderFactory"}, {"original_string": "@Mock\n    SyncProviderStore mSyncProviderStore;", "modifier": "@Mock", "type": "SyncProviderStore", "declarator": "mSyncProviderStore", "var_name": "mSyncProviderStore"}, {"original_string": "@Mock\n    NetworkManager mNetworkManager;", "modifier": "@Mock", "type": "NetworkManager", "declarator": "mNetworkManager", "var_name": "mNetworkManager"}, {"original_string": "@Mock\n    FragmentActivity mFragmentActivity;", "modifier": "@Mock", "type": "FragmentActivity", "declarator": "mFragmentActivity", "var_name": "mFragmentActivity"}, {"original_string": "@Mock\n    BackupProviderChangeListener mBackupProviderChangeListener1, mBackupProviderChangeListener2;", "modifier": "@Mock", "type": "BackupProviderChangeListener", "declarator": "mBackupProviderChangeListener1", "var_name": "mBackupProviderChangeListener1"}], "file": "app/src/test/java/co/smartreceipts/android/sync/BackupProvidersManagerTest.java"}, "test_case": {"identifier": "setAndInitializeSyncProvider", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setAndInitializeSyncProvider() {\n        when(mSyncProviderStore.setSyncProvider(any(SyncProvider.class))).thenReturn(true);\n        mBackupProvidersManager.setAndInitializeSyncProvider(SyncProvider.GoogleDrive, mFragmentActivity);\n        verify(mNoneBackupProvider).deinitialize();\n        verify(mDriveBackupProvider).initialize(mFragmentActivity);\n\n        // And confirm our internal refs now work\n        mBackupProvidersManager.onActivityResult(0, 0, null);\n        verify(mDriveBackupProvider).onActivityResult(0, 0, null);\n        mBackupProvidersManager.deinitialize();\n        verify(mDriveBackupProvider).deinitialize();\n        mBackupProvidersManager.initialize(mFragmentActivity);\n        verify(mDriveBackupProvider, times(2)).initialize(mFragmentActivity);\n        verify(mBackupProviderChangeListener1).onProviderChanged(SyncProvider.GoogleDrive);\n        mBackupProvidersManager.getRemoteBackups();\n        verify(mDriveBackupProvider).getRemoteBackups();\n        mBackupProvidersManager.getDeviceSyncId();\n        verify(mDriveBackupProvider).getDeviceSyncId();\n        verifyZeroInteractions(mBackupProviderChangeListener2);\n    }", "signature": "void setAndInitializeSyncProvider()", "full_signature": "@Test public void setAndInitializeSyncProvider()", "class_method_signature": "BackupProvidersManagerTest.setAndInitializeSyncProvider()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "setSyncProvider", "any", "setAndInitializeSyncProvider", "deinitialize", "verify", "initialize", "verify", "onActivityResult", "onActivityResult", "verify", "deinitialize", "deinitialize", "verify", "initialize", "initialize", "verify", "times", "onProviderChanged", "verify", "getRemoteBackups", "getRemoteBackups", "verify", "getDeviceSyncId", "getDeviceSyncId", "verify", "verifyZeroInteractions"]}, "focal_class": {"identifier": "BackupProvidersManager", "superclass": "", "interfaces": "implements BackupProvider", "fields": [{"original_string": "private final SyncProviderFactory syncProviderFactory;", "modifier": "private final", "type": "SyncProviderFactory", "declarator": "syncProviderFactory", "var_name": "syncProviderFactory"}, {"original_string": "private final SyncProviderStore syncProviderStore;", "modifier": "private final", "type": "SyncProviderStore", "declarator": "syncProviderStore", "var_name": "syncProviderStore"}, {"original_string": "private final NetworkManager networkManager;", "modifier": "private final", "type": "NetworkManager", "declarator": "networkManager", "var_name": "networkManager"}, {"original_string": "private final Set<BackupProviderChangeListener> backupProviderChangeListeners = new CopyOnWriteArraySet<>();", "modifier": "private final", "type": "Set<BackupProviderChangeListener>", "declarator": "backupProviderChangeListeners = new CopyOnWriteArraySet<>()", "var_name": "backupProviderChangeListeners"}, {"original_string": "private BackupProvider backupProvider;", "modifier": "private", "type": "BackupProvider", "declarator": "backupProvider", "var_name": "backupProvider"}], "methods": [{"identifier": "BackupProvidersManager", "parameters": "(@NonNull SyncProviderFactory syncProviderFactory,\n                                  @NonNull SyncProviderStore syncProviderStore,\n                                  @NonNull NetworkManager networkManager)", "modifiers": "@Inject public", "return": "", "signature": " BackupProvidersManager(@NonNull SyncProviderFactory syncProviderFactory,\n                                  @NonNull SyncProviderStore syncProviderStore,\n                                  @NonNull NetworkManager networkManager)", "full_signature": "@Inject public  BackupProvidersManager(@NonNull SyncProviderFactory syncProviderFactory,\n                                  @NonNull SyncProviderStore syncProviderStore,\n                                  @NonNull NetworkManager networkManager)", "class_method_signature": "BackupProvidersManager.BackupProvidersManager(@NonNull SyncProviderFactory syncProviderFactory,\n                                  @NonNull SyncProviderStore syncProviderStore,\n                                  @NonNull NetworkManager networkManager)", "testcase": false, "constructor": true}, {"identifier": "registerChangeListener", "parameters": "(@NonNull BackupProviderChangeListener backupProviderChangeListener)", "modifiers": "public", "return": "void", "signature": "void registerChangeListener(@NonNull BackupProviderChangeListener backupProviderChangeListener)", "full_signature": "public void registerChangeListener(@NonNull BackupProviderChangeListener backupProviderChangeListener)", "class_method_signature": "BackupProvidersManager.registerChangeListener(@NonNull BackupProviderChangeListener backupProviderChangeListener)", "testcase": false, "constructor": false}, {"identifier": "unregisterChangeListener", "parameters": "(@NonNull BackupProviderChangeListener backupProviderChangeListener)", "modifiers": "public", "return": "void", "signature": "void unregisterChangeListener(@NonNull BackupProviderChangeListener backupProviderChangeListener)", "full_signature": "public void unregisterChangeListener(@NonNull BackupProviderChangeListener backupProviderChangeListener)", "class_method_signature": "BackupProvidersManager.unregisterChangeListener(@NonNull BackupProviderChangeListener backupProviderChangeListener)", "testcase": false, "constructor": false}, {"identifier": "setAndInitializeSyncProvider", "parameters": "(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity)", "modifiers": "public synchronized", "return": "void", "signature": "void setAndInitializeSyncProvider(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity)", "full_signature": "public synchronized void setAndInitializeSyncProvider(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity)", "class_method_signature": "BackupProvidersManager.setAndInitializeSyncProvider(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity)", "testcase": false, "constructor": false}, {"identifier": "setAndInitializeNetworkProviderType", "parameters": "(@NonNull SupportedNetworkType supportedNetworkType)", "modifiers": "public synchronized", "return": "void", "signature": "void setAndInitializeNetworkProviderType(@NonNull SupportedNetworkType supportedNetworkType)", "full_signature": "public synchronized void setAndInitializeNetworkProviderType(@NonNull SupportedNetworkType supportedNetworkType)", "class_method_signature": "BackupProvidersManager.setAndInitializeNetworkProviderType(@NonNull SupportedNetworkType supportedNetworkType)", "testcase": false, "constructor": false}, {"identifier": "getSyncProvider", "parameters": "()", "modifiers": "@NonNull public", "return": "SyncProvider", "signature": "SyncProvider getSyncProvider()", "full_signature": "@NonNull public SyncProvider getSyncProvider()", "class_method_signature": "BackupProvidersManager.getSyncProvider()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(@Nullable FragmentActivity activity)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void initialize(@Nullable FragmentActivity activity)", "full_signature": "@Override public synchronized void initialize(@Nullable FragmentActivity activity)", "class_method_signature": "BackupProvidersManager.initialize(@Nullable FragmentActivity activity)", "testcase": false, "constructor": false}, {"identifier": "deinitialize", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void deinitialize()", "full_signature": "@Override public synchronized void deinitialize()", "class_method_signature": "BackupProvidersManager.deinitialize()", "testcase": false, "constructor": false}, {"identifier": "onActivityResult", "parameters": "(int requestCode, int resultCode, @Nullable Intent data)", "modifiers": "@Override public synchronized", "return": "boolean", "signature": "boolean onActivityResult(int requestCode, int resultCode, @Nullable Intent data)", "full_signature": "@Override public synchronized boolean onActivityResult(int requestCode, int resultCode, @Nullable Intent data)", "class_method_signature": "BackupProvidersManager.onActivityResult(int requestCode, int resultCode, @Nullable Intent data)", "testcase": false, "constructor": false}, {"identifier": "getRemoteBackups", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "Single<List<RemoteBackupMetadata>>", "signature": "Single<List<RemoteBackupMetadata>> getRemoteBackups()", "full_signature": "@NonNull @Override public Single<List<RemoteBackupMetadata>> getRemoteBackups()", "class_method_signature": "BackupProvidersManager.getRemoteBackups()", "testcase": false, "constructor": false}, {"identifier": "getDeviceSyncId", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "Identifier", "signature": "Identifier getDeviceSyncId()", "full_signature": "@Nullable @Override public Identifier getDeviceSyncId()", "class_method_signature": "BackupProvidersManager.getDeviceSyncId()", "testcase": false, "constructor": false}, {"identifier": "getLastDatabaseSyncTime", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "Date", "signature": "Date getLastDatabaseSyncTime()", "full_signature": "@NonNull @Override public Date getLastDatabaseSyncTime()", "class_method_signature": "BackupProvidersManager.getLastDatabaseSyncTime()", "testcase": false, "constructor": false}, {"identifier": "restoreBackup", "parameters": "(@NonNull RemoteBackupMetadata remoteBackupMetadata, boolean overwriteExistingData)", "modifiers": "@NonNull @Override public", "return": "Single<Boolean>", "signature": "Single<Boolean> restoreBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata, boolean overwriteExistingData)", "full_signature": "@NonNull @Override public Single<Boolean> restoreBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata, boolean overwriteExistingData)", "class_method_signature": "BackupProvidersManager.restoreBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata, boolean overwriteExistingData)", "testcase": false, "constructor": false}, {"identifier": "renameBackup", "parameters": "(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull String newFileName)", "modifiers": "@NonNull @Override public", "return": "Single<com.google.api.services.drive.model.File>", "signature": "Single<com.google.api.services.drive.model.File> renameBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull String newFileName)", "full_signature": "@NonNull @Override public Single<com.google.api.services.drive.model.File> renameBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull String newFileName)", "class_method_signature": "BackupProvidersManager.renameBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull String newFileName)", "testcase": false, "constructor": false}, {"identifier": "deleteBackup", "parameters": "(@NonNull RemoteBackupMetadata remoteBackupMetadata)", "modifiers": "@NonNull @Override public", "return": "Single<Boolean>", "signature": "Single<Boolean> deleteBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata)", "full_signature": "@NonNull @Override public Single<Boolean> deleteBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata)", "class_method_signature": "BackupProvidersManager.deleteBackup(@NonNull RemoteBackupMetadata remoteBackupMetadata)", "testcase": false, "constructor": false}, {"identifier": "clearCurrentBackupConfiguration", "parameters": "()", "modifiers": "@Override public", "return": "Single<Boolean>", "signature": "Single<Boolean> clearCurrentBackupConfiguration()", "full_signature": "@Override public Single<Boolean> clearCurrentBackupConfiguration()", "class_method_signature": "BackupProvidersManager.clearCurrentBackupConfiguration()", "testcase": false, "constructor": false}, {"identifier": "downloadAllData", "parameters": "(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull File downloadLocation)", "modifiers": "@NonNull @Override public", "return": "Single<List<File>>", "signature": "Single<List<File>> downloadAllData(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull File downloadLocation)", "full_signature": "@NonNull @Override public Single<List<File>> downloadAllData(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull File downloadLocation)", "class_method_signature": "BackupProvidersManager.downloadAllData(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull File downloadLocation)", "testcase": false, "constructor": false}, {"identifier": "debugDownloadAllData", "parameters": "(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull File downloadLocation)", "modifiers": "@NonNull @Override public", "return": "Single<List<File>>", "signature": "Single<List<File>> debugDownloadAllData(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull File downloadLocation)", "full_signature": "@NonNull @Override public Single<List<File>> debugDownloadAllData(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull File downloadLocation)", "class_method_signature": "BackupProvidersManager.debugDownloadAllData(@NonNull RemoteBackupMetadata remoteBackupMetadata, @NonNull File downloadLocation)", "testcase": false, "constructor": false}, {"identifier": "getCriticalSyncErrorStream", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "Observable<CriticalSyncError>", "signature": "Observable<CriticalSyncError> getCriticalSyncErrorStream()", "full_signature": "@NonNull @Override public Observable<CriticalSyncError> getCriticalSyncErrorStream()", "class_method_signature": "BackupProvidersManager.getCriticalSyncErrorStream()", "testcase": false, "constructor": false}, {"identifier": "markErrorResolved", "parameters": "(@NonNull SyncErrorType syncErrorType)", "modifiers": "@Override public", "return": "void", "signature": "void markErrorResolved(@NonNull SyncErrorType syncErrorType)", "full_signature": "@Override public void markErrorResolved(@NonNull SyncErrorType syncErrorType)", "class_method_signature": "BackupProvidersManager.markErrorResolved(@NonNull SyncErrorType syncErrorType)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/sync/BackupProvidersManager.java"}, "focal_method": {"identifier": "setAndInitializeSyncProvider", "parameters": "(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity)", "modifiers": "public synchronized", "return": "void", "body": "public synchronized void setAndInitializeSyncProvider(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity) {\n        if (syncProviderStore.setSyncProvider(syncProvider)) {\n            Logger.info(this, \"Initializing new Backup Provider: {}\", syncProvider);\n            backupProvider.deinitialize();\n            backupProvider = syncProviderFactory.get(syncProvider);\n            backupProvider.initialize(fragmentActivity);\n            for (final BackupProviderChangeListener backupProviderChangeListener : backupProviderChangeListeners) {\n                backupProviderChangeListener.onProviderChanged(syncProvider);\n            }\n        }\n    }", "signature": "void setAndInitializeSyncProvider(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity)", "full_signature": "public synchronized void setAndInitializeSyncProvider(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity)", "class_method_signature": "BackupProvidersManager.setAndInitializeSyncProvider(@NonNull SyncProvider syncProvider, @Nullable FragmentActivity fragmentActivity)", "testcase": false, "constructor": false, "invocations": ["setSyncProvider", "info", "deinitialize", "get", "initialize", "onProviderChanged"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}