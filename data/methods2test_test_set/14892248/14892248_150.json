{"test_class": {"identifier": "PdfAXmpWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String OUT_FOLDER = \"./target/com/itextpdf/text/xml/xmp/\";", "modifier": "public static final", "type": "String", "declarator": "OUT_FOLDER = \"./target/com/itextpdf/text/xml/xmp/\"", "var_name": "OUT_FOLDER"}, {"original_string": "public static final String CMP_FOLDER = \"./src/test/resources/com/itextpdf/text/xml/xmp/\";", "modifier": "public static final", "type": "String", "declarator": "CMP_FOLDER = \"./src/test/resources/com/itextpdf/text/xml/xmp/\"", "var_name": "CMP_FOLDER"}], "file": "pdfa/src/test/java/com/itextpdf/text/xml/xmp/PdfAXmpWriterTest.java"}, "test_case": {"identifier": "deprecatedLogicTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deprecatedLogicTest() throws IOException, DocumentException {\n        String fileName = \"xmp_metadata_deprecated.pdf\";\n        // step 1\n        Document document = new Document();\n        // step 2\n        PdfWriter writer = PdfAWriter.getInstance(document, new FileOutputStream(OUT_FOLDER + fileName), PdfAConformanceLevel.PDF_A_2B);\n        ByteArrayOutputStream os = new ByteArrayOutputStream();\n        XmpWriter xmp = new PdfAXmpWriter(os, PdfAConformanceLevel.PDF_A_2B, writer);\n        XmpSchema dc = new com.itextpdf.text.xml.xmp.DublinCoreSchema();\n        XmpArray subject = new XmpArray(XmpArray.UNORDERED);\n        subject.add(\"Hello World\");\n        subject.add(\"XMP & Metadata\");\n        subject.add(\"Metadata\");\n        dc.setProperty(DublinCoreSchema.SUBJECT, subject);\n        xmp.addRdfDescription(dc.getXmlns(), dc.toString());\n        PdfSchema pdf = new PdfSchema();\n        pdf.setProperty(PdfSchema.KEYWORDS, \"Hello World, XMP & Metadata, Metadata\");\n        pdf.setProperty(PdfSchema.VERSION, \"1.4\");\n        xmp.addRdfDescription(pdf);\n        xmp.close();\n        writer.setXmpMetadata(os.toByteArray());\n        // step 3\n        document.open();\n        document.addLanguage(\"en_US\");\n        // step 4\n        Font font = FontFactory.getFont(\"./src/test/resources/com/itextpdf/text/pdf/FreeMonoBold.ttf\", BaseFont.WINANSI, BaseFont.EMBEDDED, 12);\n        document.add(new Paragraph(\"Hello World\", font));\n        ICC_Profile icc = ICC_Profile.getInstance(new FileInputStream(\"./src/test/resources/com/itextpdf/text/pdf/sRGB Color Space Profile.icm\"));\n        writer.setOutputIntents(\"Custom\", \"\", \"http://www.color.org\", \"sRGB IEC61966-2.1\", icc);\n        // step 5\n        document.close();\n        CompareTool ct = new CompareTool();\n        Assert.assertNull(ct.compareXmp(OUT_FOLDER + fileName, CMP_FOLDER + \"xmp_metadata_deprecated.pdf\", true));\n    }", "signature": "void deprecatedLogicTest()", "full_signature": "@Test public void deprecatedLogicTest()", "class_method_signature": "PdfAXmpWriterTest.deprecatedLogicTest()", "testcase": true, "constructor": false, "invocations": ["getInstance", "add", "add", "add", "setProperty", "addRdfDescription", "getXmlns", "toString", "setProperty", "setProperty", "addRdfDescription", "close", "setXmpMetadata", "toByteArray", "open", "addLanguage", "getFont", "add", "getInstance", "setOutputIntents", "close", "assertNull", "compareXmp"]}, "focal_class": {"identifier": "PdfAXmpWriter", "superclass": "extends XmpWriter", "interfaces": "", "fields": [{"original_string": "private static final String pdfUaExtension =\n            \"    <x:xmpmeta xmlns:x=\\\"adobe:ns:meta/\\\">\\n\" +\n                    \"      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                    \"        <rdf:Description rdf:about=\\\"\\\" xmlns:pdfaExtension=\\\"http://www.aiim.org/pdfa/ns/extension/\\\" xmlns:pdfaSchema=\\\"http://www.aiim.org/pdfa/ns/schema#\\\" xmlns:pdfaProperty=\\\"http://www.aiim.org/pdfa/ns/property#\\\">\\n\" +\n                    \"          <pdfaExtension:schemas>\\n\" +\n                    \"            <rdf:Bag>\\n\" +\n                    \"              <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                <pdfaSchema:namespaceURI>http://www.aiim.org/pdfua/ns/id/</pdfaSchema:namespaceURI>\\n\" +\n                    \"                <pdfaSchema:prefix>pdfuaid</pdfaSchema:prefix>\\n\" +\n                    \"                <pdfaSchema:schema>PDF/UA identification schema</pdfaSchema:schema>\\n\" +\n                    \"                <pdfaSchema:property>\\n\" +\n                    \"                  <rdf:Seq>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:category>internal</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>PDF/UA version identifier</pdfaProperty:description>\\n\" +\n                    \"                      <pdfaProperty:name>part</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Integer</pdfaProperty:valueType>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:category>internal</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>PDF/UA amendment identifier</pdfaProperty:description>\\n\" +\n                    \"                      <pdfaProperty:name>amd</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:category>internal</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>PDF/UA corrigenda identifier</pdfaProperty:description>\\n\" +\n                    \"                      <pdfaProperty:name>corr</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                  </rdf:Seq>\\n\" +\n                    \"                </pdfaSchema:property>\\n\" +\n                    \"              </rdf:li>\\n\" +\n                    \"            </rdf:Bag>\\n\" +\n                    \"          </pdfaExtension:schemas>\\n\" +\n                    \"        </rdf:Description>\\n\" +\n                    \"      </rdf:RDF>\\n\" +\n                    \"    </x:xmpmeta>\";", "modifier": "private static final", "type": "String", "declarator": "pdfUaExtension =\n            \"    <x:xmpmeta xmlns:x=\\\"adobe:ns:meta/\\\">\\n\" +\n                    \"      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                    \"        <rdf:Description rdf:about=\\\"\\\" xmlns:pdfaExtension=\\\"http://www.aiim.org/pdfa/ns/extension/\\\" xmlns:pdfaSchema=\\\"http://www.aiim.org/pdfa/ns/schema#\\\" xmlns:pdfaProperty=\\\"http://www.aiim.org/pdfa/ns/property#\\\">\\n\" +\n                    \"          <pdfaExtension:schemas>\\n\" +\n                    \"            <rdf:Bag>\\n\" +\n                    \"              <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                <pdfaSchema:namespaceURI>http://www.aiim.org/pdfua/ns/id/</pdfaSchema:namespaceURI>\\n\" +\n                    \"                <pdfaSchema:prefix>pdfuaid</pdfaSchema:prefix>\\n\" +\n                    \"                <pdfaSchema:schema>PDF/UA identification schema</pdfaSchema:schema>\\n\" +\n                    \"                <pdfaSchema:property>\\n\" +\n                    \"                  <rdf:Seq>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:category>internal</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>PDF/UA version identifier</pdfaProperty:description>\\n\" +\n                    \"                      <pdfaProperty:name>part</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Integer</pdfaProperty:valueType>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:category>internal</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>PDF/UA amendment identifier</pdfaProperty:description>\\n\" +\n                    \"                      <pdfaProperty:name>amd</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:category>internal</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>PDF/UA corrigenda identifier</pdfaProperty:description>\\n\" +\n                    \"                      <pdfaProperty:name>corr</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                  </rdf:Seq>\\n\" +\n                    \"                </pdfaSchema:property>\\n\" +\n                    \"              </rdf:li>\\n\" +\n                    \"            </rdf:Bag>\\n\" +\n                    \"          </pdfaExtension:schemas>\\n\" +\n                    \"        </rdf:Description>\\n\" +\n                    \"      </rdf:RDF>\\n\" +\n                    \"    </x:xmpmeta>\"", "var_name": "pdfUaExtension"}, {"original_string": "private final static String zugferdExtension =\n            \"    <x:xmpmeta xmlns:x=\\\"adobe:ns:meta/\\\">\\n\" +\n                    \"      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                    \"        <rdf:Description rdf:about=\\\"\\\" xmlns:zf=\\\"urn:ferd:pdfa:CrossIndustryDocument:invoice:1p0#\\\">\\n\" +\n                    \"          <zf:ConformanceLevel>%s</zf:ConformanceLevel>\\n\" +\n                    \"          <zf:DocumentFileName>ZUGFeRD-invoice.xml</zf:DocumentFileName>\\n\" +\n                    \"          <zf:DocumentType>INVOICE</zf:DocumentType>\\n\" +\n                    \"          <zf:Version>1.0</zf:Version>\\n\" +\n                    \"        </rdf:Description>\\n\" +\n                    \"        <rdf:Description rdf:about=\\\"\\\" xmlns:pdfaExtension=\\\"http://www.aiim.org/pdfa/ns/extension/\\\" xmlns:pdfaSchema=\\\"http://www.aiim.org/pdfa/ns/schema#\\\" xmlns:pdfaProperty=\\\"http://www.aiim.org/pdfa/ns/property#\\\">\\n\" +\n                    \"          <pdfaExtension:schemas>\\n\" +\n                    \"            <rdf:Bag>\\n\" +\n                    \"              <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                <pdfaSchema:schema>ZUGFeRD PDFA Extension Schema</pdfaSchema:schema>\\n\" +\n                    \"                <pdfaSchema:namespaceURI>urn:ferd:pdfa:CrossIndustryDocument:invoice:1p0#</pdfaSchema:namespaceURI>\\n\" +\n                    \"                <pdfaSchema:prefix>zf</pdfaSchema:prefix>\\n\" +\n                    \"                <pdfaSchema:property>\\n\" +\n                    \"                  <rdf:Seq>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:name>DocumentFileName</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                      <pdfaProperty:category>external</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>name of the embedded XML invoice file</pdfaProperty:description>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:name>DocumentType</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                      <pdfaProperty:category>external</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>INVOICE</pdfaProperty:description>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:name>Version</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                      <pdfaProperty:category>external</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>The actual version of the ZUGFeRD data</pdfaProperty:description>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:name>ConformanceLevel</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                      <pdfaProperty:category>external</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>The conformance level of the ZUGFeRD data</pdfaProperty:description>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                  </rdf:Seq>\\n\" +\n                    \"                </pdfaSchema:property>\\n\" +\n                    \"              </rdf:li>\\n\" +\n                    \"            </rdf:Bag>\\n\" +\n                    \"          </pdfaExtension:schemas>\\n\" +\n                    \"        </rdf:Description>\\n\" +\n                    \"      </rdf:RDF>\\n\" +\n                    \"    </x:xmpmeta>\\n\";", "modifier": "private final static", "type": "String", "declarator": "zugferdExtension =\n            \"    <x:xmpmeta xmlns:x=\\\"adobe:ns:meta/\\\">\\n\" +\n                    \"      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                    \"        <rdf:Description rdf:about=\\\"\\\" xmlns:zf=\\\"urn:ferd:pdfa:CrossIndustryDocument:invoice:1p0#\\\">\\n\" +\n                    \"          <zf:ConformanceLevel>%s</zf:ConformanceLevel>\\n\" +\n                    \"          <zf:DocumentFileName>ZUGFeRD-invoice.xml</zf:DocumentFileName>\\n\" +\n                    \"          <zf:DocumentType>INVOICE</zf:DocumentType>\\n\" +\n                    \"          <zf:Version>1.0</zf:Version>\\n\" +\n                    \"        </rdf:Description>\\n\" +\n                    \"        <rdf:Description rdf:about=\\\"\\\" xmlns:pdfaExtension=\\\"http://www.aiim.org/pdfa/ns/extension/\\\" xmlns:pdfaSchema=\\\"http://www.aiim.org/pdfa/ns/schema#\\\" xmlns:pdfaProperty=\\\"http://www.aiim.org/pdfa/ns/property#\\\">\\n\" +\n                    \"          <pdfaExtension:schemas>\\n\" +\n                    \"            <rdf:Bag>\\n\" +\n                    \"              <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                <pdfaSchema:schema>ZUGFeRD PDFA Extension Schema</pdfaSchema:schema>\\n\" +\n                    \"                <pdfaSchema:namespaceURI>urn:ferd:pdfa:CrossIndustryDocument:invoice:1p0#</pdfaSchema:namespaceURI>\\n\" +\n                    \"                <pdfaSchema:prefix>zf</pdfaSchema:prefix>\\n\" +\n                    \"                <pdfaSchema:property>\\n\" +\n                    \"                  <rdf:Seq>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:name>DocumentFileName</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                      <pdfaProperty:category>external</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>name of the embedded XML invoice file</pdfaProperty:description>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:name>DocumentType</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                      <pdfaProperty:category>external</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>INVOICE</pdfaProperty:description>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:name>Version</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                      <pdfaProperty:category>external</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>The actual version of the ZUGFeRD data</pdfaProperty:description>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                    <rdf:li rdf:parseType=\\\"Resource\\\">\\n\" +\n                    \"                      <pdfaProperty:name>ConformanceLevel</pdfaProperty:name>\\n\" +\n                    \"                      <pdfaProperty:valueType>Text</pdfaProperty:valueType>\\n\" +\n                    \"                      <pdfaProperty:category>external</pdfaProperty:category>\\n\" +\n                    \"                      <pdfaProperty:description>The conformance level of the ZUGFeRD data</pdfaProperty:description>\\n\" +\n                    \"                    </rdf:li>\\n\" +\n                    \"                  </rdf:Seq>\\n\" +\n                    \"                </pdfaSchema:property>\\n\" +\n                    \"              </rdf:li>\\n\" +\n                    \"            </rdf:Bag>\\n\" +\n                    \"          </pdfaExtension:schemas>\\n\" +\n                    \"        </rdf:Description>\\n\" +\n                    \"      </rdf:RDF>\\n\" +\n                    \"    </x:xmpmeta>\\n\"", "var_name": "zugferdExtension"}, {"original_string": "private PdfWriter writer;", "modifier": "private", "type": "PdfWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "static public final String zugferdSchemaNS = \"urn:ferd:pdfa:CrossIndustryDocument:invoice:1p0#\";", "modifier": "static public final", "type": "String", "declarator": "zugferdSchemaNS = \"urn:ferd:pdfa:CrossIndustryDocument:invoice:1p0#\"", "var_name": "zugferdSchemaNS"}, {"original_string": "static public final String zugferdConformanceLevel = \"ConformanceLevel\";", "modifier": "static public final", "type": "String", "declarator": "zugferdConformanceLevel = \"ConformanceLevel\"", "var_name": "zugferdConformanceLevel"}, {"original_string": "static public final String zugferdDocumentFileName = \"DocumentFileName\";", "modifier": "static public final", "type": "String", "declarator": "zugferdDocumentFileName = \"DocumentFileName\"", "var_name": "zugferdDocumentFileName"}, {"original_string": "static public final String zugferdDocumentType = \"DocumentType\";", "modifier": "static public final", "type": "String", "declarator": "zugferdDocumentType = \"DocumentType\"", "var_name": "zugferdDocumentType"}, {"original_string": "static public final String zugferdVersion = \"Version\";", "modifier": "static public final", "type": "String", "declarator": "zugferdVersion = \"Version\"", "var_name": "zugferdVersion"}], "methods": [{"identifier": "PdfAXmpWriter", "parameters": "(OutputStream os, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "modifiers": "public", "return": "", "signature": " PdfAXmpWriter(OutputStream os, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "full_signature": "public  PdfAXmpWriter(OutputStream os, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "class_method_signature": "PdfAXmpWriter.PdfAXmpWriter(OutputStream os, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "testcase": false, "constructor": true}, {"identifier": "PdfAXmpWriter", "parameters": "(OutputStream os, PdfDictionary info, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "modifiers": "public", "return": "", "signature": " PdfAXmpWriter(OutputStream os, PdfDictionary info, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "full_signature": "public  PdfAXmpWriter(OutputStream os, PdfDictionary info, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "class_method_signature": "PdfAXmpWriter.PdfAXmpWriter(OutputStream os, PdfDictionary info, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "testcase": false, "constructor": true}, {"identifier": "PdfAXmpWriter", "parameters": "(OutputStream os, Map<String, String> info, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "modifiers": "public", "return": "", "signature": " PdfAXmpWriter(OutputStream os, Map<String, String> info, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "full_signature": "public  PdfAXmpWriter(OutputStream os, Map<String, String> info, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "class_method_signature": "PdfAXmpWriter.PdfAXmpWriter(OutputStream os, Map<String, String> info, PdfAConformanceLevel conformanceLevel, PdfWriter writer)", "testcase": false, "constructor": true}, {"identifier": "addRdfDescription", "parameters": "(PdfAConformanceLevel conformanceLevel)", "modifiers": "private", "return": "void", "signature": "void addRdfDescription(PdfAConformanceLevel conformanceLevel)", "full_signature": "private void addRdfDescription(PdfAConformanceLevel conformanceLevel)", "class_method_signature": "PdfAXmpWriter.addRdfDescription(PdfAConformanceLevel conformanceLevel)", "testcase": false, "constructor": false}, {"identifier": "getZugferdExtension", "parameters": "(PdfAConformanceLevel conformanceLevel)", "modifiers": "private", "return": "String", "signature": "String getZugferdExtension(PdfAConformanceLevel conformanceLevel)", "full_signature": "private String getZugferdExtension(PdfAConformanceLevel conformanceLevel)", "class_method_signature": "PdfAXmpWriter.getZugferdExtension(PdfAConformanceLevel conformanceLevel)", "testcase": false, "constructor": false}], "file": "pdfa/src/main/java/com/itextpdf/text/xml/xmp/PdfAXmpWriter.java"}, "focal_method": {"identifier": "addRdfDescription", "parameters": "(PdfAConformanceLevel conformanceLevel)", "modifiers": "private", "return": "void", "body": "private void addRdfDescription(PdfAConformanceLevel conformanceLevel) throws XMPException {\n        switch (conformanceLevel) {\n            case PDF_A_1A:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"1\");\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"A\");\n                break;\n            case PDF_A_1B:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"1\");\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"B\");\n                break;\n            case PDF_A_2A:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"2\");\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"A\");\n                break;\n            case PDF_A_2B:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"2\");\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"B\");\n                break;\n            case PDF_A_2U:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"2\");\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"U\");\n                break;\n            case PDF_A_3A:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"3\");\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"A\");\n                break;\n            case PDF_A_3B:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"3\");\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"B\");\n                break;\n            case PDF_A_3U:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"3\");\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"U\");\n                break;\n            case ZUGFeRD:\n            case ZUGFeRDBasic:\n            case ZUGFeRDComfort:\n            case ZUGFeRDExtended:\n                xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.PART, \"3\");\n\t            xmpMeta.setProperty(XMPConst.NS_PDFA_ID, PdfAProperties.CONFORMANCE, \"B\");\n\t            XMPMeta taggedExtensionMetaComfort = XMPMetaFactory.parseFromString(getZugferdExtension(conformanceLevel));\n\t            XMPUtils.appendProperties(taggedExtensionMetaComfort, xmpMeta, true, false);\n\t            break;\n            default:\n                break;\n        }\n        if (writer.isTagged()) {\n            XMPMeta taggedExtensionMeta = XMPMetaFactory.parseFromString(pdfUaExtension);\n            XMPUtils.appendProperties(taggedExtensionMeta, xmpMeta, true, false);\n        }\n    }", "signature": "void addRdfDescription(PdfAConformanceLevel conformanceLevel)", "full_signature": "private void addRdfDescription(PdfAConformanceLevel conformanceLevel)", "class_method_signature": "PdfAXmpWriter.addRdfDescription(PdfAConformanceLevel conformanceLevel)", "testcase": false, "constructor": false, "invocations": ["setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "parseFromString", "getZugferdExtension", "appendProperties", "isTagged", "parseFromString", "appendProperties"]}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}