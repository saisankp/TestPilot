{"test_class": {"identifier": "NetworkAddressEntityDataMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NetworkAddressEntityDataMapper networkAddressEntityDataMapper;", "modifier": "private", "type": "NetworkAddressEntityDataMapper", "declarator": "networkAddressEntityDataMapper", "var_name": "networkAddressEntityDataMapper"}], "file": "infrastructure/src/test/java/com/remotecraft/app/infrastructure/entity/mapper/NetworkAddressEntityDataMapperTest.java"}, "test_case": {"identifier": "shouldProperlyMapNetworkAddressEntityCollectionIntoNetworkAddressCollection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldProperlyMapNetworkAddressEntityCollectionIntoNetworkAddressCollection()\n      throws Exception {\n    NetworkAddressEntity networkAddressEntity1 = NetworkAddressEntity.builder()\n        .ip(\"192.168.1.1\")\n        .port(8889)\n        .build();\n    NetworkAddressEntity networkAddressEntity2 = NetworkAddressEntity.builder()\n        .ip(\"192.168.1.2\")\n        .port(8890)\n        .build();\n    ArrayList<NetworkAddressEntity> networkAddressEntities = new ArrayList<>();\n    networkAddressEntities.add(networkAddressEntity1);\n    networkAddressEntities.add(networkAddressEntity2);\n\n    Collection<NetworkAddress> networkAddresses =\n        networkAddressEntityDataMapper.transform(networkAddressEntities);\n\n    assertThat(networkAddresses, notNullValue());\n    assertThat(networkAddressEntities.size(), is(2));\n    NetworkAddress networkAddress1 = (NetworkAddress) networkAddresses.toArray()[0];\n    assertThat(networkAddress1, notNullValue());\n    assertThat(networkAddress1.ip(), is(\"192.168.1.1\"));\n    assertThat(networkAddress1.port(), is(8889));\n    NetworkAddress networkAddress2 = (NetworkAddress) networkAddresses.toArray()[1];\n    assertThat(networkAddress2, notNullValue());\n    assertThat(networkAddress2.ip(), is(\"192.168.1.2\"));\n    assertThat(networkAddress2.port(), is(8890));\n  }", "signature": "void shouldProperlyMapNetworkAddressEntityCollectionIntoNetworkAddressCollection()", "full_signature": "@Test public void shouldProperlyMapNetworkAddressEntityCollectionIntoNetworkAddressCollection()", "class_method_signature": "NetworkAddressEntityDataMapperTest.shouldProperlyMapNetworkAddressEntityCollectionIntoNetworkAddressCollection()", "testcase": true, "constructor": false, "invocations": ["build", "port", "ip", "builder", "build", "port", "ip", "builder", "add", "add", "transform", "assertThat", "notNullValue", "assertThat", "size", "is", "toArray", "assertThat", "notNullValue", "assertThat", "ip", "is", "assertThat", "port", "is", "toArray", "assertThat", "notNullValue", "assertThat", "ip", "is", "assertThat", "port", "is"]}, "focal_class": {"identifier": "NetworkAddressEntityDataMapper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "NetworkAddressEntityDataMapper", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " NetworkAddressEntityDataMapper()", "full_signature": "@Inject public  NetworkAddressEntityDataMapper()", "class_method_signature": "NetworkAddressEntityDataMapper.NetworkAddressEntityDataMapper()", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "(NetworkAddressEntity networkAddressEntity)", "modifiers": "public", "return": "NetworkAddress", "signature": "NetworkAddress transform(NetworkAddressEntity networkAddressEntity)", "full_signature": "public NetworkAddress transform(NetworkAddressEntity networkAddressEntity)", "class_method_signature": "NetworkAddressEntityDataMapper.transform(NetworkAddressEntity networkAddressEntity)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(\n      Collection<NetworkAddressEntity> networkAddressEntities)", "modifiers": "public", "return": "Collection<NetworkAddress>", "signature": "Collection<NetworkAddress> transform(\n      Collection<NetworkAddressEntity> networkAddressEntities)", "full_signature": "public Collection<NetworkAddress> transform(\n      Collection<NetworkAddressEntity> networkAddressEntities)", "class_method_signature": "NetworkAddressEntityDataMapper.transform(\n      Collection<NetworkAddressEntity> networkAddressEntities)", "testcase": false, "constructor": false}, {"identifier": "transformInverse", "parameters": "(NetworkAddress networkAddress)", "modifiers": "public", "return": "NetworkAddressEntity", "signature": "NetworkAddressEntity transformInverse(NetworkAddress networkAddress)", "full_signature": "public NetworkAddressEntity transformInverse(NetworkAddress networkAddress)", "class_method_signature": "NetworkAddressEntityDataMapper.transformInverse(NetworkAddress networkAddress)", "testcase": false, "constructor": false}, {"identifier": "transformInverse", "parameters": "(\n      Collection<NetworkAddress> networkAddresses)", "modifiers": "public", "return": "Collection<NetworkAddressEntity>", "signature": "Collection<NetworkAddressEntity> transformInverse(\n      Collection<NetworkAddress> networkAddresses)", "full_signature": "public Collection<NetworkAddressEntity> transformInverse(\n      Collection<NetworkAddress> networkAddresses)", "class_method_signature": "NetworkAddressEntityDataMapper.transformInverse(\n      Collection<NetworkAddress> networkAddresses)", "testcase": false, "constructor": false}], "file": "infrastructure/src/main/java/com/remotecraft/app/infrastructure/entity/mapper/NetworkAddressEntityDataMapper.java"}, "focal_method": {"identifier": "transform", "parameters": "(NetworkAddressEntity networkAddressEntity)", "modifiers": "public", "return": "NetworkAddress", "body": "public NetworkAddress transform(NetworkAddressEntity networkAddressEntity) {\n    if (networkAddressEntity == null) {\n      return null;\n    }\n\n    return NetworkAddress.builder()\n        .ip(networkAddressEntity.ip())\n        .port(networkAddressEntity.port())\n        .build();\n  }", "signature": "NetworkAddress transform(NetworkAddressEntity networkAddressEntity)", "full_signature": "public NetworkAddress transform(NetworkAddressEntity networkAddressEntity)", "class_method_signature": "NetworkAddressEntityDataMapper.transform(NetworkAddressEntity networkAddressEntity)", "testcase": false, "constructor": false, "invocations": ["build", "port", "ip", "builder", "ip", "port"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}