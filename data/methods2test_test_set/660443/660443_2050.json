{"test_class": {"identifier": "CMLStackTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "storage/io/src/test/java/org/openscience/cdk/io/cml/CMLStackTest.java"}, "test_case": {"identifier": "testPop", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPop() {\n        CMLStack stack = new CMLStack();\n        stack.push(\"first\");\n        stack.push(\"second\");\n        stack.push(\"third\");\n        Assert.assertEquals(\"third\", stack.pop());\n        Assert.assertEquals(\"second\", stack.pop());\n        Assert.assertEquals(\"first\", stack.pop());\n        try {\n            Assert.assertEquals(\"doesNotExist\", stack.pop());\n            Assert.fail(\"Should have received an ArrayIndexOutOfBoundsException\");\n        } catch (Exception exception) {\n            // OK, should happen\n        }\n    }", "signature": "void testPop()", "full_signature": "@Test public void testPop()", "class_method_signature": "CMLStackTest.testPop()", "testcase": true, "constructor": false, "invocations": ["push", "push", "push", "assertEquals", "pop", "assertEquals", "pop", "assertEquals", "pop", "assertEquals", "pop", "fail"]}, "focal_class": {"identifier": "CMLStack", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String[] stack = new String[64];", "modifier": "private", "type": "String[]", "declarator": "stack = new String[64]", "var_name": "stack"}, {"original_string": "private int      sp    = 0;", "modifier": "private", "type": "int", "declarator": "sp    = 0", "var_name": "sp"}], "methods": [{"identifier": "push", "parameters": "(String item)", "modifiers": "", "return": "void", "signature": "void push(String item)", "full_signature": " void push(String item)", "class_method_signature": "CMLStack.push(String item)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "", "return": "int", "signature": "int length()", "full_signature": " int length()", "class_method_signature": "CMLStack.length()", "testcase": false, "constructor": false}, {"identifier": "pop", "parameters": "()", "modifiers": "", "return": "String", "signature": "String pop()", "full_signature": " String pop()", "class_method_signature": "CMLStack.pop()", "testcase": false, "constructor": false}, {"identifier": "current", "parameters": "()", "modifiers": "", "return": "String", "signature": "String current()", "full_signature": " String current()", "class_method_signature": "CMLStack.current()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CMLStack.toString()", "testcase": false, "constructor": false}, {"identifier": "endsWith", "parameters": "(String lastElement)", "modifiers": "", "return": "boolean", "signature": "boolean endsWith(String lastElement)", "full_signature": " boolean endsWith(String lastElement)", "class_method_signature": "CMLStack.endsWith(String lastElement)", "testcase": false, "constructor": false}, {"identifier": "endsWith", "parameters": "(String oneButLast, String lastElement)", "modifiers": "", "return": "boolean", "signature": "boolean endsWith(String oneButLast, String lastElement)", "full_signature": " boolean endsWith(String oneButLast, String lastElement)", "class_method_signature": "CMLStack.endsWith(String oneButLast, String lastElement)", "testcase": false, "constructor": false}, {"identifier": "endsWith", "parameters": "(String twoButLast, String oneButLast, String lastElement)", "modifiers": "", "return": "boolean", "signature": "boolean endsWith(String twoButLast, String oneButLast, String lastElement)", "full_signature": " boolean endsWith(String twoButLast, String oneButLast, String lastElement)", "class_method_signature": "CMLStack.endsWith(String twoButLast, String oneButLast, String lastElement)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "", "return": "int", "signature": "int size()", "full_signature": " int size()", "class_method_signature": "CMLStack.size()", "testcase": false, "constructor": false}], "file": "storage/io/src/main/java/org/openscience/cdk/io/cml/CMLStack.java"}, "focal_method": {"identifier": "pop", "parameters": "()", "modifiers": "", "return": "String", "body": "String pop() {\n        return stack[--sp];\n    }", "signature": "String pop()", "full_signature": " String pop()", "class_method_signature": "CMLStack.pop()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}