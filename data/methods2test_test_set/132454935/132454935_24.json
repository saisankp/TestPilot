{"test_class": {"identifier": "AccountAddressTest", "superclass": "", "interfaces": "", "fields": [], "file": "elrond-core/src/test/java/network/elrond/account/AccountAddressTest.java"}, "test_case": {"identifier": "testAccountAddressFromNullBytesShouldThrowException", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testAccountAddressFromNullBytesShouldThrowException() {\n        AccountAddress.fromBytes(null);\n        Assert.fail();\n    }", "signature": "void testAccountAddressFromNullBytesShouldThrowException()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testAccountAddressFromNullBytesShouldThrowException()", "class_method_signature": "AccountAddressTest.testAccountAddressFromNullBytesShouldThrowException()", "testcase": true, "constructor": false, "invocations": ["fromBytes", "fail"]}, "focal_class": {"identifier": "AccountAddress", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final Logger logger = LogManager.getLogger(AccountAddress.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LogManager.getLogger(AccountAddress.class)", "var_name": "logger"}, {"original_string": "public static final AccountAddress EMPTY_ADDRESS = new AccountAddress(new byte[0]);", "modifier": "public static final", "type": "AccountAddress", "declarator": "EMPTY_ADDRESS = new AccountAddress(new byte[0])", "var_name": "EMPTY_ADDRESS"}, {"original_string": "private byte[] bytes;", "modifier": "private", "type": "byte[]", "declarator": "bytes", "var_name": "bytes"}], "methods": [{"identifier": "getBytes", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getBytes()", "full_signature": "public byte[] getBytes()", "class_method_signature": "AccountAddress.getBytes()", "testcase": false, "constructor": false}, {"identifier": "AccountAddress", "parameters": "(byte[] publicKeyBytes)", "modifiers": "private", "return": "", "signature": " AccountAddress(byte[] publicKeyBytes)", "full_signature": "private  AccountAddress(byte[] publicKeyBytes)", "class_method_signature": "AccountAddress.AccountAddress(byte[] publicKeyBytes)", "testcase": false, "constructor": true}, {"identifier": "fromHexString", "parameters": "(String publicKeyHexString)", "modifiers": "public static", "return": "AccountAddress", "signature": "AccountAddress fromHexString(String publicKeyHexString)", "full_signature": "public static AccountAddress fromHexString(String publicKeyHexString)", "class_method_signature": "AccountAddress.fromHexString(String publicKeyHexString)", "testcase": false, "constructor": false}, {"identifier": "fromBytes", "parameters": "(byte[] publicKeyBytes)", "modifiers": "public static", "return": "AccountAddress", "signature": "AccountAddress fromBytes(byte[] publicKeyBytes)", "full_signature": "public static AccountAddress fromBytes(byte[] publicKeyBytes)", "class_method_signature": "AccountAddress.fromBytes(byte[] publicKeyBytes)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AccountAddress.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AccountAddress.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AccountAddress.toString()", "testcase": false, "constructor": false}], "file": "elrond-core/src/main/java/network/elrond/account/AccountAddress.java"}, "focal_method": {"identifier": "fromBytes", "parameters": "(byte[] publicKeyBytes)", "modifiers": "public static", "return": "AccountAddress", "body": "public static AccountAddress fromBytes(byte[] publicKeyBytes) {\n        return new AccountAddress(publicKeyBytes);\n    }", "signature": "AccountAddress fromBytes(byte[] publicKeyBytes)", "full_signature": "public static AccountAddress fromBytes(byte[] publicKeyBytes)", "class_method_signature": "AccountAddress.fromBytes(byte[] publicKeyBytes)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 132454935, "url": "https://github.com/ElrondNetwork/elrond-node-prototype", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 16635, "license": "licensed"}}