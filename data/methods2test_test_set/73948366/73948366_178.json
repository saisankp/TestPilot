{"test_class": {"identifier": "NotificationManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/notification/NotificationManagerTest.java"}, "test_case": {"identifier": "testNotificationManagerServiceNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNotificationManagerServiceNull() {\n        NotificationServiceFactory testfact = () -> null;\n        NotificationManager notificationManager = getNotificationManager(testfact);\n        notificationManager.shutdown();\n    }", "signature": "void testNotificationManagerServiceNull()", "full_signature": "@Test public void testNotificationManagerServiceNull()", "class_method_signature": "NotificationManagerTest.testNotificationManagerServiceNull()", "testcase": true, "constructor": false, "invocations": ["getNotificationManager", "shutdown"]}, "focal_class": {"identifier": "NotificationManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(NotificationManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(NotificationManager.class)", "var_name": "LOGGER"}, {"original_string": "private List<NotificationService> notificationServices = new ArrayList<>();", "modifier": "private", "type": "List<NotificationService>", "declarator": "notificationServices = new ArrayList<>()", "var_name": "notificationServices"}, {"original_string": "private ScheduledExecutorService scheduledExecutor;", "modifier": "private", "type": "ScheduledExecutorService", "declarator": "scheduledExecutor", "var_name": "scheduledExecutor"}, {"original_string": "private List<NotificationTask> notificationTasks;", "modifier": "private", "type": "List<NotificationTask>", "declarator": "notificationTasks", "var_name": "notificationTasks"}], "methods": [{"identifier": "NotificationManager", "parameters": "(List<NotificationTask> notificationTasks)", "modifiers": "public", "return": "", "signature": " NotificationManager(List<NotificationTask> notificationTasks)", "full_signature": "public  NotificationManager(List<NotificationTask> notificationTasks)", "class_method_signature": "NotificationManager.NotificationManager(List<NotificationTask> notificationTasks)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "NotificationManager.init()", "testcase": false, "constructor": false}, {"identifier": "NotificationManager", "parameters": "(final List<NotificationServiceFactory> notificationServiceFactories, List<NotificationTask> notificationTasks)", "modifiers": "public", "return": "", "signature": " NotificationManager(final List<NotificationServiceFactory> notificationServiceFactories, List<NotificationTask> notificationTasks)", "full_signature": "public  NotificationManager(final List<NotificationServiceFactory> notificationServiceFactories, List<NotificationTask> notificationTasks)", "class_method_signature": "NotificationManager.NotificationManager(final List<NotificationServiceFactory> notificationServiceFactories, List<NotificationTask> notificationTasks)", "testcase": false, "constructor": true}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void shutdown()", "full_signature": "public void shutdown()", "class_method_signature": "NotificationManager.shutdown()", "testcase": false, "constructor": false}, {"identifier": "sendNotifications", "parameters": "(List<Notification> notifications)", "modifiers": "public", "return": "void", "signature": "void sendNotifications(List<Notification> notifications)", "full_signature": "public void sendNotifications(List<Notification> notifications)", "class_method_signature": "NotificationManager.sendNotifications(List<Notification> notifications)", "testcase": false, "constructor": false}, {"identifier": "isNotificationFeatureAvailable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNotificationFeatureAvailable()", "full_signature": "public boolean isNotificationFeatureAvailable()", "class_method_signature": "NotificationManager.isNotificationFeatureAvailable()", "testcase": false, "constructor": false}, {"identifier": "enableScheduledNotifications", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean enableScheduledNotifications()", "full_signature": "private boolean enableScheduledNotifications()", "class_method_signature": "NotificationManager.enableScheduledNotifications()", "testcase": false, "constructor": false}, {"identifier": "getLoadedNotificationServices", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLoadedNotificationServices()", "full_signature": "public List<String> getLoadedNotificationServices()", "class_method_signature": "NotificationManager.getLoadedNotificationServices()", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/NotificationManager.java"}, "focal_method": {"identifier": "shutdown", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void shutdown() {\n        if (scheduledExecutor != null) {\n            scheduledExecutor.shutdownNow();\n        }\n    }", "signature": "void shutdown()", "full_signature": "public void shutdown()", "class_method_signature": "NotificationManager.shutdown()", "testcase": false, "constructor": false, "invocations": ["shutdownNow"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}