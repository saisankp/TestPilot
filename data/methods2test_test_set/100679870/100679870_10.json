{"test_class": {"identifier": "TestImageScaler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String IMG_DATA = \"iVBORw0KGgoAAAANSUhEUgAAAM0AAADNCAMAAAAsYgRbAAAAGXRFWHRTb2Z0d\"\n      + \"2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAABJQTFRF3NSmzMewPxIG//ncJEJsldTou1jHgAAAARBJREFUeNrs2EE\"\n      + \"KgCAQBVDLuv+V20dENbMY831wKz4Y/VHb/5RGQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PzMWtya\"\n      + \"GhoaGhoaGhoaGhoaGhoxtb0QGhoaGhoaGhoaGhoaGhoaMbRLEvv50VTQ9OTQ5OpyZ01GpM2g0bfmDQaL7S+ofFC6xv\"\n      + \"3ZpxJiywakzbvd9r3RWPS9I2+MWk0+kbf0Hih9Y17U0nTHibrDDQ0NDQ0NDQ0NDQ0NDQ0NTXbRSL/AK72o6GhoaGho\"\n      + \"RlL8951vwsNDQ0NDQ1NDc0WyHtDTEhDQ0NDQ0NTS5MdGhoaGhoaGhoaGhoaGhoaGhoaGhoaGposzSHAAErMwwQ2HwR\"\n      + \"QAAAAAElFTkSuQmCC\";", "modifier": "private static final", "type": "String", "declarator": "IMG_DATA = \"iVBORw0KGgoAAAANSUhEUgAAAM0AAADNCAMAAAAsYgRbAAAAGXRFWHRTb2Z0d\"\n      + \"2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAABJQTFRF3NSmzMewPxIG//ncJEJsldTou1jHgAAAARBJREFUeNrs2EE\"\n      + \"KgCAQBVDLuv+V20dENbMY831wKz4Y/VHb/5RGQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PzMWtya\"\n      + \"GhoaGhoaGhoaGhoaGhoxtb0QGhoaGhoaGhoaGhoaGhoaMbRLEvv50VTQ9OTQ5OpyZ01GpM2g0bfmDQaL7S+ofFC6xv\"\n      + \"3ZpxJiywakzbvd9r3RWPS9I2+MWk0+kbf0Hih9Y17U0nTHibrDDQ0NDQ0NDQ0NDQ0NDQ0NTXbRSL/AK72o6GhoaGho\"\n      + \"RlL8951vwsNDQ0NDQ1NDc0WyHtDTEhDQ0NDQ0NTS5MdGhoaGhoaGhoaGhoaGhoaGhoaGhoaGposzSHAAErMwwQ2HwR\"\n      + \"QAAAAAElFTkSuQmCC\"", "var_name": "IMG_DATA"}, {"original_string": "private BufferedImage img;", "modifier": "private", "type": "BufferedImage", "declarator": "img", "var_name": "img"}, {"original_string": "private int widthBefore;", "modifier": "private", "type": "int", "declarator": "widthBefore", "var_name": "widthBefore"}, {"original_string": "private int heightBefore;", "modifier": "private", "type": "int", "declarator": "heightBefore", "var_name": "heightBefore"}], "file": "services/tools.descartes.teastore.image/src/test/java/tools/descartes/teastore/image/TestImageScaler.java"}, "test_case": {"identifier": "testScalePixelTwoZero", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void testScalePixelTwoZero() {\n    ImageScaler.scale(img, 0, 0);\n  }", "signature": "void testScalePixelTwoZero()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testScalePixelTwoZero()", "class_method_signature": "TestImageScaler.testScalePixelTwoZero()", "testcase": true, "constructor": false, "invocations": ["scale"]}, "focal_class": {"identifier": "ImageScaler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(ImageScaler.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ImageScaler.class)", "var_name": "log"}], "methods": [{"identifier": "ImageScaler", "parameters": "()", "modifiers": "private", "return": "", "signature": " ImageScaler()", "full_signature": "private  ImageScaler()", "class_method_signature": "ImageScaler.ImageScaler()", "testcase": false, "constructor": true}, {"identifier": "scale", "parameters": "(BufferedImage image, ImageSize size)", "modifiers": "public static", "return": "BufferedImage", "signature": "BufferedImage scale(BufferedImage image, ImageSize size)", "full_signature": "public static BufferedImage scale(BufferedImage image, ImageSize size)", "class_method_signature": "ImageScaler.scale(BufferedImage image, ImageSize size)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(BufferedImage image, double scalingFactor)", "modifiers": "public static", "return": "BufferedImage", "signature": "BufferedImage scale(BufferedImage image, double scalingFactor)", "full_signature": "public static BufferedImage scale(BufferedImage image, double scalingFactor)", "class_method_signature": "ImageScaler.scale(BufferedImage image, double scalingFactor)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(BufferedImage image, double widthScaling,\n      double heightScaling)", "modifiers": "public static", "return": "BufferedImage", "signature": "BufferedImage scale(BufferedImage image, double widthScaling,\n      double heightScaling)", "full_signature": "public static BufferedImage scale(BufferedImage image, double widthScaling,\n      double heightScaling)", "class_method_signature": "ImageScaler.scale(BufferedImage image, double widthScaling,\n      double heightScaling)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(BufferedImage image, int size)", "modifiers": "public static", "return": "BufferedImage", "signature": "BufferedImage scale(BufferedImage image, int size)", "full_signature": "public static BufferedImage scale(BufferedImage image, int size)", "class_method_signature": "ImageScaler.scale(BufferedImage image, int size)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(BufferedImage image, int width, int height)", "modifiers": "public static", "return": "BufferedImage", "signature": "BufferedImage scale(BufferedImage image, int width, int height)", "full_signature": "public static BufferedImage scale(BufferedImage image, int width, int height)", "class_method_signature": "ImageScaler.scale(BufferedImage image, int width, int height)", "testcase": false, "constructor": false}], "file": "services/tools.descartes.teastore.image/src/main/java/tools/descartes/teastore/image/ImageScaler.java"}, "focal_method": {"identifier": "scale", "parameters": "(BufferedImage image, ImageSize size)", "modifiers": "public static", "return": "BufferedImage", "body": "public static BufferedImage scale(BufferedImage image, ImageSize size) {\n    if (size == null) {\n      log.error(\"The supplied image size is null.\");\n      throw new NullPointerException(\"The supplied image size is null.\");\n    }\n\n    return scale(image, size.getWidth(), size.getHeight());\n  }", "signature": "BufferedImage scale(BufferedImage image, ImageSize size)", "full_signature": "public static BufferedImage scale(BufferedImage image, ImageSize size)", "class_method_signature": "ImageScaler.scale(BufferedImage image, ImageSize size)", "testcase": false, "constructor": false, "invocations": ["error", "scale", "getWidth", "getHeight"]}, "repository": {"repo_id": 100679870, "url": "https://github.com/DescartesResearch/TeaStore", "language": "Java", "is_fork": false, "fork_count": 31, "stargazer_count": 43, "size": 91777, "license": "licensed"}}