{"test_class": {"identifier": "SingleMappingTest", "superclass": "", "interfaces": "", "fields": [], "file": "legacy/src/test/java/org/openscience/cdk/smsd/algorithm/single/SingleMappingTest.java"}, "test_case": {"identifier": "testGetOverLaps", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetOverLaps() throws CDKException {\n        IAtom atomSource = new Atom(\"R\");\n        IAtom atomTarget = new Atom(\"R\");\n        IAtomContainer source = new AtomContainer();\n        source.addAtom(atomSource);\n        IAtomContainer target = new AtomContainer();\n        target.addAtom(atomTarget);\n        boolean removeHydrogen = false;\n        SingleMapping instance = new SingleMapping();\n        assertNotNull(instance.getOverLaps(source, target, removeHydrogen));\n    }", "signature": "void testGetOverLaps()", "full_signature": "@Test public void testGetOverLaps()", "class_method_signature": "SingleMappingTest.testGetOverLaps()", "testcase": true, "constructor": false, "invocations": ["addAtom", "addAtom", "assertNotNull", "getOverLaps"]}, "focal_class": {"identifier": "SingleMapping", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IAtomContainer          source             = null;", "modifier": "private", "type": "IAtomContainer", "declarator": "source             = null", "var_name": "source"}, {"original_string": "private IAtomContainer          target             = null;", "modifier": "private", "type": "IAtomContainer", "declarator": "target             = null", "var_name": "target"}, {"original_string": "private List<Map<IAtom, IAtom>> mappings           = null;", "modifier": "private", "type": "List<Map<IAtom, IAtom>>", "declarator": "mappings           = null", "var_name": "mappings"}, {"original_string": "private Map<Integer, Double>    connectedBondOrder = null;", "modifier": "private", "type": "Map<Integer, Double>", "declarator": "connectedBondOrder = null", "var_name": "connectedBondOrder"}], "methods": [{"identifier": "SingleMapping", "parameters": "()", "modifiers": "public", "return": "", "signature": " SingleMapping()", "full_signature": "public  SingleMapping()", "class_method_signature": "SingleMapping.SingleMapping()", "testcase": false, "constructor": true}, {"identifier": "getOverLaps", "parameters": "(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)", "modifiers": "protected", "return": "List<Map<IAtom, IAtom>>", "signature": "List<Map<IAtom, IAtom>> getOverLaps(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)", "full_signature": "protected List<Map<IAtom, IAtom>> getOverLaps(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)", "class_method_signature": "SingleMapping.getOverLaps(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)", "testcase": false, "constructor": false}, {"identifier": "getOverLaps", "parameters": "(IQueryAtomContainer source, IAtomContainer target,\n            boolean removeHydrogen)", "modifiers": "protected", "return": "List<Map<IAtom, IAtom>>", "signature": "List<Map<IAtom, IAtom>> getOverLaps(IQueryAtomContainer source, IAtomContainer target,\n            boolean removeHydrogen)", "full_signature": "protected List<Map<IAtom, IAtom>> getOverLaps(IQueryAtomContainer source, IAtomContainer target,\n            boolean removeHydrogen)", "class_method_signature": "SingleMapping.getOverLaps(IQueryAtomContainer source, IAtomContainer target,\n            boolean removeHydrogen)", "testcase": false, "constructor": false}, {"identifier": "setSourceSingleAtomMap", "parameters": "(IQueryAtomContainer source, boolean removeHydrogen)", "modifiers": "private", "return": "void", "signature": "void setSourceSingleAtomMap(IQueryAtomContainer source, boolean removeHydrogen)", "full_signature": "private void setSourceSingleAtomMap(IQueryAtomContainer source, boolean removeHydrogen)", "class_method_signature": "SingleMapping.setSourceSingleAtomMap(IQueryAtomContainer source, boolean removeHydrogen)", "testcase": false, "constructor": false}, {"identifier": "setSourceSingleAtomMap", "parameters": "(boolean removeHydrogen)", "modifiers": "private", "return": "void", "signature": "void setSourceSingleAtomMap(boolean removeHydrogen)", "full_signature": "private void setSourceSingleAtomMap(boolean removeHydrogen)", "class_method_signature": "SingleMapping.setSourceSingleAtomMap(boolean removeHydrogen)", "testcase": false, "constructor": false}, {"identifier": "setTargetSingleAtomMap", "parameters": "(boolean removeHydrogen)", "modifiers": "private", "return": "void", "signature": "void setTargetSingleAtomMap(boolean removeHydrogen)", "full_signature": "private void setTargetSingleAtomMap(boolean removeHydrogen)", "class_method_signature": "SingleMapping.setTargetSingleAtomMap(boolean removeHydrogen)", "testcase": false, "constructor": false}, {"identifier": "postFilter", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void postFilter()", "full_signature": "private void postFilter()", "class_method_signature": "SingleMapping.postFilter()", "testcase": false, "constructor": false}, {"identifier": "sortByValue", "parameters": "(Map<K, V> map)", "modifiers": "private", "return": "Map<K, V>", "signature": "Map<K, V> sortByValue(Map<K, V> map)", "full_signature": "private Map<K, V> sortByValue(Map<K, V> map)", "class_method_signature": "SingleMapping.sortByValue(Map<K, V> map)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/smsd/algorithm/single/SingleMapping.java"}, "focal_method": {"identifier": "getOverLaps", "parameters": "(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)", "modifiers": "protected", "return": "List<Map<IAtom, IAtom>>", "body": "protected List<Map<IAtom, IAtom>> getOverLaps(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)\n            throws CDKException {\n\n        mappings = new ArrayList<Map<IAtom, IAtom>>();\n        connectedBondOrder = new TreeMap<Integer, Double>();\n        this.source = source;\n        this.target = target;\n\n        if (source.getAtomCount() == 1 || (source.getAtomCount() > 0 && source.getBondCount() == 0)) {\n            setSourceSingleAtomMap(removeHydrogen);\n        }\n        if (target.getAtomCount() == 1 || (target.getAtomCount() > 0 && target.getBondCount() == 0)) {\n            setTargetSingleAtomMap(removeHydrogen);\n        }\n\n        postFilter();\n        return mappings;\n    }", "signature": "List<Map<IAtom, IAtom>> getOverLaps(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)", "full_signature": "protected List<Map<IAtom, IAtom>> getOverLaps(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)", "class_method_signature": "SingleMapping.getOverLaps(IAtomContainer source, IAtomContainer target, boolean removeHydrogen)", "testcase": false, "constructor": false, "invocations": ["getAtomCount", "getAtomCount", "getBondCount", "setSourceSingleAtomMap", "getAtomCount", "getAtomCount", "getBondCount", "setTargetSingleAtomMap", "postFilter"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}