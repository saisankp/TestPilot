{"test_class": {"identifier": "ZookeeperRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TestingServer zkServer;", "modifier": "private", "type": "TestingServer", "declarator": "zkServer", "var_name": "zkServer"}, {"original_string": "private ZookeeperRegistry zookeeperRegistry;", "modifier": "private", "type": "ZookeeperRegistry", "declarator": "zookeeperRegistry", "var_name": "zookeeperRegistry"}, {"original_string": "private String service = \"com.alibaba.dubbo.test.injvmServie\";", "modifier": "private", "type": "String", "declarator": "service = \"com.alibaba.dubbo.test.injvmServie\"", "var_name": "service"}, {"original_string": "private URL serviceUrl = URL.valueOf(\"zookeeper://zookeeper/\" + service + \"?notify=false&methods=test1,test2\");", "modifier": "private", "type": "URL", "declarator": "serviceUrl = URL.valueOf(\"zookeeper://zookeeper/\" + service + \"?notify=false&methods=test1,test2\")", "var_name": "serviceUrl"}, {"original_string": "private URL anyUrl = URL.valueOf(\"zookeeper://zookeeper/*\");", "modifier": "private", "type": "URL", "declarator": "anyUrl = URL.valueOf(\"zookeeper://zookeeper/*\")", "var_name": "anyUrl"}, {"original_string": "private URL registryUrl;", "modifier": "private", "type": "URL", "declarator": "registryUrl", "var_name": "registryUrl"}, {"original_string": "private ZookeeperRegistryFactory zookeeperRegistryFactory;", "modifier": "private", "type": "ZookeeperRegistryFactory", "declarator": "zookeeperRegistryFactory", "var_name": "zookeeperRegistryFactory"}], "file": "dubbo-registry/dubbo-registry-zookeeper/src/test/java/com/alibaba/dubbo/registry/zookeeper/ZookeeperRegistryTest.java"}, "test_case": {"identifier": "testDefaultPort", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaultPort() {\n        Assert.assertEquals(\"10.20.153.10:2181\", ZookeeperRegistry.appendDefaultPort(\"10.20.153.10:0\"));\n        Assert.assertEquals(\"10.20.153.10:2181\", ZookeeperRegistry.appendDefaultPort(\"10.20.153.10\"));\n    }", "signature": "void testDefaultPort()", "full_signature": "@Test public void testDefaultPort()", "class_method_signature": "ZookeeperRegistryTest.testDefaultPort()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "appendDefaultPort", "assertEquals", "appendDefaultPort"]}, "focal_class": {"identifier": "ZookeeperRegistry", "superclass": "extends FailbackRegistry", "interfaces": "", "fields": [{"original_string": "private final static Logger logger = LoggerFactory.getLogger(ZookeeperRegistry.class);", "modifier": "private final static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ZookeeperRegistry.class)", "var_name": "logger"}, {"original_string": "private final static int DEFAULT_ZOOKEEPER_PORT = 2181;", "modifier": "private final static", "type": "int", "declarator": "DEFAULT_ZOOKEEPER_PORT = 2181", "var_name": "DEFAULT_ZOOKEEPER_PORT"}, {"original_string": "private final static String DEFAULT_ROOT = \"dubbo\";", "modifier": "private final static", "type": "String", "declarator": "DEFAULT_ROOT = \"dubbo\"", "var_name": "DEFAULT_ROOT"}, {"original_string": "private final String root;", "modifier": "private final", "type": "String", "declarator": "root", "var_name": "root"}, {"original_string": "private final Set<String> anyServices = new ConcurrentHashSet<String>();", "modifier": "private final", "type": "Set<String>", "declarator": "anyServices = new ConcurrentHashSet<String>()", "var_name": "anyServices"}, {"original_string": "private final ConcurrentMap<URL, ConcurrentMap<NotifyListener, ChildListener>> zkListeners = new ConcurrentHashMap<URL, ConcurrentMap<NotifyListener, ChildListener>>();", "modifier": "private final", "type": "ConcurrentMap<URL, ConcurrentMap<NotifyListener, ChildListener>>", "declarator": "zkListeners = new ConcurrentHashMap<URL, ConcurrentMap<NotifyListener, ChildListener>>()", "var_name": "zkListeners"}, {"original_string": "private final ZookeeperClient zkClient;", "modifier": "private final", "type": "ZookeeperClient", "declarator": "zkClient", "var_name": "zkClient"}], "methods": [{"identifier": "ZookeeperRegistry", "parameters": "(URL url, ZookeeperTransporter zookeeperTransporter)", "modifiers": "public", "return": "", "signature": " ZookeeperRegistry(URL url, ZookeeperTransporter zookeeperTransporter)", "full_signature": "public  ZookeeperRegistry(URL url, ZookeeperTransporter zookeeperTransporter)", "class_method_signature": "ZookeeperRegistry.ZookeeperRegistry(URL url, ZookeeperTransporter zookeeperTransporter)", "testcase": false, "constructor": true}, {"identifier": "appendDefaultPort", "parameters": "(String address)", "modifiers": "static", "return": "String", "signature": "String appendDefaultPort(String address)", "full_signature": "static String appendDefaultPort(String address)", "class_method_signature": "ZookeeperRegistry.appendDefaultPort(String address)", "testcase": false, "constructor": false}, {"identifier": "isAvailable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAvailable()", "full_signature": "@Override public boolean isAvailable()", "class_method_signature": "ZookeeperRegistry.isAvailable()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "ZookeeperRegistry.destroy()", "testcase": false, "constructor": false}, {"identifier": "doRegister", "parameters": "(URL url)", "modifiers": "@Override protected", "return": "void", "signature": "void doRegister(URL url)", "full_signature": "@Override protected void doRegister(URL url)", "class_method_signature": "ZookeeperRegistry.doRegister(URL url)", "testcase": false, "constructor": false}, {"identifier": "doUnregister", "parameters": "(URL url)", "modifiers": "@Override protected", "return": "void", "signature": "void doUnregister(URL url)", "full_signature": "@Override protected void doUnregister(URL url)", "class_method_signature": "ZookeeperRegistry.doUnregister(URL url)", "testcase": false, "constructor": false}, {"identifier": "doSubscribe", "parameters": "(final URL url, final NotifyListener listener)", "modifiers": "@Override protected", "return": "void", "signature": "void doSubscribe(final URL url, final NotifyListener listener)", "full_signature": "@Override protected void doSubscribe(final URL url, final NotifyListener listener)", "class_method_signature": "ZookeeperRegistry.doSubscribe(final URL url, final NotifyListener listener)", "testcase": false, "constructor": false}, {"identifier": "doUnsubscribe", "parameters": "(URL url, NotifyListener listener)", "modifiers": "@Override protected", "return": "void", "signature": "void doUnsubscribe(URL url, NotifyListener listener)", "full_signature": "@Override protected void doUnsubscribe(URL url, NotifyListener listener)", "class_method_signature": "ZookeeperRegistry.doUnsubscribe(URL url, NotifyListener listener)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(URL url)", "modifiers": "@Override public", "return": "List<URL>", "signature": "List<URL> lookup(URL url)", "full_signature": "@Override public List<URL> lookup(URL url)", "class_method_signature": "ZookeeperRegistry.lookup(URL url)", "testcase": false, "constructor": false}, {"identifier": "toRootDir", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String toRootDir()", "full_signature": "private String toRootDir()", "class_method_signature": "ZookeeperRegistry.toRootDir()", "testcase": false, "constructor": false}, {"identifier": "toRootPath", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String toRootPath()", "full_signature": "private String toRootPath()", "class_method_signature": "ZookeeperRegistry.toRootPath()", "testcase": false, "constructor": false}, {"identifier": "toServicePath", "parameters": "(URL url)", "modifiers": "private", "return": "String", "signature": "String toServicePath(URL url)", "full_signature": "private String toServicePath(URL url)", "class_method_signature": "ZookeeperRegistry.toServicePath(URL url)", "testcase": false, "constructor": false}, {"identifier": "toCategoriesPath", "parameters": "(URL url)", "modifiers": "private", "return": "String[]", "signature": "String[] toCategoriesPath(URL url)", "full_signature": "private String[] toCategoriesPath(URL url)", "class_method_signature": "ZookeeperRegistry.toCategoriesPath(URL url)", "testcase": false, "constructor": false}, {"identifier": "toCategoryPath", "parameters": "(URL url)", "modifiers": "private", "return": "String", "signature": "String toCategoryPath(URL url)", "full_signature": "private String toCategoryPath(URL url)", "class_method_signature": "ZookeeperRegistry.toCategoryPath(URL url)", "testcase": false, "constructor": false}, {"identifier": "toUrlPath", "parameters": "(URL url)", "modifiers": "private", "return": "String", "signature": "String toUrlPath(URL url)", "full_signature": "private String toUrlPath(URL url)", "class_method_signature": "ZookeeperRegistry.toUrlPath(URL url)", "testcase": false, "constructor": false}, {"identifier": "toUrlsWithoutEmpty", "parameters": "(URL consumer, List<String> providers)", "modifiers": "private", "return": "List<URL>", "signature": "List<URL> toUrlsWithoutEmpty(URL consumer, List<String> providers)", "full_signature": "private List<URL> toUrlsWithoutEmpty(URL consumer, List<String> providers)", "class_method_signature": "ZookeeperRegistry.toUrlsWithoutEmpty(URL consumer, List<String> providers)", "testcase": false, "constructor": false}, {"identifier": "toUrlsWithEmpty", "parameters": "(URL consumer, String path, List<String> providers)", "modifiers": "private", "return": "List<URL>", "signature": "List<URL> toUrlsWithEmpty(URL consumer, String path, List<String> providers)", "full_signature": "private List<URL> toUrlsWithEmpty(URL consumer, String path, List<String> providers)", "class_method_signature": "ZookeeperRegistry.toUrlsWithEmpty(URL consumer, String path, List<String> providers)", "testcase": false, "constructor": false}], "file": "dubbo-registry/dubbo-registry-zookeeper/src/main/java/com/alibaba/dubbo/registry/zookeeper/ZookeeperRegistry.java"}, "focal_method": {"identifier": "appendDefaultPort", "parameters": "(String address)", "modifiers": "static", "return": "String", "body": "static String appendDefaultPort(String address) {\n        if (address != null && address.length() > 0) {\n            int i = address.indexOf(':');\n            if (i < 0) {\n                return address + \":\" + DEFAULT_ZOOKEEPER_PORT;\n            } else if (Integer.parseInt(address.substring(i + 1)) == 0) {\n                return address.substring(0, i + 1) + DEFAULT_ZOOKEEPER_PORT;\n            }\n        }\n        return address;\n    }", "signature": "String appendDefaultPort(String address)", "full_signature": "static String appendDefaultPort(String address)", "class_method_signature": "ZookeeperRegistry.appendDefaultPort(String address)", "testcase": false, "constructor": false, "invocations": ["length", "indexOf", "parseInt", "substring", "substring"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}