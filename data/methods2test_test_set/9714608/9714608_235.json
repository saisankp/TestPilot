{"test_class": {"identifier": "CallerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InnerCallerTest caller;", "modifier": "private", "type": "InnerCallerTest", "declarator": "caller", "var_name": "caller"}], "file": "core/vmutils/src/test/java/org/arakhne/afc/vmutil/CallerTest.java"}, "test_case": {"identifier": "getCallerClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getCallerClass() throws Exception {\n    \tassertEquals(InnerCallerTest.class, this.caller.innerinnerTestGetCallerClass());\n\t}", "signature": "void getCallerClass()", "full_signature": "@Test public void getCallerClass()", "class_method_signature": "CallerTest.getCallerClass()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "innerinnerTestGetCallerClass"]}, "focal_class": {"identifier": "Caller", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String MODULE_NAME = \"org.arakhne.afc.core.vmutils\";", "modifier": "public static final", "type": "String", "declarator": "MODULE_NAME = \"org.arakhne.afc.core.vmutils\"", "var_name": "MODULE_NAME"}, {"original_string": "private static org.arakhne.afc.vmutil.caller.Caller caller;", "modifier": "private static", "type": "org.arakhne.afc.vmutil.caller.Caller", "declarator": "caller", "var_name": "caller"}], "methods": [{"identifier": "Caller", "parameters": "()", "modifiers": "private", "return": "", "signature": " Caller()", "full_signature": "private  Caller()", "class_method_signature": "Caller.Caller()", "testcase": false, "constructor": true}, {"identifier": "getCaller", "parameters": "()", "modifiers": "@Pure public static", "return": "org.arakhne.afc.vmutil.caller.Caller", "signature": "org.arakhne.afc.vmutil.caller.Caller getCaller()", "full_signature": "@Pure public static org.arakhne.afc.vmutil.caller.Caller getCaller()", "class_method_signature": "Caller.getCaller()", "testcase": false, "constructor": false}, {"identifier": "getCallerMethod", "parameters": "()", "modifiers": "@Pure public static", "return": "String", "signature": "String getCallerMethod()", "full_signature": "@Pure public static String getCallerMethod()", "class_method_signature": "Caller.getCallerMethod()", "testcase": false, "constructor": false}, {"identifier": "getCallerMethod", "parameters": "(int level)", "modifiers": "@Pure public static", "return": "String", "signature": "String getCallerMethod(int level)", "full_signature": "@Pure public static String getCallerMethod(int level)", "class_method_signature": "Caller.getCallerMethod(int level)", "testcase": false, "constructor": false}, {"identifier": "getCallerClass", "parameters": "()", "modifiers": "@Pure public static", "return": "Class<?>", "signature": "Class<?> getCallerClass()", "full_signature": "@Pure public static Class<?> getCallerClass()", "class_method_signature": "Caller.getCallerClass()", "testcase": false, "constructor": false}, {"identifier": "getCallerClass", "parameters": "(int level)", "modifiers": "@Pure public static", "return": "Class<?>", "signature": "Class<?> getCallerClass(int level)", "full_signature": "@Pure public static Class<?> getCallerClass(int level)", "class_method_signature": "Caller.getCallerClass(int level)", "testcase": false, "constructor": false}, {"identifier": "findClassForFirstCallerOutsideVmutilModule", "parameters": "()", "modifiers": "@Pure public static", "return": "Class<?>", "signature": "Class<?> findClassForFirstCallerOutsideVmutilModule()", "full_signature": "@Pure public static Class<?> findClassForFirstCallerOutsideVmutilModule()", "class_method_signature": "Caller.findClassForFirstCallerOutsideVmutilModule()", "testcase": false, "constructor": false}], "file": "core/vmutils/src/main/java/org/arakhne/afc/vmutil/Caller.java"}, "focal_method": {"identifier": "getCallerClass", "parameters": "()", "modifiers": "@Pure public static", "return": "Class<?>", "body": "@Pure\n\tpublic static Class<?> getCallerClass() {\n    \treturn getCaller().getCallerClass(2);\n\t}", "signature": "Class<?> getCallerClass()", "full_signature": "@Pure public static Class<?> getCallerClass()", "class_method_signature": "Caller.getCallerClass()", "testcase": false, "constructor": false, "invocations": ["getCallerClass", "getCaller"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}