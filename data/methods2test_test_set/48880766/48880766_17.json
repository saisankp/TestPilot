{"test_class": {"identifier": "HtmlWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LINE_END = System.lineSeparator();", "modifier": "private static final", "type": "String", "declarator": "LINE_END = System.lineSeparator()", "var_name": "LINE_END"}, {"original_string": "private double[] v1 = {1, 2, NaN};", "modifier": "private", "type": "double[]", "declarator": "v1 = {1, 2, NaN}", "var_name": "v1"}, {"original_string": "private double[] v2 = {1, 2, NaN};", "modifier": "private", "type": "double[]", "declarator": "v2 = {1, 2, NaN}", "var_name": "v2"}, {"original_string": "private Table table =\n      Table.create(\"t\", DoubleColumn.create(\"v\", v1), DoubleColumn.create(\"v2\", v2));", "modifier": "private", "type": "Table", "declarator": "table =\n      Table.create(\"t\", DoubleColumn.create(\"v\", v1), DoubleColumn.create(\"v2\", v2))", "var_name": "table"}], "file": "html/src/test/java/tech/tablesaw/io/html/HtmlWriterTest.java"}, "test_case": {"identifier": "escape", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void escape() throws IOException {\n    String[] data = {\"<p>foo</p>\"};\n    Table table = Table.create(\"t\", StringColumn.create(\"data\", data));\n\n    OutputStream baos = new ByteArrayOutputStream();\n\n    table.write().usingOptions(HtmlWriteOptions.builder(baos).build());\n    String output = baos.toString();\n    assertEquals(\n        \"<table>\"\n            + LINE_END\n            + \" <thead>\"\n            + LINE_END\n            + \"  <tr>\"\n            + LINE_END\n            + \"   <th>data</th>\"\n            + LINE_END\n            + \"  </tr>\"\n            + LINE_END\n            + \" </thead>\"\n            + LINE_END\n            + \" <tbody>\"\n            + LINE_END\n            + \"  <tr>\"\n            + LINE_END\n            + \"   <td>&lt;p&gt;foo&lt;/p&gt;</td>\"\n            + LINE_END\n            + \"  </tr>\"\n            + LINE_END\n            + \" </tbody>\"\n            + LINE_END\n            + \"</table>\",\n        output);\n  }", "signature": "void escape()", "full_signature": "@Test public void escape()", "class_method_signature": "HtmlWriterTest.escape()", "testcase": true, "constructor": false, "invocations": ["create", "create", "usingOptions", "write", "build", "builder", "toString", "assertEquals"]}, "focal_class": {"identifier": "HtmlWriter", "superclass": "", "interfaces": "implements DataWriter<HtmlWriteOptions>", "fields": [{"original_string": "private static final HtmlWriter INSTANCE = new HtmlWriter();", "modifier": "private static final", "type": "HtmlWriter", "declarator": "INSTANCE = new HtmlWriter()", "var_name": "INSTANCE"}], "methods": [{"identifier": "register", "parameters": "(WriterRegistry registry)", "modifiers": "public static", "return": "void", "signature": "void register(WriterRegistry registry)", "full_signature": "public static void register(WriterRegistry registry)", "class_method_signature": "HtmlWriter.register(WriterRegistry registry)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Table table, HtmlWriteOptions options)", "modifiers": "public", "return": "void", "signature": "void write(Table table, HtmlWriteOptions options)", "full_signature": "public void write(Table table, HtmlWriteOptions options)", "class_method_signature": "HtmlWriter.write(Table table, HtmlWriteOptions options)", "testcase": false, "constructor": false}, {"identifier": "row", "parameters": "(\n      int row, Table table, ElementCreator elements, HtmlWriteOptions options)", "modifiers": "private static", "return": "Element", "signature": "Element row(\n      int row, Table table, ElementCreator elements, HtmlWriteOptions options)", "full_signature": "private static Element row(\n      int row, Table table, ElementCreator elements, HtmlWriteOptions options)", "class_method_signature": "HtmlWriter.row(\n      int row, Table table, ElementCreator elements, HtmlWriteOptions options)", "testcase": false, "constructor": false}, {"identifier": "header", "parameters": "(List<Column<?>> cols, ElementCreator elements)", "modifiers": "private static", "return": "Element", "signature": "Element header(List<Column<?>> cols, ElementCreator elements)", "full_signature": "private static Element header(List<Column<?>> cols, ElementCreator elements)", "class_method_signature": "HtmlWriter.header(List<Column<?>> cols, ElementCreator elements)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Table table, Destination dest)", "modifiers": "@Override public", "return": "void", "signature": "void write(Table table, Destination dest)", "full_signature": "@Override public void write(Table table, Destination dest)", "class_method_signature": "HtmlWriter.write(Table table, Destination dest)", "testcase": false, "constructor": false}], "file": "html/src/main/java/tech/tablesaw/io/html/HtmlWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(Table table, HtmlWriteOptions options)", "modifiers": "public", "return": "void", "body": "public void write(Table table, HtmlWriteOptions options) throws IOException {\n    ElementCreator elements = options.elementCreator();\n    Element html = elements.create(\"table\");\n    html.appendChild(header(table.columns(), elements));\n\n    Element tbody = elements.create(\"tbody\");\n    html.appendChild(tbody);\n    for (int row = 0; row < table.rowCount(); row++) {\n      tbody.appendChild(row(row, table, elements, options));\n    }\n\n    try (Writer writer = options.destination().createWriter()) {\n      writer.write(html.toString());\n    }\n  }", "signature": "void write(Table table, HtmlWriteOptions options)", "full_signature": "public void write(Table table, HtmlWriteOptions options)", "class_method_signature": "HtmlWriter.write(Table table, HtmlWriteOptions options)", "testcase": false, "constructor": false, "invocations": ["elementCreator", "create", "appendChild", "header", "columns", "create", "appendChild", "rowCount", "appendChild", "row", "createWriter", "destination", "write", "toString"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}