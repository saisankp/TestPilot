{"test_class": {"identifier": "TimedMessageListTrapTest", "superclass": "", "interfaces": "", "fields": [], "file": "OcavaCore/src/test/java/com/ocadotechnology/notification/util/TimedMessageListTrapTest.java"}, "test_case": {"identifier": "getCapturedNotifications", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCapturedNotifications() {\n        TimedMessageListTrap<TestNotification> trap = TimedMessageListTrap.createAndSubscribe(TestNotification.class, new MockTimeProvider(), TestSchedulerType.TEST_SCHEDULER_TYPE);\n        NotificationRouter.get().broadcast(new TestNotification());\n        NotificationRouter.get().broadcast(new TestNotification());\n        NotificationRouter.get().broadcast(new TestNotification());\n        Assertions.assertEquals(3, trap.getCapturedNotifications().size(), \"Expected 3 Notifications\");\n        Assertions.assertEquals(0.0, trap.getCapturedNotifications().get(0).time, 0.1);\n        Assertions.assertEquals(1.0, trap.getCapturedNotifications().get(1).time, 0.1);\n        Assertions.assertEquals(2.0, trap.getCapturedNotifications().get(2).time, 0.1);\n    }", "signature": "void getCapturedNotifications()", "full_signature": "@Test public void getCapturedNotifications()", "class_method_signature": "TimedMessageListTrapTest.getCapturedNotifications()", "testcase": true, "constructor": false, "invocations": ["createAndSubscribe", "broadcast", "get", "broadcast", "get", "broadcast", "get", "assertEquals", "size", "getCapturedNotifications", "assertEquals", "get", "getCapturedNotifications", "assertEquals", "get", "getCapturedNotifications", "assertEquals", "get", "getCapturedNotifications"]}, "focal_class": {"identifier": "TimedMessageListTrap", "superclass": "", "interfaces": "implements Subscriber", "fields": [{"original_string": "private final TimeProvider timeProvider;", "modifier": "private final", "type": "TimeProvider", "declarator": "timeProvider", "var_name": "timeProvider"}, {"original_string": "private final Class<T> type;", "modifier": "private final", "type": "Class<T>", "declarator": "type", "var_name": "type"}, {"original_string": "private final EventSchedulerType schedulerType;", "modifier": "private final", "type": "EventSchedulerType", "declarator": "schedulerType", "var_name": "schedulerType"}, {"original_string": "private final List<TimedMessage<T>> trappedNotifications = new ArrayList<>();", "modifier": "private final", "type": "List<TimedMessage<T>>", "declarator": "trappedNotifications = new ArrayList<>()", "var_name": "trappedNotifications"}], "methods": [{"identifier": "TimedMessageListTrap", "parameters": "(Class<T> type, TimeProvider timeProvider, EventSchedulerType schedulerType)", "modifiers": "private", "return": "", "signature": " TimedMessageListTrap(Class<T> type, TimeProvider timeProvider, EventSchedulerType schedulerType)", "full_signature": "private  TimedMessageListTrap(Class<T> type, TimeProvider timeProvider, EventSchedulerType schedulerType)", "class_method_signature": "TimedMessageListTrap.TimedMessageListTrap(Class<T> type, TimeProvider timeProvider, EventSchedulerType schedulerType)", "testcase": false, "constructor": true}, {"identifier": "createAndSubscribe", "parameters": "(Class<T> type, TimeProvider timeProvider, EventSchedulerType schedulerType)", "modifiers": "public static", "return": "TimedMessageListTrap<T>", "signature": "TimedMessageListTrap<T> createAndSubscribe(Class<T> type, TimeProvider timeProvider, EventSchedulerType schedulerType)", "full_signature": "public static TimedMessageListTrap<T> createAndSubscribe(Class<T> type, TimeProvider timeProvider, EventSchedulerType schedulerType)", "class_method_signature": "TimedMessageListTrap.createAndSubscribe(Class<T> type, TimeProvider timeProvider, EventSchedulerType schedulerType)", "testcase": false, "constructor": false}, {"identifier": "anyNotificationOfType", "parameters": "(T n)", "modifiers": "@Subscribe public", "return": "void", "signature": "void anyNotificationOfType(T n)", "full_signature": "@Subscribe public void anyNotificationOfType(T n)", "class_method_signature": "TimedMessageListTrap.anyNotificationOfType(T n)", "testcase": false, "constructor": false}, {"identifier": "getCapturedNotifications", "parameters": "()", "modifiers": "public", "return": "ImmutableList<TimedMessage<T>>", "signature": "ImmutableList<TimedMessage<T>> getCapturedNotifications()", "full_signature": "public ImmutableList<TimedMessage<T>> getCapturedNotifications()", "class_method_signature": "TimedMessageListTrap.getCapturedNotifications()", "testcase": false, "constructor": false}, {"identifier": "getSchedulerType", "parameters": "()", "modifiers": "@Override public", "return": "EventSchedulerType", "signature": "EventSchedulerType getSchedulerType()", "full_signature": "@Override public EventSchedulerType getSchedulerType()", "class_method_signature": "TimedMessageListTrap.getSchedulerType()", "testcase": false, "constructor": false}], "file": "OcavaCore/src/main/java/com/ocadotechnology/notification/util/TimedMessageListTrap.java"}, "focal_method": {"identifier": "getCapturedNotifications", "parameters": "()", "modifiers": "public", "return": "ImmutableList<TimedMessage<T>>", "body": "public ImmutableList<TimedMessage<T>> getCapturedNotifications() {\n        return ImmutableList.copyOf(trappedNotifications);\n    }", "signature": "ImmutableList<TimedMessage<T>> getCapturedNotifications()", "full_signature": "public ImmutableList<TimedMessage<T>> getCapturedNotifications()", "class_method_signature": "TimedMessageListTrap.getCapturedNotifications()", "testcase": false, "constructor": false, "invocations": ["copyOf"]}, "repository": {"repo_id": 99997703, "url": "https://github.com/ocadotechnology/Ocava", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 1137, "license": "licensed"}}