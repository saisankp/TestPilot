{"test_class": {"identifier": "ImmutableResourcesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonPointer KNOWN_RESOURCE_PATH_0 = JsonPointer.empty();", "modifier": "private static final", "type": "JsonPointer", "declarator": "KNOWN_RESOURCE_PATH_0 = JsonPointer.empty()", "var_name": "KNOWN_RESOURCE_PATH_0"}, {"original_string": "private static final JsonPointer KNOWN_RESOURCE_PATH_1 = JsonPointer.of(\"/foo/bar\");", "modifier": "private static final", "type": "JsonPointer", "declarator": "KNOWN_RESOURCE_PATH_1 = JsonPointer.of(\"/foo/bar\")", "var_name": "KNOWN_RESOURCE_PATH_1"}], "file": "model/policies/src/test/java/org/eclipse/ditto/model/policies/ImmutableResourcesTest.java"}, "test_case": {"identifier": "createResourcesWithSamePathsShouldFail", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void createResourcesWithSamePathsShouldFail() {\n        final Collection<Resource> resourceList = new ArrayList<>();\n        resourceList.add(Resource.newInstance(ResourceKey.newInstance(RESOURCE_TYPE, KNOWN_RESOURCE_PATH_1),\n                EffectedPermissions.newInstance(PERMISSIONS_ALL, PoliciesModelFactory.noPermissions())));\n        resourceList.add(Resource.newInstance(ResourceKey.newInstance(RESOURCE_TYPE, KNOWN_RESOURCE_PATH_1),\n                EffectedPermissions.newInstance(PoliciesModelFactory.noPermissions(),\n                        PoliciesModelFactory.newPermissions(TestConstants.Policy.PERMISSION_READ))));\n\n        ImmutableResources.of(resourceList);\n    }", "signature": "void createResourcesWithSamePathsShouldFail()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void createResourcesWithSamePathsShouldFail()", "class_method_signature": "ImmutableResourcesTest.createResourcesWithSamePathsShouldFail()", "testcase": true, "constructor": false, "invocations": ["add", "newInstance", "newInstance", "newInstance", "noPermissions", "add", "newInstance", "newInstance", "newInstance", "noPermissions", "newPermissions", "of"]}, "focal_class": {"identifier": "ImmutableResources", "superclass": "", "interfaces": "implements Resources", "fields": [{"original_string": "private final Map<ResourceKey, Resource> resources;", "modifier": "private final", "type": "Map<ResourceKey, Resource>", "declarator": "resources", "var_name": "resources"}], "methods": [{"identifier": "ImmutableResources", "parameters": "(final Map<ResourceKey, Resource> theResources)", "modifiers": "private", "return": "", "signature": " ImmutableResources(final Map<ResourceKey, Resource> theResources)", "full_signature": "private  ImmutableResources(final Map<ResourceKey, Resource> theResources)", "class_method_signature": "ImmutableResources.ImmutableResources(final Map<ResourceKey, Resource> theResources)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Iterable<Resource> resources)", "modifiers": "public static", "return": "ImmutableResources", "signature": "ImmutableResources of(final Iterable<Resource> resources)", "full_signature": "public static ImmutableResources of(final Iterable<Resource> resources)", "class_method_signature": "ImmutableResources.of(final Iterable<Resource> resources)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "Resources", "signature": "Resources fromJson(final JsonObject jsonObject)", "full_signature": "public static Resources fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutableResources.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(final ResourceKey resourceKey)", "modifiers": "@Override public", "return": "Optional<Resource>", "signature": "Optional<Resource> getResource(final ResourceKey resourceKey)", "full_signature": "@Override public Optional<Resource> getResource(final ResourceKey resourceKey)", "class_method_signature": "ImmutableResources.getResource(final ResourceKey resourceKey)", "testcase": false, "constructor": false}, {"identifier": "setResource", "parameters": "(final Resource resource)", "modifiers": "@Override public", "return": "Resources", "signature": "Resources setResource(final Resource resource)", "full_signature": "@Override public Resources setResource(final Resource resource)", "class_method_signature": "ImmutableResources.setResource(final Resource resource)", "testcase": false, "constructor": false}, {"identifier": "createNewResourcesWithNewResource", "parameters": "(final Resource newResource)", "modifiers": "private", "return": "Resources", "signature": "Resources createNewResourcesWithNewResource(final Resource newResource)", "full_signature": "private Resources createNewResourcesWithNewResource(final Resource newResource)", "class_method_signature": "ImmutableResources.createNewResourcesWithNewResource(final Resource newResource)", "testcase": false, "constructor": false}, {"identifier": "copyResources", "parameters": "()", "modifiers": "private", "return": "Map<ResourceKey, Resource>", "signature": "Map<ResourceKey, Resource> copyResources()", "full_signature": "private Map<ResourceKey, Resource> copyResources()", "class_method_signature": "ImmutableResources.copyResources()", "testcase": false, "constructor": false}, {"identifier": "removeResource", "parameters": "(final ResourceKey resourceKey)", "modifiers": "@Override public", "return": "Resources", "signature": "Resources removeResource(final ResourceKey resourceKey)", "full_signature": "@Override public Resources removeResource(final ResourceKey resourceKey)", "class_method_signature": "ImmutableResources.removeResource(final ResourceKey resourceKey)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "ImmutableResources.getSize()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "ImmutableResources.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableResources.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "resourcesToJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "private", "return": "JsonObject", "signature": "JsonObject resourcesToJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "private JsonObject resourcesToJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableResources.resourcesToJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Resource>", "signature": "Iterator<Resource> iterator()", "full_signature": "@Override public Iterator<Resource> iterator()", "class_method_signature": "ImmutableResources.iterator()", "testcase": false, "constructor": false}, {"identifier": "stream", "parameters": "()", "modifiers": "@Override public", "return": "Stream<Resource>", "signature": "Stream<Resource> stream()", "full_signature": "@Override public Stream<Resource> stream()", "class_method_signature": "ImmutableResources.stream()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableResources.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableResources.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableResources.toString()", "testcase": false, "constructor": false}], "file": "model/policies/src/main/java/org/eclipse/ditto/model/policies/ImmutableResources.java"}, "focal_method": {"identifier": "of", "parameters": "(final Iterable<Resource> resources)", "modifiers": "public static", "return": "ImmutableResources", "body": "public static ImmutableResources of(final Iterable<Resource> resources) {\n        checkNotNull(resources, \"resources\");\n\n        final Map<ResourceKey, Resource> resourcesMap = new HashMap<>();\n        resources.forEach(resource -> {\n            final Resource existingResource = resourcesMap.put(resource.getResourceKey(), resource);\n            if (null != existingResource) {\n                final String msgTemplate = \"There is more than one Resource with the path <{0}>!\";\n                throw new IllegalArgumentException(MessageFormat.format(msgTemplate, resource.getPath()));\n            }\n        });\n\n        return new ImmutableResources(resourcesMap);\n    }", "signature": "ImmutableResources of(final Iterable<Resource> resources)", "full_signature": "public static ImmutableResources of(final Iterable<Resource> resources)", "class_method_signature": "ImmutableResources.of(final Iterable<Resource> resources)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "forEach", "put", "getResourceKey", "format", "getPath"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}