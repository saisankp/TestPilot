{"test_class": {"identifier": "CreateDetectorMappingRequestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Expression expression;", "modifier": "private", "type": "Expression", "declarator": "expression", "var_name": "expression"}, {"original_string": "private ConsumerDetectorMapping consumerDetectorMapping;", "modifier": "private", "type": "ConsumerDetectorMapping", "declarator": "consumerDetectorMapping", "var_name": "consumerDetectorMapping"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}], "file": "modelservice/src/test/java/com/expedia/adaptivealerting/modelservice/web/request/CreateDetectorMappingRequestTest.java"}, "test_case": {"identifier": "testValidate_nullUser", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testValidate_nullUser() {\n        val requestUnderTest = new CreateDetectorMappingRequest(expression, consumerDetectorMapping, null);\n        requestUnderTest.validate();\n    }", "signature": "void testValidate_nullUser()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testValidate_nullUser()", "class_method_signature": "CreateDetectorMappingRequestTest.testValidate_nullUser()", "testcase": true, "constructor": false, "invocations": ["validate"]}, "focal_class": {"identifier": "CreateDetectorMappingRequest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Expression expression;", "modifier": "private", "type": "Expression", "declarator": "expression", "var_name": "expression"}, {"original_string": "private ConsumerDetectorMapping consumerDetectorMapping;", "modifier": "private", "type": "ConsumerDetectorMapping", "declarator": "consumerDetectorMapping", "var_name": "consumerDetectorMapping"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}], "methods": [{"identifier": "validate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void validate()", "full_signature": "public void validate()", "class_method_signature": "CreateDetectorMappingRequest.validate()", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getFields()", "full_signature": "public Set<String> getFields()", "class_method_signature": "CreateDetectorMappingRequest.getFields()", "testcase": false, "constructor": false}], "file": "modelservice/src/main/java/com/expedia/adaptivealerting/modelservice/web/request/CreateDetectorMappingRequest.java"}, "focal_method": {"identifier": "validate", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void validate() {\n        RequestValidator.validateExpression(this.getExpression());\n        RequestValidator.validateUser(this.getUser());\n        RequestValidator.validateMappingDetector(this.getConsumerDetectorMapping());\n    }", "signature": "void validate()", "full_signature": "public void validate()", "class_method_signature": "CreateDetectorMappingRequest.validate()", "testcase": false, "constructor": false, "invocations": ["validateExpression", "getExpression", "validateUser", "getUser", "validateMappingDetector", "getConsumerDetectorMapping"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}