{"test_class": {"identifier": "NotificationManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mocked private SenderCache senderCache;", "modifier": "@Mocked private", "type": "SenderCache", "declarator": "senderCache", "var_name": "senderCache"}, {"original_string": "@Mocked private Cache<NotificationClientRepository> clientRepositoryCache;", "modifier": "@Mocked private", "type": "Cache<NotificationClientRepository>", "declarator": "clientRepositoryCache", "var_name": "clientRepositoryCache"}, {"original_string": "@Mocked private RepositoryFactory repositoryFactory;", "modifier": "@Mocked private", "type": "RepositoryFactory", "declarator": "repositoryFactory", "var_name": "repositoryFactory"}, {"original_string": "@Mocked private NotificationClientRepository clientRepository;", "modifier": "@Mocked private", "type": "NotificationClientRepository", "declarator": "clientRepository", "var_name": "clientRepository"}, {"original_string": "@Mocked private Sender<HttpClient> httpSender;", "modifier": "@Mocked private", "type": "Sender<HttpClient>", "declarator": "httpSender", "var_name": "httpSender"}, {"original_string": "@Mocked private Sender<GcmClient> gcmSender;", "modifier": "@Mocked private", "type": "Sender<GcmClient>", "declarator": "gcmSender", "var_name": "gcmSender"}, {"original_string": "private final DataSource source = new DataSource(\"someId\", null, null, null);", "modifier": "private final", "type": "DataSource", "declarator": "source = new DataSource(\"someId\", null, null, null)", "var_name": "source"}, {"original_string": "private final HttpClient httpClient = new HttpClient(\"someId\", \"someCallbackUrl\", false);", "modifier": "private final", "type": "HttpClient", "declarator": "httpClient = new HttpClient(\"someId\", \"someCallbackUrl\", false)", "var_name": "httpClient"}, {"original_string": "private final GcmClient gcmClient = new GcmClient(\"someId\", \"someDeviceId\");", "modifier": "private final", "type": "GcmClient", "declarator": "gcmClient = new GcmClient(\"someId\", \"someDeviceId\")", "var_name": "gcmClient"}, {"original_string": "private NotificationManager notificationManager;", "modifier": "private", "type": "NotificationManager", "declarator": "notificationManager", "var_name": "notificationManager"}], "file": "server/src/test/java/org/jvalue/ods/notifications/NotificationManagerTest.java"}, "test_case": {"identifier": "testOnNewDataCompleteRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testOnNewDataCompleteRemove() {\n\t\tnew Expectations(notificationManager) {{\n\t\t\tnotificationManager.getAll(source); result = Arrays.asList(gcmClient);\n\t\t\tgcmSender.getSenderResult().getStatus(); result = SenderResult.Status.REMOVE_CLIENT;\n\t\t\tgcmSender.getSenderResult().getOldClient(); result = gcmClient;\n\n\t\t\tclientRepositoryCache.contains(anyString); result = true;\n\t\t\tclientRepositoryCache.get(anyString); result = clientRepository;\n\t\t}};\n\n\t\tnotificationManager.onNewDataComplete(source);\n\n\t\tnew Verifications() {{\n\t\t\tgcmSender.onNewDataComplete();\n\t\t\tsenderCache.release(source, gcmClient);\n\t\t\tclientRepository.remove(gcmClient);\n\t\t}};\n\t}", "signature": "void testOnNewDataCompleteRemove()", "full_signature": "@Test public void testOnNewDataCompleteRemove()", "class_method_signature": "NotificationManagerTest.testOnNewDataCompleteRemove()", "testcase": true, "constructor": false, "invocations": ["getAll", "asList", "getStatus", "getSenderResult", "getOldClient", "getSenderResult", "contains", "get", "onNewDataComplete", "onNewDataComplete", "release", "remove"]}, "focal_class": {"identifier": "NotificationManager", "superclass": "extends AbstractDataSourcePropertyManager<Client, NotificationClientRepository>", "interfaces": "implements DataSink", "fields": [{"original_string": "private final SenderCache senderCache;", "modifier": "private final", "type": "SenderCache", "declarator": "senderCache", "var_name": "senderCache"}], "methods": [{"identifier": "NotificationManager", "parameters": "(\n\t\t\tCache<NotificationClientRepository> repositoryCache,\n\t\t\tRepositoryFactory repositoryFactory,\n\t\t\tSenderCache senderCache)", "modifiers": "@Inject", "return": "", "signature": " NotificationManager(\n\t\t\tCache<NotificationClientRepository> repositoryCache,\n\t\t\tRepositoryFactory repositoryFactory,\n\t\t\tSenderCache senderCache)", "full_signature": "@Inject  NotificationManager(\n\t\t\tCache<NotificationClientRepository> repositoryCache,\n\t\t\tRepositoryFactory repositoryFactory,\n\t\t\tSenderCache senderCache)", "class_method_signature": "NotificationManager.NotificationManager(\n\t\t\tCache<NotificationClientRepository> repositoryCache,\n\t\t\tRepositoryFactory repositoryFactory,\n\t\t\tSenderCache senderCache)", "testcase": false, "constructor": true}, {"identifier": "onNewDataStart", "parameters": "(DataSource source)", "modifiers": "@Override public", "return": "void", "signature": "void onNewDataStart(DataSource source)", "full_signature": "@Override public void onNewDataStart(DataSource source)", "class_method_signature": "NotificationManager.onNewDataStart(DataSource source)", "testcase": false, "constructor": false}, {"identifier": "onNewDataItem", "parameters": "(DataSource source, ObjectNode data)", "modifiers": "@Override public", "return": "void", "signature": "void onNewDataItem(DataSource source, ObjectNode data)", "full_signature": "@Override public void onNewDataItem(DataSource source, ObjectNode data)", "class_method_signature": "NotificationManager.onNewDataItem(DataSource source, ObjectNode data)", "testcase": false, "constructor": false}, {"identifier": "onNewDataComplete", "parameters": "(DataSource source)", "modifiers": "@Override public", "return": "void", "signature": "void onNewDataComplete(DataSource source)", "full_signature": "@Override public void onNewDataComplete(DataSource source)", "class_method_signature": "NotificationManager.onNewDataComplete(DataSource source)", "testcase": false, "constructor": false}, {"identifier": "doAdd", "parameters": "(DataSource source, DataRepository dataRepository, Client client)", "modifiers": "@Override protected", "return": "void", "signature": "void doAdd(DataSource source, DataRepository dataRepository, Client client)", "full_signature": "@Override protected void doAdd(DataSource source, DataRepository dataRepository, Client client)", "class_method_signature": "NotificationManager.doAdd(DataSource source, DataRepository dataRepository, Client client)", "testcase": false, "constructor": false}, {"identifier": "doRemove", "parameters": "(DataSource source, DataRepository dataRepository, Client client)", "modifiers": "@Override protected", "return": "void", "signature": "void doRemove(DataSource source, DataRepository dataRepository, Client client)", "full_signature": "@Override protected void doRemove(DataSource source, DataRepository dataRepository, Client client)", "class_method_signature": "NotificationManager.doRemove(DataSource source, DataRepository dataRepository, Client client)", "testcase": false, "constructor": false}, {"identifier": "doRemoveAll", "parameters": "(DataSource source)", "modifiers": "@Override protected", "return": "void", "signature": "void doRemoveAll(DataSource source)", "full_signature": "@Override protected void doRemoveAll(DataSource source)", "class_method_signature": "NotificationManager.doRemoveAll(DataSource source)", "testcase": false, "constructor": false}, {"identifier": "createNewRepository", "parameters": "(String sourceId, RepositoryFactory repositoryFactory)", "modifiers": "@Override protected", "return": "NotificationClientRepository", "signature": "NotificationClientRepository createNewRepository(String sourceId, RepositoryFactory repositoryFactory)", "full_signature": "@Override protected NotificationClientRepository createNewRepository(String sourceId, RepositoryFactory repositoryFactory)", "class_method_signature": "NotificationManager.createNewRepository(String sourceId, RepositoryFactory repositoryFactory)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/notifications/NotificationManager.java"}, "focal_method": {"identifier": "onNewDataComplete", "parameters": "(DataSource source)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void onNewDataComplete(DataSource source) {\n\t\tfor (Client client : getAll(source)) {\n\t\t\tSender<?> sender = senderCache.get(source, client);\n\t\t\tsenderCache.release(source, client);\n\n\t\t\tsender.onNewDataComplete();\n\t\t\tSenderResult result = sender.getSenderResult();\n\t\t\tswitch(result.getStatus()) {\n\t\t\t\tcase SUCCESS:\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ERROR:\n\t\t\t\t\tString errorMsg = \"Failed to send notification to client \" + client.getId();\n\t\t\t\t\tif (result.getErrorCause() != null)\n\t\t\t\t\t\terrorMsg = errorMsg + \" (\" + result.getErrorCause().getMessage() + \")\";\n\t\t\t\t\tif (result.getErrorMsg() != null)\n\t\t\t\t\t\terrorMsg = errorMsg + \" (\" + result.getErrorMsg() + \")\";\n\t\t\t\t\tLog.error(errorMsg);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase REMOVE_CLIENT:\n\t\t\t\t\tLog.info(\"Unregistering client \" + result.getOldClient().getId());\n\t\t\t\t\tremove(source, null, result.getOldClient());\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase UPDATE_CLIENT:\n\t\t\t\t\tLog.info(\"Updating client id to \" + result.getNewClient().getId());\n\t\t\t\t\tremove(source, null, result.getOldClient());\n\t\t\t\t\tadd(source, null, result.getNewClient());\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}", "signature": "void onNewDataComplete(DataSource source)", "full_signature": "@Override public void onNewDataComplete(DataSource source)", "class_method_signature": "NotificationManager.onNewDataComplete(DataSource source)", "testcase": false, "constructor": false, "invocations": ["getAll", "get", "release", "onNewDataComplete", "getSenderResult", "getStatus", "getId", "getErrorCause", "getMessage", "getErrorCause", "getErrorMsg", "getErrorMsg", "error", "info", "getId", "getOldClient", "remove", "getOldClient", "info", "getId", "getNewClient", "remove", "getOldClient", "add", "getNewClient"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}