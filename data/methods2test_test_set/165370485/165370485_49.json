{"test_class": {"identifier": "UserMessageArchivePreferencesElementTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/extensions/xep0313-mam/src/test/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/user/UserMessageArchivePreferencesElementTest.java"}, "test_case": {"identifier": "toXml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toXml() {\n        UserMessageArchivePreferences preferences = new SimpleUserMessageArchivePreferences(\n                DefaultUserArchiveBehaviour.ROSTER, Collections.singleton(EntityImpl.parseUnchecked(\"always@foo.com\")),\n                Collections.singleton(EntityImpl.parseUnchecked(\"never@foo.com\")));\n\n        XMLElement prefs = UserMessageArchivePreferencesElement.toXml(\"foo\", preferences);\n\n        assertEquals(\"prefs\", prefs.getName());\n        assertEquals(\"foo\", prefs.getNamespaceURI());\n\n        List<XMLElement> innerElements = prefs.getInnerElements();\n\n        XMLElement always = innerElements.get(0);\n        assertEquals(\"always\", always.getName());\n        List<XMLElement> alwaysJids = always.getInnerElements();\n        assertEquals(1, alwaysJids.size());\n        assertEquals(\"always@foo.com\", alwaysJids.get(0).getInnerText().getText());\n\n        XMLElement never = innerElements.get(1);\n        assertEquals(\"never\", never.getName());\n        List<XMLElement> neverJids = never.getInnerElements();\n        assertEquals(1, neverJids.size());\n        assertEquals(\"never@foo.com\", neverJids.get(0).getInnerText().getText());\n    }", "signature": "void toXml()", "full_signature": "@Test public void toXml()", "class_method_signature": "UserMessageArchivePreferencesElementTest.toXml()", "testcase": true, "constructor": false, "invocations": ["singleton", "parseUnchecked", "singleton", "parseUnchecked", "toXml", "assertEquals", "getName", "assertEquals", "getNamespaceURI", "getInnerElements", "get", "assertEquals", "getName", "getInnerElements", "assertEquals", "size", "assertEquals", "getText", "getInnerText", "get", "get", "assertEquals", "getName", "getInnerElements", "assertEquals", "size", "assertEquals", "getText", "getInnerText", "get"]}, "focal_class": {"identifier": "UserMessageArchivePreferencesElement", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String NAME = \"prefs\";", "modifier": "static final", "type": "String", "declarator": "NAME = \"prefs\"", "var_name": "NAME"}], "methods": [{"identifier": "UserMessageArchivePreferencesElement", "parameters": "()", "modifiers": "private", "return": "", "signature": " UserMessageArchivePreferencesElement()", "full_signature": "private  UserMessageArchivePreferencesElement()", "class_method_signature": "UserMessageArchivePreferencesElement.UserMessageArchivePreferencesElement()", "testcase": false, "constructor": true}, {"identifier": "toXml", "parameters": "(String namespace, UserMessageArchivePreferences preferences)", "modifiers": "static", "return": "XMLElement", "signature": "XMLElement toXml(String namespace, UserMessageArchivePreferences preferences)", "full_signature": "static XMLElement toXml(String namespace, UserMessageArchivePreferences preferences)", "class_method_signature": "UserMessageArchivePreferencesElement.toXml(String namespace, UserMessageArchivePreferences preferences)", "testcase": false, "constructor": false}, {"identifier": "fromXml", "parameters": "(XMLElement prefsElement)", "modifiers": "static", "return": "UserMessageArchivePreferences", "signature": "UserMessageArchivePreferences fromXml(XMLElement prefsElement)", "full_signature": "static UserMessageArchivePreferences fromXml(XMLElement prefsElement)", "class_method_signature": "UserMessageArchivePreferencesElement.fromXml(XMLElement prefsElement)", "testcase": false, "constructor": false}, {"identifier": "parseJids", "parameters": "(XMLElement prefsElement, String parentElementName)", "modifiers": "private static", "return": "Set<Entity>", "signature": "Set<Entity> parseJids(XMLElement prefsElement, String parentElementName)", "full_signature": "private static Set<Entity> parseJids(XMLElement prefsElement, String parentElementName)", "class_method_signature": "UserMessageArchivePreferencesElement.parseJids(XMLElement prefsElement, String parentElementName)", "testcase": false, "constructor": false}], "file": "server/extensions/xep0313-mam/src/main/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/user/UserMessageArchivePreferencesElement.java"}, "focal_method": {"identifier": "toXml", "parameters": "(String namespace, UserMessageArchivePreferences preferences)", "modifiers": "static", "return": "XMLElement", "body": "static XMLElement toXml(String namespace, UserMessageArchivePreferences preferences) {\n        List<XMLFragment> alwaysJids = preferences.getAlwaysArchivedToOrFromJids().stream()\n                .map(entity -> new XMLElement(null, \"jid\", null, Collections.emptyList(),\n                        Collections.singletonList(new XMLText(entity.getFullQualifiedName()))))\n                .collect(Collectors.toList());\n        XMLElement alwaysElement = new XMLElement(null, \"always\", null, Collections.emptyList(), alwaysJids);\n\n        List<XMLFragment> neverJids = preferences.getNeverArchivedToOrFromJids().stream()\n                .map(entity -> new XMLElement(null, \"jid\", null, Collections.emptyList(),\n                        Collections.singletonList(new XMLText(entity.getFullQualifiedName()))))\n                .collect(Collectors.toList());\n        XMLElement neverElement = new XMLElement(null, \"never\", null, Collections.emptyList(), neverJids);\n\n        List<XMLFragment> prefsFragments = new ArrayList<>();\n        prefsFragments.add(alwaysElement);\n        prefsFragments.add(neverElement);\n\n        Attribute defaultBehaviour = new Attribute(\"default\", preferences.getDefaultBehaviour().name().toLowerCase());\n        return new XMLElement(namespace, NAME, null, Collections.singletonList(defaultBehaviour), prefsFragments);\n    }", "signature": "XMLElement toXml(String namespace, UserMessageArchivePreferences preferences)", "full_signature": "static XMLElement toXml(String namespace, UserMessageArchivePreferences preferences)", "class_method_signature": "UserMessageArchivePreferencesElement.toXml(String namespace, UserMessageArchivePreferences preferences)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "stream", "getAlwaysArchivedToOrFromJids", "emptyList", "singletonList", "getFullQualifiedName", "toList", "emptyList", "collect", "map", "stream", "getNeverArchivedToOrFromJids", "emptyList", "singletonList", "getFullQualifiedName", "toList", "emptyList", "add", "add", "toLowerCase", "name", "getDefaultBehaviour", "singletonList"]}, "repository": {"repo_id": 165370485, "url": "https://github.com/apache/mina-vysper", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 29305, "license": "licensed"}}