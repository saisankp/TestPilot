{"test_class": {"identifier": "DefaultLinkServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SchemaService schemaService;", "modifier": "@Mock\n    private", "type": "SchemaService", "declarator": "schemaService", "var_name": "schemaService"}, {"original_string": "@Mock\n    private ContextService contextService;", "modifier": "@Mock\n    private", "type": "ContextService", "declarator": "contextService", "var_name": "contextService"}, {"original_string": "@InjectMocks\n    private DefaultLinkService service;", "modifier": "@InjectMocks\n    private", "type": "DefaultLinkService", "declarator": "service", "var_name": "service"}, {"original_string": "private MockHttpServletRequest request = new MockHttpServletRequest();", "modifier": "private", "type": "MockHttpServletRequest", "declarator": "request = new MockHttpServletRequest()", "var_name": "request"}, {"original_string": "@Rule\n    public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}], "file": "dhis-2/dhis-web/dhis-web-api/src/test/java/org/hisp/dhis/webapi/service/DefaultLinkServiceTest.java"}, "test_case": {"identifier": "prevLinkDefaultParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void prevLinkDefaultParameters()\n    {\n        Mockito.when( schemaService.getDynamicSchema( Mockito.eq( OrganisationUnit.class ) ) ).thenAnswer( invocation -> {\n            Schema schema = new Schema( OrganisationUnit.class, \"organisationUnit\", \"organisationUnits\" );\n            schema.setRelativeApiEndpoint( \"/organizationUnits\" );\n            return schema;\n        } );\n\n        request.setRequestURI( \"/organizationUnits.xml\" );\n        Mockito.when( contextService.getRequest() ).thenReturn( request );\n\n        Mockito.when( contextService.getApiPath() ).thenReturn( \"/demo/api/456\" );\n\n        Mockito.when( contextService.getParameterValuesMap() ).thenAnswer( invocation -> {\n            final Map<String, List<String>> map = new HashMap<>();\n            map.put( \"page\", Collections.singletonList( \"1\" ) );\n            map.put( \"pageSize\", Collections.singletonList( \"55\" ) );\n            return map;\n        } );\n\n        final Pager pager = new Pager( 2, 60 );\n        service.generatePagerLinks( pager, OrganisationUnit.class );\n        Assert.assertEquals( \"/demo/api/456/organizationUnits.xml\", pager.getPrevPage() );\n        Assert.assertNull( pager.getNextPage() );\n    }", "signature": "void prevLinkDefaultParameters()", "full_signature": "@Test public void prevLinkDefaultParameters()", "class_method_signature": "DefaultLinkServiceTest.prevLinkDefaultParameters()", "testcase": true, "constructor": false, "invocations": ["thenAnswer", "when", "getDynamicSchema", "eq", "setRelativeApiEndpoint", "setRequestURI", "thenReturn", "when", "getRequest", "thenReturn", "when", "getApiPath", "thenAnswer", "when", "getParameterValuesMap", "put", "singletonList", "put", "singletonList", "generatePagerLinks", "assertEquals", "getPrevPage", "assertNull", "getNextPage"]}, "focal_class": {"identifier": "DefaultLinkService", "superclass": "", "interfaces": "implements LinkService", "fields": [{"original_string": "private static final String DEFAULT_URL_ENCODING = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_URL_ENCODING = \"UTF-8\"", "var_name": "DEFAULT_URL_ENCODING"}, {"original_string": "private final SchemaService schemaService;", "modifier": "private final", "type": "SchemaService", "declarator": "schemaService", "var_name": "schemaService"}, {"original_string": "private final ContextService contextService;", "modifier": "private final", "type": "ContextService", "declarator": "contextService", "var_name": "contextService"}, {"original_string": "private Map<Class<?>, Method> setterCache = new HashMap<>();", "modifier": "private", "type": "Map<Class<?>, Method>", "declarator": "setterCache = new HashMap<>()", "var_name": "setterCache"}], "methods": [{"identifier": "DefaultLinkService", "parameters": "( SchemaService schemaService, ContextService contextService )", "modifiers": "public", "return": "", "signature": " DefaultLinkService( SchemaService schemaService, ContextService contextService )", "full_signature": "public  DefaultLinkService( SchemaService schemaService, ContextService contextService )", "class_method_signature": "DefaultLinkService.DefaultLinkService( SchemaService schemaService, ContextService contextService )", "testcase": false, "constructor": true}, {"identifier": "generatePagerLinks", "parameters": "( Pager pager, Class<?> klass )", "modifiers": "@Override public", "return": "void", "signature": "void generatePagerLinks( Pager pager, Class<?> klass )", "full_signature": "@Override public void generatePagerLinks( Pager pager, Class<?> klass )", "class_method_signature": "DefaultLinkService.generatePagerLinks( Pager pager, Class<?> klass )", "testcase": false, "constructor": false}, {"identifier": "generatePagerLinks", "parameters": "( Pager pager, String relativeApiEndpoint )", "modifiers": "@Override public", "return": "void", "signature": "void generatePagerLinks( Pager pager, String relativeApiEndpoint )", "full_signature": "@Override public void generatePagerLinks( Pager pager, String relativeApiEndpoint )", "class_method_signature": "DefaultLinkService.generatePagerLinks( Pager pager, String relativeApiEndpoint )", "testcase": false, "constructor": false}, {"identifier": "generateLinks", "parameters": "( T object, boolean deepScan )", "modifiers": "@Override public", "return": "void", "signature": "void generateLinks( T object, boolean deepScan )", "full_signature": "@Override public void generateLinks( T object, boolean deepScan )", "class_method_signature": "DefaultLinkService.generateLinks( T object, boolean deepScan )", "testcase": false, "constructor": false}, {"identifier": "generateLinks", "parameters": "( T object, String hrefBase, boolean deepScan )", "modifiers": "@Override public", "return": "void", "signature": "void generateLinks( T object, String hrefBase, boolean deepScan )", "full_signature": "@Override public void generateLinks( T object, String hrefBase, boolean deepScan )", "class_method_signature": "DefaultLinkService.generateLinks( T object, String hrefBase, boolean deepScan )", "testcase": false, "constructor": false}, {"identifier": "generateSchemaLinks", "parameters": "( List<Schema> schemas )", "modifiers": "@Override public", "return": "void", "signature": "void generateSchemaLinks( List<Schema> schemas )", "full_signature": "@Override public void generateSchemaLinks( List<Schema> schemas )", "class_method_signature": "DefaultLinkService.generateSchemaLinks( List<Schema> schemas )", "testcase": false, "constructor": false}, {"identifier": "generateSchemaLinks", "parameters": "( Schema schema )", "modifiers": "@Override public", "return": "void", "signature": "void generateSchemaLinks( Schema schema )", "full_signature": "@Override public void generateSchemaLinks( Schema schema )", "class_method_signature": "DefaultLinkService.generateSchemaLinks( Schema schema )", "testcase": false, "constructor": false}, {"identifier": "generateSchemaLinks", "parameters": "( Schema schema, String hrefBase )", "modifiers": "@Override public", "return": "void", "signature": "void generateSchemaLinks( Schema schema, String hrefBase )", "full_signature": "@Override public void generateSchemaLinks( Schema schema, String hrefBase )", "class_method_signature": "DefaultLinkService.generateSchemaLinks( Schema schema, String hrefBase )", "testcase": false, "constructor": false}, {"identifier": "getParametersString", "parameters": "()", "modifiers": "@Nonnull private", "return": "String", "signature": "String getParametersString()", "full_signature": "@Nonnull private String getParametersString()", "class_method_signature": "DefaultLinkService.getParametersString()", "testcase": false, "constructor": false}, {"identifier": "getContentTypeSuffix", "parameters": "()", "modifiers": "@Nonnull protected", "return": "String", "signature": "String getContentTypeSuffix()", "full_signature": "@Nonnull protected String getContentTypeSuffix()", "class_method_signature": "DefaultLinkService.getContentTypeSuffix()", "testcase": false, "constructor": false}, {"identifier": "generateLink", "parameters": "( T object, String hrefBase, boolean deepScan )", "modifiers": "private", "return": "void", "signature": "void generateLink( T object, String hrefBase, boolean deepScan )", "full_signature": "private void generateLink( T object, String hrefBase, boolean deepScan )", "class_method_signature": "DefaultLinkService.generateLink( T object, String hrefBase, boolean deepScan )", "testcase": false, "constructor": false}, {"identifier": "generateHref", "parameters": "( T object, String hrefBase )", "modifiers": "private", "return": "void", "signature": "void generateHref( T object, String hrefBase )", "full_signature": "private void generateHref( T object, String hrefBase )", "class_method_signature": "DefaultLinkService.generateHref( T object, String hrefBase )", "testcase": false, "constructor": false}, {"identifier": "getSetter", "parameters": "( Class<?> klass )", "modifiers": "private", "return": "Method", "signature": "Method getSetter( Class<?> klass )", "full_signature": "private Method getSetter( Class<?> klass )", "class_method_signature": "DefaultLinkService.getSetter( Class<?> klass )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/service/DefaultLinkService.java"}, "focal_method": {"identifier": "generatePagerLinks", "parameters": "( Pager pager, Class<?> klass )", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void generatePagerLinks( Pager pager, Class<?> klass )\n    {\n        if ( pager == null )\n        {\n            return;\n        }\n\n        Schema schema = schemaService.getDynamicSchema( klass );\n\n        if ( !schema.haveApiEndpoint() )\n        {\n            return;\n        }\n\n        generatePagerLinks( pager, schema.getRelativeApiEndpoint() );\n    }", "signature": "void generatePagerLinks( Pager pager, Class<?> klass )", "full_signature": "@Override public void generatePagerLinks( Pager pager, Class<?> klass )", "class_method_signature": "DefaultLinkService.generatePagerLinks( Pager pager, Class<?> klass )", "testcase": false, "constructor": false, "invocations": ["getDynamicSchema", "haveApiEndpoint", "generatePagerLinks", "getRelativeApiEndpoint"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}