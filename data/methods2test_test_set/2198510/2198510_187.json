{"test_class": {"identifier": "TestResettableFileInputStream", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final boolean CLEANUP = true;", "modifier": "private static final", "type": "boolean", "declarator": "CLEANUP = true", "var_name": "CLEANUP"}, {"original_string": "private static final File WORK_DIR =\n      new File(\"target/test/work\").getAbsoluteFile();", "modifier": "private static final", "type": "File", "declarator": "WORK_DIR =\n      new File(\"target/test/work\").getAbsoluteFile()", "var_name": "WORK_DIR"}, {"original_string": "private static final Logger logger =\n      LoggerFactory.getLogger(TestResettableFileInputStream.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger =\n      LoggerFactory.getLogger(TestResettableFileInputStream.class)", "var_name": "logger"}, {"original_string": "private File file;", "modifier": "private", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private File meta;", "modifier": "private", "type": "File", "declarator": "meta", "var_name": "meta"}], "file": "flume-ng-core/src/test/java/org/apache/flume/serialization/TestResettableFileInputStream.java"}, "test_case": {"identifier": "testReset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testReset() throws IOException {\n    String output = singleLineFileInit(file, Charsets.UTF_8);\n\n    PositionTracker tracker = new DurablePositionTracker(meta, file.getPath());\n    ResettableInputStream in = new ResettableFileInputStream(file, tracker);\n\n    String result1 = readLine(in, output.length());\n    assertEquals(output, result1);\n\n    in.reset();\n    String result2 = readLine(in, output.length());\n    assertEquals(output, result2);\n\n    String result3 = readLine(in, output.length());\n    assertNull(\"Should be null: \" + result3, result3);\n\n    in.close();\n  }", "signature": "void testReset()", "full_signature": "@Test public void testReset()", "class_method_signature": "TestResettableFileInputStream.testReset()", "testcase": true, "constructor": false, "invocations": ["singleLineFileInit", "getPath", "readLine", "length", "assertEquals", "reset", "readLine", "length", "assertEquals", "readLine", "length", "assertNull", "close"]}, "focal_class": {"identifier": "ResettableFileInputStream", "superclass": "extends ResettableInputStream", "interfaces": "implements RemoteMarkable, LengthMeasurable", "fields": [{"original_string": "Logger logger = LoggerFactory.getLogger(ResettableFileInputStream.class);", "modifier": "", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ResettableFileInputStream.class)", "var_name": "logger"}, {"original_string": "public static final int DEFAULT_BUF_SIZE = 16384;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_BUF_SIZE = 16384", "var_name": "DEFAULT_BUF_SIZE"}, {"original_string": "public static final int MIN_BUF_SIZE = 8;", "modifier": "public static final", "type": "int", "declarator": "MIN_BUF_SIZE = 8", "var_name": "MIN_BUF_SIZE"}, {"original_string": "private final File file;", "modifier": "private final", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private final PositionTracker tracker;", "modifier": "private final", "type": "PositionTracker", "declarator": "tracker", "var_name": "tracker"}, {"original_string": "private final FileInputStream in;", "modifier": "private final", "type": "FileInputStream", "declarator": "in", "var_name": "in"}, {"original_string": "private final FileChannel chan;", "modifier": "private final", "type": "FileChannel", "declarator": "chan", "var_name": "chan"}, {"original_string": "private final ByteBuffer buf;", "modifier": "private final", "type": "ByteBuffer", "declarator": "buf", "var_name": "buf"}, {"original_string": "private final CharBuffer charBuf;", "modifier": "private final", "type": "CharBuffer", "declarator": "charBuf", "var_name": "charBuf"}, {"original_string": "private final byte[] byteBuf;", "modifier": "private final", "type": "byte[]", "declarator": "byteBuf", "var_name": "byteBuf"}, {"original_string": "private final long fileSize;", "modifier": "private final", "type": "long", "declarator": "fileSize", "var_name": "fileSize"}, {"original_string": "private final CharsetDecoder decoder;", "modifier": "private final", "type": "CharsetDecoder", "declarator": "decoder", "var_name": "decoder"}, {"original_string": "private long position;", "modifier": "private", "type": "long", "declarator": "position", "var_name": "position"}, {"original_string": "private long syncPosition;", "modifier": "private", "type": "long", "declarator": "syncPosition", "var_name": "syncPosition"}, {"original_string": "private int maxCharWidth;", "modifier": "private", "type": "int", "declarator": "maxCharWidth", "var_name": "maxCharWidth"}, {"original_string": "private boolean hasLowSurrogate = false;", "modifier": "private", "type": "boolean", "declarator": "hasLowSurrogate = false", "var_name": "hasLowSurrogate"}, {"original_string": "private char lowSurrogate;", "modifier": "private", "type": "char", "declarator": "lowSurrogate", "var_name": "lowSurrogate"}], "methods": [{"identifier": "ResettableFileInputStream", "parameters": "(File file, PositionTracker tracker)", "modifiers": "public", "return": "", "signature": " ResettableFileInputStream(File file, PositionTracker tracker)", "full_signature": "public  ResettableFileInputStream(File file, PositionTracker tracker)", "class_method_signature": "ResettableFileInputStream.ResettableFileInputStream(File file, PositionTracker tracker)", "testcase": false, "constructor": true}, {"identifier": "ResettableFileInputStream", "parameters": "(File file, PositionTracker tracker,\n      int bufSize, Charset charset, DecodeErrorPolicy decodeErrorPolicy)", "modifiers": "public", "return": "", "signature": " ResettableFileInputStream(File file, PositionTracker tracker,\n      int bufSize, Charset charset, DecodeErrorPolicy decodeErrorPolicy)", "full_signature": "public  ResettableFileInputStream(File file, PositionTracker tracker,\n      int bufSize, Charset charset, DecodeErrorPolicy decodeErrorPolicy)", "class_method_signature": "ResettableFileInputStream.ResettableFileInputStream(File file, PositionTracker tracker,\n      int bufSize, Charset charset, DecodeErrorPolicy decodeErrorPolicy)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "()", "modifiers": "@Override public synchronized", "return": "int", "signature": "int read()", "full_signature": "@Override public synchronized int read()", "class_method_signature": "ResettableFileInputStream.read()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public synchronized", "return": "int", "signature": "int read(byte[] b, int off, int len)", "full_signature": "@Override public synchronized int read(byte[] b, int off, int len)", "class_method_signature": "ResettableFileInputStream.read(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "readChar", "parameters": "()", "modifiers": "@Override public synchronized", "return": "int", "signature": "int readChar()", "full_signature": "@Override public synchronized int readChar()", "class_method_signature": "ResettableFileInputStream.readChar()", "testcase": false, "constructor": false}, {"identifier": "refillBuf", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void refillBuf()", "full_signature": "private void refillBuf()", "class_method_signature": "ResettableFileInputStream.refillBuf()", "testcase": false, "constructor": false}, {"identifier": "mark", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void mark()", "full_signature": "@Override public void mark()", "class_method_signature": "ResettableFileInputStream.mark()", "testcase": false, "constructor": false}, {"identifier": "markPosition", "parameters": "(long position)", "modifiers": "@Override public", "return": "void", "signature": "void markPosition(long position)", "full_signature": "@Override public void markPosition(long position)", "class_method_signature": "ResettableFileInputStream.markPosition(long position)", "testcase": false, "constructor": false}, {"identifier": "getMarkPosition", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMarkPosition()", "full_signature": "@Override public long getMarkPosition()", "class_method_signature": "ResettableFileInputStream.getMarkPosition()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "ResettableFileInputStream.reset()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long length()", "full_signature": "@Override public long length()", "class_method_signature": "ResettableFileInputStream.length()", "testcase": false, "constructor": false}, {"identifier": "tell", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long tell()", "full_signature": "@Override public long tell()", "class_method_signature": "ResettableFileInputStream.tell()", "testcase": false, "constructor": false}, {"identifier": "seek", "parameters": "(long newPos)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void seek(long newPos)", "full_signature": "@Override public synchronized void seek(long newPos)", "class_method_signature": "ResettableFileInputStream.seek(long newPos)", "testcase": false, "constructor": false}, {"identifier": "incrPosition", "parameters": "(int incr, boolean updateSyncPosition)", "modifiers": "private", "return": "void", "signature": "void incrPosition(int incr, boolean updateSyncPosition)", "full_signature": "private void incrPosition(int incr, boolean updateSyncPosition)", "class_method_signature": "ResettableFileInputStream.incrPosition(int incr, boolean updateSyncPosition)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ResettableFileInputStream.close()", "testcase": false, "constructor": false}], "file": "flume-ng-core/src/main/java/org/apache/flume/serialization/ResettableFileInputStream.java"}, "focal_method": {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void reset() throws IOException {\n    seek(tracker.getPosition());\n  }", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "ResettableFileInputStream.reset()", "testcase": false, "constructor": false, "invocations": ["seek", "getPosition"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}