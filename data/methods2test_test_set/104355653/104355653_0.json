{"test_class": {"identifier": "OrderControllerTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "service/settlement-service/src/test/java/com/meiduimall/service/settlement/api/OrderControllerTest.java"}, "test_case": {"identifier": "testShareProfit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testShareProfit() throws Exception {\n\t\tResultActions results = mockMvc.perform(MockMvcRequestBuilders\n\t\t\t\t.post(\"/settlementservice/orderservice/v1/shareprofit\").param(\"orderSn\", \"D4405110000011704060002\").param(\"sellerName\", \"440511000001\")\n\t\t\t\t.param(\"sellerPhone\", \"13410229865\").param(\"buyerName\", \"13798431927\").param(\"addTime\", \"1491462068\").param(\"status\", \"20\")\n\t\t\t\t.param(\"payTime\", \"1491462068\").param(\"payAmount\", \"1800.00\").param(\"goodsAmount\", \"9000.00\")\n\t\t\t\t.param(\"discount\", \"0.20\").param(\"orderAmount\", \"1800.00\").param(\"totalFee\", \"1800.00\").param(\"storeDiscount\", \"7200.00\")\n\t\t\t\t.param(\"norebate\", \"0.00\").param(\"coupons\", \"0.00\").param(\"brokerage\", \"0.00\").param(\"discountInfo\", \"2\")\n\t\t\t\t.param(\"agentNoRegion\", \"440511\").param(\"agentNoPersonal\", \"4405111112\").param(\"agentNoRegionS\", \"\")\n\t\t\t\t.param(\"agentNameRegion\", \"\u7f8e\u5151\u58f9\u8d2d\u7269\").param(\"agentNameRegionS\", \"\").param(\"isTwoHundredArea\", \"0\")\n\t\t\t\t.param(\"serviceFee\", \"20\").param(\"serviceFeeCalc\", \"0\").param(\"rebateAmount\", \"1800.00\"))\n\t\t\t\t.andExpect(status().isOk());\n\t\t\n\t\tresults.andDo(new ResultHandler() {\n\t\t\t@Override\n\t\t\tpublic void handle(MvcResult result) throws Exception {\n\t\t\t\tSystem.out.println(\"*********\"+result.getResponse().getContentAsString());\n\t\t\t}\n\t\t});\n\t}", "signature": "void testShareProfit()", "full_signature": "@Test public void testShareProfit()", "class_method_signature": "OrderControllerTest.testShareProfit()", "testcase": true, "constructor": false, "invocations": ["andExpect", "perform", "param", "param", "param", "woHun", "ntNam", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "param", "post", "isOk", "status", "andDo", "println", "getContentAsString", "getResponse"]}, "focal_class": {"identifier": "OrderController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(OrderController.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(OrderController.class)", "var_name": "log"}, {"original_string": "@Autowired\n\tprivate OrderService orderService;", "modifier": "@Autowired\n\tprivate", "type": "OrderService", "declarator": "orderService", "var_name": "orderService"}, {"original_string": "@Autowired\n\tprivate AsyncTaskService asyncTaskService;", "modifier": "@Autowired\n\tprivate", "type": "AsyncTaskService", "declarator": "asyncTaskService", "var_name": "asyncTaskService"}], "methods": [{"identifier": "shareProfit", "parameters": "(@Validated EcmOrder ecmOrder)", "modifiers": "@PostMapping(\"/shareprofit\") public", "return": "ResBodyData", "signature": "ResBodyData shareProfit(@Validated EcmOrder ecmOrder)", "full_signature": "@PostMapping(\"/shareprofit\") public ResBodyData shareProfit(@Validated EcmOrder ecmOrder)", "class_method_signature": "OrderController.shareProfit(@Validated EcmOrder ecmOrder)", "testcase": false, "constructor": false}, {"identifier": "queryOrderStatus", "parameters": "(String[] orderSns)", "modifiers": "@PostMapping(value=\"/queryorderstatus\") public", "return": "ResBodyData", "signature": "ResBodyData queryOrderStatus(String[] orderSns)", "full_signature": "@PostMapping(value=\"/queryorderstatus\") public ResBodyData queryOrderStatus(String[] orderSns)", "class_method_signature": "OrderController.queryOrderStatus(String[] orderSns)", "testcase": false, "constructor": false}, {"identifier": "syncVerifyStatus", "parameters": "(@Validated EcmMzfOrderStatus orderStatus)", "modifiers": "@PostMapping(value=\"/syncverifystatus\") public", "return": "ResBodyData", "signature": "ResBodyData syncVerifyStatus(@Validated EcmMzfOrderStatus orderStatus)", "full_signature": "@PostMapping(value=\"/syncverifystatus\") public ResBodyData syncVerifyStatus(@Validated EcmMzfOrderStatus orderStatus)", "class_method_signature": "OrderController.syncVerifyStatus(@Validated EcmMzfOrderStatus orderStatus)", "testcase": false, "constructor": false}, {"identifier": "queryShareProfit", "parameters": "(String[] orderSns)", "modifiers": "@PostMapping(\"/queryshareprofit\") public", "return": "ResBodyData", "signature": "ResBodyData queryShareProfit(String[] orderSns)", "full_signature": "@PostMapping(\"/queryshareprofit\") public ResBodyData queryShareProfit(String[] orderSns)", "class_method_signature": "OrderController.queryShareProfit(String[] orderSns)", "testcase": false, "constructor": false}, {"identifier": "queryProfitByRole", "parameters": "(String code,Integer accountRoleType)", "modifiers": "@PostMapping(\"/queryprofitbyrole\") public", "return": "ResBodyData", "signature": "ResBodyData queryProfitByRole(String code,Integer accountRoleType)", "full_signature": "@PostMapping(\"/queryprofitbyrole\") public ResBodyData queryProfitByRole(String code,Integer accountRoleType)", "class_method_signature": "OrderController.queryProfitByRole(String code,Integer accountRoleType)", "testcase": false, "constructor": false}, {"identifier": "queryTotalProfit", "parameters": "(String[] codes,Integer billStartDate,Integer billEndDate)", "modifiers": "@PostMapping(\"/querytotalprofit\") public", "return": "ResBodyData", "signature": "ResBodyData queryTotalProfit(String[] codes,Integer billStartDate,Integer billEndDate)", "full_signature": "@PostMapping(\"/querytotalprofit\") public ResBodyData queryTotalProfit(String[] codes,Integer billStartDate,Integer billEndDate)", "class_method_signature": "OrderController.queryTotalProfit(String[] codes,Integer billStartDate,Integer billEndDate)", "testcase": false, "constructor": false}], "file": "service/settlement-service/src/main/java/com/meiduimall/service/settlement/api/OrderController.java"}, "focal_method": {"identifier": "shareProfit", "parameters": "(@Validated EcmOrder ecmOrder)", "modifiers": "@PostMapping(\"/shareprofit\") public", "return": "ResBodyData", "body": "@PostMapping(\"/shareprofit\")\n\tpublic ResBodyData shareProfit(@Validated EcmOrder ecmOrder){\n\t\t\n\t\tlong start = System.currentTimeMillis();\n\t\tlog.info(\"share profit for order start:{}\", start);\n\t\t\n\t\t//shareStatus:0-\u672a\u5206\u6da6,1-\u5df2\u5206\u6da6\n\t\tInteger shareStatus = 1;\n\t\t\n\t\t//\u5224\u65ad\u8be5\u8ba2\u5355\u53f7\u662f\u5426\u4e3a\u91cd\u590d\u5206\u6da6\n\t\tboolean isExisted = orderService.checkShareProfitExisted(ecmOrder.getOrderSn());\n\t\tif(isExisted){\n\t\t\tthrow new ServiceException(SettlementApiCode.ORDER_ALREADY_SHAREPROFIT, BaseApiCode.getZhMsg(SettlementApiCode.ORDER_ALREADY_SHAREPROFIT));\n\t\t}\n\t\t\n\t\tEcmMzfShareProfit shareProfit = orderService.buildShareProfit(ecmOrder);\n\t\t\n\t\t//\u4fdd\u5b58\u5206\u6da6\u6570\u636e\u5230DB\n\t\tif (shareProfit == null) {\n\t\t\tlog.error(\"\u8ba2\u5355\u5206\u6da6\u6570\u636e\u4e3a\u7a7a(shareProfit)\");\n\t\t\tthrow new ServiceException(SettlementApiCode.ORDER_SHARE_DATA_EMPTY, BaseApiCode.getZhMsg(SettlementApiCode.ORDER_SHARE_DATA_EMPTY));\n\t\t}\n\t\t\n\t\torderService.saveShareProfit(shareProfit);\n\t\t\n\t\t//\u5f02\u6b65\u540c\u6b65\u79ef\u5206\u5230\u4f1a\u5458\u7cfb\u7edf\n\t\tasyncTaskService.updateScore2MemberSystem(shareProfit, ShareProfitConstants.SHARE_PROFIT_SOURCE_O2O, null);\n\t\t\n\t\tlong end = System.currentTimeMillis();\n\t\tlog.info(\"share profit for order end:{}\",end);\n\t\tlog.info(\"total time(second) for shareprofit:{}\", (end-start)/1000);\n\t\t\n\t\treturn SettlementUtil.success(ImmutableMap.of(\"orderSn\", ecmOrder.getOrderSn(), \"shareStatus\", shareStatus));\n\t}", "signature": "ResBodyData shareProfit(@Validated EcmOrder ecmOrder)", "full_signature": "@PostMapping(\"/shareprofit\") public ResBodyData shareProfit(@Validated EcmOrder ecmOrder)", "class_method_signature": "OrderController.shareProfit(@Validated EcmOrder ecmOrder)", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "info", "checkShareProfitExisted", "getOrderSn", "getZhMsg", "buildShareProfit", "error", "getZhMsg", "saveShareProfit", "updateScore2MemberSystem", "currentTimeMillis", "info", "info", "success", "of", "getOrderSn"]}, "repository": {"repo_id": 104355653, "url": "https://github.com/chenjy16/mall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 403, "license": "licensed"}}