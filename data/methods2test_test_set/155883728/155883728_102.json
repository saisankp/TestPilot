{"test_class": {"identifier": "JcrFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final File testBaseDir = new File(\"target/repos/JcrFactoryTest\");", "modifier": "final", "type": "File", "declarator": "testBaseDir = new File(\"target/repos/JcrFactoryTest\")", "var_name": "testBaseDir"}], "file": "webster/src/test/java/net/adamcin/oakpal/webster/JcrFactoryTest.java"}, "test_case": {"identifier": "testGetReadOnlyFixture", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void testGetReadOnlyFixture() throws Exception {\n        final File seedDir = new File(testBaseDir, \"testGetReadOnlyFixture/seedRepo/segmentstore\");\n        TestUtil.prepareRepo(seedDir, session -> {\n            session.getRootNode().addNode(\"foo\", \"nt:unstructured\");\n            session.save();\n        });\n        final File globalDir = new File(testBaseDir, \"testGetReadOnlyFixture/globalRepo/segmentstore\");\n        TestUtil.prepareRepo(globalDir, session -> {\n        });\n\n        try (NodeStoreFixture fixture = JcrFactory.getReadOnlyFixture(seedDir);\n             NodeStoreFixture globalFixture = JcrFactory.getReadOnlyFixture(globalDir)) {\n            TestUtil.compositeWithFixtures(fixture, globalFixture, session -> {\n                session.getWorkspace().getNamespaceRegistry()\n                        .registerNamespace(\"foo\", \"http://foo.com\");\n            });\n        }\n    }", "signature": "void testGetReadOnlyFixture()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testGetReadOnlyFixture()", "class_method_signature": "JcrFactoryTest.testGetReadOnlyFixture()", "testcase": true, "constructor": false, "invocations": ["prepareRepo", "addNode", "getRootNode", "save", "prepareRepo", "getReadOnlyFixture", "getReadOnlyFixture", "compositeWithFixtures", "registerNamespace", "getNamespaceRegistry", "getWorkspace"]}, "focal_class": {"identifier": "JcrFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "JcrFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " JcrFactory()", "full_signature": "private  JcrFactory()", "class_method_signature": "JcrFactory.JcrFactory()", "testcase": false, "constructor": true}, {"identifier": "getJcr", "parameters": "(final NodeStoreFixture nodeStoreFixture)", "modifiers": "public static", "return": "Repository", "signature": "Repository getJcr(final NodeStoreFixture nodeStoreFixture)", "full_signature": "public static Repository getJcr(final NodeStoreFixture nodeStoreFixture)", "class_method_signature": "JcrFactory.getJcr(final NodeStoreFixture nodeStoreFixture)", "testcase": false, "constructor": false}, {"identifier": "getJcr", "parameters": "(final NodeStoreFixture nodeStoreFixture,\n                                    final NodeStore globalStore)", "modifiers": "public static", "return": "Repository", "signature": "Repository getJcr(final NodeStoreFixture nodeStoreFixture,\n                                    final NodeStore globalStore)", "full_signature": "public static Repository getJcr(final NodeStoreFixture nodeStoreFixture,\n                                    final NodeStore globalStore)", "class_method_signature": "JcrFactory.getJcr(final NodeStoreFixture nodeStoreFixture,\n                                    final NodeStore globalStore)", "testcase": false, "constructor": false}, {"identifier": "getNodeStoreFixture", "parameters": "(final boolean readOnly, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "signature": "NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final String... args)", "full_signature": "public static NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final String... args)", "class_method_signature": "JcrFactory.getNodeStoreFixture(final boolean readOnly, final String... args)", "testcase": false, "constructor": false}, {"identifier": "getNodeStoreFixture", "parameters": "(final boolean readOnly, final File segmentStore, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "signature": "NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final File segmentStore, final String... args)", "full_signature": "public static NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final File segmentStore, final String... args)", "class_method_signature": "JcrFactory.getNodeStoreFixture(final boolean readOnly, final File segmentStore, final String... args)", "testcase": false, "constructor": false}, {"identifier": "getReadOnlyFixture", "parameters": "(final File segmentStore, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "signature": "NodeStoreFixture getReadOnlyFixture(final File segmentStore, final String... args)", "full_signature": "public static NodeStoreFixture getReadOnlyFixture(final File segmentStore, final String... args)", "class_method_signature": "JcrFactory.getReadOnlyFixture(final File segmentStore, final String... args)", "testcase": false, "constructor": false}, {"identifier": "getReadWriteFixture", "parameters": "(final File segmentStore, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "signature": "NodeStoreFixture getReadWriteFixture(final File segmentStore, final String... args)", "full_signature": "public static NodeStoreFixture getReadWriteFixture(final File segmentStore, final String... args)", "class_method_signature": "JcrFactory.getReadWriteFixture(final File segmentStore, final String... args)", "testcase": false, "constructor": false}], "file": "webster/src/main/java/net/adamcin/oakpal/webster/JcrFactory.java"}, "focal_method": {"identifier": "getReadOnlyFixture", "parameters": "(final File segmentStore, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "body": "public static NodeStoreFixture getReadOnlyFixture(final File segmentStore, final String... args) throws Exception {\n        return getNodeStoreFixture(true, segmentStore, args);\n    }", "signature": "NodeStoreFixture getReadOnlyFixture(final File segmentStore, final String... args)", "full_signature": "public static NodeStoreFixture getReadOnlyFixture(final File segmentStore, final String... args)", "class_method_signature": "JcrFactory.getReadOnlyFixture(final File segmentStore, final String... args)", "testcase": false, "constructor": false, "invocations": ["getNodeStoreFixture"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}