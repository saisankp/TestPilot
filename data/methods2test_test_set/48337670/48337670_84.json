{"test_class": {"identifier": "ChannelUIDTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String BINDING_ID = \"binding\";", "modifier": "private static final", "type": "String", "declarator": "BINDING_ID = \"binding\"", "var_name": "BINDING_ID"}, {"original_string": "private static final String THING_TYPE_ID = \"thing-type\";", "modifier": "private static final", "type": "String", "declarator": "THING_TYPE_ID = \"thing-type\"", "var_name": "THING_TYPE_ID"}, {"original_string": "private static final String THING_ID = \"thing\";", "modifier": "private static final", "type": "String", "declarator": "THING_ID = \"thing\"", "var_name": "THING_ID"}, {"original_string": "private static final String GROUP_ID = \"group\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_ID = \"group\"", "var_name": "GROUP_ID"}, {"original_string": "private static final String CHANNEL_ID = \"id\";", "modifier": "private static final", "type": "String", "declarator": "CHANNEL_ID = \"id\"", "var_name": "CHANNEL_ID"}, {"original_string": "private static final ThingUID THING_UID = new ThingUID(BINDING_ID, THING_TYPE_ID, THING_ID);", "modifier": "private static final", "type": "ThingUID", "declarator": "THING_UID = new ThingUID(BINDING_ID, THING_TYPE_ID, THING_ID)", "var_name": "THING_UID"}], "file": "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/ChannelUIDTest.java"}, "test_case": {"identifier": "testChannelUID", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChannelUID() {\n        ChannelUID channelUID = new ChannelUID(THING_UID, CHANNEL_ID);\n        assertEquals(\"binding:thing-type:thing:id\", channelUID.toString());\n        assertFalse(channelUID.isInGroup());\n        assertEquals(CHANNEL_ID, channelUID.getId());\n        assertEquals(CHANNEL_ID, channelUID.getIdWithoutGroup());\n        assertNull(channelUID.getGroupId());\n        assertEquals(THING_UID, channelUID.getThingUID());\n    }", "signature": "void testChannelUID()", "full_signature": "@Test public void testChannelUID()", "class_method_signature": "ChannelUIDTest.testChannelUID()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "assertFalse", "isInGroup", "assertEquals", "getId", "assertEquals", "getIdWithoutGroup", "assertNull", "getGroupId", "assertEquals", "getThingUID"]}, "focal_class": {"identifier": "ChannelUID", "superclass": "extends UID", "interfaces": "", "fields": [{"original_string": "public static final String CHANNEL_SEGMENT_PATTERN = \"[\\\\w-]*|[\\\\w-]*#[\\\\w-]*\";", "modifier": "public static final", "type": "String", "declarator": "CHANNEL_SEGMENT_PATTERN = \"[\\\\w-]*|[\\\\w-]*#[\\\\w-]*\"", "var_name": "CHANNEL_SEGMENT_PATTERN"}, {"original_string": "public static final String CHANNEL_GROUP_SEPARATOR = \"#\";", "modifier": "public static final", "type": "String", "declarator": "CHANNEL_GROUP_SEPARATOR = \"#\"", "var_name": "CHANNEL_GROUP_SEPARATOR"}], "methods": [{"identifier": "ChannelUID", "parameters": "()", "modifiers": "", "return": "", "signature": " ChannelUID()", "full_signature": "  ChannelUID()", "class_method_signature": "ChannelUID.ChannelUID()", "testcase": false, "constructor": true}, {"identifier": "ChannelUID", "parameters": "(String channelUid)", "modifiers": "public", "return": "", "signature": " ChannelUID(String channelUid)", "full_signature": "public  ChannelUID(String channelUid)", "class_method_signature": "ChannelUID.ChannelUID(String channelUid)", "testcase": false, "constructor": true}, {"identifier": "ChannelUID", "parameters": "(ThingUID thingUID, String id)", "modifiers": "public", "return": "", "signature": " ChannelUID(ThingUID thingUID, String id)", "full_signature": "public  ChannelUID(ThingUID thingUID, String id)", "class_method_signature": "ChannelUID.ChannelUID(ThingUID thingUID, String id)", "testcase": false, "constructor": true}, {"identifier": "ChannelUID", "parameters": "(ChannelGroupUID channelGroupUID, String id)", "modifiers": "public", "return": "", "signature": " ChannelUID(ChannelGroupUID channelGroupUID, String id)", "full_signature": "public  ChannelUID(ChannelGroupUID channelGroupUID, String id)", "class_method_signature": "ChannelUID.ChannelUID(ChannelGroupUID channelGroupUID, String id)", "testcase": false, "constructor": true}, {"identifier": "ChannelUID", "parameters": "(ThingUID thingUID, String groupId, String id)", "modifiers": "public", "return": "", "signature": " ChannelUID(ThingUID thingUID, String groupId, String id)", "full_signature": "public  ChannelUID(ThingUID thingUID, String groupId, String id)", "class_method_signature": "ChannelUID.ChannelUID(ThingUID thingUID, String groupId, String id)", "testcase": false, "constructor": true}, {"identifier": "toSegments", "parameters": "(ThingUID thingUID, @Nullable String groupId, String id)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> toSegments(ThingUID thingUID, @Nullable String groupId, String id)", "full_signature": "private static List<String> toSegments(ThingUID thingUID, @Nullable String groupId, String id)", "class_method_signature": "ChannelUID.toSegments(ThingUID thingUID, @Nullable String groupId, String id)", "testcase": false, "constructor": false}, {"identifier": "getChannelId", "parameters": "(@Nullable String groupId, String id)", "modifiers": "private static", "return": "String", "signature": "String getChannelId(@Nullable String groupId, String id)", "full_signature": "private static String getChannelId(@Nullable String groupId, String id)", "class_method_signature": "ChannelUID.getChannelId(@Nullable String groupId, String id)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "ChannelUID.getId()", "testcase": false, "constructor": false}, {"identifier": "getIdWithoutGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIdWithoutGroup()", "full_signature": "public String getIdWithoutGroup()", "class_method_signature": "ChannelUID.getIdWithoutGroup()", "testcase": false, "constructor": false}, {"identifier": "isInGroup", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInGroup()", "full_signature": "public boolean isInGroup()", "class_method_signature": "ChannelUID.isInGroup()", "testcase": false, "constructor": false}, {"identifier": "getGroupId", "parameters": "()", "modifiers": "public @Nullable", "return": "String", "signature": "String getGroupId()", "full_signature": "public @Nullable String getGroupId()", "class_method_signature": "ChannelUID.getGroupId()", "testcase": false, "constructor": false}, {"identifier": "getMinimalNumberOfSegments", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int getMinimalNumberOfSegments()", "full_signature": "@Override protected int getMinimalNumberOfSegments()", "class_method_signature": "ChannelUID.getMinimalNumberOfSegments()", "testcase": false, "constructor": false}, {"identifier": "validateSegment", "parameters": "(String segment, int index, int length)", "modifiers": "@Override protected", "return": "void", "signature": "void validateSegment(String segment, int index, int length)", "full_signature": "@Override protected void validateSegment(String segment, int index, int length)", "class_method_signature": "ChannelUID.validateSegment(String segment, int index, int length)", "testcase": false, "constructor": false}, {"identifier": "getThingUID", "parameters": "()", "modifiers": "public", "return": "ThingUID", "signature": "ThingUID getThingUID()", "full_signature": "public ThingUID getThingUID()", "class_method_signature": "ChannelUID.getThingUID()", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/ChannelUID.java"}, "focal_method": {"identifier": "ChannelUID", "parameters": "()", "modifiers": "", "return": "", "body": "ChannelUID() {\n        super();\n    }", "signature": " ChannelUID()", "full_signature": "  ChannelUID()", "class_method_signature": "ChannelUID.ChannelUID()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}