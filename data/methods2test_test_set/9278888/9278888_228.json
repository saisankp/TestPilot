{"test_class": {"identifier": "HandlerParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "HttpServletRequest request = mock(HttpServletRequest.class);", "modifier": "", "type": "HttpServletRequest", "declarator": "request = mock(HttpServletRequest.class)", "var_name": "request"}, {"original_string": "SpanCustomizer customizer = mock(SpanCustomizer.class);", "modifier": "", "type": "SpanCustomizer", "declarator": "customizer = mock(SpanCustomizer.class)", "var_name": "customizer"}, {"original_string": "HandlerParser parser = new HandlerParser();", "modifier": "", "type": "HandlerParser", "declarator": "parser = new HandlerParser()", "var_name": "parser"}, {"original_string": "TestController controller = new TestController();", "modifier": "", "type": "TestController", "declarator": "controller = new TestController()", "var_name": "controller"}], "file": "instrumentation/spring-webmvc/src/test/java/brave/spring/webmvc/HandlerParserTest.java"}, "test_case": {"identifier": "preHandle_HandlerMethod_addsClassAndMethodTags", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void preHandle_HandlerMethod_addsClassAndMethodTags() throws Exception {\n    parser.preHandle(\n      request,\n      new HandlerMethod(controller, TestController.class.getMethod(\"items\", String.class)),\n      customizer\n    );\n\n    verify(customizer).tag(\"mvc.controller.class\", \"TestController\");\n    verify(customizer).tag(\"mvc.controller.method\", \"items\");\n    verifyNoMoreInteractions(request, customizer);\n  }", "signature": "void preHandle_HandlerMethod_addsClassAndMethodTags()", "full_signature": "@Test public void preHandle_HandlerMethod_addsClassAndMethodTags()", "class_method_signature": "HandlerParserTest.preHandle_HandlerMethod_addsClassAndMethodTags()", "testcase": true, "constructor": false, "invocations": ["preHandle", "getMethod", "tag", "verify", "tag", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "HandlerParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final HandlerParser NOOP = new HandlerParser() {\n    @Override protected void preHandle(HttpServletRequest request, Object handler,\n      SpanCustomizer customizer) {\n    }\n  };", "modifier": "public static final", "type": "HandlerParser", "declarator": "NOOP = new HandlerParser() {\n    @Override protected void preHandle(HttpServletRequest request, Object handler,\n      SpanCustomizer customizer) {\n    }\n  }", "var_name": "NOOP"}, {"original_string": "public static final String CONTROLLER_CLASS = \"mvc.controller.class\";", "modifier": "public static final", "type": "String", "declarator": "CONTROLLER_CLASS = \"mvc.controller.class\"", "var_name": "CONTROLLER_CLASS"}, {"original_string": "public static final String CONTROLLER_METHOD = \"mvc.controller.method\";", "modifier": "public static final", "type": "String", "declarator": "CONTROLLER_METHOD = \"mvc.controller.method\"", "var_name": "CONTROLLER_METHOD"}], "methods": [{"identifier": "preHandle", "parameters": "(HttpServletRequest request, Object handler, SpanCustomizer customizer)", "modifiers": "protected", "return": "void", "signature": "void preHandle(HttpServletRequest request, Object handler, SpanCustomizer customizer)", "full_signature": "protected void preHandle(HttpServletRequest request, Object handler, SpanCustomizer customizer)", "class_method_signature": "HandlerParser.preHandle(HttpServletRequest request, Object handler, SpanCustomizer customizer)", "testcase": false, "constructor": false}, {"identifier": "HandlerParser", "parameters": "()", "modifiers": "public", "return": "", "signature": " HandlerParser()", "full_signature": "public  HandlerParser()", "class_method_signature": "HandlerParser.HandlerParser()", "testcase": false, "constructor": true}], "file": "instrumentation/spring-webmvc/src/main/java/brave/spring/webmvc/HandlerParser.java"}, "focal_method": {"identifier": "preHandle", "parameters": "(HttpServletRequest request, Object handler, SpanCustomizer customizer)", "modifiers": "protected", "return": "void", "body": "protected void preHandle(HttpServletRequest request, Object handler, SpanCustomizer customizer) {\n    if (WebMvcRuntime.get().isHandlerMethod(handler)) {\n      HandlerMethod handlerMethod = ((HandlerMethod) handler);\n      customizer.tag(CONTROLLER_CLASS, handlerMethod.getBeanType().getSimpleName());\n      customizer.tag(CONTROLLER_METHOD, handlerMethod.getMethod().getName());\n    } else {\n      customizer.tag(CONTROLLER_CLASS, handler.getClass().getSimpleName());\n    }\n  }", "signature": "void preHandle(HttpServletRequest request, Object handler, SpanCustomizer customizer)", "full_signature": "protected void preHandle(HttpServletRequest request, Object handler, SpanCustomizer customizer)", "class_method_signature": "HandlerParser.preHandle(HttpServletRequest request, Object handler, SpanCustomizer customizer)", "testcase": false, "constructor": false, "invocations": ["isHandlerMethod", "get", "tag", "getSimpleName", "getBeanType", "tag", "getName", "getMethod", "tag", "getSimpleName", "getClass"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}