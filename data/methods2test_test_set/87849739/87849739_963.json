{"test_class": {"identifier": "RqlPredicateParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final PredicateParser parser = new RqlPredicateParser();", "modifier": "private final", "type": "PredicateParser", "declarator": "parser = new RqlPredicateParser()", "var_name": "parser"}], "file": "model/rql-parser/src/test/java/org/eclipse/ditto/model/rqlparser/RqlPredicateParserTest.java"}, "test_case": {"identifier": "testComparisonLikeWithStringValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testComparisonLikeWithStringValue() throws ParserException {\n        final RootNode root = parser.parse(\"like(width,\\\"test*\\\")\");\n        assertThat(root).isNotNull();\n        assertThat(root.getChildren().size()).isEqualTo(1);\n\n        final SingleComparisonNode comparison = (SingleComparisonNode) root.getChildren().get(0);\n        assertThat(comparison.getComparisonType()).isEqualTo(SingleComparisonNode.Type.LIKE);\n        assertThat(comparison.getComparisonProperty()).isEqualTo(\"width\");\n        assertThat(comparison.getComparisonValue().getClass()).isEqualTo(String.class);\n        assertThat(comparison.getComparisonValue()).isEqualTo(\"test*\");\n    }", "signature": "void testComparisonLikeWithStringValue()", "full_signature": "@Test public void testComparisonLikeWithStringValue()", "class_method_signature": "RqlPredicateParserTest.testComparisonLikeWithStringValue()", "testcase": true, "constructor": false, "invocations": ["parse", "isNotNull", "assertThat", "isEqualTo", "assertThat", "size", "getChildren", "get", "getChildren", "isEqualTo", "assertThat", "getComparisonType", "isEqualTo", "assertThat", "getComparisonProperty", "isEqualTo", "assertThat", "getClass", "getComparisonValue", "isEqualTo", "assertThat", "getComparisonValue"]}, "focal_class": {"identifier": "RqlPredicateParser", "superclass": "", "interfaces": "implements PredicateParser", "fields": [{"original_string": "private static final PredicateParser PARSER = RqlPredicateParser$.MODULE$;", "modifier": "private static final", "type": "PredicateParser", "declarator": "PARSER = RqlPredicateParser$.MODULE", "var_name": "PARSER"}], "methods": [{"identifier": "parse", "parameters": "(final String input)", "modifiers": "@Override public", "return": "RootNode", "signature": "RootNode parse(final String input)", "full_signature": "@Override public RootNode parse(final String input)", "class_method_signature": "RqlPredicateParser.parse(final String input)", "testcase": false, "constructor": false}], "file": "model/rql-parser/src/main/java/org/eclipse/ditto/model/rqlparser/RqlPredicateParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(final String input)", "modifiers": "@Override public", "return": "RootNode", "body": "@Override\n    public RootNode parse(final String input) {\n        return PARSER.parse(input);\n    }", "signature": "RootNode parse(final String input)", "full_signature": "@Override public RootNode parse(final String input)", "class_method_signature": "RqlPredicateParser.parse(final String input)", "testcase": false, "constructor": false, "invocations": ["parse"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}