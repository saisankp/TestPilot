{"test_class": {"identifier": "TychoMavenLifecycleParticipantTest", "superclass": "", "interfaces": "", "fields": [], "file": "tycho-core/src/test/java/org/eclipse/tycho/core/maven/TychoMavenLifecycleParticipantTest.java"}, "test_case": {"identifier": "validateConsistentTychoVersionWithSameVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validateConsistentTychoVersionWithSameVersion() throws MavenExecutionException {\n        TychoMavenLifecycleParticipant tycho = new TychoMavenLifecycleParticipant(new SilentLog());\n        MavenProject project = createProject();\n        addTychoPlugin(project, \"tycho-packaging-plugin\", \"0.22.0\");\n        addTychoPlugin(project, \"tycho-versions-plugin\", \"0.22.0\");\n\n        tycho.validateConsistentTychoVersion(Arrays.asList(project));\n    }", "signature": "void validateConsistentTychoVersionWithSameVersion()", "full_signature": "@Test public void validateConsistentTychoVersionWithSameVersion()", "class_method_signature": "TychoMavenLifecycleParticipantTest.validateConsistentTychoVersionWithSameVersion()", "testcase": true, "constructor": false, "invocations": ["createProject", "addTychoPlugin", "addTychoPlugin", "validateConsistentTychoVersion", "asList"]}, "focal_class": {"identifier": "TychoMavenLifecycleParticipant", "superclass": "extends AbstractMavenLifecycleParticipant", "interfaces": "", "fields": [{"original_string": "private static final String TYCHO_GROUPID = \"org.eclipse.tycho\";", "modifier": "private static final", "type": "String", "declarator": "TYCHO_GROUPID = \"org.eclipse.tycho\"", "var_name": "TYCHO_GROUPID"}, {"original_string": "private static final Set<String> TYCHO_PLUGIN_IDS = new HashSet<>(Arrays.asList(\"tycho-maven-plugin\",\n            \"tycho-p2-director-plugin\", \"tycho-p2-plugin\", \"tycho-p2-publisher-plugin\", \"tycho-p2-repository-plugin\",\n            \"tycho-packaging-plugin\", \"tycho-pomgenerator-plugin\", \"tycho-source-plugin\", \"tycho-surefire-plugin\",\n            \"tycho-versions-plugin\", \"tycho-compiler-plugin\"));", "modifier": "private static final", "type": "Set<String>", "declarator": "TYCHO_PLUGIN_IDS = new HashSet<>(Arrays.asList(\"tycho-maven-plugin\",\n            \"tycho-p2-director-plugin\", \"tycho-p2-plugin\", \"tycho-p2-publisher-plugin\", \"tycho-p2-repository-plugin\",\n            \"tycho-packaging-plugin\", \"tycho-pomgenerator-plugin\", \"tycho-source-plugin\", \"tycho-surefire-plugin\",\n            \"tycho-versions-plugin\", \"tycho-compiler-plugin\"))", "var_name": "TYCHO_PLUGIN_IDS"}, {"original_string": "private static final String P2_USER_AGENT_KEY = \"p2.userAgent\";", "modifier": "private static final", "type": "String", "declarator": "P2_USER_AGENT_KEY = \"p2.userAgent\"", "var_name": "P2_USER_AGENT_KEY"}, {"original_string": "private static final String P2_USER_AGENT_VALUE = \"tycho/\";", "modifier": "private static final", "type": "String", "declarator": "P2_USER_AGENT_VALUE = \"tycho/\"", "var_name": "P2_USER_AGENT_VALUE"}, {"original_string": "@Requirement\n    private BundleReader bundleReader;", "modifier": "@Requirement\n    private", "type": "BundleReader", "declarator": "bundleReader", "var_name": "bundleReader"}, {"original_string": "@Requirement\n    private TychoResolver resolver;", "modifier": "@Requirement\n    private", "type": "TychoResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "@Requirement\n    private PlexusContainer plexus;", "modifier": "@Requirement\n    private", "type": "PlexusContainer", "declarator": "plexus", "var_name": "plexus"}, {"original_string": "@Requirement\n    private Logger log;", "modifier": "@Requirement\n    private", "type": "Logger", "declarator": "log", "var_name": "log"}], "methods": [{"identifier": "TychoMavenLifecycleParticipant", "parameters": "()", "modifiers": "public", "return": "", "signature": " TychoMavenLifecycleParticipant()", "full_signature": "public  TychoMavenLifecycleParticipant()", "class_method_signature": "TychoMavenLifecycleParticipant.TychoMavenLifecycleParticipant()", "testcase": false, "constructor": true}, {"identifier": "TychoMavenLifecycleParticipant", "parameters": "(Logger log)", "modifiers": "protected", "return": "", "signature": " TychoMavenLifecycleParticipant(Logger log)", "full_signature": "protected  TychoMavenLifecycleParticipant(Logger log)", "class_method_signature": "TychoMavenLifecycleParticipant.TychoMavenLifecycleParticipant(Logger log)", "testcase": false, "constructor": true}, {"identifier": "afterProjectsRead", "parameters": "(MavenSession session)", "modifiers": "@Override public", "return": "void", "signature": "void afterProjectsRead(MavenSession session)", "full_signature": "@Override public void afterProjectsRead(MavenSession session)", "class_method_signature": "TychoMavenLifecycleParticipant.afterProjectsRead(MavenSession session)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(List<MavenProject> projects)", "modifiers": "private", "return": "void", "signature": "void validate(List<MavenProject> projects)", "full_signature": "private void validate(List<MavenProject> projects)", "class_method_signature": "TychoMavenLifecycleParticipant.validate(List<MavenProject> projects)", "testcase": false, "constructor": false}, {"identifier": "validateConsistentTychoVersion", "parameters": "(List<MavenProject> projects)", "modifiers": "protected", "return": "void", "signature": "void validateConsistentTychoVersion(List<MavenProject> projects)", "full_signature": "protected void validateConsistentTychoVersion(List<MavenProject> projects)", "class_method_signature": "TychoMavenLifecycleParticipant.validateConsistentTychoVersion(List<MavenProject> projects)", "testcase": false, "constructor": false}, {"identifier": "validateUniqueBaseDirs", "parameters": "(List<MavenProject> projects)", "modifiers": "private", "return": "void", "signature": "void validateUniqueBaseDirs(List<MavenProject> projects)", "full_signature": "private void validateUniqueBaseDirs(List<MavenProject> projects)", "class_method_signature": "TychoMavenLifecycleParticipant.validateUniqueBaseDirs(List<MavenProject> projects)", "testcase": false, "constructor": false}, {"identifier": "disableLifecycleParticipation", "parameters": "(MavenSession session)", "modifiers": "private", "return": "boolean", "signature": "boolean disableLifecycleParticipation(MavenSession session)", "full_signature": "private boolean disableLifecycleParticipation(MavenSession session)", "class_method_signature": "TychoMavenLifecycleParticipant.disableLifecycleParticipation(MavenSession session)", "testcase": false, "constructor": false}, {"identifier": "configureComponents", "parameters": "(MavenSession session)", "modifiers": "private", "return": "void", "signature": "void configureComponents(MavenSession session)", "full_signature": "private void configureComponents(MavenSession session)", "class_method_signature": "TychoMavenLifecycleParticipant.configureComponents(MavenSession session)", "testcase": false, "constructor": false}], "file": "tycho-core/src/main/java/org/eclipse/tycho/core/maven/TychoMavenLifecycleParticipant.java"}, "focal_method": {"identifier": "validateConsistentTychoVersion", "parameters": "(List<MavenProject> projects)", "modifiers": "protected", "return": "void", "body": "protected void validateConsistentTychoVersion(List<MavenProject> projects) throws MavenExecutionException {\n        Map<String, Set<MavenProject>> versionToProjectsMap = new HashMap<>();\n        for (MavenProject project : projects) {\n            for (Plugin plugin : project.getBuild().getPlugins()) {\n                if (TYCHO_GROUPID.equals(plugin.getGroupId()) && TYCHO_PLUGIN_IDS.contains(plugin.getArtifactId())) {\n                    String version = plugin.getVersion();\n                    // Skip checking plug ins that do not have a version\n                    if (version == null) {\n                        continue;\n                    }\n                    log.debug(TYCHO_GROUPID + \":\" + plugin.getArtifactId() + \":\" + version + \" configured in \"\n                            + project);\n                    Set<MavenProject> projectSet = versionToProjectsMap.get(version);\n                    if (projectSet == null) {\n                        projectSet = new LinkedHashSet<>();\n                        versionToProjectsMap.put(version, projectSet);\n                    }\n                    projectSet.add(project);\n                }\n            }\n        }\n        if (versionToProjectsMap.size() > 1) {\n            List<String> versions = new ArrayList<>(versionToProjectsMap.keySet());\n            Collections.sort(versions);\n            log.error(\"Several versions of tycho plugins are configured \" + versions + \":\");\n            for (String version : versions) {\n                log.error(version + \":\");\n                for (MavenProject project : versionToProjectsMap.get(version)) {\n                    log.error(\"\\t\" + project.toString());\n                }\n            }\n            throw new MavenExecutionException(\"All tycho plugins configured in one reactor must use the same version\",\n                    projects.get(0).getFile());\n        }\n    }", "signature": "void validateConsistentTychoVersion(List<MavenProject> projects)", "full_signature": "protected void validateConsistentTychoVersion(List<MavenProject> projects)", "class_method_signature": "TychoMavenLifecycleParticipant.validateConsistentTychoVersion(List<MavenProject> projects)", "testcase": false, "constructor": false, "invocations": ["getPlugins", "getBuild", "equals", "getGroupId", "contains", "getArtifactId", "getVersion", "debug", "getArtifactId", "get", "put", "add", "size", "keySet", "sort", "error", "error", "get", "error", "toString", "getFile", "get"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}