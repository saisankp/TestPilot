{"test_class": {"identifier": "LongestNameTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/test/java/com/insightfullogic/java8/answers/chapter5/LongestNameTest.java"}, "test_case": {"identifier": "findsLongestNameByReduce", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findsLongestNameByReduce() {\n        Artist artist = com.insightfullogic.java8.answers.chapter5.LongestName.byReduce(SampleData.getThreeArtists());\n        assertEquals(SampleData.johnColtrane, artist);\n    }", "signature": "void findsLongestNameByReduce()", "full_signature": "@Test public void findsLongestNameByReduce()", "class_method_signature": "LongestNameTest.findsLongestNameByReduce()", "testcase": true, "constructor": false, "invocations": ["byReduce", "getThreeArtists", "assertEquals"]}, "focal_class": {"identifier": "LongestName", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Comparator<Artist> byNameLength = comparing(artist -> artist.getName().length());", "modifier": "private static", "type": "Comparator<Artist>", "declarator": "byNameLength = comparing(artist -> artist.getName().length())", "var_name": "byNameLength"}], "methods": [{"identifier": "byReduce", "parameters": "(List<Artist> artists)", "modifiers": "public static", "return": "Artist", "signature": "Artist byReduce(List<Artist> artists)", "full_signature": "public static Artist byReduce(List<Artist> artists)", "class_method_signature": "LongestName.byReduce(List<Artist> artists)", "testcase": false, "constructor": false}, {"identifier": "byCollecting", "parameters": "(List<Artist> artists)", "modifiers": "public static", "return": "Artist", "signature": "Artist byCollecting(List<Artist> artists)", "full_signature": "public static Artist byCollecting(List<Artist> artists)", "class_method_signature": "LongestName.byCollecting(List<Artist> artists)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/insightfullogic/java8/answers/chapter5/LongestName.java"}, "focal_method": {"identifier": "byReduce", "parameters": "(List<Artist> artists)", "modifiers": "public static", "return": "Artist", "body": "public static Artist byReduce(List<Artist> artists) {\n        return artists.stream()\n                      .reduce((acc, artist) -> {\n                          return (byNameLength.compare(acc, artist) >= 0) ? acc : artist;\n                      })\n                      .orElseThrow(RuntimeException::new);\n    }", "signature": "Artist byReduce(List<Artist> artists)", "full_signature": "public static Artist byReduce(List<Artist> artists)", "class_method_signature": "LongestName.byReduce(List<Artist> artists)", "testcase": false, "constructor": false, "invocations": ["orElseThrow", "reduce", "stream", "compare"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}