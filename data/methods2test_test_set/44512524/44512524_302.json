{"test_class": {"identifier": "FileReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILE = \"/resources/test.txt\";", "modifier": "private static final", "type": "String", "declarator": "FILE = \"/resources/test.txt\"", "var_name": "FILE"}], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/tools/FileReaderTest.java"}, "test_case": {"identifier": "testNextLine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNextLine() {\n    FileReader reader = new FileReader(FILE);\n    assertThat(reader.nextLine()).isEqualTo(\"first line\");\n    assertThat(reader.nextLine()).isEqualTo(\"second line\");\n    assertThat(reader.nextLine()).isEqualTo(\"third line\");\n    assertThat(reader.nextLine()).isEqualTo(\"first line\");\n  }", "signature": "void testNextLine()", "full_signature": "@Test public void testNextLine()", "class_method_signature": "FileReaderTest.testNextLine()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "nextLine", "isEqualTo", "assertThat", "nextLine", "isEqualTo", "assertThat", "nextLine", "isEqualTo", "assertThat", "nextLine"]}, "focal_class": {"identifier": "FileReader", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -7012334600647556267L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -7012334600647556267L", "var_name": "serialVersionUID"}, {"original_string": "public final String file;", "modifier": "public final", "type": "String", "declarator": "file", "var_name": "file"}, {"original_string": "private final List<String> contents;", "modifier": "private final", "type": "List<String>", "declarator": "contents", "var_name": "contents"}, {"original_string": "private int index = 0;", "modifier": "private", "type": "int", "declarator": "index = 0", "var_name": "index"}, {"original_string": "private int limit = 0;", "modifier": "private", "type": "int", "declarator": "limit = 0", "var_name": "limit"}], "methods": [{"identifier": "FileReader", "parameters": "(String file)", "modifiers": "public", "return": "", "signature": " FileReader(String file)", "full_signature": "public  FileReader(String file)", "class_method_signature": "FileReader.FileReader(String file)", "testcase": false, "constructor": true}, {"identifier": "nextLine", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String nextLine()", "full_signature": "public String nextLine()", "class_method_signature": "FileReader.nextLine()", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/tools/FileReader.java"}, "focal_method": {"identifier": "nextLine", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String nextLine() {\n    if (index >= limit) {\n\t    index = 0;\n\t  }\n    String line = contents.get(index);\n    index++;\n    return line;\n  }", "signature": "String nextLine()", "full_signature": "public String nextLine()", "class_method_signature": "FileReader.nextLine()", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}