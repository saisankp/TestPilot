{"test_class": {"identifier": "FileSystemListenerTest", "superclass": "extends HelperedFileSystemTestBase", "interfaces": "", "fields": [{"original_string": "protected String fileAndFolderPrefix=\"\";", "modifier": "protected", "type": "String", "declarator": "fileAndFolderPrefix=\"\"", "var_name": "fileAndFolderPrefix"}, {"original_string": "protected boolean testFullErrorMessages=true;", "modifier": "protected", "type": "boolean", "declarator": "testFullErrorMessages=true", "var_name": "testFullErrorMessages"}, {"original_string": "protected FileSystemListener<F,FS> fileSystemListener;", "modifier": "protected", "type": "FileSystemListener<F,FS>", "declarator": "fileSystemListener", "var_name": "fileSystemListener"}, {"original_string": "protected Map<String,Object> threadContext;", "modifier": "protected", "type": "Map<String,Object>", "declarator": "threadContext", "var_name": "threadContext"}], "file": "core/src/test/java/nl/nn/adapterframework/filesystem/FileSystemListenerTest.java"}, "test_case": {"identifier": "fileListenerTestConfigure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void fileListenerTestConfigure() throws Exception {\n\t\tfileSystemListener.configure();\n\t}", "signature": "void fileListenerTestConfigure()", "full_signature": "@Test public void fileListenerTestConfigure()", "class_method_signature": "FileSystemListenerTest.fileListenerTestConfigure()", "testcase": true, "constructor": false, "invocations": ["configure"]}, "focal_class": {"identifier": "FileSystemListener", "superclass": "", "interfaces": "implements IPullingListener<F>, HasPhysicalDestination, IProvidesMessageBrowsers<F>", "fields": [{"original_string": "protected Logger log = LogUtil.getLogger(this);", "modifier": "protected", "type": "Logger", "declarator": "log = LogUtil.getLogger(this)", "var_name": "log"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String inputFolder;", "modifier": "private", "type": "String", "declarator": "inputFolder", "var_name": "inputFolder"}, {"original_string": "private String inProcessFolder;", "modifier": "private", "type": "String", "declarator": "inProcessFolder", "var_name": "inProcessFolder"}, {"original_string": "private String processedFolder;", "modifier": "private", "type": "String", "declarator": "processedFolder", "var_name": "processedFolder"}, {"original_string": "private String errorFolder;", "modifier": "private", "type": "String", "declarator": "errorFolder", "var_name": "errorFolder"}, {"original_string": "private String logFolder;", "modifier": "private", "type": "String", "declarator": "logFolder", "var_name": "logFolder"}, {"original_string": "private boolean createFolders=false;", "modifier": "private", "type": "boolean", "declarator": "createFolders=false", "var_name": "createFolders"}, {"original_string": "private boolean delete = false;", "modifier": "private", "type": "boolean", "declarator": "delete = false", "var_name": "delete"}, {"original_string": "private boolean overwrite = false;", "modifier": "private", "type": "boolean", "declarator": "overwrite = false", "var_name": "overwrite"}, {"original_string": "private int numberOfBackups=0;", "modifier": "private", "type": "int", "declarator": "numberOfBackups=0", "var_name": "numberOfBackups"}, {"original_string": "private boolean fileTimeSensitive=false;", "modifier": "private", "type": "boolean", "declarator": "fileTimeSensitive=false", "var_name": "fileTimeSensitive"}, {"original_string": "private String messageType=\"path\";", "modifier": "private", "type": "String", "declarator": "messageType=\"path\"", "var_name": "messageType"}, {"original_string": "private long minStableTime = 1000;", "modifier": "private", "type": "long", "declarator": "minStableTime = 1000", "var_name": "minStableTime"}, {"original_string": "private FS fileSystem;", "modifier": "private", "type": "FS", "declarator": "fileSystem", "var_name": "fileSystem"}], "methods": [{"identifier": "createFileSystem", "parameters": "()", "modifiers": "protected abstract", "return": "FS", "signature": "FS createFileSystem()", "full_signature": "protected abstract FS createFileSystem()", "class_method_signature": "FileSystemListener.createFileSystem()", "testcase": false, "constructor": false}, {"identifier": "FileSystemListener", "parameters": "()", "modifiers": "public", "return": "", "signature": " FileSystemListener()", "full_signature": "public  FileSystemListener()", "class_method_signature": "FileSystemListener.FileSystemListener()", "testcase": false, "constructor": true}, {"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "FileSystemListener.configure()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void open()", "full_signature": "@Override public void open()", "class_method_signature": "FileSystemListener.open()", "testcase": false, "constructor": false}, {"identifier": "checkForExistenceOfFolder", "parameters": "(String attributeName, String folderName)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkForExistenceOfFolder(String attributeName, String folderName)", "full_signature": "protected boolean checkForExistenceOfFolder(String attributeName, String folderName)", "class_method_signature": "FileSystemListener.checkForExistenceOfFolder(String attributeName, String folderName)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "FileSystemListener.close()", "testcase": false, "constructor": false}, {"identifier": "openThread", "parameters": "()", "modifiers": "@Override public", "return": "Map<String,Object>", "signature": "Map<String,Object> openThread()", "full_signature": "@Override public Map<String,Object> openThread()", "class_method_signature": "FileSystemListener.openThread()", "testcase": false, "constructor": false}, {"identifier": "closeThread", "parameters": "(Map<String,Object> threadContext)", "modifiers": "@Override public", "return": "void", "signature": "void closeThread(Map<String,Object> threadContext)", "full_signature": "@Override public void closeThread(Map<String,Object> threadContext)", "class_method_signature": "FileSystemListener.closeThread(Map<String,Object> threadContext)", "testcase": false, "constructor": false}, {"identifier": "getPhysicalDestinationName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPhysicalDestinationName()", "full_signature": "@Override public String getPhysicalDestinationName()", "class_method_signature": "FileSystemListener.getPhysicalDestinationName()", "testcase": false, "constructor": false}, {"identifier": "getFileSystem", "parameters": "()", "modifiers": "public", "return": "FS", "signature": "FS getFileSystem()", "full_signature": "public FS getFileSystem()", "class_method_signature": "FileSystemListener.getFileSystem()", "testcase": false, "constructor": false}, {"identifier": "getRawMessage", "parameters": "(Map<String,Object> threadContext)", "modifiers": "@Override public synchronized", "return": "F", "signature": "F getRawMessage(Map<String,Object> threadContext)", "full_signature": "@Override public synchronized F getRawMessage(Map<String,Object> threadContext)", "class_method_signature": "FileSystemListener.getRawMessage(Map<String,Object> threadContext)", "testcase": false, "constructor": false}, {"identifier": "afterMessageProcessed", "parameters": "(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String,Object> context)", "modifiers": "@Override public", "return": "void", "signature": "void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String,Object> context)", "full_signature": "@Override public void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String,Object> context)", "class_method_signature": "FileSystemListener.afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String,Object> context)", "testcase": false, "constructor": false}, {"identifier": "extractMessage", "parameters": "(F rawMessage, Map<String,Object> threadContext)", "modifiers": "@Override public", "return": "Message", "signature": "Message extractMessage(F rawMessage, Map<String,Object> threadContext)", "full_signature": "@Override public Message extractMessage(F rawMessage, Map<String,Object> threadContext)", "class_method_signature": "FileSystemListener.extractMessage(F rawMessage, Map<String,Object> threadContext)", "testcase": false, "constructor": false}, {"identifier": "getIdFromRawMessage", "parameters": "(F rawMessage, Map<String, Object> threadContext)", "modifiers": "@Override public", "return": "String", "signature": "String getIdFromRawMessage(F rawMessage, Map<String, Object> threadContext)", "full_signature": "@Override public String getIdFromRawMessage(F rawMessage, Map<String, Object> threadContext)", "class_method_signature": "FileSystemListener.getIdFromRawMessage(F rawMessage, Map<String, Object> threadContext)", "testcase": false, "constructor": false}, {"identifier": "getInProcessBrowser", "parameters": "()", "modifiers": "@Override public", "return": "IMessageBrowser<F>", "signature": "IMessageBrowser<F> getInProcessBrowser()", "full_signature": "@Override public IMessageBrowser<F> getInProcessBrowser()", "class_method_signature": "FileSystemListener.getInProcessBrowser()", "testcase": false, "constructor": false}, {"identifier": "getMessageLogBrowser", "parameters": "()", "modifiers": "@Override public", "return": "IMessageBrowser<F>", "signature": "IMessageBrowser<F> getMessageLogBrowser()", "full_signature": "@Override public IMessageBrowser<F> getMessageLogBrowser()", "class_method_signature": "FileSystemListener.getMessageLogBrowser()", "testcase": false, "constructor": false}, {"identifier": "getErrorStoreBrowser", "parameters": "()", "modifiers": "@Override public", "return": "IMessageBrowser<F>", "signature": "IMessageBrowser<F> getErrorStoreBrowser()", "full_signature": "@Override public IMessageBrowser<F> getErrorStoreBrowser()", "class_method_signature": "FileSystemListener.getErrorStoreBrowser()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "@Override @IbisDoc({\"1\", \"name of the listener\", \"\"}) public", "return": "void", "signature": "void setName(String name)", "full_signature": "@Override @IbisDoc({\"1\", \"name of the listener\", \"\"}) public void setName(String name)", "class_method_signature": "FileSystemListener.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "FileSystemListener.getName()", "testcase": false, "constructor": false}, {"identifier": "setInputDirectory", "parameters": "(String inputDirectory)", "modifiers": "@Deprecated @ConfigurationWarning(\"attribute 'inputDirectory' has been replaced by 'inputFolder'\") public", "return": "void", "signature": "void setInputDirectory(String inputDirectory)", "full_signature": "@Deprecated @ConfigurationWarning(\"attribute 'inputDirectory' has been replaced by 'inputFolder'\") public void setInputDirectory(String inputDirectory)", "class_method_signature": "FileSystemListener.setInputDirectory(String inputDirectory)", "testcase": false, "constructor": false}, {"identifier": "setInputFolder", "parameters": "(String inputFolder)", "modifiers": "@IbisDoc({\"1\", \"Folder that is scanned for files. If not set, the root is scanned\", \"\"}) public", "return": "void", "signature": "void setInputFolder(String inputFolder)", "full_signature": "@IbisDoc({\"1\", \"Folder that is scanned for files. If not set, the root is scanned\", \"\"}) public void setInputFolder(String inputFolder)", "class_method_signature": "FileSystemListener.setInputFolder(String inputFolder)", "testcase": false, "constructor": false}, {"identifier": "getInputFolder", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInputFolder()", "full_signature": "public String getInputFolder()", "class_method_signature": "FileSystemListener.getInputFolder()", "testcase": false, "constructor": false}, {"identifier": "setOutputDirectory", "parameters": "(String outputDirectory)", "modifiers": "@Deprecated @ConfigurationWarning(\"attribute 'outputDirectory' has been replaced by 'inProcessFolder'\") public", "return": "void", "signature": "void setOutputDirectory(String outputDirectory)", "full_signature": "@Deprecated @ConfigurationWarning(\"attribute 'outputDirectory' has been replaced by 'inProcessFolder'\") public void setOutputDirectory(String outputDirectory)", "class_method_signature": "FileSystemListener.setOutputDirectory(String outputDirectory)", "testcase": false, "constructor": false}, {"identifier": "setInProcessFolder", "parameters": "(String inProcessFolder)", "modifiers": "@IbisDoc({\"2\", \"Folder where files are stored <i>while</i> being processed\", \"\"}) public", "return": "void", "signature": "void setInProcessFolder(String inProcessFolder)", "full_signature": "@IbisDoc({\"2\", \"Folder where files are stored <i>while</i> being processed\", \"\"}) public void setInProcessFolder(String inProcessFolder)", "class_method_signature": "FileSystemListener.setInProcessFolder(String inProcessFolder)", "testcase": false, "constructor": false}, {"identifier": "getInProcessFolder", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInProcessFolder()", "full_signature": "public String getInProcessFolder()", "class_method_signature": "FileSystemListener.getInProcessFolder()", "testcase": false, "constructor": false}, {"identifier": "setProcessedDirectory", "parameters": "(String processedDirectory)", "modifiers": "@Deprecated @ConfigurationWarning(\"attribute 'processedDirectory' has been replaced by 'processedFolder'\") public", "return": "void", "signature": "void setProcessedDirectory(String processedDirectory)", "full_signature": "@Deprecated @ConfigurationWarning(\"attribute 'processedDirectory' has been replaced by 'processedFolder'\") public void setProcessedDirectory(String processedDirectory)", "class_method_signature": "FileSystemListener.setProcessedDirectory(String processedDirectory)", "testcase": false, "constructor": false}, {"identifier": "setProcessedFolder", "parameters": "(String processedFolder)", "modifiers": "@IbisDoc({\"3\", \"Folder where files are stored <i>after</i> being processed\", \"\"}) public", "return": "void", "signature": "void setProcessedFolder(String processedFolder)", "full_signature": "@IbisDoc({\"3\", \"Folder where files are stored <i>after</i> being processed\", \"\"}) public void setProcessedFolder(String processedFolder)", "class_method_signature": "FileSystemListener.setProcessedFolder(String processedFolder)", "testcase": false, "constructor": false}, {"identifier": "getProcessedFolder", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProcessedFolder()", "full_signature": "public String getProcessedFolder()", "class_method_signature": "FileSystemListener.getProcessedFolder()", "testcase": false, "constructor": false}, {"identifier": "setErrorFolder", "parameters": "(String errorFolder)", "modifiers": "@IbisDoc({\"4\", \"Folder where files are stored <i>after</i> being processed, in case the exit-state was not equal to <code>success</code>\", \"\"}) public", "return": "void", "signature": "void setErrorFolder(String errorFolder)", "full_signature": "@IbisDoc({\"4\", \"Folder where files are stored <i>after</i> being processed, in case the exit-state was not equal to <code>success</code>\", \"\"}) public void setErrorFolder(String errorFolder)", "class_method_signature": "FileSystemListener.setErrorFolder(String errorFolder)", "testcase": false, "constructor": false}, {"identifier": "getErrorFolder", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getErrorFolder()", "full_signature": "public String getErrorFolder()", "class_method_signature": "FileSystemListener.getErrorFolder()", "testcase": false, "constructor": false}, {"identifier": "setLogFolder", "parameters": "(String logFolder)", "modifiers": "@IbisDoc({\"5\", \"Folder where a copy of every files that is received is stored\", \"\"}) public", "return": "void", "signature": "void setLogFolder(String logFolder)", "full_signature": "@IbisDoc({\"5\", \"Folder where a copy of every files that is received is stored\", \"\"}) public void setLogFolder(String logFolder)", "class_method_signature": "FileSystemListener.setLogFolder(String logFolder)", "testcase": false, "constructor": false}, {"identifier": "getLogFolder", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogFolder()", "full_signature": "public String getLogFolder()", "class_method_signature": "FileSystemListener.getLogFolder()", "testcase": false, "constructor": false}, {"identifier": "setCreateFolders", "parameters": "(boolean createFolders)", "modifiers": "@IbisDoc({\"6\", \"If set to <code>true</code>, the folders to look for files and to move files to when being processed and after being processed are created if they are specified and do not exist\", \"false\"}) public", "return": "void", "signature": "void setCreateFolders(boolean createFolders)", "full_signature": "@IbisDoc({\"6\", \"If set to <code>true</code>, the folders to look for files and to move files to when being processed and after being processed are created if they are specified and do not exist\", \"false\"}) public void setCreateFolders(boolean createFolders)", "class_method_signature": "FileSystemListener.setCreateFolders(boolean createFolders)", "testcase": false, "constructor": false}, {"identifier": "isCreateFolders", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCreateFolders()", "full_signature": "public boolean isCreateFolders()", "class_method_signature": "FileSystemListener.isCreateFolders()", "testcase": false, "constructor": false}, {"identifier": "setCreateInputDirectory", "parameters": "(boolean createInputDirectory)", "modifiers": "@Deprecated @ConfigurationWarning(\"attribute 'createInputDirectory' has been replaced by 'createFolders'\") public", "return": "void", "signature": "void setCreateInputDirectory(boolean createInputDirectory)", "full_signature": "@Deprecated @ConfigurationWarning(\"attribute 'createInputDirectory' has been replaced by 'createFolders'\") public void setCreateInputDirectory(boolean createInputDirectory)", "class_method_signature": "FileSystemListener.setCreateInputDirectory(boolean createInputDirectory)", "testcase": false, "constructor": false}, {"identifier": "setDelete", "parameters": "(boolean b)", "modifiers": "@IbisDoc({\"7\", \"If set <code>true</code>, the file processed will deleted after being processed, and not stored\", \"false\"}) public", "return": "void", "signature": "void setDelete(boolean b)", "full_signature": "@IbisDoc({\"7\", \"If set <code>true</code>, the file processed will deleted after being processed, and not stored\", \"false\"}) public void setDelete(boolean b)", "class_method_signature": "FileSystemListener.setDelete(boolean b)", "testcase": false, "constructor": false}, {"identifier": "isDelete", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDelete()", "full_signature": "public boolean isDelete()", "class_method_signature": "FileSystemListener.isDelete()", "testcase": false, "constructor": false}, {"identifier": "setNumberOfBackups", "parameters": "(int i)", "modifiers": "@IbisDoc({\"8\", \"Number of copies held of a file with the same name. Backup files have a dot and a number suffixed to their name. If set to 0, no backups will be kept.\", \"0\"}) public", "return": "void", "signature": "void setNumberOfBackups(int i)", "full_signature": "@IbisDoc({\"8\", \"Number of copies held of a file with the same name. Backup files have a dot and a number suffixed to their name. If set to 0, no backups will be kept.\", \"0\"}) public void setNumberOfBackups(int i)", "class_method_signature": "FileSystemListener.setNumberOfBackups(int i)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfBackups", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfBackups()", "full_signature": "public int getNumberOfBackups()", "class_method_signature": "FileSystemListener.getNumberOfBackups()", "testcase": false, "constructor": false}, {"identifier": "setOverwrite", "parameters": "(boolean overwrite)", "modifiers": "@IbisDoc({\"8\", \"If set <code>true</code>, the destination file will be deleted if it already exists\", \"false\"}) public", "return": "void", "signature": "void setOverwrite(boolean overwrite)", "full_signature": "@IbisDoc({\"8\", \"If set <code>true</code>, the destination file will be deleted if it already exists\", \"false\"}) public void setOverwrite(boolean overwrite)", "class_method_signature": "FileSystemListener.setOverwrite(boolean overwrite)", "testcase": false, "constructor": false}, {"identifier": "isOverwrite", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOverwrite()", "full_signature": "public boolean isOverwrite()", "class_method_signature": "FileSystemListener.isOverwrite()", "testcase": false, "constructor": false}, {"identifier": "setFileTimeSensitive", "parameters": "(boolean b)", "modifiers": "@IbisDoc({\"9\", \"If <code>true</code>, the file modification time is used in addition to the filename to determine if a file has been seen before\", \"false\"}) public", "return": "void", "signature": "void setFileTimeSensitive(boolean b)", "full_signature": "@IbisDoc({\"9\", \"If <code>true</code>, the file modification time is used in addition to the filename to determine if a file has been seen before\", \"false\"}) public void setFileTimeSensitive(boolean b)", "class_method_signature": "FileSystemListener.setFileTimeSensitive(boolean b)", "testcase": false, "constructor": false}, {"identifier": "isFileTimeSensitive", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFileTimeSensitive()", "full_signature": "public boolean isFileTimeSensitive()", "class_method_signature": "FileSystemListener.isFileTimeSensitive()", "testcase": false, "constructor": false}, {"identifier": "setMessageType", "parameters": "(String messageType)", "modifiers": "@IbisDoc({\"10\", \"Determines the contents of the message that is sent to the pipeline. Can be 'name', for the filename, 'path', for the full file path, 'contents' for the contents of the file. For any other value, the attributes of the file are searched and used\", \"path\"}) public", "return": "void", "signature": "void setMessageType(String messageType)", "full_signature": "@IbisDoc({\"10\", \"Determines the contents of the message that is sent to the pipeline. Can be 'name', for the filename, 'path', for the full file path, 'contents' for the contents of the file. For any other value, the attributes of the file are searched and used\", \"path\"}) public void setMessageType(String messageType)", "class_method_signature": "FileSystemListener.setMessageType(String messageType)", "testcase": false, "constructor": false}, {"identifier": "getMessageType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMessageType()", "full_signature": "public String getMessageType()", "class_method_signature": "FileSystemListener.getMessageType()", "testcase": false, "constructor": false}, {"identifier": "setMinStableTime", "parameters": "(long minStableTime)", "modifiers": "@IbisDoc({\"11\", \"Minimal age of file in milliseconds, to avoid receiving a file while it is still being written\", \"1000 [ms]\"}) public", "return": "void", "signature": "void setMinStableTime(long minStableTime)", "full_signature": "@IbisDoc({\"11\", \"Minimal age of file in milliseconds, to avoid receiving a file while it is still being written\", \"1000 [ms]\"}) public void setMinStableTime(long minStableTime)", "class_method_signature": "FileSystemListener.setMinStableTime(long minStableTime)", "testcase": false, "constructor": false}, {"identifier": "getMinStableTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMinStableTime()", "full_signature": "public long getMinStableTime()", "class_method_signature": "FileSystemListener.getMinStableTime()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java"}, "focal_method": {"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void configure() throws ConfigurationException {\n\t\tFS fileSystem = getFileSystem();\n\t\tfileSystem.configure();\n\t\tif (getNumberOfBackups()>0 && !(fileSystem instanceof IWritableFileSystem)) {\n\t\t\tthrow new ConfigurationException(\"FileSystem [\"+ClassUtils.nameOf(fileSystem)+\"] does not support setting attribute 'numberOfBackups'\");\n\t\t}\n\t}", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "FileSystemListener.configure()", "testcase": false, "constructor": false, "invocations": ["getFileSystem", "configure", "getNumberOfBackups", "nameOf"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}