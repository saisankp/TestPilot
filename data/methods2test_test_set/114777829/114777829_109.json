{"test_class": {"identifier": "DefaultServletEnvironmentTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/impl/src/test/java/cloud/piranha/webapp/impl/DefaultServletEnvironmentTest.java"}, "test_case": {"identifier": "testSetAsyncSupported", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testSetAsyncSupported() {\n        TestSnoopServlet servlet = new TestSnoopServlet();\n        DefaultServletEnvironment environment = new DefaultServletEnvironment(null, null, servlet);\n        assertFalse(environment.isAsyncSupported());\n        environment.setAsyncSupported(true);\n        assertTrue(environment.isAsyncSupported());\n    }", "signature": "void testSetAsyncSupported()", "full_signature": "@Test void testSetAsyncSupported()", "class_method_signature": "DefaultServletEnvironmentTest.testSetAsyncSupported()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isAsyncSupported", "setAsyncSupported", "assertTrue", "isAsyncSupported"]}, "focal_class": {"identifier": "DefaultServletEnvironment", "superclass": "", "interfaces": "implements ServletEnvironment", "fields": [{"original_string": "protected boolean asyncSupported;", "modifier": "protected", "type": "boolean", "declarator": "asyncSupported", "var_name": "asyncSupported"}, {"original_string": "protected String className;", "modifier": "protected", "type": "String", "declarator": "className", "var_name": "className"}, {"original_string": "protected final Map<String, String> initParameters;", "modifier": "protected final", "type": "Map<String, String>", "declarator": "initParameters", "var_name": "initParameters"}, {"original_string": "protected int loadOnStartup;", "modifier": "protected", "type": "int", "declarator": "loadOnStartup", "var_name": "loadOnStartup"}, {"original_string": "protected MultipartConfigElement multipartConfig;", "modifier": "protected", "type": "MultipartConfigElement", "declarator": "multipartConfig", "var_name": "multipartConfig"}, {"original_string": "protected String runAsRole;", "modifier": "protected", "type": "String", "declarator": "runAsRole", "var_name": "runAsRole"}, {"original_string": "protected Servlet servlet;", "modifier": "protected", "type": "Servlet", "declarator": "servlet", "var_name": "servlet"}, {"original_string": "protected Class<? extends Servlet> servletClass;", "modifier": "protected", "type": "Class<? extends Servlet>", "declarator": "servletClass", "var_name": "servletClass"}, {"original_string": "protected final String servletName;", "modifier": "protected final", "type": "String", "declarator": "servletName", "var_name": "servletName"}, {"original_string": "protected int status;", "modifier": "protected", "type": "int", "declarator": "status", "var_name": "status"}, {"original_string": "protected Throwable unavailableException;", "modifier": "protected", "type": "Throwable", "declarator": "unavailableException", "var_name": "unavailableException"}, {"original_string": "protected final WebApplication webApp;", "modifier": "protected final", "type": "WebApplication", "declarator": "webApp", "var_name": "webApp"}], "methods": [{"identifier": "DefaultServletEnvironment", "parameters": "(DefaultWebApplication webApp, String servletName)", "modifiers": "public", "return": "", "signature": " DefaultServletEnvironment(DefaultWebApplication webApp, String servletName)", "full_signature": "public  DefaultServletEnvironment(DefaultWebApplication webApp, String servletName)", "class_method_signature": "DefaultServletEnvironment.DefaultServletEnvironment(DefaultWebApplication webApp, String servletName)", "testcase": false, "constructor": true}, {"identifier": "DefaultServletEnvironment", "parameters": "(DefaultWebApplication webApp, String servletName, Servlet servlet)", "modifiers": "public", "return": "", "signature": " DefaultServletEnvironment(DefaultWebApplication webApp, String servletName, Servlet servlet)", "full_signature": "public  DefaultServletEnvironment(DefaultWebApplication webApp, String servletName, Servlet servlet)", "class_method_signature": "DefaultServletEnvironment.DefaultServletEnvironment(DefaultWebApplication webApp, String servletName, Servlet servlet)", "testcase": false, "constructor": true}, {"identifier": "addMapping", "parameters": "(String... urlPatterns)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> addMapping(String... urlPatterns)", "full_signature": "@Override public Set<String> addMapping(String... urlPatterns)", "class_method_signature": "DefaultServletEnvironment.addMapping(String... urlPatterns)", "testcase": false, "constructor": false}, {"identifier": "getClassName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getClassName()", "full_signature": "@Override public String getClassName()", "class_method_signature": "DefaultServletEnvironment.getClassName()", "testcase": false, "constructor": false}, {"identifier": "getInitParameter", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getInitParameter(String name)", "full_signature": "@Override public String getInitParameter(String name)", "class_method_signature": "DefaultServletEnvironment.getInitParameter(String name)", "testcase": false, "constructor": false}, {"identifier": "getInitParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getInitParameterNames()", "full_signature": "@Override public Enumeration<String> getInitParameterNames()", "class_method_signature": "DefaultServletEnvironment.getInitParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getInitParameters", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getInitParameters()", "full_signature": "@Override public Map<String, String> getInitParameters()", "class_method_signature": "DefaultServletEnvironment.getInitParameters()", "testcase": false, "constructor": false}, {"identifier": "getLoadOnStartup", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLoadOnStartup()", "full_signature": "@Override public int getLoadOnStartup()", "class_method_signature": "DefaultServletEnvironment.getLoadOnStartup()", "testcase": false, "constructor": false}, {"identifier": "getMappings", "parameters": "()", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getMappings()", "full_signature": "@Override public Collection<String> getMappings()", "class_method_signature": "DefaultServletEnvironment.getMappings()", "testcase": false, "constructor": false}, {"identifier": "getMultipartConfig", "parameters": "()", "modifiers": "@Override public", "return": "MultipartConfigElement", "signature": "MultipartConfigElement getMultipartConfig()", "full_signature": "@Override public MultipartConfigElement getMultipartConfig()", "class_method_signature": "DefaultServletEnvironment.getMultipartConfig()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DefaultServletEnvironment.getName()", "testcase": false, "constructor": false}, {"identifier": "getRunAsRole", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRunAsRole()", "full_signature": "@Override public String getRunAsRole()", "class_method_signature": "DefaultServletEnvironment.getRunAsRole()", "testcase": false, "constructor": false}, {"identifier": "getServlet", "parameters": "()", "modifiers": "@Override public", "return": "Servlet", "signature": "Servlet getServlet()", "full_signature": "@Override public Servlet getServlet()", "class_method_signature": "DefaultServletEnvironment.getServlet()", "testcase": false, "constructor": false}, {"identifier": "getServletContext", "parameters": "()", "modifiers": "@Override public", "return": "ServletContext", "signature": "ServletContext getServletContext()", "full_signature": "@Override public ServletContext getServletContext()", "class_method_signature": "DefaultServletEnvironment.getServletContext()", "testcase": false, "constructor": false}, {"identifier": "getServletClass", "parameters": "()", "modifiers": "@Override public", "return": "Class<? extends Servlet>", "signature": "Class<? extends Servlet> getServletClass()", "full_signature": "@Override public Class<? extends Servlet> getServletClass()", "class_method_signature": "DefaultServletEnvironment.getServletClass()", "testcase": false, "constructor": false}, {"identifier": "getServletName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getServletName()", "full_signature": "@Override public String getServletName()", "class_method_signature": "DefaultServletEnvironment.getServletName()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getStatus()", "full_signature": "@Override public int getStatus()", "class_method_signature": "DefaultServletEnvironment.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getWebApplication", "parameters": "()", "modifiers": "@Override public", "return": "WebApplication", "signature": "WebApplication getWebApplication()", "full_signature": "@Override public WebApplication getWebApplication()", "class_method_signature": "DefaultServletEnvironment.getWebApplication()", "testcase": false, "constructor": false}, {"identifier": "isAsyncSupported", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAsyncSupported()", "full_signature": "@Override public boolean isAsyncSupported()", "class_method_signature": "DefaultServletEnvironment.isAsyncSupported()", "testcase": false, "constructor": false}, {"identifier": "setAsyncSupported", "parameters": "(boolean asyncSupported)", "modifiers": "@Override public", "return": "void", "signature": "void setAsyncSupported(boolean asyncSupported)", "full_signature": "@Override public void setAsyncSupported(boolean asyncSupported)", "class_method_signature": "DefaultServletEnvironment.setAsyncSupported(boolean asyncSupported)", "testcase": false, "constructor": false}, {"identifier": "setClassName", "parameters": "(String className)", "modifiers": "@Override public", "return": "void", "signature": "void setClassName(String className)", "full_signature": "@Override public void setClassName(String className)", "class_method_signature": "DefaultServletEnvironment.setClassName(String className)", "testcase": false, "constructor": false}, {"identifier": "setInitParameter", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setInitParameter(String name, String value)", "full_signature": "@Override public boolean setInitParameter(String name, String value)", "class_method_signature": "DefaultServletEnvironment.setInitParameter(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "setInitParameters", "parameters": "(Map<String, String> initParameters)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> setInitParameters(Map<String, String> initParameters)", "full_signature": "@Override public Set<String> setInitParameters(Map<String, String> initParameters)", "class_method_signature": "DefaultServletEnvironment.setInitParameters(Map<String, String> initParameters)", "testcase": false, "constructor": false}, {"identifier": "setLoadOnStartup", "parameters": "(int loadOnStartup)", "modifiers": "@Override public", "return": "void", "signature": "void setLoadOnStartup(int loadOnStartup)", "full_signature": "@Override public void setLoadOnStartup(int loadOnStartup)", "class_method_signature": "DefaultServletEnvironment.setLoadOnStartup(int loadOnStartup)", "testcase": false, "constructor": false}, {"identifier": "setMultipartConfig", "parameters": "(MultipartConfigElement multipartConfig)", "modifiers": "@Override public", "return": "void", "signature": "void setMultipartConfig(MultipartConfigElement multipartConfig)", "full_signature": "@Override public void setMultipartConfig(MultipartConfigElement multipartConfig)", "class_method_signature": "DefaultServletEnvironment.setMultipartConfig(MultipartConfigElement multipartConfig)", "testcase": false, "constructor": false}, {"identifier": "setRunAsRole", "parameters": "(String runAsRole)", "modifiers": "@Override public", "return": "void", "signature": "void setRunAsRole(String runAsRole)", "full_signature": "@Override public void setRunAsRole(String runAsRole)", "class_method_signature": "DefaultServletEnvironment.setRunAsRole(String runAsRole)", "testcase": false, "constructor": false}, {"identifier": "setServlet", "parameters": "(Servlet servlet)", "modifiers": "@Override public", "return": "void", "signature": "void setServlet(Servlet servlet)", "full_signature": "@Override public void setServlet(Servlet servlet)", "class_method_signature": "DefaultServletEnvironment.setServlet(Servlet servlet)", "testcase": false, "constructor": false}, {"identifier": "setServletSecurity", "parameters": "(ServletSecurityElement servletSecurityElement)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> setServletSecurity(ServletSecurityElement servletSecurityElement)", "full_signature": "@Override public Set<String> setServletSecurity(ServletSecurityElement servletSecurityElement)", "class_method_signature": "DefaultServletEnvironment.setServletSecurity(ServletSecurityElement servletSecurityElement)", "testcase": false, "constructor": false}, {"identifier": "setStatus", "parameters": "(int status)", "modifiers": "@Override public", "return": "void", "signature": "void setStatus(int status)", "full_signature": "@Override public void setStatus(int status)", "class_method_signature": "DefaultServletEnvironment.setStatus(int status)", "testcase": false, "constructor": false}, {"identifier": "getUnavailableException", "parameters": "()", "modifiers": "@Override public", "return": "Throwable", "signature": "Throwable getUnavailableException()", "full_signature": "@Override public Throwable getUnavailableException()", "class_method_signature": "DefaultServletEnvironment.getUnavailableException()", "testcase": false, "constructor": false}, {"identifier": "setUnavailableException", "parameters": "(Throwable unavailableException)", "modifiers": "@Override public", "return": "void", "signature": "void setUnavailableException(Throwable unavailableException)", "full_signature": "@Override public void setUnavailableException(Throwable unavailableException)", "class_method_signature": "DefaultServletEnvironment.setUnavailableException(Throwable unavailableException)", "testcase": false, "constructor": false}], "file": "webapp/impl/src/main/java/cloud/piranha/webapp/impl/DefaultServletEnvironment.java"}, "focal_method": {"identifier": "setAsyncSupported", "parameters": "(boolean asyncSupported)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setAsyncSupported(boolean asyncSupported) {\n        this.asyncSupported = asyncSupported;\n    }", "signature": "void setAsyncSupported(boolean asyncSupported)", "full_signature": "@Override public void setAsyncSupported(boolean asyncSupported)", "class_method_signature": "DefaultServletEnvironment.setAsyncSupported(boolean asyncSupported)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}