{"test_class": {"identifier": "StreamlineEventImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "streams/common/src/test/java/com/hortonworks/streamline/streams/common/StreamlineEventImplTest.java"}, "test_case": {"identifier": "testBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuilder() {\n        StreamlineEventImpl event = StreamlineEventImpl.builder().put(\"a\", \"A\").build();\n        assertEquals(1, event.size());\n        assertEquals(\"A\", event.get(\"a\"));\n\n        event = StreamlineEventImpl.builder().put(\"a\", \"A\").put(\"b\", \"B\").build();\n        assertEquals(2, event.size());\n        assertEquals(\"A\", event.get(\"a\"));\n        assertEquals(\"B\", event.get(\"b\"));\n\n        event = StreamlineEventImpl.builder().put(\"a\", \"A\").putAll(ImmutableMap.of(\"b\", \"B\", \"c\", \"C\")).build();\n        assertEquals(3, event.size());\n        assertEquals(\"A\", event.get(\"a\"));\n        assertEquals(\"B\", event.get(\"b\"));\n        assertEquals(\"C\", event.get(\"c\"));\n\n        ImmutableMap<String, Object> kv = ImmutableMap.of(\"b\", \"B\", \"c\", \"C\");\n        event = StreamlineEventImpl.builder().putAll(kv).build();\n        assertEquals(2, event.size());\n        assertEquals(\"B\", event.get(\"b\"));\n        assertEquals(\"C\", event.get(\"c\"));\n        // should be same reference\n        assertTrue(kv == event.delegate());\n\n\n        event = StreamlineEventImpl.builder().put(\"a\", \"A\").put(\"b\", \"B\").build();\n\n        StreamlineEventImpl event2 = StreamlineEventImpl.builder().dataSourceId(\"dsrcid\").putAll(event).build();\n\n        // should be same reference\n        assertTrue(event.delegate() == event2.delegate());\n\n    }", "signature": "void testBuilder()", "full_signature": "@Test public void testBuilder()", "class_method_signature": "StreamlineEventImplTest.testBuilder()", "testcase": true, "constructor": false, "invocations": ["build", "put", "builder", "assertEquals", "size", "assertEquals", "get", "build", "put", "put", "builder", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "build", "putAll", "put", "builder", "of", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "of", "build", "putAll", "builder", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertTrue", "delegate", "build", "put", "put", "builder", "build", "putAll", "dataSourceId", "builder", "assertTrue", "delegate", "delegate"]}, "focal_class": {"identifier": "StreamlineEventImpl", "superclass": "extends ForwardingMap<String, Object>", "interfaces": "implements StreamlineEvent", "fields": [{"original_string": "public final static String DEFAULT_SOURCE_STREAM = \"default\";", "modifier": "public final static", "type": "String", "declarator": "DEFAULT_SOURCE_STREAM = \"default\"", "var_name": "DEFAULT_SOURCE_STREAM"}, {"original_string": "public static final StreamlineEvent GROUP_BY_TRIGGER_EVENT = StreamlineEventImpl.builder().build();", "modifier": "public static final", "type": "StreamlineEvent", "declarator": "GROUP_BY_TRIGGER_EVENT = StreamlineEventImpl.builder().build()", "var_name": "GROUP_BY_TRIGGER_EVENT"}, {"original_string": "public static final String TO_STRING_PREFIX = \"StreamlineEvent\";", "modifier": "public static final", "type": "String", "declarator": "TO_STRING_PREFIX = \"StreamlineEvent\"", "var_name": "TO_STRING_PREFIX"}, {"original_string": "private final ImmutableMap<String, Object> header;", "modifier": "private final", "type": "ImmutableMap<String, Object>", "declarator": "header", "var_name": "header"}, {"original_string": "private final String sourceStream;", "modifier": "private final", "type": "String", "declarator": "sourceStream", "var_name": "sourceStream"}, {"original_string": "private final ImmutableMap<String, Object> auxiliaryFieldsAndValues;", "modifier": "private final", "type": "ImmutableMap<String, Object>", "declarator": "auxiliaryFieldsAndValues", "var_name": "auxiliaryFieldsAndValues"}, {"original_string": "private final String dataSourceId;", "modifier": "private final", "type": "String", "declarator": "dataSourceId", "var_name": "dataSourceId"}, {"original_string": "private final String id = UUID.randomUUID().toString();", "modifier": "private final", "type": "String", "declarator": "id = UUID.randomUUID().toString()", "var_name": "id"}, {"original_string": "private final ImmutableMap<String, Object> delegate;", "modifier": "private final", "type": "ImmutableMap<String, Object>", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "delegate", "parameters": "()", "modifiers": "@Override protected", "return": "Map<String, Object>", "signature": "Map<String, Object> delegate()", "full_signature": "@Override protected Map<String, Object> delegate()", "class_method_signature": "StreamlineEventImpl.delegate()", "testcase": false, "constructor": false}, {"identifier": "StreamlineEventImpl", "parameters": "()", "modifiers": "private", "return": "", "signature": " StreamlineEventImpl()", "full_signature": "private  StreamlineEventImpl()", "class_method_signature": "StreamlineEventImpl.StreamlineEventImpl()", "testcase": false, "constructor": true}, {"identifier": "StreamlineEventImpl", "parameters": "(Map<String, Object> keyValues, String dataSourceId, Map<String, Object> header,\n                                String sourceStream, Map<String, Object> auxiliaryFieldsAndValues)", "modifiers": "private", "return": "", "signature": " StreamlineEventImpl(Map<String, Object> keyValues, String dataSourceId, Map<String, Object> header,\n                                String sourceStream, Map<String, Object> auxiliaryFieldsAndValues)", "full_signature": "private  StreamlineEventImpl(Map<String, Object> keyValues, String dataSourceId, Map<String, Object> header,\n                                String sourceStream, Map<String, Object> auxiliaryFieldsAndValues)", "class_method_signature": "StreamlineEventImpl.StreamlineEventImpl(Map<String, Object> keyValues, String dataSourceId, Map<String, Object> header,\n                                String sourceStream, Map<String, Object> auxiliaryFieldsAndValues)", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "StreamlineEventImpl.Builder", "signature": "StreamlineEventImpl.Builder builder()", "full_signature": "public static StreamlineEventImpl.Builder builder()", "class_method_signature": "StreamlineEventImpl.builder()", "testcase": false, "constructor": false}, {"identifier": "getAuxiliaryFieldsAndValues", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> getAuxiliaryFieldsAndValues()", "full_signature": "@Override public Map<String, Object> getAuxiliaryFieldsAndValues()", "class_method_signature": "StreamlineEventImpl.getAuxiliaryFieldsAndValues()", "testcase": false, "constructor": false}, {"identifier": "addAuxiliaryFieldAndValue", "parameters": "(String field, Object value)", "modifiers": "@Override public", "return": "StreamlineEvent", "signature": "StreamlineEvent addAuxiliaryFieldAndValue(String field, Object value)", "full_signature": "@Override public StreamlineEvent addAuxiliaryFieldAndValue(String field, Object value)", "class_method_signature": "StreamlineEventImpl.addAuxiliaryFieldAndValue(String field, Object value)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "StreamlineEventImpl.getId()", "testcase": false, "constructor": false}, {"identifier": "getDataSourceId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDataSourceId()", "full_signature": "@Override public String getDataSourceId()", "class_method_signature": "StreamlineEventImpl.getDataSourceId()", "testcase": false, "constructor": false}, {"identifier": "getSourceStream", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSourceStream()", "full_signature": "@Override public String getSourceStream()", "class_method_signature": "StreamlineEventImpl.getSourceStream()", "testcase": false, "constructor": false}, {"identifier": "addFieldsAndValues", "parameters": "(Map<String, Object> fieldsAndValues)", "modifiers": "@Override public", "return": "StreamlineEvent", "signature": "StreamlineEvent addFieldsAndValues(Map<String, Object> fieldsAndValues)", "full_signature": "@Override public StreamlineEvent addFieldsAndValues(Map<String, Object> fieldsAndValues)", "class_method_signature": "StreamlineEventImpl.addFieldsAndValues(Map<String, Object> fieldsAndValues)", "testcase": false, "constructor": false}, {"identifier": "addFieldAndValue", "parameters": "(String key, Object value)", "modifiers": "@Override public", "return": "StreamlineEvent", "signature": "StreamlineEvent addFieldAndValue(String key, Object value)", "full_signature": "@Override public StreamlineEvent addFieldAndValue(String key, Object value)", "class_method_signature": "StreamlineEventImpl.addFieldAndValue(String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "addHeaders", "parameters": "(Map<String, Object> headers)", "modifiers": "@Override public", "return": "StreamlineEvent", "signature": "StreamlineEvent addHeaders(Map<String, Object> headers)", "full_signature": "@Override public StreamlineEvent addHeaders(Map<String, Object> headers)", "class_method_signature": "StreamlineEventImpl.addHeaders(Map<String, Object> headers)", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> getHeader()", "full_signature": "@Override public Map<String, Object> getHeader()", "class_method_signature": "StreamlineEventImpl.getHeader()", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getBytes()", "full_signature": "@Override public byte[] getBytes()", "class_method_signature": "StreamlineEventImpl.getBytes()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "StreamlineEventImpl.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "StreamlineEventImpl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(String k, Object v)", "modifiers": "public final", "return": "Object", "signature": "Object put(String k, Object v)", "full_signature": "public final Object put(String k, Object v)", "class_method_signature": "StreamlineEventImpl.put(String k, Object v)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object o)", "modifiers": "public final", "return": "Object", "signature": "Object remove(Object o)", "full_signature": "public final Object remove(Object o)", "class_method_signature": "StreamlineEventImpl.remove(Object o)", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "(Map<? extends String, ? extends Object> map)", "modifiers": "public final", "return": "void", "signature": "void putAll(Map<? extends String, ? extends Object> map)", "full_signature": "public final void putAll(Map<? extends String, ? extends Object> map)", "class_method_signature": "StreamlineEventImpl.putAll(Map<? extends String, ? extends Object> map)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void clear()", "full_signature": "public final void clear()", "class_method_signature": "StreamlineEventImpl.clear()", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String s)", "modifiers": "public static", "return": "StreamlineEvent", "signature": "StreamlineEvent fromString(String s)", "full_signature": "public static StreamlineEvent fromString(String s)", "class_method_signature": "StreamlineEventImpl.fromString(String s)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StreamlineEventImpl.toString()", "testcase": false, "constructor": false}], "file": "streams/common/src/main/java/com/hortonworks/streamline/streams/common/StreamlineEventImpl.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "StreamlineEventImpl.Builder", "body": "public static StreamlineEventImpl.Builder builder() {\n        return new StreamlineEventImpl.Builder();\n    }", "signature": "StreamlineEventImpl.Builder builder()", "full_signature": "public static StreamlineEventImpl.Builder builder()", "class_method_signature": "StreamlineEventImpl.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 35627039, "url": "https://github.com/hortonworks/streamline", "language": "Java", "is_fork": false, "fork_count": 94, "stargazer_count": 147, "size": 69226, "license": "licensed"}}