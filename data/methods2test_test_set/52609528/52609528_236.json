{"test_class": {"identifier": "RoleExtractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ROLE_PATTERN = \"^z-gateleen[-_](.*)$\";", "modifier": "private static final", "type": "String", "declarator": "ROLE_PATTERN = \"^z-gateleen[-_](.*)$\"", "var_name": "ROLE_PATTERN"}, {"original_string": "private static final String groupHeader = \"x-rp-grp\";", "modifier": "private static final", "type": "String", "declarator": "groupHeader = \"x-rp-grp\"", "var_name": "groupHeader"}, {"original_string": "private static final String roleHeader = \"x-roles\";", "modifier": "private static final", "type": "String", "declarator": "roleHeader = \"x-roles\"", "var_name": "roleHeader"}, {"original_string": "private RoleExtractor roleExtractor;", "modifier": "private", "type": "RoleExtractor", "declarator": "roleExtractor", "var_name": "roleExtractor"}], "file": "gateleen-core/src/test/java/org/swisspush/gateleen/core/util/RoleExtractorTest.java"}, "test_case": {"identifier": "testExtractRolesNotMatchingPattern", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExtractRolesNotMatchingPattern(TestContext context) throws Exception {\n        context.assertNull(roleExtractor.extractRoles(new TestHttpServerRequest(\n                new CaseInsensitiveHeaders())), \"No roles should have been found and returned as null\");\n\n        context.assertTrue(roleExtractor.extractRoles(new TestHttpServerRequest(\n                buildGroupHeaders(\"grp_1,grp_2,grp_3\"))).isEmpty(), \"An empty set of roles should have been returned\");\n        context.assertTrue(roleExtractor.extractRoles(new TestHttpServerRequest(\n                buildRoleHeaders(\"grp_1,grp_2,grp_3\"))).isEmpty(), \"An empty set of roles should have been returned\");\n\n        context.assertTrue(roleExtractor.extractRoles(new TestHttpServerRequest(\n                buildGroupHeaders(\"\"))).isEmpty(), \"An empty set of roles should have been returned\");\n        context.assertTrue(roleExtractor.extractRoles(new TestHttpServerRequest(\n                buildRoleHeaders(\"\"))).isEmpty(), \"An empty set of roles should have been returned\");\n    }", "signature": "void testExtractRolesNotMatchingPattern(TestContext context)", "full_signature": "@Test public void testExtractRolesNotMatchingPattern(TestContext context)", "class_method_signature": "RoleExtractorTest.testExtractRolesNotMatchingPattern(TestContext context)", "testcase": true, "constructor": false, "invocations": ["assertNull", "extractRoles", "assertTrue", "isEmpty", "extractRoles", "buildGroupHeaders", "assertTrue", "isEmpty", "extractRoles", "buildRoleHeaders", "assertTrue", "isEmpty", "extractRoles", "buildGroupHeaders", "assertTrue", "isEmpty", "extractRoles", "buildRoleHeaders"]}, "focal_class": {"identifier": "RoleExtractor", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static String groupHeader = \"x-rp-grp\";", "modifier": "public final static", "type": "String", "declarator": "groupHeader = \"x-rp-grp\"", "var_name": "groupHeader"}, {"original_string": "public final static String roleHeader = \"x-roles\";", "modifier": "public final static", "type": "String", "declarator": "roleHeader = \"x-roles\"", "var_name": "roleHeader"}, {"original_string": "private Pattern rolePattern;", "modifier": "private", "type": "Pattern", "declarator": "rolePattern", "var_name": "rolePattern"}], "methods": [{"identifier": "RoleExtractor", "parameters": "(String rolePattern)", "modifiers": "public", "return": "", "signature": " RoleExtractor(String rolePattern)", "full_signature": "public  RoleExtractor(String rolePattern)", "class_method_signature": "RoleExtractor.RoleExtractor(String rolePattern)", "testcase": false, "constructor": true}, {"identifier": "RoleExtractor", "parameters": "()", "modifiers": "public", "return": "", "signature": " RoleExtractor()", "full_signature": "public  RoleExtractor()", "class_method_signature": "RoleExtractor.RoleExtractor()", "testcase": false, "constructor": true}, {"identifier": "extractRoles", "parameters": "(HttpServerRequest request)", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> extractRoles(HttpServerRequest request)", "full_signature": "public Set<String> extractRoles(HttpServerRequest request)", "class_method_signature": "RoleExtractor.extractRoles(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "extractRoles", "parameters": "(MultiMap headers)", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> extractRoles(MultiMap headers)", "full_signature": "public Set<String> extractRoles(MultiMap headers)", "class_method_signature": "RoleExtractor.extractRoles(MultiMap headers)", "testcase": false, "constructor": false}], "file": "gateleen-core/src/main/java/org/swisspush/gateleen/core/util/RoleExtractor.java"}, "focal_method": {"identifier": "extractRoles", "parameters": "(HttpServerRequest request)", "modifiers": "public", "return": "Set<String>", "body": "public Set<String> extractRoles(HttpServerRequest request) {\n        return extractRoles(request.headers());\n    }", "signature": "Set<String> extractRoles(HttpServerRequest request)", "full_signature": "public Set<String> extractRoles(HttpServerRequest request)", "class_method_signature": "RoleExtractor.extractRoles(HttpServerRequest request)", "testcase": false, "constructor": false, "invocations": ["extractRoles", "headers"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}