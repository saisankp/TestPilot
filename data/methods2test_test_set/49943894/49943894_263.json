{"test_class": {"identifier": "CglibThrowableRendererTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CglibThrowableRenderer cglibThrowableRenderer = new CglibThrowableRenderer();", "modifier": "", "type": "CglibThrowableRenderer", "declarator": "cglibThrowableRenderer = new CglibThrowableRenderer()", "var_name": "cglibThrowableRenderer"}], "file": "utils/src/test/java/com/cloud/utils/log/CglibThrowableRendererTest.java"}, "test_case": {"identifier": "testDoRendere", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoRendere() {\n        SampleClass sampleClass = (SampleClass)Enhancer.create(SampleClass.class, new MyInvocationHandler());\n        try {\n            sampleClass.theFirstMethodThatCapturesAnException();\n        } catch (Exception e) {\n            String[] exceptions = cglibThrowableRenderer.doRender(e);\n            assertThatTheTraceListDoesNotContainsCgLibLogs(exceptions);\n        }\n    }", "signature": "void testDoRendere()", "full_signature": "@Test public void testDoRendere()", "class_method_signature": "CglibThrowableRendererTest.testDoRendere()", "testcase": true, "constructor": false, "invocations": ["create", "theFirstMethodThatCapturesAnException", "doRender", "assertThatTheTraceListDoesNotContainsCgLibLogs"]}, "focal_class": {"identifier": "CglibThrowableRenderer", "superclass": "", "interfaces": "implements ThrowableRenderer", "fields": [{"original_string": "private final static int MAX_NUMBER_OF_STACK_TRACES_ON_LOG_FOR_CAUSE = 3;", "modifier": "private final static", "type": "int", "declarator": "MAX_NUMBER_OF_STACK_TRACES_ON_LOG_FOR_CAUSE = 3", "var_name": "MAX_NUMBER_OF_STACK_TRACES_ON_LOG_FOR_CAUSE"}], "methods": [{"identifier": "doRender", "parameters": "(Throwable th)", "modifiers": "@Override public", "return": "String[]", "signature": "String[] doRender(Throwable th)", "full_signature": "@Override public String[] doRender(Throwable th)", "class_method_signature": "CglibThrowableRenderer.doRender(Throwable th)", "testcase": false, "constructor": false}, {"identifier": "addStackTraceToList", "parameters": "(Throwable th, List<String> lines, int maxNumberOfStack)", "modifiers": "private", "return": "void", "signature": "void addStackTraceToList(Throwable th, List<String> lines, int maxNumberOfStack)", "full_signature": "private void addStackTraceToList(Throwable th, List<String> lines, int maxNumberOfStack)", "class_method_signature": "CglibThrowableRenderer.addStackTraceToList(Throwable th, List<String> lines, int maxNumberOfStack)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/com/cloud/utils/log/CglibThrowableRenderer.java"}, "focal_method": {"identifier": "doRender", "parameters": "(Throwable th)", "modifiers": "@Override public", "return": "String[]", "body": "@Override\n    public String[] doRender(Throwable th) {\n        List<String> lines = new ArrayList<String>();\n        lines.add(th.toString());\n        addStackTraceToList(th, lines, 0);\n        do {\n            th = th.getCause();\n            if (th != null) {\n                lines.add(\"Caused by: \" + th.toString());\n                addStackTraceToList(th, lines, MAX_NUMBER_OF_STACK_TRACES_ON_LOG_FOR_CAUSE);\n            }\n        } while (th != null);\n        return lines.toArray(new String[lines.size()]);\n    }", "signature": "String[] doRender(Throwable th)", "full_signature": "@Override public String[] doRender(Throwable th)", "class_method_signature": "CglibThrowableRenderer.doRender(Throwable th)", "testcase": false, "constructor": false, "invocations": ["add", "toString", "addStackTraceToList", "getCause", "add", "toString", "addStackTraceToList", "toArray", "size"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}