{"test_class": {"identifier": "TableMultiSelectEventTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BitSet oneSelection;", "modifier": "private", "type": "BitSet", "declarator": "oneSelection", "var_name": "oneSelection"}, {"original_string": "private BitSet twoSelection;", "modifier": "private", "type": "BitSet", "declarator": "twoSelection", "var_name": "twoSelection"}, {"original_string": "private TableMultiSelectEvent one;", "modifier": "private", "type": "TableMultiSelectEvent", "declarator": "one", "var_name": "one"}, {"original_string": "private TableMultiSelectEvent sameRefAsOne;", "modifier": "private", "type": "TableMultiSelectEvent", "declarator": "sameRefAsOne", "var_name": "sameRefAsOne"}, {"original_string": "private TableMultiSelectEvent sameAsOne;", "modifier": "private", "type": "TableMultiSelectEvent", "declarator": "sameAsOne", "var_name": "sameAsOne"}, {"original_string": "private TableMultiSelectEvent two;", "modifier": "private", "type": "TableMultiSelectEvent", "declarator": "two", "var_name": "two"}], "file": "OLAT-LMS/src/test/java/org/olat/presentation/framework/core/components/table/TableMultiSelectEventTest.java"}, "test_case": {"identifier": "testEqualsCodeContract", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEqualsCodeContract() {\n        assertFalse(\"Wrong equals implementation, different types are recognized as equals \", one.equals(new Integer(1)));\n        assertFalse(\"Wrong equals implementation, different objects are recognized as equals \", one.equals(two));\n        assertFalse(\"Wrong equals implementation, null value is recognized as equals \", one.equals(null));\n        assertTrue(\"Wrong equals implementation, same objects are NOT recognized as equals \", one.equals(sameRefAsOne));\n        assertTrue(\"Wrong equals implementation, same objecst are NOT recognized as equals \", one.equals(sameAsOne));\n\n    }", "signature": "void testEqualsCodeContract()", "full_signature": "@Test public void testEqualsCodeContract()", "class_method_signature": "TableMultiSelectEventTest.testEqualsCodeContract()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "TableMultiSelectEvent", "superclass": "extends Event", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 394924378743922579L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 394924378743922579L", "var_name": "serialVersionUID"}, {"original_string": "private String action;", "modifier": "private", "type": "String", "declarator": "action", "var_name": "action"}, {"original_string": "private BitSet selection;", "modifier": "private", "type": "BitSet", "declarator": "selection", "var_name": "selection"}], "methods": [{"identifier": "TableMultiSelectEvent", "parameters": "(final String command, final String action, final BitSet selection)", "modifiers": "public", "return": "", "signature": " TableMultiSelectEvent(final String command, final String action, final BitSet selection)", "full_signature": "public  TableMultiSelectEvent(final String command, final String action, final BitSet selection)", "class_method_signature": "TableMultiSelectEvent.TableMultiSelectEvent(final String command, final String action, final BitSet selection)", "testcase": false, "constructor": true}, {"identifier": "getAction", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAction()", "full_signature": "public String getAction()", "class_method_signature": "TableMultiSelectEvent.getAction()", "testcase": false, "constructor": false}, {"identifier": "getSelection", "parameters": "()", "modifiers": "public", "return": "BitSet", "signature": "BitSet getSelection()", "full_signature": "public BitSet getSelection()", "class_method_signature": "TableMultiSelectEvent.getSelection()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "TableMultiSelectEvent.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TableMultiSelectEvent.hashCode()", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/presentation/framework/core/components/table/TableMultiSelectEvent.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(final Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        TableMultiSelectEvent other = (TableMultiSelectEvent) obj;\n        if (other.getCommand() == null && getCommand() != null) {\n            return false;\n        } else if (other.getCommand() != null && getCommand() == null) {\n            return false;\n        }\n        boolean isSame = other.action.equals(action);\n        isSame = isSame && other.selection.equals(selection);\n        isSame = isSame && other.getCommand().equals(getCommand());\n        return isSame;\n    }", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "TableMultiSelectEvent.equals(final Object obj)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "getCommand", "getCommand", "getCommand", "getCommand", "equals", "equals", "equals", "getCommand", "getCommand"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}