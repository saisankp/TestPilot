{"test_class": {"identifier": "AbstractMatrixTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final double EPSILON = Math.pow(10, -15);", "modifier": "protected static final", "type": "double", "declarator": "EPSILON = Math.pow(10, -15)", "var_name": "EPSILON"}], "file": "math/src/test/java/com/powsybl/math/matrix/AbstractMatrixTest.java"}, "test_case": {"identifier": "checkBoundsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkBoundsTest() {\n        try {\n            getMatrixFactory().create(-1, 1, 1);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n        try {\n            getMatrixFactory().create(1, -1, 1);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n\n        Matrix a = getMatrixFactory().create(1, 1, 1);\n        try {\n            a.set(-1, 0, 0);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n        try {\n            a.set(0, -1, 0);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n        try {\n            a.set(2, 0, 0);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n        try {\n            a.set(0, 1, 0);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n        try {\n            a.add(2, 0, 0);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n        try {\n            a.add(0, 1, 0);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n\n    }", "signature": "void checkBoundsTest()", "full_signature": "@Test public void checkBoundsTest()", "class_method_signature": "AbstractMatrixTest.checkBoundsTest()", "testcase": true, "constructor": false, "invocations": ["create", "getMatrixFactory", "fail", "create", "getMatrixFactory", "fail", "create", "getMatrixFactory", "set", "fail", "set", "fail", "set", "fail", "set", "fail", "add", "fail", "add", "fail"]}, "focal_class": {"identifier": "AbstractMatrix", "superclass": "", "interfaces": "implements Matrix", "fields": [], "methods": [{"identifier": "getEstimatedNonZeroValueCount", "parameters": "()", "modifiers": "protected abstract", "return": "int", "signature": "int getEstimatedNonZeroValueCount()", "full_signature": "protected abstract int getEstimatedNonZeroValueCount()", "class_method_signature": "AbstractMatrix.getEstimatedNonZeroValueCount()", "testcase": false, "constructor": false}, {"identifier": "checkBounds", "parameters": "(int i, int j)", "modifiers": "protected", "return": "void", "signature": "void checkBounds(int i, int j)", "full_signature": "protected void checkBounds(int i, int j)", "class_method_signature": "AbstractMatrix.checkBounds(int i, int j)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(MatrixFactory factory)", "modifiers": "@Override public", "return": "Matrix", "signature": "Matrix copy(MatrixFactory factory)", "full_signature": "@Override public Matrix copy(MatrixFactory factory)", "class_method_signature": "AbstractMatrix.copy(MatrixFactory factory)", "testcase": false, "constructor": false}], "file": "math/src/main/java/com/powsybl/math/matrix/AbstractMatrix.java"}, "focal_method": {"identifier": "checkBounds", "parameters": "(int i, int j)", "modifiers": "protected", "return": "void", "body": "protected void checkBounds(int i, int j) {\n        if (i < 0 || i >= getRowCount()) {\n            throw new IllegalArgumentException(\"Row index out of bound [0, \" + (getRowCount() - 1) + \"]\");\n        }\n        if (j < 0 || j >= getColumnCount()) {\n            throw new IllegalArgumentException(\"Column index out of bound [0, \" + (getColumnCount() - 1) + \"]\");\n        }\n    }", "signature": "void checkBounds(int i, int j)", "full_signature": "protected void checkBounds(int i, int j)", "class_method_signature": "AbstractMatrix.checkBounds(int i, int j)", "testcase": false, "constructor": false, "invocations": ["getRowCount", "getRowCount", "getColumnCount", "getColumnCount"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}