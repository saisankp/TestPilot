{"test_class": {"identifier": "DefaultRetryTemplateConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IntervalConverter intervalConverter = new BeanFactoryAwareIntervalConverter(new DefaultListableBeanFactory());", "modifier": "private", "type": "IntervalConverter", "declarator": "intervalConverter = new BeanFactoryAwareIntervalConverter(new DefaultListableBeanFactory())", "var_name": "intervalConverter"}], "file": "distributed-lock-core/src/test/java/com/github/alturkovic/lock/retry/DefaultRetryTemplateConverterTest.java"}, "test_case": {"identifier": "shouldConstructCustomizedRetryTemplate", "parameters": "()", "modifiers": "@Test @Locked(retry = @Interval(\"100\"), timeout = @Interval(\"2000\")) public", "return": "void", "body": "@Test\n  @Locked(retry = @Interval(\"100\"), timeout = @Interval(\"2000\"))\n  public void shouldConstructCustomizedRetryTemplate() {\n    final var locked = new Object() {}.getClass().getEnclosingMethod().getAnnotation(Locked.class);\n    final var converter = new DefaultRetryTemplateConverter(intervalConverter);\n    final var retryTemplate = converter.construct(locked);\n\n    assertRetryTemplateConstruction(retryTemplate, 2000L, 100L);\n  }", "signature": "void shouldConstructCustomizedRetryTemplate()", "full_signature": "@Test @Locked(retry = @Interval(\"100\"), timeout = @Interval(\"2000\")) public void shouldConstructCustomizedRetryTemplate()", "class_method_signature": "DefaultRetryTemplateConverterTest.shouldConstructCustomizedRetryTemplate()", "testcase": true, "constructor": false, "invocations": ["getAnnotation", "getEnclosingMethod", "getClass", "construct", "assertRetryTemplateConstruction"]}, "focal_class": {"identifier": "DefaultRetryTemplateConverter", "superclass": "", "interfaces": "implements RetryTemplateConverter", "fields": [{"original_string": "private final IntervalConverter intervalConverter;", "modifier": "private final", "type": "IntervalConverter", "declarator": "intervalConverter", "var_name": "intervalConverter"}], "methods": [{"identifier": "construct", "parameters": "(final Locked locked)", "modifiers": "@Override public", "return": "RetryTemplate", "signature": "RetryTemplate construct(final Locked locked)", "full_signature": "@Override public RetryTemplate construct(final Locked locked)", "class_method_signature": "DefaultRetryTemplateConverter.construct(final Locked locked)", "testcase": false, "constructor": false}, {"identifier": "resolveLockRetryPolicy", "parameters": "(final Locked locked)", "modifiers": "private", "return": "CompositeRetryPolicy", "signature": "CompositeRetryPolicy resolveLockRetryPolicy(final Locked locked)", "full_signature": "private CompositeRetryPolicy resolveLockRetryPolicy(final Locked locked)", "class_method_signature": "DefaultRetryTemplateConverter.resolveLockRetryPolicy(final Locked locked)", "testcase": false, "constructor": false}, {"identifier": "resolveTimeoutRetryPolicy", "parameters": "(final Locked locked)", "modifiers": "private", "return": "RetryPolicy", "signature": "RetryPolicy resolveTimeoutRetryPolicy(final Locked locked)", "full_signature": "private RetryPolicy resolveTimeoutRetryPolicy(final Locked locked)", "class_method_signature": "DefaultRetryTemplateConverter.resolveTimeoutRetryPolicy(final Locked locked)", "testcase": false, "constructor": false}, {"identifier": "resolveExceptionTypeRetryPolicy", "parameters": "()", "modifiers": "private", "return": "RetryPolicy", "signature": "RetryPolicy resolveExceptionTypeRetryPolicy()", "full_signature": "private RetryPolicy resolveExceptionTypeRetryPolicy()", "class_method_signature": "DefaultRetryTemplateConverter.resolveExceptionTypeRetryPolicy()", "testcase": false, "constructor": false}, {"identifier": "resolveBackOffPolicy", "parameters": "(final Locked locked)", "modifiers": "private", "return": "FixedBackOffPolicy", "signature": "FixedBackOffPolicy resolveBackOffPolicy(final Locked locked)", "full_signature": "private FixedBackOffPolicy resolveBackOffPolicy(final Locked locked)", "class_method_signature": "DefaultRetryTemplateConverter.resolveBackOffPolicy(final Locked locked)", "testcase": false, "constructor": false}], "file": "distributed-lock-core/src/main/java/com/github/alturkovic/lock/retry/DefaultRetryTemplateConverter.java"}, "focal_method": {"identifier": "construct", "parameters": "(final Locked locked)", "modifiers": "@Override public", "return": "RetryTemplate", "body": "@Override\n  public RetryTemplate construct(final Locked locked) {\n    final var retryTemplate = new RetryTemplate();\n    retryTemplate.setRetryPolicy(resolveLockRetryPolicy(locked));\n    retryTemplate.setBackOffPolicy(resolveBackOffPolicy(locked));\n    return retryTemplate;\n  }", "signature": "RetryTemplate construct(final Locked locked)", "full_signature": "@Override public RetryTemplate construct(final Locked locked)", "class_method_signature": "DefaultRetryTemplateConverter.construct(final Locked locked)", "testcase": false, "constructor": false, "invocations": ["setRetryPolicy", "resolveLockRetryPolicy", "setBackOffPolicy", "resolveBackOffPolicy"]}, "repository": {"repo_id": 93310060, "url": "https://github.com/alturkovic/distributed-lock", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 77, "size": 282, "license": "licensed"}}