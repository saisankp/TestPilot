{"test_class": {"identifier": "ParseHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ParseHelper parseHelper;", "modifier": "private", "type": "ParseHelper", "declarator": "parseHelper", "var_name": "parseHelper"}], "file": "dbfit-java/core/src/test/java/dbfit/util/ParseHelperTest.java"}, "test_case": {"identifier": "canParseNullSymbols", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canParseNullSymbols() throws Exception {\n        assertNull(parseHelper.parse(\"<<NULL_SYMBOL\"));\n    }", "signature": "void canParseNullSymbols()", "full_signature": "@Test public void canParseNullSymbols()", "class_method_signature": "ParseHelperTest.canParseNullSymbols()", "testcase": true, "constructor": false, "invocations": ["assertNull", "parse"]}, "focal_class": {"identifier": "ParseHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Class<?> type;", "modifier": "private", "type": "Class<?>", "declarator": "type", "var_name": "type"}, {"original_string": "private Fixture fixture;", "modifier": "private", "type": "Fixture", "declarator": "fixture", "var_name": "fixture"}], "methods": [{"identifier": "ParseHelper", "parameters": "(Fixture fixture, Class<?> type)", "modifiers": "public", "return": "", "signature": " ParseHelper(Fixture fixture, Class<?> type)", "full_signature": "public  ParseHelper(Fixture fixture, Class<?> type)", "class_method_signature": "ParseHelper.ParseHelper(Fixture fixture, Class<?> type)", "testcase": false, "constructor": true}, {"identifier": "tryToConvert", "parameters": "(Object value)", "modifiers": "private", "return": "Object", "signature": "Object tryToConvert(Object value)", "full_signature": "private Object tryToConvert(Object value)", "class_method_signature": "ParseHelper.tryToConvert(Object value)", "testcase": false, "constructor": false}, {"identifier": "parseSymbol", "parameters": "(String s)", "modifiers": "private", "return": "Object", "signature": "Object parseSymbol(String s)", "full_signature": "private Object parseSymbol(String s)", "class_method_signature": "ParseHelper.parseSymbol(String s)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String s)", "modifiers": "public", "return": "Object", "signature": "Object parse(String s)", "full_signature": "public Object parse(String s)", "class_method_signature": "ParseHelper.parse(String s)", "testcase": false, "constructor": false}], "file": "dbfit-java/core/src/main/java/dbfit/util/ParseHelper.java"}, "focal_method": {"identifier": "parse", "parameters": "(String s)", "modifiers": "public", "return": "Object", "body": "public Object parse(String s) throws Exception {\n        if (isSymbolGetter(s)) {\n            return parseSymbol(s);\n        }\n\n        String trim = s.trim();\n\n        if (trim.toLowerCase().equals(\"null\")) {\n            return null;\n        }\n\n        if (type.equals(String.class) && Options.isFixedLengthStringParsing() &&\n                trim.startsWith(\"'\") && trim.endsWith(\"'\")) {\n            return trim.substring(1, trim.length() - 1);\n        }\n\n        TypeAdapter ta = TypeAdapter.adapterFor(type);\n        ta.init(fixture, type);\n\n        return ta.parse(s);\n    }", "signature": "Object parse(String s)", "full_signature": "public Object parse(String s)", "class_method_signature": "ParseHelper.parse(String s)", "testcase": false, "constructor": false, "invocations": ["isSymbolGetter", "parseSymbol", "trim", "equals", "toLowerCase", "equals", "isFixedLengthStringParsing", "startsWith", "endsWith", "substring", "length", "adapterFor", "init", "parse"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}