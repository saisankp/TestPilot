{"test_class": {"identifier": "ForumServiceTest", "superclass": "extends BaseServiceTest", "interfaces": "", "fields": [{"original_string": "@SpringBean(\"forumService\")\n\tprivate ForumService forumService;", "modifier": "@SpringBean(\"forumService\")\n\tprivate", "type": "ForumService", "declarator": "forumService", "var_name": "forumService"}, {"original_string": "@SpringBean(\"userService\")\n\tprivate UserService userService;", "modifier": "@SpringBean(\"userService\")\n\tprivate", "type": "UserService", "declarator": "userService", "var_name": "userService"}], "file": "chapter18/src/test/java/com/smart/service/ForumServiceTest.java"}, "test_case": {"identifier": "removePost", "parameters": "()", "modifiers": "@Test @DataSet(\"XiaoChun.DataSet.xls\") public", "return": "void", "body": "@Test\n\t@DataSet(\"XiaoChun.DataSet.xls\")\n    public void removePost()\n    {\n\t\tforumService.removePost(1);\n\t\t\n\t\tPost postDb = forumService.getPostByPostId(1);\n\t\tUser userDb = userService.getUserByUserName(\"tom\");\n\t\tTopic topicDb = forumService.getTopicByTopicId(1);\n\t\t\n\t\tassertNull(postDb);\n\t\tassertEquals(userDb.getCredit(), 80);\n\t\tassertEquals(topicDb.getReplies(), 0);\n    }", "signature": "void removePost()", "full_signature": "@Test @DataSet(\"XiaoChun.DataSet.xls\") public void removePost()", "class_method_signature": "ForumServiceTest.removePost()", "testcase": true, "constructor": false, "invocations": ["removePost", "getPostByPostId", "getUserByUserName", "getTopicByTopicId", "assertNull", "assertEquals", "getCredit", "assertEquals", "getReplies"]}, "focal_class": {"identifier": "ForumService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TopicDao topicDao;", "modifier": "private", "type": "TopicDao", "declarator": "topicDao", "var_name": "topicDao"}, {"original_string": "private UserDao userDao;", "modifier": "private", "type": "UserDao", "declarator": "userDao", "var_name": "userDao"}, {"original_string": "private BoardDao boardDao;", "modifier": "private", "type": "BoardDao", "declarator": "boardDao", "var_name": "boardDao"}, {"original_string": "private PostDao postDao;", "modifier": "private", "type": "PostDao", "declarator": "postDao", "var_name": "postDao"}], "methods": [{"identifier": "setTopicDao", "parameters": "(TopicDao topicDao)", "modifiers": "@Autowired public", "return": "void", "signature": "void setTopicDao(TopicDao topicDao)", "full_signature": "@Autowired public void setTopicDao(TopicDao topicDao)", "class_method_signature": "ForumService.setTopicDao(TopicDao topicDao)", "testcase": false, "constructor": false}, {"identifier": "setUserDao", "parameters": "(UserDao userDao)", "modifiers": "@Autowired public", "return": "void", "signature": "void setUserDao(UserDao userDao)", "full_signature": "@Autowired public void setUserDao(UserDao userDao)", "class_method_signature": "ForumService.setUserDao(UserDao userDao)", "testcase": false, "constructor": false}, {"identifier": "setBoardDao", "parameters": "(BoardDao boardDao)", "modifiers": "@Autowired public", "return": "void", "signature": "void setBoardDao(BoardDao boardDao)", "full_signature": "@Autowired public void setBoardDao(BoardDao boardDao)", "class_method_signature": "ForumService.setBoardDao(BoardDao boardDao)", "testcase": false, "constructor": false}, {"identifier": "setPostDao", "parameters": "(PostDao postDao)", "modifiers": "@Autowired public", "return": "void", "signature": "void setPostDao(PostDao postDao)", "full_signature": "@Autowired public void setPostDao(PostDao postDao)", "class_method_signature": "ForumService.setPostDao(PostDao postDao)", "testcase": false, "constructor": false}, {"identifier": "addTopic", "parameters": "(Topic topic)", "modifiers": "public", "return": "void", "signature": "void addTopic(Topic topic)", "full_signature": "public void addTopic(Topic topic)", "class_method_signature": "ForumService.addTopic(Topic topic)", "testcase": false, "constructor": false}, {"identifier": "removeTopic", "parameters": "(int topicId)", "modifiers": "public", "return": "void", "signature": "void removeTopic(int topicId)", "full_signature": "public void removeTopic(int topicId)", "class_method_signature": "ForumService.removeTopic(int topicId)", "testcase": false, "constructor": false}, {"identifier": "addPost", "parameters": "(Post post)", "modifiers": "public", "return": "void", "signature": "void addPost(Post post)", "full_signature": "public void addPost(Post post)", "class_method_signature": "ForumService.addPost(Post post)", "testcase": false, "constructor": false}, {"identifier": "removePost", "parameters": "(int postId)", "modifiers": "public", "return": "void", "signature": "void removePost(int postId)", "full_signature": "public void removePost(int postId)", "class_method_signature": "ForumService.removePost(int postId)", "testcase": false, "constructor": false}, {"identifier": "addBoard", "parameters": "(Board board)", "modifiers": "public", "return": "void", "signature": "void addBoard(Board board)", "full_signature": "public void addBoard(Board board)", "class_method_signature": "ForumService.addBoard(Board board)", "testcase": false, "constructor": false}, {"identifier": "removeBoard", "parameters": "(int boardId)", "modifiers": "public", "return": "void", "signature": "void removeBoard(int boardId)", "full_signature": "public void removeBoard(int boardId)", "class_method_signature": "ForumService.removeBoard(int boardId)", "testcase": false, "constructor": false}, {"identifier": "makeDigestTopic", "parameters": "(int topicId)", "modifiers": "public", "return": "void", "signature": "void makeDigestTopic(int topicId)", "full_signature": "public void makeDigestTopic(int topicId)", "class_method_signature": "ForumService.makeDigestTopic(int topicId)", "testcase": false, "constructor": false}, {"identifier": "getAllBoards", "parameters": "()", "modifiers": "public", "return": "List<Board>", "signature": "List<Board> getAllBoards()", "full_signature": "public List<Board> getAllBoards()", "class_method_signature": "ForumService.getAllBoards()", "testcase": false, "constructor": false}, {"identifier": "getPagedTopics", "parameters": "(int boardId,int pageNo,int pageSize)", "modifiers": "public", "return": "Page", "signature": "Page getPagedTopics(int boardId,int pageNo,int pageSize)", "full_signature": "public Page getPagedTopics(int boardId,int pageNo,int pageSize)", "class_method_signature": "ForumService.getPagedTopics(int boardId,int pageNo,int pageSize)", "testcase": false, "constructor": false}, {"identifier": "getPagedPosts", "parameters": "(int topicId,int pageNo,int pageSize)", "modifiers": "public", "return": "Page", "signature": "Page getPagedPosts(int topicId,int pageNo,int pageSize)", "full_signature": "public Page getPagedPosts(int topicId,int pageNo,int pageSize)", "class_method_signature": "ForumService.getPagedPosts(int topicId,int pageNo,int pageSize)", "testcase": false, "constructor": false}, {"identifier": "queryTopicByTitle", "parameters": "(String title,int pageNo,int pageSize)", "modifiers": "public", "return": "Page", "signature": "Page queryTopicByTitle(String title,int pageNo,int pageSize)", "full_signature": "public Page queryTopicByTitle(String title,int pageNo,int pageSize)", "class_method_signature": "ForumService.queryTopicByTitle(String title,int pageNo,int pageSize)", "testcase": false, "constructor": false}, {"identifier": "getBoardById", "parameters": "(int boardId)", "modifiers": "public", "return": "Board", "signature": "Board getBoardById(int boardId)", "full_signature": "public Board getBoardById(int boardId)", "class_method_signature": "ForumService.getBoardById(int boardId)", "testcase": false, "constructor": false}, {"identifier": "getTopicByTopicId", "parameters": "(int topicId)", "modifiers": "public", "return": "Topic", "signature": "Topic getTopicByTopicId(int topicId)", "full_signature": "public Topic getTopicByTopicId(int topicId)", "class_method_signature": "ForumService.getTopicByTopicId(int topicId)", "testcase": false, "constructor": false}, {"identifier": "getPostByPostId", "parameters": "(int postId)", "modifiers": "public", "return": "Post", "signature": "Post getPostByPostId(int postId)", "full_signature": "public Post getPostByPostId(int postId)", "class_method_signature": "ForumService.getPostByPostId(int postId)", "testcase": false, "constructor": false}, {"identifier": "addBoardManager", "parameters": "(int boardId,String userName)", "modifiers": "public", "return": "void", "signature": "void addBoardManager(int boardId,String userName)", "full_signature": "public void addBoardManager(int boardId,String userName)", "class_method_signature": "ForumService.addBoardManager(int boardId,String userName)", "testcase": false, "constructor": false}, {"identifier": "updateTopic", "parameters": "(Topic topic)", "modifiers": "public", "return": "void", "signature": "void updateTopic(Topic topic)", "full_signature": "public void updateTopic(Topic topic)", "class_method_signature": "ForumService.updateTopic(Topic topic)", "testcase": false, "constructor": false}, {"identifier": "updatePost", "parameters": "(Post post)", "modifiers": "public", "return": "void", "signature": "void updatePost(Post post)", "full_signature": "public void updatePost(Post post)", "class_method_signature": "ForumService.updatePost(Post post)", "testcase": false, "constructor": false}], "file": "chapter18/src/main/java/com/smart/service/ForumService.java"}, "focal_method": {"identifier": "removePost", "parameters": "(int postId)", "modifiers": "public", "return": "void", "body": "public void removePost(int postId){\n\t\tPost post = postDao.get(postId);\n\t\tpostDao.remove(post);\n\t\t\n\t\tTopic topic = topicDao.get(post.getTopic().getTopicId());\n\t\ttopic.setReplies(topic.getReplies() - 1);\n\t\t\n\t\tUser user =post.getUser();\n\t\tuser.setCredit(user.getCredit() - 20);\n\t\t\n\t\t//topic\u5904\u4e8eHibernate\u53d7\u7ba1\u72b6\u6001\uff0c\u65e0\u987b\u663e\u793a\u66f4\u65b0\n\t\t//topicDao.update(topic);\n\t\t//userDao.update(user);\n\t}", "signature": "void removePost(int postId)", "full_signature": "public void removePost(int postId)", "class_method_signature": "ForumService.removePost(int postId)", "testcase": false, "constructor": false, "invocations": ["get", "remove", "get", "getTopicId", "getTopic", "setReplies", "getReplies", "getUser", "setCredit", "getCredit"]}, "repository": {"repo_id": 123233499, "url": "https://github.com/liulei3/spring4.x", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 9, "size": 8951, "license": "licensed"}}