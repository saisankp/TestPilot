{"test_class": {"identifier": "ResponseInterceptorProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ParameterList PARAMS = new ParameterList();", "modifier": "private static final", "type": "ParameterList", "declarator": "PARAMS = new ParameterList()", "var_name": "PARAMS"}, {"original_string": "private final boolean isVolatile = false;", "modifier": "private final", "type": "boolean", "declarator": "isVolatile = false", "var_name": "isVolatile"}, {"original_string": "@Mock\n    private RoutingService routingService;", "modifier": "@Mock\n    private", "type": "RoutingService", "declarator": "routingService", "var_name": "routingService"}, {"original_string": "@Mock\n    private MockResponseInterceptor responseInterceptor;", "modifier": "@Mock\n    private", "type": "MockResponseInterceptor", "declarator": "responseInterceptor", "var_name": "responseInterceptor"}, {"original_string": "@InjectMocks\n    private ResponseInterceptorProcessor underTest;", "modifier": "@InjectMocks\n    private", "type": "ResponseInterceptorProcessor", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-core/src/test/java/com/epam/wilma/core/processor/entity/ResponseInterceptorProcessorTest.java"}, "test_case": {"identifier": "testProcessShouldCallAllResponseInterceptors", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessShouldCallAllResponseInterceptors() throws ApplicationException {\n        //GIVEN\n        Map<String, StubDescriptor> stubDescriptors = new LinkedHashMap<>();\n        stubDescriptors.put(\"test\", createStubDescriptor());\n        given(routingService.getStubDescriptors()).willReturn(stubDescriptors);\n        WilmaHttpEntity entity = new WilmaHttpResponse(isVolatile);\n        //WHEN\n        underTest.process(entity);\n        //THEN\n        BDDMockito.verify(responseInterceptor).onResponseReceive((WilmaHttpResponse) entity, PARAMS);\n    }", "signature": "void testProcessShouldCallAllResponseInterceptors()", "full_signature": "@Test public void testProcessShouldCallAllResponseInterceptors()", "class_method_signature": "ResponseInterceptorProcessorTest.testProcessShouldCallAllResponseInterceptors()", "testcase": true, "constructor": false, "invocations": ["put", "createStubDescriptor", "willReturn", "given", "getStubDescriptors", "process", "onResponseReceive", "verify"]}, "focal_class": {"identifier": "ResponseInterceptorProcessor", "superclass": "extends ProcessorBase", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(ResponseInterceptorProcessor.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ResponseInterceptorProcessor.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private RoutingService routingService;", "modifier": "@Autowired\n    private", "type": "RoutingService", "declarator": "routingService", "var_name": "routingService"}], "methods": [{"identifier": "process", "parameters": "(final WilmaHttpEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void process(final WilmaHttpEntity entity)", "full_signature": "@Override public void process(final WilmaHttpEntity entity)", "class_method_signature": "ResponseInterceptorProcessor.process(final WilmaHttpEntity entity)", "testcase": false, "constructor": false}, {"identifier": "callInterceptor", "parameters": "(ResponseInterceptor interceptor, WilmaHttpEntity entity, InterceptorDescriptor interceptorDescriptor)", "modifiers": "private", "return": "void", "signature": "void callInterceptor(ResponseInterceptor interceptor, WilmaHttpEntity entity, InterceptorDescriptor interceptorDescriptor)", "full_signature": "private void callInterceptor(ResponseInterceptor interceptor, WilmaHttpEntity entity, InterceptorDescriptor interceptorDescriptor)", "class_method_signature": "ResponseInterceptorProcessor.callInterceptor(ResponseInterceptor interceptor, WilmaHttpEntity entity, InterceptorDescriptor interceptorDescriptor)", "testcase": false, "constructor": false}, {"identifier": "logError", "parameters": "(final ResponseInterceptor interceptor, final WilmaHttpEntity entity, final ParameterList parameters, final Exception e)", "modifiers": "private", "return": "void", "signature": "void logError(final ResponseInterceptor interceptor, final WilmaHttpEntity entity, final ParameterList parameters, final Exception e)", "full_signature": "private void logError(final ResponseInterceptor interceptor, final WilmaHttpEntity entity, final ParameterList parameters, final Exception e)", "class_method_signature": "ResponseInterceptorProcessor.logError(final ResponseInterceptor interceptor, final WilmaHttpEntity entity, final ParameterList parameters, final Exception e)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-core/src/main/java/com/epam/wilma/core/processor/entity/ResponseInterceptorProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(final WilmaHttpEntity entity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final WilmaHttpEntity entity) throws ApplicationException {\n        Map<String, StubDescriptor> stubDescriptors = routingService.getStubDescriptors();\n        for (String groupName : stubDescriptors.keySet()) {\n            StubDescriptor stubDescriptor = stubDescriptors.get(groupName);\n            List<InterceptorDescriptor> interceptorDescriptors = stubDescriptor.getInterceptorDescriptors();\n            for (InterceptorDescriptor interceptorDescriptor : interceptorDescriptors) {\n                ResponseInterceptor interceptor = interceptorDescriptor.getResponseInterceptor();\n                callInterceptor(interceptor, entity, interceptorDescriptor);\n            }\n        }\n    }", "signature": "void process(final WilmaHttpEntity entity)", "full_signature": "@Override public void process(final WilmaHttpEntity entity)", "class_method_signature": "ResponseInterceptorProcessor.process(final WilmaHttpEntity entity)", "testcase": false, "constructor": false, "invocations": ["getStubDescriptors", "keySet", "get", "getInterceptorDescriptors", "getResponseInterceptor", "callInterceptor"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}