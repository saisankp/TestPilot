{"test_class": {"identifier": "HmsInventoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Properties props = null;", "modifier": "private", "type": "Properties", "declarator": "props = null", "var_name": "props"}, {"original_string": "private final String HMS_IB_INVENTORY_LOCATION_PROPERTY = \"hms.ib.inventory.location\";", "modifier": "private final", "type": "String", "declarator": "HMS_IB_INVENTORY_LOCATION_PROPERTY = \"hms.ib.inventory.location\"", "var_name": "HMS_IB_INVENTORY_LOCATION_PROPERTY"}, {"original_string": "private final String PROPERTY_FILE = \"src/test/resources/test-config.properties\";", "modifier": "private final", "type": "String", "declarator": "PROPERTY_FILE = \"src/test/resources/test-config.properties\"", "var_name": "PROPERTY_FILE"}], "file": "modules/hms-util/src/test/java/com/vmware/vrack/hms/common/configuration/HmsInventoryTest.java"}, "test_case": {"identifier": "testAddHost", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddHost()\n    {\n        HmsInventory hmsInventory = HmsInventory.getInstance();\n        assertTrue( hmsInventory.loadInventory( props.getProperty( HMS_IB_INVENTORY_LOCATION_PROPERTY ) ) );\n\n        final String nodeId = this.getNodeId( this.getDateTimeInMillis() );\n\n        // add server\n        assertTrue( hmsInventory.addHost( getServerNode( nodeId ) ) );\n\n        List<ServerNode> hosts = hmsInventory.getHosts();\n        assertNotNull( hosts );\n        List<String> nodeIds = this.getAllNodeIds( hosts );\n        assertTrue( nodeIds.contains( nodeId ) );\n    }", "signature": "void testAddHost()", "full_signature": "@Test public void testAddHost()", "class_method_signature": "HmsInventoryTest.testAddHost()", "testcase": true, "constructor": false, "invocations": ["getInstance", "assertTrue", "loadInventory", "getProperty", "getNodeId", "getDateTimeInMillis", "assertTrue", "addHost", "getServerNode", "getHosts", "assertNotNull", "getAllNodeIds", "assertTrue", "contains"]}, "focal_class": {"identifier": "HmsInventory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger( HmsInventory.class );", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( HmsInventory.class )", "var_name": "logger"}, {"original_string": "private static final String HOSTS = \"hosts\";", "modifier": "private static final", "type": "String", "declarator": "HOSTS = \"hosts\"", "var_name": "HOSTS"}, {"original_string": "private static final String SWITCHES = \"switches\";", "modifier": "private static final", "type": "String", "declarator": "SWITCHES = \"switches\"", "var_name": "SWITCHES"}, {"original_string": "private String inventoryFile = null;", "modifier": "private", "type": "String", "declarator": "inventoryFile = null", "var_name": "inventoryFile"}, {"original_string": "private ConcurrentHashMap<String, Object[]> nodeMap = null;", "modifier": "private", "type": "ConcurrentHashMap<String, Object[]>", "declarator": "nodeMap = null", "var_name": "nodeMap"}, {"original_string": "private static HmsInventory hmsInventory = null;", "modifier": "private static", "type": "HmsInventory", "declarator": "hmsInventory = null", "var_name": "hmsInventory"}, {"original_string": "private static final Lock reentrantLock = new ReentrantLock( true );", "modifier": "private static final", "type": "Lock", "declarator": "reentrantLock = new ReentrantLock( true )", "var_name": "reentrantLock"}], "methods": [{"identifier": "HmsInventory", "parameters": "()", "modifiers": "private", "return": "", "signature": " HmsInventory()", "full_signature": "private  HmsInventory()", "class_method_signature": "HmsInventory.HmsInventory()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "HmsInventory", "signature": "HmsInventory getInstance()", "full_signature": "public static HmsInventory getInstance()", "class_method_signature": "HmsInventory.getInstance()", "testcase": false, "constructor": false}, {"identifier": "loadInventory", "parameters": "( final String inventoryFile )", "modifiers": "public", "return": "boolean", "signature": "boolean loadInventory( final String inventoryFile )", "full_signature": "public boolean loadInventory( final String inventoryFile )", "class_method_signature": "HmsInventory.loadInventory( final String inventoryFile )", "testcase": false, "constructor": false}, {"identifier": "saveInventory", "parameters": "( final String inventoryFile, boolean backup )", "modifiers": "public", "return": "boolean", "signature": "boolean saveInventory( final String inventoryFile, boolean backup )", "full_signature": "public boolean saveInventory( final String inventoryFile, boolean backup )", "class_method_signature": "HmsInventory.saveInventory( final String inventoryFile, boolean backup )", "testcase": false, "constructor": false}, {"identifier": "saveInventory", "parameters": "( final String inventoryFile )", "modifiers": "public", "return": "boolean", "signature": "boolean saveInventory( final String inventoryFile )", "full_signature": "public boolean saveInventory( final String inventoryFile )", "class_method_signature": "HmsInventory.saveInventory( final String inventoryFile )", "testcase": false, "constructor": false}, {"identifier": "saveInventory", "parameters": "( final boolean backup )", "modifiers": "public", "return": "boolean", "signature": "boolean saveInventory( final boolean backup )", "full_signature": "public boolean saveInventory( final boolean backup )", "class_method_signature": "HmsInventory.saveInventory( final boolean backup )", "testcase": false, "constructor": false}, {"identifier": "saveInventory", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean saveInventory()", "full_signature": "public boolean saveInventory()", "class_method_signature": "HmsInventory.saveInventory()", "testcase": false, "constructor": false}, {"identifier": "getHosts", "parameters": "()", "modifiers": "public", "return": "List<ServerNode>", "signature": "List<ServerNode> getHosts()", "full_signature": "public List<ServerNode> getHosts()", "class_method_signature": "HmsInventory.getHosts()", "testcase": false, "constructor": false}, {"identifier": "getSwitches", "parameters": "()", "modifiers": "public", "return": "List<SwitchNode>", "signature": "List<SwitchNode> getSwitches()", "full_signature": "public List<SwitchNode> getSwitches()", "class_method_signature": "HmsInventory.getSwitches()", "testcase": false, "constructor": false}, {"identifier": "getInventoryFile", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInventoryFile()", "full_signature": "public String getInventoryFile()", "class_method_signature": "HmsInventory.getInventoryFile()", "testcase": false, "constructor": false}, {"identifier": "getServerNode", "parameters": "( final String hostId )", "modifiers": "public", "return": "ServerNode", "signature": "ServerNode getServerNode( final String hostId )", "full_signature": "public ServerNode getServerNode( final String hostId )", "class_method_signature": "HmsInventory.getServerNode( final String hostId )", "testcase": false, "constructor": false}, {"identifier": "getSwitchNode", "parameters": "( final String switchId )", "modifiers": "public", "return": "SwitchNode", "signature": "SwitchNode getSwitchNode( final String switchId )", "full_signature": "public SwitchNode getSwitchNode( final String switchId )", "class_method_signature": "HmsInventory.getSwitchNode( final String switchId )", "testcase": false, "constructor": false}, {"identifier": "addHost", "parameters": "( ServerNode serverNode )", "modifiers": "public", "return": "boolean", "signature": "boolean addHost( ServerNode serverNode )", "full_signature": "public boolean addHost( ServerNode serverNode )", "class_method_signature": "HmsInventory.addHost( ServerNode serverNode )", "testcase": false, "constructor": false}, {"identifier": "removeHost", "parameters": "( final String hostId )", "modifiers": "public", "return": "boolean", "signature": "boolean removeHost( final String hostId )", "full_signature": "public boolean removeHost( final String hostId )", "class_method_signature": "HmsInventory.removeHost( final String hostId )", "testcase": false, "constructor": false}, {"identifier": "setHosts", "parameters": "( List<ServerNode> hosts )", "modifiers": "public", "return": "boolean", "signature": "boolean setHosts( List<ServerNode> hosts )", "full_signature": "public boolean setHosts( List<ServerNode> hosts )", "class_method_signature": "HmsInventory.setHosts( List<ServerNode> hosts )", "testcase": false, "constructor": false}], "file": "modules/hms-util/src/main/java/com/vmware/vrack/hms/common/configuration/HmsInventory.java"}, "focal_method": {"identifier": "addHost", "parameters": "( ServerNode serverNode )", "modifiers": "public", "return": "boolean", "body": "public boolean addHost( ServerNode serverNode )\n    {\n\n        // check that ServerNode is not null\n        if ( serverNode == null )\n        {\n            logger.warn( \"In addHost, ServerNode is null.\" );\n            return false;\n        }\n\n        // Get all the existing hosts\n        List<ServerNode> hosts = this.getHosts();\n        if ( hosts == null )\n        {\n            logger.warn( \"In addHost, invenotry does not contain any hosts.\" );\n            hosts = new ArrayList<ServerNode>();\n        }\n\n        // add new host\n        hosts.add( serverNode );\n        return this.setHosts( hosts );\n    }", "signature": "boolean addHost( ServerNode serverNode )", "full_signature": "public boolean addHost( ServerNode serverNode )", "class_method_signature": "HmsInventory.addHost( ServerNode serverNode )", "testcase": false, "constructor": false, "invocations": ["warn", "getHosts", "warn", "add", "setHosts"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}