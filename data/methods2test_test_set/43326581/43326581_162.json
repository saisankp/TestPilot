{"test_class": {"identifier": "AttachmentHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String dbName = DatabaseSettings.COUCH_DB_ATTACHMENTS;", "modifier": "private static final", "type": "String", "declarator": "dbName = DatabaseSettings.COUCH_DB_ATTACHMENTS", "var_name": "dbName"}, {"original_string": "private AttachmentHandler handler;", "modifier": "private", "type": "AttachmentHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "@Rule\n    public final ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}], "file": "backend/src/src-attachments/src/test/java/org/eclipse/sw360/attachments/AttachmentHandlerTest.java"}, "test_case": {"identifier": "testGetAttachmentUsages", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAttachmentUsages() throws Exception {\n        AttachmentUsage usage1 = createUsage(\"p1\", \"r1\", \"a11\");\n        AttachmentUsage usage2 = createUsage(\"p1\", \"r1\", \"a12\");\n        AttachmentUsage usage3 = createUsage(\"p2\", \"r2\", \"a21\");\n        AttachmentUsage usage4 = createUsage(\"p3\", \"r1\", \"a11\");\n        AttachmentUsage usage5 = createUsage(\"p4\", \"r1\", \"a11\");\n        handler.makeAttachmentUsages(Lists.newArrayList(usage1, usage2, usage3, usage4, usage5));\n\n        Assert.assertThat(handler.getAttachmentUsages(Source.releaseId(\"r1\"), \"a11\", null),\n                Matchers.containsInAnyOrder(usage1, usage4, usage5));\n    }", "signature": "void testGetAttachmentUsages()", "full_signature": "@Test public void testGetAttachmentUsages()", "class_method_signature": "AttachmentHandlerTest.testGetAttachmentUsages()", "testcase": true, "constructor": false, "invocations": ["createUsage", "createUsage", "createUsage", "createUsage", "createUsage", "makeAttachmentUsages", "newArrayList", "assertThat", "getAttachmentUsages", "releaseId", "containsInAnyOrder"]}, "focal_class": {"identifier": "AttachmentHandler", "superclass": "", "interfaces": "implements AttachmentService.Iface", "fields": [{"original_string": "public static final String ATTACHMENTS_FIELD_NAME = \"attachments\";", "modifier": "public static final", "type": "String", "declarator": "ATTACHMENTS_FIELD_NAME = \"attachments\"", "var_name": "ATTACHMENTS_FIELD_NAME"}, {"original_string": "private static final Logger log = Logger.getLogger(AttachmentHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(AttachmentHandler.class)", "var_name": "log"}, {"original_string": "private final AttachmentRepository attachmentRepository;", "modifier": "private final", "type": "AttachmentRepository", "declarator": "attachmentRepository", "var_name": "attachmentRepository"}, {"original_string": "private final AttachmentUsageRepository attachmentUsageRepository;", "modifier": "private final", "type": "AttachmentUsageRepository", "declarator": "attachmentUsageRepository", "var_name": "attachmentUsageRepository"}, {"original_string": "private final AttachmentConnector attachmentConnector;", "modifier": "private final", "type": "AttachmentConnector", "declarator": "attachmentConnector", "var_name": "attachmentConnector"}], "methods": [{"identifier": "AttachmentHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " AttachmentHandler()", "full_signature": "public  AttachmentHandler()", "class_method_signature": "AttachmentHandler.AttachmentHandler()", "testcase": false, "constructor": true}, {"identifier": "makeAttachmentContent", "parameters": "(AttachmentContent attachmentContent)", "modifiers": "@Override public", "return": "AttachmentContent", "signature": "AttachmentContent makeAttachmentContent(AttachmentContent attachmentContent)", "full_signature": "@Override public AttachmentContent makeAttachmentContent(AttachmentContent attachmentContent)", "class_method_signature": "AttachmentHandler.makeAttachmentContent(AttachmentContent attachmentContent)", "testcase": false, "constructor": false}, {"identifier": "makeAttachmentContents", "parameters": "(List<AttachmentContent> attachmentContents)", "modifiers": "@Override public", "return": "List<AttachmentContent>", "signature": "List<AttachmentContent> makeAttachmentContents(List<AttachmentContent> attachmentContents)", "full_signature": "@Override public List<AttachmentContent> makeAttachmentContents(List<AttachmentContent> attachmentContents)", "class_method_signature": "AttachmentHandler.makeAttachmentContents(List<AttachmentContent> attachmentContents)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentContent", "parameters": "(String id)", "modifiers": "@Override public", "return": "AttachmentContent", "signature": "AttachmentContent getAttachmentContent(String id)", "full_signature": "@Override public AttachmentContent getAttachmentContent(String id)", "class_method_signature": "AttachmentHandler.getAttachmentContent(String id)", "testcase": false, "constructor": false}, {"identifier": "updateAttachmentContent", "parameters": "(AttachmentContent attachment)", "modifiers": "@Override public", "return": "void", "signature": "void updateAttachmentContent(AttachmentContent attachment)", "full_signature": "@Override public void updateAttachmentContent(AttachmentContent attachment)", "class_method_signature": "AttachmentHandler.updateAttachmentContent(AttachmentContent attachment)", "testcase": false, "constructor": false}, {"identifier": "bulkDelete", "parameters": "(List<String> ids)", "modifiers": "@Override public", "return": "RequestSummary", "signature": "RequestSummary bulkDelete(List<String> ids)", "full_signature": "@Override public RequestSummary bulkDelete(List<String> ids)", "class_method_signature": "AttachmentHandler.bulkDelete(List<String> ids)", "testcase": false, "constructor": false}, {"identifier": "deleteAttachmentContent", "parameters": "(String attachmentId)", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus deleteAttachmentContent(String attachmentId)", "full_signature": "@Override public RequestStatus deleteAttachmentContent(String attachmentId)", "class_method_signature": "AttachmentHandler.deleteAttachmentContent(String attachmentId)", "testcase": false, "constructor": false}, {"identifier": "vacuumAttachmentDB", "parameters": "(User user, Set<String> usedIds)", "modifiers": "@Override public", "return": "RequestSummary", "signature": "RequestSummary vacuumAttachmentDB(User user, Set<String> usedIds)", "full_signature": "@Override public RequestSummary vacuumAttachmentDB(User user, Set<String> usedIds)", "class_method_signature": "AttachmentHandler.vacuumAttachmentDB(User user, Set<String> usedIds)", "testcase": false, "constructor": false}, {"identifier": "getSha1FromAttachmentContentId", "parameters": "(String attachmentContentId)", "modifiers": "@Override public", "return": "String", "signature": "String getSha1FromAttachmentContentId(String attachmentContentId)", "full_signature": "@Override public String getSha1FromAttachmentContentId(String attachmentContentId)", "class_method_signature": "AttachmentHandler.getSha1FromAttachmentContentId(String attachmentContentId)", "testcase": false, "constructor": false}, {"identifier": "makeAttachmentUsage", "parameters": "(AttachmentUsage attachmentUsage)", "modifiers": "@Override public", "return": "AttachmentUsage", "signature": "AttachmentUsage makeAttachmentUsage(AttachmentUsage attachmentUsage)", "full_signature": "@Override public AttachmentUsage makeAttachmentUsage(AttachmentUsage attachmentUsage)", "class_method_signature": "AttachmentHandler.makeAttachmentUsage(AttachmentUsage attachmentUsage)", "testcase": false, "constructor": false}, {"identifier": "makeAttachmentUsages", "parameters": "(List<AttachmentUsage> attachmentUsages)", "modifiers": "@Override public", "return": "void", "signature": "void makeAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "full_signature": "@Override public void makeAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "class_method_signature": "AttachmentHandler.makeAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentUsage", "parameters": "(String id)", "modifiers": "@Override public", "return": "AttachmentUsage", "signature": "AttachmentUsage getAttachmentUsage(String id)", "full_signature": "@Override public AttachmentUsage getAttachmentUsage(String id)", "class_method_signature": "AttachmentHandler.getAttachmentUsage(String id)", "testcase": false, "constructor": false}, {"identifier": "updateAttachmentUsage", "parameters": "(AttachmentUsage attachmentUsage)", "modifiers": "@Override public", "return": "AttachmentUsage", "signature": "AttachmentUsage updateAttachmentUsage(AttachmentUsage attachmentUsage)", "full_signature": "@Override public AttachmentUsage updateAttachmentUsage(AttachmentUsage attachmentUsage)", "class_method_signature": "AttachmentHandler.updateAttachmentUsage(AttachmentUsage attachmentUsage)", "testcase": false, "constructor": false}, {"identifier": "updateAttachmentUsages", "parameters": "(List<AttachmentUsage> attachmentUsages)", "modifiers": "@Override public", "return": "void", "signature": "void updateAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "full_signature": "@Override public void updateAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "class_method_signature": "AttachmentHandler.updateAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "testcase": false, "constructor": false}, {"identifier": "deleteAttachmentUsage", "parameters": "(AttachmentUsage attachmentUsage)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAttachmentUsage(AttachmentUsage attachmentUsage)", "full_signature": "@Override public void deleteAttachmentUsage(AttachmentUsage attachmentUsage)", "class_method_signature": "AttachmentHandler.deleteAttachmentUsage(AttachmentUsage attachmentUsage)", "testcase": false, "constructor": false}, {"identifier": "deleteAttachmentUsages", "parameters": "(List<AttachmentUsage> attachmentUsages)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "full_signature": "@Override public void deleteAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "class_method_signature": "AttachmentHandler.deleteAttachmentUsages(List<AttachmentUsage> attachmentUsages)", "testcase": false, "constructor": false}, {"identifier": "deleteAttachmentUsagesByUsageDataTypes", "parameters": "(Source usedBy, Set<UsageData._Fields> typesToReplace, boolean deleteWithEmptyType)", "modifiers": "private", "return": "void", "signature": "void deleteAttachmentUsagesByUsageDataTypes(Source usedBy, Set<UsageData._Fields> typesToReplace, boolean deleteWithEmptyType)", "full_signature": "private void deleteAttachmentUsagesByUsageDataTypes(Source usedBy, Set<UsageData._Fields> typesToReplace, boolean deleteWithEmptyType)", "class_method_signature": "AttachmentHandler.deleteAttachmentUsagesByUsageDataTypes(Source usedBy, Set<UsageData._Fields> typesToReplace, boolean deleteWithEmptyType)", "testcase": false, "constructor": false}, {"identifier": "deleteAttachmentUsagesByUsageDataType", "parameters": "(Source usedBy, UsageData usageData)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAttachmentUsagesByUsageDataType(Source usedBy, UsageData usageData)", "full_signature": "@Override public void deleteAttachmentUsagesByUsageDataType(Source usedBy, UsageData usageData)", "class_method_signature": "AttachmentHandler.deleteAttachmentUsagesByUsageDataType(Source usedBy, UsageData usageData)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentUsages", "parameters": "(Source owner, String attachmentContentId, UsageData filter)", "modifiers": "@Override public", "return": "List<AttachmentUsage>", "signature": "List<AttachmentUsage> getAttachmentUsages(Source owner, String attachmentContentId, UsageData filter)", "full_signature": "@Override public List<AttachmentUsage> getAttachmentUsages(Source owner, String attachmentContentId, UsageData filter)", "class_method_signature": "AttachmentHandler.getAttachmentUsages(Source owner, String attachmentContentId, UsageData filter)", "testcase": false, "constructor": false}, {"identifier": "getUsedAttachments", "parameters": "(Source usedBy, UsageData filter)", "modifiers": "@Override public", "return": "List<AttachmentUsage>", "signature": "List<AttachmentUsage> getUsedAttachments(Source usedBy, UsageData filter)", "full_signature": "@Override public List<AttachmentUsage> getUsedAttachments(Source usedBy, UsageData filter)", "class_method_signature": "AttachmentHandler.getUsedAttachments(Source usedBy, UsageData filter)", "testcase": false, "constructor": false}, {"identifier": "replaceAttachmentUsages", "parameters": "(Source usedBy, List<AttachmentUsage> attachmentUsages)", "modifiers": "@Override public", "return": "void", "signature": "void replaceAttachmentUsages(Source usedBy, List<AttachmentUsage> attachmentUsages)", "full_signature": "@Override public void replaceAttachmentUsages(Source usedBy, List<AttachmentUsage> attachmentUsages)", "class_method_signature": "AttachmentHandler.replaceAttachmentUsages(Source usedBy, List<AttachmentUsage> attachmentUsages)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentUsageCount", "parameters": "(Map<Source, Set<String>> attachments, UsageData filter)", "modifiers": "@Override public", "return": "Map<Map<Source, String>, Integer>", "signature": "Map<Map<Source, String>, Integer> getAttachmentUsageCount(Map<Source, Set<String>> attachments, UsageData filter)", "full_signature": "@Override public Map<Map<Source, String>, Integer> getAttachmentUsageCount(Map<Source, Set<String>> attachments, UsageData filter)", "class_method_signature": "AttachmentHandler.getAttachmentUsageCount(Map<Source, Set<String>> attachments, UsageData filter)", "testcase": false, "constructor": false}], "file": "backend/src/src-attachments/src/main/java/org/eclipse/sw360/attachments/AttachmentHandler.java"}, "focal_method": {"identifier": "getAttachmentUsages", "parameters": "(Source owner, String attachmentContentId, UsageData filter)", "modifiers": "@Override public", "return": "List<AttachmentUsage>", "body": "@Override\n    public List<AttachmentUsage> getAttachmentUsages(Source owner, String attachmentContentId, UsageData filter) throws TException {\n        assertNotNull(owner);\n        assertTrue(owner.isSet());\n        assertNotNull(attachmentContentId);\n        assertNotEmpty(attachmentContentId);\n\n        if (filter != null && filter.isSet()) {\n            return attachmentUsageRepository.getUsageForAttachment(owner.getFieldValue().toString(), attachmentContentId,\n                    filter.getSetField().toString());\n        } else {\n            return attachmentUsageRepository.getUsageForAttachment(owner.getFieldValue().toString(), attachmentContentId);\n        }\n    }", "signature": "List<AttachmentUsage> getAttachmentUsages(Source owner, String attachmentContentId, UsageData filter)", "full_signature": "@Override public List<AttachmentUsage> getAttachmentUsages(Source owner, String attachmentContentId, UsageData filter)", "class_method_signature": "AttachmentHandler.getAttachmentUsages(Source owner, String attachmentContentId, UsageData filter)", "testcase": false, "constructor": false, "invocations": ["assertNotNull", "assertTrue", "isSet", "assertNotNull", "assertNotEmpty", "isSet", "getUsageForAttachment", "toString", "getFieldValue", "toString", "getSetField", "getUsageForAttachment", "toString", "getFieldValue"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}