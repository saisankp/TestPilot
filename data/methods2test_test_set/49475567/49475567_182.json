{"test_class": {"identifier": "BlockfaceRequestTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/search/request/BlockfaceRequestTest.java"}, "test_case": {"identifier": "testSummarize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSummarize()\n    {\n        BlockfaceRequest request = new BlockfaceRequest();\n        assertThat(request.summarize()).isEqualTo(\"blockface [onStreet=null, crossStreetOne=null, crossStreetTwo=null, borough=null]\");\n        request.setOnStreetInputValue(new InputValue(TokenType.ON_STREET, \"bway\"));\n        request.setCrossStreetOneInputValue(new InputValue(TokenType.ON_STREET, \"w 100 st\"));\n        request.setCrossStreetTwoInputValue(new InputValue(TokenType.ON_STREET, \"w 101 st\"));\n        request.setBoroughInputValue(new InputValue(TokenType.BOROUGH_NAME,\"manhattan\"));\n        assertThat(request.summarize()).isEqualTo(\"blockface [onStreet=bway, crossStreetOne=w 100 st, crossStreetTwo=w 101 st, borough=manhattan]\");\n    }", "signature": "void testSummarize()", "full_signature": "@Test public void testSummarize()", "class_method_signature": "BlockfaceRequestTest.testSummarize()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "summarize", "setOnStreetInputValue", "setCrossStreetOneInputValue", "setCrossStreetTwoInputValue", "setBoroughInputValue", "isEqualTo", "assertThat", "summarize"]}, "focal_class": {"identifier": "BlockfaceRequest", "superclass": "extends CountyRequest", "interfaces": "", "fields": [{"original_string": "private InputValue onStreetInputValue;", "modifier": "private", "type": "InputValue", "declarator": "onStreetInputValue", "var_name": "onStreetInputValue"}, {"original_string": "private InputValue crossStreetOneInputValue;", "modifier": "private", "type": "InputValue", "declarator": "crossStreetOneInputValue", "var_name": "crossStreetOneInputValue"}, {"original_string": "private InputValue crossStreetTwoInputValue;", "modifier": "private", "type": "InputValue", "declarator": "crossStreetTwoInputValue", "var_name": "crossStreetTwoInputValue"}], "methods": [{"identifier": "BlockfaceRequest", "parameters": "()", "modifiers": "public", "return": "", "signature": " BlockfaceRequest()", "full_signature": "public  BlockfaceRequest()", "class_method_signature": "BlockfaceRequest.BlockfaceRequest()", "testcase": false, "constructor": true}, {"identifier": "BlockfaceRequest", "parameters": "(BlockfaceRequest anotherRequest)", "modifiers": "public", "return": "", "signature": " BlockfaceRequest(BlockfaceRequest anotherRequest)", "full_signature": "public  BlockfaceRequest(BlockfaceRequest anotherRequest)", "class_method_signature": "BlockfaceRequest.BlockfaceRequest(BlockfaceRequest anotherRequest)", "testcase": false, "constructor": true}, {"identifier": "getOnStreet", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOnStreet()", "full_signature": "public String getOnStreet()", "class_method_signature": "BlockfaceRequest.getOnStreet()", "testcase": false, "constructor": false}, {"identifier": "getCrossStreetOne", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCrossStreetOne()", "full_signature": "public String getCrossStreetOne()", "class_method_signature": "BlockfaceRequest.getCrossStreetOne()", "testcase": false, "constructor": false}, {"identifier": "getCrossStreetTwo", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCrossStreetTwo()", "full_signature": "public String getCrossStreetTwo()", "class_method_signature": "BlockfaceRequest.getCrossStreetTwo()", "testcase": false, "constructor": false}, {"identifier": "getOnStreetInputValue", "parameters": "()", "modifiers": "public", "return": "InputValue", "signature": "InputValue getOnStreetInputValue()", "full_signature": "public InputValue getOnStreetInputValue()", "class_method_signature": "BlockfaceRequest.getOnStreetInputValue()", "testcase": false, "constructor": false}, {"identifier": "setOnStreetInputValue", "parameters": "(InputValue onStreetInputValue)", "modifiers": "public", "return": "void", "signature": "void setOnStreetInputValue(InputValue onStreetInputValue)", "full_signature": "public void setOnStreetInputValue(InputValue onStreetInputValue)", "class_method_signature": "BlockfaceRequest.setOnStreetInputValue(InputValue onStreetInputValue)", "testcase": false, "constructor": false}, {"identifier": "getCrossStreetOneInputValue", "parameters": "()", "modifiers": "public", "return": "InputValue", "signature": "InputValue getCrossStreetOneInputValue()", "full_signature": "public InputValue getCrossStreetOneInputValue()", "class_method_signature": "BlockfaceRequest.getCrossStreetOneInputValue()", "testcase": false, "constructor": false}, {"identifier": "setCrossStreetOneInputValue", "parameters": "(InputValue crossStreetOneInputValue)", "modifiers": "public", "return": "void", "signature": "void setCrossStreetOneInputValue(InputValue crossStreetOneInputValue)", "full_signature": "public void setCrossStreetOneInputValue(InputValue crossStreetOneInputValue)", "class_method_signature": "BlockfaceRequest.setCrossStreetOneInputValue(InputValue crossStreetOneInputValue)", "testcase": false, "constructor": false}, {"identifier": "getCrossStreetTwoInputValue", "parameters": "()", "modifiers": "public", "return": "InputValue", "signature": "InputValue getCrossStreetTwoInputValue()", "full_signature": "public InputValue getCrossStreetTwoInputValue()", "class_method_signature": "BlockfaceRequest.getCrossStreetTwoInputValue()", "testcase": false, "constructor": false}, {"identifier": "setCrossStreetTwoInputValue", "parameters": "(InputValue crossStreetTwoInputValue)", "modifiers": "public", "return": "void", "signature": "void setCrossStreetTwoInputValue(InputValue crossStreetTwoInputValue)", "full_signature": "public void setCrossStreetTwoInputValue(InputValue crossStreetTwoInputValue)", "class_method_signature": "BlockfaceRequest.setCrossStreetTwoInputValue(InputValue crossStreetTwoInputValue)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BlockfaceRequest.toString()", "testcase": false, "constructor": false}, {"identifier": "containsAssignedValue", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAssignedValue()", "full_signature": "@Override public boolean containsAssignedValue()", "class_method_signature": "BlockfaceRequest.containsAssignedValue()", "testcase": false, "constructor": false}, {"identifier": "summarize", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String summarize()", "full_signature": "@Override public String summarize()", "class_method_signature": "BlockfaceRequest.summarize()", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/search/request/BlockfaceRequest.java"}, "focal_method": {"identifier": "summarize", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String summarize()\n    {\n        return String.format(\"blockface [onStreet=%s, crossStreetOne=%s, crossStreetTwo=%s, borough=%s]\", getOnStreet(), getCrossStreetOne(), getCrossStreetTwo(), getBorough());\n    }", "signature": "String summarize()", "full_signature": "@Override public String summarize()", "class_method_signature": "BlockfaceRequest.summarize()", "testcase": false, "constructor": false, "invocations": ["format", "getOnStreet", "getCrossStreetOne", "getCrossStreetTwo", "getBorough"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}