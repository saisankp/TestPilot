{"test_class": {"identifier": "TestPackageNamer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String extendedDocumentMetadata = \"http://cambridgesemantics.com/ontologies/2012/07/ExtendedDocumentMetadata\";", "modifier": "private static final", "type": "String", "declarator": "extendedDocumentMetadata = \"http://cambridgesemantics.com/ontologies/2012/07/ExtendedDocumentMetadata\"", "var_name": "extendedDocumentMetadata"}, {"original_string": "private static final String lillyCore = \"http://www.lilly.com/ontologies/2015/SDP/LillyCore\";", "modifier": "private static final", "type": "String", "declarator": "lillyCore = \"http://www.lilly.com/ontologies/2015/SDP/LillyCore\"", "var_name": "lillyCore"}, {"original_string": "private static final String lillyService = \"http://www.lilly.com/ontologies/2015/SDP/LillyServices\";", "modifier": "private static final", "type": "String", "declarator": "lillyService = \"http://www.lilly.com/ontologies/2015/SDP/LillyServices\"", "var_name": "lillyService"}], "file": "rdf-orm/com.mobi.rdf.orm.generate/src/test/java/com/mobi/rdf/orm/generate/TestPackageNamer.java"}, "test_case": {"identifier": "testGood", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGood() throws Exception {\n        assertEquals(\"com.cambridgesemantics.ontologies._2012._07.extendeddocumentmetadata\",\n                PackageNamer.packageFromUrl(extendedDocumentMetadata));\n        assertEquals(\"com.lilly.www.ontologies._2015.sdp.lillycore\", PackageNamer.packageFromUrl(lillyCore));\n        assertEquals(\"com.lilly.www.ontologies._2015.sdp.lillyservices\", PackageNamer.packageFromUrl(lillyService));\n    }", "signature": "void testGood()", "full_signature": "@Test public void testGood()", "class_method_signature": "TestPackageNamer.testGood()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "packageFromUrl", "assertEquals", "packageFromUrl", "assertEquals", "packageFromUrl"]}, "focal_class": {"identifier": "PackageNamer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Pattern PATTERN = Pattern.compile(\"^([^:]+)[:](?://)?((?:[^/]+\\\\.?)+)(.*+)$\");", "modifier": "private static", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(\"^([^:]+)[:](?://)?((?:[^/]+\\\\.?)+)(.*+)$\")", "var_name": "PATTERN"}], "methods": [{"identifier": "packageFromUrl", "parameters": "(final String uriString)", "modifiers": "public static", "return": "String", "signature": "String packageFromUrl(final String uriString)", "full_signature": "public static String packageFromUrl(final String uriString)", "class_method_signature": "PackageNamer.packageFromUrl(final String uriString)", "testcase": false, "constructor": false}, {"identifier": "packageNameCleanup", "parameters": "(List<String> elements)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> packageNameCleanup(List<String> elements)", "full_signature": "private static List<String> packageNameCleanup(List<String> elements)", "class_method_signature": "PackageNamer.packageNameCleanup(List<String> elements)", "testcase": false, "constructor": false}, {"identifier": "removeEmptyElements", "parameters": "(final List<String> coll, boolean reverse)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> removeEmptyElements(final List<String> coll, boolean reverse)", "full_signature": "private static List<String> removeEmptyElements(final List<String> coll, boolean reverse)", "class_method_signature": "PackageNamer.removeEmptyElements(final List<String> coll, boolean reverse)", "testcase": false, "constructor": false}], "file": "rdf-orm/com.mobi.rdf.orm.generate/src/main/java/com/mobi/rdf/orm/generate/PackageNamer.java"}, "focal_method": {"identifier": "packageFromUrl", "parameters": "(final String uriString)", "modifiers": "public static", "return": "String", "body": "public static String packageFromUrl(final String uriString) throws MalformedURLException {\n        final java.util.regex.Matcher m = PATTERN.matcher(uriString);\n        if (m.matches()) {\n            List<String> elements = removeEmptyElements(Arrays.asList(m.group(2).split(\"[\\\\.|/]\")), true);\n            elements.addAll(removeEmptyElements(Arrays.asList(m.group(3).split(\"[\\\\.|/]\")), false));\n            elements = packageNameCleanup(elements);\n            return StringUtils.join(elements, \".\");\n        } else {\n            throw new MalformedURLException(\"Illegal IRI for ontology: \" + uriString);\n        }\n    }", "signature": "String packageFromUrl(final String uriString)", "full_signature": "public static String packageFromUrl(final String uriString)", "class_method_signature": "PackageNamer.packageFromUrl(final String uriString)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "removeEmptyElements", "asList", "split", "group", "addAll", "removeEmptyElements", "asList", "split", "group", "packageNameCleanup", "join"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}