{"test_class": {"identifier": "AatsrLevel1ProductFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AatsrLevel1ProductFactory factory;", "modifier": "private", "type": "AatsrLevel1ProductFactory", "declarator": "factory", "var_name": "factory"}], "file": "s3tbx-sentinel3-reader/src/test/java/org/esa/s3tbx/dataio/s3/aatsr/AatsrLevel1ProductFactoryTest.java"}, "test_case": {"identifier": "testGetProductSpecificMetadataElementName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetProductSpecificMetadataElementName() throws Exception {\n        assertEquals(\"atsrProductInformation\", factory.getProductSpecificMetadataElementName());\n    }", "signature": "void testGetProductSpecificMetadataElementName()", "full_signature": "@Test public void testGetProductSpecificMetadataElementName()", "class_method_signature": "AatsrLevel1ProductFactoryTest.testGetProductSpecificMetadataElementName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getProductSpecificMetadataElementName"]}, "focal_class": {"identifier": "AatsrLevel1ProductFactory", "superclass": "extends SlstrLevel1ProductFactory", "interfaces": "", "fields": [{"original_string": "private Product masterProduct;", "modifier": "private", "type": "Product", "declarator": "masterProduct", "var_name": "masterProduct"}, {"original_string": "private static final double ANGLE_FILL_VALUE = 9969209968386869000000000000000000000.0;", "modifier": "private static final", "type": "double", "declarator": "ANGLE_FILL_VALUE = 9969209968386869000000000000000000000.0", "var_name": "ANGLE_FILL_VALUE"}, {"original_string": "private static final double FILL_VALUE = -1.0E9;", "modifier": "private static final", "type": "double", "declarator": "FILL_VALUE = -1.0E9", "var_name": "FILL_VALUE"}], "methods": [{"identifier": "AatsrLevel1ProductFactory", "parameters": "(AatsrLevel1ProductReader productReader)", "modifiers": "public", "return": "", "signature": " AatsrLevel1ProductFactory(AatsrLevel1ProductReader productReader)", "full_signature": "public  AatsrLevel1ProductFactory(AatsrLevel1ProductReader productReader)", "class_method_signature": "AatsrLevel1ProductFactory.AatsrLevel1ProductFactory(AatsrLevel1ProductReader productReader)", "testcase": false, "constructor": true}, {"identifier": "getFileNames", "parameters": "(Manifest manifest)", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getFileNames(Manifest manifest)", "full_signature": "@Override protected List<String> getFileNames(Manifest manifest)", "class_method_signature": "AatsrLevel1ProductFactory.getFileNames(Manifest manifest)", "testcase": false, "constructor": false}, {"identifier": "readProduct", "parameters": "(String fileName, Manifest manifest)", "modifiers": "@Override protected", "return": "Product", "signature": "Product readProduct(String fileName, Manifest manifest)", "full_signature": "@Override protected Product readProduct(String fileName, Manifest manifest)", "class_method_signature": "AatsrLevel1ProductFactory.readProduct(String fileName, Manifest manifest)", "testcase": false, "constructor": false}, {"identifier": "findMasterProduct", "parameters": "()", "modifiers": "@Override protected", "return": "Product", "signature": "Product findMasterProduct()", "full_signature": "@Override protected Product findMasterProduct()", "class_method_signature": "AatsrLevel1ProductFactory.findMasterProduct()", "testcase": false, "constructor": false}, {"identifier": "setUncertaintyBands", "parameters": "(Product product)", "modifiers": "@Override protected", "return": "void", "signature": "void setUncertaintyBands(Product product)", "full_signature": "@Override protected void setUncertaintyBands(Product product)", "class_method_signature": "AatsrLevel1ProductFactory.setUncertaintyBands(Product product)", "testcase": false, "constructor": false}, {"identifier": "getProductSpecificMetadataElementName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getProductSpecificMetadataElementName()", "full_signature": "@Override protected String getProductSpecificMetadataElementName()", "class_method_signature": "AatsrLevel1ProductFactory.getProductSpecificMetadataElementName()", "testcase": false, "constructor": false}, {"identifier": "setAutoGrouping", "parameters": "(Product[] sourceProducts, Product targetProduct)", "modifiers": "@Override protected", "return": "void", "signature": "void setAutoGrouping(Product[] sourceProducts, Product targetProduct)", "full_signature": "@Override protected void setAutoGrouping(Product[] sourceProducts, Product targetProduct)", "class_method_signature": "AatsrLevel1ProductFactory.setAutoGrouping(Product[] sourceProducts, Product targetProduct)", "testcase": false, "constructor": false}, {"identifier": "setGeoCoding", "parameters": "(Product targetProduct)", "modifiers": "@Override protected", "return": "void", "signature": "void setGeoCoding(Product targetProduct)", "full_signature": "@Override protected void setGeoCoding(Product targetProduct)", "class_method_signature": "AatsrLevel1ProductFactory.setGeoCoding(Product targetProduct)", "testcase": false, "constructor": false}, {"identifier": "fixTiePointGrids", "parameters": "(Product targetProduct)", "modifiers": "@Override protected", "return": "void", "signature": "void fixTiePointGrids(Product targetProduct)", "full_signature": "@Override protected void fixTiePointGrids(Product targetProduct)", "class_method_signature": "AatsrLevel1ProductFactory.fixTiePointGrids(Product targetProduct)", "testcase": false, "constructor": false}, {"identifier": "getFixedAngleGrid", "parameters": "(TiePointGrid grid)", "modifiers": "private", "return": "TiePointGrid", "signature": "TiePointGrid getFixedAngleGrid(TiePointGrid grid)", "full_signature": "private TiePointGrid getFixedAngleGrid(TiePointGrid grid)", "class_method_signature": "AatsrLevel1ProductFactory.getFixedAngleGrid(TiePointGrid grid)", "testcase": false, "constructor": false}, {"identifier": "getFixedLatLonGrid", "parameters": "(TiePointGrid grid, boolean isAngle)", "modifiers": "private static", "return": "TiePointGrid", "signature": "TiePointGrid getFixedLatLonGrid(TiePointGrid grid, boolean isAngle)", "full_signature": "private static TiePointGrid getFixedLatLonGrid(TiePointGrid grid, boolean isAngle)", "class_method_signature": "AatsrLevel1ProductFactory.getFixedLatLonGrid(TiePointGrid grid, boolean isAngle)", "testcase": false, "constructor": false}, {"identifier": "getResolutions", "parameters": "(String gridIndex)", "modifiers": "protected", "return": "short[]", "signature": "short[] getResolutions(String gridIndex)", "full_signature": "protected short[] getResolutions(String gridIndex)", "class_method_signature": "AatsrLevel1ProductFactory.getResolutions(String gridIndex)", "testcase": false, "constructor": false}, {"identifier": "findMasterProduct", "parameters": "(List<Product> openProductList)", "modifiers": "static", "return": "Product", "signature": "Product findMasterProduct(List<Product> openProductList)", "full_signature": "static Product findMasterProduct(List<Product> openProductList)", "class_method_signature": "AatsrLevel1ProductFactory.findMasterProduct(List<Product> openProductList)", "testcase": false, "constructor": false}], "file": "s3tbx-sentinel3-reader/src/main/java/org/esa/s3tbx/dataio/s3/aatsr/AatsrLevel1ProductFactory.java"}, "focal_method": {"identifier": "getProductSpecificMetadataElementName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "body": "@Override\n    protected String getProductSpecificMetadataElementName() {\n        return \"atsrProductInformation\";\n    }", "signature": "String getProductSpecificMetadataElementName()", "full_signature": "@Override protected String getProductSpecificMetadataElementName()", "class_method_signature": "AatsrLevel1ProductFactory.getProductSpecificMetadataElementName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}