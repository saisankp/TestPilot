{"test_class": {"identifier": "ByIdResultSelectorTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/model/ByIdResultSelectorTest.java"}, "test_case": {"identifier": "shouldFindActionWithSameIdIfListContainsTwoDifferentIds", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldFindActionWithSameIdIfListContainsTwoDifferentIds() {\n        ByIdResultSelector selector = new ByIdResultSelector(\"1\");\n\n        List<ResultAction> resultActions = new ArrayList<>();\n        resultActions.add(createResultActionStub(\"2\"));\n        resultActions.add(createResultActionStub(\"1\"));\n\n        Run<?, ?> run = createRunStub(resultActions);\n\n        assertThat(selector.get(run)).isPresent();\n    }", "signature": "void shouldFindActionWithSameIdIfListContainsTwoDifferentIds()", "full_signature": "@Test void shouldFindActionWithSameIdIfListContainsTwoDifferentIds()", "class_method_signature": "ByIdResultSelectorTest.shouldFindActionWithSameIdIfListContainsTwoDifferentIds()", "testcase": true, "constructor": false, "invocations": ["add", "createResultActionStub", "add", "createResultActionStub", "createRunStub", "isPresent", "assertThat", "get"]}, "focal_class": {"identifier": "ByIdResultSelector", "superclass": "", "interfaces": "implements ResultSelector", "fields": [{"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}], "methods": [{"identifier": "ByIdResultSelector", "parameters": "(final String id)", "modifiers": "public", "return": "", "signature": " ByIdResultSelector(final String id)", "full_signature": "public  ByIdResultSelector(final String id)", "class_method_signature": "ByIdResultSelector.ByIdResultSelector(final String id)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(final Run<?, ?> build)", "modifiers": "@Override public", "return": "Optional<ResultAction>", "signature": "Optional<ResultAction> get(final Run<?, ?> build)", "full_signature": "@Override public Optional<ResultAction> get(final Run<?, ?> build)", "class_method_signature": "ByIdResultSelector.get(final Run<?, ?> build)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ByIdResultSelector.toString()", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/model/ByIdResultSelector.java"}, "focal_method": {"identifier": "get", "parameters": "(final Run<?, ?> build)", "modifiers": "@Override public", "return": "Optional<ResultAction>", "body": "@Override\n    public Optional<ResultAction> get(final Run<?, ?> build) {\n        List<ResultAction> actions = build.getActions(ResultAction.class);\n        for (ResultAction action : actions) {\n            if (id.equals(action.getId())) {\n                return Optional.of(action);\n            }\n        }\n        return Optional.empty();\n    }", "signature": "Optional<ResultAction> get(final Run<?, ?> build)", "full_signature": "@Override public Optional<ResultAction> get(final Run<?, ?> build)", "class_method_signature": "ByIdResultSelector.get(final Run<?, ?> build)", "testcase": false, "constructor": false, "invocations": ["getActions", "equals", "getId", "of", "empty"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}