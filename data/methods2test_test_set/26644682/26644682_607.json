{"test_class": {"identifier": "FormatRegistrationServiceTest", "superclass": "extends BaseFormatTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private FormatRegistrationService service;", "modifier": "@Autowired\n    private", "type": "FormatRegistrationService", "declarator": "service", "var_name": "service"}], "file": "dataprep-transformation/src/test/java/org/talend/dataprep/transformation/format/FormatRegistrationServiceTest.java"}, "test_case": {"identifier": "shouldGetFormatByItsName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldGetFormatByItsName() {\n        final ExportFormat csvFormat = service.getByName(CSVFormat.CSV);\n        Assert.assertTrue(csvFormat instanceof CSVFormat);\n    }", "signature": "void shouldGetFormatByItsName()", "full_signature": "@Test public void shouldGetFormatByItsName()", "class_method_signature": "FormatRegistrationServiceTest.shouldGetFormatByItsName()", "testcase": true, "constructor": false, "invocations": ["getByName", "assertTrue"]}, "focal_class": {"identifier": "FormatRegistrationService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<String> INTERNAL_TYPES = Collections.singletonList(JsonFormat.JSON);", "modifier": "private static final", "type": "List<String>", "declarator": "INTERNAL_TYPES = Collections.singletonList(JsonFormat.JSON)", "var_name": "INTERNAL_TYPES"}, {"original_string": "private final List<ExportFormat> types;", "modifier": "private final", "type": "List<ExportFormat>", "declarator": "types", "var_name": "types"}], "methods": [{"identifier": "FormatRegistrationService", "parameters": "(List<ExportFormat> types)", "modifiers": "public", "return": "", "signature": " FormatRegistrationService(List<ExportFormat> types)", "full_signature": "public  FormatRegistrationService(List<ExportFormat> types)", "class_method_signature": "FormatRegistrationService.FormatRegistrationService(List<ExportFormat> types)", "testcase": false, "constructor": true}, {"identifier": "getExternalFormats", "parameters": "()", "modifiers": "public", "return": "Stream<ExportFormat>", "signature": "Stream<ExportFormat> getExternalFormats()", "full_signature": "public Stream<ExportFormat> getExternalFormats()", "class_method_signature": "FormatRegistrationService.getExternalFormats()", "testcase": false, "constructor": false}, {"identifier": "getByName", "parameters": "(String formatName)", "modifiers": "public", "return": "ExportFormat", "signature": "ExportFormat getByName(String formatName)", "full_signature": "public ExportFormat getByName(String formatName)", "class_method_signature": "FormatRegistrationService.getByName(String formatName)", "testcase": false, "constructor": false}], "file": "dataprep-transformation/src/main/java/org/talend/dataprep/transformation/format/FormatRegistrationService.java"}, "focal_method": {"identifier": "getByName", "parameters": "(String formatName)", "modifiers": "public", "return": "ExportFormat", "body": "public ExportFormat getByName(String formatName) {\n        return types\n                .stream() //\n                .filter(f -> equalsIgnoreCase(formatName, f.getName())) //\n                .findFirst() //\n                .orElse(null);\n    }", "signature": "ExportFormat getByName(String formatName)", "full_signature": "public ExportFormat getByName(String formatName)", "class_method_signature": "FormatRegistrationService.getByName(String formatName)", "testcase": false, "constructor": false, "invocations": ["orElse", "findFirst", "filter", "stream", "equalsIgnoreCase", "getName"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}