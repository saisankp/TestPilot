{"test_class": {"identifier": "CertificateReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "components/credentials/src/test/java/org/cloudfoundry/credhub/utils/CertificateReaderTest.java"}, "test_case": {"identifier": "isCa_whenTheCertificateIsX509V3_andDoesNotHaveBasicConstraints_returnsFalse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void isCa_whenTheCertificateIsX509V3_andDoesNotHaveBasicConstraints_returnsFalse() {\n    final CertificateReader certificateReader = new CertificateReader(\n            V3_CERT_WITHOUT_BASIC_CONSTRAINTS);\n\n    assertThat(certificateReader.isCa(), equalTo(false));\n  }", "signature": "void isCa_whenTheCertificateIsX509V3_andDoesNotHaveBasicConstraints_returnsFalse()", "full_signature": "@Test public void isCa_whenTheCertificateIsX509V3_andDoesNotHaveBasicConstraints_returnsFalse()", "class_method_signature": "CertificateReaderTest.isCa_whenTheCertificateIsX509V3_andDoesNotHaveBasicConstraints_returnsFalse()", "testcase": true, "constructor": false, "invocations": ["assertThat", "isCa", "equalTo"]}, "focal_class": {"identifier": "CertificateReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final X509Certificate certificate;", "modifier": "private final", "type": "X509Certificate", "declarator": "certificate", "var_name": "certificate"}, {"original_string": "private final X509CertificateHolder certificateHolder;", "modifier": "private final", "type": "X509CertificateHolder", "declarator": "certificateHolder", "var_name": "certificateHolder"}], "methods": [{"identifier": "CertificateReader", "parameters": "(final String pemString)", "modifiers": "public", "return": "", "signature": " CertificateReader(final String pemString)", "full_signature": "public  CertificateReader(final String pemString)", "class_method_signature": "CertificateReader.CertificateReader(final String pemString)", "testcase": false, "constructor": true}, {"identifier": "getCertificate", "parameters": "()", "modifiers": "public", "return": "X509Certificate", "signature": "X509Certificate getCertificate()", "full_signature": "public X509Certificate getCertificate()", "class_method_signature": "CertificateReader.getCertificate()", "testcase": false, "constructor": false}, {"identifier": "getAlternativeNames", "parameters": "()", "modifiers": "public", "return": "GeneralNames", "signature": "GeneralNames getAlternativeNames()", "full_signature": "public GeneralNames getAlternativeNames()", "class_method_signature": "CertificateReader.getAlternativeNames()", "testcase": false, "constructor": false}, {"identifier": "getDurationDays", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDurationDays()", "full_signature": "public int getDurationDays()", "class_method_signature": "CertificateReader.getDurationDays()", "testcase": false, "constructor": false}, {"identifier": "getExtendedKeyUsage", "parameters": "()", "modifiers": "public", "return": "ExtendedKeyUsage", "signature": "ExtendedKeyUsage getExtendedKeyUsage()", "full_signature": "public ExtendedKeyUsage getExtendedKeyUsage()", "class_method_signature": "CertificateReader.getExtendedKeyUsage()", "testcase": false, "constructor": false}, {"identifier": "getSubjectName", "parameters": "()", "modifiers": "public", "return": "X500Principal", "signature": "X500Principal getSubjectName()", "full_signature": "public X500Principal getSubjectName()", "class_method_signature": "CertificateReader.getSubjectName()", "testcase": false, "constructor": false}, {"identifier": "isSignedByCa", "parameters": "(final String caValue)", "modifiers": "public", "return": "boolean", "signature": "boolean isSignedByCa(final String caValue)", "full_signature": "public boolean isSignedByCa(final String caValue)", "class_method_signature": "CertificateReader.isSignedByCa(final String caValue)", "testcase": false, "constructor": false}, {"identifier": "getKeyLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getKeyLength()", "full_signature": "public int getKeyLength()", "class_method_signature": "CertificateReader.getKeyLength()", "testcase": false, "constructor": false}, {"identifier": "getKeyUsage", "parameters": "()", "modifiers": "public", "return": "KeyUsage", "signature": "KeyUsage getKeyUsage()", "full_signature": "public KeyUsage getKeyUsage()", "class_method_signature": "CertificateReader.getKeyUsage()", "testcase": false, "constructor": false}, {"identifier": "isSelfSigned", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSelfSigned()", "full_signature": "public boolean isSelfSigned()", "class_method_signature": "CertificateReader.isSelfSigned()", "testcase": false, "constructor": false}, {"identifier": "isCa", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCa()", "full_signature": "public boolean isCa()", "class_method_signature": "CertificateReader.isCa()", "testcase": false, "constructor": false}, {"identifier": "getNotAfter", "parameters": "()", "modifiers": "public", "return": "Instant", "signature": "Instant getNotAfter()", "full_signature": "public Instant getNotAfter()", "class_method_signature": "CertificateReader.getNotAfter()", "testcase": false, "constructor": false}, {"identifier": "parseStringIntoCertificate", "parameters": "(final String pemString)", "modifiers": "private", "return": "X509Certificate", "signature": "X509Certificate parseStringIntoCertificate(final String pemString)", "full_signature": "private X509Certificate parseStringIntoCertificate(final String pemString)", "class_method_signature": "CertificateReader.parseStringIntoCertificate(final String pemString)", "testcase": false, "constructor": false}], "file": "components/credentials/src/main/java/org/cloudfoundry/credhub/utils/CertificateReader.java"}, "focal_method": {"identifier": "isCa", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isCa() {\n    final Extensions extensions = certificateHolder.getExtensions();\n    BasicConstraints basicConstraints = null;\n\n    if (extensions != null) {\n      basicConstraints = BasicConstraints\n        .fromExtensions(Extensions.getInstance(extensions));\n    }\n\n    return basicConstraints != null && basicConstraints.isCA();\n  }", "signature": "boolean isCa()", "full_signature": "public boolean isCa()", "class_method_signature": "CertificateReader.isCa()", "testcase": false, "constructor": false, "invocations": ["getExtensions", "fromExtensions", "getInstance", "isCA"]}, "repository": {"repo_id": 57061988, "url": "https://github.com/cloudfoundry-incubator/credhub", "stars": 167, "created": "4/25/2016 5:30:51 PM +00:00", "updates": "2020-01-27T21:31:19+00:00", "fork": "False", "license": "licensed"}}