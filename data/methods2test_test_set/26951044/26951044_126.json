{"test_class": {"identifier": "IntegerConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/converters/IntegerConverterTest.java"}, "test_case": {"identifier": "callToConvertAddsMoreSupportedFormatsToTheContext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void callToConvertAddsMoreSupportedFormatsToTheContext() throws Exception {\n        ConversionContext context = new ConversionContext.Builder(TypeLiteral.of(Integer.class)).build();\n\n        IntegerConverter converter = new IntegerConverter();\n        converter.convert(\"\", context);\n\n        assertThat(context.getSupportedFormats()).contains(\"<int> (IntegerConverter)\",\n                \"MIN_VALUE (IntegerConverter)\", \"MAX_VALUE (IntegerConverter)\");\n    }", "signature": "void callToConvertAddsMoreSupportedFormatsToTheContext()", "full_signature": "@Test public void callToConvertAddsMoreSupportedFormatsToTheContext()", "class_method_signature": "IntegerConverterTest.callToConvertAddsMoreSupportedFormatsToTheContext()", "testcase": true, "constructor": false, "invocations": ["build", "of", "convert", "contains", "assertThat", "getSupportedFormats"]}, "focal_class": {"identifier": "IntegerConverter", "superclass": "", "interfaces": "implements PropertyConverter<Integer>", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(IntegerConverter.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(IntegerConverter.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer convert(String value, ConversionContext ctx)", "full_signature": "@Override public Integer convert(String value, ConversionContext ctx)", "class_method_signature": "IntegerConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "IntegerConverter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "IntegerConverter.hashCode()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/converters/IntegerConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "Integer", "body": "@Override\n    public Integer convert(String value, ConversionContext ctx) {\n        ctx.addSupportedFormats(getClass(), \"<int>\", \"MIN_VALUE\", \"MIN\", \"MAX_VALUE\", \"MAX\");\n        if(value==null){\n            return null;\n        }\n        String trimmed = value.trim();\n        switch(trimmed.toUpperCase(Locale.ENGLISH)){\n            case \"MIN_VALUE\":\n            case \"MIN\":\n                return Integer.MIN_VALUE;\n            case \"MAX_VALUE\":\n            case \"MAX\":\n                return Integer.MAX_VALUE;\n            default:\n                try {\n                    return Integer.decode(trimmed);\n                } catch(Exception e) {\n                    LOG.finest(\"Unparseable Integer createValue: \" + trimmed);\n                    return null;\n                }\n        }\n\n    }", "signature": "Integer convert(String value, ConversionContext ctx)", "full_signature": "@Override public Integer convert(String value, ConversionContext ctx)", "class_method_signature": "IntegerConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false, "invocations": ["addSupportedFormats", "getClass", "trim", "toUpperCase", "decode", "finest"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}