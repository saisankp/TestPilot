{"test_class": {"identifier": "PdfPageLabelTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/pdf/label/PdfPageLabelTest.java"}, "test_case": {"identifier": "testNullLabel", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testNullLabel() {\n        PdfPageLabel.newInstanceWithLabel(null, PdfLabelNumberingStyle.ARABIC, 1);\n    }", "signature": "void testNullLabel()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testNullLabel()", "class_method_signature": "PdfPageLabelTest.testNullLabel()", "testcase": true, "constructor": false, "invocations": ["newInstanceWithLabel"]}, "focal_class": {"identifier": "PdfPageLabel", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull\n    private String labelPrefix;", "modifier": "@NotNull\n    private", "type": "String", "declarator": "labelPrefix", "var_name": "labelPrefix"}, {"original_string": "@NotNull\n    private PdfLabelNumberingStyle numberingStyle;", "modifier": "@NotNull\n    private", "type": "PdfLabelNumberingStyle", "declarator": "numberingStyle", "var_name": "numberingStyle"}, {"original_string": "@Min(value = 1)\n    private int logicalPageNumber;", "modifier": "@Min(value = 1)\n    private", "type": "int", "declarator": "logicalPageNumber", "var_name": "logicalPageNumber"}], "methods": [{"identifier": "PdfPageLabel", "parameters": "(String labelPrefix, PdfLabelNumberingStyle numberingStyle, int logicalPageNumber)", "modifiers": "private", "return": "", "signature": " PdfPageLabel(String labelPrefix, PdfLabelNumberingStyle numberingStyle, int logicalPageNumber)", "full_signature": "private  PdfPageLabel(String labelPrefix, PdfLabelNumberingStyle numberingStyle, int logicalPageNumber)", "class_method_signature": "PdfPageLabel.PdfPageLabel(String labelPrefix, PdfLabelNumberingStyle numberingStyle, int logicalPageNumber)", "testcase": false, "constructor": true}, {"identifier": "getLabelPrefix", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLabelPrefix()", "full_signature": "public String getLabelPrefix()", "class_method_signature": "PdfPageLabel.getLabelPrefix()", "testcase": false, "constructor": false}, {"identifier": "getNumberingStyle", "parameters": "()", "modifiers": "public", "return": "PdfLabelNumberingStyle", "signature": "PdfLabelNumberingStyle getNumberingStyle()", "full_signature": "public PdfLabelNumberingStyle getNumberingStyle()", "class_method_signature": "PdfPageLabel.getNumberingStyle()", "testcase": false, "constructor": false}, {"identifier": "getLogicalPageNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLogicalPageNumber()", "full_signature": "public int getLogicalPageNumber()", "class_method_signature": "PdfPageLabel.getLogicalPageNumber()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PdfPageLabel.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PdfPageLabel.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "PdfPageLabel.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "newInstanceWithoutLabel", "parameters": "(PdfLabelNumberingStyle numberingStyle, int logicalPageNumber)", "modifiers": "public static", "return": "PdfPageLabel", "signature": "PdfPageLabel newInstanceWithoutLabel(PdfLabelNumberingStyle numberingStyle, int logicalPageNumber)", "full_signature": "public static PdfPageLabel newInstanceWithoutLabel(PdfLabelNumberingStyle numberingStyle, int logicalPageNumber)", "class_method_signature": "PdfPageLabel.newInstanceWithoutLabel(PdfLabelNumberingStyle numberingStyle, int logicalPageNumber)", "testcase": false, "constructor": false}, {"identifier": "newInstanceWithLabel", "parameters": "(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber)", "modifiers": "public static", "return": "PdfPageLabel", "signature": "PdfPageLabel newInstanceWithLabel(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber)", "full_signature": "public static PdfPageLabel newInstanceWithLabel(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber)", "class_method_signature": "PdfPageLabel.newInstanceWithLabel(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/pdf/label/PdfPageLabel.java"}, "focal_method": {"identifier": "newInstanceWithLabel", "parameters": "(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber)", "modifiers": "public static", "return": "PdfPageLabel", "body": "public static PdfPageLabel newInstanceWithLabel(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber) {\n        if (logicalPageNumber < 1) {\n            throw new InvalidParameterException(\"Input page number must be positive.\");\n        }\n        if (label == null) {\n            throw new InvalidParameterException(\"Input label cannot be null.\");\n        }\n        if (numberingStyle == null) {\n            throw new InvalidParameterException(\"Input numbering style cannot be null.\");\n        }\n        return new PdfPageLabel(label, numberingStyle, logicalPageNumber);\n    }", "signature": "PdfPageLabel newInstanceWithLabel(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber)", "full_signature": "public static PdfPageLabel newInstanceWithLabel(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber)", "class_method_signature": "PdfPageLabel.newInstanceWithLabel(String label, PdfLabelNumberingStyle numberingStyle,\n            int logicalPageNumber)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}