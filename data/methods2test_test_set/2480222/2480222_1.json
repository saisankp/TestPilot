{"test_class": {"identifier": "DefQaListLinkTest", "superclass": "", "interfaces": "", "fields": [], "file": "nanjing12336/src/test/java/org/mumu/swoop/analysis/def/DefQaListLinkTest.java"}, "test_case": {"identifier": "testGetQaLinks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetQaLinks() throws Exception {\n        QaListLink qaListLink = new DefQaListLink();\n        qaListLink.getQaLinks(\"http://218.94.69.68/njlt/indexDetailList.do?docType=1&taxType=all&targetPageNum=2\");\n    }", "signature": "void testGetQaLinks()", "full_signature": "@Test public void testGetQaLinks()", "class_method_signature": "DefQaListLinkTest.testGetQaLinks()", "testcase": true, "constructor": false, "invocations": ["getQaLinks"]}, "focal_class": {"identifier": "DefQaListLink", "superclass": "", "interfaces": "implements QaListLink, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -1308763765184468733L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1308763765184468733L", "var_name": "serialVersionUID"}, {"original_string": "private static final Logger logger = Logger.getLogger(\"DefQaListLink\");", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(\"DefQaListLink\")", "var_name": "logger"}, {"original_string": "private static final String NANGJING_QA_LINK_RULE = \"viewDetail.do?docType=\";", "modifier": "private static final", "type": "String", "declarator": "NANGJING_QA_LINK_RULE = \"viewDetail.do?docType=\"", "var_name": "NANGJING_QA_LINK_RULE"}], "methods": [{"identifier": "getQaLinks", "parameters": "(String listUrl)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getQaLinks(String listUrl)", "full_signature": "@Override public List<String> getQaLinks(String listUrl)", "class_method_signature": "DefQaListLink.getQaLinks(String listUrl)", "testcase": false, "constructor": false}], "file": "nanjing12336/src/main/java/org/mumu/swoop/analysis/def/DefQaListLink.java"}, "focal_method": {"identifier": "getQaLinks", "parameters": "(String listUrl)", "modifiers": "@Override public", "return": "List<String>", "body": "@Override\n    public List<String> getQaLinks(String listUrl) {\n        logger.info(\"\u67e5\u8be2\uff1a\" + listUrl);\n        Set<String> urlLinks = new HashSet<String>();\n        Document doc = HtmlDocumentUtil.urlToDocument(listUrl);\n        if (HtmlDocumentUtil.validateDocument(doc)) {\n            Elements links = doc.select(\"a[href]\");\n            String parseUrl;\n            try {\n                for (Element link : links) {\n                    parseUrl = link.attr(\"abs:href\").trim();\n                    if(StringUtils.isEmpty(parseUrl))\n                        continue;\n                    if (parseUrl.contains(NANGJING_QA_LINK_RULE)) {\n                        urlLinks.add(parseUrl);\n                    }\n                }\n            } catch (PatternSyntaxException e) {\n                return new ArrayList<String>(urlLinks);\n            }\n\n        }\n        return new ArrayList<String>(urlLinks);\n    }", "signature": "List<String> getQaLinks(String listUrl)", "full_signature": "@Override public List<String> getQaLinks(String listUrl)", "class_method_signature": "DefQaListLink.getQaLinks(String listUrl)", "testcase": false, "constructor": false, "invocations": ["info", "urlToDocument", "validateDocument", "select", "trim", "attr", "isEmpty", "contains", "add"]}, "repository": {"repo_id": 2480222, "url": "https://github.com/fitzyyf/plum-sample", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 468, "license": "licensed"}}