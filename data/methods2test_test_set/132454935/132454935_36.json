{"test_class": {"identifier": "AppContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "AppContext context;", "modifier": "", "type": "AppContext", "declarator": "context", "var_name": "context"}], "file": "elrond-core/src/test/java/network/elrond/application/AppContextTest.java"}, "test_case": {"identifier": "testSetNodeNameWithNull", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testSetNodeNameWithNull(){\n        context.setNodeName(\"\");\n    }", "signature": "void testSetNodeNameWithNull()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testSetNodeNameWithNull()", "class_method_signature": "AppContextTest.testSetNodeNameWithNull()", "testcase": true, "constructor": false, "invocations": ["setNodeName"]}, "focal_class": {"identifier": "AppContext", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private String nodeName;", "modifier": "private", "type": "String", "declarator": "nodeName", "var_name": "nodeName"}, {"original_string": "private Integer port;", "modifier": "private", "type": "Integer", "declarator": "port", "var_name": "port"}, {"original_string": "private String masterPeerIpAddress;", "modifier": "private", "type": "String", "declarator": "masterPeerIpAddress", "var_name": "masterPeerIpAddress"}, {"original_string": "private Integer masterPeerPort;", "modifier": "private", "type": "Integer", "declarator": "masterPeerPort", "var_name": "masterPeerPort"}, {"original_string": "private String storageBasePath = \"main\";", "modifier": "private", "type": "String", "declarator": "storageBasePath = \"main\"", "var_name": "storageBasePath"}, {"original_string": "private PrivateKey privateKey;", "modifier": "private", "type": "PrivateKey", "declarator": "privateKey", "var_name": "privateKey"}, {"original_string": "private String strAddressMint = \"000000000000000000000000000000000000000000000000000000000000000000\";", "modifier": "private", "type": "String", "declarator": "strAddressMint = \"000000000000000000000000000000000000000000000000000000000000000000\"", "var_name": "strAddressMint"}, {"original_string": "private BootstrapType bootstrapType = BootstrapType.REBUILD_FROM_DISK;", "modifier": "private", "type": "BootstrapType", "declarator": "bootstrapType = BootstrapType.REBUILD_FROM_DISK", "var_name": "bootstrapType"}, {"original_string": "private List<String> listNTPServers = Arrays.asList(\"time.google.com\", \"pool.ntp.org\", \"time.windows.com\");", "modifier": "private", "type": "List<String>", "declarator": "listNTPServers = Arrays.asList(\"time.google.com\", \"pool.ntp.org\", \"time.windows.com\")", "var_name": "listNTPServers"}], "methods": [{"identifier": "getNodeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNodeName()", "full_signature": "public String getNodeName()", "class_method_signature": "AppContext.getNodeName()", "testcase": false, "constructor": false}, {"identifier": "setNodeName", "parameters": "(String nodeName)", "modifiers": "public", "return": "void", "signature": "void setNodeName(String nodeName)", "full_signature": "public void setNodeName(String nodeName)", "class_method_signature": "AppContext.setNodeName(String nodeName)", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getPort()", "full_signature": "public Integer getPort()", "class_method_signature": "AppContext.getPort()", "testcase": false, "constructor": false}, {"identifier": "setPort", "parameters": "(Integer port)", "modifiers": "public", "return": "void", "signature": "void setPort(Integer port)", "full_signature": "public void setPort(Integer port)", "class_method_signature": "AppContext.setPort(Integer port)", "testcase": false, "constructor": false}, {"identifier": "getMasterPeerIpAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMasterPeerIpAddress()", "full_signature": "public String getMasterPeerIpAddress()", "class_method_signature": "AppContext.getMasterPeerIpAddress()", "testcase": false, "constructor": false}, {"identifier": "setMasterPeerIpAddress", "parameters": "(String masterPeerIpAddress)", "modifiers": "public", "return": "void", "signature": "void setMasterPeerIpAddress(String masterPeerIpAddress)", "full_signature": "public void setMasterPeerIpAddress(String masterPeerIpAddress)", "class_method_signature": "AppContext.setMasterPeerIpAddress(String masterPeerIpAddress)", "testcase": false, "constructor": false}, {"identifier": "getMasterPeerPort", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getMasterPeerPort()", "full_signature": "public Integer getMasterPeerPort()", "class_method_signature": "AppContext.getMasterPeerPort()", "testcase": false, "constructor": false}, {"identifier": "setMasterPeerPort", "parameters": "(Integer masterPeerPort)", "modifiers": "public", "return": "void", "signature": "void setMasterPeerPort(Integer masterPeerPort)", "full_signature": "public void setMasterPeerPort(Integer masterPeerPort)", "class_method_signature": "AppContext.setMasterPeerPort(Integer masterPeerPort)", "testcase": false, "constructor": false}, {"identifier": "getStorageBasePath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStorageBasePath()", "full_signature": "public String getStorageBasePath()", "class_method_signature": "AppContext.getStorageBasePath()", "testcase": false, "constructor": false}, {"identifier": "setStorageBasePath", "parameters": "(String storageBasePath)", "modifiers": "public", "return": "void", "signature": "void setStorageBasePath(String storageBasePath)", "full_signature": "public void setStorageBasePath(String storageBasePath)", "class_method_signature": "AppContext.setStorageBasePath(String storageBasePath)", "testcase": false, "constructor": false}, {"identifier": "getBootstrapType", "parameters": "()", "modifiers": "public", "return": "BootstrapType", "signature": "BootstrapType getBootstrapType()", "full_signature": "public BootstrapType getBootstrapType()", "class_method_signature": "AppContext.getBootstrapType()", "testcase": false, "constructor": false}, {"identifier": "setBootstrapType", "parameters": "(BootstrapType bootstrapType)", "modifiers": "public", "return": "void", "signature": "void setBootstrapType(BootstrapType bootstrapType)", "full_signature": "public void setBootstrapType(BootstrapType bootstrapType)", "class_method_signature": "AppContext.setBootstrapType(BootstrapType bootstrapType)", "testcase": false, "constructor": false}, {"identifier": "getStrAddressMint", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStrAddressMint()", "full_signature": "public String getStrAddressMint()", "class_method_signature": "AppContext.getStrAddressMint()", "testcase": false, "constructor": false}, {"identifier": "setStrAddressMint", "parameters": "(String strAddressMint)", "modifiers": "public", "return": "void", "signature": "void setStrAddressMint(String strAddressMint)", "full_signature": "public void setStrAddressMint(String strAddressMint)", "class_method_signature": "AppContext.setStrAddressMint(String strAddressMint)", "testcase": false, "constructor": false}, {"identifier": "getValueMint", "parameters": "()", "modifiers": "public", "return": "BigInteger", "signature": "BigInteger getValueMint()", "full_signature": "public BigInteger getValueMint()", "class_method_signature": "AppContext.getValueMint()", "testcase": false, "constructor": false}, {"identifier": "setPrivateKey", "parameters": "(PrivateKey privateKey)", "modifiers": "public", "return": "void", "signature": "void setPrivateKey(PrivateKey privateKey)", "full_signature": "public void setPrivateKey(PrivateKey privateKey)", "class_method_signature": "AppContext.setPrivateKey(PrivateKey privateKey)", "testcase": false, "constructor": false}, {"identifier": "getPrivateKey", "parameters": "()", "modifiers": "public", "return": "PrivateKey", "signature": "PrivateKey getPrivateKey()", "full_signature": "public PrivateKey getPrivateKey()", "class_method_signature": "AppContext.getPrivateKey()", "testcase": false, "constructor": false}, {"identifier": "getListNTPServers", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getListNTPServers()", "full_signature": "public List<String> getListNTPServers()", "class_method_signature": "AppContext.getListNTPServers()", "testcase": false, "constructor": false}], "file": "elrond-core/src/main/java/network/elrond/application/AppContext.java"}, "focal_method": {"identifier": "setNodeName", "parameters": "(String nodeName)", "modifiers": "public", "return": "void", "body": "public void setNodeName(String nodeName) {\n        Util.check(!(nodeName==null || nodeName.isEmpty()), \"nodeName!=null\");\n        this.nodeName = nodeName;\n    }", "signature": "void setNodeName(String nodeName)", "full_signature": "public void setNodeName(String nodeName)", "class_method_signature": "AppContext.setNodeName(String nodeName)", "testcase": false, "constructor": false, "invocations": ["check", "isEmpty"]}, "repository": {"repo_id": 132454935, "url": "https://github.com/ElrondNetwork/elrond-node-prototype", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 16635, "license": "licensed"}}