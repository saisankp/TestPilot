{"test_class": {"identifier": "BaseProcessInstanceManagementResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String PROCESS_ID = \"processId\";", "modifier": "public static final", "type": "String", "declarator": "PROCESS_ID = \"processId\"", "var_name": "PROCESS_ID"}, {"original_string": "public static final String PROCESS_INSTANCE_ID = \"processInstanceId\";", "modifier": "public static final", "type": "String", "declarator": "PROCESS_INSTANCE_ID = \"processInstanceId\"", "var_name": "PROCESS_INSTANCE_ID"}, {"original_string": "public static final String NODE_ID_ERROR = \"processInstanceIdError\";", "modifier": "public static final", "type": "String", "declarator": "NODE_ID_ERROR = \"processInstanceIdError\"", "var_name": "NODE_ID_ERROR"}, {"original_string": "public static final String NODE_ID = \"nodeId\";", "modifier": "public static final", "type": "String", "declarator": "NODE_ID = \"nodeId\"", "var_name": "NODE_ID"}, {"original_string": "public static final String NODE_INSTANCE_ID = \"nodeInstanceId\";", "modifier": "public static final", "type": "String", "declarator": "NODE_INSTANCE_ID = \"nodeInstanceId\"", "var_name": "NODE_INSTANCE_ID"}, {"original_string": "public static final String NODE_UNIQUE_ID = \"nodeUniqueId\";", "modifier": "public static final", "type": "String", "declarator": "NODE_UNIQUE_ID = \"nodeUniqueId\"", "var_name": "NODE_UNIQUE_ID"}, {"original_string": "private BaseProcessInstanceManagementResource tested;", "modifier": "private", "type": "BaseProcessInstanceManagementResource", "declarator": "tested", "var_name": "tested"}, {"original_string": "@Mock\n    private Processes processes;", "modifier": "@Mock\n    private", "type": "Processes", "declarator": "processes", "var_name": "processes"}, {"original_string": "@Mock\n    private Application application;", "modifier": "@Mock\n    private", "type": "Application", "declarator": "application", "var_name": "application"}, {"original_string": "@Mock\n    private ProcessInstance processInstance;", "modifier": "@Mock\n    private", "type": "ProcessInstance", "declarator": "processInstance", "var_name": "processInstance"}, {"original_string": "@Mock\n    private ProcessError error;", "modifier": "@Mock\n    private", "type": "ProcessError", "declarator": "error", "var_name": "error"}, {"original_string": "@Mock\n    private ProcessInstances instances;", "modifier": "@Mock\n    private", "type": "ProcessInstances", "declarator": "instances", "var_name": "instances"}, {"original_string": "@Mock\n    private AbstractProcess process;", "modifier": "@Mock\n    private", "type": "AbstractProcess", "declarator": "process", "var_name": "process"}, {"original_string": "@Mock\n    private WorkflowProcess wp;", "modifier": "@Mock\n    private", "type": "WorkflowProcess", "declarator": "wp", "var_name": "wp"}, {"original_string": "@Mock\n    private Node node;", "modifier": "@Mock\n    private", "type": "Node", "declarator": "node", "var_name": "node"}, {"original_string": "@Mock\n    private Object variables;", "modifier": "@Mock\n    private", "type": "Object", "declarator": "variables", "var_name": "variables"}], "file": "addons/process-management/process-management-common/src/test/java/org/kie/kogito/process/management/BaseProcessInstanceManagementResourceTest.java"}, "test_case": {"identifier": "testDoTriggerNodeInstanceId", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testDoTriggerNodeInstanceId() {\n        mockProcessInstanceStatusActive().triggerNode(NODE_ID);\n        Object response = tested.doTriggerNodeInstanceId(PROCESS_ID, PROCESS_INSTANCE_ID, NODE_ID);\n        verify(processInstance, times(0)).error();\n        verify(processInstance, times(1)).triggerNode(NODE_ID);\n        assertResultOk(response);\n    }", "signature": "void testDoTriggerNodeInstanceId()", "full_signature": "@Test void testDoTriggerNodeInstanceId()", "class_method_signature": "BaseProcessInstanceManagementResourceTest.testDoTriggerNodeInstanceId()", "testcase": true, "constructor": false, "invocations": ["triggerNode", "mockProcessInstanceStatusActive", "doTriggerNodeInstanceId", "error", "verify", "times", "triggerNode", "verify", "times", "assertResultOk"]}, "focal_class": {"identifier": "BaseProcessInstanceManagementResource", "superclass": "", "interfaces": "implements ProcessInstanceManagement<T>", "fields": [{"original_string": "private static final String PROCESS_REQUIRED = \"Process id must be given\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_REQUIRED = \"Process id must be given\"", "var_name": "PROCESS_REQUIRED"}, {"original_string": "private static final String PROCESS_AND_INSTANCE_REQUIRED = \"Process id and Process instance id must be given\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_AND_INSTANCE_REQUIRED = \"Process id and Process instance id must be given\"", "var_name": "PROCESS_AND_INSTANCE_REQUIRED"}, {"original_string": "private static final String PROCESS_NOT_FOUND = \"Process with id %s not found\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_NOT_FOUND = \"Process with id %s not found\"", "var_name": "PROCESS_NOT_FOUND"}, {"original_string": "private static final String PROCESS_INSTANCE_NOT_FOUND = \"Process instance with id %s not found\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_INSTANCE_NOT_FOUND = \"Process instance with id %s not found\"", "var_name": "PROCESS_INSTANCE_NOT_FOUND"}, {"original_string": "private static final String PROCESS_INSTANCE_NOT_IN_ERROR = \"Process instance with id %s is not in error state\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_INSTANCE_NOT_IN_ERROR = \"Process instance with id %s is not in error state\"", "var_name": "PROCESS_INSTANCE_NOT_IN_ERROR"}, {"original_string": "private Processes processes;", "modifier": "private", "type": "Processes", "declarator": "processes", "var_name": "processes"}, {"original_string": "private Application application;", "modifier": "private", "type": "Application", "declarator": "application", "var_name": "application"}], "methods": [{"identifier": "BaseProcessInstanceManagementResource", "parameters": "(Processes processes, Application application)", "modifiers": "public", "return": "", "signature": " BaseProcessInstanceManagementResource(Processes processes, Application application)", "full_signature": "public  BaseProcessInstanceManagementResource(Processes processes, Application application)", "class_method_signature": "BaseProcessInstanceManagementResource.BaseProcessInstanceManagementResource(Processes processes, Application application)", "testcase": false, "constructor": true}, {"identifier": "doGetProcessNodes", "parameters": "(String processId)", "modifiers": "public", "return": "T", "signature": "T doGetProcessNodes(String processId)", "full_signature": "public T doGetProcessNodes(String processId)", "class_method_signature": "BaseProcessInstanceManagementResource.doGetProcessNodes(String processId)", "testcase": false, "constructor": false}, {"identifier": "doGetInstanceInError", "parameters": "(String processId, String processInstanceId)", "modifiers": "public", "return": "T", "signature": "T doGetInstanceInError(String processId, String processInstanceId)", "full_signature": "public T doGetInstanceInError(String processId, String processInstanceId)", "class_method_signature": "BaseProcessInstanceManagementResource.doGetInstanceInError(String processId, String processInstanceId)", "testcase": false, "constructor": false}, {"identifier": "doGetWorkItemsInProcessInstance", "parameters": "(String processId, String processInstanceId)", "modifiers": "public", "return": "T", "signature": "T doGetWorkItemsInProcessInstance(String processId, String processInstanceId)", "full_signature": "public T doGetWorkItemsInProcessInstance(String processId, String processInstanceId)", "class_method_signature": "BaseProcessInstanceManagementResource.doGetWorkItemsInProcessInstance(String processId, String processInstanceId)", "testcase": false, "constructor": false}, {"identifier": "doRetriggerInstanceInError", "parameters": "(String processId, String processInstanceId)", "modifiers": "public", "return": "T", "signature": "T doRetriggerInstanceInError(String processId, String processInstanceId)", "full_signature": "public T doRetriggerInstanceInError(String processId, String processInstanceId)", "class_method_signature": "BaseProcessInstanceManagementResource.doRetriggerInstanceInError(String processId, String processInstanceId)", "testcase": false, "constructor": false}, {"identifier": "doSkipInstanceInError", "parameters": "(String processId, String processInstanceId)", "modifiers": "public", "return": "T", "signature": "T doSkipInstanceInError(String processId, String processInstanceId)", "full_signature": "public T doSkipInstanceInError(String processId, String processInstanceId)", "class_method_signature": "BaseProcessInstanceManagementResource.doSkipInstanceInError(String processId, String processInstanceId)", "testcase": false, "constructor": false}, {"identifier": "doTriggerNodeInstanceId", "parameters": "(String processId, String processInstanceId, String nodeId)", "modifiers": "public", "return": "T", "signature": "T doTriggerNodeInstanceId(String processId, String processInstanceId, String nodeId)", "full_signature": "public T doTriggerNodeInstanceId(String processId, String processInstanceId, String nodeId)", "class_method_signature": "BaseProcessInstanceManagementResource.doTriggerNodeInstanceId(String processId, String processInstanceId, String nodeId)", "testcase": false, "constructor": false}, {"identifier": "doRetriggerNodeInstanceId", "parameters": "(String processId, String processInstanceId, String nodeInstanceId)", "modifiers": "public", "return": "T", "signature": "T doRetriggerNodeInstanceId(String processId, String processInstanceId, String nodeInstanceId)", "full_signature": "public T doRetriggerNodeInstanceId(String processId, String processInstanceId, String nodeInstanceId)", "class_method_signature": "BaseProcessInstanceManagementResource.doRetriggerNodeInstanceId(String processId, String processInstanceId, String nodeInstanceId)", "testcase": false, "constructor": false}, {"identifier": "doCancelNodeInstanceId", "parameters": "(String processId, String processInstanceId, String nodeInstanceId)", "modifiers": "public", "return": "T", "signature": "T doCancelNodeInstanceId(String processId, String processInstanceId, String nodeInstanceId)", "full_signature": "public T doCancelNodeInstanceId(String processId, String processInstanceId, String nodeInstanceId)", "class_method_signature": "BaseProcessInstanceManagementResource.doCancelNodeInstanceId(String processId, String processInstanceId, String nodeInstanceId)", "testcase": false, "constructor": false}, {"identifier": "doCancelProcessInstanceId", "parameters": "(String processId, String processInstanceId)", "modifiers": "public", "return": "T", "signature": "T doCancelProcessInstanceId(String processId, String processInstanceId)", "full_signature": "public T doCancelProcessInstanceId(String processId, String processInstanceId)", "class_method_signature": "BaseProcessInstanceManagementResource.doCancelProcessInstanceId(String processId, String processInstanceId)", "testcase": false, "constructor": false}, {"identifier": "executeOnInstanceInError", "parameters": "(String processId, String processInstanceId, Function<ProcessInstance<?>, T> supplier)", "modifiers": "private", "return": "T", "signature": "T executeOnInstanceInError(String processId, String processInstanceId, Function<ProcessInstance<?>, T> supplier)", "full_signature": "private T executeOnInstanceInError(String processId, String processInstanceId, Function<ProcessInstance<?>, T> supplier)", "class_method_signature": "BaseProcessInstanceManagementResource.executeOnInstanceInError(String processId, String processInstanceId, Function<ProcessInstance<?>, T> supplier)", "testcase": false, "constructor": false}, {"identifier": "executeOnProcessInstance", "parameters": "(String processId, String processInstanceId, Function<ProcessInstance<?>, T> supplier)", "modifiers": "private", "return": "T", "signature": "T executeOnProcessInstance(String processId, String processInstanceId, Function<ProcessInstance<?>, T> supplier)", "full_signature": "private T executeOnProcessInstance(String processId, String processInstanceId, Function<ProcessInstance<?>, T> supplier)", "class_method_signature": "BaseProcessInstanceManagementResource.executeOnProcessInstance(String processId, String processInstanceId, Function<ProcessInstance<?>, T> supplier)", "testcase": false, "constructor": false}, {"identifier": "executeOnProcess", "parameters": "(String processId, Function<Process<?>, T> supplier)", "modifiers": "private", "return": "T", "signature": "T executeOnProcess(String processId, Function<Process<?>, T> supplier)", "full_signature": "private T executeOnProcess(String processId, Function<Process<?>, T> supplier)", "class_method_signature": "BaseProcessInstanceManagementResource.executeOnProcess(String processId, Function<Process<?>, T> supplier)", "testcase": false, "constructor": false}, {"identifier": "buildOkResponse", "parameters": "(R body)", "modifiers": "protected abstract", "return": "T", "signature": "T buildOkResponse(R body)", "full_signature": "protected abstract T buildOkResponse(R body)", "class_method_signature": "BaseProcessInstanceManagementResource.buildOkResponse(R body)", "testcase": false, "constructor": false}, {"identifier": "badRequestResponse", "parameters": "(String message)", "modifiers": "protected abstract", "return": "T", "signature": "T badRequestResponse(String message)", "full_signature": "protected abstract T badRequestResponse(String message)", "class_method_signature": "BaseProcessInstanceManagementResource.badRequestResponse(String message)", "testcase": false, "constructor": false}, {"identifier": "notFoundResponse", "parameters": "(String message)", "modifiers": "protected abstract", "return": "T", "signature": "T notFoundResponse(String message)", "full_signature": "protected abstract T notFoundResponse(String message)", "class_method_signature": "BaseProcessInstanceManagementResource.notFoundResponse(String message)", "testcase": false, "constructor": false}], "file": "addons/process-management/process-management-common/src/main/java/org/kie/kogito/process/management/BaseProcessInstanceManagementResource.java"}, "focal_method": {"identifier": "doTriggerNodeInstanceId", "parameters": "(String processId, String processInstanceId, String nodeId)", "modifiers": "public", "return": "T", "body": "public T doTriggerNodeInstanceId(String processId, String processInstanceId, String nodeId) {\n\n        return executeOnProcessInstance(processId, processInstanceId, processInstance -> {\n            processInstance.triggerNode(nodeId);\n\n            if (processInstance.status() == ProcessInstance.STATE_ERROR) {\n                throw new ProcessInstanceExecutionException(processInstance.id(), processInstance.error().get().failedNodeId(), processInstance.error().get().errorMessage());\n            } else {\n                return buildOkResponse(processInstance.variables());\n            }\n        });\n    }", "signature": "T doTriggerNodeInstanceId(String processId, String processInstanceId, String nodeId)", "full_signature": "public T doTriggerNodeInstanceId(String processId, String processInstanceId, String nodeId)", "class_method_signature": "BaseProcessInstanceManagementResource.doTriggerNodeInstanceId(String processId, String processInstanceId, String nodeId)", "testcase": false, "constructor": false, "invocations": ["executeOnProcessInstance", "triggerNode", "status", "id", "failedNodeId", "get", "error", "errorMessage", "get", "error", "buildOkResponse", "variables"]}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}