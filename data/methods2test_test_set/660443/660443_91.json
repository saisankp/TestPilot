{"test_class": {"identifier": "ExtendedAtomGeneratorTest", "superclass": "extends BasicAtomGeneratorTest", "interfaces": "", "fields": [{"original_string": "private ExtendedAtomGenerator generator;", "modifier": "private", "type": "ExtendedAtomGenerator", "declarator": "generator", "var_name": "generator"}], "file": "display/renderextra/src/test/java/org/openscience/cdk/renderer/generators/ExtendedAtomGeneratorTest.java"}, "test_case": {"identifier": "getParametersTest", "parameters": "()", "modifiers": "@Test @Override public", "return": "void", "body": "@Test\n    @Override\n    public void getParametersTest() {\n        List<IGeneratorParameter<?>> parameters = generator.getParameters();\n        containsParameterType(parameters, AtomColor.class);\n        containsParameterType(parameters, AtomColorer.class);\n        containsParameterType(parameters, AtomRadius.class);\n        containsParameterType(parameters, ColorByType.class);\n        containsParameterType(parameters, CompactShape.class);\n        containsParameterType(parameters, CompactAtom.class);\n        containsParameterType(parameters, KekuleStructure.class);\n        containsParameterType(parameters, ShowEndCarbons.class);\n        containsParameterType(parameters, ShowExplicitHydrogens.class);\n    }", "signature": "void getParametersTest()", "full_signature": "@Test @Override public void getParametersTest()", "class_method_signature": "ExtendedAtomGeneratorTest.getParametersTest()", "testcase": true, "constructor": false, "invocations": ["getParameters", "containsParameterType", "containsParameterType", "containsParameterType", "containsParameterType", "containsParameterType", "containsParameterType", "containsParameterType", "containsParameterType", "containsParameterType"]}, "focal_class": {"identifier": "ExtendedAtomGenerator", "superclass": "extends BasicAtomGenerator", "interfaces": "", "fields": [{"original_string": "private IGeneratorParameter<Boolean> showImplicitHydrogens = new ShowImplicitHydrogens();", "modifier": "private", "type": "IGeneratorParameter<Boolean>", "declarator": "showImplicitHydrogens = new ShowImplicitHydrogens()", "var_name": "showImplicitHydrogens"}, {"original_string": "private ShowAtomTypeNames showAtomTypeNames = new ShowAtomTypeNames();", "modifier": "private", "type": "ShowAtomTypeNames", "declarator": "showAtomTypeNames = new ShowAtomTypeNames()", "var_name": "showAtomTypeNames"}], "methods": [{"identifier": "generate", "parameters": "(IAtomContainer container, IAtom atom, RendererModel model)", "modifiers": "@Override public", "return": "IRenderingElement", "signature": "IRenderingElement generate(IAtomContainer container, IAtom atom, RendererModel model)", "full_signature": "@Override public IRenderingElement generate(IAtomContainer container, IAtom atom, RendererModel model)", "class_method_signature": "ExtendedAtomGenerator.generate(IAtomContainer container, IAtom atom, RendererModel model)", "testcase": false, "constructor": false}, {"identifier": "decorate", "parameters": "(TextGroupElement textGroup, IAtomContainer container, IAtom atom, RendererModel model)", "modifiers": "private", "return": "void", "signature": "void decorate(TextGroupElement textGroup, IAtomContainer container, IAtom atom, RendererModel model)", "full_signature": "private void decorate(TextGroupElement textGroup, IAtomContainer container, IAtom atom, RendererModel model)", "class_method_signature": "ExtendedAtomGenerator.decorate(TextGroupElement textGroup, IAtomContainer container, IAtom atom, RendererModel model)", "testcase": false, "constructor": false}, {"identifier": "getNextPosition", "parameters": "(Stack<Position> unused)", "modifiers": "private", "return": "Position", "signature": "Position getNextPosition(Stack<Position> unused)", "full_signature": "private Position getNextPosition(Stack<Position> unused)", "class_method_signature": "ExtendedAtomGenerator.getNextPosition(Stack<Position> unused)", "testcase": false, "constructor": false}, {"identifier": "getUnusedPositions", "parameters": "(IAtomContainer container, IAtom atom)", "modifiers": "private", "return": "Stack<Position>", "signature": "Stack<Position> getUnusedPositions(IAtomContainer container, IAtom atom)", "full_signature": "private Stack<Position> getUnusedPositions(IAtomContainer container, IAtom atom)", "class_method_signature": "ExtendedAtomGenerator.getUnusedPositions(IAtomContainer container, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getPosition", "parameters": "(IAtom atom, IAtom connectedAtom)", "modifiers": "private", "return": "Position", "signature": "Position getPosition(IAtom atom, IAtom connectedAtom)", "full_signature": "private Position getPosition(IAtom atom, IAtom connectedAtom)", "class_method_signature": "ExtendedAtomGenerator.getPosition(IAtom atom, IAtom connectedAtom)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "List<IGeneratorParameter<?>>", "signature": "List<IGeneratorParameter<?>> getParameters()", "full_signature": "@Override public List<IGeneratorParameter<?>> getParameters()", "class_method_signature": "ExtendedAtomGenerator.getParameters()", "testcase": false, "constructor": false}], "file": "display/renderextra/src/main/java/org/openscience/cdk/renderer/generators/ExtendedAtomGenerator.java"}, "focal_method": {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "List<IGeneratorParameter<?>>", "body": "@Override\n    public List<IGeneratorParameter<?>> getParameters() {\n        List<IGeneratorParameter<?>> parameters = new ArrayList<IGeneratorParameter<?>>();\n        parameters.add(showImplicitHydrogens);\n        parameters.add(showAtomTypeNames);\n        parameters.addAll(super.getParameters());\n        return parameters;\n    }", "signature": "List<IGeneratorParameter<?>> getParameters()", "full_signature": "@Override public List<IGeneratorParameter<?>> getParameters()", "class_method_signature": "ExtendedAtomGenerator.getParameters()", "testcase": false, "constructor": false, "invocations": ["add", "add", "addAll", "getParameters"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}