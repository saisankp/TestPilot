{"test_class": {"identifier": "VersionInfoLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "Plan/common/src/test/java/com/djrapitops/plan/version/VersionInfoLoaderTest.java"}, "test_case": {"identifier": "versionLoaderTest", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void versionLoaderTest() throws IOException {\n        List<VersionInfo> versions = VersionInfoLoader.load();\n\n        VersionInfo oldest = versions.get(versions.size() - 1);\n        assertEquals(new Version(\"4.1.7\"), oldest.getVersion());\n        assertTrue(oldest.isRelease());\n    }", "signature": "void versionLoaderTest()", "full_signature": "@Test void versionLoaderTest()", "class_method_signature": "VersionInfoLoaderTest.versionLoaderTest()", "testcase": true, "constructor": false, "invocations": ["load", "get", "size", "assertEquals", "getVersion", "assertTrue", "isRelease"]}, "focal_class": {"identifier": "VersionInfoLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String VERSION_TXT_URL =\n            \"https://raw.githubusercontent.com/Rsl1122/Plan-PlayerAnalytics/master/versions.txt\";", "modifier": "private static final", "type": "String", "declarator": "VERSION_TXT_URL =\n            \"https://raw.githubusercontent.com/Rsl1122/Plan-PlayerAnalytics/master/versions.txt\"", "var_name": "VERSION_TXT_URL"}], "methods": [{"identifier": "VersionInfoLoader", "parameters": "()", "modifiers": "private", "return": "", "signature": " VersionInfoLoader()", "full_signature": "private  VersionInfoLoader()", "class_method_signature": "VersionInfoLoader.VersionInfoLoader()", "testcase": false, "constructor": true}, {"identifier": "load", "parameters": "()", "modifiers": "public static", "return": "List<VersionInfo>", "signature": "List<VersionInfo> load()", "full_signature": "public static List<VersionInfo> load()", "class_method_signature": "VersionInfoLoader.load()", "testcase": false, "constructor": false}, {"identifier": "checkLine", "parameters": "(Scanner websiteScanner)", "modifiers": "private static", "return": "Optional<String[]>", "signature": "Optional<String[]> checkLine(Scanner websiteScanner)", "full_signature": "private static Optional<String[]> checkLine(Scanner websiteScanner)", "class_method_signature": "VersionInfoLoader.checkLine(Scanner websiteScanner)", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/version/VersionInfoLoader.java"}, "focal_method": {"identifier": "load", "parameters": "()", "modifiers": "public static", "return": "List<VersionInfo>", "body": "public static List<VersionInfo> load() throws IOException {\n        URL url = new URL(VERSION_TXT_URL);\n\n        List<VersionInfo> versionInfo = new ArrayList<>();\n\n        try (Scanner websiteScanner = new Scanner(url.openStream())) {\n            while (websiteScanner.hasNextLine()) {\n                checkLine(websiteScanner).ifPresent(lineParts -> {\n                    boolean release = lineParts[0].equals(\"REL\");\n                    Version version = new Version(lineParts[1]);\n                    String downloadUrl = lineParts[2];\n                    String changeLogUrl = lineParts[3];\n\n                    versionInfo.add(new VersionInfo(release, version, downloadUrl, changeLogUrl));\n                });\n            }\n        }\n\n        Collections.sort(versionInfo);\n        return versionInfo;\n    }", "signature": "List<VersionInfo> load()", "full_signature": "public static List<VersionInfo> load()", "class_method_signature": "VersionInfoLoader.load()", "testcase": false, "constructor": false, "invocations": ["openStream", "hasNextLine", "ifPresent", "checkLine", "equals", "add", "sort"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}