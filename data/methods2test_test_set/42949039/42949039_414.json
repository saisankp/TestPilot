{"test_class": {"identifier": "UserNamespaceAuthorizationChangeMessageBuilderTest", "superclass": "extends AbstractNotificationMessageBuilderTestHelper", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private UserNamespaceAuthorizationChangeMessageBuilder userNamespaceAuthorizationChangeMessageBuilder;", "modifier": "@Autowired\n    private", "type": "UserNamespaceAuthorizationChangeMessageBuilder", "declarator": "userNamespaceAuthorizationChangeMessageBuilder", "var_name": "userNamespaceAuthorizationChangeMessageBuilder"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/notification/UserNamespaceAuthorizationChangeMessageBuilderTest.java"}, "test_case": {"identifier": "testgetUserNamespaceAuthorizationChangeMessageVelocityContextMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testgetUserNamespaceAuthorizationChangeMessageVelocityContextMap()\n    {\n        // Create a user namespace authorization key with values that require JSON and XML escaping.\n        UserNamespaceAuthorizationKey userNamespaceAuthorizationKey =\n            new UserNamespaceAuthorizationKey(USER_ID + SUFFIX_UNESCAPED, BDEF_NAMESPACE + SUFFIX_UNESCAPED);\n\n        // Call the method under test.\n        Map<String, Object> result = userNamespaceAuthorizationChangeMessageBuilder\n            .getNotificationMessageVelocityContextMap(new UserNamespaceAuthorizationChangeNotificationEvent(userNamespaceAuthorizationKey));\n\n        // Create an expected JSON escaped user namespace authorization key.\n        UserNamespaceAuthorizationKey expectedUserNamespaceAuthorizationKeyWithJson =\n            new UserNamespaceAuthorizationKey(USER_ID + SUFFIX_ESCAPED_JSON, BDEF_NAMESPACE + SUFFIX_ESCAPED_JSON);\n\n        // Create an expected XML escaped user namespace authorization key.\n        UserNamespaceAuthorizationKey expectedUserNamespaceAuthorizationKeyWithXml =\n            new UserNamespaceAuthorizationKey(USER_ID + SUFFIX_ESCAPED_XML, BDEF_NAMESPACE + SUFFIX_ESCAPED_XML);\n\n        // Validate the results.\n        assertEquals(6, CollectionUtils.size(result));\n\n        assertEquals(userNamespaceAuthorizationKey, result.get(\"userNamespaceAuthorizationKey\"));\n        assertEquals(expectedUserNamespaceAuthorizationKeyWithJson, result.get(\"userNamespaceAuthorizationKeyWithJson\"));\n        assertEquals(expectedUserNamespaceAuthorizationKeyWithXml, result.get(\"userNamespaceAuthorizationKeyWithXml\"));\n\n        assertEquals(BDEF_NAMESPACE + SUFFIX_UNESCAPED, result.get(\"namespace\"));\n        assertEquals(BDEF_NAMESPACE + SUFFIX_ESCAPED_JSON, result.get(\"namespaceWithJson\"));\n        assertEquals(BDEF_NAMESPACE + SUFFIX_ESCAPED_XML, result.get(\"namespaceWithXml\"));\n    }", "signature": "void testgetUserNamespaceAuthorizationChangeMessageVelocityContextMap()", "full_signature": "@Test public void testgetUserNamespaceAuthorizationChangeMessageVelocityContextMap()", "class_method_signature": "UserNamespaceAuthorizationChangeMessageBuilderTest.testgetUserNamespaceAuthorizationChangeMessageVelocityContextMap()", "testcase": true, "constructor": false, "invocations": ["getNotificationMessageVelocityContextMap", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "UserNamespaceAuthorizationChangeMessageBuilder", "superclass": "extends AbstractNotificationMessageBuilder", "interfaces": "implements NotificationMessageBuilder", "fields": [], "methods": [{"identifier": "getNotificationMessageVelocityContextMap", "parameters": "(NotificationEvent notificationEvent)", "modifiers": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The NotificationEvent is cast to a UserNamespaceAuthorizationChangeNotificationEvent which is always the case since\" + \" we manage the event type to a builder in a map defined in NotificationMessageManager\") public", "return": "Map<String, Object>", "signature": "Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "full_signature": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The NotificationEvent is cast to a UserNamespaceAuthorizationChangeNotificationEvent which is always the case since\" + \" we manage the event type to a builder in a map defined in NotificationMessageManager\") public Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "class_method_signature": "UserNamespaceAuthorizationChangeMessageBuilder.getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/notification/UserNamespaceAuthorizationChangeMessageBuilder.java"}, "focal_method": {"identifier": "getNotificationMessageVelocityContextMap", "parameters": "(NotificationEvent notificationEvent)", "modifiers": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The NotificationEvent is cast to a UserNamespaceAuthorizationChangeNotificationEvent which is always the case since\" + \" we manage the event type to a builder in a map defined in NotificationMessageManager\") public", "return": "Map<String, Object>", "body": "@Override\n    @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification =\n        \"The NotificationEvent is cast to a UserNamespaceAuthorizationChangeNotificationEvent which is always the case since\" +\n            \" we manage the event type to a builder in a map defined in NotificationMessageManager\")\n    public Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)\n    {\n        UserNamespaceAuthorizationChangeNotificationEvent event = (UserNamespaceAuthorizationChangeNotificationEvent) notificationEvent;\n\n        Map<String, Object> velocityContextMap = new HashMap<>();\n\n        addObjectPropertyToContext(velocityContextMap, \"userNamespaceAuthorizationKey\", event.getUserNamespaceAuthorizationKey(),\n            new UserNamespaceAuthorizationKey(escapeJson(event.getUserNamespaceAuthorizationKey().getUserId()),\n                escapeJson(event.getUserNamespaceAuthorizationKey().getNamespace())),\n            new UserNamespaceAuthorizationKey(escapeXml(event.getUserNamespaceAuthorizationKey().getUserId()),\n                escapeXml(event.getUserNamespaceAuthorizationKey().getNamespace())));\n\n        // Add the namespace Velocity property for the header.\n        addStringPropertyToContext(velocityContextMap, \"namespace\", event.getUserNamespaceAuthorizationKey().getNamespace());\n\n        return velocityContextMap;\n    }", "signature": "Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "full_signature": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The NotificationEvent is cast to a UserNamespaceAuthorizationChangeNotificationEvent which is always the case since\" + \" we manage the event type to a builder in a map defined in NotificationMessageManager\") public Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "class_method_signature": "UserNamespaceAuthorizationChangeMessageBuilder.getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "testcase": false, "constructor": false, "invocations": ["addObjectPropertyToContext", "getUserNamespaceAuthorizationKey", "escapeJson", "getUserId", "getUserNamespaceAuthorizationKey", "escapeJson", "getNamespace", "getUserNamespaceAuthorizationKey", "escapeXml", "getUserId", "getUserNamespaceAuthorizationKey", "escapeXml", "getNamespace", "getUserNamespaceAuthorizationKey", "addStringPropertyToContext", "getNamespace", "getUserNamespaceAuthorizationKey"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}