{"test_class": {"identifier": "JobClientActorTest", "superclass": "extends TestLogger", "interfaces": "", "fields": [{"original_string": "private static ActorSystem system;", "modifier": "private static", "type": "ActorSystem", "declarator": "system", "var_name": "system"}, {"original_string": "private static JobGraph testJobGraph = new JobGraph(\"Test Job\");", "modifier": "private static", "type": "JobGraph", "declarator": "testJobGraph = new JobGraph(\"Test Job\")", "var_name": "testJobGraph"}], "file": "flink-runtime/src/test/java/org/apache/flink/runtime/client/JobClientActorTest.java"}, "test_case": {"identifier": "testConnectionTimeoutAfterJobSubmission", "parameters": "()", "modifiers": "@Test(expected=JobClientActorConnectionTimeoutException.class) public", "return": "void", "body": "@Test(expected=JobClientActorConnectionTimeoutException.class)\n\tpublic void testConnectionTimeoutAfterJobSubmission() throws Exception {\n\t\tFiniteDuration jobClientActorTimeout = new FiniteDuration(5, TimeUnit.SECONDS);\n\t\tFiniteDuration timeout = jobClientActorTimeout.$times(2);\n\n\t\tUUID leaderSessionID = UUID.randomUUID();\n\n\t\tActorRef jobManager = system.actorOf(\n\t\t\tProps.create(\n\t\t\t\tJobAcceptingActor.class,\n\t\t\t\tleaderSessionID));\n\n\t\tTestingLeaderRetrievalService testingLeaderRetrievalService = new TestingLeaderRetrievalService(\n\t\t\tjobManager.path().toString(),\n\t\t\tleaderSessionID\n\t\t);\n\n\t\tProps jobClientActorProps = JobClientActor.createJobClientActorProps(\n\t\t\ttestingLeaderRetrievalService,\n\t\t\tjobClientActorTimeout,\n\t\t\tfalse);\n\n\t\tActorRef jobClientActor = system.actorOf(jobClientActorProps);\n\n\t\tFuture<Object> jobExecutionResult = Patterns.ask(\n\t\t\tjobClientActor,\n\t\t\tnew JobClientMessages.SubmitJobAndWait(testJobGraph),\n\t\t\tnew Timeout(timeout));\n\n\t\tFuture<Object> waitFuture = Patterns.ask(jobManager, new RegisterTest(), new Timeout(timeout));\n\n\t\tAwait.result(waitFuture, timeout);\n\n\t\tjobManager.tell(PoisonPill.getInstance(), ActorRef.noSender());\n\n\t\tAwait.result(jobExecutionResult, timeout);\n\t}", "signature": "void testConnectionTimeoutAfterJobSubmission()", "full_signature": "@Test(expected=JobClientActorConnectionTimeoutException.class) public void testConnectionTimeoutAfterJobSubmission()", "class_method_signature": "JobClientActorTest.testConnectionTimeoutAfterJobSubmission()", "testcase": true, "constructor": false, "invocations": ["times", "randomUUID", "actorOf", "create", "toString", "path", "createJobClientActorProps", "actorOf", "ask", "ask", "result", "tell", "getInstance", "noSender", "result"]}, "focal_class": {"identifier": "JobClientActor", "superclass": "extends FlinkUntypedActor", "interfaces": "implements LeaderRetrievalListener", "fields": [{"original_string": "private final LeaderRetrievalService leaderRetrievalService;", "modifier": "private final", "type": "LeaderRetrievalService", "declarator": "leaderRetrievalService", "var_name": "leaderRetrievalService"}, {"original_string": "private final FiniteDuration timeout;", "modifier": "private final", "type": "FiniteDuration", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "private final boolean sysoutUpdates;", "modifier": "private final", "type": "boolean", "declarator": "sysoutUpdates", "var_name": "sysoutUpdates"}, {"original_string": "private boolean jobSuccessfullySubmitted = false;", "modifier": "private", "type": "boolean", "declarator": "jobSuccessfullySubmitted = false", "var_name": "jobSuccessfullySubmitted"}, {"original_string": "private boolean terminated = false;", "modifier": "private", "type": "boolean", "declarator": "terminated = false", "var_name": "terminated"}, {"original_string": "private ActorRef jobManager;", "modifier": "private", "type": "ActorRef", "declarator": "jobManager", "var_name": "jobManager"}, {"original_string": "private UUID leaderSessionID;", "modifier": "private", "type": "UUID", "declarator": "leaderSessionID", "var_name": "leaderSessionID"}, {"original_string": "private ActorRef submitter;", "modifier": "private", "type": "ActorRef", "declarator": "submitter", "var_name": "submitter"}, {"original_string": "private JobGraph jobGraph;", "modifier": "private", "type": "JobGraph", "declarator": "jobGraph", "var_name": "jobGraph"}], "methods": [{"identifier": "JobClientActor", "parameters": "(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "modifiers": "public", "return": "", "signature": " JobClientActor(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "full_signature": "public  JobClientActor(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "class_method_signature": "JobClientActor.JobClientActor(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "testcase": false, "constructor": true}, {"identifier": "preStart", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void preStart()", "full_signature": "@Override public void preStart()", "class_method_signature": "JobClientActor.preStart()", "testcase": false, "constructor": false}, {"identifier": "postStop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void postStop()", "full_signature": "@Override public void postStop()", "class_method_signature": "JobClientActor.postStop()", "testcase": false, "constructor": false}, {"identifier": "handleMessage", "parameters": "(Object message)", "modifiers": "@Override protected", "return": "void", "signature": "void handleMessage(Object message)", "full_signature": "@Override protected void handleMessage(Object message)", "class_method_signature": "JobClientActor.handleMessage(Object message)", "testcase": false, "constructor": false}, {"identifier": "getLeaderSessionID", "parameters": "()", "modifiers": "@Override protected", "return": "UUID", "signature": "UUID getLeaderSessionID()", "full_signature": "@Override protected UUID getLeaderSessionID()", "class_method_signature": "JobClientActor.getLeaderSessionID()", "testcase": false, "constructor": false}, {"identifier": "logAndPrintMessage", "parameters": "(ExecutionGraphMessages.ExecutionStateChanged message)", "modifiers": "private", "return": "void", "signature": "void logAndPrintMessage(ExecutionGraphMessages.ExecutionStateChanged message)", "full_signature": "private void logAndPrintMessage(ExecutionGraphMessages.ExecutionStateChanged message)", "class_method_signature": "JobClientActor.logAndPrintMessage(ExecutionGraphMessages.ExecutionStateChanged message)", "testcase": false, "constructor": false}, {"identifier": "logAndPrintMessage", "parameters": "(ExecutionGraphMessages.JobStatusChanged message)", "modifiers": "private", "return": "void", "signature": "void logAndPrintMessage(ExecutionGraphMessages.JobStatusChanged message)", "full_signature": "private void logAndPrintMessage(ExecutionGraphMessages.JobStatusChanged message)", "class_method_signature": "JobClientActor.logAndPrintMessage(ExecutionGraphMessages.JobStatusChanged message)", "testcase": false, "constructor": false}, {"identifier": "notifyLeaderAddress", "parameters": "(String leaderAddress, UUID leaderSessionID)", "modifiers": "@Override public", "return": "void", "signature": "void notifyLeaderAddress(String leaderAddress, UUID leaderSessionID)", "full_signature": "@Override public void notifyLeaderAddress(String leaderAddress, UUID leaderSessionID)", "class_method_signature": "JobClientActor.notifyLeaderAddress(String leaderAddress, UUID leaderSessionID)", "testcase": false, "constructor": false}, {"identifier": "handleError", "parameters": "(Exception exception)", "modifiers": "@Override public", "return": "void", "signature": "void handleError(Exception exception)", "full_signature": "@Override public void handleError(Exception exception)", "class_method_signature": "JobClientActor.handleError(Exception exception)", "testcase": false, "constructor": false}, {"identifier": "disconnectFromJobManager", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void disconnectFromJobManager()", "full_signature": "private void disconnectFromJobManager()", "class_method_signature": "JobClientActor.disconnectFromJobManager()", "testcase": false, "constructor": false}, {"identifier": "connectToJobManager", "parameters": "(ActorRef jobManager)", "modifiers": "private", "return": "void", "signature": "void connectToJobManager(ActorRef jobManager)", "full_signature": "private void connectToJobManager(ActorRef jobManager)", "class_method_signature": "JobClientActor.connectToJobManager(ActorRef jobManager)", "testcase": false, "constructor": false}, {"identifier": "tryToSubmitJob", "parameters": "(final JobGraph jobGraph)", "modifiers": "private", "return": "void", "signature": "void tryToSubmitJob(final JobGraph jobGraph)", "full_signature": "private void tryToSubmitJob(final JobGraph jobGraph)", "class_method_signature": "JobClientActor.tryToSubmitJob(final JobGraph jobGraph)", "testcase": false, "constructor": false}, {"identifier": "terminate", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void terminate()", "full_signature": "private void terminate()", "class_method_signature": "JobClientActor.terminate()", "testcase": false, "constructor": false}, {"identifier": "isConnected", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isConnected()", "full_signature": "private boolean isConnected()", "class_method_signature": "JobClientActor.isConnected()", "testcase": false, "constructor": false}, {"identifier": "hasJobBeenSubmitted", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasJobBeenSubmitted()", "full_signature": "private boolean hasJobBeenSubmitted()", "class_method_signature": "JobClientActor.hasJobBeenSubmitted()", "testcase": false, "constructor": false}, {"identifier": "createJobClientActorProps", "parameters": "(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "modifiers": "public static", "return": "Props", "signature": "Props createJobClientActorProps(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "full_signature": "public static Props createJobClientActorProps(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "class_method_signature": "JobClientActor.createJobClientActorProps(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "testcase": false, "constructor": false}], "file": "flink-runtime/src/main/java/org/apache/flink/runtime/client/JobClientActor.java"}, "focal_method": {"identifier": "createJobClientActorProps", "parameters": "(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "modifiers": "public static", "return": "Props", "body": "public static Props createJobClientActorProps(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates) {\n\t\treturn Props.create(\n\t\t\tJobClientActor.class,\n\t\t\tleaderRetrievalService,\n\t\t\ttimeout,\n\t\t\tsysoutUpdates);\n\t}", "signature": "Props createJobClientActorProps(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "full_signature": "public static Props createJobClientActorProps(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "class_method_signature": "JobClientActor.createJobClientActorProps(\n\t\t\tLeaderRetrievalService leaderRetrievalService,\n\t\t\tFiniteDuration timeout,\n\t\t\tboolean sysoutUpdates)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}