{"test_class": {"identifier": "SparseArrayTest", "superclass": "", "interfaces": "", "fields": [], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/util/SparseArrayTest.java"}, "test_case": {"identifier": "negativeIndex", "parameters": "()", "modifiers": "@Test(expected = IndexOutOfBoundsException.class) public", "return": "void", "body": "@Test(expected = IndexOutOfBoundsException.class)\n    public void negativeIndex() {\n        new CountingSparseArray().get(-1);\n    }", "signature": "void negativeIndex()", "full_signature": "@Test(expected = IndexOutOfBoundsException.class) public void negativeIndex()", "class_method_signature": "SparseArrayTest.negativeIndex()", "testcase": true, "constructor": false, "invocations": ["get"]}, "focal_class": {"identifier": "SparseArray", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Object[] internalArray;", "modifier": "private", "type": "Object[]", "declarator": "internalArray", "var_name": "internalArray"}, {"original_string": "private BitSet definedElements;", "modifier": "private", "type": "BitSet", "declarator": "definedElements", "var_name": "definedElements"}, {"original_string": "private static final int INITIAL_SIZE = 10;", "modifier": "private static final", "type": "int", "declarator": "INITIAL_SIZE = 10", "var_name": "INITIAL_SIZE"}, {"original_string": "private static final int GROW_FACTOR = 2;", "modifier": "private static final", "type": "int", "declarator": "GROW_FACTOR = 2", "var_name": "GROW_FACTOR"}], "methods": [{"identifier": "lastDefinedIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int lastDefinedIndex()", "full_signature": "public int lastDefinedIndex()", "class_method_signature": "SparseArray.lastDefinedIndex()", "testcase": false, "constructor": false}, {"identifier": "isCompactable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCompactable()", "full_signature": "public boolean isCompactable()", "class_method_signature": "SparseArray.isCompactable()", "testcase": false, "constructor": false}, {"identifier": "toList", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") // T[] is just erased to Object[] anyway, which is what we have public", "return": "List<T>", "signature": "List<T> toList()", "full_signature": "@SuppressWarnings(\"unchecked\") // T[] is just erased to Object[] anyway, which is what we have public List<T> toList()", "class_method_signature": "SparseArray.toList()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "T", "signature": "T get(int index)", "full_signature": "public T get(int index)", "class_method_signature": "SparseArray.get(int index)", "testcase": false, "constructor": false}, {"identifier": "getIfDefined", "parameters": "(int index)", "modifiers": "public", "return": "T", "signature": "T getIfDefined(int index)", "full_signature": "public T getIfDefined(int index)", "class_method_signature": "SparseArray.getIfDefined(int index)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int index, T item)", "modifiers": "public", "return": "T", "signature": "T set(int index, T item)", "full_signature": "public T set(int index, T item)", "class_method_signature": "SparseArray.set(int index, T item)", "testcase": false, "constructor": false}, {"identifier": "isDefined", "parameters": "(int index)", "modifiers": "public", "return": "boolean", "signature": "boolean isDefined(int index)", "full_signature": "public boolean isDefined(int index)", "class_method_signature": "SparseArray.isDefined(int index)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "SparseArray.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "SparseArray.clear()", "testcase": false, "constructor": false}, {"identifier": "describeElements", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String describeElements()", "full_signature": "public String describeElements()", "class_method_signature": "SparseArray.describeElements()", "testcase": false, "constructor": false}, {"identifier": "describeElements", "parameters": "(StringBuilder sb)", "modifiers": "public", "return": "StringBuilder", "signature": "StringBuilder describeElements(StringBuilder sb)", "full_signature": "public StringBuilder describeElements(StringBuilder sb)", "class_method_signature": "SparseArray.describeElements(StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "initialValue", "parameters": "()", "modifiers": "protected", "return": "T", "signature": "T initialValue()", "full_signature": "protected T initialValue()", "class_method_signature": "SparseArray.initialValue()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SparseArray.toString()", "testcase": false, "constructor": false}, {"identifier": "currentCapacity", "parameters": "()", "modifiers": "", "return": "int", "signature": "int currentCapacity()", "full_signature": " int currentCapacity()", "class_method_signature": "SparseArray.currentCapacity()", "testcase": false, "constructor": false}, {"identifier": "ensureCapacity", "parameters": "(int index)", "modifiers": "private", "return": "void", "signature": "void ensureCapacity(int index)", "full_signature": "private void ensureCapacity(int index)", "class_method_signature": "SparseArray.ensureCapacity(int index)", "testcase": false, "constructor": false}, {"identifier": "internalGet", "parameters": "(int index)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "T", "signature": "T internalGet(int index)", "full_signature": "@SuppressWarnings(\"unchecked\") private T internalGet(int index)", "class_method_signature": "SparseArray.internalGet(int index)", "testcase": false, "constructor": false}, {"identifier": "SparseArray", "parameters": "(int initialCapacity)", "modifiers": "public", "return": "", "signature": " SparseArray(int initialCapacity)", "full_signature": "public  SparseArray(int initialCapacity)", "class_method_signature": "SparseArray.SparseArray(int initialCapacity)", "testcase": false, "constructor": true}, {"identifier": "SparseArray", "parameters": "()", "modifiers": "public", "return": "", "signature": " SparseArray()", "full_signature": "public  SparseArray()", "class_method_signature": "SparseArray.SparseArray()", "testcase": false, "constructor": true}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/util/SparseArray.java"}, "focal_method": {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "T", "body": "public T get(int index) {\n        if (index < 0)\n            throw new IndexOutOfBoundsException(Integer.toString(index));\n        if (!definedElements.get(index)) {\n            ensureCapacity(index);\n            internalArray[index] = initialValue();\n            definedElements.set(index);\n        }\n        return internalGet(index);\n    }", "signature": "T get(int index)", "full_signature": "public T get(int index)", "class_method_signature": "SparseArray.get(int index)", "testcase": false, "constructor": false, "invocations": ["toString", "get", "ensureCapacity", "initialValue", "set", "internalGet"]}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}