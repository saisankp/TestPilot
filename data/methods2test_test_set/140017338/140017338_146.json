{"test_class": {"identifier": "SW360ComponentClientAdapterAsyncImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String COMPONENT_ID = \"12345\";", "modifier": "private final static", "type": "String", "declarator": "COMPONENT_ID = \"12345\"", "var_name": "COMPONENT_ID"}, {"original_string": "private final static String COMPONENT_NAME = \"componentName\";", "modifier": "private final static", "type": "String", "declarator": "COMPONENT_NAME = \"componentName\"", "var_name": "COMPONENT_NAME"}, {"original_string": "private static final Paging PAGING = new Paging(11, 28, 1024, 25);", "modifier": "private static final", "type": "Paging", "declarator": "PAGING = new Paging(11, 28, 1024, 25)", "var_name": "PAGING"}, {"original_string": "private static final ComponentSearchParams NAME_SEARCH_PARAMS =\n            ComponentSearchParams.builder()\n                    .withName(COMPONENT_NAME)\n                    .build();", "modifier": "private static final", "type": "ComponentSearchParams", "declarator": "NAME_SEARCH_PARAMS =\n            ComponentSearchParams.builder()\n                    .withName(COMPONENT_NAME)\n                    .build()", "var_name": "NAME_SEARCH_PARAMS"}, {"original_string": "private SW360ComponentClientAdapterAsync componentClientAdapter;", "modifier": "private", "type": "SW360ComponentClientAdapterAsync", "declarator": "componentClientAdapter", "var_name": "componentClientAdapter"}, {"original_string": "private SW360ComponentClient componentClient;", "modifier": "private", "type": "SW360ComponentClient", "declarator": "componentClient", "var_name": "componentClient"}, {"original_string": "private SW360SparseComponent sparseComponent;", "modifier": "private", "type": "SW360SparseComponent", "declarator": "sparseComponent", "var_name": "sparseComponent"}, {"original_string": "private SW360Component component;", "modifier": "private", "type": "SW360Component", "declarator": "component", "var_name": "component"}], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/adapter/SW360ComponentClientAdapterAsyncImplTest.java"}, "test_case": {"identifier": "testGetComponentByName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetComponentByName() {\n        LinkObjects linkObjects = makeLinkObjects();\n        sparseComponent.setName(COMPONENT_NAME)\n                .setLinks(linkObjects);\n\n        component.setName(COMPONENT_NAME);\n\n        when(componentClient.getComponent(COMPONENT_ID))\n                .thenReturn(CompletableFuture.completedFuture(component));\n        when(componentClient.search(NAME_SEARCH_PARAMS))\n                .thenReturn(createSearchResult(Collections.singletonList(sparseComponent)));\n\n        Optional<SW360Component> componentByName = block(componentClientAdapter.getComponentByName(COMPONENT_NAME));\n\n        assertThat(componentByName).isPresent();\n        assertThat(componentByName).hasValue(component);\n        verify(componentClient).getComponent(COMPONENT_ID);\n    }", "signature": "void testGetComponentByName()", "full_signature": "@Test public void testGetComponentByName()", "class_method_signature": "SW360ComponentClientAdapterAsyncImplTest.testGetComponentByName()", "testcase": true, "constructor": false, "invocations": ["makeLinkObjects", "setLinks", "setName", "setName", "thenReturn", "when", "getComponent", "completedFuture", "thenReturn", "when", "search", "createSearchResult", "singletonList", "block", "getComponentByName", "isPresent", "assertThat", "hasValue", "assertThat", "getComponent", "verify"]}, "focal_class": {"identifier": "SW360ComponentClientAdapterAsyncImpl", "superclass": "", "interfaces": "implements SW360ComponentClientAdapterAsync", "fields": [{"original_string": "private final SW360ComponentClient componentClient;", "modifier": "private final", "type": "SW360ComponentClient", "declarator": "componentClient", "var_name": "componentClient"}], "methods": [{"identifier": "SW360ComponentClientAdapterAsyncImpl", "parameters": "(SW360ComponentClient client)", "modifiers": "public", "return": "", "signature": " SW360ComponentClientAdapterAsyncImpl(SW360ComponentClient client)", "full_signature": "public  SW360ComponentClientAdapterAsyncImpl(SW360ComponentClient client)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.SW360ComponentClientAdapterAsyncImpl(SW360ComponentClient client)", "testcase": false, "constructor": true}, {"identifier": "getComponentClient", "parameters": "()", "modifiers": "@Override public", "return": "SW360ComponentClient", "signature": "SW360ComponentClient getComponentClient()", "full_signature": "@Override public SW360ComponentClient getComponentClient()", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.getComponentClient()", "testcase": false, "constructor": false}, {"identifier": "createComponent", "parameters": "(SW360Component component)", "modifiers": "@Override public", "return": "CompletableFuture<SW360Component>", "signature": "CompletableFuture<SW360Component> createComponent(SW360Component component)", "full_signature": "@Override public CompletableFuture<SW360Component> createComponent(SW360Component component)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.createComponent(SW360Component component)", "testcase": false, "constructor": false}, {"identifier": "getComponentById", "parameters": "(String componentId)", "modifiers": "@Override public", "return": "CompletableFuture<Optional<SW360Component>>", "signature": "CompletableFuture<Optional<SW360Component>> getComponentById(String componentId)", "full_signature": "@Override public CompletableFuture<Optional<SW360Component>> getComponentById(String componentId)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.getComponentById(String componentId)", "testcase": false, "constructor": false}, {"identifier": "getComponentByName", "parameters": "(String componentName)", "modifiers": "@Override public", "return": "CompletableFuture<Optional<SW360Component>>", "signature": "CompletableFuture<Optional<SW360Component>> getComponentByName(String componentName)", "full_signature": "@Override public CompletableFuture<Optional<SW360Component>> getComponentByName(String componentName)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.getComponentByName(String componentName)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(ComponentSearchParams searchParams)", "modifiers": "@Override public", "return": "CompletableFuture<List<SW360SparseComponent>>", "signature": "CompletableFuture<List<SW360SparseComponent>> search(ComponentSearchParams searchParams)", "full_signature": "@Override public CompletableFuture<List<SW360SparseComponent>> search(ComponentSearchParams searchParams)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.search(ComponentSearchParams searchParams)", "testcase": false, "constructor": false}, {"identifier": "searchWithPaging", "parameters": "(ComponentSearchParams searchParams)", "modifiers": "@Override public", "return": "CompletableFuture<PagingResult<SW360SparseComponent>>", "signature": "CompletableFuture<PagingResult<SW360SparseComponent>> searchWithPaging(ComponentSearchParams searchParams)", "full_signature": "@Override public CompletableFuture<PagingResult<SW360SparseComponent>> searchWithPaging(ComponentSearchParams searchParams)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.searchWithPaging(ComponentSearchParams searchParams)", "testcase": false, "constructor": false}, {"identifier": "updateComponent", "parameters": "(SW360Component component)", "modifiers": "@Override public", "return": "CompletableFuture<SW360Component>", "signature": "CompletableFuture<SW360Component> updateComponent(SW360Component component)", "full_signature": "@Override public CompletableFuture<SW360Component> updateComponent(SW360Component component)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.updateComponent(SW360Component component)", "testcase": false, "constructor": false}, {"identifier": "deleteComponents", "parameters": "(Collection<String> idsToDelete)", "modifiers": "@Override public", "return": "CompletableFuture<MultiStatusResponse>", "signature": "CompletableFuture<MultiStatusResponse> deleteComponents(Collection<String> idsToDelete)", "full_signature": "@Override public CompletableFuture<MultiStatusResponse> deleteComponents(Collection<String> idsToDelete)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.deleteComponents(Collection<String> idsToDelete)", "testcase": false, "constructor": false}, {"identifier": "deleteComponent", "parameters": "(String componentId)", "modifiers": "@Override public", "return": "CompletableFuture<Void>", "signature": "CompletableFuture<Void> deleteComponent(String componentId)", "full_signature": "@Override public CompletableFuture<Void> deleteComponent(String componentId)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.deleteComponent(String componentId)", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/adapter/SW360ComponentClientAdapterAsyncImpl.java"}, "focal_method": {"identifier": "getComponentByName", "parameters": "(String componentName)", "modifiers": "@Override public", "return": "CompletableFuture<Optional<SW360Component>>", "body": "@Override\n    public CompletableFuture<Optional<SW360Component>> getComponentByName(String componentName) {\n        ComponentSearchParams searchParams = ComponentSearchParams.builder()\n                .withName(componentName)\n                .build();\n        return getComponentClient().search(searchParams)\n                .thenCompose(components ->\n                        components.getResult().stream()\n                                .filter(c -> c.getName().equals(componentName))\n                                .map(c -> SW360HalResourceUtility.getLastIndexOfSelfLink(c.getLinks()).orElse(\"\"))\n                                .map(this::getComponentById)\n                                .findFirst()\n                                .orElse(CompletableFuture.completedFuture(Optional.empty()))\n                );\n    }", "signature": "CompletableFuture<Optional<SW360Component>> getComponentByName(String componentName)", "full_signature": "@Override public CompletableFuture<Optional<SW360Component>> getComponentByName(String componentName)", "class_method_signature": "SW360ComponentClientAdapterAsyncImpl.getComponentByName(String componentName)", "testcase": false, "constructor": false, "invocations": ["build", "withName", "builder", "thenCompose", "search", "getComponentClient", "orElse", "findFirst", "map", "map", "filter", "stream", "getResult", "equals", "getName", "orElse", "getLastIndexOfSelfLink", "getLinks", "completedFuture", "empty"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}