{"test_class": {"identifier": "MapContentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long LISTENER_TIMEOUT = 500;", "modifier": "private static final", "type": "long", "declarator": "LISTENER_TIMEOUT = 500", "var_name": "LISTENER_TIMEOUT"}, {"original_string": "private static final ReferencedEnvelope WORLD =\n            new ReferencedEnvelope(149, 153, -32, -36, DefaultGeographicCRS.WGS84);", "modifier": "private static final", "type": "ReferencedEnvelope", "declarator": "WORLD =\n            new ReferencedEnvelope(149, 153, -32, -36, DefaultGeographicCRS.WGS84)", "var_name": "WORLD"}, {"original_string": "private static final ReferencedEnvelope SMALL_WORLD =\n            new ReferencedEnvelope(150, 152, -33, -35, DefaultGeographicCRS.WGS84);", "modifier": "private static final", "type": "ReferencedEnvelope", "declarator": "SMALL_WORLD =\n            new ReferencedEnvelope(150, 152, -33, -35, DefaultGeographicCRS.WGS84)", "var_name": "SMALL_WORLD"}, {"original_string": "private static final double TOL = 1.0e-6;", "modifier": "private static final", "type": "double", "declarator": "TOL = 1.0e-6", "var_name": "TOL"}, {"original_string": "private MapContent mapContent;", "modifier": "private", "type": "MapContent", "declarator": "mapContent", "var_name": "mapContent"}, {"original_string": "private WaitingMapListener listener;", "modifier": "private", "type": "WaitingMapListener", "declarator": "listener", "var_name": "listener"}], "file": "modules/library/render/src/test/java/org/geotools/map/MapContentTest.java"}, "test_case": {"identifier": "addingLayerViaLayersListFiresEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addingLayerViaLayersListFiresEvent() throws Exception {\n        listener.setExpected(WaitingMapListener.Type.ADDED);\n        mapContent.layers().add(new MockLayer(WORLD));\n        listener.await(WaitingMapListener.Type.ADDED, LISTENER_TIMEOUT);\n    }", "signature": "void addingLayerViaLayersListFiresEvent()", "full_signature": "@Test public void addingLayerViaLayersListFiresEvent()", "class_method_signature": "MapContentTest.addingLayerViaLayersListFiresEvent()", "testcase": true, "constructor": false, "invocations": ["setExpected", "add", "layers", "await"]}, "focal_class": {"identifier": "MapContent", "superclass": "", "interfaces": "", "fields": [{"original_string": "static protected final Logger LOGGER = Logging.getLogger(\"org.geotools.map\");", "modifier": "static protected final", "type": "Logger", "declarator": "LOGGER = Logging.getLogger(\"org.geotools.map\")", "var_name": "LOGGER"}, {"original_string": "private final LayerList layerList;", "modifier": "private final", "type": "LayerList", "declarator": "layerList", "var_name": "layerList"}, {"original_string": "private CopyOnWriteArrayList<MapLayerListListener> mapListeners;", "modifier": "private", "type": "CopyOnWriteArrayList<MapLayerListListener>", "declarator": "mapListeners", "var_name": "mapListeners"}, {"original_string": "private HashMap<String, Object> userData;", "modifier": "private", "type": "HashMap<String, Object>", "declarator": "userData", "var_name": "userData"}, {"original_string": "private String title;", "modifier": "private", "type": "String", "declarator": "title", "var_name": "title"}, {"original_string": "private CopyOnWriteArrayList<PropertyChangeListener> propertyListeners;", "modifier": "private", "type": "CopyOnWriteArrayList<PropertyChangeListener>", "declarator": "propertyListeners", "var_name": "propertyListeners"}, {"original_string": "protected MapViewport viewport;", "modifier": "protected", "type": "MapViewport", "declarator": "viewport", "var_name": "viewport"}, {"original_string": "private MapViewport defaultViewport;", "modifier": "private", "type": "MapViewport", "declarator": "defaultViewport", "var_name": "defaultViewport"}, {"original_string": "private MapLayerListener layerListener;", "modifier": "private", "type": "MapLayerListener", "declarator": "layerListener", "var_name": "layerListener"}, {"original_string": "private final ReadWriteLock monitor;", "modifier": "private final", "type": "ReadWriteLock", "declarator": "monitor", "var_name": "monitor"}], "methods": [{"identifier": "MapContent", "parameters": "()", "modifiers": "public", "return": "", "signature": " MapContent()", "full_signature": "public  MapContent()", "class_method_signature": "MapContent.MapContent()", "testcase": false, "constructor": true}, {"identifier": "finalize", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void finalize()", "full_signature": "@Override protected void finalize()", "class_method_signature": "MapContent.finalize()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void dispose()", "full_signature": "public void dispose()", "class_method_signature": "MapContent.dispose()", "testcase": false, "constructor": false}, {"identifier": "MapContent", "parameters": "(MapContext context)", "modifiers": "public", "return": "", "signature": " MapContent(MapContext context)", "full_signature": "public  MapContent(MapContext context)", "class_method_signature": "MapContent.MapContent(MapContext context)", "testcase": false, "constructor": true}, {"identifier": "MapContent", "parameters": "(CoordinateReferenceSystem crs)", "modifiers": "@Deprecated public", "return": "", "signature": " MapContent(CoordinateReferenceSystem crs)", "full_signature": "@Deprecated public  MapContent(CoordinateReferenceSystem crs)", "class_method_signature": "MapContent.MapContent(CoordinateReferenceSystem crs)", "testcase": false, "constructor": true}, {"identifier": "MapContent", "parameters": "(MapLayer[] array)", "modifiers": "@Deprecated public", "return": "", "signature": " MapContent(MapLayer[] array)", "full_signature": "@Deprecated public  MapContent(MapLayer[] array)", "class_method_signature": "MapContent.MapContent(MapLayer[] array)", "testcase": false, "constructor": true}, {"identifier": "MapContent", "parameters": "(MapLayer[] array, CoordinateReferenceSystem crs)", "modifiers": "@Deprecated public", "return": "", "signature": " MapContent(MapLayer[] array, CoordinateReferenceSystem crs)", "full_signature": "@Deprecated public  MapContent(MapLayer[] array, CoordinateReferenceSystem crs)", "class_method_signature": "MapContent.MapContent(MapLayer[] array, CoordinateReferenceSystem crs)", "testcase": false, "constructor": true}, {"identifier": "MapContent", "parameters": "(MapLayer[] array, String title, String contextAbstract, String contactInformation,\n            String[] keywords)", "modifiers": "@Deprecated public", "return": "", "signature": " MapContent(MapLayer[] array, String title, String contextAbstract, String contactInformation,\n            String[] keywords)", "full_signature": "@Deprecated public  MapContent(MapLayer[] array, String title, String contextAbstract, String contactInformation,\n            String[] keywords)", "class_method_signature": "MapContent.MapContent(MapLayer[] array, String title, String contextAbstract, String contactInformation,\n            String[] keywords)", "testcase": false, "constructor": true}, {"identifier": "MapContent", "parameters": "(MapLayer[] array, String title, String contextAbstract, String contactInformation,\n            String[] keywords, final CoordinateReferenceSystem crs)", "modifiers": "@Deprecated public", "return": "", "signature": " MapContent(MapLayer[] array, String title, String contextAbstract, String contactInformation,\n            String[] keywords, final CoordinateReferenceSystem crs)", "full_signature": "@Deprecated public  MapContent(MapLayer[] array, String title, String contextAbstract, String contactInformation,\n            String[] keywords, final CoordinateReferenceSystem crs)", "class_method_signature": "MapContent.MapContent(MapLayer[] array, String title, String contextAbstract, String contactInformation,\n            String[] keywords, final CoordinateReferenceSystem crs)", "testcase": false, "constructor": true}, {"identifier": "addMapLayerListListener", "parameters": "(MapLayerListListener listener)", "modifiers": "public", "return": "void", "signature": "void addMapLayerListListener(MapLayerListListener listener)", "full_signature": "public void addMapLayerListListener(MapLayerListListener listener)", "class_method_signature": "MapContent.addMapLayerListListener(MapLayerListListener listener)", "testcase": false, "constructor": false}, {"identifier": "listenToMapLayers", "parameters": "(boolean listen)", "modifiers": "protected", "return": "void", "signature": "void listenToMapLayers(boolean listen)", "full_signature": "protected void listenToMapLayers(boolean listen)", "class_method_signature": "MapContent.listenToMapLayers(boolean listen)", "testcase": false, "constructor": false}, {"identifier": "removeMapLayerListListener", "parameters": "(MapLayerListListener listener)", "modifiers": "public", "return": "void", "signature": "void removeMapLayerListListener(MapLayerListListener listener)", "full_signature": "public void removeMapLayerListListener(MapLayerListListener listener)", "class_method_signature": "MapContent.removeMapLayerListListener(MapLayerListListener listener)", "testcase": false, "constructor": false}, {"identifier": "addLayer", "parameters": "(Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean addLayer(Layer layer)", "full_signature": "public boolean addLayer(Layer layer)", "class_method_signature": "MapContent.addLayer(Layer layer)", "testcase": false, "constructor": false}, {"identifier": "addLayers", "parameters": "(Collection<? extends Layer> layers)", "modifiers": "public", "return": "int", "signature": "int addLayers(Collection<? extends Layer> layers)", "full_signature": "public int addLayers(Collection<? extends Layer> layers)", "class_method_signature": "MapContent.addLayers(Collection<? extends Layer> layers)", "testcase": false, "constructor": false}, {"identifier": "removeLayer", "parameters": "(Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeLayer(Layer layer)", "full_signature": "public boolean removeLayer(Layer layer)", "class_method_signature": "MapContent.removeLayer(Layer layer)", "testcase": false, "constructor": false}, {"identifier": "moveLayer", "parameters": "(int sourcePosition, int destPosition)", "modifiers": "public", "return": "void", "signature": "void moveLayer(int sourcePosition, int destPosition)", "full_signature": "public void moveLayer(int sourcePosition, int destPosition)", "class_method_signature": "MapContent.moveLayer(int sourcePosition, int destPosition)", "testcase": false, "constructor": false}, {"identifier": "layers", "parameters": "()", "modifiers": "public", "return": "List<Layer>", "signature": "List<Layer> layers()", "full_signature": "public List<Layer> layers()", "class_method_signature": "MapContent.layers()", "testcase": false, "constructor": false}, {"identifier": "fireLayerAdded", "parameters": "(Layer element, int fromIndex, int toIndex)", "modifiers": "protected", "return": "void", "signature": "void fireLayerAdded(Layer element, int fromIndex, int toIndex)", "full_signature": "protected void fireLayerAdded(Layer element, int fromIndex, int toIndex)", "class_method_signature": "MapContent.fireLayerAdded(Layer element, int fromIndex, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "fireLayerRemoved", "parameters": "(Layer element, int fromIndex, int toIndex)", "modifiers": "protected", "return": "void", "signature": "void fireLayerRemoved(Layer element, int fromIndex, int toIndex)", "full_signature": "protected void fireLayerRemoved(Layer element, int fromIndex, int toIndex)", "class_method_signature": "MapContent.fireLayerRemoved(Layer element, int fromIndex, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "fireLayerMoved", "parameters": "(Layer element, int toIndex)", "modifiers": "protected", "return": "void", "signature": "void fireLayerMoved(Layer element, int toIndex)", "full_signature": "protected void fireLayerMoved(Layer element, int toIndex)", "class_method_signature": "MapContent.fireLayerMoved(Layer element, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "fireLayerPreDispose", "parameters": "(Layer element, int toIndex)", "modifiers": "protected", "return": "void", "signature": "void fireLayerPreDispose(Layer element, int toIndex)", "full_signature": "protected void fireLayerPreDispose(Layer element, int toIndex)", "class_method_signature": "MapContent.fireLayerPreDispose(Layer element, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "fireLayerEvent", "parameters": "(Layer element, int index, MapLayerEvent layerEvent)", "modifiers": "protected", "return": "void", "signature": "void fireLayerEvent(Layer element, int index, MapLayerEvent layerEvent)", "full_signature": "protected void fireLayerEvent(Layer element, int index, MapLayerEvent layerEvent)", "class_method_signature": "MapContent.fireLayerEvent(Layer element, int index, MapLayerEvent layerEvent)", "testcase": false, "constructor": false}, {"identifier": "getMaxBounds", "parameters": "()", "modifiers": "public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getMaxBounds()", "full_signature": "public ReferencedEnvelope getMaxBounds()", "class_method_signature": "MapContent.getMaxBounds()", "testcase": false, "constructor": false}, {"identifier": "getViewport", "parameters": "()", "modifiers": "public", "return": "MapViewport", "signature": "MapViewport getViewport()", "full_signature": "public MapViewport getViewport()", "class_method_signature": "MapContent.getViewport()", "testcase": false, "constructor": false}, {"identifier": "setViewport", "parameters": "(MapViewport viewport)", "modifiers": "public", "return": "void", "signature": "void setViewport(MapViewport viewport)", "full_signature": "public void setViewport(MapViewport viewport)", "class_method_signature": "MapContent.setViewport(MapViewport viewport)", "testcase": false, "constructor": false}, {"identifier": "addMapBoundsListener", "parameters": "(MapBoundsListener listener)", "modifiers": "public", "return": "void", "signature": "void addMapBoundsListener(MapBoundsListener listener)", "full_signature": "public void addMapBoundsListener(MapBoundsListener listener)", "class_method_signature": "MapContent.addMapBoundsListener(MapBoundsListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeMapBoundsListener", "parameters": "(MapBoundsListener listener)", "modifiers": "public", "return": "void", "signature": "void removeMapBoundsListener(MapBoundsListener listener)", "full_signature": "public void removeMapBoundsListener(MapBoundsListener listener)", "class_method_signature": "MapContent.removeMapBoundsListener(MapBoundsListener listener)", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getBounds()", "full_signature": " ReferencedEnvelope getBounds()", "class_method_signature": "MapContent.getBounds()", "testcase": false, "constructor": false}, {"identifier": "getCoordinateReferenceSystem", "parameters": "()", "modifiers": "public", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getCoordinateReferenceSystem()", "full_signature": "public CoordinateReferenceSystem getCoordinateReferenceSystem()", "class_method_signature": "MapContent.getCoordinateReferenceSystem()", "testcase": false, "constructor": false}, {"identifier": "setCoordinateReferenceSystem", "parameters": "(CoordinateReferenceSystem crs)", "modifiers": "", "return": "void", "signature": "void setCoordinateReferenceSystem(CoordinateReferenceSystem crs)", "full_signature": " void setCoordinateReferenceSystem(CoordinateReferenceSystem crs)", "class_method_signature": "MapContent.setCoordinateReferenceSystem(CoordinateReferenceSystem crs)", "testcase": false, "constructor": false}, {"identifier": "addPropertyChangeListener", "parameters": "(java.beans.PropertyChangeListener listener)", "modifiers": "public", "return": "void", "signature": "void addPropertyChangeListener(java.beans.PropertyChangeListener listener)", "full_signature": "public void addPropertyChangeListener(java.beans.PropertyChangeListener listener)", "class_method_signature": "MapContent.addPropertyChangeListener(java.beans.PropertyChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "removePropertyChangeListener", "parameters": "(java.beans.PropertyChangeListener listener)", "modifiers": "public", "return": "void", "signature": "void removePropertyChangeListener(java.beans.PropertyChangeListener listener)", "full_signature": "public void removePropertyChangeListener(java.beans.PropertyChangeListener listener)", "class_method_signature": "MapContent.removePropertyChangeListener(java.beans.PropertyChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "getUserData", "parameters": "()", "modifiers": "public", "return": "java.util.Map<String, Object>", "signature": "java.util.Map<String, Object> getUserData()", "full_signature": "public java.util.Map<String, Object> getUserData()", "class_method_signature": "MapContent.getUserData()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTitle()", "full_signature": "public String getTitle()", "class_method_signature": "MapContent.getTitle()", "testcase": false, "constructor": false}, {"identifier": "setTitle", "parameters": "(String title)", "modifiers": "public", "return": "void", "signature": "void setTitle(String title)", "full_signature": "public void setTitle(String title)", "class_method_signature": "MapContent.setTitle(String title)", "testcase": false, "constructor": false}, {"identifier": "fireProperty", "parameters": "(String propertyName, Object old, Object value)", "modifiers": "protected", "return": "void", "signature": "void fireProperty(String propertyName, Object old, Object value)", "full_signature": "protected void fireProperty(String propertyName, Object old, Object value)", "class_method_signature": "MapContent.fireProperty(String propertyName, Object old, Object value)", "testcase": false, "constructor": false}, {"identifier": "checkViewportCRS", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkViewportCRS()", "full_signature": "private void checkViewportCRS()", "class_method_signature": "MapContent.checkViewportCRS()", "testcase": false, "constructor": false}], "file": "modules/library/render/src/main/java/org/geotools/map/MapContent.java"}, "focal_method": {"identifier": "layers", "parameters": "()", "modifiers": "public", "return": "List<Layer>", "body": "public List<Layer> layers() {\n        monitor.readLock().lock();\n        try {\n            return layerList;\n        } finally {\n            monitor.readLock().unlock();\n        }\n    }", "signature": "List<Layer> layers()", "full_signature": "public List<Layer> layers()", "class_method_signature": "MapContent.layers()", "testcase": false, "constructor": false, "invocations": ["lock", "readLock", "unlock", "readLock"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}