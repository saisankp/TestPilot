{"test_class": {"identifier": "URLConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RESOURCE_PATH = \"org/arakhne/afc/vmutil/test.txt\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_PATH = \"org/arakhne/afc/vmutil/test.txt\"", "var_name": "RESOURCE_PATH"}, {"original_string": "private URLConnection connection;", "modifier": "private", "type": "URLConnection", "declarator": "connection", "var_name": "connection"}], "file": "core/vmutils/src/test/java/org/arakhne/afc/vmutil/file/URLConnectionTest.java"}, "test_case": {"identifier": "getInputStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getInputStream() throws IOException {\n\t\tString line;\n\t\ttry (InputStream is = this.connection.getInputStream()) {\n\t\t\ttry (BufferedReader br = new BufferedReader(new InputStreamReader(is))) {\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t}\n\t\tassertEquals(\"TEST1: FOR UNIT TEST ONLY\", line);  //$NON-NLS-1$\n\t}", "signature": "void getInputStream()", "full_signature": "@Test public void getInputStream()", "class_method_signature": "URLConnectionTest.getInputStream()", "testcase": true, "constructor": false, "invocations": ["getInputStream", "readLine", "assertEquals"]}, "focal_class": {"identifier": "URLConnection", "superclass": "extends java.net.URLConnection", "interfaces": "", "fields": [{"original_string": "private static final String CONTENT_TYPE = \"content-type\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE = \"content-type\"", "var_name": "CONTENT_TYPE"}, {"original_string": "private static final String CONTENT_LENGTH = \"content-length\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_LENGTH = \"content-length\"", "var_name": "CONTENT_LENGTH"}, {"original_string": "private static final String LAST_MODIFIED = \"last-modified\";", "modifier": "private static final", "type": "String", "declarator": "LAST_MODIFIED = \"last-modified\"", "var_name": "LAST_MODIFIED"}, {"original_string": "private File file;", "modifier": "private", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private String contentType;", "modifier": "private", "type": "String", "declarator": "contentType", "var_name": "contentType"}], "methods": [{"identifier": "URLConnection", "parameters": "(URL url)", "modifiers": "protected", "return": "", "signature": " URLConnection(URL url)", "full_signature": "protected  URLConnection(URL url)", "class_method_signature": "URLConnection.URLConnection(URL url)", "testcase": false, "constructor": true}, {"identifier": "getHeaderField", "parameters": "(int index)", "modifiers": "@Override public", "return": "String", "signature": "String getHeaderField(int index)", "full_signature": "@Override public String getHeaderField(int index)", "class_method_signature": "URLConnection.getHeaderField(int index)", "testcase": false, "constructor": false}, {"identifier": "getHeaderField", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getHeaderField(String name)", "full_signature": "@Override public String getHeaderField(String name)", "class_method_signature": "URLConnection.getHeaderField(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaderFieldKey", "parameters": "(int index)", "modifiers": "@Override public", "return": "String", "signature": "String getHeaderFieldKey(int index)", "full_signature": "@Override public String getHeaderFieldKey(int index)", "class_method_signature": "URLConnection.getHeaderFieldKey(int index)", "testcase": false, "constructor": false}, {"identifier": "getHeaderFields", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> getHeaderFields()", "full_signature": "@Override public Map<String, List<String>> getHeaderFields()", "class_method_signature": "URLConnection.getHeaderFields()", "testcase": false, "constructor": false}, {"identifier": "singletonList", "parameters": "(String value)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> singletonList(String value)", "full_signature": "private static List<String> singletonList(String value)", "class_method_signature": "URLConnection.singletonList(String value)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void connect()", "full_signature": "@Override public void connect()", "class_method_signature": "URLConnection.connect()", "testcase": false, "constructor": false}, {"identifier": "getOutputStream", "parameters": "()", "modifiers": "@Override public", "return": "OutputStream", "signature": "OutputStream getOutputStream()", "full_signature": "@Override public OutputStream getOutputStream()", "class_method_signature": "URLConnection.getOutputStream()", "testcase": false, "constructor": false}, {"identifier": "getInputStream", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getInputStream()", "full_signature": "@Override public InputStream getInputStream()", "class_method_signature": "URLConnection.getInputStream()", "testcase": false, "constructor": false}], "file": "core/vmutils/src/main/java/org/arakhne/afc/vmutil/file/URLConnection.java"}, "focal_method": {"identifier": "getInputStream", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "body": "@Override\n\tpublic InputStream getInputStream() throws IOException {\n        connect();\n\t\tif (getDoInput()) {\n\t\t\tInputStream is = new FileInputStream(this.file);\n\t\t\tif (getUseCaches()) {\n\t\t\t\tis = new BufferedInputStream(is);\n\t\t\t}\n\t\t\treturn is;\n\t\t}\n\t\tthrow new UnknownServiceException(\"E2\"); //$NON-NLS-1$\n    }", "signature": "InputStream getInputStream()", "full_signature": "@Override public InputStream getInputStream()", "class_method_signature": "URLConnection.getInputStream()", "testcase": false, "constructor": false, "invocations": ["connect", "getDoInput", "getUseCaches"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}