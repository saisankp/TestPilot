{"test_class": {"identifier": "CharSequenceCodecTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ICharSequenceCodec charSequenceCodec;", "modifier": "private", "type": "ICharSequenceCodec", "declarator": "charSequenceCodec", "var_name": "charSequenceCodec"}, {"original_string": "private final String SOURCE_MSG = \"Hello my young friend. \" +\n            \"You can see how it's is a nice text will converted to some shit, \" +\n            \"but to see it, you should debug this text. Here are the things here.\";", "modifier": "private final", "type": "String", "declarator": "SOURCE_MSG = \"Hello my young friend. \" +\n            \"You can see how it's is a nice text will converted to some shit, \" +\n            \"but to see it, you should debug this text. Here are the things here.\"", "var_name": "SOURCE_MSG"}, {"original_string": "private byte[] UTF_8_MSG;", "modifier": "private", "type": "byte[]", "declarator": "UTF_8_MSG", "var_name": "UTF_8_MSG"}], "file": "CoreFeatures/Security/Codec/src/test/java/info/smart_tools/smartactors/security/encoding/codec/CharSequenceCodecTest.java"}, "test_case": {"identifier": "encodeHexTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void encodeHexTest() throws EncodingException {\n        byte[] utf8EncodeResult = charSequenceCodec.encode(SOURCE_MSG);\n        assertTrue(Arrays.equals(utf8EncodeResult, UTF_8_MSG));\n    }", "signature": "void encodeHexTest()", "full_signature": "@Test public void encodeHexTest()", "class_method_signature": "CharSequenceCodecTest.encodeHexTest()", "testcase": true, "constructor": false, "invocations": ["encode", "assertTrue", "equals"]}, "focal_class": {"identifier": "CharSequenceCodec", "superclass": "", "interfaces": "implements ICharSequenceCodec", "fields": [{"original_string": "private final CharsetEncoder encoder;", "modifier": "private final", "type": "CharsetEncoder", "declarator": "encoder", "var_name": "encoder"}, {"original_string": "private final CharsetDecoder decoder;", "modifier": "private final", "type": "CharsetDecoder", "declarator": "decoder", "var_name": "decoder"}], "methods": [{"identifier": "CharSequenceCodec", "parameters": "(final String name)", "modifiers": "private", "return": "", "signature": " CharSequenceCodec(final String name)", "full_signature": "private  CharSequenceCodec(final String name)", "class_method_signature": "CharSequenceCodec.CharSequenceCodec(final String name)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(final String name)", "modifiers": "public static", "return": "CharSequenceCodec", "signature": "CharSequenceCodec create(final String name)", "full_signature": "public static CharSequenceCodec create(final String name)", "class_method_signature": "CharSequenceCodec.create(final String name)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(@Nonnull final CharSequence message)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] encode(@Nonnull final CharSequence message)", "full_signature": "@Override public byte[] encode(@Nonnull final CharSequence message)", "class_method_signature": "CharSequenceCodec.encode(@Nonnull final CharSequence message)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(@Nonnull final byte[] message)", "modifiers": "@Override public", "return": "String", "signature": "String decode(@Nonnull final byte[] message)", "full_signature": "@Override public String decode(@Nonnull final byte[] message)", "class_method_signature": "CharSequenceCodec.decode(@Nonnull final byte[] message)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Security/Codec/src/main/java/info/smart_tools/smartactors/security/encoding/codec/CharSequenceCodec.java"}, "focal_method": {"identifier": "encode", "parameters": "(@Nonnull final CharSequence message)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] encode(@Nonnull final CharSequence message) throws EncodingException {\n        try {\n            ByteBuffer encodedBuffer = encoder.encode(CharBuffer.wrap(message));\n            byte[] bufferCopy = new byte[encodedBuffer.limit()];\n            System.arraycopy(encodedBuffer.array(), 0, bufferCopy, 0, encodedBuffer.limit());\n\n            return bufferCopy;\n        } catch (CharacterCodingException e) {\n            throw new EncodingException(\"UTF-8 encoding has been failed because: \" + e.getMessage(), e);\n        }\n    }", "signature": "byte[] encode(@Nonnull final CharSequence message)", "full_signature": "@Override public byte[] encode(@Nonnull final CharSequence message)", "class_method_signature": "CharSequenceCodec.encode(@Nonnull final CharSequence message)", "testcase": false, "constructor": false, "invocations": ["encode", "wrap", "limit", "arraycopy", "array", "limit", "getMessage"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}