{"test_class": {"identifier": "SelectorTest", "superclass": "", "interfaces": "", "fields": [], "file": "base/lang/src/test/java/leap/lang/jsoup/select/SelectorTest.java"}, "test_case": {"identifier": "selectSupplementaryCharacter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void selectSupplementaryCharacter() {\n        String s = new String(Character.toChars(135361));\n        Document doc = Jsoup.parse(\"<div k\" + s + \"='\" + s + \"'>^\" + s +\"$/div>\");\n        assertEquals(\"div\", doc.select(\"div[k\" + s + \"]\").first().tagName());\n        assertEquals(\"div\", doc.select(\"div:containsOwn(\" + s + \")\").first().tagName());\n    }", "signature": "void selectSupplementaryCharacter()", "full_signature": "@Test public void selectSupplementaryCharacter()", "class_method_signature": "SelectorTest.selectSupplementaryCharacter()", "testcase": true, "constructor": false, "invocations": ["toChars", "parse", "assertEquals", "tagName", "first", "select", "assertEquals", "tagName", "first", "select"]}, "focal_class": {"identifier": "Selector", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Evaluator evaluator;", "modifier": "private final", "type": "Evaluator", "declarator": "evaluator", "var_name": "evaluator"}, {"original_string": "private final Element root;", "modifier": "private final", "type": "Element", "declarator": "root", "var_name": "root"}], "methods": [{"identifier": "Selector", "parameters": "(String query, Element root)", "modifiers": "private", "return": "", "signature": " Selector(String query, Element root)", "full_signature": "private  Selector(String query, Element root)", "class_method_signature": "Selector.Selector(String query, Element root)", "testcase": false, "constructor": true}, {"identifier": "select", "parameters": "(String query, Element root)", "modifiers": "public static", "return": "Elements", "signature": "Elements select(String query, Element root)", "full_signature": "public static Elements select(String query, Element root)", "class_method_signature": "Selector.select(String query, Element root)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(String query, Iterable<Element> roots)", "modifiers": "public static", "return": "Elements", "signature": "Elements select(String query, Iterable<Element> roots)", "full_signature": "public static Elements select(String query, Iterable<Element> roots)", "class_method_signature": "Selector.select(String query, Iterable<Element> roots)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "()", "modifiers": "private", "return": "Elements", "signature": "Elements select()", "full_signature": "private Elements select()", "class_method_signature": "Selector.select()", "testcase": false, "constructor": false}, {"identifier": "filterOut", "parameters": "(Collection<Element> elements, Collection<Element> outs)", "modifiers": "static", "return": "Elements", "signature": "Elements filterOut(Collection<Element> elements, Collection<Element> outs)", "full_signature": "static Elements filterOut(Collection<Element> elements, Collection<Element> outs)", "class_method_signature": "Selector.filterOut(Collection<Element> elements, Collection<Element> outs)", "testcase": false, "constructor": false}], "file": "base/lang/src/main/java/leap/lang/jsoup/select/Selector.java"}, "focal_method": {"identifier": "select", "parameters": "(String query, Element root)", "modifiers": "public static", "return": "Elements", "body": "public static Elements select(String query, Element root) {\n        return new Selector(query, root).select();\n    }", "signature": "Elements select(String query, Element root)", "full_signature": "public static Elements select(String query, Element root)", "class_method_signature": "Selector.select(String query, Element root)", "testcase": false, "constructor": false, "invocations": ["select"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}