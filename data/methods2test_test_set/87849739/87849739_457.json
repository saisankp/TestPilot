{"test_class": {"identifier": "GatewayHttpConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Config gatewayHttpTestConfig;", "modifier": "private static", "type": "Config", "declarator": "gatewayHttpTestConfig", "var_name": "gatewayHttpTestConfig"}, {"original_string": "@Rule\n    public final JUnitSoftAssertions softly = new JUnitSoftAssertions();", "modifier": "@Rule\n    public final", "type": "JUnitSoftAssertions", "declarator": "softly = new JUnitSoftAssertions()", "var_name": "softly"}], "file": "services/gateway/util/src/test/java/org/eclipse/ditto/services/gateway/util/config/endpoints/GatewayHttpConfigTest.java"}, "test_case": {"identifier": "tryToGetInstanceWithUnknownSchemaVersions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToGetInstanceWithUnknownSchemaVersions() {\n        final int unknownVersionNumber = -1;\n        final Collection<Integer> knownSchemaVersions =\n                List.of(JsonSchemaVersion.V_1.toInt(), JsonSchemaVersion.V_2.toInt());\n        final Collection<Integer> allSchemaVersions = new ArrayList<>(knownSchemaVersions);\n        allSchemaVersions.add(unknownVersionNumber);\n        final String configPath = \"http.\" + HttpConfig.GatewayHttpConfigValue.SCHEMA_VERSIONS.getConfigPath();\n        final Config config = ConfigFactory.parseMap(Maps.newHashMap(configPath, allSchemaVersions));\n\n        assertThatExceptionOfType(DittoConfigError.class)\n                .isThrownBy(() -> GatewayHttpConfig.of(config))\n                .withMessage(\"Schema version <%s> is not supported!\", unknownVersionNumber)\n                .withNoCause();\n    }", "signature": "void tryToGetInstanceWithUnknownSchemaVersions()", "full_signature": "@Test public void tryToGetInstanceWithUnknownSchemaVersions()", "class_method_signature": "GatewayHttpConfigTest.tryToGetInstanceWithUnknownSchemaVersions()", "testcase": true, "constructor": false, "invocations": ["of", "toInt", "toInt", "add", "getConfigPath", "parseMap", "newHashMap", "withNoCause", "withMessage", "isThrownBy", "assertThatExceptionOfType", "of"]}, "focal_class": {"identifier": "GatewayHttpConfig", "superclass": "", "interfaces": "implements HttpConfig", "fields": [{"original_string": "private final String hostname;", "modifier": "private final", "type": "String", "declarator": "hostname", "var_name": "hostname"}, {"original_string": "private final int port;", "modifier": "private final", "type": "int", "declarator": "port", "var_name": "port"}, {"original_string": "private final Set<JsonSchemaVersion> schemaVersions;", "modifier": "private final", "type": "Set<JsonSchemaVersion>", "declarator": "schemaVersions", "var_name": "schemaVersions"}, {"original_string": "private final boolean forceHttps;", "modifier": "private final", "type": "boolean", "declarator": "forceHttps", "var_name": "forceHttps"}, {"original_string": "private final boolean redirectToHttps;", "modifier": "private final", "type": "boolean", "declarator": "redirectToHttps", "var_name": "redirectToHttps"}, {"original_string": "private final Pattern redirectToHttpsBlocklistPattern;", "modifier": "private final", "type": "Pattern", "declarator": "redirectToHttpsBlocklistPattern", "var_name": "redirectToHttpsBlocklistPattern"}, {"original_string": "private final boolean enableCors;", "modifier": "private final", "type": "boolean", "declarator": "enableCors", "var_name": "enableCors"}, {"original_string": "private final Duration requestTimeout;", "modifier": "private final", "type": "Duration", "declarator": "requestTimeout", "var_name": "requestTimeout"}, {"original_string": "private final String actorPropsFactoryFullQualifiedClassname;", "modifier": "private final", "type": "String", "declarator": "actorPropsFactoryFullQualifiedClassname", "var_name": "actorPropsFactoryFullQualifiedClassname"}, {"original_string": "private final Set<HeaderDefinition> queryParamsAsHeaders;", "modifier": "private final", "type": "Set<HeaderDefinition>", "declarator": "queryParamsAsHeaders", "var_name": "queryParamsAsHeaders"}, {"original_string": "private final Set<String> additionalAcceptedMediaTypes;", "modifier": "private final", "type": "Set<String>", "declarator": "additionalAcceptedMediaTypes", "var_name": "additionalAcceptedMediaTypes"}, {"original_string": "private final Duration coordinatedShutdownTimeout;", "modifier": "private final", "type": "Duration", "declarator": "coordinatedShutdownTimeout", "var_name": "coordinatedShutdownTimeout"}], "methods": [{"identifier": "GatewayHttpConfig", "parameters": "(final DefaultHttpConfig basicHttpConfig, final ScopedConfig scopedConfig)", "modifiers": "private", "return": "", "signature": " GatewayHttpConfig(final DefaultHttpConfig basicHttpConfig, final ScopedConfig scopedConfig)", "full_signature": "private  GatewayHttpConfig(final DefaultHttpConfig basicHttpConfig, final ScopedConfig scopedConfig)", "class_method_signature": "GatewayHttpConfig.GatewayHttpConfig(final DefaultHttpConfig basicHttpConfig, final ScopedConfig scopedConfig)", "testcase": false, "constructor": true}, {"identifier": "getJsonSchemaVersions", "parameters": "(final Config httpScopedConfig)", "modifiers": "private static", "return": "Set<JsonSchemaVersion>", "signature": "Set<JsonSchemaVersion> getJsonSchemaVersions(final Config httpScopedConfig)", "full_signature": "private static Set<JsonSchemaVersion> getJsonSchemaVersions(final Config httpScopedConfig)", "class_method_signature": "GatewayHttpConfig.getJsonSchemaVersions(final Config httpScopedConfig)", "testcase": false, "constructor": false}, {"identifier": "tryToCreateBlocklistPattern", "parameters": "(final Config httpScopedConfig)", "modifiers": "private static", "return": "Pattern", "signature": "Pattern tryToCreateBlocklistPattern(final Config httpScopedConfig)", "full_signature": "private static Pattern tryToCreateBlocklistPattern(final Config httpScopedConfig)", "class_method_signature": "GatewayHttpConfig.tryToCreateBlocklistPattern(final Config httpScopedConfig)", "testcase": false, "constructor": false}, {"identifier": "createBlocklistPattern", "parameters": "(final Config httpScopedConfig)", "modifiers": "private static", "return": "Pattern", "signature": "Pattern createBlocklistPattern(final Config httpScopedConfig)", "full_signature": "private static Pattern createBlocklistPattern(final Config httpScopedConfig)", "class_method_signature": "GatewayHttpConfig.createBlocklistPattern(final Config httpScopedConfig)", "testcase": false, "constructor": false}, {"identifier": "getQueryParameterNamesAsHeaderDefinitions", "parameters": "(final Config scopedConfig)", "modifiers": "private static", "return": "Set<HeaderDefinition>", "signature": "Set<HeaderDefinition> getQueryParameterNamesAsHeaderDefinitions(final Config scopedConfig)", "full_signature": "private static Set<HeaderDefinition> getQueryParameterNamesAsHeaderDefinitions(final Config scopedConfig)", "class_method_signature": "GatewayHttpConfig.getQueryParameterNamesAsHeaderDefinitions(final Config scopedConfig)", "testcase": false, "constructor": false}, {"identifier": "throwConfigErrorIfHeaderKeysUnknown", "parameters": "(final Set<String> unknownHeaderKeys)", "modifiers": "private static", "return": "void", "signature": "void throwConfigErrorIfHeaderKeysUnknown(final Set<String> unknownHeaderKeys)", "full_signature": "private static void throwConfigErrorIfHeaderKeysUnknown(final Set<String> unknownHeaderKeys)", "class_method_signature": "GatewayHttpConfig.throwConfigErrorIfHeaderKeysUnknown(final Set<String> unknownHeaderKeys)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final Config config)", "modifiers": "public static", "return": "GatewayHttpConfig", "signature": "GatewayHttpConfig of(final Config config)", "full_signature": "public static GatewayHttpConfig of(final Config config)", "class_method_signature": "GatewayHttpConfig.of(final Config config)", "testcase": false, "constructor": false}, {"identifier": "getHostname", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getHostname()", "full_signature": "@Override public String getHostname()", "class_method_signature": "GatewayHttpConfig.getHostname()", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPort()", "full_signature": "@Override public int getPort()", "class_method_signature": "GatewayHttpConfig.getPort()", "testcase": false, "constructor": false}, {"identifier": "getCoordinatedShutdownTimeout", "parameters": "()", "modifiers": "@Override public", "return": "Duration", "signature": "Duration getCoordinatedShutdownTimeout()", "full_signature": "@Override public Duration getCoordinatedShutdownTimeout()", "class_method_signature": "GatewayHttpConfig.getCoordinatedShutdownTimeout()", "testcase": false, "constructor": false}, {"identifier": "getSupportedSchemaVersions", "parameters": "()", "modifiers": "@Override public", "return": "Set<JsonSchemaVersion>", "signature": "Set<JsonSchemaVersion> getSupportedSchemaVersions()", "full_signature": "@Override public Set<JsonSchemaVersion> getSupportedSchemaVersions()", "class_method_signature": "GatewayHttpConfig.getSupportedSchemaVersions()", "testcase": false, "constructor": false}, {"identifier": "isForceHttps", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isForceHttps()", "full_signature": "@Override public boolean isForceHttps()", "class_method_signature": "GatewayHttpConfig.isForceHttps()", "testcase": false, "constructor": false}, {"identifier": "isRedirectToHttps", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRedirectToHttps()", "full_signature": "@Override public boolean isRedirectToHttps()", "class_method_signature": "GatewayHttpConfig.isRedirectToHttps()", "testcase": false, "constructor": false}, {"identifier": "getRedirectToHttpsBlocklistPattern", "parameters": "()", "modifiers": "@Override public", "return": "Pattern", "signature": "Pattern getRedirectToHttpsBlocklistPattern()", "full_signature": "@Override public Pattern getRedirectToHttpsBlocklistPattern()", "class_method_signature": "GatewayHttpConfig.getRedirectToHttpsBlocklistPattern()", "testcase": false, "constructor": false}, {"identifier": "isEnableCors", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEnableCors()", "full_signature": "@Override public boolean isEnableCors()", "class_method_signature": "GatewayHttpConfig.isEnableCors()", "testcase": false, "constructor": false}, {"identifier": "getRequestTimeout", "parameters": "()", "modifiers": "@Override public", "return": "Duration", "signature": "Duration getRequestTimeout()", "full_signature": "@Override public Duration getRequestTimeout()", "class_method_signature": "GatewayHttpConfig.getRequestTimeout()", "testcase": false, "constructor": false}, {"identifier": "getActorPropsFactoryFullQualifiedClassname", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getActorPropsFactoryFullQualifiedClassname()", "full_signature": "@Override public String getActorPropsFactoryFullQualifiedClassname()", "class_method_signature": "GatewayHttpConfig.getActorPropsFactoryFullQualifiedClassname()", "testcase": false, "constructor": false}, {"identifier": "getQueryParametersAsHeaders", "parameters": "()", "modifiers": "@Override public", "return": "Set<HeaderDefinition>", "signature": "Set<HeaderDefinition> getQueryParametersAsHeaders()", "full_signature": "@Override public Set<HeaderDefinition> getQueryParametersAsHeaders()", "class_method_signature": "GatewayHttpConfig.getQueryParametersAsHeaders()", "testcase": false, "constructor": false}, {"identifier": "getAdditionalAcceptedMediaTypes", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAdditionalAcceptedMediaTypes()", "full_signature": "@Override public Set<String> getAdditionalAcceptedMediaTypes()", "class_method_signature": "GatewayHttpConfig.getAdditionalAcceptedMediaTypes()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@SuppressWarnings(\"OverlyComplexMethod\") @Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@SuppressWarnings(\"OverlyComplexMethod\") @Override public boolean equals(final Object o)", "class_method_signature": "GatewayHttpConfig.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "GatewayHttpConfig.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GatewayHttpConfig.toString()", "testcase": false, "constructor": false}], "file": "services/gateway/util/src/main/java/org/eclipse/ditto/services/gateway/util/config/endpoints/GatewayHttpConfig.java"}, "focal_method": {"identifier": "of", "parameters": "(final Config config)", "modifiers": "public static", "return": "GatewayHttpConfig", "body": "public static GatewayHttpConfig of(final Config config) {\n        final DefaultHttpConfig basicHttpConfig = DefaultHttpConfig.of(config);\n\n        return new GatewayHttpConfig(basicHttpConfig,\n                ConfigWithFallback.newInstance(config, basicHttpConfig.getConfigPath(),\n                        GatewayHttpConfigValue.values()));\n    }", "signature": "GatewayHttpConfig of(final Config config)", "full_signature": "public static GatewayHttpConfig of(final Config config)", "class_method_signature": "GatewayHttpConfig.of(final Config config)", "testcase": false, "constructor": false, "invocations": ["of", "newInstance", "getConfigPath", "values"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}