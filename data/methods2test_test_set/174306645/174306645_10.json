{"test_class": {"identifier": "DMNKogitoTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools/kogito-dmn/src/test/java/org/kie/kogito/dmn/DMNKogitoTest.java"}, "test_case": {"identifier": "testProfile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProfile() {\n        DMNRuntime dmnRuntime = DMNKogito.createGenericDMNRuntime(new InputStreamReader(DMNKogitoTest.class.getResourceAsStream(\"profile.dmn\")));\n        assertEquals(1, dmnRuntime.getModels().size());\n\n        DMNModel dmnModel = dmnRuntime.getModels().get(0);\n        assertEquals(0, dmnModel.getMessages(Severity.ERROR).size()); // nn any() is a Kie-extended built-in function.\n    }", "signature": "void testProfile()", "full_signature": "@Test public void testProfile()", "class_method_signature": "DMNKogitoTest.testProfile()", "testcase": true, "constructor": false, "invocations": ["createGenericDMNRuntime", "getResourceAsStream", "assertEquals", "size", "getModels", "get", "getModels", "assertEquals", "size", "getMessages"]}, "focal_class": {"identifier": "DMNKogito", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DMNKogito.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DMNKogito.class)", "var_name": "LOG"}], "methods": [{"identifier": "DMNKogito", "parameters": "()", "modifiers": "private", "return": "", "signature": " DMNKogito()", "full_signature": "private  DMNKogito()", "class_method_signature": "DMNKogito.DMNKogito()", "testcase": false, "constructor": true}, {"identifier": "createGenericDMNRuntime", "parameters": "(Reader... readers)", "modifiers": "public static", "return": "DMNRuntime", "signature": "DMNRuntime createGenericDMNRuntime(Reader... readers)", "full_signature": "public static DMNRuntime createGenericDMNRuntime(Reader... readers)", "class_method_signature": "DMNKogito.createGenericDMNRuntime(Reader... readers)", "testcase": false, "constructor": false}, {"identifier": "createGenericDMNRuntime", "parameters": "(Function<String, KieRuntimeFactory> kiePMMLRuntimeFactoryFunction, Reader... readers)", "modifiers": "public static", "return": "DMNRuntime", "signature": "DMNRuntime createGenericDMNRuntime(Function<String, KieRuntimeFactory> kiePMMLRuntimeFactoryFunction, Reader... readers)", "full_signature": "public static DMNRuntime createGenericDMNRuntime(Function<String, KieRuntimeFactory> kiePMMLRuntimeFactoryFunction, Reader... readers)", "class_method_signature": "DMNKogito.createGenericDMNRuntime(Function<String, KieRuntimeFactory> kiePMMLRuntimeFactoryFunction, Reader... readers)", "testcase": false, "constructor": false}, {"identifier": "modelByName", "parameters": "(DMNRuntime dmnRuntime, String modelName)", "modifiers": "public static", "return": "DMNModel", "signature": "DMNModel modelByName(DMNRuntime dmnRuntime, String modelName)", "full_signature": "public static DMNModel modelByName(DMNRuntime dmnRuntime, String modelName)", "class_method_signature": "DMNKogito.modelByName(DMNRuntime dmnRuntime, String modelName)", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(DMNRuntime dmnRuntime, String modelName, Map<String, Object> dmnContext)", "modifiers": "public static", "return": "DMNResult", "signature": "DMNResult evaluate(DMNRuntime dmnRuntime, String modelName, Map<String, Object> dmnContext)", "full_signature": "public static DMNResult evaluate(DMNRuntime dmnRuntime, String modelName, Map<String, Object> dmnContext)", "class_method_signature": "DMNKogito.evaluate(DMNRuntime dmnRuntime, String modelName, Map<String, Object> dmnContext)", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(DMNRuntime dmnRuntime, String modelNamespace, String modelName, Map<String,\n            Object> dmnContext)", "modifiers": "public static", "return": "DMNResult", "signature": "DMNResult evaluate(DMNRuntime dmnRuntime, String modelNamespace, String modelName, Map<String,\n            Object> dmnContext)", "full_signature": "public static DMNResult evaluate(DMNRuntime dmnRuntime, String modelNamespace, String modelName, Map<String,\n            Object> dmnContext)", "class_method_signature": "DMNKogito.evaluate(DMNRuntime dmnRuntime, String modelNamespace, String modelName, Map<String,\n            Object> dmnContext)", "testcase": false, "constructor": false}], "file": "drools/kogito-dmn/src/main/java/org/kie/kogito/dmn/DMNKogito.java"}, "focal_method": {"identifier": "createGenericDMNRuntime", "parameters": "(Reader... readers)", "modifiers": "public static", "return": "DMNRuntime", "body": "public static DMNRuntime createGenericDMNRuntime(Reader... readers) {\n        return createGenericDMNRuntime(null, readers);\n    }", "signature": "DMNRuntime createGenericDMNRuntime(Reader... readers)", "full_signature": "public static DMNRuntime createGenericDMNRuntime(Reader... readers)", "class_method_signature": "DMNKogito.createGenericDMNRuntime(Reader... readers)", "testcase": false, "constructor": false, "invocations": ["createGenericDMNRuntime"]}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}