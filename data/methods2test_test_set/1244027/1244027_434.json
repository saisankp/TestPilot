{"test_class": {"identifier": "ImmutableAppendedListTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<String> list;", "modifier": "private", "type": "List<String>", "declarator": "list", "var_name": "list"}, {"original_string": "private List<String> parent;", "modifier": "private", "type": "List<String>", "declarator": "parent", "var_name": "parent"}, {"original_string": "private String[] data;", "modifier": "private", "type": "String[]", "declarator": "data", "var_name": "data"}], "file": "modeshape-common/src/test/java/org/modeshape/common/collection/ImmutableAppendedListTest.java"}, "test_case": {"identifier": "shouldNotFindLastIndexOfValuesThatAreNotInList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotFindLastIndexOfValuesThatAreNotInList() {\n        assertThat(list.lastIndexOf(\"not found\"), is(-1));\n        assertThat(list.lastIndexOf(null), is(-1));\n    }", "signature": "void shouldNotFindLastIndexOfValuesThatAreNotInList()", "full_signature": "@Test public void shouldNotFindLastIndexOfValuesThatAreNotInList()", "class_method_signature": "ImmutableAppendedListTest.shouldNotFindLastIndexOfValuesThatAreNotInList()", "testcase": true, "constructor": false, "invocations": ["assertThat", "lastIndexOf", "is", "assertThat", "lastIndexOf", "is"]}, "focal_class": {"identifier": "ImmutableAppendedList", "superclass": "", "interfaces": "implements List<T>", "fields": [{"original_string": "private final List<T> parent;", "modifier": "private final", "type": "List<T>", "declarator": "parent", "var_name": "parent"}, {"original_string": "private final T element;", "modifier": "private final", "type": "T", "declarator": "element", "var_name": "element"}, {"original_string": "private final int size;", "modifier": "private final", "type": "int", "declarator": "size", "var_name": "size"}, {"original_string": "private transient int hc;", "modifier": "private transient", "type": "int", "declarator": "hc", "var_name": "hc"}], "methods": [{"identifier": "ImmutableAppendedList", "parameters": "( List<T> parent,\n                                  T element )", "modifiers": "public", "return": "", "signature": " ImmutableAppendedList( List<T> parent,\n                                  T element )", "full_signature": "public  ImmutableAppendedList( List<T> parent,\n                                  T element )", "class_method_signature": "ImmutableAppendedList.ImmutableAppendedList( List<T> parent,\n                                  T element )", "testcase": false, "constructor": true}, {"identifier": "contains", "parameters": "( Object o )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains( Object o )", "full_signature": "@Override public boolean contains( Object o )", "class_method_signature": "ImmutableAppendedList.contains( Object o )", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "( Collection<?> c )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAll( Collection<?> c )", "full_signature": "@Override public boolean containsAll( Collection<?> c )", "class_method_signature": "ImmutableAppendedList.containsAll( Collection<?> c )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( int index )", "modifiers": "@Override public", "return": "T", "signature": "T get( int index )", "full_signature": "@Override public T get( int index )", "class_method_signature": "ImmutableAppendedList.get( int index )", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "( Object o )", "modifiers": "@Override public", "return": "int", "signature": "int indexOf( Object o )", "full_signature": "@Override public int indexOf( Object o )", "class_method_signature": "ImmutableAppendedList.indexOf( Object o )", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "ImmutableAppendedList.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override @SuppressWarnings( \"synthetic-access\" ) public", "return": "Iterator<T>", "signature": "Iterator<T> iterator()", "full_signature": "@Override @SuppressWarnings( \"synthetic-access\" ) public Iterator<T> iterator()", "class_method_signature": "ImmutableAppendedList.iterator()", "testcase": false, "constructor": false}, {"identifier": "lastIndexOf", "parameters": "( Object o )", "modifiers": "@Override public", "return": "int", "signature": "int lastIndexOf( Object o )", "full_signature": "@Override public int lastIndexOf( Object o )", "class_method_signature": "ImmutableAppendedList.lastIndexOf( Object o )", "testcase": false, "constructor": false}, {"identifier": "listIterator", "parameters": "()", "modifiers": "@Override public", "return": "ListIterator<T>", "signature": "ListIterator<T> listIterator()", "full_signature": "@Override public ListIterator<T> listIterator()", "class_method_signature": "ImmutableAppendedList.listIterator()", "testcase": false, "constructor": false}, {"identifier": "listIterator", "parameters": "( final int index )", "modifiers": "@Override @SuppressWarnings( \"synthetic-access\" ) public", "return": "ListIterator<T>", "signature": "ListIterator<T> listIterator( final int index )", "full_signature": "@Override @SuppressWarnings( \"synthetic-access\" ) public ListIterator<T> listIterator( final int index )", "class_method_signature": "ImmutableAppendedList.listIterator( final int index )", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "ImmutableAppendedList.size()", "testcase": false, "constructor": false}, {"identifier": "subList", "parameters": "( int fromIndex,\n                            int toIndex )", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> subList( int fromIndex,\n                            int toIndex )", "full_signature": "@Override public List<T> subList( int fromIndex,\n                            int toIndex )", "class_method_signature": "ImmutableAppendedList.subList( int fromIndex,\n                            int toIndex )", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] toArray()", "full_signature": "@Override public Object[] toArray()", "class_method_signature": "ImmutableAppendedList.toArray()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "( X[] a )", "modifiers": "@Override @SuppressWarnings( \"unchecked\" ) public", "return": "X[]", "signature": "X[] toArray( X[] a )", "full_signature": "@Override @SuppressWarnings( \"unchecked\" ) public X[] toArray( X[] a )", "class_method_signature": "ImmutableAppendedList.toArray( X[] a )", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableAppendedList.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object obj )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object obj )", "full_signature": "@Override public boolean equals( Object obj )", "class_method_signature": "ImmutableAppendedList.equals( Object obj )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableAppendedList.toString()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( int index,\n                     T element )", "modifiers": "@Override public", "return": "void", "signature": "void add( int index,\n                     T element )", "full_signature": "@Override public void add( int index,\n                     T element )", "class_method_signature": "ImmutableAppendedList.add( int index,\n                     T element )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( T o )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add( T o )", "full_signature": "@Override public boolean add( T o )", "class_method_signature": "ImmutableAppendedList.add( T o )", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "( Collection<? extends T> c )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll( Collection<? extends T> c )", "full_signature": "@Override public boolean addAll( Collection<? extends T> c )", "class_method_signature": "ImmutableAppendedList.addAll( Collection<? extends T> c )", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "( int index,\n                           Collection<? extends T> c )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll( int index,\n                           Collection<? extends T> c )", "full_signature": "@Override public boolean addAll( int index,\n                           Collection<? extends T> c )", "class_method_signature": "ImmutableAppendedList.addAll( int index,\n                           Collection<? extends T> c )", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "ImmutableAppendedList.clear()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( Object o )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove( Object o )", "full_signature": "@Override public boolean remove( Object o )", "class_method_signature": "ImmutableAppendedList.remove( Object o )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( int index )", "modifiers": "@Override public", "return": "T", "signature": "T remove( int index )", "full_signature": "@Override public T remove( int index )", "class_method_signature": "ImmutableAppendedList.remove( int index )", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "( Collection<?> c )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll( Collection<?> c )", "full_signature": "@Override public boolean removeAll( Collection<?> c )", "class_method_signature": "ImmutableAppendedList.removeAll( Collection<?> c )", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "( Collection<?> c )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll( Collection<?> c )", "full_signature": "@Override public boolean retainAll( Collection<?> c )", "class_method_signature": "ImmutableAppendedList.retainAll( Collection<?> c )", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "( int index,\n                  T element )", "modifiers": "@Override public", "return": "T", "signature": "T set( int index,\n                  T element )", "full_signature": "@Override public T set( int index,\n                  T element )", "class_method_signature": "ImmutableAppendedList.set( int index,\n                  T element )", "testcase": false, "constructor": false}], "file": "modeshape-common/src/main/java/org/modeshape/common/collection/ImmutableAppendedList.java"}, "focal_method": {"identifier": "lastIndexOf", "parameters": "( Object o )", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int lastIndexOf( Object o ) {\n        if (element == o || (element != null && element.equals(o))) return size - 1;\n        return parent.lastIndexOf(o);\n    }", "signature": "int lastIndexOf( Object o )", "full_signature": "@Override public int lastIndexOf( Object o )", "class_method_signature": "ImmutableAppendedList.lastIndexOf( Object o )", "testcase": false, "constructor": false, "invocations": ["equals", "lastIndexOf"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}