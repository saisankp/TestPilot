{"test_class": {"identifier": "EnrichedItemDTOMapperTest", "superclass": "extends JavaTest", "interfaces": "", "fields": [{"original_string": "private CoreItemFactory itemFactory;", "modifier": "private", "type": "CoreItemFactory", "declarator": "itemFactory", "var_name": "itemFactory"}], "file": "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/item/EnrichedItemDTOMapperTest.java"}, "test_case": {"identifier": "testFiltering", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFiltering() {\n        GroupItem group = new GroupItem(\"TestGroup\");\n        GroupItem subGroup = new GroupItem(\"TestSubGroup\");\n        GenericItem switchItem = itemFactory.createItem(CoreItemFactory.SWITCH, \"TestSwitch\");\n        GenericItem numberItem = itemFactory.createItem(CoreItemFactory.NUMBER, \"TestNumber\");\n        GenericItem stringItem = itemFactory.createItem(CoreItemFactory.STRING, \"TestString\");\n\n        if (switchItem != null && numberItem != null && stringItem != null) {\n            group.addMember(subGroup);\n            group.addMember(switchItem);\n            group.addMember(numberItem);\n            subGroup.addMember(stringItem);\n        }\n\n        EnrichedGroupItemDTO dto = (EnrichedGroupItemDTO) EnrichedItemDTOMapper.map(group, false, null, null, null);\n        assertThat(dto.members.length, is(0));\n\n        dto = (EnrichedGroupItemDTO) EnrichedItemDTOMapper.map(group, true, null, null, null);\n        assertThat(dto.members.length, is(3));\n        assertThat(((EnrichedGroupItemDTO) dto.members[0]).members.length, is(1));\n\n        dto = (EnrichedGroupItemDTO) EnrichedItemDTOMapper.map(group, true,\n                i -> CoreItemFactory.NUMBER.equals(i.getType()), null, null);\n        assertThat(dto.members.length, is(1));\n\n        dto = (EnrichedGroupItemDTO) EnrichedItemDTOMapper.map(group, true,\n                i -> CoreItemFactory.NUMBER.equals(i.getType()) || i instanceof GroupItem, null, null);\n        assertThat(dto.members.length, is(2));\n        assertThat(((EnrichedGroupItemDTO) dto.members[0]).members.length, is(0));\n\n        dto = (EnrichedGroupItemDTO) EnrichedItemDTOMapper.map(group, true,\n                i -> CoreItemFactory.NUMBER.equals(i.getType()) || i instanceof GroupItem, null, null);\n        assertThat(dto.members.length, is(2));\n        assertThat(((EnrichedGroupItemDTO) dto.members[0]).members.length, is(0));\n\n        dto = (EnrichedGroupItemDTO) EnrichedItemDTOMapper.map(group, true,\n                i -> CoreItemFactory.NUMBER.equals(i.getType()) || i.getType().equals(CoreItemFactory.STRING)\n                        || i instanceof GroupItem,\n                null, null);\n        assertThat(dto.members.length, is(2));\n        assertThat(((EnrichedGroupItemDTO) dto.members[0]).members.length, is(1));\n    }", "signature": "void testFiltering()", "full_signature": "@Test public void testFiltering()", "class_method_signature": "EnrichedItemDTOMapperTest.testFiltering()", "testcase": true, "constructor": false, "invocations": ["createItem", "createItem", "createItem", "addMember", "addMember", "addMember", "addMember", "map", "assertThat", "is", "map", "assertThat", "is", "assertThat", "is", "map", "equals", "getType", "assertThat", "is", "map", "equals", "getType", "assertThat", "is", "assertThat", "is", "map", "equals", "getType", "assertThat", "is", "assertThat", "is", "map", "equals", "getType", "equals", "getType", "assertThat", "is", "assertThat", "is"]}, "focal_class": {"identifier": "EnrichedItemDTOMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(EnrichedItemDTOMapper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(EnrichedItemDTOMapper.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "map", "parameters": "(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale)", "modifiers": "public static", "return": "EnrichedItemDTO", "signature": "EnrichedItemDTO map(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale)", "full_signature": "public static EnrichedItemDTO map(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale)", "class_method_signature": "EnrichedItemDTOMapper.map(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(Item item, ItemDTO itemDTO, @Nullable UriBuilder uriBuilder, boolean drillDown,\n            @Nullable Predicate<Item> itemFilter, @Nullable Locale locale)", "modifiers": "private static", "return": "EnrichedItemDTO", "signature": "EnrichedItemDTO map(Item item, ItemDTO itemDTO, @Nullable UriBuilder uriBuilder, boolean drillDown,\n            @Nullable Predicate<Item> itemFilter, @Nullable Locale locale)", "full_signature": "private static EnrichedItemDTO map(Item item, ItemDTO itemDTO, @Nullable UriBuilder uriBuilder, boolean drillDown,\n            @Nullable Predicate<Item> itemFilter, @Nullable Locale locale)", "class_method_signature": "EnrichedItemDTOMapper.map(Item item, ItemDTO itemDTO, @Nullable UriBuilder uriBuilder, boolean drillDown,\n            @Nullable Predicate<Item> itemFilter, @Nullable Locale locale)", "testcase": false, "constructor": false}, {"identifier": "considerTransformation", "parameters": "(@Nullable StateDescription stateDescription)", "modifiers": "private static @Nullable", "return": "StateDescription", "signature": "StateDescription considerTransformation(@Nullable StateDescription stateDescription)", "full_signature": "private static @Nullable StateDescription considerTransformation(@Nullable StateDescription stateDescription)", "class_method_signature": "EnrichedItemDTOMapper.considerTransformation(@Nullable StateDescription stateDescription)", "testcase": false, "constructor": false}, {"identifier": "considerTransformation", "parameters": "(String state, Item item, @Nullable Locale locale)", "modifiers": "private static @Nullable", "return": "String", "signature": "String considerTransformation(String state, Item item, @Nullable Locale locale)", "full_signature": "private static @Nullable String considerTransformation(String state, Item item, @Nullable Locale locale)", "class_method_signature": "EnrichedItemDTOMapper.considerTransformation(String state, Item item, @Nullable Locale locale)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/item/EnrichedItemDTOMapper.java"}, "focal_method": {"identifier": "map", "parameters": "(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale)", "modifiers": "public static", "return": "EnrichedItemDTO", "body": "public static EnrichedItemDTO map(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale) {\n        ItemDTO itemDTO = ItemDTOMapper.map(item);\n        return map(item, itemDTO, uriBuilder, drillDown, itemFilter, locale);\n    }", "signature": "EnrichedItemDTO map(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale)", "full_signature": "public static EnrichedItemDTO map(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale)", "class_method_signature": "EnrichedItemDTOMapper.map(Item item, boolean drillDown, @Nullable Predicate<Item> itemFilter,\n            @Nullable UriBuilder uriBuilder, @Nullable Locale locale)", "testcase": false, "constructor": false, "invocations": ["map", "map"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}