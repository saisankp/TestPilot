{"test_class": {"identifier": "BambooPluginTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "BambooPlugin bamboo;", "modifier": "", "type": "BambooPlugin", "declarator": "bamboo", "var_name": "bamboo"}, {"original_string": "private Map<String, String> properties;", "modifier": "private", "type": "Map<String, String>", "declarator": "properties", "var_name": "properties"}], "file": "component/core/src/test/java/fr/norad/visuwall/plugin/bamboo/BambooPluginTest.java"}, "test_case": {"identifier": "should_get_a_valid_connection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_get_a_valid_connection() throws MalformedURLException {\n        BambooConnection connection = bamboo.getConnection(new URL(\"http://url\"), null);\n        assertFalse(connection.isClosed());\n    }", "signature": "void should_get_a_valid_connection()", "full_signature": "@Test public void should_get_a_valid_connection()", "class_method_signature": "BambooPluginTest.should_get_a_valid_connection()", "testcase": true, "constructor": false, "invocations": ["getConnection", "assertFalse", "isClosed"]}, "focal_class": {"identifier": "BambooPlugin", "superclass": "", "interfaces": "implements VisuwallPlugin<BambooConnection>", "fields": [], "methods": [{"identifier": "getConnection", "parameters": "(URL url, Map<String, String> properties)", "modifiers": "@Override public", "return": "BambooConnection", "signature": "BambooConnection getConnection(URL url, Map<String, String> properties)", "full_signature": "@Override public BambooConnection getConnection(URL url, Map<String, String> properties)", "class_method_signature": "BambooPlugin.getConnection(URL url, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "getConnectionClass", "parameters": "()", "modifiers": "@Override public", "return": "Class<BambooConnection>", "signature": "Class<BambooConnection> getConnectionClass()", "full_signature": "@Override public Class<BambooConnection> getConnectionClass()", "class_method_signature": "BambooPlugin.getConnectionClass()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "BambooPlugin.getName()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float getVersion()", "full_signature": "@Override public float getVersion()", "class_method_signature": "BambooPlugin.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getSoftwareId", "parameters": "(URL url, Map<String, String> properties)", "modifiers": "@Override public", "return": "SoftwareId", "signature": "SoftwareId getSoftwareId(URL url, Map<String, String> properties)", "full_signature": "@Override public SoftwareId getSoftwareId(URL url, Map<String, String> properties)", "class_method_signature": "BambooPlugin.getSoftwareId(URL url, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BambooPlugin.toString()", "testcase": false, "constructor": false}, {"identifier": "getPropertiesWithDefaultValue", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getPropertiesWithDefaultValue()", "full_signature": "@Override public Map<String, String> getPropertiesWithDefaultValue()", "class_method_signature": "BambooPlugin.getPropertiesWithDefaultValue()", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/plugin/bamboo/BambooPlugin.java"}, "focal_method": {"identifier": "getConnection", "parameters": "(URL url, Map<String, String> properties)", "modifiers": "@Override public", "return": "BambooConnection", "body": "@Override\n    public BambooConnection getConnection(URL url, Map<String, String> properties) {\n        BambooConnection connection = new BambooConnection();\n        String login = \"\";\n        String password = \"\";\n        if (properties != null) {\n            login = properties.get(\"login\");\n            password = properties.get(\"password\");\n        }\n        connection.connect(url.toString(), login, password);\n        return connection;\n    }", "signature": "BambooConnection getConnection(URL url, Map<String, String> properties)", "full_signature": "@Override public BambooConnection getConnection(URL url, Map<String, String> properties)", "class_method_signature": "BambooPlugin.getConnection(URL url, Map<String, String> properties)", "testcase": false, "constructor": false, "invocations": ["get", "get", "connect", "toString"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}