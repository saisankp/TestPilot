{"test_class": {"identifier": "PlaceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Place kpow = new Place(\"Kpow\", \"Washington\", \"USA\", 47.239, -123.143, 84.2, \"DZ\", 30000, false);", "modifier": "private final", "type": "Place", "declarator": "kpow = new Place(\"Kpow\", \"Washington\", \"USA\", 47.239, -123.143, 84.2, \"DZ\", 30000, false)", "var_name": "kpow"}], "file": "common/src/test/java/com/platypii/baseline/places/PlaceTest.java"}, "test_case": {"identifier": "place", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void place() {\n        assertEquals(\"Kpow\", kpow.name);\n        assertEquals(\"USA\", kpow.country);\n        assertEquals(47.239, kpow.latLng().latitude, 0.001);\n        assertEquals(-123.143, kpow.latLng().longitude, 0.001);\n        assertEquals(\"Kpow\", kpow.toString());\n        assertEquals(\"Kpow, USA\", kpow.niceString());\n        assertEquals(\"Kpow\", kpow.shortName());\n        assertFalse(kpow.isBASE());\n    }", "signature": "void place()", "full_signature": "@Test public void place()", "class_method_signature": "PlaceTest.place()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "assertEquals", "latLng", "assertEquals", "latLng", "assertEquals", "toString", "assertEquals", "niceString", "assertEquals", "shortName", "assertFalse", "isBASE"]}, "focal_class": {"identifier": "Place", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final String name;", "modifier": "public final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "public final String region;", "modifier": "public final", "type": "String", "declarator": "region", "var_name": "region"}, {"original_string": "public final String country;", "modifier": "public final", "type": "String", "declarator": "country", "var_name": "country"}, {"original_string": "public final double lat;", "modifier": "public final", "type": "double", "declarator": "lat", "var_name": "lat"}, {"original_string": "public final double lng;", "modifier": "public final", "type": "double", "declarator": "lng", "var_name": "lng"}, {"original_string": "public final double alt;", "modifier": "public final", "type": "double", "declarator": "alt", "var_name": "alt"}, {"original_string": "public final String objectType;", "modifier": "public final", "type": "String", "declarator": "objectType", "var_name": "objectType"}, {"original_string": "public final boolean wingsuitable;", "modifier": "public final", "type": "boolean", "declarator": "wingsuitable", "var_name": "wingsuitable"}, {"original_string": "public final double radius;", "modifier": "public final", "type": "double", "declarator": "radius", "var_name": "radius"}, {"original_string": "@Nullable\n    private LatLng lazyLatLng = null;", "modifier": "@Nullable\n    private", "type": "LatLng", "declarator": "lazyLatLng = null", "var_name": "lazyLatLng"}], "methods": [{"identifier": "Place", "parameters": "(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable)", "modifiers": "public", "return": "", "signature": " Place(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable)", "full_signature": "public  Place(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable)", "class_method_signature": "Place.Place(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable)", "testcase": false, "constructor": true}, {"identifier": "isBASE", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBASE()", "full_signature": "public boolean isBASE()", "class_method_signature": "Place.isBASE()", "testcase": false, "constructor": false}, {"identifier": "latLng", "parameters": "()", "modifiers": "@NonNull public", "return": "LatLng", "signature": "LatLng latLng()", "full_signature": "@NonNull public LatLng latLng()", "class_method_signature": "Place.latLng()", "testcase": false, "constructor": false}, {"identifier": "niceString", "parameters": "()", "modifiers": "@NonNull public", "return": "String", "signature": "String niceString()", "full_signature": "@NonNull public String niceString()", "class_method_signature": "Place.niceString()", "testcase": false, "constructor": false}, {"identifier": "shortName", "parameters": "()", "modifiers": "@NonNull public", "return": "String", "signature": "String shortName()", "full_signature": "@NonNull public String shortName()", "class_method_signature": "Place.shortName()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "String", "signature": "String toString()", "full_signature": "@NonNull @Override public String toString()", "class_method_signature": "Place.toString()", "testcase": false, "constructor": false}], "file": "common/src/main/java/com/platypii/baseline/places/Place.java"}, "focal_method": {"identifier": "Place", "parameters": "(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable)", "modifiers": "public", "return": "", "body": "public Place(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable) {\n        this.name = name;\n        this.region = region;\n        this.country = country;\n        this.lat = lat;\n        this.lng = lng;\n        this.alt = alt;\n        this.objectType = objectType;\n        this.radius = radius;\n        this.wingsuitable = wingsuitable;\n    }", "signature": " Place(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable)", "full_signature": "public  Place(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable)", "class_method_signature": "Place.Place(String name, String region, String country, double lat, double lng, double alt, String objectType, double radius, boolean wingsuitable)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}