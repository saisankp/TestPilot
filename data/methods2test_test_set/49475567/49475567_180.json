{"test_class": {"identifier": "SearchTaskFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private SearchTaskFactory searchTaskFactory;", "modifier": "@InjectMocks\n    private", "type": "SearchTaskFactory", "declarator": "searchTaskFactory", "var_name": "searchTaskFactory"}, {"original_string": "@Mock\n    private InitialSearchTaskBuilder initialSearchTaskBuilder;", "modifier": "@Mock\n    private", "type": "InitialSearchTaskBuilder", "declarator": "initialSearchTaskBuilder", "var_name": "initialSearchTaskBuilder"}, {"original_string": "@Mock\n    private SpawnedSearchTaskBuilder spawnedSearchTaskBuilder;", "modifier": "@Mock\n    private", "type": "SpawnedSearchTaskBuilder", "declarator": "spawnedSearchTaskBuilder", "var_name": "spawnedSearchTaskBuilder"}, {"original_string": "private SearchPolicy searchPolicy;", "modifier": "private", "type": "SearchPolicy", "declarator": "searchPolicy", "var_name": "searchPolicy"}, {"original_string": "private LocationTokens locationTokens;", "modifier": "private", "type": "LocationTokens", "declarator": "locationTokens", "var_name": "locationTokens"}, {"original_string": "private List<SearchTask> expectedTasks;", "modifier": "private", "type": "List<SearchTask>", "declarator": "expectedTasks", "var_name": "expectedTasks"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/search/task/SearchTaskFactoryTest.java"}, "test_case": {"identifier": "testBuildSubsearchTasks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildSubsearchTasks() {\n        SearchResult searchResult = new SearchResult(searchPolicy, locationTokens);\n        Mockito.when(spawnedSearchTaskBuilder.getSearchTasks(searchResult)).thenReturn(expectedTasks);\n        List<SearchTask> result = searchTaskFactory.buildSubsearchTasks(searchResult);\n        assertThat(result).isSameAs(expectedTasks);\n    }", "signature": "void testBuildSubsearchTasks()", "full_signature": "@Test public void testBuildSubsearchTasks()", "class_method_signature": "SearchTaskFactoryTest.testBuildSubsearchTasks()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getSearchTasks", "buildSubsearchTasks", "isSameAs", "assertThat"]}, "focal_class": {"identifier": "SearchTaskFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final InitialSearchTaskBuilder initialSearchTaskBuilder;", "modifier": "private final", "type": "InitialSearchTaskBuilder", "declarator": "initialSearchTaskBuilder", "var_name": "initialSearchTaskBuilder"}, {"original_string": "private final SpawnedSearchTaskBuilder spawnedSearchTaskBuilder;", "modifier": "private final", "type": "SpawnedSearchTaskBuilder", "declarator": "spawnedSearchTaskBuilder", "var_name": "spawnedSearchTaskBuilder"}], "methods": [{"identifier": "SearchTaskFactory", "parameters": "(InitialSearchTaskBuilder initialSearchTaskBuilder,\n      SpawnedSearchTaskBuilder spawnedSearchTaskBuilder)", "modifiers": "public", "return": "", "signature": " SearchTaskFactory(InitialSearchTaskBuilder initialSearchTaskBuilder,\n      SpawnedSearchTaskBuilder spawnedSearchTaskBuilder)", "full_signature": "public  SearchTaskFactory(InitialSearchTaskBuilder initialSearchTaskBuilder,\n      SpawnedSearchTaskBuilder spawnedSearchTaskBuilder)", "class_method_signature": "SearchTaskFactory.SearchTaskFactory(InitialSearchTaskBuilder initialSearchTaskBuilder,\n      SpawnedSearchTaskBuilder spawnedSearchTaskBuilder)", "testcase": false, "constructor": true}, {"identifier": "buildInitialSearchTasks", "parameters": "(SearchPolicy searchPolicy, LocationTokens locationTokens)", "modifiers": "public", "return": "List<SearchTask>", "signature": "List<SearchTask> buildInitialSearchTasks(SearchPolicy searchPolicy, LocationTokens locationTokens)", "full_signature": "public List<SearchTask> buildInitialSearchTasks(SearchPolicy searchPolicy, LocationTokens locationTokens)", "class_method_signature": "SearchTaskFactory.buildInitialSearchTasks(SearchPolicy searchPolicy, LocationTokens locationTokens)", "testcase": false, "constructor": false}, {"identifier": "buildSubsearchTasks", "parameters": "(SearchResult searchResult)", "modifiers": "public", "return": "List<SearchTask>", "signature": "List<SearchTask> buildSubsearchTasks(SearchResult searchResult)", "full_signature": "public List<SearchTask> buildSubsearchTasks(SearchResult searchResult)", "class_method_signature": "SearchTaskFactory.buildSubsearchTasks(SearchResult searchResult)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/search/task/SearchTaskFactory.java"}, "focal_method": {"identifier": "buildSubsearchTasks", "parameters": "(SearchResult searchResult)", "modifiers": "public", "return": "List<SearchTask>", "body": "public List<SearchTask> buildSubsearchTasks(SearchResult searchResult)\n  {\n    return this.spawnedSearchTaskBuilder.getSearchTasks(searchResult);\n  }", "signature": "List<SearchTask> buildSubsearchTasks(SearchResult searchResult)", "full_signature": "public List<SearchTask> buildSubsearchTasks(SearchResult searchResult)", "class_method_signature": "SearchTaskFactory.buildSubsearchTasks(SearchResult searchResult)", "testcase": false, "constructor": false, "invocations": ["getSearchTasks"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}