{"test_class": {"identifier": "MusicalCarriageTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/test/java/com/insightfullogic/java8/examples/chapter4/MusicalCarriageTest.java"}, "test_case": {"identifier": "rocksLikeACarriage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void rocksLikeACarriage() {\n        Assert.assertEquals(\"... from side to side\", new MusicalCarriage().rock());\n    }", "signature": "void rocksLikeACarriage()", "full_signature": "@Test public void rocksLikeACarriage()", "class_method_signature": "MusicalCarriageTest.rocksLikeACarriage()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "rock"]}, "focal_class": {"identifier": "MusicalCarriage", "superclass": "", "interfaces": "implements Carriage, Jukebox", "fields": [], "methods": [{"identifier": "rock", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String rock()", "full_signature": "@Override public String rock()", "class_method_signature": "MusicalCarriage.rock()", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/insightfullogic/java8/examples/chapter4/MusicalCarriage.java"}, "focal_method": {"identifier": "rock", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String rock() {\n        return Carriage.super.rock();\n    }", "signature": "String rock()", "full_signature": "@Override public String rock()", "class_method_signature": "MusicalCarriage.rock()", "testcase": false, "constructor": false, "invocations": ["rock"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}