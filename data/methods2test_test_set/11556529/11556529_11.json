{"test_class": {"identifier": "NonConstructableSubClassTest", "superclass": "", "interfaces": "", "fields": [], "file": "examples/src/test/java/NonConstructableSubClassTest.java"}, "test_case": {"identifier": "shouldCreateBaseClassInstanceEvenWithSubclassNewInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCreateBaseClassInstanceEvenWithSubclassNewInstance() throws NoSuchMethodException {\n        final NonConstructableBaseClassWithField instance =\n                NonConstructableBaseClassWithField.newInstance(NonConstructableBaseClassWithField.class, 5);\n        assertThat(valueOf(instance.getFieldA()), is(5));\n    }", "signature": "void shouldCreateBaseClassInstanceEvenWithSubclassNewInstance()", "full_signature": "@Test public void shouldCreateBaseClassInstanceEvenWithSubclassNewInstance()", "class_method_signature": "NonConstructableSubClassTest.shouldCreateBaseClassInstanceEvenWithSubclassNewInstance()", "testcase": true, "constructor": false, "invocations": ["newInstance", "assertThat", "valueOf", "getFieldA", "is"]}, "focal_class": {"identifier": "NonConstructableSubClass", "superclass": "extends NonConstructableBaseClassWithField", "interfaces": "", "fields": [{"original_string": "private final int fieldB;", "modifier": "private final", "type": "int", "declarator": "fieldB", "var_name": "fieldB"}, {"original_string": "private final int fieldC;", "modifier": "private final", "type": "int", "declarator": "fieldC", "var_name": "fieldC"}, {"original_string": "static final Class[] fullConstructorArgTypes = {int.class, int.class, int.class};", "modifier": "static final", "type": "Class[]", "declarator": "fullConstructorArgTypes = {int.class, int.class, int.class}", "var_name": "fullConstructorArgTypes"}, {"original_string": "static final Constructor<NonConstructableSubClass> fullConstructor;", "modifier": "static final", "type": "Constructor<NonConstructableSubClass>", "declarator": "fullConstructor", "var_name": "fullConstructor"}], "methods": [{"identifier": "newInstance", "parameters": "()", "modifiers": "public static", "return": "NonConstructableSubClass", "signature": "NonConstructableSubClass newInstance()", "full_signature": "public static NonConstructableSubClass newInstance()", "class_method_signature": "NonConstructableSubClass.newInstance()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(int argA)", "modifiers": "public static", "return": "NonConstructableSubClass", "signature": "NonConstructableSubClass newInstance(int argA)", "full_signature": "public static NonConstructableSubClass newInstance(int argA)", "class_method_signature": "NonConstructableSubClass.newInstance(int argA)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(int argA, int argB, int argC)", "modifiers": "public static", "return": "NonConstructableSubClass", "signature": "NonConstructableSubClass newInstance(int argA, int argB, int argC)", "full_signature": "public static NonConstructableSubClass newInstance(int argA, int argB, int argC)", "class_method_signature": "NonConstructableSubClass.newInstance(int argA, int argB, int argC)", "testcase": false, "constructor": false}, {"identifier": "NonConstructableSubClass", "parameters": "(int argA, int argB, int argC)", "modifiers": "public", "return": "", "signature": " NonConstructableSubClass(int argA, int argB, int argC)", "full_signature": "public  NonConstructableSubClass(int argA, int argB, int argC)", "class_method_signature": "NonConstructableSubClass.NonConstructableSubClass(int argA, int argB, int argC)", "testcase": false, "constructor": true}, {"identifier": "NonConstructableSubClass", "parameters": "(int argA)", "modifiers": "public", "return": "", "signature": " NonConstructableSubClass(int argA)", "full_signature": "public  NonConstructableSubClass(int argA)", "class_method_signature": "NonConstructableSubClass.NonConstructableSubClass(int argA)", "testcase": false, "constructor": true}, {"identifier": "getFieldB", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFieldB()", "full_signature": "public int getFieldB()", "class_method_signature": "NonConstructableSubClass.getFieldB()", "testcase": false, "constructor": false}, {"identifier": "getFieldC", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFieldC()", "full_signature": "public int getFieldC()", "class_method_signature": "NonConstructableSubClass.getFieldC()", "testcase": false, "constructor": false}], "file": "examples/src/main/java/NonConstructableSubClass.java"}, "focal_method": {"identifier": "newInstance", "parameters": "()", "modifiers": "public static", "return": "NonConstructableSubClass", "body": "public static NonConstructableSubClass newInstance()\n            throws NoSuchMethodException {\n        return NonConstructableBaseClassWithField.newInstance(NonConstructableSubClass.class, 5);\n    }", "signature": "NonConstructableSubClass newInstance()", "full_signature": "public static NonConstructableSubClass newInstance()", "class_method_signature": "NonConstructableSubClass.newInstance()", "testcase": false, "constructor": false, "invocations": ["newInstance"]}, "repository": {"repo_id": 11556529, "url": "https://github.com/giltene/GilExamples", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 36, "size": 514, "license": "licensed"}}