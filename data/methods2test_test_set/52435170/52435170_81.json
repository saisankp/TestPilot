{"test_class": {"identifier": "SqlScriptTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_SCRIPT =\n        \"code1 ;--comment\\n\" +                           // code with an inline comment\n        \" code2; --comment\\n\" +                          // code with an inline comment\n        \"\\tcode3; -- comment\\n\" +                        // code with an inline comment\n        \"-- comment\\n\" +                                 // just a comment\n        \" -- comment\\n\" +                                // just a comment\n        \"code4\\t;\\n\" +                                   // one statement\n        \" code5 ; code6;\\n\" +                            // line with two statements\n        \"code7; // comment\\n\" +                          // code with C style comment\n        \"/* comment */ code8;\\n\" +                       // multiline comment in a single line followed by code\n        \"/** comment\\n comment\\n comment **/ code9;\" +   // multi line comment followed by code\n        \"\\tcode /* comment */ code10;\\n\" +               // code with comments\n        \"code\\n code,\\n code\\n code\\n code\\n code11 ;\" + // multiline code\n        \" code12\\t; # comment\\n\" +                       // code followed by MySQL style single line comment\n        \" \\n\\n;\\n\";", "modifier": "private static final", "type": "String", "declarator": "TEST_SCRIPT =\n        \"code1 ;--comment\\n\" +                           // code with an inline comment\n        \" code2; --comment\\n\" +                          // code with an inline comment\n        \"\\tcode3; -- comment\\n\" +                        // code with an inline comment\n        \"-- comment\\n\" +                                 // just a comment\n        \" -- comment\\n\" +                                // just a comment\n        \"code4\\t;\\n\" +                                   // one statement\n        \" code5 ; code6;\\n\" +                            // line with two statements\n        \"code7; // comment\\n\" +                          // code with C style comment\n        \"/* comment */ code8;\\n\" +                       // multiline comment in a single line followed by code\n        \"/** comment\\n comment\\n comment **/ code9;\" +   // multi line comment followed by code\n        \"\\tcode /* comment */ code10;\\n\" +               // code with comments\n        \"code\\n code,\\n code\\n code\\n code\\n code11 ;\" + // multiline code\n        \" code12\\t; # comment\\n\" +                       // code followed by MySQL style single line comment\n        \" \\n\\n;\\n\"", "var_name": "TEST_SCRIPT"}], "file": "rdbms/src/test/java/eu/drus/jpa/unit/sql/dbunit/SqlScriptTest.java"}, "test_case": {"identifier": "testSpliteratorIsNotSupported", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void testSpliteratorIsNotSupported() {\n        // GIVEN\n        final SqlScript script = new SqlScript(TEST_SCRIPT);\n\n        // WHEN\n        script.spliterator();\n\n        // THEN\n        // UnsupportedOperationException is thrown\n    }", "signature": "void testSpliteratorIsNotSupported()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testSpliteratorIsNotSupported()", "class_method_signature": "SqlScriptTest.testSpliteratorIsNotSupported()", "testcase": true, "constructor": false, "invocations": ["spliterator"]}, "focal_class": {"identifier": "SqlScript", "superclass": "", "interfaces": "implements Iterable<String>", "fields": [{"original_string": "private static final String COMMENT_PATTERN = \"(?:--.*)|(?:/\\\\*(?:[^*]|(?:\\\\*+[^*/]))*\\\\*+/)|(?://.*)|(?:#.*)\";", "modifier": "private static final", "type": "String", "declarator": "COMMENT_PATTERN = \"(?:--.*)|(?:/\\\\*(?:[^*]|(?:\\\\*+[^*/]))*\\\\*+/)|(?://.*)|(?:#.*)\"", "var_name": "COMMENT_PATTERN"}, {"original_string": "private String script;", "modifier": "private", "type": "String", "declarator": "script", "var_name": "script"}], "methods": [{"identifier": "SqlScript", "parameters": "(final String script)", "modifiers": "public", "return": "", "signature": " SqlScript(final String script)", "full_signature": "public  SqlScript(final String script)", "class_method_signature": "SqlScript.SqlScript(final String script)", "testcase": false, "constructor": true}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> iterator()", "full_signature": "@Override public Iterator<String> iterator()", "class_method_signature": "SqlScript.iterator()", "testcase": false, "constructor": false}, {"identifier": "spliterator", "parameters": "()", "modifiers": "@Override public", "return": "Spliterator<String>", "signature": "Spliterator<String> spliterator()", "full_signature": "@Override public Spliterator<String> spliterator()", "class_method_signature": "SqlScript.spliterator()", "testcase": false, "constructor": false}], "file": "rdbms/src/main/java/eu/drus/jpa/unit/sql/dbunit/SqlScript.java"}, "focal_method": {"identifier": "spliterator", "parameters": "()", "modifiers": "@Override public", "return": "Spliterator<String>", "body": "@Override\n    public Spliterator<String> spliterator() {\n        throw new UnsupportedOperationException();\n    }", "signature": "Spliterator<String> spliterator()", "full_signature": "@Override public Spliterator<String> spliterator()", "class_method_signature": "SqlScript.spliterator()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}