{"test_class": {"identifier": "GasteigerMarsiliPartialChargesTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "private IChemObjectBuilder      builder = SilentChemObjectBuilder.getInstance();", "modifier": "private", "type": "IChemObjectBuilder", "declarator": "builder = SilentChemObjectBuilder.getInstance()", "var_name": "builder"}, {"original_string": "private LonePairElectronChecker lpcheck = new LonePairElectronChecker();", "modifier": "private", "type": "LonePairElectronChecker", "declarator": "lpcheck = new LonePairElectronChecker()", "var_name": "lpcheck"}], "file": "tool/charges/src/test/java/org/openscience/cdk/charges/GasteigerMarsiliPartialChargesTest.java"}, "test_case": {"identifier": "testGetChiCatHydrogen", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetChiCatHydrogen() throws Exception {\n\n        GasteigerMarsiliPartialCharges peoe = new GasteigerMarsiliPartialCharges();\n\n        Assert.assertEquals(20, peoe.getMaxGasteigerIters(), 0.01);\n\n    }", "signature": "void testGetChiCatHydrogen()", "full_signature": "@Test public void testGetChiCatHydrogen()", "class_method_signature": "GasteigerMarsiliPartialChargesTest.testGetChiCatHydrogen()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getMaxGasteigerIters"]}, "focal_class": {"identifier": "GasteigerMarsiliPartialCharges", "superclass": "", "interfaces": "implements IChargeCalculator", "fields": [{"original_string": "private double DEOC_HYDROGEN = 20.02;", "modifier": "private", "type": "double", "declarator": "DEOC_HYDROGEN = 20.02", "var_name": "DEOC_HYDROGEN"}, {"original_string": "private double MX_DAMP       = 0.5;", "modifier": "private", "type": "double", "declarator": "MX_DAMP       = 0.5", "var_name": "MX_DAMP"}, {"original_string": "private double MX_ITERATIONS = 20;", "modifier": "private", "type": "double", "declarator": "MX_ITERATIONS = 20", "var_name": "MX_ITERATIONS"}, {"original_string": "private int    STEP_SIZE     = 5;", "modifier": "private", "type": "int", "declarator": "STEP_SIZE     = 5", "var_name": "STEP_SIZE"}], "methods": [{"identifier": "GasteigerMarsiliPartialCharges", "parameters": "()", "modifiers": "public", "return": "", "signature": " GasteigerMarsiliPartialCharges()", "full_signature": "public  GasteigerMarsiliPartialCharges()", "class_method_signature": "GasteigerMarsiliPartialCharges.GasteigerMarsiliPartialCharges()", "testcase": false, "constructor": true}, {"identifier": "setChiCatHydrogen", "parameters": "(double chiCat)", "modifiers": "public", "return": "void", "signature": "void setChiCatHydrogen(double chiCat)", "full_signature": "public void setChiCatHydrogen(double chiCat)", "class_method_signature": "GasteigerMarsiliPartialCharges.setChiCatHydrogen(double chiCat)", "testcase": false, "constructor": false}, {"identifier": "setMaxGasteigerDamp", "parameters": "(double damp)", "modifiers": "public", "return": "void", "signature": "void setMaxGasteigerDamp(double damp)", "full_signature": "public void setMaxGasteigerDamp(double damp)", "class_method_signature": "GasteigerMarsiliPartialCharges.setMaxGasteigerDamp(double damp)", "testcase": false, "constructor": false}, {"identifier": "setMaxGasteigerIters", "parameters": "(double iters)", "modifiers": "public", "return": "void", "signature": "void setMaxGasteigerIters(double iters)", "full_signature": "public void setMaxGasteigerIters(double iters)", "class_method_signature": "GasteigerMarsiliPartialCharges.setMaxGasteigerIters(double iters)", "testcase": false, "constructor": false}, {"identifier": "getChiCatHydrogen", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getChiCatHydrogen()", "full_signature": "public double getChiCatHydrogen()", "class_method_signature": "GasteigerMarsiliPartialCharges.getChiCatHydrogen()", "testcase": false, "constructor": false}, {"identifier": "getMaxGasteigerDamp", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxGasteigerDamp()", "full_signature": "public double getMaxGasteigerDamp()", "class_method_signature": "GasteigerMarsiliPartialCharges.getMaxGasteigerDamp()", "testcase": false, "constructor": false}, {"identifier": "getMaxGasteigerIters", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxGasteigerIters()", "full_signature": "public double getMaxGasteigerIters()", "class_method_signature": "GasteigerMarsiliPartialCharges.getMaxGasteigerIters()", "testcase": false, "constructor": false}, {"identifier": "assignGasteigerMarsiliSigmaPartialCharges", "parameters": "(IAtomContainer ac, boolean setCharge)", "modifiers": "public", "return": "IAtomContainer", "signature": "IAtomContainer assignGasteigerMarsiliSigmaPartialCharges(IAtomContainer ac, boolean setCharge)", "full_signature": "public IAtomContainer assignGasteigerMarsiliSigmaPartialCharges(IAtomContainer ac, boolean setCharge)", "class_method_signature": "GasteigerMarsiliPartialCharges.assignGasteigerMarsiliSigmaPartialCharges(IAtomContainer ac, boolean setCharge)", "testcase": false, "constructor": false}, {"identifier": "calculateCharges", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "void", "signature": "void calculateCharges(IAtomContainer container)", "full_signature": "@Override public void calculateCharges(IAtomContainer container)", "class_method_signature": "GasteigerMarsiliPartialCharges.calculateCharges(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getStepSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getStepSize()", "full_signature": "public int getStepSize()", "class_method_signature": "GasteigerMarsiliPartialCharges.getStepSize()", "testcase": false, "constructor": false}, {"identifier": "setStepSize", "parameters": "(int step)", "modifiers": "public", "return": "void", "signature": "void setStepSize(int step)", "full_signature": "public void setStepSize(int step)", "class_method_signature": "GasteigerMarsiliPartialCharges.setStepSize(int step)", "testcase": false, "constructor": false}, {"identifier": "assignGasteigerSigmaMarsiliFactors", "parameters": "(IAtomContainer ac)", "modifiers": "public", "return": "double[]", "signature": "double[] assignGasteigerSigmaMarsiliFactors(IAtomContainer ac)", "full_signature": "public double[] assignGasteigerSigmaMarsiliFactors(IAtomContainer ac)", "class_method_signature": "GasteigerMarsiliPartialCharges.assignGasteigerSigmaMarsiliFactors(IAtomContainer ac)", "testcase": false, "constructor": false}], "file": "tool/charges/src/main/java/org/openscience/cdk/charges/GasteigerMarsiliPartialCharges.java"}, "focal_method": {"identifier": "getChiCatHydrogen", "parameters": "()", "modifiers": "public", "return": "double", "body": "public double getChiCatHydrogen() {\n        return DEOC_HYDROGEN;\n    }", "signature": "double getChiCatHydrogen()", "full_signature": "public double getChiCatHydrogen()", "class_method_signature": "GasteigerMarsiliPartialCharges.getChiCatHydrogen()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}