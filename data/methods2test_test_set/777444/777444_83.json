{"test_class": {"identifier": "HistoryStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HistoryStore store;", "modifier": "private", "type": "HistoryStore", "declarator": "store", "var_name": "store"}], "file": "agent/core/src/test/java/org/jolokia/history/HistoryStoreTest.java"}, "test_case": {"identifier": "size", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void size() throws Exception {\n        assertTrue(store.getSize() < 100);\n        singleAttributeRead();\n        assertTrue(store.getSize() > 100);\n    }", "signature": "void size()", "full_signature": "@Test public void size()", "class_method_signature": "HistoryStoreTest.size()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getSize", "singleAttributeRead", "assertTrue", "getSize"]}, "focal_class": {"identifier": "HistoryStore", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int globalMaxEntries;", "modifier": "private", "type": "int", "declarator": "globalMaxEntries", "var_name": "globalMaxEntries"}, {"original_string": "private Map<HistoryKey, HistoryEntry> historyStore;", "modifier": "private", "type": "Map<HistoryKey, HistoryEntry>", "declarator": "historyStore", "var_name": "historyStore"}, {"original_string": "private Map<HistoryKey, HistoryLimit> patterns;", "modifier": "private", "type": "Map<HistoryKey, HistoryLimit>", "declarator": "patterns", "var_name": "patterns"}, {"original_string": "private static final String KEY_HISTORY = \"history\";", "modifier": "private static final", "type": "String", "declarator": "KEY_HISTORY = \"history\"", "var_name": "KEY_HISTORY"}, {"original_string": "private static final String KEY_VALUE = \"value\";", "modifier": "private static final", "type": "String", "declarator": "KEY_VALUE = \"value\"", "var_name": "KEY_VALUE"}, {"original_string": "private static final String KEY_TIMESTAMP = \"timestamp\";", "modifier": "private static final", "type": "String", "declarator": "KEY_TIMESTAMP = \"timestamp\"", "var_name": "KEY_TIMESTAMP"}, {"original_string": "private Map<RequestType,HistoryUpdater> historyUpdaters = new HashMap<RequestType, HistoryUpdater>();", "modifier": "private", "type": "Map<RequestType,HistoryUpdater>", "declarator": "historyUpdaters = new HashMap<RequestType, HistoryUpdater>()", "var_name": "historyUpdaters"}], "methods": [{"identifier": "HistoryStore", "parameters": "(int pTotalMaxEntries)", "modifiers": "public", "return": "", "signature": " HistoryStore(int pTotalMaxEntries)", "full_signature": "public  HistoryStore(int pTotalMaxEntries)", "class_method_signature": "HistoryStore.HistoryStore(int pTotalMaxEntries)", "testcase": false, "constructor": true}, {"identifier": "getGlobalMaxEntries", "parameters": "()", "modifiers": "public synchronized", "return": "int", "signature": "int getGlobalMaxEntries()", "full_signature": "public synchronized int getGlobalMaxEntries()", "class_method_signature": "HistoryStore.getGlobalMaxEntries()", "testcase": false, "constructor": false}, {"identifier": "setGlobalMaxEntries", "parameters": "(int pGlobalMaxEntries)", "modifiers": "public synchronized", "return": "void", "signature": "void setGlobalMaxEntries(int pGlobalMaxEntries)", "full_signature": "public synchronized void setGlobalMaxEntries(int pGlobalMaxEntries)", "class_method_signature": "HistoryStore.setGlobalMaxEntries(int pGlobalMaxEntries)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(HistoryKey pKey, HistoryLimit pHistoryLimit)", "modifiers": "public synchronized", "return": "void", "signature": "void configure(HistoryKey pKey, HistoryLimit pHistoryLimit)", "full_signature": "public synchronized void configure(HistoryKey pKey, HistoryLimit pHistoryLimit)", "class_method_signature": "HistoryStore.configure(HistoryKey pKey, HistoryLimit pHistoryLimit)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void reset()", "full_signature": "public synchronized void reset()", "class_method_signature": "HistoryStore.reset()", "testcase": false, "constructor": false}, {"identifier": "updateAndAdd", "parameters": "(JmxRequest pJmxReq, JSONObject pJson)", "modifiers": "public synchronized", "return": "void", "signature": "void updateAndAdd(JmxRequest pJmxReq, JSONObject pJson)", "full_signature": "public synchronized void updateAndAdd(JmxRequest pJmxReq, JSONObject pJson)", "class_method_signature": "HistoryStore.updateAndAdd(JmxRequest pJmxReq, JSONObject pJson)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "public synchronized", "return": "int", "signature": "int getSize()", "full_signature": "public synchronized int getSize()", "class_method_signature": "HistoryStore.getSize()", "testcase": false, "constructor": false}, {"identifier": "initHistoryUpdaters", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initHistoryUpdaters()", "full_signature": "private void initHistoryUpdaters()", "class_method_signature": "HistoryStore.initHistoryUpdaters()", "testcase": false, "constructor": false}, {"identifier": "removeEntries", "parameters": "(HistoryKey pKey)", "modifiers": "private", "return": "void", "signature": "void removeEntries(HistoryKey pKey)", "full_signature": "private void removeEntries(HistoryKey pKey)", "class_method_signature": "HistoryStore.removeEntries(HistoryKey pKey)", "testcase": false, "constructor": false}, {"identifier": "updateReadHistory", "parameters": "(JmxReadRequest pJmxReq, JSONObject pJson, long pTimestamp)", "modifiers": "private", "return": "void", "signature": "void updateReadHistory(JmxReadRequest pJmxReq, JSONObject pJson, long pTimestamp)", "full_signature": "private void updateReadHistory(JmxReadRequest pJmxReq, JSONObject pJson, long pTimestamp)", "class_method_signature": "HistoryStore.updateReadHistory(JmxReadRequest pJmxReq, JSONObject pJson, long pTimestamp)", "testcase": false, "constructor": false}, {"identifier": "updateHistoryForPatternRead", "parameters": "(JmxReadRequest pJmxReq, long pTimestamp, Map<String, Object> pValues)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject updateHistoryForPatternRead(JmxReadRequest pJmxReq, long pTimestamp, Map<String, Object> pValues)", "full_signature": "private JSONObject updateHistoryForPatternRead(JmxReadRequest pJmxReq, long pTimestamp, Map<String, Object> pValues)", "class_method_signature": "HistoryStore.updateHistoryForPatternRead(JmxReadRequest pJmxReq, long pTimestamp, Map<String, Object> pValues)", "testcase": false, "constructor": false}, {"identifier": "addPathFilteredAttributeValue", "parameters": "(JmxReadRequest pJmxReq, long pTimestamp, String pBeanName, Object pValue)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject addPathFilteredAttributeValue(JmxReadRequest pJmxReq, long pTimestamp, String pBeanName, Object pValue)", "full_signature": "private JSONObject addPathFilteredAttributeValue(JmxReadRequest pJmxReq, long pTimestamp, String pBeanName, Object pValue)", "class_method_signature": "HistoryStore.addPathFilteredAttributeValue(JmxReadRequest pJmxReq, long pTimestamp, String pBeanName, Object pValue)", "testcase": false, "constructor": false}, {"identifier": "updateHistoryForPatternReadWithMBeanAsPath", "parameters": "(JmxReadRequest pJmxReq, long pTimestamp, Map<String, Object> pValues)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject updateHistoryForPatternReadWithMBeanAsPath(JmxReadRequest pJmxReq, long pTimestamp, Map<String, Object> pValues)", "full_signature": "private JSONObject updateHistoryForPatternReadWithMBeanAsPath(JmxReadRequest pJmxReq, long pTimestamp, Map<String, Object> pValues)", "class_method_signature": "HistoryStore.updateHistoryForPatternReadWithMBeanAsPath(JmxReadRequest pJmxReq, long pTimestamp, Map<String, Object> pValues)", "testcase": false, "constructor": false}, {"identifier": "addMultipleAttributeValues", "parameters": "(JmxRequest pJmxReq, Map<String, Object> pAttributesMap,\n                                                  String pBeanName, long pTimestamp)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject addMultipleAttributeValues(JmxRequest pJmxReq, Map<String, Object> pAttributesMap,\n                                                  String pBeanName, long pTimestamp)", "full_signature": "private JSONObject addMultipleAttributeValues(JmxRequest pJmxReq, Map<String, Object> pAttributesMap,\n                                                  String pBeanName, long pTimestamp)", "class_method_signature": "HistoryStore.addMultipleAttributeValues(JmxRequest pJmxReq, Map<String, Object> pAttributesMap,\n                                                  String pBeanName, long pTimestamp)", "testcase": false, "constructor": false}, {"identifier": "createHistoryKey", "parameters": "(JmxRequest pJmxReq, String pBeanName, String pAttrName, String pPath)", "modifiers": "private", "return": "HistoryKey", "signature": "HistoryKey createHistoryKey(JmxRequest pJmxReq, String pBeanName, String pAttrName, String pPath)", "full_signature": "private HistoryKey createHistoryKey(JmxRequest pJmxReq, String pBeanName, String pAttrName, String pPath)", "class_method_signature": "HistoryStore.createHistoryKey(JmxRequest pJmxReq, String pBeanName, String pAttrName, String pPath)", "testcase": false, "constructor": false}, {"identifier": "addAttributeFromSingleValue", "parameters": "(HistoryKey pKey, String pAttrName, Object pValue, long pTimestamp)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject addAttributeFromSingleValue(HistoryKey pKey, String pAttrName, Object pValue, long pTimestamp)", "full_signature": "private JSONObject addAttributeFromSingleValue(HistoryKey pKey, String pAttrName, Object pValue, long pTimestamp)", "class_method_signature": "HistoryStore.addAttributeFromSingleValue(HistoryKey pKey, String pAttrName, Object pValue, long pTimestamp)", "testcase": false, "constructor": false}, {"identifier": "addAttributeFromSingleValue", "parameters": "(JSONObject pHistMap, HistoryKey pKey, String pAttrName,\n                                             Object pValue, long pTimestamp)", "modifiers": "private", "return": "void", "signature": "void addAttributeFromSingleValue(JSONObject pHistMap, HistoryKey pKey, String pAttrName,\n                                             Object pValue, long pTimestamp)", "full_signature": "private void addAttributeFromSingleValue(JSONObject pHistMap, HistoryKey pKey, String pAttrName,\n                                             Object pValue, long pTimestamp)", "class_method_signature": "HistoryStore.addAttributeFromSingleValue(JSONObject pHistMap, HistoryKey pKey, String pAttrName,\n                                             Object pValue, long pTimestamp)", "testcase": false, "constructor": false}, {"identifier": "addToHistoryEntryAndGetCurrentHistory", "parameters": "(JSONObject pHistMap, HistoryEntry pEntry, String pAttrName,\n                                                             Object pValue, long pTimestamp)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject addToHistoryEntryAndGetCurrentHistory(JSONObject pHistMap, HistoryEntry pEntry, String pAttrName,\n                                                             Object pValue, long pTimestamp)", "full_signature": "private JSONObject addToHistoryEntryAndGetCurrentHistory(JSONObject pHistMap, HistoryEntry pEntry, String pAttrName,\n                                                             Object pValue, long pTimestamp)", "class_method_signature": "HistoryStore.addToHistoryEntryAndGetCurrentHistory(JSONObject pHistMap, HistoryEntry pEntry, String pAttrName,\n                                                             Object pValue, long pTimestamp)", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "(HistoryKey pKey,Object pValue,long pTimestamp)", "modifiers": "private synchronized", "return": "HistoryEntry", "signature": "HistoryEntry getEntry(HistoryKey pKey,Object pValue,long pTimestamp)", "full_signature": "private synchronized HistoryEntry getEntry(HistoryKey pKey,Object pValue,long pTimestamp)", "class_method_signature": "HistoryStore.getEntry(HistoryKey pKey,Object pValue,long pTimestamp)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/history/HistoryStore.java"}, "focal_method": {"identifier": "getSize", "parameters": "()", "modifiers": "public synchronized", "return": "int", "body": "public synchronized int getSize() {\n        try {\n            ByteArrayOutputStream bOut = new ByteArrayOutputStream();\n            ObjectOutputStream oOut = new ObjectOutputStream(bOut);\n            oOut.writeObject(historyStore);\n            bOut.close();\n            return bOut.size();\n        } catch (IOException e) {\n            throw new IllegalStateException(\"Cannot serialize internal store: \" + e,e);\n        }\n    }", "signature": "int getSize()", "full_signature": "public synchronized int getSize()", "class_method_signature": "HistoryStore.getSize()", "testcase": false, "constructor": false, "invocations": ["writeObject", "close", "size"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}