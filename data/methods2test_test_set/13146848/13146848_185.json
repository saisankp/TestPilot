{"test_class": {"identifier": "XmlConfigurationStrategyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expected = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expected = ExpectedException.none()", "var_name": "expected"}, {"original_string": "private ConfigurationStreamProvider provider;", "modifier": "private", "type": "ConfigurationStreamProvider", "declarator": "provider", "var_name": "provider"}], "file": "sejda-core/src/test/java/org/sejda/core/context/XmlConfigurationStrategyTest.java"}, "test_case": {"identifier": "testNegativeConstuctorWrongParam", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNegativeConstuctorWrongParam() throws ConfigurationException {\n        InputStream stream = getClass().getClassLoader().getResourceAsStream(\"failing-param-sejda-config.xml\");\n        expected.expectMessage(\n                \"The configured class java.lang.String is not a subtype of interface org.sejda.model.parameter.base.TaskParameters\");\n        when(provider.getConfigurationStream()).thenReturn(stream);\n        XmlConfigurationStrategy.newInstance(provider);\n    }", "signature": "void testNegativeConstuctorWrongParam()", "full_signature": "@Test public void testNegativeConstuctorWrongParam()", "class_method_signature": "XmlConfigurationStrategyTest.testNegativeConstuctorWrongParam()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClassLoader", "getClass", "expectMessage", "thenReturn", "when", "getConfigurationStream", "newInstance"]}, "focal_class": {"identifier": "XmlConfigurationStrategy", "superclass": "", "interfaces": "implements ConfigurationStrategy", "fields": [{"original_string": "private static final String ROOT_NODE = \"/sejda\";", "modifier": "private static final", "type": "String", "declarator": "ROOT_NODE = \"/sejda\"", "var_name": "ROOT_NODE"}, {"original_string": "private static final String VALIDATION_ATTRIBUTENAME = \"validation\";", "modifier": "private static final", "type": "String", "declarator": "VALIDATION_ATTRIBUTENAME = \"validation\"", "var_name": "VALIDATION_ATTRIBUTENAME"}, {"original_string": "private static final String IGNORE_XML_CONFIG_VALIDATION_ATTRIBUTENAME = \"ignore_xml_config\";", "modifier": "private static final", "type": "String", "declarator": "IGNORE_XML_CONFIG_VALIDATION_ATTRIBUTENAME = \"ignore_xml_config\"", "var_name": "IGNORE_XML_CONFIG_VALIDATION_ATTRIBUTENAME"}, {"original_string": "private static final String NOTIFICATION_XPATH = \"/notification\";", "modifier": "private static final", "type": "String", "declarator": "NOTIFICATION_XPATH = \"/notification\"", "var_name": "NOTIFICATION_XPATH"}, {"original_string": "private static final String NOTIFICATION_ASYNC_ATTRIBUTENAME = \"async\";", "modifier": "private static final", "type": "String", "declarator": "NOTIFICATION_ASYNC_ATTRIBUTENAME = \"async\"", "var_name": "NOTIFICATION_ASYNC_ATTRIBUTENAME"}, {"original_string": "private static final String TASKS_XPATH = \"/tasks/task\";", "modifier": "private static final", "type": "String", "declarator": "TASKS_XPATH = \"/tasks/task\"", "var_name": "TASKS_XPATH"}, {"original_string": "private static final String TASK_PARAM_ATTRIBUTENAME = \"parameters\";", "modifier": "private static final", "type": "String", "declarator": "TASK_PARAM_ATTRIBUTENAME = \"parameters\"", "var_name": "TASK_PARAM_ATTRIBUTENAME"}, {"original_string": "private static final String TASK_VALUE_ATTRIBUTENAME = \"task\";", "modifier": "private static final", "type": "String", "declarator": "TASK_VALUE_ATTRIBUTENAME = \"task\"", "var_name": "TASK_VALUE_ATTRIBUTENAME"}, {"original_string": "private static final String DEFAULT_SEJDA_CONFIG = \"sejda.xsd\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_SEJDA_CONFIG = \"sejda.xsd\"", "var_name": "DEFAULT_SEJDA_CONFIG"}, {"original_string": "private XPathFactory xpathFactory = XPathFactory.newInstance();", "modifier": "private", "type": "XPathFactory", "declarator": "xpathFactory = XPathFactory.newInstance()", "var_name": "xpathFactory"}, {"original_string": "private Class<? extends NotificationStrategy> notificationStrategy;", "modifier": "private", "type": "Class<? extends NotificationStrategy>", "declarator": "notificationStrategy", "var_name": "notificationStrategy"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n    private Map<Class<? extends TaskParameters>, Class<? extends Task>> tasks;", "modifier": "@SuppressWarnings(\"rawtypes\")\n    private", "type": "Map<Class<? extends TaskParameters>, Class<? extends Task>>", "declarator": "tasks", "var_name": "tasks"}, {"original_string": "private boolean validation = false;", "modifier": "private", "type": "boolean", "declarator": "validation = false", "var_name": "validation"}, {"original_string": "private boolean ignoreXmlConfig = true;", "modifier": "private", "type": "boolean", "declarator": "ignoreXmlConfig = true", "var_name": "ignoreXmlConfig"}], "methods": [{"identifier": "XmlConfigurationStrategy", "parameters": "(InputStream input)", "modifiers": "private", "return": "", "signature": " XmlConfigurationStrategy(InputStream input)", "full_signature": "private  XmlConfigurationStrategy(InputStream input)", "class_method_signature": "XmlConfigurationStrategy.XmlConfigurationStrategy(InputStream input)", "testcase": false, "constructor": true}, {"identifier": "initializeFromInputStream", "parameters": "(InputStream input)", "modifiers": "private", "return": "void", "signature": "void initializeFromInputStream(InputStream input)", "full_signature": "private void initializeFromInputStream(InputStream input)", "class_method_signature": "XmlConfigurationStrategy.initializeFromInputStream(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "initializeSchemaValidation", "parameters": "(DocumentBuilderFactory factory)", "modifiers": "private", "return": "void", "signature": "void initializeSchemaValidation(DocumentBuilderFactory factory)", "full_signature": "private void initializeSchemaValidation(DocumentBuilderFactory factory)", "class_method_signature": "XmlConfigurationStrategy.initializeSchemaValidation(DocumentBuilderFactory factory)", "testcase": false, "constructor": false}, {"identifier": "getNotificationStrategy", "parameters": "()", "modifiers": "@Override public", "return": "Class<? extends NotificationStrategy>", "signature": "Class<? extends NotificationStrategy> getNotificationStrategy()", "full_signature": "@Override public Class<? extends NotificationStrategy> getNotificationStrategy()", "class_method_signature": "XmlConfigurationStrategy.getNotificationStrategy()", "testcase": false, "constructor": false}, {"identifier": "getTasksMap", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "Map<Class<? extends TaskParameters>, Class<? extends Task>>", "signature": "Map<Class<? extends TaskParameters>, Class<? extends Task>> getTasksMap()", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public Map<Class<? extends TaskParameters>, Class<? extends Task>> getTasksMap()", "class_method_signature": "XmlConfigurationStrategy.getTasksMap()", "testcase": false, "constructor": false}, {"identifier": "isValidation", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValidation()", "full_signature": "@Override public boolean isValidation()", "class_method_signature": "XmlConfigurationStrategy.isValidation()", "testcase": false, "constructor": false}, {"identifier": "isIgnoreXmlConfiguration", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isIgnoreXmlConfiguration()", "full_signature": "@Override public boolean isIgnoreXmlConfiguration()", "class_method_signature": "XmlConfigurationStrategy.isIgnoreXmlConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getTasksMap", "parameters": "(Document document)", "modifiers": "@SuppressWarnings(\"rawtypes\") private", "return": "Map<Class<? extends TaskParameters>, Class<? extends Task>>", "signature": "Map<Class<? extends TaskParameters>, Class<? extends Task>> getTasksMap(Document document)", "full_signature": "@SuppressWarnings(\"rawtypes\") private Map<Class<? extends TaskParameters>, Class<? extends Task>> getTasksMap(Document document)", "class_method_signature": "XmlConfigurationStrategy.getTasksMap(Document document)", "testcase": false, "constructor": false}, {"identifier": "getClassFromNode", "parameters": "(Node node, String attributeName, Class<T> assignableInterface)", "modifiers": "private", "return": "Class<? extends T>", "signature": "Class<? extends T> getClassFromNode(Node node, String attributeName, Class<T> assignableInterface)", "full_signature": "private Class<? extends T> getClassFromNode(Node node, String attributeName, Class<T> assignableInterface)", "class_method_signature": "XmlConfigurationStrategy.getClassFromNode(Node node, String attributeName, Class<T> assignableInterface)", "testcase": false, "constructor": false}, {"identifier": "getNotificationStrategy", "parameters": "(Document document)", "modifiers": "private", "return": "Class<? extends NotificationStrategy>", "signature": "Class<? extends NotificationStrategy> getNotificationStrategy(Document document)", "full_signature": "private Class<? extends NotificationStrategy> getNotificationStrategy(Document document)", "class_method_signature": "XmlConfigurationStrategy.getNotificationStrategy(Document document)", "testcase": false, "constructor": false}, {"identifier": "getValidation", "parameters": "(Document document)", "modifiers": "private", "return": "boolean", "signature": "boolean getValidation(Document document)", "full_signature": "private boolean getValidation(Document document)", "class_method_signature": "XmlConfigurationStrategy.getValidation(Document document)", "testcase": false, "constructor": false}, {"identifier": "getIgnoreXmlConfig", "parameters": "(Document document)", "modifiers": "private", "return": "boolean", "signature": "boolean getIgnoreXmlConfig(Document document)", "full_signature": "private boolean getIgnoreXmlConfig(Document document)", "class_method_signature": "XmlConfigurationStrategy.getIgnoreXmlConfig(Document document)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(ConfigurationStreamProvider provider)", "modifiers": "static", "return": "XmlConfigurationStrategy", "signature": "XmlConfigurationStrategy newInstance(ConfigurationStreamProvider provider)", "full_signature": "static XmlConfigurationStrategy newInstance(ConfigurationStreamProvider provider)", "class_method_signature": "XmlConfigurationStrategy.newInstance(ConfigurationStreamProvider provider)", "testcase": false, "constructor": false}], "file": "sejda-core/src/main/java/org/sejda/core/context/XmlConfigurationStrategy.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(ConfigurationStreamProvider provider)", "modifiers": "static", "return": "XmlConfigurationStrategy", "body": "static XmlConfigurationStrategy newInstance(ConfigurationStreamProvider provider) throws ConfigurationException {\n        InputStream stream = null;\n        try {\n            stream = provider.getConfigurationStream();\n            return new XmlConfigurationStrategy(stream);\n        } finally {\n            IOUtils.closeQuietly(stream);\n        }\n    }", "signature": "XmlConfigurationStrategy newInstance(ConfigurationStreamProvider provider)", "full_signature": "static XmlConfigurationStrategy newInstance(ConfigurationStreamProvider provider)", "class_method_signature": "XmlConfigurationStrategy.newInstance(ConfigurationStreamProvider provider)", "testcase": false, "constructor": false, "invocations": ["getConfigurationStream", "closeQuietly"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}