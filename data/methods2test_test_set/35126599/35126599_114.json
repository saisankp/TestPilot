{"test_class": {"identifier": "SelectImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "sqlitebuilder/src/test/java/com/nhaarman/sqlitebuilder/impl/SelectImplTest.java"}, "test_case": {"identifier": "prependTo_withoutColumns_prependsProperSql", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void prependTo_withoutColumns_prependsProperSql() {\n    /* Given */\n    SelectImpl select = new SelectImpl();\n    RawSqlBuilder builder = new RawSqlBuilderImpl();\n\n    /* When */\n    select.prependTo(builder);\n\n    /* Then */\n    assertThat(builder.toString(), is(\"SELECT *\"));\n  }", "signature": "void prependTo_withoutColumns_prependsProperSql()", "full_signature": "@Test public void prependTo_withoutColumns_prependsProperSql()", "class_method_signature": "SelectImplTest.prependTo_withoutColumns_prependsProperSql()", "testcase": true, "constructor": false, "invocations": ["prependTo", "assertThat", "toString", "is"]}, "focal_class": {"identifier": "SelectImpl", "superclass": "extends BaseSqlPart", "interfaces": "implements Select", "fields": [{"original_string": "@NotNull\n  private final String[] mColumns;", "modifier": "@NotNull\n  private final", "type": "String[]", "declarator": "mColumns", "var_name": "mColumns"}], "methods": [{"identifier": "SelectImpl", "parameters": "(@NotNull final String... columns)", "modifiers": "", "return": "", "signature": " SelectImpl(@NotNull final String... columns)", "full_signature": "  SelectImpl(@NotNull final String... columns)", "class_method_signature": "SelectImpl.SelectImpl(@NotNull final String... columns)", "testcase": false, "constructor": true}, {"identifier": "from", "parameters": "(@NotNull final String tableName)", "modifiers": "@NotNull @Override public", "return": "SelectFrom", "signature": "SelectFrom from(@NotNull final String tableName)", "full_signature": "@NotNull @Override public SelectFrom from(@NotNull final String tableName)", "class_method_signature": "SelectImpl.from(@NotNull final String tableName)", "testcase": false, "constructor": false}, {"identifier": "prependTo", "parameters": "(@NotNull final RawSqlBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void prependTo(@NotNull final RawSqlBuilder builder)", "full_signature": "@Override public void prependTo(@NotNull final RawSqlBuilder builder)", "class_method_signature": "SelectImpl.prependTo(@NotNull final RawSqlBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "SqlPart", "signature": "SqlPart previous()", "full_signature": "@Nullable @Override public SqlPart previous()", "class_method_signature": "SelectImpl.previous()", "testcase": false, "constructor": false}], "file": "sqlitebuilder/src/main/java/com/nhaarman/sqlitebuilder/impl/SelectImpl.java"}, "focal_method": {"identifier": "prependTo", "parameters": "(@NotNull final RawSqlBuilder builder)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void prependTo(@NotNull final RawSqlBuilder builder) {\n    for (int i = mColumns.length - 1; i >= 0; i--) {\n      builder.prepend(mColumns[i]);\n      if (i > 0) {\n        builder.prepend(',');\n      }\n    }\n\n    builder.prepend(\"SELECT \");\n  }", "signature": "void prependTo(@NotNull final RawSqlBuilder builder)", "full_signature": "@Override public void prependTo(@NotNull final RawSqlBuilder builder)", "class_method_signature": "SelectImpl.prependTo(@NotNull final RawSqlBuilder builder)", "testcase": false, "constructor": false, "invocations": ["prepend", "prepend", "prepend"]}, "repository": {"repo_id": 35126599, "url": "https://github.com/nhaarman/SQLiteBuilder", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 69, "size": 1040, "license": "licensed"}}