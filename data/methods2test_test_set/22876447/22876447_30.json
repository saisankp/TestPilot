{"test_class": {"identifier": "ExtractorModelParser_v1Test", "superclass": "extends BaseParserTest", "interfaces": "", "fields": [{"original_string": "final ExtractorModelParser_v1 parser = new ExtractorModelParser_v1();", "modifier": "final", "type": "ExtractorModelParser_v1", "declarator": "parser = new ExtractorModelParser_v1()", "var_name": "parser"}], "file": "link-move/src/test/java/com/nhl/link/move/extractor/parser/ExtractorModelParser_v1Test.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testParse() {\n\n\t\tElement xmlRoot = getXmlRoot(\"extractor_v1.xml\");\n\n\t\tExtractorModelContainer container = parser.parse(\"alocation\", xmlRoot);\n\t\tassertNotNull(container);\n\n\t\tassertEquals(\"alocation\", container.getLocation());\n\t\tassertEquals(\"atype\", container.getType());\n\t\tassertTrue(container.getConnectorIds().contains(\"aconnector\"));\n\n\t\tCollection<String> extractorNames = container.getExtractorNames();\n\t\tassertEquals(1, extractorNames.size());\n\t\tassertTrue(extractorNames.contains(ExtractorModel.DEFAULT_NAME));\n\n\t\tExtractorModel model = container.getExtractor(ExtractorModel.DEFAULT_NAME);\n\n\t\tassertEquals(\"atype\", model.getType());\n\t\tassertTrue(model.getConnectorIds().contains(\"aconnector\"));\n\n\t\tassertEquals(3, model.getAttributes().length);\n\n\t\tassertEquals(0, model.getAttributes()[0].getOrdinal());\n\t\tassertEquals(String.class, model.getAttributes()[0].type());\n\t\tassertEquals(\"a1\", model.getAttributes()[0].getSourceName());\n\t\tassertEquals(\"a_1\", model.getAttributes()[0].getTargetPath());\n\n\t\tassertEquals(1, model.getAttributes()[1].getOrdinal());\n\t\tassertEquals(Integer.class, model.getAttributes()[1].type());\n\t\tassertEquals(\"a2\", model.getAttributes()[1].getSourceName());\n\t\tassertEquals(\"a_2\", model.getAttributes()[1].getTargetPath());\n\n\t\tassertEquals(2, model.getAttributes()[2].getOrdinal());\n\t\tassertEquals(Integer.class, model.getAttributes()[2].type());\n\t\tassertEquals(\"a2\", model.getAttributes()[2].getSourceName());\n\t\tassertNull(model.getAttributes()[2].getTargetPath());\n\n\t\tassertEquals(\"AB\", model.getPropertyValue(\"a.b\"));\n\t\tassertEquals(\"XY\", model.getPropertyValue(\"x.y\"));\n\t}", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "ExtractorModelParser_v1Test.testParse()", "testcase": true, "constructor": false, "invocations": ["getXmlRoot", "parse", "assertNotNull", "assertEquals", "getLocation", "assertEquals", "getType", "assertTrue", "contains", "getConnectorIds", "getExtractorNames", "assertEquals", "size", "assertTrue", "contains", "getExtractor", "assertEquals", "getType", "assertTrue", "contains", "getConnectorIds", "assertEquals", "getAttributes", "assertEquals", "getOrdinal", "getAttributes", "assertEquals", "type", "getAttributes", "assertEquals", "getSourceName", "getAttributes", "assertEquals", "getTargetPath", "getAttributes", "assertEquals", "getOrdinal", "getAttributes", "assertEquals", "type", "getAttributes", "assertEquals", "getSourceName", "getAttributes", "assertEquals", "getTargetPath", "getAttributes", "assertEquals", "getOrdinal", "getAttributes", "assertEquals", "type", "getAttributes", "assertEquals", "getSourceName", "getAttributes", "assertNull", "getTargetPath", "getAttributes", "assertEquals", "getPropertyValue", "assertEquals", "getPropertyValue"]}, "focal_class": {"identifier": "ExtractorModelParser_v1", "superclass": "", "interfaces": "implements DOMExtractorModelParser", "fields": [{"original_string": "public static final String NS = \"http://linkmove.io/xsd/extractor_config_1.xsd\";", "modifier": "public static final", "type": "String", "declarator": "NS = \"http://linkmove.io/xsd/extractor_config_1.xsd\"", "var_name": "NS"}], "methods": [{"identifier": "parse", "parameters": "(String location, Element xmlRoot)", "modifiers": "@Override public", "return": "ExtractorModelContainer", "signature": "ExtractorModelContainer parse(String location, Element xmlRoot)", "full_signature": "@Override public ExtractorModelContainer parse(String location, Element xmlRoot)", "class_method_signature": "ExtractorModelParser_v1.parse(String location, Element xmlRoot)", "testcase": false, "constructor": false}, {"identifier": "doParse", "parameters": "(MutableExtractorModelContainer container, Element rootElement)", "modifiers": "protected", "return": "void", "signature": "void doParse(MutableExtractorModelContainer container, Element rootElement)", "full_signature": "protected void doParse(MutableExtractorModelContainer container, Element rootElement)", "class_method_signature": "ExtractorModelParser_v1.doParse(MutableExtractorModelContainer container, Element rootElement)", "testcase": false, "constructor": false}, {"identifier": "doParse", "parameters": "(Element rootElement, MutableExtractorModelContainer container,\n                           MutableExtractorModel extractor)", "modifiers": "protected", "return": "void", "signature": "void doParse(Element rootElement, MutableExtractorModelContainer container,\n                           MutableExtractorModel extractor)", "full_signature": "protected void doParse(Element rootElement, MutableExtractorModelContainer container,\n                           MutableExtractorModel extractor)", "class_method_signature": "ExtractorModelParser_v1.doParse(Element rootElement, MutableExtractorModelContainer container,\n                           MutableExtractorModel extractor)", "testcase": false, "constructor": false}, {"identifier": "processAttributes", "parameters": "(Element attributesNode, MutableExtractorModel extractor)", "modifiers": "protected", "return": "void", "signature": "void processAttributes(Element attributesNode, MutableExtractorModel extractor)", "full_signature": "protected void processAttributes(Element attributesNode, MutableExtractorModel extractor)", "class_method_signature": "ExtractorModelParser_v1.processAttributes(Element attributesNode, MutableExtractorModel extractor)", "testcase": false, "constructor": false}, {"identifier": "processProperties", "parameters": "(Element propertiesNode, MutableExtractorModel extractor)", "modifiers": "protected", "return": "void", "signature": "void processProperties(Element propertiesNode, MutableExtractorModel extractor)", "full_signature": "protected void processProperties(Element propertiesNode, MutableExtractorModel extractor)", "class_method_signature": "ExtractorModelParser_v1.processProperties(Element propertiesNode, MutableExtractorModel extractor)", "testcase": false, "constructor": false}, {"identifier": "processAttribute", "parameters": "(Element attributeNode, List<RowAttribute> attributes)", "modifiers": "protected", "return": "void", "signature": "void processAttribute(Element attributeNode, List<RowAttribute> attributes)", "full_signature": "protected void processAttribute(Element attributeNode, List<RowAttribute> attributes)", "class_method_signature": "ExtractorModelParser_v1.processAttribute(Element attributeNode, List<RowAttribute> attributes)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/extractor/parser/ExtractorModelParser_v1.java"}, "focal_method": {"identifier": "parse", "parameters": "(String location, Element xmlRoot)", "modifiers": "@Override public", "return": "ExtractorModelContainer", "body": "@Override\n    public ExtractorModelContainer parse(String location, Element xmlRoot) {\n\n        MutableExtractorModelContainer extractors = new MutableExtractorModelContainer(location);\n\n        try {\n            doParse(extractors, xmlRoot);\n        } catch (DOMException e) {\n            throw new LmRuntimeException(\"Error merging config from DOM\", e);\n        }\n\n        extractors.setLoadedOn(System.currentTimeMillis());\n        return extractors;\n    }", "signature": "ExtractorModelContainer parse(String location, Element xmlRoot)", "full_signature": "@Override public ExtractorModelContainer parse(String location, Element xmlRoot)", "class_method_signature": "ExtractorModelParser_v1.parse(String location, Element xmlRoot)", "testcase": false, "constructor": false, "invocations": ["doParse", "setLoadedOn", "currentTimeMillis"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}