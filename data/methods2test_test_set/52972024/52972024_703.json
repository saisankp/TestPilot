{"test_class": {"identifier": "ShutdownActorTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IUpCounter upCounterMock;", "modifier": "private", "type": "IUpCounter", "declarator": "upCounterMock", "var_name": "upCounterMock"}], "file": "SystemActors/SystemActorPack/ShutdownActor/src/test/java/info/smart_tools/smartactors/system_actors_pack/shutdown_actor/ShutdownActorTest.java"}, "test_case": {"identifier": "Should_performForceShutdownRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_performForceShutdownRequest()\n            throws Exception {\n        new ShutdownActor().forceShutdown(new ForceShutdownRequestMessage() {\n            @Override\n            public Object getUpCounterName() throws ReadValueException {\n                return \"a upcounter\";\n            }\n        });\n\n        verify(upCounterMock).forceShutdown();\n    }", "signature": "void Should_performForceShutdownRequest()", "full_signature": "@Test public void Should_performForceShutdownRequest()", "class_method_signature": "ShutdownActorTest.Should_performForceShutdownRequest()", "testcase": true, "constructor": false, "invocations": ["forceShutdown", "forceShutdown", "verify"]}, "focal_class": {"identifier": "ShutdownActor", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "resolveUpCounter", "parameters": "(final Object name)", "modifiers": "private", "return": "IUpCounter", "signature": "IUpCounter resolveUpCounter(final Object name)", "full_signature": "private IUpCounter resolveUpCounter(final Object name)", "class_method_signature": "ShutdownActor.resolveUpCounter(final Object name)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "(final ShutdownRequestMessage message)", "modifiers": "public", "return": "void", "signature": "void shutdown(final ShutdownRequestMessage message)", "full_signature": "public void shutdown(final ShutdownRequestMessage message)", "class_method_signature": "ShutdownActor.shutdown(final ShutdownRequestMessage message)", "testcase": false, "constructor": false}, {"identifier": "forceShutdown", "parameters": "(final ForceShutdownRequestMessage message)", "modifiers": "public", "return": "void", "signature": "void forceShutdown(final ForceShutdownRequestMessage message)", "full_signature": "public void forceShutdown(final ForceShutdownRequestMessage message)", "class_method_signature": "ShutdownActor.forceShutdown(final ForceShutdownRequestMessage message)", "testcase": false, "constructor": false}], "file": "SystemActors/SystemActorPack/ShutdownActor/src/main/java/info/smart_tools/smartactors/system_actors_pack/shutdown_actor/ShutdownActor.java"}, "focal_method": {"identifier": "forceShutdown", "parameters": "(final ForceShutdownRequestMessage message)", "modifiers": "public", "return": "void", "body": "public void forceShutdown(final ForceShutdownRequestMessage message)\n            throws ReadValueException, ResolutionException, UpCounterCallbackExecutionException, IllegalUpCounterState {\n        resolveUpCounter(message.getUpCounterName()).forceShutdown();\n    }", "signature": "void forceShutdown(final ForceShutdownRequestMessage message)", "full_signature": "public void forceShutdown(final ForceShutdownRequestMessage message)", "class_method_signature": "ShutdownActor.forceShutdown(final ForceShutdownRequestMessage message)", "testcase": false, "constructor": false, "invocations": ["forceShutdown", "resolveUpCounter", "getUpCounterName"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}