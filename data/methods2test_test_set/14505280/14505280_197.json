{"test_class": {"identifier": "BeanLayerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\t@Qualifier(\"beans\")\n\tprivate VectorLayer layer;", "modifier": "@Autowired\n\t@Qualifier(\"beans\")\n\tprivate", "type": "VectorLayer", "declarator": "layer", "var_name": "layer"}, {"original_string": "@Autowired\n\tprotected FilterService filterService;", "modifier": "@Autowired\n\tprotected", "type": "FilterService", "declarator": "filterService", "var_name": "filterService"}], "file": "impl/src/test/java/org/geomajas/layer/bean/BeanLayerTest.java"}, "test_case": {"identifier": "manyToOneEcqlIdFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void manyToOneEcqlIdFilter() throws Exception {\n\t\tFilter filter = filterService.parseFilter(\"manyToOneAttr.\\\"id\\\"=1\");\n\t\tIterator<?> it = layer.getElements(filter, 0, 0);\n\t\tint t = 0;\n\t\twhile (it.hasNext()) {\n\t\t\tAssert.assertTrue(it.next() instanceof FeatureBean);\n\t\t\tt++;\n\t\t}\n\t\tAssert.assertEquals(1, t);\n\t}", "signature": "void manyToOneEcqlIdFilter()", "full_signature": "@Test public void manyToOneEcqlIdFilter()", "class_method_signature": "BeanLayerTest.manyToOneEcqlIdFilter()", "testcase": true, "constructor": false, "invocations": ["parseFilter", "getElements", "hasNext", "assertTrue", "next", "assertEquals"]}, "focal_class": {"identifier": "BeanLayer", "superclass": "", "interfaces": "implements VectorLayer, VectorLayerAssociationSupport, VectorLayerLazyFeatureConversionSupport", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(BeanLayer.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(BeanLayer.class)", "var_name": "log"}, {"original_string": "private final Map<String, Object> featuresById = new LinkedHashMap<String, Object>();", "modifier": "private final", "type": "Map<String, Object>", "declarator": "featuresById = new LinkedHashMap<String, Object>()", "var_name": "featuresById"}, {"original_string": "private final List<Object> features = new ArrayList<Object>();", "modifier": "private final", "type": "List<Object>", "declarator": "features = new ArrayList<Object>()", "var_name": "features"}, {"original_string": "private BeanFeatureModel featureModel;", "modifier": "private", "type": "BeanFeatureModel", "declarator": "featureModel", "var_name": "featureModel"}, {"original_string": "private VectorLayerInfo layerInfo;", "modifier": "private", "type": "VectorLayerInfo", "declarator": "layerInfo", "var_name": "layerInfo"}, {"original_string": "private final Random random = new Random();", "modifier": "private final", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}, {"original_string": "@Autowired\n\tprivate FilterService filterService;", "modifier": "@Autowired\n\tprivate", "type": "FilterService", "declarator": "filterService", "var_name": "filterService"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}, {"original_string": "@Autowired\n\tprivate DtoConverterService converterService;", "modifier": "@Autowired\n\tprivate", "type": "DtoConverterService", "declarator": "converterService", "var_name": "converterService"}, {"original_string": "@Autowired\n\tprivate EntityAttributeService entityMappingService;", "modifier": "@Autowired\n\tprivate", "type": "EntityAttributeService", "declarator": "entityMappingService", "var_name": "entityMappingService"}, {"original_string": "private CoordinateReferenceSystem crs;", "modifier": "private", "type": "CoordinateReferenceSystem", "declarator": "crs", "var_name": "crs"}, {"original_string": "protected Comparator<Object> comparator;", "modifier": "protected", "type": "Comparator<Object>", "declarator": "comparator", "var_name": "comparator"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private int nextId = 1;", "modifier": "private", "type": "int", "declarator": "nextId = 1", "var_name": "nextId"}, {"original_string": "private boolean useLazyFeatureConversion;", "modifier": "private", "type": "boolean", "declarator": "useLazyFeatureConversion", "var_name": "useLazyFeatureConversion"}], "methods": [{"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "BeanLayer.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "@Api public", "return": "void", "signature": "void setId(String id)", "full_signature": "@Api public void setId(String id)", "class_method_signature": "BeanLayer.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "getCrs", "parameters": "()", "modifiers": "public", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getCrs()", "full_signature": "public CoordinateReferenceSystem getCrs()", "class_method_signature": "BeanLayer.getCrs()", "testcase": false, "constructor": false}, {"identifier": "isCreateCapable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCreateCapable()", "full_signature": "public boolean isCreateCapable()", "class_method_signature": "BeanLayer.isCreateCapable()", "testcase": false, "constructor": false}, {"identifier": "isUpdateCapable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUpdateCapable()", "full_signature": "public boolean isUpdateCapable()", "class_method_signature": "BeanLayer.isUpdateCapable()", "testcase": false, "constructor": false}, {"identifier": "isDeleteCapable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDeleteCapable()", "full_signature": "public boolean isDeleteCapable()", "class_method_signature": "BeanLayer.isDeleteCapable()", "testcase": false, "constructor": false}, {"identifier": "useLazyFeatureConversion", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean useLazyFeatureConversion()", "full_signature": "public boolean useLazyFeatureConversion()", "class_method_signature": "BeanLayer.useLazyFeatureConversion()", "testcase": false, "constructor": false}, {"identifier": "setUseLazyFeatureConversion", "parameters": "(boolean useLazyFeatureConversion)", "modifiers": "@Api public", "return": "void", "signature": "void setUseLazyFeatureConversion(boolean useLazyFeatureConversion)", "full_signature": "@Api public void setUseLazyFeatureConversion(boolean useLazyFeatureConversion)", "class_method_signature": "BeanLayer.setUseLazyFeatureConversion(boolean useLazyFeatureConversion)", "testcase": false, "constructor": false}, {"identifier": "getElements", "parameters": "(Filter filter, int offset, int maxResultSize)", "modifiers": "public", "return": "Iterator<?>", "signature": "Iterator<?> getElements(Filter filter, int offset, int maxResultSize)", "full_signature": "public Iterator<?> getElements(Filter filter, int offset, int maxResultSize)", "class_method_signature": "BeanLayer.getElements(Filter filter, int offset, int maxResultSize)", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "public", "return": "Envelope", "signature": "Envelope getBounds()", "full_signature": "public Envelope getBounds()", "class_method_signature": "BeanLayer.getBounds()", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "(Filter queryFilter)", "modifiers": "public", "return": "Envelope", "signature": "Envelope getBounds(Filter queryFilter)", "full_signature": "public Envelope getBounds(Filter queryFilter)", "class_method_signature": "BeanLayer.getBounds(Filter queryFilter)", "testcase": false, "constructor": false}, {"identifier": "getFeatureModel", "parameters": "()", "modifiers": "public", "return": "FeatureModel", "signature": "FeatureModel getFeatureModel()", "full_signature": "public FeatureModel getFeatureModel()", "class_method_signature": "BeanLayer.getFeatureModel()", "testcase": false, "constructor": false}, {"identifier": "setLayerInfo", "parameters": "(VectorLayerInfo layerInfo)", "modifiers": "public", "return": "void", "signature": "void setLayerInfo(VectorLayerInfo layerInfo)", "full_signature": "public void setLayerInfo(VectorLayerInfo layerInfo)", "class_method_signature": "BeanLayer.setLayerInfo(VectorLayerInfo layerInfo)", "testcase": false, "constructor": false}, {"identifier": "getLayerInfo", "parameters": "()", "modifiers": "public", "return": "VectorLayerInfo", "signature": "VectorLayerInfo getLayerInfo()", "full_signature": "public VectorLayerInfo getLayerInfo()", "class_method_signature": "BeanLayer.getLayerInfo()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Object feature)", "modifiers": "public", "return": "Object", "signature": "Object create(Object feature)", "full_signature": "public Object create(Object feature)", "class_method_signature": "BeanLayer.create(Object feature)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(String featureId)", "modifiers": "public", "return": "Object", "signature": "Object read(String featureId)", "full_signature": "public Object read(String featureId)", "class_method_signature": "BeanLayer.read(String featureId)", "testcase": false, "constructor": false}, {"identifier": "saveOrUpdate", "parameters": "(Object feature)", "modifiers": "public", "return": "Object", "signature": "Object saveOrUpdate(Object feature)", "full_signature": "public Object saveOrUpdate(Object feature)", "class_method_signature": "BeanLayer.saveOrUpdate(Object feature)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(String featureId)", "modifiers": "public", "return": "void", "signature": "void delete(String featureId)", "full_signature": "public void delete(String featureId)", "class_method_signature": "BeanLayer.delete(String featureId)", "testcase": false, "constructor": false}, {"identifier": "getFeatures", "parameters": "()", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> getFeatures()", "full_signature": "public List<Object> getFeatures()", "class_method_signature": "BeanLayer.getFeatures()", "testcase": false, "constructor": false}, {"identifier": "setFeatures", "parameters": "(List<Object> features)", "modifiers": "public", "return": "void", "signature": "void setFeatures(List<Object> features)", "full_signature": "public void setFeatures(List<Object> features)", "class_method_signature": "BeanLayer.setFeatures(List<Object> features)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "(String attributeName, Filter filter)", "modifiers": "public", "return": "List<Attribute<?>>", "signature": "List<Attribute<?>> getAttributes(String attributeName, Filter filter)", "full_signature": "public List<Attribute<?>> getAttributes(String attributeName, Filter filter)", "class_method_signature": "BeanLayer.getAttributes(String attributeName, Filter filter)", "testcase": false, "constructor": false}, {"identifier": "getFeatureInfo", "parameters": "()", "modifiers": "protected", "return": "FeatureInfo", "signature": "FeatureInfo getFeatureInfo()", "full_signature": "protected FeatureInfo getFeatureInfo()", "class_method_signature": "BeanLayer.getFeatureInfo()", "testcase": false, "constructor": false}, {"identifier": "initFeatureModel", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initFeatureModel()", "full_signature": "protected void initFeatureModel()", "class_method_signature": "BeanLayer.initFeatureModel()", "testcase": false, "constructor": false}, {"identifier": "initComparator", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initComparator()", "full_signature": "protected void initComparator()", "class_method_signature": "BeanLayer.initComparator()", "testcase": false, "constructor": false}], "file": "impl/src/main/java/org/geomajas/layer/bean/BeanLayer.java"}, "focal_method": {"identifier": "getElements", "parameters": "(Filter filter, int offset, int maxResultSize)", "modifiers": "public", "return": "Iterator<?>", "body": "public Iterator<?> getElements(Filter filter, int offset, int maxResultSize) throws LayerException {\n\t\tif (null == filter) {\n\t\t\tfilter = Filter.INCLUDE;\n\t\t}\n\t\tList<Object> filteredList = new ArrayList<Object>();\n\t\ttry {\n\t\t\tsynchronized (featuresById) {\n\t\t\t\tfor (Object feature : featuresById.values()) {\n\t\t\t\t\tif (filter.evaluate(feature)) {\n\t\t\t\t\t\tfilteredList.add(feature);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) { // NOSONAR\n\t\t\tthrow new LayerException(e, ExceptionCode.FILTER_EVALUATION_PROBLEM, filter, getId());\n\t\t}\n\t\t// Sorting of elements.\n\t\tif (comparator != null) {\n\t\t\tCollections.sort(filteredList, comparator);\n\t\t}\n\t\tif (maxResultSize > 0) {\n\t\t\tint fromIndex = Math.max(0, offset);\n\t\t\tint toIndex = Math.min(offset + maxResultSize, filteredList.size());\n\t\t\ttoIndex = Math.max(fromIndex, toIndex);\n\t\t\treturn filteredList.subList(fromIndex, toIndex).iterator();\n\t\t} else {\n\t\t\treturn filteredList.iterator();\n\t\t}\n\t}", "signature": "Iterator<?> getElements(Filter filter, int offset, int maxResultSize)", "full_signature": "public Iterator<?> getElements(Filter filter, int offset, int maxResultSize)", "class_method_signature": "BeanLayer.getElements(Filter filter, int offset, int maxResultSize)", "testcase": false, "constructor": false, "invocations": ["values", "evaluate", "add", "getId", "sort", "max", "min", "size", "max", "iterator", "subList", "iterator"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}