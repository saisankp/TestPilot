{"test_class": {"identifier": "RDSRaiderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private  RDSRaider rdsRaider;", "modifier": "@Autowired\n    private", "type": "RDSRaider", "declarator": "rdsRaider", "var_name": "rdsRaider"}, {"original_string": "@Autowired\n    private RDSDelegator rdsDelegator;", "modifier": "@Autowired\n    private", "type": "RDSDelegator", "declarator": "rdsDelegator", "var_name": "rdsDelegator"}, {"original_string": "private static AmazonRDS amazonRDS;", "modifier": "private static", "type": "AmazonRDS", "declarator": "amazonRDS", "var_name": "amazonRDS"}, {"original_string": "private DBInstance dbInstance;", "modifier": "private", "type": "DBInstance", "declarator": "dbInstance", "var_name": "dbInstance"}], "file": "cloudraider-core/src/test/java/com/intuit/cloudraider/core/impl/RDSRaiderImplTest.java"}, "test_case": {"identifier": "testRebootMissingDbInstance", "parameters": "()", "modifiers": "@Test (expected = InvalidInputDataException.class) public", "return": "void", "body": "@Test (expected = InvalidInputDataException.class)\n    public void testRebootMissingDbInstance() {\n        rdsRaider.rebootDbInstance(\"\");\n\n    }", "signature": "void testRebootMissingDbInstance()", "full_signature": "@Test (expected = InvalidInputDataException.class) public void testRebootMissingDbInstance()", "class_method_signature": "RDSRaiderImplTest.testRebootMissingDbInstance()", "testcase": true, "constructor": false, "invocations": ["rebootDbInstance"]}, "focal_class": {"identifier": "RDSRaiderImpl", "superclass": "", "interfaces": "implements RDSRaider", "fields": [{"original_string": "Logger logger = LoggerFactory.getLogger(this.getClass());", "modifier": "", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(this.getClass())", "var_name": "logger"}, {"original_string": "@Autowired\n    private RDSDelegator rdsDelegator;", "modifier": "@Autowired\n    private", "type": "RDSDelegator", "declarator": "rdsDelegator", "var_name": "rdsDelegator"}], "methods": [{"identifier": "RDSRaiderImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " RDSRaiderImpl()", "full_signature": "public  RDSRaiderImpl()", "class_method_signature": "RDSRaiderImpl.RDSRaiderImpl()", "testcase": false, "constructor": true}, {"identifier": "getAllDbInstances", "parameters": "()", "modifiers": "@Override public", "return": "List<DBInstance>", "signature": "List<DBInstance> getAllDbInstances()", "full_signature": "@Override public List<DBInstance> getAllDbInstances()", "class_method_signature": "RDSRaiderImpl.getAllDbInstances()", "testcase": false, "constructor": false}, {"identifier": "getInstanceIdsForAvailabilityZone", "parameters": "(String availabilityZone, List<String> dbInstanceIdsToIgnore)", "modifiers": "@Override public", "return": "List<DBInstance>", "signature": "List<DBInstance> getInstanceIdsForAvailabilityZone(String availabilityZone, List<String> dbInstanceIdsToIgnore)", "full_signature": "@Override public List<DBInstance> getInstanceIdsForAvailabilityZone(String availabilityZone, List<String> dbInstanceIdsToIgnore)", "class_method_signature": "RDSRaiderImpl.getInstanceIdsForAvailabilityZone(String availabilityZone, List<String> dbInstanceIdsToIgnore)", "testcase": false, "constructor": false}, {"identifier": "getInstancesStatus", "parameters": "(List<String> dbInstanceIds)", "modifiers": "@Override public", "return": "List<DBStatus>", "signature": "List<DBStatus> getInstancesStatus(List<String> dbInstanceIds)", "full_signature": "@Override public List<DBStatus> getInstancesStatus(List<String> dbInstanceIds)", "class_method_signature": "RDSRaiderImpl.getInstancesStatus(List<String> dbInstanceIds)", "testcase": false, "constructor": false}, {"identifier": "stopInstances", "parameters": "(List<String> dbNames)", "modifiers": "@Override public", "return": "void", "signature": "void stopInstances(List<String> dbNames)", "full_signature": "@Override public void stopInstances(List<String> dbNames)", "class_method_signature": "RDSRaiderImpl.stopInstances(List<String> dbNames)", "testcase": false, "constructor": false}, {"identifier": "startInstances", "parameters": "(List<String> dbNames)", "modifiers": "@Override public", "return": "void", "signature": "void startInstances(List<String> dbNames)", "full_signature": "@Override public void startInstances(List<String> dbNames)", "class_method_signature": "RDSRaiderImpl.startInstances(List<String> dbNames)", "testcase": false, "constructor": false}, {"identifier": "getAllDbInstanceNames", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getAllDbInstanceNames()", "full_signature": "@Override public List<String> getAllDbInstanceNames()", "class_method_signature": "RDSRaiderImpl.getAllDbInstanceNames()", "testcase": false, "constructor": false}, {"identifier": "getDBInstancesStatus", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getDBInstancesStatus()", "full_signature": "@Override public List<String> getDBInstancesStatus()", "class_method_signature": "RDSRaiderImpl.getDBInstancesStatus()", "testcase": false, "constructor": false}, {"identifier": "getDBInstanceStatus", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "String", "signature": "String getDBInstanceStatus(String dbName)", "full_signature": "@Override public String getDBInstanceStatus(String dbName)", "class_method_signature": "RDSRaiderImpl.getDBInstanceStatus(String dbName)", "testcase": false, "constructor": false}, {"identifier": "rebootDbInstances", "parameters": "(List<String> dbNames)", "modifiers": "@Override public", "return": "void", "signature": "void rebootDbInstances(List<String> dbNames)", "full_signature": "@Override public void rebootDbInstances(List<String> dbNames)", "class_method_signature": "RDSRaiderImpl.rebootDbInstances(List<String> dbNames)", "testcase": false, "constructor": false}, {"identifier": "rebootDbInstance", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "void", "signature": "void rebootDbInstance(String dbName)", "full_signature": "@Override public void rebootDbInstance(String dbName)", "class_method_signature": "RDSRaiderImpl.rebootDbInstance(String dbName)", "testcase": false, "constructor": false}, {"identifier": "rebootDbInstanceWithForceFailover", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "void", "signature": "void rebootDbInstanceWithForceFailover(String dbName)", "full_signature": "@Override public void rebootDbInstanceWithForceFailover(String dbName)", "class_method_signature": "RDSRaiderImpl.rebootDbInstanceWithForceFailover(String dbName)", "testcase": false, "constructor": false}, {"identifier": "detachSecurityGroup", "parameters": "(String dbName, String securityGroup)", "modifiers": "@Deprecated public", "return": "void", "signature": "void detachSecurityGroup(String dbName, String securityGroup)", "full_signature": "@Deprecated public void detachSecurityGroup(String dbName, String securityGroup)", "class_method_signature": "RDSRaiderImpl.detachSecurityGroup(String dbName, String securityGroup)", "testcase": false, "constructor": false}, {"identifier": "attachSecurityGroup", "parameters": "(String dbName, String securityGroup)", "modifiers": "@Deprecated public", "return": "void", "signature": "void attachSecurityGroup(String dbName, String securityGroup)", "full_signature": "@Deprecated public void attachSecurityGroup(String dbName, String securityGroup)", "class_method_signature": "RDSRaiderImpl.attachSecurityGroup(String dbName, String securityGroup)", "testcase": false, "constructor": false}, {"identifier": "getSecurityGroups", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSecurityGroups(String dbName)", "full_signature": "@Override public List<String> getSecurityGroups(String dbName)", "class_method_signature": "RDSRaiderImpl.getSecurityGroups(String dbName)", "testcase": false, "constructor": false}, {"identifier": "getSubnetIds", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSubnetIds(String dbName)", "full_signature": "@Override public List<String> getSubnetIds(String dbName)", "class_method_signature": "RDSRaiderImpl.getSubnetIds(String dbName)", "testcase": false, "constructor": false}, {"identifier": "detachSecurityGroups", "parameters": "(String dbName, String... securityGroups)", "modifiers": "@Override public", "return": "void", "signature": "void detachSecurityGroups(String dbName, String... securityGroups)", "full_signature": "@Override public void detachSecurityGroups(String dbName, String... securityGroups)", "class_method_signature": "RDSRaiderImpl.detachSecurityGroups(String dbName, String... securityGroups)", "testcase": false, "constructor": false}, {"identifier": "attachSecurityGroups", "parameters": "(String dbName, String... securityGroups)", "modifiers": "@Override public", "return": "void", "signature": "void attachSecurityGroups(String dbName, String... securityGroups)", "full_signature": "@Override public void attachSecurityGroups(String dbName, String... securityGroups)", "class_method_signature": "RDSRaiderImpl.attachSecurityGroups(String dbName, String... securityGroups)", "testcase": false, "constructor": false}, {"identifier": "detachSubnet", "parameters": "(String dbName, String subnetId)", "modifiers": "@Override public", "return": "void", "signature": "void detachSubnet(String dbName, String subnetId)", "full_signature": "@Override public void detachSubnet(String dbName, String subnetId)", "class_method_signature": "RDSRaiderImpl.detachSubnet(String dbName, String subnetId)", "testcase": false, "constructor": false}, {"identifier": "attachSubnet", "parameters": "(String dbName, String subnetId)", "modifiers": "@Override public", "return": "void", "signature": "void attachSubnet(String dbName, String subnetId)", "full_signature": "@Override public void attachSubnet(String dbName, String subnetId)", "class_method_signature": "RDSRaiderImpl.attachSubnet(String dbName, String subnetId)", "testcase": false, "constructor": false}, {"identifier": "restoreDBInstanceFromSnapshot", "parameters": "(String dbName, String snapshotId)", "modifiers": "@Override public", "return": "void", "signature": "void restoreDBInstanceFromSnapshot(String dbName, String snapshotId)", "full_signature": "@Override public void restoreDBInstanceFromSnapshot(String dbName, String snapshotId)", "class_method_signature": "RDSRaiderImpl.restoreDBInstanceFromSnapshot(String dbName, String snapshotId)", "testcase": false, "constructor": false}, {"identifier": "modifyDbStorageSize", "parameters": "(String dbName, int newSize)", "modifiers": "@Override public", "return": "void", "signature": "void modifyDbStorageSize(String dbName, int newSize)", "full_signature": "@Override public void modifyDbStorageSize(String dbName, int newSize)", "class_method_signature": "RDSRaiderImpl.modifyDbStorageSize(String dbName, int newSize)", "testcase": false, "constructor": false}, {"identifier": "modifyDbInstanceClass", "parameters": "(String dbName, String dbInstanceClass)", "modifiers": "@Override public", "return": "void", "signature": "void modifyDbInstanceClass(String dbName, String dbInstanceClass)", "full_signature": "@Override public void modifyDbInstanceClass(String dbName, String dbInstanceClass)", "class_method_signature": "RDSRaiderImpl.modifyDbInstanceClass(String dbName, String dbInstanceClass)", "testcase": false, "constructor": false}, {"identifier": "modifyDbIops", "parameters": "(String dbName, Integer iops)", "modifiers": "@Override public", "return": "void", "signature": "void modifyDbIops(String dbName, Integer iops)", "full_signature": "@Override public void modifyDbIops(String dbName, Integer iops)", "class_method_signature": "RDSRaiderImpl.modifyDbIops(String dbName, Integer iops)", "testcase": false, "constructor": false}, {"identifier": "getDBInstanceClass", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "String", "signature": "String getDBInstanceClass(String dbName)", "full_signature": "@Override public String getDBInstanceClass(String dbName)", "class_method_signature": "RDSRaiderImpl.getDBInstanceClass(String dbName)", "testcase": false, "constructor": false}, {"identifier": "getDBStorageSize", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getDBStorageSize(String dbName)", "full_signature": "@Override public Integer getDBStorageSize(String dbName)", "class_method_signature": "RDSRaiderImpl.getDBStorageSize(String dbName)", "testcase": false, "constructor": false}, {"identifier": "getIops", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getIops(String dbName)", "full_signature": "@Override public Integer getIops(String dbName)", "class_method_signature": "RDSRaiderImpl.getIops(String dbName)", "testcase": false, "constructor": false}, {"identifier": "generateSnapshot", "parameters": "(String dbName, String snapshotName)", "modifiers": "@Override public", "return": "void", "signature": "void generateSnapshot(String dbName, String snapshotName)", "full_signature": "@Override public void generateSnapshot(String dbName, String snapshotName)", "class_method_signature": "RDSRaiderImpl.generateSnapshot(String dbName, String snapshotName)", "testcase": false, "constructor": false}, {"identifier": "getSubnetGroupName", "parameters": "(String dbName)", "modifiers": "private", "return": "String", "signature": "String getSubnetGroupName(String dbName)", "full_signature": "private String getSubnetGroupName(String dbName)", "class_method_signature": "RDSRaiderImpl.getSubnetGroupName(String dbName)", "testcase": false, "constructor": false}], "file": "cloudraider-core/src/main/java/com/intuit/cloudraider/core/impl/RDSRaiderImpl.java"}, "focal_method": {"identifier": "rebootDbInstance", "parameters": "(String dbName)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void rebootDbInstance(String dbName) {\n        if (dbName == null || dbName.isEmpty()) {\n            throw new InvalidInputDataException(\"Null/Empty db name\");\n        }\n        DBInstance dbInstance = rdsDelegator.getAmazonRds().rebootDBInstance(\n                new RebootDBInstanceRequest().withDBInstanceIdentifier(dbName));\n\n        if (dbInstance == null) {\n            throw new com.intuit.cloudraider.exceptions.ResourceNotFoundException(\"Unable to reboot DB instance: \" + dbName);\n        }\n    }", "signature": "void rebootDbInstance(String dbName)", "full_signature": "@Override public void rebootDbInstance(String dbName)", "class_method_signature": "RDSRaiderImpl.rebootDbInstance(String dbName)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "rebootDBInstance", "getAmazonRds", "withDBInstanceIdentifier"]}, "repository": {"repo_id": 189453445, "url": "https://github.com/intuit/CloudRaider", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 16, "size": 730, "license": "licensed"}}