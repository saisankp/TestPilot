{"test_class": {"identifier": "PriceManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private PriceManager priceManager;", "modifier": "@Autowired\n    private", "type": "PriceManager", "declarator": "priceManager", "var_name": "priceManager"}], "file": "promotion-service-project/promotion-service-app/src/test/java/cn/iocoder/mall/promotionservice/manager/price/PriceManagerTest.java"}, "test_case": {"identifier": "testCalcProductPrice", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCalcProductPrice() {\n        PriceProductCalcReqDTO calcReqDTO = new PriceProductCalcReqDTO();\n        PriceProductCalcReqDTO.Item item01 = new PriceProductCalcReqDTO.Item(33, 2, true); // \u6ee1\u8db3\u6ee1\u51cf\u9001\u7684\u5546\u54c1\n        PriceProductCalcReqDTO.Item item02 = new PriceProductCalcReqDTO.Item(34, 2, true); // \u6ee1\u8db3\u9650\u65f6\u6298\u6263\u7684\u5546\u54c1\n        calcReqDTO.setItems(Arrays.asList(item01, item02));\n        PriceProductCalcRespDTO calcRespDTO = priceManager.calcProductPrice(calcReqDTO);\n        System.out.println(calcRespDTO);\n    }", "signature": "void testCalcProductPrice()", "full_signature": "@Test public void testCalcProductPrice()", "class_method_signature": "PriceManagerTest.testCalcProductPrice()", "testcase": true, "constructor": false, "invocations": ["setItems", "asList", "calcProductPrice", "println"]}, "focal_class": {"identifier": "PriceManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "@DubboReference(version = \"${dubbo.consumer.ProductSkuRpc.version}\")\n    private ProductSkuRpc productSkuRpc;", "modifier": "@DubboReference(version = \"${dubbo.consumer.ProductSkuRpc.version}\")\n    private", "type": "ProductSkuRpc", "declarator": "productSkuRpc", "var_name": "productSkuRpc"}, {"original_string": "@DubboReference(version = \"${dubbo.consumer.ProductSpuRpc.version}\")\n    private ProductSpuRpc productSpuRpc;", "modifier": "@DubboReference(version = \"${dubbo.consumer.ProductSpuRpc.version}\")\n    private", "type": "ProductSpuRpc", "declarator": "productSpuRpc", "var_name": "productSpuRpc"}, {"original_string": "@Autowired\n    private PromotionActivityService promotionActivityService;", "modifier": "@Autowired\n    private", "type": "PromotionActivityService", "declarator": "promotionActivityService", "var_name": "promotionActivityService"}, {"original_string": "@Autowired\n    private CouponCardService couponCardService;", "modifier": "@Autowired\n    private", "type": "CouponCardService", "declarator": "couponCardService", "var_name": "couponCardService"}, {"original_string": "@Autowired\n    private CouponTemplateService couponTemplateService;", "modifier": "@Autowired\n    private", "type": "CouponTemplateService", "declarator": "couponTemplateService", "var_name": "couponTemplateService"}], "methods": [{"identifier": "calcProductPrice", "parameters": "(PriceProductCalcReqDTO calcReqDTO)", "modifiers": "public", "return": "PriceProductCalcRespDTO", "signature": "PriceProductCalcRespDTO calcProductPrice(PriceProductCalcReqDTO calcReqDTO)", "full_signature": "public PriceProductCalcRespDTO calcProductPrice(PriceProductCalcReqDTO calcReqDTO)", "class_method_signature": "PriceManager.calcProductPrice(PriceProductCalcReqDTO calcReqDTO)", "testcase": false, "constructor": false}, {"identifier": "initCalcOrderPriceItems", "parameters": "(List<ProductSkuRespDTO> skus,\n                                                                       Map<Integer, PriceProductCalcReqDTO.Item> calcProductItemDTOMap)", "modifiers": "private", "return": "List<PriceProductCalcRespDTO.Item>", "signature": "List<PriceProductCalcRespDTO.Item> initCalcOrderPriceItems(List<ProductSkuRespDTO> skus,\n                                                                       Map<Integer, PriceProductCalcReqDTO.Item> calcProductItemDTOMap)", "full_signature": "private List<PriceProductCalcRespDTO.Item> initCalcOrderPriceItems(List<ProductSkuRespDTO> skus,\n                                                                       Map<Integer, PriceProductCalcReqDTO.Item> calcProductItemDTOMap)", "class_method_signature": "PriceManager.initCalcOrderPriceItems(List<ProductSkuRespDTO> skus,\n                                                                       Map<Integer, PriceProductCalcReqDTO.Item> calcProductItemDTOMap)", "testcase": false, "constructor": false}, {"identifier": "modifyPriceByTimeLimitDiscount", "parameters": "(List<PriceProductCalcRespDTO.Item> items, List<PromotionActivityRespDTO> activityList)", "modifiers": "private", "return": "void", "signature": "void modifyPriceByTimeLimitDiscount(List<PriceProductCalcRespDTO.Item> items, List<PromotionActivityRespDTO> activityList)", "full_signature": "private void modifyPriceByTimeLimitDiscount(List<PriceProductCalcRespDTO.Item> items, List<PromotionActivityRespDTO> activityList)", "class_method_signature": "PriceManager.modifyPriceByTimeLimitDiscount(List<PriceProductCalcRespDTO.Item> items, List<PromotionActivityRespDTO> activityList)", "testcase": false, "constructor": false}, {"identifier": "calcSkuPriceByTimeLimitDiscount", "parameters": "(PriceProductCalcRespDTO.Item sku, PromotionActivityRespDTO timeLimitedDiscount)", "modifiers": "private", "return": "Integer", "signature": "Integer calcSkuPriceByTimeLimitDiscount(PriceProductCalcRespDTO.Item sku, PromotionActivityRespDTO timeLimitedDiscount)", "full_signature": "private Integer calcSkuPriceByTimeLimitDiscount(PriceProductCalcRespDTO.Item sku, PromotionActivityRespDTO timeLimitedDiscount)", "class_method_signature": "PriceManager.calcSkuPriceByTimeLimitDiscount(PriceProductCalcRespDTO.Item sku, PromotionActivityRespDTO timeLimitedDiscount)", "testcase": false, "constructor": false}, {"identifier": "groupByFullPrivilege", "parameters": "(List<PriceProductCalcRespDTO.Item> items, List<PromotionActivityRespDTO> activityList)", "modifiers": "private", "return": "List<PriceProductCalcRespDTO.ItemGroup>", "signature": "List<PriceProductCalcRespDTO.ItemGroup> groupByFullPrivilege(List<PriceProductCalcRespDTO.Item> items, List<PromotionActivityRespDTO> activityList)", "full_signature": "private List<PriceProductCalcRespDTO.ItemGroup> groupByFullPrivilege(List<PriceProductCalcRespDTO.Item> items, List<PromotionActivityRespDTO> activityList)", "class_method_signature": "PriceManager.groupByFullPrivilege(List<PriceProductCalcRespDTO.Item> items, List<PromotionActivityRespDTO> activityList)", "testcase": false, "constructor": false}, {"identifier": "isSpuMatchFullPrivilege", "parameters": "(Integer spuId, PromotionActivityRespDTO activity)", "modifiers": "private", "return": "boolean", "signature": "boolean isSpuMatchFullPrivilege(Integer spuId, PromotionActivityRespDTO activity)", "full_signature": "private boolean isSpuMatchFullPrivilege(Integer spuId, PromotionActivityRespDTO activity)", "class_method_signature": "PriceManager.isSpuMatchFullPrivilege(Integer spuId, PromotionActivityRespDTO activity)", "testcase": false, "constructor": false}, {"identifier": "calcSkuPriceByFullPrivilege", "parameters": "(PriceProductCalcRespDTO.ItemGroup itemGroup, PromotionActivityRespDTO activity)", "modifiers": "private", "return": "Integer", "signature": "Integer calcSkuPriceByFullPrivilege(PriceProductCalcRespDTO.ItemGroup itemGroup, PromotionActivityRespDTO activity)", "full_signature": "private Integer calcSkuPriceByFullPrivilege(PriceProductCalcRespDTO.ItemGroup itemGroup, PromotionActivityRespDTO activity)", "class_method_signature": "PriceManager.calcSkuPriceByFullPrivilege(PriceProductCalcRespDTO.ItemGroup itemGroup, PromotionActivityRespDTO activity)", "testcase": false, "constructor": false}, {"identifier": "modifyPriceByCouponCard", "parameters": "(Integer userId, Integer couponCardId, List<PriceProductCalcRespDTO.ItemGroup> itemGroups)", "modifiers": "private", "return": "Integer", "signature": "Integer modifyPriceByCouponCard(Integer userId, Integer couponCardId, List<PriceProductCalcRespDTO.ItemGroup> itemGroups)", "full_signature": "private Integer modifyPriceByCouponCard(Integer userId, Integer couponCardId, List<PriceProductCalcRespDTO.ItemGroup> itemGroups)", "class_method_signature": "PriceManager.modifyPriceByCouponCard(Integer userId, Integer couponCardId, List<PriceProductCalcRespDTO.ItemGroup> itemGroups)", "testcase": false, "constructor": false}, {"identifier": "splitDiscountPriceToItems", "parameters": "(List<PriceProductCalcRespDTO.Item> items, Integer discountTotal, Integer presentTotal)", "modifiers": "private", "return": "void", "signature": "void splitDiscountPriceToItems(List<PriceProductCalcRespDTO.Item> items, Integer discountTotal, Integer presentTotal)", "full_signature": "private void splitDiscountPriceToItems(List<PriceProductCalcRespDTO.Item> items, Integer discountTotal, Integer presentTotal)", "class_method_signature": "PriceManager.splitDiscountPriceToItems(List<PriceProductCalcRespDTO.Item> items, Integer discountTotal, Integer presentTotal)", "testcase": false, "constructor": false}], "file": "promotion-service-project/promotion-service-app/src/main/java/cn/iocoder/mall/promotionservice/manager/price/PriceManager.java"}, "focal_method": {"identifier": "calcProductPrice", "parameters": "(PriceProductCalcReqDTO calcReqDTO)", "modifiers": "public", "return": "PriceProductCalcRespDTO", "body": "public PriceProductCalcRespDTO calcProductPrice(PriceProductCalcReqDTO calcReqDTO) {\n        // TODO \u828b\u827f\uff0c\u8865\u5145\u4e00\u4e9b\u8868\u5355\u6821\u9a8c\u3002\u4f8b\u5982\u8bf4\uff0c\u9700\u8981\u4f20\u5165\u7528\u6237\u7f16\u53f7\u3002\n        // \u6821\u9a8c\u5546\u54c1\u90fd\u5b58\u5728\n        Map<Integer, PriceProductCalcReqDTO.Item> calcProductItemDTOMap = CollectionUtils.convertMap(\n                calcReqDTO.getItems(), PriceProductCalcReqDTO.Item::getSkuId);\n        CommonResult<List<ProductSkuRespDTO>> listProductSkusResult = productSkuRpc.listProductSkus(\n                new ProductSkuListQueryReqDTO().setProductSkuIds(calcProductItemDTOMap.keySet()));\n        listProductSkusResult.checkError();\n        if (calcReqDTO.getItems().size() != listProductSkusResult.getData().size()) {\n            throw ServiceExceptionUtil.exception(PRICE_PRODUCT_SKU_NOT_EXISTS);\n        }\n        // TODO \u5e93\u5b58\u76f8\u5173\n        // \u67e5\u8be2\u4fc3\u9500\u6d3b\u52a8\n        List<PromotionActivityRespDTO> activityRespDTOs = promotionActivityService.listPromotionActivitiesBySpuIds(\n                CollectionUtils.convertSet(listProductSkusResult.getData(), ProductSkuRespDTO::getSpuId),\n                Collections.singleton(PromotionActivityStatusEnum.RUN.getValue()));\n        // \u62fc\u88c5\u7ed3\u679c\uff08\u4e3b\u8981\u662f\u8ba1\u7b97\u4ef7\u683c\uff09\n        PriceProductCalcRespDTO calcRespDTO = new PriceProductCalcRespDTO();\n        // 1. \u521b\u5efa\u521d\u59cb\u7684\u6bcf\u4e00\u9879\u7684\u6570\u7ec4\n        List<PriceProductCalcRespDTO.Item> calcItemRespDTOs = this.initCalcOrderPriceItems(\n                listProductSkusResult.getData(), calcProductItemDTOMap);\n        // 2. \u8ba1\u7b97\u3010\u9650\u65f6\u6298\u6263\u3011\u4fc3\u9500\n        this.modifyPriceByTimeLimitDiscount(calcItemRespDTOs, activityRespDTOs);\n        // 3. \u8ba1\u7b97\u3010\u6ee1\u51cf\u9001\u3011\u4fc3\u9500\n        List<PriceProductCalcRespDTO.ItemGroup> itemGroups = this.groupByFullPrivilege(calcItemRespDTOs, activityRespDTOs);\n        calcRespDTO.setItemGroups(itemGroups);\n        // 4. \u8ba1\u7b97\u4f18\u60e0\u52b5 TODO \u828b\u827f\uff1a\u672a\u8be6\u7ec6\u6d4b\u8bd5\uff1b\n        if (calcReqDTO.getCouponCardId() != null) {\n            Integer result = this.modifyPriceByCouponCard(calcReqDTO.getUserId(), calcReqDTO.getCouponCardId(), itemGroups);\n            calcRespDTO.setCouponCardDiscountTotal(result);\n        }\n        // 5. \u8ba1\u7b97\u6700\u7ec8\u7684\u4ef7\u683c\n        int buyTotal = 0;\n        int discountTotal = 0;\n        int presentTotal = 0;\n        for (PriceProductCalcRespDTO.ItemGroup itemGroup : calcRespDTO.getItemGroups()) {\n            buyTotal += itemGroup.getItems().stream().mapToInt(item -> item.getSelected() ? item.getBuyTotal() : 0).sum();\n            discountTotal += itemGroup.getItems().stream().mapToInt(item -> item.getSelected() ? item.getDiscountTotal() : 0).sum();\n            presentTotal += itemGroup.getItems().stream().mapToInt(item -> item.getSelected() ? item.getPresentTotal() : 0).sum();\n        }\n        Assert.isTrue(buyTotal - discountTotal ==  presentTotal,\n                String.format(\"\u4ef7\u683c\u5408\u8ba1( %d - %d == %d )\u4e0d\u6b63\u786e\", buyTotal, discountTotal, presentTotal));\n        calcRespDTO.setFee(new PriceProductCalcRespDTO.Fee(buyTotal, discountTotal, 0, presentTotal));\n        return calcRespDTO;\n    }", "signature": "PriceProductCalcRespDTO calcProductPrice(PriceProductCalcReqDTO calcReqDTO)", "full_signature": "public PriceProductCalcRespDTO calcProductPrice(PriceProductCalcReqDTO calcReqDTO)", "class_method_signature": "PriceManager.calcProductPrice(PriceProductCalcReqDTO calcReqDTO)", "testcase": false, "constructor": false, "invocations": ["convertMap", "getItems", "listProductSkus", "setProductSkuIds", "keySet", "checkError", "size", "getItems", "size", "getData", "exception", "listPromotionActivitiesBySpuIds", "convertSet", "getData", "singleton", "getValue", "initCalcOrderPriceItems", "getData", "modifyPriceByTimeLimitDiscount", "groupByFullPrivilege", "setItemGroups", "getCouponCardId", "modifyPriceByCouponCard", "getUserId", "getCouponCardId", "setCouponCardDiscountTotal", "getItemGroups", "sum", "mapToInt", "stream", "getItems", "getSelected", "getBuyTotal", "sum", "mapToInt", "stream", "getItems", "getSelected", "getDiscountTotal", "sum", "mapToInt", "stream", "getItems", "getSelected", "getPresentTotal", "isTrue", "format", "setFee"]}, "repository": {"repo_id": 184611677, "url": "https://github.com/YunaiV/onemall", "language": "Java", "is_fork": false, "fork_count": 1162, "stargazer_count": 2893, "size": 7986, "license": "licensed"}}