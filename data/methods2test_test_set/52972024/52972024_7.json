{"test_class": {"identifier": "FeatureTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DependencyResolvingFeatureManager managerMock;", "modifier": "private", "type": "DependencyResolvingFeatureManager", "declarator": "managerMock", "var_name": "managerMock"}, {"original_string": "private IAction<Collection<IPath>> action1;", "modifier": "private", "type": "IAction<Collection<IPath>>", "declarator": "action1", "var_name": "action1"}, {"original_string": "private IAction<Collection<IPath>> action2;", "modifier": "private", "type": "IAction<Collection<IPath>>", "declarator": "action2", "var_name": "action2"}, {"original_string": "private IAction<Collection<IPath>> action3;", "modifier": "private", "type": "IAction<Collection<IPath>>", "declarator": "action3", "var_name": "action3"}, {"original_string": "private List<IPath> pathsMock;", "modifier": "private", "type": "List<IPath>", "declarator": "pathsMock", "var_name": "pathsMock"}], "file": "OldModules/DependencyResolvingFeatureManager/src/test/java/info/smart_tools/smartactors/core/dependency_resolving_feature_manager/FeatureTest.java"}, "test_case": {"identifier": "Should_storeName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_storeName()\n            throws Exception {\n        assertEquals(\"not_a_bug\", new Feature(managerMock, \"not_a_bug\").getName());\n    }", "signature": "void Should_storeName()", "full_signature": "@Test public void Should_storeName()", "class_method_signature": "FeatureTest.Should_storeName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getName"]}, "focal_class": {"identifier": "Feature", "superclass": "", "interfaces": "implements IFeature", "fields": [{"original_string": "private final DependencyResolvingFeatureManager manager;", "modifier": "private final", "type": "DependencyResolvingFeatureManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final Object lock;", "modifier": "private final", "type": "Object", "declarator": "lock", "var_name": "lock"}, {"original_string": "private final List<IAction<Collection<IPath>>> listeners;", "modifier": "private final", "type": "List<IAction<Collection<IPath>>>", "declarator": "listeners", "var_name": "listeners"}, {"original_string": "private final List<String> required;", "modifier": "private final", "type": "List<String>", "declarator": "required", "var_name": "required"}, {"original_string": "private List<IPath> paths;", "modifier": "private", "type": "List<IPath>", "declarator": "paths", "var_name": "paths"}], "methods": [{"identifier": "Feature", "parameters": "(final DependencyResolvingFeatureManager manager, final String name)", "modifiers": "", "return": "", "signature": " Feature(final DependencyResolvingFeatureManager manager, final String name)", "full_signature": "  Feature(final DependencyResolvingFeatureManager manager, final String name)", "class_method_signature": "Feature.Feature(final DependencyResolvingFeatureManager manager, final String name)", "testcase": false, "constructor": true}, {"identifier": "requireFile", "parameters": "(final String fileName)", "modifiers": "@Override public", "return": "void", "signature": "void requireFile(final String fileName)", "full_signature": "@Override public void requireFile(final String fileName)", "class_method_signature": "Feature.requireFile(final String fileName)", "testcase": false, "constructor": false}, {"identifier": "whenPresent", "parameters": "(final IAction<Collection<IPath>> action)", "modifiers": "@Override public", "return": "void", "signature": "void whenPresent(final IAction<Collection<IPath>> action)", "full_signature": "@Override public void whenPresent(final IAction<Collection<IPath>> action)", "class_method_signature": "Feature.whenPresent(final IAction<Collection<IPath>> action)", "testcase": false, "constructor": false}, {"identifier": "listen", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void listen()", "full_signature": "@Override public void listen()", "class_method_signature": "Feature.listen()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "Feature.getName()", "testcase": false, "constructor": false}], "file": "OldModules/DependencyResolvingFeatureManager/src/main/java/info/smart_tools/smartactors/core/dependency_resolving_feature_manager/Feature.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getName() {\n        return name;\n    }", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "Feature.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}