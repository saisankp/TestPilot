{"test_class": {"identifier": "GsonUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "brpc-java-communication/src/test/java/com/baidu/brpc/utils/GsonUtilsTest.java"}, "test_case": {"identifier": "fromJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fromJson() {\n        Date date = new Date();\n        Date d1 = GsonUtils.fromJson(GsonUtils.toJson(date), new TypeToken<Date>(){}.getType());\n        Date d2 = GsonUtils.fromJson(GsonUtils.toJson(date), new TypeToken<java.sql.Date>(){}.getType());\n\n        date = new java.sql.Date(System.currentTimeMillis());\n        d1 = GsonUtils.fromJson(GsonUtils.toJson(date), new TypeToken<Date>(){}.getType());\n        d2 = GsonUtils.fromJson(GsonUtils.toJson(date), new TypeToken<java.sql.Date>(){}.getType());\n\n        java.sql.Date sDate = new java.sql.Date(System.currentTimeMillis());\n        java.sql.Date d3 = GsonUtils.fromJson(GsonUtils.toJson(date), new TypeToken<java.sql.Date>(){}.getType());\n\n\n    }", "signature": "void fromJson()", "full_signature": "@Test public void fromJson()", "class_method_signature": "GsonUtilsTest.fromJson()", "testcase": true, "constructor": false, "invocations": ["fromJson", "toJson", "getType", "fromJson", "toJson", "getType", "currentTimeMillis", "fromJson", "toJson", "getType", "fromJson", "toJson", "getType", "currentTimeMillis", "fromJson", "toJson", "getType"]}, "focal_class": {"identifier": "GsonUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Gson gson;", "modifier": "private static", "type": "Gson", "declarator": "gson", "var_name": "gson"}], "methods": [{"identifier": "getGB", "parameters": "()", "modifiers": "private static", "return": "GsonBuilder", "signature": "GsonBuilder getGB()", "full_signature": "private static GsonBuilder getGB()", "class_method_signature": "GsonUtils.getGB()", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(String json, Class<T> classOfT)", "modifiers": "public static", "return": "T", "signature": "T fromJson(String json, Class<T> classOfT)", "full_signature": "public static T fromJson(String json, Class<T> classOfT)", "class_method_signature": "GsonUtils.fromJson(String json, Class<T> classOfT)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(String json, Type typeOfT)", "modifiers": "public static", "return": "T", "signature": "T fromJson(String json, Type typeOfT)", "full_signature": "public static T fromJson(String json, Type typeOfT)", "class_method_signature": "GsonUtils.fromJson(String json, Type typeOfT)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(JsonElement jsonElement, Class<T> classOfT)", "modifiers": "public static", "return": "T", "signature": "T fromJson(JsonElement jsonElement, Class<T> classOfT)", "full_signature": "public static T fromJson(JsonElement jsonElement, Class<T> classOfT)", "class_method_signature": "GsonUtils.fromJson(JsonElement jsonElement, Class<T> classOfT)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(JsonElement jsonElement, Type typeOfT)", "modifiers": "public static", "return": "T", "signature": "T fromJson(JsonElement jsonElement, Type typeOfT)", "full_signature": "public static T fromJson(JsonElement jsonElement, Type typeOfT)", "class_method_signature": "GsonUtils.fromJson(JsonElement jsonElement, Type typeOfT)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(Object o)", "modifiers": "public static", "return": "String", "signature": "String toJson(Object o)", "full_signature": "public static String toJson(Object o)", "class_method_signature": "GsonUtils.toJson(Object o)", "testcase": false, "constructor": false}, {"identifier": "toPrettyPrintJson", "parameters": "(Object o)", "modifiers": "public static", "return": "String", "signature": "String toPrettyPrintJson(Object o)", "full_signature": "public static String toPrettyPrintJson(Object o)", "class_method_signature": "GsonUtils.toPrettyPrintJson(Object o)", "testcase": false, "constructor": false}, {"identifier": "isValidJson", "parameters": "(String str)", "modifiers": "public", "return": "Boolean", "signature": "Boolean isValidJson(String str)", "full_signature": "public Boolean isValidJson(String str)", "class_method_signature": "GsonUtils.isValidJson(String str)", "testcase": false, "constructor": false}, {"identifier": "parseJson", "parameters": "(String json)", "modifiers": "public static", "return": "JsonElement", "signature": "JsonElement parseJson(String json)", "full_signature": "public static JsonElement parseJson(String json)", "class_method_signature": "GsonUtils.parseJson(String json)", "testcase": false, "constructor": false}], "file": "brpc-java-communication/src/main/java/com/baidu/brpc/utils/GsonUtils.java"}, "focal_method": {"identifier": "fromJson", "parameters": "(String json, Class<T> classOfT)", "modifiers": "public static", "return": "T", "body": "public static <T> T fromJson(String json, Class<T> classOfT) {\n        return gson.fromJson(json, classOfT);\n    }", "signature": "T fromJson(String json, Class<T> classOfT)", "full_signature": "public static T fromJson(String json, Class<T> classOfT)", "class_method_signature": "GsonUtils.fromJson(String json, Class<T> classOfT)", "testcase": false, "constructor": false, "invocations": ["fromJson"]}, "repository": {"repo_id": 162548942, "url": "https://github.com/baidu/brpc-java", "language": "Java", "is_fork": false, "fork_count": 175, "stargazer_count": 551, "size": 3271, "license": "licensed"}}