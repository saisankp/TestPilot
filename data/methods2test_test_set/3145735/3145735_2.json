{"test_class": {"identifier": "ProductionProfileStrategyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ProductionProfileStrategy reader;", "modifier": "private", "type": "ProductionProfileStrategy", "declarator": "reader", "var_name": "reader"}], "file": "adaptors/c3po-adaptor/src/test/java/eu/scape_project/watch/adaptor/c3po/common/ProductionProfileStrategyTest.java"}, "test_case": {"identifier": "shouldGetDistribution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetDistribution() throws Exception {\n    Map<String, String> distribution = this.reader.getDistribution(\"format\");\n    assertNotNull(distribution);\n    assertFalse(distribution.keySet().isEmpty());\n  }", "signature": "void shouldGetDistribution()", "full_signature": "@Test public void shouldGetDistribution()", "class_method_signature": "ProductionProfileStrategyTest.shouldGetDistribution()", "testcase": true, "constructor": false, "invocations": ["getDistribution", "assertNotNull", "assertFalse", "isEmpty", "keySet"]}, "focal_class": {"identifier": "ProductionProfileStrategy", "superclass": "", "interfaces": "implements ProfileVersionReader", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ProductionProfileStrategy.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ProductionProfileStrategy.class)", "var_name": "LOG"}, {"original_string": "private Document doc;", "modifier": "private", "type": "Document", "declarator": "doc", "var_name": "doc"}], "methods": [{"identifier": "getCollectionName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCollectionName()", "full_signature": "@Override public String getCollectionName()", "class_method_signature": "ProductionProfileStrategy.getCollectionName()", "testcase": false, "constructor": false}, {"identifier": "getObjectsCount", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getObjectsCount()", "full_signature": "@Override public String getObjectsCount()", "class_method_signature": "ProductionProfileStrategy.getObjectsCount()", "testcase": false, "constructor": false}, {"identifier": "getCollectionSize", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCollectionSize()", "full_signature": "@Override public String getCollectionSize()", "class_method_signature": "ProductionProfileStrategy.getCollectionSize()", "testcase": false, "constructor": false}, {"identifier": "getObjectsMaxSize", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getObjectsMaxSize()", "full_signature": "@Override public String getObjectsMaxSize()", "class_method_signature": "ProductionProfileStrategy.getObjectsMaxSize()", "testcase": false, "constructor": false}, {"identifier": "getObjectsMinSize", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getObjectsMinSize()", "full_signature": "@Override public String getObjectsMinSize()", "class_method_signature": "ProductionProfileStrategy.getObjectsMinSize()", "testcase": false, "constructor": false}, {"identifier": "getObjectsAvgSize", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getObjectsAvgSize()", "full_signature": "@Override public String getObjectsAvgSize()", "class_method_signature": "ProductionProfileStrategy.getObjectsAvgSize()", "testcase": false, "constructor": false}, {"identifier": "getDistribution", "parameters": "(final String name)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getDistribution(final String name)", "full_signature": "@Override public Map<String, String> getDistribution(final String name)", "class_method_signature": "ProductionProfileStrategy.getDistribution(final String name)", "testcase": false, "constructor": false}, {"identifier": "setStream", "parameters": "(final InputStream is)", "modifiers": "@Override public", "return": "void", "signature": "void setStream(final InputStream is)", "full_signature": "@Override public void setStream(final InputStream is)", "class_method_signature": "ProductionProfileStrategy.setStream(final InputStream is)", "testcase": false, "constructor": false}, {"identifier": "getPropertyElement", "parameters": "(final String name)", "modifiers": "private", "return": "Element", "signature": "Element getPropertyElement(final String name)", "full_signature": "private Element getPropertyElement(final String name)", "class_method_signature": "ProductionProfileStrategy.getPropertyElement(final String name)", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "(final InputStream is)", "modifiers": "private", "return": "void", "signature": "void getDocument(final InputStream is)", "full_signature": "private void getDocument(final InputStream is)", "class_method_signature": "ProductionProfileStrategy.getDocument(final InputStream is)", "testcase": false, "constructor": false}, {"identifier": "getDoc", "parameters": "()", "modifiers": "private", "return": "Document", "signature": "Document getDoc()", "full_signature": "private Document getDoc()", "class_method_signature": "ProductionProfileStrategy.getDoc()", "testcase": false, "constructor": false}], "file": "adaptors/c3po-adaptor/src/main/java/eu/scape_project/watch/adaptor/c3po/common/ProductionProfileStrategy.java"}, "focal_method": {"identifier": "getDistribution", "parameters": "(final String name)", "modifiers": "@Override public", "return": "Map<String, String>", "body": "@Override\n  public Map<String, String> getDistribution(final String name) {\n    final Element property = this.getPropertyElement(name);\n    \n    if(property == null) {\n      return null;\n    }\n    \n    final Map<String, String> distribution = new HashMap<String, String>();\n    final List<?> items = property.elements();\n\n    if (items.isEmpty()) {\n      return null;\n    }\n\n    for (Object o : items) {\n      final Element e = (Element) o;\n      final String key = e.attributeValue(\"id\");\n      final String value = e.attributeValue(\"value\");\n      distribution.put(key, value);\n    }\n\n    return distribution;\n\n  }", "signature": "Map<String, String> getDistribution(final String name)", "full_signature": "@Override public Map<String, String> getDistribution(final String name)", "class_method_signature": "ProductionProfileStrategy.getDistribution(final String name)", "testcase": false, "constructor": false, "invocations": ["getPropertyElement", "elements", "isEmpty", "attributeValue", "attributeValue", "put"]}, "repository": {"repo_id": 3145735, "url": "https://github.com/openpreserve/scout", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 13, "size": 74687, "license": "licensed"}}