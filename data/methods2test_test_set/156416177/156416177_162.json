{"test_class": {"identifier": "SamSelectionRequestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String REVISION = \"C1\";", "modifier": "private static final", "type": "String", "declarator": "REVISION = \"C1\"", "var_name": "REVISION"}, {"original_string": "private static final String SN_STR = \"11223344\";", "modifier": "private static final", "type": "String", "declarator": "SN_STR = \"11223344\"", "var_name": "SN_STR"}, {"original_string": "private static final String ATR_STR =\n      \"3B3F9600805A4880\" + REVISION + \"205017\" + SN_STR + \"829000\";", "modifier": "private static final", "type": "String", "declarator": "ATR_STR =\n      \"3B3F9600805A4880\" + REVISION + \"205017\" + SN_STR + \"829000\"", "var_name": "ATR_STR"}, {"original_string": "private static final String UNLOCK_DATA_STR = \"00112233445566778899AABBCCDDEEFF\";", "modifier": "private static final", "type": "String", "declarator": "UNLOCK_DATA_STR = \"00112233445566778899AABBCCDDEEFF\"", "var_name": "UNLOCK_DATA_STR"}, {"original_string": "private static final byte[] SW1SW2_OK = ByteArrayUtil.fromHex(\"9000\");", "modifier": "private static final", "type": "byte[]", "declarator": "SW1SW2_OK = ByteArrayUtil.fromHex(\"9000\")", "var_name": "SW1SW2_OK"}, {"original_string": "private static final byte[] SW1SW2_CONDITIONS_NOT_SATISFIED = ByteArrayUtil.fromHex(\"6985\");", "modifier": "private static final", "type": "byte[]", "declarator": "SW1SW2_CONDITIONS_NOT_SATISFIED = ByteArrayUtil.fromHex(\"6985\")", "var_name": "SW1SW2_CONDITIONS_NOT_SATISFIED"}, {"original_string": "private static final byte[] SN = ByteArrayUtil.fromHex(SN_STR);", "modifier": "private static final", "type": "byte[]", "declarator": "SN = ByteArrayUtil.fromHex(SN_STR)", "var_name": "SN"}, {"original_string": "private static final byte[] ATR = ByteArrayUtil.fromHex(ATR_STR);", "modifier": "private static final", "type": "byte[]", "declarator": "ATR = ByteArrayUtil.fromHex(ATR_STR)", "var_name": "ATR"}, {"original_string": "private static final byte[] UNLOCK_DATA = ByteArrayUtil.fromHex(UNLOCK_DATA_STR);", "modifier": "private static final", "type": "byte[]", "declarator": "UNLOCK_DATA = ByteArrayUtil.fromHex(UNLOCK_DATA_STR)", "var_name": "UNLOCK_DATA"}, {"original_string": "private final ApduResponse UNLOCK_APDU_RESPONSE_OK = new ApduResponse(SW1SW2_OK, null);", "modifier": "private final", "type": "ApduResponse", "declarator": "UNLOCK_APDU_RESPONSE_OK = new ApduResponse(SW1SW2_OK, null)", "var_name": "UNLOCK_APDU_RESPONSE_OK"}, {"original_string": "private final ApduResponse UNLOCK_APDU_RESPONSE_KO =\n      new ApduResponse(SW1SW2_CONDITIONS_NOT_SATISFIED, null);", "modifier": "private final", "type": "ApduResponse", "declarator": "UNLOCK_APDU_RESPONSE_KO =\n      new ApduResponse(SW1SW2_CONDITIONS_NOT_SATISFIED, null)", "var_name": "UNLOCK_APDU_RESPONSE_KO"}], "file": "java/component/keyple-calypso/src/test/java/org/eclipse/keyple/calypso/transaction/SamSelectionRequestTest.java"}, "test_case": {"identifier": "samSelectionRequest_parse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void samSelectionRequest_parse() {\n    SamSelector samSelector =\n        SamSelector.builder() //\n            .samRevision(SamRevision.AUTO) //\n            .build();\n    SamSelectionRequest samSelectionRequest = new SamSelectionRequest(samSelector);\n    SelectionStatus selectionStatus = new SelectionStatus(new AnswerToReset(ATR), null, true);\n    CalypsoSam calypsoSam =\n        samSelectionRequest.parse(new SeResponse(true, true, selectionStatus, null));\n    // minimal checks on the CalypsoSam result\n    assertThat(calypsoSam.getSamRevision()).isEqualTo(SamRevision.C1);\n    assertThat(calypsoSam.getSerialNumber()).isEqualTo(SN);\n  }", "signature": "void samSelectionRequest_parse()", "full_signature": "@Test public void samSelectionRequest_parse()", "class_method_signature": "SamSelectionRequestTest.samSelectionRequest_parse()", "testcase": true, "constructor": false, "invocations": ["build", "samRevision", "builder", "parse", "isEqualTo", "assertThat", "getSamRevision", "isEqualTo", "assertThat", "getSerialNumber"]}, "focal_class": {"identifier": "SamSelectionRequest", "superclass": "extends AbstractSeSelectionRequest<\n        AbstractSamCommandBuilder<? extends AbstractSamResponseParser>>", "interfaces": "", "fields": [], "methods": [{"identifier": "SamSelectionRequest", "parameters": "(SamSelector samSelector)", "modifiers": "public", "return": "", "signature": " SamSelectionRequest(SamSelector samSelector)", "full_signature": "public  SamSelectionRequest(SamSelector samSelector)", "class_method_signature": "SamSelectionRequest.SamSelectionRequest(SamSelector samSelector)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(SeResponse seResponse)", "modifiers": "@Override protected", "return": "CalypsoSam", "signature": "CalypsoSam parse(SeResponse seResponse)", "full_signature": "@Override protected CalypsoSam parse(SeResponse seResponse)", "class_method_signature": "SamSelectionRequest.parse(SeResponse seResponse)", "testcase": false, "constructor": false}], "file": "java/component/keyple-calypso/src/main/java/org/eclipse/keyple/calypso/transaction/SamSelectionRequest.java"}, "focal_method": {"identifier": "parse", "parameters": "(SeResponse seResponse)", "modifiers": "@Override protected", "return": "CalypsoSam", "body": "@Override\n  protected CalypsoSam parse(SeResponse seResponse) {\n    List<AbstractSamCommandBuilder<? extends AbstractSamResponseParser>> commandBuilders =\n        getCommandBuilders();\n\n    if (commandBuilders.size() == 1) {\n      // an unlock command has been requested\n      List<ApduResponse> apduResponses = seResponse.getApduResponses();\n      if (apduResponses == null) {\n        throw new CalypsoDesynchronizedExchangesException(\n            \"Mismatch in the number of requests/responses\");\n      }\n      // check the SAM response to the unlock command\n      commandBuilders.get(0).createResponseParser(apduResponses.get(0)).checkStatus();\n    }\n\n    return new CalypsoSam(seResponse);\n  }", "signature": "CalypsoSam parse(SeResponse seResponse)", "full_signature": "@Override protected CalypsoSam parse(SeResponse seResponse)", "class_method_signature": "SamSelectionRequest.parse(SeResponse seResponse)", "testcase": false, "constructor": false, "invocations": ["getCommandBuilders", "size", "getApduResponses", "checkStatus", "createResponseParser", "get", "get"]}, "repository": {"repo_id": 156416177, "url": "https://github.com/eclipse/keyple-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 10325, "license": "licensed"}}