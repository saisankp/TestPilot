{"test_class": {"identifier": "MutableCharArrayUtilsTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "core/src/test/java/org/carrot2/util/MutableCharArrayUtilsTest.java"}, "test_case": {"identifier": "toLowerCaseNoReallocation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void toLowerCaseNoReallocation() {\n    final MutableCharArray source = new MutableCharArray(\"\u0141\u00d3d\u0179\");\n    final MutableCharArray result = new MutableCharArray(\"    z\");\n\n    Assertions.assertThat(MutableCharArrayUtils.toLowerCase(source, result)).isTrue();\n    Assertions.assertThat(result.getBuffer()).isEqualTo(\"\u0142\u00f3d\u017az\".toCharArray());\n  }", "signature": "void toLowerCaseNoReallocation()", "full_signature": "@Test public void toLowerCaseNoReallocation()", "class_method_signature": "MutableCharArrayUtilsTest.toLowerCaseNoReallocation()", "testcase": true, "constructor": false, "invocations": ["isTrue", "assertThat", "toLowerCase", "isEqualTo", "assertThat", "getBuffer", "harArray())"]}, "focal_class": {"identifier": "MutableCharArrayUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toLowerCase", "parameters": "(MutableCharArray source, MutableCharArray result)", "modifiers": "public static", "return": "boolean", "signature": "boolean toLowerCase(MutableCharArray source, MutableCharArray result)", "full_signature": "public static boolean toLowerCase(MutableCharArray source, MutableCharArray result)", "class_method_signature": "MutableCharArrayUtils.toLowerCase(MutableCharArray source, MutableCharArray result)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/carrot2/util/MutableCharArrayUtils.java"}, "focal_method": {"identifier": "toLowerCase", "parameters": "(MutableCharArray source, MutableCharArray result)", "modifiers": "public static", "return": "boolean", "body": "public static boolean toLowerCase(MutableCharArray source, MutableCharArray result) {\n    char[] buffer = result.getBuffer();\n\n    final int length = source.length();\n    if (buffer.length < length) {\n      buffer = new char[length];\n    }\n\n    final boolean changed =\n        CharArrayUtils.toLowerCase(source.getBuffer(), buffer, source.getStart(), source.length());\n    result.reset(buffer, 0, length);\n\n    return changed;\n  }", "signature": "boolean toLowerCase(MutableCharArray source, MutableCharArray result)", "full_signature": "public static boolean toLowerCase(MutableCharArray source, MutableCharArray result)", "class_method_signature": "MutableCharArrayUtils.toLowerCase(MutableCharArray source, MutableCharArray result)", "testcase": false, "constructor": false, "invocations": ["getBuffer", "length", "toLowerCase", "getBuffer", "getStart", "length", "reset"]}, "repository": {"repo_id": 2424377, "url": "https://github.com/carrot2/carrot2", "stars": 393, "created": "9/20/2011 6:19:05 PM +00:00", "updates": "2020-01-24T20:43:38+00:00", "fork": "False", "license": "licensed"}}