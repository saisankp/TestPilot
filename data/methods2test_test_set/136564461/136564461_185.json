{"test_class": {"identifier": "ByteUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/util/ByteUtilsTest.java"}, "test_case": {"identifier": "success_ReverseByteArrayToBigInteger", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_ReverseByteArrayToBigInteger() {\n        byte[] input = new byte[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n        byte[] input2 = new byte[]{31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0};\n        BigInteger integer1 = new BigInteger(input);\n        BigInteger integer2 = new BigInteger(ByteUtils.reverse(input2));\n\n        assertEquals(integer1, integer2);\n    }", "signature": "void success_ReverseByteArrayToBigInteger()", "full_signature": "@Test public void success_ReverseByteArrayToBigInteger()", "class_method_signature": "ByteUtilsTest.success_ReverseByteArrayToBigInteger()", "testcase": true, "constructor": false, "invocations": ["reverse", "assertEquals"]}, "focal_class": {"identifier": "ByteUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "split", "parameters": "(byte[] input, int firstLength)", "modifiers": "public static", "return": "byte[][]", "signature": "byte[][] split(byte[] input, int firstLength)", "full_signature": "public static byte[][] split(byte[] input, int firstLength)", "class_method_signature": "ByteUtils.split(byte[] input, int firstLength)", "testcase": false, "constructor": false}, {"identifier": "reverse", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] reverse(byte[] input)", "full_signature": "public static byte[] reverse(byte[] input)", "class_method_signature": "ByteUtils.reverse(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(byte[] value1, byte[] value2)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] join(byte[] value1, byte[] value2)", "full_signature": "public static byte[] join(byte[] value1, byte[] value2)", "class_method_signature": "ByteUtils.join(byte[] value1, byte[] value2)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] join(byte[]... inputs)", "full_signature": "public static byte[] join(byte[]... inputs)", "class_method_signature": "ByteUtils.join(byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "paddingZeroOnHead", "parameters": "(byte[] input, int byteLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] paddingZeroOnHead(byte[] input, int byteLength)", "full_signature": "public static byte[] paddingZeroOnHead(byte[] input, int byteLength)", "class_method_signature": "ByteUtils.paddingZeroOnHead(byte[] input, int byteLength)", "testcase": false, "constructor": false}, {"identifier": "paddingZeroOnTail", "parameters": "(byte[] input, int byteLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] paddingZeroOnTail(byte[] input, int byteLength)", "full_signature": "public static byte[] paddingZeroOnTail(byte[] input, int byteLength)", "class_method_signature": "ByteUtils.paddingZeroOnTail(byte[] input, int byteLength)", "testcase": false, "constructor": false}, {"identifier": "readBit", "parameters": "(byte value, int position)", "modifiers": "public static", "return": "int", "signature": "int readBit(byte value, int position)", "full_signature": "public static int readBit(byte value, int position)", "class_method_signature": "ByteUtils.readBit(byte value, int position)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/util/ByteUtils.java"}, "focal_method": {"identifier": "reverse", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] reverse(byte[] input) {\n        byte[] output = new byte[input.length];\n        int counter = 0;\n        for (byte b : input) {\n            output[input.length - counter - 1] = b;\n            counter++;\n        }\n        return output;\n    }", "signature": "byte[] reverse(byte[] input)", "full_signature": "public static byte[] reverse(byte[] input)", "class_method_signature": "ByteUtils.reverse(byte[] input)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}