{"test_class": {"identifier": "AminoAcidsTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "storage/pdb/src/test/java/org/openscience/cdk/templates/AminoAcidsTest.java"}, "test_case": {"identifier": "testGetHashMapBySingleCharCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetHashMapBySingleCharCode() {\n        Map<String, IAminoAcid> map = AminoAcids.getHashMapBySingleCharCode();\n        Assert.assertNotNull(map);\n        Assert.assertEquals(20, map.size());\n\n        String[] aas = {\"G\", \"A\", \"V\", \"L\"};\n        for (String aa1 : aas) {\n            AminoAcid aa = (AminoAcid) map.get(aa1);\n            Assert.assertNotNull(\"Did not find AA for: \" + aa1, aa);\n        }\n    }", "signature": "void testGetHashMapBySingleCharCode()", "full_signature": "@Test public void testGetHashMapBySingleCharCode()", "class_method_signature": "AminoAcidsTest.testGetHashMapBySingleCharCode()", "testcase": true, "constructor": false, "invocations": ["getHashMapBySingleCharCode", "assertNotNull", "assertEquals", "size", "get", "assertNotNull"]}, "focal_class": {"identifier": "AminoAcids", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ILoggingTool LOGGER = LoggingToolFactory.createLoggingTool(AminoAcids.class);", "modifier": "private static final", "type": "ILoggingTool", "declarator": "LOGGER = LoggingToolFactory.createLoggingTool(AminoAcids.class)", "var_name": "LOGGER"}, {"original_string": "private static AminoAcid[] aminoAcids         = null;", "modifier": "private static", "type": "AminoAcid[]", "declarator": "aminoAcids         = null", "var_name": "aminoAcids"}, {"original_string": "public final static String RESIDUE_NAME       = \"residueName\";", "modifier": "public final static", "type": "String", "declarator": "RESIDUE_NAME       = \"residueName\"", "var_name": "RESIDUE_NAME"}, {"original_string": "public final static String RESIDUE_NAME_SHORT = \"residueNameShort\";", "modifier": "public final static", "type": "String", "declarator": "RESIDUE_NAME_SHORT = \"residueNameShort\"", "var_name": "RESIDUE_NAME_SHORT"}, {"original_string": "public final static String NO_ATOMS           = \"noOfAtoms\";", "modifier": "public final static", "type": "String", "declarator": "NO_ATOMS           = \"noOfAtoms\"", "var_name": "NO_ATOMS"}, {"original_string": "public final static String NO_BONDS           = \"noOfBonds\";", "modifier": "public final static", "type": "String", "declarator": "NO_BONDS           = \"noOfBonds\"", "var_name": "NO_BONDS"}, {"original_string": "public final static String ID                 = \"id\";", "modifier": "public final static", "type": "String", "declarator": "ID                 = \"id\"", "var_name": "ID"}], "methods": [{"identifier": "aaBondInfo", "parameters": "()", "modifiers": "public static", "return": "int[][]", "signature": "int[][] aaBondInfo()", "full_signature": "public static int[][] aaBondInfo()", "class_method_signature": "AminoAcids.aaBondInfo()", "testcase": false, "constructor": false}, {"identifier": "createAAs", "parameters": "()", "modifiers": "public synchronized static", "return": "AminoAcid[]", "signature": "AminoAcid[] createAAs()", "full_signature": "public synchronized static AminoAcid[] createAAs()", "class_method_signature": "AminoAcids.createAAs()", "testcase": false, "constructor": false}, {"identifier": "getHashMapBySingleCharCode", "parameters": "()", "modifiers": "public static", "return": "Map<String, IAminoAcid>", "signature": "Map<String, IAminoAcid> getHashMapBySingleCharCode()", "full_signature": "public static Map<String, IAminoAcid> getHashMapBySingleCharCode()", "class_method_signature": "AminoAcids.getHashMapBySingleCharCode()", "testcase": false, "constructor": false}, {"identifier": "getHashMapByThreeLetterCode", "parameters": "()", "modifiers": "public static", "return": "Map<String, IAminoAcid>", "signature": "Map<String, IAminoAcid> getHashMapByThreeLetterCode()", "full_signature": "public static Map<String, IAminoAcid> getHashMapByThreeLetterCode()", "class_method_signature": "AminoAcids.getHashMapByThreeLetterCode()", "testcase": false, "constructor": false}, {"identifier": "convertThreeLetterCodeToOneLetterCode", "parameters": "(String threeLetterCode)", "modifiers": "public static", "return": "String", "signature": "String convertThreeLetterCodeToOneLetterCode(String threeLetterCode)", "full_signature": "public static String convertThreeLetterCodeToOneLetterCode(String threeLetterCode)", "class_method_signature": "AminoAcids.convertThreeLetterCodeToOneLetterCode(String threeLetterCode)", "testcase": false, "constructor": false}, {"identifier": "convertOneLetterCodeToThreeLetterCode", "parameters": "(String oneLetterCode)", "modifiers": "public static", "return": "String", "signature": "String convertOneLetterCodeToThreeLetterCode(String oneLetterCode)", "full_signature": "public static String convertOneLetterCodeToThreeLetterCode(String oneLetterCode)", "class_method_signature": "AminoAcids.convertOneLetterCodeToThreeLetterCode(String oneLetterCode)", "testcase": false, "constructor": false}], "file": "storage/pdb/src/main/java/org/openscience/cdk/templates/AminoAcids.java"}, "focal_method": {"identifier": "getHashMapBySingleCharCode", "parameters": "()", "modifiers": "public static", "return": "Map<String, IAminoAcid>", "body": "public static Map<String, IAminoAcid> getHashMapBySingleCharCode() {\n        IAminoAcid[] monomers = createAAs();\n        HashMap<String, IAminoAcid> map = new HashMap<String, IAminoAcid>();\n        for (int i = 0; i < monomers.length; i++) {\n            map.put((String) monomers[i].getProperty(RESIDUE_NAME_SHORT), monomers[i]);\n        }\n        return map;\n    }", "signature": "Map<String, IAminoAcid> getHashMapBySingleCharCode()", "full_signature": "public static Map<String, IAminoAcid> getHashMapBySingleCharCode()", "class_method_signature": "AminoAcids.getHashMapBySingleCharCode()", "testcase": false, "constructor": false, "invocations": ["createAAs", "put", "getProperty"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}