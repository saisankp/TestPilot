{"test_class": {"identifier": "MatcherTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/metrics/promql/src/test/java/com/alipay/sofa/lookout/server/prom/labels/MatcherTest.java"}, "test_case": {"identifier": "testEqualMatches", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEqualMatches() {\n        Matcher matcher = new Matcher(MatchType.MatchEqual, \"k1\", \"v1\");\n        Assert.assertTrue(matcher.matches(\"v1\"));\n        Assert.assertFalse(matcher.matches(\"v2\"));\n\n    }", "signature": "void testEqualMatches()", "full_signature": "@Test public void testEqualMatches()", "class_method_signature": "MatcherTest.testEqualMatches()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "matches", "assertFalse", "matches"]}, "focal_class": {"identifier": "Matcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "MatchType type;", "modifier": "", "type": "MatchType", "declarator": "type", "var_name": "type"}, {"original_string": "String    name;", "modifier": "", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "String    value;", "modifier": "", "type": "String", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "Matcher", "parameters": "(MatchType type, String name, String value)", "modifiers": "public", "return": "", "signature": " Matcher(MatchType type, String name, String value)", "full_signature": "public  Matcher(MatchType type, String name, String value)", "class_method_signature": "Matcher.Matcher(MatchType type, String name, String value)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(String s)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(String s)", "full_signature": "public boolean matches(String s)", "class_method_signature": "Matcher.matches(String s)", "testcase": false, "constructor": false}, {"identifier": "matchString", "parameters": "(String s)", "modifiers": "private", "return": "boolean", "signature": "boolean matchString(String s)", "full_signature": "private boolean matchString(String s)", "class_method_signature": "Matcher.matchString(String s)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "MatchType", "signature": "MatchType getType()", "full_signature": "public MatchType getType()", "class_method_signature": "Matcher.getType()", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(MatchType type)", "modifiers": "public", "return": "void", "signature": "void setType(MatchType type)", "full_signature": "public void setType(MatchType type)", "class_method_signature": "Matcher.setType(MatchType type)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Matcher.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "Matcher.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "Matcher.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setValue(String value)", "full_signature": "public void setValue(String value)", "class_method_signature": "Matcher.setValue(String value)", "testcase": false, "constructor": false}], "file": "server/metrics/promql/src/main/java/com/alipay/sofa/lookout/server/prom/labels/Matcher.java"}, "focal_method": {"identifier": "matches", "parameters": "(String s)", "modifiers": "public", "return": "boolean", "body": "public boolean matches(String s) {\n        switch (type) {\n            case MatchEqual:\n                return s == value;\n            case MatchNotEqual:\n                return s != value;\n            case MatchRegexp:\n                return matchString(s);\n            case MatchNotRegexp:\n                return !matchString(s);\n            case MatchLiteralOr:\n                return value.indexOf(s) > -1;\n            case MatchNotLiteralOr:\n                return !(value.indexOf(s) > -1);\n        }\n        throw new IllegalStateException(\"labels.Matcher.Matches: invalid match type\");\n    }", "signature": "boolean matches(String s)", "full_signature": "public boolean matches(String s)", "class_method_signature": "Matcher.matches(String s)", "testcase": false, "constructor": false, "invocations": ["matchString", "matchString", "indexOf", "indexOf"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}