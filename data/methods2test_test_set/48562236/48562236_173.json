{"test_class": {"identifier": "TokenQueueTest", "superclass": "", "interfaces": "", "fields": [], "file": "base/lang/src/test/java/leap/lang/jsoup/parser/TokenQueueTest.java"}, "test_case": {"identifier": "chompBalanced", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void chompBalanced() {\n        TokenQueue tq = new TokenQueue(\":contains(one (two) three) four\");\n        String pre = tq.consumeTo(\"(\");\n        String guts = tq.chompBalanced('(', ')');\n        String remainder = tq.remainder();\n\n        assertEquals(\":contains\", pre);\n        assertEquals(\"one (two) three\", guts);\n        assertEquals(\" four\", remainder);\n    }", "signature": "void chompBalanced()", "full_signature": "@Test public void chompBalanced()", "class_method_signature": "TokenQueueTest.chompBalanced()", "testcase": true, "constructor": false, "invocations": ["consumeTo", "chompBalanced", "remainder", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "TokenQueue", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String queue;", "modifier": "private", "type": "String", "declarator": "queue", "var_name": "queue"}, {"original_string": "private int pos = 0;", "modifier": "private", "type": "int", "declarator": "pos = 0", "var_name": "pos"}, {"original_string": "private static final char ESC = '\\\\';", "modifier": "private static final", "type": "char", "declarator": "ESC = '\\\\'", "var_name": "ESC"}], "methods": [{"identifier": "TokenQueue", "parameters": "(String data)", "modifiers": "public", "return": "", "signature": " TokenQueue(String data)", "full_signature": "public  TokenQueue(String data)", "class_method_signature": "TokenQueue.TokenQueue(String data)", "testcase": false, "constructor": true}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "TokenQueue.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "remainingLength", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int remainingLength()", "full_signature": "private int remainingLength()", "class_method_signature": "TokenQueue.remainingLength()", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "()", "modifiers": "public", "return": "char", "signature": "char peek()", "full_signature": "public char peek()", "class_method_signature": "TokenQueue.peek()", "testcase": false, "constructor": false}, {"identifier": "addFirst", "parameters": "(Character c)", "modifiers": "public", "return": "void", "signature": "void addFirst(Character c)", "full_signature": "public void addFirst(Character c)", "class_method_signature": "TokenQueue.addFirst(Character c)", "testcase": false, "constructor": false}, {"identifier": "addFirst", "parameters": "(String seq)", "modifiers": "public", "return": "void", "signature": "void addFirst(String seq)", "full_signature": "public void addFirst(String seq)", "class_method_signature": "TokenQueue.addFirst(String seq)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(String seq)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(String seq)", "full_signature": "public boolean matches(String seq)", "class_method_signature": "TokenQueue.matches(String seq)", "testcase": false, "constructor": false}, {"identifier": "matchesCS", "parameters": "(String seq)", "modifiers": "public", "return": "boolean", "signature": "boolean matchesCS(String seq)", "full_signature": "public boolean matchesCS(String seq)", "class_method_signature": "TokenQueue.matchesCS(String seq)", "testcase": false, "constructor": false}, {"identifier": "matchesAny", "parameters": "(String... seq)", "modifiers": "public", "return": "boolean", "signature": "boolean matchesAny(String... seq)", "full_signature": "public boolean matchesAny(String... seq)", "class_method_signature": "TokenQueue.matchesAny(String... seq)", "testcase": false, "constructor": false}, {"identifier": "matchesAny", "parameters": "(char... seq)", "modifiers": "public", "return": "boolean", "signature": "boolean matchesAny(char... seq)", "full_signature": "public boolean matchesAny(char... seq)", "class_method_signature": "TokenQueue.matchesAny(char... seq)", "testcase": false, "constructor": false}, {"identifier": "matchesStartTag", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean matchesStartTag()", "full_signature": "public boolean matchesStartTag()", "class_method_signature": "TokenQueue.matchesStartTag()", "testcase": false, "constructor": false}, {"identifier": "matchChomp", "parameters": "(String seq)", "modifiers": "public", "return": "boolean", "signature": "boolean matchChomp(String seq)", "full_signature": "public boolean matchChomp(String seq)", "class_method_signature": "TokenQueue.matchChomp(String seq)", "testcase": false, "constructor": false}, {"identifier": "matchesWhitespace", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean matchesWhitespace()", "full_signature": "public boolean matchesWhitespace()", "class_method_signature": "TokenQueue.matchesWhitespace()", "testcase": false, "constructor": false}, {"identifier": "matchesWord", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean matchesWord()", "full_signature": "public boolean matchesWord()", "class_method_signature": "TokenQueue.matchesWord()", "testcase": false, "constructor": false}, {"identifier": "advance", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void advance()", "full_signature": "public void advance()", "class_method_signature": "TokenQueue.advance()", "testcase": false, "constructor": false}, {"identifier": "consume", "parameters": "()", "modifiers": "public", "return": "char", "signature": "char consume()", "full_signature": "public char consume()", "class_method_signature": "TokenQueue.consume()", "testcase": false, "constructor": false}, {"identifier": "consume", "parameters": "(String seq)", "modifiers": "public", "return": "void", "signature": "void consume(String seq)", "full_signature": "public void consume(String seq)", "class_method_signature": "TokenQueue.consume(String seq)", "testcase": false, "constructor": false}, {"identifier": "consumeTo", "parameters": "(String seq)", "modifiers": "public", "return": "String", "signature": "String consumeTo(String seq)", "full_signature": "public String consumeTo(String seq)", "class_method_signature": "TokenQueue.consumeTo(String seq)", "testcase": false, "constructor": false}, {"identifier": "consumeToIgnoreCase", "parameters": "(String seq)", "modifiers": "public", "return": "String", "signature": "String consumeToIgnoreCase(String seq)", "full_signature": "public String consumeToIgnoreCase(String seq)", "class_method_signature": "TokenQueue.consumeToIgnoreCase(String seq)", "testcase": false, "constructor": false}, {"identifier": "consumeToAny", "parameters": "(String... seq)", "modifiers": "public", "return": "String", "signature": "String consumeToAny(String... seq)", "full_signature": "public String consumeToAny(String... seq)", "class_method_signature": "TokenQueue.consumeToAny(String... seq)", "testcase": false, "constructor": false}, {"identifier": "chompTo", "parameters": "(String seq)", "modifiers": "public", "return": "String", "signature": "String chompTo(String seq)", "full_signature": "public String chompTo(String seq)", "class_method_signature": "TokenQueue.chompTo(String seq)", "testcase": false, "constructor": false}, {"identifier": "chompToIgnoreCase", "parameters": "(String seq)", "modifiers": "public", "return": "String", "signature": "String chompToIgnoreCase(String seq)", "full_signature": "public String chompToIgnoreCase(String seq)", "class_method_signature": "TokenQueue.chompToIgnoreCase(String seq)", "testcase": false, "constructor": false}, {"identifier": "chompBalanced", "parameters": "(char open, char close)", "modifiers": "public", "return": "String", "signature": "String chompBalanced(char open, char close)", "full_signature": "public String chompBalanced(char open, char close)", "class_method_signature": "TokenQueue.chompBalanced(char open, char close)", "testcase": false, "constructor": false}, {"identifier": "unescape", "parameters": "(String in)", "modifiers": "public static", "return": "String", "signature": "String unescape(String in)", "full_signature": "public static String unescape(String in)", "class_method_signature": "TokenQueue.unescape(String in)", "testcase": false, "constructor": false}, {"identifier": "consumeWhitespace", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean consumeWhitespace()", "full_signature": "public boolean consumeWhitespace()", "class_method_signature": "TokenQueue.consumeWhitespace()", "testcase": false, "constructor": false}, {"identifier": "consumeWord", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String consumeWord()", "full_signature": "public String consumeWord()", "class_method_signature": "TokenQueue.consumeWord()", "testcase": false, "constructor": false}, {"identifier": "consumeTagName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String consumeTagName()", "full_signature": "public String consumeTagName()", "class_method_signature": "TokenQueue.consumeTagName()", "testcase": false, "constructor": false}, {"identifier": "consumeElementSelector", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String consumeElementSelector()", "full_signature": "public String consumeElementSelector()", "class_method_signature": "TokenQueue.consumeElementSelector()", "testcase": false, "constructor": false}, {"identifier": "consumeCssIdentifier", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String consumeCssIdentifier()", "full_signature": "public String consumeCssIdentifier()", "class_method_signature": "TokenQueue.consumeCssIdentifier()", "testcase": false, "constructor": false}, {"identifier": "consumeAttributeKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String consumeAttributeKey()", "full_signature": "public String consumeAttributeKey()", "class_method_signature": "TokenQueue.consumeAttributeKey()", "testcase": false, "constructor": false}, {"identifier": "remainder", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String remainder()", "full_signature": "public String remainder()", "class_method_signature": "TokenQueue.remainder()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "TokenQueue.toString()", "testcase": false, "constructor": false}], "file": "base/lang/src/main/java/leap/lang/jsoup/parser/TokenQueue.java"}, "focal_method": {"identifier": "chompBalanced", "parameters": "(char open, char close)", "modifiers": "public", "return": "String", "body": "public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n            if (last == 0 || last != ESC) {\n                if (c.equals(open)) {\n                    depth++;\n                    if (start == -1)\n                        start = pos;\n                }\n                else if (c.equals(close))\n                    depth--;\n            }\n\n            if (depth > 0 && last != 0)\n                end = pos; // don't include the outer match pair in the return\n            last = c;\n        } while (depth > 0);\n        return (end >= 0) ? queue.substring(start, end) : \"\";\n    }", "signature": "String chompBalanced(char open, char close)", "full_signature": "public String chompBalanced(char open, char close)", "class_method_signature": "TokenQueue.chompBalanced(char open, char close)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "consume", "equals", "equals", "substring"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}