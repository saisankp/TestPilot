{"test_class": {"identifier": "JavaIdTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "lang-java/src/test/java/org/eclipse/steady/java/JavaIdTest.java"}, "test_case": {"identifier": "testMethodParser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMethodParser() {\n    final JavaPackageId p = new JavaPackageId(\"com.sap.research\");\n    final JavaClassId c = new JavaClassId(p, \"TestClass\");\n    final JavaClassId nc = new JavaClassId(c, \"NestedClass\");\n    final JavaMethodId m1 = new JavaMethodId(nc, \"foo\", Arrays.asList(\"java.lang.String\", \"int\"));\n    final JavaMethodId m2 =\n        JavaId.parseMethodQName(\"com.sap.research.TestClass$NestedClass.foo(String,int)\");\n    assertEquals(m1, m2);\n  }", "signature": "void testMethodParser()", "full_signature": "@Test public void testMethodParser()", "class_method_signature": "JavaIdTest.testMethodParser()", "testcase": true, "constructor": false, "invocations": ["asList", "parseMethodQName", "assertEquals"]}, "focal_class": {"identifier": "JavaId", "superclass": "extends ConstructId", "interfaces": "", "fields": [{"original_string": "private static final Logger log = org.apache.logging.log4j.LogManager.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = org.apache.logging.log4j.LogManager.getLogger()", "var_name": "log"}, {"original_string": "protected Type type = null;", "modifier": "protected", "type": "Type", "declarator": "type = null", "var_name": "type"}, {"original_string": "private Set<String> annotations = new HashSet<String>();", "modifier": "private", "type": "Set<String>", "declarator": "annotations = new HashSet<String>()", "var_name": "annotations"}], "methods": [{"identifier": "JavaId", "parameters": "(Type _t)", "modifiers": "protected", "return": "", "signature": " JavaId(Type _t)", "full_signature": "protected  JavaId(Type _t)", "class_method_signature": "JavaId.JavaId(Type _t)", "testcase": false, "constructor": true}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Type", "signature": "Type getType()", "full_signature": "public Type getType()", "class_method_signature": "JavaId.getType()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "JavaId.toString()", "testcase": false, "constructor": false}, {"identifier": "getAnnotations", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getAnnotations()", "full_signature": "public Set<String> getAnnotations()", "class_method_signature": "JavaId.getAnnotations()", "testcase": false, "constructor": false}, {"identifier": "addAnnotation", "parameters": "(String _a)", "modifiers": "public", "return": "void", "signature": "void addAnnotation(String _a)", "full_signature": "public void addAnnotation(String _a)", "class_method_signature": "JavaId.addAnnotation(String _a)", "testcase": false, "constructor": false}, {"identifier": "hasAnnotation", "parameters": "(String _a)", "modifiers": "public", "return": "boolean", "signature": "boolean hasAnnotation(String _a)", "full_signature": "public boolean hasAnnotation(String _a)", "class_method_signature": "JavaId.hasAnnotation(String _a)", "testcase": false, "constructor": false}, {"identifier": "getJavaPackageId", "parameters": "()", "modifiers": "public abstract", "return": "JavaPackageId", "signature": "JavaPackageId getJavaPackageId()", "full_signature": "public abstract JavaPackageId getJavaPackageId()", "class_method_signature": "JavaId.getJavaPackageId()", "testcase": false, "constructor": false}, {"identifier": "getDefinitionContext", "parameters": "()", "modifiers": "public abstract", "return": "ConstructId", "signature": "ConstructId getDefinitionContext()", "full_signature": "public abstract ConstructId getDefinitionContext()", "class_method_signature": "JavaId.getDefinitionContext()", "testcase": false, "constructor": false}, {"identifier": "getSharedType", "parameters": "()", "modifiers": "public", "return": "ConstructType", "signature": "ConstructType getSharedType()", "full_signature": "public ConstructType getSharedType()", "class_method_signature": "JavaId.getSharedType()", "testcase": false, "constructor": false}, {"identifier": "toJSON", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String toJSON()", "full_signature": "public final String toJSON()", "class_method_signature": "JavaId.toJSON()", "testcase": false, "constructor": false}, {"identifier": "toGSON", "parameters": "()", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toGSON()", "full_signature": "@Override public JsonObject toGSON()", "class_method_signature": "JavaId.toGSON()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "JavaId.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public final boolean equals(Object obj)", "class_method_signature": "JavaId.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "parameterTypesToString", "parameters": "(List<String> _p)", "modifiers": "protected static", "return": "String", "signature": "String parameterTypesToString(List<String> _p)", "full_signature": "protected static String parameterTypesToString(List<String> _p)", "class_method_signature": "JavaId.parameterTypesToString(List<String> _p)", "testcase": false, "constructor": false}, {"identifier": "parameterTypesToString", "parameters": "(List<String> _p, boolean _rem_qualification)", "modifiers": "protected static", "return": "String", "signature": "String parameterTypesToString(List<String> _p, boolean _rem_qualification)", "full_signature": "protected static String parameterTypesToString(List<String> _p, boolean _rem_qualification)", "class_method_signature": "JavaId.parameterTypesToString(List<String> _p, boolean _rem_qualification)", "testcase": false, "constructor": false}, {"identifier": "typeToString", "parameters": "(Type _t)", "modifiers": "public static", "return": "String", "signature": "String typeToString(Type _t)", "full_signature": "public static String typeToString(Type _t)", "class_method_signature": "JavaId.typeToString(Type _t)", "testcase": false, "constructor": false}, {"identifier": "typeFromString", "parameters": "(String _t)", "modifiers": "public static", "return": "Type", "signature": "Type typeFromString(String _t)", "full_signature": "public static Type typeFromString(String _t)", "class_method_signature": "JavaId.typeFromString(String _t)", "testcase": false, "constructor": false}, {"identifier": "toSharedType", "parameters": "(JavaId.Type _core_type)", "modifiers": "public static", "return": "org.eclipse.steady.shared.enums.ConstructType", "signature": "org.eclipse.steady.shared.enums.ConstructType toSharedType(JavaId.Type _core_type)", "full_signature": "public static org.eclipse.steady.shared.enums.ConstructType toSharedType(JavaId.Type _core_type)", "class_method_signature": "JavaId.toSharedType(JavaId.Type _core_type)", "testcase": false, "constructor": false}, {"identifier": "toCoreType", "parameters": "(\n      org.eclipse.steady.shared.json.model.ConstructId _cid)", "modifiers": "public static", "return": "org.eclipse.steady.ConstructId", "signature": "org.eclipse.steady.ConstructId toCoreType(\n      org.eclipse.steady.shared.json.model.ConstructId _cid)", "full_signature": "public static org.eclipse.steady.ConstructId toCoreType(\n      org.eclipse.steady.shared.json.model.ConstructId _cid)", "class_method_signature": "JavaId.toCoreType(\n      org.eclipse.steady.shared.json.model.ConstructId _cid)", "testcase": false, "constructor": false}, {"identifier": "toCoreType", "parameters": "(\n      Collection<org.eclipse.steady.shared.json.model.ConstructId> _cids)", "modifiers": "public static", "return": "Set<org.eclipse.steady.ConstructId>", "signature": "Set<org.eclipse.steady.ConstructId> toCoreType(\n      Collection<org.eclipse.steady.shared.json.model.ConstructId> _cids)", "full_signature": "public static Set<org.eclipse.steady.ConstructId> toCoreType(\n      Collection<org.eclipse.steady.shared.json.model.ConstructId> _cids)", "class_method_signature": "JavaId.toCoreType(\n      Collection<org.eclipse.steady.shared.json.model.ConstructId> _cids)", "testcase": false, "constructor": false}, {"identifier": "getClassId", "parameters": "(@NotNull Class _c)", "modifiers": "public static", "return": "JavaClassId", "signature": "JavaClassId getClassId(@NotNull Class _c)", "full_signature": "public static JavaClassId getClassId(@NotNull Class _c)", "class_method_signature": "JavaId.getClassId(@NotNull Class _c)", "testcase": false, "constructor": false}, {"identifier": "parseEnumQName", "parameters": "(@NotNull String _s)", "modifiers": "public static", "return": "JavaEnumId", "signature": "JavaEnumId parseEnumQName(@NotNull String _s)", "full_signature": "public static JavaEnumId parseEnumQName(@NotNull String _s)", "class_method_signature": "JavaId.parseEnumQName(@NotNull String _s)", "testcase": false, "constructor": false}, {"identifier": "parseClassQName", "parameters": "(@NotNull String _s)", "modifiers": "public static", "return": "JavaClassId", "signature": "JavaClassId parseClassQName(@NotNull String _s)", "full_signature": "public static JavaClassId parseClassQName(@NotNull String _s)", "class_method_signature": "JavaId.parseClassQName(@NotNull String _s)", "testcase": false, "constructor": false}, {"identifier": "parseMethodQName", "parameters": "(String _s)", "modifiers": "public static", "return": "JavaMethodId", "signature": "JavaMethodId parseMethodQName(String _s)", "full_signature": "public static JavaMethodId parseMethodQName(String _s)", "class_method_signature": "JavaId.parseMethodQName(String _s)", "testcase": false, "constructor": false}, {"identifier": "parseMethodQName", "parameters": "(JavaId.Type _ctx_type, String _s)", "modifiers": "public static", "return": "JavaMethodId", "signature": "JavaMethodId parseMethodQName(JavaId.Type _ctx_type, String _s)", "full_signature": "public static JavaMethodId parseMethodQName(JavaId.Type _ctx_type, String _s)", "class_method_signature": "JavaId.parseMethodQName(JavaId.Type _ctx_type, String _s)", "testcase": false, "constructor": false}, {"identifier": "parseConstructorQName", "parameters": "(String _s)", "modifiers": "public static", "return": "JavaConstructorId", "signature": "JavaConstructorId parseConstructorQName(String _s)", "full_signature": "public static JavaConstructorId parseConstructorQName(String _s)", "class_method_signature": "JavaId.parseConstructorQName(String _s)", "testcase": false, "constructor": false}, {"identifier": "parseConstructorQName", "parameters": "(\n      JavaId.Type _ctx_type, String _s, String _param_to_skip)", "modifiers": "public static", "return": "JavaConstructorId", "signature": "JavaConstructorId parseConstructorQName(\n      JavaId.Type _ctx_type, String _s, String _param_to_skip)", "full_signature": "public static JavaConstructorId parseConstructorQName(\n      JavaId.Type _ctx_type, String _s, String _param_to_skip)", "class_method_signature": "JavaId.parseConstructorQName(\n      JavaId.Type _ctx_type, String _s, String _param_to_skip)", "testcase": false, "constructor": false}, {"identifier": "parseClassInitQName", "parameters": "(String _s)", "modifiers": "public static", "return": "JavaClassInit", "signature": "JavaClassInit parseClassInitQName(String _s)", "full_signature": "public static JavaClassInit parseClassInitQName(String _s)", "class_method_signature": "JavaId.parseClassInitQName(String _s)", "testcase": false, "constructor": false}, {"identifier": "parseParameterTypes", "parameters": "(String _s)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> parseParameterTypes(String _s)", "full_signature": "private static List<String> parseParameterTypes(String _s)", "class_method_signature": "JavaId.parseParameterTypes(String _s)", "testcase": false, "constructor": false}, {"identifier": "removePackageContext", "parameters": "(String _qname)", "modifiers": "public static", "return": "String", "signature": "String removePackageContext(String _qname)", "full_signature": "public static String removePackageContext(String _qname)", "class_method_signature": "JavaId.removePackageContext(String _qname)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(Set<ConstructId> _set, String[] _filter)", "modifiers": "public static", "return": "Set<ConstructId>", "signature": "Set<ConstructId> filter(Set<ConstructId> _set, String[] _filter)", "full_signature": "public static Set<ConstructId> filter(Set<ConstructId> _set, String[] _filter)", "class_method_signature": "JavaId.filter(Set<ConstructId> _set, String[] _filter)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(Set<ConstructId> _set, String _filter)", "modifiers": "public static", "return": "Set<ConstructId>", "signature": "Set<ConstructId> filter(Set<ConstructId> _set, String _filter)", "full_signature": "public static Set<ConstructId> filter(Set<ConstructId> _set, String _filter)", "class_method_signature": "JavaId.filter(Set<ConstructId> _set, String _filter)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(Set<ConstructId> _set, JavaId.Type[] _filter)", "modifiers": "public static", "return": "Set<ConstructId>", "signature": "Set<ConstructId> filter(Set<ConstructId> _set, JavaId.Type[] _filter)", "full_signature": "public static Set<ConstructId> filter(Set<ConstructId> _set, JavaId.Type[] _filter)", "class_method_signature": "JavaId.filter(Set<ConstructId> _set, JavaId.Type[] _filter)", "testcase": false, "constructor": false}, {"identifier": "filterWithContext", "parameters": "(Set<ConstructId> _set, JavaId _context)", "modifiers": "public static", "return": "Set<ConstructId>", "signature": "Set<ConstructId> filterWithContext(Set<ConstructId> _set, JavaId _context)", "full_signature": "public static Set<ConstructId> filterWithContext(Set<ConstructId> _set, JavaId _context)", "class_method_signature": "JavaId.filterWithContext(Set<ConstructId> _set, JavaId _context)", "testcase": false, "constructor": false}, {"identifier": "getJarUrl", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getJarUrl()", "full_signature": "public URL getJarUrl()", "class_method_signature": "JavaId.getJarUrl()", "testcase": false, "constructor": false}, {"identifier": "getJarUrl", "parameters": "(URL _url)", "modifiers": "public static final", "return": "URL", "signature": "URL getJarUrl(URL _url)", "full_signature": "public static final URL getJarUrl(URL _url)", "class_method_signature": "JavaId.getJarUrl(URL _url)", "testcase": false, "constructor": false}, {"identifier": "getCompilationUnit", "parameters": "()", "modifiers": "public", "return": "JavaId", "signature": "JavaId getCompilationUnit()", "full_signature": "public JavaId getCompilationUnit()", "class_method_signature": "JavaId.getCompilationUnit()", "testcase": false, "constructor": false}, {"identifier": "getCompilationUnit", "parameters": "(JavaId _jid)", "modifiers": "public static", "return": "JavaId", "signature": "JavaId getCompilationUnit(JavaId _jid)", "full_signature": "public static JavaId getCompilationUnit(JavaId _jid)", "class_method_signature": "JavaId.getCompilationUnit(JavaId _jid)", "testcase": false, "constructor": false}, {"identifier": "getJavaId", "parameters": "(String _type, String _qname)", "modifiers": "public static", "return": "JavaId", "signature": "JavaId getJavaId(String _type, String _qname)", "full_signature": "public static JavaId getJavaId(String _type, String _qname)", "class_method_signature": "JavaId.getJavaId(String _type, String _qname)", "testcase": false, "constructor": false}], "file": "lang-java/src/main/java/org/eclipse/steady/java/JavaId.java"}, "focal_method": {"identifier": "parseMethodQName", "parameters": "(String _s)", "modifiers": "public static", "return": "JavaMethodId", "body": "public static JavaMethodId parseMethodQName(String _s) {\n    return JavaId.parseMethodQName(JavaId.Type.CLASS, _s);\n  }", "signature": "JavaMethodId parseMethodQName(String _s)", "full_signature": "public static JavaMethodId parseMethodQName(String _s)", "class_method_signature": "JavaId.parseMethodQName(String _s)", "testcase": false, "constructor": false, "invocations": ["parseMethodQName"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}