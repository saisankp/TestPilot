{"test_class": {"identifier": "LogUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "quickfixj-core/src/test/java/quickfix/LogUtilTest.java"}, "test_case": {"identifier": "testLogThrowable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLogThrowable() throws ConfigError, FieldConvertError {\n        ByteArrayOutputStream data = new ByteArrayOutputStream();\n        LogFactory mockLogFactory = createLogFactory(data);\n        createSessionAndGenerateException(mockLogFactory);\n\n        String message = new String(data.toByteArray());\n        assertTrue(message.contains(\"IOException\"));\n    }", "signature": "void testLogThrowable()", "full_signature": "@Test public void testLogThrowable()", "class_method_signature": "LogUtilTest.testLogThrowable()", "testcase": true, "constructor": false, "invocations": ["createLogFactory", "createSessionAndGenerateException", "toByteArray", "assertTrue", "contains"]}, "focal_class": {"identifier": "LogUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Logger log = LoggerFactory.getLogger(LogUtil.class);", "modifier": "private final static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(LogUtil.class)", "var_name": "log"}], "methods": [{"identifier": "logThrowable", "parameters": "(Log log, String message, Throwable t)", "modifiers": "public static", "return": "void", "signature": "void logThrowable(Log log, String message, Throwable t)", "full_signature": "public static void logThrowable(Log log, String message, Throwable t)", "class_method_signature": "LogUtil.logThrowable(Log log, String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "logThrowable", "parameters": "(SessionID sessionID, String message, Throwable t)", "modifiers": "public static", "return": "void", "signature": "void logThrowable(SessionID sessionID, String message, Throwable t)", "full_signature": "public static void logThrowable(SessionID sessionID, String message, Throwable t)", "class_method_signature": "LogUtil.logThrowable(SessionID sessionID, String message, Throwable t)", "testcase": false, "constructor": false}], "file": "quickfixj-core/src/main/java/quickfix/LogUtil.java"}, "focal_method": {"identifier": "logThrowable", "parameters": "(Log log, String message, Throwable t)", "modifiers": "public static", "return": "void", "body": "public static void logThrowable(Log log, String message, Throwable t) {\n        final StringWriter stringWriter = new StringWriter();\n        final PrintWriter printWriter = new PrintWriter(stringWriter);\n        printWriter.println(message);\n        t.printStackTrace(printWriter);\n        if (t.getCause() != null) {\n            printWriter.println(\"Cause: \" + t.getCause().getMessage());\n            t.getCause().printStackTrace(printWriter);\n        }\n        log.onErrorEvent(stringWriter.toString());\n    }", "signature": "void logThrowable(Log log, String message, Throwable t)", "full_signature": "public static void logThrowable(Log log, String message, Throwable t)", "class_method_signature": "LogUtil.logThrowable(Log log, String message, Throwable t)", "testcase": false, "constructor": false, "invocations": ["println", "printStackTrace", "getCause", "println", "getMessage", "getCause", "printStackTrace", "getCause", "onErrorEvent", "toString"]}, "repository": {"repo_id": 19937094, "url": "https://github.com/quickfix-j/quickfixj", "stars": 538, "created": "5/19/2014 10:04:08 AM +00:00", "updates": "2020-01-26T01:21:15+00:00", "fork": "False", "license": "licensed"}}