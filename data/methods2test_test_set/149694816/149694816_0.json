{"test_class": {"identifier": "PackageManagerTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/build/PackageManagerTest.java"}, "test_case": {"identifier": "testFind", "parameters": "()", "modifiers": "@Test @PrepareForTest(ProjectFile.class) public", "return": "void", "body": "@Test\n  @PrepareForTest(ProjectFile.class)\n  public void testFind() throws IOException {\n    final String packageName = randomUUID().toString();\n    final ProjectFile projectFile = new ProjectFile();\n    final PackageManager packageManager = new PackageManager();\n    PowerMockito.mockStatic(ProjectFile.class);\n    when(ProjectFile.from(any(Path.class))).thenReturn(projectFile);\n    packageManager.find(packageName);\n  }", "signature": "void testFind()", "full_signature": "@Test @PrepareForTest(ProjectFile.class) public void testFind()", "class_method_signature": "PackageManagerTest.testFind()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "mockStatic", "thenReturn", "when", "from", "any", "find"]}, "focal_class": {"identifier": "PackageManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final String repositoryLocation;", "modifier": "protected final", "type": "String", "declarator": "repositoryLocation", "var_name": "repositoryLocation"}], "methods": [{"identifier": "PackageManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " PackageManager()", "full_signature": "public  PackageManager()", "class_method_signature": "PackageManager.PackageManager()", "testcase": false, "constructor": true}, {"identifier": "find", "parameters": "(final String packageName)", "modifiers": "public", "return": "ResourceManager", "signature": "ResourceManager find(final String packageName)", "full_signature": "public ResourceManager find(final String packageName)", "class_method_signature": "PackageManager.find(final String packageName)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/build/PackageManager.java"}, "focal_method": {"identifier": "find", "parameters": "(final String packageName)", "modifiers": "public", "return": "ResourceManager", "body": "public ResourceManager find(final String packageName) {\n    final String packageLocation = append(repositoryLocation, packageName);\n    final String projectFileLocation = append(packageLocation, ShipConstants.PROJECT_FILENAME);\n    try {\n      final Path projectFilePath = Paths.get(projectFileLocation);\n      final ProjectFile projectFile = ProjectFile.from(projectFilePath);\n      return new ResourceManager(new Project(packageLocation, projectFile));\n    } catch (final IOException ex) {\n      throw new PackageNotFoundException(packageName, projectFileLocation, ex);\n    }\n  }", "signature": "ResourceManager find(final String packageName)", "full_signature": "public ResourceManager find(final String packageName)", "class_method_signature": "PackageManager.find(final String packageName)", "testcase": false, "constructor": false, "invocations": ["append", "append", "get", "from"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}