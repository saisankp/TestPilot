{"test_class": {"identifier": "ScoreSamplingOptionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ScoreSamplingOptions samplingOptions;", "modifier": "", "type": "ScoreSamplingOptions", "declarator": "samplingOptions", "var_name": "samplingOptions"}], "file": "phenol-core/src/test/java/org/monarchinitiative/phenol/ontology/scoredist/ScoreSamplingOptionsTest.java"}, "test_case": {"identifier": "testDefaultConstruction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDefaultConstruction() {\n    samplingOptions = new ScoreSamplingOptions();\n\n    assertEquals(\n        \"ScoreSamplingOptions [numThreads=1, minObjectId=null, maxObjectId=null, minNumTerms=1, maxNumTerms=20, numIterations=100000, seed=42]\",\n        samplingOptions.toString());\n  }", "signature": "void testDefaultConstruction()", "full_signature": "@Test public void testDefaultConstruction()", "class_method_signature": "ScoreSamplingOptionsTest.testDefaultConstruction()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString"]}, "focal_class": {"identifier": "ScoreSamplingOptions", "superclass": "", "interfaces": "implements Serializable, Cloneable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private int numThreads = 1;", "modifier": "private", "type": "int", "declarator": "numThreads = 1", "var_name": "numThreads"}, {"original_string": "private Integer minObjectId = null;", "modifier": "private", "type": "Integer", "declarator": "minObjectId = null", "var_name": "minObjectId"}, {"original_string": "private Integer maxObjectId = null;", "modifier": "private", "type": "Integer", "declarator": "maxObjectId = null", "var_name": "maxObjectId"}, {"original_string": "private int minNumTerms = 1;", "modifier": "private", "type": "int", "declarator": "minNumTerms = 1", "var_name": "minNumTerms"}, {"original_string": "private int maxNumTerms = 20;", "modifier": "private", "type": "int", "declarator": "maxNumTerms = 20", "var_name": "maxNumTerms"}, {"original_string": "private int numIterations = 100_000;", "modifier": "private", "type": "int", "declarator": "numIterations = 100_000", "var_name": "numIterations"}, {"original_string": "private int seed = 42;", "modifier": "private", "type": "int", "declarator": "seed = 42", "var_name": "seed"}], "methods": [{"identifier": "ScoreSamplingOptions", "parameters": "()", "modifiers": "public", "return": "", "signature": " ScoreSamplingOptions()", "full_signature": "public  ScoreSamplingOptions()", "class_method_signature": "ScoreSamplingOptions.ScoreSamplingOptions()", "testcase": false, "constructor": true}, {"identifier": "ScoreSamplingOptions", "parameters": "(\n      int numThreads,\n      Integer minObjectId,\n      Integer maxObjectId,\n      int minNumTerms,\n      int maxNumTerms,\n      int seed,\n      int numIterations)", "modifiers": "public", "return": "", "signature": " ScoreSamplingOptions(\n      int numThreads,\n      Integer minObjectId,\n      Integer maxObjectId,\n      int minNumTerms,\n      int maxNumTerms,\n      int seed,\n      int numIterations)", "full_signature": "public  ScoreSamplingOptions(\n      int numThreads,\n      Integer minObjectId,\n      Integer maxObjectId,\n      int minNumTerms,\n      int maxNumTerms,\n      int seed,\n      int numIterations)", "class_method_signature": "ScoreSamplingOptions.ScoreSamplingOptions(\n      int numThreads,\n      Integer minObjectId,\n      Integer maxObjectId,\n      int minNumTerms,\n      int maxNumTerms,\n      int seed,\n      int numIterations)", "testcase": false, "constructor": true}, {"identifier": "getNumThreads", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumThreads()", "full_signature": "public int getNumThreads()", "class_method_signature": "ScoreSamplingOptions.getNumThreads()", "testcase": false, "constructor": false}, {"identifier": "setNumThreads", "parameters": "(int numThreads)", "modifiers": "public", "return": "void", "signature": "void setNumThreads(int numThreads)", "full_signature": "public void setNumThreads(int numThreads)", "class_method_signature": "ScoreSamplingOptions.setNumThreads(int numThreads)", "testcase": false, "constructor": false}, {"identifier": "getMinObjectId", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getMinObjectId()", "full_signature": "public Integer getMinObjectId()", "class_method_signature": "ScoreSamplingOptions.getMinObjectId()", "testcase": false, "constructor": false}, {"identifier": "setMinObjectId", "parameters": "(Integer minObjectId)", "modifiers": "public", "return": "void", "signature": "void setMinObjectId(Integer minObjectId)", "full_signature": "public void setMinObjectId(Integer minObjectId)", "class_method_signature": "ScoreSamplingOptions.setMinObjectId(Integer minObjectId)", "testcase": false, "constructor": false}, {"identifier": "getMaxObjectId", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getMaxObjectId()", "full_signature": "public Integer getMaxObjectId()", "class_method_signature": "ScoreSamplingOptions.getMaxObjectId()", "testcase": false, "constructor": false}, {"identifier": "setMaxObjectId", "parameters": "(Integer maxObjectId)", "modifiers": "public", "return": "void", "signature": "void setMaxObjectId(Integer maxObjectId)", "full_signature": "public void setMaxObjectId(Integer maxObjectId)", "class_method_signature": "ScoreSamplingOptions.setMaxObjectId(Integer maxObjectId)", "testcase": false, "constructor": false}, {"identifier": "getMinNumTerms", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinNumTerms()", "full_signature": "public int getMinNumTerms()", "class_method_signature": "ScoreSamplingOptions.getMinNumTerms()", "testcase": false, "constructor": false}, {"identifier": "setMinNumTerms", "parameters": "(int minNumTerms)", "modifiers": "public", "return": "void", "signature": "void setMinNumTerms(int minNumTerms)", "full_signature": "public void setMinNumTerms(int minNumTerms)", "class_method_signature": "ScoreSamplingOptions.setMinNumTerms(int minNumTerms)", "testcase": false, "constructor": false}, {"identifier": "getMaxNumTerms", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxNumTerms()", "full_signature": "public int getMaxNumTerms()", "class_method_signature": "ScoreSamplingOptions.getMaxNumTerms()", "testcase": false, "constructor": false}, {"identifier": "setMaxNumTerms", "parameters": "(int maxNumTerms)", "modifiers": "public", "return": "void", "signature": "void setMaxNumTerms(int maxNumTerms)", "full_signature": "public void setMaxNumTerms(int maxNumTerms)", "class_method_signature": "ScoreSamplingOptions.setMaxNumTerms(int maxNumTerms)", "testcase": false, "constructor": false}, {"identifier": "getSeed", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeed()", "full_signature": "public int getSeed()", "class_method_signature": "ScoreSamplingOptions.getSeed()", "testcase": false, "constructor": false}, {"identifier": "setSeed", "parameters": "(int seed)", "modifiers": "public", "return": "void", "signature": "void setSeed(int seed)", "full_signature": "public void setSeed(int seed)", "class_method_signature": "ScoreSamplingOptions.setSeed(int seed)", "testcase": false, "constructor": false}, {"identifier": "getNumIterations", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumIterations()", "full_signature": "public int getNumIterations()", "class_method_signature": "ScoreSamplingOptions.getNumIterations()", "testcase": false, "constructor": false}, {"identifier": "setNumIterations", "parameters": "(int numIterations)", "modifiers": "public", "return": "void", "signature": "void setNumIterations(int numIterations)", "full_signature": "public void setNumIterations(int numIterations)", "class_method_signature": "ScoreSamplingOptions.setNumIterations(int numIterations)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "ScoreSamplingOptions.clone()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ScoreSamplingOptions.toString()", "testcase": false, "constructor": false}], "file": "phenol-core/src/main/java/org/monarchinitiative/phenol/ontology/scoredist/ScoreSamplingOptions.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return \"ScoreSamplingOptions [numThreads=\"\n        + numThreads\n        + \", minObjectId=\"\n        + minObjectId\n        + \", maxObjectId=\"\n        + maxObjectId\n        + \", minNumTerms=\"\n        + minNumTerms\n        + \", maxNumTerms=\"\n        + maxNumTerms\n        + \", numIterations=\"\n        + numIterations\n        + \", seed=\"\n        + seed\n        + \"]\";\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ScoreSamplingOptions.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 119170338, "url": "https://github.com/monarch-initiative/phenol", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 5832, "license": "licensed"}}