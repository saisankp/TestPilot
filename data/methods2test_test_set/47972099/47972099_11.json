{"test_class": {"identifier": "JobCheckpointsHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/handlers/JobCheckpointsHandlerTest.java"}, "test_case": {"identifier": "testNoCoordinator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testNoCoordinator() throws Exception {\n\t\tJobCheckpointsHandler handler = new JobCheckpointsHandler(\n\t\t\t\tmock(ExecutionGraphHolder.class));\n\n\t\tExecutionGraph graph = mock(ExecutionGraph.class);\n\n\t\t// No coordinator\n\t\twhen(graph.getCheckpointStatsTracker()).thenReturn(null);\n\n\t\tString response = handler.handleRequest(graph, Collections.<String, String>emptyMap());\n\n\t\t// Expecting empty response\n\t\tassertEquals(\"{}\", response);\n\t}", "signature": "void testNoCoordinator()", "full_signature": "@Test public void testNoCoordinator()", "class_method_signature": "JobCheckpointsHandlerTest.testNoCoordinator()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getCheckpointStatsTracker", "handleRequest", "emptyMap", "assertEquals"]}, "focal_class": {"identifier": "JobCheckpointsHandler", "superclass": "extends AbstractExecutionGraphRequestHandler", "interfaces": "", "fields": [], "methods": [{"identifier": "JobCheckpointsHandler", "parameters": "(ExecutionGraphHolder executionGraphHolder)", "modifiers": "public", "return": "", "signature": " JobCheckpointsHandler(ExecutionGraphHolder executionGraphHolder)", "full_signature": "public  JobCheckpointsHandler(ExecutionGraphHolder executionGraphHolder)", "class_method_signature": "JobCheckpointsHandler.JobCheckpointsHandler(ExecutionGraphHolder executionGraphHolder)", "testcase": false, "constructor": true}, {"identifier": "handleRequest", "parameters": "(ExecutionGraph graph, Map<String, String> params)", "modifiers": "@Override public", "return": "String", "signature": "String handleRequest(ExecutionGraph graph, Map<String, String> params)", "full_signature": "@Override public String handleRequest(ExecutionGraph graph, Map<String, String> params)", "class_method_signature": "JobCheckpointsHandler.handleRequest(ExecutionGraph graph, Map<String, String> params)", "testcase": false, "constructor": false}], "file": "flink-runtime-web/src/main/java/org/apache/flink/runtime/webmonitor/handlers/JobCheckpointsHandler.java"}, "focal_method": {"identifier": "handleRequest", "parameters": "(ExecutionGraph graph, Map<String, String> params)", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String handleRequest(ExecutionGraph graph, Map<String, String> params) throws Exception {\n\t\tStringWriter writer = new StringWriter();\n\t\tJsonGenerator gen = JsonFactory.jacksonFactory.createGenerator(writer);\n\n\t\tCheckpointStatsTracker tracker = graph.getCheckpointStatsTracker();\n\n\t\tgen.writeStartObject();\n\n\t\tif (tracker != null) {\n\t\t\tOption<JobCheckpointStats> stats = tracker.getJobStats();\n\n\t\t\tif (stats.isDefined()) {\n\t\t\t\t// Total number of checkpoints\n\t\t\t\tgen.writeNumberField(\"count\", stats.get().getCount());\n\n\t\t\t\t// Duration\n\t\t\t\tgen.writeFieldName(\"duration\");\n\t\t\t\tgen.writeStartObject();\n\t\t\t\tgen.writeNumberField(\"min\", stats.get().getMinDuration());\n\t\t\t\tgen.writeNumberField(\"max\", stats.get().getMaxDuration());\n\t\t\t\tgen.writeNumberField(\"avg\", stats.get().getAverageDuration());\n\t\t\t\tgen.writeEndObject();\n\n\t\t\t\t// State size\n\t\t\t\tgen.writeFieldName(\"size\");\n\t\t\t\tgen.writeStartObject();\n\t\t\t\tgen.writeNumberField(\"min\", stats.get().getMinStateSize());\n\t\t\t\tgen.writeNumberField(\"max\", stats.get().getMaxStateSize());\n\t\t\t\tgen.writeNumberField(\"avg\", stats.get().getAverageStateSize());\n\t\t\t\tgen.writeEndObject();\n\n\t\t\t\t// Recent history\n\t\t\t\tgen.writeArrayFieldStart(\"history\");\n\t\t\t\tfor (CheckpointStats checkpoint : stats.get().getRecentHistory()) {\n\t\t\t\t\tgen.writeStartObject();\n\t\t\t\t\tgen.writeNumberField(\"id\", checkpoint.getCheckpointId());\n\t\t\t\t\tgen.writeNumberField(\"timestamp\", checkpoint.getTriggerTimestamp());\n\t\t\t\t\tgen.writeNumberField(\"duration\", checkpoint.getDuration());\n\t\t\t\t\tgen.writeNumberField(\"size\", checkpoint.getStateSize());\n\t\t\t\t\tgen.writeEndObject();\n\t\t\t\t}\n\t\t\t\tgen.writeEndArray();\n\t\t\t}\n\t\t}\n\n\t\tgen.writeEndObject();\n\t\tgen.close();\n\n\t\treturn writer.toString();\n\t}", "signature": "String handleRequest(ExecutionGraph graph, Map<String, String> params)", "full_signature": "@Override public String handleRequest(ExecutionGraph graph, Map<String, String> params)", "class_method_signature": "JobCheckpointsHandler.handleRequest(ExecutionGraph graph, Map<String, String> params)", "testcase": false, "constructor": false, "invocations": ["createGenerator", "getCheckpointStatsTracker", "writeStartObject", "getJobStats", "isDefined", "writeNumberField", "getCount", "get", "writeFieldName", "writeStartObject", "writeNumberField", "getMinDuration", "get", "writeNumberField", "getMaxDuration", "get", "writeNumberField", "getAverageDuration", "get", "writeEndObject", "writeFieldName", "writeStartObject", "writeNumberField", "getMinStateSize", "get", "writeNumberField", "getMaxStateSize", "get", "writeNumberField", "getAverageStateSize", "get", "writeEndObject", "writeArrayFieldStart", "getRecentHistory", "get", "writeStartObject", "writeNumberField", "getCheckpointId", "writeNumberField", "getTriggerTimestamp", "writeNumberField", "getDuration", "writeNumberField", "getStateSize", "writeEndObject", "writeEndArray", "writeEndObject", "close", "toString"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}