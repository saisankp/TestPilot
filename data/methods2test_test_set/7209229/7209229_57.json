{"test_class": {"identifier": "TestRange", "superclass": "", "interfaces": "", "fields": [], "file": "databus-core/databus-core-impl/src/test/java/com/linkedin/databus/core/util/TestRange.java"}, "test_case": {"identifier": "testRangeContainsReversed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRangeContainsReversed()\n    {\n      Range r = new Range(100, 1);\n      AssertJUnit.assertFalse(r.contains(-1));\n      AssertJUnit.assertTrue(r.contains(0));\n      AssertJUnit.assertFalse(r.contains(1));\n      AssertJUnit.assertFalse(r.contains(5));\n      AssertJUnit.assertTrue(r.contains(105));\n      AssertJUnit.assertTrue(r.contains(100));\n    }", "signature": "void testRangeContainsReversed()", "full_signature": "@Test public void testRangeContainsReversed()", "class_method_signature": "TestRange.testRangeContainsReversed()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "contains", "assertTrue", "contains", "assertFalse", "contains", "assertFalse", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "Range", "superclass": "", "interfaces": "implements Comparable<Range>", "fields": [{"original_string": "public long start;", "modifier": "public", "type": "long", "declarator": "start", "var_name": "start"}, {"original_string": "public long end;", "modifier": "public", "type": "long", "declarator": "end", "var_name": "end"}], "methods": [{"identifier": "Range", "parameters": "(long startOffset, long endOffset)", "modifiers": "public", "return": "", "signature": " Range(long startOffset, long endOffset)", "full_signature": "public  Range(long startOffset, long endOffset)", "class_method_signature": "Range.Range(long startOffset, long endOffset)", "testcase": false, "constructor": true}, {"identifier": "Range", "parameters": "()", "modifiers": "public", "return": "", "signature": " Range()", "full_signature": "public  Range()", "class_method_signature": "Range.Range()", "testcase": false, "constructor": true}, {"identifier": "contains", "parameters": "(long someOffset)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(long someOffset)", "full_signature": "public boolean contains(long someOffset)", "class_method_signature": "Range.contains(long someOffset)", "testcase": false, "constructor": false}, {"identifier": "containsReaderPosition", "parameters": "(long writerStart,\n\t\t\t\t\t\t\t\t\t\t\t\tlong writerEnd,\n\t\t\t\t\t\t\t\t\t\t\t\tlong readerPosition,\n\t\t\t\t\t\t\t\t\t\t\t\tBufferPositionParser parser)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsReaderPosition(long writerStart,\n\t\t\t\t\t\t\t\t\t\t\t\tlong writerEnd,\n\t\t\t\t\t\t\t\t\t\t\t\tlong readerPosition,\n\t\t\t\t\t\t\t\t\t\t\t\tBufferPositionParser parser)", "full_signature": "public static boolean containsReaderPosition(long writerStart,\n\t\t\t\t\t\t\t\t\t\t\t\tlong writerEnd,\n\t\t\t\t\t\t\t\t\t\t\t\tlong readerPosition,\n\t\t\t\t\t\t\t\t\t\t\t\tBufferPositionParser parser)", "class_method_signature": "Range.containsReaderPosition(long writerStart,\n\t\t\t\t\t\t\t\t\t\t\t\tlong writerEnd,\n\t\t\t\t\t\t\t\t\t\t\t\tlong readerPosition,\n\t\t\t\t\t\t\t\t\t\t\t\tBufferPositionParser parser)", "testcase": false, "constructor": false}, {"identifier": "containsIgnoreGenId", "parameters": "(long start,\n\t\t\t                                  long end,\n\t\t\t                                  long offset,\n\t\t\t                                  BufferPositionParser parser)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsIgnoreGenId(long start,\n\t\t\t                                  long end,\n\t\t\t                                  long offset,\n\t\t\t                                  BufferPositionParser parser)", "full_signature": "public static boolean containsIgnoreGenId(long start,\n\t\t\t                                  long end,\n\t\t\t                                  long offset,\n\t\t\t                                  BufferPositionParser parser)", "class_method_signature": "Range.containsIgnoreGenId(long start,\n\t\t\t                                  long end,\n\t\t\t                                  long offset,\n\t\t\t                                  BufferPositionParser parser)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(long start, long end, long someOffset)", "modifiers": "public static", "return": "boolean", "signature": "boolean contains(long start, long end, long someOffset)", "full_signature": "public static boolean contains(long start, long end, long someOffset)", "class_method_signature": "Range.contains(long start, long end, long someOffset)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(Range intersectedRange)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(Range intersectedRange)", "full_signature": "public boolean intersects(Range intersectedRange)", "class_method_signature": "Range.intersects(Range intersectedRange)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Range comparedRange)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Range comparedRange)", "full_signature": "@Override public int compareTo(Range comparedRange)", "class_method_signature": "Range.compareTo(Range comparedRange)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(BufferPositionParser parser)", "modifiers": "public", "return": "String", "signature": "String toString(BufferPositionParser parser)", "full_signature": "public String toString(BufferPositionParser parser)", "class_method_signature": "Range.toString(BufferPositionParser parser)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Range.toString()", "testcase": false, "constructor": false}, {"identifier": "getStart", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getStart()", "full_signature": "public long getStart()", "class_method_signature": "Range.getStart()", "testcase": false, "constructor": false}, {"identifier": "setStart", "parameters": "(long start)", "modifiers": "public", "return": "void", "signature": "void setStart(long start)", "full_signature": "public void setStart(long start)", "class_method_signature": "Range.setStart(long start)", "testcase": false, "constructor": false}, {"identifier": "getEnd", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getEnd()", "full_signature": "public long getEnd()", "class_method_signature": "Range.getEnd()", "testcase": false, "constructor": false}, {"identifier": "setEnd", "parameters": "(long end)", "modifiers": "public", "return": "void", "signature": "void setEnd(long end)", "full_signature": "public void setEnd(long end)", "class_method_signature": "Range.setEnd(long end)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Range.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Range.hashCode()", "testcase": false, "constructor": false}], "file": "databus-core/databus-core-impl/src/main/java/com/linkedin/databus/core/util/Range.java"}, "focal_method": {"identifier": "contains", "parameters": "(long someOffset)", "modifiers": "public", "return": "boolean", "body": "public boolean contains(long someOffset)\n\t{\n\t\treturn contains(start, end, someOffset);\n\t}", "signature": "boolean contains(long someOffset)", "full_signature": "public boolean contains(long someOffset)", "class_method_signature": "Range.contains(long someOffset)", "testcase": false, "constructor": false, "invocations": ["contains"]}, "repository": {"repo_id": 7209229, "url": "https://github.com/linkedin/databus", "language": "Java", "is_fork": false, "fork_count": 653, "stargazer_count": 2899, "size": 51191, "license": "licensed"}}