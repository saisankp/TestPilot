{"test_class": {"identifier": "GeometricDoubleBondEncoderFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "tool/hash/src/test/java/org/openscience/cdk/hash/stereo/GeometricDoubleBondEncoderFactoryTest.java"}, "test_case": {"identifier": "testMoveToBack", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMoveToBack() throws Exception {\n        assertThat(moveToBack(new int[]{0, 1, 2}, 0), is(new int[]{1, 2, 0}));\n        assertThat(moveToBack(new int[]{0, 1, 2}, 1), is(new int[]{0, 2, 1}));\n        assertThat(moveToBack(new int[]{0, 1, 2}, 2), is(new int[]{0, 1, 2}));\n        assertThat(moveToBack(new int[]{0, 1, 2, 4, 5, 6}, 2), is(new int[]{0, 1, 4, 5, 6, 2}));\n    }", "signature": "void testMoveToBack()", "full_signature": "@Test public void testMoveToBack()", "class_method_signature": "GeometricDoubleBondEncoderFactoryTest.testMoveToBack()", "testcase": true, "constructor": false, "invocations": ["assertThat", "moveToBack", "is", "assertThat", "moveToBack", "is", "assertThat", "moveToBack", "is", "assertThat", "moveToBack", "is"]}, "focal_class": {"identifier": "GeometricDoubleBondEncoderFactory", "superclass": "", "interfaces": "implements StereoEncoderFactory", "fields": [], "methods": [{"identifier": "create", "parameters": "(IAtomContainer container, int[][] graph)", "modifiers": "@Override public", "return": "StereoEncoder", "signature": "StereoEncoder create(IAtomContainer container, int[][] graph)", "full_signature": "@Override public StereoEncoder create(IAtomContainer container, int[][] graph)", "class_method_signature": "GeometricDoubleBondEncoderFactory.create(IAtomContainer container, int[][] graph)", "testcase": false, "constructor": false}, {"identifier": "newEncoder", "parameters": "(IAtomContainer container, IAtom left, IAtom leftParent, IAtom right,\n            IAtom rightParent, int[][] graph)", "modifiers": "static", "return": "StereoEncoder", "signature": "StereoEncoder newEncoder(IAtomContainer container, IAtom left, IAtom leftParent, IAtom right,\n            IAtom rightParent, int[][] graph)", "full_signature": "static StereoEncoder newEncoder(IAtomContainer container, IAtom left, IAtom leftParent, IAtom right,\n            IAtom rightParent, int[][] graph)", "class_method_signature": "GeometricDoubleBondEncoderFactory.newEncoder(IAtomContainer container, IAtom left, IAtom leftParent, IAtom right,\n            IAtom rightParent, int[][] graph)", "testcase": false, "constructor": false}, {"identifier": "geometric", "parameters": "(IAtomContainer mol, int l, int r, int l1, int l2, int r1, int r2)", "modifiers": "static", "return": "GeometricParity", "signature": "GeometricParity geometric(IAtomContainer mol, int l, int r, int l1, int l2, int r1, int r2)", "full_signature": "static GeometricParity geometric(IAtomContainer mol, int l, int r, int l1, int l2, int r1, int r2)", "class_method_signature": "GeometricDoubleBondEncoderFactory.geometric(IAtomContainer mol, int l, int r, int l1, int l2, int r1, int r2)", "testcase": false, "constructor": false}, {"identifier": "permutation", "parameters": "(int[] neighbors)", "modifiers": "static", "return": "PermutationParity", "signature": "PermutationParity permutation(int[] neighbors)", "full_signature": "static PermutationParity permutation(int[] neighbors)", "class_method_signature": "GeometricDoubleBondEncoderFactory.permutation(int[] neighbors)", "testcase": false, "constructor": false}, {"identifier": "moveToBack", "parameters": "(int[] neighbors, int v)", "modifiers": "static", "return": "int[]", "signature": "int[] moveToBack(int[] neighbors, int v)", "full_signature": "static int[] moveToBack(int[] neighbors, int v)", "class_method_signature": "GeometricDoubleBondEncoderFactory.moveToBack(int[] neighbors, int v)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(IAtom atom, List<IBond> bonds)", "modifiers": "static", "return": "boolean", "signature": "boolean accept(IAtom atom, List<IBond> bonds)", "full_signature": "static boolean accept(IAtom atom, List<IBond> bonds)", "class_method_signature": "GeometricDoubleBondEncoderFactory.accept(IAtom atom, List<IBond> bonds)", "testcase": false, "constructor": false}], "file": "tool/hash/src/main/java/org/openscience/cdk/hash/stereo/GeometricDoubleBondEncoderFactory.java"}, "focal_method": {"identifier": "moveToBack", "parameters": "(int[] neighbors, int v)", "modifiers": "static", "return": "int[]", "body": "static int[] moveToBack(int[] neighbors, int v) {\n        int j = 0;\n        for (int i = 0; i < neighbors.length; i++) {\n            if (neighbors[i] != v) {\n                neighbors[j++] = neighbors[i];\n            }\n        }\n        neighbors[neighbors.length - 1] = v;\n        return neighbors;\n    }", "signature": "int[] moveToBack(int[] neighbors, int v)", "full_signature": "static int[] moveToBack(int[] neighbors, int v)", "class_method_signature": "GeometricDoubleBondEncoderFactory.moveToBack(int[] neighbors, int v)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}