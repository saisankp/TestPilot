{"test_class": {"identifier": "TestUInt64", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final UInt64 left = new UInt64(42);", "modifier": "private final", "type": "UInt64", "declarator": "left = new UInt64(42)", "var_name": "left"}, {"original_string": "private final UInt64 right = new UInt64(123);", "modifier": "private final", "type": "UInt64", "declarator": "right = new UInt64(123)", "var_name": "right"}], "file": "suite/spdz2k/src/test/java/dk/alexandra/fresco/suite/spdz2k/datatypes/TestUInt64.java"}, "test_case": {"identifier": "toBigInteger", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void toBigInteger() {\n    Assert.assertEquals(BigInteger.valueOf(42), left.toBigInteger());\n  }", "signature": "void toBigInteger()", "full_signature": "@Test public void toBigInteger()", "class_method_signature": "TestUInt64.toBigInteger()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "valueOf", "toBigInteger"]}, "focal_class": {"identifier": "UInt64", "superclass": "", "interfaces": "implements UInt<UInt64>", "fields": [{"original_string": "private final long value;", "modifier": "private final", "type": "long", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "UInt64", "parameters": "(long value)", "modifiers": "public", "return": "", "signature": " UInt64(long value)", "full_signature": "public  UInt64(long value)", "class_method_signature": "UInt64.UInt64(long value)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(UInt64 other)", "modifiers": "@Override public", "return": "UInt64", "signature": "UInt64 add(UInt64 other)", "full_signature": "@Override public UInt64 add(UInt64 other)", "class_method_signature": "UInt64.add(UInt64 other)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(UInt64 other)", "modifiers": "@Override public", "return": "UInt64", "signature": "UInt64 multiply(UInt64 other)", "full_signature": "@Override public UInt64 multiply(UInt64 other)", "class_method_signature": "UInt64.multiply(UInt64 other)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(UInt64 other)", "modifiers": "@Override public", "return": "UInt64", "signature": "UInt64 subtract(UInt64 other)", "full_signature": "@Override public UInt64 subtract(UInt64 other)", "class_method_signature": "UInt64.subtract(UInt64 other)", "testcase": false, "constructor": false}, {"identifier": "negateUInt", "parameters": "()", "modifiers": "@Override public", "return": "UInt64", "signature": "UInt64 negateUInt()", "full_signature": "@Override public UInt64 negateUInt()", "class_method_signature": "UInt64.negateUInt()", "testcase": false, "constructor": false}, {"identifier": "isZero", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isZero()", "full_signature": "@Override public boolean isZero()", "class_method_signature": "UInt64.isZero()", "testcase": false, "constructor": false}, {"identifier": "getBitLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getBitLength()", "full_signature": "@Override public int getBitLength()", "class_method_signature": "UInt64.getBitLength()", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] toByteArray()", "full_signature": "@Override public byte[] toByteArray()", "class_method_signature": "UInt64.toByteArray()", "testcase": false, "constructor": false}, {"identifier": "toBigInteger", "parameters": "()", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger toBigInteger()", "full_signature": "@Override public BigInteger toBigInteger()", "class_method_signature": "UInt64.toBigInteger()", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long toLong()", "full_signature": "@Override public long toLong()", "class_method_signature": "UInt64.toLong()", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int toInt()", "full_signature": "@Override public int toInt()", "class_method_signature": "UInt64.toInt()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UInt64.toString()", "testcase": false, "constructor": false}], "file": "suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/UInt64.java"}, "focal_method": {"identifier": "toBigInteger", "parameters": "()", "modifiers": "@Override public", "return": "BigInteger", "body": "@Override\n  public BigInteger toBigInteger() {\n    return new BigInteger(1, toByteArray());\n  }", "signature": "BigInteger toBigInteger()", "full_signature": "@Override public BigInteger toBigInteger()", "class_method_signature": "UInt64.toBigInteger()", "testcase": false, "constructor": false, "invocations": ["toByteArray"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}