{"test_class": {"identifier": "NiciraNvpResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "NiciraNvpApi nvpApi = mock(NiciraNvpApi.class);", "modifier": "", "type": "NiciraNvpApi", "declarator": "nvpApi = mock(NiciraNvpApi.class)", "var_name": "nvpApi"}, {"original_string": "NiciraNvpResource resource;", "modifier": "", "type": "NiciraNvpResource", "declarator": "resource", "var_name": "resource"}, {"original_string": "Map<String, Object> parameters;", "modifier": "", "type": "Map<String, Object>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private CommandRetryUtility retryUtility;", "modifier": "private", "type": "CommandRetryUtility", "declarator": "retryUtility", "var_name": "retryUtility"}], "file": "plugins/network-elements/nicira-nvp/src/test/java/com/cloud/network/resource/NiciraNvpResourceTest.java"}, "test_case": {"identifier": "resourceConfigureFailure", "parameters": "()", "modifiers": "@Test(expected = ConfigurationException.class) public", "return": "void", "body": "@Test(expected = ConfigurationException.class)\n    public void resourceConfigureFailure() throws ConfigurationException {\n        resource.configure(\"NiciraNvpResource\", Collections.<String, Object> emptyMap());\n    }", "signature": "void resourceConfigureFailure()", "full_signature": "@Test(expected = ConfigurationException.class) public void resourceConfigureFailure()", "class_method_signature": "NiciraNvpResourceTest.resourceConfigureFailure()", "testcase": true, "constructor": false, "invocations": ["configure", "emptyMap"]}, "focal_class": {"identifier": "NiciraNvpResource", "superclass": "", "interfaces": "implements ServerResource", "fields": [{"original_string": "private static final Logger s_logger = LoggerFactory.getLogger(NiciraNvpResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(NiciraNvpResource.class)", "var_name": "s_logger"}, {"original_string": "public static final int NAME_MAX_LEN = 40;", "modifier": "public static final", "type": "int", "declarator": "NAME_MAX_LEN = 40", "var_name": "NAME_MAX_LEN"}, {"original_string": "public static final int NUM_RETRIES = 2;", "modifier": "public static final", "type": "int", "declarator": "NUM_RETRIES = 2", "var_name": "NUM_RETRIES"}, {"original_string": "private static final int MAX_REDIRECTS = 5;", "modifier": "private static final", "type": "int", "declarator": "MAX_REDIRECTS = 5", "var_name": "MAX_REDIRECTS"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String guid;", "modifier": "private", "type": "String", "declarator": "guid", "var_name": "guid"}, {"original_string": "private String zoneId;", "modifier": "private", "type": "String", "declarator": "zoneId", "var_name": "zoneId"}, {"original_string": "private NiciraNvpApi niciraNvpApi;", "modifier": "private", "type": "NiciraNvpApi", "declarator": "niciraNvpApi", "var_name": "niciraNvpApi"}, {"original_string": "private NiciraNvpUtilities niciraNvpUtilities;", "modifier": "private", "type": "NiciraNvpUtilities", "declarator": "niciraNvpUtilities", "var_name": "niciraNvpUtilities"}, {"original_string": "private CommandRetryUtility retryUtility;", "modifier": "private", "type": "CommandRetryUtility", "declarator": "retryUtility", "var_name": "retryUtility"}], "methods": [{"identifier": "createNiciraNvpApi", "parameters": "(final String host, final String username, final String password)", "modifiers": "protected", "return": "NiciraNvpApi", "signature": "NiciraNvpApi createNiciraNvpApi(final String host, final String username, final String password)", "full_signature": "protected NiciraNvpApi createNiciraNvpApi(final String host, final String username, final String password)", "class_method_signature": "NiciraNvpResource.createNiciraNvpApi(final String host, final String username, final String password)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(final String ignoredName, final Map<String, Object> params)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean configure(final String ignoredName, final Map<String, Object> params)", "full_signature": "@Override public boolean configure(final String ignoredName, final Map<String, Object> params)", "class_method_signature": "NiciraNvpResource.configure(final String ignoredName, final Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "getNiciraNvpApi", "parameters": "()", "modifiers": "public", "return": "NiciraNvpApi", "signature": "NiciraNvpApi getNiciraNvpApi()", "full_signature": "public NiciraNvpApi getNiciraNvpApi()", "class_method_signature": "NiciraNvpResource.getNiciraNvpApi()", "testcase": false, "constructor": false}, {"identifier": "getNiciraNvpUtilities", "parameters": "()", "modifiers": "public", "return": "NiciraNvpUtilities", "signature": "NiciraNvpUtilities getNiciraNvpUtilities()", "full_signature": "public NiciraNvpUtilities getNiciraNvpUtilities()", "class_method_signature": "NiciraNvpResource.getNiciraNvpUtilities()", "testcase": false, "constructor": false}, {"identifier": "getRetryUtility", "parameters": "()", "modifiers": "public", "return": "CommandRetryUtility", "signature": "CommandRetryUtility getRetryUtility()", "full_signature": "public CommandRetryUtility getRetryUtility()", "class_method_signature": "NiciraNvpResource.getRetryUtility()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean start()", "full_signature": "@Override public boolean start()", "class_method_signature": "NiciraNvpResource.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean stop()", "full_signature": "@Override public boolean stop()", "class_method_signature": "NiciraNvpResource.stop()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "NiciraNvpResource.getName()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "Type", "signature": "Type getType()", "full_signature": "@Override public Type getType()", "class_method_signature": "NiciraNvpResource.getType()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "StartupCommand[]", "signature": "StartupCommand[] initialize()", "full_signature": "@Override public StartupCommand[] initialize()", "class_method_signature": "NiciraNvpResource.initialize()", "testcase": false, "constructor": false}, {"identifier": "getCurrentStatus", "parameters": "(final long id)", "modifiers": "@Override public", "return": "PingCommand", "signature": "PingCommand getCurrentStatus(final long id)", "full_signature": "@Override public PingCommand getCurrentStatus(final long id)", "class_method_signature": "NiciraNvpResource.getCurrentStatus(final long id)", "testcase": false, "constructor": false}, {"identifier": "getApiProviderMajorityVersion", "parameters": "(ControlClusterStatus ccs)", "modifiers": "private", "return": "void", "signature": "void getApiProviderMajorityVersion(ControlClusterStatus ccs)", "full_signature": "private void getApiProviderMajorityVersion(ControlClusterStatus ccs)", "class_method_signature": "NiciraNvpResource.getApiProviderMajorityVersion(ControlClusterStatus ccs)", "testcase": false, "constructor": false}, {"identifier": "searchApiProvider", "parameters": "(ClusterRoleConfig[] configuredRoles)", "modifiers": "private", "return": "String", "signature": "String searchApiProvider(ClusterRoleConfig[] configuredRoles)", "full_signature": "private String searchApiProvider(ClusterRoleConfig[] configuredRoles)", "class_method_signature": "NiciraNvpResource.searchApiProvider(ClusterRoleConfig[] configuredRoles)", "testcase": false, "constructor": false}, {"identifier": "executeRequest", "parameters": "(final Command cmd)", "modifiers": "@Override public", "return": "Answer", "signature": "Answer executeRequest(final Command cmd)", "full_signature": "@Override public Answer executeRequest(final Command cmd)", "class_method_signature": "NiciraNvpResource.executeRequest(final Command cmd)", "testcase": false, "constructor": false}, {"identifier": "disconnected", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void disconnected()", "full_signature": "@Override public void disconnected()", "class_method_signature": "NiciraNvpResource.disconnected()", "testcase": false, "constructor": false}, {"identifier": "getAgentControl", "parameters": "()", "modifiers": "@Override public", "return": "IAgentControl", "signature": "IAgentControl getAgentControl()", "full_signature": "@Override public IAgentControl getAgentControl()", "class_method_signature": "NiciraNvpResource.getAgentControl()", "testcase": false, "constructor": false}, {"identifier": "setAgentControl", "parameters": "(final IAgentControl agentControl)", "modifiers": "@Override public", "return": "void", "signature": "void setAgentControl(final IAgentControl agentControl)", "full_signature": "@Override public void setAgentControl(final IAgentControl agentControl)", "class_method_signature": "NiciraNvpResource.setAgentControl(final IAgentControl agentControl)", "testcase": false, "constructor": false}, {"identifier": "natRuleToString", "parameters": "(final NatRule rule)", "modifiers": "public", "return": "String", "signature": "String natRuleToString(final NatRule rule)", "full_signature": "public String natRuleToString(final NatRule rule)", "class_method_signature": "NiciraNvpResource.natRuleToString(final NatRule rule)", "testcase": false, "constructor": false}, {"identifier": "truncate", "parameters": "(final String string, final int length)", "modifiers": "public", "return": "String", "signature": "String truncate(final String string, final int length)", "full_signature": "public String truncate(final String string, final int length)", "class_method_signature": "NiciraNvpResource.truncate(final String string, final int length)", "testcase": false, "constructor": false}, {"identifier": "generateStaticNatRulePair", "parameters": "(final String insideIp, final String outsideIp)", "modifiers": "public", "return": "NatRule[]", "signature": "NatRule[] generateStaticNatRulePair(final String insideIp, final String outsideIp)", "full_signature": "public NatRule[] generateStaticNatRulePair(final String insideIp, final String outsideIp)", "class_method_signature": "NiciraNvpResource.generateStaticNatRulePair(final String insideIp, final String outsideIp)", "testcase": false, "constructor": false}, {"identifier": "generatePortForwardingRulePair", "parameters": "(final String insideIp, final int[] insidePorts, final String outsideIp, final int[] outsidePorts,\n                    final String protocol)", "modifiers": "public", "return": "NatRule[]", "signature": "NatRule[] generatePortForwardingRulePair(final String insideIp, final int[] insidePorts, final String outsideIp, final int[] outsidePorts,\n                    final String protocol)", "full_signature": "public NatRule[] generatePortForwardingRulePair(final String insideIp, final int[] insidePorts, final String outsideIp, final int[] outsidePorts,\n                    final String protocol)", "class_method_signature": "NiciraNvpResource.generatePortForwardingRulePair(final String insideIp, final int[] insidePorts, final String outsideIp, final int[] outsidePorts,\n                    final String protocol)", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(final String name)", "modifiers": "@Override public", "return": "void", "signature": "void setName(final String name)", "full_signature": "@Override public void setName(final String name)", "class_method_signature": "NiciraNvpResource.setName(final String name)", "testcase": false, "constructor": false}, {"identifier": "setConfigParams", "parameters": "(final Map<String, Object> params)", "modifiers": "@Override public", "return": "void", "signature": "void setConfigParams(final Map<String, Object> params)", "full_signature": "@Override public void setConfigParams(final Map<String, Object> params)", "class_method_signature": "NiciraNvpResource.setConfigParams(final Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "getConfigParams", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> getConfigParams()", "full_signature": "@Override public Map<String, Object> getConfigParams()", "class_method_signature": "NiciraNvpResource.getConfigParams()", "testcase": false, "constructor": false}, {"identifier": "getRunLevel", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getRunLevel()", "full_signature": "@Override public int getRunLevel()", "class_method_signature": "NiciraNvpResource.getRunLevel()", "testcase": false, "constructor": false}, {"identifier": "setRunLevel", "parameters": "(final int level)", "modifiers": "@Override public", "return": "void", "signature": "void setRunLevel(final int level)", "full_signature": "@Override public void setRunLevel(final int level)", "class_method_signature": "NiciraNvpResource.setRunLevel(final int level)", "testcase": false, "constructor": false}], "file": "plugins/network-elements/nicira-nvp/src/main/java/com/cloud/network/resource/NiciraNvpResource.java"}, "focal_method": {"identifier": "configure", "parameters": "(final String ignoredName, final Map<String, Object> params)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean configure(final String ignoredName, final Map<String, Object> params) throws ConfigurationException {\n\n        name = (String) params.get(\"name\");\n        if (name == null) {\n            throw new ConfigurationException(\"Unable to find name\");\n        }\n\n        guid = (String) params.get(\"guid\");\n        if (guid == null) {\n            throw new ConfigurationException(\"Unable to find the guid\");\n        }\n\n        zoneId = (String) params.get(\"zoneId\");\n        if (zoneId == null) {\n            throw new ConfigurationException(\"Unable to find zone\");\n        }\n\n        final String ip = (String) params.get(\"ip\");\n        if (ip == null) {\n            throw new ConfigurationException(\"Unable to find IP\");\n        }\n\n        final String adminuser = (String) params.get(\"adminuser\");\n        if (adminuser == null) {\n            throw new ConfigurationException(\"Unable to find admin username\");\n        }\n\n        final String adminpass = (String) params.get(\"adminpass\");\n        if (adminpass == null) {\n            throw new ConfigurationException(\"Unable to find admin password\");\n        }\n\n        niciraNvpUtilities = NiciraNvpUtilities.getInstance();\n        retryUtility = CommandRetryUtility.getInstance();\n        retryUtility.setServerResource(this);\n\n        try {\n            niciraNvpApi = createNiciraNvpApi(ip, adminuser, adminpass);\n        } catch (final CloudstackRESTException e) {\n            throw new ConfigurationException(\"Could not create a Nicira Nvp API client: \" + e.getMessage());\n        }\n\n        return true;\n    }", "signature": "boolean configure(final String ignoredName, final Map<String, Object> params)", "full_signature": "@Override public boolean configure(final String ignoredName, final Map<String, Object> params)", "class_method_signature": "NiciraNvpResource.configure(final String ignoredName, final Map<String, Object> params)", "testcase": false, "constructor": false, "invocations": ["get", "get", "get", "get", "get", "get", "getInstance", "getInstance", "setServerResource", "createNiciraNvpApi", "getMessage"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}