{"test_class": {"identifier": "FlowableScalarXMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "rxjava/src/test/java/io/reactivex/internal/operators/flowable/FlowableScalarXMapTest.java"}, "test_case": {"identifier": "scalarMapToEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void scalarMapToEmpty() {\n        FlowableScalarXMap.scalarXMap(1, new Function<Integer, Publisher<Integer>>() {\n            @Override\n            public Publisher<Integer> apply(Integer v) throws Exception {\n                return Flowable.empty();\n            }\n        })\n        .test()\n        .assertResult();\n    }", "signature": "void scalarMapToEmpty()", "full_signature": "@Test public void scalarMapToEmpty()", "class_method_signature": "FlowableScalarXMapTest.scalarMapToEmpty()", "testcase": true, "constructor": false, "invocations": ["assertResult", "test", "scalarXMap", "empty"]}, "focal_class": {"identifier": "FlowableScalarXMap", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "FlowableScalarXMap", "parameters": "()", "modifiers": "private", "return": "", "signature": " FlowableScalarXMap()", "full_signature": "private  FlowableScalarXMap()", "class_method_signature": "FlowableScalarXMap.FlowableScalarXMap()", "testcase": false, "constructor": true}, {"identifier": "tryScalarXMapSubscribe", "parameters": "(Publisher<T> source,\n            Subscriber<? super R> subscriber,\n            Function<? super T, ? extends Publisher<? extends R>> mapper)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "boolean", "signature": "boolean tryScalarXMapSubscribe(Publisher<T> source,\n            Subscriber<? super R> subscriber,\n            Function<? super T, ? extends Publisher<? extends R>> mapper)", "full_signature": "@SuppressWarnings(\"unchecked\") public static boolean tryScalarXMapSubscribe(Publisher<T> source,\n            Subscriber<? super R> subscriber,\n            Function<? super T, ? extends Publisher<? extends R>> mapper)", "class_method_signature": "FlowableScalarXMap.tryScalarXMapSubscribe(Publisher<T> source,\n            Subscriber<? super R> subscriber,\n            Function<? super T, ? extends Publisher<? extends R>> mapper)", "testcase": false, "constructor": false}, {"identifier": "scalarXMap", "parameters": "(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper)", "modifiers": "public static", "return": "Flowable<U>", "signature": "Flowable<U> scalarXMap(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper)", "full_signature": "public static Flowable<U> scalarXMap(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper)", "class_method_signature": "FlowableScalarXMap.scalarXMap(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper)", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/internal/operators/flowable/FlowableScalarXMap.java"}, "focal_method": {"identifier": "scalarXMap", "parameters": "(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper)", "modifiers": "public static", "return": "Flowable<U>", "body": "public static <T, U> Flowable<U> scalarXMap(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper) {\n        return RxJavaPlugins.onAssembly(new ScalarXMapFlowable<T, U>(value, mapper));\n    }", "signature": "Flowable<U> scalarXMap(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper)", "full_signature": "public static Flowable<U> scalarXMap(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper)", "class_method_signature": "FlowableScalarXMap.scalarXMap(final T value, final Function<? super T, ? extends Publisher<? extends U>> mapper)", "testcase": false, "constructor": false, "invocations": ["onAssembly"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}