{"test_class": {"identifier": "MiscUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "Plan/common/src/test/java/com/djrapitops/plan/utilities/MiscUtilsTest.java"}, "test_case": {"identifier": "getNameShouldReturnNameWithPermission", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getNameShouldReturnNameWithPermission() {\n        String[] args = new String[]{\"Rsl1122\", \"Test\"};\n        Sender sender = mockAPlayerSender(\"TestName\", true);\n\n        String expResult = \"Rsl1122\";\n        String result = MiscUtils.getPlayerName(args, sender);\n\n        assertEquals(expResult, result);\n    }", "signature": "void getNameShouldReturnNameWithPermission()", "full_signature": "@Test void getNameShouldReturnNameWithPermission()", "class_method_signature": "MiscUtilsTest.getNameShouldReturnNameWithPermission()", "testcase": true, "constructor": false, "invocations": ["mockAPlayerSender", "getPlayerName", "assertEquals"]}, "focal_class": {"identifier": "MiscUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MiscUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MiscUtils()", "full_signature": "private  MiscUtils()", "class_method_signature": "MiscUtils.MiscUtils()", "testcase": false, "constructor": true}, {"identifier": "getPlayerName", "parameters": "(String[] args, Sender sender)", "modifiers": "public static", "return": "String", "signature": "String getPlayerName(String[] args, Sender sender)", "full_signature": "public static String getPlayerName(String[] args, Sender sender)", "class_method_signature": "MiscUtils.getPlayerName(String[] args, Sender sender)", "testcase": false, "constructor": false}, {"identifier": "getPlayerName", "parameters": "(String[] args, Sender sender, Permissions perm)", "modifiers": "public static", "return": "String", "signature": "String getPlayerName(String[] args, Sender sender, Permissions perm)", "full_signature": "public static String getPlayerName(String[] args, Sender sender, Permissions perm)", "class_method_signature": "MiscUtils.getPlayerName(String[] args, Sender sender, Permissions perm)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(AutoCloseable... close)", "modifiers": "public static", "return": "void", "signature": "void close(AutoCloseable... close)", "full_signature": "public static void close(AutoCloseable... close)", "class_method_signature": "MiscUtils.close(AutoCloseable... close)", "testcase": false, "constructor": false}, {"identifier": "now", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long now()", "full_signature": "public static long now()", "class_method_signature": "MiscUtils.now()", "testcase": false, "constructor": false}, {"identifier": "dayAgo", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long dayAgo()", "full_signature": "public static long dayAgo()", "class_method_signature": "MiscUtils.dayAgo()", "testcase": false, "constructor": false}, {"identifier": "weekAgo", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long weekAgo()", "full_signature": "public static long weekAgo()", "class_method_signature": "MiscUtils.weekAgo()", "testcase": false, "constructor": false}, {"identifier": "monthAgo", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long monthAgo()", "full_signature": "public static long monthAgo()", "class_method_signature": "MiscUtils.monthAgo()", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/utilities/MiscUtils.java"}, "focal_method": {"identifier": "getPlayerName", "parameters": "(String[] args, Sender sender)", "modifiers": "public static", "return": "String", "body": "public static String getPlayerName(String[] args, Sender sender) {\n        return getPlayerName(args, sender, Permissions.INSPECT_OTHER);\n    }", "signature": "String getPlayerName(String[] args, Sender sender)", "full_signature": "public static String getPlayerName(String[] args, Sender sender)", "class_method_signature": "MiscUtils.getPlayerName(String[] args, Sender sender)", "testcase": false, "constructor": false, "invocations": ["getPlayerName"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}