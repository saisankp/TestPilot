{"test_class": {"identifier": "QueryManagerFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/query/QueryManagerFacadeTest.java"}, "test_case": {"identifier": "testGetSupportedQueryLanguages", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSupportedQueryLanguages() throws Exception {\n        QueryManager delegate = mock(QueryManager.class);\n        QueryManagerFacade<Session> facade = getFacade(delegate);\n        final String[] value = new String[0];\n        when(delegate.getSupportedQueryLanguages()).thenReturn(value);\n        assertSame(\"same value\", value, facade.getSupportedQueryLanguages());\n    }", "signature": "void testGetSupportedQueryLanguages()", "full_signature": "@Test public void testGetSupportedQueryLanguages()", "class_method_signature": "QueryManagerFacadeTest.testGetSupportedQueryLanguages()", "testcase": true, "constructor": false, "invocations": ["mock", "getFacade", "thenReturn", "when", "getSupportedQueryLanguages", "assertSame", "getSupportedQueryLanguages"]}, "focal_class": {"identifier": "QueryManagerFacade", "superclass": "", "interfaces": "implements QueryManager", "fields": [{"original_string": "private final @NotNull QueryManager delegate;", "modifier": "private final @NotNull", "type": "QueryManager", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final @NotNull SessionFacade<S> session;", "modifier": "private final @NotNull", "type": "SessionFacade<S>", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "QueryManagerFacade", "parameters": "(final @NotNull QueryManager delegate, final @NotNull SessionFacade<S> session)", "modifiers": "public", "return": "", "signature": " QueryManagerFacade(final @NotNull QueryManager delegate, final @NotNull SessionFacade<S> session)", "full_signature": "public  QueryManagerFacade(final @NotNull QueryManager delegate, final @NotNull SessionFacade<S> session)", "class_method_signature": "QueryManagerFacade.QueryManagerFacade(final @NotNull QueryManager delegate, final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "createQuery", "parameters": "(String statement, String language)", "modifiers": "@Override public", "return": "Query", "signature": "Query createQuery(String statement, String language)", "full_signature": "@Override public Query createQuery(String statement, String language)", "class_method_signature": "QueryManagerFacade.createQuery(String statement, String language)", "testcase": false, "constructor": false}, {"identifier": "getQOMFactory", "parameters": "()", "modifiers": "@Override public", "return": "QueryObjectModelFactory", "signature": "QueryObjectModelFactory getQOMFactory()", "full_signature": "@Override public QueryObjectModelFactory getQOMFactory()", "class_method_signature": "QueryManagerFacade.getQOMFactory()", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "(Node node)", "modifiers": "@Override public", "return": "Query", "signature": "Query getQuery(Node node)", "full_signature": "@Override public Query getQuery(Node node)", "class_method_signature": "QueryManagerFacade.getQuery(Node node)", "testcase": false, "constructor": false}, {"identifier": "getSupportedQueryLanguages", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getSupportedQueryLanguages()", "full_signature": "@Override public String[] getSupportedQueryLanguages()", "class_method_signature": "QueryManagerFacade.getSupportedQueryLanguages()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/query/QueryManagerFacade.java"}, "focal_method": {"identifier": "getSupportedQueryLanguages", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "body": "@Override\n    public String[] getSupportedQueryLanguages() throws RepositoryException {\n        return delegate.getSupportedQueryLanguages();\n    }", "signature": "String[] getSupportedQueryLanguages()", "full_signature": "@Override public String[] getSupportedQueryLanguages()", "class_method_signature": "QueryManagerFacade.getSupportedQueryLanguages()", "testcase": false, "constructor": false, "invocations": ["getSupportedQueryLanguages"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}