{"test_class": {"identifier": "VersionControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private VersionTitleProvider titleProvider;", "modifier": "@Mock\n    private", "type": "VersionTitleProvider", "declarator": "titleProvider", "var_name": "titleProvider"}, {"original_string": "@InjectMocks\n    private VersionController underTest;", "modifier": "@InjectMocks\n    private", "type": "VersionController", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-message-search/modules/wilma-message-search-webapp/src/test/java/com/epam/wilma/message/search/web/controller/VersionControllerTest.java"}, "test_case": {"identifier": "testGetVersionShouldReturnVersionResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetVersionShouldReturnVersionResponse() {\n        //GIVEN\n        given(titleProvider.getVersionTitle()).willReturn(\"version\");\n        //WHEN\n        ResponseEntity<String> result = underTest.getVersion();\n        //THEN\n        assertEquals(result.getStatusCode(), HttpStatus.CREATED);\n        assertEquals(\"{\\\"messageSearchVersion\\\":\\\"version\\\"}\", result.getBody());\n        assertEquals(MediaType.APPLICATION_JSON, result.getHeaders().getContentType());\n    }", "signature": "void testGetVersionShouldReturnVersionResponse()", "full_signature": "@Test public void testGetVersionShouldReturnVersionResponse()", "class_method_signature": "VersionControllerTest.testGetVersionShouldReturnVersionResponse()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getVersionTitle", "getVersion", "assertEquals", "getStatusCode", "assertEquals", "getBody", "assertEquals", "getContentType", "getHeaders"]}, "focal_class": {"identifier": "VersionController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private VersionTitleProvider titleProvider;", "modifier": "@Autowired\n    private", "type": "VersionTitleProvider", "declarator": "titleProvider", "var_name": "titleProvider"}], "methods": [{"identifier": "getVersion", "parameters": "()", "modifiers": "@ResponseBody @RequestMapping(value = \"/version\", method = RequestMethod.GET) public", "return": "ResponseEntity<String>", "signature": "ResponseEntity<String> getVersion()", "full_signature": "@ResponseBody @RequestMapping(value = \"/version\", method = RequestMethod.GET) public ResponseEntity<String> getVersion()", "class_method_signature": "VersionController.getVersion()", "testcase": false, "constructor": false}], "file": "wilma-message-search/modules/wilma-message-search-webapp/src/main/java/com/epam/wilma/message/search/web/controller/VersionController.java"}, "focal_method": {"identifier": "getVersion", "parameters": "()", "modifiers": "@ResponseBody @RequestMapping(value = \"/version\", method = RequestMethod.GET) public", "return": "ResponseEntity<String>", "body": "@ResponseBody\n    @RequestMapping(value = \"/version\", method = RequestMethod.GET)\n    public ResponseEntity<String> getVersion() {\n        String messageSearchVersion = titleProvider.getVersionTitle();\n        String jsonData = \"{\\\"messageSearchVersion\\\":\\\"\" + messageSearchVersion + \"\\\"}\";\n        HttpHeaders responseHeaders = new HttpHeaders();\n        responseHeaders.setContentType(MediaType.APPLICATION_JSON);\n        return new ResponseEntity<String>(jsonData, responseHeaders, HttpStatus.CREATED);\n    }", "signature": "ResponseEntity<String> getVersion()", "full_signature": "@ResponseBody @RequestMapping(value = \"/version\", method = RequestMethod.GET) public ResponseEntity<String> getVersion()", "class_method_signature": "VersionController.getVersion()", "testcase": false, "constructor": false, "invocations": ["getVersionTitle", "setContentType"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}