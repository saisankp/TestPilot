{"test_class": {"identifier": "ImmutablePayloadTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonPointer KNOWN_PATH = JsonPointer.empty();", "modifier": "private static final", "type": "JsonPointer", "declarator": "KNOWN_PATH = JsonPointer.empty()", "var_name": "KNOWN_PATH"}, {"original_string": "private static final JsonValue KNOWN_VALUE = JsonValue.of(\"foo\");", "modifier": "private static final", "type": "JsonValue", "declarator": "KNOWN_VALUE = JsonValue.of(\"foo\")", "var_name": "KNOWN_VALUE"}, {"original_string": "private static final HttpStatusCode KNOWN_STATUS = HttpStatusCode.OK;", "modifier": "private static final", "type": "HttpStatusCode", "declarator": "KNOWN_STATUS = HttpStatusCode.OK", "var_name": "KNOWN_STATUS"}, {"original_string": "private static final long KNOWN_REVISION = 1337;", "modifier": "private static final", "type": "long", "declarator": "KNOWN_REVISION = 1337", "var_name": "KNOWN_REVISION"}, {"original_string": "private static final Instant KNOWN_TIMESTAMP = Instant.now();", "modifier": "private static final", "type": "Instant", "declarator": "KNOWN_TIMESTAMP = Instant.now()", "var_name": "KNOWN_TIMESTAMP"}, {"original_string": "private static final JsonFieldSelector KNOWN_FIELDS = JsonFieldSelector.newInstance(\"/foo\");", "modifier": "private static final", "type": "JsonFieldSelector", "declarator": "KNOWN_FIELDS = JsonFieldSelector.newInstance(\"/foo\")", "var_name": "KNOWN_FIELDS"}, {"original_string": "private static JsonObject knownExtra;", "modifier": "private static", "type": "JsonObject", "declarator": "knownExtra", "var_name": "knownExtra"}, {"original_string": "private static JsonObject knownJsonRepresentation;", "modifier": "private static", "type": "JsonObject", "declarator": "knownJsonRepresentation", "var_name": "knownJsonRepresentation"}, {"original_string": "private static ImmutablePayload knownPayload;", "modifier": "private static", "type": "ImmutablePayload", "declarator": "knownPayload", "var_name": "knownPayload"}], "file": "protocol-adapter/src/test/java/org/eclipse/ditto/protocoladapter/ImmutablePayloadTest.java"}, "test_case": {"identifier": "toJsonWorksAsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonWorksAsExpected() {\n        assertThat(knownPayload.toJson()).isEqualTo(knownJsonRepresentation);\n    }", "signature": "void toJsonWorksAsExpected()", "full_signature": "@Test public void toJsonWorksAsExpected()", "class_method_signature": "ImmutablePayloadTest.toJsonWorksAsExpected()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toJson"]}, "focal_class": {"identifier": "ImmutablePayload", "superclass": "", "interfaces": "implements Payload", "fields": [{"original_string": "private final MessagePath path;", "modifier": "private final", "type": "MessagePath", "declarator": "path", "var_name": "path"}, {"original_string": "@Nullable private final JsonValue value;", "modifier": "@Nullable private final", "type": "JsonValue", "declarator": "value", "var_name": "value"}, {"original_string": "@Nullable private final JsonObject extra;", "modifier": "@Nullable private final", "type": "JsonObject", "declarator": "extra", "var_name": "extra"}, {"original_string": "@Nullable private final HttpStatusCode status;", "modifier": "@Nullable private final", "type": "HttpStatusCode", "declarator": "status", "var_name": "status"}, {"original_string": "@Nullable private final Long revision;", "modifier": "@Nullable private final", "type": "Long", "declarator": "revision", "var_name": "revision"}, {"original_string": "@Nullable private final Instant timestamp;", "modifier": "@Nullable private final", "type": "Instant", "declarator": "timestamp", "var_name": "timestamp"}, {"original_string": "@Nullable private final Metadata metadata;", "modifier": "@Nullable private final", "type": "Metadata", "declarator": "metadata", "var_name": "metadata"}, {"original_string": "@Nullable private final JsonFieldSelector fields;", "modifier": "@Nullable private final", "type": "JsonFieldSelector", "declarator": "fields", "var_name": "fields"}], "methods": [{"identifier": "ImmutablePayload", "parameters": "(final ImmutablePayloadBuilder builder)", "modifiers": "private", "return": "", "signature": " ImmutablePayload(final ImmutablePayloadBuilder builder)", "full_signature": "private  ImmutablePayload(final ImmutablePayloadBuilder builder)", "class_method_signature": "ImmutablePayload.ImmutablePayload(final ImmutablePayloadBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "getBuilder", "parameters": "(@Nullable final JsonPointer path)", "modifiers": "public static", "return": "ImmutablePayloadBuilder", "signature": "ImmutablePayloadBuilder getBuilder(@Nullable final JsonPointer path)", "full_signature": "public static ImmutablePayloadBuilder getBuilder(@Nullable final JsonPointer path)", "class_method_signature": "ImmutablePayload.getBuilder(@Nullable final JsonPointer path)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "ImmutablePayload", "signature": "ImmutablePayload fromJson(final JsonObject jsonObject)", "full_signature": "public static ImmutablePayload fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutablePayload.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "@Override public", "return": "MessagePath", "signature": "MessagePath getPath()", "full_signature": "@Override public MessagePath getPath()", "class_method_signature": "ImmutablePayload.getPath()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Optional<JsonValue>", "signature": "Optional<JsonValue> getValue()", "full_signature": "@Override public Optional<JsonValue> getValue()", "class_method_signature": "ImmutablePayload.getValue()", "testcase": false, "constructor": false}, {"identifier": "getExtra", "parameters": "()", "modifiers": "@Override public", "return": "Optional<JsonObject>", "signature": "Optional<JsonObject> getExtra()", "full_signature": "@Override public Optional<JsonObject> getExtra()", "class_method_signature": "ImmutablePayload.getExtra()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "@Override public", "return": "Optional<HttpStatusCode>", "signature": "Optional<HttpStatusCode> getStatus()", "full_signature": "@Override public Optional<HttpStatusCode> getStatus()", "class_method_signature": "ImmutablePayload.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getRevision", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Long>", "signature": "Optional<Long> getRevision()", "full_signature": "@Override public Optional<Long> getRevision()", "class_method_signature": "ImmutablePayload.getRevision()", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Instant>", "signature": "Optional<Instant> getTimestamp()", "full_signature": "@Override public Optional<Instant> getTimestamp()", "class_method_signature": "ImmutablePayload.getTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Metadata>", "signature": "Optional<Metadata> getMetadata()", "full_signature": "@Override public Optional<Metadata> getMetadata()", "class_method_signature": "ImmutablePayload.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "()", "modifiers": "@Override public", "return": "Optional<JsonFieldSelector>", "signature": "Optional<JsonFieldSelector> getFields()", "full_signature": "@Override public Optional<JsonFieldSelector> getFields()", "class_method_signature": "ImmutablePayload.getFields()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "()", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson()", "full_signature": "@Override public JsonObject toJson()", "class_method_signature": "ImmutablePayload.toJson()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "ImmutablePayload.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutablePayload.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutablePayload.toString()", "testcase": false, "constructor": false}], "file": "protocol-adapter/src/main/java/org/eclipse/ditto/protocoladapter/ImmutablePayload.java"}, "focal_method": {"identifier": "toJson", "parameters": "()", "modifiers": "@Override public", "return": "JsonObject", "body": "@Override\n    public JsonObject toJson() {\n        final JsonObjectBuilder jsonObjectBuilder = JsonObject.newBuilder();\n        jsonObjectBuilder.set(JsonFields.PATH, path.toString());\n\n        if (null != value) {\n            jsonObjectBuilder.set(JsonFields.VALUE, value);\n        }\n        if (null != extra) {\n            jsonObjectBuilder.set(JsonFields.EXTRA, extra);\n        }\n        if (null != status) {\n            jsonObjectBuilder.set(JsonFields.STATUS, status.toInt());\n        }\n        if (null != revision) {\n            jsonObjectBuilder.set(JsonFields.REVISION, revision);\n        }\n        if (null != timestamp) {\n            jsonObjectBuilder.set(JsonFields.TIMESTAMP, timestamp.toString());\n        }\n        if (null != metadata) {\n            jsonObjectBuilder.set(JsonFields.METADATA, metadata.toJson());\n        }\n        if (null != fields) {\n            jsonObjectBuilder.set(JsonFields.FIELDS, fields.toString());\n        }\n\n        return jsonObjectBuilder.build();\n    }", "signature": "JsonObject toJson()", "full_signature": "@Override public JsonObject toJson()", "class_method_signature": "ImmutablePayload.toJson()", "testcase": false, "constructor": false, "invocations": ["newBuilder", "set", "toString", "set", "set", "set", "toInt", "set", "set", "toString", "set", "toJson", "set", "toString", "build"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}