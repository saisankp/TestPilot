{"test_class": {"identifier": "ResponseImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "everrest-core/src/test/java/org/everrest/core/impl/ResponseImplTest.java"}, "test_case": {"identifier": "getsLinks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getsLinks() throws Exception {\n        MultivaluedMap<String, Object> headers = new MultivaluedHashMap<>();\n        Link link = new LinkBuilderImpl().uri(\"http://localhost:8080/x/y/z\").rel(\"xxx\").build();\n        headers.put(LINK, newArrayList(link));\n        ResponseImpl response = new ResponseImpl(200, \"foo\", null, headers);\n\n        assertEquals(newHashSet(link), response.getLinks());\n    }", "signature": "void getsLinks()", "full_signature": "@Test public void getsLinks()", "class_method_signature": "ResponseImplTest.getsLinks()", "testcase": true, "constructor": false, "invocations": ["build", "rel", "uri", "put", "newArrayList", "assertEquals", "newHashSet", "getLinks"]}, "focal_class": {"identifier": "ResponseImpl", "superclass": "extends Response", "interfaces": "", "fields": [{"original_string": "private final int status;", "modifier": "private final", "type": "int", "declarator": "status", "var_name": "status"}, {"original_string": "private final Object entity;", "modifier": "private final", "type": "Object", "declarator": "entity", "var_name": "entity"}, {"original_string": "private Annotation[] entityAnnotations;", "modifier": "private", "type": "Annotation[]", "declarator": "entityAnnotations", "var_name": "entityAnnotations"}, {"original_string": "private final MultivaluedMap<String, Object> headers;", "modifier": "private final", "type": "MultivaluedMap<String, Object>", "declarator": "headers", "var_name": "headers"}, {"original_string": "private boolean closed;", "modifier": "private", "type": "boolean", "declarator": "closed", "var_name": "closed"}], "methods": [{"identifier": "ResponseImpl", "parameters": "(int status, Object entity, Annotation[] entityAnnotations, MultivaluedMap<String, Object> headers)", "modifiers": "protected", "return": "", "signature": " ResponseImpl(int status, Object entity, Annotation[] entityAnnotations, MultivaluedMap<String, Object> headers)", "full_signature": "protected  ResponseImpl(int status, Object entity, Annotation[] entityAnnotations, MultivaluedMap<String, Object> headers)", "class_method_signature": "ResponseImpl.ResponseImpl(int status, Object entity, Annotation[] entityAnnotations, MultivaluedMap<String, Object> headers)", "testcase": false, "constructor": true}, {"identifier": "getEntity", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object getEntity()", "full_signature": "@Override public Object getEntity()", "class_method_signature": "ResponseImpl.getEntity()", "testcase": false, "constructor": false}, {"identifier": "getEntityAnnotations", "parameters": "()", "modifiers": "public", "return": "Annotation[]", "signature": "Annotation[] getEntityAnnotations()", "full_signature": "public Annotation[] getEntityAnnotations()", "class_method_signature": "ResponseImpl.getEntityAnnotations()", "testcase": false, "constructor": false}, {"identifier": "readEntity", "parameters": "(Class<T> entityType)", "modifiers": "@Override public", "return": "T", "signature": "T readEntity(Class<T> entityType)", "full_signature": "@Override public T readEntity(Class<T> entityType)", "class_method_signature": "ResponseImpl.readEntity(Class<T> entityType)", "testcase": false, "constructor": false}, {"identifier": "readEntity", "parameters": "(GenericType<T> entityType)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T readEntity(GenericType<T> entityType)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T readEntity(GenericType<T> entityType)", "class_method_signature": "ResponseImpl.readEntity(GenericType<T> entityType)", "testcase": false, "constructor": false}, {"identifier": "readEntity", "parameters": "(Class<T> entityType, Annotation[] annotations)", "modifiers": "@Override public", "return": "T", "signature": "T readEntity(Class<T> entityType, Annotation[] annotations)", "full_signature": "@Override public T readEntity(Class<T> entityType, Annotation[] annotations)", "class_method_signature": "ResponseImpl.readEntity(Class<T> entityType, Annotation[] annotations)", "testcase": false, "constructor": false}, {"identifier": "readEntity", "parameters": "(GenericType<T> entityType, Annotation[] annotations)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T readEntity(GenericType<T> entityType, Annotation[] annotations)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T readEntity(GenericType<T> entityType, Annotation[] annotations)", "class_method_signature": "ResponseImpl.readEntity(GenericType<T> entityType, Annotation[] annotations)", "testcase": false, "constructor": false}, {"identifier": "doReadEntity", "parameters": "(Class<T> type, Type genericType, Annotation[] annotations)", "modifiers": "private", "return": "T", "signature": "T doReadEntity(Class<T> type, Type genericType, Annotation[] annotations)", "full_signature": "private T doReadEntity(Class<T> type, Type genericType, Annotation[] annotations)", "class_method_signature": "ResponseImpl.doReadEntity(Class<T> type, Type genericType, Annotation[] annotations)", "testcase": false, "constructor": false}, {"identifier": "hasEntity", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasEntity()", "full_signature": "@Override public boolean hasEntity()", "class_method_signature": "ResponseImpl.hasEntity()", "testcase": false, "constructor": false}, {"identifier": "bufferEntity", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean bufferEntity()", "full_signature": "@Override public boolean bufferEntity()", "class_method_signature": "ResponseImpl.bufferEntity()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ResponseImpl.close()", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "public boolean isClosed()", "class_method_signature": "ResponseImpl.isClosed()", "testcase": false, "constructor": false}, {"identifier": "getMediaType", "parameters": "()", "modifiers": "@Override public", "return": "MediaType", "signature": "MediaType getMediaType()", "full_signature": "@Override public MediaType getMediaType()", "class_method_signature": "ResponseImpl.getMediaType()", "testcase": false, "constructor": false}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "@Override public", "return": "Locale", "signature": "Locale getLanguage()", "full_signature": "@Override public Locale getLanguage()", "class_method_signature": "ResponseImpl.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLength()", "full_signature": "@Override public int getLength()", "class_method_signature": "ResponseImpl.getLength()", "testcase": false, "constructor": false}, {"identifier": "getAllowedMethods", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAllowedMethods()", "full_signature": "@Override public Set<String> getAllowedMethods()", "class_method_signature": "ResponseImpl.getAllowedMethods()", "testcase": false, "constructor": false}, {"identifier": "getCookies", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, NewCookie>", "signature": "Map<String, NewCookie> getCookies()", "full_signature": "@Override public Map<String, NewCookie> getCookies()", "class_method_signature": "ResponseImpl.getCookies()", "testcase": false, "constructor": false}, {"identifier": "getEntityTag", "parameters": "()", "modifiers": "@Override public", "return": "EntityTag", "signature": "EntityTag getEntityTag()", "full_signature": "@Override public EntityTag getEntityTag()", "class_method_signature": "ResponseImpl.getEntityTag()", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getDate()", "full_signature": "@Override public Date getDate()", "class_method_signature": "ResponseImpl.getDate()", "testcase": false, "constructor": false}, {"identifier": "getLastModified", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getLastModified()", "full_signature": "@Override public Date getLastModified()", "class_method_signature": "ResponseImpl.getLastModified()", "testcase": false, "constructor": false}, {"identifier": "getDateHeader", "parameters": "(String name)", "modifiers": "private", "return": "Date", "signature": "Date getDateHeader(String name)", "full_signature": "private Date getDateHeader(String name)", "class_method_signature": "ResponseImpl.getDateHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getLocation()", "full_signature": "@Override public URI getLocation()", "class_method_signature": "ResponseImpl.getLocation()", "testcase": false, "constructor": false}, {"identifier": "getLinks", "parameters": "()", "modifiers": "@Override public", "return": "Set<Link>", "signature": "Set<Link> getLinks()", "full_signature": "@Override public Set<Link> getLinks()", "class_method_signature": "ResponseImpl.getLinks()", "testcase": false, "constructor": false}, {"identifier": "hasLink", "parameters": "(String relation)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasLink(String relation)", "full_signature": "@Override public boolean hasLink(String relation)", "class_method_signature": "ResponseImpl.hasLink(String relation)", "testcase": false, "constructor": false}, {"identifier": "getLink", "parameters": "(String relation)", "modifiers": "@Override public", "return": "Link", "signature": "Link getLink(String relation)", "full_signature": "@Override public Link getLink(String relation)", "class_method_signature": "ResponseImpl.getLink(String relation)", "testcase": false, "constructor": false}, {"identifier": "getLinkBuilder", "parameters": "(String relation)", "modifiers": "@Override public", "return": "Link.Builder", "signature": "Link.Builder getLinkBuilder(String relation)", "full_signature": "@Override public Link.Builder getLinkBuilder(String relation)", "class_method_signature": "ResponseImpl.getLinkBuilder(String relation)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "@Override public", "return": "MultivaluedMap<String, Object>", "signature": "MultivaluedMap<String, Object> getMetadata()", "full_signature": "@Override public MultivaluedMap<String, Object> getMetadata()", "class_method_signature": "ResponseImpl.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "getStringHeaders", "parameters": "()", "modifiers": "@Override public", "return": "MultivaluedMap<String, String>", "signature": "MultivaluedMap<String, String> getStringHeaders()", "full_signature": "@Override public MultivaluedMap<String, String> getStringHeaders()", "class_method_signature": "ResponseImpl.getStringHeaders()", "testcase": false, "constructor": false}, {"identifier": "getHeaderString", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getHeaderString(String name)", "full_signature": "@Override public String getHeaderString(String name)", "class_method_signature": "ResponseImpl.getHeaderString(String name)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getStatus()", "full_signature": "@Override public int getStatus()", "class_method_signature": "ResponseImpl.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getStatusInfo", "parameters": "()", "modifiers": "@Override public", "return": "StatusType", "signature": "StatusType getStatusInfo()", "full_signature": "@Override public StatusType getStatusInfo()", "class_method_signature": "ResponseImpl.getStatusInfo()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ResponseImpl.toString()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/ResponseImpl.java"}, "focal_method": {"identifier": "getLinks", "parameters": "()", "modifiers": "@Override public", "return": "Set<Link>", "body": "@Override\n    public Set<Link> getLinks() {\n        List<Object> links = getMetadata().get(LINK);\n        if (links == null) {\n            return Collections.emptySet();\n        }\n        Set<Link> linkSet = new LinkedHashSet<>();\n        for (Object value : links) {\n            if (value instanceof Link) {\n                linkSet.add((Link)value);\n            } else {\n                linkSet.add(Link.valueOf(value instanceof String ? (String)value : getHeaderAsString(value)));\n            }\n        }\n        return linkSet;\n    }", "signature": "Set<Link> getLinks()", "full_signature": "@Override public Set<Link> getLinks()", "class_method_signature": "ResponseImpl.getLinks()", "testcase": false, "constructor": false, "invocations": ["get", "getMetadata", "emptySet", "add", "add", "valueOf", "getHeaderAsString"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}