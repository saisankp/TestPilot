{"test_class": {"identifier": "BehaviorProcessorTest", "superclass": "extends FlowableProcessorTest<Object>", "interfaces": "", "fields": [{"original_string": "private final Throwable testException = new Throwable();", "modifier": "private final", "type": "Throwable", "declarator": "testException = new Throwable()", "var_name": "testException"}], "file": "rxjava/src/test/java/io/reactivex/processors/BehaviorProcessorTest.java"}, "test_case": {"identifier": "addRemoveRace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addRemoveRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            final BehaviorProcessor<Object> p = BehaviorProcessor.create();\n\n            final TestSubscriber<Object> ts = p.test();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    p.test();\n                }\n            };\n\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    ts.cancel();\n                }\n            };\n\n            TestHelper.race(r1, r2);\n        }\n    }", "signature": "void addRemoveRace()", "full_signature": "@Test public void addRemoveRace()", "class_method_signature": "BehaviorProcessorTest.addRemoveRace()", "testcase": true, "constructor": false, "invocations": ["create", "test", "test", "cancel", "race"]}, "focal_class": {"identifier": "BehaviorProcessor", "superclass": "extends FlowableProcessor<T>", "interfaces": "", "fields": [{"original_string": "final AtomicReference<BehaviorSubscription<T>[]> subscribers;", "modifier": "final", "type": "AtomicReference<BehaviorSubscription<T>[]>", "declarator": "subscribers", "var_name": "subscribers"}, {"original_string": "static final Object[] EMPTY_ARRAY = new Object[0];", "modifier": "static final", "type": "Object[]", "declarator": "EMPTY_ARRAY = new Object[0]", "var_name": "EMPTY_ARRAY"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n    static final BehaviorSubscription[] EMPTY = new BehaviorSubscription[0];", "modifier": "@SuppressWarnings(\"rawtypes\")\n    static final", "type": "BehaviorSubscription[]", "declarator": "EMPTY = new BehaviorSubscription[0]", "var_name": "EMPTY"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n    static final BehaviorSubscription[] TERMINATED = new BehaviorSubscription[0];", "modifier": "@SuppressWarnings(\"rawtypes\")\n    static final", "type": "BehaviorSubscription[]", "declarator": "TERMINATED = new BehaviorSubscription[0]", "var_name": "TERMINATED"}, {"original_string": "final ReadWriteLock lock;", "modifier": "final", "type": "ReadWriteLock", "declarator": "lock", "var_name": "lock"}, {"original_string": "final Lock readLock;", "modifier": "final", "type": "Lock", "declarator": "readLock", "var_name": "readLock"}, {"original_string": "final Lock writeLock;", "modifier": "final", "type": "Lock", "declarator": "writeLock", "var_name": "writeLock"}, {"original_string": "final AtomicReference<Object> value;", "modifier": "final", "type": "AtomicReference<Object>", "declarator": "value", "var_name": "value"}, {"original_string": "final AtomicReference<Throwable> terminalEvent;", "modifier": "final", "type": "AtomicReference<Throwable>", "declarator": "terminalEvent", "var_name": "terminalEvent"}, {"original_string": "long index;", "modifier": "", "type": "long", "declarator": "index", "var_name": "index"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "@CheckReturnValue @NonNull public static", "return": "BehaviorProcessor<T>", "signature": "BehaviorProcessor<T> create()", "full_signature": "@CheckReturnValue @NonNull public static BehaviorProcessor<T> create()", "class_method_signature": "BehaviorProcessor.create()", "testcase": false, "constructor": false}, {"identifier": "createDefault", "parameters": "(T defaultValue)", "modifiers": "@CheckReturnValue @NonNull public static", "return": "BehaviorProcessor<T>", "signature": "BehaviorProcessor<T> createDefault(T defaultValue)", "full_signature": "@CheckReturnValue @NonNull public static BehaviorProcessor<T> createDefault(T defaultValue)", "class_method_signature": "BehaviorProcessor.createDefault(T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "BehaviorProcessor", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "", "signature": " BehaviorProcessor()", "full_signature": "@SuppressWarnings(\"unchecked\")  BehaviorProcessor()", "class_method_signature": "BehaviorProcessor.BehaviorProcessor()", "testcase": false, "constructor": true}, {"identifier": "BehaviorProcessor", "parameters": "(T defaultValue)", "modifiers": "", "return": "", "signature": " BehaviorProcessor(T defaultValue)", "full_signature": "  BehaviorProcessor(T defaultValue)", "class_method_signature": "BehaviorProcessor.BehaviorProcessor(T defaultValue)", "testcase": false, "constructor": true}, {"identifier": "subscribeActual", "parameters": "(Subscriber<? super T> s)", "modifiers": "@Override protected", "return": "void", "signature": "void subscribeActual(Subscriber<? super T> s)", "full_signature": "@Override protected void subscribeActual(Subscriber<? super T> s)", "class_method_signature": "BehaviorProcessor.subscribeActual(Subscriber<? super T> s)", "testcase": false, "constructor": false}, {"identifier": "onSubscribe", "parameters": "(Subscription s)", "modifiers": "@Override public", "return": "void", "signature": "void onSubscribe(Subscription s)", "full_signature": "@Override public void onSubscribe(Subscription s)", "class_method_signature": "BehaviorProcessor.onSubscribe(Subscription s)", "testcase": false, "constructor": false}, {"identifier": "onNext", "parameters": "(T t)", "modifiers": "@Override public", "return": "void", "signature": "void onNext(T t)", "full_signature": "@Override public void onNext(T t)", "class_method_signature": "BehaviorProcessor.onNext(T t)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable t)", "full_signature": "@Override public void onError(Throwable t)", "class_method_signature": "BehaviorProcessor.onError(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "BehaviorProcessor.onComplete()", "testcase": false, "constructor": false}, {"identifier": "offer", "parameters": "(T t)", "modifiers": "@Experimental public", "return": "boolean", "signature": "boolean offer(T t)", "full_signature": "@Experimental public boolean offer(T t)", "class_method_signature": "BehaviorProcessor.offer(T t)", "testcase": false, "constructor": false}, {"identifier": "hasSubscribers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasSubscribers()", "full_signature": "@Override public boolean hasSubscribers()", "class_method_signature": "BehaviorProcessor.hasSubscribers()", "testcase": false, "constructor": false}, {"identifier": "subscriberCount", "parameters": "()", "modifiers": "", "return": "int", "signature": "int subscriberCount()", "full_signature": " int subscriberCount()", "class_method_signature": "BehaviorProcessor.subscriberCount()", "testcase": false, "constructor": false}, {"identifier": "getThrowable", "parameters": "()", "modifiers": "@Override @Nullable public", "return": "Throwable", "signature": "Throwable getThrowable()", "full_signature": "@Override @Nullable public Throwable getThrowable()", "class_method_signature": "BehaviorProcessor.getThrowable()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Nullable public", "return": "T", "signature": "T getValue()", "full_signature": "@Nullable public T getValue()", "class_method_signature": "BehaviorProcessor.getValue()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] getValues()", "full_signature": "public Object[] getValues()", "class_method_signature": "BehaviorProcessor.getValues()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "(T[] array)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T[]", "signature": "T[] getValues(T[] array)", "full_signature": "@SuppressWarnings(\"unchecked\") public T[] getValues(T[] array)", "class_method_signature": "BehaviorProcessor.getValues(T[] array)", "testcase": false, "constructor": false}, {"identifier": "hasComplete", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasComplete()", "full_signature": "@Override public boolean hasComplete()", "class_method_signature": "BehaviorProcessor.hasComplete()", "testcase": false, "constructor": false}, {"identifier": "hasThrowable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasThrowable()", "full_signature": "@Override public boolean hasThrowable()", "class_method_signature": "BehaviorProcessor.hasThrowable()", "testcase": false, "constructor": false}, {"identifier": "hasValue", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasValue()", "full_signature": "public boolean hasValue()", "class_method_signature": "BehaviorProcessor.hasValue()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(BehaviorSubscription<T> rs)", "modifiers": "", "return": "boolean", "signature": "boolean add(BehaviorSubscription<T> rs)", "full_signature": " boolean add(BehaviorSubscription<T> rs)", "class_method_signature": "BehaviorProcessor.add(BehaviorSubscription<T> rs)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(BehaviorSubscription<T> rs)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "void", "signature": "void remove(BehaviorSubscription<T> rs)", "full_signature": "@SuppressWarnings(\"unchecked\") void remove(BehaviorSubscription<T> rs)", "class_method_signature": "BehaviorProcessor.remove(BehaviorSubscription<T> rs)", "testcase": false, "constructor": false}, {"identifier": "terminate", "parameters": "(Object terminalValue)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "BehaviorSubscription<T>[]", "signature": "BehaviorSubscription<T>[] terminate(Object terminalValue)", "full_signature": "@SuppressWarnings(\"unchecked\") BehaviorSubscription<T>[] terminate(Object terminalValue)", "class_method_signature": "BehaviorProcessor.terminate(Object terminalValue)", "testcase": false, "constructor": false}, {"identifier": "setCurrent", "parameters": "(Object o)", "modifiers": "", "return": "void", "signature": "void setCurrent(Object o)", "full_signature": " void setCurrent(Object o)", "class_method_signature": "BehaviorProcessor.setCurrent(Object o)", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/processors/BehaviorProcessor.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "@CheckReturnValue @NonNull public static", "return": "BehaviorProcessor<T>", "body": "@CheckReturnValue\n    @NonNull\n    public static <T> BehaviorProcessor<T> create() {\n        return new BehaviorProcessor<T>();\n    }", "signature": "BehaviorProcessor<T> create()", "full_signature": "@CheckReturnValue @NonNull public static BehaviorProcessor<T> create()", "class_method_signature": "BehaviorProcessor.create()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}