{"test_class": {"identifier": "ClimFileFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "s3tbx-meris-sdr/src/test/java/org/esa/s3tbx/meris/aerosol/ClimFileFactoryTest.java"}, "test_case": {"identifier": "testCreateTemporalFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateTemporalFile() {\n        final DateFormat dateFormat = UTCTest.getDateTimeFormat();\n        final ClimFileFactory ff = new ClimFileFactory();\n        File f;\n        TemporalFile tf;\n\n        f = new File(\"CLIM_GADS_200310_200403_FUB.hdf\");\n        tf = ff.createTemporalFile(f);\n        assertNotNull(tf);\n        assertEquals(\"01.10.2003 00:00:00\", dateFormat.format(tf.getStartDate()));\n        assertEquals(\"31.03.2004 23:59:59\", dateFormat.format(tf.getEndDate()));\n\n        f = new File(\"CLIM_GADS_200304_200309_FUB.hdf\");\n        tf = ff.createTemporalFile(f);\n        assertNotNull(tf);\n        assertEquals(\"01.04.2003 00:00:00\", dateFormat.format(tf.getStartDate()));\n        assertEquals(\"30.09.2003 23:59:59\", dateFormat.format(tf.getEndDate()));\n    }", "signature": "void testCreateTemporalFile()", "full_signature": "@Test public void testCreateTemporalFile()", "class_method_signature": "ClimFileFactoryTest.testCreateTemporalFile()", "testcase": true, "constructor": false, "invocations": ["getDateTimeFormat", "createTemporalFile", "assertNotNull", "assertEquals", "format", "getStartDate", "assertEquals", "format", "getEndDate", "createTemporalFile", "assertNotNull", "assertEquals", "format", "getStartDate", "assertEquals", "format", "getEndDate"]}, "focal_class": {"identifier": "ClimFileFactory", "superclass": "", "interfaces": "implements TemporalFileFactory", "fields": [{"original_string": "private static final int TIME1_OFFSET = 10;", "modifier": "private static final", "type": "int", "declarator": "TIME1_OFFSET = 10", "var_name": "TIME1_OFFSET"}, {"original_string": "private static final int TIME2_OFFSET = 17;", "modifier": "private static final", "type": "int", "declarator": "TIME2_OFFSET = 17", "var_name": "TIME2_OFFSET"}, {"original_string": "private static final String FILENAME_PREFIX = \"CLIM_GADS_\";", "modifier": "private static final", "type": "String", "declarator": "FILENAME_PREFIX = \"CLIM_GADS_\"", "var_name": "FILENAME_PREFIX"}, {"original_string": "private static final String FILENAME_SUFFIX = \".hdf\";", "modifier": "private static final", "type": "String", "declarator": "FILENAME_SUFFIX = \".hdf\"", "var_name": "FILENAME_SUFFIX"}], "methods": [{"identifier": "createTemporalFile", "parameters": "(final File file)", "modifiers": "public", "return": "TemporalFile", "signature": "TemporalFile createTemporalFile(final File file)", "full_signature": "public TemporalFile createTemporalFile(final File file)", "class_method_signature": "ClimFileFactory.createTemporalFile(final File file)", "testcase": false, "constructor": false}, {"identifier": "computeTime", "parameters": "(final int year, final int month)", "modifiers": "private static", "return": "long", "signature": "long computeTime(final int year, final int month)", "full_signature": "private static long computeTime(final int year, final int month)", "class_method_signature": "ClimFileFactory.computeTime(final int year, final int month)", "testcase": false, "constructor": false}, {"identifier": "createUTCCalendar", "parameters": "()", "modifiers": "private static", "return": "Calendar", "signature": "Calendar createUTCCalendar()", "full_signature": "private static Calendar createUTCCalendar()", "class_method_signature": "ClimFileFactory.createUTCCalendar()", "testcase": false, "constructor": false}], "file": "s3tbx-meris-sdr/src/main/java/org/esa/s3tbx/meris/aerosol/ClimFileFactory.java"}, "focal_method": {"identifier": "createTemporalFile", "parameters": "(final File file)", "modifiers": "public", "return": "TemporalFile", "body": "public TemporalFile createTemporalFile(final File file) {\n        final String filename = file.getName();\n        if (filename.length() < 21) {\n            return null;\n        }\n        if (!filename.startsWith(FILENAME_PREFIX)) {\n            return null;\n        }\n        if (!filename.endsWith(FILENAME_SUFFIX)) {\n            return null;\n        }\n        int year1;\n        int month1;\n        int year2;\n        int month2;\n        try {\n            year1 = Integer.parseInt(filename.substring(TIME1_OFFSET, TIME1_OFFSET + 4));\n            month1 = Integer.parseInt(filename.substring(TIME1_OFFSET + 4, TIME1_OFFSET + 6));\n            year2 = Integer.parseInt(filename.substring(TIME2_OFFSET, TIME2_OFFSET + 4));\n            month2 = Integer.parseInt(filename.substring(TIME2_OFFSET + 4, TIME2_OFFSET + 6));\n        } catch (NumberFormatException e) {\n            return null;\n        }\n        final long startTime = computeTime(year1, month1);\n        final long endTime = computeTime(year2, month2 + 1) - 1;\n        return new TemporalFile(file, new Date(startTime), new Date(endTime));\n\n    }", "signature": "TemporalFile createTemporalFile(final File file)", "full_signature": "public TemporalFile createTemporalFile(final File file)", "class_method_signature": "ClimFileFactory.createTemporalFile(final File file)", "testcase": false, "constructor": false, "invocations": ["getName", "length", "startsWith", "endsWith", "parseInt", "substring", "parseInt", "substring", "parseInt", "substring", "parseInt", "substring", "computeTime", "computeTime"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}