{"test_class": {"identifier": "ClusterEvaluationUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/alibaba/alink/operator/common/evaluation/ClusterEvaluationUtilTest.java"}, "test_case": {"identifier": "getBasicClusterStatisticsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getBasicClusterStatisticsTest() {\n        Row[] rows = new Row[] {\n            Row.of(0),\n            Row.of(0),\n            Row.of(0),\n            Row.of(1),\n            Row.of(1)\n        };\n\n        Params params = ClusterEvaluationUtil.getBasicClusterStatistics(Arrays.asList(rows));\n        Assert.assertEquals(params.get(ClusterMetrics.COUNT).intValue(), 5);\n        Assert.assertEquals(params.get(ClusterMetrics.K).intValue(), 2);\n        Assert.assertArrayEquals(params.get(ClusterMetrics.CLUSTER_ARRAY), new String[]{\"0\", \"1\"});\n\n    }", "signature": "void getBasicClusterStatisticsTest()", "full_signature": "@Test public void getBasicClusterStatisticsTest()", "class_method_signature": "ClusterEvaluationUtilTest.getBasicClusterStatisticsTest()", "testcase": true, "constructor": false, "invocations": ["of", "of", "of", "of", "of", "getBasicClusterStatistics", "asList", "assertEquals", "intValue", "get", "assertEquals", "intValue", "get", "assertArrayEquals", "get"]}, "focal_class": {"identifier": "ClusterEvaluationUtil", "superclass": "", "interfaces": "implements AllWindowFunction<Row, Row, TimeWindow>", "fields": [{"original_string": "public static int COUNT = 0;", "modifier": "public static", "type": "int", "declarator": "COUNT = 0", "var_name": "COUNT"}, {"original_string": "public static int MEAN = 1;", "modifier": "public static", "type": "int", "declarator": "MEAN = 1", "var_name": "MEAN"}, {"original_string": "public static int SUM_2 = 2;", "modifier": "public static", "type": "int", "declarator": "SUM_2 = 2", "var_name": "SUM_2"}, {"original_string": "private ContinuousDistance distance;", "modifier": "private", "type": "ContinuousDistance", "declarator": "distance", "var_name": "distance"}], "methods": [{"identifier": "ClusterEvaluationUtil", "parameters": "(ContinuousDistance distance)", "modifiers": "public", "return": "", "signature": " ClusterEvaluationUtil(ContinuousDistance distance)", "full_signature": "public  ClusterEvaluationUtil(ContinuousDistance distance)", "class_method_signature": "ClusterEvaluationUtil.ClusterEvaluationUtil(ContinuousDistance distance)", "testcase": false, "constructor": true}, {"identifier": "extractParamsFromConfusionMatrix", "parameters": "(LongMatrix longMatrix)", "modifiers": "public static", "return": "Params", "signature": "Params extractParamsFromConfusionMatrix(LongMatrix longMatrix)", "full_signature": "public static Params extractParamsFromConfusionMatrix(LongMatrix longMatrix)", "class_method_signature": "ClusterEvaluationUtil.extractParamsFromConfusionMatrix(LongMatrix longMatrix)", "testcase": false, "constructor": false}, {"identifier": "combination", "parameters": "(long number)", "modifiers": "private static", "return": "long", "signature": "long combination(long number)", "full_signature": "private static long combination(long number)", "class_method_signature": "ClusterEvaluationUtil.combination(long number)", "testcase": false, "constructor": false}, {"identifier": "entropy", "parameters": "(long frequency, long total)", "modifiers": "private static", "return": "double", "signature": "double entropy(long frequency, long total)", "full_signature": "private static double entropy(long frequency, long total)", "class_method_signature": "ClusterEvaluationUtil.entropy(long frequency, long total)", "testcase": false, "constructor": false}, {"identifier": "calSilhouetteCoefficient", "parameters": "(Row row, ClusterMetricsSummary clusterMetricsSummary)", "modifiers": "public static", "return": "Tuple1<Double>", "signature": "Tuple1<Double> calSilhouetteCoefficient(Row row, ClusterMetricsSummary clusterMetricsSummary)", "full_signature": "public static Tuple1<Double> calSilhouetteCoefficient(Row row, ClusterMetricsSummary clusterMetricsSummary)", "class_method_signature": "ClusterEvaluationUtil.calSilhouetteCoefficient(Row row, ClusterMetricsSummary clusterMetricsSummary)", "testcase": false, "constructor": false}, {"identifier": "getBasicClusterStatistics", "parameters": "(Iterable<Row> rows)", "modifiers": "public static", "return": "Params", "signature": "Params getBasicClusterStatistics(Iterable<Row> rows)", "full_signature": "public static Params getBasicClusterStatistics(Iterable<Row> rows)", "class_method_signature": "ClusterEvaluationUtil.getBasicClusterStatistics(Iterable<Row> rows)", "testcase": false, "constructor": false}, {"identifier": "getClusterStatistics", "parameters": "(Iterable<Row> rows, ContinuousDistance distance)", "modifiers": "public static", "return": "ClusterMetricsSummary", "signature": "ClusterMetricsSummary getClusterStatistics(Iterable<Row> rows, ContinuousDistance distance)", "full_signature": "public static ClusterMetricsSummary getClusterStatistics(Iterable<Row> rows, ContinuousDistance distance)", "class_method_signature": "ClusterEvaluationUtil.getClusterStatistics(Iterable<Row> rows, ContinuousDistance distance)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(TimeWindow timeWindow, Iterable<Row> rows, Collector<Row> collector)", "modifiers": "@Override public", "return": "void", "signature": "void apply(TimeWindow timeWindow, Iterable<Row> rows, Collector<Row> collector)", "full_signature": "@Override public void apply(TimeWindow timeWindow, Iterable<Row> rows, Collector<Row> collector)", "class_method_signature": "ClusterEvaluationUtil.apply(TimeWindow timeWindow, Iterable<Row> rows, Collector<Row> collector)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/common/evaluation/ClusterEvaluationUtil.java"}, "focal_method": {"identifier": "getBasicClusterStatistics", "parameters": "(Iterable<Row> rows)", "modifiers": "public static", "return": "Params", "body": "public static Params getBasicClusterStatistics(Iterable<Row> rows){\n        Map<String, Double> map = new HashMap<>(0);\n        int count = 0;\n        for (Row row : rows) {\n            if(row != null && row.getField(0) != null) {\n                count++;\n                String key = row.getField(0).toString();\n                map.merge(key, 1.0, (k,v) -> k + 1.0);\n            }\n        }\n        int c = 0;\n        double[] values = new double[map.size()];\n        String[] keys = new String[map.size()];\n        for(Map.Entry<String, Double> entry : map.entrySet()){\n            keys[c] = entry.getKey();\n            values[c++] = entry.getValue();\n        }\n        return new Params()\n            .set(ClusterMetrics.COUNT, count)\n            .set(ClusterMetrics.K, map.size())\n            .set(ClusterMetrics.CLUSTER_ARRAY, keys)\n            .set(ClusterMetrics.COUNT_ARRAY, values);\n    }", "signature": "Params getBasicClusterStatistics(Iterable<Row> rows)", "full_signature": "public static Params getBasicClusterStatistics(Iterable<Row> rows)", "class_method_signature": "ClusterEvaluationUtil.getBasicClusterStatistics(Iterable<Row> rows)", "testcase": false, "constructor": false, "invocations": ["getField", "toString", "getField", "merge", "size", "size", "entrySet", "getKey", "getValue", "set", "set", "set", "set", "size"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}