{"test_class": {"identifier": "PivotTableTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/tech/tablesaw/aggregate/PivotTableTest.java"}, "test_case": {"identifier": "pivot", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void pivot() throws Exception {\n    Table t =\n        Table.read()\n            .csv(CsvReadOptions.builder(\"../data/bush.csv\").missingValueIndicator(\":\").build());\n    t.addColumns(t.dateColumn(\"date\").year());\n\n    Table pivot =\n        PivotTable.pivot(\n            t,\n            t.categoricalColumn(\"who\"),\n            t.categoricalColumn(\"date year\"),\n            t.numberColumn(\"approval\"),\n            AggregateFunctions.mean);\n    assertTrue(pivot.columnNames().contains(\"who\"));\n    assertTrue(pivot.columnNames().contains(\"2001\"));\n    assertTrue(pivot.columnNames().contains(\"2002\"));\n    assertTrue(pivot.columnNames().contains(\"2003\"));\n    assertTrue(pivot.columnNames().contains(\"2004\"));\n    assertEquals(6, pivot.rowCount());\n  }", "signature": "void pivot()", "full_signature": "@Test public void pivot()", "class_method_signature": "PivotTableTest.pivot()", "testcase": true, "constructor": false, "invocations": ["csv", "read", "build", "missingValueIndicator", "builder", "addColumns", "year", "dateColumn", "pivot", "categoricalColumn", "categoricalColumn", "numberColumn", "assertTrue", "contains", "columnNames", "assertTrue", "contains", "columnNames", "assertTrue", "contains", "columnNames", "assertTrue", "contains", "columnNames", "assertTrue", "contains", "columnNames", "assertEquals", "rowCount"]}, "focal_class": {"identifier": "PivotTable", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "pivot", "parameters": "(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction)", "modifiers": "public static", "return": "Table", "signature": "Table pivot(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction)", "full_signature": "public static Table pivot(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction)", "class_method_signature": "PivotTable.pivot(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction)", "testcase": false, "constructor": false}, {"identifier": "getValueMap", "parameters": "(\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      int valueIndex,\n      TableSlice slice,\n      AggregateFunction<?, ?> function)", "modifiers": "private static", "return": "Map<String, Double>", "signature": "Map<String, Double> getValueMap(\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      int valueIndex,\n      TableSlice slice,\n      AggregateFunction<?, ?> function)", "full_signature": "private static Map<String, Double> getValueMap(\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      int valueIndex,\n      TableSlice slice,\n      AggregateFunction<?, ?> function)", "class_method_signature": "PivotTable.getValueMap(\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      int valueIndex,\n      TableSlice slice,\n      AggregateFunction<?, ?> function)", "testcase": false, "constructor": false}, {"identifier": "getValueColumnNames", "parameters": "(Table table, CategoricalColumn<?> column2)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> getValueColumnNames(Table table, CategoricalColumn<?> column2)", "full_signature": "private static List<String> getValueColumnNames(Table table, CategoricalColumn<?> column2)", "class_method_signature": "PivotTable.getValueColumnNames(Table table, CategoricalColumn<?> column2)", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/aggregate/PivotTable.java"}, "focal_method": {"identifier": "pivot", "parameters": "(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction)", "modifiers": "public static", "return": "Table", "body": "public static Table pivot(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction) {\n\n    TableSliceGroup tsg = table.splitOn(column1);\n\n    Table pivotTable = Table.create(\"Pivot: \" + column1.name() + \" x \" + column2.name());\n    pivotTable.addColumns(column1.type().create(column1.name()));\n\n    List<String> valueColumnNames = getValueColumnNames(table, column2);\n\n    for (String colName : valueColumnNames) {\n      pivotTable.addColumns(DoubleColumn.create(colName));\n    }\n\n    int valueIndex = table.columnIndex(column2);\n    int keyIndex = table.columnIndex(column1);\n\n    String key;\n\n    for (TableSlice slice : tsg.getSlices()) {\n      key = String.valueOf(slice.get(0, keyIndex));\n      pivotTable.column(0).appendCell(key);\n\n      Map<String, Double> valueMap =\n          getValueMap(column1, column2, values, valueIndex, slice, aggregateFunction);\n\n      for (String columnName : valueColumnNames) {\n        Double aDouble = valueMap.get(columnName);\n        NumericColumn<?> pivotValueColumn = pivotTable.numberColumn(columnName);\n        if (aDouble == null) {\n          pivotValueColumn.appendMissing();\n        } else {\n          pivotValueColumn.appendObj(aDouble);\n        }\n      }\n    }\n\n    return pivotTable;\n  }", "signature": "Table pivot(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction)", "full_signature": "public static Table pivot(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction)", "class_method_signature": "PivotTable.pivot(\n      Table table,\n      CategoricalColumn<?> column1,\n      CategoricalColumn<?> column2,\n      NumericColumn<?> values,\n      AggregateFunction<?, ?> aggregateFunction)", "testcase": false, "constructor": false, "invocations": ["splitOn", "create", "name", "name", "addColumns", "create", "type", "name", "getValueColumnNames", "addColumns", "create", "columnIndex", "columnIndex", "getSlices", "valueOf", "get", "appendCell", "column", "getValueMap", "get", "numberColumn", "appendMissing", "appendObj"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}