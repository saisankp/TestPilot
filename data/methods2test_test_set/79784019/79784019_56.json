{"test_class": {"identifier": "FieldScannerTest", "superclass": "", "interfaces": "", "fields": [], "file": "stardao-core/src/test/java/io/stardog/stardao/core/field/FieldScannerTest.java"}, "test_case": {"identifier": "testToFieldName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToFieldName() throws Exception {\n        FieldScanner scanner = new FieldScanner();\n\n        assertEquals(\"loginAt\", scanner.toFieldName(TestModel.class.getDeclaredMethod(\"getLoginAt\")));\n        assertNull(scanner.toFieldName(TestModel.class.getDeclaredMethod(\"getLoginAt\", long.class)));\n    }", "signature": "void testToFieldName()", "full_signature": "@Test public void testToFieldName()", "class_method_signature": "FieldScannerTest.testToFieldName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toFieldName", "getDeclaredMethod", "assertNull", "toFieldName", "getDeclaredMethod"]}, "focal_class": {"identifier": "FieldScanner", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "scanAnnotations", "parameters": "(Class modelClass)", "modifiers": "public", "return": "FieldData", "signature": "FieldData scanAnnotations(Class modelClass)", "full_signature": "public FieldData scanAnnotations(Class modelClass)", "class_method_signature": "FieldScanner.scanAnnotations(Class modelClass)", "testcase": false, "constructor": false}, {"identifier": "addToMap", "parameters": "(FieldData.Builder builder, ImmutableMap.Builder<String,Field> fieldMap,\n                            Map<Class,Field> found, String fieldName, AccessibleObject method, boolean isOptional)", "modifiers": "protected", "return": "void", "signature": "void addToMap(FieldData.Builder builder, ImmutableMap.Builder<String,Field> fieldMap,\n                            Map<Class,Field> found, String fieldName, AccessibleObject method, boolean isOptional)", "full_signature": "protected void addToMap(FieldData.Builder builder, ImmutableMap.Builder<String,Field> fieldMap,\n                            Map<Class,Field> found, String fieldName, AccessibleObject method, boolean isOptional)", "class_method_signature": "FieldScanner.addToMap(FieldData.Builder builder, ImmutableMap.Builder<String,Field> fieldMap,\n                            Map<Class,Field> found, String fieldName, AccessibleObject method, boolean isOptional)", "testcase": false, "constructor": false}, {"identifier": "toFieldName", "parameters": "(Method method)", "modifiers": "protected", "return": "String", "signature": "String toFieldName(Method method)", "full_signature": "protected String toFieldName(Method method)", "class_method_signature": "FieldScanner.toFieldName(Method method)", "testcase": false, "constructor": false}, {"identifier": "isFieldOptional", "parameters": "(java.lang.reflect.Field field)", "modifiers": "protected", "return": "boolean", "signature": "boolean isFieldOptional(java.lang.reflect.Field field)", "full_signature": "protected boolean isFieldOptional(java.lang.reflect.Field field)", "class_method_signature": "FieldScanner.isFieldOptional(java.lang.reflect.Field field)", "testcase": false, "constructor": false}, {"identifier": "isMethodFieldOptional", "parameters": "(Method method)", "modifiers": "protected", "return": "boolean", "signature": "boolean isMethodFieldOptional(Method method)", "full_signature": "protected boolean isMethodFieldOptional(Method method)", "class_method_signature": "FieldScanner.isMethodFieldOptional(Method method)", "testcase": false, "constructor": false}], "file": "stardao-core/src/main/java/io/stardog/stardao/core/field/FieldScanner.java"}, "focal_method": {"identifier": "toFieldName", "parameters": "(Method method)", "modifiers": "protected", "return": "String", "body": "protected String toFieldName(Method method) {\n        if (method.getParameterCount() > 0) {\n            return null;\n        }\n        if (method.getName().startsWith(\"get\")) {\n            String field = method.getName().substring(3);\n            return field.substring(0, 1).toLowerCase() + field.substring(1);\n        } else if (method.getName().startsWith(\"is\")) {\n            String field = method.getName().substring(2);\n            return field.substring(0, 1).toLowerCase() + field.substring(1);\n        } else {\n            return null;\n        }\n    }", "signature": "String toFieldName(Method method)", "full_signature": "protected String toFieldName(Method method)", "class_method_signature": "FieldScanner.toFieldName(Method method)", "testcase": false, "constructor": false, "invocations": ["getParameterCount", "startsWith", "getName", "substring", "getName", "toLowerCase", "substring", "substring", "startsWith", "getName", "substring", "getName", "toLowerCase", "substring", "substring"]}, "repository": {"repo_id": 79784019, "url": "https://github.com/stardogventures/stardao", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 219, "license": "licensed"}}