{"test_class": {"identifier": "NettyTransporterTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-remoting/dubbo-remoting-netty4/src/test/java/com/alibaba/dubbo/remoting/transport/netty4/NettyTransporterTest.java"}, "test_case": {"identifier": "shouldAbleToBindNetty4", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldAbleToBindNetty4() throws Exception {\n        int port = NetUtils.getAvailablePort();\n        URL url = new URL(\"http\", \"localhost\", port,\n                new String[]{Constants.BIND_PORT_KEY, String.valueOf(port)});\n\n        Server server = new NettyTransporter().bind(url, new ChannelHandlerAdapter());\n\n        assertThat(server.isBound(), is(true));\n    }", "signature": "void shouldAbleToBindNetty4()", "full_signature": "@Test public void shouldAbleToBindNetty4()", "class_method_signature": "NettyTransporterTest.shouldAbleToBindNetty4()", "testcase": true, "constructor": false, "invocations": ["getAvailablePort", "valueOf", "bind", "assertThat", "isBound", "is"]}, "focal_class": {"identifier": "NettyTransporter", "superclass": "", "interfaces": "implements Transporter", "fields": [{"original_string": "public static final String NAME = \"netty\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"netty\"", "var_name": "NAME"}], "methods": [{"identifier": "bind", "parameters": "(URL url, ChannelHandler listener)", "modifiers": "@Override public", "return": "Server", "signature": "Server bind(URL url, ChannelHandler listener)", "full_signature": "@Override public Server bind(URL url, ChannelHandler listener)", "class_method_signature": "NettyTransporter.bind(URL url, ChannelHandler listener)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(URL url, ChannelHandler listener)", "modifiers": "@Override public", "return": "Client", "signature": "Client connect(URL url, ChannelHandler listener)", "full_signature": "@Override public Client connect(URL url, ChannelHandler listener)", "class_method_signature": "NettyTransporter.connect(URL url, ChannelHandler listener)", "testcase": false, "constructor": false}], "file": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/com/alibaba/dubbo/remoting/transport/netty4/NettyTransporter.java"}, "focal_method": {"identifier": "bind", "parameters": "(URL url, ChannelHandler listener)", "modifiers": "@Override public", "return": "Server", "body": "@Override\n    public Server bind(URL url, ChannelHandler listener) throws RemotingException {\n        return new NettyServer(url, listener);\n    }", "signature": "Server bind(URL url, ChannelHandler listener)", "full_signature": "@Override public Server bind(URL url, ChannelHandler listener)", "class_method_signature": "NettyTransporter.bind(URL url, ChannelHandler listener)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}