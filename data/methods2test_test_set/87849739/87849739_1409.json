{"test_class": {"identifier": "AcknowledgementRequestsTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/acks/AcknowledgementRequestsTest.java"}, "test_case": {"identifier": "getNewAcknowledgementRequestReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getNewAcknowledgementRequestReturnsExpected() {\n        final AcknowledgementLabel ackLabel = DittoAcknowledgementLabel.TWIN_PERSISTED;\n        final ImmutableAcknowledgementRequest expected = ImmutableAcknowledgementRequest.getInstance(ackLabel);\n\n        final ImmutableAcknowledgementRequest actual = AcknowledgementRequests.newAcknowledgementRequest(ackLabel);\n\n        assertThat(actual).isEqualTo(expected);\n    }", "signature": "void getNewAcknowledgementRequestReturnsExpected()", "full_signature": "@Test public void getNewAcknowledgementRequestReturnsExpected()", "class_method_signature": "AcknowledgementRequestsTest.getNewAcknowledgementRequestReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["getInstance", "newAcknowledgementRequest", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "AcknowledgementRequests", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "AcknowledgementRequests", "parameters": "()", "modifiers": "private", "return": "", "signature": " AcknowledgementRequests()", "full_signature": "private  AcknowledgementRequests()", "class_method_signature": "AcknowledgementRequests.AcknowledgementRequests()", "testcase": false, "constructor": true}, {"identifier": "newAcknowledgementRequest", "parameters": "(\n            final AcknowledgementLabel acknowledgementLabel)", "modifiers": "public static", "return": "ImmutableAcknowledgementRequest", "signature": "ImmutableAcknowledgementRequest newAcknowledgementRequest(\n            final AcknowledgementLabel acknowledgementLabel)", "full_signature": "public static ImmutableAcknowledgementRequest newAcknowledgementRequest(\n            final AcknowledgementLabel acknowledgementLabel)", "class_method_signature": "AcknowledgementRequests.newAcknowledgementRequest(\n            final AcknowledgementLabel acknowledgementLabel)", "testcase": false, "constructor": false}, {"identifier": "newFilteredAcknowledgementRequest", "parameters": "(\n            final Set<AcknowledgementRequest> includes, @Nullable final String filter)", "modifiers": "public static", "return": "ImmutableFilteredAcknowledgementRequest", "signature": "ImmutableFilteredAcknowledgementRequest newFilteredAcknowledgementRequest(\n            final Set<AcknowledgementRequest> includes, @Nullable final String filter)", "full_signature": "public static ImmutableFilteredAcknowledgementRequest newFilteredAcknowledgementRequest(\n            final Set<AcknowledgementRequest> includes, @Nullable final String filter)", "class_method_signature": "AcknowledgementRequests.newFilteredAcknowledgementRequest(\n            final Set<AcknowledgementRequest> includes, @Nullable final String filter)", "testcase": false, "constructor": false}, {"identifier": "filteredAcknowledgementRequestFromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "FilteredAcknowledgementRequest", "signature": "FilteredAcknowledgementRequest filteredAcknowledgementRequestFromJson(final JsonObject jsonObject)", "full_signature": "public static FilteredAcknowledgementRequest filteredAcknowledgementRequestFromJson(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementRequests.filteredAcknowledgementRequestFromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "parseAcknowledgementRequest", "parameters": "(\n            final CharSequence ackRequestRepresentation)", "modifiers": "public static", "return": "ImmutableAcknowledgementRequest", "signature": "ImmutableAcknowledgementRequest parseAcknowledgementRequest(\n            final CharSequence ackRequestRepresentation)", "full_signature": "public static ImmutableAcknowledgementRequest parseAcknowledgementRequest(\n            final CharSequence ackRequestRepresentation)", "class_method_signature": "AcknowledgementRequests.parseAcknowledgementRequest(\n            final CharSequence ackRequestRepresentation)", "testcase": false, "constructor": false}, {"identifier": "tryToParseAcknowledgementLabel", "parameters": "(final CharSequence cs)", "modifiers": "private static", "return": "AcknowledgementLabel", "signature": "AcknowledgementLabel tryToParseAcknowledgementLabel(final CharSequence cs)", "full_signature": "private static AcknowledgementLabel tryToParseAcknowledgementLabel(final CharSequence cs)", "class_method_signature": "AcknowledgementRequests.tryToParseAcknowledgementLabel(final CharSequence cs)", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/acks/AcknowledgementRequests.java"}, "focal_method": {"identifier": "newAcknowledgementRequest", "parameters": "(\n            final AcknowledgementLabel acknowledgementLabel)", "modifiers": "public static", "return": "ImmutableAcknowledgementRequest", "body": "public static ImmutableAcknowledgementRequest newAcknowledgementRequest(\n            final AcknowledgementLabel acknowledgementLabel) {\n\n        return ImmutableAcknowledgementRequest.getInstance(acknowledgementLabel);\n    }", "signature": "ImmutableAcknowledgementRequest newAcknowledgementRequest(\n            final AcknowledgementLabel acknowledgementLabel)", "full_signature": "public static ImmutableAcknowledgementRequest newAcknowledgementRequest(\n            final AcknowledgementLabel acknowledgementLabel)", "class_method_signature": "AcknowledgementRequests.newAcknowledgementRequest(\n            final AcknowledgementLabel acknowledgementLabel)", "testcase": false, "constructor": false, "invocations": ["getInstance"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}