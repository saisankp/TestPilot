{"test_class": {"identifier": "urn_perun_user_facility_attribute_def_def_basicDefaultGIDTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static urn_perun_user_facility_attribute_def_def_basicDefaultGID classInstance;", "modifier": "private static", "type": "urn_perun_user_facility_attribute_def_def_basicDefaultGID", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private static PerunSessionImpl session;", "modifier": "private static", "type": "PerunSessionImpl", "declarator": "session", "var_name": "session"}, {"original_string": "private static AttributeDefinition attrDef;", "modifier": "private static", "type": "AttributeDefinition", "declarator": "attrDef", "var_name": "attrDef"}, {"original_string": "private static Facility facility;", "modifier": "private static", "type": "Facility", "declarator": "facility", "var_name": "facility"}, {"original_string": "private static User user;", "modifier": "private static", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private static Attribute basic;", "modifier": "private static", "type": "Attribute", "declarator": "basic", "var_name": "basic"}, {"original_string": "private static Attribute namespaceAttribute;", "modifier": "private static", "type": "Attribute", "declarator": "namespaceAttribute", "var_name": "namespaceAttribute"}, {"original_string": "private static List<Resource> allowedResources;", "modifier": "private static", "type": "List<Resource>", "declarator": "allowedResources", "var_name": "allowedResources"}, {"original_string": "private static List<Resource> allowedResourcesWithSameGid;", "modifier": "private static", "type": "List<Resource>", "declarator": "allowedResourcesWithSameGid", "var_name": "allowedResourcesWithSameGid"}, {"original_string": "private static Resource resource1;", "modifier": "private static", "type": "Resource", "declarator": "resource1", "var_name": "resource1"}, {"original_string": "private static Resource resource2;", "modifier": "private static", "type": "Resource", "declarator": "resource2", "var_name": "resource2"}, {"original_string": "private static Resource resource3;", "modifier": "private static", "type": "Resource", "declarator": "resource3", "var_name": "resource3"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_facility_attribute_def_def_basicDefaultGIDTest.java"}, "test_case": {"identifier": "checkValueAttributeIsSetTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\t\tpublic void checkValueAttributeIsSetTest() throws Exception{\n\t\t\t\tSystem.out.println(\"urn_perun_user_facility_attribute_def_def_basicDefaultGID.checkValueAttributeIsSetTest()\");\n\t\t\t\t//setup\n\t\t\t\tbasic.setValue(1);\n\t\t\t\tallowedResources.clear();\n\t\t\t\tallowedResourcesWithSameGid.clear();\n\t\t\t\tallowedResources.add(resource1);\n\t\t\t\tallowedResources.add(resource2);\n\t\t\t\tallowedResourcesWithSameGid.add(resource2);\n\t\t\t\tallowedResourcesWithSameGid.add(resource3);\n\t\t\t\t//mock\n\t\t\t\twhen(session.getPerunBl().getAttributesManagerBl().getAttribute(any(PerunSessionImpl.class), any(Facility.class), eq(AttributesManager.NS_FACILITY_ATTR_DEF + \":unixGID-namespace\"))).thenReturn(namespaceAttribute);\n\t\t\t\twhen(session.getPerunBl().getUsersManagerBl().getAllowedResources(any(PerunSessionImpl.class), any(Facility.class), any(User.class))).thenReturn(allowedResources);\n\t\t\t\twhen(session.getPerunBl().getResourcesManagerBl().getResourcesByAttribute(any(PerunSessionImpl.class), any(Attribute.class))).thenReturn(allowedResourcesWithSameGid);\n\n\t\t\t\tclassInstance.checkAttributeSemantics(session, user, facility, basic);\n\t\t}", "signature": "void checkValueAttributeIsSetTest()", "full_signature": "@Test public void checkValueAttributeIsSetTest()", "class_method_signature": "urn_perun_user_facility_attribute_def_def_basicDefaultGIDTest.checkValueAttributeIsSetTest()", "testcase": true, "constructor": false, "invocations": ["println", "setValue", "clear", "clear", "add", "add", "add", "add", "thenReturn", "when", "getAttribute", "getAttributesManagerBl", "getPerunBl", "any", "any", "eq", "thenReturn", "when", "getAllowedResources", "getUsersManagerBl", "getPerunBl", "any", "any", "any", "thenReturn", "when", "getResourcesByAttribute", "getResourcesManagerBl", "getPerunBl", "any", "any", "checkAttributeSemantics"]}, "focal_class": {"identifier": "urn_perun_user_facility_attribute_def_def_basicDefaultGID", "superclass": "extends UserFacilityAttributesModuleAbstract", "interfaces": "implements UserFacilityAttributesModuleImplApi", "fields": [], "methods": [{"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_user_facility_attribute_def_def_basicDefaultGID.checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "fillAttribute", "parameters": "(PerunSessionImpl sess, User user, Facility facility, AttributeDefinition attributeDefinition)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute fillAttribute(PerunSessionImpl sess, User user, Facility facility, AttributeDefinition attributeDefinition)", "full_signature": "@Override public Attribute fillAttribute(PerunSessionImpl sess, User user, Facility facility, AttributeDefinition attributeDefinition)", "class_method_signature": "urn_perun_user_facility_attribute_def_def_basicDefaultGID.fillAttribute(PerunSessionImpl sess, User user, Facility facility, AttributeDefinition attributeDefinition)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getDependencies()", "full_signature": "@Override public List<String> getDependencies()", "class_method_signature": "urn_perun_user_facility_attribute_def_def_basicDefaultGID.getDependencies()", "testcase": false, "constructor": false}, {"identifier": "getAttributeDefinition", "parameters": "()", "modifiers": "@Override public", "return": "AttributeDefinition", "signature": "AttributeDefinition getAttributeDefinition()", "full_signature": "@Override public AttributeDefinition getAttributeDefinition()", "class_method_signature": "urn_perun_user_facility_attribute_def_def_basicDefaultGID.getAttributeDefinition()", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_facility_attribute_def_def_basicDefaultGID.java"}, "focal_method": {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n\t\tAttribute namespaceAttribute;\n\t\t\ttry {\n\t\t\t\tnamespaceAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, facility, AttributesManager.NS_FACILITY_ATTR_DEF + \":unixGID-namespace\");\n\t\t\t} catch (AttributeNotExistsException ex) {\n\t\t\t\tthrow new ConsistencyErrorException(ex);\n\t\t\t}\n\t\tif (namespaceAttribute.getValue() == null) {\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, namespaceAttribute, \"Reference attribute is null\");\n\t\t}\n\t\tString namespaceName = namespaceAttribute.valueAsString();\n\n\t\tAttribute resourceGidAttribute;\n\t\ttry {\n\t\t\tresourceGidAttribute = new Attribute(sess.getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, AttributesManager.NS_RESOURCE_ATTR_DEF + \":unixGID-namespace:\" + namespaceName));\n\t\t} catch (AttributeNotExistsException ex) {\n\t\t\tthrow new ConsistencyErrorException(\"Namespace from value of \" + namespaceAttribute + \" doesn't exists. (Resource attribute \" + AttributesManager.NS_RESOURCE_ATTR_DEF + \":unixGID-namespace:\" + namespaceName + \" doesn't exists\", ex);\n\t\t}\n\n\t\tresourceGidAttribute.setValue(attribute.getValue());\n\t\tList<Resource> allowedResources = sess.getPerunBl().getUsersManagerBl().getAllowedResources(sess, facility, user);\n\t\tList<Resource> resourcesWithSameGid = sess.getPerunBl().getResourcesManagerBl().getResourcesByAttribute(sess, resourceGidAttribute);\n\t\tif (resourcesWithSameGid.isEmpty() && allowedResources.isEmpty() && resourceGidAttribute.getValue() == null) return;\n\t\tif (resourcesWithSameGid.isEmpty() && resourceGidAttribute.getValue() != null) throw new WrongReferenceAttributeValueException(attribute, null, user, facility, \"Resource with required unix GID doesn't exist.\");\n\t\tif (allowedResources.isEmpty()) throw new WrongReferenceAttributeValueException(attribute, null, user, facility, \"User has not access to required resource\");\n\n\t\tresourcesWithSameGid.retainAll(allowedResources);\n\n\t\t//We did not find at least one allowed resource with same gid as the user have => attribute is NOK\n\t\tif (resourcesWithSameGid.isEmpty()) {\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, null, user, facility, \"User has not access to resource with required group id\");\n\t\t}\n\t}", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_user_facility_attribute_def_def_basicDefaultGID.checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "testcase": false, "constructor": false, "invocations": ["getAttribute", "getAttributesManagerBl", "getPerunBl", "getValue", "valueAsString", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "setValue", "getValue", "getAllowedResources", "getUsersManagerBl", "getPerunBl", "getResourcesByAttribute", "getResourcesManagerBl", "getPerunBl", "isEmpty", "isEmpty", "getValue", "isEmpty", "getValue", "isEmpty", "retainAll", "isEmpty"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}