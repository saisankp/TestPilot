{"test_class": {"identifier": "JSONRestTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools.indepth.root/kie-exec-server-client/src/test/java/org/jackzeng/kie/JSONRestTest.java"}, "test_case": {"identifier": "jsonTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void jsonTest() throws Exception {\n        KieServerCfg cfg = new KieServerCfg();\n        cfg.setUrl(\"http://172.29.150.141:10000/kie-server/services/rest/server\");\n        cfg.setUser(\"kieserver\");\n        cfg.setPassword(\"kieserver\");\n\n        MyBean bean = new MyBean();\n        bean.setName(\"jackzeng\");\n        bean.setAge(1);\n\n        JSONRest rest = new JSONRest(cfg);\n        System.out.println(rest.executeCmds(\"client-test1.1\",bean));\n    }", "signature": "void jsonTest()", "full_signature": "@Test public void jsonTest()", "class_method_signature": "JSONRestTest.jsonTest()", "testcase": true, "constructor": false, "invocations": ["setUrl", "setUser", "setPassword", "setName", "setAge", "println", "executeCmds"]}, "focal_class": {"identifier": "JSONRest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final MarshallingFormat FORMAT =  MarshallingFormat.JSON;", "modifier": "private static final", "type": "MarshallingFormat", "declarator": "FORMAT =  MarshallingFormat.JSON", "var_name": "FORMAT"}, {"original_string": "private KieServicesConfiguration conf;", "modifier": "private", "type": "KieServicesConfiguration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private KieServicesClient kieServicesClient;", "modifier": "private", "type": "KieServicesClient", "declarator": "kieServicesClient", "var_name": "kieServicesClient"}], "methods": [{"identifier": "JSONRest", "parameters": "(KieServerCfg serverCfg)", "modifiers": "public", "return": "", "signature": " JSONRest(KieServerCfg serverCfg)", "full_signature": "public  JSONRest(KieServerCfg serverCfg)", "class_method_signature": "JSONRest.JSONRest(KieServerCfg serverCfg)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "(KieServerCfg serverCfg)", "modifiers": "public", "return": "void", "signature": "void initialize(KieServerCfg serverCfg)", "full_signature": "public void initialize(KieServerCfg serverCfg)", "class_method_signature": "JSONRest.initialize(KieServerCfg serverCfg)", "testcase": false, "constructor": false}, {"identifier": "executeCmds", "parameters": "(String containerId, Object insertObject)", "modifiers": "public", "return": "String", "signature": "String executeCmds(String containerId, Object insertObject)", "full_signature": "public String executeCmds(String containerId, Object insertObject)", "class_method_signature": "JSONRest.executeCmds(String containerId, Object insertObject)", "testcase": false, "constructor": false}], "file": "drools.indepth.root/kie-exec-server-client/src/main/java/org/jackzeng/kie/JSONRest.java"}, "focal_method": {"identifier": "executeCmds", "parameters": "(String containerId, Object insertObject)", "modifiers": "public", "return": "String", "body": "public String executeCmds(String containerId, Object insertObject){\n        RuleServicesClient ruleServicesClient = kieServicesClient.getServicesClient(RuleServicesClient.class);\n        KieCommands commands = KieServices.Factory.get().getCommands();\n\n        Command<?> insertCmd    = commands.newInsert(insertObject);\n        Command<?> fireAllRules = commands.newFireAllRules();\n        Command<?> batchCmds    = commands.newBatchExecution(Arrays.asList(insertCmd, fireAllRules));\n\n        ServiceResponse<String> response = ruleServicesClient.executeCommands(containerId, batchCmds);\n\n        if(response.getType() == ServiceResponse.ResponseType.SUCCESS){\n            return response.getResult();\n        }\n\n        return response.getMsg();\n    }", "signature": "String executeCmds(String containerId, Object insertObject)", "full_signature": "public String executeCmds(String containerId, Object insertObject)", "class_method_signature": "JSONRest.executeCmds(String containerId, Object insertObject)", "testcase": false, "constructor": false, "invocations": ["getServicesClient", "getCommands", "get", "newInsert", "newFireAllRules", "newBatchExecution", "asList", "executeCommands", "getType", "getResult", "getMsg"]}, "repository": {"repo_id": 64733500, "url": "https://github.com/zengxijin/JavaHub", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 39012, "license": "licensed"}}