{"test_class": {"identifier": "SearchDataStoreFactoryTest", "superclass": "extends ApplicationTestCase", "interfaces": "", "fields": [{"original_string": "private SearchDataStoreFactory searchDataStoreFactory;", "modifier": "private", "type": "SearchDataStoreFactory", "declarator": "searchDataStoreFactory", "var_name": "searchDataStoreFactory"}], "file": "mythtv-player/src/test/java/org/mythtv/android/data/repository/datasource/SearchDataStoreFactoryTest.java"}, "test_case": {"identifier": "testCreateWriteSearchDataStore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateWriteSearchDataStore() throws Exception {\n\n        SearchDataStore searchDataStore = searchDataStoreFactory.createWriteSearchDataStore();\n\n        assertThat( searchDataStore, is( notNullValue() ) );\n\n    }", "signature": "void testCreateWriteSearchDataStore()", "full_signature": "@Test public void testCreateWriteSearchDataStore()", "class_method_signature": "SearchDataStoreFactoryTest.testCreateWriteSearchDataStore()", "testcase": true, "constructor": false, "invocations": ["createWriteSearchDataStore", "assertThat", "is", "notNullValue"]}, "focal_class": {"identifier": "SearchDataStoreFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = SearchDataStoreFactory.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = SearchDataStoreFactory.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private final DatabaseHelper mOpenHelper;", "modifier": "private final", "type": "DatabaseHelper", "declarator": "mOpenHelper", "var_name": "mOpenHelper"}], "methods": [{"identifier": "SearchDataStoreFactory", "parameters": "( Context context )", "modifiers": "@Inject public", "return": "", "signature": " SearchDataStoreFactory( Context context )", "full_signature": "@Inject public  SearchDataStoreFactory( Context context )", "class_method_signature": "SearchDataStoreFactory.SearchDataStoreFactory( Context context )", "testcase": false, "constructor": true}, {"identifier": "createReadSearchDataStore", "parameters": "()", "modifiers": "public", "return": "SearchDataStore", "signature": "SearchDataStore createReadSearchDataStore()", "full_signature": "public SearchDataStore createReadSearchDataStore()", "class_method_signature": "SearchDataStoreFactory.createReadSearchDataStore()", "testcase": false, "constructor": false}, {"identifier": "createWriteSearchDataStore", "parameters": "()", "modifiers": "public", "return": "SearchDataStore", "signature": "SearchDataStore createWriteSearchDataStore()", "full_signature": "public SearchDataStore createWriteSearchDataStore()", "class_method_signature": "SearchDataStoreFactory.createWriteSearchDataStore()", "testcase": false, "constructor": false}], "file": "mythtv-player/src/main/java/org/mythtv/android/data/repository/datasource/SearchDataStoreFactory.java"}, "focal_method": {"identifier": "createWriteSearchDataStore", "parameters": "()", "modifiers": "public", "return": "SearchDataStore", "body": "public SearchDataStore createWriteSearchDataStore() {\n        Log.d( TAG, \"createWriteSearchDataStore : enter\" );\n\n        SQLiteDatabase db = mOpenHelper.getWritableDatabase();\n\n        SearchDataStore searchDataStore = new DbSearchDataStore( db );\n\n        Log.d( TAG, \"createWriteSearchDataStore : exit\" );\n        return  searchDataStore;\n    }", "signature": "SearchDataStore createWriteSearchDataStore()", "full_signature": "public SearchDataStore createWriteSearchDataStore()", "class_method_signature": "SearchDataStoreFactory.createWriteSearchDataStore()", "testcase": false, "constructor": false, "invocations": ["d", "getWritableDatabase", "d"]}, "repository": {"repo_id": 27323134, "url": "https://github.com/MythTV-Clients/MythtvPlayerForAndroid", "stars": 17, "created": "11/30/2014 3:26:45 AM +00:00", "updates": "2019-12-31T22:13:00+00:00", "fork": "False", "license": "licensed"}}