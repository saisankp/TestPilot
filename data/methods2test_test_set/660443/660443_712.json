{"test_class": {"identifier": "IPBondLearningDescriptorTest", "superclass": "extends BondDescriptorTest", "interfaces": "", "fields": [{"original_string": "private IPBondLearningDescriptor descriptor;", "modifier": "private", "type": "IPBondLearningDescriptor", "declarator": "descriptor", "var_name": "descriptor"}, {"original_string": "private LonePairElectronChecker  lpcheck = new LonePairElectronChecker();", "modifier": "private", "type": "LonePairElectronChecker", "declarator": "lpcheck = new LonePairElectronChecker()", "var_name": "lpcheck"}], "file": "legacy/src/test/java/org/openscience/cdk/qsar/descriptors/bond/IPBondLearningDescriptorTest.java"}, "test_case": {"identifier": "testIPBondLearningDescriptor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIPBondLearningDescriptor() {\n        Assert.assertNotNull(descriptor);\n    }", "signature": "void testIPBondLearningDescriptor()", "full_signature": "@Test public void testIPBondLearningDescriptor()", "class_method_signature": "IPBondLearningDescriptorTest.testIPBondLearningDescriptor()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "IPBondLearningDescriptor", "superclass": "extends AbstractBondDescriptor", "interfaces": "", "fields": [{"original_string": "private static final String[] DESCRIPTOR_NAMES = {\"ipBondLearning\"};", "modifier": "private static final", "type": "String[]", "declarator": "DESCRIPTOR_NAMES = {\"ipBondLearning\"}", "var_name": "DESCRIPTOR_NAMES"}], "methods": [{"identifier": "IPBondLearningDescriptor", "parameters": "()", "modifiers": "public", "return": "", "signature": " IPBondLearningDescriptor()", "full_signature": "public  IPBondLearningDescriptor()", "class_method_signature": "IPBondLearningDescriptor.IPBondLearningDescriptor()", "testcase": false, "constructor": true}, {"identifier": "getSpecification", "parameters": "()", "modifiers": "@Override public", "return": "DescriptorSpecification", "signature": "DescriptorSpecification getSpecification()", "full_signature": "@Override public DescriptorSpecification getSpecification()", "class_method_signature": "IPBondLearningDescriptor.getSpecification()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Object[] params)", "modifiers": "@Override public", "return": "void", "signature": "void setParameters(Object[] params)", "full_signature": "@Override public void setParameters(Object[] params)", "class_method_signature": "IPBondLearningDescriptor.setParameters(Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "@Override public Object[] getParameters()", "class_method_signature": "IPBondLearningDescriptor.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getDescriptorNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDescriptorNames()", "full_signature": "@Override public String[] getDescriptorNames()", "class_method_signature": "IPBondLearningDescriptor.getDescriptorNames()", "testcase": false, "constructor": false}, {"identifier": "getDummyDescriptorValue", "parameters": "(Exception e)", "modifiers": "private", "return": "DescriptorValue", "signature": "DescriptorValue getDummyDescriptorValue(Exception e)", "full_signature": "private DescriptorValue getDummyDescriptorValue(Exception e)", "class_method_signature": "IPBondLearningDescriptor.getDummyDescriptorValue(Exception e)", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(IBond bond, IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "DescriptorValue", "signature": "DescriptorValue calculate(IBond bond, IAtomContainer atomContainer)", "full_signature": "@Override public DescriptorValue calculate(IBond bond, IAtomContainer atomContainer)", "class_method_signature": "IPBondLearningDescriptor.calculate(IBond bond, IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "getParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getParameterNames()", "full_signature": "@Override public String[] getParameterNames()", "class_method_signature": "IPBondLearningDescriptor.getParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterType", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getParameterType(String name)", "full_signature": "@Override public Object getParameterType(String name)", "class_method_signature": "IPBondLearningDescriptor.getParameterType(String name)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/qsar/descriptors/bond/IPBondLearningDescriptor.java"}, "focal_method": {"identifier": "IPBondLearningDescriptor", "parameters": "()", "modifiers": "public", "return": "", "body": "public IPBondLearningDescriptor() {}", "signature": " IPBondLearningDescriptor()", "full_signature": "public  IPBondLearningDescriptor()", "class_method_signature": "IPBondLearningDescriptor.IPBondLearningDescriptor()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}