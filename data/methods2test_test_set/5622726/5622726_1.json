{"test_class": {"identifier": "AssetGroupTest", "superclass": "", "interfaces": "", "fields": [], "file": "compress/src/test/java/com/switchfly/compress/AssetGroupTest.java"}, "test_case": {"identifier": "testAddAsset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddAsset() throws Exception {\n        Asset asset1 = new Asset();\n        asset1.setUrl(\"aaaa\");\n\n        Asset asset2 = new Asset();\n        asset2.setUrl(\"bbb\");\n\n        Asset asset3 = new Asset();\n        asset3.setUrl(\"bbb\");\n\n        AssetGroup assetGroup = new AssetGroup();\n        assetGroup.addAsset(asset1);\n        assetGroup.addAsset(asset2);\n        assetGroup.addAsset(asset3);\n\n        assertEquals(2, assetGroup.getAssets().size());\n        assertEquals(asset1, assetGroup.getAssets().get(0));\n        assertEquals(asset2, assetGroup.getAssets().get(1));\n    }", "signature": "void testAddAsset()", "full_signature": "@Test public void testAddAsset()", "class_method_signature": "AssetGroupTest.testAddAsset()", "testcase": true, "constructor": false, "invocations": ["setUrl", "setUrl", "setUrl", "addAsset", "addAsset", "addAsset", "assertEquals", "size", "getAssets", "assertEquals", "get", "getAssets", "assertEquals", "get", "getAssets"]}, "focal_class": {"identifier": "AssetGroup", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final LinkedHashSet<Asset> _assets = new LinkedHashSet<Asset>();", "modifier": "private final", "type": "LinkedHashSet<Asset>", "declarator": "_assets = new LinkedHashSet<Asset>()", "var_name": "_assets"}, {"original_string": "private String _name;", "modifier": "private", "type": "String", "declarator": "_name", "var_name": "_name"}, {"original_string": "private String _url;", "modifier": "private", "type": "String", "declarator": "_url", "var_name": "_url"}, {"original_string": "private AssetType _type;", "modifier": "private", "type": "AssetType", "declarator": "_type", "var_name": "_type"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "AssetGroup.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "AssetGroup.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUrl()", "full_signature": "public String getUrl()", "class_method_signature": "AssetGroup.getUrl()", "testcase": false, "constructor": false}, {"identifier": "setUrl", "parameters": "(String url)", "modifiers": "public", "return": "void", "signature": "void setUrl(String url)", "full_signature": "public void setUrl(String url)", "class_method_signature": "AssetGroup.setUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "AssetType", "signature": "AssetType getType()", "full_signature": "public AssetType getType()", "class_method_signature": "AssetGroup.getType()", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(AssetType type)", "modifiers": "public", "return": "void", "signature": "void setType(AssetType type)", "full_signature": "public void setType(AssetType type)", "class_method_signature": "AssetGroup.setType(AssetType type)", "testcase": false, "constructor": false}, {"identifier": "addAsset", "parameters": "(Asset asset)", "modifiers": "public", "return": "void", "signature": "void addAsset(Asset asset)", "full_signature": "public void addAsset(Asset asset)", "class_method_signature": "AssetGroup.addAsset(Asset asset)", "testcase": false, "constructor": false}, {"identifier": "getAssets", "parameters": "()", "modifiers": "public", "return": "List<Asset>", "signature": "List<Asset> getAssets()", "full_signature": "public List<Asset> getAssets()", "class_method_signature": "AssetGroup.getAssets()", "testcase": false, "constructor": false}, {"identifier": "getExtension", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExtension()", "full_signature": "public String getExtension()", "class_method_signature": "AssetGroup.getExtension()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AssetGroup.toString()", "testcase": false, "constructor": false}], "file": "compress/src/main/java/com/switchfly/compress/AssetGroup.java"}, "focal_method": {"identifier": "addAsset", "parameters": "(Asset asset)", "modifiers": "public", "return": "void", "body": "public void addAsset(Asset asset) {\n        if (_type != asset.getType()) {\n            throw new IllegalArgumentException(\"Invalid asset type: \" + toString() + \", \" + asset);\n        }\n        _assets.add(asset);\n    }", "signature": "void addAsset(Asset asset)", "full_signature": "public void addAsset(Asset asset)", "class_method_signature": "AssetGroup.addAsset(Asset asset)", "testcase": false, "constructor": false, "invocations": ["getType", "toString", "add"]}, "repository": {"repo_id": 5622726, "url": "https://github.com/switchfly/switchfly-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 752, "license": "licensed"}}