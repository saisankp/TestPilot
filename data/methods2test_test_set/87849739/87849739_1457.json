{"test_class": {"identifier": "EntityTagMatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final EntityTagMatcher ASTERISK = EntityTagMatcher.asterisk();", "modifier": "private static final", "type": "EntityTagMatcher", "declarator": "ASTERISK = EntityTagMatcher.asterisk()", "var_name": "ASTERISK"}, {"original_string": "private static final EntityTag WEAK_1 = EntityTag.fromString(\"W/\\\"1\\\"\");", "modifier": "private static final", "type": "EntityTag", "declarator": "WEAK_1 = EntityTag.fromString(\"W/\\\"1\\\"\")", "var_name": "WEAK_1"}, {"original_string": "private static final EntityTag WEAK_2 = EntityTag.fromString(\"W/\\\"2\\\"\");", "modifier": "private static final", "type": "EntityTag", "declarator": "WEAK_2 = EntityTag.fromString(\"W/\\\"2\\\"\")", "var_name": "WEAK_2"}, {"original_string": "private static final EntityTag STRONG_1 = EntityTag.fromString(\"\\\"1\\\"\");", "modifier": "private static final", "type": "EntityTag", "declarator": "STRONG_1 = EntityTag.fromString(\"\\\"1\\\"\")", "var_name": "STRONG_1"}, {"original_string": "private static final EntityTag STRONG_2 = EntityTag.fromString(\"\\\"2\\\"\");", "modifier": "private static final", "type": "EntityTag", "declarator": "STRONG_2 = EntityTag.fromString(\"\\\"2\\\"\")", "var_name": "STRONG_2"}, {"original_string": "@Rule\n    public final JUnitSoftAssertions softly = new JUnitSoftAssertions();", "modifier": "@Rule\n    public final", "type": "JUnitSoftAssertions", "declarator": "softly = new JUnitSoftAssertions()", "var_name": "softly"}], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/headers/entitytag/EntityTagMatcherTest.java"}, "test_case": {"identifier": "strongMatchEvaluatesAlwaysToTrueIfMatcherIsAsterisk", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void strongMatchEvaluatesAlwaysToTrueIfMatcherIsAsterisk() {\n        softly.assertThat(ASTERISK.strongMatch(STRONG_1)).isTrue();\n        softly.assertThat(ASTERISK.strongMatch(WEAK_1)).isTrue();\n        softly.assertThat(ASTERISK.strongMatch(WEAK_2)).isTrue();\n        softly.assertThat(ASTERISK.strongMatch(STRONG_2)).isTrue();\n    }", "signature": "void strongMatchEvaluatesAlwaysToTrueIfMatcherIsAsterisk()", "full_signature": "@Test public void strongMatchEvaluatesAlwaysToTrueIfMatcherIsAsterisk()", "class_method_signature": "EntityTagMatcherTest.strongMatchEvaluatesAlwaysToTrueIfMatcherIsAsterisk()", "testcase": true, "constructor": false, "invocations": ["isTrue", "assertThat", "strongMatch", "isTrue", "assertThat", "strongMatch", "isTrue", "assertThat", "strongMatch", "isTrue", "assertThat", "strongMatch"]}, "focal_class": {"identifier": "EntityTagMatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String ASTERISK = \"*\";", "modifier": "static final", "type": "String", "declarator": "ASTERISK = \"*\"", "var_name": "ASTERISK"}, {"original_string": "private static final EntityTagMatcher ASTERISK_INSTANCE = new EntityTagMatcher(null, true);", "modifier": "private static final", "type": "EntityTagMatcher", "declarator": "ASTERISK_INSTANCE = new EntityTagMatcher(null, true)", "var_name": "ASTERISK_INSTANCE"}, {"original_string": "@Nullable private final EntityTag entityTag;", "modifier": "@Nullable private final", "type": "EntityTag", "declarator": "entityTag", "var_name": "entityTag"}, {"original_string": "private final boolean isAsterisk;", "modifier": "private final", "type": "boolean", "declarator": "isAsterisk", "var_name": "isAsterisk"}], "methods": [{"identifier": "EntityTagMatcher", "parameters": "(@Nullable final EntityTag entityTag, final boolean isAsterisk)", "modifiers": "private", "return": "", "signature": " EntityTagMatcher(@Nullable final EntityTag entityTag, final boolean isAsterisk)", "full_signature": "private  EntityTagMatcher(@Nullable final EntityTag entityTag, final boolean isAsterisk)", "class_method_signature": "EntityTagMatcher.EntityTagMatcher(@Nullable final EntityTag entityTag, final boolean isAsterisk)", "testcase": false, "constructor": true}, {"identifier": "fromString", "parameters": "(final String entityTagMatcher)", "modifiers": "public static", "return": "EntityTagMatcher", "signature": "EntityTagMatcher fromString(final String entityTagMatcher)", "full_signature": "public static EntityTagMatcher fromString(final String entityTagMatcher)", "class_method_signature": "EntityTagMatcher.fromString(final String entityTagMatcher)", "testcase": false, "constructor": false}, {"identifier": "isAsterisk", "parameters": "(@Nullable final CharSequence entityTagMatcher)", "modifiers": "private static", "return": "boolean", "signature": "boolean isAsterisk(@Nullable final CharSequence entityTagMatcher)", "full_signature": "private static boolean isAsterisk(@Nullable final CharSequence entityTagMatcher)", "class_method_signature": "EntityTagMatcher.isAsterisk(@Nullable final CharSequence entityTagMatcher)", "testcase": false, "constructor": false}, {"identifier": "asterisk", "parameters": "()", "modifiers": "public static", "return": "EntityTagMatcher", "signature": "EntityTagMatcher asterisk()", "full_signature": "public static EntityTagMatcher asterisk()", "class_method_signature": "EntityTagMatcher.asterisk()", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(@Nullable final CharSequence entityTagMatcher)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValid(@Nullable final CharSequence entityTagMatcher)", "full_signature": "public static boolean isValid(@Nullable final CharSequence entityTagMatcher)", "class_method_signature": "EntityTagMatcher.isValid(@Nullable final CharSequence entityTagMatcher)", "testcase": false, "constructor": false}, {"identifier": "strongMatch", "parameters": "(final EntityTag entityTagToMatch)", "modifiers": "@SuppressWarnings(\"ConstantConditions\") public", "return": "boolean", "signature": "boolean strongMatch(final EntityTag entityTagToMatch)", "full_signature": "@SuppressWarnings(\"ConstantConditions\") public boolean strongMatch(final EntityTag entityTagToMatch)", "class_method_signature": "EntityTagMatcher.strongMatch(final EntityTag entityTagToMatch)", "testcase": false, "constructor": false}, {"identifier": "weakMatch", "parameters": "(final EntityTag entityTagToMatch)", "modifiers": "@SuppressWarnings(\"ConstantConditions\") public", "return": "boolean", "signature": "boolean weakMatch(final EntityTag entityTagToMatch)", "full_signature": "@SuppressWarnings(\"ConstantConditions\") public boolean weakMatch(final EntityTag entityTagToMatch)", "class_method_signature": "EntityTagMatcher.weakMatch(final EntityTag entityTagToMatch)", "testcase": false, "constructor": false}, {"identifier": "isAsterisk", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAsterisk()", "full_signature": "public boolean isAsterisk()", "class_method_signature": "EntityTagMatcher.isAsterisk()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "EntityTagMatcher.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "EntityTagMatcher.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"ConstantConditions\") public", "return": "String", "signature": "String toString()", "full_signature": "@Override @SuppressWarnings(\"ConstantConditions\") public String toString()", "class_method_signature": "EntityTagMatcher.toString()", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/headers/entitytag/EntityTagMatcher.java"}, "focal_method": {"identifier": "strongMatch", "parameters": "(final EntityTag entityTagToMatch)", "modifiers": "@SuppressWarnings(\"ConstantConditions\") public", "return": "boolean", "body": "@SuppressWarnings(\"ConstantConditions\")\n    public boolean strongMatch(final EntityTag entityTagToMatch) {\n        if (isAsterisk) {\n            return true;\n        }\n\n        return entityTag.strongCompareTo(entityTagToMatch);\n    }", "signature": "boolean strongMatch(final EntityTag entityTagToMatch)", "full_signature": "@SuppressWarnings(\"ConstantConditions\") public boolean strongMatch(final EntityTag entityTagToMatch)", "class_method_signature": "EntityTagMatcher.strongMatch(final EntityTag entityTagToMatch)", "testcase": false, "constructor": false, "invocations": ["strongCompareTo"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}