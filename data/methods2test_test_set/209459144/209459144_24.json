{"test_class": {"identifier": "ZipUtilitiesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG =\n      LoggerFactory.getLogger(ZipUtilitiesTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG =\n      LoggerFactory.getLogger(ZipUtilitiesTest.class)", "var_name": "LOG"}, {"original_string": "private FileUtilitiesForTests fileUtils = new FileUtilitiesForTests();", "modifier": "private", "type": "FileUtilitiesForTests", "declarator": "fileUtils = new FileUtilitiesForTests()", "var_name": "fileUtils"}, {"original_string": "private File tempDir;", "modifier": "private", "type": "File", "declarator": "tempDir", "var_name": "tempDir"}], "file": "submarine-server/server-submitter/submitter-yarnservice/src/test/java/org/apache/submarine/server/submitter/yarnservice/utils/ZipUtilitiesTest.java"}, "test_case": {"identifier": "testZipDirComplex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testZipDirComplex() throws IOException {\n    fileUtils.createFileInDir(tempDir, \"test1\");\n    fileUtils.createFileInDir(tempDir, \"test2\");\n    fileUtils.createFileInDir(tempDir, \"test3\");\n    File subdir1 = fileUtils.createDirectory(tempDir, \"subdir1\");\n    File subdir2 = fileUtils.createDirectory(tempDir, \"subdir2\");\n    fileUtils.createFileInDir(subdir1, \"file1_1\");\n    fileUtils.createFileInDir(subdir1, \"file1_2\");\n    fileUtils.createFileInDir(subdir2, \"file2_1\");\n    fileUtils.createFileInDir(subdir2, \"file2_2\");\n\n    File dstFile = getDestinationFile();\n\n    ZipUtilities.zipDir(tempDir.getAbsolutePath(), dstFile.getAbsolutePath());\n    assertZipEntriesByName(dstFile, Sets.newHashSet(\n        \"test1\", \"test2\", \"test3\",\n        \"subdir1/file1_1\", \"subdir1/file1_2\",\n        \"subdir2/file2_1\", \"subdir2/file2_2\"\n    ));\n  }", "signature": "void testZipDirComplex()", "full_signature": "@Test public void testZipDirComplex()", "class_method_signature": "ZipUtilitiesTest.testZipDirComplex()", "testcase": true, "constructor": false, "invocations": ["createFileInDir", "createFileInDir", "createFileInDir", "createDirectory", "createDirectory", "createFileInDir", "createFileInDir", "createFileInDir", "createFileInDir", "getDestinationFile", "zipDir", "getAbsolutePath", "getAbsolutePath", "assertZipEntriesByName", "newHashSet"]}, "focal_class": {"identifier": "ZipUtilities", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ZipUtilities.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ZipUtilities.class)", "var_name": "LOG"}], "methods": [{"identifier": "ZipUtilities", "parameters": "()", "modifiers": "private", "return": "", "signature": " ZipUtilities()", "full_signature": "private  ZipUtilities()", "class_method_signature": "ZipUtilities.ZipUtilities()", "testcase": false, "constructor": true}, {"identifier": "zipDir", "parameters": "(String srcDir, String dstFile)", "modifiers": "@VisibleForTesting public static", "return": "String", "signature": "String zipDir(String srcDir, String dstFile)", "full_signature": "@VisibleForTesting public static String zipDir(String srcDir, String dstFile)", "class_method_signature": "ZipUtilities.zipDir(String srcDir, String dstFile)", "testcase": false, "constructor": false}, {"identifier": "addDirToZip", "parameters": "(ZipOutputStream zos, File srcFile, File base)", "modifiers": "private static", "return": "void", "signature": "void addDirToZip(ZipOutputStream zos, File srcFile, File base)", "full_signature": "private static void addDirToZip(ZipOutputStream zos, File srcFile, File base)", "class_method_signature": "ZipUtilities.addDirToZip(ZipOutputStream zos, File srcFile, File base)", "testcase": false, "constructor": false}, {"identifier": "addFileToZip", "parameters": "(ZipOutputStream zos, File base, File file)", "modifiers": "private static", "return": "void", "signature": "void addFileToZip(ZipOutputStream zos, File base, File file)", "full_signature": "private static void addFileToZip(ZipOutputStream zos, File base, File file)", "class_method_signature": "ZipUtilities.addFileToZip(ZipOutputStream zos, File base, File file)", "testcase": false, "constructor": false}], "file": "submarine-server/server-submitter/submitter-yarnservice/src/main/java/org/apache/submarine/server/submitter/yarnservice/utils/ZipUtilities.java"}, "focal_method": {"identifier": "zipDir", "parameters": "(String srcDir, String dstFile)", "modifiers": "@VisibleForTesting public static", "return": "String", "body": "@VisibleForTesting\n  public static String zipDir(String srcDir, String dstFile)\n      throws IOException {\n    FileOutputStream fos = new FileOutputStream(dstFile);\n    ZipOutputStream zos = new ZipOutputStream(fos);\n    File srcFile = new File(srcDir);\n    LOG.info(\"Compressing directory {}\", srcDir);\n    addDirToZip(zos, srcFile, srcFile);\n    zos.close();\n    LOG.info(\"Compressed directory {} to file: {}\", srcDir, dstFile);\n    return dstFile;\n  }", "signature": "String zipDir(String srcDir, String dstFile)", "full_signature": "@VisibleForTesting public static String zipDir(String srcDir, String dstFile)", "class_method_signature": "ZipUtilities.zipDir(String srcDir, String dstFile)", "testcase": false, "constructor": false, "invocations": ["info", "addDirToZip", "close", "info"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}