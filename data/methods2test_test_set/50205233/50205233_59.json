{"test_class": {"identifier": "PathsTest", "superclass": "", "interfaces": "implements Testing", "fields": [{"original_string": "private Path path;", "modifier": "private", "type": "Path", "declarator": "path", "var_name": "path"}], "file": "debezium-core/src/test/java/io/debezium/document/PathsTest.java"}, "test_case": {"identifier": "shouldParseRootPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldParseRootPath() {\n        path = parse(\"/\");\n        assertThat(path.isRoot()).isTrue();\n        assertThat(path.isSingle()).isFalse();\n        assertThat(path.size()).isEqualTo(0);\n    }", "signature": "void shouldParseRootPath()", "full_signature": "@Test public void shouldParseRootPath()", "class_method_signature": "PathsTest.shouldParseRootPath()", "testcase": true, "constructor": false, "invocations": ["parse", "isTrue", "assertThat", "isRoot", "isFalse", "assertThat", "isSingle", "isEqualTo", "assertThat", "size"]}, "focal_class": {"identifier": "Paths", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern PATH_SEPARATOR_PATTERN = Pattern.compile(\"/\");", "modifier": "private static final", "type": "Pattern", "declarator": "PATH_SEPARATOR_PATTERN = Pattern.compile(\"/\")", "var_name": "PATH_SEPARATOR_PATTERN"}], "methods": [{"identifier": "parse", "parameters": "(String path, boolean resolveJsonPointerEscapes)", "modifiers": "static", "return": "Path", "signature": "Path parse(String path, boolean resolveJsonPointerEscapes)", "full_signature": "static Path parse(String path, boolean resolveJsonPointerEscapes)", "class_method_signature": "Paths.parse(String path, boolean resolveJsonPointerEscapes)", "testcase": false, "constructor": false}, {"identifier": "parseSegment", "parameters": "(String segment, boolean resolveJsonPointerEscapes)", "modifiers": "private static", "return": "String", "signature": "String parseSegment(String segment, boolean resolveJsonPointerEscapes)", "full_signature": "private static String parseSegment(String segment, boolean resolveJsonPointerEscapes)", "class_method_signature": "Paths.parseSegment(String segment, boolean resolveJsonPointerEscapes)", "testcase": false, "constructor": false}, {"identifier": "copyPathInto", "parameters": "(Path path, String[] segments, int start)", "modifiers": "static", "return": "int", "signature": "int copyPathInto(Path path, String[] segments, int start)", "full_signature": "static int copyPathInto(Path path, String[] segments, int start)", "class_method_signature": "Paths.copyPathInto(Path path, String[] segments, int start)", "testcase": false, "constructor": false}, {"identifier": "Paths", "parameters": "()", "modifiers": "private", "return": "", "signature": " Paths()", "full_signature": "private  Paths()", "class_method_signature": "Paths.Paths()", "testcase": false, "constructor": true}], "file": "debezium-core/src/main/java/io/debezium/document/Paths.java"}, "focal_method": {"identifier": "parse", "parameters": "(String path, boolean resolveJsonPointerEscapes)", "modifiers": "static", "return": "Path", "body": "static Path parse(String path, boolean resolveJsonPointerEscapes) {\n        // Remove leading and trailing whitespace and '/' characters ...\n        path = Strings.trim(path, (c) -> c < ' ' || c == '/');\n        if (path.length() == 0) {\n            return RootPath.INSTANCE;\n        }\n        String[] segments = PATH_SEPARATOR_PATTERN.split(path);\n        if (segments.length == 1) {\n            return new SingleSegmentPath(parseSegment(segments[0], resolveJsonPointerEscapes));\n        }\n        if (resolveJsonPointerEscapes) {\n            for (int i = 0; i != segments.length; ++i) {\n                segments[i] = parseSegment(segments[i], true);\n            }\n        }\n        return new MultiSegmentPath(segments);\n    }", "signature": "Path parse(String path, boolean resolveJsonPointerEscapes)", "full_signature": "static Path parse(String path, boolean resolveJsonPointerEscapes)", "class_method_signature": "Paths.parse(String path, boolean resolveJsonPointerEscapes)", "testcase": false, "constructor": false, "invocations": ["trim", "length", "split", "parseSegment", "parseSegment"]}, "repository": {"repo_id": 50205233, "url": "https://github.com/debezium/debezium", "stars": 2686, "created": "1/22/2016 8:17:05 PM +00:00", "updates": "2020-01-27T20:48:54+00:00", "fork": "False", "license": "licensed"}}