{"test_class": {"identifier": "OPeNDAPUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static GridDataset daymetGridDataSet;", "modifier": "static", "type": "GridDataset", "declarator": "daymetGridDataSet", "var_name": "daymetGridDataSet"}, {"original_string": "static GridDataset prismGridDataSet;", "modifier": "static", "type": "GridDataset", "declarator": "prismGridDataSet", "var_name": "prismGridDataSet"}, {"original_string": "static GridDataset ssebopetaGridDataSet;", "modifier": "static", "type": "GridDataset", "declarator": "ssebopetaGridDataSet", "var_name": "ssebopetaGridDataSet"}], "file": "gdp-common-utilities/src/test/java/gov/usgs/cida/gdp/utilities/OPeNDAPUtilsTest.java"}, "test_case": {"identifier": "prismVariableDimensionNameTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void prismVariableDimensionNameTest() {\n        String timeRangeString = \"[0:1:1417]\";\n        String xRangeString = \"[382:1:552]\";\n        String yRangeString = \"[213:1:312]\";\n       \n        \n        Map<String, String> dimensionVariableMapping = OPeNDAPUtils.getDimensionVariableNameRangeMapping(prismGridDataSet.getNetcdfFile().getVariables(),\n                xRangeString, yRangeString, timeRangeString);\n        \n        \n        assertNotNull(dimensionVariableMapping);\n        assertThat(dimensionVariableMapping.size(), is(equalTo(3)));\n        \n        // {time=[0:1:1417], lon=[382:1:552], lat=[213:1:312]}\n        assertTrue(dimensionVariableMapping.containsKey(\"time\"));\n        assertTrue(dimensionVariableMapping.get(\"time\").equals(timeRangeString));\n        assertTrue(dimensionVariableMapping.containsKey(\"lat\"));\n        assertTrue(dimensionVariableMapping.get(\"lat\").equals(yRangeString));\n        assertTrue(dimensionVariableMapping.containsKey(\"lon\"));\n        assertTrue(dimensionVariableMapping.get(\"lon\").equals(xRangeString));\n    }", "signature": "void prismVariableDimensionNameTest()", "full_signature": "@Test public void prismVariableDimensionNameTest()", "class_method_signature": "OPeNDAPUtilsTest.prismVariableDimensionNameTest()", "testcase": true, "constructor": false, "invocations": ["getDimensionVariableNameRangeMapping", "getVariables", "getNetcdfFile", "assertNotNull", "assertThat", "size", "is", "equalTo", "assertTrue", "containsKey", "assertTrue", "equals", "get", "assertTrue", "containsKey", "assertTrue", "equals", "get", "assertTrue", "containsKey", "assertTrue", "equals", "get"]}, "focal_class": {"identifier": "OPeNDAPUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int RANGE_STRIDE = 1;", "modifier": "public static final", "type": "int", "declarator": "RANGE_STRIDE = 1", "var_name": "RANGE_STRIDE"}, {"original_string": "public static final String PARAMETER_DECLARATOR = \"?\";", "modifier": "public static final", "type": "String", "declarator": "PARAMETER_DECLARATOR = \"?\"", "var_name": "PARAMETER_DECLARATOR"}, {"original_string": "public static final String RANGE_DELIMETER = \":\";", "modifier": "public static final", "type": "String", "declarator": "RANGE_DELIMETER = \":\"", "var_name": "RANGE_DELIMETER"}, {"original_string": "public static final String URI_DELIMETER = \",\";", "modifier": "public static final", "type": "String", "declarator": "URI_DELIMETER = \",\"", "var_name": "URI_DELIMETER"}, {"original_string": "public static final String OPENDAP_PROTO = \"dods:\";", "modifier": "public static final", "type": "String", "declarator": "OPENDAP_PROTO = \"dods:\"", "var_name": "OPENDAP_PROTO"}, {"original_string": "public static final String REQUEST_PROTO = \"http:\";", "modifier": "public static final", "type": "String", "declarator": "REQUEST_PROTO = \"http:\"", "var_name": "REQUEST_PROTO"}, {"original_string": "public static final List<String> REQUIRED_ATTRIBUTES = Arrays\n            .asList(\"grid_mapping\");", "modifier": "public static final", "type": "List<String>", "declarator": "REQUIRED_ATTRIBUTES = Arrays\n            .asList(\"grid_mapping\")", "var_name": "REQUIRED_ATTRIBUTES"}, {"original_string": "public static final String DESCRIPTION_HEADER = \"Content-Description\";", "modifier": "public static final", "type": "String", "declarator": "DESCRIPTION_HEADER = \"Content-Description\"", "var_name": "DESCRIPTION_HEADER"}], "methods": [{"identifier": "generateOpenDapURL", "parameters": "(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "modifiers": "public static", "return": "String", "signature": "String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "full_signature": "public static String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "class_method_signature": "OPeNDAPUtils.generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "testcase": false, "constructor": false}, {"identifier": "generateOpenDapURL", "parameters": "(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange,\n            OPeNDAPContentType contentType)", "modifiers": "public static", "return": "String", "signature": "String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange,\n            OPeNDAPContentType contentType)", "full_signature": "public static String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange,\n            OPeNDAPContentType contentType)", "class_method_signature": "OPeNDAPUtils.generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange,\n            OPeNDAPContentType contentType)", "testcase": false, "constructor": false}, {"identifier": "getDimensionRawNameRangeMapping", "parameters": "(List<?> gridVariableList,\n            String xRangeString, String yRangeString, String timeRangeString)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getDimensionRawNameRangeMapping(List<?> gridVariableList,\n            String xRangeString, String yRangeString, String timeRangeString)", "full_signature": "public static Map<String, String> getDimensionRawNameRangeMapping(List<?> gridVariableList,\n            String xRangeString, String yRangeString, String timeRangeString)", "class_method_signature": "OPeNDAPUtils.getDimensionRawNameRangeMapping(List<?> gridVariableList,\n            String xRangeString, String yRangeString, String timeRangeString)", "testcase": false, "constructor": false}, {"identifier": "getDimensionVariableNameRangeMapping", "parameters": "(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "full_signature": "public static Map<String, String> getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "class_method_signature": "OPeNDAPUtils.getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "testcase": false, "constructor": false}, {"identifier": "isOPeNDAP", "parameters": "(URI uri)", "modifiers": "public static", "return": "boolean", "signature": "boolean isOPeNDAP(URI uri)", "full_signature": "public static boolean isOPeNDAP(URI uri)", "class_method_signature": "OPeNDAPUtils.isOPeNDAP(URI uri)", "testcase": false, "constructor": false}], "file": "gdp-common-utilities/src/main/java/gov/usgs/cida/gdp/utilities/OPeNDAPUtils.java"}, "focal_method": {"identifier": "getDimensionVariableNameRangeMapping", "parameters": "(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString) {\n        Map<String, String> results = new HashMap<String, String>();\n\n        for (int i = 0; i < gridVariableList.size(); i++) {\n            Object variable = gridVariableList.get(i);\n\n            /*\n             * Check to see if this is a dimension. If so, which axis\n             */\n            if (variable instanceof CoordinateAxis1D) {\n                String varName = ((VariableDS) variable).getShortName();\n\n                switch (((CoordinateAxis1D) variable).getAxisType()) {\n                    case GeoX:\n                    case Lon: {\n                        /*\n                         * This is the x axis which corresponds to the Longitude or\n                         * GeoX dimension.\n                         */\n                        results.put(varName, xRangeString);\n                        break;\n                    }\n                    case GeoY:\n                    case Lat: {\n                        /*\n                         * This is the y axis which corresponds to the Latitude or\n                         * GeoY dimension.\n                         */\n                        results.put(varName, yRangeString);\n                        break;\n                    }\n                    case Time: {\n                        /*\n                         * This is the time axis\n                         */\n                        results.put(varName, timeRangeString);\n                        break;\n                    }\n                    default: {\n                        // do nothing\n                    }\n                }\n            }\n        }\n\n        return results;\n    }", "signature": "Map<String, String> getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "full_signature": "public static Map<String, String> getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "class_method_signature": "OPeNDAPUtils.getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "testcase": false, "constructor": false, "invocations": ["size", "get", "getShortName", "getAxisType", "put", "put", "put"]}, "repository": {"repo_id": 11799031, "url": "https://github.com/USGS-CIDA/geo-data-portal", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 9, "size": 178468, "license": "licensed"}}