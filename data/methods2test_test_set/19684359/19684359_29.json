{"test_class": {"identifier": "HttpTransportFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "util/src/test/java/com/google/cloud/hadoop/util/HttpTransportFactoryTest.java"}, "test_case": {"identifier": "testParseProxyAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testParseProxyAddress() throws Exception {\n    String address = \"foo-host:1234\";\n    URI expectedUri = getURI(null, \"foo-host\", 1234);\n    URI uri = HttpTransportFactory.parseProxyAddress(address);\n    assertThat(uri).isEqualTo(expectedUri);\n  }", "signature": "void testParseProxyAddress()", "full_signature": "@Test public void testParseProxyAddress()", "class_method_signature": "HttpTransportFactoryTest.testParseProxyAddress()", "testcase": true, "constructor": false, "invocations": ["getURI", "parseProxyAddress", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "HttpTransportFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final GoogleLogger logger = GoogleLogger.forEnclosingClass();", "modifier": "private static final", "type": "GoogleLogger", "declarator": "logger = GoogleLogger.forEnclosingClass()", "var_name": "logger"}, {"original_string": "public static final HttpTransportType DEFAULT_TRANSPORT_TYPE = HttpTransportType.JAVA_NET;", "modifier": "public static final", "type": "HttpTransportType", "declarator": "DEFAULT_TRANSPORT_TYPE = HttpTransportType.JAVA_NET", "var_name": "DEFAULT_TRANSPORT_TYPE"}], "methods": [{"identifier": "createHttpTransport", "parameters": "(HttpTransportType type)", "modifiers": "public static", "return": "HttpTransport", "signature": "HttpTransport createHttpTransport(HttpTransportType type)", "full_signature": "public static HttpTransport createHttpTransport(HttpTransportType type)", "class_method_signature": "HttpTransportFactory.createHttpTransport(HttpTransportType type)", "testcase": false, "constructor": false}, {"identifier": "createHttpTransport", "parameters": "(\n      HttpTransportType type,\n      @Nullable String proxyAddress,\n      @Nullable RedactedString proxyUsername,\n      @Nullable RedactedString proxyPassword)", "modifiers": "public static", "return": "HttpTransport", "signature": "HttpTransport createHttpTransport(\n      HttpTransportType type,\n      @Nullable String proxyAddress,\n      @Nullable RedactedString proxyUsername,\n      @Nullable RedactedString proxyPassword)", "full_signature": "public static HttpTransport createHttpTransport(\n      HttpTransportType type,\n      @Nullable String proxyAddress,\n      @Nullable RedactedString proxyUsername,\n      @Nullable RedactedString proxyPassword)", "class_method_signature": "HttpTransportFactory.createHttpTransport(\n      HttpTransportType type,\n      @Nullable String proxyAddress,\n      @Nullable RedactedString proxyUsername,\n      @Nullable RedactedString proxyPassword)", "testcase": false, "constructor": false}, {"identifier": "createApacheHttpTransport", "parameters": "(\n      @Nullable URI proxyUri, @Nullable Credentials proxyCredentials)", "modifiers": "public static", "return": "ApacheHttpTransport", "signature": "ApacheHttpTransport createApacheHttpTransport(\n      @Nullable URI proxyUri, @Nullable Credentials proxyCredentials)", "full_signature": "public static ApacheHttpTransport createApacheHttpTransport(\n      @Nullable URI proxyUri, @Nullable Credentials proxyCredentials)", "class_method_signature": "HttpTransportFactory.createApacheHttpTransport(\n      @Nullable URI proxyUri, @Nullable Credentials proxyCredentials)", "testcase": false, "constructor": false}, {"identifier": "createNetHttpTransport", "parameters": "(\n      @Nullable URI proxyUri, @Nullable PasswordAuthentication proxyAuth)", "modifiers": "public static", "return": "NetHttpTransport", "signature": "NetHttpTransport createNetHttpTransport(\n      @Nullable URI proxyUri, @Nullable PasswordAuthentication proxyAuth)", "full_signature": "public static NetHttpTransport createNetHttpTransport(\n      @Nullable URI proxyUri, @Nullable PasswordAuthentication proxyAuth)", "class_method_signature": "HttpTransportFactory.createNetHttpTransport(\n      @Nullable URI proxyUri, @Nullable PasswordAuthentication proxyAuth)", "testcase": false, "constructor": false}, {"identifier": "parseProxyAddress", "parameters": "(@Nullable String proxyAddress)", "modifiers": "@VisibleForTesting static", "return": "URI", "signature": "URI parseProxyAddress(@Nullable String proxyAddress)", "full_signature": "@VisibleForTesting static URI parseProxyAddress(@Nullable String proxyAddress)", "class_method_signature": "HttpTransportFactory.parseProxyAddress(@Nullable String proxyAddress)", "testcase": false, "constructor": false}], "file": "util/src/main/java/com/google/cloud/hadoop/util/HttpTransportFactory.java"}, "focal_method": {"identifier": "parseProxyAddress", "parameters": "(@Nullable String proxyAddress)", "modifiers": "@VisibleForTesting static", "return": "URI", "body": "@VisibleForTesting\n  static URI parseProxyAddress(@Nullable String proxyAddress) {\n    if (Strings.isNullOrEmpty(proxyAddress)) {\n      return null;\n    }\n    String uriString = (proxyAddress.contains(\"//\") ? \"\" : \"//\") + proxyAddress;\n    try {\n      URI uri = new URI(uriString);\n      String scheme = uri.getScheme();\n      String host = uri.getHost();\n      int port = uri.getPort();\n      checkArgument(\n          Strings.isNullOrEmpty(scheme) || scheme.matches(\"https?\"),\n          \"HTTP proxy address '%s' has invalid scheme '%s'.\", proxyAddress, scheme);\n      checkArgument(!Strings.isNullOrEmpty(host), \"Proxy address '%s' has no host.\", proxyAddress);\n      checkArgument(port != -1, \"Proxy address '%s' has no port.\", proxyAddress);\n      checkArgument(\n          uri.equals(new URI(scheme, null, host, port, null, null, null)),\n          \"Invalid proxy address '%s'.\", proxyAddress);\n      return uri;\n    } catch (URISyntaxException e) {\n      throw new IllegalArgumentException(\n          String.format(\"Invalid proxy address '%s'.\", proxyAddress), e);\n    }\n  }", "signature": "URI parseProxyAddress(@Nullable String proxyAddress)", "full_signature": "@VisibleForTesting static URI parseProxyAddress(@Nullable String proxyAddress)", "class_method_signature": "HttpTransportFactory.parseProxyAddress(@Nullable String proxyAddress)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "contains", "getScheme", "getHost", "getPort", "checkArgument", "isNullOrEmpty", "matches", "checkArgument", "isNullOrEmpty", "checkArgument", "checkArgument", "equals", "format"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}