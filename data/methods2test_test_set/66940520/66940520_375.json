{"test_class": {"identifier": "FileResourceCleanUpJobTest", "superclass": "extends IntegrationTestBase", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private FileResourceCleanUpJob cleanUpJob;", "modifier": "@Autowired\n    private", "type": "FileResourceCleanUpJob", "declarator": "cleanUpJob", "var_name": "cleanUpJob"}, {"original_string": "@Autowired\n    private SystemSettingManager systemSettingManager;", "modifier": "@Autowired\n    private", "type": "SystemSettingManager", "declarator": "systemSettingManager", "var_name": "systemSettingManager"}, {"original_string": "@Autowired\n    private FileResourceService fileResourceService;", "modifier": "@Autowired\n    private", "type": "FileResourceService", "declarator": "fileResourceService", "var_name": "fileResourceService"}, {"original_string": "@Autowired\n    private DataValueAuditService dataValueAuditService;", "modifier": "@Autowired\n    private", "type": "DataValueAuditService", "declarator": "dataValueAuditService", "var_name": "dataValueAuditService"}, {"original_string": "@Autowired\n    private DataValueService dataValueService;", "modifier": "@Autowired\n    private", "type": "DataValueService", "declarator": "dataValueService", "var_name": "dataValueService"}, {"original_string": "@Autowired\n    private DataElementService dataElementService;", "modifier": "@Autowired\n    private", "type": "DataElementService", "declarator": "dataElementService", "var_name": "dataElementService"}, {"original_string": "@Autowired\n    private OrganisationUnitService organisationUnitService;", "modifier": "@Autowired\n    private", "type": "OrganisationUnitService", "declarator": "organisationUnitService", "var_name": "organisationUnitService"}, {"original_string": "@Autowired\n    private PeriodService periodService;", "modifier": "@Autowired\n    private", "type": "PeriodService", "declarator": "periodService", "var_name": "periodService"}, {"original_string": "@Autowired\n    private ExternalFileResourceService externalFileResourceService;", "modifier": "@Autowired\n    private", "type": "ExternalFileResourceService", "declarator": "externalFileResourceService", "var_name": "externalFileResourceService"}, {"original_string": "public static Period PERIOD = createPeriod( PeriodType.getPeriodTypeByName( \"Monthly\" ), new Date(), new Date() );", "modifier": "public static", "type": "Period", "declarator": "PERIOD = createPeriod( PeriodType.getPeriodTypeByName( \"Monthly\" ), new Date(), new Date() )", "var_name": "PERIOD"}, {"original_string": "private DataValue dataValueA;", "modifier": "private", "type": "DataValue", "declarator": "dataValueA", "var_name": "dataValueA"}, {"original_string": "private DataValue dataValueB;", "modifier": "private", "type": "DataValue", "declarator": "dataValueB", "var_name": "dataValueB"}, {"original_string": "private byte[] content;", "modifier": "private", "type": "byte[]", "declarator": "content", "var_name": "content"}], "file": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/fileresource/FileResourceCleanUpJobTest.java"}, "test_case": {"identifier": "testFailedUpload", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n    @Ignore\n    public void testFailedUpload()\n    {\n        systemSettingManager.saveSystemSetting( SettingKey.FILE_RESOURCE_RETENTION_STRATEGY, FileResourceRetentionStrategy.THREE_MONTHS );\n\n        content = \"externalA\".getBytes();\n        ExternalFileResource ex = createExternal( 'A', content );\n\n        String uid = ex.getFileResource().getUid();\n        ex.getFileResource().setStorageStatus( FileResourceStorageStatus.PENDING );\n        fileResourceService.updateFileResource( ex.getFileResource() );\n\n        cleanUpJob.execute( null );\n\n        assertNull( externalFileResourceService.getExternalFileResourceByAccessToken( ex.getAccessToken() ) );\n        assertNull( fileResourceService.getFileResource( uid ) );\n    }", "signature": "void testFailedUpload()", "full_signature": "@Test @Ignore public void testFailedUpload()", "class_method_signature": "FileResourceCleanUpJobTest.testFailedUpload()", "testcase": true, "constructor": false, "invocations": ["saveSystemSetting", "getBytes", "createExternal", "getUid", "getFileResource", "setStorageStatus", "getFileResource", "updateFileResource", "getFileResource", "execute", "assertNull", "getExternalFileResourceByAccessToken", "getAccessToken", "assertNull", "getFileResource"]}, "focal_class": {"identifier": "FileResourceCleanUpJob", "superclass": "extends AbstractJob", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private FileResourceService fileResourceService;", "modifier": "@Autowired\n    private", "type": "FileResourceService", "declarator": "fileResourceService", "var_name": "fileResourceService"}, {"original_string": "@Autowired\n    private SystemSettingManager systemSettingManager;", "modifier": "@Autowired\n    private", "type": "SystemSettingManager", "declarator": "systemSettingManager", "var_name": "systemSettingManager"}, {"original_string": "@Autowired\n    private FileResourceContentStore fileResourceContentStore;", "modifier": "@Autowired\n    private", "type": "FileResourceContentStore", "declarator": "fileResourceContentStore", "var_name": "fileResourceContentStore"}], "methods": [{"identifier": "getJobType", "parameters": "()", "modifiers": "@Override public", "return": "JobType", "signature": "JobType getJobType()", "full_signature": "@Override public JobType getJobType()", "class_method_signature": "FileResourceCleanUpJob.getJobType()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "( JobConfiguration jobConfiguration )", "modifiers": "@Override public", "return": "void", "signature": "void execute( JobConfiguration jobConfiguration )", "full_signature": "@Override public void execute( JobConfiguration jobConfiguration )", "class_method_signature": "FileResourceCleanUpJob.execute( JobConfiguration jobConfiguration )", "testcase": false, "constructor": false}, {"identifier": "prettyPrint", "parameters": "( List<Pair<String, String>> list )", "modifiers": "private", "return": "String", "signature": "String prettyPrint( List<Pair<String, String>> list )", "full_signature": "private String prettyPrint( List<Pair<String, String>> list )", "class_method_signature": "FileResourceCleanUpJob.prettyPrint( List<Pair<String, String>> list )", "testcase": false, "constructor": false}, {"identifier": "isFileStored", "parameters": "( FileResource fileResource )", "modifiers": "private", "return": "boolean", "signature": "boolean isFileStored( FileResource fileResource )", "full_signature": "private boolean isFileStored( FileResource fileResource )", "class_method_signature": "FileResourceCleanUpJob.isFileStored( FileResource fileResource )", "testcase": false, "constructor": false}, {"identifier": "safeDelete", "parameters": "( FileResource fileResource )", "modifiers": "private", "return": "boolean", "signature": "boolean safeDelete( FileResource fileResource )", "full_signature": "private boolean safeDelete( FileResource fileResource )", "class_method_signature": "FileResourceCleanUpJob.safeDelete( FileResource fileResource )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/fileresource/FileResourceCleanUpJob.java"}, "focal_method": {"identifier": "execute", "parameters": "( JobConfiguration jobConfiguration )", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void execute( JobConfiguration jobConfiguration )\n    {\n        FileResourceRetentionStrategy retentionStrategy = (FileResourceRetentionStrategy) systemSettingManager\n            .getSystemSetting( SettingKey.FILE_RESOURCE_RETENTION_STRATEGY );\n\n        List<Pair<String, String>> deletedOrphans = new ArrayList<>();\n\n        List<Pair<String, String>> deletedAuditFiles = new ArrayList<>();\n\n        // Delete expired FRs\n        if ( !FileResourceRetentionStrategy.FOREVER.equals( retentionStrategy ) )\n        {\n            List<FileResource> expired = fileResourceService.getExpiredFileResources( retentionStrategy );\n            expired.forEach( this::safeDelete );\n            expired.forEach( fr -> deletedAuditFiles.add( ImmutablePair.of( fr.getName(), fr.getUid() ) ) );\n        }\n\n        // Delete failed uploads\n        fileResourceService.getOrphanedFileResources().stream()\n            .filter( fr -> !isFileStored( fr ) )\n            .filter( this::safeDelete )\n            .forEach( fr -> deletedOrphans.add( ImmutablePair.of( fr.getName(), fr.getUid() ) ) );\n\n        if ( !deletedOrphans.isEmpty() )\n        {\n            log.info( String.format( \"Deleted %d orphaned FileResources: %s\", deletedOrphans.size(),\n                prettyPrint( deletedOrphans ) ) );\n        }\n\n        if ( !deletedAuditFiles.isEmpty() )\n        {\n            log.info( String.format( \"Deleted %d expired FileResource audits: %s\", deletedAuditFiles.size(),\n                prettyPrint( deletedAuditFiles ) ) );\n        }\n    }", "signature": "void execute( JobConfiguration jobConfiguration )", "full_signature": "@Override public void execute( JobConfiguration jobConfiguration )", "class_method_signature": "FileResourceCleanUpJob.execute( JobConfiguration jobConfiguration )", "testcase": false, "constructor": false, "invocations": ["getSystemSetting", "equals", "getExpiredFileResources", "forEach", "forEach", "add", "of", "getName", "getUid", "forEach", "filter", "filter", "stream", "getOrphanedFileResources", "isFileStored", "add", "of", "getName", "getUid", "isEmpty", "info", "format", "size", "prettyPrint", "isEmpty", "info", "format", "size", "prettyPrint"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}