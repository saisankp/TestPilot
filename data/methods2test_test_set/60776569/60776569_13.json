{"test_class": {"identifier": "MainPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MainPresenter mMainPresenter;", "modifier": "private", "type": "MainPresenter", "declarator": "mMainPresenter", "var_name": "mMainPresenter"}, {"original_string": "private RxEventBus mEventBus;", "modifier": "private", "type": "RxEventBus", "declarator": "mEventBus", "var_name": "mEventBus"}, {"original_string": "@Mock MainMvpView mMockMainMvpView;", "modifier": "@Mock", "type": "MainMvpView", "declarator": "mMockMainMvpView", "var_name": "mMockMainMvpView"}, {"original_string": "@Mock DataManager mMockDataManager;", "modifier": "@Mock", "type": "DataManager", "declarator": "mMockDataManager", "var_name": "mMockDataManager"}, {"original_string": "@Rule\n    public final RxSchedulersOverrideRule mOverrideSchedulersRule = new RxSchedulersOverrideRule();", "modifier": "@Rule\n    public final", "type": "RxSchedulersOverrideRule", "declarator": "mOverrideSchedulersRule = new RxSchedulersOverrideRule()", "var_name": "mOverrideSchedulersRule"}], "file": "app/src/test/java/com/hitherejoe/mondroid/ui/main/MainPresenterTest.java"}, "test_case": {"identifier": "signOutLaunchesWelcomeActivity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void signOutLaunchesWelcomeActivity() {\n        stubDataManagerSignOut();\n        mMainPresenter.signOut();\n\n        verify(mMockMainMvpView).launchWelcomeActivity();\n    }", "signature": "void signOutLaunchesWelcomeActivity()", "full_signature": "@Test public void signOutLaunchesWelcomeActivity()", "class_method_signature": "MainPresenterTest.signOutLaunchesWelcomeActivity()", "testcase": true, "constructor": false, "invocations": ["stubDataManagerSignOut", "signOut", "launchWelcomeActivity", "verify"]}, "focal_class": {"identifier": "MainPresenter", "superclass": "extends BasePresenter<MainMvpView>", "interfaces": "", "fields": [{"original_string": "private final DataManager mDataManager;", "modifier": "private final", "type": "DataManager", "declarator": "mDataManager", "var_name": "mDataManager"}, {"original_string": "private final RxEventBus mEventBus;", "modifier": "private final", "type": "RxEventBus", "declarator": "mEventBus", "var_name": "mEventBus"}, {"original_string": "private CompositeSubscription mCompositeSubscription;", "modifier": "private", "type": "CompositeSubscription", "declarator": "mCompositeSubscription", "var_name": "mCompositeSubscription"}], "methods": [{"identifier": "MainPresenter", "parameters": "(DataManager dataManager, RxEventBus rxEventBus)", "modifiers": "@Inject public", "return": "", "signature": " MainPresenter(DataManager dataManager, RxEventBus rxEventBus)", "full_signature": "@Inject public  MainPresenter(DataManager dataManager, RxEventBus rxEventBus)", "class_method_signature": "MainPresenter.MainPresenter(DataManager dataManager, RxEventBus rxEventBus)", "testcase": false, "constructor": true}, {"identifier": "attachView", "parameters": "(MainMvpView mvpView)", "modifiers": "@Override public", "return": "void", "signature": "void attachView(MainMvpView mvpView)", "full_signature": "@Override public void attachView(MainMvpView mvpView)", "class_method_signature": "MainPresenter.attachView(MainMvpView mvpView)", "testcase": false, "constructor": false}, {"identifier": "detachView", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void detachView()", "full_signature": "@Override public void detachView()", "class_method_signature": "MainPresenter.detachView()", "testcase": false, "constructor": false}, {"identifier": "getAccountData", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void getAccountData()", "full_signature": "public void getAccountData()", "class_method_signature": "MainPresenter.getAccountData()", "testcase": false, "constructor": false}, {"identifier": "signOut", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void signOut()", "full_signature": "public void signOut()", "class_method_signature": "MainPresenter.signOut()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/hitherejoe/mondroid/ui/main/MainPresenter.java"}, "focal_method": {"identifier": "signOut", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void signOut() {\n        checkViewAttached();\n        mDataManager.signOut()\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribeOn(Schedulers.io())\n                .subscribe(new Completable.CompletableSubscriber() {\n                    @Override\n                    public void onCompleted() {\n                        getMvpView().launchWelcomeActivity();\n                    }\n\n                    @Override\n                    public void onError(Throwable error) {\n                        getMvpView().launchWelcomeActivity();\n                        Timber.e(error, \"There was an error performing sign out\");\n                    }\n\n                    @Override\n                    public void onSubscribe(Subscription subscription) {\n                        mCompositeSubscription.add(subscription);\n                    }\n                });\n    }", "signature": "void signOut()", "full_signature": "public void signOut()", "class_method_signature": "MainPresenter.signOut()", "testcase": false, "constructor": false, "invocations": ["checkViewAttached", "subscribe", "subscribeOn", "observeOn", "signOut", "mainThread", "io", "launchWelcomeActivity", "getMvpView", "launchWelcomeActivity", "getMvpView", "e", "add"]}, "repository": {"repo_id": 60776569, "url": "https://github.com/hitherejoe/Mondroid", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 138, "size": 1756, "license": "GNU General Public License v3.0"}}