{"test_class": {"identifier": "HttpContextFactoryServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RESOURCE = \"resource\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE = \"resource\"", "var_name": "RESOURCE"}, {"original_string": "private HttpContextFactoryServiceImpl httpContextFactoryService;", "modifier": "private", "type": "HttpContextFactoryServiceImpl", "declarator": "httpContextFactoryService", "var_name": "httpContextFactoryService"}, {"original_string": "private @Mock Bundle bundle;", "modifier": "private @Mock", "type": "Bundle", "declarator": "bundle", "var_name": "bundle"}, {"original_string": "private @Mock WrappingHttpContext httpContext;", "modifier": "private @Mock", "type": "WrappingHttpContext", "declarator": "httpContext", "var_name": "httpContext"}], "file": "bundles/org.openhab.core.io.http/src/test/java/org/openhab/core/io/http/internal/HttpContextFactoryServiceImplTest.java"}, "test_case": {"identifier": "httpContextShouldCallgetResourceOnBundle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void httpContextShouldCallgetResourceOnBundle() {\n        HttpContext context = httpContextFactoryService.createDefaultHttpContext(bundle);\n        context.getResource(RESOURCE);\n\n        verify(httpContext).wrap(bundle);\n        verify(bundle).getResource(RESOURCE);\n    }", "signature": "void httpContextShouldCallgetResourceOnBundle()", "full_signature": "@Test public void httpContextShouldCallgetResourceOnBundle()", "class_method_signature": "HttpContextFactoryServiceImplTest.httpContextShouldCallgetResourceOnBundle()", "testcase": true, "constructor": false, "invocations": ["createDefaultHttpContext", "getResource", "wrap", "verify", "getResource", "verify"]}, "focal_class": {"identifier": "HttpContextFactoryServiceImpl", "superclass": "", "interfaces": "implements HttpContextFactoryService", "fields": [{"original_string": "private WrappingHttpContext httpContext;", "modifier": "private", "type": "WrappingHttpContext", "declarator": "httpContext", "var_name": "httpContext"}], "methods": [{"identifier": "createDefaultHttpContext", "parameters": "(Bundle bundle)", "modifiers": "@Override public", "return": "HttpContext", "signature": "HttpContext createDefaultHttpContext(Bundle bundle)", "full_signature": "@Override public HttpContext createDefaultHttpContext(Bundle bundle)", "class_method_signature": "HttpContextFactoryServiceImpl.createDefaultHttpContext(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "setHttpContext", "parameters": "(WrappingHttpContext httpContext)", "modifiers": "@Reference(policy = ReferencePolicy.DYNAMIC) public", "return": "void", "signature": "void setHttpContext(WrappingHttpContext httpContext)", "full_signature": "@Reference(policy = ReferencePolicy.DYNAMIC) public void setHttpContext(WrappingHttpContext httpContext)", "class_method_signature": "HttpContextFactoryServiceImpl.setHttpContext(WrappingHttpContext httpContext)", "testcase": false, "constructor": false}, {"identifier": "unsetHttpContext", "parameters": "(WrappingHttpContext httpContext)", "modifiers": "public", "return": "void", "signature": "void unsetHttpContext(WrappingHttpContext httpContext)", "full_signature": "public void unsetHttpContext(WrappingHttpContext httpContext)", "class_method_signature": "HttpContextFactoryServiceImpl.unsetHttpContext(WrappingHttpContext httpContext)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.io.http/src/main/java/org/openhab/core/io/http/internal/HttpContextFactoryServiceImpl.java"}, "focal_method": {"identifier": "createDefaultHttpContext", "parameters": "(Bundle bundle)", "modifiers": "@Override public", "return": "HttpContext", "body": "@Override\n    public HttpContext createDefaultHttpContext(Bundle bundle) {\n        return httpContext.wrap(bundle);\n    }", "signature": "HttpContext createDefaultHttpContext(Bundle bundle)", "full_signature": "@Override public HttpContext createDefaultHttpContext(Bundle bundle)", "class_method_signature": "HttpContextFactoryServiceImpl.createDefaultHttpContext(Bundle bundle)", "testcase": false, "constructor": false, "invocations": ["wrap"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}