{"test_class": {"identifier": "WeatherWebApiTest", "superclass": "", "interfaces": "", "fields": [], "file": "aula34-reactive-model/src/test/java/org/isel/mpd/weather/WeatherWebApiTest.java"}, "test_case": {"identifier": "pastWeatherToObservable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void pastWeatherToObservable() throws IOException {\n        CompletableFuture<Stream<WeatherInfo>> infos = new WeatherWebApi()\n            .pastWeather(37.017, -7.933, parse(\"2019-02-01\"), parse(\"2019-03-28\"));\n        Observable<WeatherInfo> wis = Observable\n            .fromFuture(infos)\n            .flatMap(strm -> fromIterable(strm::iterator));\n        WeatherInfo wi = wis.firstElement().blockingGet();\n        assertEquals(parse(\"2019-02-01\"), wi.getDate());\n        assertEquals(14, wi.getTempC());\n        assertEquals(13.8, wi.getPrecipMM());\n        assertEquals(\"Patchy rain possible\", wi.getDesc());\n    }", "signature": "void pastWeatherToObservable()", "full_signature": "@Test public void pastWeatherToObservable()", "class_method_signature": "WeatherWebApiTest.pastWeatherToObservable()", "testcase": true, "constructor": false, "invocations": ["pastWeather", "parse", "parse", "flatMap", "fromFuture", "fromIterable", "blockingGet", "firstElement", "assertEquals", "parse", "getDate", "assertEquals", "getTempC", "assertEquals", "getPrecipMM", "assertEquals", "getDesc"]}, "focal_class": {"identifier": "WeatherWebApi", "superclass": "", "interfaces": "implements AutoCloseable", "fields": [{"original_string": "final String HOST = \"http://api.worldweatheronline.com/premium/v1/\";", "modifier": "final", "type": "String", "declarator": "HOST = \"http://api.worldweatheronline.com/premium/v1/\"", "var_name": "HOST"}, {"original_string": "final String PATH_PAST_WEATHER = \"past-weather.ashx?q=%s,%s&date=%s&enddate=%s&tp=24&format=json&key=%s\";", "modifier": "final", "type": "String", "declarator": "PATH_PAST_WEATHER = \"past-weather.ashx?q=%s,%s&date=%s&enddate=%s&tp=24&format=json&key=%s\"", "var_name": "PATH_PAST_WEATHER"}, {"original_string": "final String PATH_SEARCH = \"search.ashx?query=%s&format=json&key=%s\";", "modifier": "final", "type": "String", "declarator": "PATH_SEARCH = \"search.ashx?query=%s&format=json&key=%s\"", "var_name": "PATH_SEARCH"}, {"original_string": "final String WEATHER_KEY = \"da5f2b8cc0a84eef8c6173655190905\";", "modifier": "final", "type": "String", "declarator": "WEATHER_KEY = \"da5f2b8cc0a84eef8c6173655190905\"", "var_name": "WEATHER_KEY"}, {"original_string": "private final Gson gson = new Gson();", "modifier": "private final", "type": "Gson", "declarator": "gson = new Gson()", "var_name": "gson"}, {"original_string": "private final AsyncHttpClient ahc = Dsl.asyncHttpClient();", "modifier": "private final", "type": "AsyncHttpClient", "declarator": "ahc = Dsl.asyncHttpClient()", "var_name": "ahc"}], "methods": [{"identifier": "pastWeather", "parameters": "(double lat, double log, LocalDate from, LocalDate to)", "modifiers": "public", "return": "CompletableFuture<Stream<WeatherInfo>>", "signature": "CompletableFuture<Stream<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "full_signature": "public CompletableFuture<Stream<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "class_method_signature": "WeatherWebApi.pastWeather(double lat, double log, LocalDate from, LocalDate to)", "testcase": false, "constructor": false}, {"identifier": "fromDtoToWeatherInfo", "parameters": "(PastWeatherDto dto)", "modifiers": "private static", "return": "Stream<WeatherInfo>", "signature": "Stream<WeatherInfo> fromDtoToWeatherInfo(PastWeatherDto dto)", "full_signature": "private static Stream<WeatherInfo> fromDtoToWeatherInfo(PastWeatherDto dto)", "class_method_signature": "WeatherWebApi.fromDtoToWeatherInfo(PastWeatherDto dto)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "WeatherWebApi.close()", "testcase": false, "constructor": false}], "file": "aula34-reactive-model/src/main/java/org/isel/mpd/weather/WeatherWebApi.java"}, "focal_method": {"identifier": "pastWeather", "parameters": "(double lat, double log, LocalDate from, LocalDate to)", "modifiers": "public", "return": "CompletableFuture<Stream<WeatherInfo>>", "body": "public CompletableFuture<Stream<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to) throws IOException {\n        String path = HOST + String.format(PATH_PAST_WEATHER, lat, log, from, to, WEATHER_KEY);\n        System.out.println(path);\n        return ahc\n            .prepareGet(path)\n            .execute()\n            .toCompletableFuture()\n            .thenApply(Response::getResponseBody)\n            .thenApply(body -> {\n                PastWeatherDto dto = gson.fromJson(body, PastWeatherDto.class);\n                return fromDtoToWeatherInfo(dto);\n            });\n    }", "signature": "CompletableFuture<Stream<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "full_signature": "public CompletableFuture<Stream<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "class_method_signature": "WeatherWebApi.pastWeather(double lat, double log, LocalDate from, LocalDate to)", "testcase": false, "constructor": false, "invocations": ["format", "println", "thenApply", "thenApply", "toCompletableFuture", "execute", "prepareGet", "fromJson", "fromDtoToWeatherInfo"]}, "repository": {"repo_id": 171326919, "url": "https://github.com/isel-leic-mpd/mpd-2019-i41n", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 13, "size": 404, "license": "licensed"}}