{"test_class": {"identifier": "OverlapWeightFunctionTest", "superclass": "", "interfaces": "", "fields": [], "file": "mubench/src/test/java/de/tu_darmstadt/stg/mudetect/ranking/OverlapWeightFunctionTest.java"}, "test_case": {"identifier": "considersMissingNodes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void considersMissingNodes() {\n        TestAUGBuilder targetBuilder = buildAUG().withActionNode(\"a\");\n        TestAUGBuilder patternBuilder = extend(targetBuilder).withActionNode(\"b\");\n        Overlap violation = buildOverlap(patternBuilder, targetBuilder).withNode(\"a\", \"a\").build();\n        ViolationWeightFunction weightFunction = new OverlapWeightFunction();\n\n        double weight = weightFunction.getWeight(violation, null, null);\n\n        assertThat(weight, is(0.5));\n    }", "signature": "void considersMissingNodes()", "full_signature": "@Test public void considersMissingNodes()", "class_method_signature": "OverlapWeightFunctionTest.considersMissingNodes()", "testcase": true, "constructor": false, "invocations": ["withActionNode", "buildAUG", "withActionNode", "extend", "build", "withNode", "buildOverlap", "getWeight", "assertThat", "is"]}, "focal_class": {"identifier": "OverlapWeightFunction", "superclass": "", "interfaces": "implements ViolationWeightFunction", "fields": [], "methods": [{"identifier": "getWeight", "parameters": "(Overlap violation, Overlaps overlaps, Model model)", "modifiers": "@Override public", "return": "double", "signature": "double getWeight(Overlap violation, Overlaps overlaps, Model model)", "full_signature": "@Override public double getWeight(Overlap violation, Overlaps overlaps, Model model)", "class_method_signature": "OverlapWeightFunction.getWeight(Overlap violation, Overlaps overlaps, Model model)", "testcase": false, "constructor": false}, {"identifier": "getFormula", "parameters": "(Overlap violation, Overlaps overlaps, Model model)", "modifiers": "public", "return": "String", "signature": "String getFormula(Overlap violation, Overlaps overlaps, Model model)", "full_signature": "public String getFormula(Overlap violation, Overlaps overlaps, Model model)", "class_method_signature": "OverlapWeightFunction.getFormula(Overlap violation, Overlaps overlaps, Model model)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "OverlapWeightFunction.getId()", "testcase": false, "constructor": false}], "file": "mubench/src/main/java/de/tu_darmstadt/stg/mudetect/ranking/OverlapWeightFunction.java"}, "focal_method": {"identifier": "getWeight", "parameters": "(Overlap violation, Overlaps overlaps, Model model)", "modifiers": "@Override public", "return": "double", "body": "@Override\n    public double getWeight(Overlap violation, Overlaps overlaps, Model model) {\n        int violationSize = violation.getSize();\n        int patternSize = violation.getPattern().getSize();\n        return violationSize / (float) patternSize;\n    }", "signature": "double getWeight(Overlap violation, Overlaps overlaps, Model model)", "full_signature": "@Override public double getWeight(Overlap violation, Overlaps overlaps, Model model)", "class_method_signature": "OverlapWeightFunction.getWeight(Overlap violation, Overlaps overlaps, Model model)", "testcase": false, "constructor": false, "invocations": ["getSize", "getSize", "getPattern"]}, "repository": {"repo_id": 99890719, "url": "https://github.com/stg-tud/MUDetect", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 5, "size": 11835, "license": "licensed"}}