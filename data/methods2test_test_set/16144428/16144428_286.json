{"test_class": {"identifier": "OAuthApiConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONSUMER_KEY = \"consumer_key\";", "modifier": "private static final", "type": "String", "declarator": "CONSUMER_KEY = \"consumer_key\"", "var_name": "CONSUMER_KEY"}, {"original_string": "private static final String CONSUMER_SECRET = \"consumer_secret\";", "modifier": "private static final", "type": "String", "declarator": "CONSUMER_SECRET = \"consumer_secret\"", "var_name": "CONSUMER_SECRET"}, {"original_string": "private static final String ACCESS_TOKEN = \"access_token\";", "modifier": "private static final", "type": "String", "declarator": "ACCESS_TOKEN = \"access_token\"", "var_name": "ACCESS_TOKEN"}, {"original_string": "private static final String ACCESS_SECRET = \"access_secret\";", "modifier": "private static final", "type": "String", "declarator": "ACCESS_SECRET = \"access_secret\"", "var_name": "ACCESS_SECRET"}, {"original_string": "private static MockWebServer server;", "modifier": "private static", "type": "MockWebServer", "declarator": "server", "var_name": "server"}, {"original_string": "private OAuthApiConnection connection;", "modifier": "private", "type": "OAuthApiConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private final ObjectMapper mapper = new ObjectMapper();", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private final String NOT_LOGGED_IN_SERIALIZED = \"{\\\"baseUrl\\\":\\\"\" + server.url(\"/w/api.php\") + \"\\\",\" +\n            \"\\\"consumerKey\\\":null,\" +\n            \"\\\"consumerSecret\\\":null,\" +\n            \"\\\"accessToken\\\":null,\" +\n            \"\\\"accessSecret\\\":null,\" +\n            \"\\\"username\\\":\\\"\\\",\" +\n            \"\\\"loggedIn\\\":false,\" +\n            \"\\\"tokens\\\":{},\" +\n            \"\\\"connectTimeout\\\":-1,\" +\n            \"\\\"readTimeout\\\":-1}\";", "modifier": "private final", "type": "String", "declarator": "NOT_LOGGED_IN_SERIALIZED = \"{\\\"baseUrl\\\":\\\"\" + server.url(\"/w/api.php\") + \"\\\",\" +\n            \"\\\"consumerKey\\\":null,\" +\n            \"\\\"consumerSecret\\\":null,\" +\n            \"\\\"accessToken\\\":null,\" +\n            \"\\\"accessSecret\\\":null,\" +\n            \"\\\"username\\\":\\\"\\\",\" +\n            \"\\\"loggedIn\\\":false,\" +\n            \"\\\"tokens\\\":{},\" +\n            \"\\\"connectTimeout\\\":-1,\" +\n            \"\\\"readTimeout\\\":-1}\"", "var_name": "NOT_LOGGED_IN_SERIALIZED"}, {"original_string": "private final String LOGGED_IN_SERIALIZED = \"{\\\"baseUrl\\\":\\\"\" + server.url(\"/w/api.php\") + \"\\\",\" +\n            \"\\\"consumerKey\\\":\\\"consumer_key\\\",\" +\n            \"\\\"consumerSecret\\\":\\\"consumer_secret\\\",\" +\n            \"\\\"accessToken\\\":\\\"access_token\\\",\" +\n            \"\\\"accessSecret\\\":\\\"access_secret\\\",\" +\n            \"\\\"username\\\":\\\"foo\\\",\" +\n            \"\\\"loggedIn\\\":true,\" +\n            \"\\\"tokens\\\":{},\" +\n            \"\\\"connectTimeout\\\":-1,\" +\n            \"\\\"readTimeout\\\":-1}\";", "modifier": "private final", "type": "String", "declarator": "LOGGED_IN_SERIALIZED = \"{\\\"baseUrl\\\":\\\"\" + server.url(\"/w/api.php\") + \"\\\",\" +\n            \"\\\"consumerKey\\\":\\\"consumer_key\\\",\" +\n            \"\\\"consumerSecret\\\":\\\"consumer_secret\\\",\" +\n            \"\\\"accessToken\\\":\\\"access_token\\\",\" +\n            \"\\\"accessSecret\\\":\\\"access_secret\\\",\" +\n            \"\\\"username\\\":\\\"foo\\\",\" +\n            \"\\\"loggedIn\\\":true,\" +\n            \"\\\"tokens\\\":{},\" +\n            \"\\\"connectTimeout\\\":-1,\" +\n            \"\\\"readTimeout\\\":-1}\"", "var_name": "LOGGED_IN_SERIALIZED"}], "file": "wdtk-wikibaseapi/src/test/java/org/wikidata/wdtk/wikibaseapi/OAuthApiConnectionTest.java"}, "test_case": {"identifier": "testLogout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLogout() throws IOException, InterruptedException {\n        assertTrue(connection.isLoggedIn());\n        assertEquals(\"foo\", connection.getCurrentUser());\n\n        connection.logout();\n        assertEquals(\"\", connection.getCurrentUser());\n        assertFalse(connection.isLoggedIn());\n        assertEquals(\"\", connection.getCurrentUser());\n\n        RecordedRequest request = server.takeRequest();\n        assertNotNull(request.getHeader(\"Authorization\"));\n    }", "signature": "void testLogout()", "full_signature": "@Test public void testLogout()", "class_method_signature": "OAuthApiConnectionTest.testLogout()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isLoggedIn", "assertEquals", "getCurrentUser", "logout", "assertEquals", "getCurrentUser", "assertFalse", "isLoggedIn", "assertEquals", "getCurrentUser", "takeRequest", "assertNotNull", "getHeader"]}, "focal_class": {"identifier": "OAuthApiConnection", "superclass": "extends ApiConnection", "interfaces": "", "fields": [{"original_string": "private String consumerKey;", "modifier": "private", "type": "String", "declarator": "consumerKey", "var_name": "consumerKey"}, {"original_string": "private String consumerSecret;", "modifier": "private", "type": "String", "declarator": "consumerSecret", "var_name": "consumerSecret"}, {"original_string": "private String accessToken;", "modifier": "private", "type": "String", "declarator": "accessToken", "var_name": "accessToken"}, {"original_string": "private String accessSecret;", "modifier": "private", "type": "String", "declarator": "accessSecret", "var_name": "accessSecret"}], "methods": [{"identifier": "OAuthApiConnection", "parameters": "(String apiBaseUrl,\n                              String consumerKey,\n                              String consumerSecret,\n                              String accessToken,\n                              String accessSecret)", "modifiers": "public", "return": "", "signature": " OAuthApiConnection(String apiBaseUrl,\n                              String consumerKey,\n                              String consumerSecret,\n                              String accessToken,\n                              String accessSecret)", "full_signature": "public  OAuthApiConnection(String apiBaseUrl,\n                              String consumerKey,\n                              String consumerSecret,\n                              String accessToken,\n                              String accessSecret)", "class_method_signature": "OAuthApiConnection.OAuthApiConnection(String apiBaseUrl,\n                              String consumerKey,\n                              String consumerSecret,\n                              String accessToken,\n                              String accessSecret)", "testcase": false, "constructor": true}, {"identifier": "OAuthApiConnection", "parameters": "(\n            @JsonProperty(\"baseUrl\") String apiBaseUrl,\n            @JsonProperty(\"consumerKey\") String consumerKey,\n            @JsonProperty(\"consumerSecret\") String consumerSecret,\n            @JsonProperty(\"accessToken\") String accessToken,\n            @JsonProperty(\"accessSecret\") String accessSecret,\n            @JsonProperty(\"username\") String username,\n            @JsonProperty(\"loggedIn\") boolean loggedIn,\n            @JsonProperty(\"tokens\") Map<String, String> tokens,\n            @JsonProperty(\"connectTimeout\") int connectTimeout,\n            @JsonProperty(\"readTimeout\") int readTimeout)", "modifiers": "@JsonCreator protected", "return": "", "signature": " OAuthApiConnection(\n            @JsonProperty(\"baseUrl\") String apiBaseUrl,\n            @JsonProperty(\"consumerKey\") String consumerKey,\n            @JsonProperty(\"consumerSecret\") String consumerSecret,\n            @JsonProperty(\"accessToken\") String accessToken,\n            @JsonProperty(\"accessSecret\") String accessSecret,\n            @JsonProperty(\"username\") String username,\n            @JsonProperty(\"loggedIn\") boolean loggedIn,\n            @JsonProperty(\"tokens\") Map<String, String> tokens,\n            @JsonProperty(\"connectTimeout\") int connectTimeout,\n            @JsonProperty(\"readTimeout\") int readTimeout)", "full_signature": "@JsonCreator protected  OAuthApiConnection(\n            @JsonProperty(\"baseUrl\") String apiBaseUrl,\n            @JsonProperty(\"consumerKey\") String consumerKey,\n            @JsonProperty(\"consumerSecret\") String consumerSecret,\n            @JsonProperty(\"accessToken\") String accessToken,\n            @JsonProperty(\"accessSecret\") String accessSecret,\n            @JsonProperty(\"username\") String username,\n            @JsonProperty(\"loggedIn\") boolean loggedIn,\n            @JsonProperty(\"tokens\") Map<String, String> tokens,\n            @JsonProperty(\"connectTimeout\") int connectTimeout,\n            @JsonProperty(\"readTimeout\") int readTimeout)", "class_method_signature": "OAuthApiConnection.OAuthApiConnection(\n            @JsonProperty(\"baseUrl\") String apiBaseUrl,\n            @JsonProperty(\"consumerKey\") String consumerKey,\n            @JsonProperty(\"consumerSecret\") String consumerSecret,\n            @JsonProperty(\"accessToken\") String accessToken,\n            @JsonProperty(\"accessSecret\") String accessSecret,\n            @JsonProperty(\"username\") String username,\n            @JsonProperty(\"loggedIn\") boolean loggedIn,\n            @JsonProperty(\"tokens\") Map<String, String> tokens,\n            @JsonProperty(\"connectTimeout\") int connectTimeout,\n            @JsonProperty(\"readTimeout\") int readTimeout)", "testcase": false, "constructor": true}, {"identifier": "getClientBuilder", "parameters": "()", "modifiers": "@Override protected", "return": "OkHttpClient.Builder", "signature": "OkHttpClient.Builder getClientBuilder()", "full_signature": "@Override protected OkHttpClient.Builder getClientBuilder()", "class_method_signature": "OAuthApiConnection.getClientBuilder()", "testcase": false, "constructor": false}, {"identifier": "logout", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void logout()", "full_signature": "@Override public void logout()", "class_method_signature": "OAuthApiConnection.logout()", "testcase": false, "constructor": false}, {"identifier": "checkCredentials", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void checkCredentials()", "full_signature": "@Override public void checkCredentials()", "class_method_signature": "OAuthApiConnection.checkCredentials()", "testcase": false, "constructor": false}, {"identifier": "getCurrentUser", "parameters": "()", "modifiers": "@Override @JsonProperty(\"username\") public", "return": "String", "signature": "String getCurrentUser()", "full_signature": "@Override @JsonProperty(\"username\") public String getCurrentUser()", "class_method_signature": "OAuthApiConnection.getCurrentUser()", "testcase": false, "constructor": false}, {"identifier": "getConsumerKey", "parameters": "()", "modifiers": "@JsonProperty(\"consumerKey\") public", "return": "String", "signature": "String getConsumerKey()", "full_signature": "@JsonProperty(\"consumerKey\") public String getConsumerKey()", "class_method_signature": "OAuthApiConnection.getConsumerKey()", "testcase": false, "constructor": false}, {"identifier": "getConsumerSecret", "parameters": "()", "modifiers": "@JsonProperty(\"consumerSecret\") public", "return": "String", "signature": "String getConsumerSecret()", "full_signature": "@JsonProperty(\"consumerSecret\") public String getConsumerSecret()", "class_method_signature": "OAuthApiConnection.getConsumerSecret()", "testcase": false, "constructor": false}, {"identifier": "getAccessToken", "parameters": "()", "modifiers": "@JsonProperty(\"accessToken\") public", "return": "String", "signature": "String getAccessToken()", "full_signature": "@JsonProperty(\"accessToken\") public String getAccessToken()", "class_method_signature": "OAuthApiConnection.getAccessToken()", "testcase": false, "constructor": false}, {"identifier": "getAccessSecret", "parameters": "()", "modifiers": "@JsonProperty(\"accessSecret\") public", "return": "String", "signature": "String getAccessSecret()", "full_signature": "@JsonProperty(\"accessSecret\") public String getAccessSecret()", "class_method_signature": "OAuthApiConnection.getAccessSecret()", "testcase": false, "constructor": false}], "file": "wdtk-wikibaseapi/src/main/java/org/wikidata/wdtk/wikibaseapi/OAuthApiConnection.java"}, "focal_method": {"identifier": "logout", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void logout() {\n        consumerKey = null;\n        consumerSecret = null;\n        accessToken = null;\n        accessSecret = null;\n        username = \"\";\n        loggedIn = false;\n    }", "signature": "void logout()", "full_signature": "@Override public void logout()", "class_method_signature": "OAuthApiConnection.logout()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}