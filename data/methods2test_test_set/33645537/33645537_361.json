{"test_class": {"identifier": "AreAnagramsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AreAnagrams areAnagrams;", "modifier": "private", "type": "AreAnagrams", "declarator": "areAnagrams", "var_name": "areAnagrams"}], "file": "algs/src/test/java/com/github/pedrovgs/problem29/AreAnagramsTest.java"}, "test_case": {"identifier": "shouldReturnTrueIfBothWordsAreEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReturnTrueIfBothWordsAreEmpty() {\n    assertTrue(areAnagrams.check(\"\", \"\"));\n  }", "signature": "void shouldReturnTrueIfBothWordsAreEmpty()", "full_signature": "@Test public void shouldReturnTrueIfBothWordsAreEmpty()", "class_method_signature": "AreAnagramsTest.shouldReturnTrueIfBothWordsAreEmpty()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "check"]}, "focal_class": {"identifier": "AreAnagrams", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "check", "parameters": "(String a, String b)", "modifiers": "public", "return": "boolean", "signature": "boolean check(String a, String b)", "full_signature": "public boolean check(String a, String b)", "class_method_signature": "AreAnagrams.check(String a, String b)", "testcase": false, "constructor": false}, {"identifier": "getSumOfArray", "parameters": "(int[] array)", "modifiers": "private static", "return": "int", "signature": "int getSumOfArray(int[] array)", "full_signature": "private static int getSumOfArray(int[] array)", "class_method_signature": "AreAnagrams.getSumOfArray(int[] array)", "testcase": false, "constructor": false}, {"identifier": "getLettersAsArray", "parameters": "(String word)", "modifiers": "private static", "return": "int[]", "signature": "int[] getLettersAsArray(String word)", "full_signature": "private static int[] getLettersAsArray(String word)", "class_method_signature": "AreAnagrams.getLettersAsArray(String word)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem29/AreAnagrams.java"}, "focal_method": {"identifier": "check", "parameters": "(String a, String b)", "modifiers": "public", "return": "boolean", "body": "public boolean check(String a, String b) {\n    if (a == null || b == null) {\n      throw new IllegalArgumentException(\"You can't use null Strings as input.\");\n    }\n    if (a.length() != b.length()) {\n      return false;\n    }\n    int[] lettersA = getLettersAsArray(a);\n    int[] lettersB = getLettersAsArray(b);\n\n    int valuesA = getSumOfArray(lettersA);\n    int valuesB = getSumOfArray(lettersB);\n\n    return valuesA == valuesB;\n  }", "signature": "boolean check(String a, String b)", "full_signature": "public boolean check(String a, String b)", "class_method_signature": "AreAnagrams.check(String a, String b)", "testcase": false, "constructor": false, "invocations": ["length", "length", "getLettersAsArray", "getLettersAsArray", "getSumOfArray", "getSumOfArray"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}