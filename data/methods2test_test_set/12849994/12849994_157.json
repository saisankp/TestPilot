{"test_class": {"identifier": "LTETFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "LTETFilter ltetFilter;", "modifier": "", "type": "LTETFilter", "declarator": "ltetFilter", "var_name": "ltetFilter"}, {"original_string": "@Mock\n  Comparable comparable;", "modifier": "@Mock", "type": "Comparable", "declarator": "comparable", "var_name": "comparable"}], "file": "imcache-core/src/test/java/com/cetsoft/imcache/cache/search/filter/LTETFilterTest.java"}, "test_case": {"identifier": "filter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void filter() {\n    List<Object> objects = new ArrayList<Object>();\n    objects.add(comparable);\n    objects.add(comparable);\n    doReturn(0).doReturn(-1).when(comparable).compareTo(any());\n    doReturn(comparable).when(ltetFilter).getAttributeValue(comparable);\n    List<Object> actualObjects = ltetFilter.filter(objects);\n    assertEquals(comparable, actualObjects.get(0));\n    assertEquals(comparable, actualObjects.get(1));\n  }", "signature": "void filter()", "full_signature": "@Test public void filter()", "class_method_signature": "LTETFilterTest.filter()", "testcase": true, "constructor": false, "invocations": ["add", "add", "compareTo", "when", "doReturn", "doReturn", "any", "getAttributeValue", "when", "doReturn", "filter", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "LTETFilter", "superclass": "extends ArithmeticFilter", "interfaces": "", "fields": [], "methods": [{"identifier": "LTETFilter", "parameters": "(String attributeName, Object value)", "modifiers": "public", "return": "", "signature": " LTETFilter(String attributeName, Object value)", "full_signature": "public  LTETFilter(String attributeName, Object value)", "class_method_signature": "LTETFilter.LTETFilter(String attributeName, Object value)", "testcase": false, "constructor": true}, {"identifier": "filter", "parameters": "(final List<Object> objects)", "modifiers": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public", "return": "List<Object>", "signature": "List<Object> filter(final List<Object> objects)", "full_signature": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public List<Object> filter(final List<Object> objects)", "class_method_signature": "LTETFilter.filter(final List<Object> objects)", "testcase": false, "constructor": false}], "file": "imcache-core/src/main/java/com/cetsoft/imcache/cache/search/filter/LTETFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(final List<Object> objects)", "modifiers": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public", "return": "List<Object>", "body": "@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  public List<Object> filter(final List<Object> objects) {\n    final List<Object> result = new ArrayList<Object>();\n    for (final Object object : objects) {\n      final Comparable objectValue = (Comparable) getAttributeValue(object);\n      if (objectValue.compareTo(value) <= 0) {\n        result.add(object);\n      }\n    }\n    return result;\n  }", "signature": "List<Object> filter(final List<Object> objects)", "full_signature": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public List<Object> filter(final List<Object> objects)", "class_method_signature": "LTETFilter.filter(final List<Object> objects)", "testcase": false, "constructor": false, "invocations": ["getAttributeValue", "compareTo", "add"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}