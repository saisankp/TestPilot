{"test_class": {"identifier": "WeeklyPeriodTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/src/test/java/org/openmrs/module/dhisreport/api/utils/WeeklyPeriodTest.java"}, "test_case": {"identifier": "testGetStart", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetStart() throws ParseException {\n\t\tWeeklyPeriod instance = new WeeklyPeriod(new SimpleDateFormat(\n\t\t\t\t\"yyyy-MM-dd\").parse(\"2012-11-20\"));\n\t\tDate expResult = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS\")\n\t\t\t\t.parse(\"2012-11-19T00:00:00.000\");\n\t\tDate result = instance.getStartDate();\n\t\tassertEquals(expResult, result);\n\t}", "signature": "void testGetStart()", "full_signature": "@Test public void testGetStart()", "class_method_signature": "WeeklyPeriodTest.testGetStart()", "testcase": true, "constructor": false, "invocations": ["parse", "parse", "getStartDate", "assertEquals"]}, "focal_class": {"identifier": "WeeklyPeriod", "superclass": "", "interfaces": "implements Period", "fields": [{"original_string": "public static final String ISO_FORMAT = \"yyyy'W'ww\";", "modifier": "public static final", "type": "String", "declarator": "ISO_FORMAT = \"yyyy'W'ww\"", "var_name": "ISO_FORMAT"}, {"original_string": "protected Date startDate;", "modifier": "protected", "type": "Date", "declarator": "startDate", "var_name": "startDate"}, {"original_string": "protected Date endDate;", "modifier": "protected", "type": "Date", "declarator": "endDate", "var_name": "endDate"}], "methods": [{"identifier": "setStartDate", "parameters": "(Date startDate)", "modifiers": "@Override public", "return": "void", "signature": "void setStartDate(Date startDate)", "full_signature": "@Override public void setStartDate(Date startDate)", "class_method_signature": "WeeklyPeriod.setStartDate(Date startDate)", "testcase": false, "constructor": false}, {"identifier": "setEndDate", "parameters": "(Date endDate)", "modifiers": "@Override public", "return": "void", "signature": "void setEndDate(Date endDate)", "full_signature": "@Override public void setEndDate(Date endDate)", "class_method_signature": "WeeklyPeriod.setEndDate(Date endDate)", "testcase": false, "constructor": false}, {"identifier": "getStartDate", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getStartDate()", "full_signature": "@Override public Date getStartDate()", "class_method_signature": "WeeklyPeriod.getStartDate()", "testcase": false, "constructor": false}, {"identifier": "getEndDate", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getEndDate()", "full_signature": "@Override public Date getEndDate()", "class_method_signature": "WeeklyPeriod.getEndDate()", "testcase": false, "constructor": false}, {"identifier": "WeeklyPeriod", "parameters": "(Date date)", "modifiers": "public", "return": "", "signature": " WeeklyPeriod(Date date)", "full_signature": "public  WeeklyPeriod(Date date)", "class_method_signature": "WeeklyPeriod.WeeklyPeriod(Date date)", "testcase": false, "constructor": true}, {"identifier": "getAsIsoString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAsIsoString()", "full_signature": "@Override public String getAsIsoString()", "class_method_signature": "WeeklyPeriod.getAsIsoString()", "testcase": false, "constructor": false}], "file": "api/src/main/java/org/openmrs/module/dhisreport/api/utils/WeeklyPeriod.java"}, "focal_method": {"identifier": "getStartDate", "parameters": "()", "modifiers": "@Override public", "return": "Date", "body": "@Override\n\tpublic Date getStartDate() {\n\t\treturn startDate;\n\t}", "signature": "Date getStartDate()", "full_signature": "@Override public Date getStartDate()", "class_method_signature": "WeeklyPeriod.getStartDate()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 5869462, "url": "https://github.com/openmrs/openmrs-module-dhisreport", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 9, "size": 1862, "license": "licensed"}}