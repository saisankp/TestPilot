{"test_class": {"identifier": "SingleComparisonNodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/rql/src/test/java/org/eclipse/ditto/model/rql/predicates/ast/SingleComparisonNodeTest.java"}, "test_case": {"identifier": "visitorGetsVisited", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void visitorGetsVisited() {\n        final PredicateVisitor visitorMock = mock(PredicateVisitor.class);\n        final SingleComparisonNode singleComparisonNode =\n                new SingleComparisonNode(SingleComparisonNode.Type.EQ,\n                        \"propertyName\", \"propertyValue\");\n        singleComparisonNode.accept(visitorMock);\n        verify(visitorMock).visit(singleComparisonNode);\n    }", "signature": "void visitorGetsVisited()", "full_signature": "@Test public void visitorGetsVisited()", "class_method_signature": "SingleComparisonNodeTest.visitorGetsVisited()", "testcase": true, "constructor": false, "invocations": ["mock", "accept", "visit", "verify"]}, "focal_class": {"identifier": "SingleComparisonNode", "superclass": "extends ComparisonNode<SingleComparisonNode.Type, Object>", "interfaces": "", "fields": [], "methods": [{"identifier": "SingleComparisonNode", "parameters": "(final Type comparisonType, final String comparisonProperty,\n            final Object comparisonValue)", "modifiers": "public", "return": "", "signature": " SingleComparisonNode(final Type comparisonType, final String comparisonProperty,\n            final Object comparisonValue)", "full_signature": "public  SingleComparisonNode(final Type comparisonType, final String comparisonProperty,\n            final Object comparisonValue)", "class_method_signature": "SingleComparisonNode.SingleComparisonNode(final Type comparisonType, final String comparisonProperty,\n            final Object comparisonValue)", "testcase": false, "constructor": true}, {"identifier": "accept", "parameters": "(final PredicateVisitor predicateVisitor)", "modifiers": "public", "return": "void", "signature": "void accept(final PredicateVisitor predicateVisitor)", "full_signature": "public void accept(final PredicateVisitor predicateVisitor)", "class_method_signature": "SingleComparisonNode.accept(final PredicateVisitor predicateVisitor)", "testcase": false, "constructor": false}], "file": "model/rql/src/main/java/org/eclipse/ditto/model/rql/predicates/ast/SingleComparisonNode.java"}, "focal_method": {"identifier": "accept", "parameters": "(final PredicateVisitor predicateVisitor)", "modifiers": "public", "return": "void", "body": "public void accept(final PredicateVisitor predicateVisitor) {\n        predicateVisitor.visit(this);\n    }", "signature": "void accept(final PredicateVisitor predicateVisitor)", "full_signature": "public void accept(final PredicateVisitor predicateVisitor)", "class_method_signature": "SingleComparisonNode.accept(final PredicateVisitor predicateVisitor)", "testcase": false, "constructor": false, "invocations": ["visit"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}