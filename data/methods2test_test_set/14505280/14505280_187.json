{"test_class": {"identifier": "ScaleInfoEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate ScaleInfoHolder holder;", "modifier": "@Autowired\n\tprivate", "type": "ScaleInfoHolder", "declarator": "holder", "var_name": "holder"}, {"original_string": "ConfigurationDtoPostProcessor cdpp = new ConfigurationDtoPostProcessor();", "modifier": "", "type": "ConfigurationDtoPostProcessor", "declarator": "cdpp = new ConfigurationDtoPostProcessor()", "var_name": "cdpp"}], "file": "impl/src/test/java/org/geomajas/internal/configuration/ScaleInfoEditorTest.java"}, "test_case": {"identifier": "testSetAsText", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSetAsText() {\n\t\tScaleInfoEditor editor = new ScaleInfoEditor();\n\t\teditor.setAsText(\"1:2000\");\n\t\tObject o = editor.getValue();\n\t\tAssert.assertTrue(o instanceof ScaleInfo);\n\t\tScaleInfo info = (ScaleInfo)o;\n\t\tAssert.assertEquals(1, info.getNumerator(), 0.001);\n\t\tAssert.assertEquals(2000, info.getDenominator(), 0.001);\n\t\tAssert.assertEquals(1.8890, info.getPixelPerUnit(), 0.001);\n\t}", "signature": "void testSetAsText()", "full_signature": "@Test public void testSetAsText()", "class_method_signature": "ScaleInfoEditorTest.testSetAsText()", "testcase": true, "constructor": false, "invocations": ["setAsText", "getValue", "assertTrue", "assertEquals", "getNumerator", "assertEquals", "getDenominator", "assertEquals", "getPixelPerUnit"]}, "focal_class": {"identifier": "ScaleInfoEditor", "superclass": "extends PropertyEditorSupport", "interfaces": "", "fields": [], "methods": [{"identifier": "setAsText", "parameters": "(String text)", "modifiers": "@Override public", "return": "void", "signature": "void setAsText(String text)", "full_signature": "@Override public void setAsText(String text)", "class_method_signature": "ScaleInfoEditor.setAsText(String text)", "testcase": false, "constructor": false}], "file": "impl/src/main/java/org/geomajas/internal/configuration/ScaleInfoEditor.java"}, "focal_method": {"identifier": "setAsText", "parameters": "(String text)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void setAsText(String text) throws IllegalArgumentException {\n\t\t// Prepare the string; remove all spaces and all comma's:\n\t\ttext = text.replaceAll(\" \", \"\");\n\t\ttext = text.replaceAll(\",\", \"\");\n\n\t\tint pos = text.indexOf(':');\n\t\tif (pos > 0) {\n\t\t\ttry {\n\t\t\t\tdouble numerator = Double.parseDouble(text.substring(0, pos));\n\t\t\t\tdouble denominator = Double.parseDouble(text.substring(pos + 1));\n\t\t\t\tsetValue(new ScaleInfo(numerator, denominator));\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new IllegalArgumentException(\"Scale \" + text\n\t\t\t\t\t\t+ \" could not be parsed. The following format was expected:\" + \" (x : y).\", e);\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\t// Not recommended....\n\t\t\t\tsetValue(new ScaleInfo(Double.parseDouble(text)));\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new IllegalArgumentException(\"Scale \" + text\n\t\t\t\t\t\t+ \" could not be parsed. The following format was expected:\" + \" (x : y).\", e);\n\t\t\t}\n\t\t}\n\t}", "signature": "void setAsText(String text)", "full_signature": "@Override public void setAsText(String text)", "class_method_signature": "ScaleInfoEditor.setAsText(String text)", "testcase": false, "constructor": false, "invocations": ["replaceAll", "replaceAll", "indexOf", "parseDouble", "substring", "parseDouble", "substring", "setValue", "setValue", "parseDouble"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}