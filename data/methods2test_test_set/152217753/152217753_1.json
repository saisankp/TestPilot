{"test_class": {"identifier": "ProductServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ProductService productService;", "modifier": "@Autowired\n    private", "type": "ProductService", "declarator": "productService", "var_name": "productService"}], "file": "fastcampus/clonekrone/src/test/java/project/shoppingmall/clonekrone/service/ProductServiceTest.java"}, "test_case": {"identifier": "", "parameters": "", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void \uc0c1\uc704\uce74\ud14c\uace0\ub9acid\ub85c_\ud488\ubaa9_\ubaa9\ub85d_\ubd88\ub7ec\uc624\uae30() {\n        System.out.println(\"\uc0c1\uc704\uce74\ud14c\uace0\ub9acid\ub85c_\ud488\ubaa9_\ubaa9\ub85d_\ubd88\ub7ec\uc624\uae30 \uc2dc\uc791\");\n        Page<Product> products = productService.getProductList(1L, 0);//\uce74\ud14c\uace0\ub9ac \uc544\uc774\ub5141\uc778\uac83\ub9cc\n        for (Product product : products) {\n            System.out.println(product.toString());\n        }\n    }", "signature": "void ", "full_signature": "@Test public void ", "class_method_signature": "ProductServiceTest.", "testcase": true, "constructor": false, "invocations": ["println", "getProductList", "println", "toString"]}, "focal_class": {"identifier": "ProductService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ProductRepository productRepository;", "modifier": "private", "type": "ProductRepository", "declarator": "productRepository", "var_name": "productRepository"}, {"original_string": "private static int pageSize = 3;", "modifier": "private static", "type": "int", "declarator": "pageSize = 3", "var_name": "pageSize"}], "methods": [{"identifier": "ProductService", "parameters": "(ProductRepository productRepository)", "modifiers": "public", "return": "", "signature": " ProductService(ProductRepository productRepository)", "full_signature": "public  ProductService(ProductRepository productRepository)", "class_method_signature": "ProductService.ProductService(ProductRepository productRepository)", "testcase": false, "constructor": true}, {"identifier": "getProductList", "parameters": "(int startPage)", "modifiers": "@Transactional public", "return": "Page<Product>", "signature": "Page<Product> getProductList(int startPage)", "full_signature": "@Transactional public Page<Product> getProductList(int startPage)", "class_method_signature": "ProductService.getProductList(int startPage)", "testcase": false, "constructor": false}, {"identifier": "getProductList", "parameters": "(Long superiorId, int start)", "modifiers": "@Transactional public", "return": "Page<Product>", "signature": "Page<Product> getProductList(Long superiorId, int start)", "full_signature": "@Transactional public Page<Product> getProductList(Long superiorId, int start)", "class_method_signature": "ProductService.getProductList(Long superiorId, int start)", "testcase": false, "constructor": false}, {"identifier": "getProductList", "parameters": "(String searchWord, int start)", "modifiers": "@Transactional public", "return": "Page<Product>", "signature": "Page<Product> getProductList(String searchWord, int start)", "full_signature": "@Transactional public Page<Product> getProductList(String searchWord, int start)", "class_method_signature": "ProductService.getProductList(String searchWord, int start)", "testcase": false, "constructor": false}], "file": "fastcampus/clonekrone/src/main/java/project/shoppingmall/clonekrone/service/ProductService.java"}, "focal_method": {"identifier": "getProductList", "parameters": "(int startPage)", "modifiers": "@Transactional public", "return": "Page<Product>", "body": "@Transactional\n    public Page<Product> getProductList(int startPage) {\n        Pageable pageable = PageRequest.of(startPage, pageSize);\n\n        Page<Product> products = productRepository.findProducts(pageable);\n        return products;\n    }", "signature": "Page<Product> getProductList(int startPage)", "full_signature": "@Transactional public Page<Product> getProductList(int startPage)", "class_method_signature": "ProductService.getProductList(int startPage)", "testcase": false, "constructor": false, "invocations": ["of", "findProducts"]}, "repository": {"repo_id": 152217753, "url": "https://github.com/siyoon210/spring-framework", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 7064, "license": "licensed"}}