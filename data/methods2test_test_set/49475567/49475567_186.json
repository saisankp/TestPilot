{"test_class": {"identifier": "SearchParametersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SearchParameters params;", "modifier": "private", "type": "SearchParameters", "declarator": "params", "var_name": "params"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/search/web/response/SearchParametersTest.java"}, "test_case": {"identifier": "testBuildSearchPolicy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildSearchPolicy() {\n        params.setMaxDepth(5);\n        params.setSimilarNamesDistance(2);\n        params.setExactMatchMaxLevel(3);\n        params.setExactMatchForSingleSuccess(true);\n        SearchPolicy searchPolicy = params.buildSearchPolicy();\n        assertThat(searchPolicy).isNotNull();\n        assertThat(((DefaultSearchDepthPolicy) searchPolicy.getSearchDepthPolicy()).getMaximumDepth()).isEqualTo(5);\n        assertThat(((DefaultSimilarNamesPolicy) searchPolicy.getSimilarNamesPolicy()).getSimilarNamesDistance())\n                .isEqualTo(2);\n        assertThat(((DefaultExactMatchPolicy) searchPolicy.getExactMatchPolicy()).getExactMatchMaxLevel()).isEqualTo(3);\n        assertThat(((DefaultExactMatchPolicy) searchPolicy.getExactMatchPolicy()).isExactMatchForSingleSuccess())\n                .isEqualTo(true);\n    }", "signature": "void testBuildSearchPolicy()", "full_signature": "@Test public void testBuildSearchPolicy()", "class_method_signature": "SearchParametersTest.testBuildSearchPolicy()", "testcase": true, "constructor": false, "invocations": ["setMaxDepth", "setSimilarNamesDistance", "setExactMatchMaxLevel", "setExactMatchForSingleSuccess", "buildSearchPolicy", "isNotNull", "assertThat", "isEqualTo", "assertThat", "getMaximumDepth", "getSearchDepthPolicy", "isEqualTo", "assertThat", "getSimilarNamesDistance", "getSimilarNamesPolicy", "isEqualTo", "assertThat", "getExactMatchMaxLevel", "getExactMatchPolicy", "isEqualTo", "assertThat", "isExactMatchForSingleSuccess", "getExactMatchPolicy"]}, "focal_class": {"identifier": "SearchParameters", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int MAX_CONFIGURABLE_DEPTH = 6;", "modifier": "public static final", "type": "int", "declarator": "MAX_CONFIGURABLE_DEPTH = 6", "var_name": "MAX_CONFIGURABLE_DEPTH"}, {"original_string": "@NotEmpty\n    private String input;", "modifier": "@NotEmpty\n    private", "type": "String", "declarator": "input", "var_name": "input"}, {"original_string": "@Min(value=0)\n    @Max(value=MAX_CONFIGURABLE_DEPTH)\n    private int maxDepth = DefaultSearchDepthPolicy.DEFAULT_MAX_DEPTH;", "modifier": "@Min(value=0)\n    @Max(value=MAX_CONFIGURABLE_DEPTH)\n    private", "type": "int", "declarator": "maxDepth = DefaultSearchDepthPolicy.DEFAULT_MAX_DEPTH", "var_name": "maxDepth"}, {"original_string": "private int similarNamesDistance = DefaultSimilarNamesPolicy.DEFAULT_SIMILAR_NAMES_DISTANCE;", "modifier": "private", "type": "int", "declarator": "similarNamesDistance = DefaultSimilarNamesPolicy.DEFAULT_SIMILAR_NAMES_DISTANCE", "var_name": "similarNamesDistance"}, {"original_string": "private int exactMatchMaxLevel = DefaultExactMatchPolicy.DEFAULT_EXACT_MATCH_MAX_LEVEL;", "modifier": "private", "type": "int", "declarator": "exactMatchMaxLevel = DefaultExactMatchPolicy.DEFAULT_EXACT_MATCH_MAX_LEVEL", "var_name": "exactMatchMaxLevel"}, {"original_string": "private boolean exactMatchForSingleSuccess = DefaultExactMatchPolicy.DEFAULT_EXACT_MATCH_FOR_SINGLE_SUCCESS;", "modifier": "private", "type": "boolean", "declarator": "exactMatchForSingleSuccess = DefaultExactMatchPolicy.DEFAULT_EXACT_MATCH_FOR_SINGLE_SUCCESS", "var_name": "exactMatchForSingleSuccess"}, {"original_string": "private boolean returnTokens = false;", "modifier": "private", "type": "boolean", "declarator": "returnTokens = false", "var_name": "returnTokens"}, {"original_string": "private boolean returnPolicy = false;", "modifier": "private", "type": "boolean", "declarator": "returnPolicy = false", "var_name": "returnPolicy"}, {"original_string": "private boolean returnRejections = false;", "modifier": "private", "type": "boolean", "declarator": "returnRejections = false", "var_name": "returnRejections"}, {"original_string": "private boolean returnPossiblesWithExactMatch = false;", "modifier": "private", "type": "boolean", "declarator": "returnPossiblesWithExactMatch = false", "var_name": "returnPossiblesWithExactMatch"}], "methods": [{"identifier": "SearchParameters", "parameters": "()", "modifiers": "public", "return": "", "signature": " SearchParameters()", "full_signature": "public  SearchParameters()", "class_method_signature": "SearchParameters.SearchParameters()", "testcase": false, "constructor": true}, {"identifier": "SearchParameters", "parameters": "(String input)", "modifiers": "public", "return": "", "signature": " SearchParameters(String input)", "full_signature": "public  SearchParameters(String input)", "class_method_signature": "SearchParameters.SearchParameters(String input)", "testcase": false, "constructor": true}, {"identifier": "getMaxDepth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxDepth()", "full_signature": "public int getMaxDepth()", "class_method_signature": "SearchParameters.getMaxDepth()", "testcase": false, "constructor": false}, {"identifier": "setMaxDepth", "parameters": "(int maxDepth)", "modifiers": "public", "return": "void", "signature": "void setMaxDepth(int maxDepth)", "full_signature": "public void setMaxDepth(int maxDepth)", "class_method_signature": "SearchParameters.setMaxDepth(int maxDepth)", "testcase": false, "constructor": false}, {"identifier": "getSimilarNamesDistance", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSimilarNamesDistance()", "full_signature": "public int getSimilarNamesDistance()", "class_method_signature": "SearchParameters.getSimilarNamesDistance()", "testcase": false, "constructor": false}, {"identifier": "setSimilarNamesDistance", "parameters": "(int similarNamesDistance)", "modifiers": "public", "return": "void", "signature": "void setSimilarNamesDistance(int similarNamesDistance)", "full_signature": "public void setSimilarNamesDistance(int similarNamesDistance)", "class_method_signature": "SearchParameters.setSimilarNamesDistance(int similarNamesDistance)", "testcase": false, "constructor": false}, {"identifier": "getExactMatchMaxLevel", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getExactMatchMaxLevel()", "full_signature": "public int getExactMatchMaxLevel()", "class_method_signature": "SearchParameters.getExactMatchMaxLevel()", "testcase": false, "constructor": false}, {"identifier": "setExactMatchMaxLevel", "parameters": "(int exactMatchMaxLevel)", "modifiers": "public", "return": "void", "signature": "void setExactMatchMaxLevel(int exactMatchMaxLevel)", "full_signature": "public void setExactMatchMaxLevel(int exactMatchMaxLevel)", "class_method_signature": "SearchParameters.setExactMatchMaxLevel(int exactMatchMaxLevel)", "testcase": false, "constructor": false}, {"identifier": "isExactMatchForSingleSuccess", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isExactMatchForSingleSuccess()", "full_signature": "public boolean isExactMatchForSingleSuccess()", "class_method_signature": "SearchParameters.isExactMatchForSingleSuccess()", "testcase": false, "constructor": false}, {"identifier": "setExactMatchForSingleSuccess", "parameters": "(boolean exactMatchForSingleSuccess)", "modifiers": "public", "return": "void", "signature": "void setExactMatchForSingleSuccess(boolean exactMatchForSingleSuccess)", "full_signature": "public void setExactMatchForSingleSuccess(boolean exactMatchForSingleSuccess)", "class_method_signature": "SearchParameters.setExactMatchForSingleSuccess(boolean exactMatchForSingleSuccess)", "testcase": false, "constructor": false}, {"identifier": "getInput", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInput()", "full_signature": "public String getInput()", "class_method_signature": "SearchParameters.getInput()", "testcase": false, "constructor": false}, {"identifier": "setInput", "parameters": "(String input)", "modifiers": "public", "return": "void", "signature": "void setInput(String input)", "full_signature": "public void setInput(String input)", "class_method_signature": "SearchParameters.setInput(String input)", "testcase": false, "constructor": false}, {"identifier": "isReturnTokens", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReturnTokens()", "full_signature": "public boolean isReturnTokens()", "class_method_signature": "SearchParameters.isReturnTokens()", "testcase": false, "constructor": false}, {"identifier": "setReturnTokens", "parameters": "(boolean returnTokens)", "modifiers": "public", "return": "void", "signature": "void setReturnTokens(boolean returnTokens)", "full_signature": "public void setReturnTokens(boolean returnTokens)", "class_method_signature": "SearchParameters.setReturnTokens(boolean returnTokens)", "testcase": false, "constructor": false}, {"identifier": "isReturnPolicy", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReturnPolicy()", "full_signature": "public boolean isReturnPolicy()", "class_method_signature": "SearchParameters.isReturnPolicy()", "testcase": false, "constructor": false}, {"identifier": "setReturnPolicy", "parameters": "(boolean returnPolicy)", "modifiers": "public", "return": "void", "signature": "void setReturnPolicy(boolean returnPolicy)", "full_signature": "public void setReturnPolicy(boolean returnPolicy)", "class_method_signature": "SearchParameters.setReturnPolicy(boolean returnPolicy)", "testcase": false, "constructor": false}, {"identifier": "buildSearchPolicy", "parameters": "()", "modifiers": "public", "return": "SearchPolicy", "signature": "SearchPolicy buildSearchPolicy()", "full_signature": "public SearchPolicy buildSearchPolicy()", "class_method_signature": "SearchParameters.buildSearchPolicy()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(DefaultExactMatchPolicy policy)", "modifiers": "private", "return": "void", "signature": "void configure(DefaultExactMatchPolicy policy)", "full_signature": "private void configure(DefaultExactMatchPolicy policy)", "class_method_signature": "SearchParameters.configure(DefaultExactMatchPolicy policy)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(DefaultSearchDepthPolicy policy)", "modifiers": "private", "return": "void", "signature": "void configure(DefaultSearchDepthPolicy policy)", "full_signature": "private void configure(DefaultSearchDepthPolicy policy)", "class_method_signature": "SearchParameters.configure(DefaultSearchDepthPolicy policy)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(DefaultSimilarNamesPolicy policy)", "modifiers": "private", "return": "void", "signature": "void configure(DefaultSimilarNamesPolicy policy)", "full_signature": "private void configure(DefaultSimilarNamesPolicy policy)", "class_method_signature": "SearchParameters.configure(DefaultSimilarNamesPolicy policy)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SearchParameters.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "SearchParameters.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "isReturnRejections", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReturnRejections()", "full_signature": "public boolean isReturnRejections()", "class_method_signature": "SearchParameters.isReturnRejections()", "testcase": false, "constructor": false}, {"identifier": "setReturnRejections", "parameters": "(boolean returnRejections)", "modifiers": "public", "return": "void", "signature": "void setReturnRejections(boolean returnRejections)", "full_signature": "public void setReturnRejections(boolean returnRejections)", "class_method_signature": "SearchParameters.setReturnRejections(boolean returnRejections)", "testcase": false, "constructor": false}, {"identifier": "isReturnPossiblesWithExactMatch", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReturnPossiblesWithExactMatch()", "full_signature": "public boolean isReturnPossiblesWithExactMatch()", "class_method_signature": "SearchParameters.isReturnPossiblesWithExactMatch()", "testcase": false, "constructor": false}, {"identifier": "setReturnPossiblesWithExactMatch", "parameters": "(boolean returnPossiblesWithExactMatch)", "modifiers": "public", "return": "void", "signature": "void setReturnPossiblesWithExactMatch(boolean returnPossiblesWithExactMatch)", "full_signature": "public void setReturnPossiblesWithExactMatch(boolean returnPossiblesWithExactMatch)", "class_method_signature": "SearchParameters.setReturnPossiblesWithExactMatch(boolean returnPossiblesWithExactMatch)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/search/web/response/SearchParameters.java"}, "focal_method": {"identifier": "buildSearchPolicy", "parameters": "()", "modifiers": "public", "return": "SearchPolicy", "body": "public SearchPolicy buildSearchPolicy()\n    {\n        SearchPolicy policy = new SearchPolicy();\n        configure((DefaultExactMatchPolicy) policy.getExactMatchPolicy());\n        configure((DefaultSearchDepthPolicy) policy.getSearchDepthPolicy());\n        configure((DefaultSimilarNamesPolicy) policy.getSimilarNamesPolicy());\n        return policy;\n    }", "signature": "SearchPolicy buildSearchPolicy()", "full_signature": "public SearchPolicy buildSearchPolicy()", "class_method_signature": "SearchParameters.buildSearchPolicy()", "testcase": false, "constructor": false, "invocations": ["configure", "getExactMatchPolicy", "configure", "getSearchDepthPolicy", "configure", "getSimilarNamesPolicy"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}