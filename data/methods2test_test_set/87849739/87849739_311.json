{"test_class": {"identifier": "DefaultConnectionMonitorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ConnectionLogger logger;", "modifier": "@Mock\n    private", "type": "ConnectionLogger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private ConnectionMetricsCounter counter;", "modifier": "@Mock\n    private", "type": "ConnectionMetricsCounter", "declarator": "counter", "var_name": "counter"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/DefaultConnectionMonitorTest.java"}, "test_case": {"identifier": "getCounter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCounter() {\n        final ConnectionMonitor monitor = newMonitor();\n        assertThat(monitor.getCounter()).isEqualTo(counter);\n    }", "signature": "void getCounter()", "full_signature": "@Test public void getCounter()", "class_method_signature": "DefaultConnectionMonitorTest.getCounter()", "testcase": true, "constructor": false, "invocations": ["newMonitor", "isEqualTo", "assertThat", "getCounter"]}, "focal_class": {"identifier": "DefaultConnectionMonitor", "superclass": "", "interfaces": "implements ConnectionMonitor", "fields": [{"original_string": "private final ConnectionMetricsCounter counter;", "modifier": "private final", "type": "ConnectionMetricsCounter", "declarator": "counter", "var_name": "counter"}, {"original_string": "private final ConnectionLogger logger;", "modifier": "private final", "type": "ConnectionLogger", "declarator": "logger", "var_name": "logger"}], "methods": [{"identifier": "DefaultConnectionMonitor", "parameters": "(final ConnectionMonitorBuilder builder)", "modifiers": "private", "return": "", "signature": " DefaultConnectionMonitor(final ConnectionMonitorBuilder builder)", "full_signature": "private  DefaultConnectionMonitor(final ConnectionMonitorBuilder builder)", "class_method_signature": "DefaultConnectionMonitor.DefaultConnectionMonitor(final ConnectionMonitorBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "getLogger", "parameters": "()", "modifiers": "@Override public", "return": "ConnectionLogger", "signature": "ConnectionLogger getLogger()", "full_signature": "@Override public ConnectionLogger getLogger()", "class_method_signature": "DefaultConnectionMonitor.getLogger()", "testcase": false, "constructor": false}, {"identifier": "getCounter", "parameters": "()", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter getCounter()", "full_signature": "@Override public ConnectionMetricsCounter getCounter()", "class_method_signature": "DefaultConnectionMonitor.getCounter()", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "(final ConnectionMetricsCounter counter, final ConnectionLogger logger)", "modifiers": "public static", "return": "ConnectionMonitor.Builder", "signature": "ConnectionMonitor.Builder builder(final ConnectionMetricsCounter counter, final ConnectionLogger logger)", "full_signature": "public static ConnectionMonitor.Builder builder(final ConnectionMetricsCounter counter, final ConnectionLogger logger)", "class_method_signature": "DefaultConnectionMonitor.builder(final ConnectionMetricsCounter counter, final ConnectionLogger logger)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "DefaultConnectionMonitor.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultConnectionMonitor.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultConnectionMonitor.toString()", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/DefaultConnectionMonitor.java"}, "focal_method": {"identifier": "getCounter", "parameters": "()", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "body": "@Override\n    public ConnectionMetricsCounter getCounter() {\n        return counter;\n    }", "signature": "ConnectionMetricsCounter getCounter()", "full_signature": "@Override public ConnectionMetricsCounter getCounter()", "class_method_signature": "DefaultConnectionMonitor.getCounter()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}