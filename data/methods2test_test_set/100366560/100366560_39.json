{"test_class": {"identifier": "YamlFixtureParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "YamlFixtureParser parser = new YamlFixtureParser();", "modifier": "", "type": "YamlFixtureParser", "declarator": "parser = new YamlFixtureParser()", "var_name": "parser"}], "file": "beanmother-core/src/test/java/io/beanmother/core/loader/parser/YamlFixtureParserTest.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParse() throws IOException, URISyntaxException {\n        URI uri = ClassUtils.getDefaultClassLoader().getResource(\"fixtures/this.yml\").toURI();\n        String fixtureStr = new String(Files.readAllBytes(Paths.get(uri)));\n\n        Map<String, FixtureMap> fixtureMaps = parser.parse(fixtureStr);\n\n        FixtureMap beanmother = fixtureMaps.get(\"beanmother\");\n        assertTrue(beanmother.isRoot());\n        assertEquals(beanmother.getFixtureName(), \"beanmother\");\n\n        assertTrue(beanmother.get(\"id\") instanceof FixtureValue);\n        assertEquals(beanmother.get(\"id\"), new FixtureValue(1));\n        assertEquals(beanmother.get(\"title\"), new FixtureValue(\"beanmother\"));\n        assertEquals(beanmother.get(\"url\"), new FixtureValue(\"https://github.com/keepcosmos/beanmother\"));\n        assertTrue(beanmother.get(\"authors\") instanceof FixtureList);\n    }", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "YamlFixtureParserTest.testParse()", "testcase": true, "constructor": false, "invocations": ["toURI", "getResource", "getDefaultClassLoader", "readAllBytes", "get", "parse", "get", "assertTrue", "isRoot", "assertEquals", "getFixtureName", "assertTrue", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertTrue", "get"]}, "focal_class": {"identifier": "YamlFixtureParser", "superclass": "", "interfaces": "implements FixtureParser", "fields": [], "methods": [{"identifier": "parse", "parameters": "(String fixture)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "Map<String, FixtureMap>", "signature": "Map<String, FixtureMap> parse(String fixture)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public Map<String, FixtureMap> parse(String fixture)", "class_method_signature": "YamlFixtureParser.parse(String fixture)", "testcase": false, "constructor": false}, {"identifier": "buildYaml", "parameters": "()", "modifiers": "private", "return": "Yaml", "signature": "Yaml buildYaml()", "full_signature": "private Yaml buildYaml()", "class_method_signature": "YamlFixtureParser.buildYaml()", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/loader/parser/YamlFixtureParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String fixture)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "Map<String, FixtureMap>", "body": "@SuppressWarnings(\"unchecked\")\n    @Override\n    public Map<String, FixtureMap> parse(String fixture) {\n        Map<String, ? extends Object> fixtures = buildYaml().loadAs(fixture, Map.class);;\n        Map<String, FixtureMap> fixtureMaps = new HashMap<>();\n\n        for (String key : fixtures.keySet()) {\n            if (fixtures.get(key) instanceof Map) {\n                FixtureMap fixtureMap = FixtureTemplateWrapper.wrap((Map) fixtures.get(key), key, null);\n                fixtureMap.setRoot(true);\n                fixtureMaps.put(key, fixtureMap);\n            } else {\n                throw new FixtureFormatException(key, \" the root of fixture data should be key - value\");\n            }\n        }\n\n        return fixtureMaps;\n    }", "signature": "Map<String, FixtureMap> parse(String fixture)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public Map<String, FixtureMap> parse(String fixture)", "class_method_signature": "YamlFixtureParser.parse(String fixture)", "testcase": false, "constructor": false, "invocations": ["loadAs", "buildYaml", "keySet", "get", "wrap", "get", "setRoot", "put"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}