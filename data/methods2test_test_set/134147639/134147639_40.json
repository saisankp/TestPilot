{"test_class": {"identifier": "Base64UrlUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-util/src/test/java/com/webauthn4j/util/Base64UrlUtilTest.java"}, "test_case": {"identifier": "encode_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void encode_test() {\n        byte[] data = new byte[]{0x01, 0x23, 0x45};\n        byte[] expected = new byte[]{0x41, 0x53, 0x4E, 0x46};\n        byte[] result = Base64UrlUtil.encode(data);\n        assertThat(result).isEqualTo(expected);\n    }", "signature": "void encode_test()", "full_signature": "@Test void encode_test()", "class_method_signature": "Base64UrlUtilTest.encode_test()", "testcase": true, "constructor": false, "invocations": ["encode", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "Base64UrlUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final java.util.Base64.Decoder decoder = Base64.getUrlDecoder();", "modifier": "private static final", "type": "java.util.Base64.Decoder", "declarator": "decoder = Base64.getUrlDecoder()", "var_name": "decoder"}, {"original_string": "private static final java.util.Base64.Encoder encoder = Base64.getUrlEncoder().withoutPadding();", "modifier": "private static final", "type": "java.util.Base64.Encoder", "declarator": "encoder = Base64.getUrlEncoder().withoutPadding()", "var_name": "encoder"}], "methods": [{"identifier": "Base64UrlUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " Base64UrlUtil()", "full_signature": "private  Base64UrlUtil()", "class_method_signature": "Base64UrlUtil.Base64UrlUtil()", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "(String source)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decode(String source)", "full_signature": "public static byte[] decode(String source)", "class_method_signature": "Base64UrlUtil.decode(String source)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(byte[] source)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decode(byte[] source)", "full_signature": "public static byte[] decode(byte[] source)", "class_method_signature": "Base64UrlUtil.decode(byte[] source)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(byte[] source)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encode(byte[] source)", "full_signature": "public static byte[] encode(byte[] source)", "class_method_signature": "Base64UrlUtil.encode(byte[] source)", "testcase": false, "constructor": false}, {"identifier": "encodeToString", "parameters": "(byte[] source)", "modifiers": "public static", "return": "String", "signature": "String encodeToString(byte[] source)", "full_signature": "public static String encodeToString(byte[] source)", "class_method_signature": "Base64UrlUtil.encodeToString(byte[] source)", "testcase": false, "constructor": false}], "file": "webauthn4j-util/src/main/java/com/webauthn4j/util/Base64UrlUtil.java"}, "focal_method": {"identifier": "encode", "parameters": "(byte[] source)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] encode(byte[] source) {\n        return encoder.encode(source);\n    }", "signature": "byte[] encode(byte[] source)", "full_signature": "public static byte[] encode(byte[] source)", "class_method_signature": "Base64UrlUtil.encode(byte[] source)", "testcase": false, "constructor": false, "invocations": ["encode"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}