{"test_class": {"identifier": "TestNBitInteger", "superclass": "", "interfaces": "", "fields": [], "file": "firefly-net/src/test/java/com/fireflysource/net/http/common/v2/hpack/TestNBitInteger.java"}, "test_case": {"identifier": "testEncodeExampleD_1_1", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testEncodeExampleD_1_1() {\n        ByteBuffer buf = ByteBuffer.allocate(16);\n        buf.put((byte) 0x77);\n        buf.put((byte) 0xFF);\n        NBitInteger.encode(buf, 5, 10);\n        buf.flip();\n\n        String r = TypeUtils.toHexString(BufferUtils.toArray(buf));\n\n        assertEquals(\"77Ea\", r);\n\n    }", "signature": "void testEncodeExampleD_1_1()", "full_signature": "@Test void testEncodeExampleD_1_1()", "class_method_signature": "TestNBitInteger.testEncodeExampleD_1_1()", "testcase": true, "constructor": false, "invocations": ["allocate", "put", "put", "encode", "flip", "toHexString", "toArray", "assertEquals"]}, "focal_class": {"identifier": "NBitInteger", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "octectsNeeded", "parameters": "(int n, int i)", "modifiers": "public static", "return": "int", "signature": "int octectsNeeded(int n, int i)", "full_signature": "public static int octectsNeeded(int n, int i)", "class_method_signature": "NBitInteger.octectsNeeded(int n, int i)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(ByteBuffer buf, int n, int i)", "modifiers": "public static", "return": "void", "signature": "void encode(ByteBuffer buf, int n, int i)", "full_signature": "public static void encode(ByteBuffer buf, int n, int i)", "class_method_signature": "NBitInteger.encode(ByteBuffer buf, int n, int i)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(ByteBuffer buffer, int n)", "modifiers": "public static", "return": "int", "signature": "int decode(ByteBuffer buffer, int n)", "full_signature": "public static int decode(ByteBuffer buffer, int n)", "class_method_signature": "NBitInteger.decode(ByteBuffer buffer, int n)", "testcase": false, "constructor": false}], "file": "firefly-net/src/main/java/com/fireflysource/net/http/common/v2/hpack/NBitInteger.java"}, "focal_method": {"identifier": "encode", "parameters": "(ByteBuffer buf, int n, int i)", "modifiers": "public static", "return": "void", "body": "public static void encode(ByteBuffer buf, int n, int i) {\n        if (n == 8) {\n            if (i < 0xFF) {\n                buf.put((byte) i);\n            } else {\n                buf.put((byte) 0xFF);\n\n                int length = i - 0xFF;\n                while (true) {\n                    if ((length & ~0x7F) == 0) {\n                        buf.put((byte) length);\n                        return;\n                    } else {\n                        buf.put((byte) ((length & 0x7F) | 0x80));\n                        length >>>= 7;\n                    }\n                }\n            }\n        } else {\n            int p = buf.position() - 1;\n            int bits = 0xFF >>> (8 - n);\n\n            if (i < bits) {\n                buf.put(p, (byte) ((buf.get(p) & ~bits) | i));\n            } else {\n                buf.put(p, (byte) (buf.get(p) | bits));\n\n                int length = i - bits;\n                while (true) {\n                    if ((length & ~0x7F) == 0) {\n                        buf.put((byte) length);\n                        return;\n                    } else {\n                        buf.put((byte) ((length & 0x7F) | 0x80));\n                        length >>>= 7;\n                    }\n                }\n            }\n        }\n    }", "signature": "void encode(ByteBuffer buf, int n, int i)", "full_signature": "public static void encode(ByteBuffer buf, int n, int i)", "class_method_signature": "NBitInteger.encode(ByteBuffer buf, int n, int i)", "testcase": false, "constructor": false, "invocations": ["put", "put", "put", "put", "position", "put", "get", "put", "get", "put", "put"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}