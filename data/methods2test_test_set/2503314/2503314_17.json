{"test_class": {"identifier": "AuthenticationManagerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PASSWORD = \"password\";", "modifier": "private static final", "type": "String", "declarator": "PASSWORD = \"password\"", "var_name": "PASSWORD"}, {"original_string": "private static final String[] RANDOM_STRING = new String[] { \"random\" };", "modifier": "private static final", "type": "String[]", "declarator": "RANDOM_STRING = new String[] { \"random\" }", "var_name": "RANDOM_STRING"}, {"original_string": "private static AuthenticationManager sut;", "modifier": "private static", "type": "AuthenticationManager", "declarator": "sut", "var_name": "sut"}, {"original_string": "private User user = mock(User.class);", "modifier": "private", "type": "User", "declarator": "user = mock(User.class)", "var_name": "user"}, {"original_string": "private List<AuthenticationManager> list;", "modifier": "private", "type": "List<AuthenticationManager>", "declarator": "list", "var_name": "list"}, {"original_string": "private AuthenticationManager authenticationManagerLdap = mock(AuthenticationManagerLdapImpl.class);", "modifier": "private", "type": "AuthenticationManager", "declarator": "authenticationManagerLdap = mock(AuthenticationManagerLdapImpl.class)", "var_name": "authenticationManagerLdap"}, {"original_string": "private AuthenticationManager authenticationManagerDao = mock(AuthenticationManagerDaoImpl.class);", "modifier": "private", "type": "AuthenticationManager", "declarator": "authenticationManagerDao = mock(AuthenticationManagerDaoImpl.class)", "var_name": "authenticationManagerDao"}], "file": "tntconcept-core/src/test/java/com/autentia/tnt/manager/security/AuthenticationManagerImplTest.java"}, "test_case": {"identifier": "checkPasswordDaoTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkPasswordDaoTest() throws Exception {\n\n        sut = new AuthenticationManagerImpl(false, list).getObject();\n        sut.checkPassword(user, PASSWORD);\n        verify(authenticationManagerDao).checkPassword(user, PASSWORD);\n    }", "signature": "void checkPasswordDaoTest()", "full_signature": "@Test public void checkPasswordDaoTest()", "class_method_signature": "AuthenticationManagerImplTest.checkPasswordDaoTest()", "testcase": true, "constructor": false, "invocations": ["getObject", "checkPassword", "checkPassword", "verify"]}, "focal_class": {"identifier": "AuthenticationManagerImpl", "superclass": "", "interfaces": "implements FactoryBean", "fields": [{"original_string": "private final boolean ldapProviderEnabled;", "modifier": "private final", "type": "boolean", "declarator": "ldapProviderEnabled", "var_name": "ldapProviderEnabled"}, {"original_string": "private final List<AuthenticationManager> authenticationManagers;", "modifier": "private final", "type": "List<AuthenticationManager>", "declarator": "authenticationManagers", "var_name": "authenticationManagers"}], "methods": [{"identifier": "AuthenticationManagerImpl", "parameters": "(boolean ldapProviderEnabled, List<AuthenticationManager> authenticationManagers)", "modifiers": "public", "return": "", "signature": " AuthenticationManagerImpl(boolean ldapProviderEnabled, List<AuthenticationManager> authenticationManagers)", "full_signature": "public  AuthenticationManagerImpl(boolean ldapProviderEnabled, List<AuthenticationManager> authenticationManagers)", "class_method_signature": "AuthenticationManagerImpl.AuthenticationManagerImpl(boolean ldapProviderEnabled, List<AuthenticationManager> authenticationManagers)", "testcase": false, "constructor": true}, {"identifier": "getObject", "parameters": "()", "modifiers": "public", "return": "AuthenticationManager", "signature": "AuthenticationManager getObject()", "full_signature": "public AuthenticationManager getObject()", "class_method_signature": "AuthenticationManagerImpl.getObject()", "testcase": false, "constructor": false}, {"identifier": "getObjectType", "parameters": "()", "modifiers": "public", "return": "Class", "signature": "Class getObjectType()", "full_signature": "public Class getObjectType()", "class_method_signature": "AuthenticationManagerImpl.getObjectType()", "testcase": false, "constructor": false}, {"identifier": "isSingleton", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSingleton()", "full_signature": "public boolean isSingleton()", "class_method_signature": "AuthenticationManagerImpl.isSingleton()", "testcase": false, "constructor": false}], "file": "tntconcept-core/src/main/java/com/autentia/tnt/manager/security/AuthenticationManagerImpl.java"}, "focal_method": {"identifier": "getObject", "parameters": "()", "modifiers": "public", "return": "AuthenticationManager", "body": "public AuthenticationManager getObject() throws Exception {\n\n        AuthenticationManager authenticationManager = null;\n\n        for (AuthenticationManager authManager : this.authenticationManagers) {\n\n            if (authManager instanceof AuthenticationManagerLdapImpl && ldapProviderEnabled) {\n                authenticationManager = authManager;\n            }\n            if (authManager instanceof AuthenticationManagerDaoImpl && !ldapProviderEnabled) {\n                authenticationManager = authManager;\n            }\n        }\n\n        return authenticationManager;\n    }", "signature": "AuthenticationManager getObject()", "full_signature": "public AuthenticationManager getObject()", "class_method_signature": "AuthenticationManagerImpl.getObject()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2503314, "url": "https://github.com/autentia/TNTConcept", "stars": 11, "created": "10/3/2011 8:00:30 AM +00:00", "updates": "2020-01-24T12:30:31+00:00", "fork": "False", "license": "licensed"}}