{"test_class": {"identifier": "FileInfoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FileInfo fileInfo;", "modifier": "private", "type": "FileInfo", "declarator": "fileInfo", "var_name": "fileInfo"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/domain/FileInfoTest.java"}, "test_case": {"identifier": "testApplyFormat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testApplyFormat()\n    {\n        assertNull(this.fileInfo.applyFormat(null));\n        String badDate = \"bad\";\n        assertEquals(badDate,this.fileInfo.applyFormat(badDate));\n        assertEquals(\"2014-01-21\",this.fileInfo.applyFormat(\"140121\"));\n    }", "signature": "void testApplyFormat()", "full_signature": "@Test public void testApplyFormat()", "class_method_signature": "FileInfoTest.testApplyFormat()", "testcase": true, "constructor": false, "invocations": ["assertNull", "applyFormat", "assertEquals", "applyFormat", "assertEquals", "applyFormat"]}, "focal_class": {"identifier": "FileInfo", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final SimpleDateFormat STRING_TO_DATE = new SimpleDateFormat(\"yyMMdd\");", "modifier": "private static final", "type": "SimpleDateFormat", "declarator": "STRING_TO_DATE = new SimpleDateFormat(\"yyMMdd\")", "var_name": "STRING_TO_DATE"}, {"original_string": "private static final SimpleDateFormat DATE_TO_STRING = new SimpleDateFormat(\"yyyy-MM-dd\");", "modifier": "private static final", "type": "SimpleDateFormat", "declarator": "DATE_TO_STRING = new SimpleDateFormat(\"yyyy-MM-dd\")", "var_name": "DATE_TO_STRING"}, {"original_string": "private String recordType;", "modifier": "private", "type": "String", "declarator": "recordType", "var_name": "recordType"}, {"original_string": "private String tag;", "modifier": "private", "type": "String", "declarator": "tag", "var_name": "tag"}, {"original_string": "private String date;", "modifier": "private", "type": "String", "declarator": "date", "var_name": "date"}, {"original_string": "private String release;", "modifier": "private", "type": "String", "declarator": "release", "var_name": "release"}, {"original_string": "private String recordCount;", "modifier": "private", "type": "String", "declarator": "recordCount", "var_name": "recordCount"}], "methods": [{"identifier": "FileInfo", "parameters": "()", "modifiers": "public", "return": "", "signature": " FileInfo()", "full_signature": "public  FileInfo()", "class_method_signature": "FileInfo.FileInfo()", "testcase": false, "constructor": true}, {"identifier": "FileInfo", "parameters": "(String recordType, String tag, String date, String release, String recordCount)", "modifiers": "public", "return": "", "signature": " FileInfo(String recordType, String tag, String date, String release, String recordCount)", "full_signature": "public  FileInfo(String recordType, String tag, String date, String release, String recordCount)", "class_method_signature": "FileInfo.FileInfo(String recordType, String tag, String date, String release, String recordCount)", "testcase": false, "constructor": true}, {"identifier": "getFormattedDate", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFormattedDate()", "full_signature": "public String getFormattedDate()", "class_method_signature": "FileInfo.getFormattedDate()", "testcase": false, "constructor": false}, {"identifier": "applyFormat", "parameters": "(String dateString)", "modifiers": "", "return": "String", "signature": "String applyFormat(String dateString)", "full_signature": " String applyFormat(String dateString)", "class_method_signature": "FileInfo.applyFormat(String dateString)", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDate()", "full_signature": "public String getDate()", "class_method_signature": "FileInfo.getDate()", "testcase": false, "constructor": false}, {"identifier": "setDate", "parameters": "(String date)", "modifiers": "public", "return": "void", "signature": "void setDate(String date)", "full_signature": "public void setDate(String date)", "class_method_signature": "FileInfo.setDate(String date)", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTag()", "full_signature": "public String getTag()", "class_method_signature": "FileInfo.getTag()", "testcase": false, "constructor": false}, {"identifier": "setTag", "parameters": "(String tag)", "modifiers": "public", "return": "void", "signature": "void setTag(String tag)", "full_signature": "public void setTag(String tag)", "class_method_signature": "FileInfo.setTag(String tag)", "testcase": false, "constructor": false}, {"identifier": "getRelease", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRelease()", "full_signature": "public String getRelease()", "class_method_signature": "FileInfo.getRelease()", "testcase": false, "constructor": false}, {"identifier": "setRelease", "parameters": "(String release)", "modifiers": "public", "return": "void", "signature": "void setRelease(String release)", "full_signature": "public void setRelease(String release)", "class_method_signature": "FileInfo.setRelease(String release)", "testcase": false, "constructor": false}, {"identifier": "getRecordCount", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRecordCount()", "full_signature": "public String getRecordCount()", "class_method_signature": "FileInfo.getRecordCount()", "testcase": false, "constructor": false}, {"identifier": "setRecordCount", "parameters": "(String recordCount)", "modifiers": "public", "return": "void", "signature": "void setRecordCount(String recordCount)", "full_signature": "public void setRecordCount(String recordCount)", "class_method_signature": "FileInfo.setRecordCount(String recordCount)", "testcase": false, "constructor": false}, {"identifier": "getRecordType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRecordType()", "full_signature": "public String getRecordType()", "class_method_signature": "FileInfo.getRecordType()", "testcase": false, "constructor": false}, {"identifier": "setRecordType", "parameters": "(String recordType)", "modifiers": "public", "return": "void", "signature": "void setRecordType(String recordType)", "full_signature": "public void setRecordType(String recordType)", "class_method_signature": "FileInfo.setRecordType(String recordType)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FileInfo.toString()", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/domain/FileInfo.java"}, "focal_method": {"identifier": "applyFormat", "parameters": "(String dateString)", "modifiers": "", "return": "String", "body": "String applyFormat(String dateString)\n    {\n        try {\n            return DATE_TO_STRING.format(STRING_TO_DATE.parse(dateString));\n        }catch(Exception ignored){\n            return dateString;\n        }\n    }", "signature": "String applyFormat(String dateString)", "full_signature": " String applyFormat(String dateString)", "class_method_signature": "FileInfo.applyFormat(String dateString)", "testcase": false, "constructor": false, "invocations": ["format", "parse"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}