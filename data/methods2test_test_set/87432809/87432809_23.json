{"test_class": {"identifier": "ForceDatabaseMetaDataTest", "superclass": "", "interfaces": "", "fields": [], "file": "sf-jdbc-driver/src/test/java/com/ascendix/jdbc/salesforce/metadata/ForceDatabaseMetaDataTest.java"}, "test_case": {"identifier": "testLookupTypeInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLookupTypeInfo() {\n        ForceDatabaseMetaData.TypeInfo actual = ForceDatabaseMetaData.lookupTypeInfo(\"int\");\n\n        assertEquals(\"int\", actual.typeName);\n        assertEquals(Types.INTEGER, actual.sqlDataType);\n    }", "signature": "void testLookupTypeInfo()", "full_signature": "@Test public void testLookupTypeInfo()", "class_method_signature": "ForceDatabaseMetaDataTest.testLookupTypeInfo()", "testcase": true, "constructor": false, "invocations": ["lookupTypeInfo", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "ForceDatabaseMetaData", "superclass": "", "interfaces": "implements DatabaseMetaData, Serializable", "fields": [{"original_string": "private static final String DEFAULT_SCHEMA = \"Salesforce\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_SCHEMA = \"Salesforce\"", "var_name": "DEFAULT_SCHEMA"}, {"original_string": "private transient PartnerService partnerService;", "modifier": "private transient", "type": "PartnerService", "declarator": "partnerService", "var_name": "partnerService"}, {"original_string": "private transient ForceConnection connection;", "modifier": "private transient", "type": "ForceConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private List<Table> tablesCache;", "modifier": "private", "type": "List<Table>", "declarator": "tablesCache", "var_name": "tablesCache"}, {"original_string": "private int counter;", "modifier": "private", "type": "int", "declarator": "counter", "var_name": "counter"}, {"original_string": "private static TypeInfo OTHER_TYPE_INFO = new TypeInfo(\"other\", Types.OTHER, 0x7fffffff, 0, 0, 0);", "modifier": "private static", "type": "TypeInfo", "declarator": "OTHER_TYPE_INFO = new TypeInfo(\"other\", Types.OTHER, 0x7fffffff, 0, 0, 0)", "var_name": "OTHER_TYPE_INFO"}, {"original_string": "private static TypeInfo TYPE_INFO_DATA[] = {\n            new TypeInfo(\"id\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"masterrecord\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"reference\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"string\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"encryptedstring\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"email\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"phone\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"url\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"textarea\", Types.LONGVARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"base64\", Types.BLOB, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"boolean\", Types.BOOLEAN, 1, 0, 0, 0),\n            new TypeInfo(\"_boolean\", Types.BOOLEAN, 1, 0, 0, 0),\n            new TypeInfo(\"byte\", Types.VARBINARY, 10, 0, 0, 10),\n            new TypeInfo(\"_byte\", Types.VARBINARY, 10, 0, 0, 10),\n            new TypeInfo(\"int\", Types.INTEGER, 10, 0, 0, 10),\n            new TypeInfo(\"_int\", Types.INTEGER, 10, 0, 0, 10),\n            new TypeInfo(\"decimal\", Types.DECIMAL, 17, -324, 306, 10),\n            new TypeInfo(\"double\", Types.DOUBLE, 17, -324, 306, 10),\n            new TypeInfo(\"_double\", Types.DOUBLE, 17, -324, 306, 10),\n            new TypeInfo(\"percent\", Types.DOUBLE, 17, -324, 306, 10),\n            new TypeInfo(\"currency\", Types.DOUBLE, 17, -324, 306, 10),\n            new TypeInfo(\"date\", Types.DATE, 10, 0, 0, 0),\n            new TypeInfo(\"time\", Types.TIME, 10, 0, 0, 0),\n            new TypeInfo(\"datetime\", Types.TIMESTAMP, 10, 0, 0, 0),\n            new TypeInfo(\"picklist\", Types.ARRAY, 0, 0, 0, 0),\n            new TypeInfo(\"multipicklist\", Types.ARRAY, 0, 0, 0, 0),\n            new TypeInfo(\"combobox\", Types.ARRAY, 0, 0, 0, 0),\n            new TypeInfo(\"anyType\", Types.OTHER, 0, 0, 0, 0),\n    };", "modifier": "private static", "type": "TypeInfo", "declarator": "TYPE_INFO_DATA[] = {\n            new TypeInfo(\"id\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"masterrecord\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"reference\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"string\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"encryptedstring\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"email\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"phone\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"url\", Types.VARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"textarea\", Types.LONGVARCHAR, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"base64\", Types.BLOB, 0x7fffffff, 0, 0, 0),\n            new TypeInfo(\"boolean\", Types.BOOLEAN, 1, 0, 0, 0),\n            new TypeInfo(\"_boolean\", Types.BOOLEAN, 1, 0, 0, 0),\n            new TypeInfo(\"byte\", Types.VARBINARY, 10, 0, 0, 10),\n            new TypeInfo(\"_byte\", Types.VARBINARY, 10, 0, 0, 10),\n            new TypeInfo(\"int\", Types.INTEGER, 10, 0, 0, 10),\n            new TypeInfo(\"_int\", Types.INTEGER, 10, 0, 0, 10),\n            new TypeInfo(\"decimal\", Types.DECIMAL, 17, -324, 306, 10),\n            new TypeInfo(\"double\", Types.DOUBLE, 17, -324, 306, 10),\n            new TypeInfo(\"_double\", Types.DOUBLE, 17, -324, 306, 10),\n            new TypeInfo(\"percent\", Types.DOUBLE, 17, -324, 306, 10),\n            new TypeInfo(\"currency\", Types.DOUBLE, 17, -324, 306, 10),\n            new TypeInfo(\"date\", Types.DATE, 10, 0, 0, 0),\n            new TypeInfo(\"time\", Types.TIME, 10, 0, 0, 0),\n            new TypeInfo(\"datetime\", Types.TIMESTAMP, 10, 0, 0, 0),\n            new TypeInfo(\"picklist\", Types.ARRAY, 0, 0, 0, 0),\n            new TypeInfo(\"multipicklist\", Types.ARRAY, 0, 0, 0, 0),\n            new TypeInfo(\"combobox\", Types.ARRAY, 0, 0, 0, 0),\n            new TypeInfo(\"anyType\", Types.OTHER, 0, 0, 0, 0),\n    }", "var_name": "TYPE_INFO_DATA"}], "methods": [{"identifier": "ForceDatabaseMetaData", "parameters": "(ForceConnection connection)", "modifiers": "public", "return": "", "signature": " ForceDatabaseMetaData(ForceConnection connection)", "full_signature": "public  ForceDatabaseMetaData(ForceConnection connection)", "class_method_signature": "ForceDatabaseMetaData.ForceDatabaseMetaData(ForceConnection connection)", "testcase": false, "constructor": true}, {"identifier": "getTables", "parameters": "(String catalog, String schemaPattern, String tableNamePattern, String[] types)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getTables(String catalog, String schemaPattern, String tableNamePattern, String[] types)", "full_signature": "@Override public ResultSet getTables(String catalog, String schemaPattern, String tableNamePattern, String[] types)", "class_method_signature": "ForceDatabaseMetaData.getTables(String catalog, String schemaPattern, String tableNamePattern, String[] types)", "testcase": false, "constructor": false}, {"identifier": "getTables", "parameters": "()", "modifiers": "private", "return": "List<Table>", "signature": "List<Table> getTables()", "full_signature": "private List<Table> getTables()", "class_method_signature": "ForceDatabaseMetaData.getTables()", "testcase": false, "constructor": false}, {"identifier": "findTableInfo", "parameters": "(String tableName)", "modifiers": "public", "return": "Table", "signature": "Table findTableInfo(String tableName)", "full_signature": "public Table findTableInfo(String tableName)", "class_method_signature": "ForceDatabaseMetaData.findTableInfo(String tableName)", "testcase": false, "constructor": false}, {"identifier": "getColumns", "parameters": "(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern)", "full_signature": "@Override public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern)", "testcase": false, "constructor": false}, {"identifier": "lookupTypeInfo", "parameters": "(String forceTypeName)", "modifiers": "public static", "return": "TypeInfo", "signature": "TypeInfo lookupTypeInfo(String forceTypeName)", "full_signature": "public static TypeInfo lookupTypeInfo(String forceTypeName)", "class_method_signature": "ForceDatabaseMetaData.lookupTypeInfo(String forceTypeName)", "testcase": false, "constructor": false}, {"identifier": "getSchemas", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getSchemas()", "full_signature": "@Override public ResultSet getSchemas()", "class_method_signature": "ForceDatabaseMetaData.getSchemas()", "testcase": false, "constructor": false}, {"identifier": "getPrimaryKeys", "parameters": "(String catalog, String schema, String tableName)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getPrimaryKeys(String catalog, String schema, String tableName)", "full_signature": "@Override public ResultSet getPrimaryKeys(String catalog, String schema, String tableName)", "class_method_signature": "ForceDatabaseMetaData.getPrimaryKeys(String catalog, String schema, String tableName)", "testcase": false, "constructor": false}, {"identifier": "getImportedKeys", "parameters": "(String catalog, String schema, String tableName)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getImportedKeys(String catalog, String schema, String tableName)", "full_signature": "@Override public ResultSet getImportedKeys(String catalog, String schema, String tableName)", "class_method_signature": "ForceDatabaseMetaData.getImportedKeys(String catalog, String schema, String tableName)", "testcase": false, "constructor": false}, {"identifier": "getIndexInfo", "parameters": "(String catalog, String schema, String tableName, boolean unique, boolean approximate)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getIndexInfo(String catalog, String schema, String tableName, boolean unique, boolean approximate)", "full_signature": "@Override public ResultSet getIndexInfo(String catalog, String schema, String tableName, boolean unique, boolean approximate)", "class_method_signature": "ForceDatabaseMetaData.getIndexInfo(String catalog, String schema, String tableName, boolean unique, boolean approximate)", "testcase": false, "constructor": false}, {"identifier": "getCatalogs", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "ResultSet", "signature": "ResultSet getCatalogs()", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public ResultSet getCatalogs()", "class_method_signature": "ForceDatabaseMetaData.getCatalogs()", "testcase": false, "constructor": false}, {"identifier": "getTypeInfo", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getTypeInfo()", "full_signature": "@Override public ResultSet getTypeInfo()", "class_method_signature": "ForceDatabaseMetaData.getTypeInfo()", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(Class<T> iface)", "modifiers": "@Override public", "return": "T", "signature": "T unwrap(Class<T> iface)", "full_signature": "@Override public T unwrap(Class<T> iface)", "class_method_signature": "ForceDatabaseMetaData.unwrap(Class<T> iface)", "testcase": false, "constructor": false}, {"identifier": "isWrapperFor", "parameters": "(Class<?> iface)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWrapperFor(Class<?> iface)", "full_signature": "@Override public boolean isWrapperFor(Class<?> iface)", "class_method_signature": "ForceDatabaseMetaData.isWrapperFor(Class<?> iface)", "testcase": false, "constructor": false}, {"identifier": "allProceduresAreCallable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean allProceduresAreCallable()", "full_signature": "@Override public boolean allProceduresAreCallable()", "class_method_signature": "ForceDatabaseMetaData.allProceduresAreCallable()", "testcase": false, "constructor": false}, {"identifier": "allTablesAreSelectable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean allTablesAreSelectable()", "full_signature": "@Override public boolean allTablesAreSelectable()", "class_method_signature": "ForceDatabaseMetaData.allTablesAreSelectable()", "testcase": false, "constructor": false}, {"identifier": "getURL", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getURL()", "full_signature": "@Override public String getURL()", "class_method_signature": "ForceDatabaseMetaData.getURL()", "testcase": false, "constructor": false}, {"identifier": "getUserName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUserName()", "full_signature": "@Override public String getUserName()", "class_method_signature": "ForceDatabaseMetaData.getUserName()", "testcase": false, "constructor": false}, {"identifier": "isReadOnly", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadOnly()", "full_signature": "@Override public boolean isReadOnly()", "class_method_signature": "ForceDatabaseMetaData.isReadOnly()", "testcase": false, "constructor": false}, {"identifier": "nullsAreSortedHigh", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean nullsAreSortedHigh()", "full_signature": "@Override public boolean nullsAreSortedHigh()", "class_method_signature": "ForceDatabaseMetaData.nullsAreSortedHigh()", "testcase": false, "constructor": false}, {"identifier": "nullsAreSortedLow", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean nullsAreSortedLow()", "full_signature": "@Override public boolean nullsAreSortedLow()", "class_method_signature": "ForceDatabaseMetaData.nullsAreSortedLow()", "testcase": false, "constructor": false}, {"identifier": "nullsAreSortedAtStart", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean nullsAreSortedAtStart()", "full_signature": "@Override public boolean nullsAreSortedAtStart()", "class_method_signature": "ForceDatabaseMetaData.nullsAreSortedAtStart()", "testcase": false, "constructor": false}, {"identifier": "nullsAreSortedAtEnd", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean nullsAreSortedAtEnd()", "full_signature": "@Override public boolean nullsAreSortedAtEnd()", "class_method_signature": "ForceDatabaseMetaData.nullsAreSortedAtEnd()", "testcase": false, "constructor": false}, {"identifier": "getDatabaseProductName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDatabaseProductName()", "full_signature": "@Override public String getDatabaseProductName()", "class_method_signature": "ForceDatabaseMetaData.getDatabaseProductName()", "testcase": false, "constructor": false}, {"identifier": "getDatabaseProductVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDatabaseProductVersion()", "full_signature": "@Override public String getDatabaseProductVersion()", "class_method_signature": "ForceDatabaseMetaData.getDatabaseProductVersion()", "testcase": false, "constructor": false}, {"identifier": "getDriverName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDriverName()", "full_signature": "@Override public String getDriverName()", "class_method_signature": "ForceDatabaseMetaData.getDriverName()", "testcase": false, "constructor": false}, {"identifier": "getDriverVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDriverVersion()", "full_signature": "@Override public String getDriverVersion()", "class_method_signature": "ForceDatabaseMetaData.getDriverVersion()", "testcase": false, "constructor": false}, {"identifier": "getDriverMajorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDriverMajorVersion()", "full_signature": "@Override public int getDriverMajorVersion()", "class_method_signature": "ForceDatabaseMetaData.getDriverMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getDriverMinorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDriverMinorVersion()", "full_signature": "@Override public int getDriverMinorVersion()", "class_method_signature": "ForceDatabaseMetaData.getDriverMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "usesLocalFiles", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean usesLocalFiles()", "full_signature": "@Override public boolean usesLocalFiles()", "class_method_signature": "ForceDatabaseMetaData.usesLocalFiles()", "testcase": false, "constructor": false}, {"identifier": "usesLocalFilePerTable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean usesLocalFilePerTable()", "full_signature": "@Override public boolean usesLocalFilePerTable()", "class_method_signature": "ForceDatabaseMetaData.usesLocalFilePerTable()", "testcase": false, "constructor": false}, {"identifier": "supportsMixedCaseIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsMixedCaseIdentifiers()", "full_signature": "@Override public boolean supportsMixedCaseIdentifiers()", "class_method_signature": "ForceDatabaseMetaData.supportsMixedCaseIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "storesUpperCaseIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean storesUpperCaseIdentifiers()", "full_signature": "@Override public boolean storesUpperCaseIdentifiers()", "class_method_signature": "ForceDatabaseMetaData.storesUpperCaseIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "storesLowerCaseIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean storesLowerCaseIdentifiers()", "full_signature": "@Override public boolean storesLowerCaseIdentifiers()", "class_method_signature": "ForceDatabaseMetaData.storesLowerCaseIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "storesMixedCaseIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean storesMixedCaseIdentifiers()", "full_signature": "@Override public boolean storesMixedCaseIdentifiers()", "class_method_signature": "ForceDatabaseMetaData.storesMixedCaseIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "supportsMixedCaseQuotedIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsMixedCaseQuotedIdentifiers()", "full_signature": "@Override public boolean supportsMixedCaseQuotedIdentifiers()", "class_method_signature": "ForceDatabaseMetaData.supportsMixedCaseQuotedIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "storesUpperCaseQuotedIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean storesUpperCaseQuotedIdentifiers()", "full_signature": "@Override public boolean storesUpperCaseQuotedIdentifiers()", "class_method_signature": "ForceDatabaseMetaData.storesUpperCaseQuotedIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "storesLowerCaseQuotedIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean storesLowerCaseQuotedIdentifiers()", "full_signature": "@Override public boolean storesLowerCaseQuotedIdentifiers()", "class_method_signature": "ForceDatabaseMetaData.storesLowerCaseQuotedIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "storesMixedCaseQuotedIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean storesMixedCaseQuotedIdentifiers()", "full_signature": "@Override public boolean storesMixedCaseQuotedIdentifiers()", "class_method_signature": "ForceDatabaseMetaData.storesMixedCaseQuotedIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "getIdentifierQuoteString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getIdentifierQuoteString()", "full_signature": "@Override public String getIdentifierQuoteString()", "class_method_signature": "ForceDatabaseMetaData.getIdentifierQuoteString()", "testcase": false, "constructor": false}, {"identifier": "getSQLKeywords", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSQLKeywords()", "full_signature": "@Override public String getSQLKeywords()", "class_method_signature": "ForceDatabaseMetaData.getSQLKeywords()", "testcase": false, "constructor": false}, {"identifier": "getNumericFunctions", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getNumericFunctions()", "full_signature": "@Override public String getNumericFunctions()", "class_method_signature": "ForceDatabaseMetaData.getNumericFunctions()", "testcase": false, "constructor": false}, {"identifier": "getStringFunctions", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStringFunctions()", "full_signature": "@Override public String getStringFunctions()", "class_method_signature": "ForceDatabaseMetaData.getStringFunctions()", "testcase": false, "constructor": false}, {"identifier": "getSystemFunctions", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSystemFunctions()", "full_signature": "@Override public String getSystemFunctions()", "class_method_signature": "ForceDatabaseMetaData.getSystemFunctions()", "testcase": false, "constructor": false}, {"identifier": "getTimeDateFunctions", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTimeDateFunctions()", "full_signature": "@Override public String getTimeDateFunctions()", "class_method_signature": "ForceDatabaseMetaData.getTimeDateFunctions()", "testcase": false, "constructor": false}, {"identifier": "getSearchStringEscape", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSearchStringEscape()", "full_signature": "@Override public String getSearchStringEscape()", "class_method_signature": "ForceDatabaseMetaData.getSearchStringEscape()", "testcase": false, "constructor": false}, {"identifier": "getExtraNameCharacters", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getExtraNameCharacters()", "full_signature": "@Override public String getExtraNameCharacters()", "class_method_signature": "ForceDatabaseMetaData.getExtraNameCharacters()", "testcase": false, "constructor": false}, {"identifier": "supportsAlterTableWithAddColumn", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsAlterTableWithAddColumn()", "full_signature": "@Override public boolean supportsAlterTableWithAddColumn()", "class_method_signature": "ForceDatabaseMetaData.supportsAlterTableWithAddColumn()", "testcase": false, "constructor": false}, {"identifier": "supportsAlterTableWithDropColumn", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsAlterTableWithDropColumn()", "full_signature": "@Override public boolean supportsAlterTableWithDropColumn()", "class_method_signature": "ForceDatabaseMetaData.supportsAlterTableWithDropColumn()", "testcase": false, "constructor": false}, {"identifier": "supportsColumnAliasing", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsColumnAliasing()", "full_signature": "@Override public boolean supportsColumnAliasing()", "class_method_signature": "ForceDatabaseMetaData.supportsColumnAliasing()", "testcase": false, "constructor": false}, {"identifier": "nullPlusNonNullIsNull", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean nullPlusNonNullIsNull()", "full_signature": "@Override public boolean nullPlusNonNullIsNull()", "class_method_signature": "ForceDatabaseMetaData.nullPlusNonNullIsNull()", "testcase": false, "constructor": false}, {"identifier": "supportsConvert", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsConvert()", "full_signature": "@Override public boolean supportsConvert()", "class_method_signature": "ForceDatabaseMetaData.supportsConvert()", "testcase": false, "constructor": false}, {"identifier": "supportsConvert", "parameters": "(int fromType, int toType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsConvert(int fromType, int toType)", "full_signature": "@Override public boolean supportsConvert(int fromType, int toType)", "class_method_signature": "ForceDatabaseMetaData.supportsConvert(int fromType, int toType)", "testcase": false, "constructor": false}, {"identifier": "supportsTableCorrelationNames", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsTableCorrelationNames()", "full_signature": "@Override public boolean supportsTableCorrelationNames()", "class_method_signature": "ForceDatabaseMetaData.supportsTableCorrelationNames()", "testcase": false, "constructor": false}, {"identifier": "supportsDifferentTableCorrelationNames", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsDifferentTableCorrelationNames()", "full_signature": "@Override public boolean supportsDifferentTableCorrelationNames()", "class_method_signature": "ForceDatabaseMetaData.supportsDifferentTableCorrelationNames()", "testcase": false, "constructor": false}, {"identifier": "supportsExpressionsInOrderBy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsExpressionsInOrderBy()", "full_signature": "@Override public boolean supportsExpressionsInOrderBy()", "class_method_signature": "ForceDatabaseMetaData.supportsExpressionsInOrderBy()", "testcase": false, "constructor": false}, {"identifier": "supportsOrderByUnrelated", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsOrderByUnrelated()", "full_signature": "@Override public boolean supportsOrderByUnrelated()", "class_method_signature": "ForceDatabaseMetaData.supportsOrderByUnrelated()", "testcase": false, "constructor": false}, {"identifier": "supportsGroupBy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsGroupBy()", "full_signature": "@Override public boolean supportsGroupBy()", "class_method_signature": "ForceDatabaseMetaData.supportsGroupBy()", "testcase": false, "constructor": false}, {"identifier": "supportsGroupByUnrelated", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsGroupByUnrelated()", "full_signature": "@Override public boolean supportsGroupByUnrelated()", "class_method_signature": "ForceDatabaseMetaData.supportsGroupByUnrelated()", "testcase": false, "constructor": false}, {"identifier": "supportsGroupByBeyondSelect", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsGroupByBeyondSelect()", "full_signature": "@Override public boolean supportsGroupByBeyondSelect()", "class_method_signature": "ForceDatabaseMetaData.supportsGroupByBeyondSelect()", "testcase": false, "constructor": false}, {"identifier": "supportsLikeEscapeClause", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsLikeEscapeClause()", "full_signature": "@Override public boolean supportsLikeEscapeClause()", "class_method_signature": "ForceDatabaseMetaData.supportsLikeEscapeClause()", "testcase": false, "constructor": false}, {"identifier": "supportsMultipleResultSets", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsMultipleResultSets()", "full_signature": "@Override public boolean supportsMultipleResultSets()", "class_method_signature": "ForceDatabaseMetaData.supportsMultipleResultSets()", "testcase": false, "constructor": false}, {"identifier": "supportsMultipleTransactions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsMultipleTransactions()", "full_signature": "@Override public boolean supportsMultipleTransactions()", "class_method_signature": "ForceDatabaseMetaData.supportsMultipleTransactions()", "testcase": false, "constructor": false}, {"identifier": "supportsNonNullableColumns", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsNonNullableColumns()", "full_signature": "@Override public boolean supportsNonNullableColumns()", "class_method_signature": "ForceDatabaseMetaData.supportsNonNullableColumns()", "testcase": false, "constructor": false}, {"identifier": "supportsMinimumSQLGrammar", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsMinimumSQLGrammar()", "full_signature": "@Override public boolean supportsMinimumSQLGrammar()", "class_method_signature": "ForceDatabaseMetaData.supportsMinimumSQLGrammar()", "testcase": false, "constructor": false}, {"identifier": "supportsCoreSQLGrammar", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsCoreSQLGrammar()", "full_signature": "@Override public boolean supportsCoreSQLGrammar()", "class_method_signature": "ForceDatabaseMetaData.supportsCoreSQLGrammar()", "testcase": false, "constructor": false}, {"identifier": "supportsExtendedSQLGrammar", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsExtendedSQLGrammar()", "full_signature": "@Override public boolean supportsExtendedSQLGrammar()", "class_method_signature": "ForceDatabaseMetaData.supportsExtendedSQLGrammar()", "testcase": false, "constructor": false}, {"identifier": "supportsANSI92EntryLevelSQL", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsANSI92EntryLevelSQL()", "full_signature": "@Override public boolean supportsANSI92EntryLevelSQL()", "class_method_signature": "ForceDatabaseMetaData.supportsANSI92EntryLevelSQL()", "testcase": false, "constructor": false}, {"identifier": "supportsANSI92IntermediateSQL", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsANSI92IntermediateSQL()", "full_signature": "@Override public boolean supportsANSI92IntermediateSQL()", "class_method_signature": "ForceDatabaseMetaData.supportsANSI92IntermediateSQL()", "testcase": false, "constructor": false}, {"identifier": "supportsANSI92FullSQL", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsANSI92FullSQL()", "full_signature": "@Override public boolean supportsANSI92FullSQL()", "class_method_signature": "ForceDatabaseMetaData.supportsANSI92FullSQL()", "testcase": false, "constructor": false}, {"identifier": "supportsIntegrityEnhancementFacility", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsIntegrityEnhancementFacility()", "full_signature": "@Override public boolean supportsIntegrityEnhancementFacility()", "class_method_signature": "ForceDatabaseMetaData.supportsIntegrityEnhancementFacility()", "testcase": false, "constructor": false}, {"identifier": "supportsOuterJoins", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsOuterJoins()", "full_signature": "@Override public boolean supportsOuterJoins()", "class_method_signature": "ForceDatabaseMetaData.supportsOuterJoins()", "testcase": false, "constructor": false}, {"identifier": "supportsFullOuterJoins", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsFullOuterJoins()", "full_signature": "@Override public boolean supportsFullOuterJoins()", "class_method_signature": "ForceDatabaseMetaData.supportsFullOuterJoins()", "testcase": false, "constructor": false}, {"identifier": "supportsLimitedOuterJoins", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsLimitedOuterJoins()", "full_signature": "@Override public boolean supportsLimitedOuterJoins()", "class_method_signature": "ForceDatabaseMetaData.supportsLimitedOuterJoins()", "testcase": false, "constructor": false}, {"identifier": "getSchemaTerm", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSchemaTerm()", "full_signature": "@Override public String getSchemaTerm()", "class_method_signature": "ForceDatabaseMetaData.getSchemaTerm()", "testcase": false, "constructor": false}, {"identifier": "getProcedureTerm", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getProcedureTerm()", "full_signature": "@Override public String getProcedureTerm()", "class_method_signature": "ForceDatabaseMetaData.getProcedureTerm()", "testcase": false, "constructor": false}, {"identifier": "getCatalogTerm", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCatalogTerm()", "full_signature": "@Override public String getCatalogTerm()", "class_method_signature": "ForceDatabaseMetaData.getCatalogTerm()", "testcase": false, "constructor": false}, {"identifier": "isCatalogAtStart", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCatalogAtStart()", "full_signature": "@Override public boolean isCatalogAtStart()", "class_method_signature": "ForceDatabaseMetaData.isCatalogAtStart()", "testcase": false, "constructor": false}, {"identifier": "getCatalogSeparator", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCatalogSeparator()", "full_signature": "@Override public String getCatalogSeparator()", "class_method_signature": "ForceDatabaseMetaData.getCatalogSeparator()", "testcase": false, "constructor": false}, {"identifier": "supportsSchemasInDataManipulation", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSchemasInDataManipulation()", "full_signature": "@Override public boolean supportsSchemasInDataManipulation()", "class_method_signature": "ForceDatabaseMetaData.supportsSchemasInDataManipulation()", "testcase": false, "constructor": false}, {"identifier": "supportsSchemasInProcedureCalls", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSchemasInProcedureCalls()", "full_signature": "@Override public boolean supportsSchemasInProcedureCalls()", "class_method_signature": "ForceDatabaseMetaData.supportsSchemasInProcedureCalls()", "testcase": false, "constructor": false}, {"identifier": "supportsSchemasInTableDefinitions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSchemasInTableDefinitions()", "full_signature": "@Override public boolean supportsSchemasInTableDefinitions()", "class_method_signature": "ForceDatabaseMetaData.supportsSchemasInTableDefinitions()", "testcase": false, "constructor": false}, {"identifier": "supportsSchemasInIndexDefinitions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSchemasInIndexDefinitions()", "full_signature": "@Override public boolean supportsSchemasInIndexDefinitions()", "class_method_signature": "ForceDatabaseMetaData.supportsSchemasInIndexDefinitions()", "testcase": false, "constructor": false}, {"identifier": "supportsSchemasInPrivilegeDefinitions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSchemasInPrivilegeDefinitions()", "full_signature": "@Override public boolean supportsSchemasInPrivilegeDefinitions()", "class_method_signature": "ForceDatabaseMetaData.supportsSchemasInPrivilegeDefinitions()", "testcase": false, "constructor": false}, {"identifier": "supportsCatalogsInDataManipulation", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsCatalogsInDataManipulation()", "full_signature": "@Override public boolean supportsCatalogsInDataManipulation()", "class_method_signature": "ForceDatabaseMetaData.supportsCatalogsInDataManipulation()", "testcase": false, "constructor": false}, {"identifier": "supportsCatalogsInProcedureCalls", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsCatalogsInProcedureCalls()", "full_signature": "@Override public boolean supportsCatalogsInProcedureCalls()", "class_method_signature": "ForceDatabaseMetaData.supportsCatalogsInProcedureCalls()", "testcase": false, "constructor": false}, {"identifier": "supportsCatalogsInTableDefinitions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsCatalogsInTableDefinitions()", "full_signature": "@Override public boolean supportsCatalogsInTableDefinitions()", "class_method_signature": "ForceDatabaseMetaData.supportsCatalogsInTableDefinitions()", "testcase": false, "constructor": false}, {"identifier": "supportsCatalogsInIndexDefinitions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsCatalogsInIndexDefinitions()", "full_signature": "@Override public boolean supportsCatalogsInIndexDefinitions()", "class_method_signature": "ForceDatabaseMetaData.supportsCatalogsInIndexDefinitions()", "testcase": false, "constructor": false}, {"identifier": "supportsCatalogsInPrivilegeDefinitions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsCatalogsInPrivilegeDefinitions()", "full_signature": "@Override public boolean supportsCatalogsInPrivilegeDefinitions()", "class_method_signature": "ForceDatabaseMetaData.supportsCatalogsInPrivilegeDefinitions()", "testcase": false, "constructor": false}, {"identifier": "supportsPositionedDelete", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsPositionedDelete()", "full_signature": "@Override public boolean supportsPositionedDelete()", "class_method_signature": "ForceDatabaseMetaData.supportsPositionedDelete()", "testcase": false, "constructor": false}, {"identifier": "supportsPositionedUpdate", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsPositionedUpdate()", "full_signature": "@Override public boolean supportsPositionedUpdate()", "class_method_signature": "ForceDatabaseMetaData.supportsPositionedUpdate()", "testcase": false, "constructor": false}, {"identifier": "supportsSelectForUpdate", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSelectForUpdate()", "full_signature": "@Override public boolean supportsSelectForUpdate()", "class_method_signature": "ForceDatabaseMetaData.supportsSelectForUpdate()", "testcase": false, "constructor": false}, {"identifier": "supportsStoredProcedures", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsStoredProcedures()", "full_signature": "@Override public boolean supportsStoredProcedures()", "class_method_signature": "ForceDatabaseMetaData.supportsStoredProcedures()", "testcase": false, "constructor": false}, {"identifier": "supportsSubqueriesInComparisons", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSubqueriesInComparisons()", "full_signature": "@Override public boolean supportsSubqueriesInComparisons()", "class_method_signature": "ForceDatabaseMetaData.supportsSubqueriesInComparisons()", "testcase": false, "constructor": false}, {"identifier": "supportsSubqueriesInExists", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSubqueriesInExists()", "full_signature": "@Override public boolean supportsSubqueriesInExists()", "class_method_signature": "ForceDatabaseMetaData.supportsSubqueriesInExists()", "testcase": false, "constructor": false}, {"identifier": "supportsSubqueriesInIns", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSubqueriesInIns()", "full_signature": "@Override public boolean supportsSubqueriesInIns()", "class_method_signature": "ForceDatabaseMetaData.supportsSubqueriesInIns()", "testcase": false, "constructor": false}, {"identifier": "supportsSubqueriesInQuantifieds", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSubqueriesInQuantifieds()", "full_signature": "@Override public boolean supportsSubqueriesInQuantifieds()", "class_method_signature": "ForceDatabaseMetaData.supportsSubqueriesInQuantifieds()", "testcase": false, "constructor": false}, {"identifier": "supportsCorrelatedSubqueries", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsCorrelatedSubqueries()", "full_signature": "@Override public boolean supportsCorrelatedSubqueries()", "class_method_signature": "ForceDatabaseMetaData.supportsCorrelatedSubqueries()", "testcase": false, "constructor": false}, {"identifier": "supportsUnion", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsUnion()", "full_signature": "@Override public boolean supportsUnion()", "class_method_signature": "ForceDatabaseMetaData.supportsUnion()", "testcase": false, "constructor": false}, {"identifier": "supportsUnionAll", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsUnionAll()", "full_signature": "@Override public boolean supportsUnionAll()", "class_method_signature": "ForceDatabaseMetaData.supportsUnionAll()", "testcase": false, "constructor": false}, {"identifier": "supportsOpenCursorsAcrossCommit", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsOpenCursorsAcrossCommit()", "full_signature": "@Override public boolean supportsOpenCursorsAcrossCommit()", "class_method_signature": "ForceDatabaseMetaData.supportsOpenCursorsAcrossCommit()", "testcase": false, "constructor": false}, {"identifier": "supportsOpenCursorsAcrossRollback", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsOpenCursorsAcrossRollback()", "full_signature": "@Override public boolean supportsOpenCursorsAcrossRollback()", "class_method_signature": "ForceDatabaseMetaData.supportsOpenCursorsAcrossRollback()", "testcase": false, "constructor": false}, {"identifier": "supportsOpenStatementsAcrossCommit", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsOpenStatementsAcrossCommit()", "full_signature": "@Override public boolean supportsOpenStatementsAcrossCommit()", "class_method_signature": "ForceDatabaseMetaData.supportsOpenStatementsAcrossCommit()", "testcase": false, "constructor": false}, {"identifier": "supportsOpenStatementsAcrossRollback", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsOpenStatementsAcrossRollback()", "full_signature": "@Override public boolean supportsOpenStatementsAcrossRollback()", "class_method_signature": "ForceDatabaseMetaData.supportsOpenStatementsAcrossRollback()", "testcase": false, "constructor": false}, {"identifier": "getMaxBinaryLiteralLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxBinaryLiteralLength()", "full_signature": "@Override public int getMaxBinaryLiteralLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxBinaryLiteralLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxCharLiteralLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxCharLiteralLength()", "full_signature": "@Override public int getMaxCharLiteralLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxCharLiteralLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxColumnNameLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxColumnNameLength()", "full_signature": "@Override public int getMaxColumnNameLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxColumnNameLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxColumnsInGroupBy", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxColumnsInGroupBy()", "full_signature": "@Override public int getMaxColumnsInGroupBy()", "class_method_signature": "ForceDatabaseMetaData.getMaxColumnsInGroupBy()", "testcase": false, "constructor": false}, {"identifier": "getMaxColumnsInIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxColumnsInIndex()", "full_signature": "@Override public int getMaxColumnsInIndex()", "class_method_signature": "ForceDatabaseMetaData.getMaxColumnsInIndex()", "testcase": false, "constructor": false}, {"identifier": "getMaxColumnsInOrderBy", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxColumnsInOrderBy()", "full_signature": "@Override public int getMaxColumnsInOrderBy()", "class_method_signature": "ForceDatabaseMetaData.getMaxColumnsInOrderBy()", "testcase": false, "constructor": false}, {"identifier": "getMaxColumnsInSelect", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxColumnsInSelect()", "full_signature": "@Override public int getMaxColumnsInSelect()", "class_method_signature": "ForceDatabaseMetaData.getMaxColumnsInSelect()", "testcase": false, "constructor": false}, {"identifier": "getMaxColumnsInTable", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxColumnsInTable()", "full_signature": "@Override public int getMaxColumnsInTable()", "class_method_signature": "ForceDatabaseMetaData.getMaxColumnsInTable()", "testcase": false, "constructor": false}, {"identifier": "getMaxConnections", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxConnections()", "full_signature": "@Override public int getMaxConnections()", "class_method_signature": "ForceDatabaseMetaData.getMaxConnections()", "testcase": false, "constructor": false}, {"identifier": "getMaxCursorNameLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxCursorNameLength()", "full_signature": "@Override public int getMaxCursorNameLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxCursorNameLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxIndexLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxIndexLength()", "full_signature": "@Override public int getMaxIndexLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxIndexLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxSchemaNameLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxSchemaNameLength()", "full_signature": "@Override public int getMaxSchemaNameLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxSchemaNameLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxProcedureNameLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxProcedureNameLength()", "full_signature": "@Override public int getMaxProcedureNameLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxProcedureNameLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxCatalogNameLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxCatalogNameLength()", "full_signature": "@Override public int getMaxCatalogNameLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxCatalogNameLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxRowSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxRowSize()", "full_signature": "@Override public int getMaxRowSize()", "class_method_signature": "ForceDatabaseMetaData.getMaxRowSize()", "testcase": false, "constructor": false}, {"identifier": "doesMaxRowSizeIncludeBlobs", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean doesMaxRowSizeIncludeBlobs()", "full_signature": "@Override public boolean doesMaxRowSizeIncludeBlobs()", "class_method_signature": "ForceDatabaseMetaData.doesMaxRowSizeIncludeBlobs()", "testcase": false, "constructor": false}, {"identifier": "getMaxStatementLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxStatementLength()", "full_signature": "@Override public int getMaxStatementLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxStatementLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxStatements", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxStatements()", "full_signature": "@Override public int getMaxStatements()", "class_method_signature": "ForceDatabaseMetaData.getMaxStatements()", "testcase": false, "constructor": false}, {"identifier": "getMaxTableNameLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxTableNameLength()", "full_signature": "@Override public int getMaxTableNameLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxTableNameLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxTablesInSelect", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxTablesInSelect()", "full_signature": "@Override public int getMaxTablesInSelect()", "class_method_signature": "ForceDatabaseMetaData.getMaxTablesInSelect()", "testcase": false, "constructor": false}, {"identifier": "getMaxUserNameLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxUserNameLength()", "full_signature": "@Override public int getMaxUserNameLength()", "class_method_signature": "ForceDatabaseMetaData.getMaxUserNameLength()", "testcase": false, "constructor": false}, {"identifier": "getDefaultTransactionIsolation", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDefaultTransactionIsolation()", "full_signature": "@Override public int getDefaultTransactionIsolation()", "class_method_signature": "ForceDatabaseMetaData.getDefaultTransactionIsolation()", "testcase": false, "constructor": false}, {"identifier": "supportsTransactions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsTransactions()", "full_signature": "@Override public boolean supportsTransactions()", "class_method_signature": "ForceDatabaseMetaData.supportsTransactions()", "testcase": false, "constructor": false}, {"identifier": "supportsTransactionIsolationLevel", "parameters": "(int level)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsTransactionIsolationLevel(int level)", "full_signature": "@Override public boolean supportsTransactionIsolationLevel(int level)", "class_method_signature": "ForceDatabaseMetaData.supportsTransactionIsolationLevel(int level)", "testcase": false, "constructor": false}, {"identifier": "supportsDataDefinitionAndDataManipulationTransactions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsDataDefinitionAndDataManipulationTransactions()", "full_signature": "@Override public boolean supportsDataDefinitionAndDataManipulationTransactions()", "class_method_signature": "ForceDatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions()", "testcase": false, "constructor": false}, {"identifier": "supportsDataManipulationTransactionsOnly", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsDataManipulationTransactionsOnly()", "full_signature": "@Override public boolean supportsDataManipulationTransactionsOnly()", "class_method_signature": "ForceDatabaseMetaData.supportsDataManipulationTransactionsOnly()", "testcase": false, "constructor": false}, {"identifier": "dataDefinitionCausesTransactionCommit", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dataDefinitionCausesTransactionCommit()", "full_signature": "@Override public boolean dataDefinitionCausesTransactionCommit()", "class_method_signature": "ForceDatabaseMetaData.dataDefinitionCausesTransactionCommit()", "testcase": false, "constructor": false}, {"identifier": "dataDefinitionIgnoredInTransactions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dataDefinitionIgnoredInTransactions()", "full_signature": "@Override public boolean dataDefinitionIgnoredInTransactions()", "class_method_signature": "ForceDatabaseMetaData.dataDefinitionIgnoredInTransactions()", "testcase": false, "constructor": false}, {"identifier": "getProcedures", "parameters": "(String catalog, String schemaPattern, String procedureNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getProcedures(String catalog, String schemaPattern, String procedureNamePattern)", "full_signature": "@Override public ResultSet getProcedures(String catalog, String schemaPattern, String procedureNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getProcedures(String catalog, String schemaPattern, String procedureNamePattern)", "testcase": false, "constructor": false}, {"identifier": "getProcedureColumns", "parameters": "(String catalog, String schemaPattern, String procedureNamePattern,\n                                         String columnNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getProcedureColumns(String catalog, String schemaPattern, String procedureNamePattern,\n                                         String columnNamePattern)", "full_signature": "@Override public ResultSet getProcedureColumns(String catalog, String schemaPattern, String procedureNamePattern,\n                                         String columnNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getProcedureColumns(String catalog, String schemaPattern, String procedureNamePattern,\n                                         String columnNamePattern)", "testcase": false, "constructor": false}, {"identifier": "getTableTypes", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getTableTypes()", "full_signature": "@Override public ResultSet getTableTypes()", "class_method_signature": "ForceDatabaseMetaData.getTableTypes()", "testcase": false, "constructor": false}, {"identifier": "getColumnPrivileges", "parameters": "(String catalog, String schema, String table, String columnNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getColumnPrivileges(String catalog, String schema, String table, String columnNamePattern)", "full_signature": "@Override public ResultSet getColumnPrivileges(String catalog, String schema, String table, String columnNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getColumnPrivileges(String catalog, String schema, String table, String columnNamePattern)", "testcase": false, "constructor": false}, {"identifier": "getTablePrivileges", "parameters": "(String catalog, String schemaPattern, String tableNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getTablePrivileges(String catalog, String schemaPattern, String tableNamePattern)", "full_signature": "@Override public ResultSet getTablePrivileges(String catalog, String schemaPattern, String tableNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getTablePrivileges(String catalog, String schemaPattern, String tableNamePattern)", "testcase": false, "constructor": false}, {"identifier": "getBestRowIdentifier", "parameters": "(String catalog, String schema, String table, int scope, boolean nullable)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getBestRowIdentifier(String catalog, String schema, String table, int scope, boolean nullable)", "full_signature": "@Override public ResultSet getBestRowIdentifier(String catalog, String schema, String table, int scope, boolean nullable)", "class_method_signature": "ForceDatabaseMetaData.getBestRowIdentifier(String catalog, String schema, String table, int scope, boolean nullable)", "testcase": false, "constructor": false}, {"identifier": "getVersionColumns", "parameters": "(String catalog, String schema, String table)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getVersionColumns(String catalog, String schema, String table)", "full_signature": "@Override public ResultSet getVersionColumns(String catalog, String schema, String table)", "class_method_signature": "ForceDatabaseMetaData.getVersionColumns(String catalog, String schema, String table)", "testcase": false, "constructor": false}, {"identifier": "getExportedKeys", "parameters": "(String catalog, String schema, String table)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getExportedKeys(String catalog, String schema, String table)", "full_signature": "@Override public ResultSet getExportedKeys(String catalog, String schema, String table)", "class_method_signature": "ForceDatabaseMetaData.getExportedKeys(String catalog, String schema, String table)", "testcase": false, "constructor": false}, {"identifier": "getCrossReference", "parameters": "(String parentCatalog, String parentSchema, String parentTable,\n                                       String foreignCatalog, String foreignSchema, String foreignTable)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getCrossReference(String parentCatalog, String parentSchema, String parentTable,\n                                       String foreignCatalog, String foreignSchema, String foreignTable)", "full_signature": "@Override public ResultSet getCrossReference(String parentCatalog, String parentSchema, String parentTable,\n                                       String foreignCatalog, String foreignSchema, String foreignTable)", "class_method_signature": "ForceDatabaseMetaData.getCrossReference(String parentCatalog, String parentSchema, String parentTable,\n                                       String foreignCatalog, String foreignSchema, String foreignTable)", "testcase": false, "constructor": false}, {"identifier": "supportsResultSetType", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsResultSetType(int type)", "full_signature": "@Override public boolean supportsResultSetType(int type)", "class_method_signature": "ForceDatabaseMetaData.supportsResultSetType(int type)", "testcase": false, "constructor": false}, {"identifier": "supportsResultSetConcurrency", "parameters": "(int type, int concurrency)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsResultSetConcurrency(int type, int concurrency)", "full_signature": "@Override public boolean supportsResultSetConcurrency(int type, int concurrency)", "class_method_signature": "ForceDatabaseMetaData.supportsResultSetConcurrency(int type, int concurrency)", "testcase": false, "constructor": false}, {"identifier": "ownUpdatesAreVisible", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean ownUpdatesAreVisible(int type)", "full_signature": "@Override public boolean ownUpdatesAreVisible(int type)", "class_method_signature": "ForceDatabaseMetaData.ownUpdatesAreVisible(int type)", "testcase": false, "constructor": false}, {"identifier": "ownDeletesAreVisible", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean ownDeletesAreVisible(int type)", "full_signature": "@Override public boolean ownDeletesAreVisible(int type)", "class_method_signature": "ForceDatabaseMetaData.ownDeletesAreVisible(int type)", "testcase": false, "constructor": false}, {"identifier": "ownInsertsAreVisible", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean ownInsertsAreVisible(int type)", "full_signature": "@Override public boolean ownInsertsAreVisible(int type)", "class_method_signature": "ForceDatabaseMetaData.ownInsertsAreVisible(int type)", "testcase": false, "constructor": false}, {"identifier": "othersUpdatesAreVisible", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean othersUpdatesAreVisible(int type)", "full_signature": "@Override public boolean othersUpdatesAreVisible(int type)", "class_method_signature": "ForceDatabaseMetaData.othersUpdatesAreVisible(int type)", "testcase": false, "constructor": false}, {"identifier": "othersDeletesAreVisible", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean othersDeletesAreVisible(int type)", "full_signature": "@Override public boolean othersDeletesAreVisible(int type)", "class_method_signature": "ForceDatabaseMetaData.othersDeletesAreVisible(int type)", "testcase": false, "constructor": false}, {"identifier": "othersInsertsAreVisible", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean othersInsertsAreVisible(int type)", "full_signature": "@Override public boolean othersInsertsAreVisible(int type)", "class_method_signature": "ForceDatabaseMetaData.othersInsertsAreVisible(int type)", "testcase": false, "constructor": false}, {"identifier": "updatesAreDetected", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updatesAreDetected(int type)", "full_signature": "@Override public boolean updatesAreDetected(int type)", "class_method_signature": "ForceDatabaseMetaData.updatesAreDetected(int type)", "testcase": false, "constructor": false}, {"identifier": "deletesAreDetected", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deletesAreDetected(int type)", "full_signature": "@Override public boolean deletesAreDetected(int type)", "class_method_signature": "ForceDatabaseMetaData.deletesAreDetected(int type)", "testcase": false, "constructor": false}, {"identifier": "insertsAreDetected", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertsAreDetected(int type)", "full_signature": "@Override public boolean insertsAreDetected(int type)", "class_method_signature": "ForceDatabaseMetaData.insertsAreDetected(int type)", "testcase": false, "constructor": false}, {"identifier": "supportsBatchUpdates", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsBatchUpdates()", "full_signature": "@Override public boolean supportsBatchUpdates()", "class_method_signature": "ForceDatabaseMetaData.supportsBatchUpdates()", "testcase": false, "constructor": false}, {"identifier": "getUDTs", "parameters": "(String catalog, String schemaPattern, String typeNamePattern, int[] types)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getUDTs(String catalog, String schemaPattern, String typeNamePattern, int[] types)", "full_signature": "@Override public ResultSet getUDTs(String catalog, String schemaPattern, String typeNamePattern, int[] types)", "class_method_signature": "ForceDatabaseMetaData.getUDTs(String catalog, String schemaPattern, String typeNamePattern, int[] types)", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "@Override public", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "@Override public Connection getConnection()", "class_method_signature": "ForceDatabaseMetaData.getConnection()", "testcase": false, "constructor": false}, {"identifier": "supportsSavepoints", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsSavepoints()", "full_signature": "@Override public boolean supportsSavepoints()", "class_method_signature": "ForceDatabaseMetaData.supportsSavepoints()", "testcase": false, "constructor": false}, {"identifier": "supportsNamedParameters", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsNamedParameters()", "full_signature": "@Override public boolean supportsNamedParameters()", "class_method_signature": "ForceDatabaseMetaData.supportsNamedParameters()", "testcase": false, "constructor": false}, {"identifier": "supportsMultipleOpenResults", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsMultipleOpenResults()", "full_signature": "@Override public boolean supportsMultipleOpenResults()", "class_method_signature": "ForceDatabaseMetaData.supportsMultipleOpenResults()", "testcase": false, "constructor": false}, {"identifier": "supportsGetGeneratedKeys", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsGetGeneratedKeys()", "full_signature": "@Override public boolean supportsGetGeneratedKeys()", "class_method_signature": "ForceDatabaseMetaData.supportsGetGeneratedKeys()", "testcase": false, "constructor": false}, {"identifier": "getSuperTypes", "parameters": "(String catalog, String schemaPattern, String typeNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getSuperTypes(String catalog, String schemaPattern, String typeNamePattern)", "full_signature": "@Override public ResultSet getSuperTypes(String catalog, String schemaPattern, String typeNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getSuperTypes(String catalog, String schemaPattern, String typeNamePattern)", "testcase": false, "constructor": false}, {"identifier": "getSuperTables", "parameters": "(String catalog, String schemaPattern, String tableNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getSuperTables(String catalog, String schemaPattern, String tableNamePattern)", "full_signature": "@Override public ResultSet getSuperTables(String catalog, String schemaPattern, String tableNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getSuperTables(String catalog, String schemaPattern, String tableNamePattern)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "(String catalog, String schemaPattern, String typeNamePattern,\n                                   String attributeNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getAttributes(String catalog, String schemaPattern, String typeNamePattern,\n                                   String attributeNamePattern)", "full_signature": "@Override public ResultSet getAttributes(String catalog, String schemaPattern, String typeNamePattern,\n                                   String attributeNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getAttributes(String catalog, String schemaPattern, String typeNamePattern,\n                                   String attributeNamePattern)", "testcase": false, "constructor": false}, {"identifier": "supportsResultSetHoldability", "parameters": "(int holdability)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsResultSetHoldability(int holdability)", "full_signature": "@Override public boolean supportsResultSetHoldability(int holdability)", "class_method_signature": "ForceDatabaseMetaData.supportsResultSetHoldability(int holdability)", "testcase": false, "constructor": false}, {"identifier": "getResultSetHoldability", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getResultSetHoldability()", "full_signature": "@Override public int getResultSetHoldability()", "class_method_signature": "ForceDatabaseMetaData.getResultSetHoldability()", "testcase": false, "constructor": false}, {"identifier": "getDatabaseMajorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDatabaseMajorVersion()", "full_signature": "@Override public int getDatabaseMajorVersion()", "class_method_signature": "ForceDatabaseMetaData.getDatabaseMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getDatabaseMinorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDatabaseMinorVersion()", "full_signature": "@Override public int getDatabaseMinorVersion()", "class_method_signature": "ForceDatabaseMetaData.getDatabaseMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "getJDBCMajorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getJDBCMajorVersion()", "full_signature": "@Override public int getJDBCMajorVersion()", "class_method_signature": "ForceDatabaseMetaData.getJDBCMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getJDBCMinorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getJDBCMinorVersion()", "full_signature": "@Override public int getJDBCMinorVersion()", "class_method_signature": "ForceDatabaseMetaData.getJDBCMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "getSQLStateType", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSQLStateType()", "full_signature": "@Override public int getSQLStateType()", "class_method_signature": "ForceDatabaseMetaData.getSQLStateType()", "testcase": false, "constructor": false}, {"identifier": "locatorsUpdateCopy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean locatorsUpdateCopy()", "full_signature": "@Override public boolean locatorsUpdateCopy()", "class_method_signature": "ForceDatabaseMetaData.locatorsUpdateCopy()", "testcase": false, "constructor": false}, {"identifier": "supportsStatementPooling", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsStatementPooling()", "full_signature": "@Override public boolean supportsStatementPooling()", "class_method_signature": "ForceDatabaseMetaData.supportsStatementPooling()", "testcase": false, "constructor": false}, {"identifier": "getRowIdLifetime", "parameters": "()", "modifiers": "@Override public", "return": "RowIdLifetime", "signature": "RowIdLifetime getRowIdLifetime()", "full_signature": "@Override public RowIdLifetime getRowIdLifetime()", "class_method_signature": "ForceDatabaseMetaData.getRowIdLifetime()", "testcase": false, "constructor": false}, {"identifier": "getSchemas", "parameters": "(String catalog, String schemaPattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getSchemas(String catalog, String schemaPattern)", "full_signature": "@Override public ResultSet getSchemas(String catalog, String schemaPattern)", "class_method_signature": "ForceDatabaseMetaData.getSchemas(String catalog, String schemaPattern)", "testcase": false, "constructor": false}, {"identifier": "supportsStoredFunctionsUsingCallSyntax", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsStoredFunctionsUsingCallSyntax()", "full_signature": "@Override public boolean supportsStoredFunctionsUsingCallSyntax()", "class_method_signature": "ForceDatabaseMetaData.supportsStoredFunctionsUsingCallSyntax()", "testcase": false, "constructor": false}, {"identifier": "autoCommitFailureClosesAllResultSets", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean autoCommitFailureClosesAllResultSets()", "full_signature": "@Override public boolean autoCommitFailureClosesAllResultSets()", "class_method_signature": "ForceDatabaseMetaData.autoCommitFailureClosesAllResultSets()", "testcase": false, "constructor": false}, {"identifier": "getClientInfoProperties", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getClientInfoProperties()", "full_signature": "@Override public ResultSet getClientInfoProperties()", "class_method_signature": "ForceDatabaseMetaData.getClientInfoProperties()", "testcase": false, "constructor": false}, {"identifier": "getFunctions", "parameters": "(String catalog, String schemaPattern, String functionNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getFunctions(String catalog, String schemaPattern, String functionNamePattern)", "full_signature": "@Override public ResultSet getFunctions(String catalog, String schemaPattern, String functionNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getFunctions(String catalog, String schemaPattern, String functionNamePattern)", "testcase": false, "constructor": false}, {"identifier": "getFunctionColumns", "parameters": "(String catalog, String schemaPattern, String functionNamePattern,\n                                        String columnNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getFunctionColumns(String catalog, String schemaPattern, String functionNamePattern,\n                                        String columnNamePattern)", "full_signature": "@Override public ResultSet getFunctionColumns(String catalog, String schemaPattern, String functionNamePattern,\n                                        String columnNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getFunctionColumns(String catalog, String schemaPattern, String functionNamePattern,\n                                        String columnNamePattern)", "testcase": false, "constructor": false}, {"identifier": "getPseudoColumns", "parameters": "(String catalog, String schemaPattern, String tableNamePattern,\n                                      String columnNamePattern)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n                                      String columnNamePattern)", "full_signature": "@Override public ResultSet getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n                                      String columnNamePattern)", "class_method_signature": "ForceDatabaseMetaData.getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n                                      String columnNamePattern)", "testcase": false, "constructor": false}, {"identifier": "generatedKeyAlwaysReturned", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean generatedKeyAlwaysReturned()", "full_signature": "@Override public boolean generatedKeyAlwaysReturned()", "class_method_signature": "ForceDatabaseMetaData.generatedKeyAlwaysReturned()", "testcase": false, "constructor": false}], "file": "sf-jdbc-driver/src/main/java/com/ascendix/jdbc/salesforce/metadata/ForceDatabaseMetaData.java"}, "focal_method": {"identifier": "lookupTypeInfo", "parameters": "(String forceTypeName)", "modifiers": "public static", "return": "TypeInfo", "body": "public static TypeInfo lookupTypeInfo(String forceTypeName) {\n        String typeName = forceTypeName.replaceFirst(\"\\\\A_+\", \"\");\n        return Arrays.stream(TYPE_INFO_DATA)\n                .filter(entry -> typeName.equals(entry.typeName))\n                .findAny()\n                .orElse(OTHER_TYPE_INFO);\n    }", "signature": "TypeInfo lookupTypeInfo(String forceTypeName)", "full_signature": "public static TypeInfo lookupTypeInfo(String forceTypeName)", "class_method_signature": "ForceDatabaseMetaData.lookupTypeInfo(String forceTypeName)", "testcase": false, "constructor": false, "invocations": ["replaceFirst", "orElse", "findAny", "filter", "stream", "equals"]}, "repository": {"repo_id": 87432809, "url": "https://github.com/ascendix/salesforce-jdbc", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 19, "size": 41622, "license": "licensed"}}