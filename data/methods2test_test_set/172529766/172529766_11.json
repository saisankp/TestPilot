{"test_class": {"identifier": "ScreenServiceTest", "superclass": "extends PrimeTimeTest", "interfaces": "", "fields": [{"original_string": "private PageService pageService;", "modifier": "private", "type": "PageService", "declarator": "pageService", "var_name": "pageService"}, {"original_string": "private PlaylistService playlistService;", "modifier": "private", "type": "PlaylistService", "declarator": "playlistService", "var_name": "playlistService"}, {"original_string": "private ScreenService screenService;", "modifier": "private", "type": "ScreenService", "declarator": "screenService", "var_name": "screenService"}, {"original_string": "private FileService fileService;", "modifier": "private", "type": "FileService", "declarator": "fileService", "var_name": "fileService"}, {"original_string": "private Playlist playlist;", "modifier": "private", "type": "Playlist", "declarator": "playlist", "var_name": "playlist"}], "file": "common/app/src/test/java/com/sap/primetime/api/ScreenServiceTest.java"}, "test_case": {"identifier": "testGetTestScreen", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetTestScreen() throws Exception {\n\t\tassertEquals(5, screenService.getScreen(0, false, false).getPlaylist().getPageReferences().size());\n\t}", "signature": "void testGetTestScreen()", "full_signature": "@Test public void testGetTestScreen()", "class_method_signature": "ScreenServiceTest.testGetTestScreen()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "getPageReferences", "getPlaylist", "getScreen"]}, "focal_class": {"identifier": "ScreenService", "superclass": "extends BasicService", "interfaces": "implements OwnerAPISupport<Screen>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ScreenService.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ScreenService.class)", "var_name": "logger"}, {"original_string": "private Cache<Long, Integer> remoteControlKeys = CacheBuilder.newBuilder().maximumSize(1000)\n\t\t\t.expireAfterWrite(10, TimeUnit.MINUTES).build();", "modifier": "private", "type": "Cache<Long, Integer>", "declarator": "remoteControlKeys = CacheBuilder.newBuilder().maximumSize(1000)\n\t\t\t.expireAfterWrite(10, TimeUnit.MINUTES).build()", "var_name": "remoteControlKeys"}], "methods": [{"identifier": "getScreens", "parameters": "(@QueryParam(\"userId\") String userId)", "modifiers": "@GET @Path(\"/screens\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Screen>", "signature": "List<Screen> getScreens(@QueryParam(\"userId\") String userId)", "full_signature": "@GET @Path(\"/screens\") @Produces(MediaType.APPLICATION_JSON) public List<Screen> getScreens(@QueryParam(\"userId\") String userId)", "class_method_signature": "ScreenService.getScreens(@QueryParam(\"userId\") String userId)", "testcase": false, "constructor": false}, {"identifier": "getOnboardings", "parameters": "()", "modifiers": "@GET @Path(\"/onboardings\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Screen>", "signature": "List<Screen> getOnboardings()", "full_signature": "@GET @Path(\"/onboardings\") @Produces(MediaType.APPLICATION_JSON) public List<Screen> getOnboardings()", "class_method_signature": "ScreenService.getOnboardings()", "testcase": false, "constructor": false}, {"identifier": "getScreen", "parameters": "(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live)", "modifiers": "@GET @Path(\"/screens/{id}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen getScreen(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live)", "full_signature": "@GET @Path(\"/screens/{id}\") @Produces(MediaType.APPLICATION_JSON) public Screen getScreen(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live)", "class_method_signature": "ScreenService.getScreen(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live)", "testcase": false, "constructor": false}, {"identifier": "getScreenByKey", "parameters": "(@PathParam(\"key\") String key,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"autoOnboard\") boolean doOnboarding,\n\t\t\t@QueryParam(\"owner\") String requestedOwner)", "modifiers": "@GET @Path(\"/screens/bykey/{key}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen getScreenByKey(@PathParam(\"key\") String key,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"autoOnboard\") boolean doOnboarding,\n\t\t\t@QueryParam(\"owner\") String requestedOwner)", "full_signature": "@GET @Path(\"/screens/bykey/{key}\") @Produces(MediaType.APPLICATION_JSON) public Screen getScreenByKey(@PathParam(\"key\") String key,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"autoOnboard\") boolean doOnboarding,\n\t\t\t@QueryParam(\"owner\") String requestedOwner)", "class_method_signature": "ScreenService.getScreenByKey(@PathParam(\"key\") String key,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"autoOnboard\") boolean doOnboarding,\n\t\t\t@QueryParam(\"owner\") String requestedOwner)", "testcase": false, "constructor": false}, {"identifier": "getScreenshotPlaylist", "parameters": "()", "modifiers": "private", "return": "Playlist", "signature": "Playlist getScreenshotPlaylist()", "full_signature": "private Playlist getScreenshotPlaylist()", "class_method_signature": "ScreenService.getScreenshotPlaylist()", "testcase": false, "constructor": false}, {"identifier": "removeMetrics", "parameters": "(Screen result)", "modifiers": "private", "return": "void", "signature": "void removeMetrics(Screen result)", "full_signature": "private void removeMetrics(Screen result)", "class_method_signature": "ScreenService.removeMetrics(Screen result)", "testcase": false, "constructor": false}, {"identifier": "checkRemoteValidity", "parameters": "(Screen result)", "modifiers": "private", "return": "void", "signature": "void checkRemoteValidity(Screen result)", "full_signature": "private void checkRemoteValidity(Screen result)", "class_method_signature": "ScreenService.checkRemoteValidity(Screen result)", "testcase": false, "constructor": false}, {"identifier": "addOnboardingScreen", "parameters": "(Screen screen)", "modifiers": "private", "return": "void", "signature": "void addOnboardingScreen(Screen screen)", "full_signature": "private void addOnboardingScreen(Screen screen)", "class_method_signature": "ScreenService.addOnboardingScreen(Screen screen)", "testcase": false, "constructor": false}, {"identifier": "createScreen", "parameters": "(Screen screen)", "modifiers": "@POST @Path(\"/screens\") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen createScreen(Screen screen)", "full_signature": "@POST @Path(\"/screens\") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) public Screen createScreen(Screen screen)", "class_method_signature": "ScreenService.createScreen(Screen screen)", "testcase": false, "constructor": false}, {"identifier": "updateScreen", "parameters": "(@PathParam(\"id\") long screenId, Screen screenData)", "modifiers": "@PUT @Path(\"/screens/{id}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen updateScreen(@PathParam(\"id\") long screenId, Screen screenData)", "full_signature": "@PUT @Path(\"/screens/{id}\") @Produces(MediaType.APPLICATION_JSON) public Screen updateScreen(@PathParam(\"id\") long screenId, Screen screenData)", "class_method_signature": "ScreenService.updateScreen(@PathParam(\"id\") long screenId, Screen screenData)", "testcase": false, "constructor": false}, {"identifier": "updateScreenStatstics", "parameters": "(@PathParam(\"id\") long screenId, Screen screenData)", "modifiers": "@PUT @Path(\"/screens/{id}/statistics\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen updateScreenStatstics(@PathParam(\"id\") long screenId, Screen screenData)", "full_signature": "@PUT @Path(\"/screens/{id}/statistics\") @Produces(MediaType.APPLICATION_JSON) public Screen updateScreenStatstics(@PathParam(\"id\") long screenId, Screen screenData)", "class_method_signature": "ScreenService.updateScreenStatstics(@PathParam(\"id\") long screenId, Screen screenData)", "testcase": false, "constructor": false}, {"identifier": "getScreenHealth", "parameters": "(@PathParam(\"id\") long screenId)", "modifiers": "@GET @Path(\"/screens/{id}/health\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen.AliveState", "signature": "Screen.AliveState getScreenHealth(@PathParam(\"id\") long screenId)", "full_signature": "@GET @Path(\"/screens/{id}/health\") @Produces(MediaType.APPLICATION_JSON) public Screen.AliveState getScreenHealth(@PathParam(\"id\") long screenId)", "class_method_signature": "ScreenService.getScreenHealth(@PathParam(\"id\") long screenId)", "testcase": false, "constructor": false}, {"identifier": "getScreenEvents", "parameters": "(@PathParam(\"id\") long screenId)", "modifiers": "@GET @Path(\"/screens/{id}/events\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<EventHistory>", "signature": "List<EventHistory> getScreenEvents(@PathParam(\"id\") long screenId)", "full_signature": "@GET @Path(\"/screens/{id}/events\") @Produces(MediaType.APPLICATION_JSON) public List<EventHistory> getScreenEvents(@PathParam(\"id\") long screenId)", "class_method_signature": "ScreenService.getScreenEvents(@PathParam(\"id\") long screenId)", "testcase": false, "constructor": false}, {"identifier": "getScreenEventsPerHour", "parameters": "(@PathParam(\"id\") long screenId)", "modifiers": "@GET @Path(\"/screens/{id}/eventsperhour\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<BasicNameValuePair>", "signature": "List<BasicNameValuePair> getScreenEventsPerHour(@PathParam(\"id\") long screenId)", "full_signature": "@GET @Path(\"/screens/{id}/eventsperhour\") @Produces(MediaType.APPLICATION_JSON) public List<BasicNameValuePair> getScreenEventsPerHour(@PathParam(\"id\") long screenId)", "class_method_signature": "ScreenService.getScreenEventsPerHour(@PathParam(\"id\") long screenId)", "testcase": false, "constructor": false}, {"identifier": "calculateCount", "parameters": "(List<EventHistory> data)", "modifiers": "private", "return": "Map<DateTime, Long>", "signature": "Map<DateTime, Long> calculateCount(List<EventHistory> data)", "full_signature": "private Map<DateTime, Long> calculateCount(List<EventHistory> data)", "class_method_signature": "ScreenService.calculateCount(List<EventHistory> data)", "testcase": false, "constructor": false}, {"identifier": "calculateHistogram", "parameters": "(Map<DateTime, Long> data, int hourCount)", "modifiers": "private", "return": "List<BasicNameValuePair>", "signature": "List<BasicNameValuePair> calculateHistogram(Map<DateTime, Long> data, int hourCount)", "full_signature": "private List<BasicNameValuePair> calculateHistogram(Map<DateTime, Long> data, int hourCount)", "class_method_signature": "ScreenService.calculateHistogram(Map<DateTime, Long> data, int hourCount)", "testcase": false, "constructor": false}, {"identifier": "getRemoteKey", "parameters": "(@PathParam(\"id\") long screenId)", "modifiers": "@GET @Path(\"/screens/{id}/control\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Integer", "signature": "Integer getRemoteKey(@PathParam(\"id\") long screenId)", "full_signature": "@GET @Path(\"/screens/{id}/control\") @Produces(MediaType.APPLICATION_JSON) public Integer getRemoteKey(@PathParam(\"id\") long screenId)", "class_method_signature": "ScreenService.getRemoteKey(@PathParam(\"id\") long screenId)", "testcase": false, "constructor": false}, {"identifier": "remoteControlScreen", "parameters": "(@PathParam(\"id\") long screenId, Screen screenData, @PathParam(\"key\") int key)", "modifiers": "@PUT @Path(\"/screens/{id}/control/{key}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen remoteControlScreen(@PathParam(\"id\") long screenId, Screen screenData, @PathParam(\"key\") int key)", "full_signature": "@PUT @Path(\"/screens/{id}/control/{key}\") @Produces(MediaType.APPLICATION_JSON) public Screen remoteControlScreen(@PathParam(\"id\") long screenId, Screen screenData, @PathParam(\"key\") int key)", "class_method_signature": "ScreenService.remoteControlScreen(@PathParam(\"id\") long screenId, Screen screenData, @PathParam(\"key\") int key)", "testcase": false, "constructor": false}, {"identifier": "copyScreen", "parameters": "(@PathParam(\"id\") long screenId, Screen newScreen)", "modifiers": "@POST @Path(\"/screens/{id}/copy\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen copyScreen(@PathParam(\"id\") long screenId, Screen newScreen)", "full_signature": "@POST @Path(\"/screens/{id}/copy\") @Consumes(MediaType.APPLICATION_JSON) public Screen copyScreen(@PathParam(\"id\") long screenId, Screen newScreen)", "class_method_signature": "ScreenService.copyScreen(@PathParam(\"id\") long screenId, Screen newScreen)", "testcase": false, "constructor": false}, {"identifier": "updateRequestedOwner", "parameters": "(@PathParam(\"id\") long screenId, Screen screenData)", "modifiers": "@PUT @Path(\"/screens/{id}/requestedOwner\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen updateRequestedOwner(@PathParam(\"id\") long screenId, Screen screenData)", "full_signature": "@PUT @Path(\"/screens/{id}/requestedOwner\") @Produces(MediaType.APPLICATION_JSON) public Screen updateRequestedOwner(@PathParam(\"id\") long screenId, Screen screenData)", "class_method_signature": "ScreenService.updateRequestedOwner(@PathParam(\"id\") long screenId, Screen screenData)", "testcase": false, "constructor": false}, {"identifier": "onboardScreen", "parameters": "(@PathParam(\"id\") long screenId)", "modifiers": "@POST @Path(\"/screens/{id}/onboard\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen onboardScreen(@PathParam(\"id\") long screenId)", "full_signature": "@POST @Path(\"/screens/{id}/onboard\") @Produces(MediaType.APPLICATION_JSON) public Screen onboardScreen(@PathParam(\"id\") long screenId)", "class_method_signature": "ScreenService.onboardScreen(@PathParam(\"id\") long screenId)", "testcase": false, "constructor": false}, {"identifier": "claimScreen", "parameters": "(@PathParam(\"key\") String key, @DefaultValue(\"0\") @QueryParam(\"screenId\") long screenId)", "modifiers": "@POST @Path(\"/claim/{key}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen claimScreen(@PathParam(\"key\") String key, @DefaultValue(\"0\") @QueryParam(\"screenId\") long screenId)", "full_signature": "@POST @Path(\"/claim/{key}\") @Produces(MediaType.APPLICATION_JSON) public Screen claimScreen(@PathParam(\"key\") String key, @DefaultValue(\"0\") @QueryParam(\"screenId\") long screenId)", "class_method_signature": "ScreenService.claimScreen(@PathParam(\"key\") String key, @DefaultValue(\"0\") @QueryParam(\"screenId\") long screenId)", "testcase": false, "constructor": false}, {"identifier": "deleteScreen", "parameters": "(@PathParam(\"screenId\") long screenId)", "modifiers": "@DELETE @Path(\"/screens/{screenId}\") public", "return": "Response", "signature": "Response deleteScreen(@PathParam(\"screenId\") long screenId)", "full_signature": "@DELETE @Path(\"/screens/{screenId}\") public Response deleteScreen(@PathParam(\"screenId\") long screenId)", "class_method_signature": "ScreenService.deleteScreen(@PathParam(\"screenId\") long screenId)", "testcase": false, "constructor": false}, {"identifier": "addOwners", "parameters": "(@PathParam(\"screenId\") long screenId, Owner[] ownerData)", "modifiers": "@Override @POST @Path(\"/screens/{screenId}/owners\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen addOwners(@PathParam(\"screenId\") long screenId, Owner[] ownerData)", "full_signature": "@Override @POST @Path(\"/screens/{screenId}/owners\") @Consumes(MediaType.APPLICATION_JSON) public Screen addOwners(@PathParam(\"screenId\") long screenId, Owner[] ownerData)", "class_method_signature": "ScreenService.addOwners(@PathParam(\"screenId\") long screenId, Owner[] ownerData)", "testcase": false, "constructor": false}, {"identifier": "deleteOwner", "parameters": "(@PathParam(\"screenId\") long screenId, @PathParam(\"ownerId\") long ownerId)", "modifiers": "@Override @DELETE @Path(\"/screens/{screenId}/owners/{ownerId}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "signature": "Screen deleteOwner(@PathParam(\"screenId\") long screenId, @PathParam(\"ownerId\") long ownerId)", "full_signature": "@Override @DELETE @Path(\"/screens/{screenId}/owners/{ownerId}\") @Produces(MediaType.APPLICATION_JSON) public Screen deleteOwner(@PathParam(\"screenId\") long screenId, @PathParam(\"ownerId\") long ownerId)", "class_method_signature": "ScreenService.deleteOwner(@PathParam(\"screenId\") long screenId, @PathParam(\"ownerId\") long ownerId)", "testcase": false, "constructor": false}, {"identifier": "registerApplianceStart", "parameters": "(@PathParam(\"key\") String key, ApplianceInfo logContent)", "modifiers": "@POST @Path(\"/screenkey/{key}/appliancestart\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response registerApplianceStart(@PathParam(\"key\") String key, ApplianceInfo logContent)", "full_signature": "@POST @Path(\"/screenkey/{key}/appliancestart\") @Consumes(MediaType.APPLICATION_JSON) public Response registerApplianceStart(@PathParam(\"key\") String key, ApplianceInfo logContent)", "class_method_signature": "ScreenService.registerApplianceStart(@PathParam(\"key\") String key, ApplianceInfo logContent)", "testcase": false, "constructor": false}], "file": "common/app/src/main/java/com/sap/primetime/api/ScreenService.java"}, "focal_method": {"identifier": "getScreen", "parameters": "(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live)", "modifiers": "@GET @Path(\"/screens/{id}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Screen", "body": "@GET\n\t@Path(\"/screens/{id}\")\n\t@Produces(MediaType.APPLICATION_JSON)\n\tpublic Screen getScreen(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live) {\n\t\tScreen result = null;\n\n\t\tif (screenId == 0) {\n\t\t\tresult = new Screen();\n\t\t\tresult.setName(\"Demo Screen\");\n\t\t\tresult.setShowOwners(true);\n\n\t\t\tUser user = new User(\"d046998\", \"robert.wetzold@sap.com\", \"Robert\", \"Wetzold\");\n\t\t\tuser.updateDynamicValues();\n\n\t\t\tFile movie = new File(\"-PrimeTime Teaser-\");\n\t\t\tmovie.setId(-1);\n\n\t\t\tPlaylist playlist = new Playlist();\n\n\t\t\tPage page0 = new Page(\"Introduction\");\n\t\t\tpage0.addOwner(new Owner(user));\n\t\t\tpage0.setPageType(PageType.MOVIE);\n\t\t\tpage0.setFile(movie);\n\t\t\tpage0.updateDynamicValues();\n\n\t\t\tPageReference pageRef0 = new PageReference(page0);\n\t\t\tpageRef0.setPageDisplayDurationOverride(12);\n\t\t\tplaylist.addPageReference(pageRef0);\n\n\t\t\tPage page1 = new Page(\"Introduction\");\n\t\t\tpage1.addOwner(new Owner(user));\n\t\t\tpage1.setPageType(PageType.TEXT);\n\t\t\tpage1.setText(\"This is a demo for PrimeTime, your simple solution to create wall screen presentations, aka digital signage.\");\n\t\t\tpage1.updateDynamicValues();\n\t\t\tplaylist.addPageReference(new PageReference(page1));\n\n\t\t\tPage page2 = new Page(\"Getting Started\");\n\t\t\tpage2.addOwner(new Owner(user));\n\t\t\tpage2.setPageType(PageType.TEXT);\n\t\t\tpage2.setText(\n\t\t\t\t\t\"To get started, create your pages and put them together into your own playlist.</p><p>You can show one or multiple URLs, PDFs, images, movies, formatted texts or HTML.\");\n\t\t\tpage2.updateDynamicValues();\n\t\t\tplaylist.addPageReference(new PageReference(page2));\n\n\t\t\tPage page3 = new Page(\"Contribute\");\n\t\t\tpage3.addOwner(new Owner(user));\n\t\t\tpage3.setPageType(PageType.TEXT);\n\t\t\tpage3.setText(\n\t\t\t\t\t\"This is an open source tool by SAP. If you want to contribute, please feel invited to do so.\");\n\t\t\tpage3.updateDynamicValues();\n\t\t\tplaylist.addPageReference(new PageReference(page3));\n\n\t\t\tString devUrl = ConfigUtil.getProperty(Consts.APP, Consts.PROP_DEVELOPMENTURL);\n\t\t\tif (StringUtils.isNoneEmpty(devUrl)) {\n\t\t\t\tPage page4 = new Page(\"Source Code\");\n\t\t\t\tpage4.addOwner(new Owner(user));\n\t\t\t\tpage4.setUrl(devUrl);\n\t\t\t\tpage4.updateDynamicValues();\n\t\t\t\tplaylist.addPageReference(new PageReference(page4));\n\t\t\t}\n\n\t\t\tresult.setPlaylist(playlist);\n\t\t} else {\n\t\t\tresult = getExistingScreen(screenId, false);\n\t\t\tcheckRemoteValidity(result);\n\n\t\t\tif (result.getOwners().isEmpty() && !isAdmin()) {\n\t\t\t\tthrowUnauthorized();\n\t\t\t}\n\t\t\tif (result.isScreenshotMode() && live) {\n\t\t\t\tresult.setPlaylist(getScreenshotPlaylist());\n\t\t\t\tresult.setShowHeader(false);\n\t\t\t\tresult.setShowFooter(false);\n\t\t\t}\n\t\t\tif (result.getPlaylist() != null) {\n\t\t\t\tresult.getPlaylist().expand();\n\t\t\t}\n\n\t\t\tif (!includeMetrics) {\n\t\t\t\tremoveMetrics(result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}", "signature": "Screen getScreen(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live)", "full_signature": "@GET @Path(\"/screens/{id}\") @Produces(MediaType.APPLICATION_JSON) public Screen getScreen(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live)", "class_method_signature": "ScreenService.getScreen(@PathParam(\"id\") long screenId,\n\t\t\t@DefaultValue(\"true\") @QueryParam(\"includeMetrics\") boolean includeMetrics,\n\t\t\t@DefaultValue(\"false\") @QueryParam(\"live\") boolean live)", "testcase": false, "constructor": false, "invocations": ["setName", "setShowOwners", "updateDynamicValues", "setId", "addOwner", "setPageType", "setFile", "updateDynamicValues", "setPageDisplayDurationOverride", "addPageReference", "addOwner", "setPageType", "setText", "updateDynamicValues", "addPageReference", "addOwner", "setPageType", "setText", "updateDynamicValues", "addPageReference", "addOwner", "setPageType", "setText", "updateDynamicValues", "addPageReference", "getProperty", "isNoneEmpty", "addOwner", "setUrl", "updateDynamicValues", "addPageReference", "setPlaylist", "getExistingScreen", "checkRemoteValidity", "isEmpty", "getOwners", "isAdmin", "throwUnauthorized", "isScreenshotMode", "setPlaylist", "getScreenshotPlaylist", "setShowHeader", "setShowFooter", "getPlaylist", "expand", "getPlaylist", "removeMetrics"]}, "repository": {"repo_id": 172529766, "url": "https://github.com/SAP/cloud-primetime", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 25, "size": 7529, "license": "licensed"}}