{"test_class": {"identifier": "ReactionArrowGeneratorTest", "superclass": "extends AbstractGeneratorTest", "interfaces": "", "fields": [{"original_string": "private ReactionArrowGenerator generator;", "modifier": "private", "type": "ReactionArrowGenerator", "declarator": "generator", "var_name": "generator"}], "file": "display/renderextra/src/test/java/org/openscience/cdk/renderer/generators/ReactionArrowGeneratorTest.java"}, "test_case": {"identifier": "testEmptyReaction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmptyReaction() {\n        IReaction singleReaction = super.builder.newInstance(IReaction.class);\n\n        // nothing should be made\n        IRenderingElement root = generator.generate(singleReaction, model);\n        List<IRenderingElement> elements = elementUtil.getAllSimpleElements(root);\n        Assert.assertEquals(1, elements.size());\n    }", "signature": "void testEmptyReaction()", "full_signature": "@Test public void testEmptyReaction()", "class_method_signature": "ReactionArrowGeneratorTest.testEmptyReaction()", "testcase": true, "constructor": false, "invocations": ["newInstance", "generate", "getAllSimpleElements", "assertEquals", "size"]}, "focal_class": {"identifier": "ReactionArrowGenerator", "superclass": "", "interfaces": "implements IGenerator<IReaction>", "fields": [], "methods": [{"identifier": "generate", "parameters": "(IReaction reaction, RendererModel model)", "modifiers": "@Override public", "return": "IRenderingElement", "signature": "IRenderingElement generate(IReaction reaction, RendererModel model)", "full_signature": "@Override public IRenderingElement generate(IReaction reaction, RendererModel model)", "class_method_signature": "ReactionArrowGenerator.generate(IReaction reaction, RendererModel model)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "List<IGeneratorParameter<?>>", "signature": "List<IGeneratorParameter<?>> getParameters()", "full_signature": "@Override public List<IGeneratorParameter<?>> getParameters()", "class_method_signature": "ReactionArrowGenerator.getParameters()", "testcase": false, "constructor": false}], "file": "display/renderextra/src/main/java/org/openscience/cdk/renderer/generators/ReactionArrowGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "(IReaction reaction, RendererModel model)", "modifiers": "@Override public", "return": "IRenderingElement", "body": "@Override\n    public IRenderingElement generate(IReaction reaction, RendererModel model) {\n        Rectangle2D totalBoundsReactants = BoundsCalculator.calculateBounds(reaction.getReactants());\n        Rectangle2D totalBoundsProducts = BoundsCalculator.calculateBounds(reaction.getProducts());\n\n        if (totalBoundsReactants == null || totalBoundsProducts == null) return null;\n\n        double separation = model.getParameter(BondLength.class).getValue()\n                / model.getParameter(Scale.class).getValue();\n        Color foregroundColor = model.getParameter(BasicSceneGenerator.ForegroundColor.class).getValue();\n        return new ArrowElement(totalBoundsReactants.getMaxX() + separation, totalBoundsReactants.getCenterY(),\n                totalBoundsProducts.getMinX() - separation, totalBoundsReactants.getCenterY(), 1 / model.getParameter(\n                        Scale.class).getValue(), true, foregroundColor);\n    }", "signature": "IRenderingElement generate(IReaction reaction, RendererModel model)", "full_signature": "@Override public IRenderingElement generate(IReaction reaction, RendererModel model)", "class_method_signature": "ReactionArrowGenerator.generate(IReaction reaction, RendererModel model)", "testcase": false, "constructor": false, "invocations": ["calculateBounds", "getReactants", "calculateBounds", "getProducts", "getValue", "getParameter", "getValue", "getParameter", "getValue", "getParameter", "getMaxX", "getCenterY", "getMinX", "getCenterY", "getValue", "getParameter"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}