{"test_class": {"identifier": "DMNRuntimeBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final KieBase KIE_BASE = new KnowledgeBaseImpl(\"DMN\", null);", "modifier": "private static final", "type": "KieBase", "declarator": "KIE_BASE = new KnowledgeBaseImpl(\"DMN\", null)", "var_name": "KIE_BASE"}, {"original_string": "private DMNRuntimeBuilder dmnRuntimeBuilder;", "modifier": "private", "type": "DMNRuntimeBuilder", "declarator": "dmnRuntimeBuilder", "var_name": "dmnRuntimeBuilder"}], "file": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/internal/utils/DMNRuntimeBuilderTest.java"}, "test_case": {"identifier": "setKieRuntimeFactoryFunction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setKieRuntimeFactoryFunction() {\n        KieRuntimeFactory toReturn = KieRuntimeFactory.of(KIE_BASE);\n        Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction = s -> toReturn;\n        final DMNRuntimeImpl retrieved = (DMNRuntimeImpl) dmnRuntimeBuilder\n                .setKieRuntimeFactoryFunction(kieRuntimeFactoryFunction)\n                .buildConfiguration()\n                .fromResources(Collections.emptyList()).getOrElseThrow(RuntimeException::new);\n        assertNotNull(retrieved);\n        KieRuntimeFactory kieRuntimeFactory = retrieved.getKieRuntimeFactory(\"TEST\");\n        assertEquals(toReturn, kieRuntimeFactory);\n    }", "signature": "void setKieRuntimeFactoryFunction()", "full_signature": "@Test public void setKieRuntimeFactoryFunction()", "class_method_signature": "DMNRuntimeBuilderTest.setKieRuntimeFactoryFunction()", "testcase": true, "constructor": false, "invocations": ["of", "getOrElseThrow", "fromResources", "buildConfiguration", "setKieRuntimeFactoryFunction", "emptyList", "assertNotNull", "getKieRuntimeFactory", "assertEquals"]}, "focal_class": {"identifier": "DMNRuntimeBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DMNRuntimeBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DMNRuntimeBuilder.class)", "var_name": "LOG"}, {"original_string": "private final DMNRuntimeBuilderCtx ctx;", "modifier": "private final", "type": "DMNRuntimeBuilderCtx", "declarator": "ctx", "var_name": "ctx"}], "methods": [{"identifier": "DMNRuntimeBuilder", "parameters": "()", "modifiers": "private", "return": "", "signature": " DMNRuntimeBuilder()", "full_signature": "private  DMNRuntimeBuilder()", "class_method_signature": "DMNRuntimeBuilder.DMNRuntimeBuilder()", "testcase": false, "constructor": true}, {"identifier": "fromDefaults", "parameters": "()", "modifiers": "public static", "return": "DMNRuntimeBuilder", "signature": "DMNRuntimeBuilder fromDefaults()", "full_signature": "public static DMNRuntimeBuilder fromDefaults()", "class_method_signature": "DMNRuntimeBuilder.fromDefaults()", "testcase": false, "constructor": false}, {"identifier": "addProfile", "parameters": "(DMNProfile dmnProfile)", "modifiers": "public", "return": "DMNRuntimeBuilder", "signature": "DMNRuntimeBuilder addProfile(DMNProfile dmnProfile)", "full_signature": "public DMNRuntimeBuilder addProfile(DMNProfile dmnProfile)", "class_method_signature": "DMNRuntimeBuilder.addProfile(DMNProfile dmnProfile)", "testcase": false, "constructor": false}, {"identifier": "setOption", "parameters": "(RuntimeTypeCheckOption option)", "modifiers": "public", "return": "DMNRuntimeBuilder", "signature": "DMNRuntimeBuilder setOption(RuntimeTypeCheckOption option)", "full_signature": "public DMNRuntimeBuilder setOption(RuntimeTypeCheckOption option)", "class_method_signature": "DMNRuntimeBuilder.setOption(RuntimeTypeCheckOption option)", "testcase": false, "constructor": false}, {"identifier": "setRootClassLoader", "parameters": "(ClassLoader classLoader)", "modifiers": "public", "return": "DMNRuntimeBuilder", "signature": "DMNRuntimeBuilder setRootClassLoader(ClassLoader classLoader)", "full_signature": "public DMNRuntimeBuilder setRootClassLoader(ClassLoader classLoader)", "class_method_signature": "DMNRuntimeBuilder.setRootClassLoader(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "setRelativeImportResolver", "parameters": "(RelativeImportResolver relativeResolver)", "modifiers": "public", "return": "DMNRuntimeBuilder", "signature": "DMNRuntimeBuilder setRelativeImportResolver(RelativeImportResolver relativeResolver)", "full_signature": "public DMNRuntimeBuilder setRelativeImportResolver(RelativeImportResolver relativeResolver)", "class_method_signature": "DMNRuntimeBuilder.setRelativeImportResolver(RelativeImportResolver relativeResolver)", "testcase": false, "constructor": false}, {"identifier": "setKieRuntimeFactoryFunction", "parameters": "(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction)", "modifiers": "public", "return": "DMNRuntimeBuilder", "signature": "DMNRuntimeBuilder setKieRuntimeFactoryFunction(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction)", "full_signature": "public DMNRuntimeBuilder setKieRuntimeFactoryFunction(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction)", "class_method_signature": "DMNRuntimeBuilder.setKieRuntimeFactoryFunction(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction)", "testcase": false, "constructor": false}, {"identifier": "usingStrict", "parameters": "()", "modifiers": "public static", "return": "DMNRuntimeBuilderConfigured", "signature": "DMNRuntimeBuilderConfigured usingStrict()", "full_signature": "public static DMNRuntimeBuilderConfigured usingStrict()", "class_method_signature": "DMNRuntimeBuilder.usingStrict()", "testcase": false, "constructor": false}, {"identifier": "buildConfiguration", "parameters": "()", "modifiers": "public", "return": "DMNRuntimeBuilderConfigured", "signature": "DMNRuntimeBuilderConfigured buildConfiguration()", "full_signature": "public DMNRuntimeBuilderConfigured buildConfiguration()", "class_method_signature": "DMNRuntimeBuilder.buildConfiguration()", "testcase": false, "constructor": false}, {"identifier": "buildConfigurationUsingCustomCompiler", "parameters": "(Function<DMNCompilerConfiguration, DMNCompiler> dmnCompilerFn)", "modifiers": "public", "return": "DMNRuntimeBuilderConfigured", "signature": "DMNRuntimeBuilderConfigured buildConfigurationUsingCustomCompiler(Function<DMNCompilerConfiguration, DMNCompiler> dmnCompilerFn)", "full_signature": "public DMNRuntimeBuilderConfigured buildConfigurationUsingCustomCompiler(Function<DMNCompilerConfiguration, DMNCompiler> dmnCompilerFn)", "class_method_signature": "DMNRuntimeBuilder.buildConfigurationUsingCustomCompiler(Function<DMNCompilerConfiguration, DMNCompiler> dmnCompilerFn)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/internal/utils/DMNRuntimeBuilder.java"}, "focal_method": {"identifier": "setKieRuntimeFactoryFunction", "parameters": "(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction)", "modifiers": "public", "return": "DMNRuntimeBuilder", "body": "public DMNRuntimeBuilder setKieRuntimeFactoryFunction(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction) {\n        ctx.setKieRuntimeFactoryFunction(kieRuntimeFactoryFunction);\n        return this;\n    }", "signature": "DMNRuntimeBuilder setKieRuntimeFactoryFunction(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction)", "full_signature": "public DMNRuntimeBuilder setKieRuntimeFactoryFunction(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction)", "class_method_signature": "DMNRuntimeBuilder.setKieRuntimeFactoryFunction(Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction)", "testcase": false, "constructor": false, "invocations": ["setKieRuntimeFactoryFunction"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}