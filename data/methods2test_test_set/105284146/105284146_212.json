{"test_class": {"identifier": "GeneratorScalableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Network network;", "modifier": "private", "type": "Network", "declarator": "network", "var_name": "network"}, {"original_string": "private Scalable g1;", "modifier": "private", "type": "Scalable", "declarator": "g1", "var_name": "g1"}, {"original_string": "private Scalable g2;", "modifier": "private", "type": "Scalable", "declarator": "g2", "var_name": "g2"}, {"original_string": "private Scalable g3;", "modifier": "private", "type": "Scalable", "declarator": "g3", "var_name": "g3"}, {"original_string": "private Scalable g4;", "modifier": "private", "type": "Scalable", "declarator": "g4", "var_name": "g4"}, {"original_string": "private Scalable g5;", "modifier": "private", "type": "Scalable", "declarator": "g5", "var_name": "g5"}, {"original_string": "private Scalable unknownGeneratorScalable;", "modifier": "private", "type": "Scalable", "declarator": "unknownGeneratorScalable", "var_name": "unknownGeneratorScalable"}, {"original_string": "private ScalingConvention convention;", "modifier": "private", "type": "ScalingConvention", "declarator": "convention", "var_name": "convention"}], "file": "action/action-util/src/test/java/com/powsybl/action/util/GeneratorScalableTest.java"}, "test_case": {"identifier": "testFilterInjections", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFilterInjections() {\n        Generator generator1 = network.getGenerator(\"g1\");\n        List<Injection> generators = g1.filterInjections(network);\n        assertEquals(1, generators.size());\n        assertSame(generator1, generators.get(0));\n    }", "signature": "void testFilterInjections()", "full_signature": "@Test public void testFilterInjections()", "class_method_signature": "GeneratorScalableTest.testFilterInjections()", "testcase": true, "constructor": false, "invocations": ["getGenerator", "filterInjections", "assertEquals", "size", "assertSame", "get"]}, "focal_class": {"identifier": "GeneratorScalable", "superclass": "extends AbstractInjectionScalable", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(GeneratorScalable.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(GeneratorScalable.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "GeneratorScalable", "parameters": "(String id)", "modifiers": "", "return": "", "signature": " GeneratorScalable(String id)", "full_signature": "  GeneratorScalable(String id)", "class_method_signature": "GeneratorScalable.GeneratorScalable(String id)", "testcase": false, "constructor": true}, {"identifier": "GeneratorScalable", "parameters": "(String id, double minValue, double maxValue)", "modifiers": "", "return": "", "signature": " GeneratorScalable(String id, double minValue, double maxValue)", "full_signature": "  GeneratorScalable(String id, double minValue, double maxValue)", "class_method_signature": "GeneratorScalable.GeneratorScalable(String id, double minValue, double maxValue)", "testcase": false, "constructor": true}, {"identifier": "reset", "parameters": "(Network n)", "modifiers": "@Override public", "return": "void", "signature": "void reset(Network n)", "full_signature": "@Override public void reset(Network n)", "class_method_signature": "GeneratorScalable.reset(Network n)", "testcase": false, "constructor": false}, {"identifier": "maximumValue", "parameters": "(Network n, ScalingConvention scalingConvention)", "modifiers": "@Override public", "return": "double", "signature": "double maximumValue(Network n, ScalingConvention scalingConvention)", "full_signature": "@Override public double maximumValue(Network n, ScalingConvention scalingConvention)", "class_method_signature": "GeneratorScalable.maximumValue(Network n, ScalingConvention scalingConvention)", "testcase": false, "constructor": false}, {"identifier": "minimumValue", "parameters": "(Network n, ScalingConvention scalingConvention)", "modifiers": "@Override public", "return": "double", "signature": "double minimumValue(Network n, ScalingConvention scalingConvention)", "full_signature": "@Override public double minimumValue(Network n, ScalingConvention scalingConvention)", "class_method_signature": "GeneratorScalable.minimumValue(Network n, ScalingConvention scalingConvention)", "testcase": false, "constructor": false}, {"identifier": "filterInjections", "parameters": "(Network n, List<Injection> injections, List<String> notFoundInjections)", "modifiers": "@Override public", "return": "void", "signature": "void filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "full_signature": "@Override public void filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "class_method_signature": "GeneratorScalable.filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(Network n, double asked, ScalingConvention scalingConvention)", "modifiers": "@Override public", "return": "double", "signature": "double scale(Network n, double asked, ScalingConvention scalingConvention)", "full_signature": "@Override public double scale(Network n, double asked, ScalingConvention scalingConvention)", "class_method_signature": "GeneratorScalable.scale(Network n, double asked, ScalingConvention scalingConvention)", "testcase": false, "constructor": false}], "file": "action/action-util/src/main/java/com/powsybl/action/util/GeneratorScalable.java"}, "focal_method": {"identifier": "filterInjections", "parameters": "(Network n, List<Injection> injections, List<String> notFoundInjections)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections) {\n        Objects.requireNonNull(n);\n        Objects.requireNonNull(injections);\n\n        Generator generator = n.getGenerator(id);\n        if (generator != null) {\n            injections.add(generator);\n        } else if (notFoundInjections != null) {\n            notFoundInjections.add(id);\n        }\n    }", "signature": "void filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "full_signature": "@Override public void filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "class_method_signature": "GeneratorScalable.filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "getGenerator", "add", "add"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}