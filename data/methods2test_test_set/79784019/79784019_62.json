{"test_class": {"identifier": "DataValidationExceptionMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "stardao-jersey/src/test/java/io/stardog/stardao/jersey/exceptionmappers/DataValidationExceptionMapperTest.java"}, "test_case": {"identifier": "toResponse", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n    @SuppressWarnings(\"unchecked\")\n    public void toResponse() throws Exception {\n        DataValidationExceptionMapper mapper = new DataValidationExceptionMapper();\n        DataValidationException exception = new DataValidationException(Arrays.asList(ValidationError.of(\"field\", \"is invalid\")));\n\n        Response response = mapper.toResponse(exception);\n        assertEquals(400, response.getStatus());\n        assertEquals(\"application/json\", response.getMediaType().toString());\n        Map<String,Object> map = (Map<String,Object>)response.getEntity();\n        assertEquals(400, map.get(\"code\"));\n        assertEquals(\"field: is invalid\", map.get(\"message\"));\n        assertEquals(\"field\", ((List<ValidationError>)map.get(\"errors\")).get(0).getField());\n    }", "signature": "void toResponse()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") public void toResponse()", "class_method_signature": "DataValidationExceptionMapperTest.toResponse()", "testcase": true, "constructor": false, "invocations": ["asList", "of", "toResponse", "assertEquals", "getStatus", "assertEquals", "toString", "getMediaType", "getEntity", "assertEquals", "get", "assertEquals", "get", "assertEquals", "getField", "get", "get"]}, "focal_class": {"identifier": "DataValidationExceptionMapper", "superclass": "", "interfaces": "implements ExceptionMapper<DataValidationException>", "fields": [], "methods": [{"identifier": "toResponse", "parameters": "(DataValidationException e)", "modifiers": "@Override public", "return": "Response", "signature": "Response toResponse(DataValidationException e)", "full_signature": "@Override public Response toResponse(DataValidationException e)", "class_method_signature": "DataValidationExceptionMapper.toResponse(DataValidationException e)", "testcase": false, "constructor": false}], "file": "stardao-jersey/src/main/java/io/stardog/stardao/jersey/exceptionmappers/DataValidationExceptionMapper.java"}, "focal_method": {"identifier": "toResponse", "parameters": "(DataValidationException e)", "modifiers": "@Override public", "return": "Response", "body": "@Override\n    public Response toResponse(DataValidationException e) {\n        return Response.status(400)\n                .type(MediaType.APPLICATION_JSON_TYPE)\n                .entity(ImmutableMap.of(\"code\", 400, \"message\", e.getMessage(), \"errors\", e.getErrors()))\n                .build();\n    }", "signature": "Response toResponse(DataValidationException e)", "full_signature": "@Override public Response toResponse(DataValidationException e)", "class_method_signature": "DataValidationExceptionMapper.toResponse(DataValidationException e)", "testcase": false, "constructor": false, "invocations": ["build", "entity", "type", "status", "of", "getMessage", "getErrors"]}, "repository": {"repo_id": 79784019, "url": "https://github.com/stardogventures/stardao", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 219, "license": "licensed"}}