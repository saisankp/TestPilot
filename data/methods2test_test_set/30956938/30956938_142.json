{"test_class": {"identifier": "CSVSpreadsheetReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SpreadsheetReader spreadsheetReader;", "modifier": "private", "type": "SpreadsheetReader", "declarator": "spreadsheetReader", "var_name": "spreadsheetReader"}], "file": "taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/CSVSpreadsheetReaderTest.java"}, "test_case": {"identifier": "testReadException", "parameters": "()", "modifiers": "@Test(expected=SpreadsheetReadException.class) public", "return": "void", "body": "@Test(expected=SpreadsheetReadException.class)\n\tpublic void testReadException() throws Exception {\n\t\tspreadsheetReader.read(new InputStream() {\n\t\t\tpublic int read() throws IOException {\n\t\t\t\tthrow new IOException();\n\t\t\t}\t\t\t\n\t\t}, new Range(0,1), new Range(0,1), false, new SpreadsheetRowProcessor() {\n\t\t\tpublic void processRow(int rowIndex, SortedMap<Integer, String> rowData) {\t\t\t\t\n\t\t\t}\t\t\t\n\t\t});\n\t}", "signature": "void testReadException()", "full_signature": "@Test(expected=SpreadsheetReadException.class) public void testReadException()", "class_method_signature": "CSVSpreadsheetReaderTest.testReadException()", "testcase": true, "constructor": false, "invocations": ["read"]}, "focal_class": {"identifier": "CSVSpreadsheetReader", "superclass": "", "interfaces": "implements SpreadsheetReader", "fields": [], "methods": [{"identifier": "read", "parameters": "(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)", "modifiers": "public", "return": "void", "signature": "void read(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)", "full_signature": "public void read(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)", "class_method_signature": "CSVSpreadsheetReader.read(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)", "testcase": false, "constructor": false}], "file": "taverna-spreadsheet-import-activity/src/main/java/org/apache/taverna/activities/spreadsheet/CSVSpreadsheetReader.java"}, "focal_method": {"identifier": "read", "parameters": "(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)", "modifiers": "public", "return": "void", "body": "public void read(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)\n\t\t\tthrows SpreadsheetReadException {\n\t\tCsvReader csvReader = new CsvReader(new InputStreamReader(inputStream));\n\t\tcsvReader.setSkipEmptyRecords(false);\n\n\t\tSortedMap<Integer, String> currentDataRow = new TreeMap<Integer, String>();\n\n\t\ttry {\n\t\t\twhile(csvReader.readRecord()) {\n\t\t\t\tint rowIndex = (int) csvReader.getCurrentRecord();\n\t\t\t\tboolean blankRow = true;\n\t\t\t\tif (rowRange.contains(rowIndex)) {\n\t\t\t\t\tfor (int columnIndex = columnRange.getStart(); columnIndex <= columnRange.getEnd(); columnIndex++) {\n\t\t\t\t\t\tif (columnRange.contains(columnIndex)) {\n\t\t\t\t\t\t\tString value = csvReader.get(columnIndex);\n\t\t\t\t\t\t\tvalue = \"\".equals(value) ? null : value;\n\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\tblankRow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentDataRow.put(columnIndex, value);\n\t\t\t\t\t\t\tif (columnIndex == columnRange.getEnd()) {\n\t\t\t\t\t\t\t\tif (!ignoreBlankRows || !blankRow) {\n\t\t\t\t\t\t\t\t\trowProcessor.processRow(rowIndex, currentDataRow);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcurrentDataRow = new TreeMap<Integer, String>();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (rowIndex == rowRange.getEnd()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tthrow new SpreadsheetReadException(\"Unable to read CSV file\", e);\n\t\t}\n\t}", "signature": "void read(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)", "full_signature": "public void read(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)", "class_method_signature": "CSVSpreadsheetReader.read(InputStream inputStream, Range rowRange,\n\t\t\tRange columnRange, boolean ignoreBlankRows,\n\t\t\tSpreadsheetRowProcessor rowProcessor)", "testcase": false, "constructor": false, "invocations": ["setSkipEmptyRecords", "readRecord", "getCurrentRecord", "contains", "getStart", "getEnd", "contains", "get", "equals", "put", "getEnd", "processRow", "getEnd"]}, "repository": {"repo_id": 30956938, "url": "https://github.com/apache/incubator-taverna-common-activities", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 5696, "license": "licensed"}}