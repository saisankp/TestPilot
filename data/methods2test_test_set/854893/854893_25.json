{"test_class": {"identifier": "StandardBindingFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Codec<Spam> codec;", "modifier": "@Mock\n    private", "type": "Codec<Spam>", "declarator": "codec", "var_name": "codec"}, {"original_string": "private StandardBindingFactory factory;", "modifier": "private", "type": "StandardBindingFactory", "declarator": "factory", "var_name": "factory"}], "file": "preon-binding/src/test/java/org/codehaus/preon/binding/StandardBindingFactoryTest.java"}, "test_case": {"identifier": "shouldHaveAccessToNonPublicFields", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldHaveAccessToNonPublicFields() throws Exception {\n        Field field = Spam.class.getDeclaredField(\"eggs\");\n        Binding binding = factory.create(null, field, codec, null, null);\n        binding.save(new Spam(), null, null);\n    }", "signature": "void shouldHaveAccessToNonPublicFields()", "full_signature": "@Test public void shouldHaveAccessToNonPublicFields()", "class_method_signature": "StandardBindingFactoryTest.shouldHaveAccessToNonPublicFields()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "create", "save"]}, "focal_class": {"identifier": "StandardBindingFactory", "superclass": "", "interfaces": "implements BindingFactory", "fields": [{"original_string": "private static int id;", "modifier": "private static", "type": "int", "declarator": "id", "var_name": "id"}, {"original_string": "private IdentifierRewriter rewriter = new CamelCaseRewriter();", "modifier": "private", "type": "IdentifierRewriter", "declarator": "rewriter = new CamelCaseRewriter()", "var_name": "rewriter"}], "methods": [{"identifier": "create", "parameters": "(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference)", "modifiers": "public", "return": "Binding", "signature": "Binding create(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference)", "full_signature": "public Binding create(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference)", "class_method_signature": "StandardBindingFactory.create(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference)", "testcase": false, "constructor": false}], "file": "preon-binding/src/main/java/org/codehaus/preon/binding/StandardBindingFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference)", "modifiers": "public", "return": "Binding", "body": "public Binding create(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference) {\n        return new FieldBinding(field, codec, rewriter, containerReference);\n    }", "signature": "Binding create(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference)", "full_signature": "public Binding create(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference)", "class_method_signature": "StandardBindingFactory.create(AnnotatedElement metadata, Field field,\n                          Codec<?> codec, ResolverContext context,\n                          Documenter<ParaContents<?>> containerReference)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 854893, "url": "https://github.com/preon/preon", "language": "Java", "is_fork": false, "fork_count": 78, "stargazer_count": 155, "size": 2459, "license": "licensed"}}