{"test_class": {"identifier": "ProcessContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-core/src/test/java/org/drools/core/spi/ProcessContextTest.java"}, "test_case": {"identifier": "testProcessContextGetAssignment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessContextGetAssignment() {\n\n        KieBase kbase = KnowledgeBaseFactory.newKnowledgeBase();\n        KieSession ksession = kbase.newKieSession();\n        assertNotNull(ksession);\n\n        CaseInformation caseInfo = new CaseInformation();\n        caseInfo.assign(\"owner\", new OrganizationalEntity() {\n            @Override\n            public String getId() {\n                return \"testUser\";\n            }\n\n            @Override\n            public void writeExternal(ObjectOutput out) throws IOException {\n\n            }\n\n            @Override\n            public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n\n            }\n        });\n        ksession.insert(caseInfo);\n\n        ProcessContext processContext = new ProcessContext(ksession);\n\n        CaseAssignment caseAssignment = processContext.getCaseAssignment();\n        assertNotNull(caseAssignment);\n        Collection<OrganizationalEntity> forRole = caseAssignment.getAssignments(\"owner\");\n        assertNotNull(forRole);\n        assertEquals(1, forRole.size());\n    }", "signature": "void testProcessContextGetAssignment()", "full_signature": "@Test public void testProcessContextGetAssignment()", "class_method_signature": "ProcessContextTest.testProcessContextGetAssignment()", "testcase": true, "constructor": false, "invocations": ["newKnowledgeBase", "newKieSession", "assertNotNull", "assign", "insert", "getCaseAssignment", "assertNotNull", "getAssignments", "assertNotNull", "assertEquals", "size"]}, "focal_class": {"identifier": "ProcessContext", "superclass": "extends AbstractProcessContext", "interfaces": "", "fields": [], "methods": [{"identifier": "ProcessContext", "parameters": "(KieRuntime kruntime)", "modifiers": "public", "return": "", "signature": " ProcessContext(KieRuntime kruntime)", "full_signature": "public  ProcessContext(KieRuntime kruntime)", "class_method_signature": "ProcessContext.ProcessContext(KieRuntime kruntime)", "testcase": false, "constructor": true}, {"identifier": "getCaseData", "parameters": "()", "modifiers": "public", "return": "CaseData", "signature": "CaseData getCaseData()", "full_signature": "public CaseData getCaseData()", "class_method_signature": "ProcessContext.getCaseData()", "testcase": false, "constructor": false}, {"identifier": "getCaseAssignment", "parameters": "()", "modifiers": "public", "return": "CaseAssignment", "signature": "CaseAssignment getCaseAssignment()", "full_signature": "public CaseAssignment getCaseAssignment()", "class_method_signature": "ProcessContext.getCaseAssignment()", "testcase": false, "constructor": false}], "file": "drools-core/src/main/java/org/drools/core/spi/ProcessContext.java"}, "focal_method": {"identifier": "getCaseAssignment", "parameters": "()", "modifiers": "public", "return": "CaseAssignment", "body": "public CaseAssignment getCaseAssignment() {\n        Collection<? extends Object> objects = getKieRuntime().getObjects(new ClassObjectFilter(CaseAssignment.class));\n        if (objects.size() == 0) {\n            return null;\n        }\n\n        return (CaseAssignment) objects.iterator().next();\n    }", "signature": "CaseAssignment getCaseAssignment()", "full_signature": "public CaseAssignment getCaseAssignment()", "class_method_signature": "ProcessContext.getCaseAssignment()", "testcase": false, "constructor": false, "invocations": ["getObjects", "getKieRuntime", "size", "next", "iterator"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}