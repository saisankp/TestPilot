{"test_class": {"identifier": "RepoListPresenterTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Inject\n    protected RepoListMapper repoListMapper;", "modifier": "@Inject\n    protected", "type": "RepoListMapper", "declarator": "repoListMapper", "var_name": "repoListMapper"}, {"original_string": "@Inject\n    protected Model model;", "modifier": "@Inject\n    protected", "type": "Model", "declarator": "model", "var_name": "model"}, {"original_string": "@Inject\n    protected List<Repository> repoList;", "modifier": "@Inject\n    protected", "type": "List<Repository>", "declarator": "repoList", "var_name": "repoList"}, {"original_string": "@Inject\n    protected List<RepositoryDTO> repositoryDTOs;", "modifier": "@Inject\n    protected", "type": "List<RepositoryDTO>", "declarator": "repositoryDTOs", "var_name": "repositoryDTOs"}, {"original_string": "private RepoListView mockView;", "modifier": "private", "type": "RepoListView", "declarator": "mockView", "var_name": "mockView"}, {"original_string": "private RepoListPresenter repoListPresenter;", "modifier": "private", "type": "RepoListPresenter", "declarator": "repoListPresenter", "var_name": "repoListPresenter"}, {"original_string": "private ActivityCallback activityCallback;", "modifier": "private", "type": "ActivityCallback", "declarator": "activityCallback", "var_name": "activityCallback"}], "file": "app/src/test/java/com/andrey7mel/stepbystep/presenter/RepoListPresenterTest.java"}, "test_case": {"identifier": "testClickRepo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClickRepo() {\n        Repository repository = new Repository(TestConst.TEST_REPO, TestConst.TEST_OWNER);\n\n        repoListPresenter.clickRepo(repository);\n\n        verify(mockView).startRepoInfoFragment(repository);\n    }", "signature": "void testClickRepo()", "full_signature": "@Test public void testClickRepo()", "class_method_signature": "RepoListPresenterTest.testClickRepo()", "testcase": true, "constructor": false, "invocations": ["clickRepo", "startRepoInfoFragment", "verify"]}, "focal_class": {"identifier": "RepoListPresenter", "superclass": "extends BasePresenter", "interfaces": "", "fields": [{"original_string": "private static final String BUNDLE_REPO_LIST_KEY = \"BUNDLE_REPO_LIST_KEY\";", "modifier": "private static final", "type": "String", "declarator": "BUNDLE_REPO_LIST_KEY = \"BUNDLE_REPO_LIST_KEY\"", "var_name": "BUNDLE_REPO_LIST_KEY"}, {"original_string": "@Inject\n    protected RepoListMapper repoListMapper;", "modifier": "@Inject\n    protected", "type": "RepoListMapper", "declarator": "repoListMapper", "var_name": "repoListMapper"}, {"original_string": "private RepoListView view;", "modifier": "private", "type": "RepoListView", "declarator": "view", "var_name": "view"}, {"original_string": "private List<Repository> repoList;", "modifier": "private", "type": "List<Repository>", "declarator": "repoList", "var_name": "repoList"}], "methods": [{"identifier": "RepoListPresenter", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " RepoListPresenter()", "full_signature": "@Inject public  RepoListPresenter()", "class_method_signature": "RepoListPresenter.RepoListPresenter()", "testcase": false, "constructor": true}, {"identifier": "RepoListPresenter", "parameters": "(RepoListView view)", "modifiers": "public", "return": "", "signature": " RepoListPresenter(RepoListView view)", "full_signature": "public  RepoListPresenter(RepoListView view)", "class_method_signature": "RepoListPresenter.RepoListPresenter(RepoListView view)", "testcase": false, "constructor": true}, {"identifier": "getView", "parameters": "()", "modifiers": "@Override protected", "return": "View", "signature": "View getView()", "full_signature": "@Override protected View getView()", "class_method_signature": "RepoListPresenter.getView()", "testcase": false, "constructor": false}, {"identifier": "onSearchButtonClick", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onSearchButtonClick()", "full_signature": "public void onSearchButtonClick()", "class_method_signature": "RepoListPresenter.onSearchButtonClick()", "testcase": false, "constructor": false}, {"identifier": "onCreateView", "parameters": "(Bundle savedInstanceState)", "modifiers": "public", "return": "void", "signature": "void onCreateView(Bundle savedInstanceState)", "full_signature": "public void onCreateView(Bundle savedInstanceState)", "class_method_signature": "RepoListPresenter.onCreateView(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "isRepoListNotEmpty", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isRepoListNotEmpty()", "full_signature": "private boolean isRepoListNotEmpty()", "class_method_signature": "RepoListPresenter.isRepoListNotEmpty()", "testcase": false, "constructor": false}, {"identifier": "onSaveInstanceState", "parameters": "(Bundle outState)", "modifiers": "public", "return": "void", "signature": "void onSaveInstanceState(Bundle outState)", "full_signature": "public void onSaveInstanceState(Bundle outState)", "class_method_signature": "RepoListPresenter.onSaveInstanceState(Bundle outState)", "testcase": false, "constructor": false}, {"identifier": "clickRepo", "parameters": "(Repository repository)", "modifiers": "public", "return": "void", "signature": "void clickRepo(Repository repository)", "full_signature": "public void clickRepo(Repository repository)", "class_method_signature": "RepoListPresenter.clickRepo(Repository repository)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/andrey7mel/stepbystep/presenter/RepoListPresenter.java"}, "focal_method": {"identifier": "clickRepo", "parameters": "(Repository repository)", "modifiers": "public", "return": "void", "body": "public void clickRepo(Repository repository) {\n        view.startRepoInfoFragment(repository);\n    }", "signature": "void clickRepo(Repository repository)", "full_signature": "public void clickRepo(Repository repository)", "class_method_signature": "RepoListPresenter.clickRepo(Repository repository)", "testcase": false, "constructor": false, "invocations": ["startRepoInfoFragment"]}, "repository": {"repo_id": 48544726, "url": "https://github.com/andrey7mel/android-step-by-step", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 130, "size": 313, "license": "licensed"}}