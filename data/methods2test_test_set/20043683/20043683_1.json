{"test_class": {"identifier": "SnomedCodeComparatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "snomed-coder-ui-web/src/test/java/org/t3as/snomedct/gwt/client/snomed/SnomedCodeComparatorTest.java"}, "test_case": {"identifier": "testCompare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompare() throws Exception {\n        final List<SnomedConcept> sorted = new ArrayList<>(TestData.TEST_DATA);\n        Collections.sort(sorted, new SnomedCodeComparator());\n        for (int i = 0; i < sorted.size(); i++) {\n            assertEquals(sorted.get(i).candidateScore, i);\n        }\n    }", "signature": "void testCompare()", "full_signature": "@Test public void testCompare()", "class_method_signature": "SnomedCodeComparatorTest.testCompare()", "testcase": true, "constructor": false, "invocations": ["sort", "size", "assertEquals", "get"]}, "focal_class": {"identifier": "SnomedCodeComparator", "superclass": "", "interfaces": "implements Comparator<SnomedConcept>", "fields": [], "methods": [{"identifier": "compare", "parameters": "(final SnomedConcept o1, final SnomedConcept o2)", "modifiers": "public", "return": "int", "signature": "int compare(final SnomedConcept o1, final SnomedConcept o2)", "full_signature": "public int compare(final SnomedConcept o1, final SnomedConcept o2)", "class_method_signature": "SnomedCodeComparator.compare(final SnomedConcept o1, final SnomedConcept o2)", "testcase": false, "constructor": false}], "file": "snomed-coder-ui-web/src/main/java/org/t3as/snomedct/gwt/client/snomed/SnomedCodeComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(final SnomedConcept o1, final SnomedConcept o2)", "modifiers": "public", "return": "int", "body": "public int compare(final SnomedConcept o1, final SnomedConcept o2) {\n        if (o1 == o2) return 0;\n        if (o1 != null) {\n            if (o2 == null) return 1;\n                // need to use BigInteger to compare SNOMED codes since some are fantastically long\n            else return new BigInteger(o1.snomedId)\n                    .compareTo(new BigInteger(o2.snomedId));\n        }\n        return -1;\n    }", "signature": "int compare(final SnomedConcept o1, final SnomedConcept o2)", "full_signature": "public int compare(final SnomedConcept o1, final SnomedConcept o2)", "class_method_signature": "SnomedCodeComparator.compare(final SnomedConcept o1, final SnomedConcept o2)", "testcase": false, "constructor": false, "invocations": ["compareTo"]}, "repository": {"repo_id": 20043683, "url": "https://github.com/NICTA/t3as-snomedct-service", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 1240, "license": "licensed"}}