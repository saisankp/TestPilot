{"test_class": {"identifier": "TestScopedMapItem", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml/src/test/java/org/jvoicexml/interpreter/scope/TestScopedMapItem.java"}, "test_case": {"identifier": "testGetScope", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetScope() {\n        ScopedMapItem<String> stringItem1 =\n                new ScopedMapItem<String>(Scope.ANONYMOUS, \"test1\");\n        Assert.assertEquals(Scope.ANONYMOUS, stringItem1.getScope());\n\n        ScopedMapItem<String> stringItem2 =\n                new ScopedMapItem<String>(Scope.ANONYMOUS, null);\n        Assert.assertEquals(Scope.ANONYMOUS, stringItem2.getScope());\n\n        ScopedMapItem<String> stringItem3 =\n                new ScopedMapItem<String>(null, \"test3\");\n        Assert.assertEquals(null, stringItem3.getScope());\n\n        ScopedMapItem<String> stringItem4 =\n                new ScopedMapItem<String>(null, null);\n        Assert.assertEquals(null, stringItem4.getScope());\n\n        ScopedMapItem<Long> longItem1 =\n                new ScopedMapItem<Long>(Scope.ANONYMOUS, new Long(1));\n        Assert.assertEquals(Scope.ANONYMOUS, longItem1.getScope());\n\n        ScopedMapItem<Long> longItem2 =\n                new ScopedMapItem<Long>(Scope.DIALOG, new Long(1));\n        Assert.assertEquals(Scope.DIALOG, longItem2.getScope());\n    }", "signature": "void testGetScope()", "full_signature": "@Test public void testGetScope()", "class_method_signature": "TestScopedMapItem.testGetScope()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getScope", "assertEquals", "getScope", "assertEquals", "getScope", "assertEquals", "getScope", "assertEquals", "getScope", "assertEquals", "getScope"]}, "focal_class": {"identifier": "ScopedMapItem", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Scope scope;", "modifier": "private final", "type": "Scope", "declarator": "scope", "var_name": "scope"}, {"original_string": "private final V value;", "modifier": "private final", "type": "V", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "ScopedMapItem", "parameters": "(final Scope s, final V v)", "modifiers": "public", "return": "", "signature": " ScopedMapItem(final Scope s, final V v)", "full_signature": "public  ScopedMapItem(final Scope s, final V v)", "class_method_signature": "ScopedMapItem.ScopedMapItem(final Scope s, final V v)", "testcase": false, "constructor": true}, {"identifier": "getScope", "parameters": "()", "modifiers": "public", "return": "Scope", "signature": "Scope getScope()", "full_signature": "public Scope getScope()", "class_method_signature": "ScopedMapItem.getScope()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "V", "signature": "V getValue()", "full_signature": "public V getValue()", "class_method_signature": "ScopedMapItem.getValue()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ScopedMapItem.toString()", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/interpreter/scope/ScopedMapItem.java"}, "focal_method": {"identifier": "getScope", "parameters": "()", "modifiers": "public", "return": "Scope", "body": "public Scope getScope() {\n        return scope;\n    }", "signature": "Scope getScope()", "full_signature": "public Scope getScope()", "class_method_signature": "ScopedMapItem.getScope()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}