{"test_class": {"identifier": "SearchTermTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ValidatedRoaPrefix prefixTest = ValidatedRoaPrefix.of(null, 0, IpRange.parse(\"10.0.0.0/8\"), 32,\n            Instant.now().toEpochMilli(),Instant.now().plus(365, DAYS).toEpochMilli(), BigInteger.ONE,null);", "modifier": "private final", "type": "ValidatedRoaPrefix", "declarator": "prefixTest = ValidatedRoaPrefix.of(null, 0, IpRange.parse(\"10.0.0.0/8\"), 32,\n            Instant.now().toEpochMilli(),Instant.now().plus(365, DAYS).toEpochMilli(), BigInteger.ONE,null)", "var_name": "prefixTest"}, {"original_string": "private final ValidatedRoaPrefix asnTest = ValidatedRoaPrefix.of(null, 3642, null, 32,\n            Instant.now().toEpochMilli(),Instant.now().plus(365, DAYS).toEpochMilli(), BigInteger.ONE,null);", "modifier": "private final", "type": "ValidatedRoaPrefix", "declarator": "asnTest = ValidatedRoaPrefix.of(null, 3642, null, 32,\n            Instant.now().toEpochMilli(),Instant.now().plus(365, DAYS).toEpochMilli(), BigInteger.ONE,null)", "var_name": "asnTest"}, {"original_string": "private final ValidatedRoaPrefix genericTest = ValidatedRoaPrefix.of(\n            ValidatedRpkiObjects.TrustAnchorData.of(Key.of(1L), \"Bla Anchor\"),\n            3642,\n            null, 32,\n            Instant.now().toEpochMilli(),Instant.now().plus(365, DAYS).toEpochMilli(), BigInteger.ONE,\n            ImmutableSortedSet.of(\"Some location\"));", "modifier": "private final", "type": "ValidatedRoaPrefix", "declarator": "genericTest = ValidatedRoaPrefix.of(\n            ValidatedRpkiObjects.TrustAnchorData.of(Key.of(1L), \"Bla Anchor\"),\n            3642,\n            null, 32,\n            Instant.now().toEpochMilli(),Instant.now().plus(365, DAYS).toEpochMilli(), BigInteger.ONE,\n            ImmutableSortedSet.of(\"Some location\"))", "var_name": "genericTest"}], "file": "rpki-validator/src/test/java/net/ripe/rpki/validator3/api/SearchTermTest.java"}, "test_case": {"identifier": "should_test_generic", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_test_generic() {\n        assertThat(new SearchTerm(\"Bla\").test(genericTest)).isTrue();\n        assertThat(new SearchTerm(\"bla\").test(genericTest)).isFalse();\n        assertThat(new SearchTerm(\"3742\").test(genericTest)).isFalse();\n        assertThat(new SearchTerm(\"locati\").test(genericTest)).isTrue();\n    }", "signature": "void should_test_generic()", "full_signature": "@Test public void should_test_generic()", "class_method_signature": "SearchTermTest.should_test_generic()", "testcase": true, "constructor": false, "invocations": ["isTrue", "assertThat", "test", "isFalse", "assertThat", "test", "isFalse", "assertThat", "test", "isTrue", "assertThat", "test"]}, "focal_class": {"identifier": "SearchTerm", "superclass": "", "interfaces": "implements Predicate<ValidatedRoaPrefix>", "fields": [{"original_string": "private final String term;", "modifier": "private final", "type": "String", "declarator": "term", "var_name": "term"}, {"original_string": "private final IpRange range;", "modifier": "private final", "type": "IpRange", "declarator": "range", "var_name": "range"}, {"original_string": "private final Long asn;", "modifier": "private final", "type": "Long", "declarator": "asn", "var_name": "asn"}, {"original_string": "private final Predicate<ValidatedRoaPrefix> actualPredicate;", "modifier": "private final", "type": "Predicate<ValidatedRoaPrefix>", "declarator": "actualPredicate", "var_name": "actualPredicate"}, {"original_string": "private final static int IPv4_PREFIX_LENGTH = 32;", "modifier": "private final static", "type": "int", "declarator": "IPv4_PREFIX_LENGTH = 32", "var_name": "IPv4_PREFIX_LENGTH"}, {"original_string": "private final static int IPv6_PREFIX_LENGTH = 128;", "modifier": "private final static", "type": "int", "declarator": "IPv6_PREFIX_LENGTH = 128", "var_name": "IPv6_PREFIX_LENGTH"}], "methods": [{"identifier": "SearchTerm", "parameters": "(String term)", "modifiers": "public", "return": "", "signature": " SearchTerm(String term)", "full_signature": "public  SearchTerm(String term)", "class_method_signature": "SearchTerm.SearchTerm(String term)", "testcase": false, "constructor": true}, {"identifier": "createPredicate", "parameters": "()", "modifiers": "private", "return": "Predicate<ValidatedRoaPrefix>", "signature": "Predicate<ValidatedRoaPrefix> createPredicate()", "full_signature": "private Predicate<ValidatedRoaPrefix> createPredicate()", "class_method_signature": "SearchTerm.createPredicate()", "testcase": false, "constructor": false}, {"identifier": "asAsn", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long asAsn()", "full_signature": "public Long asAsn()", "class_method_signature": "SearchTerm.asAsn()", "testcase": false, "constructor": false}, {"identifier": "asIpRange", "parameters": "()", "modifiers": "public", "return": "IpRange", "signature": "IpRange asIpRange()", "full_signature": "public IpRange asIpRange()", "class_method_signature": "SearchTerm.asIpRange()", "testcase": false, "constructor": false}, {"identifier": "asString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String asString()", "full_signature": "public String asString()", "class_method_signature": "SearchTerm.asString()", "testcase": false, "constructor": false}, {"identifier": "test", "parameters": "(ValidatedRoaPrefix prefix)", "modifiers": "public", "return": "boolean", "signature": "boolean test(ValidatedRoaPrefix prefix)", "full_signature": "public boolean test(ValidatedRoaPrefix prefix)", "class_method_signature": "SearchTerm.test(ValidatedRoaPrefix prefix)", "testcase": false, "constructor": false}, {"identifier": "convertAsn", "parameters": "(String value)", "modifiers": "private", "return": "Long", "signature": "Long convertAsn(String value)", "full_signature": "private Long convertAsn(String value)", "class_method_signature": "SearchTerm.convertAsn(String value)", "testcase": false, "constructor": false}, {"identifier": "convertPrefix", "parameters": "(String value)", "modifiers": "private", "return": "IpRange", "signature": "IpRange convertPrefix(String value)", "full_signature": "private IpRange convertPrefix(String value)", "class_method_signature": "SearchTerm.convertPrefix(String value)", "testcase": false, "constructor": false}], "file": "rpki-validator/src/main/java/net/ripe/rpki/validator3/api/SearchTerm.java"}, "focal_method": {"identifier": "test", "parameters": "(ValidatedRoaPrefix prefix)", "modifiers": "public", "return": "boolean", "body": "public boolean test(ValidatedRoaPrefix prefix) {\n        return actualPredicate.test(prefix);\n    }", "signature": "boolean test(ValidatedRoaPrefix prefix)", "full_signature": "public boolean test(ValidatedRoaPrefix prefix)", "class_method_signature": "SearchTerm.test(ValidatedRoaPrefix prefix)", "testcase": false, "constructor": false, "invocations": ["test"]}, "repository": {"repo_id": 104217624, "url": "https://github.com/RIPE-NCC/rpki-validator-3", "stars": 32, "created": "9/20/2017 1:15:05 PM +00:00", "updates": "2020-01-27T10:48:38+00:00", "fork": "False", "license": "licensed"}}