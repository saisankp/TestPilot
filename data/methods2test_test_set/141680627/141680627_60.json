{"test_class": {"identifier": "ManeuverItemViewTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private ManeuverItemView mManeuverItemView;", "modifier": "private", "type": "ManeuverItemView", "declarator": "mManeuverItemView", "var_name": "mManeuverItemView"}, {"original_string": "private boolean mCallbackCalled;", "modifier": "private", "type": "boolean", "declarator": "mCallbackCalled", "var_name": "mCallbackCalled"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/routing/ManeuverItemViewTest.java"}, "test_case": {"identifier": "settingNullManeuverShouldThrowException", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void settingNullManeuverShouldThrowException() {\n        mManeuverItemView.setManeuver(null, 0);\n    }", "signature": "void settingNullManeuverShouldThrowException()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void settingNullManeuverShouldThrowException()", "class_method_signature": "ManeuverItemViewTest.settingNullManeuverShouldThrowException()", "testcase": true, "constructor": false, "invocations": ["setManeuver"]}, "focal_class": {"identifier": "ManeuverItemView", "superclass": "extends BaseView", "interfaces": "", "fields": [{"original_string": "private final EnumMap<ManeuverItemView.Section, View> mSections = new EnumMap<>(\n            ManeuverItemView.Section.class);", "modifier": "private final", "type": "EnumMap<ManeuverItemView.Section, View>", "declarator": "mSections = new EnumMap<>(\n            ManeuverItemView.Section.class)", "var_name": "mSections"}, {"original_string": "private Maneuver mManeuver;", "modifier": "private", "type": "Maneuver", "declarator": "mManeuver", "var_name": "mManeuver"}], "methods": [{"identifier": "ManeuverItemView", "parameters": "(final Context context)", "modifiers": "public", "return": "", "signature": " ManeuverItemView(final Context context)", "full_signature": "public  ManeuverItemView(final Context context)", "class_method_signature": "ManeuverItemView.ManeuverItemView(final Context context)", "testcase": false, "constructor": true}, {"identifier": "ManeuverItemView", "parameters": "(final Context context, final AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " ManeuverItemView(final Context context, final AttributeSet attrs)", "full_signature": "public  ManeuverItemView(final Context context, final AttributeSet attrs)", "class_method_signature": "ManeuverItemView.ManeuverItemView(final Context context, final AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "ManeuverItemView", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr)", "modifiers": "public", "return": "", "signature": " ManeuverItemView(final Context context, final AttributeSet attrs, final int defStyleAttr)", "full_signature": "public  ManeuverItemView(final Context context, final AttributeSet attrs, final int defStyleAttr)", "class_method_signature": "ManeuverItemView.ManeuverItemView(final Context context, final AttributeSet attrs, final int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "ManeuverItemView", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr,\n                            final int defStyleRes)", "modifiers": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public", "return": "", "signature": " ManeuverItemView(final Context context, final AttributeSet attrs, final int defStyleAttr,\n                            final int defStyleRes)", "full_signature": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public  ManeuverItemView(final Context context, final AttributeSet attrs, final int defStyleAttr,\n                            final int defStyleRes)", "class_method_signature": "ManeuverItemView.ManeuverItemView(final Context context, final AttributeSet attrs, final int defStyleAttr,\n                            final int defStyleRes)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "modifiers": "private", "return": "void", "signature": "void init(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "full_signature": "private void init(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "class_method_signature": "ManeuverItemView.init(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "testcase": false, "constructor": false}, {"identifier": "initSections", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initSections()", "full_signature": "private void initSections()", "class_method_signature": "ManeuverItemView.initSections()", "testcase": false, "constructor": false}, {"identifier": "attrsInit", "parameters": "(final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "modifiers": "private", "return": "void", "signature": "void attrsInit(final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "full_signature": "private void attrsInit(final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "class_method_signature": "ManeuverItemView.attrsInit(final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "testcase": false, "constructor": false}, {"identifier": "setSectionVisible", "parameters": "(final Section section, final boolean visible)", "modifiers": "public", "return": "void", "signature": "void setSectionVisible(final Section section, final boolean visible)", "full_signature": "public void setSectionVisible(final Section section, final boolean visible)", "class_method_signature": "ManeuverItemView.setSectionVisible(final Section section, final boolean visible)", "testcase": false, "constructor": false}, {"identifier": "isSectionVisible", "parameters": "(final Section section)", "modifiers": "public", "return": "boolean", "signature": "boolean isSectionVisible(final Section section)", "full_signature": "public boolean isSectionVisible(final Section section)", "class_method_signature": "ManeuverItemView.isSectionVisible(final Section section)", "testcase": false, "constructor": false}, {"identifier": "getVisibleSections", "parameters": "()", "modifiers": "public", "return": "Set<Section>", "signature": "Set<Section> getVisibleSections()", "full_signature": "public Set<Section> getVisibleSections()", "class_method_signature": "ManeuverItemView.getVisibleSections()", "testcase": false, "constructor": false}, {"identifier": "setVisibleSections", "parameters": "(final EnumSet<Section> sectionEnumSet)", "modifiers": "public", "return": "void", "signature": "void setVisibleSections(final EnumSet<Section> sectionEnumSet)", "full_signature": "public void setVisibleSections(final EnumSet<Section> sectionEnumSet)", "class_method_signature": "ManeuverItemView.setVisibleSections(final EnumSet<Section> sectionEnumSet)", "testcase": false, "constructor": false}, {"identifier": "getManeuver", "parameters": "()", "modifiers": "public", "return": "Maneuver", "signature": "Maneuver getManeuver()", "full_signature": "public Maneuver getManeuver()", "class_method_signature": "ManeuverItemView.getManeuver()", "testcase": false, "constructor": false}, {"identifier": "setManeuver", "parameters": "(final List<Maneuver> maneuvers, final int pos)", "modifiers": "public", "return": "void", "signature": "void setManeuver(final List<Maneuver> maneuvers, final int pos)", "full_signature": "public void setManeuver(final List<Maneuver> maneuvers, final int pos)", "class_method_signature": "ManeuverItemView.setManeuver(final List<Maneuver> maneuvers, final int pos)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/routing/ManeuverItemView.java"}, "focal_method": {"identifier": "setManeuver", "parameters": "(final List<Maneuver> maneuvers, final int pos)", "modifiers": "public", "return": "void", "body": "public void setManeuver(final List<Maneuver> maneuvers, final int pos) {\n        if (maneuvers == null) {\n            throw new IllegalArgumentException(\n                    getContext().getString(R.string.msdkui_exception_maneuvres_null));\n        }\n\n        if (pos < 0 || pos > maneuvers.size()) {\n            throw new IllegalArgumentException(\n                    getContext().getString(R.string.msdkui_exception_maneuver_pos_invalid));\n        }\n\n        final ManeuverResources maneuverResources = new ManeuverResources(getContext(), maneuvers);\n        mManeuver = maneuvers.get(pos);\n\n        final ImageView icon = (ImageView) mSections.get(Section.ICON);\n        final int id = maneuverResources.getManeuverIconId(pos);\n        if (id == 0) {\n            icon.setVisibility(View.GONE);\n        } else {\n            icon.setImageResource(id);\n        }\n        icon.setTag(id);\n\n        final TextView instructionView = (TextView) mSections.get(Section.INSTRUCTIONS);\n        instructionView.setText(maneuverResources.getManeuverInstruction(pos));\n\n        final TextView addressView = (TextView) mSections.get(Section.ADDRESS);\n        addressView.setText(maneuverResources.getRoadToDisplay(pos));\n\n        final TextView distanceView = (TextView) mSections.get(Section.DISTANCE);\n        final int distance = maneuverResources.getDistanceFromNext(pos);\n        if (distance == 0) {\n            distanceView.setVisibility(GONE);\n        } else {\n            distanceView.setVisibility(VISIBLE);\n            distanceView.setText(DistanceFormatterUtil.format(getContext(), distance, mUnitSystem));\n        }\n\n        if (getVisibility() == INVISIBLE) {\n            setVisibility(View.VISIBLE);\n        }\n    }", "signature": "void setManeuver(final List<Maneuver> maneuvers, final int pos)", "full_signature": "public void setManeuver(final List<Maneuver> maneuvers, final int pos)", "class_method_signature": "ManeuverItemView.setManeuver(final List<Maneuver> maneuvers, final int pos)", "testcase": false, "constructor": false, "invocations": ["getString", "getContext", "size", "getString", "getContext", "getContext", "get", "get", "getManeuverIconId", "setVisibility", "setImageResource", "setTag", "get", "setText", "getManeuverInstruction", "get", "setText", "getRoadToDisplay", "get", "getDistanceFromNext", "setVisibility", "setVisibility", "setText", "format", "getContext", "getVisibility", "setVisibility"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}