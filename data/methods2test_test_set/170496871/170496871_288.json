{"test_class": {"identifier": "ObjectHistogramTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private double[] dataFirstPart = new double[] {0., 0., 0., 0., 1., 1., 1, 2., 2., 3., 4., 5.};", "modifier": "private", "type": "double[]", "declarator": "dataFirstPart = new double[] {0., 0., 0., 0., 1., 1., 1, 2., 2., 3., 4., 5.}", "var_name": "dataFirstPart"}, {"original_string": "private double[] dataSecondPart = new double[] {0., 1., 0., 1., 0., 1., 0, 1., 0., 1., 0., 5., 6.};", "modifier": "private", "type": "double[]", "declarator": "dataSecondPart = new double[] {0., 1., 0., 1., 0., 1., 0, 1., 0., 1., 0., 5., 6.}", "var_name": "dataSecondPart"}, {"original_string": "private ObjectHistogram<Double> hist1;", "modifier": "private", "type": "ObjectHistogram<Double>", "declarator": "hist1", "var_name": "hist1"}, {"original_string": "private ObjectHistogram<Double> hist2;", "modifier": "private", "type": "ObjectHistogram<Double>", "declarator": "hist2", "var_name": "hist2"}], "file": "modules/ml/src/test/java/org/apache/ignite/ml/dataset/feature/ObjectHistogramTest.java"}, "test_case": {"identifier": "testBuckets", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuckets() {\n        testBuckets(hist1, new int[] {0, 1, 2, 3, 4, 5}, new int[] {4, 3, 2, 1, 1, 1});\n        testBuckets(hist2, new int[] {0, 1, 5, 6}, new int[] {6, 5, 1, 1});\n    }", "signature": "void testBuckets()", "full_signature": "@Test public void testBuckets()", "class_method_signature": "ObjectHistogramTest.testBuckets()", "testcase": true, "constructor": false, "invocations": ["testBuckets", "testBuckets"]}, "focal_class": {"identifier": "ObjectHistogram", "superclass": "", "interfaces": "implements Histogram<T, ObjectHistogram<T>>, DistributionComputer", "fields": [{"original_string": "private static final long serialVersionUID = -2708731174031404487L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2708731174031404487L", "var_name": "serialVersionUID"}, {"original_string": "private final TreeMap<Integer, Double> hist = new TreeMap<>();", "modifier": "private final", "type": "TreeMap<Integer, Double>", "declarator": "hist = new TreeMap<>()", "var_name": "hist"}], "methods": [{"identifier": "addElement", "parameters": "(T val)", "modifiers": "@Override public", "return": "void", "signature": "void addElement(T val)", "full_signature": "@Override public void addElement(T val)", "class_method_signature": "ObjectHistogram.addElement(T val)", "testcase": false, "constructor": false}, {"identifier": "buckets", "parameters": "()", "modifiers": "@Override public", "return": "Set<Integer>", "signature": "Set<Integer> buckets()", "full_signature": "@Override public Set<Integer> buckets()", "class_method_signature": "ObjectHistogram.buckets()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(Integer bucketId)", "modifiers": "@Override public", "return": "Optional<Double>", "signature": "Optional<Double> getValue(Integer bucketId)", "full_signature": "@Override public Optional<Double> getValue(Integer bucketId)", "class_method_signature": "ObjectHistogram.getValue(Integer bucketId)", "testcase": false, "constructor": false}, {"identifier": "computeDistributionFunction", "parameters": "()", "modifiers": "@Override public", "return": "TreeMap<Integer, Double>", "signature": "TreeMap<Integer, Double> computeDistributionFunction()", "full_signature": "@Override public TreeMap<Integer, Double> computeDistributionFunction()", "class_method_signature": "ObjectHistogram.computeDistributionFunction()", "testcase": false, "constructor": false}, {"identifier": "plus", "parameters": "(ObjectHistogram<T> other)", "modifiers": "@Override public", "return": "ObjectHistogram<T>", "signature": "ObjectHistogram<T> plus(ObjectHistogram<T> other)", "full_signature": "@Override public ObjectHistogram<T> plus(ObjectHistogram<T> other)", "class_method_signature": "ObjectHistogram.plus(ObjectHistogram<T> other)", "testcase": false, "constructor": false}, {"identifier": "addTo", "parameters": "(Map<Integer, Double> from, Map<Integer, Double> to)", "modifiers": "private", "return": "void", "signature": "void addTo(Map<Integer, Double> from, Map<Integer, Double> to)", "full_signature": "private void addTo(Map<Integer, Double> from, Map<Integer, Double> to)", "class_method_signature": "ObjectHistogram.addTo(Map<Integer, Double> from, Map<Integer, Double> to)", "testcase": false, "constructor": false}, {"identifier": "isEqualTo", "parameters": "(ObjectHistogram<T> other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEqualTo(ObjectHistogram<T> other)", "full_signature": "@Override public boolean isEqualTo(ObjectHistogram<T> other)", "class_method_signature": "ObjectHistogram.isEqualTo(ObjectHistogram<T> other)", "testcase": false, "constructor": false}, {"identifier": "mapToBucket", "parameters": "(T obj)", "modifiers": "public abstract", "return": "Integer", "signature": "Integer mapToBucket(T obj)", "full_signature": "public abstract Integer mapToBucket(T obj)", "class_method_signature": "ObjectHistogram.mapToBucket(T obj)", "testcase": false, "constructor": false}, {"identifier": "mapToCounter", "parameters": "(T obj)", "modifiers": "public abstract", "return": "Double", "signature": "Double mapToCounter(T obj)", "full_signature": "public abstract Double mapToCounter(T obj)", "class_method_signature": "ObjectHistogram.mapToCounter(T obj)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "()", "modifiers": "public abstract", "return": "ObjectHistogram<T>", "signature": "ObjectHistogram<T> newInstance()", "full_signature": "public abstract ObjectHistogram<T> newInstance()", "class_method_signature": "ObjectHistogram.newInstance()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/dataset/feature/ObjectHistogram.java"}, "focal_method": {"identifier": "buckets", "parameters": "()", "modifiers": "@Override public", "return": "Set<Integer>", "body": "@Override public Set<Integer> buckets() {\n        return hist.keySet();\n    }", "signature": "Set<Integer> buckets()", "full_signature": "@Override public Set<Integer> buckets()", "class_method_signature": "ObjectHistogram.buckets()", "testcase": false, "constructor": false, "invocations": ["keySet"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}