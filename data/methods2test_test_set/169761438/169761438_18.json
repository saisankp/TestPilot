{"test_class": {"identifier": "Oadr20bVENEiEventControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EIEVENT_ENDPOINT = \"/OpenADR2/Simple/2.0b/EiEvent\";", "modifier": "private static final", "type": "String", "declarator": "EIEVENT_ENDPOINT = \"/OpenADR2/Simple/2.0b/EiEvent\"", "var_name": "EIEVENT_ENDPOINT"}, {"original_string": "private UserRequestPostProcessor VTN_SECURITY_SESSION = null;", "modifier": "private", "type": "UserRequestPostProcessor", "declarator": "VTN_SECURITY_SESSION = null", "var_name": "VTN_SECURITY_SESSION"}, {"original_string": "@Autowired\n\tprivate WebApplicationContext wac;", "modifier": "@Autowired\n\tprivate", "type": "WebApplicationContext", "declarator": "wac", "var_name": "wac"}, {"original_string": "@Resource\n\tprivate OadrMockMvc oadrMockMvc;", "modifier": "@Resource\n\tprivate", "type": "OadrMockMvc", "declarator": "oadrMockMvc", "var_name": "oadrMockMvc"}, {"original_string": "@Resource\n\tprivate VenConfig venConfig;", "modifier": "@Resource\n\tprivate", "type": "VenConfig", "declarator": "venConfig", "var_name": "venConfig"}, {"original_string": "@Resource\n\tprivate MultiVtnConfig multiVtnConfig;", "modifier": "@Resource\n\tprivate", "type": "MultiVtnConfig", "declarator": "multiVtnConfig", "var_name": "multiVtnConfig"}, {"original_string": "@Value(\"${oadr.vtn.myvtn.vtnid}\")\n\tprivate String vtnHttpId;", "modifier": "@Value(\"${oadr.vtn.myvtn.vtnid}\")\n\tprivate", "type": "String", "declarator": "vtnHttpId", "var_name": "vtnHttpId"}, {"original_string": "@Resource\n\tprivate Oadr20bVENEiEventService oadr20bVENEiEventService;", "modifier": "@Resource\n\tprivate", "type": "Oadr20bVENEiEventService", "declarator": "oadr20bVENEiEventService", "var_name": "oadr20bVENEiEventService"}, {"original_string": "private Oadr20bVENEiEventListener oadr20bVENEiEventListener = new Oadr20bVENEiEventListener();", "modifier": "private", "type": "Oadr20bVENEiEventListener", "declarator": "oadr20bVENEiEventListener = new Oadr20bVENEiEventListener()", "var_name": "oadr20bVENEiEventListener"}], "file": "OpenADRServerVEN20b/src/test/java/com/avob/openadr/server/oadr20b/ven/controller/Oadr20bVENEiEventControllerTest.java"}, "test_case": {"identifier": "requestTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void requestTest() throws Exception {\n\t\t// GET not allowed\n\t\tthis.oadrMockMvc.perform(MockMvcRequestBuilders.get(EIEVENT_ENDPOINT).with(VTN_SECURITY_SESSION))\n\t\t\t\t.andExpect(MockMvcResultMatchers.status().is(HttpStatus.METHOD_NOT_ALLOWED_405));\n\n\t\t// PUT not allowed\n\t\tthis.oadrMockMvc.perform(MockMvcRequestBuilders.put(EIEVENT_ENDPOINT).with(VTN_SECURITY_SESSION))\n\t\t\t\t.andExpect(MockMvcResultMatchers.status().is(HttpStatus.METHOD_NOT_ALLOWED_405));\n\n\t\t// DELETE not allowed\n\t\tthis.oadrMockMvc.perform(MockMvcRequestBuilders.delete(EIEVENT_ENDPOINT).with(VTN_SECURITY_SESSION))\n\t\t\t\t.andExpect(MockMvcResultMatchers.status().is(HttpStatus.METHOD_NOT_ALLOWED_405));\n\n\t\t// POST without content\n\t\tString content = \"\";\n\t\tthis.oadrMockMvc\n\t\t\t\t.perform(MockMvcRequestBuilders.post(EIEVENT_ENDPOINT).with(VTN_SECURITY_SESSION).content(content))\n\t\t\t\t.andExpect(MockMvcResultMatchers.status().is(HttpStatus.BAD_REQUEST_400));\n\n\t\t// POST without content\n\t\tcontent = \"mouaiccool\";\n\t\tthis.oadrMockMvc\n\t\t\t\t.perform(MockMvcRequestBuilders.post(EIEVENT_ENDPOINT).with(VTN_SECURITY_SESSION).content(content))\n\t\t\t\t.andExpect(MockMvcResultMatchers.status().is(HttpStatus.NOT_ACCEPTABLE_406));\n\t}", "signature": "void requestTest()", "full_signature": "@Test public void requestTest()", "class_method_signature": "Oadr20bVENEiEventControllerTest.requestTest()", "testcase": true, "constructor": false, "invocations": ["andExpect", "perform", "with", "get", "is", "status", "andExpect", "perform", "with", "put", "is", "status", "andExpect", "perform", "with", "delete", "is", "status", "andExpect", "perform", "content", "with", "post", "is", "status", "andExpect", "perform", "content", "with", "post", "is", "status"]}, "focal_class": {"identifier": "Oadr20bVENEiEventController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Oadr20bVENEiEventController.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Oadr20bVENEiEventController.class)", "var_name": "LOGGER"}, {"original_string": "@Resource\n\tprivate Oadr20bJAXBContext jaxbContext;", "modifier": "@Resource\n\tprivate", "type": "Oadr20bJAXBContext", "declarator": "jaxbContext", "var_name": "jaxbContext"}, {"original_string": "@Resource\n\tprivate Oadr20bVENEiEventService oadr20bVENEiEventService;", "modifier": "@Resource\n\tprivate", "type": "Oadr20bVENEiEventService", "declarator": "oadr20bVENEiEventService", "var_name": "oadr20bVENEiEventService"}], "methods": [{"identifier": "handleOadr20aDistributeEventApplicationLayerException", "parameters": "(\n\t\t\tOadr20bDistributeEventApplicationLayerException ex)", "modifiers": "@ExceptionHandler(Oadr20bDistributeEventApplicationLayerException.class) @ResponseBody public", "return": "String", "signature": "String handleOadr20aDistributeEventApplicationLayerException(\n\t\t\tOadr20bDistributeEventApplicationLayerException ex)", "full_signature": "@ExceptionHandler(Oadr20bDistributeEventApplicationLayerException.class) @ResponseBody public String handleOadr20aDistributeEventApplicationLayerException(\n\t\t\tOadr20bDistributeEventApplicationLayerException ex)", "class_method_signature": "Oadr20bVENEiEventController.handleOadr20aDistributeEventApplicationLayerException(\n\t\t\tOadr20bDistributeEventApplicationLayerException ex)", "testcase": false, "constructor": false}, {"identifier": "request", "parameters": "(@RequestBody String payload, Principal principal)", "modifiers": "@RequestMapping(value = Oadr20bUrlPath.EI_EVENT_SERVICE, method = RequestMethod.POST) @ResponseBody public", "return": "String", "signature": "String request(@RequestBody String payload, Principal principal)", "full_signature": "@RequestMapping(value = Oadr20bUrlPath.EI_EVENT_SERVICE, method = RequestMethod.POST) @ResponseBody public String request(@RequestBody String payload, Principal principal)", "class_method_signature": "Oadr20bVENEiEventController.request(@RequestBody String payload, Principal principal)", "testcase": false, "constructor": false}], "file": "OpenADRServerVEN20b/src/main/java/com/avob/openadr/server/oadr20b/ven/controller/Oadr20bVENEiEventController.java"}, "focal_method": {"identifier": "request", "parameters": "(@RequestBody String payload, Principal principal)", "modifiers": "@RequestMapping(value = Oadr20bUrlPath.EI_EVENT_SERVICE, method = RequestMethod.POST) @ResponseBody public", "return": "String", "body": "@RequestMapping(value = Oadr20bUrlPath.EI_EVENT_SERVICE, method = RequestMethod.POST)\n\t@ResponseBody\n\tpublic String request(@RequestBody String payload, Principal principal)\n\t\t\tthrows Oadr20bMarshalException, Oadr20bUnmarshalException, Oadr20bDistributeEventApplicationLayerException,\n\t\t\tOadr20bApplicationLayerException, Oadr20bXMLSignatureValidationException, Oadr20bXMLSignatureException,\n\t\t\tOadrSecurityException {\n\n\t\treturn oadr20bVENEiEventService.request(principal.getName(), payload);\n\t}", "signature": "String request(@RequestBody String payload, Principal principal)", "full_signature": "@RequestMapping(value = Oadr20bUrlPath.EI_EVENT_SERVICE, method = RequestMethod.POST) @ResponseBody public String request(@RequestBody String payload, Principal principal)", "class_method_signature": "Oadr20bVENEiEventController.request(@RequestBody String payload, Principal principal)", "testcase": false, "constructor": false, "invocations": ["request", "getName"]}, "repository": {"repo_id": 169761438, "url": "https://github.com/avob/OpenADR", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 55915, "license": "licensed"}}