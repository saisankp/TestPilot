{"test_class": {"identifier": "FilteredConstraintTest", "superclass": "", "interfaces": "", "fields": [], "file": "culvert-main/src/test/java/com/bah/culvert/constraints/filter/FilteredConstraintTest.java"}, "test_case": {"identifier": "testGetResultIterator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetResultIterator() {\n    TableAdapter table = new InMemoryTable();\n    List<CKeyValue> values = new ArrayList<CKeyValue>();\n    values.add(new CKeyValue(new byte[] { 1 }));\n    values.add(new CKeyValue(new byte[] { 2 }, new byte[] { 3 },\n        new byte[] { 4 }));\n    values.add(new CKeyValue(new byte[] { 3 }, new byte[] { 4 },\n        new byte[] { 5 }, 0, new byte[] { 6 }));\n\n    table.put(new Put(values));\n\n    FilteredConstraint filter = new FilteredConstraint(new ResultFilter(table),\n        new Filter());\n\n    Utils.testResultIterator(filter.getResultIterator(), 3, 3);\n\n    // test the other methods not covered by simple counting\n    SeekingCurrentIterator iter = filter.getResultIterator();\n    assertTrue(iter.current() == null);\n    iter.seek(new byte[] { 2 });\n    assertTrue(iter.current() != null);\n    assertTrue(iter.hasNext());\n    assertArrayEquals(new byte[] { 3 }, iter.next().getRecordId());\n\n    filter = new FilteredConstraint(new ResultFilter(table),\n        new AcceptNoneFilter());\n\n    Utils.testResultIterator(filter.getResultIterator(), 0, 0);\n  }", "signature": "void testGetResultIterator()", "full_signature": "@Test public void testGetResultIterator()", "class_method_signature": "FilteredConstraintTest.testGetResultIterator()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "put", "testResultIterator", "getResultIterator", "getResultIterator", "assertTrue", "current", "seek", "assertTrue", "current", "assertTrue", "hasNext", "assertArrayEquals", "getRecordId", "next", "testResultIterator", "getResultIterator"]}, "focal_class": {"identifier": "FilteredConstraint", "superclass": "extends Constraint", "interfaces": "", "fields": [{"original_string": "private Constraint subconstraint;", "modifier": "private", "type": "Constraint", "declarator": "subconstraint", "var_name": "subconstraint"}, {"original_string": "private Filter filter;", "modifier": "private", "type": "Filter", "declarator": "filter", "var_name": "filter"}], "methods": [{"identifier": "FilteredConstraint", "parameters": "()", "modifiers": "public", "return": "", "signature": " FilteredConstraint()", "full_signature": "public  FilteredConstraint()", "class_method_signature": "FilteredConstraint.FilteredConstraint()", "testcase": false, "constructor": true}, {"identifier": "FilteredConstraint", "parameters": "(Constraint subconstraint, Filter filter)", "modifiers": "public", "return": "", "signature": " FilteredConstraint(Constraint subconstraint, Filter filter)", "full_signature": "public  FilteredConstraint(Constraint subconstraint, Filter filter)", "class_method_signature": "FilteredConstraint.FilteredConstraint(Constraint subconstraint, Filter filter)", "testcase": false, "constructor": true}, {"identifier": "readFields", "parameters": "(DataInput in)", "modifiers": "@Override public", "return": "void", "signature": "void readFields(DataInput in)", "full_signature": "@Override public void readFields(DataInput in)", "class_method_signature": "FilteredConstraint.readFields(DataInput in)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(DataOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void write(DataOutput out)", "full_signature": "@Override public void write(DataOutput out)", "class_method_signature": "FilteredConstraint.write(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "getResultIterator", "parameters": "()", "modifiers": "@Override public", "return": "SeekingCurrentIterator", "signature": "SeekingCurrentIterator getResultIterator()", "full_signature": "@Override public SeekingCurrentIterator getResultIterator()", "class_method_signature": "FilteredConstraint.getResultIterator()", "testcase": false, "constructor": false}], "file": "culvert-main/src/main/java/com/bah/culvert/constraints/filter/FilteredConstraint.java"}, "focal_method": {"identifier": "getResultIterator", "parameters": "()", "modifiers": "@Override public", "return": "SeekingCurrentIterator", "body": "@Override\n  public SeekingCurrentIterator getResultIterator() {\n    return new FilteringIterator(this.subconstraint.getResultIterator(),\n        this.filter);\n  }", "signature": "SeekingCurrentIterator getResultIterator()", "full_signature": "@Override public SeekingCurrentIterator getResultIterator()", "class_method_signature": "FilteredConstraint.getResultIterator()", "testcase": false, "constructor": false, "invocations": ["getResultIterator"]}, "repository": {"repo_id": 1973010, "url": "https://github.com/booz-allen-hamilton/culvert", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 373, "license": "licensed"}}