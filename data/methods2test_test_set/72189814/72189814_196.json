{"test_class": {"identifier": "HaloUtilsTest", "superclass": "extends HaloRobolectricTest", "interfaces": "", "fields": [{"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "private ConnectivityManager mConnectivityManager;", "modifier": "private", "type": "ConnectivityManager", "declarator": "mConnectivityManager", "var_name": "mConnectivityManager"}, {"original_string": "private CallbackFlag mCallbackFlag;", "modifier": "private", "type": "CallbackFlag", "declarator": "mCallbackFlag", "var_name": "mCallbackFlag"}], "file": "sdk/halo-framework/src/test/java/com/mobgen/halo/android/framework/common/utils/HaloUtilsTest.java"}, "test_case": {"identifier": "thatCanGetDrawable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void thatCanGetDrawable(){\n        Resources resources = mock(Resources.class);\n        Drawable drawable = mock(Drawable.class);\n        when(mContext.getResources()).thenReturn(resources);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            when(resources.getDrawable(android.R.drawable.alert_dark_frame,null)).thenReturn(drawable);\n        }\n        else{\n            when(resources.getDrawable(android.R.drawable.alert_dark_frame)).thenReturn(drawable);\n        }\n        assertThat(HaloUtils.getDrawable(mContext, android.R.drawable.alert_dark_frame)).isNotNull();\n        assertThat(HaloUtils.getDrawable(mContext, android.R.drawable.alert_dark_frame)).isEqualTo(drawable);\n    }", "signature": "void thatCanGetDrawable()", "full_signature": "@Test public void thatCanGetDrawable()", "class_method_signature": "HaloUtilsTest.thatCanGetDrawable()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getResources", "thenReturn", "when", "getDrawable", "thenReturn", "when", "getDrawable", "isNotNull", "assertThat", "getDrawable", "isEqualTo", "assertThat", "getDrawable"]}, "focal_class": {"identifier": "HaloUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char[] HEX_ARRAY = \"0123456789ABCDEF\".toCharArray();", "modifier": "private static final", "type": "char[]", "declarator": "HEX_ARRAY = \"0123456789ABCDEF\".toCharArray()", "var_name": "HEX_ARRAY"}], "methods": [{"identifier": "HaloUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " HaloUtils()", "full_signature": "private  HaloUtils()", "class_method_signature": "HaloUtils.HaloUtils()", "testcase": false, "constructor": true}, {"identifier": "isNetworkConnected", "parameters": "(Context context)", "modifiers": "@Api(1.0) public static", "return": "boolean", "signature": "boolean isNetworkConnected(Context context)", "full_signature": "@Api(1.0) public static boolean isNetworkConnected(Context context)", "class_method_signature": "HaloUtils.isNetworkConnected(Context context)", "testcase": false, "constructor": false}, {"identifier": "isCharging", "parameters": "(@NonNull Context context, @Nullable Intent intent)", "modifiers": "@Api(2.0) public static", "return": "boolean", "signature": "boolean isCharging(@NonNull Context context, @Nullable Intent intent)", "full_signature": "@Api(2.0) public static boolean isCharging(@NonNull Context context, @Nullable Intent intent)", "class_method_signature": "HaloUtils.isCharging(@NonNull Context context, @Nullable Intent intent)", "testcase": false, "constructor": false}, {"identifier": "hideKeyboard", "parameters": "(@Nullable View focusView)", "modifiers": "@Api(1.0) public static", "return": "void", "signature": "void hideKeyboard(@Nullable View focusView)", "full_signature": "@Api(1.0) public static void hideKeyboard(@Nullable View focusView)", "class_method_signature": "HaloUtils.hideKeyboard(@Nullable View focusView)", "testcase": false, "constructor": false}, {"identifier": "postUI", "parameters": "(Runnable runnable)", "modifiers": "@Api(1.0) public static", "return": "void", "signature": "void postUI(Runnable runnable)", "full_signature": "@Api(1.0) public static void postUI(Runnable runnable)", "class_method_signature": "HaloUtils.postUI(Runnable runnable)", "testcase": false, "constructor": false}, {"identifier": "isAvailableForVersion", "parameters": "(int sdkVersion)", "modifiers": "@Api(1.0) public static", "return": "boolean", "signature": "boolean isAvailableForVersion(int sdkVersion)", "full_signature": "@Api(1.0) public static boolean isAvailableForVersion(int sdkVersion)", "class_method_signature": "HaloUtils.isAvailableForVersion(int sdkVersion)", "testcase": false, "constructor": false}, {"identifier": "getDrawable", "parameters": "(Context context, @DrawableRes int resource)", "modifiers": "@Api(1.0) @SuppressWarnings(\"deprecation\") public static", "return": "Drawable", "signature": "Drawable getDrawable(Context context, @DrawableRes int resource)", "full_signature": "@Api(1.0) @SuppressWarnings(\"deprecation\") public static Drawable getDrawable(Context context, @DrawableRes int resource)", "class_method_signature": "HaloUtils.getDrawable(Context context, @DrawableRes int resource)", "testcase": false, "constructor": false}, {"identifier": "getUriFromResource", "parameters": "(Context context, int resourceId)", "modifiers": "@Api(1.0) public static", "return": "Uri", "signature": "Uri getUriFromResource(Context context, int resourceId)", "full_signature": "@Api(1.0) public static Uri getUriFromResource(Context context, int resourceId)", "class_method_signature": "HaloUtils.getUriFromResource(Context context, int resourceId)", "testcase": false, "constructor": false}, {"identifier": "hasFlag", "parameters": "(int flags, int optionFlag)", "modifiers": "@Api(1.0) public static", "return": "boolean", "signature": "boolean hasFlag(int flags, int optionFlag)", "full_signature": "@Api(1.0) public static boolean hasFlag(int flags, int optionFlag)", "class_method_signature": "HaloUtils.hasFlag(int flags, int optionFlag)", "testcase": false, "constructor": false}, {"identifier": "getArgb", "parameters": "(String hexadecimal)", "modifiers": "@Api(1.0) public static", "return": "int", "signature": "int getArgb(String hexadecimal)", "full_signature": "@Api(1.0) public static int getArgb(String hexadecimal)", "class_method_signature": "HaloUtils.getArgb(String hexadecimal)", "testcase": false, "constructor": false}, {"identifier": "isColor", "parameters": "(String color)", "modifiers": "@Api(1.0) public static", "return": "boolean", "signature": "boolean isColor(String color)", "full_signature": "@Api(1.0) public static boolean isColor(String color)", "class_method_signature": "HaloUtils.isColor(String color)", "testcase": false, "constructor": false}, {"identifier": "sha1", "parameters": "(@NonNull String origin)", "modifiers": "@Api(2.0) public static", "return": "String", "signature": "String sha1(@NonNull String origin)", "full_signature": "@Api(2.0) public static String sha1(@NonNull String origin)", "class_method_signature": "HaloUtils.sha1(@NonNull String origin)", "testcase": false, "constructor": false}, {"identifier": "convertToHex", "parameters": "(byte[] data)", "modifiers": "@Api(2.0) public static", "return": "String", "signature": "String convertToHex(byte[] data)", "full_signature": "@Api(2.0) public static String convertToHex(byte[] data)", "class_method_signature": "HaloUtils.convertToHex(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "getEventName", "parameters": "(@NonNull Context context, @NonNull String eventName)", "modifiers": "@NonNull @Api(1.3) public static", "return": "String", "signature": "String getEventName(@NonNull Context context, @NonNull String eventName)", "full_signature": "@NonNull @Api(1.3) public static String getEventName(@NonNull Context context, @NonNull String eventName)", "class_method_signature": "HaloUtils.getEventName(@NonNull Context context, @NonNull String eventName)", "testcase": false, "constructor": false}, {"identifier": "bytesToHex", "parameters": "(@NonNull byte[] bytes)", "modifiers": "@Api(2.0) public static", "return": "String", "signature": "String bytesToHex(@NonNull byte[] bytes)", "full_signature": "@Api(2.0) public static String bytesToHex(@NonNull byte[] bytes)", "class_method_signature": "HaloUtils.bytesToHex(@NonNull byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "hexToBytes", "parameters": "(@NonNull String data)", "modifiers": "@Api(2.0) public static", "return": "byte[]", "signature": "byte[] hexToBytes(@NonNull String data)", "full_signature": "@Api(2.0) public static byte[] hexToBytes(@NonNull String data)", "class_method_signature": "HaloUtils.hexToBytes(@NonNull String data)", "testcase": false, "constructor": false}, {"identifier": "isServiceRunning", "parameters": "(Context context, Class<?> serviceClass)", "modifiers": "@Api(2.5) public static", "return": "boolean", "signature": "boolean isServiceRunning(Context context, Class<?> serviceClass)", "full_signature": "@Api(2.5) public static boolean isServiceRunning(Context context, Class<?> serviceClass)", "class_method_signature": "HaloUtils.isServiceRunning(Context context, Class<?> serviceClass)", "testcase": false, "constructor": false}], "file": "sdk/halo-framework/src/main/java/com/mobgen/halo/android/framework/common/utils/HaloUtils.java"}, "focal_method": {"identifier": "getDrawable", "parameters": "(Context context, @DrawableRes int resource)", "modifiers": "@Api(1.0) @SuppressWarnings(\"deprecation\") public static", "return": "Drawable", "body": "@Api(1.0)\n    @SuppressWarnings(\"deprecation\")\n    public static Drawable getDrawable(Context context, @DrawableRes int resource) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            return context.getResources().getDrawable(resource, null);\n        }\n\n        return context.getResources().getDrawable(resource);\n    }", "signature": "Drawable getDrawable(Context context, @DrawableRes int resource)", "full_signature": "@Api(1.0) @SuppressWarnings(\"deprecation\") public static Drawable getDrawable(Context context, @DrawableRes int resource)", "class_method_signature": "HaloUtils.getDrawable(Context context, @DrawableRes int resource)", "testcase": false, "constructor": false, "invocations": ["getDrawable", "getResources", "getDrawable", "getResources"]}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}