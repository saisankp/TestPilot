{"test_class": {"identifier": "HeartbeatTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private long timeout = 300L;", "modifier": "private", "type": "long", "declarator": "timeout = 300L", "var_name": "timeout"}, {"original_string": "private long interval = 100L;", "modifier": "private", "type": "long", "declarator": "interval = 100L", "var_name": "interval"}, {"original_string": "private MockTime time = new MockTime();", "modifier": "private", "type": "MockTime", "declarator": "time = new MockTime()", "var_name": "time"}, {"original_string": "private Heartbeat heartbeat = new Heartbeat(timeout, interval, -1L);", "modifier": "private", "type": "Heartbeat", "declarator": "heartbeat = new Heartbeat(timeout, interval, -1L)", "var_name": "heartbeat"}], "file": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatTest.java"}, "test_case": {"identifier": "testTimeToNextHeartbeat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTimeToNextHeartbeat() {\n        heartbeat.sentHeartbeat(0);\n        assertEquals(100, heartbeat.timeToNextHeartbeat(0));\n        assertEquals(0, heartbeat.timeToNextHeartbeat(100));\n        assertEquals(0, heartbeat.timeToNextHeartbeat(200));\n    }", "signature": "void testTimeToNextHeartbeat()", "full_signature": "@Test public void testTimeToNextHeartbeat()", "class_method_signature": "HeartbeatTest.testTimeToNextHeartbeat()", "testcase": true, "constructor": false, "invocations": ["sentHeartbeat", "assertEquals", "timeToNextHeartbeat", "assertEquals", "timeToNextHeartbeat", "assertEquals", "timeToNextHeartbeat"]}, "focal_class": {"identifier": "Heartbeat", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final long timeout;", "modifier": "private final", "type": "long", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "private final long interval;", "modifier": "private final", "type": "long", "declarator": "interval", "var_name": "interval"}, {"original_string": "private long lastHeartbeatSend;", "modifier": "private", "type": "long", "declarator": "lastHeartbeatSend", "var_name": "lastHeartbeatSend"}, {"original_string": "private long lastHeartbeatReceive;", "modifier": "private", "type": "long", "declarator": "lastHeartbeatReceive", "var_name": "lastHeartbeatReceive"}, {"original_string": "private long lastSessionReset;", "modifier": "private", "type": "long", "declarator": "lastSessionReset", "var_name": "lastSessionReset"}], "methods": [{"identifier": "Heartbeat", "parameters": "(long timeout,\n                     long interval,\n                     long now)", "modifiers": "public", "return": "", "signature": " Heartbeat(long timeout,\n                     long interval,\n                     long now)", "full_signature": "public  Heartbeat(long timeout,\n                     long interval,\n                     long now)", "class_method_signature": "Heartbeat.Heartbeat(long timeout,\n                     long interval,\n                     long now)", "testcase": false, "constructor": true}, {"identifier": "sentHeartbeat", "parameters": "(long now)", "modifiers": "public", "return": "void", "signature": "void sentHeartbeat(long now)", "full_signature": "public void sentHeartbeat(long now)", "class_method_signature": "Heartbeat.sentHeartbeat(long now)", "testcase": false, "constructor": false}, {"identifier": "receiveHeartbeat", "parameters": "(long now)", "modifiers": "public", "return": "void", "signature": "void receiveHeartbeat(long now)", "full_signature": "public void receiveHeartbeat(long now)", "class_method_signature": "Heartbeat.receiveHeartbeat(long now)", "testcase": false, "constructor": false}, {"identifier": "shouldHeartbeat", "parameters": "(long now)", "modifiers": "public", "return": "boolean", "signature": "boolean shouldHeartbeat(long now)", "full_signature": "public boolean shouldHeartbeat(long now)", "class_method_signature": "Heartbeat.shouldHeartbeat(long now)", "testcase": false, "constructor": false}, {"identifier": "lastHeartbeatSend", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long lastHeartbeatSend()", "full_signature": "public long lastHeartbeatSend()", "class_method_signature": "Heartbeat.lastHeartbeatSend()", "testcase": false, "constructor": false}, {"identifier": "timeToNextHeartbeat", "parameters": "(long now)", "modifiers": "public", "return": "long", "signature": "long timeToNextHeartbeat(long now)", "full_signature": "public long timeToNextHeartbeat(long now)", "class_method_signature": "Heartbeat.timeToNextHeartbeat(long now)", "testcase": false, "constructor": false}, {"identifier": "sessionTimeoutExpired", "parameters": "(long now)", "modifiers": "public", "return": "boolean", "signature": "boolean sessionTimeoutExpired(long now)", "full_signature": "public boolean sessionTimeoutExpired(long now)", "class_method_signature": "Heartbeat.sessionTimeoutExpired(long now)", "testcase": false, "constructor": false}, {"identifier": "interval", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long interval()", "full_signature": "public long interval()", "class_method_signature": "Heartbeat.interval()", "testcase": false, "constructor": false}, {"identifier": "resetSessionTimeout", "parameters": "(long now)", "modifiers": "public", "return": "void", "signature": "void resetSessionTimeout(long now)", "full_signature": "public void resetSessionTimeout(long now)", "class_method_signature": "Heartbeat.resetSessionTimeout(long now)", "testcase": false, "constructor": false}], "file": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Heartbeat.java"}, "focal_method": {"identifier": "timeToNextHeartbeat", "parameters": "(long now)", "modifiers": "public", "return": "long", "body": "public long timeToNextHeartbeat(long now) {\n        // \u73b0\u5728\u8ddd\u79bb\u6700\u540e\u4e00\u6b21\u5fc3\u8df3\n        long timeSinceLastHeartbeat = now - Math.max(lastHeartbeatSend, lastSessionReset);\n\n        if (timeSinceLastHeartbeat > interval)\n            return 0;\n        else\n            return interval - timeSinceLastHeartbeat;\n    }", "signature": "long timeToNextHeartbeat(long now)", "full_signature": "public long timeToNextHeartbeat(long now)", "class_method_signature": "Heartbeat.timeToNextHeartbeat(long now)", "testcase": false, "constructor": false, "invocations": ["max"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}