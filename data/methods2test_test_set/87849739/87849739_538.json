{"test_class": {"identifier": "ThingsSseRouteBuilderTest", "superclass": "extends EndpointTestBase", "interfaces": "", "fields": [{"original_string": "private static final String THINGS_ROUTE = \"/things\";", "modifier": "private static final", "type": "String", "declarator": "THINGS_ROUTE = \"/things\"", "var_name": "THINGS_ROUTE"}, {"original_string": "private static final String SEARCH_ROUTE = \"/search/things\";", "modifier": "private static final", "type": "String", "declarator": "SEARCH_ROUTE = \"/search/things\"", "var_name": "SEARCH_ROUTE"}, {"original_string": "private static ActorSystem actorSystem;", "modifier": "private static", "type": "ActorSystem", "declarator": "actorSystem", "var_name": "actorSystem"}, {"original_string": "private static HttpHeader acceptHeader;", "modifier": "private static", "type": "HttpHeader", "declarator": "acceptHeader", "var_name": "acceptHeader"}, {"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private String connectionCorrelationId;", "modifier": "private", "type": "String", "declarator": "connectionCorrelationId", "var_name": "connectionCorrelationId"}, {"original_string": "private TestProbe streamingActor;", "modifier": "private", "type": "TestProbe", "declarator": "streamingActor", "var_name": "streamingActor"}, {"original_string": "private TestRoute underTest;", "modifier": "private", "type": "TestRoute", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private TestProbe proxyActor;", "modifier": "private", "type": "TestProbe", "declarator": "proxyActor", "var_name": "proxyActor"}], "file": "services/gateway/endpoints/src/test/java/org/eclipse/ditto/services/gateway/endpoints/routes/sse/ThingsSseRouteBuilderTest.java"}, "test_case": {"identifier": "getWithAcceptHeaderAndNoQueryParametersOpensSseConnection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getWithAcceptHeaderAndNoQueryParametersOpensSseConnection() {\n        executeThingsRouteTest(HttpRequest.GET(THINGS_ROUTE).addHeader(acceptHeader),\n                StartStreaming.getBuilder(StreamingType.EVENTS, connectionCorrelationId,\n                        AuthorizationModelFactory.newAuthContext(DittoAuthorizationContextType.UNSPECIFIED,\n                                Collections.emptySet())).build());\n    }", "signature": "void getWithAcceptHeaderAndNoQueryParametersOpensSseConnection()", "full_signature": "@Test public void getWithAcceptHeaderAndNoQueryParametersOpensSseConnection()", "class_method_signature": "ThingsSseRouteBuilderTest.getWithAcceptHeaderAndNoQueryParametersOpensSseConnection()", "testcase": true, "constructor": false, "invocations": ["executeThingsRouteTest", "addHeader", "GET", "build", "getBuilder", "newAuthContext", "emptySet"]}, "focal_class": {"identifier": "ThingsSseRouteBuilder", "superclass": "extends RouteDirectives", "interfaces": "implements SseRouteBuilder", "fields": [{"original_string": "private static final String PATH_SEARCH = \"search\";", "modifier": "private static final", "type": "String", "declarator": "PATH_SEARCH = \"search\"", "var_name": "PATH_SEARCH"}, {"original_string": "private static final String PATH_THINGS = \"things\";", "modifier": "private static final", "type": "String", "declarator": "PATH_THINGS = \"things\"", "var_name": "PATH_THINGS"}, {"original_string": "private static final String STREAMING_TYPE_SSE = \"SSE\";", "modifier": "private static final", "type": "String", "declarator": "STREAMING_TYPE_SSE = \"SSE\"", "var_name": "STREAMING_TYPE_SSE"}, {"original_string": "private static final String LAST_EVENT_ID_HEADER = \"Last-Event-ID\";", "modifier": "private static final", "type": "String", "declarator": "LAST_EVENT_ID_HEADER = \"Last-Event-ID\"", "var_name": "LAST_EVENT_ID_HEADER"}, {"original_string": "private static final String PARAM_FILTER = \"filter\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_FILTER = \"filter\"", "var_name": "PARAM_FILTER"}, {"original_string": "private static final String PARAM_FIELDS = \"fields\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_FIELDS = \"fields\"", "var_name": "PARAM_FIELDS"}, {"original_string": "private static final String PARAM_OPTION = \"option\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_OPTION = \"option\"", "var_name": "PARAM_OPTION"}, {"original_string": "private static final String PARAM_NAMESPACES = \"namespaces\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_NAMESPACES = \"namespaces\"", "var_name": "PARAM_NAMESPACES"}, {"original_string": "private static final String PARAM_EXTRA_FIELDS = \"extraFields\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_EXTRA_FIELDS = \"extraFields\"", "var_name": "PARAM_EXTRA_FIELDS"}, {"original_string": "private static final PartialFunction<HttpHeader, Accept> ACCEPT_HEADER_EXTRACTOR = newAcceptHeaderExtractor();", "modifier": "private static final", "type": "PartialFunction<HttpHeader, Accept>", "declarator": "ACCEPT_HEADER_EXTRACTOR = newAcceptHeaderExtractor()", "var_name": "ACCEPT_HEADER_EXTRACTOR"}, {"original_string": "private static final Counter THINGS_SSE_COUNTER = getCounterFor(PATH_THINGS);", "modifier": "private static final", "type": "Counter", "declarator": "THINGS_SSE_COUNTER = getCounterFor(PATH_THINGS)", "var_name": "THINGS_SSE_COUNTER"}, {"original_string": "private static final Counter SEARCH_SSE_COUNTER = getCounterFor(PATH_SEARCH);", "modifier": "private static final", "type": "Counter", "declarator": "SEARCH_SSE_COUNTER = getCounterFor(PATH_SEARCH)", "var_name": "SEARCH_SSE_COUNTER"}, {"original_string": "private static final Duration LOCAL_ASK_TIMEOUT = Duration.ofSeconds(5L);", "modifier": "private static final", "type": "Duration", "declarator": "LOCAL_ASK_TIMEOUT = Duration.ofSeconds(5L)", "var_name": "LOCAL_ASK_TIMEOUT"}, {"original_string": "private final ActorRef streamingActor;", "modifier": "private final", "type": "ActorRef", "declarator": "streamingActor", "var_name": "streamingActor"}, {"original_string": "private final StreamingConfig streamingConfig;", "modifier": "private final", "type": "StreamingConfig", "declarator": "streamingConfig", "var_name": "streamingConfig"}, {"original_string": "private final QueryFilterCriteriaFactory queryFilterCriteriaFactory;", "modifier": "private final", "type": "QueryFilterCriteriaFactory", "declarator": "queryFilterCriteriaFactory", "var_name": "queryFilterCriteriaFactory"}, {"original_string": "private final ActorRef pubSubMediator;", "modifier": "private final", "type": "ActorRef", "declarator": "pubSubMediator", "var_name": "pubSubMediator"}, {"original_string": "private SseAuthorizationEnforcer sseAuthorizationEnforcer;", "modifier": "private", "type": "SseAuthorizationEnforcer", "declarator": "sseAuthorizationEnforcer", "var_name": "sseAuthorizationEnforcer"}, {"original_string": "private SseConnectionSupervisor sseConnectionSupervisor;", "modifier": "private", "type": "SseConnectionSupervisor", "declarator": "sseConnectionSupervisor", "var_name": "sseConnectionSupervisor"}, {"original_string": "private EventSniffer<ServerSentEvent> eventSniffer;", "modifier": "private", "type": "EventSniffer<ServerSentEvent>", "declarator": "eventSniffer", "var_name": "eventSniffer"}, {"original_string": "@Nullable GatewaySignalEnrichmentProvider signalEnrichmentProvider;", "modifier": "@Nullable", "type": "GatewaySignalEnrichmentProvider", "declarator": "signalEnrichmentProvider", "var_name": "signalEnrichmentProvider"}, {"original_string": "@Nullable ActorRef proxyActor;", "modifier": "@Nullable", "type": "ActorRef", "declarator": "proxyActor", "var_name": "proxyActor"}], "methods": [{"identifier": "ThingsSseRouteBuilder", "parameters": "(final ActorRef streamingActor,\n            final StreamingConfig streamingConfig,\n            final QueryFilterCriteriaFactory queryFilterCriteriaFactory,\n            final ActorRef pubSubMediator)", "modifiers": "private", "return": "", "signature": " ThingsSseRouteBuilder(final ActorRef streamingActor,\n            final StreamingConfig streamingConfig,\n            final QueryFilterCriteriaFactory queryFilterCriteriaFactory,\n            final ActorRef pubSubMediator)", "full_signature": "private  ThingsSseRouteBuilder(final ActorRef streamingActor,\n            final StreamingConfig streamingConfig,\n            final QueryFilterCriteriaFactory queryFilterCriteriaFactory,\n            final ActorRef pubSubMediator)", "class_method_signature": "ThingsSseRouteBuilder.ThingsSseRouteBuilder(final ActorRef streamingActor,\n            final StreamingConfig streamingConfig,\n            final QueryFilterCriteriaFactory queryFilterCriteriaFactory,\n            final ActorRef pubSubMediator)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(final ActorRef streamingActor,\n            final StreamingConfig streamingConfig,\n            final ActorRef pubSubMediator)", "modifiers": "public static", "return": "ThingsSseRouteBuilder", "signature": "ThingsSseRouteBuilder getInstance(final ActorRef streamingActor,\n            final StreamingConfig streamingConfig,\n            final ActorRef pubSubMediator)", "full_signature": "public static ThingsSseRouteBuilder getInstance(final ActorRef streamingActor,\n            final StreamingConfig streamingConfig,\n            final ActorRef pubSubMediator)", "class_method_signature": "ThingsSseRouteBuilder.getInstance(final ActorRef streamingActor,\n            final StreamingConfig streamingConfig,\n            final ActorRef pubSubMediator)", "testcase": false, "constructor": false}, {"identifier": "withAuthorizationEnforcer", "parameters": "(final SseAuthorizationEnforcer enforcer)", "modifiers": "@Override public", "return": "SseRouteBuilder", "signature": "SseRouteBuilder withAuthorizationEnforcer(final SseAuthorizationEnforcer enforcer)", "full_signature": "@Override public SseRouteBuilder withAuthorizationEnforcer(final SseAuthorizationEnforcer enforcer)", "class_method_signature": "ThingsSseRouteBuilder.withAuthorizationEnforcer(final SseAuthorizationEnforcer enforcer)", "testcase": false, "constructor": false}, {"identifier": "withEventSniffer", "parameters": "(final EventSniffer<ServerSentEvent> eventSniffer)", "modifiers": "@Override public", "return": "ThingsSseRouteBuilder", "signature": "ThingsSseRouteBuilder withEventSniffer(final EventSniffer<ServerSentEvent> eventSniffer)", "full_signature": "@Override public ThingsSseRouteBuilder withEventSniffer(final EventSniffer<ServerSentEvent> eventSniffer)", "class_method_signature": "ThingsSseRouteBuilder.withEventSniffer(final EventSniffer<ServerSentEvent> eventSniffer)", "testcase": false, "constructor": false}, {"identifier": "withSseConnectionSupervisor", "parameters": "(final SseConnectionSupervisor sseConnectionSupervisor)", "modifiers": "@Override public", "return": "SseRouteBuilder", "signature": "SseRouteBuilder withSseConnectionSupervisor(final SseConnectionSupervisor sseConnectionSupervisor)", "full_signature": "@Override public SseRouteBuilder withSseConnectionSupervisor(final SseConnectionSupervisor sseConnectionSupervisor)", "class_method_signature": "ThingsSseRouteBuilder.withSseConnectionSupervisor(final SseConnectionSupervisor sseConnectionSupervisor)", "testcase": false, "constructor": false}, {"identifier": "withSignalEnrichmentProvider", "parameters": "(@Nullable final GatewaySignalEnrichmentProvider provider)", "modifiers": "@Override public", "return": "SseRouteBuilder", "signature": "SseRouteBuilder withSignalEnrichmentProvider(@Nullable final GatewaySignalEnrichmentProvider provider)", "full_signature": "@Override public SseRouteBuilder withSignalEnrichmentProvider(@Nullable final GatewaySignalEnrichmentProvider provider)", "class_method_signature": "ThingsSseRouteBuilder.withSignalEnrichmentProvider(@Nullable final GatewaySignalEnrichmentProvider provider)", "testcase": false, "constructor": false}, {"identifier": "withProxyActor", "parameters": "(@Nullable final ActorRef proxyActor)", "modifiers": "@Override public", "return": "SseRouteBuilder", "signature": "SseRouteBuilder withProxyActor(@Nullable final ActorRef proxyActor)", "full_signature": "@Override public SseRouteBuilder withProxyActor(@Nullable final ActorRef proxyActor)", "class_method_signature": "ThingsSseRouteBuilder.withProxyActor(@Nullable final ActorRef proxyActor)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "modifiers": "@SuppressWarnings(\"squid:S1172\") // allow unused ctx-Param in order to have a consistent route-\"interface\" @Override public", "return": "Route", "signature": "Route build(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "full_signature": "@SuppressWarnings(\"squid:S1172\") // allow unused ctx-Param in order to have a consistent route-\"interface\" @Override public Route build(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "class_method_signature": "ThingsSseRouteBuilder.build(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "testcase": false, "constructor": false}, {"identifier": "buildSearchSseRoute", "parameters": "(final RequestContext ctx,\n            final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "modifiers": "private", "return": "Route", "signature": "Route buildSearchSseRoute(final RequestContext ctx,\n            final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "full_signature": "private Route buildSearchSseRoute(final RequestContext ctx,\n            final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "class_method_signature": "ThingsSseRouteBuilder.buildSearchSseRoute(final RequestContext ctx,\n            final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "testcase": false, "constructor": false}, {"identifier": "getDittoHeadersWithCorrelationId", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "private static", "return": "DittoHeaders", "signature": "DittoHeaders getDittoHeadersWithCorrelationId(final DittoHeaders dittoHeaders)", "full_signature": "private static DittoHeaders getDittoHeadersWithCorrelationId(final DittoHeaders dittoHeaders)", "class_method_signature": "ThingsSseRouteBuilder.getDittoHeadersWithCorrelationId(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "buildThingsSseRoute", "parameters": "(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeaders)", "modifiers": "private", "return": "Route", "signature": "Route buildThingsSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeaders)", "full_signature": "private Route buildThingsSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeaders)", "class_method_signature": "ThingsSseRouteBuilder.buildThingsSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "createSseRoute", "parameters": "(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeadersStage,\n            final Map<String, String> parameters)", "modifiers": "private", "return": "Route", "signature": "Route createSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeadersStage,\n            final Map<String, String> parameters)", "full_signature": "private Route createSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeadersStage,\n            final Map<String, String> parameters)", "class_method_signature": "ThingsSseRouteBuilder.createSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeadersStage,\n            final Map<String, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "createSearchSseRoute", "parameters": "(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeadersStage,\n            final Map<String, String> parameters)", "modifiers": "private", "return": "Route", "signature": "Route createSearchSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeadersStage,\n            final Map<String, String> parameters)", "full_signature": "private Route createSearchSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeadersStage,\n            final Map<String, String> parameters)", "class_method_signature": "ThingsSseRouteBuilder.createSearchSseRoute(final RequestContext ctx, final CompletionStage<DittoHeaders> dittoHeadersStage,\n            final Map<String, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "postprocess", "parameters": "(final SessionedJsonifiable jsonifiable,\n            @Nullable final SignalEnrichmentFacade facade,\n            final Collection<ThingId> targetThingIds,\n            final Collection<String> namespaces,\n            @Nullable final JsonFieldSelector fields)", "modifiers": "private", "return": "CompletionStage<Collection<JsonObject>>", "signature": "CompletionStage<Collection<JsonObject>> postprocess(final SessionedJsonifiable jsonifiable,\n            @Nullable final SignalEnrichmentFacade facade,\n            final Collection<ThingId> targetThingIds,\n            final Collection<String> namespaces,\n            @Nullable final JsonFieldSelector fields)", "full_signature": "private CompletionStage<Collection<JsonObject>> postprocess(final SessionedJsonifiable jsonifiable,\n            @Nullable final SignalEnrichmentFacade facade,\n            final Collection<ThingId> targetThingIds,\n            final Collection<String> namespaces,\n            @Nullable final JsonFieldSelector fields)", "class_method_signature": "ThingsSseRouteBuilder.postprocess(final SessionedJsonifiable jsonifiable,\n            @Nullable final SignalEnrichmentFacade facade,\n            final Collection<ThingId> targetThingIds,\n            final Collection<String> namespaces,\n            @Nullable final JsonFieldSelector fields)", "testcase": false, "constructor": false}, {"identifier": "namespaceMatches", "parameters": "(final ThingEvent<?> event, final Collection<String> namespaces)", "modifiers": "private static", "return": "boolean", "signature": "boolean namespaceMatches(final ThingEvent<?> event, final Collection<String> namespaces)", "full_signature": "private static boolean namespaceMatches(final ThingEvent<?> event, final Collection<String> namespaces)", "class_method_signature": "ThingsSseRouteBuilder.namespaceMatches(final ThingEvent<?> event, final Collection<String> namespaces)", "testcase": false, "constructor": false}, {"identifier": "targetThingIdMatches", "parameters": "(final ThingEvent<?> event, final Collection<ThingId> targetThingIds)", "modifiers": "private static", "return": "boolean", "signature": "boolean targetThingIdMatches(final ThingEvent<?> event, final Collection<ThingId> targetThingIds)", "full_signature": "private static boolean targetThingIdMatches(final ThingEvent<?> event, final Collection<ThingId> targetThingIds)", "class_method_signature": "ThingsSseRouteBuilder.targetThingIdMatches(final ThingEvent<?> event, final Collection<ThingId> targetThingIds)", "testcase": false, "constructor": false}, {"identifier": "toNonemptyThingJson", "parameters": "(final Thing thing, final ThingEvent<?> event,\n            @Nullable final JsonFieldSelector fields)", "modifiers": "private static", "return": "Collection<JsonObject>", "signature": "Collection<JsonObject> toNonemptyThingJson(final Thing thing, final ThingEvent<?> event,\n            @Nullable final JsonFieldSelector fields)", "full_signature": "private static Collection<JsonObject> toNonemptyThingJson(final Thing thing, final ThingEvent<?> event,\n            @Nullable final JsonFieldSelector fields)", "class_method_signature": "ThingsSseRouteBuilder.toNonemptyThingJson(final Thing thing, final ThingEvent<?> event,\n            @Nullable final JsonFieldSelector fields)", "testcase": false, "constructor": false}, {"identifier": "getNamespaces", "parameters": "(@Nullable final String namespacesParameter)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> getNamespaces(@Nullable final String namespacesParameter)", "full_signature": "private static List<String> getNamespaces(@Nullable final String namespacesParameter)", "class_method_signature": "ThingsSseRouteBuilder.getNamespaces(@Nullable final String namespacesParameter)", "testcase": false, "constructor": false}, {"identifier": "getThingIds", "parameters": "(@Nullable final String thingIdString)", "modifiers": "private static", "return": "List<ThingId>", "signature": "List<ThingId> getThingIds(@Nullable final String thingIdString)", "full_signature": "private static List<ThingId> getThingIds(@Nullable final String thingIdString)", "class_method_signature": "ThingsSseRouteBuilder.getThingIds(@Nullable final String thingIdString)", "testcase": false, "constructor": false}, {"identifier": "getFieldSelector", "parameters": "(@Nullable final String fieldsString)", "modifiers": "@Nullable private static", "return": "JsonFieldSelector", "signature": "JsonFieldSelector getFieldSelector(@Nullable final String fieldsString)", "full_signature": "@Nullable private static JsonFieldSelector getFieldSelector(@Nullable final String fieldsString)", "class_method_signature": "ThingsSseRouteBuilder.getFieldSelector(@Nullable final String fieldsString)", "testcase": false, "constructor": false}, {"identifier": "namespaceFromId", "parameters": "(final ThingEvent<?> thingEvent)", "modifiers": "private static", "return": "String", "signature": "String namespaceFromId(final ThingEvent<?> thingEvent)", "full_signature": "private static String namespaceFromId(final ThingEvent<?> thingEvent)", "class_method_signature": "ThingsSseRouteBuilder.namespaceFromId(final ThingEvent<?> thingEvent)", "testcase": false, "constructor": false}, {"identifier": "newAcceptHeaderExtractor", "parameters": "()", "modifiers": "private static", "return": "PartialFunction<HttpHeader, Accept>", "signature": "PartialFunction<HttpHeader, Accept> newAcceptHeaderExtractor()", "full_signature": "private static PartialFunction<HttpHeader, Accept> newAcceptHeaderExtractor()", "class_method_signature": "ThingsSseRouteBuilder.newAcceptHeaderExtractor()", "testcase": false, "constructor": false}, {"identifier": "matchesTextEventStream", "parameters": "(final Accept accept)", "modifiers": "private static", "return": "boolean", "signature": "boolean matchesTextEventStream(final Accept accept)", "full_signature": "private static boolean matchesTextEventStream(final Accept accept)", "class_method_signature": "ThingsSseRouteBuilder.matchesTextEventStream(final Accept accept)", "testcase": false, "constructor": false}, {"identifier": "getCounterFor", "parameters": "(final String path)", "modifiers": "private static", "return": "Counter", "signature": "Counter getCounterFor(final String path)", "full_signature": "private static Counter getCounterFor(final String path)", "class_method_signature": "ThingsSseRouteBuilder.getCounterFor(final String path)", "testcase": false, "constructor": false}], "file": "services/gateway/endpoints/src/main/java/org/eclipse/ditto/services/gateway/endpoints/routes/sse/ThingsSseRouteBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "modifiers": "@SuppressWarnings(\"squid:S1172\") // allow unused ctx-Param in order to have a consistent route-\"interface\" @Override public", "return": "Route", "body": "@SuppressWarnings(\"squid:S1172\") // allow unused ctx-Param in order to have a consistent route-\"interface\"\n    @Override\n    public Route build(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier) {\n        return concat(\n                rawPathPrefix(PathMatchers.slash().concat(PATH_THINGS),\n                        () -> pathEndOrSingleSlash(() -> get(() -> headerValuePF(ACCEPT_HEADER_EXTRACTOR,\n                                accept -> {\n                                    final CompletionStage<DittoHeaders> dittoHeadersCompletionStage =\n                                            dittoHeadersSupplier.get()\n                                                    .thenApply(ThingsSseRouteBuilder::getDittoHeadersWithCorrelationId);\n                                    return buildThingsSseRoute(ctx, dittoHeadersCompletionStage);\n                                })))),\n                buildSearchSseRoute(ctx, dittoHeadersSupplier)\n        );\n    }", "signature": "Route build(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "full_signature": "@SuppressWarnings(\"squid:S1172\") // allow unused ctx-Param in order to have a consistent route-\"interface\" @Override public Route build(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "class_method_signature": "ThingsSseRouteBuilder.build(final RequestContext ctx, final Supplier<CompletionStage<DittoHeaders>> dittoHeadersSupplier)", "testcase": false, "constructor": false, "invocations": ["concat", "rawPathPrefix", "concat", "slash", "pathEndOrSingleSlash", "get", "headerValuePF", "thenApply", "get", "buildThingsSseRoute", "buildSearchSseRoute"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}