{"test_class": {"identifier": "PatternFinderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Board board;", "modifier": "", "type": "Board", "declarator": "board", "var_name": "board"}], "file": "src/edu/lclark/orego/patterns/PatternFinderTest.java"}, "test_case": {"identifier": "testOffsets", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testOffsets() {\n\t\tshort[][] offsets = getOffsets();\n\t\tassertArrayEquals(new short[] {-1, 0}, offsets[0]);\n\t\tassertArrayEquals(new short[] {0, -1}, offsets[1]);\n\t\tassertArrayEquals(new short[] {0, 1}, offsets[2]);\n\t\tassertArrayEquals(new short[] {1, 0}, offsets[3]);\n\t\tassertArrayEquals(new short[] {-1, -1}, offsets[4]);\n\t\tassertNotNull(offsets[offsets.length - 1]);\n\t}", "signature": "void testOffsets()", "full_signature": "@Test public void testOffsets()", "class_method_signature": "PatternFinderTest.testOffsets()", "testcase": true, "constructor": false, "invocations": ["getOffsets", "assertArrayEquals", "assertArrayEquals", "assertArrayEquals", "assertArrayEquals", "assertArrayEquals", "assertNotNull"]}, "focal_class": {"identifier": "PatternFinder", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int ENEMY_2_LIBERTIES = 1;", "modifier": "public static final", "type": "int", "declarator": "ENEMY_2_LIBERTIES = 1", "var_name": "ENEMY_2_LIBERTIES"}, {"original_string": "public static final int ENEMY_3_OR_MORE_LIBERTIES = 2;", "modifier": "public static final", "type": "int", "declarator": "ENEMY_3_OR_MORE_LIBERTIES = 2", "var_name": "ENEMY_3_OR_MORE_LIBERTIES"}, {"original_string": "public static final int ENEMY_IN_ATARI = 0;", "modifier": "public static final", "type": "int", "declarator": "ENEMY_IN_ATARI = 0", "var_name": "ENEMY_IN_ATARI"}, {"original_string": "public static final int FRIENDLY_2_LIBERTIES = 1;", "modifier": "public static final", "type": "int", "declarator": "FRIENDLY_2_LIBERTIES = 1", "var_name": "FRIENDLY_2_LIBERTIES"}, {"original_string": "public static final int FRIENDLY_3_OR_MORE_LIBERTIES = 2;", "modifier": "public static final", "type": "int", "declarator": "FRIENDLY_3_OR_MORE_LIBERTIES = 2", "var_name": "FRIENDLY_3_OR_MORE_LIBERTIES"}, {"original_string": "public static final int FRIENDLY_IN_ATARI = 0;", "modifier": "public static final", "type": "int", "declarator": "FRIENDLY_IN_ATARI = 0", "var_name": "FRIENDLY_IN_ATARI"}, {"original_string": "public static final int LAST_MOVE_INCREASE = 3;", "modifier": "public static final", "type": "int", "declarator": "LAST_MOVE_INCREASE = 3", "var_name": "LAST_MOVE_INCREASE"}, {"original_string": "public static final int OFF_BOARD = 9;", "modifier": "public static final", "type": "int", "declarator": "OFF_BOARD = 9", "var_name": "OFF_BOARD"}, {"original_string": "private static short[][] offsets;", "modifier": "private static", "type": "short[][]", "declarator": "offsets", "var_name": "offsets"}, {"original_string": "private static int[] patternSizes;", "modifier": "private static", "type": "int[]", "declarator": "patternSizes", "var_name": "patternSizes"}, {"original_string": "public static final long[][] POINT_HASHES = new long[10][39 * 39 - 1];", "modifier": "public static final", "type": "long[][]", "declarator": "POINT_HASHES = new long[10][39 * 39 - 1]", "var_name": "POINT_HASHES"}], "methods": [{"identifier": "distanceTo", "parameters": "(short[] offset)", "modifiers": "static", "return": "double", "signature": "double distanceTo(short[] offset)", "full_signature": "static double distanceTo(short[] offset)", "class_method_signature": "PatternFinder.distanceTo(short[] offset)", "testcase": false, "constructor": false}, {"identifier": "generatePatternMap", "parameters": "(Board board, HashMap<String, Float> map,\n\t\t\tHashMap<String, Long> hashMap, ShapeTable table,\n\t\t\tArrayList<Short> stones, int minStoneCount, int maxStoneCount,\n\t\t\tint centerRow, int centerColumn, int patternRadius)", "modifiers": "@SuppressWarnings(\"boxing\") static", "return": "void", "signature": "void generatePatternMap(Board board, HashMap<String, Float> map,\n\t\t\tHashMap<String, Long> hashMap, ShapeTable table,\n\t\t\tArrayList<Short> stones, int minStoneCount, int maxStoneCount,\n\t\t\tint centerRow, int centerColumn, int patternRadius)", "full_signature": "@SuppressWarnings(\"boxing\") static void generatePatternMap(Board board, HashMap<String, Float> map,\n\t\t\tHashMap<String, Long> hashMap, ShapeTable table,\n\t\t\tArrayList<Short> stones, int minStoneCount, int maxStoneCount,\n\t\t\tint centerRow, int centerColumn, int patternRadius)", "class_method_signature": "PatternFinder.generatePatternMap(Board board, HashMap<String, Float> map,\n\t\t\tHashMap<String, Long> hashMap, ShapeTable table,\n\t\t\tArrayList<Short> stones, int minStoneCount, int maxStoneCount,\n\t\t\tint centerRow, int centerColumn, int patternRadius)", "testcase": false, "constructor": false}, {"identifier": "getHash", "parameters": "(Board board, short p, int minStones,\n\t\t\tshort lastMove)", "modifiers": "public static", "return": "long", "signature": "long getHash(Board board, short p, int minStones,\n\t\t\tshort lastMove)", "full_signature": "public static long getHash(Board board, short p, int minStones,\n\t\t\tshort lastMove)", "class_method_signature": "PatternFinder.getHash(Board board, short p, int minStones,\n\t\t\tshort lastMove)", "testcase": false, "constructor": false}, {"identifier": "getOffsets", "parameters": "()", "modifiers": "static", "return": "short[][]", "signature": "short[][] getOffsets()", "full_signature": "static short[][] getOffsets()", "class_method_signature": "PatternFinder.getOffsets()", "testcase": false, "constructor": false}, {"identifier": "getPatternSizes", "parameters": "()", "modifiers": "static", "return": "int[]", "signature": "int[] getPatternSizes()", "full_signature": "static int[] getPatternSizes()", "class_method_signature": "PatternFinder.getPatternSizes()", "testcase": false, "constructor": false}, {"identifier": "getPatternString", "parameters": "(Board board, int topRow,\n\t\t\tint bottomRow, int leftColumn, int rightColumn)", "modifiers": "private static", "return": "String", "signature": "String getPatternString(Board board, int topRow,\n\t\t\tint bottomRow, int leftColumn, int rightColumn)", "full_signature": "private static String getPatternString(Board board, int topRow,\n\t\t\tint bottomRow, int leftColumn, int rightColumn)", "class_method_signature": "PatternFinder.getPatternString(Board board, int topRow,\n\t\t\tint bottomRow, int leftColumn, int rightColumn)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "@SuppressWarnings(\"boxing\") public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "@SuppressWarnings(\"boxing\") public static void main(String[] args)", "class_method_signature": "PatternFinder.main(String[] args)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/patterns/PatternFinder.java"}, "focal_method": {"identifier": "getOffsets", "parameters": "()", "modifiers": "static", "return": "short[][]", "body": "static short[][] getOffsets() {\n\t\treturn offsets;\n\t}", "signature": "short[][] getOffsets()", "full_signature": "static short[][] getOffsets()", "class_method_signature": "PatternFinder.getOffsets()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}