{"test_class": {"identifier": "NetworkAddressModelDataMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NetworkAddressModelDataMapper networkAddressModelDataMapper;", "modifier": "private", "type": "NetworkAddressModelDataMapper", "declarator": "networkAddressModelDataMapper", "var_name": "networkAddressModelDataMapper"}], "file": "presentation/src/test/java/com/remotecraft/app/mapper/NetworkAddressModelDataMapperTest.java"}, "test_case": {"identifier": "shouldProperlyMapNetworkAddressModelCollectionIntoNetworkAddressCollection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldProperlyMapNetworkAddressModelCollectionIntoNetworkAddressCollection()\n      throws Exception {\n    NetworkAddressModel networkAddressModel1 = NetworkAddressModel.builder()\n        .ip(\"192.168.1.45\")\n        .port(9999)\n        .build();\n    NetworkAddressModel networkAddressModel2 = NetworkAddressModel.builder()\n        .ip(\"192.168.1.80\")\n        .port(1111)\n        .build();\n    ArrayList<NetworkAddressModel> networkAddressModels = new ArrayList<>();\n    networkAddressModels.add(networkAddressModel1);\n    networkAddressModels.add(networkAddressModel2);\n\n    Collection<NetworkAddress> networkAddresses =\n        networkAddressModelDataMapper.transformInverse(networkAddressModels);\n\n    assertThat(networkAddresses, notNullValue());\n    assertThat(networkAddresses.size(), is(2));\n    NetworkAddress networkAddress1 =\n        (NetworkAddress) networkAddresses.toArray()[0];\n    assertThat(networkAddress1, notNullValue());\n    assertThat(networkAddress1, instanceOf(NetworkAddress.class));\n    assertThat(networkAddress1.ip(), notNullValue());\n    assertThat(networkAddress1.ip(), is(\"192.168.1.45\"));\n    assertThat(networkAddress1.port(), is(9999));\n    NetworkAddress networkAddress2 =\n        (NetworkAddress) networkAddresses.toArray()[1];\n    assertThat(networkAddress2, notNullValue());\n    assertThat(networkAddress2, instanceOf(NetworkAddress.class));\n    assertThat(networkAddress2.ip(), notNullValue());\n    assertThat(networkAddress2.ip(), is(\"192.168.1.80\"));\n    assertThat(networkAddress2.port(), is(1111));\n  }", "signature": "void shouldProperlyMapNetworkAddressModelCollectionIntoNetworkAddressCollection()", "full_signature": "@Test public void shouldProperlyMapNetworkAddressModelCollectionIntoNetworkAddressCollection()", "class_method_signature": "NetworkAddressModelDataMapperTest.shouldProperlyMapNetworkAddressModelCollectionIntoNetworkAddressCollection()", "testcase": true, "constructor": false, "invocations": ["build", "port", "ip", "builder", "build", "port", "ip", "builder", "add", "add", "transformInverse", "assertThat", "notNullValue", "assertThat", "size", "is", "toArray", "assertThat", "notNullValue", "assertThat", "instanceOf", "assertThat", "ip", "notNullValue", "assertThat", "ip", "is", "assertThat", "port", "is", "toArray", "assertThat", "notNullValue", "assertThat", "instanceOf", "assertThat", "ip", "notNullValue", "assertThat", "ip", "is", "assertThat", "port", "is"]}, "focal_class": {"identifier": "NetworkAddressModelDataMapper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "NetworkAddressModelDataMapper", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " NetworkAddressModelDataMapper()", "full_signature": "@Inject public  NetworkAddressModelDataMapper()", "class_method_signature": "NetworkAddressModelDataMapper.NetworkAddressModelDataMapper()", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "(NetworkAddress networkAddress)", "modifiers": "public", "return": "NetworkAddressModel", "signature": "NetworkAddressModel transform(NetworkAddress networkAddress)", "full_signature": "public NetworkAddressModel transform(NetworkAddress networkAddress)", "class_method_signature": "NetworkAddressModelDataMapper.transform(NetworkAddress networkAddress)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(Collection<NetworkAddress> networkAddresses)", "modifiers": "public", "return": "Collection<NetworkAddressModel>", "signature": "Collection<NetworkAddressModel> transform(Collection<NetworkAddress> networkAddresses)", "full_signature": "public Collection<NetworkAddressModel> transform(Collection<NetworkAddress> networkAddresses)", "class_method_signature": "NetworkAddressModelDataMapper.transform(Collection<NetworkAddress> networkAddresses)", "testcase": false, "constructor": false}, {"identifier": "transformInverse", "parameters": "(NetworkAddressModel networkAddressModel)", "modifiers": "public", "return": "NetworkAddress", "signature": "NetworkAddress transformInverse(NetworkAddressModel networkAddressModel)", "full_signature": "public NetworkAddress transformInverse(NetworkAddressModel networkAddressModel)", "class_method_signature": "NetworkAddressModelDataMapper.transformInverse(NetworkAddressModel networkAddressModel)", "testcase": false, "constructor": false}, {"identifier": "transformInverse", "parameters": "(\n      Collection<NetworkAddressModel> networkAddressModels)", "modifiers": "public", "return": "Collection<NetworkAddress>", "signature": "Collection<NetworkAddress> transformInverse(\n      Collection<NetworkAddressModel> networkAddressModels)", "full_signature": "public Collection<NetworkAddress> transformInverse(\n      Collection<NetworkAddressModel> networkAddressModels)", "class_method_signature": "NetworkAddressModelDataMapper.transformInverse(\n      Collection<NetworkAddressModel> networkAddressModels)", "testcase": false, "constructor": false}], "file": "presentation/src/main/java/com/remotecraft/app/mapper/NetworkAddressModelDataMapper.java"}, "focal_method": {"identifier": "transformInverse", "parameters": "(NetworkAddressModel networkAddressModel)", "modifiers": "public", "return": "NetworkAddress", "body": "public NetworkAddress transformInverse(NetworkAddressModel networkAddressModel) {\n    if (networkAddressModel == null) {\n      throw new IllegalArgumentException(\"Cannot transform a null NetworkAddressModel object.\");\n    }\n\n    return NetworkAddress.builder()\n        .ip(networkAddressModel.ip())\n        .port(networkAddressModel.port())\n        .build();\n  }", "signature": "NetworkAddress transformInverse(NetworkAddressModel networkAddressModel)", "full_signature": "public NetworkAddress transformInverse(NetworkAddressModel networkAddressModel)", "class_method_signature": "NetworkAddressModelDataMapper.transformInverse(NetworkAddressModel networkAddressModel)", "testcase": false, "constructor": false, "invocations": ["build", "port", "ip", "builder", "ip", "port"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}