{"test_class": {"identifier": "ConsoleDetailTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/model/ConsoleDetailTest.java"}, "test_case": {"identifier": "shouldEscapeEntities", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldEscapeEntities() {\n        try (Stream<String> lines = Stream.of(\"<b>CheckStyle</b> <script>execute</script>\")) {\n            ConsoleDetail consoleDetail = new ConsoleDetail(mock(Run.class), lines, 1, 2);\n\n            assertThat(consoleDetail.getSourceCode())\n                    .doesNotContain(\"<b>CheckStyle</b> <script>execute</script>\")\n                    .contains(\"&lt;b&gt;CheckStyle&lt;/b&gt; &lt;script&gt;execute&lt;\");\n        }\n    }", "signature": "void shouldEscapeEntities()", "full_signature": "@Test void shouldEscapeEntities()", "class_method_signature": "ConsoleDetailTest.shouldEscapeEntities()", "testcase": true, "constructor": false, "invocations": ["of", "mock", "contains", "doesNotContain", "assertThat", "getSourceCode"]}, "focal_class": {"identifier": "ConsoleDetail", "superclass": "", "interfaces": "implements ModelObject", "fields": [{"original_string": "private int lineCount;", "modifier": "private", "type": "int", "declarator": "lineCount", "var_name": "lineCount"}, {"original_string": "private String sourceCode = StringUtils.EMPTY;", "modifier": "private", "type": "String", "declarator": "sourceCode = StringUtils.EMPTY", "var_name": "sourceCode"}, {"original_string": "private final Run<?, ?> owner;", "modifier": "private final", "type": "Run<?, ?>", "declarator": "owner", "var_name": "owner"}, {"original_string": "private final int from;", "modifier": "private final", "type": "int", "declarator": "from", "var_name": "from"}, {"original_string": "private final int to;", "modifier": "private final", "type": "int", "declarator": "to", "var_name": "to"}, {"original_string": "private final int end;", "modifier": "private final", "type": "int", "declarator": "end", "var_name": "end"}, {"original_string": "private final int start;", "modifier": "private final", "type": "int", "declarator": "start", "var_name": "start"}], "methods": [{"identifier": "ConsoleDetail", "parameters": "(final Run<?, ?> owner, final Stream<String> consoleLog, final int from, final int to)", "modifiers": "public", "return": "", "signature": " ConsoleDetail(final Run<?, ?> owner, final Stream<String> consoleLog, final int from, final int to)", "full_signature": "public  ConsoleDetail(final Run<?, ?> owner, final Stream<String> consoleLog, final int from, final int to)", "class_method_signature": "ConsoleDetail.ConsoleDetail(final Run<?, ?> owner, final Stream<String> consoleLog, final int from, final int to)", "testcase": false, "constructor": true}, {"identifier": "readConsole", "parameters": "(final Stream<String> consoleLog)", "modifiers": "@SuppressWarnings(\"PMD.ConsecutiveLiteralAppends\") private", "return": "void", "signature": "void readConsole(final Stream<String> consoleLog)", "full_signature": "@SuppressWarnings(\"PMD.ConsecutiveLiteralAppends\") private void readConsole(final Stream<String> consoleLog)", "class_method_signature": "ConsoleDetail.readConsole(final Stream<String> consoleLog)", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayName()", "full_signature": "@Override public String getDisplayName()", "class_method_signature": "ConsoleDetail.getDisplayName()", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") // Called by jelly view to show the side panel public", "return": "Run<?, ?>", "signature": "Run<?, ?> getOwner()", "full_signature": "@SuppressWarnings(\"unused\") // Called by jelly view to show the side panel public Run<?, ?> getOwner()", "class_method_signature": "ConsoleDetail.getOwner()", "testcase": false, "constructor": false}, {"identifier": "getSourceCode", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") // Called by jelly view public", "return": "String", "signature": "String getSourceCode()", "full_signature": "@SuppressWarnings(\"unused\") // Called by jelly view public String getSourceCode()", "class_method_signature": "ConsoleDetail.getSourceCode()", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/model/ConsoleDetail.java"}, "focal_method": {"identifier": "getSourceCode", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") // Called by jelly view public", "return": "String", "body": "@SuppressWarnings(\"unused\") // Called by jelly view\n    public String getSourceCode() {\n        return sourceCode;\n    }", "signature": "String getSourceCode()", "full_signature": "@SuppressWarnings(\"unused\") // Called by jelly view public String getSourceCode()", "class_method_signature": "ConsoleDetail.getSourceCode()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}