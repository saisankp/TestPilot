{"test_class": {"identifier": "BusinessObjectDataKeyComparatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BusinessObjectDataKeyComparator comparator = new BusinessObjectDataKeyComparator();", "modifier": "private", "type": "BusinessObjectDataKeyComparator", "declarator": "comparator = new BusinessObjectDataKeyComparator()", "var_name": "comparator"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/BusinessObjectDataKeyComparatorTest.java"}, "test_case": {"identifier": "testCompareBusinessObjectDataVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompareBusinessObjectDataVersion() throws Exception\n    {\n        BusinessObjectDataKey businessObjectDataKey1 = new BusinessObjectDataKey();\n        BusinessObjectDataKey businessObjectDataKey2 = new BusinessObjectDataKey();\n\n        // \"a\" = \"b\"\n        businessObjectDataKey1.setBusinessObjectDataVersion(0);\n        businessObjectDataKey2.setBusinessObjectDataVersion(0);\n        assertEquals(0, comparator.compare(businessObjectDataKey1, businessObjectDataKey2));\n\n        // \"a\" < \"b\"\n        businessObjectDataKey1.setBusinessObjectDataVersion(0);\n        businessObjectDataKey2.setBusinessObjectDataVersion(1);\n        assertEquals(-1, comparator.compare(businessObjectDataKey1, businessObjectDataKey2));\n\n        // \"b\" > \"a\"\n        assertEquals(1, comparator.compare(businessObjectDataKey2, businessObjectDataKey1));\n    }", "signature": "void testCompareBusinessObjectDataVersion()", "full_signature": "@Test public void testCompareBusinessObjectDataVersion()", "class_method_signature": "BusinessObjectDataKeyComparatorTest.testCompareBusinessObjectDataVersion()", "testcase": true, "constructor": false, "invocations": ["setBusinessObjectDataVersion", "setBusinessObjectDataVersion", "assertEquals", "compare", "setBusinessObjectDataVersion", "setBusinessObjectDataVersion", "assertEquals", "compare", "assertEquals", "compare"]}, "focal_class": {"identifier": "BusinessObjectDataKeyComparator", "superclass": "", "interfaces": "implements Comparator<BusinessObjectDataKey>, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -9075981888098266490L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -9075981888098266490L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "compare", "parameters": "(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)", "full_signature": "@Override public int compare(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)", "class_method_signature": "BusinessObjectDataKeyComparator.compare(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/BusinessObjectDataKeyComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compare(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)\n    {\n        if (data1 == null || data2 == null)\n        {\n            return data1 == null && data2 == null ? 0 : (data1 == null ? -1 : 1);\n        }\n        int result = ObjectUtils.compare(data1.getBusinessObjectDefinitionName(), data2.getBusinessObjectDefinitionName());\n        if (result != 0)\n        {\n            return result;\n        }\n        result = ObjectUtils.compare(data1.getBusinessObjectFormatUsage(), data2.getBusinessObjectFormatUsage());\n        if (result != 0)\n        {\n            return result;\n        }\n        result = ObjectUtils.compare(data1.getBusinessObjectFormatFileType(), data2.getBusinessObjectFormatFileType());\n        if (result != 0)\n        {\n            return result;\n        }\n        result = ObjectUtils.compare(data1.getBusinessObjectFormatVersion(), data2.getBusinessObjectFormatVersion());\n        if (result != 0)\n        {\n            return result;\n        }\n        result = ObjectUtils.compare(data1.getPartitionValue(), data2.getPartitionValue());\n        if (result != 0)\n        {\n            return result;\n        }\n        return ObjectUtils.compare(data1.getBusinessObjectDataVersion(), data2.getBusinessObjectDataVersion());\n    }", "signature": "int compare(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)", "full_signature": "@Override public int compare(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)", "class_method_signature": "BusinessObjectDataKeyComparator.compare(final BusinessObjectDataKey data1, final BusinessObjectDataKey data2)", "testcase": false, "constructor": false, "invocations": ["compare", "getBusinessObjectDefinitionName", "getBusinessObjectDefinitionName", "compare", "getBusinessObjectFormatUsage", "getBusinessObjectFormatUsage", "compare", "getBusinessObjectFormatFileType", "getBusinessObjectFormatFileType", "compare", "getBusinessObjectFormatVersion", "getBusinessObjectFormatVersion", "compare", "getPartitionValue", "getPartitionValue", "compare", "getBusinessObjectDataVersion", "getBusinessObjectDataVersion"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}