{"test_class": {"identifier": "DataElementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PeriodType periodType = new MonthlyPeriodType();", "modifier": "private", "type": "PeriodType", "declarator": "periodType = new MonthlyPeriodType()", "var_name": "periodType"}], "file": "dhis-2/dhis-api/src/test/java/org/hisp/dhis/dataelement/DataElementTest.java"}, "test_case": {"identifier": "testGetCategoryCombos", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCategoryCombos()\n    {\n        CategoryCombo ccA = new CategoryCombo( \"CategoryComboA\", DataDimensionType.DISAGGREGATION );\n        CategoryCombo ccB = new CategoryCombo( \"CategoryComboB\", DataDimensionType.DISAGGREGATION );\n\n        DataSet dsA = new DataSet( \"DataSetA\" );\n        DataSet dsB = new DataSet( \"DataSetB\" );\n\n        DataElement deA = new DataElement( \"DataElementA\" );\n        DataElement deB = new DataElement( \"DataElementB\" );\n\n        deA.setCategoryCombo( ccA );\n        dsA.addDataSetElement( deA );\n        dsB.addDataSetElement( deA, ccB );\n\n        assertEquals( 2, deA.getCategoryCombos().size() );\n        assertEquals( Sets.newHashSet( ccA, ccB ), deA.getCategoryCombos() );\n\n        deB.setCategoryCombo( ccA );\n        dsB.addDataSetElement( deB );\n\n        assertEquals( 1, deB.getCategoryCombos().size() );\n        assertEquals( Sets.newHashSet( ccA ), deB.getCategoryCombos() );\n    }", "signature": "void testGetCategoryCombos()", "full_signature": "@Test public void testGetCategoryCombos()", "class_method_signature": "DataElementTest.testGetCategoryCombos()", "testcase": true, "constructor": false, "invocations": ["setCategoryCombo", "addDataSetElement", "addDataSetElement", "assertEquals", "size", "getCategoryCombos", "assertEquals", "newHashSet", "getCategoryCombos", "setCategoryCombo", "addDataSetElement", "assertEquals", "size", "getCategoryCombos", "assertEquals", "newHashSet", "getCategoryCombos"]}, "focal_class": {"identifier": "DataElement", "superclass": "extends BaseDimensionalItemObject", "interfaces": "implements MetadataObject, ValueTypedDimensionalItemObject", "fields": [{"original_string": "public static final String[] I18N_PROPERTIES = { TranslationProperty.NAME.getName(), TranslationProperty.SHORT_NAME.getName(),\n        TranslationProperty.DESCRIPTION.getName(), TranslationProperty.FORM_NAME.getName() };", "modifier": "public static final", "type": "String[]", "declarator": "I18N_PROPERTIES = { TranslationProperty.NAME.getName(), TranslationProperty.SHORT_NAME.getName(),\n        TranslationProperty.DESCRIPTION.getName(), TranslationProperty.FORM_NAME.getName() }", "var_name": "I18N_PROPERTIES"}, {"original_string": "private ValueType valueType;", "modifier": "private", "type": "ValueType", "declarator": "valueType", "var_name": "valueType"}, {"original_string": "private String formName;", "modifier": "private", "type": "String", "declarator": "formName", "var_name": "formName"}, {"original_string": "private DataElementDomain domainType;", "modifier": "private", "type": "DataElementDomain", "declarator": "domainType", "var_name": "domainType"}, {"original_string": "private CategoryCombo categoryCombo;", "modifier": "private", "type": "CategoryCombo", "declarator": "categoryCombo", "var_name": "categoryCombo"}, {"original_string": "private String url;", "modifier": "private", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "private Set<DataElementGroup> groups = new HashSet<>();", "modifier": "private", "type": "Set<DataElementGroup>", "declarator": "groups = new HashSet<>()", "var_name": "groups"}, {"original_string": "private Set<DataSetElement> dataSetElements = new HashSet<>();", "modifier": "private", "type": "Set<DataSetElement>", "declarator": "dataSetElements = new HashSet<>()", "var_name": "dataSetElements"}, {"original_string": "private List<Integer> aggregationLevels = new ArrayList<>();", "modifier": "private", "type": "List<Integer>", "declarator": "aggregationLevels = new ArrayList<>()", "var_name": "aggregationLevels"}, {"original_string": "private boolean zeroIsSignificant;", "modifier": "private", "type": "boolean", "declarator": "zeroIsSignificant", "var_name": "zeroIsSignificant"}, {"original_string": "@AuditAttribute\n    private OptionSet optionSet;", "modifier": "@AuditAttribute\n    private", "type": "OptionSet", "declarator": "optionSet", "var_name": "optionSet"}, {"original_string": "private OptionSet commentOptionSet;", "modifier": "private", "type": "OptionSet", "declarator": "commentOptionSet", "var_name": "commentOptionSet"}, {"original_string": "private ObjectStyle style;", "modifier": "private", "type": "ObjectStyle", "declarator": "style", "var_name": "style"}, {"original_string": "private String fieldMask;", "modifier": "private", "type": "String", "declarator": "fieldMask", "var_name": "fieldMask"}], "methods": [{"identifier": "DataElement", "parameters": "()", "modifiers": "public", "return": "", "signature": " DataElement()", "full_signature": "public  DataElement()", "class_method_signature": "DataElement.DataElement()", "testcase": false, "constructor": true}, {"identifier": "DataElement", "parameters": "( String name )", "modifiers": "public", "return": "", "signature": " DataElement( String name )", "full_signature": "public  DataElement( String name )", "class_method_signature": "DataElement.DataElement( String name )", "testcase": false, "constructor": true}, {"identifier": "addDataElementGroup", "parameters": "( DataElementGroup group )", "modifiers": "public", "return": "void", "signature": "void addDataElementGroup( DataElementGroup group )", "full_signature": "public void addDataElementGroup( DataElementGroup group )", "class_method_signature": "DataElement.addDataElementGroup( DataElementGroup group )", "testcase": false, "constructor": false}, {"identifier": "removeDataElementGroup", "parameters": "( DataElementGroup group )", "modifiers": "public", "return": "void", "signature": "void removeDataElementGroup( DataElementGroup group )", "full_signature": "public void removeDataElementGroup( DataElementGroup group )", "class_method_signature": "DataElement.removeDataElementGroup( DataElementGroup group )", "testcase": false, "constructor": false}, {"identifier": "updateDataElementGroups", "parameters": "( Set<DataElementGroup> updates )", "modifiers": "public", "return": "void", "signature": "void updateDataElementGroups( Set<DataElementGroup> updates )", "full_signature": "public void updateDataElementGroups( Set<DataElementGroup> updates )", "class_method_signature": "DataElement.updateDataElementGroups( Set<DataElementGroup> updates )", "testcase": false, "constructor": false}, {"identifier": "removeDataSetElement", "parameters": "( DataSetElement element )", "modifiers": "public", "return": "boolean", "signature": "boolean removeDataSetElement( DataSetElement element )", "full_signature": "public boolean removeDataSetElement( DataSetElement element )", "class_method_signature": "DataElement.removeDataSetElement( DataSetElement element )", "testcase": false, "constructor": false}, {"identifier": "getCategoryCombos", "parameters": "()", "modifiers": "public", "return": "Set<CategoryCombo>", "signature": "Set<CategoryCombo> getCategoryCombos()", "full_signature": "public Set<CategoryCombo> getCategoryCombos()", "class_method_signature": "DataElement.getCategoryCombos()", "testcase": false, "constructor": false}, {"identifier": "getDataElementCategoryCombo", "parameters": "( DataSet dataSet )", "modifiers": "public", "return": "CategoryCombo", "signature": "CategoryCombo getDataElementCategoryCombo( DataSet dataSet )", "full_signature": "public CategoryCombo getDataElementCategoryCombo( DataSet dataSet )", "class_method_signature": "DataElement.getDataElementCategoryCombo( DataSet dataSet )", "testcase": false, "constructor": false}, {"identifier": "getCategoryOptionCombos", "parameters": "()", "modifiers": "public", "return": "Set<CategoryOptionCombo>", "signature": "Set<CategoryOptionCombo> getCategoryOptionCombos()", "full_signature": "public Set<CategoryOptionCombo> getCategoryOptionCombos()", "class_method_signature": "DataElement.getCategoryOptionCombos()", "testcase": false, "constructor": false}, {"identifier": "getSortedCategoryOptionCombos", "parameters": "()", "modifiers": "public", "return": "List<CategoryOptionCombo>", "signature": "List<CategoryOptionCombo> getSortedCategoryOptionCombos()", "full_signature": "public List<CategoryOptionCombo> getSortedCategoryOptionCombos()", "class_method_signature": "DataElement.getSortedCategoryOptionCombos()", "testcase": false, "constructor": false}, {"identifier": "isNumericType", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNumericType()", "full_signature": "public boolean isNumericType()", "class_method_signature": "DataElement.isNumericType()", "testcase": false, "constructor": false}, {"identifier": "isFileType", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFileType()", "full_signature": "public boolean isFileType()", "class_method_signature": "DataElement.isFileType()", "testcase": false, "constructor": false}, {"identifier": "getDataSet", "parameters": "()", "modifiers": "public", "return": "DataSet", "signature": "DataSet getDataSet()", "full_signature": "public DataSet getDataSet()", "class_method_signature": "DataElement.getDataSet()", "testcase": false, "constructor": false}, {"identifier": "getApprovalDataSet", "parameters": "()", "modifiers": "public", "return": "DataSet", "signature": "DataSet getApprovalDataSet()", "full_signature": "public DataSet getApprovalDataSet()", "class_method_signature": "DataElement.getApprovalDataSet()", "testcase": false, "constructor": false}, {"identifier": "getDataSets", "parameters": "()", "modifiers": "public", "return": "Set<DataSet>", "signature": "Set<DataSet> getDataSets()", "full_signature": "public Set<DataSet> getDataSets()", "class_method_signature": "DataElement.getDataSets()", "testcase": false, "constructor": false}, {"identifier": "getDataSetCategoryOptionCombos", "parameters": "()", "modifiers": "public", "return": "Set<CategoryOptionCombo>", "signature": "Set<CategoryOptionCombo> getDataSetCategoryOptionCombos()", "full_signature": "public Set<CategoryOptionCombo> getDataSetCategoryOptionCombos()", "class_method_signature": "DataElement.getDataSetCategoryOptionCombos()", "testcase": false, "constructor": false}, {"identifier": "getPeriodType", "parameters": "()", "modifiers": "public", "return": "PeriodType", "signature": "PeriodType getPeriodType()", "full_signature": "public PeriodType getPeriodType()", "class_method_signature": "DataElement.getPeriodType()", "testcase": false, "constructor": false}, {"identifier": "getPeriodTypes", "parameters": "()", "modifiers": "public", "return": "Set<PeriodType>", "signature": "Set<PeriodType> getPeriodTypes()", "full_signature": "public Set<PeriodType> getPeriodTypes()", "class_method_signature": "DataElement.getPeriodTypes()", "testcase": false, "constructor": false}, {"identifier": "isApproveData", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isApproveData()", "full_signature": "public boolean isApproveData()", "class_method_signature": "DataElement.isApproveData()", "testcase": false, "constructor": false}, {"identifier": "getOpenFuturePeriods", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOpenFuturePeriods()", "full_signature": "public int getOpenFuturePeriods()", "class_method_signature": "DataElement.getOpenFuturePeriods()", "testcase": false, "constructor": false}, {"identifier": "getLatestOpenFuturePeriod", "parameters": "()", "modifiers": "public", "return": "Period", "signature": "Period getLatestOpenFuturePeriod()", "full_signature": "public Period getLatestOpenFuturePeriod()", "class_method_signature": "DataElement.getLatestOpenFuturePeriod()", "testcase": false, "constructor": false}, {"identifier": "getFrequencyOrder", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFrequencyOrder()", "full_signature": "public int getFrequencyOrder()", "class_method_signature": "DataElement.getFrequencyOrder()", "testcase": false, "constructor": false}, {"identifier": "periodTypeIsValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean periodTypeIsValid()", "full_signature": "public boolean periodTypeIsValid()", "class_method_signature": "DataElement.periodTypeIsValid()", "testcase": false, "constructor": false}, {"identifier": "hasAggregationLevels", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasAggregationLevels()", "full_signature": "public boolean hasAggregationLevels()", "class_method_signature": "DataElement.hasAggregationLevels()", "testcase": false, "constructor": false}, {"identifier": "getFormNameFallback", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFormNameFallback()", "full_signature": "@Override public String getFormNameFallback()", "class_method_signature": "DataElement.getFormNameFallback()", "testcase": false, "constructor": false}, {"identifier": "getDisplayFormName", "parameters": "()", "modifiers": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getDisplayFormName()", "full_signature": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getDisplayFormName()", "class_method_signature": "DataElement.getDisplayFormName()", "testcase": false, "constructor": false}, {"identifier": "getExpiryDays", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getExpiryDays()", "full_signature": "public int getExpiryDays()", "class_method_signature": "DataElement.getExpiryDays()", "testcase": false, "constructor": false}, {"identifier": "isExpired", "parameters": "( Period period, Date now )", "modifiers": "public", "return": "boolean", "signature": "boolean isExpired( Period period, Date now )", "full_signature": "public boolean isExpired( Period period, Date now )", "class_method_signature": "DataElement.isExpired( Period period, Date now )", "testcase": false, "constructor": false}, {"identifier": "hasDescription", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasDescription()", "full_signature": "public boolean hasDescription()", "class_method_signature": "DataElement.hasDescription()", "testcase": false, "constructor": false}, {"identifier": "hasUrl", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasUrl()", "full_signature": "public boolean hasUrl()", "class_method_signature": "DataElement.hasUrl()", "testcase": false, "constructor": false}, {"identifier": "hasOptionSet", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasOptionSet()", "full_signature": "@Override public boolean hasOptionSet()", "class_method_signature": "DataElement.hasOptionSet()", "testcase": false, "constructor": false}, {"identifier": "getDimensionItemType", "parameters": "()", "modifiers": "@Override public", "return": "DimensionItemType", "signature": "DimensionItemType getDimensionItemType()", "full_signature": "@Override public DimensionItemType getDimensionItemType()", "class_method_signature": "DataElement.getDimensionItemType()", "testcase": false, "constructor": false}, {"identifier": "isOptionSetValue", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isOptionSetValue()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isOptionSetValue()", "class_method_signature": "DataElement.isOptionSetValue()", "testcase": false, "constructor": false}, {"identifier": "getValueType", "parameters": "()", "modifiers": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "ValueType", "signature": "ValueType getValueType()", "full_signature": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public ValueType getValueType()", "class_method_signature": "DataElement.getValueType()", "testcase": false, "constructor": false}, {"identifier": "setValueType", "parameters": "( ValueType valueType )", "modifiers": "public", "return": "void", "signature": "void setValueType( ValueType valueType )", "full_signature": "public void setValueType( ValueType valueType )", "class_method_signature": "DataElement.setValueType( ValueType valueType )", "testcase": false, "constructor": false}, {"identifier": "getFormName", "parameters": "()", "modifiers": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) @PropertyRange( min = 2 ) public", "return": "String", "signature": "String getFormName()", "full_signature": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) @PropertyRange( min = 2 ) public String getFormName()", "class_method_signature": "DataElement.getFormName()", "testcase": false, "constructor": false}, {"identifier": "setFormName", "parameters": "( String formName )", "modifiers": "@Override public", "return": "void", "signature": "void setFormName( String formName )", "full_signature": "@Override public void setFormName( String formName )", "class_method_signature": "DataElement.setFormName( String formName )", "testcase": false, "constructor": false}, {"identifier": "getDomainType", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "DataElementDomain", "signature": "DataElementDomain getDomainType()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public DataElementDomain getDomainType()", "class_method_signature": "DataElement.getDomainType()", "testcase": false, "constructor": false}, {"identifier": "setDomainType", "parameters": "( DataElementDomain domainType )", "modifiers": "public", "return": "void", "signature": "void setDomainType( DataElementDomain domainType )", "full_signature": "public void setDomainType( DataElementDomain domainType )", "class_method_signature": "DataElement.setDomainType( DataElementDomain domainType )", "testcase": false, "constructor": false}, {"identifier": "getCategoryCombo", "parameters": "()", "modifiers": "@JsonProperty( value = \"categoryCombo\" ) @JsonSerialize( as = BaseIdentifiableObject.class ) @JacksonXmlProperty( localName = \"categoryCombo\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "CategoryCombo", "signature": "CategoryCombo getCategoryCombo()", "full_signature": "@JsonProperty( value = \"categoryCombo\" ) @JsonSerialize( as = BaseIdentifiableObject.class ) @JacksonXmlProperty( localName = \"categoryCombo\", namespace = DxfNamespaces.DXF_2_0 ) public CategoryCombo getCategoryCombo()", "class_method_signature": "DataElement.getCategoryCombo()", "testcase": false, "constructor": false}, {"identifier": "setCategoryCombo", "parameters": "( CategoryCombo categoryCombo )", "modifiers": "public", "return": "void", "signature": "void setCategoryCombo( CategoryCombo categoryCombo )", "full_signature": "public void setCategoryCombo( CategoryCombo categoryCombo )", "class_method_signature": "DataElement.setCategoryCombo( CategoryCombo categoryCombo )", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) @Property( PropertyType.URL ) public", "return": "String", "signature": "String getUrl()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) @Property( PropertyType.URL ) public String getUrl()", "class_method_signature": "DataElement.getUrl()", "testcase": false, "constructor": false}, {"identifier": "setUrl", "parameters": "( String url )", "modifiers": "public", "return": "void", "signature": "void setUrl( String url )", "full_signature": "public void setUrl( String url )", "class_method_signature": "DataElement.setUrl( String url )", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "()", "modifiers": "@JsonProperty( \"dataElementGroups\" ) @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"dataElementGroups\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"dataElementGroup\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<DataElementGroup>", "signature": "Set<DataElementGroup> getGroups()", "full_signature": "@JsonProperty( \"dataElementGroups\" ) @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"dataElementGroups\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"dataElementGroup\", namespace = DxfNamespaces.DXF_2_0 ) public Set<DataElementGroup> getGroups()", "class_method_signature": "DataElement.getGroups()", "testcase": false, "constructor": false}, {"identifier": "setGroups", "parameters": "( Set<DataElementGroup> groups )", "modifiers": "public", "return": "void", "signature": "void setGroups( Set<DataElementGroup> groups )", "full_signature": "public void setGroups( Set<DataElementGroup> groups )", "class_method_signature": "DataElement.setGroups( Set<DataElementGroup> groups )", "testcase": false, "constructor": false}, {"identifier": "getDataSetElements", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlElementWrapper( localName = \"dataSetElements\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"dataSetElements\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<DataSetElement>", "signature": "Set<DataSetElement> getDataSetElements()", "full_signature": "@JsonProperty @JacksonXmlElementWrapper( localName = \"dataSetElements\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"dataSetElements\", namespace = DxfNamespaces.DXF_2_0 ) public Set<DataSetElement> getDataSetElements()", "class_method_signature": "DataElement.getDataSetElements()", "testcase": false, "constructor": false}, {"identifier": "setDataSetElements", "parameters": "( Set<DataSetElement> dataSetElements )", "modifiers": "public", "return": "void", "signature": "void setDataSetElements( Set<DataSetElement> dataSetElements )", "full_signature": "public void setDataSetElements( Set<DataSetElement> dataSetElements )", "class_method_signature": "DataElement.setDataSetElements( Set<DataSetElement> dataSetElements )", "testcase": false, "constructor": false}, {"identifier": "getAggregationLevels", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "List<Integer>", "signature": "List<Integer> getAggregationLevels()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public List<Integer> getAggregationLevels()", "class_method_signature": "DataElement.getAggregationLevels()", "testcase": false, "constructor": false}, {"identifier": "setAggregationLevels", "parameters": "( List<Integer> aggregationLevels )", "modifiers": "public", "return": "void", "signature": "void setAggregationLevels( List<Integer> aggregationLevels )", "full_signature": "public void setAggregationLevels( List<Integer> aggregationLevels )", "class_method_signature": "DataElement.setAggregationLevels( List<Integer> aggregationLevels )", "testcase": false, "constructor": false}, {"identifier": "isZeroIsSignificant", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isZeroIsSignificant()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isZeroIsSignificant()", "class_method_signature": "DataElement.isZeroIsSignificant()", "testcase": false, "constructor": false}, {"identifier": "setZeroIsSignificant", "parameters": "( boolean zeroIsSignificant )", "modifiers": "public", "return": "void", "signature": "void setZeroIsSignificant( boolean zeroIsSignificant )", "full_signature": "public void setZeroIsSignificant( boolean zeroIsSignificant )", "class_method_signature": "DataElement.setZeroIsSignificant( boolean zeroIsSignificant )", "testcase": false, "constructor": false}, {"identifier": "getOptionSet", "parameters": "()", "modifiers": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "OptionSet", "signature": "OptionSet getOptionSet()", "full_signature": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public OptionSet getOptionSet()", "class_method_signature": "DataElement.getOptionSet()", "testcase": false, "constructor": false}, {"identifier": "setOptionSet", "parameters": "( OptionSet optionSet )", "modifiers": "public", "return": "void", "signature": "void setOptionSet( OptionSet optionSet )", "full_signature": "public void setOptionSet( OptionSet optionSet )", "class_method_signature": "DataElement.setOptionSet( OptionSet optionSet )", "testcase": false, "constructor": false}, {"identifier": "getCommentOptionSet", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "OptionSet", "signature": "OptionSet getCommentOptionSet()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public OptionSet getCommentOptionSet()", "class_method_signature": "DataElement.getCommentOptionSet()", "testcase": false, "constructor": false}, {"identifier": "setCommentOptionSet", "parameters": "( OptionSet commentOptionSet )", "modifiers": "public", "return": "void", "signature": "void setCommentOptionSet( OptionSet commentOptionSet )", "full_signature": "public void setCommentOptionSet( OptionSet commentOptionSet )", "class_method_signature": "DataElement.setCommentOptionSet( OptionSet commentOptionSet )", "testcase": false, "constructor": false}, {"identifier": "isDataInputAllowedForPeriodAndDate", "parameters": "( Period period, Date date )", "modifiers": "public", "return": "boolean", "signature": "boolean isDataInputAllowedForPeriodAndDate( Period period, Date date )", "full_signature": "public boolean isDataInputAllowedForPeriodAndDate( Period period, Date date )", "class_method_signature": "DataElement.isDataInputAllowedForPeriodAndDate( Period period, Date date )", "testcase": false, "constructor": false}, {"identifier": "getStyle", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "ObjectStyle", "signature": "ObjectStyle getStyle()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public ObjectStyle getStyle()", "class_method_signature": "DataElement.getStyle()", "testcase": false, "constructor": false}, {"identifier": "setStyle", "parameters": "( ObjectStyle style )", "modifiers": "public", "return": "void", "signature": "void setStyle( ObjectStyle style )", "full_signature": "public void setStyle( ObjectStyle style )", "class_method_signature": "DataElement.setStyle( ObjectStyle style )", "testcase": false, "constructor": false}, {"identifier": "getFieldMask", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getFieldMask()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getFieldMask()", "class_method_signature": "DataElement.getFieldMask()", "testcase": false, "constructor": false}, {"identifier": "setFieldMask", "parameters": "( String fieldMask )", "modifiers": "public", "return": "void", "signature": "void setFieldMask( String fieldMask )", "full_signature": "public void setFieldMask( String fieldMask )", "class_method_signature": "DataElement.setFieldMask( String fieldMask )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElement.java"}, "focal_method": {"identifier": "getCategoryCombos", "parameters": "()", "modifiers": "public", "return": "Set<CategoryCombo>", "body": "public Set<CategoryCombo> getCategoryCombos()\n    {\n        return ImmutableSet.<CategoryCombo>builder()\n            .addAll( dataSetElements.stream()\n                .filter( DataSetElement::hasCategoryCombo )\n                .map( DataSetElement::getCategoryCombo )\n                .collect( Collectors.toSet() ) )\n            .add( categoryCombo ).build();\n    }", "signature": "Set<CategoryCombo> getCategoryCombos()", "full_signature": "public Set<CategoryCombo> getCategoryCombos()", "class_method_signature": "DataElement.getCategoryCombos()", "testcase": false, "constructor": false, "invocations": ["build", "add", "addAll", "builder", "collect", "map", "filter", "stream", "toSet"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}