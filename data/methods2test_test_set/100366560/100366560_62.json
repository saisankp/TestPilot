{"test_class": {"identifier": "StringToBooleanConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "StringToBooleanConverter converter = new StringToBooleanConverter();", "modifier": "", "type": "StringToBooleanConverter", "declarator": "converter = new StringToBooleanConverter()", "var_name": "converter"}], "file": "beanmother-core/src/test/java/io/beanmother/core/converter/std/StringToBooleanConverterTest.java"}, "test_case": {"identifier": "testRaiseException", "parameters": "()", "modifiers": "@Test(expected = ConverterException.class) public", "return": "void", "body": "@Test(expected = ConverterException.class)\n    public void testRaiseException() {\n        converter.convert(\"abc\");\n    }", "signature": "void testRaiseException()", "full_signature": "@Test(expected = ConverterException.class) public void testRaiseException()", "class_method_signature": "StringToBooleanConverterTest.testRaiseException()", "testcase": true, "constructor": false, "invocations": ["convert"]}, "focal_class": {"identifier": "StringToBooleanConverter", "superclass": "extends AbstractGenericConverter<String, Boolean>", "interfaces": "", "fields": [{"original_string": "private final static Set<String> TRUE_STRING;", "modifier": "private final static", "type": "Set<String>", "declarator": "TRUE_STRING", "var_name": "TRUE_STRING"}, {"original_string": "private final static Set<String> FALSE_STRING;", "modifier": "private final static", "type": "Set<String>", "declarator": "FALSE_STRING", "var_name": "FALSE_STRING"}], "methods": [{"identifier": "convert", "parameters": "(String source)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean convert(String source)", "full_signature": "@Override public Boolean convert(String source)", "class_method_signature": "StringToBooleanConverter.convert(String source)", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/converter/std/StringToBooleanConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String source)", "modifiers": "@Override public", "return": "Boolean", "body": "@Override\n    public Boolean convert(String source) {\n        String normalize = source.trim().toLowerCase();\n        if (TRUE_STRING.contains(normalize)) {\n            return true;\n        } else if (FALSE_STRING.contains(normalize)) {\n            return false;\n        } else {\n            throw new ConverterException(source, getTargetTypeToken().getRawType());\n        }\n    }", "signature": "Boolean convert(String source)", "full_signature": "@Override public Boolean convert(String source)", "class_method_signature": "StringToBooleanConverter.convert(String source)", "testcase": false, "constructor": false, "invocations": ["toLowerCase", "trim", "contains", "contains", "getRawType", "getTargetTypeToken"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}