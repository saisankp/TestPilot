{"test_class": {"identifier": "DatamodelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DataObjectFactory factory = new DataObjectFactoryImpl();", "modifier": "private final", "type": "DataObjectFactory", "declarator": "factory = new DataObjectFactoryImpl()", "var_name": "factory"}], "file": "wdtk-datamodel/src/test/java/org/wikidata/wdtk/datamodel/helpers/DatamodelTest.java"}, "test_case": {"identifier": "testGetItemId", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n\tpublic final void testGetItemId() {\n\t\tItemIdValue o1 = Datamodel.makeItemIdValue(\"Q42\", \"foo\");\n\t\tItemIdValue o2 = factory.getItemIdValue(\"Q42\", \"foo\");\n\t\tassertEquals(o1, o2);\n\t}", "signature": "void testGetItemId()", "full_signature": "@Test public final void testGetItemId()", "class_method_signature": "DatamodelTest.testGetItemId()", "testcase": true, "constructor": false, "invocations": ["makeItemIdValue", "getItemIdValue", "assertEquals"]}, "focal_class": {"identifier": "Datamodel", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final public String SITE_WIKIDATA = \"http://www.wikidata.org/entity/\";", "modifier": "static final public", "type": "String", "declarator": "SITE_WIKIDATA = \"http://www.wikidata.org/entity/\"", "var_name": "SITE_WIKIDATA"}, {"original_string": "static final public String SITE_WIKIMEDIA_COMMONS = \"http://commons.wikimedia.org/entity/\";", "modifier": "static final public", "type": "String", "declarator": "SITE_WIKIMEDIA_COMMONS = \"http://commons.wikimedia.org/entity/\"", "var_name": "SITE_WIKIMEDIA_COMMONS"}, {"original_string": "private final static DataObjectFactory factory = new DataObjectFactoryImpl();", "modifier": "private final static", "type": "DataObjectFactory", "declarator": "factory = new DataObjectFactoryImpl()", "var_name": "factory"}], "methods": [{"identifier": "makeItemIdValue", "parameters": "(String id, String siteIri)", "modifiers": "public static", "return": "ItemIdValue", "signature": "ItemIdValue makeItemIdValue(String id, String siteIri)", "full_signature": "public static ItemIdValue makeItemIdValue(String id, String siteIri)", "class_method_signature": "Datamodel.makeItemIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "makeWikidataItemIdValue", "parameters": "(String id)", "modifiers": "public static", "return": "ItemIdValue", "signature": "ItemIdValue makeWikidataItemIdValue(String id)", "full_signature": "public static ItemIdValue makeWikidataItemIdValue(String id)", "class_method_signature": "Datamodel.makeWikidataItemIdValue(String id)", "testcase": false, "constructor": false}, {"identifier": "makePropertyIdValue", "parameters": "(String id, String siteIri)", "modifiers": "public static", "return": "PropertyIdValue", "signature": "PropertyIdValue makePropertyIdValue(String id, String siteIri)", "full_signature": "public static PropertyIdValue makePropertyIdValue(String id, String siteIri)", "class_method_signature": "Datamodel.makePropertyIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "makeWikidataPropertyIdValue", "parameters": "(String id)", "modifiers": "public static", "return": "PropertyIdValue", "signature": "PropertyIdValue makeWikidataPropertyIdValue(String id)", "full_signature": "public static PropertyIdValue makeWikidataPropertyIdValue(String id)", "class_method_signature": "Datamodel.makeWikidataPropertyIdValue(String id)", "testcase": false, "constructor": false}, {"identifier": "makeLexemeIdValue", "parameters": "(String id, String siteIri)", "modifiers": "public static", "return": "LexemeIdValue", "signature": "LexemeIdValue makeLexemeIdValue(String id, String siteIri)", "full_signature": "public static LexemeIdValue makeLexemeIdValue(String id, String siteIri)", "class_method_signature": "Datamodel.makeLexemeIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "makeWikidataLexemeIdValue", "parameters": "(String id)", "modifiers": "public static", "return": "LexemeIdValue", "signature": "LexemeIdValue makeWikidataLexemeIdValue(String id)", "full_signature": "public static LexemeIdValue makeWikidataLexemeIdValue(String id)", "class_method_signature": "Datamodel.makeWikidataLexemeIdValue(String id)", "testcase": false, "constructor": false}, {"identifier": "makeFormIdValue", "parameters": "(String id, String siteIri)", "modifiers": "public static", "return": "FormIdValue", "signature": "FormIdValue makeFormIdValue(String id, String siteIri)", "full_signature": "public static FormIdValue makeFormIdValue(String id, String siteIri)", "class_method_signature": "Datamodel.makeFormIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "makeWikidataFormIdValue", "parameters": "(String id)", "modifiers": "public static", "return": "FormIdValue", "signature": "FormIdValue makeWikidataFormIdValue(String id)", "full_signature": "public static FormIdValue makeWikidataFormIdValue(String id)", "class_method_signature": "Datamodel.makeWikidataFormIdValue(String id)", "testcase": false, "constructor": false}, {"identifier": "makeSenseIdValue", "parameters": "(String id, String siteIri)", "modifiers": "public static", "return": "SenseIdValue", "signature": "SenseIdValue makeSenseIdValue(String id, String siteIri)", "full_signature": "public static SenseIdValue makeSenseIdValue(String id, String siteIri)", "class_method_signature": "Datamodel.makeSenseIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "makeWikidataSenseIdValue", "parameters": "(String id)", "modifiers": "public static", "return": "SenseIdValue", "signature": "SenseIdValue makeWikidataSenseIdValue(String id)", "full_signature": "public static SenseIdValue makeWikidataSenseIdValue(String id)", "class_method_signature": "Datamodel.makeWikidataSenseIdValue(String id)", "testcase": false, "constructor": false}, {"identifier": "makeMediaInfoIdValue", "parameters": "(String id, String siteIri)", "modifiers": "public static", "return": "MediaInfoIdValue", "signature": "MediaInfoIdValue makeMediaInfoIdValue(String id, String siteIri)", "full_signature": "public static MediaInfoIdValue makeMediaInfoIdValue(String id, String siteIri)", "class_method_signature": "Datamodel.makeMediaInfoIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "makeWikimediaCommonsMediaInfoIdValue", "parameters": "(String id)", "modifiers": "public static", "return": "MediaInfoIdValue", "signature": "MediaInfoIdValue makeWikimediaCommonsMediaInfoIdValue(String id)", "full_signature": "public static MediaInfoIdValue makeWikimediaCommonsMediaInfoIdValue(String id)", "class_method_signature": "Datamodel.makeWikimediaCommonsMediaInfoIdValue(String id)", "testcase": false, "constructor": false}, {"identifier": "makeDatatypeIdValue", "parameters": "(String id)", "modifiers": "public static", "return": "DatatypeIdValue", "signature": "DatatypeIdValue makeDatatypeIdValue(String id)", "full_signature": "public static DatatypeIdValue makeDatatypeIdValue(String id)", "class_method_signature": "Datamodel.makeDatatypeIdValue(String id)", "testcase": false, "constructor": false}, {"identifier": "makeTimeValue", "parameters": "(long year, byte month, byte day,\n\t\t\tbyte hour, byte minute, byte second, byte precision,\n\t\t\tint beforeTolerance, int afterTolerance, int timezoneOffset,\n\t\t\tString calendarModel)", "modifiers": "public static", "return": "TimeValue", "signature": "TimeValue makeTimeValue(long year, byte month, byte day,\n\t\t\tbyte hour, byte minute, byte second, byte precision,\n\t\t\tint beforeTolerance, int afterTolerance, int timezoneOffset,\n\t\t\tString calendarModel)", "full_signature": "public static TimeValue makeTimeValue(long year, byte month, byte day,\n\t\t\tbyte hour, byte minute, byte second, byte precision,\n\t\t\tint beforeTolerance, int afterTolerance, int timezoneOffset,\n\t\t\tString calendarModel)", "class_method_signature": "Datamodel.makeTimeValue(long year, byte month, byte day,\n\t\t\tbyte hour, byte minute, byte second, byte precision,\n\t\t\tint beforeTolerance, int afterTolerance, int timezoneOffset,\n\t\t\tString calendarModel)", "testcase": false, "constructor": false}, {"identifier": "makeTimeValue", "parameters": "(long year, byte month, byte day,\n\t\t\tbyte hour, byte minute, byte second, int timezoneOffset,\n\t\t\tString calendarModel)", "modifiers": "public static", "return": "TimeValue", "signature": "TimeValue makeTimeValue(long year, byte month, byte day,\n\t\t\tbyte hour, byte minute, byte second, int timezoneOffset,\n\t\t\tString calendarModel)", "full_signature": "public static TimeValue makeTimeValue(long year, byte month, byte day,\n\t\t\tbyte hour, byte minute, byte second, int timezoneOffset,\n\t\t\tString calendarModel)", "class_method_signature": "Datamodel.makeTimeValue(long year, byte month, byte day,\n\t\t\tbyte hour, byte minute, byte second, int timezoneOffset,\n\t\t\tString calendarModel)", "testcase": false, "constructor": false}, {"identifier": "makeTimeValue", "parameters": "(long year, byte month, byte day,\n\t\t\tString calendarModel)", "modifiers": "public static", "return": "TimeValue", "signature": "TimeValue makeTimeValue(long year, byte month, byte day,\n\t\t\tString calendarModel)", "full_signature": "public static TimeValue makeTimeValue(long year, byte month, byte day,\n\t\t\tString calendarModel)", "class_method_signature": "Datamodel.makeTimeValue(long year, byte month, byte day,\n\t\t\tString calendarModel)", "testcase": false, "constructor": false}, {"identifier": "makeGlobeCoordinatesValue", "parameters": "(\n\t\t\tdouble latitude, double longitude, double precision, String globeIri)", "modifiers": "public static", "return": "GlobeCoordinatesValue", "signature": "GlobeCoordinatesValue makeGlobeCoordinatesValue(\n\t\t\tdouble latitude, double longitude, double precision, String globeIri)", "full_signature": "public static GlobeCoordinatesValue makeGlobeCoordinatesValue(\n\t\t\tdouble latitude, double longitude, double precision, String globeIri)", "class_method_signature": "Datamodel.makeGlobeCoordinatesValue(\n\t\t\tdouble latitude, double longitude, double precision, String globeIri)", "testcase": false, "constructor": false}, {"identifier": "makeStringValue", "parameters": "(String string)", "modifiers": "public static", "return": "StringValue", "signature": "StringValue makeStringValue(String string)", "full_signature": "public static StringValue makeStringValue(String string)", "class_method_signature": "Datamodel.makeStringValue(String string)", "testcase": false, "constructor": false}, {"identifier": "makeMonolingualTextValue", "parameters": "(String text,\n\t\t\tString languageCode)", "modifiers": "public static", "return": "MonolingualTextValue", "signature": "MonolingualTextValue makeMonolingualTextValue(String text,\n\t\t\tString languageCode)", "full_signature": "public static MonolingualTextValue makeMonolingualTextValue(String text,\n\t\t\tString languageCode)", "class_method_signature": "Datamodel.makeMonolingualTextValue(String text,\n\t\t\tString languageCode)", "testcase": false, "constructor": false}, {"identifier": "makeQuantityValue", "parameters": "(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, String unit)", "modifiers": "@Deprecated public static", "return": "QuantityValue", "signature": "QuantityValue makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, String unit)", "full_signature": "@Deprecated public static QuantityValue makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, String unit)", "class_method_signature": "Datamodel.makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, String unit)", "testcase": false, "constructor": false}, {"identifier": "makeQuantityValue", "parameters": "(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, ItemIdValue unit)", "modifiers": "public static", "return": "QuantityValue", "signature": "QuantityValue makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, ItemIdValue unit)", "full_signature": "public static QuantityValue makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, ItemIdValue unit)", "class_method_signature": "Datamodel.makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, ItemIdValue unit)", "testcase": false, "constructor": false}, {"identifier": "makeQuantityValue", "parameters": "(BigDecimal numericValue, String unit)", "modifiers": "@Deprecated public static", "return": "QuantityValue", "signature": "QuantityValue makeQuantityValue(BigDecimal numericValue, String unit)", "full_signature": "@Deprecated public static QuantityValue makeQuantityValue(BigDecimal numericValue, String unit)", "class_method_signature": "Datamodel.makeQuantityValue(BigDecimal numericValue, String unit)", "testcase": false, "constructor": false}, {"identifier": "makeQuantityValue", "parameters": "(BigDecimal numericValue, ItemIdValue unit)", "modifiers": "public static", "return": "QuantityValue", "signature": "QuantityValue makeQuantityValue(BigDecimal numericValue, ItemIdValue unit)", "full_signature": "public static QuantityValue makeQuantityValue(BigDecimal numericValue, ItemIdValue unit)", "class_method_signature": "Datamodel.makeQuantityValue(BigDecimal numericValue, ItemIdValue unit)", "testcase": false, "constructor": false}, {"identifier": "makeQuantityValue", "parameters": "(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound)", "modifiers": "public static", "return": "QuantityValue", "signature": "QuantityValue makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound)", "full_signature": "public static QuantityValue makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound)", "class_method_signature": "Datamodel.makeQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound)", "testcase": false, "constructor": false}, {"identifier": "makeQuantityValue", "parameters": "(BigDecimal numericValue)", "modifiers": "public static", "return": "QuantityValue", "signature": "QuantityValue makeQuantityValue(BigDecimal numericValue)", "full_signature": "public static QuantityValue makeQuantityValue(BigDecimal numericValue)", "class_method_signature": "Datamodel.makeQuantityValue(BigDecimal numericValue)", "testcase": false, "constructor": false}, {"identifier": "makeQuantityValue", "parameters": "(long numericValue,\n\t\t\tlong lowerBound, long upperBound)", "modifiers": "public static", "return": "QuantityValue", "signature": "QuantityValue makeQuantityValue(long numericValue,\n\t\t\tlong lowerBound, long upperBound)", "full_signature": "public static QuantityValue makeQuantityValue(long numericValue,\n\t\t\tlong lowerBound, long upperBound)", "class_method_signature": "Datamodel.makeQuantityValue(long numericValue,\n\t\t\tlong lowerBound, long upperBound)", "testcase": false, "constructor": false}, {"identifier": "makeValueSnak", "parameters": "(PropertyIdValue propertyId,\n\t\t\tValue value)", "modifiers": "public static", "return": "ValueSnak", "signature": "ValueSnak makeValueSnak(PropertyIdValue propertyId,\n\t\t\tValue value)", "full_signature": "public static ValueSnak makeValueSnak(PropertyIdValue propertyId,\n\t\t\tValue value)", "class_method_signature": "Datamodel.makeValueSnak(PropertyIdValue propertyId,\n\t\t\tValue value)", "testcase": false, "constructor": false}, {"identifier": "makeSomeValueSnak", "parameters": "(PropertyIdValue propertyId)", "modifiers": "public static", "return": "SomeValueSnak", "signature": "SomeValueSnak makeSomeValueSnak(PropertyIdValue propertyId)", "full_signature": "public static SomeValueSnak makeSomeValueSnak(PropertyIdValue propertyId)", "class_method_signature": "Datamodel.makeSomeValueSnak(PropertyIdValue propertyId)", "testcase": false, "constructor": false}, {"identifier": "makeNoValueSnak", "parameters": "(PropertyIdValue propertyId)", "modifiers": "public static", "return": "NoValueSnak", "signature": "NoValueSnak makeNoValueSnak(PropertyIdValue propertyId)", "full_signature": "public static NoValueSnak makeNoValueSnak(PropertyIdValue propertyId)", "class_method_signature": "Datamodel.makeNoValueSnak(PropertyIdValue propertyId)", "testcase": false, "constructor": false}, {"identifier": "makeSnakGroup", "parameters": "(List<? extends Snak> snaks)", "modifiers": "public static", "return": "SnakGroup", "signature": "SnakGroup makeSnakGroup(List<? extends Snak> snaks)", "full_signature": "public static SnakGroup makeSnakGroup(List<? extends Snak> snaks)", "class_method_signature": "Datamodel.makeSnakGroup(List<? extends Snak> snaks)", "testcase": false, "constructor": false}, {"identifier": "makeClaim", "parameters": "(EntityIdValue subject, Snak mainSnak,\n\t\t\tList<SnakGroup> qualifiers)", "modifiers": "public static", "return": "Claim", "signature": "Claim makeClaim(EntityIdValue subject, Snak mainSnak,\n\t\t\tList<SnakGroup> qualifiers)", "full_signature": "public static Claim makeClaim(EntityIdValue subject, Snak mainSnak,\n\t\t\tList<SnakGroup> qualifiers)", "class_method_signature": "Datamodel.makeClaim(EntityIdValue subject, Snak mainSnak,\n\t\t\tList<SnakGroup> qualifiers)", "testcase": false, "constructor": false}, {"identifier": "makeReference", "parameters": "(List<SnakGroup> snakGroups)", "modifiers": "public static", "return": "Reference", "signature": "Reference makeReference(List<SnakGroup> snakGroups)", "full_signature": "public static Reference makeReference(List<SnakGroup> snakGroups)", "class_method_signature": "Datamodel.makeReference(List<SnakGroup> snakGroups)", "testcase": false, "constructor": false}, {"identifier": "makeStatement", "parameters": "(EntityIdValue subject, Snak mainSnak,\n\t\t\t\t\t\t\t\t\t\t  List<SnakGroup> qualifiers, List<Reference> references,\n\t\t\t\t\t\t\t\t\t\t  StatementRank rank, String statementId)", "modifiers": "public static", "return": "Statement", "signature": "Statement makeStatement(EntityIdValue subject, Snak mainSnak,\n\t\t\t\t\t\t\t\t\t\t  List<SnakGroup> qualifiers, List<Reference> references,\n\t\t\t\t\t\t\t\t\t\t  StatementRank rank, String statementId)", "full_signature": "public static Statement makeStatement(EntityIdValue subject, Snak mainSnak,\n\t\t\t\t\t\t\t\t\t\t  List<SnakGroup> qualifiers, List<Reference> references,\n\t\t\t\t\t\t\t\t\t\t  StatementRank rank, String statementId)", "class_method_signature": "Datamodel.makeStatement(EntityIdValue subject, Snak mainSnak,\n\t\t\t\t\t\t\t\t\t\t  List<SnakGroup> qualifiers, List<Reference> references,\n\t\t\t\t\t\t\t\t\t\t  StatementRank rank, String statementId)", "testcase": false, "constructor": false}, {"identifier": "makeStatement", "parameters": "(Claim claim,\n\t\t\tList<Reference> references, StatementRank rank,\n\t\t\tString statementId)", "modifiers": "public static", "return": "Statement", "signature": "Statement makeStatement(Claim claim,\n\t\t\tList<Reference> references, StatementRank rank,\n\t\t\tString statementId)", "full_signature": "public static Statement makeStatement(Claim claim,\n\t\t\tList<Reference> references, StatementRank rank,\n\t\t\tString statementId)", "class_method_signature": "Datamodel.makeStatement(Claim claim,\n\t\t\tList<Reference> references, StatementRank rank,\n\t\t\tString statementId)", "testcase": false, "constructor": false}, {"identifier": "makeStatementGroup", "parameters": "(List<Statement> statements)", "modifiers": "public static", "return": "StatementGroup", "signature": "StatementGroup makeStatementGroup(List<Statement> statements)", "full_signature": "public static StatementGroup makeStatementGroup(List<Statement> statements)", "class_method_signature": "Datamodel.makeStatementGroup(List<Statement> statements)", "testcase": false, "constructor": false}, {"identifier": "makeSiteLink", "parameters": "(String title, String siteKey,\n\t\t\tList<ItemIdValue> badges)", "modifiers": "public static", "return": "SiteLink", "signature": "SiteLink makeSiteLink(String title, String siteKey,\n\t\t\tList<ItemIdValue> badges)", "full_signature": "public static SiteLink makeSiteLink(String title, String siteKey,\n\t\t\tList<ItemIdValue> badges)", "class_method_signature": "Datamodel.makeSiteLink(String title, String siteKey,\n\t\t\tList<ItemIdValue> badges)", "testcase": false, "constructor": false}, {"identifier": "makeSiteLink", "parameters": "(String title, String siteKey)", "modifiers": "public static", "return": "SiteLink", "signature": "SiteLink makeSiteLink(String title, String siteKey)", "full_signature": "public static SiteLink makeSiteLink(String title, String siteKey)", "class_method_signature": "Datamodel.makeSiteLink(String title, String siteKey)", "testcase": false, "constructor": false}, {"identifier": "makePropertyDocument", "parameters": "(PropertyIdValue propertyId, DatatypeIdValue datatypeId)", "modifiers": "public static", "return": "PropertyDocument", "signature": "PropertyDocument makePropertyDocument(PropertyIdValue propertyId, DatatypeIdValue datatypeId)", "full_signature": "public static PropertyDocument makePropertyDocument(PropertyIdValue propertyId, DatatypeIdValue datatypeId)", "class_method_signature": "Datamodel.makePropertyDocument(PropertyIdValue propertyId, DatatypeIdValue datatypeId)", "testcase": false, "constructor": false}, {"identifier": "makePropertyDocument", "parameters": "(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases, DatatypeIdValue datatypeId)", "modifiers": "@Deprecated public static", "return": "PropertyDocument", "signature": "PropertyDocument makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases, DatatypeIdValue datatypeId)", "full_signature": "@Deprecated public static PropertyDocument makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases, DatatypeIdValue datatypeId)", "class_method_signature": "Datamodel.makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases, DatatypeIdValue datatypeId)", "testcase": false, "constructor": false}, {"identifier": "makePropertyDocument", "parameters": "(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId)", "modifiers": "public static", "return": "PropertyDocument", "signature": "PropertyDocument makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId)", "full_signature": "public static PropertyDocument makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId)", "class_method_signature": "Datamodel.makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId)", "testcase": false, "constructor": false}, {"identifier": "makePropertyDocument", "parameters": "(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "modifiers": "public static", "return": "PropertyDocument", "signature": "PropertyDocument makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "full_signature": "public static PropertyDocument makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "class_method_signature": "Datamodel.makePropertyDocument(\n\t\t\tPropertyIdValue propertyId, List<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "testcase": false, "constructor": false}, {"identifier": "makeItemDocument", "parameters": "(ItemIdValue itemIdValue)", "modifiers": "public static", "return": "ItemDocument", "signature": "ItemDocument makeItemDocument(ItemIdValue itemIdValue)", "full_signature": "public static ItemDocument makeItemDocument(ItemIdValue itemIdValue)", "class_method_signature": "Datamodel.makeItemDocument(ItemIdValue itemIdValue)", "testcase": false, "constructor": false}, {"identifier": "makeItemDocument", "parameters": "(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks)", "modifiers": "public static", "return": "ItemDocument", "signature": "ItemDocument makeItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks)", "full_signature": "public static ItemDocument makeItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks)", "class_method_signature": "Datamodel.makeItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks)", "testcase": false, "constructor": false}, {"identifier": "makeItemDocument", "parameters": "(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks, long revisionId)", "modifiers": "public static", "return": "ItemDocument", "signature": "ItemDocument makeItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks, long revisionId)", "full_signature": "public static ItemDocument makeItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks, long revisionId)", "class_method_signature": "Datamodel.makeItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks, long revisionId)", "testcase": false, "constructor": false}, {"identifier": "makeLexemeDocument", "parameters": "(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory, ItemIdValue language, List<MonolingualTextValue> lemmas)", "modifiers": "public static", "return": "LexemeDocument", "signature": "LexemeDocument makeLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory, ItemIdValue language, List<MonolingualTextValue> lemmas)", "full_signature": "public static LexemeDocument makeLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory, ItemIdValue language, List<MonolingualTextValue> lemmas)", "class_method_signature": "Datamodel.makeLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory, ItemIdValue language, List<MonolingualTextValue> lemmas)", "testcase": false, "constructor": false}, {"identifier": "makeLexemeDocument", "parameters": "(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory,\n\t\t\tItemIdValue language,\n\t\t\tList<MonolingualTextValue> lemmas,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tList<FormDocument> forms,\n\t\t\tList<SenseDocument> senses)", "modifiers": "public static", "return": "LexemeDocument", "signature": "LexemeDocument makeLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory,\n\t\t\tItemIdValue language,\n\t\t\tList<MonolingualTextValue> lemmas,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tList<FormDocument> forms,\n\t\t\tList<SenseDocument> senses)", "full_signature": "public static LexemeDocument makeLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory,\n\t\t\tItemIdValue language,\n\t\t\tList<MonolingualTextValue> lemmas,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tList<FormDocument> forms,\n\t\t\tList<SenseDocument> senses)", "class_method_signature": "Datamodel.makeLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory,\n\t\t\tItemIdValue language,\n\t\t\tList<MonolingualTextValue> lemmas,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tList<FormDocument> forms,\n\t\t\tList<SenseDocument> senses)", "testcase": false, "constructor": false}, {"identifier": "makeFormDocument", "parameters": "(FormIdValue formIdValue,\n\t\t\tList<MonolingualTextValue> representations,\n\t\t\tList<ItemIdValue> grammaticalFeatures,\n\t\t\tList<StatementGroup> statementGroups)", "modifiers": "public static", "return": "FormDocument", "signature": "FormDocument makeFormDocument(FormIdValue formIdValue,\n\t\t\tList<MonolingualTextValue> representations,\n\t\t\tList<ItemIdValue> grammaticalFeatures,\n\t\t\tList<StatementGroup> statementGroups)", "full_signature": "public static FormDocument makeFormDocument(FormIdValue formIdValue,\n\t\t\tList<MonolingualTextValue> representations,\n\t\t\tList<ItemIdValue> grammaticalFeatures,\n\t\t\tList<StatementGroup> statementGroups)", "class_method_signature": "Datamodel.makeFormDocument(FormIdValue formIdValue,\n\t\t\tList<MonolingualTextValue> representations,\n\t\t\tList<ItemIdValue> grammaticalFeatures,\n\t\t\tList<StatementGroup> statementGroups)", "testcase": false, "constructor": false}, {"identifier": "makeSenseDocument", "parameters": "(SenseIdValue senseIdValue,\n\t\t\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> glosses,\n\t\t\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups)", "modifiers": "public static", "return": "SenseDocument", "signature": "SenseDocument makeSenseDocument(SenseIdValue senseIdValue,\n\t\t\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> glosses,\n\t\t\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups)", "full_signature": "public static SenseDocument makeSenseDocument(SenseIdValue senseIdValue,\n\t\t\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> glosses,\n\t\t\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups)", "class_method_signature": "Datamodel.makeSenseDocument(SenseIdValue senseIdValue,\n\t\t\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> glosses,\n\t\t\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups)", "testcase": false, "constructor": false}, {"identifier": "makeMediaInfoDocument", "parameters": "(MediaInfoIdValue mediaInfoIdValue)", "modifiers": "public static", "return": "MediaInfoDocument", "signature": "MediaInfoDocument makeMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue)", "full_signature": "public static MediaInfoDocument makeMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue)", "class_method_signature": "Datamodel.makeMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue)", "testcase": false, "constructor": false}, {"identifier": "makeMediaInfoDocument", "parameters": "(MediaInfoIdValue mediaInfoIdValue,\n\t\t\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> labels,\n\t\t\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups)", "modifiers": "public static", "return": "MediaInfoDocument", "signature": "MediaInfoDocument makeMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue,\n\t\t\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> labels,\n\t\t\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups)", "full_signature": "public static MediaInfoDocument makeMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue,\n\t\t\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> labels,\n\t\t\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups)", "class_method_signature": "Datamodel.makeMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue,\n\t\t\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> labels,\n\t\t\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups)", "testcase": false, "constructor": false}], "file": "wdtk-datamodel/src/main/java/org/wikidata/wdtk/datamodel/helpers/Datamodel.java"}, "focal_method": {"identifier": "makeItemIdValue", "parameters": "(String id, String siteIri)", "modifiers": "public static", "return": "ItemIdValue", "body": "public static ItemIdValue makeItemIdValue(String id, String siteIri) {\n\t\treturn factory.getItemIdValue(id, siteIri);\n\t}", "signature": "ItemIdValue makeItemIdValue(String id, String siteIri)", "full_signature": "public static ItemIdValue makeItemIdValue(String id, String siteIri)", "class_method_signature": "Datamodel.makeItemIdValue(String id, String siteIri)", "testcase": false, "constructor": false, "invocations": ["getItemIdValue"]}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}