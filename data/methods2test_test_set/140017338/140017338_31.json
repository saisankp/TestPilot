{"test_class": {"identifier": "SW360ReleaseTest", "superclass": "extends SW360ResourcesTestUtils<SW360Release>", "interfaces": "", "fields": [], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/rest/resource/releases/SW360ReleaseTest.java"}, "test_case": {"identifier": "testReleaseMergeWithBothHaveDifferentAttachment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReleaseMergeWithBothHaveDifferentAttachment() {\n        SW360Release sw360Release1 = new SW360Release();\n        SW360Release sw360Release2 = new SW360Release();\n\n        final SW360SparseAttachment sw360SparseAttachment1 = makeSparseAttachment(\"test_1\");\n\n        sw360Release1.getEmbedded().setAttachments(\n                Collections.singleton(\n                        sw360SparseAttachment1));\n\n        final SW360SparseAttachment sw360SparseAttachment2 = makeSparseAttachment(\"test_2\");\n\n        sw360Release2.getEmbedded().setAttachments(\n                Collections.singleton(\n                        sw360SparseAttachment2));\n\n        sw360Release1.mergeWith(sw360Release2);\n\n        assertThat(sw360Release1.getEmbedded().getAttachments()).hasSize(2);\n    }", "signature": "void testReleaseMergeWithBothHaveDifferentAttachment()", "full_signature": "@Test public void testReleaseMergeWithBothHaveDifferentAttachment()", "class_method_signature": "SW360ReleaseTest.testReleaseMergeWithBothHaveDifferentAttachment()", "testcase": true, "constructor": false, "invocations": ["makeSparseAttachment", "setAttachments", "getEmbedded", "singleton", "makeSparseAttachment", "setAttachments", "getEmbedded", "singleton", "mergeWith", "hasSize", "assertThat", "getAttachments", "getEmbedded"]}, "focal_class": {"identifier": "SW360Release", "superclass": "extends SW360HalResource<SW360ReleaseLinkObjects, SW360ReleaseEmbedded>", "interfaces": "", "fields": [{"original_string": "private static final String OVERRIDDEN_LICENSES_KEY = \"overridden_license\";", "modifier": "private static final", "type": "String", "declarator": "OVERRIDDEN_LICENSES_KEY = \"overridden_license\"", "var_name": "OVERRIDDEN_LICENSES_KEY"}, {"original_string": "private static final String DECLARED_LICENSE_KEY = \"declared_license\";", "modifier": "private static final", "type": "String", "declarator": "DECLARED_LICENSE_KEY = \"declared_license\"", "var_name": "DECLARED_LICENSE_KEY"}, {"original_string": "private static final String OBSERVED_LICENSES_KEY = \"observed_license\";", "modifier": "private static final", "type": "String", "declarator": "OBSERVED_LICENSES_KEY = \"observed_license\"", "var_name": "OBSERVED_LICENSES_KEY"}, {"original_string": "private static final String RELEASE_TAG_URL_KEY = \"release_tag\";", "modifier": "private static final", "type": "String", "declarator": "RELEASE_TAG_URL_KEY = \"release_tag\"", "var_name": "RELEASE_TAG_URL_KEY"}, {"original_string": "private static final String SOFTWARE_HERITAGE_ID_KEY = \"swh\";", "modifier": "private static final", "type": "String", "declarator": "SOFTWARE_HERITAGE_ID_KEY = \"swh\"", "var_name": "SOFTWARE_HERITAGE_ID_KEY"}, {"original_string": "private static final String HASHES_PREFIX = \"hash_\";", "modifier": "private static final", "type": "String", "declarator": "HASHES_PREFIX = \"hash_\"", "var_name": "HASHES_PREFIX"}, {"original_string": "private static final String CHANGESTATUS_KEY = \"change_status\";", "modifier": "private static final", "type": "String", "declarator": "CHANGESTATUS_KEY = \"change_status\"", "var_name": "CHANGESTATUS_KEY"}, {"original_string": "private static final String COPYRIGHTS_KEY = \"copyrights\";", "modifier": "private static final", "type": "String", "declarator": "COPYRIGHTS_KEY = \"copyrights\"", "var_name": "COPYRIGHTS_KEY"}, {"original_string": "private static final String CLEARINGSTATE_KEY = \"clearingState\";", "modifier": "private static final", "type": "String", "declarator": "CLEARINGSTATE_KEY = \"clearingState\"", "var_name": "CLEARINGSTATE_KEY"}, {"original_string": "private static final String HOMEPAGE_KEY = \"homepage\";", "modifier": "private static final", "type": "String", "declarator": "HOMEPAGE_KEY = \"homepage\"", "var_name": "HOMEPAGE_KEY"}, {"original_string": "@JsonIgnore\n    private boolean isProprietary;", "modifier": "@JsonIgnore\n    private", "type": "boolean", "declarator": "isProprietary", "var_name": "isProprietary"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private String createdOn;", "modifier": "private", "type": "String", "declarator": "createdOn", "var_name": "createdOn"}, {"original_string": "private String cpeId;", "modifier": "private", "type": "String", "declarator": "cpeId", "var_name": "cpeId"}, {"original_string": "private String downloadurl;", "modifier": "private", "type": "String", "declarator": "downloadurl", "var_name": "downloadurl"}, {"original_string": "private SW360ClearingState sw360ClearingState;", "modifier": "private", "type": "SW360ClearingState", "declarator": "sw360ClearingState", "var_name": "sw360ClearingState"}, {"original_string": "private final Map<String, String> externalIds = new HashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "externalIds = new HashMap<>()", "var_name": "externalIds"}, {"original_string": "@JsonSerialize\n    private final Map<String, String> additionalData = new HashMap<>();", "modifier": "@JsonSerialize\n    private final", "type": "Map<String, String>", "declarator": "additionalData = new HashMap<>()", "var_name": "additionalData"}], "methods": [{"identifier": "getComponentId", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "String", "signature": "String getComponentId()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public String getComponentId()", "class_method_signature": "SW360Release.getComponentId()", "testcase": false, "constructor": false}, {"identifier": "setComponentId", "parameters": "(String componentId)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setComponentId(String componentId)", "full_signature": "public SW360Release setComponentId(String componentId)", "class_method_signature": "SW360Release.setComponentId(String componentId)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "String", "signature": "String getName()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public String getName()", "class_method_signature": "SW360Release.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setName(String name)", "full_signature": "public SW360Release setName(String name)", "class_method_signature": "SW360Release.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "String", "signature": "String getVersion()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public String getVersion()", "class_method_signature": "SW360Release.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setVersion(String version)", "full_signature": "public SW360Release setVersion(String version)", "class_method_signature": "SW360Release.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getCreatedOn", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "String", "signature": "String getCreatedOn()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public String getCreatedOn()", "class_method_signature": "SW360Release.getCreatedOn()", "testcase": false, "constructor": false}, {"identifier": "setCreatedOn", "parameters": "(String createdOn)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setCreatedOn(String createdOn)", "full_signature": "public SW360Release setCreatedOn(String createdOn)", "class_method_signature": "SW360Release.setCreatedOn(String createdOn)", "testcase": false, "constructor": false}, {"identifier": "getCpeId", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "String", "signature": "String getCpeId()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public String getCpeId()", "class_method_signature": "SW360Release.getCpeId()", "testcase": false, "constructor": false}, {"identifier": "setCpeId", "parameters": "(String cpeId)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setCpeId(String cpeId)", "full_signature": "public SW360Release setCpeId(String cpeId)", "class_method_signature": "SW360Release.setCpeId(String cpeId)", "testcase": false, "constructor": false}, {"identifier": "isSetMainLicenseIds", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "boolean", "signature": "boolean isSetMainLicenseIds()", "full_signature": "@JsonIgnore public boolean isSetMainLicenseIds()", "class_method_signature": "SW360Release.isSetMainLicenseIds()", "testcase": false, "constructor": false}, {"identifier": "getMainLicenseIds", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "Set<String>", "signature": "Set<String> getMainLicenseIds()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public Set<String> getMainLicenseIds()", "class_method_signature": "SW360Release.getMainLicenseIds()", "testcase": false, "constructor": false}, {"identifier": "setMainLicenseIds", "parameters": "(Set<String> mainLicenseIds)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setMainLicenseIds(Set<String> mainLicenseIds)", "full_signature": "public SW360Release setMainLicenseIds(Set<String> mainLicenseIds)", "class_method_signature": "SW360Release.setMainLicenseIds(Set<String> mainLicenseIds)", "testcase": false, "constructor": false}, {"identifier": "getDownloadurl", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "String", "signature": "String getDownloadurl()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public String getDownloadurl()", "class_method_signature": "SW360Release.getDownloadurl()", "testcase": false, "constructor": false}, {"identifier": "setDownloadurl", "parameters": "(String downloadurl)", "modifiers": "public", "return": "void", "signature": "void setDownloadurl(String downloadurl)", "full_signature": "public void setDownloadurl(String downloadurl)", "class_method_signature": "SW360Release.setDownloadurl(String downloadurl)", "testcase": false, "constructor": false}, {"identifier": "getCoordinates", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "Map<String, String>", "signature": "Map<String, String> getCoordinates()", "full_signature": "@JsonIgnore public Map<String, String> getCoordinates()", "class_method_signature": "SW360Release.getCoordinates()", "testcase": false, "constructor": false}, {"identifier": "setCoordinates", "parameters": "(Map<String, String> coordinates)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setCoordinates(Map<String, String> coordinates)", "full_signature": "public SW360Release setCoordinates(Map<String, String> coordinates)", "class_method_signature": "SW360Release.setCoordinates(Map<String, String> coordinates)", "testcase": false, "constructor": false}, {"identifier": "isValidPkgUrl", "parameters": "(String purl)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidPkgUrl(String purl)", "full_signature": "private static boolean isValidPkgUrl(String purl)", "class_method_signature": "SW360Release.isValidPkgUrl(String purl)", "testcase": false, "constructor": false}, {"identifier": "getOverriddenLicense", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getOverriddenLicense()", "full_signature": "@JsonIgnore public String getOverriddenLicense()", "class_method_signature": "SW360Release.getOverriddenLicense()", "testcase": false, "constructor": false}, {"identifier": "setOverriddenLicense", "parameters": "(String overriddenLicense)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setOverriddenLicense(String overriddenLicense)", "full_signature": "public SW360Release setOverriddenLicense(String overriddenLicense)", "class_method_signature": "SW360Release.setOverriddenLicense(String overriddenLicense)", "testcase": false, "constructor": false}, {"identifier": "getDeclaredLicense", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getDeclaredLicense()", "full_signature": "@JsonIgnore public String getDeclaredLicense()", "class_method_signature": "SW360Release.getDeclaredLicense()", "testcase": false, "constructor": false}, {"identifier": "setDeclaredLicense", "parameters": "(String declaredLicense)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setDeclaredLicense(String declaredLicense)", "full_signature": "public SW360Release setDeclaredLicense(String declaredLicense)", "class_method_signature": "SW360Release.setDeclaredLicense(String declaredLicense)", "testcase": false, "constructor": false}, {"identifier": "getObservedLicense", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getObservedLicense()", "full_signature": "@JsonIgnore public String getObservedLicense()", "class_method_signature": "SW360Release.getObservedLicense()", "testcase": false, "constructor": false}, {"identifier": "setObservedLicense", "parameters": "(String observedLicense)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setObservedLicense(String observedLicense)", "full_signature": "public SW360Release setObservedLicense(String observedLicense)", "class_method_signature": "SW360Release.setObservedLicense(String observedLicense)", "testcase": false, "constructor": false}, {"identifier": "getReleaseTagUrl", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getReleaseTagUrl()", "full_signature": "@JsonIgnore public String getReleaseTagUrl()", "class_method_signature": "SW360Release.getReleaseTagUrl()", "testcase": false, "constructor": false}, {"identifier": "setReleaseTagUrl", "parameters": "(String releaseTagUrl)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setReleaseTagUrl(String releaseTagUrl)", "full_signature": "public SW360Release setReleaseTagUrl(String releaseTagUrl)", "class_method_signature": "SW360Release.setReleaseTagUrl(String releaseTagUrl)", "testcase": false, "constructor": false}, {"identifier": "getSoftwareHeritageId", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getSoftwareHeritageId()", "full_signature": "@JsonIgnore public String getSoftwareHeritageId()", "class_method_signature": "SW360Release.getSoftwareHeritageId()", "testcase": false, "constructor": false}, {"identifier": "setSoftwareHeritageId", "parameters": "(String softwareHeritageId)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setSoftwareHeritageId(String softwareHeritageId)", "full_signature": "public SW360Release setSoftwareHeritageId(String softwareHeritageId)", "class_method_signature": "SW360Release.setSoftwareHeritageId(String softwareHeritageId)", "testcase": false, "constructor": false}, {"identifier": "getHashes", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "Set<String>", "signature": "Set<String> getHashes()", "full_signature": "@JsonIgnore public Set<String> getHashes()", "class_method_signature": "SW360Release.getHashes()", "testcase": false, "constructor": false}, {"identifier": "dropAllHashes", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void dropAllHashes()", "full_signature": "private void dropAllHashes()", "class_method_signature": "SW360Release.dropAllHashes()", "testcase": false, "constructor": false}, {"identifier": "setHashes", "parameters": "(Set<String> hashes)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setHashes(Set<String> hashes)", "full_signature": "public SW360Release setHashes(Set<String> hashes)", "class_method_signature": "SW360Release.setHashes(Set<String> hashes)", "testcase": false, "constructor": false}, {"identifier": "getClearingState", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getClearingState()", "full_signature": "@JsonIgnore public String getClearingState()", "class_method_signature": "SW360Release.getClearingState()", "testcase": false, "constructor": false}, {"identifier": "setClearingState", "parameters": "(String clearingState)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setClearingState(String clearingState)", "full_signature": "public SW360Release setClearingState(String clearingState)", "class_method_signature": "SW360Release.setClearingState(String clearingState)", "testcase": false, "constructor": false}, {"identifier": "getSw360ClearingState", "parameters": "()", "modifiers": "@JsonProperty(\"clearingState\") public", "return": "SW360ClearingState", "signature": "SW360ClearingState getSw360ClearingState()", "full_signature": "@JsonProperty(\"clearingState\") public SW360ClearingState getSw360ClearingState()", "class_method_signature": "SW360Release.getSw360ClearingState()", "testcase": false, "constructor": false}, {"identifier": "setSw360ClearingState", "parameters": "(SW360ClearingState sw360ClearingState)", "modifiers": "public", "return": "void", "signature": "void setSw360ClearingState(SW360ClearingState sw360ClearingState)", "full_signature": "public void setSw360ClearingState(SW360ClearingState sw360ClearingState)", "class_method_signature": "SW360Release.setSw360ClearingState(SW360ClearingState sw360ClearingState)", "testcase": false, "constructor": false}, {"identifier": "getChangeStatus", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getChangeStatus()", "full_signature": "@JsonIgnore public String getChangeStatus()", "class_method_signature": "SW360Release.getChangeStatus()", "testcase": false, "constructor": false}, {"identifier": "setChangeStatus", "parameters": "(String changeStatus)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setChangeStatus(String changeStatus)", "full_signature": "public SW360Release setChangeStatus(String changeStatus)", "class_method_signature": "SW360Release.setChangeStatus(String changeStatus)", "testcase": false, "constructor": false}, {"identifier": "getCopyrights", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getCopyrights()", "full_signature": "@JsonIgnore public String getCopyrights()", "class_method_signature": "SW360Release.getCopyrights()", "testcase": false, "constructor": false}, {"identifier": "setCopyrights", "parameters": "(String copyrights)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setCopyrights(String copyrights)", "full_signature": "public SW360Release setCopyrights(String copyrights)", "class_method_signature": "SW360Release.setCopyrights(String copyrights)", "testcase": false, "constructor": false}, {"identifier": "isProprietary", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "boolean", "signature": "boolean isProprietary()", "full_signature": "@JsonIgnore public boolean isProprietary()", "class_method_signature": "SW360Release.isProprietary()", "testcase": false, "constructor": false}, {"identifier": "setProprietary", "parameters": "(boolean proprietary)", "modifiers": "@JsonIgnore public", "return": "SW360Release", "signature": "SW360Release setProprietary(boolean proprietary)", "full_signature": "@JsonIgnore public SW360Release setProprietary(boolean proprietary)", "class_method_signature": "SW360Release.setProprietary(boolean proprietary)", "testcase": false, "constructor": false}, {"identifier": "getHomepageUrl", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "String", "signature": "String getHomepageUrl()", "full_signature": "@JsonIgnore public String getHomepageUrl()", "class_method_signature": "SW360Release.getHomepageUrl()", "testcase": false, "constructor": false}, {"identifier": "setHomepageUrl", "parameters": "(String homepageUrl)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setHomepageUrl(String homepageUrl)", "full_signature": "public SW360Release setHomepageUrl(String homepageUrl)", "class_method_signature": "SW360Release.setHomepageUrl(String homepageUrl)", "testcase": false, "constructor": false}, {"identifier": "getExternalIds", "parameters": "()", "modifiers": "public", "return": "Map<String,String>", "signature": "Map<String,String> getExternalIds()", "full_signature": "public Map<String,String> getExternalIds()", "class_method_signature": "SW360Release.getExternalIds()", "testcase": false, "constructor": false}, {"identifier": "setExternalIds", "parameters": "(Map<String, String> externalIds)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setExternalIds(Map<String, String> externalIds)", "full_signature": "public SW360Release setExternalIds(Map<String, String> externalIds)", "class_method_signature": "SW360Release.setExternalIds(Map<String, String> externalIds)", "testcase": false, "constructor": false}, {"identifier": "setAdditionalData", "parameters": "(Map<String, String> additionalData)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release setAdditionalData(Map<String, String> additionalData)", "full_signature": "public SW360Release setAdditionalData(Map<String, String> additionalData)", "class_method_signature": "SW360Release.setAdditionalData(Map<String, String> additionalData)", "testcase": false, "constructor": false}, {"identifier": "shareIdentifier", "parameters": "(SW360Release releaseCompare)", "modifiers": "public", "return": "boolean", "signature": "boolean shareIdentifier(SW360Release releaseCompare)", "full_signature": "public boolean shareIdentifier(SW360Release releaseCompare)", "class_method_signature": "SW360Release.shareIdentifier(SW360Release releaseCompare)", "testcase": false, "constructor": false}, {"identifier": "mergeWith", "parameters": "(SW360Release releaseWithPrecedence)", "modifiers": "public", "return": "SW360Release", "signature": "SW360Release mergeWith(SW360Release releaseWithPrecedence)", "full_signature": "public SW360Release mergeWith(SW360Release releaseWithPrecedence)", "class_method_signature": "SW360Release.mergeWith(SW360Release releaseWithPrecedence)", "testcase": false, "constructor": false}, {"identifier": "mergeAttachments", "parameters": "(Set<SW360SparseAttachment> attachments, Set<SW360SparseAttachment> releaseWithPrecedenceAttachments)", "modifiers": "private", "return": "Set<SW360SparseAttachment>", "signature": "Set<SW360SparseAttachment> mergeAttachments(Set<SW360SparseAttachment> attachments, Set<SW360SparseAttachment> releaseWithPrecedenceAttachments)", "full_signature": "private Set<SW360SparseAttachment> mergeAttachments(Set<SW360SparseAttachment> attachments, Set<SW360SparseAttachment> releaseWithPrecedenceAttachments)", "class_method_signature": "SW360Release.mergeAttachments(Set<SW360SparseAttachment> attachments, Set<SW360SparseAttachment> releaseWithPrecedenceAttachments)", "testcase": false, "constructor": false}, {"identifier": "getDominantGetterFromVariableMergeOrNull", "parameters": "(SW360Release release, Function<SW360Release, T> getter)", "modifiers": "private", "return": "T", "signature": "T getDominantGetterFromVariableMergeOrNull(SW360Release release, Function<SW360Release, T> getter)", "full_signature": "private T getDominantGetterFromVariableMergeOrNull(SW360Release release, Function<SW360Release, T> getter)", "class_method_signature": "SW360Release.getDominantGetterFromVariableMergeOrNull(SW360Release release, Function<SW360Release, T> getter)", "testcase": false, "constructor": false}, {"identifier": "createEmptyLinks", "parameters": "()", "modifiers": "@Override public", "return": "SW360ReleaseLinkObjects", "signature": "SW360ReleaseLinkObjects createEmptyLinks()", "full_signature": "@Override public SW360ReleaseLinkObjects createEmptyLinks()", "class_method_signature": "SW360Release.createEmptyLinks()", "testcase": false, "constructor": false}, {"identifier": "createEmptyEmbedded", "parameters": "()", "modifiers": "@Override public", "return": "SW360ReleaseEmbedded", "signature": "SW360ReleaseEmbedded createEmptyEmbedded()", "full_signature": "@Override public SW360ReleaseEmbedded createEmptyEmbedded()", "class_method_signature": "SW360Release.createEmptyEmbedded()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "SW360Release.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SW360Release.hashCode()", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canEqual(Object o)", "full_signature": "@Override public boolean canEqual(Object o)", "class_method_signature": "SW360Release.canEqual(Object o)", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/rest/resource/releases/SW360Release.java"}, "focal_method": {"identifier": "mergeWith", "parameters": "(SW360Release releaseWithPrecedence)", "modifiers": "public", "return": "SW360Release", "body": "public SW360Release mergeWith(SW360Release releaseWithPrecedence) {\n        name = getDominantGetterFromVariableMergeOrNull(releaseWithPrecedence, SW360Release::getName);\n        version = getDominantGetterFromVariableMergeOrNull(releaseWithPrecedence, SW360Release::getVersion);\n        cpeId = getDominantGetterFromVariableMergeOrNull(releaseWithPrecedence, SW360Release::getCpeId);\n        downloadurl = getDominantGetterFromVariableMergeOrNull(releaseWithPrecedence, SW360Release::getDownloadurl);\n        if (releaseWithPrecedence.isSetMainLicenseIds()) {\n            setMainLicenseIds(releaseWithPrecedence.getMainLicenseIds());\n        }\n        Self releaseIdWithPrecedence = releaseWithPrecedence.getLinks().getSelf();\n        if (releaseIdWithPrecedence != null && !releaseIdWithPrecedence.getHref().isEmpty()) {\n            getLinks().setSelf(releaseIdWithPrecedence);\n        }\n        Self componentIdWithPrecedence = releaseWithPrecedence.getLinks().getSelfComponent();\n        if (componentIdWithPrecedence != null && !componentIdWithPrecedence.getHref().isEmpty()) {\n            getLinks().setSelfComponent(componentIdWithPrecedence);\n        }\n        final Set<SW360SparseAttachment> releaseWithPrecedenceAttachments = releaseWithPrecedence.getEmbedded().getAttachments();\n        if (!releaseWithPrecedenceAttachments.isEmpty()) {\n            if (getEmbedded().getAttachments().isEmpty()) {\n                getEmbedded().setAttachments(releaseWithPrecedenceAttachments);\n            } else {\n                getEmbedded().setAttachments(mergeAttachments(getEmbedded().getAttachments(), releaseWithPrecedenceAttachments));\n            }\n        }\n        externalIds.putAll(releaseWithPrecedence.externalIds);\n        additionalData.putAll(releaseWithPrecedence.additionalData);\n\n        return this;\n    }", "signature": "SW360Release mergeWith(SW360Release releaseWithPrecedence)", "full_signature": "public SW360Release mergeWith(SW360Release releaseWithPrecedence)", "class_method_signature": "SW360Release.mergeWith(SW360Release releaseWithPrecedence)", "testcase": false, "constructor": false, "invocations": ["getDominantGetterFromVariableMergeOrNull", "getDominantGetterFromVariableMergeOrNull", "getDominantGetterFromVariableMergeOrNull", "getDominantGetterFromVariableMergeOrNull", "isSetMainLicenseIds", "setMainLicenseIds", "getMainLicenseIds", "getSelf", "getLinks", "isEmpty", "getHref", "setSelf", "getLinks", "getSelfComponent", "getLinks", "isEmpty", "getHref", "setSelfComponent", "getLinks", "getAttachments", "getEmbedded", "isEmpty", "isEmpty", "getAttachments", "getEmbedded", "setAttachments", "getEmbedded", "setAttachments", "getEmbedded", "mergeAttachments", "getAttachments", "getEmbedded", "putAll", "putAll"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}