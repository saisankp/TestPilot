{"test_class": {"identifier": "PerRequestObjectFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PerRequestObjectFactory perRequestObjectFactory;", "modifier": "private", "type": "PerRequestObjectFactory", "declarator": "perRequestObjectFactory", "var_name": "perRequestObjectFactory"}, {"original_string": "private ApplicationContext    applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private ConstructorDescriptor constructorDescriptor;", "modifier": "private", "type": "ConstructorDescriptor", "declarator": "constructorDescriptor", "var_name": "constructorDescriptor"}, {"original_string": "private FieldInjector         fieldInjector;", "modifier": "private", "type": "FieldInjector", "declarator": "fieldInjector", "var_name": "fieldInjector"}, {"original_string": "private List<LifecycleComponent> lifecycleComponents = new ArrayList<>();", "modifier": "private", "type": "List<LifecycleComponent>", "declarator": "lifecycleComponents = new ArrayList<>()", "var_name": "lifecycleComponents"}], "file": "everrest-core/src/test/java/org/everrest/core/PerRequestObjectFactoryTest.java"}, "test_case": {"identifier": "addsLifeCycleComponentInApplicationContext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addsLifeCycleComponentInApplicationContext() throws Exception {\n        Object instance = new Object();\n        when(constructorDescriptor.createInstance(applicationContext)).thenReturn(instance);\n        perRequestObjectFactory.getInstance(applicationContext);\n\n        assertEquals(1, lifecycleComponents.size());\n        assertSame(instance, lifecycleComponents.get(0).getComponent());\n    }", "signature": "void addsLifeCycleComponentInApplicationContext()", "full_signature": "@Test public void addsLifeCycleComponentInApplicationContext()", "class_method_signature": "PerRequestObjectFactoryTest.addsLifeCycleComponentInApplicationContext()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "createInstance", "getInstance", "assertEquals", "size", "assertSame", "getComponent", "get"]}, "focal_class": {"identifier": "PerRequestObjectFactory", "superclass": "", "interfaces": "implements ObjectFactory<T>", "fields": [{"original_string": "protected final T model;", "modifier": "protected final", "type": "T", "declarator": "model", "var_name": "model"}], "methods": [{"identifier": "PerRequestObjectFactory", "parameters": "(T model)", "modifiers": "public", "return": "", "signature": " PerRequestObjectFactory(T model)", "full_signature": "public  PerRequestObjectFactory(T model)", "class_method_signature": "PerRequestObjectFactory.PerRequestObjectFactory(T model)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "signature": "Object getInstance(ApplicationContext context)", "full_signature": "@Override public Object getInstance(ApplicationContext context)", "class_method_signature": "PerRequestObjectFactory.getInstance(ApplicationContext context)", "testcase": false, "constructor": false}, {"identifier": "doPostConstruct", "parameters": "(Object object, ApplicationContext context)", "modifiers": "protected final", "return": "void", "signature": "void doPostConstruct(Object object, ApplicationContext context)", "full_signature": "protected final void doPostConstruct(Object object, ApplicationContext context)", "class_method_signature": "PerRequestObjectFactory.doPostConstruct(Object object, ApplicationContext context)", "testcase": false, "constructor": false}, {"identifier": "getObjectModel", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T getObjectModel()", "full_signature": "@Override public T getObjectModel()", "class_method_signature": "PerRequestObjectFactory.getObjectModel()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/PerRequestObjectFactory.java"}, "focal_method": {"identifier": "getInstance", "parameters": "(ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object getInstance(ApplicationContext context) {\n        ConstructorDescriptor constructorDescriptor = model.getConstructorDescriptors().get(0);\n        Object object = constructorDescriptor.createInstance(context);\n\n        List<FieldInjector> fieldInjectors = model.getFieldInjectors();\n        if (fieldInjectors != null && fieldInjectors.size() > 0) {\n            for (FieldInjector injector : fieldInjectors) {\n                injector.inject(object, context);\n            }\n        }\n        doPostConstruct(object, context);\n        return object;\n    }", "signature": "Object getInstance(ApplicationContext context)", "full_signature": "@Override public Object getInstance(ApplicationContext context)", "class_method_signature": "PerRequestObjectFactory.getInstance(ApplicationContext context)", "testcase": false, "constructor": false, "invocations": ["get", "getConstructorDescriptors", "createInstance", "getFieldInjectors", "size", "inject", "doPostConstruct"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}