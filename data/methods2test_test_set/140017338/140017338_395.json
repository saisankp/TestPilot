{"test_class": {"identifier": "HttpClientFactoryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpClientFactoryImpl factory;", "modifier": "private", "type": "HttpClientFactoryImpl", "declarator": "factory", "var_name": "factory"}], "file": "http-support/src/test/java/org/eclipse/sw360/antenna/http/HttpClientFactoryImplTest.java"}, "test_case": {"identifier": "testNewClientWithoutCertificateCheck", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNewClientWithoutCertificateCheck() {\n        try {\n            System.setProperty(HttpClientFactoryImpl.CLIENT_ACCESS_UNVERIFIED_PROPERTY, \"true\");\n            ObjectMapper mapper = mock(ObjectMapper.class);\n            HttpClientConfig config = HttpClientConfig.basicConfig()\n                    .withObjectMapper(mapper);\n\n            HttpClientImpl client = createClient(config);\n            assertThat(client.getClient().hostnameVerifier().verify(\"\", null)).isTrue();\n        } finally {\n            System.clearProperty(HttpClientFactoryImpl.CLIENT_ACCESS_UNVERIFIED_PROPERTY);\n        }\n    }", "signature": "void testNewClientWithoutCertificateCheck()", "full_signature": "@Test public void testNewClientWithoutCertificateCheck()", "class_method_signature": "HttpClientFactoryImplTest.testNewClientWithoutCertificateCheck()", "testcase": true, "constructor": false, "invocations": ["setProperty", "mock", "withObjectMapper", "basicConfig", "createClient", "isTrue", "assertThat", "verify", "hostnameVerifier", "getClient", "clearProperty"]}, "focal_class": {"identifier": "HttpClientFactoryImpl", "superclass": "", "interfaces": "implements HttpClientFactory", "fields": [{"original_string": "static final String CLIENT_ACCESS_UNVERIFIED_PROPERTY = \"client.access.unverified\";", "modifier": "static final", "type": "String", "declarator": "CLIENT_ACCESS_UNVERIFIED_PROPERTY = \"client.access.unverified\"", "var_name": "CLIENT_ACCESS_UNVERIFIED_PROPERTY"}], "methods": [{"identifier": "newHttpClient", "parameters": "(HttpClientConfig config)", "modifiers": "@Override public", "return": "HttpClient", "signature": "HttpClient newHttpClient(HttpClientConfig config)", "full_signature": "@Override public HttpClient newHttpClient(HttpClientConfig config)", "class_method_signature": "HttpClientFactoryImpl.newHttpClient(HttpClientConfig config)", "testcase": false, "constructor": false}, {"identifier": "createClient", "parameters": "(HttpClientConfig config)", "modifiers": "private static", "return": "OkHttpClient", "signature": "OkHttpClient createClient(HttpClientConfig config)", "full_signature": "private static OkHttpClient createClient(HttpClientConfig config)", "class_method_signature": "HttpClientFactoryImpl.createClient(HttpClientConfig config)", "testcase": false, "constructor": false}, {"identifier": "unverifiedSSLCertificate", "parameters": "()", "modifiers": "private static", "return": "boolean", "signature": "boolean unverifiedSSLCertificate()", "full_signature": "private static boolean unverifiedSSLCertificate()", "class_method_signature": "HttpClientFactoryImpl.unverifiedSSLCertificate()", "testcase": false, "constructor": false}, {"identifier": "createProxy", "parameters": "(ProxySettings settings)", "modifiers": "private static", "return": "Proxy", "signature": "Proxy createProxy(ProxySettings settings)", "full_signature": "private static Proxy createProxy(ProxySettings settings)", "class_method_signature": "HttpClientFactoryImpl.createProxy(ProxySettings settings)", "testcase": false, "constructor": false}], "file": "http-support/src/main/java/org/eclipse/sw360/antenna/http/HttpClientFactoryImpl.java"}, "focal_method": {"identifier": "createClient", "parameters": "(HttpClientConfig config)", "modifiers": "private static", "return": "OkHttpClient", "body": "private static OkHttpClient createClient(HttpClientConfig config) {\n        OkHttpClient.Builder builder = new OkHttpClient.Builder();\n        if (config.proxySettings().isProxyUse()) {\n            Proxy proxy = createProxy(config.proxySettings());\n            builder.proxy(proxy);\n        }\n        if (unverifiedSSLCertificate()) {\n            builder.hostnameVerifier((s, sslSession) -> true);\n        }\n        return builder.build();\n    }", "signature": "OkHttpClient createClient(HttpClientConfig config)", "full_signature": "private static OkHttpClient createClient(HttpClientConfig config)", "class_method_signature": "HttpClientFactoryImpl.createClient(HttpClientConfig config)", "testcase": false, "constructor": false, "invocations": ["isProxyUse", "proxySettings", "createProxy", "proxySettings", "proxy", "unverifiedSSLCertificate", "hostnameVerifier", "build"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}