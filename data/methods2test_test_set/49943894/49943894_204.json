{"test_class": {"identifier": "MacAddressTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/com/cloud/utils/net/MacAddressTest.java"}, "test_case": {"identifier": "testMacAddressLong", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testMacAddressLong() throws Exception {\n        MacAddress mac = new MacAddress(1L);\n        assertEquals(1L,mac.toLong());\n    }", "signature": "void testMacAddressLong()", "full_signature": "@Test public final void testMacAddressLong()", "class_method_signature": "MacAddressTest.testMacAddressLong()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toLong"]}, "focal_class": {"identifier": "MacAddress", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger s_logger = LoggerFactory.getLogger(MacAddress.class);", "modifier": "private static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(MacAddress.class)", "var_name": "s_logger"}, {"original_string": "private long _addr = 0;", "modifier": "private", "type": "long", "declarator": "_addr = 0", "var_name": "_addr"}, {"original_string": "private static MacAddress s_address;", "modifier": "private static", "type": "MacAddress", "declarator": "s_address", "var_name": "s_address"}], "methods": [{"identifier": "MacAddress", "parameters": "()", "modifiers": "protected", "return": "", "signature": " MacAddress()", "full_signature": "protected  MacAddress()", "class_method_signature": "MacAddress.MacAddress()", "testcase": false, "constructor": true}, {"identifier": "MacAddress", "parameters": "(long addr)", "modifiers": "public", "return": "", "signature": " MacAddress(long addr)", "full_signature": "public  MacAddress(long addr)", "class_method_signature": "MacAddress.MacAddress(long addr)", "testcase": false, "constructor": true}, {"identifier": "toLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long toLong()", "full_signature": "public long toLong()", "class_method_signature": "MacAddress.toLong()", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] toByteArray()", "full_signature": "public byte[] toByteArray()", "class_method_signature": "MacAddress.toByteArray()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(String separator)", "modifiers": "public", "return": "String", "signature": "String toString(String separator)", "full_signature": "public String toString(String separator)", "class_method_signature": "MacAddress.toString(String separator)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MacAddress.toString()", "testcase": false, "constructor": false}, {"identifier": "getMacAddress", "parameters": "()", "modifiers": "public static", "return": "MacAddress", "signature": "MacAddress getMacAddress()", "full_signature": "public static MacAddress getMacAddress()", "class_method_signature": "MacAddress.getMacAddress()", "testcase": false, "constructor": false}, {"identifier": "getFirstLineOfCommand", "parameters": "(String[] commands)", "modifiers": "private static", "return": "String", "signature": "String getFirstLineOfCommand(String[] commands)", "full_signature": "private static String getFirstLineOfCommand(String[] commands)", "class_method_signature": "MacAddress.getFirstLineOfCommand(String[] commands)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String in)", "modifiers": "static", "return": "String", "signature": "String parse(String in)", "full_signature": "static String parse(String in)", "class_method_signature": "MacAddress.parse(String in)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "MacAddress.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "parseLong", "parameters": "(String s)", "modifiers": "public static", "return": "long", "signature": "long parseLong(String s)", "full_signature": "public static long parseLong(String s)", "class_method_signature": "MacAddress.parseLong(String s)", "testcase": false, "constructor": false}, {"identifier": "parseInt", "parameters": "(String s)", "modifiers": "public static", "return": "int", "signature": "int parseInt(String s)", "full_signature": "public static int parseInt(String s)", "class_method_signature": "MacAddress.parseInt(String s)", "testcase": false, "constructor": false}, {"identifier": "parseShort", "parameters": "(String s)", "modifiers": "public static", "return": "short", "signature": "short parseShort(String s)", "full_signature": "public static short parseShort(String s)", "class_method_signature": "MacAddress.parseShort(String s)", "testcase": false, "constructor": false}, {"identifier": "parseByte", "parameters": "(String s)", "modifiers": "public static", "return": "byte", "signature": "byte parseByte(String s)", "full_signature": "public static byte parseByte(String s)", "class_method_signature": "MacAddress.parseByte(String s)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/com/cloud/utils/net/MacAddress.java"}, "focal_method": {"identifier": "toLong", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long toLong() {\n        return _addr;\n    }", "signature": "long toLong()", "full_signature": "public long toLong()", "class_method_signature": "MacAddress.toLong()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}