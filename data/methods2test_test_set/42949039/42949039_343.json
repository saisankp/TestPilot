{"test_class": {"identifier": "StorageUnitHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Mock\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Mock\n    private StorageFileHelper storageFileHelper;", "modifier": "@Mock\n    private", "type": "StorageFileHelper", "declarator": "storageFileHelper", "var_name": "storageFileHelper"}, {"original_string": "@InjectMocks\n    private StorageUnitHelper storageUnitHelper;", "modifier": "@InjectMocks\n    private", "type": "StorageUnitHelper", "declarator": "storageUnitHelper", "var_name": "storageUnitHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/StorageUnitHelperTest.java"}, "test_case": {"identifier": "testCreateStorageUnitsFromEntities", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateStorageUnitsFromEntities()\n    {\n        // Create a business object data storage unit key.\n        BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey =\n            new BusinessObjectDataStorageUnitKey(BDEF_NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION, PARTITION_VALUE,\n                SUBPARTITION_VALUES, DATA_VERSION, STORAGE_NAME);\n\n        // Create a storage file entity with a file path that does not start with storage unit directory path.\n        StorageFileEntity storageFileOneEntity = new StorageFileEntity();\n        storageFileOneEntity.setStorageUnit(null);\n        storageFileOneEntity.setPath(FILE_NAME);\n        storageFileOneEntity.setFileSizeBytes(FILE_SIZE);\n        storageFileOneEntity.setRowCount(ROW_COUNT);\n\n        // Create a storage file entity with a file path that starts with the storage unit directory path.\n        StorageFileEntity storageFileTwoEntity = new StorageFileEntity();\n        storageFileTwoEntity.setStorageUnit(null);\n        storageFileTwoEntity.setPath(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME_2);\n        storageFileTwoEntity.setFileSizeBytes(FILE_SIZE_2);\n        storageFileTwoEntity.setRowCount(ROW_COUNT_2);\n\n        // Create an expiration timestamp for restoration.\n        final Timestamp restoredExpirationOn = new Timestamp(new Date().getTime());\n\n        // Create a storage unit entity.\n        StorageUnitEntity storageUnitEntity = storageUnitDaoTestHelper.createStorageUnitEntity(businessObjectDataStorageUnitKey, STORAGE_UNIT_STATUS);\n        storageUnitEntity.setDirectoryPath(STORAGE_DIRECTORY_PATH);\n        storageUnitEntity.setStorageFiles(Lists.newArrayList(storageFileOneEntity, storageFileTwoEntity));\n        storageUnitEntity.setStoragePolicyTransitionFailedAttempts(STORAGE_POLICY_TRANSITION_FAILED_ATTEMPTS);\n        storageUnitEntity.setRestoreExpirationOn(restoredExpirationOn);\n\n        // Mock the external calls.\n        when(storageFileHelper.createStorageFileFromEntity(any(StorageFileEntity.class), eq(STORAGE_DIRECTORY_PATH))).thenCallRealMethod();\n\n        // Call the method under test.\n        List<StorageUnit> result =\n            storageUnitHelper.createStorageUnitsFromEntities(Collections.singletonList(storageUnitEntity), NO_INCLUDE_STORAGE_UNIT_STATUS_HISTORY,\n                    NO_EXCLUDE_BUSINESS_OBJECT_DATA_STORAGE_FILES);\n\n        // Verify the external calls.\n        verify(storageFileHelper).createStorageFileFromEntity(storageFileOneEntity, STORAGE_DIRECTORY_PATH);\n        verify(storageFileHelper).createStorageFileFromEntity(storageFileTwoEntity, STORAGE_DIRECTORY_PATH);\n        verifyNoMoreInteractionsHelper();\n\n        // Validate the results.\n        assertEquals(Collections.singletonList(\n            new StorageUnit(new Storage(STORAGE_NAME, StoragePlatformEntity.S3, null), new StorageDirectory(STORAGE_DIRECTORY_PATH), Lists\n                .newArrayList(new StorageFile(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME, FILE_SIZE, ROW_COUNT),\n                    new StorageFile(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME_2, FILE_SIZE_2, ROW_COUNT_2)), STORAGE_UNIT_STATUS, NO_STORAGE_UNIT_STATUS_HISTORY,\n                STORAGE_POLICY_TRANSITION_FAILED_ATTEMPTS, HerdDateUtils.getXMLGregorianCalendarValue(restoredExpirationOn))), result);\n    }", "signature": "void testCreateStorageUnitsFromEntities()", "full_signature": "@Test public void testCreateStorageUnitsFromEntities()", "class_method_signature": "StorageUnitHelperTest.testCreateStorageUnitsFromEntities()", "testcase": true, "constructor": false, "invocations": ["setStorageUnit", "setPath", "setFileSizeBytes", "setRowCount", "setStorageUnit", "setPath", "setFileSizeBytes", "setRowCount", "getTime", "createStorageUnitEntity", "setDirectoryPath", "setStorageFiles", "newArrayList", "setStoragePolicyTransitionFailedAttempts", "setRestoreExpirationOn", "thenCallRealMethod", "when", "createStorageFileFromEntity", "any", "eq", "createStorageUnitsFromEntities", "singletonList", "createStorageFileFromEntity", "verify", "createStorageFileFromEntity", "verify", "verifyNoMoreInteractionsHelper", "assertEquals", "singletonList", "newArrayList", "getXMLGregorianCalendarValue"]}, "focal_class": {"identifier": "StorageUnitHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private StorageFileHelper storageFileHelper;", "modifier": "@Autowired\n    private", "type": "StorageFileHelper", "declarator": "storageFileHelper", "var_name": "storageFileHelper"}], "methods": [{"identifier": "createBusinessObjectDataStorageUnitKey", "parameters": "(BusinessObjectDataKey businessObjectDataKey, String storageName)", "modifiers": "public", "return": "BusinessObjectDataStorageUnitKey", "signature": "BusinessObjectDataStorageUnitKey createBusinessObjectDataStorageUnitKey(BusinessObjectDataKey businessObjectDataKey, String storageName)", "full_signature": "public BusinessObjectDataStorageUnitKey createBusinessObjectDataStorageUnitKey(BusinessObjectDataKey businessObjectDataKey, String storageName)", "class_method_signature": "StorageUnitHelper.createBusinessObjectDataStorageUnitKey(BusinessObjectDataKey businessObjectDataKey, String storageName)", "testcase": false, "constructor": false}, {"identifier": "createStorageUnitKey", "parameters": "(BusinessObjectDataKey businessObjectDataKey, String storageName)", "modifiers": "public", "return": "BusinessObjectDataStorageUnitKey", "signature": "BusinessObjectDataStorageUnitKey createStorageUnitKey(BusinessObjectDataKey businessObjectDataKey, String storageName)", "full_signature": "public BusinessObjectDataStorageUnitKey createStorageUnitKey(BusinessObjectDataKey businessObjectDataKey, String storageName)", "class_method_signature": "StorageUnitHelper.createStorageUnitKey(BusinessObjectDataKey businessObjectDataKey, String storageName)", "testcase": false, "constructor": false}, {"identifier": "createStorageUnitKeyFromEntity", "parameters": "(StorageUnitEntity storageUnitEntity)", "modifiers": "public", "return": "BusinessObjectDataStorageUnitKey", "signature": "BusinessObjectDataStorageUnitKey createStorageUnitKeyFromEntity(StorageUnitEntity storageUnitEntity)", "full_signature": "public BusinessObjectDataStorageUnitKey createStorageUnitKeyFromEntity(StorageUnitEntity storageUnitEntity)", "class_method_signature": "StorageUnitHelper.createStorageUnitKeyFromEntity(StorageUnitEntity storageUnitEntity)", "testcase": false, "constructor": false}, {"identifier": "createStorageUnitsFromEntities", "parameters": "(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)", "modifiers": "", "return": "List<StorageUnit>", "signature": "List<StorageUnit> createStorageUnitsFromEntities(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)", "full_signature": " List<StorageUnit> createStorageUnitsFromEntities(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)", "class_method_signature": "StorageUnitHelper.createStorageUnitsFromEntities(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)", "testcase": false, "constructor": false}, {"identifier": "excludeBusinessObjectDataStatus", "parameters": "(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos,\n        String excludedBusinessObjectDataStatus)", "modifiers": "public", "return": "List<StorageUnitAvailabilityDto>", "signature": "List<StorageUnitAvailabilityDto> excludeBusinessObjectDataStatus(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos,\n        String excludedBusinessObjectDataStatus)", "full_signature": "public List<StorageUnitAvailabilityDto> excludeBusinessObjectDataStatus(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos,\n        String excludedBusinessObjectDataStatus)", "class_method_signature": "StorageUnitHelper.excludeBusinessObjectDataStatus(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos,\n        String excludedBusinessObjectDataStatus)", "testcase": false, "constructor": false}, {"identifier": "excludePartitions", "parameters": "(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos,\n        List<List<String>> excludedPartitions)", "modifiers": "public", "return": "List<StorageUnitAvailabilityDto>", "signature": "List<StorageUnitAvailabilityDto> excludePartitions(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos,\n        List<List<String>> excludedPartitions)", "full_signature": "public List<StorageUnitAvailabilityDto> excludePartitions(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos,\n        List<List<String>> excludedPartitions)", "class_method_signature": "StorageUnitHelper.excludePartitions(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos,\n        List<List<String>> excludedPartitions)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectDataKey", "parameters": "(BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey)", "modifiers": "public", "return": "BusinessObjectDataKey", "signature": "BusinessObjectDataKey getBusinessObjectDataKey(BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey)", "full_signature": "public BusinessObjectDataKey getBusinessObjectDataKey(BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey)", "class_method_signature": "StorageUnitHelper.getBusinessObjectDataKey(BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitIds", "parameters": "(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> getStorageUnitIds(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos)", "full_signature": "public List<Integer> getStorageUnitIds(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos)", "class_method_signature": "StorageUnitHelper.getStorageUnitIds(List<StorageUnitAvailabilityDto> storageUnitAvailabilityDtos)", "testcase": false, "constructor": false}, {"identifier": "validateBusinessObjectDataStorageUnitKey", "parameters": "(BusinessObjectDataStorageUnitKey key)", "modifiers": "public", "return": "void", "signature": "void validateBusinessObjectDataStorageUnitKey(BusinessObjectDataStorageUnitKey key)", "full_signature": "public void validateBusinessObjectDataStorageUnitKey(BusinessObjectDataStorageUnitKey key)", "class_method_signature": "StorageUnitHelper.validateBusinessObjectDataStorageUnitKey(BusinessObjectDataStorageUnitKey key)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/StorageUnitHelper.java"}, "focal_method": {"identifier": "createStorageUnitsFromEntities", "parameters": "(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)", "modifiers": "", "return": "List<StorageUnit>", "body": "List<StorageUnit> createStorageUnitsFromEntities(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)\n    {\n        List<StorageUnit> storageUnits = new ArrayList<>();\n\n        for (StorageUnitEntity storageUnitEntity : storageUnitEntities)\n        {\n            StorageUnit storageUnit = new StorageUnit();\n            storageUnits.add(storageUnit);\n\n            Storage storage = new Storage();\n            storageUnit.setStorage(storage);\n\n            StorageEntity storageEntity = storageUnitEntity.getStorage();\n            storage.setName(storageEntity.getName());\n            storage.setStoragePlatformName(storageEntity.getStoragePlatform().getName());\n\n            // Add the storage attributes.\n            if (!CollectionUtils.isEmpty(storageEntity.getAttributes()))\n            {\n                List<Attribute> storageAttributes = new ArrayList<>();\n                storage.setAttributes(storageAttributes);\n                for (StorageAttributeEntity storageAttributeEntity : storageEntity.getAttributes())\n                {\n                    Attribute attribute = new Attribute();\n                    storageAttributes.add(attribute);\n                    attribute.setName(storageAttributeEntity.getName());\n                    attribute.setValue(storageAttributeEntity.getValue());\n                }\n            }\n\n            // Add the storage directory.\n            if (storageUnitEntity.getDirectoryPath() != null)\n            {\n                StorageDirectory storageDirectory = new StorageDirectory();\n                storageUnit.setStorageDirectory(storageDirectory);\n                storageDirectory.setDirectoryPath(storageUnitEntity.getDirectoryPath());\n            }\n\n            // Add the storage files, is they are not excluded and present in the database.\n            if (BooleanUtils.isNotTrue(excludeBusinessObjectDataStorageFiles) && CollectionUtils.isNotEmpty(storageUnitEntity.getStorageFiles()))\n            {\n                List<StorageFile> storageFiles = new ArrayList<>();\n                storageUnit.setStorageFiles(storageFiles);\n\n                for (StorageFileEntity storageFileEntity : storageUnitEntity.getStorageFiles())\n                {\n                    storageFiles.add(storageFileHelper.createStorageFileFromEntity(storageFileEntity, storageUnitEntity.getDirectoryPath()));\n                }\n            }\n\n            // Set the storage unit status.\n            storageUnit.setStorageUnitStatus(storageUnitEntity.getStatus().getCode());\n\n            // If specified, add storage unit status history.\n            if (BooleanUtils.isTrue(includeStorageUnitStatusHistory))\n            {\n                List<StorageUnitStatusChangeEvent> storageUnitStatusChangeEvents = new ArrayList<>();\n                storageUnit.setStorageUnitStatusHistory(storageUnitStatusChangeEvents);\n                for (StorageUnitStatusHistoryEntity storageUnitStatusHistoryEntity : storageUnitEntity.getHistoricalStatuses())\n                {\n                    storageUnitStatusChangeEvents.add(new StorageUnitStatusChangeEvent(storageUnitStatusHistoryEntity.getStatus().getCode(),\n                        HerdDateUtils.getXMLGregorianCalendarValue(storageUnitStatusHistoryEntity.getCreatedOn()),\n                        storageUnitStatusHistoryEntity.getCreatedBy()));\n                }\n            }\n\n            // Set the number of failed attempts to execute a storage policy transition.\n            storageUnit.setStoragePolicyTransitionFailedAttempts(storageUnitEntity.getStoragePolicyTransitionFailedAttempts());\n\n            if (storageUnitEntity.getRestoreExpirationOn() != null)\n            {\n                storageUnit.setRestoreExpirationOn(HerdDateUtils.getXMLGregorianCalendarValue(storageUnitEntity.getRestoreExpirationOn()));\n            }\n        }\n\n        return storageUnits;\n    }", "signature": "List<StorageUnit> createStorageUnitsFromEntities(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)", "full_signature": " List<StorageUnit> createStorageUnitsFromEntities(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)", "class_method_signature": "StorageUnitHelper.createStorageUnitsFromEntities(Collection<StorageUnitEntity> storageUnitEntities, Boolean includeStorageUnitStatusHistory,\n        Boolean excludeBusinessObjectDataStorageFiles)", "testcase": false, "constructor": false, "invocations": ["add", "setStorage", "getStorage", "setName", "getName", "setStoragePlatformName", "getName", "getStoragePlatform", "isEmpty", "getAttributes", "setAttributes", "getAttributes", "add", "setName", "getName", "setValue", "getValue", "getDirectoryPath", "setStorageDirectory", "setDirectoryPath", "getDirectoryPath", "isNotTrue", "isNotEmpty", "getStorageFiles", "setStorageFiles", "getStorageFiles", "add", "createStorageFileFromEntity", "getDirectoryPath", "setStorageUnitStatus", "getCode", "getStatus", "isTrue", "setStorageUnitStatusHistory", "getHistoricalStatuses", "add", "getCode", "getStatus", "getXMLGregorianCalendarValue", "getCreatedOn", "getCreatedBy", "setStoragePolicyTransitionFailedAttempts", "getStoragePolicyTransitionFailedAttempts", "getRestoreExpirationOn", "setRestoreExpirationOn", "getXMLGregorianCalendarValue", "getRestoreExpirationOn"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}