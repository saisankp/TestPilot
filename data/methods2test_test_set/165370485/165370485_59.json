{"test_class": {"identifier": "UserMessageStanzaBrokerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Entity JULIET_IN_CHAMBER = EntityImpl.parseUnchecked(\"juliet@capulet.lit/chamber\");", "modifier": "private static final", "type": "Entity", "declarator": "JULIET_IN_CHAMBER = EntityImpl.parseUnchecked(\"juliet@capulet.lit/chamber\")", "var_name": "JULIET_IN_CHAMBER"}, {"original_string": "private static final Entity ROMEO_IN_ORCHARD = EntityImpl.parseUnchecked(\"romeo@capulet.lit/orchard\");", "modifier": "private static final", "type": "Entity", "declarator": "ROMEO_IN_ORCHARD = EntityImpl.parseUnchecked(\"romeo@capulet.lit/orchard\")", "var_name": "ROMEO_IN_ORCHARD"}, {"original_string": "private static final Entity MACBETH_IN_KITCHEN = EntityImpl.parseUnchecked(\"macbeth@capulet.lit/kitchen\");", "modifier": "private static final", "type": "Entity", "declarator": "MACBETH_IN_KITCHEN = EntityImpl.parseUnchecked(\"macbeth@capulet.lit/kitchen\")", "var_name": "MACBETH_IN_KITCHEN"}, {"original_string": "private static final Entity ALICE_IN_RABBIT_HOLE = EntityImpl.parseUnchecked(\"alice@capulet.lit/rabbit-hole\");", "modifier": "private static final", "type": "Entity", "declarator": "ALICE_IN_RABBIT_HOLE = EntityImpl.parseUnchecked(\"alice@capulet.lit/rabbit-hole\")", "var_name": "ALICE_IN_RABBIT_HOLE"}, {"original_string": "private static final Entity INITIATING_ENTITY = JULIET_IN_CHAMBER;", "modifier": "private static final", "type": "Entity", "declarator": "INITIATING_ENTITY = JULIET_IN_CHAMBER", "var_name": "INITIATING_ENTITY"}, {"original_string": "private UserMessageArchiveMock julietArchive;", "modifier": "private", "type": "UserMessageArchiveMock", "declarator": "julietArchive", "var_name": "julietArchive"}, {"original_string": "private UserMessageArchiveMock romeoArchive;", "modifier": "private", "type": "UserMessageArchiveMock", "declarator": "romeoArchive", "var_name": "romeoArchive"}, {"original_string": "private UserMessageArchiveMock macbethArchive;", "modifier": "private", "type": "UserMessageArchiveMock", "declarator": "macbethArchive", "var_name": "macbethArchive"}, {"original_string": "private ServerRuntimeContextMock serverRuntimeContext;", "modifier": "private", "type": "ServerRuntimeContextMock", "declarator": "serverRuntimeContext", "var_name": "serverRuntimeContext"}, {"original_string": "private SessionContextMock sessionContext;", "modifier": "private", "type": "SessionContextMock", "declarator": "sessionContext", "var_name": "sessionContext"}, {"original_string": "private StanzaBroker delegate = mock(StanzaBroker.class);", "modifier": "private", "type": "StanzaBroker", "declarator": "delegate = mock(StanzaBroker.class)", "var_name": "delegate"}], "file": "server/extensions/xep0313-mam/src/test/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/user/UserMessageStanzaBrokerTest.java"}, "test_case": {"identifier": "messageWithoutBody", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void messageWithoutBody() {\n        UserMessageStanzaBroker tested = buildTested(true, false);\n        MessageStanza messageStanza = buildMessageStanza(MessageStanzaType.NORMAL, JULIET_IN_CHAMBER, ROMEO_IN_ORCHARD,\n                null);\n\n        tested.writeToSession(messageStanza);\n\n        julietArchive.assertEmpty();\n        romeoArchive.assertEmpty();\n    }", "signature": "void messageWithoutBody()", "full_signature": "@Test public void messageWithoutBody()", "class_method_signature": "UserMessageStanzaBrokerTest.messageWithoutBody()", "testcase": true, "constructor": false, "invocations": ["buildTested", "buildMessageStanza", "writeToSession", "assertEmpty", "assertEmpty"]}, "focal_class": {"identifier": "UserMessageStanzaBroker", "superclass": "extends DelegatingStanzaBroker", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(UserMessageStanzaBroker.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(UserMessageStanzaBroker.class)", "var_name": "LOG"}, {"original_string": "private final ServerRuntimeContext serverRuntimeContext;", "modifier": "private final", "type": "ServerRuntimeContext", "declarator": "serverRuntimeContext", "var_name": "serverRuntimeContext"}, {"original_string": "private final SessionContext sessionContext;", "modifier": "private final", "type": "SessionContext", "declarator": "sessionContext", "var_name": "sessionContext"}, {"original_string": "private final boolean isOutbound;", "modifier": "private final", "type": "boolean", "declarator": "isOutbound", "var_name": "isOutbound"}, {"original_string": "private final boolean archivingForced;", "modifier": "private final", "type": "boolean", "declarator": "archivingForced", "var_name": "archivingForced"}], "methods": [{"identifier": "UserMessageStanzaBroker", "parameters": "(StanzaBroker delegate, ServerRuntimeContext serverRuntimeContext,\n            SessionContext sessionContext, boolean isOutbound, boolean archivingForced)", "modifiers": "", "return": "", "signature": " UserMessageStanzaBroker(StanzaBroker delegate, ServerRuntimeContext serverRuntimeContext,\n            SessionContext sessionContext, boolean isOutbound, boolean archivingForced)", "full_signature": "  UserMessageStanzaBroker(StanzaBroker delegate, ServerRuntimeContext serverRuntimeContext,\n            SessionContext sessionContext, boolean isOutbound, boolean archivingForced)", "class_method_signature": "UserMessageStanzaBroker.UserMessageStanzaBroker(StanzaBroker delegate, ServerRuntimeContext serverRuntimeContext,\n            SessionContext sessionContext, boolean isOutbound, boolean archivingForced)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(Entity receiver, Stanza stanza, DeliveryFailureStrategy deliveryFailureStrategy)", "modifiers": "@Override public", "return": "void", "signature": "void write(Entity receiver, Stanza stanza, DeliveryFailureStrategy deliveryFailureStrategy)", "full_signature": "@Override public void write(Entity receiver, Stanza stanza, DeliveryFailureStrategy deliveryFailureStrategy)", "class_method_signature": "UserMessageStanzaBroker.write(Entity receiver, Stanza stanza, DeliveryFailureStrategy deliveryFailureStrategy)", "testcase": false, "constructor": false}, {"identifier": "writeToSession", "parameters": "(Stanza stanza)", "modifiers": "@Override public", "return": "void", "signature": "void writeToSession(Stanza stanza)", "full_signature": "@Override public void writeToSession(Stanza stanza)", "class_method_signature": "UserMessageStanzaBroker.writeToSession(Stanza stanza)", "testcase": false, "constructor": false}, {"identifier": "archive", "parameters": "(Stanza stanza)", "modifiers": "private", "return": "Stanza", "signature": "Stanza archive(Stanza stanza)", "full_signature": "private Stanza archive(Stanza stanza)", "class_method_signature": "UserMessageStanzaBroker.archive(Stanza stanza)", "testcase": false, "constructor": false}, {"identifier": "shouldArchive", "parameters": "(MessageStanza messageStanza)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldArchive(MessageStanza messageStanza)", "full_signature": "private boolean shouldArchive(MessageStanza messageStanza)", "class_method_signature": "UserMessageStanzaBroker.shouldArchive(MessageStanza messageStanza)", "testcase": false, "constructor": false}, {"identifier": "addToSenderArchive", "parameters": "(MessageStanza messageStanza, SessionContext sessionContext)", "modifiers": "private", "return": "void", "signature": "void addToSenderArchive(MessageStanza messageStanza, SessionContext sessionContext)", "full_signature": "private void addToSenderArchive(MessageStanza messageStanza, SessionContext sessionContext)", "class_method_signature": "UserMessageStanzaBroker.addToSenderArchive(MessageStanza messageStanza, SessionContext sessionContext)", "testcase": false, "constructor": false}, {"identifier": "addToReceiverArchive", "parameters": "(MessageStanza messageStanza)", "modifiers": "private", "return": "Optional<MessageStanzaWithId>", "signature": "Optional<MessageStanzaWithId> addToReceiverArchive(MessageStanza messageStanza)", "full_signature": "private Optional<MessageStanzaWithId> addToReceiverArchive(MessageStanza messageStanza)", "class_method_signature": "UserMessageStanzaBroker.addToReceiverArchive(MessageStanza messageStanza)", "testcase": false, "constructor": false}, {"identifier": "messageArchives", "parameters": "()", "modifiers": "private", "return": "MessageArchives", "signature": "MessageArchives messageArchives()", "full_signature": "private MessageArchives messageArchives()", "class_method_signature": "UserMessageStanzaBroker.messageArchives()", "testcase": false, "constructor": false}], "file": "server/extensions/xep0313-mam/src/main/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/user/UserMessageStanzaBroker.java"}, "focal_method": {"identifier": "writeToSession", "parameters": "(Stanza stanza)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeToSession(Stanza stanza) {\n        super.writeToSession(archive(stanza));\n    }", "signature": "void writeToSession(Stanza stanza)", "full_signature": "@Override public void writeToSession(Stanza stanza)", "class_method_signature": "UserMessageStanzaBroker.writeToSession(Stanza stanza)", "testcase": false, "constructor": false, "invocations": ["writeToSession", "archive"]}, "repository": {"repo_id": 165370485, "url": "https://github.com/apache/mina-vysper", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 29305, "license": "licensed"}}