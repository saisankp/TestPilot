{"test_class": {"identifier": "ConfigChangedEventTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String key = \"k\";", "modifier": "private static final", "type": "String", "declarator": "key = \"k\"", "var_name": "key"}, {"original_string": "private static final String group = \"g\";", "modifier": "private static final", "type": "String", "declarator": "group = \"g\"", "var_name": "group"}, {"original_string": "private static final String content = \"c\";", "modifier": "private static final", "type": "String", "declarator": "content = \"c\"", "var_name": "content"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/config/configcenter/ConfigChangedEventTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        ConfigChangedEvent event = new ConfigChangedEvent(key, group, content);\n        assertNotNull(event.toString());\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "ConfigChangedEventTest.testToString()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "toString"]}, "focal_class": {"identifier": "ConfigChangedEvent", "superclass": "extends EventObject", "interfaces": "", "fields": [{"original_string": "private final String key;", "modifier": "private final", "type": "String", "declarator": "key", "var_name": "key"}, {"original_string": "private final String group;", "modifier": "private final", "type": "String", "declarator": "group", "var_name": "group"}, {"original_string": "private final String content;", "modifier": "private final", "type": "String", "declarator": "content", "var_name": "content"}, {"original_string": "private final ConfigChangeType changeType;", "modifier": "private final", "type": "ConfigChangeType", "declarator": "changeType", "var_name": "changeType"}], "methods": [{"identifier": "ConfigChangedEvent", "parameters": "(String key, String group, String content)", "modifiers": "public", "return": "", "signature": " ConfigChangedEvent(String key, String group, String content)", "full_signature": "public  ConfigChangedEvent(String key, String group, String content)", "class_method_signature": "ConfigChangedEvent.ConfigChangedEvent(String key, String group, String content)", "testcase": false, "constructor": true}, {"identifier": "ConfigChangedEvent", "parameters": "(String key, String group, String content, ConfigChangeType changeType)", "modifiers": "public", "return": "", "signature": " ConfigChangedEvent(String key, String group, String content, ConfigChangeType changeType)", "full_signature": "public  ConfigChangedEvent(String key, String group, String content, ConfigChangeType changeType)", "class_method_signature": "ConfigChangedEvent.ConfigChangedEvent(String key, String group, String content, ConfigChangeType changeType)", "testcase": false, "constructor": true}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKey()", "full_signature": "public String getKey()", "class_method_signature": "ConfigChangedEvent.getKey()", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGroup()", "full_signature": "public String getGroup()", "class_method_signature": "ConfigChangedEvent.getGroup()", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContent()", "full_signature": "public String getContent()", "class_method_signature": "ConfigChangedEvent.getContent()", "testcase": false, "constructor": false}, {"identifier": "getChangeType", "parameters": "()", "modifiers": "public", "return": "ConfigChangeType", "signature": "ConfigChangeType getChangeType()", "full_signature": "public ConfigChangeType getChangeType()", "class_method_signature": "ConfigChangedEvent.getChangeType()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ConfigChangedEvent.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ConfigChangedEvent.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ConfigChangedEvent.hashCode()", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/config/configcenter/ConfigChangedEvent.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return \"ConfigChangedEvent{\" +\n                \"key='\" + key + '\\'' +\n                \", group='\" + group + '\\'' +\n                \", content='\" + content + '\\'' +\n                \", changeType=\" + changeType +\n                \"} \" + super.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ConfigChangedEvent.toString()", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}