{"test_class": {"identifier": "BigIntegerConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/converters/BigIntegerConverterTest.java"}, "test_case": {"identifier": "converterHandlesNullValueCorrectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void converterHandlesNullValueCorrectly() throws Exception {\n        ConversionContext context = mock(ConversionContext.class);\n\n        BigIntegerConverter converter = new BigIntegerConverter();\n        BigInteger value = converter.convert(\"\", context);\n\n        assertThat(value).isNull();\n    }", "signature": "void converterHandlesNullValueCorrectly()", "full_signature": "@Test public void converterHandlesNullValueCorrectly()", "class_method_signature": "BigIntegerConverterTest.converterHandlesNullValueCorrectly()", "testcase": true, "constructor": false, "invocations": ["mock", "convert", "isNull", "assertThat"]}, "focal_class": {"identifier": "BigIntegerConverter", "superclass": "", "interfaces": "implements PropertyConverter<BigInteger>", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(BigIntegerConverter.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(BigIntegerConverter.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger convert(String value, ConversionContext ctx)", "full_signature": "@Override public BigInteger convert(String value, ConversionContext ctx)", "class_method_signature": "BigIntegerConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "BigIntegerConverter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BigIntegerConverter.hashCode()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/converters/BigIntegerConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "BigInteger", "body": "@Override\n    public BigInteger convert(String value, ConversionContext ctx) {\n        ctx.addSupportedFormats(getClass(), \"[-]0X.. (hex)\", \"[-]0x... (hex)\", \"<bigint> -> new BigInteger(bigint)\");\n        if(value==null){\n            return null;\n        }\n        String trimmed = value.trim();\n        if(trimmed.startsWith(\"0x\") || trimmed.startsWith(\"0X\")){\n            LOG.finest(\"Parsing Hex createValue to BigInteger: \" + value);\n            return new BigInteger(value.substring(2), 16);\n        } else if(trimmed.startsWith(\"-0x\") || trimmed.startsWith(\"-0X\")){\n            LOG.finest(\"Parsing Hex createValue to BigInteger: \" + value);\n            return new BigInteger('-' + value.substring(3), 16);\n        }\n        try{\n            return new BigInteger(trimmed);\n        } catch(Exception e){\n            LOG.log(Level.FINEST, \"Failed to parse BigInteger from: \" + value, e);\n            return null;\n        }\n    }", "signature": "BigInteger convert(String value, ConversionContext ctx)", "full_signature": "@Override public BigInteger convert(String value, ConversionContext ctx)", "class_method_signature": "BigIntegerConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false, "invocations": ["addSupportedFormats", "getClass", "trim", "startsWith", "startsWith", "finest", "substring", "startsWith", "startsWith", "finest", "substring", "log"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}