{"test_class": {"identifier": "DefaultLoadBalancerJobValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger(DefaultLoadBalancerJobValidatorTest.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultLoadBalancerJobValidatorTest.class)", "var_name": "logger"}, {"original_string": "private static final long TIMEOUT_MS = 30_000;", "modifier": "private static final", "type": "long", "declarator": "TIMEOUT_MS = 30_000", "var_name": "TIMEOUT_MS"}, {"original_string": "private V3JobOperations jobOperations;", "modifier": "private", "type": "V3JobOperations", "declarator": "jobOperations", "var_name": "jobOperations"}, {"original_string": "private LoadBalancerStore loadBalancerStore;", "modifier": "private", "type": "LoadBalancerStore", "declarator": "loadBalancerStore", "var_name": "loadBalancerStore"}, {"original_string": "private LoadBalancerValidationConfiguration loadBalancerValidationConfiguration;", "modifier": "private", "type": "LoadBalancerValidationConfiguration", "declarator": "loadBalancerValidationConfiguration", "var_name": "loadBalancerValidationConfiguration"}, {"original_string": "private DefaultLoadBalancerJobValidator loadBalancerValidator;", "modifier": "private", "type": "DefaultLoadBalancerJobValidator", "declarator": "loadBalancerValidator", "var_name": "loadBalancerValidator"}, {"original_string": "private static final String JOB_ID = \"Titus-123\";", "modifier": "private static final", "type": "String", "declarator": "JOB_ID = \"Titus-123\"", "var_name": "JOB_ID"}], "file": "titus-api/src/test/java/com/netflix/titus/api/loadbalancer/model/sanitizer/DefaultLoadBalancerJobValidatorTest.java"}, "test_case": {"identifier": "testValidateJobAccepted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateJobAccepted() throws Exception {\n        when(jobOperations.getJob(JOB_ID)).thenReturn(Optional.of(Job.newBuilder()\n                .withId(JOB_ID)\n                .withStatus(JobStatus.newBuilder()\n                        .withState(JobState.Finished)\n                        .build())\n                .build()));\n        Throwable thrown = catchThrowable(() -> loadBalancerValidator.validateJobId(JOB_ID));\n        assertThat(thrown).isInstanceOf(JobManagerException.class);\n        assertThat(((JobManagerException) thrown).getErrorCode()).isEqualTo(JobManagerException.ErrorCode.UnexpectedJobState);\n    }", "signature": "void testValidateJobAccepted()", "full_signature": "@Test public void testValidateJobAccepted()", "class_method_signature": "DefaultLoadBalancerJobValidatorTest.testValidateJobAccepted()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getJob", "of", "build", "withStatus", "withId", "newBuilder", "build", "withState", "newBuilder", "catchThrowable", "validateJobId", "isInstanceOf", "assertThat", "isEqualTo", "assertThat", "getErrorCode"]}, "focal_class": {"identifier": "DefaultLoadBalancerJobValidator", "superclass": "", "interfaces": "implements LoadBalancerJobValidator", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DefaultLoadBalancerJobValidator.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultLoadBalancerJobValidator.class)", "var_name": "logger"}, {"original_string": "private final V3JobOperations v3JobOperations;", "modifier": "private final", "type": "V3JobOperations", "declarator": "v3JobOperations", "var_name": "v3JobOperations"}, {"original_string": "private final LoadBalancerStore loadBalancerStore;", "modifier": "private final", "type": "LoadBalancerStore", "declarator": "loadBalancerStore", "var_name": "loadBalancerStore"}, {"original_string": "private final LoadBalancerValidationConfiguration loadBalancerValidationConfiguration;", "modifier": "private final", "type": "LoadBalancerValidationConfiguration", "declarator": "loadBalancerValidationConfiguration", "var_name": "loadBalancerValidationConfiguration"}], "methods": [{"identifier": "DefaultLoadBalancerJobValidator", "parameters": "(V3JobOperations v3JobOperations,\n                                           LoadBalancerStore loadBalancerStore,\n                                           LoadBalancerValidationConfiguration loadBalancerValidationConfiguration)", "modifiers": "@Inject public", "return": "", "signature": " DefaultLoadBalancerJobValidator(V3JobOperations v3JobOperations,\n                                           LoadBalancerStore loadBalancerStore,\n                                           LoadBalancerValidationConfiguration loadBalancerValidationConfiguration)", "full_signature": "@Inject public  DefaultLoadBalancerJobValidator(V3JobOperations v3JobOperations,\n                                           LoadBalancerStore loadBalancerStore,\n                                           LoadBalancerValidationConfiguration loadBalancerValidationConfiguration)", "class_method_signature": "DefaultLoadBalancerJobValidator.DefaultLoadBalancerJobValidator(V3JobOperations v3JobOperations,\n                                           LoadBalancerStore loadBalancerStore,\n                                           LoadBalancerValidationConfiguration loadBalancerValidationConfiguration)", "testcase": false, "constructor": true}, {"identifier": "validateJobId", "parameters": "(String jobId)", "modifiers": "@Override public", "return": "void", "signature": "void validateJobId(String jobId)", "full_signature": "@Override public void validateJobId(String jobId)", "class_method_signature": "DefaultLoadBalancerJobValidator.validateJobId(String jobId)", "testcase": false, "constructor": false}], "file": "titus-api/src/main/java/com/netflix/titus/api/loadbalancer/model/sanitizer/DefaultLoadBalancerJobValidator.java"}, "focal_method": {"identifier": "validateJobId", "parameters": "(String jobId)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validateJobId(String jobId) throws LoadBalancerException, JobManagerException {\n        // Job must exist\n        Job job = v3JobOperations.getJob(jobId).orElseThrow(() -> JobManagerException.v3JobNotFound(jobId));\n\n        // Job must be active\n        JobState state = job.getStatus().getState();\n        if (state != JobState.Accepted) {\n            throw JobManagerException.unexpectedJobState(job, JobState.Accepted);\n        }\n\n        // Must be a service job\n        JobDescriptor.JobDescriptorExt extensions = job.getJobDescriptor().getExtensions();\n        if (!(extensions instanceof ServiceJobExt)) {\n            throw JobManagerException.notServiceJob(jobId);\n        }\n\n        // Job should have less than max current load balancer associations\n        int maxLoadBalancers = loadBalancerValidationConfiguration.getMaxLoadBalancersPerJob();\n        int numLoadBalancers = loadBalancerStore.getNumLoadBalancersForJob(jobId);\n        if (numLoadBalancers > maxLoadBalancers) {\n            throw LoadBalancerException.jobMaxLoadBalancers(jobId, numLoadBalancers, maxLoadBalancers);\n        }\n    }", "signature": "void validateJobId(String jobId)", "full_signature": "@Override public void validateJobId(String jobId)", "class_method_signature": "DefaultLoadBalancerJobValidator.validateJobId(String jobId)", "testcase": false, "constructor": false, "invocations": ["orElseThrow", "getJob", "v3JobNotFound", "getState", "getStatus", "unexpectedJobState", "getExtensions", "getJobDescriptor", "notServiceJob", "getMaxLoadBalancersPerJob", "getNumLoadBalancersForJob", "jobMaxLoadBalancers"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}