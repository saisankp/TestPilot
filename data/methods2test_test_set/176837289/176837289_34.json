{"test_class": {"identifier": "DomainWideDelegationAuthorityProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<String> SCOPES = List.of(\"https://www.googleapis.com/auth/devstorage.read_write\");", "modifier": "private static final", "type": "List<String>", "declarator": "SCOPES = List.of(\"https://www.googleapis.com/auth/devstorage.read_write\")", "var_name": "SCOPES"}], "file": "code/broker-server/src/test/java/com/google/cloud/broker/apps/brokerserver/accesstokens/providers/DomainWideDelegationAuthorityProviderTest.java"}, "test_case": {"identifier": "testUnauthorized", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUnauthorized() {\n        DomainWideDelegationAuthorityProvider provider = new DomainWideDelegationAuthorityProvider();\n        try {\n            provider.getAccessToken(\"bob@example.com\", SCOPES);\n            fail();\n        } catch (StatusRuntimeException e) {\n            assertEquals(Status.PERMISSION_DENIED.getCode(), e.getStatus().getCode());\n        }\n    }", "signature": "void testUnauthorized()", "full_signature": "@Test public void testUnauthorized()", "class_method_signature": "DomainWideDelegationAuthorityProviderTest.testUnauthorized()", "testcase": true, "constructor": false, "invocations": ["getAccessToken", "fail", "assertEquals", "getCode", "getCode", "getStatus"]}, "focal_class": {"identifier": "DomainWideDelegationAuthorityProvider", "superclass": "extends AbstractUserProvider", "interfaces": "", "fields": [{"original_string": "private final static String IAM_API = \"https://www.googleapis.com/auth/iam\";", "modifier": "private final static", "type": "String", "declarator": "IAM_API = \"https://www.googleapis.com/auth/iam\"", "var_name": "IAM_API"}], "methods": [{"identifier": "getSignedJWT", "parameters": "(String googleIdentity, List<String> scopes)", "modifiers": "private", "return": "String", "signature": "String getSignedJWT(String googleIdentity, List<String> scopes)", "full_signature": "private String getSignedJWT(String googleIdentity, List<String> scopes)", "class_method_signature": "DomainWideDelegationAuthorityProvider.getSignedJWT(String googleIdentity, List<String> scopes)", "testcase": false, "constructor": false}, {"identifier": "tradeSignedJWTForAccessToken", "parameters": "(String signedJWT)", "modifiers": "private", "return": "AccessToken", "signature": "AccessToken tradeSignedJWTForAccessToken(String signedJWT)", "full_signature": "private AccessToken tradeSignedJWTForAccessToken(String signedJWT)", "class_method_signature": "DomainWideDelegationAuthorityProvider.tradeSignedJWTForAccessToken(String signedJWT)", "testcase": false, "constructor": false}, {"identifier": "getAccessToken", "parameters": "(String googleIdentity, List<String> scopes)", "modifiers": "@Override public", "return": "AccessToken", "signature": "AccessToken getAccessToken(String googleIdentity, List<String> scopes)", "full_signature": "@Override public AccessToken getAccessToken(String googleIdentity, List<String> scopes)", "class_method_signature": "DomainWideDelegationAuthorityProvider.getAccessToken(String googleIdentity, List<String> scopes)", "testcase": false, "constructor": false}], "file": "code/broker-server/src/main/java/com/google/cloud/broker/apps/brokerserver/accesstokens/providers/DomainWideDelegationAuthorityProvider.java"}, "focal_method": {"identifier": "getAccessToken", "parameters": "(String googleIdentity, List<String> scopes)", "modifiers": "@Override public", "return": "AccessToken", "body": "@Override\n    public AccessToken getAccessToken(String googleIdentity, List<String> scopes) {\n        // Get signed JWT\n        String signedJWT = getSignedJWT(googleIdentity, scopes);\n        // Obtain and return new access token for the owner\n        return tradeSignedJWTForAccessToken(signedJWT);\n    }", "signature": "AccessToken getAccessToken(String googleIdentity, List<String> scopes)", "full_signature": "@Override public AccessToken getAccessToken(String googleIdentity, List<String> scopes)", "class_method_signature": "DomainWideDelegationAuthorityProvider.getAccessToken(String googleIdentity, List<String> scopes)", "testcase": false, "constructor": false, "invocations": ["getSignedJWT", "tradeSignedJWTForAccessToken"]}, "repository": {"repo_id": 176837289, "url": "https://github.com/GoogleCloudPlatform/gcp-token-broker", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 27, "size": 1700, "license": "licensed"}}