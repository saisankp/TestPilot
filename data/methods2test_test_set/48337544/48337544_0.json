{"test_class": {"identifier": "UninstantiatedDescribableTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin/src/test/java/org/jenkinsci/plugins/structs/describable/UninstantiatedDescribableTest.java"}, "test_case": {"identifier": "_toString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void _toString() {\n        assertEquals(\"@symbol$class(x=4,y=hello)\", make().toString());\n    }", "signature": "void _toString()", "full_signature": "@Test public void _toString()", "class_method_signature": "UninstantiatedDescribableTest._toString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "make"]}, "focal_class": {"identifier": "UninstantiatedDescribable", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private String symbol;", "modifier": "private", "type": "String", "declarator": "symbol", "var_name": "symbol"}, {"original_string": "private String klass;", "modifier": "private", "type": "String", "declarator": "klass", "var_name": "klass"}, {"original_string": "private final Map<String,?> arguments;", "modifier": "private final", "type": "Map<String,?>", "declarator": "arguments", "var_name": "arguments"}, {"original_string": "private DescribableModel model;", "modifier": "private", "type": "DescribableModel", "declarator": "model", "var_name": "model"}, {"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "public static final String ANONYMOUS_KEY = \"<anonymous>\";", "modifier": "public static final", "type": "String", "declarator": "ANONYMOUS_KEY = \"<anonymous>\"", "var_name": "ANONYMOUS_KEY"}], "methods": [{"identifier": "UninstantiatedDescribable", "parameters": "(String symbol, String klass, Map<String, ?> arguments)", "modifiers": "public", "return": "", "signature": " UninstantiatedDescribable(String symbol, String klass, Map<String, ?> arguments)", "full_signature": "public  UninstantiatedDescribable(String symbol, String klass, Map<String, ?> arguments)", "class_method_signature": "UninstantiatedDescribable.UninstantiatedDescribable(String symbol, String klass, Map<String, ?> arguments)", "testcase": false, "constructor": true}, {"identifier": "UninstantiatedDescribable", "parameters": "(Map<String, ?> arguments)", "modifiers": "public", "return": "", "signature": " UninstantiatedDescribable(Map<String, ?> arguments)", "full_signature": "public  UninstantiatedDescribable(Map<String, ?> arguments)", "class_method_signature": "UninstantiatedDescribable.UninstantiatedDescribable(Map<String, ?> arguments)", "testcase": false, "constructor": true}, {"identifier": "withArguments", "parameters": "(Map<String, ?> arguments)", "modifiers": "public", "return": "UninstantiatedDescribable", "signature": "UninstantiatedDescribable withArguments(Map<String, ?> arguments)", "full_signature": "public UninstantiatedDescribable withArguments(Map<String, ?> arguments)", "class_method_signature": "UninstantiatedDescribable.withArguments(Map<String, ?> arguments)", "testcase": false, "constructor": false}, {"identifier": "getSymbol", "parameters": "()", "modifiers": "public @Nullable", "return": "String", "signature": "String getSymbol()", "full_signature": "public @Nullable String getSymbol()", "class_method_signature": "UninstantiatedDescribable.getSymbol()", "testcase": false, "constructor": false}, {"identifier": "setSymbol", "parameters": "(String symbol)", "modifiers": "public", "return": "void", "signature": "void setSymbol(String symbol)", "full_signature": "public void setSymbol(String symbol)", "class_method_signature": "UninstantiatedDescribable.setSymbol(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getKlass", "parameters": "()", "modifiers": "public @Nullable", "return": "String", "signature": "String getKlass()", "full_signature": "public @Nullable String getKlass()", "class_method_signature": "UninstantiatedDescribable.getKlass()", "testcase": false, "constructor": false}, {"identifier": "setKlass", "parameters": "(String klass)", "modifiers": "public", "return": "void", "signature": "void setKlass(String klass)", "full_signature": "public void setKlass(String klass)", "class_method_signature": "UninstantiatedDescribable.setKlass(String klass)", "testcase": false, "constructor": false}, {"identifier": "getModel", "parameters": "()", "modifiers": "public @CheckForNull", "return": "DescribableModel", "signature": "DescribableModel getModel()", "full_signature": "public @CheckForNull DescribableModel getModel()", "class_method_signature": "UninstantiatedDescribable.getModel()", "testcase": false, "constructor": false}, {"identifier": "setModel", "parameters": "(DescribableModel model)", "modifiers": "public", "return": "void", "signature": "void setModel(DescribableModel model)", "full_signature": "public void setModel(DescribableModel model)", "class_method_signature": "UninstantiatedDescribable.setModel(DescribableModel model)", "testcase": false, "constructor": false}, {"identifier": "getArguments", "parameters": "()", "modifiers": "public", "return": "Map<String, ?>", "signature": "Map<String, ?> getArguments()", "full_signature": "public Map<String, ?> getArguments()", "class_method_signature": "UninstantiatedDescribable.getArguments()", "testcase": false, "constructor": false}, {"identifier": "hasSoleRequiredArgument", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasSoleRequiredArgument()", "full_signature": "public boolean hasSoleRequiredArgument()", "class_method_signature": "UninstantiatedDescribable.hasSoleRequiredArgument()", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "()", "modifiers": "public", "return": "Map<String,Object>", "signature": "Map<String,Object> toMap()", "full_signature": "public Map<String,Object> toMap()", "class_method_signature": "UninstantiatedDescribable.toMap()", "testcase": false, "constructor": false}, {"identifier": "toShallowMap", "parameters": "()", "modifiers": "public", "return": "Map<String,Object>", "signature": "Map<String,Object> toShallowMap()", "full_signature": "public Map<String,Object> toShallowMap()", "class_method_signature": "UninstantiatedDescribable.toShallowMap()", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "(Object v)", "modifiers": "private static", "return": "Object", "signature": "Object toMap(Object v)", "full_signature": "private static Object toMap(Object v)", "class_method_signature": "UninstantiatedDescribable.toMap(Object v)", "testcase": false, "constructor": false}, {"identifier": "instantiate", "parameters": "()", "modifiers": "@Deprecated public", "return": "Object", "signature": "Object instantiate()", "full_signature": "@Deprecated public Object instantiate()", "class_method_signature": "UninstantiatedDescribable.instantiate()", "testcase": false, "constructor": false}, {"identifier": "instantiate", "parameters": "(TaskListener listener)", "modifiers": "public", "return": "Object", "signature": "Object instantiate(TaskListener listener)", "full_signature": "public Object instantiate(TaskListener listener)", "class_method_signature": "UninstantiatedDescribable.instantiate(TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "instantiate", "parameters": "(Class<T> base)", "modifiers": "@Deprecated public", "return": "T", "signature": "T instantiate(Class<T> base)", "full_signature": "@Deprecated public T instantiate(Class<T> base)", "class_method_signature": "UninstantiatedDescribable.instantiate(Class<T> base)", "testcase": false, "constructor": false}, {"identifier": "instantiate", "parameters": "(Class<T> base, TaskListener listener)", "modifiers": "public", "return": "T", "signature": "T instantiate(Class<T> base, TaskListener listener)", "full_signature": "public T instantiate(Class<T> base, TaskListener listener)", "class_method_signature": "UninstantiatedDescribable.instantiate(Class<T> base, TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(Object o)", "modifiers": "public static", "return": "UninstantiatedDescribable", "signature": "UninstantiatedDescribable from(Object o)", "full_signature": "public static UninstantiatedDescribable from(Object o)", "class_method_signature": "UninstantiatedDescribable.from(Object o)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "UninstantiatedDescribable.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "UninstantiatedDescribable.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UninstantiatedDescribable.toString()", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/org/jenkinsci/plugins/structs/describable/UninstantiatedDescribable.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuilder b = new StringBuilder();\n        if (symbol!=null)\n            b.append('@').append(symbol);\n        if (klass!=null)\n            b.append('$').append(klass);\n        b.append('(');\n        boolean first = true;\n        for (Entry<String,?> e : arguments.entrySet()) {\n            if (first)  first = false;\n            else        b.append(',');\n            b.append(e.getKey()).append('=').append(e.getValue());\n        }\n        b.append(')');\n        return b.toString();\n   }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UninstantiatedDescribable.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "entrySet", "append", "append", "append", "append", "getKey", "getValue", "append", "toString"]}, "repository": {"repo_id": 48337544, "url": "https://github.com/jenkinsci/structs-plugin", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 8, "size": 421, "license": "licensed"}}