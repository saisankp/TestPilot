{"test_class": {"identifier": "WbEditingActionTest", "superclass": "", "interfaces": "", "fields": [], "file": "wdtk-wikibaseapi/src/test/java/org/wikidata/wdtk/wikibaseapi/WbEditingActionTest.java"}, "test_case": {"identifier": "testTitleNoSite", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n\tpublic void testTitleNoSite() throws IOException,\n\t\t\tMediaWikiApiErrorException {\n\t\tWbEditingAction weea = new WbEditingAction(\n\t\t\t\tnew MockBasicApiConnection(), Datamodel.SITE_WIKIDATA);\n\t\tweea.wbEditEntity(null, null, \"Title\", null, \"{}\", false, false, 0,\n\t\t\t\tnull, null);\n\t}", "signature": "void testTitleNoSite()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testTitleNoSite()", "class_method_signature": "WbEditingActionTest.testTitleNoSite()", "testcase": true, "constructor": false, "invocations": ["wbEditEntity"]}, "focal_class": {"identifier": "WbEditingAction", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Logger logger = LoggerFactory\n\t\t\t.getLogger(WbEditingAction.class);", "modifier": "static final", "type": "Logger", "declarator": "logger = LoggerFactory\n\t\t\t.getLogger(WbEditingAction.class)", "var_name": "logger"}, {"original_string": "final ApiConnection connection;", "modifier": "final", "type": "ApiConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "final String siteIri;", "modifier": "final", "type": "String", "declarator": "siteIri", "var_name": "siteIri"}, {"original_string": "final ObjectMapper mapper;", "modifier": "final", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "int maxLag = 5;", "modifier": "", "type": "int", "declarator": "maxLag = 5", "var_name": "maxLag"}, {"original_string": "int maxLagMaxRetries = 14;", "modifier": "", "type": "int", "declarator": "maxLagMaxRetries = 14", "var_name": "maxLagMaxRetries"}, {"original_string": "int maxLagFirstWaitTime = 1000;", "modifier": "", "type": "int", "declarator": "maxLagFirstWaitTime = 1000", "var_name": "maxLagFirstWaitTime"}, {"original_string": "double maxLagBackOffFactor = 1.5;", "modifier": "", "type": "double", "declarator": "maxLagBackOffFactor = 1.5", "var_name": "maxLagBackOffFactor"}, {"original_string": "final static int editTimeWindow = 9;", "modifier": "final static", "type": "int", "declarator": "editTimeWindow = 9", "var_name": "editTimeWindow"}, {"original_string": "int averageMsecsPerEdit = 2000;", "modifier": "", "type": "int", "declarator": "averageMsecsPerEdit = 2000", "var_name": "averageMsecsPerEdit"}, {"original_string": "final long[] recentEditTimes = new long[editTimeWindow];", "modifier": "final", "type": "long[]", "declarator": "recentEditTimes = new long[editTimeWindow]", "var_name": "recentEditTimes"}, {"original_string": "int curEditTimeSlot = 0;", "modifier": "", "type": "int", "declarator": "curEditTimeSlot = 0", "var_name": "curEditTimeSlot"}, {"original_string": "int remainingEdits = -1;", "modifier": "", "type": "int", "declarator": "remainingEdits = -1", "var_name": "remainingEdits"}], "methods": [{"identifier": "WbEditingAction", "parameters": "(ApiConnection connection, String siteIri)", "modifiers": "public", "return": "", "signature": " WbEditingAction(ApiConnection connection, String siteIri)", "full_signature": "public  WbEditingAction(ApiConnection connection, String siteIri)", "class_method_signature": "WbEditingAction.WbEditingAction(ApiConnection connection, String siteIri)", "testcase": false, "constructor": true}, {"identifier": "getMaxLag", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxLag()", "full_signature": "public int getMaxLag()", "class_method_signature": "WbEditingAction.getMaxLag()", "testcase": false, "constructor": false}, {"identifier": "setMaxLag", "parameters": "(int maxLag)", "modifiers": "public", "return": "void", "signature": "void setMaxLag(int maxLag)", "full_signature": "public void setMaxLag(int maxLag)", "class_method_signature": "WbEditingAction.setMaxLag(int maxLag)", "testcase": false, "constructor": false}, {"identifier": "getRemainingEdits", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRemainingEdits()", "full_signature": "public int getRemainingEdits()", "class_method_signature": "WbEditingAction.getRemainingEdits()", "testcase": false, "constructor": false}, {"identifier": "setRemainingEdits", "parameters": "(int remainingEdits)", "modifiers": "public", "return": "void", "signature": "void setRemainingEdits(int remainingEdits)", "full_signature": "public void setRemainingEdits(int remainingEdits)", "class_method_signature": "WbEditingAction.setRemainingEdits(int remainingEdits)", "testcase": false, "constructor": false}, {"identifier": "getAverageTimePerEdit", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getAverageTimePerEdit()", "full_signature": "public int getAverageTimePerEdit()", "class_method_signature": "WbEditingAction.getAverageTimePerEdit()", "testcase": false, "constructor": false}, {"identifier": "setAverageTimePerEdit", "parameters": "(int milliseconds)", "modifiers": "public", "return": "void", "signature": "void setAverageTimePerEdit(int milliseconds)", "full_signature": "public void setAverageTimePerEdit(int milliseconds)", "class_method_signature": "WbEditingAction.setAverageTimePerEdit(int milliseconds)", "testcase": false, "constructor": false}, {"identifier": "wbEditEntity", "parameters": "(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)", "modifiers": "public", "return": "EntityDocument", "signature": "EntityDocument wbEditEntity(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)", "full_signature": "public EntityDocument wbEditEntity(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)", "class_method_signature": "WbEditingAction.wbEditEntity(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)", "testcase": false, "constructor": false}, {"identifier": "wbSetLabel", "parameters": "(String id, String site, String title,\n\t\t\tString newEntity, String language, String value,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "modifiers": "public", "return": "JsonNode", "signature": "JsonNode wbSetLabel(String id, String site, String title,\n\t\t\tString newEntity, String language, String value,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "full_signature": "public JsonNode wbSetLabel(String id, String site, String title,\n\t\t\tString newEntity, String language, String value,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "class_method_signature": "WbEditingAction.wbSetLabel(String id, String site, String title,\n\t\t\tString newEntity, String language, String value,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "testcase": false, "constructor": false}, {"identifier": "wbSetDescription", "parameters": "(String id, String site, String title,\n\t\t\tString newEntity, String language, String value,\n\t\t\tboolean bot, long baserevid, String summary,\n\t\t\tList<String> tags)", "modifiers": "public", "return": "JsonNode", "signature": "JsonNode wbSetDescription(String id, String site, String title,\n\t\t\tString newEntity, String language, String value,\n\t\t\tboolean bot, long baserevid, String summary,\n\t\t\tList<String> tags)", "full_signature": "public JsonNode wbSetDescription(String id, String site, String title,\n\t\t\tString newEntity, String language, String value,\n\t\t\tboolean bot, long baserevid, String summary,\n\t\t\tList<String> tags)", "class_method_signature": "WbEditingAction.wbSetDescription(String id, String site, String title,\n\t\t\tString newEntity, String language, String value,\n\t\t\tboolean bot, long baserevid, String summary,\n\t\t\tList<String> tags)", "testcase": false, "constructor": false}, {"identifier": "wbSetAliases", "parameters": "(String id, String site, String title,\n\t\t\tString newEntity, String language, List<String> add,\n\t\t\tList<String> remove, List<String> set,\n\t\t\tboolean bot, long baserevid, String summary,\n\t\t\tList<String> tags)", "modifiers": "public", "return": "JsonNode", "signature": "JsonNode wbSetAliases(String id, String site, String title,\n\t\t\tString newEntity, String language, List<String> add,\n\t\t\tList<String> remove, List<String> set,\n\t\t\tboolean bot, long baserevid, String summary,\n\t\t\tList<String> tags)", "full_signature": "public JsonNode wbSetAliases(String id, String site, String title,\n\t\t\tString newEntity, String language, List<String> add,\n\t\t\tList<String> remove, List<String> set,\n\t\t\tboolean bot, long baserevid, String summary,\n\t\t\tList<String> tags)", "class_method_signature": "WbEditingAction.wbSetAliases(String id, String site, String title,\n\t\t\tString newEntity, String language, List<String> add,\n\t\t\tList<String> remove, List<String> set,\n\t\t\tboolean bot, long baserevid, String summary,\n\t\t\tList<String> tags)", "testcase": false, "constructor": false}, {"identifier": "wbSetClaim", "parameters": "(String statement,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "modifiers": "public", "return": "JsonNode", "signature": "JsonNode wbSetClaim(String statement,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "full_signature": "public JsonNode wbSetClaim(String statement,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "class_method_signature": "WbEditingAction.wbSetClaim(String statement,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "testcase": false, "constructor": false}, {"identifier": "wbRemoveClaims", "parameters": "(List<String> statementIds,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "modifiers": "public", "return": "JsonNode", "signature": "JsonNode wbRemoveClaims(List<String> statementIds,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "full_signature": "public JsonNode wbRemoveClaims(List<String> statementIds,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "class_method_signature": "WbEditingAction.wbRemoveClaims(List<String> statementIds,\n\t\t\tboolean bot, long baserevid, String summary, List<String> tags)", "testcase": false, "constructor": false}, {"identifier": "performAPIAction", "parameters": "(\n\t\t\tString action,\n\t\t\tString id,\n\t\t\tString site,\n\t\t\tString title,\n\t\t\tString newEntity,\n\t\t\tMap<String, String> parameters,\n\t\t\tString summary,\n\t\t\tList<String> tags,\n\t\t\tlong baserevid,\n\t\t\tboolean bot)", "modifiers": "private", "return": "JsonNode", "signature": "JsonNode performAPIAction(\n\t\t\tString action,\n\t\t\tString id,\n\t\t\tString site,\n\t\t\tString title,\n\t\t\tString newEntity,\n\t\t\tMap<String, String> parameters,\n\t\t\tString summary,\n\t\t\tList<String> tags,\n\t\t\tlong baserevid,\n\t\t\tboolean bot)", "full_signature": "private JsonNode performAPIAction(\n\t\t\tString action,\n\t\t\tString id,\n\t\t\tString site,\n\t\t\tString title,\n\t\t\tString newEntity,\n\t\t\tMap<String, String> parameters,\n\t\t\tString summary,\n\t\t\tList<String> tags,\n\t\t\tlong baserevid,\n\t\t\tboolean bot)", "class_method_signature": "WbEditingAction.performAPIAction(\n\t\t\tString action,\n\t\t\tString id,\n\t\t\tString site,\n\t\t\tString title,\n\t\t\tString newEntity,\n\t\t\tMap<String, String> parameters,\n\t\t\tString summary,\n\t\t\tList<String> tags,\n\t\t\tlong baserevid,\n\t\t\tboolean bot)", "testcase": false, "constructor": false}, {"identifier": "getEntityDocumentFromResponse", "parameters": "(JsonNode root)", "modifiers": "protected", "return": "EntityDocument", "signature": "EntityDocument getEntityDocumentFromResponse(JsonNode root)", "full_signature": "protected EntityDocument getEntityDocumentFromResponse(JsonNode root)", "class_method_signature": "WbEditingAction.getEntityDocumentFromResponse(JsonNode root)", "testcase": false, "constructor": false}, {"identifier": "parseJsonResponse", "parameters": "(JsonNode entityNode)", "modifiers": "private", "return": "EntityDocument", "signature": "EntityDocument parseJsonResponse(JsonNode entityNode)", "full_signature": "private EntityDocument parseJsonResponse(JsonNode entityNode)", "class_method_signature": "WbEditingAction.parseJsonResponse(JsonNode entityNode)", "testcase": false, "constructor": false}, {"identifier": "checkEditSpeed", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkEditSpeed()", "full_signature": "private void checkEditSpeed()", "class_method_signature": "WbEditingAction.checkEditSpeed()", "testcase": false, "constructor": false}, {"identifier": "getMaxLagMaxRetries", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxLagMaxRetries()", "full_signature": "public int getMaxLagMaxRetries()", "class_method_signature": "WbEditingAction.getMaxLagMaxRetries()", "testcase": false, "constructor": false}, {"identifier": "setMaxLagMaxRetries", "parameters": "(int retries)", "modifiers": "public", "return": "void", "signature": "void setMaxLagMaxRetries(int retries)", "full_signature": "public void setMaxLagMaxRetries(int retries)", "class_method_signature": "WbEditingAction.setMaxLagMaxRetries(int retries)", "testcase": false, "constructor": false}, {"identifier": "getMaxLagFirstWaitTime", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxLagFirstWaitTime()", "full_signature": "public int getMaxLagFirstWaitTime()", "class_method_signature": "WbEditingAction.getMaxLagFirstWaitTime()", "testcase": false, "constructor": false}, {"identifier": "setMaxLagFirstWaitTime", "parameters": "(int time)", "modifiers": "public", "return": "void", "signature": "void setMaxLagFirstWaitTime(int time)", "full_signature": "public void setMaxLagFirstWaitTime(int time)", "class_method_signature": "WbEditingAction.setMaxLagFirstWaitTime(int time)", "testcase": false, "constructor": false}, {"identifier": "getMaxLagBackOffFactor", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxLagBackOffFactor()", "full_signature": "public double getMaxLagBackOffFactor()", "class_method_signature": "WbEditingAction.getMaxLagBackOffFactor()", "testcase": false, "constructor": false}, {"identifier": "setMaxLagBackOffFactor", "parameters": "(double value)", "modifiers": "public", "return": "void", "signature": "void setMaxLagBackOffFactor(double value)", "full_signature": "public void setMaxLagBackOffFactor(double value)", "class_method_signature": "WbEditingAction.setMaxLagBackOffFactor(double value)", "testcase": false, "constructor": false}, {"identifier": "getCurrentLag", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getCurrentLag()", "full_signature": "public double getCurrentLag()", "class_method_signature": "WbEditingAction.getCurrentLag()", "testcase": false, "constructor": false}], "file": "wdtk-wikibaseapi/src/main/java/org/wikidata/wdtk/wikibaseapi/WbEditingAction.java"}, "focal_method": {"identifier": "wbEditEntity", "parameters": "(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)", "modifiers": "public", "return": "EntityDocument", "body": "public EntityDocument wbEditEntity(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)\n\t\t\t\t\tthrows IOException, MediaWikiApiErrorException {\n\n\t\tValidate.notNull(data,\n\t\t\t\t\"Data parameter cannot be null when editing entity data\");\n\n\t\tMap<String, String> parameters = new HashMap<>();\n\t\tparameters.put(\"data\", data);\n\t\tif (clear) {\n\t\t\tparameters.put(\"clear\", \"\");\n\t\t}\n\t\t\n\t\tJsonNode response = performAPIAction(\"wbeditentity\", id, site, title,\n\t\t\t\tnewEntity, parameters, summary, tags, baserevid, bot);\n\t\treturn getEntityDocumentFromResponse(response);\n\t}", "signature": "EntityDocument wbEditEntity(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)", "full_signature": "public EntityDocument wbEditEntity(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)", "class_method_signature": "WbEditingAction.wbEditEntity(String id, String site, String title,\n\t\t\tString newEntity, String data, boolean clear, boolean bot,\n\t\t\tlong baserevid, String summary, List<String> tags)", "testcase": false, "constructor": false, "invocations": ["notNull", "put", "put", "performAPIAction", "getEntityDocumentFromResponse"]}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}