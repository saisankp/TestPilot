{"test_class": {"identifier": "NotFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NotFunction notFunction;", "modifier": "private", "type": "NotFunction", "declarator": "notFunction", "var_name": "notFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/NotFunctionTest.java"}, "test_case": {"identifier": "invokeNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeNull() {\n        FunctionTestUtil.assertResultNull(notFunction.invoke(null));\n    }", "signature": "void invokeNull()", "full_signature": "@Test public void invokeNull()", "class_method_signature": "NotFunctionTest.invokeNull()", "testcase": true, "constructor": false, "invocations": ["assertResultNull", "invoke"]}, "focal_class": {"identifier": "NotFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "NotFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " NotFunction()", "full_signature": "public  NotFunction()", "class_method_signature": "NotFunction.NotFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName(\"negand\") Object negand)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "signature": "FEELFnResult<Boolean> invoke(@ParameterName(\"negand\") Object negand)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName(\"negand\") Object negand)", "class_method_signature": "NotFunction.invoke(@ParameterName(\"negand\") Object negand)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/NotFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName(\"negand\") Object negand)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "body": "public FEELFnResult<Boolean> invoke(@ParameterName(\"negand\") Object negand) {\n        if ( negand != null && !(negand instanceof Boolean) ) {\n            return FEELFnResult.ofError( new InvalidParametersEvent( Severity.ERROR, \"negand\", \"must be a boolean value\" ) );\n        }\n        return FEELFnResult.ofResult( negand == null ? null : !((Boolean) negand) );\n    }", "signature": "FEELFnResult<Boolean> invoke(@ParameterName(\"negand\") Object negand)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName(\"negand\") Object negand)", "class_method_signature": "NotFunction.invoke(@ParameterName(\"negand\") Object negand)", "testcase": false, "constructor": false, "invocations": ["ofError", "ofResult"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}