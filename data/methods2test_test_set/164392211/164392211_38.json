{"test_class": {"identifier": "BooleanArraySeriesTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib/src/test/java/com/nhl/dflib/series/BooleanArraySeriesTest.java"}, "test_case": {"identifier": "testGetBoolean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetBoolean() {\n        BooleanArraySeries s = new BooleanArraySeries(true, false);\n        assertEquals(true, s.getBoolean(0));\n        assertEquals(false, s.getBoolean(1));\n    }", "signature": "void testGetBoolean()", "full_signature": "@Test public void testGetBoolean()", "class_method_signature": "BooleanArraySeriesTest.testGetBoolean()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getBoolean", "assertEquals", "getBoolean"]}, "focal_class": {"identifier": "BooleanArraySeries", "superclass": "extends BooleanBaseSeries", "interfaces": "", "fields": [{"original_string": "private final boolean[] data;", "modifier": "private final", "type": "boolean[]", "declarator": "data", "var_name": "data"}, {"original_string": "private final int offset;", "modifier": "private final", "type": "int", "declarator": "offset", "var_name": "offset"}, {"original_string": "private final int size;", "modifier": "private final", "type": "int", "declarator": "size", "var_name": "size"}], "methods": [{"identifier": "BooleanArraySeries", "parameters": "(boolean... data)", "modifiers": "public", "return": "", "signature": " BooleanArraySeries(boolean... data)", "full_signature": "public  BooleanArraySeries(boolean... data)", "class_method_signature": "BooleanArraySeries.BooleanArraySeries(boolean... data)", "testcase": false, "constructor": true}, {"identifier": "BooleanArraySeries", "parameters": "(boolean[] data, int offset, int size)", "modifiers": "public", "return": "", "signature": " BooleanArraySeries(boolean[] data, int offset, int size)", "full_signature": "public  BooleanArraySeries(boolean[] data, int offset, int size)", "class_method_signature": "BooleanArraySeries.BooleanArraySeries(boolean[] data, int offset, int size)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "BooleanArraySeries.size()", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(int index)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getBoolean(int index)", "full_signature": "@Override public boolean getBoolean(int index)", "class_method_signature": "BooleanArraySeries.getBoolean(int index)", "testcase": false, "constructor": false}, {"identifier": "copyToBoolean", "parameters": "(boolean[] to, int fromOffset, int toOffset, int len)", "modifiers": "@Override public", "return": "void", "signature": "void copyToBoolean(boolean[] to, int fromOffset, int toOffset, int len)", "full_signature": "@Override public void copyToBoolean(boolean[] to, int fromOffset, int toOffset, int len)", "class_method_signature": "BooleanArraySeries.copyToBoolean(boolean[] to, int fromOffset, int toOffset, int len)", "testcase": false, "constructor": false}, {"identifier": "headBoolean", "parameters": "(int len)", "modifiers": "@Override public", "return": "BooleanSeries", "signature": "BooleanSeries headBoolean(int len)", "full_signature": "@Override public BooleanSeries headBoolean(int len)", "class_method_signature": "BooleanArraySeries.headBoolean(int len)", "testcase": false, "constructor": false}, {"identifier": "tailBoolean", "parameters": "(int len)", "modifiers": "@Override public", "return": "BooleanSeries", "signature": "BooleanSeries tailBoolean(int len)", "full_signature": "@Override public BooleanSeries tailBoolean(int len)", "class_method_signature": "BooleanArraySeries.tailBoolean(int len)", "testcase": false, "constructor": false}, {"identifier": "rangeOpenClosedBoolean", "parameters": "(int fromInclusive, int toExclusive)", "modifiers": "@Override public", "return": "BooleanSeries", "signature": "BooleanSeries rangeOpenClosedBoolean(int fromInclusive, int toExclusive)", "full_signature": "@Override public BooleanSeries rangeOpenClosedBoolean(int fromInclusive, int toExclusive)", "class_method_signature": "BooleanArraySeries.rangeOpenClosedBoolean(int fromInclusive, int toExclusive)", "testcase": false, "constructor": false}, {"identifier": "materializeBoolean", "parameters": "()", "modifiers": "@Override public", "return": "BooleanSeries", "signature": "BooleanSeries materializeBoolean()", "full_signature": "@Override public BooleanSeries materializeBoolean()", "class_method_signature": "BooleanArraySeries.materializeBoolean()", "testcase": false, "constructor": false}, {"identifier": "countTrue", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countTrue()", "full_signature": "@Override public int countTrue()", "class_method_signature": "BooleanArraySeries.countTrue()", "testcase": false, "constructor": false}, {"identifier": "countFalse", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countFalse()", "full_signature": "@Override public int countFalse()", "class_method_signature": "BooleanArraySeries.countFalse()", "testcase": false, "constructor": false}], "file": "dflib/src/main/java/com/nhl/dflib/series/BooleanArraySeries.java"}, "focal_method": {"identifier": "getBoolean", "parameters": "(int index)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean getBoolean(int index) {\n        if (index >= size) {\n            throw new ArrayIndexOutOfBoundsException(index);\n        }\n\n        return data[offset + index];\n    }", "signature": "boolean getBoolean(int index)", "full_signature": "@Override public boolean getBoolean(int index)", "class_method_signature": "BooleanArraySeries.getBoolean(int index)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}