{"test_class": {"identifier": "DvrApiImplTest", "superclass": "extends ApplicationTestCase", "interfaces": "", "fields": [{"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private TitleInfoEntityJsonMapper titleInfoEntityJsonMapper;", "modifier": "private", "type": "TitleInfoEntityJsonMapper", "declarator": "titleInfoEntityJsonMapper", "var_name": "titleInfoEntityJsonMapper"}, {"original_string": "private ProgramEntityJsonMapper programEntityJsonMapper;", "modifier": "private", "type": "ProgramEntityJsonMapper", "declarator": "programEntityJsonMapper", "var_name": "programEntityJsonMapper"}, {"original_string": "@Mock\n    private DvrApiImpl api;", "modifier": "@Mock\n    private", "type": "DvrApiImpl", "declarator": "api", "var_name": "api"}], "file": "mythtv-player/src/test/java/org/mythtv/android/data/net/DvrApiImplTest.java"}, "test_case": {"identifier": "testTitleInfoEntityList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTitleInfoEntityList() throws Exception{\n\n//        when( api.titleInfoEntityList() ).thenReturn( Observable.create( setupTitleInfos() ) );\n\n        Observable<List<TitleInfoEntity>> titleInfoEntityList = api.titleInfoEntityList();\n        assertThat(titleInfoEntityList, not(nullValue()));\n\n    }", "signature": "void testTitleInfoEntityList()", "full_signature": "@Test public void testTitleInfoEntityList()", "class_method_signature": "DvrApiImplTest.testTitleInfoEntityList()", "testcase": true, "constructor": false, "invocations": ["titleInfoEntityList", "assertThat", "not", "nullValue"]}, "focal_class": {"identifier": "DvrApiImpl", "superclass": "extends BaseApi", "interfaces": "implements DvrApi", "fields": [{"original_string": "private static final String TAG = DvrApiImpl.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = DvrApiImpl.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private static final DateTimeFormatter fmt = DateTimeFormat.forPattern( \"yyyy-MM-dd'T'HH:mm:ss'Z'\" );", "modifier": "private static final", "type": "DateTimeFormatter", "declarator": "fmt = DateTimeFormat.forPattern( \"yyyy-MM-dd'T'HH:mm:ss'Z'\" )", "var_name": "fmt"}, {"original_string": "private final OkHttpClient okHttpClient;", "modifier": "private final", "type": "OkHttpClient", "declarator": "okHttpClient", "var_name": "okHttpClient"}, {"original_string": "private final TitleInfoEntityJsonMapper titleInfoEntityJsonMapper;", "modifier": "private final", "type": "TitleInfoEntityJsonMapper", "declarator": "titleInfoEntityJsonMapper", "var_name": "titleInfoEntityJsonMapper"}, {"original_string": "private final ProgramEntityJsonMapper programEntityJsonMapper;", "modifier": "private final", "type": "ProgramEntityJsonMapper", "declarator": "programEntityJsonMapper", "var_name": "programEntityJsonMapper"}, {"original_string": "private final EncoderEntityJsonMapper encoderEntityJsonMapper;", "modifier": "private final", "type": "EncoderEntityJsonMapper", "declarator": "encoderEntityJsonMapper", "var_name": "encoderEntityJsonMapper"}, {"original_string": "private final BooleanJsonMapper booleanJsonMapper;", "modifier": "private final", "type": "BooleanJsonMapper", "declarator": "booleanJsonMapper", "var_name": "booleanJsonMapper"}, {"original_string": "private final LongJsonMapper longJsonMapper;", "modifier": "private final", "type": "LongJsonMapper", "declarator": "longJsonMapper", "var_name": "longJsonMapper"}], "methods": [{"identifier": "DvrApiImpl", "parameters": "( final Context context, final SharedPreferences sharedPreferences, final OkHttpClient okHttpClient, final TitleInfoEntityJsonMapper titleInfoEntityJsonMapper, final ProgramEntityJsonMapper programEntityJsonMapper, final EncoderEntityJsonMapper encoderEntityJsonMapper, final BooleanJsonMapper booleanJsonMapper, final LongJsonMapper longJsonMapper )", "modifiers": "public", "return": "", "signature": " DvrApiImpl( final Context context, final SharedPreferences sharedPreferences, final OkHttpClient okHttpClient, final TitleInfoEntityJsonMapper titleInfoEntityJsonMapper, final ProgramEntityJsonMapper programEntityJsonMapper, final EncoderEntityJsonMapper encoderEntityJsonMapper, final BooleanJsonMapper booleanJsonMapper, final LongJsonMapper longJsonMapper )", "full_signature": "public  DvrApiImpl( final Context context, final SharedPreferences sharedPreferences, final OkHttpClient okHttpClient, final TitleInfoEntityJsonMapper titleInfoEntityJsonMapper, final ProgramEntityJsonMapper programEntityJsonMapper, final EncoderEntityJsonMapper encoderEntityJsonMapper, final BooleanJsonMapper booleanJsonMapper, final LongJsonMapper longJsonMapper )", "class_method_signature": "DvrApiImpl.DvrApiImpl( final Context context, final SharedPreferences sharedPreferences, final OkHttpClient okHttpClient, final TitleInfoEntityJsonMapper titleInfoEntityJsonMapper, final ProgramEntityJsonMapper programEntityJsonMapper, final EncoderEntityJsonMapper encoderEntityJsonMapper, final BooleanJsonMapper booleanJsonMapper, final LongJsonMapper longJsonMapper )", "testcase": false, "constructor": true}, {"identifier": "titleInfoEntityList", "parameters": "()", "modifiers": "@Override public", "return": "Observable<List<TitleInfoEntity>>", "signature": "Observable<List<TitleInfoEntity>> titleInfoEntityList()", "full_signature": "@Override public Observable<List<TitleInfoEntity>> titleInfoEntityList()", "class_method_signature": "DvrApiImpl.titleInfoEntityList()", "testcase": false, "constructor": false}, {"identifier": "recordedProgramEntityList", "parameters": "( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "modifiers": "@Override public", "return": "Observable<List<ProgramEntity>>", "signature": "Observable<List<ProgramEntity>> recordedProgramEntityList( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "full_signature": "@Override public Observable<List<ProgramEntity>> recordedProgramEntityList( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "class_method_signature": "DvrApiImpl.recordedProgramEntityList( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "testcase": false, "constructor": false}, {"identifier": "recordedProgramById", "parameters": "( final int recordedId, final int chanId, final DateTime startTime )", "modifiers": "@Override public", "return": "Observable<ProgramEntity>", "signature": "Observable<ProgramEntity> recordedProgramById( final int recordedId, final int chanId, final DateTime startTime )", "full_signature": "@Override public Observable<ProgramEntity> recordedProgramById( final int recordedId, final int chanId, final DateTime startTime )", "class_method_signature": "DvrApiImpl.recordedProgramById( final int recordedId, final int chanId, final DateTime startTime )", "testcase": false, "constructor": false}, {"identifier": "upcomingProgramEntityList", "parameters": "( int startIndex, int count, boolean showAll, int recordId, int recStatus )", "modifiers": "@Override public", "return": "Observable<List<ProgramEntity>>", "signature": "Observable<List<ProgramEntity>> upcomingProgramEntityList( int startIndex, int count, boolean showAll, int recordId, int recStatus )", "full_signature": "@Override public Observable<List<ProgramEntity>> upcomingProgramEntityList( int startIndex, int count, boolean showAll, int recordId, int recStatus )", "class_method_signature": "DvrApiImpl.upcomingProgramEntityList( int startIndex, int count, boolean showAll, int recordId, int recStatus )", "testcase": false, "constructor": false}, {"identifier": "encoderEntityList", "parameters": "()", "modifiers": "@Override public", "return": "Observable<List<EncoderEntity>>", "signature": "Observable<List<EncoderEntity>> encoderEntityList()", "full_signature": "@Override public Observable<List<EncoderEntity>> encoderEntityList()", "class_method_signature": "DvrApiImpl.encoderEntityList()", "testcase": false, "constructor": false}, {"identifier": "updateWatchedStatus", "parameters": "( final int id, final boolean watched )", "modifiers": "@Override public", "return": "Observable<Boolean>", "signature": "Observable<Boolean> updateWatchedStatus( final int id, final boolean watched )", "full_signature": "@Override public Observable<Boolean> updateWatchedStatus( final int id, final boolean watched )", "class_method_signature": "DvrApiImpl.updateWatchedStatus( final int id, final boolean watched )", "testcase": false, "constructor": false}, {"identifier": "getBookmark", "parameters": "( final int recordedId, final int chanId, final DateTime startTime, final String offsetType)", "modifiers": "@Override public", "return": "Observable<Long>", "signature": "Observable<Long> getBookmark( final int recordedId, final int chanId, final DateTime startTime, final String offsetType)", "full_signature": "@Override public Observable<Long> getBookmark( final int recordedId, final int chanId, final DateTime startTime, final String offsetType)", "class_method_signature": "DvrApiImpl.getBookmark( final int recordedId, final int chanId, final DateTime startTime, final String offsetType)", "testcase": false, "constructor": false}, {"identifier": "getTitleInfoEntitiesFromApi", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getTitleInfoEntitiesFromApi()", "full_signature": "private String getTitleInfoEntitiesFromApi()", "class_method_signature": "DvrApiImpl.getTitleInfoEntitiesFromApi()", "testcase": false, "constructor": false}, {"identifier": "getRecordedProgramEntitiesFromApi", "parameters": "( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "modifiers": "private", "return": "String", "signature": "String getRecordedProgramEntitiesFromApi( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "full_signature": "private String getRecordedProgramEntitiesFromApi( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "class_method_signature": "DvrApiImpl.getRecordedProgramEntitiesFromApi( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "testcase": false, "constructor": false}, {"identifier": "getRecordedProgramDetailsFromApi", "parameters": "( final int recordedId, final int chanId, final DateTime startTime )", "modifiers": "private", "return": "String", "signature": "String getRecordedProgramDetailsFromApi( final int recordedId, final int chanId, final DateTime startTime )", "full_signature": "private String getRecordedProgramDetailsFromApi( final int recordedId, final int chanId, final DateTime startTime )", "class_method_signature": "DvrApiImpl.getRecordedProgramDetailsFromApi( final int recordedId, final int chanId, final DateTime startTime )", "testcase": false, "constructor": false}, {"identifier": "getUpcomingProgramEntitiesFromApi", "parameters": "( final int startIndex, final int count, final boolean showAll, final int recordId, final int recStatus )", "modifiers": "private", "return": "String", "signature": "String getUpcomingProgramEntitiesFromApi( final int startIndex, final int count, final boolean showAll, final int recordId, final int recStatus )", "full_signature": "private String getUpcomingProgramEntitiesFromApi( final int startIndex, final int count, final boolean showAll, final int recordId, final int recStatus )", "class_method_signature": "DvrApiImpl.getUpcomingProgramEntitiesFromApi( final int startIndex, final int count, final boolean showAll, final int recordId, final int recStatus )", "testcase": false, "constructor": false}, {"identifier": "getEncoderEntitiesFromApi", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getEncoderEntitiesFromApi()", "full_signature": "private String getEncoderEntitiesFromApi()", "class_method_signature": "DvrApiImpl.getEncoderEntitiesFromApi()", "testcase": false, "constructor": false}, {"identifier": "postUpdateWatchedStatus", "parameters": "( final int id, final boolean watched )", "modifiers": "private", "return": "String", "signature": "String postUpdateWatchedStatus( final int id, final boolean watched )", "full_signature": "private String postUpdateWatchedStatus( final int id, final boolean watched )", "class_method_signature": "DvrApiImpl.postUpdateWatchedStatus( final int id, final boolean watched )", "testcase": false, "constructor": false}, {"identifier": "getBookmarkFromApi", "parameters": "( final int recordedId, final int chanId, final DateTime startTime, final String offsetType )", "modifiers": "private", "return": "String", "signature": "String getBookmarkFromApi( final int recordedId, final int chanId, final DateTime startTime, final String offsetType )", "full_signature": "private String getBookmarkFromApi( final int recordedId, final int chanId, final DateTime startTime, final String offsetType )", "class_method_signature": "DvrApiImpl.getBookmarkFromApi( final int recordedId, final int chanId, final DateTime startTime, final String offsetType )", "testcase": false, "constructor": false}], "file": "mythtv-player/src/main/java/org/mythtv/android/data/net/DvrApiImpl.java"}, "focal_method": {"identifier": "titleInfoEntityList", "parameters": "()", "modifiers": "@Override public", "return": "Observable<List<TitleInfoEntity>>", "body": "@Override\n    public Observable<List<TitleInfoEntity>> titleInfoEntityList() {\n\n        return Observable.create( new Observable.OnSubscribe<List<TitleInfoEntity>>() {\n\n            @Override\n            public void call( Subscriber<? super List<TitleInfoEntity>> subscriber ) {\n                Log.d(TAG, \"titleInfoEntityList.call : enter\");\n\n                if( isThereInternetConnection() ) {\n                    Log.d( TAG, \"titleInfoEntityList.call : network is connected\" );\n\n                    try {\n\n                        String responseRecordedProgramEntities = getTitleInfoEntitiesFromApi();\n                        if( null == responseRecordedProgramEntities ) {\n                            Log.d( TAG, \"titleInfoEntityList.call : failed to retrieve title info entities\" );\n\n                            subscriber.onError( new NetworkConnectionException() );\n\n                        } else {\n                            Log.d( TAG, \"titleInfoEntityList.call : retrieved title info entities\" );\n\n                            subscriber.onNext( titleInfoEntityJsonMapper.transformTitleInfoEntityCollection( responseRecordedProgramEntities ) );\n                            subscriber.onCompleted();\n\n                        }\n\n                    } catch( Exception e ) {\n                        Log.e( TAG, \"titleInfoEntityList.call : error\", e );\n\n                        subscriber.onError( new NetworkConnectionException( e.getCause() ) );\n\n                    }\n\n                } else {\n                    Log.d( TAG, \"titleInfoEntityList.call : network is not connected\" );\n\n                    subscriber.onError( new NetworkConnectionException() );\n\n                }\n\n                Log.d( TAG, \"titleInfoEntityList.call : exit\" );\n            }\n\n        });\n\n    }", "signature": "Observable<List<TitleInfoEntity>> titleInfoEntityList()", "full_signature": "@Override public Observable<List<TitleInfoEntity>> titleInfoEntityList()", "class_method_signature": "DvrApiImpl.titleInfoEntityList()", "testcase": false, "constructor": false, "invocations": ["create", "d", "isThereInternetConnection", "d", "getTitleInfoEntitiesFromApi", "d", "onError", "d", "onNext", "transformTitleInfoEntityCollection", "onCompleted", "e", "onError", "getCause", "d", "onError", "d"]}, "repository": {"repo_id": 27323134, "url": "https://github.com/MythTV-Clients/MythtvPlayerForAndroid", "stars": 17, "created": "11/30/2014 3:26:45 AM +00:00", "updates": "2019-12-31T22:13:00+00:00", "fork": "False", "license": "licensed"}}