{"test_class": {"identifier": "AcknowledgementsAdapterTest", "superclass": "", "interfaces": "implements ProtocolAdapterTest", "fields": [{"original_string": "private static final AcknowledgementLabel KNOWN_CUSTOM_LABEL = AcknowledgementLabel.of(\"success-ack\");", "modifier": "private static final", "type": "AcknowledgementLabel", "declarator": "KNOWN_CUSTOM_LABEL = AcknowledgementLabel.of(\"success-ack\")", "var_name": "KNOWN_CUSTOM_LABEL"}, {"original_string": "private static final HttpStatusCode KNOWN_STATUS = HttpStatusCode.CREATED;", "modifier": "private static final", "type": "HttpStatusCode", "declarator": "KNOWN_STATUS = HttpStatusCode.CREATED", "var_name": "KNOWN_STATUS"}, {"original_string": "private static final DittoHeaders KNOWN_HEADERS = DittoHeaders.newBuilder()\n            .correlationId(\"foobar\")\n            .build();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "KNOWN_HEADERS = DittoHeaders.newBuilder()\n            .correlationId(\"foobar\")\n            .build()", "var_name": "KNOWN_HEADERS"}, {"original_string": "private static final JsonValue KNOWN_PAYLOAD = JsonObject.newBuilder()\n            .set(\"foo\", 42)\n            .build();", "modifier": "private static final", "type": "JsonValue", "declarator": "KNOWN_PAYLOAD = JsonObject.newBuilder()\n            .set(\"foo\", 42)\n            .build()", "var_name": "KNOWN_PAYLOAD"}, {"original_string": "private static final Acknowledgement KNOWN_ACK_SUCCESS =\n            ThingAcknowledgementFactory.newAcknowledgement(KNOWN_CUSTOM_LABEL,\n                    TestConstants.THING_ID,\n                    KNOWN_STATUS,\n                    KNOWN_HEADERS,\n                    KNOWN_PAYLOAD);", "modifier": "private static final", "type": "Acknowledgement", "declarator": "KNOWN_ACK_SUCCESS =\n            ThingAcknowledgementFactory.newAcknowledgement(KNOWN_CUSTOM_LABEL,\n                    TestConstants.THING_ID,\n                    KNOWN_STATUS,\n                    KNOWN_HEADERS,\n                    KNOWN_PAYLOAD)", "var_name": "KNOWN_ACK_SUCCESS"}, {"original_string": "private static final AcknowledgementLabel KNOWN_CUSTOM_LABEL_2 = AcknowledgementLabel.of(\"error-ack\");", "modifier": "private static final", "type": "AcknowledgementLabel", "declarator": "KNOWN_CUSTOM_LABEL_2 = AcknowledgementLabel.of(\"error-ack\")", "var_name": "KNOWN_CUSTOM_LABEL_2"}, {"original_string": "private static final HttpStatusCode KNOWN_STATUS_2 = HttpStatusCode.CONFLICT;", "modifier": "private static final", "type": "HttpStatusCode", "declarator": "KNOWN_STATUS_2 = HttpStatusCode.CONFLICT", "var_name": "KNOWN_STATUS_2"}, {"original_string": "private static final DittoHeaders KNOWN_HEADERS_2 = DittoHeaders.newBuilder()\n            .correlationId(\"foobar\")\n            .build();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "KNOWN_HEADERS_2 = DittoHeaders.newBuilder()\n            .correlationId(\"foobar\")\n            .build()", "var_name": "KNOWN_HEADERS_2"}, {"original_string": "private static final JsonValue KNOWN_PAYLOAD_2 = null;", "modifier": "private static final", "type": "JsonValue", "declarator": "KNOWN_PAYLOAD_2 = null", "var_name": "KNOWN_PAYLOAD_2"}, {"original_string": "private static final Acknowledgement KNOWN_ACK_2_ERROR =\n            ThingAcknowledgementFactory.newAcknowledgement(KNOWN_CUSTOM_LABEL_2,\n                    TestConstants.THING_ID,\n                    KNOWN_STATUS_2,\n                    KNOWN_HEADERS_2,\n                    KNOWN_PAYLOAD_2);", "modifier": "private static final", "type": "Acknowledgement", "declarator": "KNOWN_ACK_2_ERROR =\n            ThingAcknowledgementFactory.newAcknowledgement(KNOWN_CUSTOM_LABEL_2,\n                    TestConstants.THING_ID,\n                    KNOWN_STATUS_2,\n                    KNOWN_HEADERS_2,\n                    KNOWN_PAYLOAD_2)", "var_name": "KNOWN_ACK_2_ERROR"}, {"original_string": "private static final AcknowledgementLabel KNOWN_CUSTOM_LABEL_3 = AcknowledgementLabel.of(\"second-success-ack\");", "modifier": "private static final", "type": "AcknowledgementLabel", "declarator": "KNOWN_CUSTOM_LABEL_3 = AcknowledgementLabel.of(\"second-success-ack\")", "var_name": "KNOWN_CUSTOM_LABEL_3"}, {"original_string": "private static final HttpStatusCode KNOWN_STATUS_3 = HttpStatusCode.NO_CONTENT;", "modifier": "private static final", "type": "HttpStatusCode", "declarator": "KNOWN_STATUS_3 = HttpStatusCode.NO_CONTENT", "var_name": "KNOWN_STATUS_3"}, {"original_string": "private static final DittoHeaders KNOWN_HEADERS_3 = DittoHeaders.newBuilder()\n            .correlationId(\"foobar\")\n            .build();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "KNOWN_HEADERS_3 = DittoHeaders.newBuilder()\n            .correlationId(\"foobar\")\n            .build()", "var_name": "KNOWN_HEADERS_3"}, {"original_string": "private static final JsonValue KNOWN_PAYLOAD_3 = JsonValue.of(\"Hello world!\");", "modifier": "private static final", "type": "JsonValue", "declarator": "KNOWN_PAYLOAD_3 = JsonValue.of(\"Hello world!\")", "var_name": "KNOWN_PAYLOAD_3"}, {"original_string": "private static final Acknowledgement KNOWN_ACK_3_SUCCESS = ThingAcknowledgementFactory.newAcknowledgement(\n            KNOWN_CUSTOM_LABEL_3,\n            TestConstants.THING_ID,\n            KNOWN_STATUS_3,\n            KNOWN_HEADERS_3,\n            KNOWN_PAYLOAD_3);", "modifier": "private static final", "type": "Acknowledgement", "declarator": "KNOWN_ACK_3_SUCCESS = ThingAcknowledgementFactory.newAcknowledgement(\n            KNOWN_CUSTOM_LABEL_3,\n            TestConstants.THING_ID,\n            KNOWN_STATUS_3,\n            KNOWN_HEADERS_3,\n            KNOWN_PAYLOAD_3)", "var_name": "KNOWN_ACK_3_SUCCESS"}, {"original_string": "private static TopicPath topicPathMyCustomAck;", "modifier": "private static", "type": "TopicPath", "declarator": "topicPathMyCustomAck", "var_name": "topicPathMyCustomAck"}, {"original_string": "private AcknowledgementsAdapter underTest;", "modifier": "private", "type": "AcknowledgementsAdapter", "declarator": "underTest", "var_name": "underTest"}], "file": "protocol-adapter/src/test/java/org/eclipse/ditto/protocoladapter/acknowledgements/AcknowledgementsAdapterTest.java"}, "test_case": {"identifier": "acknowledgementsContaining2successAndErrorFromAdaptable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void acknowledgementsContaining2successAndErrorFromAdaptable() {\n\n        final Adaptable adaptable = Adaptable.newBuilder(topicPathMyCustomAck)\n                .withHeaders(KNOWN_HEADERS)\n                .withPayload(Payload.newBuilder(JsonPointer.empty())\n                        .withValue(JsonObject.newBuilder()\n                                .set(KNOWN_CUSTOM_LABEL, JsonObject.newBuilder()\n                                        .set(\"status\", KNOWN_STATUS.toInt())\n                                        .set(\"payload\", KNOWN_PAYLOAD)\n                                        .set(\"headers\", KNOWN_HEADERS.toJson())\n                                        .build())\n                                .set(KNOWN_CUSTOM_LABEL_2, JsonObject.newBuilder()\n                                        .set(\"status\", KNOWN_STATUS_2.toInt())\n                                        .set(\"headers\", KNOWN_HEADERS_2.toJson())\n                                        .build())\n                                .build()\n                        )\n                        .withStatus(HttpStatusCode.FAILED_DEPENDENCY)\n                        .build())\n                .build();\n\n        final Acknowledgements expected = ThingAcknowledgementsFactory.newAcknowledgements(\n                Arrays.asList(KNOWN_ACK_SUCCESS, KNOWN_ACK_2_ERROR), KNOWN_HEADERS);\n\n        final Acknowledgements actual = underTest.fromAdaptable(adaptable);\n\n        assertWithExternalHeadersThat(actual).isEqualTo(expected);\n    }", "signature": "void acknowledgementsContaining2successAndErrorFromAdaptable()", "full_signature": "@Test public void acknowledgementsContaining2successAndErrorFromAdaptable()", "class_method_signature": "AcknowledgementsAdapterTest.acknowledgementsContaining2successAndErrorFromAdaptable()", "testcase": true, "constructor": false, "invocations": ["build", "withPayload", "withHeaders", "newBuilder", "build", "withStatus", "withValue", "newBuilder", "empty", "build", "set", "set", "newBuilder", "build", "set", "set", "set", "newBuilder", "toInt", "toJson", "build", "set", "set", "newBuilder", "toInt", "toJson", "newAcknowledgements", "asList", "fromAdaptable", "isEqualTo", "assertWithExternalHeadersThat"]}, "focal_class": {"identifier": "AcknowledgementsAdapter", "superclass": "", "interfaces": "implements Adapter<Acknowledgements>", "fields": [{"original_string": "private final HeaderTranslator headerTranslator;", "modifier": "private final", "type": "HeaderTranslator", "declarator": "headerTranslator", "var_name": "headerTranslator"}], "methods": [{"identifier": "AcknowledgementsAdapter", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "private", "return": "", "signature": " AcknowledgementsAdapter(final HeaderTranslator headerTranslator)", "full_signature": "private  AcknowledgementsAdapter(final HeaderTranslator headerTranslator)", "class_method_signature": "AcknowledgementsAdapter.AcknowledgementsAdapter(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "static", "return": "AcknowledgementsAdapter", "signature": "AcknowledgementsAdapter getInstance(final HeaderTranslator headerTranslator)", "full_signature": "static AcknowledgementsAdapter getInstance(final HeaderTranslator headerTranslator)", "class_method_signature": "AcknowledgementsAdapter.getInstance(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false}, {"identifier": "fromAdaptable", "parameters": "(final Adaptable adaptable)", "modifiers": "@Override public", "return": "Acknowledgements", "signature": "Acknowledgements fromAdaptable(final Adaptable adaptable)", "full_signature": "@Override public Acknowledgements fromAdaptable(final Adaptable adaptable)", "class_method_signature": "AcknowledgementsAdapter.fromAdaptable(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "getThingId", "parameters": "(final Adaptable adaptable)", "modifiers": "private static", "return": "ThingId", "signature": "ThingId getThingId(final Adaptable adaptable)", "full_signature": "private static ThingId getThingId(final Adaptable adaptable)", "class_method_signature": "AcknowledgementsAdapter.getThingId(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "gatherContainedAcknowledgements", "parameters": "(final Adaptable adaptable,\n            final ThingId thingId)", "modifiers": "private static", "return": "List<Acknowledgement>", "signature": "List<Acknowledgement> gatherContainedAcknowledgements(final Adaptable adaptable,\n            final ThingId thingId)", "full_signature": "private static List<Acknowledgement> gatherContainedAcknowledgements(final Adaptable adaptable,\n            final ThingId thingId)", "class_method_signature": "AcknowledgementsAdapter.gatherContainedAcknowledgements(final Adaptable adaptable,\n            final ThingId thingId)", "testcase": false, "constructor": false}, {"identifier": "buildAcknowledgements", "parameters": "(final ThingId thingId, final JsonValue value)", "modifiers": "private static", "return": "List<Acknowledgement>", "signature": "List<Acknowledgement> buildAcknowledgements(final ThingId thingId, final JsonValue value)", "full_signature": "private static List<Acknowledgement> buildAcknowledgements(final ThingId thingId, final JsonValue value)", "class_method_signature": "AcknowledgementsAdapter.buildAcknowledgements(final ThingId thingId, final JsonValue value)", "testcase": false, "constructor": false}, {"identifier": "getStatusCodeOrThrow", "parameters": "(final Adaptable adaptable)", "modifiers": "private static", "return": "HttpStatusCode", "signature": "HttpStatusCode getStatusCodeOrThrow(final Adaptable adaptable)", "full_signature": "private static HttpStatusCode getStatusCodeOrThrow(final Adaptable adaptable)", "class_method_signature": "AcknowledgementsAdapter.getStatusCodeOrThrow(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "toAdaptable", "parameters": "(final Acknowledgements acknowledgements, final TopicPath.Channel channel)", "modifiers": "@Override public", "return": "Adaptable", "signature": "Adaptable toAdaptable(final Acknowledgements acknowledgements, final TopicPath.Channel channel)", "full_signature": "@Override public Adaptable toAdaptable(final Acknowledgements acknowledgements, final TopicPath.Channel channel)", "class_method_signature": "AcknowledgementsAdapter.toAdaptable(final Acknowledgements acknowledgements, final TopicPath.Channel channel)", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "()", "modifiers": "@Override public", "return": "Set<TopicPath.Group>", "signature": "Set<TopicPath.Group> getGroups()", "full_signature": "@Override public Set<TopicPath.Group> getGroups()", "class_method_signature": "AcknowledgementsAdapter.getGroups()", "testcase": false, "constructor": false}, {"identifier": "getChannels", "parameters": "()", "modifiers": "@Override public", "return": "Set<TopicPath.Channel>", "signature": "Set<TopicPath.Channel> getChannels()", "full_signature": "@Override public Set<TopicPath.Channel> getChannels()", "class_method_signature": "AcknowledgementsAdapter.getChannels()", "testcase": false, "constructor": false}, {"identifier": "getCriteria", "parameters": "()", "modifiers": "@Override public", "return": "Set<TopicPath.Criterion>", "signature": "Set<TopicPath.Criterion> getCriteria()", "full_signature": "@Override public Set<TopicPath.Criterion> getCriteria()", "class_method_signature": "AcknowledgementsAdapter.getCriteria()", "testcase": false, "constructor": false}, {"identifier": "getActions", "parameters": "()", "modifiers": "@Override public", "return": "Set<TopicPath.Action>", "signature": "Set<TopicPath.Action> getActions()", "full_signature": "@Override public Set<TopicPath.Action> getActions()", "class_method_signature": "AcknowledgementsAdapter.getActions()", "testcase": false, "constructor": false}, {"identifier": "isForResponses", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isForResponses()", "full_signature": "@Override public boolean isForResponses()", "class_method_signature": "AcknowledgementsAdapter.isForResponses()", "testcase": false, "constructor": false}, {"identifier": "requiresSubject", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean requiresSubject()", "full_signature": "@Override public boolean requiresSubject()", "class_method_signature": "AcknowledgementsAdapter.requiresSubject()", "testcase": false, "constructor": false}, {"identifier": "getTopicPath", "parameters": "(final Acknowledgements acknowledgement, final TopicPath.Channel channel)", "modifiers": "private static", "return": "TopicPath", "signature": "TopicPath getTopicPath(final Acknowledgements acknowledgement, final TopicPath.Channel channel)", "full_signature": "private static TopicPath getTopicPath(final Acknowledgements acknowledgement, final TopicPath.Channel channel)", "class_method_signature": "AcknowledgementsAdapter.getTopicPath(final Acknowledgements acknowledgement, final TopicPath.Channel channel)", "testcase": false, "constructor": false}, {"identifier": "getPayload", "parameters": "(final Acknowledgements acknowledgements)", "modifiers": "private static", "return": "Payload", "signature": "Payload getPayload(final Acknowledgements acknowledgements)", "full_signature": "private static Payload getPayload(final Acknowledgements acknowledgements)", "class_method_signature": "AcknowledgementsAdapter.getPayload(final Acknowledgements acknowledgements)", "testcase": false, "constructor": false}, {"identifier": "getPayloadValue", "parameters": "(final Acknowledgements acknowledgements)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject getPayloadValue(final Acknowledgements acknowledgements)", "full_signature": "private static JsonObject getPayloadValue(final Acknowledgements acknowledgements)", "class_method_signature": "AcknowledgementsAdapter.getPayloadValue(final Acknowledgements acknowledgements)", "testcase": false, "constructor": false}, {"identifier": "toJsonWithoutLabel", "parameters": "(final Acknowledgement ack)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject toJsonWithoutLabel(final Acknowledgement ack)", "full_signature": "private static JsonObject toJsonWithoutLabel(final Acknowledgement ack)", "class_method_signature": "AcknowledgementsAdapter.toJsonWithoutLabel(final Acknowledgement ack)", "testcase": false, "constructor": false}, {"identifier": "getExternalHeaders", "parameters": "(final DittoHeaders acknowledgementHeaders)", "modifiers": "private", "return": "DittoHeaders", "signature": "DittoHeaders getExternalHeaders(final DittoHeaders acknowledgementHeaders)", "full_signature": "private DittoHeaders getExternalHeaders(final DittoHeaders acknowledgementHeaders)", "class_method_signature": "AcknowledgementsAdapter.getExternalHeaders(final DittoHeaders acknowledgementHeaders)", "testcase": false, "constructor": false}], "file": "protocol-adapter/src/main/java/org/eclipse/ditto/protocoladapter/acknowledgements/AcknowledgementsAdapter.java"}, "focal_method": {"identifier": "fromAdaptable", "parameters": "(final Adaptable adaptable)", "modifiers": "@Override public", "return": "Acknowledgements", "body": "@Override\n    public Acknowledgements fromAdaptable(final Adaptable adaptable) {\n        checkNotNull(adaptable, \"adaptable\");\n        final ThingId thingId = getThingId(adaptable);\n        return ThingAcknowledgementsFactory.newAcknowledgements(\n                thingId,\n                gatherContainedAcknowledgements(adaptable, thingId),\n                getStatusCodeOrThrow(adaptable),\n                adaptable.getDittoHeaders()\n        );\n    }", "signature": "Acknowledgements fromAdaptable(final Adaptable adaptable)", "full_signature": "@Override public Acknowledgements fromAdaptable(final Adaptable adaptable)", "class_method_signature": "AcknowledgementsAdapter.fromAdaptable(final Adaptable adaptable)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getThingId", "newAcknowledgements", "gatherContainedAcknowledgements", "getStatusCodeOrThrow", "getDittoHeaders"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}