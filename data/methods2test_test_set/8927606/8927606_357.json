{"test_class": {"identifier": "JdbcTableListenerTest", "superclass": "extends JdbcTestBase", "interfaces": "", "fields": [{"original_string": "private JdbcTableListener listener;", "modifier": "private", "type": "JdbcTableListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "private boolean testNegativePeekWhileGet = false;", "modifier": "private", "type": "boolean", "declarator": "testNegativePeekWhileGet = false", "var_name": "testNegativePeekWhileGet"}], "file": "core/src/test/java/nl/nn/adapterframework/jdbc/JdbcTableListenerTest.java"}, "test_case": {"identifier": "testSetup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSetup() throws ConfigurationException, ListenerException {\n\t\tlistener.configure();\n\t\tlistener.open();\n\t}", "signature": "void testSetup()", "full_signature": "@Test public void testSetup()", "class_method_signature": "JdbcTableListenerTest.testSetup()", "testcase": true, "constructor": false, "invocations": ["configure", "open"]}, "focal_class": {"identifier": "JdbcTableListener", "superclass": "extends JdbcListener", "interfaces": "implements IProvidesMessageBrowsers<Object>", "fields": [{"original_string": "private String tableName;", "modifier": "private", "type": "String", "declarator": "tableName", "var_name": "tableName"}, {"original_string": "private String statusField;", "modifier": "private", "type": "String", "declarator": "statusField", "var_name": "statusField"}, {"original_string": "private String orderField;", "modifier": "private", "type": "String", "declarator": "orderField", "var_name": "orderField"}, {"original_string": "private String timestampField;", "modifier": "private", "type": "String", "declarator": "timestampField", "var_name": "timestampField"}, {"original_string": "private String selectCondition;", "modifier": "private", "type": "String", "declarator": "selectCondition", "var_name": "selectCondition"}, {"original_string": "private String statusValueAvailable;", "modifier": "private", "type": "String", "declarator": "statusValueAvailable", "var_name": "statusValueAvailable"}, {"original_string": "private String statusValueInProcess;", "modifier": "private", "type": "String", "declarator": "statusValueInProcess", "var_name": "statusValueInProcess"}, {"original_string": "private String statusValueProcessed;", "modifier": "private", "type": "String", "declarator": "statusValueProcessed", "var_name": "statusValueProcessed"}, {"original_string": "private String statusValueError;", "modifier": "private", "type": "String", "declarator": "statusValueError", "var_name": "statusValueError"}], "methods": [{"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "JdbcTableListener.configure()", "testcase": false, "constructor": false}, {"identifier": "getUpdateStatusQuery", "parameters": "(String fieldValue, String additionalSetClause)", "modifiers": "protected", "return": "String", "signature": "String getUpdateStatusQuery(String fieldValue, String additionalSetClause)", "full_signature": "protected String getUpdateStatusQuery(String fieldValue, String additionalSetClause)", "class_method_signature": "JdbcTableListener.getUpdateStatusQuery(String fieldValue, String additionalSetClause)", "testcase": false, "constructor": false}, {"identifier": "getInProcessBrowser", "parameters": "()", "modifiers": "@Override public", "return": "IMessageBrowser<Object>", "signature": "IMessageBrowser<Object> getInProcessBrowser()", "full_signature": "@Override public IMessageBrowser<Object> getInProcessBrowser()", "class_method_signature": "JdbcTableListener.getInProcessBrowser()", "testcase": false, "constructor": false}, {"identifier": "getMessageLogBrowser", "parameters": "()", "modifiers": "@Override public", "return": "IMessageBrowser<Object>", "signature": "IMessageBrowser<Object> getMessageLogBrowser()", "full_signature": "@Override public IMessageBrowser<Object> getMessageLogBrowser()", "class_method_signature": "JdbcTableListener.getMessageLogBrowser()", "testcase": false, "constructor": false}, {"identifier": "getErrorStoreBrowser", "parameters": "()", "modifiers": "@Override public", "return": "IMessageBrowser<Object>", "signature": "IMessageBrowser<Object> getErrorStoreBrowser()", "full_signature": "@Override public IMessageBrowser<Object> getErrorStoreBrowser()", "class_method_signature": "JdbcTableListener.getErrorStoreBrowser()", "testcase": false, "constructor": false}, {"identifier": "getPhysicalDestinationName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPhysicalDestinationName()", "full_signature": "@Override public String getPhysicalDestinationName()", "class_method_signature": "JdbcTableListener.getPhysicalDestinationName()", "testcase": false, "constructor": false}, {"identifier": "setTableName", "parameters": "(String string)", "modifiers": "@IbisDoc({\"1\", \"Name of the table to be used\", \"\"}) public", "return": "void", "signature": "void setTableName(String string)", "full_signature": "@IbisDoc({\"1\", \"Name of the table to be used\", \"\"}) public void setTableName(String string)", "class_method_signature": "JdbcTableListener.setTableName(String string)", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTableName()", "full_signature": "public String getTableName()", "class_method_signature": "JdbcTableListener.getTableName()", "testcase": false, "constructor": false}, {"identifier": "setKeyField", "parameters": "(String fieldname)", "modifiers": "@Override public", "return": "void", "signature": "void setKeyField(String fieldname)", "full_signature": "@Override public void setKeyField(String fieldname)", "class_method_signature": "JdbcTableListener.setKeyField(String fieldname)", "testcase": false, "constructor": false}, {"identifier": "setMessageField", "parameters": "(String fieldname)", "modifiers": "@Override public", "return": "void", "signature": "void setMessageField(String fieldname)", "full_signature": "@Override public void setMessageField(String fieldname)", "class_method_signature": "JdbcTableListener.setMessageField(String fieldname)", "testcase": false, "constructor": false}, {"identifier": "setStatusField", "parameters": "(String fieldname)", "modifiers": "@IbisDoc({\"4\", \"Field containing the status of the message\", \"\"}) public", "return": "void", "signature": "void setStatusField(String fieldname)", "full_signature": "@IbisDoc({\"4\", \"Field containing the status of the message\", \"\"}) public void setStatusField(String fieldname)", "class_method_signature": "JdbcTableListener.setStatusField(String fieldname)", "testcase": false, "constructor": false}, {"identifier": "getStatusField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatusField()", "full_signature": "public String getStatusField()", "class_method_signature": "JdbcTableListener.getStatusField()", "testcase": false, "constructor": false}, {"identifier": "setOrderField", "parameters": "(String string)", "modifiers": "@IbisDoc({\"5\", \"(optional) Field determining the order in which messages are processed\", \"\"}) public", "return": "void", "signature": "void setOrderField(String string)", "full_signature": "@IbisDoc({\"5\", \"(optional) Field determining the order in which messages are processed\", \"\"}) public void setOrderField(String string)", "class_method_signature": "JdbcTableListener.setOrderField(String string)", "testcase": false, "constructor": false}, {"identifier": "getOrderField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOrderField()", "full_signature": "public String getOrderField()", "class_method_signature": "JdbcTableListener.getOrderField()", "testcase": false, "constructor": false}, {"identifier": "setTimestampField", "parameters": "(String fieldname)", "modifiers": "@IbisDoc({\"6\", \"(optional) Field used to store the date and time of the last change of the statusField\", \"\"}) public", "return": "void", "signature": "void setTimestampField(String fieldname)", "full_signature": "@IbisDoc({\"6\", \"(optional) Field used to store the date and time of the last change of the statusField\", \"\"}) public void setTimestampField(String fieldname)", "class_method_signature": "JdbcTableListener.setTimestampField(String fieldname)", "testcase": false, "constructor": false}, {"identifier": "getTimestampField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTimestampField()", "full_signature": "public String getTimestampField()", "class_method_signature": "JdbcTableListener.getTimestampField()", "testcase": false, "constructor": false}, {"identifier": "setStatusValueAvailable", "parameters": "(String string)", "modifiers": "@IbisDoc({\"7\", \"(optional) Value of statusField indicating row is available to be processed. If not specified, any row not having any of the other status values is considered available.\", \"\"}) public", "return": "void", "signature": "void setStatusValueAvailable(String string)", "full_signature": "@IbisDoc({\"7\", \"(optional) Value of statusField indicating row is available to be processed. If not specified, any row not having any of the other status values is considered available.\", \"\"}) public void setStatusValueAvailable(String string)", "class_method_signature": "JdbcTableListener.setStatusValueAvailable(String string)", "testcase": false, "constructor": false}, {"identifier": "getStatusValueAvailable", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatusValueAvailable()", "full_signature": "public String getStatusValueAvailable()", "class_method_signature": "JdbcTableListener.getStatusValueAvailable()", "testcase": false, "constructor": false}, {"identifier": "setStatusValueError", "parameters": "(String string)", "modifiers": "@IbisDoc({\"8\", \"Value of statusField indicating the processing of the row resulted in an error\", \"\"}) public", "return": "void", "signature": "void setStatusValueError(String string)", "full_signature": "@IbisDoc({\"8\", \"Value of statusField indicating the processing of the row resulted in an error\", \"\"}) public void setStatusValueError(String string)", "class_method_signature": "JdbcTableListener.setStatusValueError(String string)", "testcase": false, "constructor": false}, {"identifier": "getStatusValueError", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatusValueError()", "full_signature": "public String getStatusValueError()", "class_method_signature": "JdbcTableListener.getStatusValueError()", "testcase": false, "constructor": false}, {"identifier": "setStatusValueProcessed", "parameters": "(String string)", "modifiers": "@IbisDoc({\"9\", \"Value of status field indicating row is processed ok\", \"\"}) public", "return": "void", "signature": "void setStatusValueProcessed(String string)", "full_signature": "@IbisDoc({\"9\", \"Value of status field indicating row is processed ok\", \"\"}) public void setStatusValueProcessed(String string)", "class_method_signature": "JdbcTableListener.setStatusValueProcessed(String string)", "testcase": false, "constructor": false}, {"identifier": "getStatusValueProcessed", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatusValueProcessed()", "full_signature": "public String getStatusValueProcessed()", "class_method_signature": "JdbcTableListener.getStatusValueProcessed()", "testcase": false, "constructor": false}, {"identifier": "setStatusValueInProcess", "parameters": "(String string)", "modifiers": "@IbisDoc({\"10\", \"Value of status field indicating is being processed. Can be left emtpy if database has SKIP LOCKED functionality\", \"\"}) public", "return": "void", "signature": "void setStatusValueInProcess(String string)", "full_signature": "@IbisDoc({\"10\", \"Value of status field indicating is being processed. Can be left emtpy if database has SKIP LOCKED functionality\", \"\"}) public void setStatusValueInProcess(String string)", "class_method_signature": "JdbcTableListener.setStatusValueInProcess(String string)", "testcase": false, "constructor": false}, {"identifier": "getStatusValueInProcess", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatusValueInProcess()", "full_signature": "public String getStatusValueInProcess()", "class_method_signature": "JdbcTableListener.getStatusValueInProcess()", "testcase": false, "constructor": false}, {"identifier": "setSelectCondition", "parameters": "(String string)", "modifiers": "@IbisDoc({\"10\", \"Additional condition for a row to belong to this TableListener\", \"\"}) public", "return": "void", "signature": "void setSelectCondition(String string)", "full_signature": "@IbisDoc({\"10\", \"Additional condition for a row to belong to this TableListener\", \"\"}) public void setSelectCondition(String string)", "class_method_signature": "JdbcTableListener.setSelectCondition(String string)", "testcase": false, "constructor": false}, {"identifier": "getSelectCondition", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSelectCondition()", "full_signature": "public String getSelectCondition()", "class_method_signature": "JdbcTableListener.getSelectCondition()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcTableListener.java"}, "focal_method": {"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void configure() throws ConfigurationException {\n\t\tif (StringUtils.isEmpty(getTableName())) {\n\t\t\tthrow new ConfigurationException(getLogPrefix()+\"must specify tableName\");\n\t\t}\n\t\tif (StringUtils.isEmpty(getKeyField())) {\n\t\t\tthrow new ConfigurationException(getLogPrefix()+\"must specify keyField\");\n\t\t}\n\t\tif (StringUtils.isEmpty(getStatusField())) {\n\t\t\tthrow new ConfigurationException(getLogPrefix()+\"must specify statusField\");\n\t\t}\n\t\tif (StringUtils.isEmpty(getMessageField())) {\n\t\t\tlog.info(getLogPrefix()+\"has no messageField specified. Will use keyField as messageField, too\");\n\t\t}\n\t\tif (StringUtils.isEmpty(getStatusValueError())) {\n\t\t\tthrow new ConfigurationException(getLogPrefix()+\"must specify statusValueError\");\n\t\t}\n\t\tif (StringUtils.isEmpty(getStatusValueProcessed())) {\n\t\t\tthrow new ConfigurationException(getLogPrefix()+\"must specify statusValueProcessed\");\n\t\t}\n\t\tsetSelectQuery(\"SELECT \"+getKeyField() + (StringUtils.isNotEmpty(getMessageField())?\",\"+getMessageField():\"\")+\n\t\t\t\t\t\t\" FROM \"+getTableName()+\n\t\t\t\t\t\t\" WHERE \"+getStatusField()+\n\t\t\t\t\t\t(StringUtils.isNotEmpty(getStatusValueAvailable())?\n\t\t\t\t\t\t \"='\"+getStatusValueAvailable()+\"'\":\n\t\t\t\t\t\t \" NOT IN ('\"+getStatusValueError()+\"','\"+getStatusValueProcessed()+\"')\")+\n\t\t\t\t\t\t(StringUtils.isNotEmpty(getSelectCondition()) ? \" AND (\"+getSelectCondition()+\")\": \"\") +\n\t\t\t\t\t\t (StringUtils.isNotEmpty(getOrderField())? \" ORDER BY \"+getOrderField():\"\"));\n\t\tsetUpdateStatusToProcessedQuery(getUpdateStatusQuery(getStatusValueProcessed(),null));\n\t\tsetUpdateStatusToErrorQuery(getUpdateStatusQuery(getStatusValueError(),null)); \n\t\tif (StringUtils.isNotEmpty(getStatusValueInProcess())) {\n\t\t\tsetUpdateStatusToInProcessQuery(getUpdateStatusQuery(getStatusValueInProcess(),null)); \n\t\t\tsetRevertInProcessStatusQuery(getUpdateStatusQuery(getStatusValueAvailable(),null));\n\t\t}\n\t\tsuper.configure();\n\t\tif (StringUtils.isEmpty(getStatusValueInProcess()) && !getDbmsSupport().hasSkipLockedFunctionality()) {\n\t\t\tConfigurationWarnings.add(this, log, \"Database [\"+getDbmsSupport().getDbmsName()+\"] needs statusValueInProcess to run in multiple threads\");\n\t\t}\n\t}", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "JdbcTableListener.configure()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getTableName", "getLogPrefix", "isEmpty", "getKeyField", "getLogPrefix", "isEmpty", "getStatusField", "getLogPrefix", "isEmpty", "getMessageField", "info", "getLogPrefix", "isEmpty", "getStatusValueError", "getLogPrefix", "isEmpty", "getStatusValueProcessed", "getLogPrefix", "setSelectQuery", "getKeyField", "isNotEmpty", "getMessageField", "getMessageField", "getTableName", "getStatusField", "isNotEmpty", "getStatusValueAvailable", "getStatusValueAvailable", "getStatusValueError", "getStatusValueProcessed", "isNotEmpty", "getSelectCondition", "getSelectCondition", "isNotEmpty", "getOrderField", "getOrderField", "setUpdateStatusToProcessedQuery", "getUpdateStatusQuery", "getStatusValueProcessed", "setUpdateStatusToErrorQuery", "getUpdateStatusQuery", "getStatusValueError", "isNotEmpty", "getStatusValueInProcess", "setUpdateStatusToInProcessQuery", "getUpdateStatusQuery", "getStatusValueInProcess", "setRevertInProcessStatusQuery", "getUpdateStatusQuery", "getStatusValueAvailable", "configure", "isEmpty", "getStatusValueInProcess", "hasSkipLockedFunctionality", "getDbmsSupport", "add", "getDbmsName", "getDbmsSupport"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}