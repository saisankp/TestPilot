{"test_class": {"identifier": "SelectorSliderDisplayerTest", "superclass": "extends AbstractDisplayerTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    ClientDateFormatter clientDateFormatter;", "modifier": "@Mock", "type": "ClientDateFormatter", "declarator": "clientDateFormatter", "var_name": "clientDateFormatter"}, {"original_string": "@Mock\n    DateParameterEditor minDateInputEditor;", "modifier": "@Mock", "type": "DateParameterEditor", "declarator": "minDateInputEditor", "var_name": "minDateInputEditor"}, {"original_string": "@Mock\n    DateParameterEditor maxDateInputEditor;", "modifier": "@Mock", "type": "DateParameterEditor", "declarator": "maxDateInputEditor", "var_name": "maxDateInputEditor"}, {"original_string": "@Mock\n    NumberParameterEditor minNumberInputEditor;", "modifier": "@Mock", "type": "NumberParameterEditor", "declarator": "minNumberInputEditor", "var_name": "minNumberInputEditor"}, {"original_string": "@Mock\n    NumberParameterEditor maxNumberInputEditor;", "modifier": "@Mock", "type": "NumberParameterEditor", "declarator": "maxNumberInputEditor", "var_name": "maxNumberInputEditor"}, {"original_string": "DisplayerSettings dateSelectorSettings = DisplayerSettingsFactory.newSelectorSettings()\n            .dataset(EXPENSES)\n            .column(COLUMN_DATE)\n            .width(200)\n            .filterOn(false, true, false)\n            .buildSettings();", "modifier": "", "type": "DisplayerSettings", "declarator": "dateSelectorSettings = DisplayerSettingsFactory.newSelectorSettings()\n            .dataset(EXPENSES)\n            .column(COLUMN_DATE)\n            .width(200)\n            .filterOn(false, true, false)\n            .buildSettings()", "var_name": "dateSelectorSettings"}, {"original_string": "DisplayerSettings numberSelectorSettings = DisplayerSettingsFactory.newSelectorSettings()\n            .dataset(EXPENSES)\n            .column(COLUMN_AMOUNT)\n            .width(200)\n            .filterOn(false, true, false)\n            .buildSettings();", "modifier": "", "type": "DisplayerSettings", "declarator": "numberSelectorSettings = DisplayerSettingsFactory.newSelectorSettings()\n            .dataset(EXPENSES)\n            .column(COLUMN_AMOUNT)\n            .width(200)\n            .filterOn(false, true, false)\n            .buildSettings()", "var_name": "numberSelectorSettings"}], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-default/src/test/java/org/dashbuilder/renderer/client/selector/SelectorSliderDisplayerTest.java"}, "test_case": {"identifier": "testNoData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoData() {\n        DisplayerSettings dateSelectorSettings = DisplayerSettingsFactory.newSelectorSettings()\n                .dataset(EXPENSES)\n                .filter(COLUMN_DATE, FilterFactory.isNull())\n                .column(COLUMN_DATE)\n                .buildSettings();\n\n        SelectorSliderDisplayer presenter = createSelectorDisplayer(dateSelectorSettings);\n        SelectorSliderDisplayer.View view = presenter.getView();\n        presenter.draw();\n\n        verify(view).noData();\n        verify(view, never()).showSlider(anyInt(), anyInt(), anyInt(), anyInt(), anyInt());\n    }", "signature": "void testNoData()", "full_signature": "@Test public void testNoData()", "class_method_signature": "SelectorSliderDisplayerTest.testNoData()", "testcase": true, "constructor": false, "invocations": ["buildSettings", "column", "filter", "dataset", "newSelectorSettings", "isNull", "createSelectorDisplayer", "getView", "draw", "noData", "verify", "showSlider", "verify", "never", "anyInt", "anyInt", "anyInt", "anyInt", "anyInt"]}, "focal_class": {"identifier": "SelectorSliderDisplayer", "superclass": "extends AbstractGwtDisplayer<SelectorSliderDisplayer.View>", "interfaces": "", "fields": [{"original_string": "protected View view;", "modifier": "protected", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "protected DataColumn dataColumnMin;", "modifier": "protected", "type": "DataColumn", "declarator": "dataColumnMin", "var_name": "dataColumnMin"}, {"original_string": "protected DataColumn dataColumnMax;", "modifier": "protected", "type": "DataColumn", "declarator": "dataColumnMax", "var_name": "dataColumnMax"}, {"original_string": "protected double rangeMin = -1;", "modifier": "protected", "type": "double", "declarator": "rangeMin = -1", "var_name": "rangeMin"}, {"original_string": "protected double rangeMax = -1;", "modifier": "protected", "type": "double", "declarator": "rangeMax = -1", "var_name": "rangeMax"}, {"original_string": "protected double selectedMin = -1;", "modifier": "protected", "type": "double", "declarator": "selectedMin = -1", "var_name": "selectedMin"}, {"original_string": "protected double selectedMax = -1;", "modifier": "protected", "type": "double", "declarator": "selectedMax = -1", "var_name": "selectedMax"}, {"original_string": "protected DateParameterEditor minDateEditor;", "modifier": "protected", "type": "DateParameterEditor", "declarator": "minDateEditor", "var_name": "minDateEditor"}, {"original_string": "protected DateParameterEditor maxDateEditor;", "modifier": "protected", "type": "DateParameterEditor", "declarator": "maxDateEditor", "var_name": "maxDateEditor"}, {"original_string": "protected NumberParameterEditor minNumberEditor;", "modifier": "protected", "type": "NumberParameterEditor", "declarator": "minNumberEditor", "var_name": "minNumberEditor"}, {"original_string": "protected NumberParameterEditor maxNumberEditor;", "modifier": "protected", "type": "NumberParameterEditor", "declarator": "maxNumberEditor", "var_name": "maxNumberEditor"}], "methods": [{"identifier": "SelectorSliderDisplayer", "parameters": "(View view, DateParameterEditor minDateEditor,\n                                   DateParameterEditor maxDateEditor,\n                                   NumberParameterEditor minNumberEditor,\n                                   NumberParameterEditor maxNumberEditor)", "modifiers": "@Inject public", "return": "", "signature": " SelectorSliderDisplayer(View view, DateParameterEditor minDateEditor,\n                                   DateParameterEditor maxDateEditor,\n                                   NumberParameterEditor minNumberEditor,\n                                   NumberParameterEditor maxNumberEditor)", "full_signature": "@Inject public  SelectorSliderDisplayer(View view, DateParameterEditor minDateEditor,\n                                   DateParameterEditor maxDateEditor,\n                                   NumberParameterEditor minNumberEditor,\n                                   NumberParameterEditor maxNumberEditor)", "class_method_signature": "SelectorSliderDisplayer.SelectorSliderDisplayer(View view, DateParameterEditor minDateEditor,\n                                   DateParameterEditor maxDateEditor,\n                                   NumberParameterEditor minNumberEditor,\n                                   NumberParameterEditor maxNumberEditor)", "testcase": false, "constructor": true}, {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "SelectorSliderDisplayer.getView()", "testcase": false, "constructor": false}, {"identifier": "createDisplayerConstraints", "parameters": "()", "modifiers": "@Override public", "return": "DisplayerConstraints", "signature": "DisplayerConstraints createDisplayerConstraints()", "full_signature": "@Override public DisplayerConstraints createDisplayerConstraints()", "class_method_signature": "SelectorSliderDisplayer.createDisplayerConstraints()", "testcase": false, "constructor": false}, {"identifier": "beforeDataSetLookup", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void beforeDataSetLookup()", "full_signature": "@Override protected void beforeDataSetLookup()", "class_method_signature": "SelectorSliderDisplayer.beforeDataSetLookup()", "testcase": false, "constructor": false}, {"identifier": "createVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void createVisualization()", "full_signature": "@Override protected void createVisualization()", "class_method_signature": "SelectorSliderDisplayer.createVisualization()", "testcase": false, "constructor": false}, {"identifier": "updateVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void updateVisualization()", "full_signature": "@Override protected void updateVisualization()", "class_method_signature": "SelectorSliderDisplayer.updateVisualization()", "testcase": false, "constructor": false}, {"identifier": "getSelectedMin", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getSelectedMin()", "full_signature": "public Object getSelectedMin()", "class_method_signature": "SelectorSliderDisplayer.getSelectedMin()", "testcase": false, "constructor": false}, {"identifier": "getSelectedMax", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getSelectedMax()", "full_signature": "public Object getSelectedMax()", "class_method_signature": "SelectorSliderDisplayer.getSelectedMax()", "testcase": false, "constructor": false}, {"identifier": "onSliderChange", "parameters": "(double min, double max)", "modifiers": "", "return": "void", "signature": "void onSliderChange(double min, double max)", "full_signature": " void onSliderChange(double min, double max)", "class_method_signature": "SelectorSliderDisplayer.onSliderChange(double min, double max)", "testcase": false, "constructor": false}, {"identifier": "onMinDateInputChange", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMinDateInputChange()", "full_signature": " void onMinDateInputChange()", "class_method_signature": "SelectorSliderDisplayer.onMinDateInputChange()", "testcase": false, "constructor": false}, {"identifier": "onMinDateInputFocus", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMinDateInputFocus()", "full_signature": " void onMinDateInputFocus()", "class_method_signature": "SelectorSliderDisplayer.onMinDateInputFocus()", "testcase": false, "constructor": false}, {"identifier": "onMinDateInputBlur", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMinDateInputBlur()", "full_signature": " void onMinDateInputBlur()", "class_method_signature": "SelectorSliderDisplayer.onMinDateInputBlur()", "testcase": false, "constructor": false}, {"identifier": "onMaxDateInputChange", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMaxDateInputChange()", "full_signature": " void onMaxDateInputChange()", "class_method_signature": "SelectorSliderDisplayer.onMaxDateInputChange()", "testcase": false, "constructor": false}, {"identifier": "onMaxDateInputFocus", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMaxDateInputFocus()", "full_signature": " void onMaxDateInputFocus()", "class_method_signature": "SelectorSliderDisplayer.onMaxDateInputFocus()", "testcase": false, "constructor": false}, {"identifier": "onMaxDateInputBlur", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMaxDateInputBlur()", "full_signature": " void onMaxDateInputBlur()", "class_method_signature": "SelectorSliderDisplayer.onMaxDateInputBlur()", "testcase": false, "constructor": false}, {"identifier": "onMinNumberInputChange", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMinNumberInputChange()", "full_signature": " void onMinNumberInputChange()", "class_method_signature": "SelectorSliderDisplayer.onMinNumberInputChange()", "testcase": false, "constructor": false}, {"identifier": "onMaxNumberInputChange", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMaxNumberInputChange()", "full_signature": " void onMaxNumberInputChange()", "class_method_signature": "SelectorSliderDisplayer.onMaxNumberInputChange()", "testcase": false, "constructor": false}, {"identifier": "formatRange", "parameters": "(double min, double max)", "modifiers": "", "return": "String", "signature": "String formatRange(double min, double max)", "full_signature": " String formatRange(double min, double max)", "class_method_signature": "SelectorSliderDisplayer.formatRange(double min, double max)", "testcase": false, "constructor": false}, {"identifier": "formatValue", "parameters": "(double val, DataColumn dataColumn)", "modifiers": "", "return": "String", "signature": "String formatValue(double val, DataColumn dataColumn)", "full_signature": " String formatValue(double val, DataColumn dataColumn)", "class_method_signature": "SelectorSliderDisplayer.formatValue(double val, DataColumn dataColumn)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-default/src/main/java/org/dashbuilder/renderer/client/selector/SelectorSliderDisplayer.java"}, "focal_method": {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "body": "@Override\n    public View getView() {\n        return view;\n    }", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "SelectorSliderDisplayer.getView()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}