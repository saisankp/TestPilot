{"test_class": {"identifier": "FrontendTypeTest", "superclass": "extends AbstractIdentifierTest<FrontendType>", "interfaces": "", "fields": [], "file": "opendaylight/md-sal/cds-access-api/src/test/java/org/opendaylight/controller/cluster/access/concepts/FrontendTypeTest.java"}, "test_case": {"identifier": "testCompareTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompareTo() {\n        Assert.assertTrue(object().compareTo(equalObject()) == 0);\n        Assert.assertTrue(object().compareTo(differentObject()) < 0);\n    }", "signature": "void testCompareTo()", "full_signature": "@Test public void testCompareTo()", "class_method_signature": "FrontendTypeTest.testCompareTo()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "compareTo", "object", "equalObject", "assertTrue", "compareTo", "object", "differentObject"]}, "focal_class": {"identifier": "FrontendType", "superclass": "", "interfaces": "implements Comparable<FrontendType>, WritableIdentifier", "fields": [{"original_string": "private static final String SIMPLE_STRING_REGEX = \"^[a-zA-Z0-9-_.*+:=,!~';]+$\";", "modifier": "private static final", "type": "String", "declarator": "SIMPLE_STRING_REGEX = \"^[a-zA-Z0-9-_.*+:=,!~';]+$\"", "var_name": "SIMPLE_STRING_REGEX"}, {"original_string": "private static final Pattern SIMPLE_STRING_PATTERN = Pattern.compile(SIMPLE_STRING_REGEX);", "modifier": "private static final", "type": "Pattern", "declarator": "SIMPLE_STRING_PATTERN = Pattern.compile(SIMPLE_STRING_REGEX)", "var_name": "SIMPLE_STRING_PATTERN"}, {"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private final @NonNull String name;", "modifier": "private final @NonNull", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@SuppressFBWarnings(value = \"VO_VOLATILE_REFERENCE_TO_ARRAY\",\n            justification = \"The array elements are non-volatile but we don't access them.\")\n    private volatile byte[] serialized;", "modifier": "@SuppressFBWarnings(value = \"VO_VOLATILE_REFERENCE_TO_ARRAY\",\n            justification = \"The array elements are non-volatile but we don't access them.\")\n    private volatile", "type": "byte[]", "declarator": "serialized", "var_name": "serialized"}], "methods": [{"identifier": "FrontendType", "parameters": "(final String name)", "modifiers": "private", "return": "", "signature": " FrontendType(final String name)", "full_signature": "private  FrontendType(final String name)", "class_method_signature": "FrontendType.FrontendType(final String name)", "testcase": false, "constructor": true}, {"identifier": "FrontendType", "parameters": "(final String name, final byte[] serialized)", "modifiers": "", "return": "", "signature": " FrontendType(final String name, final byte[] serialized)", "full_signature": "  FrontendType(final String name, final byte[] serialized)", "class_method_signature": "FrontendType.FrontendType(final String name, final byte[] serialized)", "testcase": false, "constructor": true}, {"identifier": "forName", "parameters": "(final String name)", "modifiers": "public static @NonNull", "return": "FrontendType", "signature": "FrontendType forName(final String name)", "full_signature": "public static @NonNull FrontendType forName(final String name)", "class_method_signature": "FrontendType.forName(final String name)", "testcase": false, "constructor": false}, {"identifier": "readFrom", "parameters": "(final DataInput in)", "modifiers": "public static @NonNull", "return": "FrontendType", "signature": "FrontendType readFrom(final DataInput in)", "full_signature": "public static @NonNull FrontendType readFrom(final DataInput in)", "class_method_signature": "FrontendType.readFrom(final DataInput in)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(final DataOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(final DataOutput out)", "full_signature": "@Override public void writeTo(final DataOutput out)", "class_method_signature": "FrontendType.writeTo(final DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public @NonNull", "return": "String", "signature": "String getName()", "full_signature": "public @NonNull String getName()", "class_method_signature": "FrontendType.getName()", "testcase": false, "constructor": false}, {"identifier": "toYang", "parameters": "()", "modifiers": "public", "return": "org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.controller.cds.types.rev191024\n        . @NonNull FrontendType", "signature": "org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.controller.cds.types.rev191024\n        . @NonNull FrontendType toYang()", "full_signature": "public org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.controller.cds.types.rev191024\n        . @NonNull FrontendType toYang()", "class_method_signature": "FrontendType.toYang()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FrontendType.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "FrontendType.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(final FrontendType obj)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(final FrontendType obj)", "full_signature": "@Override public int compareTo(final FrontendType obj)", "class_method_signature": "FrontendType.compareTo(final FrontendType obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FrontendType.toString()", "testcase": false, "constructor": false}, {"identifier": "getSerialized", "parameters": "()", "modifiers": "private", "return": "byte[]", "signature": "byte[] getSerialized()", "full_signature": "private byte[] getSerialized()", "class_method_signature": "FrontendType.getSerialized()", "testcase": false, "constructor": false}, {"identifier": "writeReplace", "parameters": "()", "modifiers": "", "return": "Object", "signature": "Object writeReplace()", "full_signature": " Object writeReplace()", "class_method_signature": "FrontendType.writeReplace()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/cds-access-api/src/main/java/org/opendaylight/controller/cluster/access/concepts/FrontendType.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(final FrontendType obj)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compareTo(final FrontendType obj) {\n        return this == obj ? 0 : name.compareTo(obj.name);\n    }", "signature": "int compareTo(final FrontendType obj)", "full_signature": "@Override public int compareTo(final FrontendType obj)", "class_method_signature": "FrontendType.compareTo(final FrontendType obj)", "testcase": false, "constructor": false, "invocations": ["compareTo"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}