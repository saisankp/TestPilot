{"test_class": {"identifier": "DefaultResourceManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "resource/impl/src/test/java/cloud/piranha/resource/DefaultResourceManagerTest.java"}, "test_case": {"identifier": "testGetResourceAsStream", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetResourceAsStream() {\n        DefaultResourceManager manager = new DefaultResourceManager();\n        manager.addResource(new DirectoryResource(new File(\"\")));\n        assertNull(manager.getResourceAsStream(\"/doesnotexist\"));\n    }", "signature": "void testGetResourceAsStream()", "full_signature": "@Test void testGetResourceAsStream()", "class_method_signature": "DefaultResourceManagerTest.testGetResourceAsStream()", "testcase": true, "constructor": false, "invocations": ["addResource", "assertNull", "getResourceAsStream"]}, "focal_class": {"identifier": "DefaultResourceManager", "superclass": "", "interfaces": "implements ResourceManager", "fields": [{"original_string": "private final ArrayList<Resource> resources = new ArrayList<>();", "modifier": "private final", "type": "ArrayList<Resource>", "declarator": "resources = new ArrayList<>()", "var_name": "resources"}], "methods": [{"identifier": "addResource", "parameters": "(Resource resource)", "modifiers": "@Override public", "return": "void", "signature": "void addResource(Resource resource)", "full_signature": "@Override public void addResource(Resource resource)", "class_method_signature": "DefaultResourceManager.addResource(Resource resource)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(String location)", "modifiers": "@Override public", "return": "URL", "signature": "URL getResource(String location)", "full_signature": "@Override public URL getResource(String location)", "class_method_signature": "DefaultResourceManager.getResource(String location)", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "(String location)", "modifiers": "@Override public", "return": "Collection<URL>", "signature": "Collection<URL> getResources(String location)", "full_signature": "@Override public Collection<URL> getResources(String location)", "class_method_signature": "DefaultResourceManager.getResources(String location)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(String location)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getResourceAsStream(String location)", "full_signature": "@Override public InputStream getResourceAsStream(String location)", "class_method_signature": "DefaultResourceManager.getResourceAsStream(String location)", "testcase": false, "constructor": false}, {"identifier": "getAllLocations", "parameters": "()", "modifiers": "@Override public", "return": "Stream<String>", "signature": "Stream<String> getAllLocations()", "full_signature": "@Override public Stream<String> getAllLocations()", "class_method_signature": "DefaultResourceManager.getAllLocations()", "testcase": false, "constructor": false}], "file": "resource/impl/src/main/java/cloud/piranha/resource/DefaultResourceManager.java"}, "focal_method": {"identifier": "getResourceAsStream", "parameters": "(String location)", "modifiers": "@Override public", "return": "InputStream", "body": "@Override\n    public InputStream getResourceAsStream(String location) {\n        InputStream result = null;\n        Iterator<Resource> iterator = resources.iterator();\n        while (iterator.hasNext()) {\n            Resource resource = iterator.next();\n            result = resource.getResourceAsStream(location);\n            if (result != null) {\n                break;\n            }\n        }\n        if (result == null) {\n            result = getClass().getResourceAsStream(location);\n        }\n        return result;\n    }", "signature": "InputStream getResourceAsStream(String location)", "full_signature": "@Override public InputStream getResourceAsStream(String location)", "class_method_signature": "DefaultResourceManager.getResourceAsStream(String location)", "testcase": false, "constructor": false, "invocations": ["iterator", "hasNext", "next", "getResourceAsStream", "getResourceAsStream", "getClass"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}