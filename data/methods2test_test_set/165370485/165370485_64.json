{"test_class": {"identifier": "ArchiveQueryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Entity JULIET = EntityImpl.parseUnchecked(\"juliet@foo.com\");", "modifier": "private static final", "type": "Entity", "declarator": "JULIET = EntityImpl.parseUnchecked(\"juliet@foo.com\")", "var_name": "JULIET"}, {"original_string": "private static final Entity ARCHIVE_ID = JULIET;", "modifier": "private static final", "type": "Entity", "declarator": "ARCHIVE_ID = JULIET", "var_name": "ARCHIVE_ID"}, {"original_string": "private MessageArchive archive;", "modifier": "private", "type": "MessageArchive", "declarator": "archive", "var_name": "archive"}, {"original_string": "private X x;", "modifier": "private", "type": "X", "declarator": "x", "var_name": "x"}, {"original_string": "private QuerySet querySet;", "modifier": "private", "type": "QuerySet", "declarator": "querySet", "var_name": "querySet"}, {"original_string": "private ArchiveQuery tested;", "modifier": "private", "type": "ArchiveQuery", "declarator": "tested", "var_name": "tested"}], "file": "server/extensions/xep0313-mam/src/test/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/query/ArchiveQueryTest.java"}, "test_case": {"identifier": "executeWithWith", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void executeWithWith() throws XMLSemanticError {\n        when(x.getWith()).thenReturn(Optional.of(JULIET));\n\n        ArchivedMessages archivedMessages = mock(ArchivedMessages.class);\n        when(archive.fetchSortedByOldestFirst(any(), any())).thenReturn(archivedMessages);\n\n        assertEquals(archivedMessages, tested.execute());\n    }", "signature": "void executeWithWith()", "full_signature": "@Test public void executeWithWith()", "class_method_signature": "ArchiveQueryTest.executeWithWith()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getWith", "of", "mock", "thenReturn", "when", "fetchSortedByOldestFirst", "any", "any", "assertEquals", "execute"]}, "focal_class": {"identifier": "ArchiveQuery", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MessageArchive archive;", "modifier": "private final", "type": "MessageArchive", "declarator": "archive", "var_name": "archive"}, {"original_string": "private final Entity archiveId;", "modifier": "private final", "type": "Entity", "declarator": "archiveId", "var_name": "archiveId"}, {"original_string": "private final Query query;", "modifier": "private final", "type": "Query", "declarator": "query", "var_name": "query"}], "methods": [{"identifier": "ArchiveQuery", "parameters": "(MessageArchive archive, Entity archiveId, Query query)", "modifiers": "public", "return": "", "signature": " ArchiveQuery(MessageArchive archive, Entity archiveId, Query query)", "full_signature": "public  ArchiveQuery(MessageArchive archive, Entity archiveId, Query query)", "class_method_signature": "ArchiveQuery.ArchiveQuery(MessageArchive archive, Entity archiveId, Query query)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "()", "modifiers": "public", "return": "ArchivedMessages", "signature": "ArchivedMessages execute()", "full_signature": "public ArchivedMessages execute()", "class_method_signature": "ArchiveQuery.execute()", "testcase": false, "constructor": false}], "file": "server/extensions/xep0313-mam/src/main/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/query/ArchiveQuery.java"}, "focal_method": {"identifier": "execute", "parameters": "()", "modifiers": "public", "return": "ArchivedMessages", "body": "public ArchivedMessages execute() throws XMLSemanticError {\n        ArchiveFilter archiveFilter = new ArchiveFilter(archiveId, query.getX());\n        QuerySet querySet = query.getSet();\n\n        if (querySet.lastPage()) {\n            long pageSize = querySet.pageSize().orElseThrow(\n                    () -> new IllegalArgumentException(\"Page size must be defined when requesting last page\"));\n            return archive.fetchLastPageSortedByOldestFirst(archiveFilter, pageSize);\n        } else {\n            return archive.fetchSortedByOldestFirst(archiveFilter, querySet);\n        }\n    }", "signature": "ArchivedMessages execute()", "full_signature": "public ArchivedMessages execute()", "class_method_signature": "ArchiveQuery.execute()", "testcase": false, "constructor": false, "invocations": ["getX", "getSet", "lastPage", "orElseThrow", "pageSize", "fetchLastPageSortedByOldestFirst", "fetchSortedByOldestFirst"]}, "repository": {"repo_id": 165370485, "url": "https://github.com/apache/mina-vysper", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 29305, "license": "licensed"}}