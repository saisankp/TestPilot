{"test_class": {"identifier": "UnsafeUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final int[] TEST_NUMBERS = new int[]{0, 1, 2, Integer.MAX_VALUE, -1, -2, Integer.MIN_VALUE};", "modifier": "static final", "type": "int[]", "declarator": "TEST_NUMBERS = new int[]{0, 1, 2, Integer.MAX_VALUE, -1, -2, Integer.MIN_VALUE}", "var_name": "TEST_NUMBERS"}], "file": "core/src/test/java/com/yahoo/oak/UnsafeUtilsTest.java"}, "test_case": {"identifier": "testIntsToLong", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIntsToLong() {\n        for (int i1 : TEST_NUMBERS) {\n            for (int i2 : TEST_NUMBERS) {\n                singleIntLongTest(i1, i2);\n            }\n        }\n    }", "signature": "void testIntsToLong()", "full_signature": "@Test public void testIntsToLong()", "class_method_signature": "UnsafeUtilsTest.testIntsToLong()", "testcase": true, "constructor": false, "invocations": ["singleIntLongTest"]}, "focal_class": {"identifier": "UnsafeUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "static Unsafe unsafe;", "modifier": "static", "type": "Unsafe", "declarator": "unsafe", "var_name": "unsafe"}, {"original_string": "static final long LONG_INT_MASK = (1L << Integer.SIZE) - 1L;", "modifier": "static final", "type": "long", "declarator": "LONG_INT_MASK = (1L << Integer.SIZE) - 1L", "var_name": "LONG_INT_MASK"}], "methods": [{"identifier": "UnsafeUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " UnsafeUtils()", "full_signature": "private  UnsafeUtils()", "class_method_signature": "UnsafeUtils.UnsafeUtils()", "testcase": false, "constructor": true}, {"identifier": "intsToLong", "parameters": "(int i1, int i2)", "modifiers": "static", "return": "long", "signature": "long intsToLong(int i1, int i2)", "full_signature": "static long intsToLong(int i1, int i2)", "class_method_signature": "UnsafeUtils.intsToLong(int i1, int i2)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/yahoo/oak/UnsafeUtils.java"}, "focal_method": {"identifier": "intsToLong", "parameters": "(int i1, int i2)", "modifiers": "static", "return": "long", "body": "static long intsToLong(int i1, int i2) {\n        return (i1 & LONG_INT_MASK) | (((long) i2) << Integer.SIZE);\n    }", "signature": "long intsToLong(int i1, int i2)", "full_signature": "static long intsToLong(int i1, int i2)", "class_method_signature": "UnsafeUtils.intsToLong(int i1, int i2)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 140631483, "url": "https://github.com/yahoo/Oak", "stars": 114, "created": "7/11/2018 9:57:20 PM +00:00", "updates": "2020-01-22T11:50:06+00:00", "fork": "False", "license": "licensed"}}