{"test_class": {"identifier": "IntegerHolderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Long long1 = 2147483647L;", "modifier": "", "type": "Long", "declarator": "long1 = 2147483647L", "var_name": "long1"}, {"original_string": "Long long2 = 2147483648L;", "modifier": "", "type": "Long", "declarator": "long2 = 2147483648L", "var_name": "long2"}, {"original_string": "IntegerHolder h1 = new IntegerHolder(long1);", "modifier": "", "type": "IntegerHolder", "declarator": "h1 = new IntegerHolder(long1)", "var_name": "h1"}, {"original_string": "IntegerHolder h2 = new IntegerHolder(long2);", "modifier": "", "type": "IntegerHolder", "declarator": "h2 = new IntegerHolder(long2)", "var_name": "h2"}, {"original_string": "IntegerHolder h3 = new IntegerHolder(null);", "modifier": "", "type": "IntegerHolder", "declarator": "h3 = new IntegerHolder(null)", "var_name": "h3"}], "file": "smartparam-engine/src/test/java/org/smartparam/engine/types/integer/IntegerHolderTest.java"}, "test_case": {"identifier": "testGetLong", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLong() {\n\n        assertEquals(long1, h1.getLong());\n        assertEquals(long2, h2.getLong());\n        assertEquals(null, h3.getLong());\n    }", "signature": "void testGetLong()", "full_signature": "@Test public void testGetLong()", "class_method_signature": "IntegerHolderTest.testGetLong()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getLong", "assertEquals", "getLong", "assertEquals", "getLong"]}, "focal_class": {"identifier": "IntegerHolder", "superclass": "extends AbstractValueHolder", "interfaces": "", "fields": [{"original_string": "private final Long value;", "modifier": "private final", "type": "Long", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "IntegerHolder", "parameters": "(Long value)", "modifiers": "public", "return": "", "signature": " IntegerHolder(Long value)", "full_signature": "public  IntegerHolder(Long value)", "class_method_signature": "IntegerHolder.IntegerHolder(Long value)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getValue()", "full_signature": "@Override public Long getValue()", "class_method_signature": "IntegerHolder.getValue()", "testcase": false, "constructor": false}, {"identifier": "intValue", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int intValue()", "full_signature": "@Override public int intValue()", "class_method_signature": "IntegerHolder.intValue()", "testcase": false, "constructor": false}, {"identifier": "longValue", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long longValue()", "full_signature": "@Override public long longValue()", "class_method_signature": "IntegerHolder.longValue()", "testcase": false, "constructor": false}, {"identifier": "getBigDecimal", "parameters": "()", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal getBigDecimal()", "full_signature": "@Override public BigDecimal getBigDecimal()", "class_method_signature": "IntegerHolder.getBigDecimal()", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getInteger()", "full_signature": "@Override public Integer getInteger()", "class_method_signature": "IntegerHolder.getInteger()", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getLong()", "full_signature": "@Override public Long getLong()", "class_method_signature": "IntegerHolder.getLong()", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/types/integer/IntegerHolder.java"}, "focal_method": {"identifier": "getLong", "parameters": "()", "modifiers": "@Override public", "return": "Long", "body": "@Override\n    public Long getLong() {\n        return value;\n    }", "signature": "Long getLong()", "full_signature": "@Override public Long getLong()", "class_method_signature": "IntegerHolder.getLong()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}