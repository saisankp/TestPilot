{"test_class": {"identifier": "TestSpeakableSsmlText", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml/src/test/java/org/jvoicexml/TestSpeakableSsmlText.java"}, "test_case": {"identifier": "testAppendSpeakableText", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAppendSpeakableText() throws Exception {\n        final SsmlDocument doc = new SsmlDocument();\n\n        final SpeakableSsmlText speakable = new SpeakableSsmlText(doc);\n        Assert.assertTrue(speakable.isSpeakableTextEmpty());\n        speakable.appendSpeakableText(\"some\");\n        final Speak speak = doc.getSpeak();\n        Assert.assertEquals(\"some\", speak.getTextContent());\n        speakable.appendSpeakableText(\" text\");\n        Assert.assertEquals(\"some text\", speak.getTextContent());\n    }", "signature": "void testAppendSpeakableText()", "full_signature": "@Test public void testAppendSpeakableText()", "class_method_signature": "TestSpeakableSsmlText.testAppendSpeakableText()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isSpeakableTextEmpty", "appendSpeakableText", "getSpeak", "assertEquals", "getTextContent", "appendSpeakableText", "assertEquals", "getTextContent"]}, "focal_class": {"identifier": "SpeakableSsmlText", "superclass": "", "interfaces": "implements SpeakableText", "fields": [{"original_string": "private static final int HASH_CODE_BASE = 5;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_BASE = 5", "var_name": "HASH_CODE_BASE"}, {"original_string": "private static final int HASH_CODE_MULTIPLIER = 59;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_MULTIPLIER = 59", "var_name": "HASH_CODE_MULTIPLIER"}, {"original_string": "private final SsmlDocument document;", "modifier": "private final", "type": "SsmlDocument", "declarator": "document", "var_name": "document"}, {"original_string": "private long timeout;", "modifier": "private", "type": "long", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "private final BargeInType bargeInType;", "modifier": "private final", "type": "BargeInType", "declarator": "bargeInType", "var_name": "bargeInType"}, {"original_string": "private final boolean bargein;", "modifier": "private final", "type": "boolean", "declarator": "bargein", "var_name": "bargein"}], "methods": [{"identifier": "SpeakableSsmlText", "parameters": "(final String text, final Locale locale)", "modifiers": "public", "return": "", "signature": " SpeakableSsmlText(final String text, final Locale locale)", "full_signature": "public  SpeakableSsmlText(final String text, final Locale locale)", "class_method_signature": "SpeakableSsmlText.SpeakableSsmlText(final String text, final Locale locale)", "testcase": false, "constructor": true}, {"identifier": "SpeakableSsmlText", "parameters": "(final SsmlDocument doc)", "modifiers": "public", "return": "", "signature": " SpeakableSsmlText(final SsmlDocument doc)", "full_signature": "public  SpeakableSsmlText(final SsmlDocument doc)", "class_method_signature": "SpeakableSsmlText.SpeakableSsmlText(final SsmlDocument doc)", "testcase": false, "constructor": true}, {"identifier": "SpeakableSsmlText", "parameters": "(final SsmlDocument doc, final boolean useBargein,\n            final BargeInType type)", "modifiers": "public", "return": "", "signature": " SpeakableSsmlText(final SsmlDocument doc, final boolean useBargein,\n            final BargeInType type)", "full_signature": "public  SpeakableSsmlText(final SsmlDocument doc, final boolean useBargein,\n            final BargeInType type)", "class_method_signature": "SpeakableSsmlText.SpeakableSsmlText(final SsmlDocument doc, final boolean useBargein,\n            final BargeInType type)", "testcase": false, "constructor": true}, {"identifier": "getSpeakableText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSpeakableText()", "full_signature": "public String getSpeakableText()", "class_method_signature": "SpeakableSsmlText.getSpeakableText()", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "()", "modifiers": "public", "return": "SsmlDocument", "signature": "SsmlDocument getDocument()", "full_signature": "public SsmlDocument getDocument()", "class_method_signature": "SpeakableSsmlText.getDocument()", "testcase": false, "constructor": false}, {"identifier": "appendSpeakableText", "parameters": "(final String str)", "modifiers": "public", "return": "SpeakableText", "signature": "SpeakableText appendSpeakableText(final String str)", "full_signature": "public SpeakableText appendSpeakableText(final String str)", "class_method_signature": "SpeakableSsmlText.appendSpeakableText(final String str)", "testcase": false, "constructor": false}, {"identifier": "isSpeakableTextEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSpeakableTextEmpty()", "full_signature": "public boolean isSpeakableTextEmpty()", "class_method_signature": "SpeakableSsmlText.isSpeakableTextEmpty()", "testcase": false, "constructor": false}, {"identifier": "isBargeInEnabled", "parameters": "(final BargeInType type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isBargeInEnabled(final BargeInType type)", "full_signature": "@Override public boolean isBargeInEnabled(final BargeInType type)", "class_method_signature": "SpeakableSsmlText.isBargeInEnabled(final BargeInType type)", "testcase": false, "constructor": false}, {"identifier": "getBargeInType", "parameters": "()", "modifiers": "public", "return": "BargeInType", "signature": "BargeInType getBargeInType()", "full_signature": "public BargeInType getBargeInType()", "class_method_signature": "SpeakableSsmlText.getBargeInType()", "testcase": false, "constructor": false}, {"identifier": "getTimeout", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTimeout()", "full_signature": "public long getTimeout()", "class_method_signature": "SpeakableSsmlText.getTimeout()", "testcase": false, "constructor": false}, {"identifier": "setTimeout", "parameters": "(final long msec)", "modifiers": "public", "return": "void", "signature": "void setTimeout(final long msec)", "full_signature": "public void setTimeout(final long msec)", "class_method_signature": "SpeakableSsmlText.setTimeout(final long msec)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object other)", "full_signature": "@Override public boolean equals(final Object other)", "class_method_signature": "SpeakableSsmlText.equals(final Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SpeakableSsmlText.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SpeakableSsmlText.toString()", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/SpeakableSsmlText.java"}, "focal_method": {"identifier": "appendSpeakableText", "parameters": "(final String str)", "modifiers": "public", "return": "SpeakableText", "body": "public SpeakableText appendSpeakableText(final String str) {\n        if (document == null) {\n            return this;\n        }\n\n        final Speak speak = document.getSpeak();\n        speak.addText(str);\n\n        return this;\n    }", "signature": "SpeakableText appendSpeakableText(final String str)", "full_signature": "public SpeakableText appendSpeakableText(final String str)", "class_method_signature": "SpeakableSsmlText.appendSpeakableText(final String str)", "testcase": false, "constructor": false, "invocations": ["getSpeak", "addText"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}