{"test_class": {"identifier": "ArchaiusSystemDisruptionBudgetResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final SystemDisruptionBudgetDescriptor DESCRIPTOR_1_1 = new SystemDisruptionBudgetDescriptor(\n            1,\n            1,\n            Collections.singletonList(TimeWindow.newBuilder()\n                    .withDays(Day.weekdays())\n                    .withwithHourlyTimeWindows(8, 16)\n                    .withTimeZone(\"PST\")\n                    .build()\n            )\n    );", "modifier": "private static final", "type": "SystemDisruptionBudgetDescriptor", "declarator": "DESCRIPTOR_1_1 = new SystemDisruptionBudgetDescriptor(\n            1,\n            1,\n            Collections.singletonList(TimeWindow.newBuilder()\n                    .withDays(Day.weekdays())\n                    .withwithHourlyTimeWindows(8, 16)\n                    .withTimeZone(\"PST\")\n                    .build()\n            )\n    )", "var_name": "DESCRIPTOR_1_1"}, {"original_string": "private static final SystemDisruptionBudgetDescriptor DESCRIPTOR_2_2 = new SystemDisruptionBudgetDescriptor(2, 2, Collections.emptyList());", "modifier": "private static final", "type": "SystemDisruptionBudgetDescriptor", "declarator": "DESCRIPTOR_2_2 = new SystemDisruptionBudgetDescriptor(2, 2, Collections.emptyList())", "var_name": "DESCRIPTOR_2_2"}, {"original_string": "private final PropertyRepository repository = mock(PropertyRepository.class);", "modifier": "private final", "type": "PropertyRepository", "declarator": "repository = mock(PropertyRepository.class)", "var_name": "repository"}, {"original_string": "private final StubbedProperty property = new StubbedProperty();", "modifier": "private final", "type": "StubbedProperty", "declarator": "property = new StubbedProperty()", "var_name": "property"}, {"original_string": "private final TitusRxSubscriber<SystemDisruptionBudget> testSubscriber = new TitusRxSubscriber<>();", "modifier": "private final", "type": "TitusRxSubscriber<SystemDisruptionBudget>", "declarator": "testSubscriber = new TitusRxSubscriber<>()", "var_name": "testSubscriber"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/eviction/service/quota/system/ArchaiusSystemDisruptionBudgetResolverTest.java"}, "test_case": {"identifier": "testResolve", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolve() throws Exception {\n        property.set(toJson(DESCRIPTOR_1_1));\n\n        ArchaiusSystemDisruptionBudgetResolver resolver = new ArchaiusSystemDisruptionBudgetResolver(repository);\n        resolver.resolve().subscribe(testSubscriber);\n\n        // Should return the initial value.\n        assertThat(testSubscriber.takeNext()).isEqualTo(toDisruptionBudget(DESCRIPTOR_1_1));\n\n        // Now refresh\n        property.set(toJson(DESCRIPTOR_2_2));\n        assertThat(testSubscriber.takeNext()).isEqualTo(toDisruptionBudget(DESCRIPTOR_2_2));\n    }", "signature": "void testResolve()", "full_signature": "@Test public void testResolve()", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolverTest.testResolve()", "testcase": true, "constructor": false, "invocations": ["set", "toJson", "subscribe", "resolve", "isEqualTo", "assertThat", "takeNext", "toDisruptionBudget", "set", "toJson", "isEqualTo", "assertThat", "takeNext", "toDisruptionBudget"]}, "focal_class": {"identifier": "ArchaiusSystemDisruptionBudgetResolver", "superclass": "", "interfaces": "implements SystemDisruptionBudgetResolver", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ArchaiusSystemDisruptionBudgetResolver.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ArchaiusSystemDisruptionBudgetResolver.class)", "var_name": "logger"}, {"original_string": "public static final String PROPERTY_KEY = \"titusMaster.eviction.systemDisruptionBudget\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_KEY = \"titusMaster.eviction.systemDisruptionBudget\"", "var_name": "PROPERTY_KEY"}, {"original_string": "private static final SystemDisruptionBudget DEFAULT_SYSTEM_DISRUPTION_BUDGET = newBasicSystemDisruptionBudget(\n            50,\n            500,\n            TimeWindow.newBuilder()\n                    .withDays(Day.weekdays())\n                    .withwithHourlyTimeWindows(8, 16)\n                    .withTimeZone(\"PST\")\n                    .build()\n    );", "modifier": "private static final", "type": "SystemDisruptionBudget", "declarator": "DEFAULT_SYSTEM_DISRUPTION_BUDGET = newBasicSystemDisruptionBudget(\n            50,\n            500,\n            TimeWindow.newBuilder()\n                    .withDays(Day.weekdays())\n                    .withwithHourlyTimeWindows(8, 16)\n                    .withTimeZone(\"PST\")\n                    .build()\n    )", "var_name": "DEFAULT_SYSTEM_DISRUPTION_BUDGET"}, {"original_string": "private final Property.Subscription subscription;", "modifier": "private final", "type": "Property.Subscription", "declarator": "subscription", "var_name": "subscription"}, {"original_string": "private final ReplayProcessor<SystemDisruptionBudget> budgetEmitter;", "modifier": "private final", "type": "ReplayProcessor<SystemDisruptionBudget>", "declarator": "budgetEmitter", "var_name": "budgetEmitter"}], "methods": [{"identifier": "ArchaiusSystemDisruptionBudgetResolver", "parameters": "(PropertyRepository repository)", "modifiers": "@Inject public", "return": "", "signature": " ArchaiusSystemDisruptionBudgetResolver(PropertyRepository repository)", "full_signature": "@Inject public  ArchaiusSystemDisruptionBudgetResolver(PropertyRepository repository)", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolver.ArchaiusSystemDisruptionBudgetResolver(PropertyRepository repository)", "testcase": false, "constructor": true}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void shutdown()", "full_signature": "@PreDestroy public void shutdown()", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolver.shutdown()", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "()", "modifiers": "@Override public", "return": "Flux<SystemDisruptionBudget>", "signature": "Flux<SystemDisruptionBudget> resolve()", "full_signature": "@Override public Flux<SystemDisruptionBudget> resolve()", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolver.resolve()", "testcase": false, "constructor": false}, {"identifier": "initialBudget", "parameters": "(PropertyRepository repository)", "modifiers": "private", "return": "SystemDisruptionBudget", "signature": "SystemDisruptionBudget initialBudget(PropertyRepository repository)", "full_signature": "private SystemDisruptionBudget initialBudget(PropertyRepository repository)", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolver.initialBudget(PropertyRepository repository)", "testcase": false, "constructor": false}, {"identifier": "processUpdate", "parameters": "(String newValue)", "modifiers": "private", "return": "void", "signature": "void processUpdate(String newValue)", "full_signature": "private void processUpdate(String newValue)", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolver.processUpdate(String newValue)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String newValue)", "modifiers": "private", "return": "SystemDisruptionBudget", "signature": "SystemDisruptionBudget parse(String newValue)", "full_signature": "private SystemDisruptionBudget parse(String newValue)", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolver.parse(String newValue)", "testcase": false, "constructor": false}, {"identifier": "toDisruptionBudget", "parameters": "(SystemDisruptionBudgetDescriptor descriptor)", "modifiers": "@VisibleForTesting static", "return": "SystemDisruptionBudget", "signature": "SystemDisruptionBudget toDisruptionBudget(SystemDisruptionBudgetDescriptor descriptor)", "full_signature": "@VisibleForTesting static SystemDisruptionBudget toDisruptionBudget(SystemDisruptionBudgetDescriptor descriptor)", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolver.toDisruptionBudget(SystemDisruptionBudgetDescriptor descriptor)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/eviction/service/quota/system/ArchaiusSystemDisruptionBudgetResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "()", "modifiers": "@Override public", "return": "Flux<SystemDisruptionBudget>", "body": "@Override\n    public Flux<SystemDisruptionBudget> resolve() {\n        return budgetEmitter;\n    }", "signature": "Flux<SystemDisruptionBudget> resolve()", "full_signature": "@Override public Flux<SystemDisruptionBudget> resolve()", "class_method_signature": "ArchaiusSystemDisruptionBudgetResolver.resolve()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}