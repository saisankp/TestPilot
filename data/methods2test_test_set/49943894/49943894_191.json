{"test_class": {"identifier": "HttpClientHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/com/cloud/utils/rest/HttpClientHelperTest.java"}, "test_case": {"identifier": "testCreateClient", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateClient() throws Exception {\n        int maxRedirects = 5;\n        final CloseableHttpClient client = HttpClientHelper.createHttpClient(maxRedirects);\n\n        assertThat(client, notNullValue());\n    }", "signature": "void testCreateClient()", "full_signature": "@Test public void testCreateClient()", "class_method_signature": "HttpClientHelperTest.testCreateClient()", "testcase": true, "constructor": false, "invocations": ["createHttpClient", "assertThat", "notNullValue"]}, "focal_class": {"identifier": "HttpClientHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Logger s_logger = LoggerFactory.getLogger(HttpClientHelper.class);", "modifier": "static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(HttpClientHelper.class)", "var_name": "s_logger"}, {"original_string": "private static final int MAX_ALLOCATED_CONNECTIONS = 50;", "modifier": "private static final", "type": "int", "declarator": "MAX_ALLOCATED_CONNECTIONS = 50", "var_name": "MAX_ALLOCATED_CONNECTIONS"}, {"original_string": "private static final int MAX_ALLOCATED_CONNECTIONS_PER_ROUTE = 25;", "modifier": "private static final", "type": "int", "declarator": "MAX_ALLOCATED_CONNECTIONS_PER_ROUTE = 25", "var_name": "MAX_ALLOCATED_CONNECTIONS_PER_ROUTE"}, {"original_string": "private static final int DEFAULT_SOCKET_TIMEOUT = 3000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_SOCKET_TIMEOUT = 3000", "var_name": "DEFAULT_SOCKET_TIMEOUT"}, {"original_string": "private static final int DEFAULT_CONNECTION_REQUEST_TIMEOUT = 3000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_CONNECTION_REQUEST_TIMEOUT = 3000", "var_name": "DEFAULT_CONNECTION_REQUEST_TIMEOUT"}, {"original_string": "private static final int DEFAULT_CONNECT_TIMEOUT = 3000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_CONNECT_TIMEOUT = 3000", "var_name": "DEFAULT_CONNECT_TIMEOUT"}, {"original_string": "private static final String HTTPS = HttpConstants.HTTPS;", "modifier": "private static final", "type": "String", "declarator": "HTTPS = HttpConstants.HTTPS", "var_name": "HTTPS"}], "methods": [{"identifier": "createHttpClient", "parameters": "(final int maxRedirects)", "modifiers": "public static", "return": "CloseableHttpClient", "signature": "CloseableHttpClient createHttpClient(final int maxRedirects)", "full_signature": "public static CloseableHttpClient createHttpClient(final int maxRedirects)", "class_method_signature": "HttpClientHelper.createHttpClient(final int maxRedirects)", "testcase": false, "constructor": false}, {"identifier": "createSocketFactoryConfigration", "parameters": "()", "modifiers": "private static", "return": "Registry<ConnectionSocketFactory>", "signature": "Registry<ConnectionSocketFactory> createSocketFactoryConfigration()", "full_signature": "private static Registry<ConnectionSocketFactory> createSocketFactoryConfigration()", "class_method_signature": "HttpClientHelper.createSocketFactoryConfigration()", "testcase": false, "constructor": false}], "file": "utils/src/main/java/com/cloud/utils/rest/HttpClientHelper.java"}, "focal_method": {"identifier": "createHttpClient", "parameters": "(final int maxRedirects)", "modifiers": "public static", "return": "CloseableHttpClient", "body": "public static CloseableHttpClient createHttpClient(final int maxRedirects) throws KeyManagementException, NoSuchAlgorithmException, KeyStoreException {\n        s_logger.info(\"Creating new HTTP connection pool and client\");\n        final Registry<ConnectionSocketFactory> socketFactoryRegistry = createSocketFactoryConfigration();\n        final BasicCookieStore cookieStore = new BasicCookieStore();\n        final PoolingHttpClientConnectionManager connManager = new PoolingHttpClientConnectionManager(socketFactoryRegistry);\n        connManager.setDefaultMaxPerRoute(MAX_ALLOCATED_CONNECTIONS_PER_ROUTE);\n        connManager.setMaxTotal(MAX_ALLOCATED_CONNECTIONS);\n        final RequestConfig requestConfig = RequestConfig.custom()\n            .setCookieSpec(CookieSpecs.DEFAULT)\n            .setMaxRedirects(maxRedirects)\n            .setSocketTimeout(DEFAULT_SOCKET_TIMEOUT)\n            .setConnectionRequestTimeout(DEFAULT_CONNECTION_REQUEST_TIMEOUT)\n            .setConnectTimeout(DEFAULT_CONNECT_TIMEOUT)\n            .build();\n        return HttpClientBuilder.create()\n            .setConnectionManager(connManager)\n            .setRedirectStrategy(new LaxRedirectStrategy())\n            .setDefaultRequestConfig(requestConfig)\n            .setDefaultCookieStore(cookieStore)\n            .setRetryHandler(new StandardHttpRequestRetryHandler())\n            .build();\n    }", "signature": "CloseableHttpClient createHttpClient(final int maxRedirects)", "full_signature": "public static CloseableHttpClient createHttpClient(final int maxRedirects)", "class_method_signature": "HttpClientHelper.createHttpClient(final int maxRedirects)", "testcase": false, "constructor": false, "invocations": ["info", "createSocketFactoryConfigration", "setDefaultMaxPerRoute", "setMaxTotal", "build", "setConnectTimeout", "setConnectionRequestTimeout", "setSocketTimeout", "setMaxRedirects", "setCookieSpec", "custom", "build", "setRetryHandler", "setDefaultCookieStore", "setDefaultRequestConfig", "setRedirectStrategy", "setConnectionManager", "create"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}