{"test_class": {"identifier": "RequestUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "webmagic-extension/src/test/java/us/codecraft/webmagic/utils/RequestUtilsTest.java"}, "test_case": {"identifier": "test_generate_range_when_invalid_number", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_generate_range_when_invalid_number() throws Exception {\n        List<Request> requests = RequestUtils.from(\"http://angularjs.cn/api/article/latest?p=[10-3]&s=20\");\n        assertThat(requests).isEmpty();\n    }", "signature": "void test_generate_range_when_invalid_number()", "full_signature": "@Test public void test_generate_range_when_invalid_number()", "class_method_signature": "RequestUtilsTest.test_generate_range_when_invalid_number()", "testcase": true, "constructor": false, "invocations": ["from", "isEmpty", "assertThat"]}, "focal_class": {"identifier": "RequestUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Pattern p4Range = Pattern.compile(\"\\\\[(\\\\d+)\\\\-(\\\\d+)\\\\]\");", "modifier": "private static", "type": "Pattern", "declarator": "p4Range = Pattern.compile(\"\\\\[(\\\\d+)\\\\-(\\\\d+)\\\\]\")", "var_name": "p4Range"}], "methods": [{"identifier": "from", "parameters": "(String exp)", "modifiers": "public static", "return": "List<Request>", "signature": "List<Request> from(String exp)", "full_signature": "public static List<Request> from(String exp)", "class_method_signature": "RequestUtils.from(String exp)", "testcase": false, "constructor": false}], "file": "webmagic-extension/src/main/java/us/codecraft/webmagic/utils/RequestUtils.java"}, "focal_method": {"identifier": "from", "parameters": "(String exp)", "modifiers": "public static", "return": "List<Request>", "body": "public static List<Request> from(String exp){\n        Matcher matcher = p4Range.matcher(exp);\n        if (!matcher.find()) {\n            return Collections.singletonList(new Request(exp));\n        }\n        int rangeFrom = Integer.parseInt(matcher.group(1));\n        int rangeTo = Integer.parseInt(matcher.group(2));\n        if (rangeFrom > rangeTo) {\n            return Collections.emptyList();\n        }\n        List<Request> requests = new ArrayList<Request>(rangeTo - rangeFrom + 1);\n        for (int i = rangeFrom; i <= rangeTo; i++) {\n            requests.add(new Request(matcher.replaceAll(String.valueOf(i))));\n        }\n        return requests;\n    }", "signature": "List<Request> from(String exp)", "full_signature": "public static List<Request> from(String exp)", "class_method_signature": "RequestUtils.from(String exp)", "testcase": false, "constructor": false, "invocations": ["matcher", "find", "singletonList", "parseInt", "group", "parseInt", "group", "emptyList", "add", "replaceAll", "valueOf"]}, "repository": {"repo_id": 9623064, "url": "https://github.com/code4craft/webmagic", "language": "Java", "is_fork": false, "fork_count": 3804, "stargazer_count": 9136, "size": 17041, "license": "licensed"}}