{"test_class": {"identifier": "JacksonUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-core/src/test/java/com/webauthn4j/converter/jackson/JacksonUtilTest.java"}, "test_case": {"identifier": "readTree_with_JsonParseException_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void readTree_with_JsonParseException_test() throws IOException {\n        ObjectMapper objectMapper = mock(ObjectMapper.class);\n        when(objectMapper.readTree((byte[]) any())).thenThrow(JsonParseException.class);\n        byte[] value = new byte[0];\n        assertThatThrownBy(()-> JacksonUtil.readTree(objectMapper, value)).isInstanceOf(DataConversionException.class);\n    }", "signature": "void readTree_with_JsonParseException_test()", "full_signature": "@Test void readTree_with_JsonParseException_test()", "class_method_signature": "JacksonUtilTest.readTree_with_JsonParseException_test()", "testcase": true, "constructor": false, "invocations": ["mock", "thenThrow", "when", "readTree", "any", "isInstanceOf", "assertThatThrownBy", "readTree"]}, "focal_class": {"identifier": "JacksonUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String INPUT_MISMATCH_ERROR_MESSAGE = \"Input data does not match expected form\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_MISMATCH_ERROR_MESSAGE = \"Input data does not match expected form\"", "var_name": "INPUT_MISMATCH_ERROR_MESSAGE"}], "methods": [{"identifier": "JacksonUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " JacksonUtil()", "full_signature": "private  JacksonUtil()", "class_method_signature": "JacksonUtil.JacksonUtil()", "testcase": false, "constructor": true}, {"identifier": "readTree", "parameters": "(ObjectMapper objectMapper, byte[] bytes)", "modifiers": "public static", "return": "JsonNode", "signature": "JsonNode readTree(ObjectMapper objectMapper, byte[] bytes)", "full_signature": "public static JsonNode readTree(ObjectMapper objectMapper, byte[] bytes)", "class_method_signature": "JacksonUtil.readTree(ObjectMapper objectMapper, byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "binaryValue", "parameters": "(JsonNode jsonNode)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] binaryValue(JsonNode jsonNode)", "full_signature": "public static byte[] binaryValue(JsonNode jsonNode)", "class_method_signature": "JacksonUtil.binaryValue(JsonNode jsonNode)", "testcase": false, "constructor": false}], "file": "webauthn4j-core/src/main/java/com/webauthn4j/converter/jackson/JacksonUtil.java"}, "focal_method": {"identifier": "readTree", "parameters": "(ObjectMapper objectMapper, byte[] bytes)", "modifiers": "public static", "return": "JsonNode", "body": "public static JsonNode readTree(ObjectMapper objectMapper, byte[] bytes) {\n        try {\n            return objectMapper.readTree(bytes);\n        } catch (MismatchedInputException | JsonParseException e) {\n            throw new DataConversionException(INPUT_MISMATCH_ERROR_MESSAGE, e);\n        } catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }", "signature": "JsonNode readTree(ObjectMapper objectMapper, byte[] bytes)", "full_signature": "public static JsonNode readTree(ObjectMapper objectMapper, byte[] bytes)", "class_method_signature": "JacksonUtil.readTree(ObjectMapper objectMapper, byte[] bytes)", "testcase": false, "constructor": false, "invocations": ["readTree"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}