{"test_class": {"identifier": "TierPodResourcePoolResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ApplicationSlaManagementService capacityGroupService = mock(ApplicationSlaManagementService.class);", "modifier": "private final", "type": "ApplicationSlaManagementService", "declarator": "capacityGroupService = mock(ApplicationSlaManagementService.class)", "var_name": "capacityGroupService"}, {"original_string": "private final TierPodResourcePoolResolver resolver = new TierPodResourcePoolResolver(capacityGroupService);", "modifier": "private final", "type": "TierPodResourcePoolResolver", "declarator": "resolver = new TierPodResourcePoolResolver(capacityGroupService)", "var_name": "resolver"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/mesos/kubeapiserver/direct/resourcepool/TierPodResourcePoolResolverTest.java"}, "test_case": {"identifier": "testFlex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFlex() {\n        List<ResourcePoolAssignment> result = resolver.resolve(newJob(\"myFlex\"));\n        assertThat(result).hasSize(1);\n        assertThat(result.get(0).getResourcePoolName()).isEqualTo(PodResourcePoolResolvers.RESOURCE_POOL_ELASTIC);\n    }", "signature": "void testFlex()", "full_signature": "@Test public void testFlex()", "class_method_signature": "TierPodResourcePoolResolverTest.testFlex()", "testcase": true, "constructor": false, "invocations": ["resolve", "newJob", "hasSize", "assertThat", "isEqualTo", "assertThat", "getResourcePoolName", "get"]}, "focal_class": {"identifier": "TierPodResourcePoolResolver", "superclass": "", "interfaces": "implements PodResourcePoolResolver", "fields": [{"original_string": "private static final ResourcePoolAssignment ASSIGNMENT_ELASTIC = ResourcePoolAssignment.newBuilder()\n            .withResourcePoolName(PodResourcePoolResolvers.RESOURCE_POOL_ELASTIC)\n            .withRule(\"Flex tier assigned to elastic resource pool\")\n            .build();", "modifier": "private static final", "type": "ResourcePoolAssignment", "declarator": "ASSIGNMENT_ELASTIC = ResourcePoolAssignment.newBuilder()\n            .withResourcePoolName(PodResourcePoolResolvers.RESOURCE_POOL_ELASTIC)\n            .withRule(\"Flex tier assigned to elastic resource pool\")\n            .build()", "var_name": "ASSIGNMENT_ELASTIC"}, {"original_string": "private static final ResourcePoolAssignment ASSIGNMENT_RESERVED = ResourcePoolAssignment.newBuilder()\n            .withResourcePoolName(PodResourcePoolResolvers.RESOURCE_POOL_RESERVED)\n            .withRule(\"Critical tier assigned to reserved resource pool\")\n            .build();", "modifier": "private static final", "type": "ResourcePoolAssignment", "declarator": "ASSIGNMENT_RESERVED = ResourcePoolAssignment.newBuilder()\n            .withResourcePoolName(PodResourcePoolResolvers.RESOURCE_POOL_RESERVED)\n            .withRule(\"Critical tier assigned to reserved resource pool\")\n            .build()", "var_name": "ASSIGNMENT_RESERVED"}, {"original_string": "private final ApplicationSlaManagementService capacityGroupService;", "modifier": "private final", "type": "ApplicationSlaManagementService", "declarator": "capacityGroupService", "var_name": "capacityGroupService"}], "methods": [{"identifier": "TierPodResourcePoolResolver", "parameters": "(ApplicationSlaManagementService capacityGroupService)", "modifiers": "public", "return": "", "signature": " TierPodResourcePoolResolver(ApplicationSlaManagementService capacityGroupService)", "full_signature": "public  TierPodResourcePoolResolver(ApplicationSlaManagementService capacityGroupService)", "class_method_signature": "TierPodResourcePoolResolver.TierPodResourcePoolResolver(ApplicationSlaManagementService capacityGroupService)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(Job<?> job)", "modifiers": "@Override public", "return": "List<ResourcePoolAssignment>", "signature": "List<ResourcePoolAssignment> resolve(Job<?> job)", "full_signature": "@Override public List<ResourcePoolAssignment> resolve(Job<?> job)", "class_method_signature": "TierPodResourcePoolResolver.resolve(Job<?> job)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/resourcepool/TierPodResourcePoolResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(Job<?> job)", "modifiers": "@Override public", "return": "List<ResourcePoolAssignment>", "body": "@Override\n    public List<ResourcePoolAssignment> resolve(Job<?> job) {\n        ApplicationSLA capacityGroup = JobManagerUtil.getCapacityGroupDescriptor(job.getJobDescriptor(), capacityGroupService);\n        if (capacityGroup == null || capacityGroup.getTier() != Tier.Critical) {\n            return Collections.singletonList(ASSIGNMENT_ELASTIC);\n        }\n        return Collections.singletonList(ASSIGNMENT_RESERVED);\n    }", "signature": "List<ResourcePoolAssignment> resolve(Job<?> job)", "full_signature": "@Override public List<ResourcePoolAssignment> resolve(Job<?> job)", "class_method_signature": "TierPodResourcePoolResolver.resolve(Job<?> job)", "testcase": false, "constructor": false, "invocations": ["getCapacityGroupDescriptor", "getJobDescriptor", "getTier", "singletonList", "singletonList"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}