{"test_class": {"identifier": "MessageCommandResponseAdapterTest", "superclass": "", "interfaces": "implements ProtocolAdapterTest", "fields": [{"original_string": "private MessageCommandResponseAdapter underTest;", "modifier": "private", "type": "MessageCommandResponseAdapter", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Parameterized.Parameter\n    public String type;", "modifier": "@Parameterized.Parameter\n    public", "type": "String", "declarator": "type", "var_name": "type"}], "file": "protocol-adapter/src/test/java/org/eclipse/ditto/protocoladapter/things/MessageCommandResponseAdapterTest.java"}, "test_case": {"identifier": "sendMessageResponsePlainTextFromAdaptable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sendMessageResponsePlainTextFromAdaptable() {\n        final MessageDirection messageDirection = MessageDirection.TO;\n        final String subject = subject();\n        final String payload = \"Huhu!\";\n        final String contentType = \"text/plain\";\n\n        sendMessageResponseFromAdaptable(messageDirection, subject, JsonValue.of(payload), payload, contentType);\n    }", "signature": "void sendMessageResponsePlainTextFromAdaptable()", "full_signature": "@Test public void sendMessageResponsePlainTextFromAdaptable()", "class_method_signature": "MessageCommandResponseAdapterTest.sendMessageResponsePlainTextFromAdaptable()", "testcase": true, "constructor": false, "invocations": ["subject", "sendMessageResponseFromAdaptable", "of"]}, "focal_class": {"identifier": "MessageCommandResponseAdapter", "superclass": "extends AbstractAdapter<MessageCommandResponse<?, ?>>", "interfaces": "implements ThingMessageAdapter<MessageCommandResponse<?, ?>>", "fields": [{"original_string": "private static final SignalMapper<MessageCommandResponse<?, ?>>\n            TO_ADAPTABLE_MAPPER = SignalMapperFactory.newMessageCommandResponseSignalMapper();", "modifier": "private static final", "type": "SignalMapper<MessageCommandResponse<?, ?>>", "declarator": "TO_ADAPTABLE_MAPPER = SignalMapperFactory.newMessageCommandResponseSignalMapper()", "var_name": "TO_ADAPTABLE_MAPPER"}], "methods": [{"identifier": "MessageCommandResponseAdapter", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "private", "return": "", "signature": " MessageCommandResponseAdapter(final HeaderTranslator headerTranslator)", "full_signature": "private  MessageCommandResponseAdapter(final HeaderTranslator headerTranslator)", "class_method_signature": "MessageCommandResponseAdapter.MessageCommandResponseAdapter(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "MessageCommandResponseAdapter", "signature": "MessageCommandResponseAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static MessageCommandResponseAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "MessageCommandResponseAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false}, {"identifier": "toAdaptable", "parameters": "(final MessageCommandResponse<?, ?> t)", "modifiers": "@Override public", "return": "Adaptable", "signature": "Adaptable toAdaptable(final MessageCommandResponse<?, ?> t)", "full_signature": "@Override public Adaptable toAdaptable(final MessageCommandResponse<?, ?> t)", "class_method_signature": "MessageCommandResponseAdapter.toAdaptable(final MessageCommandResponse<?, ?> t)", "testcase": false, "constructor": false}, {"identifier": "isForResponses", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isForResponses()", "full_signature": "@Override public boolean isForResponses()", "class_method_signature": "MessageCommandResponseAdapter.isForResponses()", "testcase": false, "constructor": false}, {"identifier": "requiresSubject", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean requiresSubject()", "full_signature": "@Override public boolean requiresSubject()", "class_method_signature": "MessageCommandResponseAdapter.requiresSubject()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(final Adaptable adaptable)", "modifiers": "@Override protected", "return": "String", "signature": "String getType(final Adaptable adaptable)", "full_signature": "@Override protected String getType(final Adaptable adaptable)", "class_method_signature": "MessageCommandResponseAdapter.getType(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "mapSignalToAdaptable", "parameters": "(final MessageCommandResponse<?, ?> command, final TopicPath.Channel channel)", "modifiers": "@Override public", "return": "Adaptable", "signature": "Adaptable mapSignalToAdaptable(final MessageCommandResponse<?, ?> command, final TopicPath.Channel channel)", "full_signature": "@Override public Adaptable mapSignalToAdaptable(final MessageCommandResponse<?, ?> command, final TopicPath.Channel channel)", "class_method_signature": "MessageCommandResponseAdapter.mapSignalToAdaptable(final MessageCommandResponse<?, ?> command, final TopicPath.Channel channel)", "testcase": false, "constructor": false}], "file": "protocol-adapter/src/main/java/org/eclipse/ditto/protocoladapter/things/MessageCommandResponseAdapter.java"}, "focal_method": {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "MessageCommandResponseAdapter", "body": "public static MessageCommandResponseAdapter of(final HeaderTranslator headerTranslator) {\n        return new MessageCommandResponseAdapter(requireNonNull(headerTranslator));\n    }", "signature": "MessageCommandResponseAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static MessageCommandResponseAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "MessageCommandResponseAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false, "invocations": ["requireNonNull"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}