{"test_class": {"identifier": "CloudWatchRaiderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private CloudWatchRaiderImpl cwRaiderImplUnderTest;", "modifier": "@Autowired\n    private", "type": "CloudWatchRaiderImpl", "declarator": "cwRaiderImplUnderTest", "var_name": "cwRaiderImplUnderTest"}, {"original_string": "@Autowired\n    private CloudWatchDelegator cwDelegator;", "modifier": "@Autowired\n    private", "type": "CloudWatchDelegator", "declarator": "cwDelegator", "var_name": "cwDelegator"}, {"original_string": "private  AmazonCloudWatch amazonCloudWatch;", "modifier": "private", "type": "AmazonCloudWatch", "declarator": "amazonCloudWatch", "var_name": "amazonCloudWatch"}], "file": "cloudraider-core/src/test/java/com/intuit/cloudraider/core/impl/CloudWatchRaiderImplTest.java"}, "test_case": {"identifier": "testGetELBMetric", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetELBMetric()\n    {\n        Double metricValue = cwRaiderImplUnderTest.getELBMetric(\"test-lb\", \"UnHealthyHost\");\n        Assert.assertEquals(metricValue, new Double (1.0));\n\n    }", "signature": "void testGetELBMetric()", "full_signature": "@Test public void testGetELBMetric()", "class_method_signature": "CloudWatchRaiderImplTest.testGetELBMetric()", "testcase": true, "constructor": false, "invocations": ["getELBMetric", "assertEquals"]}, "focal_class": {"identifier": "CloudWatchRaiderImpl", "superclass": "", "interfaces": "implements CloudWatchRaider", "fields": [{"original_string": "@Autowired\n    private CloudWatchDelegator cloudWatchDelegator;", "modifier": "@Autowired\n    private", "type": "CloudWatchDelegator", "declarator": "cloudWatchDelegator", "var_name": "cloudWatchDelegator"}, {"original_string": "Logger logger = LoggerFactory.getLogger(this.getClass());", "modifier": "", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(this.getClass())", "var_name": "logger"}], "methods": [{"identifier": "CloudWatchRaiderImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " CloudWatchRaiderImpl()", "full_signature": "public  CloudWatchRaiderImpl()", "class_method_signature": "CloudWatchRaiderImpl.CloudWatchRaiderImpl()", "testcase": false, "constructor": true}, {"identifier": "getCloudWatchAlarmByName", "parameters": "(String alarmName)", "modifiers": "@Override public", "return": "List<MetricAlarm>", "signature": "List<MetricAlarm> getCloudWatchAlarmByName(String alarmName)", "full_signature": "@Override public List<MetricAlarm> getCloudWatchAlarmByName(String alarmName)", "class_method_signature": "CloudWatchRaiderImpl.getCloudWatchAlarmByName(String alarmName)", "testcase": false, "constructor": false}, {"identifier": "isStateInAlarm", "parameters": "(String alarmName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isStateInAlarm(String alarmName)", "full_signature": "@Override public boolean isStateInAlarm(String alarmName)", "class_method_signature": "CloudWatchRaiderImpl.isStateInAlarm(String alarmName)", "testcase": false, "constructor": false}, {"identifier": "getCloudWatchAlarmByNameAndDate", "parameters": "(String alarmName, Date afterDate)", "modifiers": "@Override public", "return": "List<MetricAlarm>", "signature": "List<MetricAlarm> getCloudWatchAlarmByNameAndDate(String alarmName, Date afterDate)", "full_signature": "@Override public List<MetricAlarm> getCloudWatchAlarmByNameAndDate(String alarmName, Date afterDate)", "class_method_signature": "CloudWatchRaiderImpl.getCloudWatchAlarmByNameAndDate(String alarmName, Date afterDate)", "testcase": false, "constructor": false}, {"identifier": "getELBUnHealthyHostMetric", "parameters": "(String loadBalancerName)", "modifiers": "@Override public", "return": "Double", "signature": "Double getELBUnHealthyHostMetric(String loadBalancerName)", "full_signature": "@Override public Double getELBUnHealthyHostMetric(String loadBalancerName)", "class_method_signature": "CloudWatchRaiderImpl.getELBUnHealthyHostMetric(String loadBalancerName)", "testcase": false, "constructor": false}, {"identifier": "getELBMetric", "parameters": "(String loadBalancerName, String metricName)", "modifiers": "@Override public", "return": "Double", "signature": "Double getELBMetric(String loadBalancerName, String metricName)", "full_signature": "@Override public Double getELBMetric(String loadBalancerName, String metricName)", "class_method_signature": "CloudWatchRaiderImpl.getELBMetric(String loadBalancerName, String metricName)", "testcase": false, "constructor": false}, {"identifier": "getEC2Metric", "parameters": "(String instanceId, String metricName)", "modifiers": "@Override public", "return": "Double", "signature": "Double getEC2Metric(String instanceId, String metricName)", "full_signature": "@Override public Double getEC2Metric(String instanceId, String metricName)", "class_method_signature": "CloudWatchRaiderImpl.getEC2Metric(String instanceId, String metricName)", "testcase": false, "constructor": false}, {"identifier": "getMetric", "parameters": "(String dimensionName, String dimensionValue, String statisticType, String namespace, String metricName)", "modifiers": "private", "return": "Double", "signature": "Double getMetric(String dimensionName, String dimensionValue, String statisticType, String namespace, String metricName)", "full_signature": "private Double getMetric(String dimensionName, String dimensionValue, String statisticType, String namespace, String metricName)", "class_method_signature": "CloudWatchRaiderImpl.getMetric(String dimensionName, String dimensionValue, String statisticType, String namespace, String metricName)", "testcase": false, "constructor": false}, {"identifier": "getCloudWatchAlarmHistory", "parameters": "(String alarmName)", "modifiers": "@Override public", "return": "List<AlarmHistoryItem>", "signature": "List<AlarmHistoryItem> getCloudWatchAlarmHistory(String alarmName)", "full_signature": "@Override public List<AlarmHistoryItem> getCloudWatchAlarmHistory(String alarmName)", "class_method_signature": "CloudWatchRaiderImpl.getCloudWatchAlarmHistory(String alarmName)", "testcase": false, "constructor": false}, {"identifier": "getSimpleCloudWatchMetricAlarmStatus", "parameters": "(String alarmName)", "modifiers": "@Override public", "return": "AlarmStateValue", "signature": "AlarmStateValue getSimpleCloudWatchMetricAlarmStatus(String alarmName)", "full_signature": "@Override public AlarmStateValue getSimpleCloudWatchMetricAlarmStatus(String alarmName)", "class_method_signature": "CloudWatchRaiderImpl.getSimpleCloudWatchMetricAlarmStatus(String alarmName)", "testcase": false, "constructor": false}, {"identifier": "getAlarmState", "parameters": "(String alarmName)", "modifiers": "@Override public", "return": "String", "signature": "String getAlarmState(String alarmName)", "full_signature": "@Override public String getAlarmState(String alarmName)", "class_method_signature": "CloudWatchRaiderImpl.getAlarmState(String alarmName)", "testcase": false, "constructor": false}, {"identifier": "countAlarmsInState", "parameters": "(String alarmState)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer countAlarmsInState(String alarmState)", "full_signature": "@Override public Integer countAlarmsInState(String alarmState)", "class_method_signature": "CloudWatchRaiderImpl.countAlarmsInState(String alarmState)", "testcase": false, "constructor": false}], "file": "cloudraider-core/src/main/java/com/intuit/cloudraider/core/impl/CloudWatchRaiderImpl.java"}, "focal_method": {"identifier": "getELBMetric", "parameters": "(String loadBalancerName, String metricName)", "modifiers": "@Override public", "return": "Double", "body": "@Override\n    public Double getELBMetric(String loadBalancerName, String metricName) {\n\n        return this.getMetric(\"LoadBalancerName\",\n                loadBalancerName,\n                \"Average\",\n                CloudWatchMetricNamespace.ELB.getNamespace(),\n                metricName);\n\n    }", "signature": "Double getELBMetric(String loadBalancerName, String metricName)", "full_signature": "@Override public Double getELBMetric(String loadBalancerName, String metricName)", "class_method_signature": "CloudWatchRaiderImpl.getELBMetric(String loadBalancerName, String metricName)", "testcase": false, "constructor": false, "invocations": ["getMetric", "getNamespace"]}, "repository": {"repo_id": 189453445, "url": "https://github.com/intuit/CloudRaider", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 16, "size": 730, "license": "licensed"}}