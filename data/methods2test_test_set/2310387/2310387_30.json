{"test_class": {"identifier": "ProjectTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(ProjectTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(ProjectTest.class)", "var_name": "LOG"}, {"original_string": "private static final String TEST_DIR = \"tmp\";", "modifier": "private static final", "type": "String", "declarator": "TEST_DIR = \"tmp\"", "var_name": "TEST_DIR"}, {"original_string": "private Project project;", "modifier": "private", "type": "Project", "declarator": "project", "var_name": "project"}, {"original_string": "private ProjectConfig projectConfig;", "modifier": "private", "type": "ProjectConfig", "declarator": "projectConfig", "var_name": "projectConfig"}, {"original_string": "private final FilesToDelete filesToDelete = new FilesToDelete();", "modifier": "private final", "type": "FilesToDelete", "declarator": "filesToDelete = new FilesToDelete()", "var_name": "filesToDelete"}], "file": "medium/src/test/java/net/sourceforge/cruisecontrol/ProjectTest.java"}, "test_case": {"identifier": "testNullLastBuild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNullLastBuild() throws CruiseControlException {\n        try {\n            project.setLastBuild(null);\n            fail(\"Expected an IllegalArgumentException for a null last build\");\n        } catch (IllegalArgumentException e) {\n        }\n    }", "signature": "void testNullLastBuild()", "full_signature": "@Test public void testNullLastBuild()", "class_method_signature": "ProjectTest.testNullLastBuild()", "testcase": true, "constructor": false, "invocations": ["setLastBuild", "fail"]}, "focal_class": {"identifier": "Project", "superclass": "", "interfaces": "implements Serializable, Runnable", "fields": [{"original_string": "private static final long serialVersionUID = 2656877748476842326L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2656877748476842326L", "var_name": "serialVersionUID"}, {"original_string": "private static final Logger LOG = Logger.getLogger(Project.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(Project.class)", "var_name": "LOG"}, {"original_string": "private transient ProjectState state;", "modifier": "private transient", "type": "ProjectState", "declarator": "state", "var_name": "state"}, {"original_string": "private transient ProjectConfig projectConfig;", "modifier": "private transient", "type": "ProjectConfig", "declarator": "projectConfig", "var_name": "projectConfig"}, {"original_string": "private transient LabelIncrementer labelIncrementer;", "modifier": "private transient", "type": "LabelIncrementer", "declarator": "labelIncrementer", "var_name": "labelIncrementer"}, {"original_string": "private transient Long overrideBuildInterval;", "modifier": "private transient", "type": "Long", "declarator": "overrideBuildInterval", "var_name": "overrideBuildInterval"}, {"original_string": "private transient Date buildStartTime;", "modifier": "private transient", "type": "Date", "declarator": "buildStartTime", "var_name": "buildStartTime"}, {"original_string": "private transient Object pausedMutex;", "modifier": "private transient", "type": "Object", "declarator": "pausedMutex", "var_name": "pausedMutex"}, {"original_string": "private transient Object scheduleMutex;", "modifier": "private transient", "type": "Object", "declarator": "scheduleMutex", "var_name": "scheduleMutex"}, {"original_string": "private transient Object waitMutex;", "modifier": "private transient", "type": "Object", "declarator": "waitMutex", "var_name": "waitMutex"}, {"original_string": "private transient BuildQueue queue;", "modifier": "private transient", "type": "BuildQueue", "declarator": "queue", "var_name": "queue"}, {"original_string": "private transient List<BuildProgressListener> progressListeners;", "modifier": "private transient", "type": "List<BuildProgressListener>", "declarator": "progressListeners", "var_name": "progressListeners"}, {"original_string": "private transient List<BuildResultListener> resultListeners;", "modifier": "private transient", "type": "List<BuildResultListener>", "declarator": "resultListeners", "var_name": "resultListeners"}, {"original_string": "private transient Progress progress;", "modifier": "private transient", "type": "Progress", "declarator": "progress", "var_name": "progress"}, {"original_string": "private int buildCounter = 0;", "modifier": "private", "type": "int", "declarator": "buildCounter = 0", "var_name": "buildCounter"}, {"original_string": "private Date lastBuild = DateUtil.getMidnight();", "modifier": "private", "type": "Date", "declarator": "lastBuild = DateUtil.getMidnight()", "var_name": "lastBuild"}, {"original_string": "private Date lastSuccessfulBuild = lastBuild;", "modifier": "private", "type": "Date", "declarator": "lastSuccessfulBuild = lastBuild", "var_name": "lastSuccessfulBuild"}, {"original_string": "private boolean wasLastBuildSuccessful = true;", "modifier": "private", "type": "boolean", "declarator": "wasLastBuildSuccessful = true", "var_name": "wasLastBuildSuccessful"}, {"original_string": "private String label;", "modifier": "private", "type": "String", "declarator": "label", "var_name": "label"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private transient boolean buildForced = false;", "modifier": "private transient", "type": "boolean", "declarator": "buildForced = false", "var_name": "buildForced"}, {"original_string": "private String buildTarget = null;", "modifier": "private", "type": "String", "declarator": "buildTarget = null", "var_name": "buildTarget"}, {"original_string": "private boolean isPaused = false;", "modifier": "private", "type": "boolean", "declarator": "isPaused = false", "var_name": "isPaused"}, {"original_string": "private boolean buildAfterFailed = true;", "modifier": "private", "type": "boolean", "declarator": "buildAfterFailed = true", "var_name": "buildAfterFailed"}, {"original_string": "private boolean stopped = true;", "modifier": "private", "type": "boolean", "declarator": "stopped = true", "var_name": "stopped"}, {"original_string": "private boolean forceOnly = false;", "modifier": "private", "type": "boolean", "declarator": "forceOnly = false", "var_name": "forceOnly"}, {"original_string": "private boolean requiremodification = true;", "modifier": "private", "type": "boolean", "declarator": "requiremodification = true", "var_name": "requiremodification"}, {"original_string": "private Map<String, String> additionalProperties;", "modifier": "private", "type": "Map<String, String>", "declarator": "additionalProperties", "var_name": "additionalProperties"}], "methods": [{"identifier": "Project", "parameters": "()", "modifiers": "public", "return": "", "signature": " Project()", "full_signature": "public  Project()", "class_method_signature": "Project.Project()", "testcase": false, "constructor": true}, {"identifier": "initializeTransientFields", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initializeTransientFields()", "full_signature": "private void initializeTransientFields()", "class_method_signature": "Project.initializeTransientFields()", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(final ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(final ObjectInputStream stream)", "full_signature": "private void readObject(final ObjectInputStream stream)", "class_method_signature": "Project.readObject(final ObjectInputStream stream)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void execute()", "full_signature": "public void execute()", "class_method_signature": "Project.execute()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void build()", "full_signature": "protected void build()", "class_method_signature": "Project.build()", "testcase": false, "constructor": false}, {"identifier": "useAndResetBuildTargetIfBuildWasForced", "parameters": "(final boolean buildWasForced)", "modifiers": "private", "return": "String", "signature": "String useAndResetBuildTargetIfBuildWasForced(final boolean buildWasForced)", "full_signature": "private String useAndResetBuildTargetIfBuildWasForced(final boolean buildWasForced)", "class_method_signature": "Project.useAndResetBuildTargetIfBuildWasForced(final boolean buildWasForced)", "testcase": false, "constructor": false}, {"identifier": "resetBuildForcedOnlyIfBuildWasForced", "parameters": "(final boolean buildWasForced)", "modifiers": "private", "return": "void", "signature": "void resetBuildForcedOnlyIfBuildWasForced(final boolean buildWasForced)", "full_signature": "private void resetBuildForcedOnlyIfBuildWasForced(final boolean buildWasForced)", "class_method_signature": "Project.resetBuildForcedOnlyIfBuildWasForced(final boolean buildWasForced)", "testcase": false, "constructor": false}, {"identifier": "setBuildStartTime", "parameters": "(final Date date)", "modifiers": "", "return": "void", "signature": "void setBuildStartTime(final Date date)", "full_signature": " void setBuildStartTime(final Date date)", "class_method_signature": "Project.setBuildStartTime(final Date date)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "Project.run()", "testcase": false, "constructor": false}, {"identifier": "waitIfPaused", "parameters": "()", "modifiers": "", "return": "void", "signature": "void waitIfPaused()", "full_signature": " void waitIfPaused()", "class_method_signature": "Project.waitIfPaused()", "testcase": false, "constructor": false}, {"identifier": "waitForNextBuild", "parameters": "()", "modifiers": "", "return": "void", "signature": "void waitForNextBuild()", "full_signature": " void waitForNextBuild()", "class_method_signature": "Project.waitForNextBuild()", "testcase": false, "constructor": false}, {"identifier": "getTimeToNextBuild", "parameters": "(Date now)", "modifiers": "", "return": "long", "signature": "long getTimeToNextBuild(Date now)", "full_signature": " long getTimeToNextBuild(Date now)", "class_method_signature": "Project.getTimeToNextBuild(Date now)", "testcase": false, "constructor": false}, {"identifier": "needToWaitForNextBuild", "parameters": "(long waitTime)", "modifiers": "static", "return": "boolean", "signature": "boolean needToWaitForNextBuild(long waitTime)", "full_signature": "static boolean needToWaitForNextBuild(long waitTime)", "class_method_signature": "Project.needToWaitForNextBuild(long waitTime)", "testcase": false, "constructor": false}, {"identifier": "isBuildForced", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isBuildForced()", "full_signature": " boolean isBuildForced()", "class_method_signature": "Project.isBuildForced()", "testcase": false, "constructor": false}, {"identifier": "forceBuild", "parameters": "()", "modifiers": "", "return": "void", "signature": "void forceBuild()", "full_signature": " void forceBuild()", "class_method_signature": "Project.forceBuild()", "testcase": false, "constructor": false}, {"identifier": "forceBuildWithTarget", "parameters": "(String buildTarget)", "modifiers": "public", "return": "void", "signature": "void forceBuildWithTarget(String buildTarget)", "full_signature": "public void forceBuildWithTarget(String buildTarget)", "class_method_signature": "Project.forceBuildWithTarget(String buildTarget)", "testcase": false, "constructor": false}, {"identifier": "forceBuildWithTarget", "parameters": "(String buildTarget, Map<String, String> addedProperties)", "modifiers": "public", "return": "void", "signature": "void forceBuildWithTarget(String buildTarget, Map<String, String> addedProperties)", "full_signature": "public void forceBuildWithTarget(String buildTarget, Map<String, String> addedProperties)", "class_method_signature": "Project.forceBuildWithTarget(String buildTarget, Map<String, String> addedProperties)", "testcase": false, "constructor": false}, {"identifier": "waitForBuildToFinish", "parameters": "()", "modifiers": "", "return": "void", "signature": "void waitForBuildToFinish()", "full_signature": " void waitForBuildToFinish()", "class_method_signature": "Project.waitForBuildToFinish()", "testcase": false, "constructor": false}, {"identifier": "buildFinished", "parameters": "()", "modifiers": "", "return": "void", "signature": "void buildFinished()", "full_signature": " void buildFinished()", "class_method_signature": "Project.buildFinished()", "testcase": false, "constructor": false}, {"identifier": "getModifications", "parameters": "(final boolean buildWasForced)", "modifiers": "", "return": "Element", "signature": "Element getModifications(final boolean buildWasForced)", "full_signature": " Element getModifications(final boolean buildWasForced)", "class_method_signature": "Project.getModifications(final boolean buildWasForced)", "testcase": false, "constructor": false}, {"identifier": "checkOnlySinceLastBuild", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean checkOnlySinceLastBuild()", "full_signature": " boolean checkOnlySinceLastBuild()", "class_method_signature": "Project.checkOnlySinceLastBuild()", "testcase": false, "constructor": false}, {"identifier": "serializeProject", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void serializeProject()", "full_signature": "public void serializeProject()", "class_method_signature": "Project.serializeProject()", "testcase": false, "constructor": false}, {"identifier": "setLabelIncrementer", "parameters": "(final LabelIncrementer incrementer)", "modifiers": "public", "return": "void", "signature": "void setLabelIncrementer(final LabelIncrementer incrementer)", "full_signature": "public void setLabelIncrementer(final LabelIncrementer incrementer)", "class_method_signature": "Project.setLabelIncrementer(final LabelIncrementer incrementer)", "testcase": false, "constructor": false}, {"identifier": "getLabelIncrementer", "parameters": "()", "modifiers": "public", "return": "LabelIncrementer", "signature": "LabelIncrementer getLabelIncrementer()", "full_signature": "public LabelIncrementer getLabelIncrementer()", "class_method_signature": "Project.getLabelIncrementer()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(final String projectName)", "modifiers": "public", "return": "void", "signature": "void setName(final String projectName)", "full_signature": "public void setName(final String projectName)", "class_method_signature": "Project.setName(final String projectName)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Project.getName()", "testcase": false, "constructor": false}, {"identifier": "setLabel", "parameters": "(final String newLabel)", "modifiers": "public", "return": "void", "signature": "void setLabel(final String newLabel)", "full_signature": "public void setLabel(final String newLabel)", "class_method_signature": "Project.setLabel(final String newLabel)", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLabel()", "full_signature": "public String getLabel()", "class_method_signature": "Project.getLabel()", "testcase": false, "constructor": false}, {"identifier": "setLastBuild", "parameters": "(final String newLastBuild)", "modifiers": "public", "return": "void", "signature": "void setLastBuild(final String newLastBuild)", "full_signature": "public void setLastBuild(final String newLastBuild)", "class_method_signature": "Project.setLastBuild(final String newLastBuild)", "testcase": false, "constructor": false}, {"identifier": "setLastSuccessfulBuild", "parameters": "(final String newLastSuccessfulBuild)", "modifiers": "public", "return": "void", "signature": "void setLastSuccessfulBuild(final String newLastSuccessfulBuild)", "full_signature": "public void setLastSuccessfulBuild(final String newLastSuccessfulBuild)", "class_method_signature": "Project.setLastSuccessfulBuild(final String newLastSuccessfulBuild)", "testcase": false, "constructor": false}, {"identifier": "getLastBuild", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLastBuild()", "full_signature": "public String getLastBuild()", "class_method_signature": "Project.getLastBuild()", "testcase": false, "constructor": false}, {"identifier": "getBuildForced", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBuildForced()", "full_signature": "public boolean getBuildForced()", "class_method_signature": "Project.getBuildForced()", "testcase": false, "constructor": false}, {"identifier": "setBuildForced", "parameters": "(boolean forceNewBuildNow)", "modifiers": "public", "return": "void", "signature": "void setBuildForced(boolean forceNewBuildNow)", "full_signature": "public void setBuildForced(boolean forceNewBuildNow)", "class_method_signature": "Project.setBuildForced(boolean forceNewBuildNow)", "testcase": false, "constructor": false}, {"identifier": "getLastSuccessfulBuild", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLastSuccessfulBuild()", "full_signature": "public String getLastSuccessfulBuild()", "class_method_signature": "Project.getLastSuccessfulBuild()", "testcase": false, "constructor": false}, {"identifier": "getLogDir", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogDir()", "full_signature": "public String getLogDir()", "class_method_signature": "Project.getLogDir()", "testcase": false, "constructor": false}, {"identifier": "getBuildInterval", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getBuildInterval()", "full_signature": "public long getBuildInterval()", "class_method_signature": "Project.getBuildInterval()", "testcase": false, "constructor": false}, {"identifier": "overrideBuildInterval", "parameters": "(final long sleepMillis)", "modifiers": "public", "return": "void", "signature": "void overrideBuildInterval(final long sleepMillis)", "full_signature": "public void overrideBuildInterval(final long sleepMillis)", "class_method_signature": "Project.overrideBuildInterval(final long sleepMillis)", "testcase": false, "constructor": false}, {"identifier": "isPaused", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPaused()", "full_signature": "public boolean isPaused()", "class_method_signature": "Project.isPaused()", "testcase": false, "constructor": false}, {"identifier": "setPaused", "parameters": "(final boolean paused)", "modifiers": "public", "return": "void", "signature": "void setPaused(final boolean paused)", "full_signature": "public void setPaused(final boolean paused)", "class_method_signature": "Project.setPaused(final boolean paused)", "testcase": false, "constructor": false}, {"identifier": "setBuildAfterFailed", "parameters": "(final boolean rebuildEvenWithNoNewModifications)", "modifiers": "public", "return": "void", "signature": "void setBuildAfterFailed(final boolean rebuildEvenWithNoNewModifications)", "full_signature": "public void setBuildAfterFailed(final boolean rebuildEvenWithNoNewModifications)", "class_method_signature": "Project.setBuildAfterFailed(final boolean rebuildEvenWithNoNewModifications)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatus()", "full_signature": "public String getStatus()", "class_method_signature": "Project.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getStatusWithQueuePosition", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatusWithQueuePosition()", "full_signature": "public String getStatusWithQueuePosition()", "class_method_signature": "Project.getStatusWithQueuePosition()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "public", "return": "ProjectState", "signature": "ProjectState getState()", "full_signature": "public ProjectState getState()", "class_method_signature": "Project.getState()", "testcase": false, "constructor": false}, {"identifier": "setState", "parameters": "(final ProjectState newState)", "modifiers": "private", "return": "void", "signature": "void setState(final ProjectState newState)", "full_signature": "private void setState(final ProjectState newState)", "class_method_signature": "Project.setState(final ProjectState newState)", "testcase": false, "constructor": false}, {"identifier": "setBuildQueue", "parameters": "(final BuildQueue buildQueue)", "modifiers": "public", "return": "void", "signature": "void setBuildQueue(final BuildQueue buildQueue)", "full_signature": "public void setBuildQueue(final BuildQueue buildQueue)", "class_method_signature": "Project.setBuildQueue(final BuildQueue buildQueue)", "testcase": false, "constructor": false}, {"identifier": "getBuildStartTime", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBuildStartTime()", "full_signature": "public String getBuildStartTime()", "class_method_signature": "Project.getBuildStartTime()", "testcase": false, "constructor": false}, {"identifier": "getLog", "parameters": "()", "modifiers": "public", "return": "Log", "signature": "Log getLog()", "full_signature": "public Log getLog()", "class_method_signature": "Project.getLog()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void init()", "full_signature": "protected void init()", "class_method_signature": "Project.init()", "testcase": false, "constructor": false}, {"identifier": "getProjectPropertiesElement", "parameters": "(final Date now)", "modifiers": "protected", "return": "Element", "signature": "Element getProjectPropertiesElement(final Date now)", "full_signature": "protected Element getProjectPropertiesElement(final Date now)", "class_method_signature": "Project.getProjectPropertiesElement(final Date now)", "testcase": false, "constructor": false}, {"identifier": "addProperty", "parameters": "(final Element parent, final String key, final String value)", "modifiers": "private", "return": "void", "signature": "void addProperty(final Element parent, final String key, final String value)", "full_signature": "private void addProperty(final Element parent, final String key, final String value)", "class_method_signature": "Project.addProperty(final Element parent, final String key, final String value)", "testcase": false, "constructor": false}, {"identifier": "getProjectPropertiesMap", "parameters": "(final Date now)", "modifiers": "protected", "return": "Map<String, String>", "signature": "Map<String, String> getProjectPropertiesMap(final Date now)", "full_signature": "protected Map<String, String> getProjectPropertiesMap(final Date now)", "class_method_signature": "Project.getProjectPropertiesMap(final Date now)", "testcase": false, "constructor": false}, {"identifier": "getAdditionalProperties", "parameters": "()", "modifiers": "", "return": "Map<String, String>", "signature": "Map<String, String> getAdditionalProperties()", "full_signature": " Map<String, String> getAdditionalProperties()", "class_method_signature": "Project.getAdditionalProperties()", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(final Log buildLog)", "modifiers": "protected", "return": "void", "signature": "void publish(final Log buildLog)", "full_signature": "protected void publish(final Log buildLog)", "class_method_signature": "Project.publish(final Log buildLog)", "testcase": false, "constructor": false}, {"identifier": "bootstrap", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void bootstrap()", "full_signature": "protected void bootstrap()", "class_method_signature": "Project.bootstrap()", "testcase": false, "constructor": false}, {"identifier": "validateLabel", "parameters": "(final String oldLabel, final LabelIncrementer incrementer)", "modifiers": "protected", "return": "void", "signature": "void validateLabel(final String oldLabel, final LabelIncrementer incrementer)", "full_signature": "protected void validateLabel(final String oldLabel, final LabelIncrementer incrementer)", "class_method_signature": "Project.validateLabel(final String oldLabel, final LabelIncrementer incrementer)", "testcase": false, "constructor": false}, {"identifier": "isLastBuildSuccessful", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLastBuildSuccessful()", "full_signature": "public boolean isLastBuildSuccessful()", "class_method_signature": "Project.isLastBuildSuccessful()", "testcase": false, "constructor": false}, {"identifier": "setWasLastBuildSuccessful", "parameters": "(final boolean buildSuccessful)", "modifiers": "", "return": "void", "signature": "void setWasLastBuildSuccessful(final boolean buildSuccessful)", "full_signature": " void setWasLastBuildSuccessful(final boolean buildSuccessful)", "class_method_signature": "Project.setWasLastBuildSuccessful(final boolean buildSuccessful)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(final String message)", "modifiers": "private", "return": "void", "signature": "void info(final String message)", "full_signature": "private void info(final String message)", "class_method_signature": "Project.info(final String message)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(final String message)", "modifiers": "private", "return": "void", "signature": "void debug(final String message)", "full_signature": "private void debug(final String message)", "class_method_signature": "Project.debug(final String message)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "Project.start()", "testcase": false, "constructor": false}, {"identifier": "createNewSchedulingThread", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void createNewSchedulingThread()", "full_signature": "protected void createNewSchedulingThread()", "class_method_signature": "Project.createNewSchedulingThread()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "Project.stop()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Project.toString()", "testcase": false, "constructor": false}, {"identifier": "addBuildProgressListener", "parameters": "(final BuildProgressListener listener)", "modifiers": "public", "return": "void", "signature": "void addBuildProgressListener(final BuildProgressListener listener)", "full_signature": "public void addBuildProgressListener(final BuildProgressListener listener)", "class_method_signature": "Project.addBuildProgressListener(final BuildProgressListener listener)", "testcase": false, "constructor": false}, {"identifier": "fireProgressEvent", "parameters": "(final BuildProgressEvent event)", "modifiers": "protected", "return": "void", "signature": "void fireProgressEvent(final BuildProgressEvent event)", "full_signature": "protected void fireProgressEvent(final BuildProgressEvent event)", "class_method_signature": "Project.fireProgressEvent(final BuildProgressEvent event)", "testcase": false, "constructor": false}, {"identifier": "addBuildResultListener", "parameters": "(final BuildResultListener listener)", "modifiers": "public", "return": "void", "signature": "void addBuildResultListener(final BuildResultListener listener)", "full_signature": "public void addBuildResultListener(final BuildResultListener listener)", "class_method_signature": "Project.addBuildResultListener(final BuildResultListener listener)", "testcase": false, "constructor": false}, {"identifier": "fireResultEvent", "parameters": "(final BuildResultEvent event)", "modifiers": "protected", "return": "void", "signature": "void fireResultEvent(final BuildResultEvent event)", "full_signature": "protected void fireResultEvent(final BuildResultEvent event)", "class_method_signature": "Project.fireResultEvent(final BuildResultEvent event)", "testcase": false, "constructor": false}, {"identifier": "getListeners", "parameters": "()", "modifiers": "", "return": "List<Listener>", "signature": "List<Listener> getListeners()", "full_signature": " List<Listener> getListeners()", "class_method_signature": "Project.getListeners()", "testcase": false, "constructor": false}, {"identifier": "setProjectConfig", "parameters": "(final ProjectConfig projectConfig)", "modifiers": "public", "return": "void", "signature": "void setProjectConfig(final ProjectConfig projectConfig)", "full_signature": "public void setProjectConfig(final ProjectConfig projectConfig)", "class_method_signature": "Project.setProjectConfig(final ProjectConfig projectConfig)", "testcase": false, "constructor": false}, {"identifier": "notifyListeners", "parameters": "(final ProjectEvent event)", "modifiers": "", "return": "void", "signature": "void notifyListeners(final ProjectEvent event)", "full_signature": " void notifyListeners(final ProjectEvent event)", "class_method_signature": "Project.notifyListeners(final ProjectEvent event)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object arg0)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(final Object arg0)", "full_signature": "public boolean equals(final Object arg0)", "class_method_signature": "Project.equals(final Object arg0)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Project.hashCode()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(final MBeanServer server)", "modifiers": "public", "return": "void", "signature": "void register(final MBeanServer server)", "full_signature": "public void register(final MBeanServer server)", "class_method_signature": "Project.register(final MBeanServer server)", "testcase": false, "constructor": false}, {"identifier": "getProjectConfig", "parameters": "()", "modifiers": "public", "return": "ProjectConfig", "signature": "ProjectConfig getProjectConfig()", "full_signature": "public ProjectConfig getProjectConfig()", "class_method_signature": "Project.getProjectConfig()", "testcase": false, "constructor": false}, {"identifier": "getLastBuildDate", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getLastBuildDate()", "full_signature": "public Date getLastBuildDate()", "class_method_signature": "Project.getLastBuildDate()", "testcase": false, "constructor": false}, {"identifier": "getProgress", "parameters": "()", "modifiers": "public", "return": "Progress", "signature": "Progress getProgress()", "full_signature": "public Progress getProgress()", "class_method_signature": "Project.getProgress()", "testcase": false, "constructor": false}, {"identifier": "getLogLabels", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLogLabels()", "full_signature": "public List<String> getLogLabels()", "class_method_signature": "Project.getLogLabels()", "testcase": false, "constructor": false}, {"identifier": "getLogLabelLines", "parameters": "(final String logLabel, final int firstLine)", "modifiers": "public", "return": "String[]", "signature": "String[] getLogLabelLines(final String logLabel, final int firstLine)", "full_signature": "public String[] getLogLabelLines(final String logLabel, final int firstLine)", "class_method_signature": "Project.getLogLabelLines(final String logLabel, final int firstLine)", "testcase": false, "constructor": false}], "file": "medium/src/main/java/net/sourceforge/cruisecontrol/Project.java"}, "focal_method": {"identifier": "setLastBuild", "parameters": "(final String newLastBuild)", "modifiers": "public", "return": "void", "body": "public void setLastBuild(final String newLastBuild) throws CruiseControlException {\n        lastBuild = DateUtil.parseFormattedTime(newLastBuild, \"lastBuild\");\n    }", "signature": "void setLastBuild(final String newLastBuild)", "full_signature": "public void setLastBuild(final String newLastBuild)", "class_method_signature": "Project.setLastBuild(final String newLastBuild)", "testcase": false, "constructor": false, "invocations": ["parseFormattedTime"]}, "repository": {"repo_id": 2310387, "url": "https://github.com/builddoctor/JavaBuildComparison", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 14939, "license": "licensed"}}