{"test_class": {"identifier": "Mopac7WriterTest", "superclass": "extends ChemObjectWriterTest", "interfaces": "", "fields": [], "file": "storage/io/src/test/java/org/openscience/cdk/io/program/Mopac7WriterTest.java"}, "test_case": {"identifier": "testAccepts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccepts() throws Exception {\n        Mopac7Writer reader = new Mopac7Writer();\n        Assert.assertTrue(reader.accepts(AtomContainer.class));\n    }", "signature": "void testAccepts()", "full_signature": "@Test public void testAccepts()", "class_method_signature": "Mopac7WriterTest.testAccepts()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accepts"]}, "focal_class": {"identifier": "Mopac7Writer", "superclass": "extends DefaultChemObjectWriter", "interfaces": "", "fields": [{"original_string": "private BufferedWriter      writer;", "modifier": "private", "type": "BufferedWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(Mopac7Writer.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(Mopac7Writer.class)", "var_name": "logger"}, {"original_string": "private final static char   BLANK  = ' ';", "modifier": "private final static", "type": "char", "declarator": "BLANK  = ' '", "var_name": "BLANK"}, {"original_string": "private NumberFormat        numberFormat;", "modifier": "private", "type": "NumberFormat", "declarator": "numberFormat", "var_name": "numberFormat"}, {"original_string": "private StringIOSetting  mopacCommands;", "modifier": "private", "type": "StringIOSetting", "declarator": "mopacCommands", "var_name": "mopacCommands"}, {"original_string": "private BooleanIOSetting optimize;", "modifier": "private", "type": "BooleanIOSetting", "declarator": "optimize", "var_name": "optimize"}], "methods": [{"identifier": "Mopac7Writer", "parameters": "()", "modifiers": "public", "return": "", "signature": " Mopac7Writer()", "full_signature": "public  Mopac7Writer()", "class_method_signature": "Mopac7Writer.Mopac7Writer()", "testcase": false, "constructor": true}, {"identifier": "Mopac7Writer", "parameters": "(OutputStream out)", "modifiers": "public", "return": "", "signature": " Mopac7Writer(OutputStream out)", "full_signature": "public  Mopac7Writer(OutputStream out)", "class_method_signature": "Mopac7Writer.Mopac7Writer(OutputStream out)", "testcase": false, "constructor": true}, {"identifier": "Mopac7Writer", "parameters": "(Writer out)", "modifiers": "public", "return": "", "signature": " Mopac7Writer(Writer out)", "full_signature": "public  Mopac7Writer(Writer out)", "class_method_signature": "Mopac7Writer.Mopac7Writer(Writer out)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(IChemObject arg0)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void write(IChemObject arg0)", "full_signature": "@Override public synchronized void write(IChemObject arg0)", "class_method_signature": "Mopac7Writer.write(IChemObject arg0)", "testcase": false, "constructor": false}, {"identifier": "writeAtom", "parameters": "(IAtom atom, double xCoord, double yCoord, double zCoord, int optimize)", "modifiers": "private", "return": "void", "signature": "void writeAtom(IAtom atom, double xCoord, double yCoord, double zCoord, int optimize)", "full_signature": "private void writeAtom(IAtom atom, double xCoord, double yCoord, double zCoord, int optimize)", "class_method_signature": "Mopac7Writer.writeAtom(IAtom atom, double xCoord, double yCoord, double zCoord, int optimize)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override /** {@inheritDoc} */ public", "return": "void", "signature": "void close()", "full_signature": "@Override /** {@inheritDoc} */ public void close()", "class_method_signature": "Mopac7Writer.close()", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override /** {@inheritDoc} */ public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override /** {@inheritDoc} */ public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "Mopac7Writer.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override /** {@inheritDoc} */ public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override /** {@inheritDoc} */ public IResourceFormat getFormat()", "class_method_signature": "Mopac7Writer.getFormat()", "testcase": false, "constructor": false}, {"identifier": "setWriter", "parameters": "(OutputStream writer)", "modifiers": "@Override /** {@inheritDoc} */ public", "return": "void", "signature": "void setWriter(OutputStream writer)", "full_signature": "@Override /** {@inheritDoc} */ public void setWriter(OutputStream writer)", "class_method_signature": "Mopac7Writer.setWriter(OutputStream writer)", "testcase": false, "constructor": false}, {"identifier": "setWriter", "parameters": "(Writer writer)", "modifiers": "@Override /** {@inheritDoc} */ public", "return": "void", "signature": "void setWriter(Writer writer)", "full_signature": "@Override /** {@inheritDoc} */ public void setWriter(Writer writer)", "class_method_signature": "Mopac7Writer.setWriter(Writer writer)", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getTitle()", "full_signature": "private String getTitle()", "class_method_signature": "Mopac7Writer.getTitle()", "testcase": false, "constructor": false}, {"identifier": "initIOSettings", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initIOSettings()", "full_signature": "private void initIOSettings()", "class_method_signature": "Mopac7Writer.initIOSettings()", "testcase": false, "constructor": false}, {"identifier": "customizeJob", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void customizeJob()", "full_signature": "private void customizeJob()", "class_method_signature": "Mopac7Writer.customizeJob()", "testcase": false, "constructor": false}], "file": "storage/io/src/main/java/org/openscience/cdk/io/program/Mopac7Writer.java"}, "focal_method": {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override /** {@inheritDoc} */ public", "return": "boolean", "body": "@Override\n    /** {@inheritDoc} */\n    public boolean accepts(Class<? extends IChemObject> classObject) {\n        Class<?>[] interfaces = classObject.getInterfaces();\n        for (int i = 0; i < interfaces.length; i++) {\n            if (IAtomContainer.class.equals(interfaces[i])) return true;\n        }\n        if (IAtomContainer.class.equals(classObject)) return true;\n        Class superClass = classObject.getSuperclass();\n        if (superClass != null) return this.accepts(superClass);\n        return false;\n    }", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override /** {@inheritDoc} */ public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "Mopac7Writer.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false, "invocations": ["getInterfaces", "equals", "equals", "getSuperclass", "accepts"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}