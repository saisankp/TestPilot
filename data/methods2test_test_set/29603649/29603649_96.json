{"test_class": {"identifier": "JmxConnectionBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String url = \"url\";", "modifier": "private final", "type": "String", "declarator": "url = \"url\"", "var_name": "url"}, {"original_string": "@Mock\n    private JmxServiceUrlFactory urlFactory;", "modifier": "@Mock\n    private", "type": "JmxServiceUrlFactory", "declarator": "urlFactory", "var_name": "urlFactory"}, {"original_string": "@Mock\n    private JMXServiceURL jmxServiceUrl;", "modifier": "@Mock\n    private", "type": "JMXServiceURL", "declarator": "jmxServiceUrl", "var_name": "jmxServiceUrl"}, {"original_string": "@Mock\n    private JMXConnector jmxConnector;", "modifier": "@Mock\n    private", "type": "JMXConnector", "declarator": "jmxConnector", "var_name": "jmxConnector"}, {"original_string": "@Mock\n    private MBeanServerConnection serverConnection;", "modifier": "@Mock\n    private", "type": "MBeanServerConnection", "declarator": "serverConnection", "var_name": "serverConnection"}, {"original_string": "@InjectMocks\n    private JmxConnectionBuilder underTest;", "modifier": "@InjectMocks\n    private", "type": "JmxConnectionBuilder", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-message-search/modules/wilma-message-search-lucene/src/test/java/com/epam/wilma/message/search/jms/helper/JmxConnectionBuilderTest.java"}, "test_case": {"identifier": "testBuildMBeanServerConnectionShouldThrowExceptionWhenMalformedUrl", "parameters": "()", "modifiers": "@Test(expectedExceptions = JmxConnectionException.class) public", "return": "void", "body": "@Test(expectedExceptions = JmxConnectionException.class)\n    public void testBuildMBeanServerConnectionShouldThrowExceptionWhenMalformedUrl() throws IOException {\n        //GIVEN\n        given(urlFactory.createJmxServiceUrl(url)).willThrow(new MalformedURLException());\n        //WHEN\n        underTest.buildMBeanServerConnection(url);\n        //THEN it should throw exception\n    }", "signature": "void testBuildMBeanServerConnectionShouldThrowExceptionWhenMalformedUrl()", "full_signature": "@Test(expectedExceptions = JmxConnectionException.class) public void testBuildMBeanServerConnectionShouldThrowExceptionWhenMalformedUrl()", "class_method_signature": "JmxConnectionBuilderTest.testBuildMBeanServerConnectionShouldThrowExceptionWhenMalformedUrl()", "testcase": true, "constructor": false, "invocations": ["willThrow", "given", "createJmxServiceUrl", "buildMBeanServerConnection"]}, "focal_class": {"identifier": "JmxConnectionBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private JmxServiceUrlFactory urlFactory;", "modifier": "@Autowired\n    private", "type": "JmxServiceUrlFactory", "declarator": "urlFactory", "var_name": "urlFactory"}], "methods": [{"identifier": "buildMBeanServerConnection", "parameters": "(final String url)", "modifiers": "public", "return": "MBeanServerConnection", "signature": "MBeanServerConnection buildMBeanServerConnection(final String url)", "full_signature": "public MBeanServerConnection buildMBeanServerConnection(final String url)", "class_method_signature": "JmxConnectionBuilder.buildMBeanServerConnection(final String url)", "testcase": false, "constructor": false}, {"identifier": "getJmxConnector", "parameters": "(final JMXServiceURL jmxServiceURL)", "modifiers": "", "return": "JMXConnector", "signature": "JMXConnector getJmxConnector(final JMXServiceURL jmxServiceURL)", "full_signature": " JMXConnector getJmxConnector(final JMXServiceURL jmxServiceURL)", "class_method_signature": "JmxConnectionBuilder.getJmxConnector(final JMXServiceURL jmxServiceURL)", "testcase": false, "constructor": false}], "file": "wilma-message-search/modules/wilma-message-search-lucene/src/main/java/com/epam/wilma/message/search/jms/helper/JmxConnectionBuilder.java"}, "focal_method": {"identifier": "buildMBeanServerConnection", "parameters": "(final String url)", "modifiers": "public", "return": "MBeanServerConnection", "body": "public MBeanServerConnection buildMBeanServerConnection(final String url) {\n        try {\n            JMXServiceURL jmxServiceURL = urlFactory.createJmxServiceUrl(url);\n            JMXConnector c = getJmxConnector(jmxServiceURL);\n            return c.getMBeanServerConnection();\n        } catch (IOException e) {\n            throw new JmxConnectionException(\"JMX connection to \" + url + \" cannot be established\", e);\n        }\n    }", "signature": "MBeanServerConnection buildMBeanServerConnection(final String url)", "full_signature": "public MBeanServerConnection buildMBeanServerConnection(final String url)", "class_method_signature": "JmxConnectionBuilder.buildMBeanServerConnection(final String url)", "testcase": false, "constructor": false, "invocations": ["createJmxServiceUrl", "getJmxConnector", "getMBeanServerConnection"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}