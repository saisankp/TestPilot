{"test_class": {"identifier": "IssuesModelTest", "superclass": "extends AbstractDetailsModelTest", "interfaces": "", "fields": [{"original_string": "private static final String PACKAGE_NAME = \"<a href=\\\"packageName.1802059882/\\\">package-1</a>\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE_NAME = \"<a href=\\\"packageName.1802059882/\\\">package-1</a>\"", "var_name": "PACKAGE_NAME"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/model/IssuesModelTest.java"}, "test_case": {"identifier": "shouldConvertIssuesToArrayWithAllColumns", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldConvertIssuesToArrayWithAllColumns() {\n        Report report = new Report();\n        Issue issue = createIssue(1);\n        report.add(issue);\n        report.add(createIssue(2));\n\n        IssuesModel model = createModel(report);\n\n        String columnDefinitions = model.getColumnsDefinition();\n        assertThatJson(columnDefinitions).isArray().hasSize(7);\n\n        String[] columns = {\"description\", \"fileName\", \"packageName\", \"category\", \"type\", \"severity\", \"age\"};\n        for (int column = 0; column < columns.length; column++) {\n            verifyColumnProperty(model, column, columns[column]);\n        }\n        verifyFileNameColumn(columnDefinitions);\n\n        assertThat(model.getRows()).hasSize(2);\n\n        IssuesRow actualRow = model.getRow(issue);\n        assertThat(actualRow).hasDescription(EXPECTED_DESCRIPTION)\n                .hasAge(\"1\")\n                .hasPackageName(PACKAGE_NAME)\n                .hasCategory(\"<a href=\\\"category.1296530210/\\\">category-1</a>\")\n                .hasType(\"<a href=\\\"type.-858804642/\\\">type-1</a>\")\n                .hasSeverity(\"<a href=\\\"HIGH\\\">High</a>\");\n        assertThatDetailedColumnContains(actualRow.getFileName(),\n                createExpectedFileName(issue), \"/path/to/file-1:0000015\");\n    }", "signature": "void shouldConvertIssuesToArrayWithAllColumns()", "full_signature": "@Test void shouldConvertIssuesToArrayWithAllColumns()", "class_method_signature": "IssuesModelTest.shouldConvertIssuesToArrayWithAllColumns()", "testcase": true, "constructor": false, "invocations": ["createIssue", "add", "add", "createIssue", "createModel", "getColumnsDefinition", "hasSize", "isArray", "assertThatJson", "verifyColumnProperty", "verifyFileNameColumn", "hasSize", "assertThat", "getRows", "getRow", "hasSeverity", "hasType", "hasCategory", "hasPackageName", "hasAge", "hasDescription", "assertThat", "assertThatDetailedColumnContains", "getFileName", "createExpectedFileName"]}, "focal_class": {"identifier": "IssuesModel", "superclass": "extends DetailsTableModel", "interfaces": "", "fields": [], "methods": [{"identifier": "IssuesModel", "parameters": "(final Report report, final FileNameRenderer fileNameRenderer, final AgeBuilder ageBuilder,\n            final DescriptionProvider descriptionProvider)", "modifiers": "", "return": "", "signature": " IssuesModel(final Report report, final FileNameRenderer fileNameRenderer, final AgeBuilder ageBuilder,\n            final DescriptionProvider descriptionProvider)", "full_signature": "  IssuesModel(final Report report, final FileNameRenderer fileNameRenderer, final AgeBuilder ageBuilder,\n            final DescriptionProvider descriptionProvider)", "class_method_signature": "IssuesModel.IssuesModel(final Report report, final FileNameRenderer fileNameRenderer, final AgeBuilder ageBuilder,\n            final DescriptionProvider descriptionProvider)", "testcase": false, "constructor": true}, {"identifier": "IssuesModel", "parameters": "(final Report report, final FileNameRenderer fileNameRenderer, final AgeBuilder ageBuilder,\n            final DescriptionProvider descriptionProvider, final JenkinsFacade jenkinsFacade)", "modifiers": "@VisibleForTesting", "return": "", "signature": " IssuesModel(final Report report, final FileNameRenderer fileNameRenderer, final AgeBuilder ageBuilder,\n            final DescriptionProvider descriptionProvider, final JenkinsFacade jenkinsFacade)", "full_signature": "@VisibleForTesting  IssuesModel(final Report report, final FileNameRenderer fileNameRenderer, final AgeBuilder ageBuilder,\n            final DescriptionProvider descriptionProvider, final JenkinsFacade jenkinsFacade)", "class_method_signature": "IssuesModel.IssuesModel(final Report report, final FileNameRenderer fileNameRenderer, final AgeBuilder ageBuilder,\n            final DescriptionProvider descriptionProvider, final JenkinsFacade jenkinsFacade)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "IssuesModel.getId()", "testcase": false, "constructor": false}, {"identifier": "getColumns", "parameters": "()", "modifiers": "@Override public", "return": "List<TableColumn>", "signature": "List<TableColumn> getColumns()", "full_signature": "@Override public List<TableColumn> getColumns()", "class_method_signature": "IssuesModel.getColumns()", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(final Issue issue)", "modifiers": "@Override public", "return": "IssuesRow", "signature": "IssuesRow getRow(final Issue issue)", "full_signature": "@Override public IssuesRow getRow(final Issue issue)", "class_method_signature": "IssuesModel.getRow(final Issue issue)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/model/IssuesModel.java"}, "focal_method": {"identifier": "getRow", "parameters": "(final Issue issue)", "modifiers": "@Override public", "return": "IssuesRow", "body": "@Override\n    public IssuesRow getRow(final Issue issue) {\n        IssuesRow row = new IssuesRow(getAgeBuilder(), getFileNameRenderer(), getDescriptionProvider(),\n                issue, getJenkinsFacade());\n        row.setPackageName(issue);\n        row.setCategory(issue);\n        row.setType(issue);\n        row.setSeverity(issue);\n        return row;\n    }", "signature": "IssuesRow getRow(final Issue issue)", "full_signature": "@Override public IssuesRow getRow(final Issue issue)", "class_method_signature": "IssuesModel.getRow(final Issue issue)", "testcase": false, "constructor": false, "invocations": ["getAgeBuilder", "getFileNameRenderer", "getDescriptionProvider", "getJenkinsFacade", "setPackageName", "setCategory", "setType", "setSeverity"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}