{"test_class": {"identifier": "RepeaterActorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IMessageProcessingSequence sequenceMock;", "modifier": "private", "type": "IMessageProcessingSequence", "declarator": "sequenceMock", "var_name": "sequenceMock"}, {"original_string": "private IRepeatRequest requestMock;", "modifier": "private", "type": "IRepeatRequest", "declarator": "requestMock", "var_name": "requestMock"}], "file": "SystemActors/SystemActorPack/RepeaterActor/src/test/java/info/smart_tools/smartactors/system_actors_pack/repeater_actor/RepeaterActorTest.java"}, "test_case": {"identifier": "Should_repeaterRepeatChainWhenRequired", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_repeaterRepeatChainWhenRequired()\n            throws Exception {\n        when(sequenceMock.getCurrentLevel()).thenReturn(42);\n        when(requestMock.repeat()).thenReturn(true);\n\n        RepeaterActor actor = new RepeaterActor();\n\n        actor.handle(requestMock);\n\n        verify(sequenceMock).getCurrentLevel();\n        verify(sequenceMock).goTo(42, 0);\n\n        verifyNoMoreInteractions(sequenceMock);\n    }", "signature": "void Should_repeaterRepeatChainWhenRequired()", "full_signature": "@Test public void Should_repeaterRepeatChainWhenRequired()", "class_method_signature": "RepeaterActorTest.Should_repeaterRepeatChainWhenRequired()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getCurrentLevel", "thenReturn", "when", "repeat", "handle", "getCurrentLevel", "verify", "goTo", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "RepeaterActor", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "handle", "parameters": "(final IRepeatRequest request)", "modifiers": "public", "return": "void", "signature": "void handle(final IRepeatRequest request)", "full_signature": "public void handle(final IRepeatRequest request)", "class_method_signature": "RepeaterActor.handle(final IRepeatRequest request)", "testcase": false, "constructor": false}], "file": "SystemActors/SystemActorPack/RepeaterActor/src/main/java/info/smart_tools/smartactors/system_actors_pack/repeater_actor/RepeaterActor.java"}, "focal_method": {"identifier": "handle", "parameters": "(final IRepeatRequest request)", "modifiers": "public", "return": "void", "body": "public void handle(final IRepeatRequest request)\n            throws ReadValueException, InvalidArgumentException {\n        if (request.repeat()) {\n            IMessageProcessingSequence sequence = request.getSequence();\n\n            sequence.goTo(sequence.getCurrentLevel(), 0);\n        }\n    }", "signature": "void handle(final IRepeatRequest request)", "full_signature": "public void handle(final IRepeatRequest request)", "class_method_signature": "RepeaterActor.handle(final IRepeatRequest request)", "testcase": false, "constructor": false, "invocations": ["repeat", "getSequence", "goTo", "getCurrentLevel"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}