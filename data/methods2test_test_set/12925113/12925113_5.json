{"test_class": {"identifier": "YkneoBitcoinSoftTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TERMINAL_NAME = \"Yubikey NEO\";", "modifier": "private static final", "type": "String", "declarator": "TERMINAL_NAME = \"Yubikey NEO\"", "var_name": "TERMINAL_NAME"}, {"original_string": "private static final String userPin = \"000000\";", "modifier": "private static final", "type": "String", "declarator": "userPin = \"000000\"", "var_name": "userPin"}, {"original_string": "private static final String adminPin = \"00000000\";", "modifier": "private static final", "type": "String", "declarator": "adminPin = \"00000000\"", "var_name": "adminPin"}, {"original_string": "private static final BaseEncoding HEX = BaseEncoding.base16().lowerCase();", "modifier": "private static final", "type": "BaseEncoding", "declarator": "HEX = BaseEncoding.base16().lowerCase()", "var_name": "HEX"}, {"original_string": "private YkneoBitcoin neo;", "modifier": "private", "type": "YkneoBitcoin", "declarator": "neo", "var_name": "neo"}], "file": "yubico-bitcoin-java-soft/src/test/java/com/yubico/bitcoin/soft/YkneoBitcoinSoftTest.java"}, "test_case": {"identifier": "testGetHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetHeader() throws Exception {\n        testImportExtended();\n        neo.unlockUser(userPin);\n        String expectedHeader = \"0488ade4000000000000000000\";\n        String header = HEX.encode(neo.getHeader());\n        assertEquals(expectedHeader, header);\n    }", "signature": "void testGetHeader()", "full_signature": "@Test public void testGetHeader()", "class_method_signature": "YkneoBitcoinSoftTest.testGetHeader()", "testcase": true, "constructor": false, "invocations": ["testImportExtended", "unlockUser", "encode", "getHeader", "assertEquals"]}, "focal_class": {"identifier": "YkneoBitcoinSoft", "superclass": "", "interfaces": "implements YkneoBitcoin", "fields": [{"original_string": "private static final String VERSION = \"0.1.0\";", "modifier": "private static final", "type": "String", "declarator": "VERSION = \"0.1.0\"", "var_name": "VERSION"}, {"original_string": "private static final int DEFAULT_PIN_TRIES = 6;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PIN_TRIES = 6", "var_name": "DEFAULT_PIN_TRIES"}, {"original_string": "private final SecureRandom random = new SecureRandom();", "modifier": "private final", "type": "SecureRandom", "declarator": "random = new SecureRandom()", "var_name": "random"}, {"original_string": "private DeterministicHierarchy master;", "modifier": "private", "type": "DeterministicHierarchy", "declarator": "master", "var_name": "master"}, {"original_string": "private String userPin = \"000000\";", "modifier": "private", "type": "String", "declarator": "userPin = \"000000\"", "var_name": "userPin"}, {"original_string": "private String adminPin = \"00000000\";", "modifier": "private", "type": "String", "declarator": "adminPin = \"00000000\"", "var_name": "adminPin"}, {"original_string": "private boolean allowExport = false;", "modifier": "private", "type": "boolean", "declarator": "allowExport = false", "var_name": "allowExport"}, {"original_string": "private int userMaxRetries = DEFAULT_PIN_TRIES;", "modifier": "private", "type": "int", "declarator": "userMaxRetries = DEFAULT_PIN_TRIES", "var_name": "userMaxRetries"}, {"original_string": "private int adminMaxRetries = DEFAULT_PIN_TRIES;", "modifier": "private", "type": "int", "declarator": "adminMaxRetries = DEFAULT_PIN_TRIES", "var_name": "adminMaxRetries"}, {"original_string": "private int userTries = userMaxRetries;", "modifier": "private", "type": "int", "declarator": "userTries = userMaxRetries", "var_name": "userTries"}, {"original_string": "private int adminTries = adminMaxRetries;", "modifier": "private", "type": "int", "declarator": "adminTries = adminMaxRetries", "var_name": "adminTries"}, {"original_string": "private boolean userLocked = true;", "modifier": "private", "type": "boolean", "declarator": "userLocked = true", "var_name": "userLocked"}, {"original_string": "private boolean adminLocked = true;", "modifier": "private", "type": "boolean", "declarator": "adminLocked = true", "var_name": "adminLocked"}], "methods": [{"identifier": "YkneoBitcoinSoft", "parameters": "()", "modifiers": "public", "return": "", "signature": " YkneoBitcoinSoft()", "full_signature": "public  YkneoBitcoinSoft()", "class_method_signature": "YkneoBitcoinSoft.YkneoBitcoinSoft()", "testcase": false, "constructor": true}, {"identifier": "exportExtendedPublicKey", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] exportExtendedPublicKey()", "full_signature": "@Override public byte[] exportExtendedPublicKey()", "class_method_signature": "YkneoBitcoinSoft.exportExtendedPublicKey()", "testcase": false, "constructor": false}, {"identifier": "getAppletVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAppletVersion()", "full_signature": "@Override public String getAppletVersion()", "class_method_signature": "YkneoBitcoinSoft.getAppletVersion()", "testcase": false, "constructor": false}, {"identifier": "isKeyLoaded", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isKeyLoaded()", "full_signature": "@Override public boolean isKeyLoaded()", "class_method_signature": "YkneoBitcoinSoft.isKeyLoaded()", "testcase": false, "constructor": false}, {"identifier": "unlockUser", "parameters": "(String pin)", "modifiers": "@Override public", "return": "void", "signature": "void unlockUser(String pin)", "full_signature": "@Override public void unlockUser(String pin)", "class_method_signature": "YkneoBitcoinSoft.unlockUser(String pin)", "testcase": false, "constructor": false}, {"identifier": "unlockAdmin", "parameters": "(String pin)", "modifiers": "@Override public", "return": "void", "signature": "void unlockAdmin(String pin)", "full_signature": "@Override public void unlockAdmin(String pin)", "class_method_signature": "YkneoBitcoinSoft.unlockAdmin(String pin)", "testcase": false, "constructor": false}, {"identifier": "isUserUnlocked", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isUserUnlocked()", "full_signature": "@Override public boolean isUserUnlocked()", "class_method_signature": "YkneoBitcoinSoft.isUserUnlocked()", "testcase": false, "constructor": false}, {"identifier": "isAdminUnlocked", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAdminUnlocked()", "full_signature": "@Override public boolean isAdminUnlocked()", "class_method_signature": "YkneoBitcoinSoft.isAdminUnlocked()", "testcase": false, "constructor": false}, {"identifier": "setUserPin", "parameters": "(String oldPin, String newPin)", "modifiers": "@Override public", "return": "void", "signature": "void setUserPin(String oldPin, String newPin)", "full_signature": "@Override public void setUserPin(String oldPin, String newPin)", "class_method_signature": "YkneoBitcoinSoft.setUserPin(String oldPin, String newPin)", "testcase": false, "constructor": false}, {"identifier": "setAdminPin", "parameters": "(String oldPin, String newPin)", "modifiers": "@Override public", "return": "void", "signature": "void setAdminPin(String oldPin, String newPin)", "full_signature": "@Override public void setAdminPin(String oldPin, String newPin)", "class_method_signature": "YkneoBitcoinSoft.setAdminPin(String oldPin, String newPin)", "testcase": false, "constructor": false}, {"identifier": "ensurePin", "parameters": "(PinMode mode)", "modifiers": "private", "return": "void", "signature": "void ensurePin(PinMode mode)", "full_signature": "private void ensurePin(PinMode mode)", "class_method_signature": "YkneoBitcoinSoft.ensurePin(PinMode mode)", "testcase": false, "constructor": false}, {"identifier": "resetUserPin", "parameters": "(String newPin)", "modifiers": "@Override public", "return": "void", "signature": "void resetUserPin(String newPin)", "full_signature": "@Override public void resetUserPin(String newPin)", "class_method_signature": "YkneoBitcoinSoft.resetUserPin(String newPin)", "testcase": false, "constructor": false}, {"identifier": "ensureKey", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void ensureKey()", "full_signature": "private void ensureKey()", "class_method_signature": "YkneoBitcoinSoft.ensureKey()", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getHeader()", "full_signature": "@Override public byte[] getHeader()", "class_method_signature": "YkneoBitcoinSoft.getHeader()", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "(int... index)", "modifiers": "private", "return": "DeterministicKey", "signature": "DeterministicKey getKey(int... index)", "full_signature": "private DeterministicKey getKey(int... index)", "class_method_signature": "YkneoBitcoinSoft.getKey(int... index)", "testcase": false, "constructor": false}, {"identifier": "setAdminRetryCount", "parameters": "(int attempts)", "modifiers": "@Override public", "return": "void", "signature": "void setAdminRetryCount(int attempts)", "full_signature": "@Override public void setAdminRetryCount(int attempts)", "class_method_signature": "YkneoBitcoinSoft.setAdminRetryCount(int attempts)", "testcase": false, "constructor": false}, {"identifier": "setUserRetryCount", "parameters": "(int attempts)", "modifiers": "@Override public", "return": "void", "signature": "void setUserRetryCount(int attempts)", "full_signature": "@Override public void setUserRetryCount(int attempts)", "class_method_signature": "YkneoBitcoinSoft.setUserRetryCount(int attempts)", "testcase": false, "constructor": false}, {"identifier": "getPublicKey", "parameters": "(boolean compress, int... index)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getPublicKey(boolean compress, int... index)", "full_signature": "@Override public byte[] getPublicKey(boolean compress, int... index)", "class_method_signature": "YkneoBitcoinSoft.getPublicKey(boolean compress, int... index)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(byte[] hash, int... index)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] sign(byte[] hash, int... index)", "full_signature": "@Override public byte[] sign(byte[] hash, int... index)", "class_method_signature": "YkneoBitcoinSoft.sign(byte[] hash, int... index)", "testcase": false, "constructor": false}, {"identifier": "generateMasterKeyPair", "parameters": "(boolean allowExport, boolean returnPrivateKey, boolean testnetKey)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] generateMasterKeyPair(boolean allowExport, boolean returnPrivateKey, boolean testnetKey)", "full_signature": "@Override public byte[] generateMasterKeyPair(boolean allowExport, boolean returnPrivateKey, boolean testnetKey)", "class_method_signature": "YkneoBitcoinSoft.generateMasterKeyPair(boolean allowExport, boolean returnPrivateKey, boolean testnetKey)", "testcase": false, "constructor": false}, {"identifier": "importExtendedKeyPair", "parameters": "(byte[] extendedPrivateKey, boolean allowExport)", "modifiers": "@Override public", "return": "void", "signature": "void importExtendedKeyPair(byte[] extendedPrivateKey, boolean allowExport)", "full_signature": "@Override public void importExtendedKeyPair(byte[] extendedPrivateKey, boolean allowExport)", "class_method_signature": "YkneoBitcoinSoft.importExtendedKeyPair(byte[] extendedPrivateKey, boolean allowExport)", "testcase": false, "constructor": false}], "file": "yubico-bitcoin-java-soft/src/main/java/com/yubico/bitcoin/soft/YkneoBitcoinSoft.java"}, "focal_method": {"identifier": "getHeader", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] getHeader() throws PinModeLockedException, IOException, NoKeyLoadedException {\n        ensurePin(PinMode.USER);\n        ensureKey();\n        byte[] header = new byte[13];\n        System.arraycopy(master.getRootKey().serializePrivate(), 0, header, 0, 13);\n        return header;\n    }", "signature": "byte[] getHeader()", "full_signature": "@Override public byte[] getHeader()", "class_method_signature": "YkneoBitcoinSoft.getHeader()", "testcase": false, "constructor": false, "invocations": ["ensurePin", "ensureKey", "arraycopy", "serializePrivate", "getRootKey"]}, "repository": {"repo_id": 12925113, "url": "https://github.com/Yubico/yubico-bitcoin-java", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 13, "size": 86, "license": "licensed"}}