{"test_class": {"identifier": "SubscriptionDelegateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "SubscriptionDelegate subscriptionDelegateTestObject;", "modifier": "", "type": "SubscriptionDelegate", "declarator": "subscriptionDelegateTestObject", "var_name": "subscriptionDelegateTestObject"}, {"original_string": "private Subscriber subscriber;", "modifier": "private", "type": "Subscriber", "declarator": "subscriber", "var_name": "subscriber"}, {"original_string": "private Publisher publisher;", "modifier": "private", "type": "Publisher", "declarator": "publisher", "var_name": "publisher"}, {"original_string": "private Identity subscriberIdentity;", "modifier": "private", "type": "Identity", "declarator": "subscriberIdentity", "var_name": "subscriberIdentity"}, {"original_string": "private Long contextId = 1L;", "modifier": "private", "type": "Long", "declarator": "contextId = 1L", "var_name": "contextId"}, {"original_string": "private ContextType contextType = ContextType.COURSE;", "modifier": "private", "type": "ContextType", "declarator": "contextType = ContextType.COURSE", "var_name": "contextType"}, {"original_string": "private Long sourceId = 2L;", "modifier": "private", "type": "Long", "declarator": "sourceId = 2L", "var_name": "sourceId"}, {"original_string": "private String sourceType = ForumNotificationTypeHandler.FORUM_SOURCE_TYPE;", "modifier": "private", "type": "String", "declarator": "sourceType = ForumNotificationTypeHandler.FORUM_SOURCE_TYPE", "var_name": "sourceType"}, {"original_string": "private Long subcontextId = 3L;", "modifier": "private", "type": "Long", "declarator": "subcontextId = 3L", "var_name": "subcontextId"}, {"original_string": "private NotificationSubscriptionContext subscriptionContext;", "modifier": "private", "type": "NotificationSubscriptionContext", "declarator": "subscriptionContext", "var_name": "subscriptionContext"}, {"original_string": "private Subscription subscription;", "modifier": "private", "type": "Subscription", "declarator": "subscription", "var_name": "subscription"}], "file": "olat7.8/src/test/java/org/olat/lms/core/notification/impl/SubscriptionDelegateTest.java"}, "test_case": {"identifier": "getSubscription", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getSubscription() {\n        when(subscriptionDelegateTestObject.subscriptionDao.getSubscription(subscriber, publisher)).thenReturn(subscription);\n\n        Subscription returnSubscription = subscriptionDelegateTestObject.getSubscription(subscriptionContext);\n\n        assertEquals(\"getSubscription returns wrong subscription\", subscription, returnSubscription);\n    }", "signature": "void getSubscription()", "full_signature": "@Test public void getSubscription()", "class_method_signature": "SubscriptionDelegateTest.getSubscription()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getSubscription", "getSubscription", "assertEquals"]}, "focal_class": {"identifier": "SubscriptionDelegate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerHelper.getLogger()", "var_name": "LOG"}, {"original_string": "@Autowired\n    SubscriptionDao subscriptionDao;", "modifier": "@Autowired", "type": "SubscriptionDao", "declarator": "subscriptionDao", "var_name": "subscriptionDao"}, {"original_string": "@Autowired\n    PublisherDao publisherDao;", "modifier": "@Autowired", "type": "PublisherDao", "declarator": "publisherDao", "var_name": "publisherDao"}, {"original_string": "@Autowired\n    SubscriberDao subscriberDao;", "modifier": "@Autowired", "type": "SubscriberDao", "declarator": "subscriberDao", "var_name": "subscriberDao"}], "methods": [{"identifier": "deleteSubscription", "parameters": "(NotificationSubscriptionContext subscriptionContext)", "modifiers": "@Deprecated", "return": "void", "signature": "void deleteSubscription(NotificationSubscriptionContext subscriptionContext)", "full_signature": "@Deprecated void deleteSubscription(NotificationSubscriptionContext subscriptionContext)", "class_method_signature": "SubscriptionDelegate.deleteSubscription(NotificationSubscriptionContext subscriptionContext)", "testcase": false, "constructor": false}, {"identifier": "invalidateSubscriptionForSubscriptionContext", "parameters": "(NotificationSubscriptionContext subscriptionContext)", "modifiers": "public", "return": "void", "signature": "void invalidateSubscriptionForSubscriptionContext(NotificationSubscriptionContext subscriptionContext)", "full_signature": "public void invalidateSubscriptionForSubscriptionContext(NotificationSubscriptionContext subscriptionContext)", "class_method_signature": "SubscriptionDelegate.invalidateSubscriptionForSubscriptionContext(NotificationSubscriptionContext subscriptionContext)", "testcase": false, "constructor": false}, {"identifier": "invalidateSubscription", "parameters": "(Publisher publisher, Subscriber subscriber)", "modifiers": "public", "return": "void", "signature": "void invalidateSubscription(Publisher publisher, Subscriber subscriber)", "full_signature": "public void invalidateSubscription(Publisher publisher, Subscriber subscriber)", "class_method_signature": "SubscriptionDelegate.invalidateSubscription(Publisher publisher, Subscriber subscriber)", "testcase": false, "constructor": false}, {"identifier": "invalidateSubscription", "parameters": "(Subscription subscription)", "modifiers": "public", "return": "void", "signature": "void invalidateSubscription(Subscription subscription)", "full_signature": "public void invalidateSubscription(Subscription subscription)", "class_method_signature": "SubscriptionDelegate.invalidateSubscription(Subscription subscription)", "testcase": false, "constructor": false}, {"identifier": "getSubscriber", "parameters": "(Identity subscriberIdentity)", "modifiers": "", "return": "Subscriber", "signature": "Subscriber getSubscriber(Identity subscriberIdentity)", "full_signature": " Subscriber getSubscriber(Identity subscriberIdentity)", "class_method_signature": "SubscriptionDelegate.getSubscriber(Identity subscriberIdentity)", "testcase": false, "constructor": false}, {"identifier": "getPublisher", "parameters": "(NotificationSubscriptionContext subscriptionContext)", "modifiers": "synchronized", "return": "Publisher", "signature": "Publisher getPublisher(NotificationSubscriptionContext subscriptionContext)", "full_signature": "synchronized Publisher getPublisher(NotificationSubscriptionContext subscriptionContext)", "class_method_signature": "SubscriptionDelegate.getPublisher(NotificationSubscriptionContext subscriptionContext)", "testcase": false, "constructor": false}, {"identifier": "getSubscription", "parameters": "(NotificationSubscriptionContext subscriptionContext)", "modifiers": "public", "return": "Subscription", "signature": "Subscription getSubscription(NotificationSubscriptionContext subscriptionContext)", "full_signature": "public Subscription getSubscription(NotificationSubscriptionContext subscriptionContext)", "class_method_signature": "SubscriptionDelegate.getSubscription(NotificationSubscriptionContext subscriptionContext)", "testcase": false, "constructor": false}, {"identifier": "createAndSaveSubscription", "parameters": "(NotificationSubscriptionContext subscriptionContext)", "modifiers": "public", "return": "Subscription", "signature": "Subscription createAndSaveSubscription(NotificationSubscriptionContext subscriptionContext)", "full_signature": "public Subscription createAndSaveSubscription(NotificationSubscriptionContext subscriptionContext)", "class_method_signature": "SubscriptionDelegate.createAndSaveSubscription(NotificationSubscriptionContext subscriptionContext)", "testcase": false, "constructor": false}, {"identifier": "getSubscriptions", "parameters": "(Identity identity)", "modifiers": "public", "return": "List<Subscription>", "signature": "List<Subscription> getSubscriptions(Identity identity)", "full_signature": "public List<Subscription> getSubscriptions(Identity identity)", "class_method_signature": "SubscriptionDelegate.getSubscriptions(Identity identity)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/lms/core/notification/impl/SubscriptionDelegate.java"}, "focal_method": {"identifier": "getSubscription", "parameters": "(NotificationSubscriptionContext subscriptionContext)", "modifiers": "public", "return": "Subscription", "body": "public Subscription getSubscription(NotificationSubscriptionContext subscriptionContext) {\n        Publisher publisher = getPublisher(subscriptionContext);\n        Subscriber subscriber = getSubscriber(subscriptionContext.getIdentity());\n        return subscriptionDao.getSubscription(subscriber, publisher);\n    }", "signature": "Subscription getSubscription(NotificationSubscriptionContext subscriptionContext)", "full_signature": "public Subscription getSubscription(NotificationSubscriptionContext subscriptionContext)", "class_method_signature": "SubscriptionDelegate.getSubscription(NotificationSubscriptionContext subscriptionContext)", "testcase": false, "constructor": false, "invocations": ["getPublisher", "getSubscriber", "getIdentity", "getSubscription"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}