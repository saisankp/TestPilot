{"test_class": {"identifier": "StringUtilityTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/mybatis-generator-core/src/test/java/org/mybatis/generator/internal/util/StringUtilityTest.java"}, "test_case": {"identifier": "testNoSchema", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoSchema() {\n        String answer = StringUtility.composeFullyQualifiedTableName(\"catalog\", null, \"table\", '.');\n        assertEquals(\"catalog..table\", answer);\n    }", "signature": "void testNoSchema()", "full_signature": "@Test public void testNoSchema()", "class_method_signature": "StringUtilityTest.testNoSchema()", "testcase": true, "constructor": false, "invocations": ["composeFullyQualifiedTableName", "assertEquals"]}, "focal_class": {"identifier": "StringUtility", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "StringUtility", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtility()", "full_signature": "private  StringUtility()", "class_method_signature": "StringUtility.StringUtility()", "testcase": false, "constructor": true}, {"identifier": "stringHasValue", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean stringHasValue(String s)", "full_signature": "public static boolean stringHasValue(String s)", "class_method_signature": "StringUtility.stringHasValue(String s)", "testcase": false, "constructor": false}, {"identifier": "composeFullyQualifiedTableName", "parameters": "(String catalog,\n            String schema, String tableName, char separator)", "modifiers": "public static", "return": "String", "signature": "String composeFullyQualifiedTableName(String catalog,\n            String schema, String tableName, char separator)", "full_signature": "public static String composeFullyQualifiedTableName(String catalog,\n            String schema, String tableName, char separator)", "class_method_signature": "StringUtility.composeFullyQualifiedTableName(String catalog,\n            String schema, String tableName, char separator)", "testcase": false, "constructor": false}, {"identifier": "stringContainsSpace", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean stringContainsSpace(String s)", "full_signature": "public static boolean stringContainsSpace(String s)", "class_method_signature": "StringUtility.stringContainsSpace(String s)", "testcase": false, "constructor": false}, {"identifier": "escapeStringForJava", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String escapeStringForJava(String s)", "full_signature": "public static String escapeStringForJava(String s)", "class_method_signature": "StringUtility.escapeStringForJava(String s)", "testcase": false, "constructor": false}, {"identifier": "escapeStringForKotlin", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String escapeStringForKotlin(String s)", "full_signature": "public static String escapeStringForKotlin(String s)", "class_method_signature": "StringUtility.escapeStringForKotlin(String s)", "testcase": false, "constructor": false}, {"identifier": "escapeStringForXml", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String escapeStringForXml(String s)", "full_signature": "public static String escapeStringForXml(String s)", "class_method_signature": "StringUtility.escapeStringForXml(String s)", "testcase": false, "constructor": false}, {"identifier": "isTrue", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTrue(String s)", "full_signature": "public static boolean isTrue(String s)", "class_method_signature": "StringUtility.isTrue(String s)", "testcase": false, "constructor": false}, {"identifier": "stringContainsSQLWildcard", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean stringContainsSQLWildcard(String s)", "full_signature": "public static boolean stringContainsSQLWildcard(String s)", "class_method_signature": "StringUtility.stringContainsSQLWildcard(String s)", "testcase": false, "constructor": false}], "file": "core/mybatis-generator-core/src/main/java/org/mybatis/generator/internal/util/StringUtility.java"}, "focal_method": {"identifier": "composeFullyQualifiedTableName", "parameters": "(String catalog,\n            String schema, String tableName, char separator)", "modifiers": "public static", "return": "String", "body": "public static String composeFullyQualifiedTableName(String catalog,\n            String schema, String tableName, char separator) {\n        StringBuilder sb = new StringBuilder();\n\n        if (stringHasValue(catalog)) {\n            sb.append(catalog);\n            sb.append(separator);\n        }\n\n        if (stringHasValue(schema)) {\n            sb.append(schema);\n            sb.append(separator);\n        } else {\n            if (sb.length() > 0) {\n                sb.append(separator);\n            }\n        }\n\n        sb.append(tableName);\n\n        return sb.toString();\n    }", "signature": "String composeFullyQualifiedTableName(String catalog,\n            String schema, String tableName, char separator)", "full_signature": "public static String composeFullyQualifiedTableName(String catalog,\n            String schema, String tableName, char separator)", "class_method_signature": "StringUtility.composeFullyQualifiedTableName(String catalog,\n            String schema, String tableName, char separator)", "testcase": false, "constructor": false, "invocations": ["stringHasValue", "append", "append", "stringHasValue", "append", "append", "length", "append", "append", "toString"]}, "repository": {"repo_id": 8121707, "url": "https://github.com/mybatis/generator", "stars": 4099, "created": "2/10/2013 11:14:50 AM +00:00", "updates": "2020-01-27T16:52:10+00:00", "fork": "False", "license": "licensed"}}