{"test_class": {"identifier": "IOUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "stagemonitor-configuration/src/test/java/org/stagemonitor/util/IOUtilsTest.java"}, "test_case": {"identifier": "testWrite", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWrite() throws IOException {\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tIOUtils.write(\"test\", baos);\n\n\t\tAssert.assertEquals(\"test\", baos.toString());\n\t}", "signature": "void testWrite()", "full_signature": "@Test public void testWrite()", "class_method_signature": "IOUtilsTest.testWrite()", "testcase": true, "constructor": false, "invocations": ["write", "assertEquals", "toString"]}, "focal_class": {"identifier": "IOUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int EOF = -1;", "modifier": "private static final", "type": "int", "declarator": "EOF = -1", "var_name": "EOF"}, {"original_string": "private static final int BUFFER_SIZE = 4096;", "modifier": "private static final", "type": "int", "declarator": "BUFFER_SIZE = 4096", "var_name": "BUFFER_SIZE"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(IOUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(IOUtils.class)", "var_name": "logger"}], "methods": [{"identifier": "IOUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " IOUtils()", "full_signature": "private  IOUtils()", "class_method_signature": "IOUtils.IOUtils()", "testcase": false, "constructor": true}, {"identifier": "copy", "parameters": "(InputStream input, OutputStream output)", "modifiers": "public static", "return": "void", "signature": "void copy(InputStream input, OutputStream output)", "full_signature": "public static void copy(InputStream input, OutputStream output)", "class_method_signature": "IOUtils.copy(InputStream input, OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String str, OutputStream out)", "modifiers": "public static", "return": "void", "signature": "void write(String str, OutputStream out)", "full_signature": "public static void write(String str, OutputStream out)", "class_method_signature": "IOUtils.write(String str, OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(InputStream input)", "modifiers": "public static", "return": "String", "signature": "String toString(InputStream input)", "full_signature": "public static String toString(InputStream input)", "class_method_signature": "IOUtils.toString(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "closeQuietly", "parameters": "(InputStream is)", "modifiers": "public static", "return": "void", "signature": "void closeQuietly(InputStream is)", "full_signature": "public static void closeQuietly(InputStream is)", "class_method_signature": "IOUtils.closeQuietly(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "consumeAndClose", "parameters": "(InputStream is)", "modifiers": "public static", "return": "void", "signature": "void consumeAndClose(InputStream is)", "full_signature": "public static void consumeAndClose(InputStream is)", "class_method_signature": "IOUtils.consumeAndClose(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(String name)", "modifiers": "public static", "return": "InputStream", "signature": "InputStream getResourceAsStream(String name)", "full_signature": "public static InputStream getResourceAsStream(String name)", "class_method_signature": "IOUtils.getResourceAsStream(String name)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsString", "parameters": "(String name)", "modifiers": "public static", "return": "String", "signature": "String getResourceAsString(String name)", "full_signature": "public static String getResourceAsString(String name)", "class_method_signature": "IOUtils.getResourceAsString(String name)", "testcase": false, "constructor": false}, {"identifier": "readToBytes", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readToBytes(InputStream inputStream)", "full_signature": "public static byte[] readToBytes(InputStream inputStream)", "class_method_signature": "IOUtils.readToBytes(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "(String classPathLocation)", "modifiers": "public static", "return": "File", "signature": "File getFile(String classPathLocation)", "full_signature": "public static File getFile(String classPathLocation)", "class_method_signature": "IOUtils.getFile(String classPathLocation)", "testcase": false, "constructor": false}], "file": "stagemonitor-configuration/src/main/java/org/stagemonitor/util/IOUtils.java"}, "focal_method": {"identifier": "write", "parameters": "(String str, OutputStream out)", "modifiers": "public static", "return": "void", "body": "public static void write(String str, OutputStream out) throws IOException {\n\t\tout.write(str.getBytes());\n\t}", "signature": "void write(String str, OutputStream out)", "full_signature": "public static void write(String str, OutputStream out)", "class_method_signature": "IOUtils.write(String str, OutputStream out)", "testcase": false, "constructor": false, "invocations": ["write", "getBytes"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}