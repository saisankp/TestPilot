{"test_class": {"identifier": "PersistenceServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final TemporaryFolder temporaryFolder = new TemporaryFolder();", "modifier": "@Rule\n\tpublic final", "type": "TemporaryFolder", "declarator": "temporaryFolder = new TemporaryFolder()", "var_name": "temporaryFolder"}, {"original_string": "private File dataFolder;", "modifier": "private", "type": "File", "declarator": "dataFolder", "var_name": "dataFolder"}, {"original_string": "private PersistenceService<TestConfig> service;", "modifier": "private", "type": "PersistenceService<TestConfig>", "declarator": "service", "var_name": "service"}, {"original_string": "private DataDirectoryLocator dataDirectory;", "modifier": "private", "type": "DataDirectoryLocator", "declarator": "dataDirectory", "var_name": "dataDirectory"}], "file": "services/src/test/java/com/greensopinion/finance/services/persistence/PersistenceServiceTest.java"}, "test_case": {"identifier": "readSettingsNoFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void readSettingsNoFile() {\n\t\tassertNotNull(service.load());\n\t}", "signature": "void readSettingsNoFile()", "full_signature": "@Test public void readSettingsNoFile()", "class_method_signature": "PersistenceServiceTest.readSettingsNoFile()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "load"]}, "focal_class": {"identifier": "PersistenceService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final PersistenceGsonProvider gsonProvider;", "modifier": "private final", "type": "PersistenceGsonProvider", "declarator": "gsonProvider", "var_name": "gsonProvider"}, {"original_string": "private final DataDirectoryLocator dataDirectoryLocator;", "modifier": "private final", "type": "DataDirectoryLocator", "declarator": "dataDirectoryLocator", "var_name": "dataDirectoryLocator"}, {"original_string": "private final Class<T> type;", "modifier": "private final", "type": "Class<T>", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "PersistenceService", "parameters": "(PersistenceGsonProvider gsonProvider, DataDirectoryLocator dataDirectoryLocator, Class<T> type)", "modifiers": "", "return": "", "signature": " PersistenceService(PersistenceGsonProvider gsonProvider, DataDirectoryLocator dataDirectoryLocator, Class<T> type)", "full_signature": "  PersistenceService(PersistenceGsonProvider gsonProvider, DataDirectoryLocator dataDirectoryLocator, Class<T> type)", "class_method_signature": "PersistenceService.PersistenceService(PersistenceGsonProvider gsonProvider, DataDirectoryLocator dataDirectoryLocator, Class<T> type)", "testcase": false, "constructor": true}, {"identifier": "load", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T load()", "full_signature": "public T load()", "class_method_signature": "PersistenceService.load()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(T value)", "modifiers": "public", "return": "void", "signature": "void save(T value)", "full_signature": "public void save(T value)", "class_method_signature": "PersistenceService.save(T value)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(File file)", "modifiers": "private", "return": "T", "signature": "T read(File file)", "full_signature": "private T read(File file)", "class_method_signature": "PersistenceService.read(File file)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(InputStream stream)", "modifiers": "protected", "return": "T", "signature": "T read(InputStream stream)", "full_signature": "protected T read(InputStream stream)", "class_method_signature": "PersistenceService.read(InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(File file, T data)", "modifiers": "private", "return": "void", "signature": "void save(File file, T data)", "full_signature": "private void save(File file, T data)", "class_method_signature": "PersistenceService.save(File file, T data)", "testcase": false, "constructor": false}, {"identifier": "ensureFolder", "parameters": "(File file)", "modifiers": "private", "return": "void", "signature": "void ensureFolder(File file)", "full_signature": "private void ensureFolder(File file)", "class_method_signature": "PersistenceService.ensureFolder(File file)", "testcase": false, "constructor": false}, {"identifier": "gson", "parameters": "()", "modifiers": "private", "return": "Gson", "signature": "Gson gson()", "full_signature": "private Gson gson()", "class_method_signature": "PersistenceService.gson()", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "()", "modifiers": "", "return": "File", "signature": "File getFile()", "full_signature": " File getFile()", "class_method_signature": "PersistenceService.getFile()", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "()", "modifiers": "abstract", "return": "String", "signature": "String getFilename()", "full_signature": "abstract String getFilename()", "class_method_signature": "PersistenceService.getFilename()", "testcase": false, "constructor": false}, {"identifier": "defaultInstance", "parameters": "()", "modifiers": "abstract", "return": "T", "signature": "T defaultInstance()", "full_signature": "abstract T defaultInstance()", "class_method_signature": "PersistenceService.defaultInstance()", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/persistence/PersistenceService.java"}, "focal_method": {"identifier": "load", "parameters": "()", "modifiers": "public", "return": "T", "body": "public T load() {\n\t\tFile dataFile = getFile();\n\t\tif (dataFile.exists()) {\n\t\t\treturn read(dataFile);\n\t\t}\n\t\treturn defaultInstance();\n\t}", "signature": "T load()", "full_signature": "public T load()", "class_method_signature": "PersistenceService.load()", "testcase": false, "constructor": false, "invocations": ["getFile", "exists", "read", "defaultInstance"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}