{"test_class": {"identifier": "AutoRefreshCredentialProviderTest", "superclass": "extends AbstractCoreTest", "interfaces": "", "fields": [], "file": "herd-code/herd-tools/herd-tools-common/src/test/java/org/finra/herd/tools/common/databridge/AutoRefreshCredentialProviderTest.java"}, "test_case": {"identifier": "testAssertException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAssertException()\n    {\n        AutoRefreshCredentialProvider autoRefreshCredentialProvider = new AutoRefreshCredentialProvider()\n        {\n            @Override\n            public AwsCredential getNewAwsCredential() throws Exception\n            {\n                throw new Exception(\"test\");\n            }\n        };\n\n        try\n        {\n            executeWithoutLogging(AutoRefreshCredentialProvider.class, () -> {\n                autoRefreshCredentialProvider.getAwsCredential();\n            });\n            fail();\n        }\n        catch (Exception e)\n        {\n            assertEquals(IllegalStateException.class, e.getClass());\n            Throwable cause = e.getCause();\n            assertEquals(Exception.class, cause.getClass());\n            assertEquals(\"test\", cause.getMessage());\n        }\n    }", "signature": "void testAssertException()", "full_signature": "@Test public void testAssertException()", "class_method_signature": "AutoRefreshCredentialProviderTest.testAssertException()", "testcase": true, "constructor": false, "invocations": ["executeWithoutLogging", "getAwsCredential", "fail", "assertEquals", "getClass", "getCause", "assertEquals", "getClass", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "AutoRefreshCredentialProvider", "superclass": "", "interfaces": "implements HerdAWSCredentialsProvider", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(AutoRefreshCredentialProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AutoRefreshCredentialProvider.class)", "var_name": "LOGGER"}, {"original_string": "private Long sessionExpirationTime;", "modifier": "private", "type": "Long", "declarator": "sessionExpirationTime", "var_name": "sessionExpirationTime"}, {"original_string": "private AwsCredential currentAwsCredentials;", "modifier": "private", "type": "AwsCredential", "declarator": "currentAwsCredentials", "var_name": "currentAwsCredentials"}], "methods": [{"identifier": "getNewAwsCredential", "parameters": "()", "modifiers": "public abstract", "return": "AwsCredential", "signature": "AwsCredential getNewAwsCredential()", "full_signature": "public abstract AwsCredential getNewAwsCredential()", "class_method_signature": "AutoRefreshCredentialProvider.getNewAwsCredential()", "testcase": false, "constructor": false}, {"identifier": "getAwsCredential", "parameters": "()", "modifiers": "@Override public", "return": "AwsCredential", "signature": "AwsCredential getAwsCredential()", "full_signature": "@Override public AwsCredential getAwsCredential()", "class_method_signature": "AutoRefreshCredentialProvider.getAwsCredential()", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-tools-common/src/main/java/org/finra/herd/tools/common/databridge/AutoRefreshCredentialProvider.java"}, "focal_method": {"identifier": "getAwsCredential", "parameters": "()", "modifiers": "@Override public", "return": "AwsCredential", "body": "@Override\n    public AwsCredential getAwsCredential()\n    {\n        if (sessionExpirationTime == null || System.currentTimeMillis() >= sessionExpirationTime)\n        {\n            try\n            {\n                currentAwsCredentials = getNewAwsCredential();\n            }\n            catch (Exception e)\n            {\n                LOGGER.warn(\"Error retrieving new credentials. {}\", e.toString(), e);\n                throw new IllegalStateException(e);\n            }\n            sessionExpirationTime = currentAwsCredentials.getAwsSessionExpirationTime().toGregorianCalendar().getTimeInMillis();\n        }\n        return currentAwsCredentials;\n    }", "signature": "AwsCredential getAwsCredential()", "full_signature": "@Override public AwsCredential getAwsCredential()", "class_method_signature": "AutoRefreshCredentialProvider.getAwsCredential()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "getNewAwsCredential", "warn", "toString", "getTimeInMillis", "toGregorianCalendar", "getAwsSessionExpirationTime"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}