{"test_class": {"identifier": "AntennaCLIOptionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONFIG_PATH = \"path/to/config.xml\";", "modifier": "private static final", "type": "String", "declarator": "CONFIG_PATH = \"path/to/config.xml\"", "var_name": "CONFIG_PATH"}, {"original_string": "private static final String PROPERTIES_PATH = \"path/to/example.properties\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTIES_PATH = \"path/to/example.properties\"", "var_name": "PROPERTIES_PATH"}], "file": "assembly/cli/src/test/java/org/eclipse/sw360/antenna/frontend/cli/AntennaCLIOptionsTest.java"}, "test_case": {"identifier": "testHelpMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHelpMessage() {\n        List<String> expectedFragments = Arrays.asList(\"Usage: \", AntennaCLIOptions.SWITCH_DEBUG_LONG,\n                AntennaCLIOptions.SWITCH_DEBUG_SHORT, AntennaCLIOptions.SWITCH_HELP_LONG,\n                AntennaCLIOptions.SWITCH_HELP_SHORT, \"[options]\", \"<pomFilePath>\");\n\n        String helpMessage = AntennaCLIOptions.helpMessage();\n        assertThat(helpMessage).contains(expectedFragments);\n        System.out.println(helpMessage);\n    }", "signature": "void testHelpMessage()", "full_signature": "@Test public void testHelpMessage()", "class_method_signature": "AntennaCLIOptionsTest.testHelpMessage()", "testcase": true, "constructor": false, "invocations": ["asList", "helpMessage", "contains", "assertThat", "println"]}, "focal_class": {"identifier": "AntennaCLIOptions", "superclass": "extends AbstractAntennaCLIOptions", "interfaces": "", "fields": [{"original_string": "private static final AntennaCLIOptions INVALID_OPTIONS =\n            new AntennaCLIOptions(null, false, true, false);", "modifier": "private static final", "type": "AntennaCLIOptions", "declarator": "INVALID_OPTIONS =\n            new AntennaCLIOptions(null, false, true, false)", "var_name": "INVALID_OPTIONS"}, {"original_string": "private final String configFilePath;", "modifier": "private final", "type": "String", "declarator": "configFilePath", "var_name": "configFilePath"}, {"original_string": "private final String propertiesFilePath;", "modifier": "private final", "type": "String", "declarator": "propertiesFilePath", "var_name": "propertiesFilePath"}], "methods": [{"identifier": "AntennaCLIOptions", "parameters": "(String configFilePath, boolean debugLog, boolean showHelp, boolean valid)", "modifiers": "", "return": "", "signature": " AntennaCLIOptions(String configFilePath, boolean debugLog, boolean showHelp, boolean valid)", "full_signature": "  AntennaCLIOptions(String configFilePath, boolean debugLog, boolean showHelp, boolean valid)", "class_method_signature": "AntennaCLIOptions.AntennaCLIOptions(String configFilePath, boolean debugLog, boolean showHelp, boolean valid)", "testcase": false, "constructor": true}, {"identifier": "AntennaCLIOptions", "parameters": "(String configFilePath,\n                      String propertiesFilePath,\n                      boolean debugLog,\n                      boolean showHelp,\n                      boolean valid)", "modifiers": "", "return": "", "signature": " AntennaCLIOptions(String configFilePath,\n                      String propertiesFilePath,\n                      boolean debugLog,\n                      boolean showHelp,\n                      boolean valid)", "full_signature": "  AntennaCLIOptions(String configFilePath,\n                      String propertiesFilePath,\n                      boolean debugLog,\n                      boolean showHelp,\n                      boolean valid)", "class_method_signature": "AntennaCLIOptions.AntennaCLIOptions(String configFilePath,\n                      String propertiesFilePath,\n                      boolean debugLog,\n                      boolean showHelp,\n                      boolean valid)", "testcase": false, "constructor": true}, {"identifier": "getConfigFilePath", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getConfigFilePath()", "full_signature": " String getConfigFilePath()", "class_method_signature": "AntennaCLIOptions.getConfigFilePath()", "testcase": false, "constructor": false}, {"identifier": "getPropertiesFilePath", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getPropertiesFilePath()", "full_signature": " String getPropertiesFilePath()", "class_method_signature": "AntennaCLIOptions.getPropertiesFilePath()", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String[] args)", "modifiers": "static", "return": "AntennaCLIOptions", "signature": "AntennaCLIOptions parse(String[] args)", "full_signature": "static AntennaCLIOptions parse(String[] args)", "class_method_signature": "AntennaCLIOptions.parse(String[] args)", "testcase": false, "constructor": false}, {"identifier": "helpMessage", "parameters": "()", "modifiers": "static", "return": "String", "signature": "String helpMessage()", "full_signature": "static String helpMessage()", "class_method_signature": "AntennaCLIOptions.helpMessage()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AntennaCLIOptions.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AntennaCLIOptions.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AntennaCLIOptions.toString()", "testcase": false, "constructor": false}], "file": "assembly/cli/src/main/java/org/eclipse/sw360/antenna/frontend/cli/AntennaCLIOptions.java"}, "focal_method": {"identifier": "helpMessage", "parameters": "()", "modifiers": "static", "return": "String", "body": "static String helpMessage() {\n        String cr = System.lineSeparator();\n        return \"Usage: java -jar antenna.jar [options] <pomFilePath> [<propertiesFilePath>]\" + cr + cr +\n                \"Supported options:\" + cr +\n                SWITCH_HELP_SHORT + \", \" + SWITCH_HELP_LONG + \":    Displays this help message.\" + cr +\n                SWITCH_DEBUG_SHORT + \", \" + SWITCH_DEBUG_LONG +\n                \":   Sets log level to DEBUG for diagnostic purposes.\" + cr;\n    }", "signature": "String helpMessage()", "full_signature": "static String helpMessage()", "class_method_signature": "AntennaCLIOptions.helpMessage()", "testcase": false, "constructor": false, "invocations": ["lineSeparator"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}