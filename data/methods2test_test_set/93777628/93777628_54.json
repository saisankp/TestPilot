{"test_class": {"identifier": "NxtFamilyWalletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CoinType NXT = NxtMain.get();", "modifier": "", "type": "CoinType", "declarator": "NXT = NxtMain.get()", "var_name": "NXT"}, {"original_string": "String recoveryPhrase = \"heavy virus hollow shrug shadow double dwarf affair novel weird image prize frame anxiety wait\";", "modifier": "", "type": "String", "declarator": "recoveryPhrase = \"heavy virus hollow shrug shadow double dwarf affair novel weird image prize frame anxiety wait\"", "var_name": "recoveryPhrase"}, {"original_string": "byte[] nxtPrivateKey = Hex.decode(\"200a8ead018adb6c78f2c821500ad13f5f24d101ed8431adcfb315ca58468553\");", "modifier": "", "type": "byte[]", "declarator": "nxtPrivateKey = Hex.decode(\"200a8ead018adb6c78f2c821500ad13f5f24d101ed8431adcfb315ca58468553\")", "var_name": "nxtPrivateKey"}, {"original_string": "byte[] nxtPublicKey = Hex.decode(\"163c6583ed489414f27e73a74f72080b478a55dfce4a086ded2990976e8bb81e\");", "modifier": "", "type": "byte[]", "declarator": "nxtPublicKey = Hex.decode(\"163c6583ed489414f27e73a74f72080b478a55dfce4a086ded2990976e8bb81e\")", "var_name": "nxtPublicKey"}, {"original_string": "String nxtRsAddress = \"NXT-CGNQ-8WBM-3P2F-AVH9J\";", "modifier": "", "type": "String", "declarator": "nxtRsAddress = \"NXT-CGNQ-8WBM-3P2F-AVH9J\"", "var_name": "nxtRsAddress"}, {"original_string": "long nxtAccountId = Convert.parseAccountId(NxtMain.get(), \"9808271777446836886\");", "modifier": "", "type": "long", "declarator": "nxtAccountId = Convert.parseAccountId(NxtMain.get(), \"9808271777446836886\")", "var_name": "nxtAccountId"}, {"original_string": "DeterministicHierarchy hierarchy;", "modifier": "", "type": "DeterministicHierarchy", "declarator": "hierarchy", "var_name": "hierarchy"}, {"original_string": "static final byte[] aesKeyBytes = {0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7};", "modifier": "static final", "type": "byte[]", "declarator": "aesKeyBytes = {0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7}", "var_name": "aesKeyBytes"}, {"original_string": "KeyParameter aesKey = new KeyParameter(aesKeyBytes);", "modifier": "", "type": "KeyParameter", "declarator": "aesKey = new KeyParameter(aesKeyBytes)", "var_name": "aesKey"}, {"original_string": "KeyCrypter crypter = new KeyCrypterScrypt();", "modifier": "", "type": "KeyCrypter", "declarator": "crypter = new KeyCrypterScrypt()", "var_name": "crypter"}, {"original_string": "Wallet wallet;", "modifier": "", "type": "Wallet", "declarator": "wallet", "var_name": "wallet"}, {"original_string": "NxtFamilyWallet nxtAccount;", "modifier": "", "type": "NxtFamilyWallet", "declarator": "nxtAccount", "var_name": "nxtAccount"}, {"original_string": "NxtFamilyWallet otherAccount;", "modifier": "", "type": "NxtFamilyWallet", "declarator": "otherAccount", "var_name": "otherAccount"}], "file": "core/src/test/java/com/coinomi/core/wallet/families/nxt/NxtFamilyWalletTest.java"}, "test_case": {"identifier": "serializeUnencryptedNormal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void serializeUnencryptedNormal() throws Exception {\n        List<Protos.Key> keys = nxtAccount.serializeKeychainToProtobuf();\n\n        NxtFamilyKey nxtKey = NxtFamilyKey.fromProtobuf(keys);\n\n        NxtFamilyWallet newWallet;\n        newWallet = new NxtFamilyWallet(nxtKey, NXT);\n\n    }", "signature": "void serializeUnencryptedNormal()", "full_signature": "@Test public void serializeUnencryptedNormal()", "class_method_signature": "NxtFamilyWalletTest.serializeUnencryptedNormal()", "testcase": true, "constructor": false, "invocations": ["serializeKeychainToProtobuf", "fromProtobuf"]}, "focal_class": {"identifier": "NxtFamilyWallet", "superclass": "extends AbstractWallet<NxtTransaction, NxtAddress>", "interfaces": "implements TransactionEventListener<NxtTransaction>", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(NxtFamilyWallet.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(NxtFamilyWallet.class)", "var_name": "log"}, {"original_string": "protected final Map<Sha256Hash, NxtTransaction> rawtransactions;", "modifier": "protected final", "type": "Map<Sha256Hash, NxtTransaction>", "declarator": "rawtransactions", "var_name": "rawtransactions"}, {"original_string": "@VisibleForTesting\n    final HashMap<AbstractAddress, String> addressesStatus;", "modifier": "@VisibleForTesting\n    final", "type": "HashMap<AbstractAddress, String>", "declarator": "addressesStatus", "var_name": "addressesStatus"}, {"original_string": "@VisibleForTesting final transient ArrayList<AbstractAddress> addressesSubscribed;", "modifier": "@VisibleForTesting final transient", "type": "ArrayList<AbstractAddress>", "declarator": "addressesSubscribed", "var_name": "addressesSubscribed"}, {"original_string": "@VisibleForTesting final transient ArrayList<AbstractAddress> addressesPendingSubscription;", "modifier": "@VisibleForTesting final transient", "type": "ArrayList<AbstractAddress>", "declarator": "addressesPendingSubscription", "var_name": "addressesPendingSubscription"}, {"original_string": "@VisibleForTesting final transient HashMap<AbstractAddress, AddressStatus> statusPendingUpdates;", "modifier": "@VisibleForTesting final transient", "type": "HashMap<AbstractAddress, AddressStatus>", "declarator": "statusPendingUpdates", "var_name": "statusPendingUpdates"}, {"original_string": "private final NxtAddress address;", "modifier": "private final", "type": "NxtAddress", "declarator": "address", "var_name": "address"}, {"original_string": "NxtFamilyKey rootKey;", "modifier": "", "type": "NxtFamilyKey", "declarator": "rootKey", "var_name": "rootKey"}, {"original_string": "private Value balance;", "modifier": "private", "type": "Value", "declarator": "balance", "var_name": "balance"}, {"original_string": "private int lastEcBlockHeight;", "modifier": "private", "type": "int", "declarator": "lastEcBlockHeight", "var_name": "lastEcBlockHeight"}, {"original_string": "private long lastEcBlockId;", "modifier": "private", "type": "long", "declarator": "lastEcBlockId", "var_name": "lastEcBlockId"}, {"original_string": "@Nullable private transient Wallet wallet = null;", "modifier": "@Nullable private transient", "type": "Wallet", "declarator": "wallet = null", "var_name": "wallet"}, {"original_string": "private NxtServerClient blockchainConnection;", "modifier": "private", "type": "NxtServerClient", "declarator": "blockchainConnection", "var_name": "blockchainConnection"}, {"original_string": "@Nullable private Sha256Hash lastBlockSeenHash;", "modifier": "@Nullable private", "type": "Sha256Hash", "declarator": "lastBlockSeenHash", "var_name": "lastBlockSeenHash"}, {"original_string": "private int lastBlockSeenHeight = -1;", "modifier": "private", "type": "int", "declarator": "lastBlockSeenHeight = -1", "var_name": "lastBlockSeenHeight"}, {"original_string": "private long lastBlockSeenTimeSecs = 0;", "modifier": "private", "type": "long", "declarator": "lastBlockSeenTimeSecs = 0", "var_name": "lastBlockSeenTimeSecs"}, {"original_string": "private List<ListenerRegistration<WalletAccountEventListener>> listeners;", "modifier": "private", "type": "List<ListenerRegistration<WalletAccountEventListener>>", "declarator": "listeners", "var_name": "listeners"}, {"original_string": "private Runnable saveLaterRunnable = new Runnable() {\n        @Override\n        public void run() {\n            if (wallet != null) wallet.saveLater();\n        }\n    };", "modifier": "private", "type": "Runnable", "declarator": "saveLaterRunnable = new Runnable() {\n        @Override\n        public void run() {\n            if (wallet != null) wallet.saveLater();\n        }\n    }", "var_name": "saveLaterRunnable"}, {"original_string": "private Runnable saveNowRunnable = new Runnable() {\n        @Override\n        public void run() {\n            if (wallet != null) wallet.saveNow();\n        }\n    };", "modifier": "private", "type": "Runnable", "declarator": "saveNowRunnable = new Runnable() {\n        @Override\n        public void run() {\n            if (wallet != null) wallet.saveNow();\n        }\n    }", "var_name": "saveNowRunnable"}], "methods": [{"identifier": "NxtFamilyWallet", "parameters": "(DeterministicKey entropy, CoinType type)", "modifiers": "public", "return": "", "signature": " NxtFamilyWallet(DeterministicKey entropy, CoinType type)", "full_signature": "public  NxtFamilyWallet(DeterministicKey entropy, CoinType type)", "class_method_signature": "NxtFamilyWallet.NxtFamilyWallet(DeterministicKey entropy, CoinType type)", "testcase": false, "constructor": true}, {"identifier": "NxtFamilyWallet", "parameters": "(DeterministicKey entropy, CoinType type,\n                           @Nullable KeyCrypter keyCrypter, @Nullable KeyParameter key)", "modifiers": "public", "return": "", "signature": " NxtFamilyWallet(DeterministicKey entropy, CoinType type,\n                           @Nullable KeyCrypter keyCrypter, @Nullable KeyParameter key)", "full_signature": "public  NxtFamilyWallet(DeterministicKey entropy, CoinType type,\n                           @Nullable KeyCrypter keyCrypter, @Nullable KeyParameter key)", "class_method_signature": "NxtFamilyWallet.NxtFamilyWallet(DeterministicKey entropy, CoinType type,\n                           @Nullable KeyCrypter keyCrypter, @Nullable KeyParameter key)", "testcase": false, "constructor": true}, {"identifier": "NxtFamilyWallet", "parameters": "(NxtFamilyKey key, CoinType type)", "modifiers": "public", "return": "", "signature": " NxtFamilyWallet(NxtFamilyKey key, CoinType type)", "full_signature": "public  NxtFamilyWallet(NxtFamilyKey key, CoinType type)", "class_method_signature": "NxtFamilyWallet.NxtFamilyWallet(NxtFamilyKey key, CoinType type)", "testcase": false, "constructor": true}, {"identifier": "NxtFamilyWallet", "parameters": "(String id, NxtFamilyKey key, CoinType type)", "modifiers": "public", "return": "", "signature": " NxtFamilyWallet(String id, NxtFamilyKey key, CoinType type)", "full_signature": "public  NxtFamilyWallet(String id, NxtFamilyKey key, CoinType type)", "class_method_signature": "NxtFamilyWallet.NxtFamilyWallet(String id, NxtFamilyKey key, CoinType type)", "testcase": false, "constructor": true}, {"identifier": "getPublicKey", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getPublicKey()", "full_signature": "@Override public byte[] getPublicKey()", "class_method_signature": "NxtFamilyWallet.getPublicKey()", "testcase": false, "constructor": false}, {"identifier": "getPublicKeyMnemonic", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPublicKeyMnemonic()", "full_signature": "@Override public String getPublicKeyMnemonic()", "class_method_signature": "NxtFamilyWallet.getPublicKeyMnemonic()", "testcase": false, "constructor": false}, {"identifier": "getEmptyWalletRequest", "parameters": "(AbstractAddress destination)", "modifiers": "@Override public", "return": "SendRequest", "signature": "SendRequest getEmptyWalletRequest(AbstractAddress destination)", "full_signature": "@Override public SendRequest getEmptyWalletRequest(AbstractAddress destination)", "class_method_signature": "NxtFamilyWallet.getEmptyWalletRequest(AbstractAddress destination)", "testcase": false, "constructor": false}, {"identifier": "getSendToRequest", "parameters": "(AbstractAddress destination, Value amount)", "modifiers": "@Override public", "return": "SendRequest", "signature": "SendRequest getSendToRequest(AbstractAddress destination, Value amount)", "full_signature": "@Override public SendRequest getSendToRequest(AbstractAddress destination, Value amount)", "class_method_signature": "NxtFamilyWallet.getSendToRequest(AbstractAddress destination, Value amount)", "testcase": false, "constructor": false}, {"identifier": "checkAddress", "parameters": "(AbstractAddress destination)", "modifiers": "private", "return": "void", "signature": "void checkAddress(AbstractAddress destination)", "full_signature": "private void checkAddress(AbstractAddress destination)", "class_method_signature": "NxtFamilyWallet.checkAddress(AbstractAddress destination)", "testcase": false, "constructor": false}, {"identifier": "completeTransaction", "parameters": "(SendRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void completeTransaction(SendRequest request)", "full_signature": "@Override public void completeTransaction(SendRequest request)", "class_method_signature": "NxtFamilyWallet.completeTransaction(SendRequest request)", "testcase": false, "constructor": false}, {"identifier": "signTransaction", "parameters": "(SendRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void signTransaction(SendRequest request)", "full_signature": "@Override public void signTransaction(SendRequest request)", "class_method_signature": "NxtFamilyWallet.signTransaction(SendRequest request)", "testcase": false, "constructor": false}, {"identifier": "checkSendRequest", "parameters": "(SendRequest request)", "modifiers": "private", "return": "void", "signature": "void checkSendRequest(SendRequest request)", "full_signature": "private void checkSendRequest(SendRequest request)", "class_method_signature": "NxtFamilyWallet.checkSendRequest(SendRequest request)", "testcase": false, "constructor": false}, {"identifier": "completeTransaction", "parameters": "(NxtSendRequest request)", "modifiers": "public", "return": "void", "signature": "void completeTransaction(NxtSendRequest request)", "full_signature": "public void completeTransaction(NxtSendRequest request)", "class_method_signature": "NxtFamilyWallet.completeTransaction(NxtSendRequest request)", "testcase": false, "constructor": false}, {"identifier": "signTransaction", "parameters": "(NxtSendRequest request)", "modifiers": "public", "return": "void", "signature": "void signTransaction(NxtSendRequest request)", "full_signature": "public void signTransaction(NxtSendRequest request)", "class_method_signature": "NxtFamilyWallet.signTransaction(NxtSendRequest request)", "testcase": false, "constructor": false}, {"identifier": "signMessage", "parameters": "(SignedMessage unsignedMessage, @Nullable KeyParameter aesKey)", "modifiers": "@Override public", "return": "void", "signature": "void signMessage(SignedMessage unsignedMessage, @Nullable KeyParameter aesKey)", "full_signature": "@Override public void signMessage(SignedMessage unsignedMessage, @Nullable KeyParameter aesKey)", "class_method_signature": "NxtFamilyWallet.signMessage(SignedMessage unsignedMessage, @Nullable KeyParameter aesKey)", "testcase": false, "constructor": false}, {"identifier": "verifyMessage", "parameters": "(SignedMessage signedMessage)", "modifiers": "@Override public", "return": "void", "signature": "void verifyMessage(SignedMessage signedMessage)", "full_signature": "@Override public void verifyMessage(SignedMessage signedMessage)", "class_method_signature": "NxtFamilyWallet.verifyMessage(SignedMessage signedMessage)", "testcase": false, "constructor": false}, {"identifier": "getPublicKeySerialized", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPublicKeySerialized()", "full_signature": "@Override public String getPublicKeySerialized()", "class_method_signature": "NxtFamilyWallet.getPublicKeySerialized()", "testcase": false, "constructor": false}, {"identifier": "isNew", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNew()", "full_signature": "@Override public boolean isNew()", "class_method_signature": "NxtFamilyWallet.isNew()", "testcase": false, "constructor": false}, {"identifier": "getBalance", "parameters": "()", "modifiers": "@Override public", "return": "Value", "signature": "Value getBalance()", "full_signature": "@Override public Value getBalance()", "class_method_signature": "NxtFamilyWallet.getBalance()", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void refresh()", "full_signature": "@Override public void refresh()", "class_method_signature": "NxtFamilyWallet.refresh()", "testcase": false, "constructor": false}, {"identifier": "clearTransientState", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void clearTransientState()", "full_signature": "private void clearTransientState()", "class_method_signature": "NxtFamilyWallet.clearTransientState()", "testcase": false, "constructor": false}, {"identifier": "isConnected", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isConnected()", "full_signature": "@Override public boolean isConnected()", "class_method_signature": "NxtFamilyWallet.isConnected()", "testcase": false, "constructor": false}, {"identifier": "isLoading", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLoading()", "full_signature": "@Override public boolean isLoading()", "class_method_signature": "NxtFamilyWallet.isLoading()", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void disconnect()", "full_signature": "@Override public void disconnect()", "class_method_signature": "NxtFamilyWallet.disconnect()", "testcase": false, "constructor": false}, {"identifier": "getChangeAddress", "parameters": "()", "modifiers": "@Override public", "return": "AbstractAddress", "signature": "AbstractAddress getChangeAddress()", "full_signature": "@Override public AbstractAddress getChangeAddress()", "class_method_signature": "NxtFamilyWallet.getChangeAddress()", "testcase": false, "constructor": false}, {"identifier": "getReceiveAddress", "parameters": "()", "modifiers": "@Override public", "return": "AbstractAddress", "signature": "AbstractAddress getReceiveAddress()", "full_signature": "@Override public AbstractAddress getReceiveAddress()", "class_method_signature": "NxtFamilyWallet.getReceiveAddress()", "testcase": false, "constructor": false}, {"identifier": "getReceiveAddress", "parameters": "(boolean isManualAddressManagement)", "modifiers": "@Override public", "return": "NxtAddress", "signature": "NxtAddress getReceiveAddress(boolean isManualAddressManagement)", "full_signature": "@Override public NxtAddress getReceiveAddress(boolean isManualAddressManagement)", "class_method_signature": "NxtFamilyWallet.getReceiveAddress(boolean isManualAddressManagement)", "testcase": false, "constructor": false}, {"identifier": "hasUsedAddresses", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasUsedAddresses()", "full_signature": "@Override public boolean hasUsedAddresses()", "class_method_signature": "NxtFamilyWallet.hasUsedAddresses()", "testcase": false, "constructor": false}, {"identifier": "canCreateNewAddresses", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canCreateNewAddresses()", "full_signature": "@Override public boolean canCreateNewAddresses()", "class_method_signature": "NxtFamilyWallet.canCreateNewAddresses()", "testcase": false, "constructor": false}, {"identifier": "broadcastTxSync", "parameters": "(AbstractTransaction tx)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean broadcastTxSync(AbstractTransaction tx)", "full_signature": "@Override public boolean broadcastTxSync(AbstractTransaction tx)", "class_method_signature": "NxtFamilyWallet.broadcastTxSync(AbstractTransaction tx)", "testcase": false, "constructor": false}, {"identifier": "broadcastNxtTxSync", "parameters": "(NxtTransaction tx)", "modifiers": "public", "return": "boolean", "signature": "boolean broadcastNxtTxSync(NxtTransaction tx)", "full_signature": "public boolean broadcastNxtTxSync(NxtTransaction tx)", "class_method_signature": "NxtFamilyWallet.broadcastNxtTxSync(NxtTransaction tx)", "testcase": false, "constructor": false}, {"identifier": "broadcastTx", "parameters": "(AbstractTransaction tx)", "modifiers": "@Override public", "return": "void", "signature": "void broadcastTx(AbstractTransaction tx)", "full_signature": "@Override public void broadcastTx(AbstractTransaction tx)", "class_method_signature": "NxtFamilyWallet.broadcastTx(AbstractTransaction tx)", "testcase": false, "constructor": false}, {"identifier": "getRefundAddress", "parameters": "(boolean isManualAddressManagement)", "modifiers": "@Override public", "return": "AbstractAddress", "signature": "AbstractAddress getRefundAddress(boolean isManualAddressManagement)", "full_signature": "@Override public AbstractAddress getRefundAddress(boolean isManualAddressManagement)", "class_method_signature": "NxtFamilyWallet.getRefundAddress(boolean isManualAddressManagement)", "testcase": false, "constructor": false}, {"identifier": "getPendingRawTransactions", "parameters": "()", "modifiers": "public", "return": "Map<Sha256Hash, Transaction>", "signature": "Map<Sha256Hash, Transaction> getPendingRawTransactions()", "full_signature": "public Map<Sha256Hash, Transaction> getPendingRawTransactions()", "class_method_signature": "NxtFamilyWallet.getPendingRawTransactions()", "testcase": false, "constructor": false}, {"identifier": "getTransactions", "parameters": "()", "modifiers": "@Override public", "return": "Map<Sha256Hash, NxtTransaction>", "signature": "Map<Sha256Hash, NxtTransaction> getTransactions()", "full_signature": "@Override public Map<Sha256Hash, NxtTransaction> getTransactions()", "class_method_signature": "NxtFamilyWallet.getTransactions()", "testcase": false, "constructor": false}, {"identifier": "getTransaction", "parameters": "(String transactionId)", "modifiers": "@Override public", "return": "NxtTransaction", "signature": "NxtTransaction getTransaction(String transactionId)", "full_signature": "@Override public NxtTransaction getTransaction(String transactionId)", "class_method_signature": "NxtFamilyWallet.getTransaction(String transactionId)", "testcase": false, "constructor": false}, {"identifier": "getPendingTransactions", "parameters": "()", "modifiers": "@Override public", "return": "Map<Sha256Hash, NxtTransaction>", "signature": "Map<Sha256Hash, NxtTransaction> getPendingTransactions()", "full_signature": "@Override public Map<Sha256Hash, NxtTransaction> getPendingTransactions()", "class_method_signature": "NxtFamilyWallet.getPendingTransactions()", "testcase": false, "constructor": false}, {"identifier": "getActiveAddresses", "parameters": "()", "modifiers": "@Override public", "return": "List<AbstractAddress>", "signature": "List<AbstractAddress> getActiveAddresses()", "full_signature": "@Override public List<AbstractAddress> getActiveAddresses()", "class_method_signature": "NxtFamilyWallet.getActiveAddresses()", "testcase": false, "constructor": false}, {"identifier": "markAddressAsUsed", "parameters": "(AbstractAddress address)", "modifiers": "@Override public", "return": "void", "signature": "void markAddressAsUsed(AbstractAddress address)", "full_signature": "@Override public void markAddressAsUsed(AbstractAddress address)", "class_method_signature": "NxtFamilyWallet.markAddressAsUsed(AbstractAddress address)", "testcase": false, "constructor": false}, {"identifier": "getWallet", "parameters": "()", "modifiers": "@Override public", "return": "Wallet", "signature": "Wallet getWallet()", "full_signature": "@Override public Wallet getWallet()", "class_method_signature": "NxtFamilyWallet.getWallet()", "testcase": false, "constructor": false}, {"identifier": "setWallet", "parameters": "(Wallet wallet)", "modifiers": "@Override public", "return": "void", "signature": "void setWallet(Wallet wallet)", "full_signature": "@Override public void setWallet(Wallet wallet)", "class_method_signature": "NxtFamilyWallet.setWallet(Wallet wallet)", "testcase": false, "constructor": false}, {"identifier": "walletSaveLater", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void walletSaveLater()", "full_signature": "@Override public void walletSaveLater()", "class_method_signature": "NxtFamilyWallet.walletSaveLater()", "testcase": false, "constructor": false}, {"identifier": "walletSaveNow", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void walletSaveNow()", "full_signature": "@Override public void walletSaveNow()", "class_method_signature": "NxtFamilyWallet.walletSaveNow()", "testcase": false, "constructor": false}, {"identifier": "serializeKeychainToProtobuf", "parameters": "()", "modifiers": "", "return": "List<Protos.Key>", "signature": "List<Protos.Key> serializeKeychainToProtobuf()", "full_signature": " List<Protos.Key> serializeKeychainToProtobuf()", "class_method_signature": "NxtFamilyWallet.serializeKeychainToProtobuf()", "testcase": false, "constructor": false}, {"identifier": "isEncryptable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEncryptable()", "full_signature": "@Override public boolean isEncryptable()", "class_method_signature": "NxtFamilyWallet.isEncryptable()", "testcase": false, "constructor": false}, {"identifier": "isEncrypted", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEncrypted()", "full_signature": "@Override public boolean isEncrypted()", "class_method_signature": "NxtFamilyWallet.isEncrypted()", "testcase": false, "constructor": false}, {"identifier": "getKeyCrypter", "parameters": "()", "modifiers": "@Override public", "return": "KeyCrypter", "signature": "KeyCrypter getKeyCrypter()", "full_signature": "@Override public KeyCrypter getKeyCrypter()", "class_method_signature": "NxtFamilyWallet.getKeyCrypter()", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(KeyCrypter keyCrypter, KeyParameter aesKey)", "modifiers": "@Override public", "return": "void", "signature": "void encrypt(KeyCrypter keyCrypter, KeyParameter aesKey)", "full_signature": "@Override public void encrypt(KeyCrypter keyCrypter, KeyParameter aesKey)", "class_method_signature": "NxtFamilyWallet.encrypt(KeyCrypter keyCrypter, KeyParameter aesKey)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(KeyParameter aesKey)", "modifiers": "@Override public", "return": "void", "signature": "void decrypt(KeyParameter aesKey)", "full_signature": "@Override public void decrypt(KeyParameter aesKey)", "class_method_signature": "NxtFamilyWallet.decrypt(KeyParameter aesKey)", "testcase": false, "constructor": false}, {"identifier": "sendCoinsOffline", "parameters": "(NxtAddress address, Value amount)", "modifiers": "public", "return": "NxtSendRequest", "signature": "NxtSendRequest sendCoinsOffline(NxtAddress address, Value amount)", "full_signature": "public NxtSendRequest sendCoinsOffline(NxtAddress address, Value amount)", "class_method_signature": "NxtFamilyWallet.sendCoinsOffline(NxtAddress address, Value amount)", "testcase": false, "constructor": false}, {"identifier": "sendCoinsOffline", "parameters": "(NxtAddress address, Value amount, @Nullable String password)", "modifiers": "public", "return": "NxtSendRequest", "signature": "NxtSendRequest sendCoinsOffline(NxtAddress address, Value amount, @Nullable String password)", "full_signature": "public NxtSendRequest sendCoinsOffline(NxtAddress address, Value amount, @Nullable String password)", "class_method_signature": "NxtFamilyWallet.sendCoinsOffline(NxtAddress address, Value amount, @Nullable String password)", "testcase": false, "constructor": false}, {"identifier": "sendCoinsOffline", "parameters": "(NxtAddress address, Value amount, @Nullable KeyParameter aesKey)", "modifiers": "public", "return": "NxtSendRequest", "signature": "NxtSendRequest sendCoinsOffline(NxtAddress address, Value amount, @Nullable KeyParameter aesKey)", "full_signature": "public NxtSendRequest sendCoinsOffline(NxtAddress address, Value amount, @Nullable KeyParameter aesKey)", "class_method_signature": "NxtFamilyWallet.sendCoinsOffline(NxtAddress address, Value amount, @Nullable KeyParameter aesKey)", "testcase": false, "constructor": false}, {"identifier": "addEventListener", "parameters": "(WalletAccountEventListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addEventListener(WalletAccountEventListener listener)", "full_signature": "@Override public void addEventListener(WalletAccountEventListener listener)", "class_method_signature": "NxtFamilyWallet.addEventListener(WalletAccountEventListener listener)", "testcase": false, "constructor": false}, {"identifier": "addEventListener", "parameters": "(WalletAccountEventListener listener, Executor executor)", "modifiers": "@Override public", "return": "void", "signature": "void addEventListener(WalletAccountEventListener listener, Executor executor)", "full_signature": "@Override public void addEventListener(WalletAccountEventListener listener, Executor executor)", "class_method_signature": "NxtFamilyWallet.addEventListener(WalletAccountEventListener listener, Executor executor)", "testcase": false, "constructor": false}, {"identifier": "removeEventListener", "parameters": "(WalletAccountEventListener listener)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeEventListener(WalletAccountEventListener listener)", "full_signature": "@Override public boolean removeEventListener(WalletAccountEventListener listener)", "class_method_signature": "NxtFamilyWallet.removeEventListener(WalletAccountEventListener listener)", "testcase": false, "constructor": false}, {"identifier": "isAddressMine", "parameters": "(AbstractAddress address)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAddressMine(AbstractAddress address)", "full_signature": "@Override public boolean isAddressMine(AbstractAddress address)", "class_method_signature": "NxtFamilyWallet.isAddressMine(AbstractAddress address)", "testcase": false, "constructor": false}, {"identifier": "maybeInitializeAllKeys", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void maybeInitializeAllKeys()", "full_signature": "@Override public void maybeInitializeAllKeys()", "class_method_signature": "NxtFamilyWallet.maybeInitializeAllKeys()", "testcase": false, "constructor": false}, {"identifier": "onConnection", "parameters": "(BlockchainConnection blockchainConnection)", "modifiers": "@Override public", "return": "void", "signature": "void onConnection(BlockchainConnection blockchainConnection)", "full_signature": "@Override public void onConnection(BlockchainConnection blockchainConnection)", "class_method_signature": "NxtFamilyWallet.onConnection(BlockchainConnection blockchainConnection)", "testcase": false, "constructor": false}, {"identifier": "subscribeIfNeeded", "parameters": "()", "modifiers": "", "return": "void", "signature": "void subscribeIfNeeded()", "full_signature": " void subscribeIfNeeded()", "class_method_signature": "NxtFamilyWallet.subscribeIfNeeded()", "testcase": false, "constructor": false}, {"identifier": "getAddressesToWatch", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "List<AbstractAddress>", "signature": "List<AbstractAddress> getAddressesToWatch()", "full_signature": "@VisibleForTesting List<AbstractAddress> getAddressesToWatch()", "class_method_signature": "NxtFamilyWallet.getAddressesToWatch()", "testcase": false, "constructor": false}, {"identifier": "subscribeToBlockchain", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void subscribeToBlockchain()", "full_signature": "private void subscribeToBlockchain()", "class_method_signature": "NxtFamilyWallet.subscribeToBlockchain()", "testcase": false, "constructor": false}, {"identifier": "onDisconnect", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDisconnect()", "full_signature": "@Override public void onDisconnect()", "class_method_signature": "NxtFamilyWallet.onDisconnect()", "testcase": false, "constructor": false}, {"identifier": "findKeyFromPubHash", "parameters": "(byte[] pubkeyHash)", "modifiers": "@Nullable @Override public", "return": "ECKey", "signature": "ECKey findKeyFromPubHash(byte[] pubkeyHash)", "full_signature": "@Nullable @Override public ECKey findKeyFromPubHash(byte[] pubkeyHash)", "class_method_signature": "NxtFamilyWallet.findKeyFromPubHash(byte[] pubkeyHash)", "testcase": false, "constructor": false}, {"identifier": "findKeyFromPubKey", "parameters": "(byte[] pubkey)", "modifiers": "@Nullable @Override public", "return": "ECKey", "signature": "ECKey findKeyFromPubKey(byte[] pubkey)", "full_signature": "@Nullable @Override public ECKey findKeyFromPubKey(byte[] pubkey)", "class_method_signature": "NxtFamilyWallet.findKeyFromPubKey(byte[] pubkey)", "testcase": false, "constructor": false}, {"identifier": "findRedeemDataFromScriptHash", "parameters": "(byte[] scriptHash)", "modifiers": "@Nullable @Override public", "return": "RedeemData", "signature": "RedeemData findRedeemDataFromScriptHash(byte[] scriptHash)", "full_signature": "@Nullable @Override public RedeemData findRedeemDataFromScriptHash(byte[] scriptHash)", "class_method_signature": "NxtFamilyWallet.findRedeemDataFromScriptHash(byte[] scriptHash)", "testcase": false, "constructor": false}, {"identifier": "onNewBlock", "parameters": "(BlockHeader header)", "modifiers": "@Override public", "return": "void", "signature": "void onNewBlock(BlockHeader header)", "full_signature": "@Override public void onNewBlock(BlockHeader header)", "class_method_signature": "NxtFamilyWallet.onNewBlock(BlockHeader header)", "testcase": false, "constructor": false}, {"identifier": "onBlockUpdate", "parameters": "(BlockHeader header)", "modifiers": "@Override public", "return": "void", "signature": "void onBlockUpdate(BlockHeader header)", "full_signature": "@Override public void onBlockUpdate(BlockHeader header)", "class_method_signature": "NxtFamilyWallet.onBlockUpdate(BlockHeader header)", "testcase": false, "constructor": false}, {"identifier": "queueOnNewBlock", "parameters": "()", "modifiers": "", "return": "void", "signature": "void queueOnNewBlock()", "full_signature": " void queueOnNewBlock()", "class_method_signature": "NxtFamilyWallet.queueOnNewBlock()", "testcase": false, "constructor": false}, {"identifier": "onAddressStatusUpdate", "parameters": "(AddressStatus status)", "modifiers": "@Override public", "return": "void", "signature": "void onAddressStatusUpdate(AddressStatus status)", "full_signature": "@Override public void onAddressStatusUpdate(AddressStatus status)", "class_method_signature": "NxtFamilyWallet.onAddressStatusUpdate(AddressStatus status)", "testcase": false, "constructor": false}, {"identifier": "isAddressStatusChanged", "parameters": "(AddressStatus addressStatus)", "modifiers": "private", "return": "boolean", "signature": "boolean isAddressStatusChanged(AddressStatus addressStatus)", "full_signature": "private boolean isAddressStatusChanged(AddressStatus addressStatus)", "class_method_signature": "NxtFamilyWallet.isAddressStatusChanged(AddressStatus addressStatus)", "testcase": false, "constructor": false}, {"identifier": "commitAddressStatus", "parameters": "(AddressStatus newStatus)", "modifiers": "", "return": "void", "signature": "void commitAddressStatus(AddressStatus newStatus)", "full_signature": " void commitAddressStatus(AddressStatus newStatus)", "class_method_signature": "NxtFamilyWallet.commitAddressStatus(AddressStatus newStatus)", "testcase": false, "constructor": false}, {"identifier": "onTransactionHistory", "parameters": "(AddressStatus status, List<ServerClient.HistoryTx> historyTxes)", "modifiers": "@Override public", "return": "void", "signature": "void onTransactionHistory(AddressStatus status, List<ServerClient.HistoryTx> historyTxes)", "full_signature": "@Override public void onTransactionHistory(AddressStatus status, List<ServerClient.HistoryTx> historyTxes)", "class_method_signature": "NxtFamilyWallet.onTransactionHistory(AddressStatus status, List<ServerClient.HistoryTx> historyTxes)", "testcase": false, "constructor": false}, {"identifier": "fetchTransactions", "parameters": "(List<? extends ServerClient.HistoryTx> txes)", "modifiers": "private", "return": "void", "signature": "void fetchTransactions(List<? extends ServerClient.HistoryTx> txes)", "full_signature": "private void fetchTransactions(List<? extends ServerClient.HistoryTx> txes)", "class_method_signature": "NxtFamilyWallet.fetchTransactions(List<? extends ServerClient.HistoryTx> txes)", "testcase": false, "constructor": false}, {"identifier": "fetchTransactionIfNeeded", "parameters": "(Sha256Hash txHash)", "modifiers": "private", "return": "void", "signature": "void fetchTransactionIfNeeded(Sha256Hash txHash)", "full_signature": "private void fetchTransactionIfNeeded(Sha256Hash txHash)", "class_method_signature": "NxtFamilyWallet.fetchTransactionIfNeeded(Sha256Hash txHash)", "testcase": false, "constructor": false}, {"identifier": "isTransactionAvailableOrQueued", "parameters": "(Sha256Hash txHash)", "modifiers": "private", "return": "boolean", "signature": "boolean isTransactionAvailableOrQueued(Sha256Hash txHash)", "full_signature": "private boolean isTransactionAvailableOrQueued(Sha256Hash txHash)", "class_method_signature": "NxtFamilyWallet.isTransactionAvailableOrQueued(Sha256Hash txHash)", "testcase": false, "constructor": false}, {"identifier": "getRawTransaction", "parameters": "(Sha256Hash hash)", "modifiers": "@Nullable public synchronized", "return": "Transaction", "signature": "Transaction getRawTransaction(Sha256Hash hash)", "full_signature": "@Nullable public synchronized Transaction getRawTransaction(Sha256Hash hash)", "class_method_signature": "NxtFamilyWallet.getRawTransaction(Sha256Hash hash)", "testcase": false, "constructor": false}, {"identifier": "onTransactionUpdate", "parameters": "(NxtTransaction tx)", "modifiers": "@Override public", "return": "void", "signature": "void onTransactionUpdate(NxtTransaction tx)", "full_signature": "@Override public void onTransactionUpdate(NxtTransaction tx)", "class_method_signature": "NxtFamilyWallet.onTransactionUpdate(NxtTransaction tx)", "testcase": false, "constructor": false}, {"identifier": "addNewTransactionIfNeeded", "parameters": "(NxtTransaction tx)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void addNewTransactionIfNeeded(NxtTransaction tx)", "full_signature": "@VisibleForTesting void addNewTransactionIfNeeded(NxtTransaction tx)", "class_method_signature": "NxtFamilyWallet.addNewTransactionIfNeeded(NxtTransaction tx)", "testcase": false, "constructor": false}, {"identifier": "queueOnNewBalance", "parameters": "()", "modifiers": "", "return": "void", "signature": "void queueOnNewBalance()", "full_signature": " void queueOnNewBalance()", "class_method_signature": "NxtFamilyWallet.queueOnNewBalance()", "testcase": false, "constructor": false}, {"identifier": "queueOnConnectivity", "parameters": "()", "modifiers": "", "return": "void", "signature": "void queueOnConnectivity()", "full_signature": " void queueOnConnectivity()", "class_method_signature": "NxtFamilyWallet.queueOnConnectivity()", "testcase": false, "constructor": false}, {"identifier": "onTransactionBroadcast", "parameters": "(NxtTransaction tx)", "modifiers": "@Override public", "return": "void", "signature": "void onTransactionBroadcast(NxtTransaction tx)", "full_signature": "@Override public void onTransactionBroadcast(NxtTransaction tx)", "class_method_signature": "NxtFamilyWallet.onTransactionBroadcast(NxtTransaction tx)", "testcase": false, "constructor": false}, {"identifier": "onTransactionBroadcastError", "parameters": "(NxtTransaction tx)", "modifiers": "@Override public", "return": "void", "signature": "void onTransactionBroadcastError(NxtTransaction tx)", "full_signature": "@Override public void onTransactionBroadcastError(NxtTransaction tx)", "class_method_signature": "NxtFamilyWallet.onTransactionBroadcastError(NxtTransaction tx)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/coinomi/core/wallet/families/nxt/NxtFamilyWallet.java"}, "focal_method": {"identifier": "serializeKeychainToProtobuf", "parameters": "()", "modifiers": "", "return": "List<Protos.Key>", "body": "List<Protos.Key> serializeKeychainToProtobuf() {\n        lock.lock();\n        try {\n            return rootKey.toProtobuf();\n        } finally {\n            lock.unlock();\n        }\n    }", "signature": "List<Protos.Key> serializeKeychainToProtobuf()", "full_signature": " List<Protos.Key> serializeKeychainToProtobuf()", "class_method_signature": "NxtFamilyWallet.serializeKeychainToProtobuf()", "testcase": false, "constructor": false, "invocations": ["lock", "toProtobuf", "unlock"]}, "repository": {"repo_id": 93777628, "url": "https://github.com/cosmojg/open-coinomi-android", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 24, "size": 22591, "license": "licensed"}}