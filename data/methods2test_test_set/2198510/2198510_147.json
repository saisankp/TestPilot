{"test_class": {"identifier": "TestFlumeConfiguration", "superclass": "", "interfaces": "", "fields": [], "file": "flume-ng-configuration/src/test/java/org/apache/flume/conf/TestFlumeConfiguration.java"}, "test_case": {"identifier": "testFlumeConfigAddsErrorOnNullValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFlumeConfigAddsErrorOnNullValue() {\n    HashMap<String, String> properties = new HashMap<>();\n    properties.put(\"something\", null);\n    FlumeConfiguration config = new FlumeConfiguration(properties);\n\n    List<FlumeConfigurationError> configurationErrors = config.getConfigurationErrors();\n    assertEquals(1, configurationErrors.size());\n    assertError(configurationErrors.get(0), AGENT_NAME_MISSING, \"\", \"\", ERROR);\n  }", "signature": "void testFlumeConfigAddsErrorOnNullValue()", "full_signature": "@Test public void testFlumeConfigAddsErrorOnNullValue()", "class_method_signature": "TestFlumeConfiguration.testFlumeConfigAddsErrorOnNullValue()", "testcase": true, "constructor": false, "invocations": ["put", "getConfigurationErrors", "assertEquals", "size", "assertError", "get"]}, "focal_class": {"identifier": "FlumeConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(FlumeConfiguration.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(FlumeConfiguration.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, AgentConfiguration> agentConfigMap;", "modifier": "private final", "type": "Map<String, AgentConfiguration>", "declarator": "agentConfigMap", "var_name": "agentConfigMap"}, {"original_string": "private final LinkedList<FlumeConfigurationError> errors;", "modifier": "private final", "type": "LinkedList<FlumeConfigurationError>", "declarator": "errors", "var_name": "errors"}, {"original_string": "public static final String NEWLINE = System.getProperty(\"line.separator\", \"\\n\");", "modifier": "public static final", "type": "String", "declarator": "NEWLINE = System.getProperty(\"line.separator\", \"\\n\")", "var_name": "NEWLINE"}, {"original_string": "public static final String INDENTSTEP = \"  \";", "modifier": "public static final", "type": "String", "declarator": "INDENTSTEP = \"  \"", "var_name": "INDENTSTEP"}], "methods": [{"identifier": "FlumeConfiguration", "parameters": "(Properties properties)", "modifiers": "@Deprecated public", "return": "", "signature": " FlumeConfiguration(Properties properties)", "full_signature": "@Deprecated public  FlumeConfiguration(Properties properties)", "class_method_signature": "FlumeConfiguration.FlumeConfiguration(Properties properties)", "testcase": false, "constructor": true}, {"identifier": "FlumeConfiguration", "parameters": "(Map<String, String> properties)", "modifiers": "public", "return": "", "signature": " FlumeConfiguration(Map<String, String> properties)", "full_signature": "public  FlumeConfiguration(Map<String, String> properties)", "class_method_signature": "FlumeConfiguration.FlumeConfiguration(Map<String, String> properties)", "testcase": false, "constructor": true}, {"identifier": "getConfigurationErrors", "parameters": "()", "modifiers": "public", "return": "List<FlumeConfigurationError>", "signature": "List<FlumeConfigurationError> getConfigurationErrors()", "full_signature": "public List<FlumeConfigurationError> getConfigurationErrors()", "class_method_signature": "FlumeConfiguration.getConfigurationErrors()", "testcase": false, "constructor": false}, {"identifier": "getConfigurationFor", "parameters": "(String hostname)", "modifiers": "public", "return": "AgentConfiguration", "signature": "AgentConfiguration getConfigurationFor(String hostname)", "full_signature": "public AgentConfiguration getConfigurationFor(String hostname)", "class_method_signature": "FlumeConfiguration.getConfigurationFor(String hostname)", "testcase": false, "constructor": false}, {"identifier": "validateConfiguration", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateConfiguration()", "full_signature": "private void validateConfiguration()", "class_method_signature": "FlumeConfiguration.validateConfiguration()", "testcase": false, "constructor": false}, {"identifier": "addRawProperty", "parameters": "(String rawName, String rawValue)", "modifiers": "private", "return": "boolean", "signature": "boolean addRawProperty(String rawName, String rawValue)", "full_signature": "private boolean addRawProperty(String rawName, String rawValue)", "class_method_signature": "FlumeConfiguration.addRawProperty(String rawName, String rawValue)", "testcase": false, "constructor": false}, {"identifier": "addError", "parameters": "(\n      String component, FlumeConfigurationErrorType errorType, ErrorOrWarning level\n  )", "modifiers": "private", "return": "void", "signature": "void addError(\n      String component, FlumeConfigurationErrorType errorType, ErrorOrWarning level\n  )", "full_signature": "private void addError(\n      String component, FlumeConfigurationErrorType errorType, ErrorOrWarning level\n  )", "class_method_signature": "FlumeConfiguration.addError(\n      String component, FlumeConfigurationErrorType errorType, ErrorOrWarning level\n  )", "testcase": false, "constructor": false}], "file": "flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java"}, "focal_method": {"identifier": "getConfigurationErrors", "parameters": "()", "modifiers": "public", "return": "List<FlumeConfigurationError>", "body": "public List<FlumeConfigurationError> getConfigurationErrors() {\n    return errors;\n  }", "signature": "List<FlumeConfigurationError> getConfigurationErrors()", "full_signature": "public List<FlumeConfigurationError> getConfigurationErrors()", "class_method_signature": "FlumeConfiguration.getConfigurationErrors()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}