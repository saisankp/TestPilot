{"test_class": {"identifier": "DirectoryResourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "resource/impl/src/test/java/cloud/piranha/resource/DirectoryResourceTest.java"}, "test_case": {"identifier": "testGetResource", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetResource() {\n        DirectoryResource resource = new DirectoryResource();\n        assertNull(resource.getResource(\"/resource\"));\n    }", "signature": "void testGetResource()", "full_signature": "@Test void testGetResource()", "class_method_signature": "DirectoryResourceTest.testGetResource()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getResource"]}, "focal_class": {"identifier": "DirectoryResource", "superclass": "", "interfaces": "implements Resource", "fields": [{"original_string": "private File rootDirectory;", "modifier": "private", "type": "File", "declarator": "rootDirectory", "var_name": "rootDirectory"}], "methods": [{"identifier": "DirectoryResource", "parameters": "()", "modifiers": "public", "return": "", "signature": " DirectoryResource()", "full_signature": "public  DirectoryResource()", "class_method_signature": "DirectoryResource.DirectoryResource()", "testcase": false, "constructor": true}, {"identifier": "DirectoryResource", "parameters": "(String rootDirectory)", "modifiers": "public", "return": "", "signature": " DirectoryResource(String rootDirectory)", "full_signature": "public  DirectoryResource(String rootDirectory)", "class_method_signature": "DirectoryResource.DirectoryResource(String rootDirectory)", "testcase": false, "constructor": true}, {"identifier": "DirectoryResource", "parameters": "(File rootDirectory)", "modifiers": "public", "return": "", "signature": " DirectoryResource(File rootDirectory)", "full_signature": "public  DirectoryResource(File rootDirectory)", "class_method_signature": "DirectoryResource.DirectoryResource(File rootDirectory)", "testcase": false, "constructor": true}, {"identifier": "getResource", "parameters": "(String location)", "modifiers": "@Override public", "return": "URL", "signature": "URL getResource(String location)", "full_signature": "@Override public URL getResource(String location)", "class_method_signature": "DirectoryResource.getResource(String location)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(String location)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getResourceAsStream(String location)", "full_signature": "@Override public InputStream getResourceAsStream(String location)", "class_method_signature": "DirectoryResource.getResourceAsStream(String location)", "testcase": false, "constructor": false}, {"identifier": "getAllLocations", "parameters": "()", "modifiers": "@Override public", "return": "Stream<String>", "signature": "Stream<String> getAllLocations()", "full_signature": "@Override public Stream<String> getAllLocations()", "class_method_signature": "DirectoryResource.getAllLocations()", "testcase": false, "constructor": false}, {"identifier": "getRootDirectory", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getRootDirectory()", "full_signature": "public File getRootDirectory()", "class_method_signature": "DirectoryResource.getRootDirectory()", "testcase": false, "constructor": false}, {"identifier": "setRootDirectory", "parameters": "(File rootDirectory)", "modifiers": "public", "return": "void", "signature": "void setRootDirectory(File rootDirectory)", "full_signature": "public void setRootDirectory(File rootDirectory)", "class_method_signature": "DirectoryResource.setRootDirectory(File rootDirectory)", "testcase": false, "constructor": false}], "file": "resource/impl/src/main/java/cloud/piranha/resource/DirectoryResource.java"}, "focal_method": {"identifier": "getResource", "parameters": "(String location)", "modifiers": "@Override public", "return": "URL", "body": "@Override\n    public URL getResource(String location) {\n        URL result = null;\n\n        if (location != null) {\n            File file = new File(rootDirectory, location);\n            if (file.exists()) {\n                try {\n                    result = new URL(file.toURI().toString());\n                } catch (MalformedURLException exception) {\n                }\n            }\n        }\n\n        return result;\n    }", "signature": "URL getResource(String location)", "full_signature": "@Override public URL getResource(String location)", "class_method_signature": "DirectoryResource.getResource(String location)", "testcase": false, "constructor": false, "invocations": ["exists", "toString", "toURI"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}