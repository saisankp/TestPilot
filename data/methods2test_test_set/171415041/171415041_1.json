{"test_class": {"identifier": "FileUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "jcodes-core/src/test/java/com/czarea/jcodes/util/FileUtilTest.java"}, "test_case": {"identifier": "testGetFileList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFileList() {\n        List<File> files = FileUtil.getFileList(\"D:\\\\lvji_git\\\\lvji-codes\\\\templates\\\\java\\\\guide\");\n        files.stream().forEach(item -> {\n            System.out.println(\"name is \" + item.getName());\n            String relativePath = FileUtil.getRelativePath(\"D:\\\\lvji_git\\\\lvji-codes\\\\templates\\\\java\\\\guide\", item.getAbsolutePath());\n            if (relativePath.contains(\"\\\\\")) {\n                System.out.println(\"relative path is \" + relativePath.substring(0, relativePath.lastIndexOf(\"\\\\\")));\n            } else {\n                System.out.println(\"relative path is \" + relativePath);\n            }\n        });\n    }", "signature": "void testGetFileList()", "full_signature": "@Test public void testGetFileList()", "class_method_signature": "FileUtilTest.testGetFileList()", "testcase": true, "constructor": false, "invocations": ["getFileList", "forEach", "stream", "println", "getName", "getRelativePath", "getAbsolutePath", "contains", "println", "substring", "lastIndexOf", "println"]}, "focal_class": {"identifier": "FileUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "copyDir", "parameters": "(String sourcePath, String targetPath)", "modifiers": "public static", "return": "void", "signature": "void copyDir(String sourcePath, String targetPath)", "full_signature": "public static void copyDir(String sourcePath, String targetPath)", "class_method_signature": "FileUtil.copyDir(String sourcePath, String targetPath)", "testcase": false, "constructor": false}, {"identifier": "getFileList", "parameters": "(String path)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> getFileList(String path)", "full_signature": "public static List<File> getFileList(String path)", "class_method_signature": "FileUtil.getFileList(String path)", "testcase": false, "constructor": false}, {"identifier": "getRelativePath", "parameters": "(String sourcePath, String targetPath)", "modifiers": "public static", "return": "String", "signature": "String getRelativePath(String sourcePath, String targetPath)", "full_signature": "public static String getRelativePath(String sourcePath, String targetPath)", "class_method_signature": "FileUtil.getRelativePath(String sourcePath, String targetPath)", "testcase": false, "constructor": false}], "file": "jcodes-core/src/main/java/com/czarea/jcodes/util/FileUtil.java"}, "focal_method": {"identifier": "getFileList", "parameters": "(String path)", "modifiers": "public static", "return": "List<File>", "body": "public static List<File> getFileList(String path) {\n        List<File> list = new ArrayList<>();\n        File dir = new File(path);\n        File[] files = dir.listFiles();\n        if (files != null) {\n            for (int i = 0; i < files.length; i++) {\n                if (files[i].isDirectory()) {\n                    list.addAll(getFileList(files[i].getAbsolutePath()));\n                } else {\n                    list.add(files[i]);\n                }\n            }\n        }\n        return list;\n    }", "signature": "List<File> getFileList(String path)", "full_signature": "public static List<File> getFileList(String path)", "class_method_signature": "FileUtil.getFileList(String path)", "testcase": false, "constructor": false, "invocations": ["listFiles", "isDirectory", "addAll", "getFileList", "getAbsolutePath", "add"]}, "repository": {"repo_id": 171415041, "url": "https://github.com/czarea/jcodes", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 10225, "license": "licensed"}}