{"test_class": {"identifier": "RestructureWebrootIndexTest", "superclass": "extends AbstractMeshTest", "interfaces": "", "fields": [], "file": "core/src/test/java/com/gentics/mesh/changelog/highlevel/change/RestructureWebrootIndexTest.java"}, "test_case": {"identifier": "testChange", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testChange() {\n\t\ttx(() -> {\n\t\t\tRestructureWebrootIndex index = new RestructureWebrootIndex(db());\n\t\t\tindex.apply();\n\t\t});\n\t}", "signature": "void testChange()", "full_signature": "@Test public void testChange()", "class_method_signature": "RestructureWebrootIndexTest.testChange()", "testcase": true, "constructor": false, "invocations": ["tx", "db", "apply"]}, "focal_class": {"identifier": "RestructureWebrootIndex", "superclass": "extends AbstractHighLevelChange", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(RestructureWebrootIndex.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(RestructureWebrootIndex.class)", "var_name": "log"}, {"original_string": "private final Database db;", "modifier": "private final", "type": "Database", "declarator": "db", "var_name": "db"}], "methods": [{"identifier": "RestructureWebrootIndex", "parameters": "(Database db)", "modifiers": "@Inject public", "return": "", "signature": " RestructureWebrootIndex(Database db)", "full_signature": "@Inject public  RestructureWebrootIndex(Database db)", "class_method_signature": "RestructureWebrootIndex.RestructureWebrootIndex(Database db)", "testcase": false, "constructor": true}, {"identifier": "getUuid", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUuid()", "full_signature": "@Override public String getUuid()", "class_method_signature": "RestructureWebrootIndex.getUuid()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "RestructureWebrootIndex.getName()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "RestructureWebrootIndex.getDescription()", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void apply()", "full_signature": "@Override public void apply()", "class_method_signature": "RestructureWebrootIndex.apply()", "testcase": false, "constructor": false}, {"identifier": "applyNoTx", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void applyNoTx()", "full_signature": "@Override public void applyNoTx()", "class_method_signature": "RestructureWebrootIndex.applyNoTx()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/gentics/mesh/changelog/highlevel/change/RestructureWebrootIndex.java"}, "focal_method": {"identifier": "apply", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void apply() {\n\t\tNodeDaoWrapper nodeDao = Tx.get().data().nodeDao();\n\t\tContentDaoWrapper contentDao = Tx.get().data().contentDao();\n\n\t\tlog.info(\"Applying change: \" + getName());\n\t\tFramedTransactionalGraph graph = Tx.getActive().getGraph();\n\t\tIterable<? extends GraphFieldContainerEdgeImpl> edges = graph.getFramedEdgesExplicit(\"@class\", HAS_FIELD_CONTAINER,\n\t\t\tGraphFieldContainerEdgeImpl.class);\n\t\tlong count = 0;\n\t\tlong total = 0;\n\t\tfor (GraphFieldContainerEdgeImpl edge : edges) {\n\t\t\tContainerType type = edge.getType();\n\t\t\tif (DRAFT.equals(type) || PUBLISHED.equals(type)) {\n\t\t\t\tString branchUuid = edge.getBranchUuid();\n\t\t\t\tNodeGraphFieldContainer container = edge.getNodeContainer();\n\t\t\t\t// Skip graph inconsistencies\n\t\t\t\tif (container == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tedge.setUrlFieldInfo(contentDao.getUrlFieldValues(container).collect(Collectors.toSet()));\n\t\t\t\tString segment = contentDao.getSegmentFieldValue(container);\n\t\t\t\tif (segment != null && !segment.trim().isEmpty()) {\n\t\t\t\t\tHibNode node = contentDao.getNode(container);\n\t\t\t\t\tif (node != null) {\n\t\t\t\t\t\tnode = nodeDao.getParentNode(node, branchUuid);\n\t\t\t\t\t}\n\t\t\t\t\tString newInfo = GraphFieldContainerEdgeImpl.composeSegmentInfo(node, segment);\n\t\t\t\t\tedge.setSegmentInfo(newInfo);\n\t\t\t\t} else {\n\t\t\t\t\tedge.setSegmentInfo(null);\n\t\t\t\t}\n\t\t\t\tif (count % 100 == 0) {\n\t\t\t\t\tlog.info(\"Updated {\" + count + \"} content edges. Processed {\" + total + \"} edges in total\");\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\n\t\t\tString segment = edge.getSegmentInfo();\n\t\t\tif (segment == null || segment.trim().isEmpty()) {\n\t\t\t\tedge.setSegmentInfo(null);\n\t\t\t}\n\t\t\tif (total % 1000 == 0) {\n\t\t\t\tgraph.commit();\n\t\t\t}\n\t\t\ttotal++;\n\t\t}\n\t\tlog.info(\"Done updating all content edges. Updated: {\" + count + \"} of {\" + total + \"}\");\n\n\t\tIterable<? extends NodeGraphFieldContainerImpl> containers = graph.getFramedVertices(\"@class\",\n\t\t\tNodeGraphFieldContainerImpl.class.getSimpleName(), NodeGraphFieldContainerImpl.class);\n\t\tfor (NodeGraphFieldContainer container : containers) {\n\t\t\tcontainer.getElement().removeProperty(\"publishedWebrootUrlInfo\");\n\t\t\tcontainer.getElement().removeProperty(\"webrootUrlInfo\");\n\t\t\tcontainer.getElement().removeProperty(\"publishedWebrootPathInfo\");\n\t\t\tcontainer.getElement().removeProperty(\"webrootPathInfo\");\n\t\t}\n\n\t}", "signature": "void apply()", "full_signature": "@Override public void apply()", "class_method_signature": "RestructureWebrootIndex.apply()", "testcase": false, "constructor": false, "invocations": ["nodeDao", "data", "get", "contentDao", "data", "get", "info", "getName", "getGraph", "getActive", "getFramedEdgesExplicit", "getType", "equals", "equals", "getBranchUuid", "getNodeContainer", "setUrlFieldInfo", "collect", "getUrlFieldValues", "toSet", "getSegmentFieldValue", "isEmpty", "trim", "getNode", "getParentNode", "composeSegmentInfo", "setSegmentInfo", "setSegmentInfo", "info", "getSegmentInfo", "isEmpty", "trim", "setSegmentInfo", "commit", "info", "getFramedVertices", "getSimpleName", "removeProperty", "getElement", "removeProperty", "getElement", "removeProperty", "getElement", "removeProperty", "getElement"]}, "repository": {"repo_id": 67999496, "url": "https://github.com/gentics/mesh", "stars": 412, "created": "9/12/2016 10:28:41 AM +00:00", "updates": "2020-01-27T10:25:42+00:00", "fork": "False", "license": "licensed"}}