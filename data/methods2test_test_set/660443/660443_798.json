{"test_class": {"identifier": "MMFF94AtomTypeMatcherTest", "superclass": "extends AbstractAtomTypeTest", "interfaces": "", "fields": [{"original_string": "private static ILoggingTool         logger          = LoggingToolFactory\n                                                                .createLoggingTool(MMFF94AtomTypeMatcherTest.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger          = LoggingToolFactory\n                                                                .createLoggingTool(MMFF94AtomTypeMatcherTest.class)", "var_name": "logger"}, {"original_string": "private final IChemObjectBuilder    builder         = DefaultChemObjectBuilder.getInstance();", "modifier": "private final", "type": "IChemObjectBuilder", "declarator": "builder         = DefaultChemObjectBuilder.getInstance()", "var_name": "builder"}, {"original_string": "private static IAtomContainer       testMolecule    = null;", "modifier": "private static", "type": "IAtomContainer", "declarator": "testMolecule    = null", "var_name": "testMolecule"}, {"original_string": "private static Map<String, Integer> testedAtomTypes = new HashMap<String, Integer>();", "modifier": "private static", "type": "Map<String, Integer>", "declarator": "testedAtomTypes = new HashMap<String, Integer>()", "var_name": "testedAtomTypes"}], "file": "legacy/src/test/java/org/openscience/cdk/atomtype/MMFF94AtomTypeMatcherTest.java"}, "test_case": {"identifier": "testMMFF94AtomTypeMatcher", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMMFF94AtomTypeMatcher() throws Exception {\n        MMFF94AtomTypeMatcher matcher = new MMFF94AtomTypeMatcher();\n        Assert.assertNotNull(matcher);\n\n    }", "signature": "void testMMFF94AtomTypeMatcher()", "full_signature": "@Test public void testMMFF94AtomTypeMatcher()", "class_method_signature": "MMFF94AtomTypeMatcherTest.testMMFF94AtomTypeMatcher()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "MMFF94AtomTypeMatcher", "superclass": "", "interfaces": "implements IAtomTypeMatcher", "fields": [{"original_string": "private static ILoggingTool logger        = LoggingToolFactory.createLoggingTool(MMFF94AtomTypeMatcher.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger        = LoggingToolFactory.createLoggingTool(MMFF94AtomTypeMatcher.class)", "var_name": "logger"}, {"original_string": "IBond.Order                 maxBondOrder  = IBond.Order.SINGLE;", "modifier": "", "type": "IBond.Order", "declarator": "maxBondOrder  = IBond.Order.SINGLE", "var_name": "maxBondOrder"}, {"original_string": "private AtomTypeFactory     factory       = null;", "modifier": "private", "type": "AtomTypeFactory", "declarator": "factory       = null", "var_name": "factory"}, {"original_string": "AtomTypeTools               atomTypeTools = null;", "modifier": "", "type": "AtomTypeTools", "declarator": "atomTypeTools = null", "var_name": "atomTypeTools"}, {"original_string": "String[]                    atomTypeIds   = {\"C\", \"Csp2\", \"C=\", \"Csp\", \"CO2M\", \"CNN+\", \"C%\", \"CIM+\", \"CR4R\",\n            \"CR3R\", \"CE4R\", \"Car\", \"C5A\", \"C5B\", \"C5\", \"HC\", \"HO\", \"HN\", \"HOCO\", \"HN=C\", \"HN2\", \"HOCC\", \"HOH\", \"HOS\",\n            \"HN+\", \"HO+\", \"HO=+\", \"HP\", \"O\", \"O=\", \"OX\", \"OM\", \"O+\", \"O=+\", \"OH2\", \"Oar\", \"N\", \"N=C\", \"NC=C\", \"NSP\",\n            \"=N=\", \"NAZT\", \"N+\", \"N2OX\", \"N3OX\", \"NC#N\", \"NO3\", \"N=O\", \"NC=O\", \"NSO\", \"N+=\", \"NCN+\", \"NGD+\", \"NR%\",\n            \"NM\", \"N5M\", \"NPYD\", \"NPYL\", \"NPD+\", \"N5A\", \"N5B\", \"NPOX\", \"N5OX\", \"N5+\", \"N5\", \"S\", \"S=C\", \">SN\", \"SO2\",\n            \"SX\", \"SO2M\", \"=SO\", \"Sthi\", \"PTET\", \"P\", \"-P=C\", \"F\", \"CL\", \"BR\", \"I\", \"SI\", \"CL04\", \"FE+2\", \"FE+3\", \"F-\",\n            \"CL-\", \"BR-\", \"LI+\", \"NA+\", \"K+\", \"ZN+2\", \"CA+2\", \"CU+1\", \"CU+2\", \"MG+2\", \"DU\"};", "modifier": "", "type": "String[]", "declarator": "atomTypeIds   = {\"C\", \"Csp2\", \"C=\", \"Csp\", \"CO2M\", \"CNN+\", \"C%\", \"CIM+\", \"CR4R\",\n            \"CR3R\", \"CE4R\", \"Car\", \"C5A\", \"C5B\", \"C5\", \"HC\", \"HO\", \"HN\", \"HOCO\", \"HN=C\", \"HN2\", \"HOCC\", \"HOH\", \"HOS\",\n            \"HN+\", \"HO+\", \"HO=+\", \"HP\", \"O\", \"O=\", \"OX\", \"OM\", \"O+\", \"O=+\", \"OH2\", \"Oar\", \"N\", \"N=C\", \"NC=C\", \"NSP\",\n            \"=N=\", \"NAZT\", \"N+\", \"N2OX\", \"N3OX\", \"NC#N\", \"NO3\", \"N=O\", \"NC=O\", \"NSO\", \"N+=\", \"NCN+\", \"NGD+\", \"NR%\",\n            \"NM\", \"N5M\", \"NPYD\", \"NPYL\", \"NPD+\", \"N5A\", \"N5B\", \"NPOX\", \"N5OX\", \"N5+\", \"N5\", \"S\", \"S=C\", \">SN\", \"SO2\",\n            \"SX\", \"SO2M\", \"=SO\", \"Sthi\", \"PTET\", \"P\", \"-P=C\", \"F\", \"CL\", \"BR\", \"I\", \"SI\", \"CL04\", \"FE+2\", \"FE+3\", \"F-\",\n            \"CL-\", \"BR-\", \"LI+\", \"NA+\", \"K+\", \"ZN+2\", \"CA+2\", \"CU+1\", \"CU+2\", \"MG+2\", \"DU\"}", "var_name": "atomTypeIds"}], "methods": [{"identifier": "MMFF94AtomTypeMatcher", "parameters": "()", "modifiers": "public", "return": "", "signature": " MMFF94AtomTypeMatcher()", "full_signature": "public  MMFF94AtomTypeMatcher()", "class_method_signature": "MMFF94AtomTypeMatcher.MMFF94AtomTypeMatcher()", "testcase": false, "constructor": true}, {"identifier": "getSphericalMatcher", "parameters": "(IAtomType type)", "modifiers": "private", "return": "String", "signature": "String getSphericalMatcher(IAtomType type)", "full_signature": "private String getSphericalMatcher(IAtomType type)", "class_method_signature": "MMFF94AtomTypeMatcher.getSphericalMatcher(IAtomType type)", "testcase": false, "constructor": false}, {"identifier": "getSphericalMatcher", "parameters": "(String type)", "modifiers": "private", "return": "String", "signature": "String getSphericalMatcher(String type)", "full_signature": "private String getSphericalMatcher(String type)", "class_method_signature": "MMFF94AtomTypeMatcher.getSphericalMatcher(String type)", "testcase": false, "constructor": false}, {"identifier": "findMatchingAtomTypes", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "IAtomType[]", "signature": "IAtomType[] findMatchingAtomTypes(IAtomContainer atomContainer)", "full_signature": "@Override public IAtomType[] findMatchingAtomTypes(IAtomContainer atomContainer)", "class_method_signature": "MMFF94AtomTypeMatcher.findMatchingAtomTypes(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "findMatchingAtomType", "parameters": "(IAtomContainer atomContainer, IAtom atomInterface)", "modifiers": "@Override public", "return": "IAtomType", "signature": "IAtomType findMatchingAtomType(IAtomContainer atomContainer, IAtom atomInterface)", "full_signature": "@Override public IAtomType findMatchingAtomType(IAtomContainer atomContainer, IAtom atomInterface)", "class_method_signature": "MMFF94AtomTypeMatcher.findMatchingAtomType(IAtomContainer atomContainer, IAtom atomInterface)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/atomtype/MMFF94AtomTypeMatcher.java"}, "focal_method": {"identifier": "MMFF94AtomTypeMatcher", "parameters": "()", "modifiers": "public", "return": "", "body": "public MMFF94AtomTypeMatcher() {\n        atomTypeTools = new AtomTypeTools();\n    }", "signature": " MMFF94AtomTypeMatcher()", "full_signature": "public  MMFF94AtomTypeMatcher()", "class_method_signature": "MMFF94AtomTypeMatcher.MMFF94AtomTypeMatcher()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}