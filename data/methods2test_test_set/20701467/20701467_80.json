{"test_class": {"identifier": "HexEncodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "packethandler/implementation/src/test/java/org/opendaylight/l2switch/packethandler/decoders/utils/HexEncodeTest.java"}, "test_case": {"identifier": "testBytesFromHexString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBytesFromHexString() {\n        String byteStr1 = \"00:11:22:33:44:55\";\n        byte[] byteArray1 = new byte[(byteStr1.length() + 1) / 3];\n        byteArray1 = HexEncode.bytesFromHexString(byteStr1);\n\n        Assert.assertTrue(byteArray1[0] == (byte) 0x0);\n        Assert.assertTrue(byteArray1[1] == (byte) 0x11);\n        Assert.assertTrue(byteArray1[2] == (byte) 0x22);\n        Assert.assertTrue(byteArray1[3] == (byte) 0x33);\n        Assert.assertTrue(byteArray1[4] == (byte) 0x44);\n        Assert.assertTrue(byteArray1[5] == (byte) 0x55);\n\n        String byteStr2 = \"00:11:22:33:44:55\";\n        byte[] byteArray2 = new byte[(byteStr2.length() + 1) / 3];\n        byteArray2 = HexEncode.bytesFromHexString(byteStr2);\n\n        Assert.assertFalse(byteArray2[0] == (byte) 0x55);\n        Assert.assertFalse(byteArray2[1] == (byte) 0x44);\n        Assert.assertFalse(byteArray2[2] == (byte) 0x33);\n        Assert.assertFalse(byteArray2[3] == (byte) 0x22);\n        Assert.assertFalse(byteArray2[4] == (byte) 0x11);\n        Assert.assertFalse(byteArray2[5] == (byte) 0x0);\n\n    }", "signature": "void testBytesFromHexString()", "full_signature": "@Test public void testBytesFromHexString()", "class_method_signature": "HexEncodeTest.testBytesFromHexString()", "testcase": true, "constructor": false, "invocations": ["length", "bytesFromHexString", "assertTrue", "assertTrue", "assertTrue", "assertTrue", "assertTrue", "assertTrue", "length", "bytesFromHexString", "assertFalse", "assertFalse", "assertFalse", "assertFalse", "assertFalse", "assertFalse"]}, "focal_class": {"identifier": "HexEncode", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "HexEncode", "parameters": "()", "modifiers": "private", "return": "", "signature": " HexEncode()", "full_signature": "private  HexEncode()", "class_method_signature": "HexEncode.HexEncode()", "testcase": false, "constructor": true}, {"identifier": "bytesToHexString", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHexString(byte[] bytes)", "full_signature": "public static String bytesToHexString(byte[] bytes)", "class_method_signature": "HexEncode.bytesToHexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "longToHexString", "parameters": "(long val)", "modifiers": "public static", "return": "String", "signature": "String longToHexString(long val)", "full_signature": "public static String longToHexString(long val)", "class_method_signature": "HexEncode.longToHexString(long val)", "testcase": false, "constructor": false}, {"identifier": "bytesFromHexString", "parameters": "(String values)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] bytesFromHexString(String values)", "full_signature": "public static byte[] bytesFromHexString(String values)", "class_method_signature": "HexEncode.bytesFromHexString(String values)", "testcase": false, "constructor": false}, {"identifier": "stringToLong", "parameters": "(String values)", "modifiers": "public static", "return": "long", "signature": "long stringToLong(String values)", "full_signature": "public static long stringToLong(String values)", "class_method_signature": "HexEncode.stringToLong(String values)", "testcase": false, "constructor": false}, {"identifier": "bytesToHexStringFormat", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHexStringFormat(byte[] bytes)", "full_signature": "public static String bytesToHexStringFormat(byte[] bytes)", "class_method_signature": "HexEncode.bytesToHexStringFormat(byte[] bytes)", "testcase": false, "constructor": false}], "file": "packethandler/implementation/src/main/java/org/opendaylight/l2switch/packethandler/decoders/utils/HexEncode.java"}, "focal_method": {"identifier": "bytesFromHexString", "parameters": "(String values)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] bytesFromHexString(String values) {\n        String target = \"\";\n        if (values != null) {\n            target = values;\n        }\n        String[] octets = target.split(\":\");\n\n        byte[] ret = new byte[octets.length];\n        for (int i = 0; i < octets.length; i++) {\n            ret[i] = Integer.valueOf(octets[i], 16).byteValue();\n        }\n        return ret;\n    }", "signature": "byte[] bytesFromHexString(String values)", "full_signature": "public static byte[] bytesFromHexString(String values)", "class_method_signature": "HexEncode.bytesFromHexString(String values)", "testcase": false, "constructor": false, "invocations": ["split", "byteValue", "valueOf"]}, "repository": {"repo_id": 20701467, "url": "https://github.com/opendaylight/l2switch", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 25, "size": 4178, "license": "licensed"}}