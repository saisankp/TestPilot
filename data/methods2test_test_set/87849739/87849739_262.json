{"test_class": {"identifier": "ConnectivityCounterRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ConnectivityCounterRegistry COUNTER_REGISTRY =\n            ConnectivityCounterRegistry.fromConfig(TestConstants.MONITORING_CONFIG.counter());", "modifier": "private static final", "type": "ConnectivityCounterRegistry", "declarator": "COUNTER_REGISTRY =\n            ConnectivityCounterRegistry.fromConfig(TestConstants.MONITORING_CONFIG.counter())", "var_name": "COUNTER_REGISTRY"}, {"original_string": "private static final ConnectionId CONNECTION_ID = TestConstants.createRandomConnectionId();", "modifier": "private static final", "type": "ConnectionId", "declarator": "CONNECTION_ID = TestConstants.createRandomConnectionId()", "var_name": "CONNECTION_ID"}, {"original_string": "private static final String SOURCE = \"source1\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE = \"source1\"", "var_name": "SOURCE"}, {"original_string": "private static final String TARGET = \"target1\";", "modifier": "private static final", "type": "String", "declarator": "TARGET = \"target1\"", "var_name": "TARGET"}, {"original_string": "private static final Instant FIXED_INSTANT = Instant.now().truncatedTo(ChronoUnit.MILLIS);", "modifier": "private static final", "type": "Instant", "declarator": "FIXED_INSTANT = Instant.now().truncatedTo(ChronoUnit.MILLIS)", "var_name": "FIXED_INSTANT"}, {"original_string": "private static final Clock FIXED_CLOCK = Clock.fixed(FIXED_INSTANT, ZoneId.systemDefault());", "modifier": "private static final", "type": "Clock", "declarator": "FIXED_CLOCK = Clock.fixed(FIXED_INSTANT, ZoneId.systemDefault())", "var_name": "FIXED_CLOCK"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/metrics/ConnectivityCounterRegistryTest.java"}, "test_case": {"identifier": "testAggregateTargetMetrics", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAggregateTargetMetrics() {\n\n        final TargetMetrics targetMetrics = COUNTER_REGISTRY.aggregateTargetMetrics(CONNECTION_ID);\n\n        final Measurement[] expected = {\n                getMeasurement(MAPPED, true),\n                getMeasurement(MAPPED, false),\n                getMeasurement(DISPATCHED, true),\n                getMeasurement(DISPATCHED, false),\n                getMeasurement(FILTERED, true),\n                getMeasurement(FILTERED, false),\n                getMeasurement(PUBLISHED, true),\n                getMeasurement(PUBLISHED, false)\n        };\n\n        assertThat(targetMetrics.getAddressMetrics().get(TARGET).getMeasurements()).containsExactlyInAnyOrder(expected);\n\n    }", "signature": "void testAggregateTargetMetrics()", "full_signature": "@Test public void testAggregateTargetMetrics()", "class_method_signature": "ConnectivityCounterRegistryTest.testAggregateTargetMetrics()", "testcase": true, "constructor": false, "invocations": ["aggregateTargetMetrics", "getMeasurement", "getMeasurement", "getMeasurement", "getMeasurement", "getMeasurement", "getMeasurement", "getMeasurement", "getMeasurement", "containsExactlyInAnyOrder", "assertThat", "getMeasurements", "get", "getAddressMetrics"]}, "focal_class": {"identifier": "ConnectivityCounterRegistry", "superclass": "", "interfaces": "implements ConnectionMonitorRegistry<ConnectionMetricsCounter>", "fields": [{"original_string": "private static final ConcurrentMap<MapKey, DefaultConnectionMetricsCounter> counters = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "ConcurrentMap<MapKey, DefaultConnectionMetricsCounter>", "declarator": "counters = new ConcurrentHashMap<>()", "var_name": "counters"}, {"original_string": "private static final MeasurementWindow[] DEFAULT_WINDOWS = {ONE_MINUTE, ONE_HOUR, ONE_DAY};", "modifier": "private static final", "type": "MeasurementWindow[]", "declarator": "DEFAULT_WINDOWS = {ONE_MINUTE, ONE_HOUR, ONE_DAY}", "var_name": "DEFAULT_WINDOWS"}, {"original_string": "private static final String RESPONSES_ADDRESS = \"_responses\";", "modifier": "private static final", "type": "String", "declarator": "RESPONSES_ADDRESS = \"_responses\"", "var_name": "RESPONSES_ADDRESS"}, {"original_string": "private static final Clock CLOCK_UTC = Clock.systemUTC();", "modifier": "private static final", "type": "Clock", "declarator": "CLOCK_UTC = Clock.systemUTC()", "var_name": "CLOCK_UTC"}], "methods": [{"identifier": "ConnectivityCounterRegistry", "parameters": "()", "modifiers": "private", "return": "", "signature": " ConnectivityCounterRegistry()", "full_signature": "private  ConnectivityCounterRegistry()", "class_method_signature": "ConnectivityCounterRegistry.ConnectivityCounterRegistry()", "testcase": false, "constructor": true}, {"identifier": "fromConfig", "parameters": "(final MonitoringCounterConfig config)", "modifiers": "public static", "return": "ConnectivityCounterRegistry", "signature": "ConnectivityCounterRegistry fromConfig(final MonitoringCounterConfig config)", "full_signature": "public static ConnectivityCounterRegistry fromConfig(final MonitoringCounterConfig config)", "class_method_signature": "ConnectivityCounterRegistry.fromConfig(final MonitoringCounterConfig config)", "testcase": false, "constructor": false}, {"identifier": "initForConnection", "parameters": "(final Connection connection)", "modifiers": "@Override public", "return": "void", "signature": "void initForConnection(final Connection connection)", "full_signature": "@Override public void initForConnection(final Connection connection)", "class_method_signature": "ConnectivityCounterRegistry.initForConnection(final Connection connection)", "testcase": false, "constructor": false}, {"identifier": "resetForConnection", "parameters": "(final Connection connection)", "modifiers": "@Override public", "return": "void", "signature": "void resetForConnection(final Connection connection)", "full_signature": "@Override public void resetForConnection(final Connection connection)", "class_method_signature": "ConnectivityCounterRegistry.resetForConnection(final Connection connection)", "testcase": false, "constructor": false}, {"identifier": "initCounter", "parameters": "(final ConnectionId connectionId, final MetricDirection metricDirection,\n            final String address)", "modifiers": "private static", "return": "void", "signature": "void initCounter(final ConnectionId connectionId, final MetricDirection metricDirection,\n            final String address)", "full_signature": "private static void initCounter(final ConnectionId connectionId, final MetricDirection metricDirection,\n            final String address)", "class_method_signature": "ConnectivityCounterRegistry.initCounter(final ConnectionId connectionId, final MetricDirection metricDirection,\n            final String address)", "testcase": false, "constructor": false}, {"identifier": "getCounter", "parameters": "(\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final MetricDirection metricDirection,\n            final String address)", "modifiers": "public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter getCounter(\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final MetricDirection metricDirection,\n            final String address)", "full_signature": "public ConnectionMetricsCounter getCounter(\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final MetricDirection metricDirection,\n            final String address)", "class_method_signature": "ConnectivityCounterRegistry.getCounter(\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final MetricDirection metricDirection,\n            final String address)", "testcase": false, "constructor": false}, {"identifier": "getCounter", "parameters": "(\n            final Clock clock,\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final MetricDirection metricDirection,\n            final String address)", "modifiers": "", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter getCounter(\n            final Clock clock,\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final MetricDirection metricDirection,\n            final String address)", "full_signature": " ConnectionMetricsCounter getCounter(\n            final Clock clock,\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final MetricDirection metricDirection,\n            final String address)", "class_method_signature": "ConnectivityCounterRegistry.getCounter(\n            final Clock clock,\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final MetricDirection metricDirection,\n            final String address)", "testcase": false, "constructor": false}, {"identifier": "forOutboundDispatched", "parameters": "(final ConnectionId connectionId, final String target)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forOutboundDispatched(final ConnectionId connectionId, final String target)", "full_signature": "@Override public ConnectionMetricsCounter forOutboundDispatched(final ConnectionId connectionId, final String target)", "class_method_signature": "ConnectivityCounterRegistry.forOutboundDispatched(final ConnectionId connectionId, final String target)", "testcase": false, "constructor": false}, {"identifier": "forOutboundAcknowledged", "parameters": "(final ConnectionId connectionId, final String target)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forOutboundAcknowledged(final ConnectionId connectionId, final String target)", "full_signature": "@Override public ConnectionMetricsCounter forOutboundAcknowledged(final ConnectionId connectionId, final String target)", "class_method_signature": "ConnectivityCounterRegistry.forOutboundAcknowledged(final ConnectionId connectionId, final String target)", "testcase": false, "constructor": false}, {"identifier": "forOutboundFiltered", "parameters": "(final ConnectionId connectionId, final String target)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forOutboundFiltered(final ConnectionId connectionId, final String target)", "full_signature": "@Override public ConnectionMetricsCounter forOutboundFiltered(final ConnectionId connectionId, final String target)", "class_method_signature": "ConnectivityCounterRegistry.forOutboundFiltered(final ConnectionId connectionId, final String target)", "testcase": false, "constructor": false}, {"identifier": "forOutboundPublished", "parameters": "(final ConnectionId connectionId, final String target)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forOutboundPublished(final ConnectionId connectionId, final String target)", "full_signature": "@Override public ConnectionMetricsCounter forOutboundPublished(final ConnectionId connectionId, final String target)", "class_method_signature": "ConnectivityCounterRegistry.forOutboundPublished(final ConnectionId connectionId, final String target)", "testcase": false, "constructor": false}, {"identifier": "forInboundConsumed", "parameters": "(final ConnectionId connectionId, final String source)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forInboundConsumed(final ConnectionId connectionId, final String source)", "full_signature": "@Override public ConnectionMetricsCounter forInboundConsumed(final ConnectionId connectionId, final String source)", "class_method_signature": "ConnectivityCounterRegistry.forInboundConsumed(final ConnectionId connectionId, final String source)", "testcase": false, "constructor": false}, {"identifier": "forInboundAcknowledged", "parameters": "(final ConnectionId connectionId, final String source)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forInboundAcknowledged(final ConnectionId connectionId, final String source)", "full_signature": "@Override public ConnectionMetricsCounter forInboundAcknowledged(final ConnectionId connectionId, final String source)", "class_method_signature": "ConnectivityCounterRegistry.forInboundAcknowledged(final ConnectionId connectionId, final String source)", "testcase": false, "constructor": false}, {"identifier": "forInboundMapped", "parameters": "(final ConnectionId connectionId, final String source)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forInboundMapped(final ConnectionId connectionId, final String source)", "full_signature": "@Override public ConnectionMetricsCounter forInboundMapped(final ConnectionId connectionId, final String source)", "class_method_signature": "ConnectivityCounterRegistry.forInboundMapped(final ConnectionId connectionId, final String source)", "testcase": false, "constructor": false}, {"identifier": "forInboundEnforced", "parameters": "(final ConnectionId connectionId, final String source)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forInboundEnforced(final ConnectionId connectionId, final String source)", "full_signature": "@Override public ConnectionMetricsCounter forInboundEnforced(final ConnectionId connectionId, final String source)", "class_method_signature": "ConnectivityCounterRegistry.forInboundEnforced(final ConnectionId connectionId, final String source)", "testcase": false, "constructor": false}, {"identifier": "forInboundDropped", "parameters": "(final ConnectionId connectionId, final String source)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forInboundDropped(final ConnectionId connectionId, final String source)", "full_signature": "@Override public ConnectionMetricsCounter forInboundDropped(final ConnectionId connectionId, final String source)", "class_method_signature": "ConnectivityCounterRegistry.forInboundDropped(final ConnectionId connectionId, final String source)", "testcase": false, "constructor": false}, {"identifier": "forResponseDispatched", "parameters": "(final ConnectionId connectionId)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forResponseDispatched(final ConnectionId connectionId)", "full_signature": "@Override public ConnectionMetricsCounter forResponseDispatched(final ConnectionId connectionId)", "class_method_signature": "ConnectivityCounterRegistry.forResponseDispatched(final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "forResponseDropped", "parameters": "(final ConnectionId connectionId)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forResponseDropped(final ConnectionId connectionId)", "full_signature": "@Override public ConnectionMetricsCounter forResponseDropped(final ConnectionId connectionId)", "class_method_signature": "ConnectivityCounterRegistry.forResponseDropped(final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "forResponseMapped", "parameters": "(final ConnectionId connectionId)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forResponseMapped(final ConnectionId connectionId)", "full_signature": "@Override public ConnectionMetricsCounter forResponseMapped(final ConnectionId connectionId)", "class_method_signature": "ConnectivityCounterRegistry.forResponseMapped(final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "forResponsePublished", "parameters": "(final ConnectionId connectionId)", "modifiers": "@Override public", "return": "ConnectionMetricsCounter", "signature": "ConnectionMetricsCounter forResponsePublished(final ConnectionId connectionId)", "full_signature": "@Override public ConnectionMetricsCounter forResponsePublished(final ConnectionId connectionId)", "class_method_signature": "ConnectivityCounterRegistry.forResponsePublished(final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "streamFor", "parameters": "(final ConnectionId connectionId,\n            final MetricDirection metricDirection)", "modifiers": "private static", "return": "Stream<DefaultConnectionMetricsCounter>", "signature": "Stream<DefaultConnectionMetricsCounter> streamFor(final ConnectionId connectionId,\n            final MetricDirection metricDirection)", "full_signature": "private static Stream<DefaultConnectionMetricsCounter> streamFor(final ConnectionId connectionId,\n            final MetricDirection metricDirection)", "class_method_signature": "ConnectivityCounterRegistry.streamFor(final ConnectionId connectionId,\n            final MetricDirection metricDirection)", "testcase": false, "constructor": false}, {"identifier": "aggregateMetrics", "parameters": "(final ConnectionId connectionId,\n            final MetricDirection metricDirection)", "modifiers": "private static", "return": "Map<String, AddressMetric>", "signature": "Map<String, AddressMetric> aggregateMetrics(final ConnectionId connectionId,\n            final MetricDirection metricDirection)", "full_signature": "private static Map<String, AddressMetric> aggregateMetrics(final ConnectionId connectionId,\n            final MetricDirection metricDirection)", "class_method_signature": "ConnectivityCounterRegistry.aggregateMetrics(final ConnectionId connectionId,\n            final MetricDirection metricDirection)", "testcase": false, "constructor": false}, {"identifier": "aggregateSourceMetrics", "parameters": "(final ConnectionId connectionId)", "modifiers": "public", "return": "SourceMetrics", "signature": "SourceMetrics aggregateSourceMetrics(final ConnectionId connectionId)", "full_signature": "public SourceMetrics aggregateSourceMetrics(final ConnectionId connectionId)", "class_method_signature": "ConnectivityCounterRegistry.aggregateSourceMetrics(final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "aggregateTargetMetrics", "parameters": "(final ConnectionId connectionId)", "modifiers": "public", "return": "TargetMetrics", "signature": "TargetMetrics aggregateTargetMetrics(final ConnectionId connectionId)", "full_signature": "public TargetMetrics aggregateTargetMetrics(final ConnectionId connectionId)", "class_method_signature": "ConnectivityCounterRegistry.aggregateTargetMetrics(final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "mergeRetrieveConnectionMetricsResponse", "parameters": "(\n            final RetrieveConnectionMetricsResponse first,\n            final RetrieveConnectionMetricsResponse second)", "modifiers": "public static", "return": "RetrieveConnectionMetricsResponse", "signature": "RetrieveConnectionMetricsResponse mergeRetrieveConnectionMetricsResponse(\n            final RetrieveConnectionMetricsResponse first,\n            final RetrieveConnectionMetricsResponse second)", "full_signature": "public static RetrieveConnectionMetricsResponse mergeRetrieveConnectionMetricsResponse(\n            final RetrieveConnectionMetricsResponse first,\n            final RetrieveConnectionMetricsResponse second)", "class_method_signature": "ConnectivityCounterRegistry.mergeRetrieveConnectionMetricsResponse(\n            final RetrieveConnectionMetricsResponse first,\n            final RetrieveConnectionMetricsResponse second)", "testcase": false, "constructor": false}, {"identifier": "aggregateConnectionMetrics", "parameters": "(\n            final SourceMetrics sourceMetrics, final TargetMetrics targetMetrics)", "modifiers": "public", "return": "ConnectionMetrics", "signature": "ConnectionMetrics aggregateConnectionMetrics(\n            final SourceMetrics sourceMetrics, final TargetMetrics targetMetrics)", "full_signature": "public ConnectionMetrics aggregateConnectionMetrics(\n            final SourceMetrics sourceMetrics, final TargetMetrics targetMetrics)", "class_method_signature": "ConnectivityCounterRegistry.aggregateConnectionMetrics(\n            final SourceMetrics sourceMetrics, final TargetMetrics targetMetrics)", "testcase": false, "constructor": false}, {"identifier": "mergeAllMetrics", "parameters": "(final Collection<AddressMetric> metrics)", "modifiers": "private static", "return": "AddressMetric", "signature": "AddressMetric mergeAllMetrics(final Collection<AddressMetric> metrics)", "full_signature": "private static AddressMetric mergeAllMetrics(final Collection<AddressMetric> metrics)", "class_method_signature": "ConnectivityCounterRegistry.mergeAllMetrics(final Collection<AddressMetric> metrics)", "testcase": false, "constructor": false}, {"identifier": "mergeAddressMetric", "parameters": "(final AddressMetric first, final AddressMetric second)", "modifiers": "public static", "return": "AddressMetric", "signature": "AddressMetric mergeAddressMetric(final AddressMetric first, final AddressMetric second)", "full_signature": "public static AddressMetric mergeAddressMetric(final AddressMetric first, final AddressMetric second)", "class_method_signature": "ConnectivityCounterRegistry.mergeAddressMetric(final AddressMetric first, final AddressMetric second)", "testcase": false, "constructor": false}, {"identifier": "mergeAddressMetricMap", "parameters": "(final Map<String, AddressMetric> first,\n            final Map<String, AddressMetric> second)", "modifiers": "public static", "return": "Map<String, AddressMetric>", "signature": "Map<String, AddressMetric> mergeAddressMetricMap(final Map<String, AddressMetric> first,\n            final Map<String, AddressMetric> second)", "full_signature": "public static Map<String, AddressMetric> mergeAddressMetricMap(final Map<String, AddressMetric> first,\n            final Map<String, AddressMetric> second)", "class_method_signature": "ConnectivityCounterRegistry.mergeAddressMetricMap(final Map<String, AddressMetric> first,\n            final Map<String, AddressMetric> second)", "testcase": false, "constructor": false}, {"identifier": "asMap", "parameters": "(final AddressMetric a)", "modifiers": "private static", "return": "Map<String, Measurement>", "signature": "Map<String, Measurement> asMap(final AddressMetric a)", "full_signature": "private static Map<String, Measurement> asMap(final AddressMetric a)", "class_method_signature": "ConnectivityCounterRegistry.asMap(final AddressMetric a)", "testcase": false, "constructor": false}, {"identifier": "mergeMeasurements", "parameters": "(final Map<Duration, Long> measurementA,\n            final Map<Duration, Long> measurementB)", "modifiers": "private static", "return": "Map<Duration, Long>", "signature": "Map<Duration, Long> mergeMeasurements(final Map<Duration, Long> measurementA,\n            final Map<Duration, Long> measurementB)", "full_signature": "private static Map<Duration, Long> mergeMeasurements(final Map<Duration, Long> measurementA,\n            final Map<Duration, Long> measurementB)", "class_method_signature": "ConnectivityCounterRegistry.mergeMeasurements(final Map<Duration, Long> measurementA,\n            final Map<Duration, Long> measurementB)", "testcase": false, "constructor": false}, {"identifier": "latest", "parameters": "(@Nullable final Instant instantA, @Nullable final Instant instantB)", "modifiers": "@Nullable private static", "return": "Instant", "signature": "Instant latest(@Nullable final Instant instantA, @Nullable final Instant instantB)", "full_signature": "@Nullable private static Instant latest(@Nullable final Instant instantA, @Nullable final Instant instantB)", "class_method_signature": "ConnectivityCounterRegistry.latest(@Nullable final Instant instantA, @Nullable final Instant instantB)", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/metrics/ConnectivityCounterRegistry.java"}, "focal_method": {"identifier": "aggregateTargetMetrics", "parameters": "(final ConnectionId connectionId)", "modifiers": "public", "return": "TargetMetrics", "body": "public TargetMetrics aggregateTargetMetrics(final ConnectionId connectionId) {\n        return ConnectivityModelFactory.newTargetMetrics(aggregateMetrics(connectionId, MetricDirection.OUTBOUND));\n    }", "signature": "TargetMetrics aggregateTargetMetrics(final ConnectionId connectionId)", "full_signature": "public TargetMetrics aggregateTargetMetrics(final ConnectionId connectionId)", "class_method_signature": "ConnectivityCounterRegistry.aggregateTargetMetrics(final ConnectionId connectionId)", "testcase": false, "constructor": false, "invocations": ["newTargetMetrics", "aggregateMetrics"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}