{"test_class": {"identifier": "CoinURITest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CoinURI testObject = null;", "modifier": "private", "type": "CoinURI", "declarator": "testObject = null", "var_name": "testObject"}, {"original_string": "final CoinType BTC = BitcoinMain.get();", "modifier": "final", "type": "CoinType", "declarator": "BTC = BitcoinMain.get()", "var_name": "BTC"}, {"original_string": "final CoinType BTC_TEST = BitcoinTest.get();", "modifier": "final", "type": "CoinType", "declarator": "BTC_TEST = BitcoinTest.get()", "var_name": "BTC_TEST"}, {"original_string": "final CoinType LTC = LitecoinMain.get();", "modifier": "final", "type": "CoinType", "declarator": "LTC = LitecoinMain.get()", "var_name": "LTC"}, {"original_string": "final CoinType DOGE = DogecoinMain.get();", "modifier": "final", "type": "CoinType", "declarator": "DOGE = DogecoinMain.get()", "var_name": "DOGE"}, {"original_string": "final CoinType PPC = PeercoinMain.get();", "modifier": "final", "type": "CoinType", "declarator": "PPC = PeercoinMain.get()", "var_name": "PPC"}, {"original_string": "final CoinType DASH = DashMain.get();", "modifier": "final", "type": "CoinType", "declarator": "DASH = DashMain.get()", "var_name": "DASH"}, {"original_string": "final CoinType NBT = NuBitsMain.get();", "modifier": "final", "type": "CoinType", "declarator": "NBT = NuBitsMain.get()", "var_name": "NBT"}, {"original_string": "final CoinType NSR = NuSharesMain.get();", "modifier": "final", "type": "CoinType", "declarator": "NSR = NuSharesMain.get()", "var_name": "NSR"}, {"original_string": "final CoinType NXT = NxtMain.get();", "modifier": "final", "type": "CoinType", "declarator": "NXT = NxtMain.get()", "var_name": "NXT"}, {"original_string": "private static final String MAINNET_GOOD_ADDRESS = \"1KzTSfqjF2iKCduwz59nv2uqh1W2JsTxZH\";", "modifier": "private static final", "type": "String", "declarator": "MAINNET_GOOD_ADDRESS = \"1KzTSfqjF2iKCduwz59nv2uqh1W2JsTxZH\"", "var_name": "MAINNET_GOOD_ADDRESS"}], "file": "core/src/test/java/com/coinomi/core/uri/CoinURITest.java"}, "test_case": {"identifier": "testEmpty_Label", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmpty_Label() throws CoinURIParseException {\n        assertNull(new CoinURI(BitcoinMain.get(), BitcoinMain.get().getUriScheme() + \":\" + MAINNET_GOOD_ADDRESS\n                + \"?label=\").getLabel());\n    }", "signature": "void testEmpty_Label()", "full_signature": "@Test public void testEmpty_Label()", "class_method_signature": "CoinURITest.testEmpty_Label()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getLabel", "get", "getUriScheme", "get"]}, "focal_class": {"identifier": "CoinURI", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(CoinURI.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(CoinURI.class)", "var_name": "log"}, {"original_string": "public static final String FIELD_MESSAGE = \"message\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_MESSAGE = \"message\"", "var_name": "FIELD_MESSAGE"}, {"original_string": "public static final String FIELD_LABEL = \"label\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_LABEL = \"label\"", "var_name": "FIELD_LABEL"}, {"original_string": "public static final String FIELD_AMOUNT = \"amount\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_AMOUNT = \"amount\"", "var_name": "FIELD_AMOUNT"}, {"original_string": "public static final String FIELD_ADDRESS = \"address\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_ADDRESS = \"address\"", "var_name": "FIELD_ADDRESS"}, {"original_string": "public static final String FIELD_PAYMENT_REQUEST_URL = \"r\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_PAYMENT_REQUEST_URL = \"r\"", "var_name": "FIELD_PAYMENT_REQUEST_URL"}, {"original_string": "public static final String FIELD_ADDRESS_REQUEST_URI = \"req-addressrequest\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_ADDRESS_REQUEST_URI = \"req-addressrequest\"", "var_name": "FIELD_ADDRESS_REQUEST_URI"}, {"original_string": "public static final String FIELD_NETWORK = \"req-network\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_NETWORK = \"req-network\"", "var_name": "FIELD_NETWORK"}, {"original_string": "public static final String FIELD_PUBKEY = \"pubkey\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_PUBKEY = \"pubkey\"", "var_name": "FIELD_PUBKEY"}, {"original_string": "private static final String ENCODED_SPACE_CHARACTER = \"%20\";", "modifier": "private static final", "type": "String", "declarator": "ENCODED_SPACE_CHARACTER = \"%20\"", "var_name": "ENCODED_SPACE_CHARACTER"}, {"original_string": "private static final String AMPERSAND_SEPARATOR = \"&\";", "modifier": "private static final", "type": "String", "declarator": "AMPERSAND_SEPARATOR = \"&\"", "var_name": "AMPERSAND_SEPARATOR"}, {"original_string": "private static final String QUESTION_MARK_SEPARATOR = \"?\";", "modifier": "private static final", "type": "String", "declarator": "QUESTION_MARK_SEPARATOR = \"?\"", "var_name": "QUESTION_MARK_SEPARATOR"}, {"original_string": "@Nullable\n    private CoinType type;", "modifier": "@Nullable\n    private", "type": "CoinType", "declarator": "type", "var_name": "type"}, {"original_string": "private final Map<String, Object> parameterMap = new LinkedHashMap<String, Object>();", "modifier": "private final", "type": "Map<String, Object>", "declarator": "parameterMap = new LinkedHashMap<String, Object>()", "var_name": "parameterMap"}], "methods": [{"identifier": "CoinURI", "parameters": "(String uri)", "modifiers": "public", "return": "", "signature": " CoinURI(String uri)", "full_signature": "public  CoinURI(String uri)", "class_method_signature": "CoinURI.CoinURI(String uri)", "testcase": false, "constructor": true}, {"identifier": "CoinURI", "parameters": "(@Nullable CoinType uriType, String input)", "modifiers": "public", "return": "", "signature": " CoinURI(@Nullable CoinType uriType, String input)", "full_signature": "public  CoinURI(@Nullable CoinType uriType, String input)", "class_method_signature": "CoinURI.CoinURI(@Nullable CoinType uriType, String input)", "testcase": false, "constructor": true}, {"identifier": "getUri", "parameters": "(String input)", "modifiers": "private static", "return": "URI", "signature": "URI getUri(String input)", "full_signature": "private static URI getUri(String input)", "class_method_signature": "CoinURI.getUri(String input)", "testcase": false, "constructor": false}, {"identifier": "parseParameters", "parameters": "(String[] nameValuePairTokens, List<CoinType> possibleTypes)", "modifiers": "private", "return": "void", "signature": "void parseParameters(String[] nameValuePairTokens, List<CoinType> possibleTypes)", "full_signature": "private void parseParameters(String[] nameValuePairTokens, List<CoinType> possibleTypes)", "class_method_signature": "CoinURI.parseParameters(String[] nameValuePairTokens, List<CoinType> possibleTypes)", "testcase": false, "constructor": false}, {"identifier": "putWithValidation", "parameters": "(String key, Object value)", "modifiers": "private", "return": "void", "signature": "void putWithValidation(String key, Object value)", "full_signature": "private void putWithValidation(String key, Object value)", "class_method_signature": "CoinURI.putWithValidation(String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "getTypeRequired", "parameters": "()", "modifiers": "public", "return": "CoinType", "signature": "CoinType getTypeRequired()", "full_signature": "public CoinType getTypeRequired()", "class_method_signature": "CoinURI.getTypeRequired()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Nullable public", "return": "CoinType", "signature": "CoinType getType()", "full_signature": "@Nullable public CoinType getType()", "class_method_signature": "CoinURI.getType()", "testcase": false, "constructor": false}, {"identifier": "hasType", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasType()", "full_signature": "public boolean hasType()", "class_method_signature": "CoinURI.hasType()", "testcase": false, "constructor": false}, {"identifier": "getAddress", "parameters": "()", "modifiers": "@Nullable public", "return": "AbstractAddress", "signature": "AbstractAddress getAddress()", "full_signature": "@Nullable public AbstractAddress getAddress()", "class_method_signature": "CoinURI.getAddress()", "testcase": false, "constructor": false}, {"identifier": "getAmount", "parameters": "()", "modifiers": "public", "return": "Value", "signature": "Value getAmount()", "full_signature": "public Value getAmount()", "class_method_signature": "CoinURI.getAmount()", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLabel()", "full_signature": "public String getLabel()", "class_method_signature": "CoinURI.getLabel()", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMessage()", "full_signature": "public String getMessage()", "class_method_signature": "CoinURI.getMessage()", "testcase": false, "constructor": false}, {"identifier": "getPublicKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPublicKey()", "full_signature": "public String getPublicKey()", "class_method_signature": "CoinURI.getPublicKey()", "testcase": false, "constructor": false}, {"identifier": "getPaymentRequestUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPaymentRequestUrl()", "full_signature": "public String getPaymentRequestUrl()", "class_method_signature": "CoinURI.getPaymentRequestUrl()", "testcase": false, "constructor": false}, {"identifier": "getAddressRequestUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getAddressRequestUri()", "full_signature": "public URI getAddressRequestUri()", "class_method_signature": "CoinURI.getAddressRequestUri()", "testcase": false, "constructor": false}, {"identifier": "isAddressRequest", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAddressRequest()", "full_signature": "public boolean isAddressRequest()", "class_method_signature": "CoinURI.isAddressRequest()", "testcase": false, "constructor": false}, {"identifier": "getAddressRequestUriResponse", "parameters": "(AbstractAddress address)", "modifiers": "public", "return": "URI", "signature": "URI getAddressRequestUriResponse(AbstractAddress address)", "full_signature": "public URI getAddressRequestUriResponse(AbstractAddress address)", "class_method_signature": "CoinURI.getAddressRequestUriResponse(AbstractAddress address)", "testcase": false, "constructor": false}, {"identifier": "getAddressRequestUriResponse", "parameters": "(String address)", "modifiers": "public", "return": "URI", "signature": "URI getAddressRequestUriResponse(String address)", "full_signature": "public URI getAddressRequestUriResponse(String address)", "class_method_signature": "CoinURI.getAddressRequestUriResponse(String address)", "testcase": false, "constructor": false}, {"identifier": "getParameterByName", "parameters": "(String name)", "modifiers": "public", "return": "Object", "signature": "Object getParameterByName(String name)", "full_signature": "public Object getParameterByName(String name)", "class_method_signature": "CoinURI.getParameterByName(String name)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CoinURI.toString()", "testcase": false, "constructor": false}, {"identifier": "convertToCoinURI", "parameters": "(AbstractAddress address)", "modifiers": "public static", "return": "String", "signature": "String convertToCoinURI(AbstractAddress address)", "full_signature": "public static String convertToCoinURI(AbstractAddress address)", "class_method_signature": "CoinURI.convertToCoinURI(AbstractAddress address)", "testcase": false, "constructor": false}, {"identifier": "convertToCoinURI", "parameters": "(AbstractAddress address, @Nullable Value amount,\n                                          @Nullable String label, @Nullable String message)", "modifiers": "public static", "return": "String", "signature": "String convertToCoinURI(AbstractAddress address, @Nullable Value amount,\n                                          @Nullable String label, @Nullable String message)", "full_signature": "public static String convertToCoinURI(AbstractAddress address, @Nullable Value amount,\n                                          @Nullable String label, @Nullable String message)", "class_method_signature": "CoinURI.convertToCoinURI(AbstractAddress address, @Nullable Value amount,\n                                          @Nullable String label, @Nullable String message)", "testcase": false, "constructor": false}, {"identifier": "convertToCoinURI", "parameters": "(AbstractAddress address, @Nullable Value amount,\n                                          @Nullable String label, @Nullable String message,\n                                          @Nullable String pubkey)", "modifiers": "public static", "return": "String", "signature": "String convertToCoinURI(AbstractAddress address, @Nullable Value amount,\n                                          @Nullable String label, @Nullable String message,\n                                          @Nullable String pubkey)", "full_signature": "public static String convertToCoinURI(AbstractAddress address, @Nullable Value amount,\n                                          @Nullable String label, @Nullable String message,\n                                          @Nullable String pubkey)", "class_method_signature": "CoinURI.convertToCoinURI(AbstractAddress address, @Nullable Value amount,\n                                          @Nullable String label, @Nullable String message,\n                                          @Nullable String pubkey)", "testcase": false, "constructor": false}, {"identifier": "encodeURLString", "parameters": "(String stringToEncode)", "modifiers": "static", "return": "String", "signature": "String encodeURLString(String stringToEncode)", "full_signature": "static String encodeURLString(String stringToEncode)", "class_method_signature": "CoinURI.encodeURLString(String stringToEncode)", "testcase": false, "constructor": false}, {"identifier": "toUriString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toUriString()", "full_signature": "public String toUriString()", "class_method_signature": "CoinURI.toUriString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/coinomi/core/uri/CoinURI.java"}, "focal_method": {"identifier": "getLabel", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getLabel() {\n        return (String) parameterMap.get(FIELD_LABEL);\n    }", "signature": "String getLabel()", "full_signature": "public String getLabel()", "class_method_signature": "CoinURI.getLabel()", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 93777628, "url": "https://github.com/cosmojg/open-coinomi-android", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 24, "size": 22591, "license": "licensed"}}