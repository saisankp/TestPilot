{"test_class": {"identifier": "BaggageFieldsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TraceContext onlyMandatoryFields = TraceContext.newBuilder().traceId(1).spanId(2).build();", "modifier": "", "type": "TraceContext", "declarator": "onlyMandatoryFields = TraceContext.newBuilder().traceId(1).spanId(2).build()", "var_name": "onlyMandatoryFields"}, {"original_string": "TraceContext context = TraceContext.newBuilder()\n    .traceIdHigh(1L)\n    .traceId(2L)\n    .parentId(3L)\n    .spanId(4L)\n    .sampled(true)\n    .build();", "modifier": "", "type": "TraceContext", "declarator": "context = TraceContext.newBuilder()\n    .traceIdHigh(1L)\n    .traceId(2L)\n    .parentId(3L)\n    .spanId(4L)\n    .sampled(true)\n    .build()", "var_name": "context"}, {"original_string": "TraceContextOrSamplingFlags extracted = TraceContextOrSamplingFlags.create(context);", "modifier": "", "type": "TraceContextOrSamplingFlags", "declarator": "extracted = TraceContextOrSamplingFlags.create(context)", "var_name": "extracted"}, {"original_string": "TraceContextOrSamplingFlags extractedTraceId = TraceContextOrSamplingFlags.create(\n    TraceIdContext.newBuilder().traceIdHigh(1L).traceId(2L).sampled(true).build());", "modifier": "", "type": "TraceContextOrSamplingFlags", "declarator": "extractedTraceId = TraceContextOrSamplingFlags.create(\n    TraceIdContext.newBuilder().traceIdHigh(1L).traceId(2L).sampled(true).build())", "var_name": "extractedTraceId"}], "file": "brave/src/test/java/brave/baggage/BaggageFieldsTest.java"}, "test_case": {"identifier": "constant", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void constant() {\n    BaggageField constant = BaggageFields.constant(\"foo\", \"bar\");\n    assertThat(constant.getValue(context)).isEqualTo(\"bar\");\n    assertThat(constant.getValue(extracted)).isEqualTo(\"bar\");\n\n    BaggageField constantNull = BaggageFields.constant(\"foo\", null);\n    assertThat(constantNull.getValue(context)).isNull();\n    assertThat(constantNull.getValue(extracted)).isNull();\n  }", "signature": "void constant()", "full_signature": "@Test public void constant()", "class_method_signature": "BaggageFieldsTest.constant()", "testcase": true, "constructor": false, "invocations": ["constant", "isEqualTo", "assertThat", "getValue", "isEqualTo", "assertThat", "getValue", "constant", "isNull", "assertThat", "getValue", "isNull", "assertThat", "getValue"]}, "focal_class": {"identifier": "BaggageFields", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final BaggageField TRACE_ID = new BaggageField(\"traceId\", new TraceId());", "modifier": "public static final", "type": "BaggageField", "declarator": "TRACE_ID = new BaggageField(\"traceId\", new TraceId())", "var_name": "TRACE_ID"}, {"original_string": "public static final BaggageField PARENT_ID = new BaggageField(\"parentId\", new ParentId());", "modifier": "public static final", "type": "BaggageField", "declarator": "PARENT_ID = new BaggageField(\"parentId\", new ParentId())", "var_name": "PARENT_ID"}, {"original_string": "public static final BaggageField SPAN_ID = new BaggageField(\"spanId\", new SpanId());", "modifier": "public static final", "type": "BaggageField", "declarator": "SPAN_ID = new BaggageField(\"spanId\", new SpanId())", "var_name": "SPAN_ID"}, {"original_string": "public static final BaggageField SAMPLED = new BaggageField(\"sampled\", new Sampled());", "modifier": "public static final", "type": "BaggageField", "declarator": "SAMPLED = new BaggageField(\"sampled\", new Sampled())", "var_name": "SAMPLED"}], "methods": [{"identifier": "constant", "parameters": "(String name, @Nullable String value)", "modifiers": "public static", "return": "BaggageField", "signature": "BaggageField constant(String name, @Nullable String value)", "full_signature": "public static BaggageField constant(String name, @Nullable String value)", "class_method_signature": "BaggageFields.constant(String name, @Nullable String value)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/baggage/BaggageFields.java"}, "focal_method": {"identifier": "constant", "parameters": "(String name, @Nullable String value)", "modifiers": "public static", "return": "BaggageField", "body": "public static BaggageField constant(String name, @Nullable String value) {\n    return new BaggageField(name, new Constant(value));\n  }", "signature": "BaggageField constant(String name, @Nullable String value)", "full_signature": "public static BaggageField constant(String name, @Nullable String value)", "class_method_signature": "BaggageFields.constant(String name, @Nullable String value)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}