{"test_class": {"identifier": "DateTimeUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "signals/base/src/test/java/org/eclipse/ditto/signals/base/DateTimeUtilTest.java"}, "test_case": {"identifier": "minuteTooBig", "parameters": "()", "modifiers": "@Test(expected = DateTimeException.class) public", "return": "void", "body": "@Test(expected = DateTimeException.class)\n    public void minuteTooBig() {\n        DateTimeUtil.parseOffsetDateTime(\"1970-12-31T23:60Z\");\n    }", "signature": "void minuteTooBig()", "full_signature": "@Test(expected = DateTimeException.class) public void minuteTooBig()", "class_method_signature": "DateTimeUtilTest.minuteTooBig()", "testcase": true, "constructor": false, "invocations": ["parseOffsetDateTime"]}, "focal_class": {"identifier": "DateTimeUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final DateTimeFormatter OFFSET_DATE_TIME_EXPANDED =\n            appendOffsets(\"uuuu-MM-dd'T'HH[:mm[:ss[.SSS]]]\", \"+HH:mm\", \"+HH\");", "modifier": "public static final", "type": "DateTimeFormatter", "declarator": "OFFSET_DATE_TIME_EXPANDED =\n            appendOffsets(\"uuuu-MM-dd'T'HH[:mm[:ss[.SSS]]]\", \"+HH:mm\", \"+HH\")", "var_name": "OFFSET_DATE_TIME_EXPANDED"}, {"original_string": "public static final DateTimeFormatter OFFSET_DATE_TIME_BASIC =\n            appendOffsets(\"uuuuMMdd'T'HH[mm[ss[.SSS]]]\", \"+HHmm\", \"+HH\");", "modifier": "public static final", "type": "DateTimeFormatter", "declarator": "OFFSET_DATE_TIME_BASIC =\n            appendOffsets(\"uuuuMMdd'T'HH[mm[ss[.SSS]]]\", \"+HHmm\", \"+HH\")", "var_name": "OFFSET_DATE_TIME_BASIC"}, {"original_string": "public static final DateTimeFormatter OFFSET_DATE_TIME =\n            caseInsensitiveAnd(or(OFFSET_DATE_TIME_BASIC, OFFSET_DATE_TIME_EXPANDED));", "modifier": "public static final", "type": "DateTimeFormatter", "declarator": "OFFSET_DATE_TIME =\n            caseInsensitiveAnd(or(OFFSET_DATE_TIME_BASIC, OFFSET_DATE_TIME_EXPANDED))", "var_name": "OFFSET_DATE_TIME"}], "methods": [{"identifier": "parseOffsetDateTime", "parameters": "(final String timestamp)", "modifiers": "public static", "return": "OffsetDateTime", "signature": "OffsetDateTime parseOffsetDateTime(final String timestamp)", "full_signature": "public static OffsetDateTime parseOffsetDateTime(final String timestamp)", "class_method_signature": "DateTimeUtil.parseOffsetDateTime(final String timestamp)", "testcase": false, "constructor": false}, {"identifier": "appendOffsets", "parameters": "(final String dateTimeFormat, final String... offsetPatterns)", "modifiers": "private static", "return": "DateTimeFormatter", "signature": "DateTimeFormatter appendOffsets(final String dateTimeFormat, final String... offsetPatterns)", "full_signature": "private static DateTimeFormatter appendOffsets(final String dateTimeFormat, final String... offsetPatterns)", "class_method_signature": "DateTimeUtil.appendOffsets(final String dateTimeFormat, final String... offsetPatterns)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(final DateTimeFormatter... alternatives)", "modifiers": "private static", "return": "DateTimeFormatter", "signature": "DateTimeFormatter or(final DateTimeFormatter... alternatives)", "full_signature": "private static DateTimeFormatter or(final DateTimeFormatter... alternatives)", "class_method_signature": "DateTimeUtil.or(final DateTimeFormatter... alternatives)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(final DateTimeFormatter... formatters)", "modifiers": "private static", "return": "DateTimeFormatter", "signature": "DateTimeFormatter and(final DateTimeFormatter... formatters)", "full_signature": "private static DateTimeFormatter and(final DateTimeFormatter... formatters)", "class_method_signature": "DateTimeUtil.and(final DateTimeFormatter... formatters)", "testcase": false, "constructor": false}, {"identifier": "caseInsensitiveAnd", "parameters": "(final DateTimeFormatter... formatters)", "modifiers": "private static", "return": "DateTimeFormatter", "signature": "DateTimeFormatter caseInsensitiveAnd(final DateTimeFormatter... formatters)", "full_signature": "private static DateTimeFormatter caseInsensitiveAnd(final DateTimeFormatter... formatters)", "class_method_signature": "DateTimeUtil.caseInsensitiveAnd(final DateTimeFormatter... formatters)", "testcase": false, "constructor": false}, {"identifier": "DateTimeUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " DateTimeUtil()", "full_signature": "private  DateTimeUtil()", "class_method_signature": "DateTimeUtil.DateTimeUtil()", "testcase": false, "constructor": true}], "file": "signals/base/src/main/java/org/eclipse/ditto/signals/base/DateTimeUtil.java"}, "focal_method": {"identifier": "parseOffsetDateTime", "parameters": "(final String timestamp)", "modifiers": "public static", "return": "OffsetDateTime", "body": "public static OffsetDateTime parseOffsetDateTime(final String timestamp) {\n        return OffsetDateTime.parse(timestamp, DateTimeUtil.OFFSET_DATE_TIME);\n    }", "signature": "OffsetDateTime parseOffsetDateTime(final String timestamp)", "full_signature": "public static OffsetDateTime parseOffsetDateTime(final String timestamp)", "class_method_signature": "DateTimeUtil.parseOffsetDateTime(final String timestamp)", "testcase": false, "constructor": false, "invocations": ["parse"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}