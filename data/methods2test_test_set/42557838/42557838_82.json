{"test_class": {"identifier": "ServiceUnavailableHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static HttpServletResponseImplFactory factory;", "modifier": "private static", "type": "HttpServletResponseImplFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private static ServiceUnavailableHandler serviceUnavailableHandler;", "modifier": "private static", "type": "ServiceUnavailableHandler", "declarator": "serviceUnavailableHandler", "var_name": "serviceUnavailableHandler"}, {"original_string": "private static ByteArrayOutputStream outputStream;", "modifier": "private static", "type": "ByteArrayOutputStream", "declarator": "outputStream", "var_name": "outputStream"}, {"original_string": "private static PrintWriter printWriter;", "modifier": "private static", "type": "PrintWriter", "declarator": "printWriter", "var_name": "printWriter"}], "file": "http/src/test/java/ro/polak/http/ServiceUnavailableHandlerTest.java"}, "test_case": {"identifier": "shouldIgnoreRunnableThatIsNotServerRunnable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldIgnoreRunnableThatIsNotServerRunnable() throws Exception {\n        serviceUnavailableHandler.rejectedExecution(mock(Runnable.class), null);\n        verify(factory, never()).createFromSocket(any(Socket.class));\n    }", "signature": "void shouldIgnoreRunnableThatIsNotServerRunnable()", "full_signature": "@Test public void shouldIgnoreRunnableThatIsNotServerRunnable()", "class_method_signature": "ServiceUnavailableHandlerTest.shouldIgnoreRunnableThatIsNotServerRunnable()", "testcase": true, "constructor": false, "invocations": ["rejectedExecution", "mock", "createFromSocket", "verify", "never", "any"]}, "focal_class": {"identifier": "ServiceUnavailableHandler", "superclass": "", "interfaces": "implements RejectedExecutionHandler", "fields": [{"original_string": "private final HttpServletResponseImplFactory responseFactory;", "modifier": "private final", "type": "HttpServletResponseImplFactory", "declarator": "responseFactory", "var_name": "responseFactory"}], "methods": [{"identifier": "ServiceUnavailableHandler", "parameters": "(final HttpServletResponseImplFactory responseFactory)", "modifiers": "public", "return": "", "signature": " ServiceUnavailableHandler(final HttpServletResponseImplFactory responseFactory)", "full_signature": "public  ServiceUnavailableHandler(final HttpServletResponseImplFactory responseFactory)", "class_method_signature": "ServiceUnavailableHandler.ServiceUnavailableHandler(final HttpServletResponseImplFactory responseFactory)", "testcase": false, "constructor": true}, {"identifier": "rejectedExecution", "parameters": "(final Runnable r, final ThreadPoolExecutor executor)", "modifiers": "@Override public", "return": "void", "signature": "void rejectedExecution(final Runnable r, final ThreadPoolExecutor executor)", "full_signature": "@Override public void rejectedExecution(final Runnable r, final ThreadPoolExecutor executor)", "class_method_signature": "ServiceUnavailableHandler.rejectedExecution(final Runnable r, final ThreadPoolExecutor executor)", "testcase": false, "constructor": false}], "file": "http/src/main/java/ro/polak/http/ServiceUnavailableHandler.java"}, "focal_method": {"identifier": "rejectedExecution", "parameters": "(final Runnable r, final ThreadPoolExecutor executor)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void rejectedExecution(final Runnable r, final ThreadPoolExecutor executor) {\n        if (r instanceof ServerRunnable) {\n            Socket socket = ((ServerRunnable) r).getSocket();\n            try {\n                (new HttpError503Handler()).serve(responseFactory.createFromSocket(socket));\n            } catch (IOException e) {\n            } finally {\n                IOUtilities.closeSilently(socket);\n            }\n        }\n    }", "signature": "void rejectedExecution(final Runnable r, final ThreadPoolExecutor executor)", "full_signature": "@Override public void rejectedExecution(final Runnable r, final ThreadPoolExecutor executor)", "class_method_signature": "ServiceUnavailableHandler.rejectedExecution(final Runnable r, final ThreadPoolExecutor executor)", "testcase": false, "constructor": false, "invocations": ["getSocket", "serve", "createFromSocket", "closeSilently"]}, "repository": {"repo_id": 42557838, "url": "https://github.com/piotrpolak/android-http-server", "language": "Java", "is_fork": false, "fork_count": 41, "stargazer_count": 136, "size": 2000, "license": "licensed"}}