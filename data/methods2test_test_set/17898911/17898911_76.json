{"test_class": {"identifier": "NavTabListWidgetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    NavTabListWidget.View view;", "modifier": "@Mock", "type": "NavTabListWidget.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    NavTabListWidget.View viewAdmin;", "modifier": "@Mock", "type": "NavTabListWidget.View", "declarator": "viewAdmin", "var_name": "viewAdmin"}, {"original_string": "@Mock\n    NavTabListWidget.View viewDashboards;", "modifier": "@Mock", "type": "NavTabListWidget.View", "declarator": "viewDashboards", "var_name": "viewDashboards"}, {"original_string": "@Mock\n    SyncBeanDef<NavTabListWidget> tablistBean;", "modifier": "@Mock", "type": "SyncBeanDef<NavTabListWidget>", "declarator": "tablistBean", "var_name": "tablistBean"}, {"original_string": "@Mock\n    PerspectivePluginManager pluginManager;", "modifier": "@Mock", "type": "PerspectivePluginManager", "declarator": "pluginManager", "var_name": "pluginManager"}, {"original_string": "@Mock\n    NavigationManager navigationManager;", "modifier": "@Mock", "type": "NavigationManager", "declarator": "navigationManager", "var_name": "navigationManager"}, {"original_string": "@Mock\n    SyncBeanManager beanManager;", "modifier": "@Mock", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "@Mock\n    PlaceManager placeManager;", "modifier": "@Mock", "type": "PlaceManager", "declarator": "placeManager", "var_name": "placeManager"}, {"original_string": "NavTabListWidget tabsAdmin;", "modifier": "", "type": "NavTabListWidget", "declarator": "tabsAdmin", "var_name": "tabsAdmin"}, {"original_string": "NavTabListWidget tabsDashboards;", "modifier": "", "type": "NavTabListWidget", "declarator": "tabsDashboards", "var_name": "tabsDashboards"}, {"original_string": "NavTabListWidget presenter;", "modifier": "", "type": "NavTabListWidget", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "NavTree tree;", "modifier": "", "type": "NavTree", "declarator": "tree", "var_name": "tree"}, {"original_string": "public static final String ITEM_ID_HOME = \"home\";", "modifier": "public static final", "type": "String", "declarator": "ITEM_ID_HOME = \"home\"", "var_name": "ITEM_ID_HOME"}, {"original_string": "public static final String ITEM_ID_GALLERY = \"gallery\";", "modifier": "public static final", "type": "String", "declarator": "ITEM_ID_GALLERY = \"gallery\"", "var_name": "ITEM_ID_GALLERY"}, {"original_string": "public static final String ITEM_ID_ADMIN = \"admin\";", "modifier": "public static final", "type": "String", "declarator": "ITEM_ID_ADMIN = \"admin\"", "var_name": "ITEM_ID_ADMIN"}, {"original_string": "public static final String ITEM_ID_DATASETS = \"datasets\";", "modifier": "public static final", "type": "String", "declarator": "ITEM_ID_DATASETS = \"datasets\"", "var_name": "ITEM_ID_DATASETS"}, {"original_string": "public static final String ITEM_ID_CONTENTMGMT = \"contentmgmt\";", "modifier": "public static final", "type": "String", "declarator": "ITEM_ID_CONTENTMGMT = \"contentmgmt\"", "var_name": "ITEM_ID_CONTENTMGMT"}, {"original_string": "public static final String ITEM_ID_DASHBOARDS = \"dashboards\";", "modifier": "public static final", "type": "String", "declarator": "ITEM_ID_DASHBOARDS = \"dashboards\"", "var_name": "ITEM_ID_DASHBOARDS"}, {"original_string": "public static final String ITEM_ID_DASHBOARD1 = \"dashboard1\";", "modifier": "public static final", "type": "String", "declarator": "ITEM_ID_DASHBOARD1 = \"dashboard1\"", "var_name": "ITEM_ID_DASHBOARD1"}, {"original_string": "public static final String ITEM_ID_DASHBOARD2 = \"dashboard2\";", "modifier": "public static final", "type": "String", "declarator": "ITEM_ID_DASHBOARD2 = \"dashboard2\"", "var_name": "ITEM_ID_DASHBOARD2"}], "file": "dashbuilder-client/dashbuilder-navigation-client/src/test/java/org/dashbuilder/client/navigation/widget/NavTabListWidgetTest.java"}, "test_case": {"identifier": "testShow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShow() {\n        presenter.show(tree);\n        assertEquals(presenter.getItemSelected(), tree.getItemById(ITEM_ID_HOME));\n\n        verify(view).init(presenter);\n        verify(view).addItem(eq(ITEM_ID_HOME), anyString(), anyString(), any());\n        verify(view).addItem(eq(ITEM_ID_GALLERY), anyString(), anyString(), any());\n        verify(view).addGroupItem(eq(ITEM_ID_ADMIN), anyString(), anyString(), eq(tabsAdmin));\n        verify(view).addGroupItem(eq(ITEM_ID_DASHBOARDS), anyString(), anyString(), eq(tabsDashboards));\n        verify(view).setSelectedItem(ITEM_ID_HOME);\n\n        verify(viewAdmin).showAsSubmenu(true);\n        verify(viewAdmin, never()).showChildrenTabs(any());\n        verify(viewAdmin).addItem(eq(ITEM_ID_DATASETS), anyString(), anyString(), any());\n        verify(viewAdmin).addItem(eq(ITEM_ID_CONTENTMGMT), anyString(), anyString(), any());\n\n        verify(viewDashboards).showAsSubmenu(true);\n        verify(viewDashboards, never()).showChildrenTabs(any());\n        verify(viewDashboards).addItem(eq(ITEM_ID_DASHBOARD1), anyString(), anyString(), any());\n        verify(viewDashboards).addItem(eq(ITEM_ID_DASHBOARD2), anyString(), anyString(), any());\n    }", "signature": "void testShow()", "full_signature": "@Test public void testShow()", "class_method_signature": "NavTabListWidgetTest.testShow()", "testcase": true, "constructor": false, "invocations": ["show", "assertEquals", "getItemSelected", "getItemById", "init", "verify", "addItem", "verify", "eq", "anyString", "anyString", "any", "addItem", "verify", "eq", "anyString", "anyString", "any", "addGroupItem", "verify", "eq", "anyString", "anyString", "eq", "addGroupItem", "verify", "eq", "anyString", "anyString", "eq", "setSelectedItem", "verify", "showAsSubmenu", "verify", "showChildrenTabs", "verify", "never", "any", "addItem", "verify", "eq", "anyString", "anyString", "any", "addItem", "verify", "eq", "anyString", "anyString", "any", "showAsSubmenu", "verify", "showChildrenTabs", "verify", "never", "any", "addItem", "verify", "eq", "anyString", "anyString", "any", "addItem", "verify", "eq", "anyString", "anyString", "any"]}, "focal_class": {"identifier": "NavTabListWidget", "superclass": "extends TargetDivNavWidget", "interfaces": "", "fields": [{"original_string": "View view;", "modifier": "", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "SyncBeanManager beanManager;", "modifier": "", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}], "methods": [{"identifier": "NavTabListWidget", "parameters": "(View view,\n                            SyncBeanManager beanManager,\n                            PerspectivePluginManager pluginManager,\n                            PlaceManager placeManager,\n                            NavigationManager navigationManager)", "modifiers": "@Inject public", "return": "", "signature": " NavTabListWidget(View view,\n                            SyncBeanManager beanManager,\n                            PerspectivePluginManager pluginManager,\n                            PlaceManager placeManager,\n                            NavigationManager navigationManager)", "full_signature": "@Inject public  NavTabListWidget(View view,\n                            SyncBeanManager beanManager,\n                            PerspectivePluginManager pluginManager,\n                            PlaceManager placeManager,\n                            NavigationManager navigationManager)", "class_method_signature": "NavTabListWidget.NavTabListWidget(View view,\n                            SyncBeanManager beanManager,\n                            PerspectivePluginManager pluginManager,\n                            PlaceManager placeManager,\n                            NavigationManager navigationManager)", "testcase": false, "constructor": true}, {"identifier": "lookupNavGroupWidget", "parameters": "()", "modifiers": "@Override protected", "return": "NavWidget", "signature": "NavWidget lookupNavGroupWidget()", "full_signature": "@Override protected NavWidget lookupNavGroupWidget()", "class_method_signature": "NavTabListWidget.lookupNavGroupWidget()", "testcase": false, "constructor": false}, {"identifier": "setSelectedItem", "parameters": "(String id)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setSelectedItem(String id)", "full_signature": "@Override public boolean setSelectedItem(String id)", "class_method_signature": "NavTabListWidget.setSelectedItem(String id)", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(List<NavItem> itemList)", "modifiers": "@Override public", "return": "void", "signature": "void show(List<NavItem> itemList)", "full_signature": "@Override public void show(List<NavItem> itemList)", "class_method_signature": "NavTabListWidget.show(List<NavItem> itemList)", "testcase": false, "constructor": false}, {"identifier": "onItemClicked", "parameters": "(NavItem navItem)", "modifiers": "@Override public", "return": "void", "signature": "void onItemClicked(NavItem navItem)", "full_signature": "@Override public void onItemClicked(NavItem navItem)", "class_method_signature": "NavTabListWidget.onItemClicked(NavItem navItem)", "testcase": false, "constructor": false}, {"identifier": "onGroupTabClicked", "parameters": "(String id)", "modifiers": "", "return": "void", "signature": "void onGroupTabClicked(String id)", "full_signature": " void onGroupTabClicked(String id)", "class_method_signature": "NavTabListWidget.onGroupTabClicked(String id)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-navigation-client/src/main/java/org/dashbuilder/client/navigation/widget/NavTabListWidget.java"}, "focal_method": {"identifier": "show", "parameters": "(List<NavItem> itemList)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void show(List<NavItem> itemList) {\n        view.showAsSubmenu(getLevel() > 0);\n        super.show(itemList);\n    }", "signature": "void show(List<NavItem> itemList)", "full_signature": "@Override public void show(List<NavItem> itemList)", "class_method_signature": "NavTabListWidget.show(List<NavItem> itemList)", "testcase": false, "constructor": false, "invocations": ["showAsSubmenu", "getLevel", "show"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}