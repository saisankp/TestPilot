{"test_class": {"identifier": "QueryResponseValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private QueryResponseValidator validator;", "modifier": "private", "type": "QueryResponseValidator", "declarator": "validator", "var_name": "validator"}, {"original_string": "private QueryResponse response;", "modifier": "private", "type": "QueryResponse", "declarator": "response", "var_name": "response"}, {"original_string": "private QueryResponseTransformer transformer;", "modifier": "private", "type": "QueryResponseTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private DocumentEntry docEntry;", "modifier": "private", "type": "DocumentEntry", "declarator": "docEntry", "var_name": "docEntry"}, {"original_string": "private ValidationProfile profile = new ValidationProfile(IpfInteractionId.ITI_18);", "modifier": "private", "type": "ValidationProfile", "declarator": "profile = new ValidationProfile(IpfInteractionId.ITI_18)", "var_name": "profile"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/validate/responses/QueryResponseValidatorTest.java"}, "test_case": {"identifier": "testQueryResponseDoesNotHaveSubmissionSetLimitations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testQueryResponseDoesNotHaveSubmissionSetLimitations() {\n        response.getSubmissionSets().clear();\n        validator.validate(transformer.toEbXML(response), profile);\n    }", "signature": "void testQueryResponseDoesNotHaveSubmissionSetLimitations()", "full_signature": "@Test public void testQueryResponseDoesNotHaveSubmissionSetLimitations()", "class_method_signature": "QueryResponseValidatorTest.testQueryResponseDoesNotHaveSubmissionSetLimitations()", "testcase": true, "constructor": false, "invocations": ["clear", "getSubmissionSets", "validate", "toEbXML"]}, "focal_class": {"identifier": "QueryResponseValidator", "superclass": "", "interfaces": "implements Validator<EbXMLQueryResponse, ValidationProfile>", "fields": [{"original_string": "private final RegistryResponseValidator regResponseValidator = new RegistryResponseValidator();", "modifier": "private final", "type": "RegistryResponseValidator", "declarator": "regResponseValidator = new RegistryResponseValidator()", "var_name": "regResponseValidator"}, {"original_string": "private final ObjectContainerValidator objectContainerValidator = new ObjectContainerValidator();", "modifier": "private final", "type": "ObjectContainerValidator", "declarator": "objectContainerValidator = new ObjectContainerValidator()", "var_name": "objectContainerValidator"}], "methods": [{"identifier": "validate", "parameters": "(EbXMLQueryResponse response, ValidationProfile profile)", "modifiers": "@Override public", "return": "void", "signature": "void validate(EbXMLQueryResponse response, ValidationProfile profile)", "full_signature": "@Override public void validate(EbXMLQueryResponse response, ValidationProfile profile)", "class_method_signature": "QueryResponseValidator.validate(EbXMLQueryResponse response, ValidationProfile profile)", "testcase": false, "constructor": false}, {"identifier": "validatePatientIdsAreIdentical", "parameters": "(EbXMLObjectContainer container)", "modifiers": "private", "return": "void", "signature": "void validatePatientIdsAreIdentical(EbXMLObjectContainer container)", "full_signature": "private void validatePatientIdsAreIdentical(EbXMLObjectContainer container)", "class_method_signature": "QueryResponseValidator.validatePatientIdsAreIdentical(EbXMLObjectContainer container)", "testcase": false, "constructor": false}, {"identifier": "checkForMultiplePatientIds", "parameters": "(String patientId, String id, List<? extends EbXMLRegistryObject> entries)", "modifiers": "private", "return": "String", "signature": "String checkForMultiplePatientIds(String patientId, String id, List<? extends EbXMLRegistryObject> entries)", "full_signature": "private String checkForMultiplePatientIds(String patientId, String id, List<? extends EbXMLRegistryObject> entries)", "class_method_signature": "QueryResponseValidator.checkForMultiplePatientIds(String patientId, String id, List<? extends EbXMLRegistryObject> entries)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/validate/responses/QueryResponseValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(EbXMLQueryResponse response, ValidationProfile profile)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(EbXMLQueryResponse response, ValidationProfile profile) {\n        notNull(response, \"response cannot be null\");\n        \n        regResponseValidator.validate(response, profile);\n        objectContainerValidator.validate(response, profile);\n\n        List<ObjectReference> references = response.getReferences();\n        for (ObjectReference objRef : references) {\n            metaDataAssert(objRef.getId() != null, MISSING_OBJ_REF);\n        }\n\n        validatePatientIdsAreIdentical(response);\n    }", "signature": "void validate(EbXMLQueryResponse response, ValidationProfile profile)", "full_signature": "@Override public void validate(EbXMLQueryResponse response, ValidationProfile profile)", "class_method_signature": "QueryResponseValidator.validate(EbXMLQueryResponse response, ValidationProfile profile)", "testcase": false, "constructor": false, "invocations": ["notNull", "validate", "validate", "getReferences", "metaDataAssert", "getId", "validatePatientIdsAreIdentical"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}