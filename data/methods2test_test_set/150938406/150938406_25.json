{"test_class": {"identifier": "AlsTopKPredictBatchOpTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Row[] rows1 = new Row[]{\n        Row.of(1L, 1L, 0.6),\n        Row.of(2L, 2L, 0.8),\n        Row.of(2L, 3L, 0.6),\n        Row.of(3L, 1L, 0.6),\n        Row.of(3L, 2L, 0.3),\n        Row.of(3L, 3L, 0.4),\n    };", "modifier": "private", "type": "Row[]", "declarator": "rows1 = new Row[]{\n        Row.of(1L, 1L, 0.6),\n        Row.of(2L, 2L, 0.8),\n        Row.of(2L, 3L, 0.6),\n        Row.of(3L, 1L, 0.6),\n        Row.of(3L, 2L, 0.3),\n        Row.of(3L, 3L, 0.4),\n    }", "var_name": "rows1"}, {"original_string": "private Row[] rows2 = new Row[]{\n        Row.of(0L),\n        Row.of(1L),\n        Row.of(2L),\n        Row.of(2L),\n        Row.of(3L),\n    };", "modifier": "private", "type": "Row[]", "declarator": "rows2 = new Row[]{\n        Row.of(0L),\n        Row.of(1L),\n        Row.of(2L),\n        Row.of(2L),\n        Row.of(3L),\n    }", "var_name": "rows2"}], "file": "core/src/test/java/com/alibaba/alink/operator/batch/recommendation/AlsTopKPredictBatchOpTest.java"}, "test_case": {"identifier": "testRecommendForUsers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRecommendForUsers() throws Exception {\n        BatchOperator data = BatchOperator.fromTable(\n            MLEnvironmentFactory.getDefault().createBatchTable(rows1, new String[]{\"user\", \"item\", \"rating\"}));\n        BatchOperator predData = BatchOperator.fromTable(\n            MLEnvironmentFactory.getDefault().createBatchTable(rows2, new String[]{\"user\"}));\n\n        ALS als = new ALS()\n            .setUserCol(\"user\")\n            .setItemCol(\"item\")\n            .setRateCol(\"rating\")\n            .setLambda(0.01)\n            .setRank(10)\n            .setNumIter(10)\n            .setPredictionCol(\"recommendations\");\n\n        ALSModel model = als.fit(data);\n        BatchOperator modelData = BatchOperator.fromTable(model.getModelData());\n\n        BatchOperator pred = new AlsTopKPredictBatchOp()\n            .setUserCol(\"user\").setTopK(2).setPredictionCol(\"topk\").linkFrom(modelData, predData);\n\n        pred.print();\n        Assert.assertEquals(pred.count(), 4);\n    }", "signature": "void testRecommendForUsers()", "full_signature": "@Test public void testRecommendForUsers()", "class_method_signature": "AlsTopKPredictBatchOpTest.testRecommendForUsers()", "testcase": true, "constructor": false, "invocations": ["fromTable", "createBatchTable", "getDefault", "fromTable", "createBatchTable", "getDefault", "setPredictionCol", "setNumIter", "setRank", "setLambda", "setRateCol", "setItemCol", "setUserCol", "fit", "fromTable", "getModelData", "linkFrom", "setPredictionCol", "setTopK", "setUserCol", "print", "assertEquals", "count"]}, "focal_class": {"identifier": "AlsTopKPredictBatchOp", "superclass": "extends BatchOperator<AlsTopKPredictBatchOp>", "interfaces": "implements AlsTopKPredictParams<AlsTopKPredictBatchOp>", "fields": [], "methods": [{"identifier": "AlsTopKPredictBatchOp", "parameters": "()", "modifiers": "public", "return": "", "signature": " AlsTopKPredictBatchOp()", "full_signature": "public  AlsTopKPredictBatchOp()", "class_method_signature": "AlsTopKPredictBatchOp.AlsTopKPredictBatchOp()", "testcase": false, "constructor": true}, {"identifier": "AlsTopKPredictBatchOp", "parameters": "(Params params)", "modifiers": "public", "return": "", "signature": " AlsTopKPredictBatchOp(Params params)", "full_signature": "public  AlsTopKPredictBatchOp(Params params)", "class_method_signature": "AlsTopKPredictBatchOp.AlsTopKPredictBatchOp(Params params)", "testcase": false, "constructor": true}, {"identifier": "getFactors", "parameters": "(BatchOperator<?> model, final int identity)", "modifiers": "private static", "return": "DataSet<Tuple2<Long, float[]>>", "signature": "DataSet<Tuple2<Long, float[]>> getFactors(BatchOperator<?> model, final int identity)", "full_signature": "private static DataSet<Tuple2<Long, float[]>> getFactors(BatchOperator<?> model, final int identity)", "class_method_signature": "AlsTopKPredictBatchOp.getFactors(BatchOperator<?> model, final int identity)", "testcase": false, "constructor": false}, {"identifier": "linkFrom", "parameters": "(BatchOperator<?>... inputs)", "modifiers": "@Override public", "return": "AlsTopKPredictBatchOp", "signature": "AlsTopKPredictBatchOp linkFrom(BatchOperator<?>... inputs)", "full_signature": "@Override public AlsTopKPredictBatchOp linkFrom(BatchOperator<?>... inputs)", "class_method_signature": "AlsTopKPredictBatchOp.linkFrom(BatchOperator<?>... inputs)", "testcase": false, "constructor": false}, {"identifier": "recommendForUsers", "parameters": "(BatchOperator model, BatchOperator data)", "modifiers": "public", "return": "Table", "signature": "Table recommendForUsers(BatchOperator model, BatchOperator data)", "full_signature": "public Table recommendForUsers(BatchOperator model, BatchOperator data)", "class_method_signature": "AlsTopKPredictBatchOp.recommendForUsers(BatchOperator model, BatchOperator data)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/batch/recommendation/AlsTopKPredictBatchOp.java"}, "focal_method": {"identifier": "recommendForUsers", "parameters": "(BatchOperator model, BatchOperator data)", "modifiers": "public", "return": "Table", "body": "public Table recommendForUsers(BatchOperator model, BatchOperator data) {\n        String userColName = getUserCol();\n        String predResultColName = getPredictionCol();\n        int topk = getTopK();\n\n        data = data.select(\"`\" + userColName + \"`\");\n        DataSet<Tuple1<Long>> users = data.getDataSet()\n            .map(new MapFunction<Row, Tuple1<Long>>() {\n                @Override\n                public Tuple1<Long> map(Row value) throws Exception {\n                    return Tuple1.of(((Number) value.getField(0)).longValue());\n                }\n            });\n\n        DataSet<Tuple2<Long, float[]>> userFactors = getFactors(model, 0);\n        DataSet<Tuple2<Long, float[]>> itemFactors = getFactors(model, 1);\n\n        DataSet<Tuple2<Long, String>> recommend = AlsPredict.recommendForUsers(userFactors, itemFactors, users, topk);\n\n        DataSet<Row> output = recommend\n            .map(new MapFunction<Tuple2<Long, String>, Row>() {\n                @Override\n                public Row map(Tuple2<Long, String> value) throws Exception {\n                    return Row.of(value.f0, value.f1);\n                }\n            });\n        setOutput(output, new String[]{userColName, predResultColName},\n            new TypeInformation[]{Types.LONG, Types.STRING});\n\n        return this.getOutputTable();\n    }", "signature": "Table recommendForUsers(BatchOperator model, BatchOperator data)", "full_signature": "public Table recommendForUsers(BatchOperator model, BatchOperator data)", "class_method_signature": "AlsTopKPredictBatchOp.recommendForUsers(BatchOperator model, BatchOperator data)", "testcase": false, "constructor": false, "invocations": ["getUserCol", "getPredictionCol", "getTopK", "select", "map", "getDataSet", "of", "longValue", "getField", "getFactors", "getFactors", "recommendForUsers", "map", "of", "setOutput", "getOutputTable"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}