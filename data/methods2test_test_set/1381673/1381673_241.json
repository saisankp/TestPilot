{"test_class": {"identifier": "SetDMNActiveModelCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static KieServices ks;", "modifier": "static", "type": "KieServices", "declarator": "ks", "var_name": "ks"}, {"original_string": "static ReleaseId releaseId;", "modifier": "static", "type": "ReleaseId", "declarator": "releaseId", "var_name": "releaseId"}, {"original_string": "static Resource resource;", "modifier": "static", "type": "Resource", "declarator": "resource", "var_name": "resource"}, {"original_string": "static KieContainer kieContainer;", "modifier": "static", "type": "KieContainer", "declarator": "kieContainer", "var_name": "kieContainer"}, {"original_string": "RegistryContext registryContext;", "modifier": "", "type": "RegistryContext", "declarator": "registryContext", "var_name": "registryContext"}, {"original_string": "DMNRuntime dmnRuntime;", "modifier": "", "type": "DMNRuntime", "declarator": "dmnRuntime", "var_name": "dmnRuntime"}], "file": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/fluent/SetDMNActiveModelCommandTest.java"}, "test_case": {"identifier": "execute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void execute() {\n        String namespace = \"http://www.trisotech.com/definitions/_99ccd4df-41ac-43c3-a563-d58f43149829\";\n        String modelName = \"typecheck in DT\";\n        SetDMNActiveModelCommand setDMNActiveModelCommand = new SetDMNActiveModelCommand(namespace, modelName);\n\n        assertThatThrownBy(() -> setDMNActiveModelCommand.execute(registryContext))\n                .isInstanceOf(IllegalStateException.class)\n                .hasMessage(\"There is no DMNRuntime available\");\n\n        registryContext.register(DMNRuntime.class, dmnRuntime);\n\n        DMNModel dmnModel = setDMNActiveModelCommand.execute(registryContext);\n        assertEquals(namespace, dmnModel.getNamespace());\n        assertEquals(modelName, dmnModel.getName());\n    }", "signature": "void execute()", "full_signature": "@Test public void execute()", "class_method_signature": "SetDMNActiveModelCommandTest.execute()", "testcase": true, "constructor": false, "invocations": ["hasMessage", "isInstanceOf", "assertThatThrownBy", "execute", "register", "execute", "assertEquals", "getNamespace", "assertEquals", "getName"]}, "focal_class": {"identifier": "SetDMNActiveModelCommand", "superclass": "extends AbstractDMNModelCommand", "interfaces": "", "fields": [], "methods": [{"identifier": "SetDMNActiveModelCommand", "parameters": "(String namespace, String modelName)", "modifiers": "public", "return": "", "signature": " SetDMNActiveModelCommand(String namespace, String modelName)", "full_signature": "public  SetDMNActiveModelCommand(String namespace, String modelName)", "class_method_signature": "SetDMNActiveModelCommand.SetDMNActiveModelCommand(String namespace, String modelName)", "testcase": false, "constructor": true}, {"identifier": "SetDMNActiveModelCommand", "parameters": "(String resourcePath)", "modifiers": "public", "return": "", "signature": " SetDMNActiveModelCommand(String resourcePath)", "full_signature": "public  SetDMNActiveModelCommand(String resourcePath)", "class_method_signature": "SetDMNActiveModelCommand.SetDMNActiveModelCommand(String resourcePath)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(Context context)", "modifiers": "@Override public", "return": "DMNModel", "signature": "DMNModel execute(Context context)", "full_signature": "@Override public DMNModel execute(Context context)", "class_method_signature": "SetDMNActiveModelCommand.execute(Context context)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/fluent/SetDMNActiveModelCommand.java"}, "focal_method": {"identifier": "execute", "parameters": "(Context context)", "modifiers": "@Override public", "return": "DMNModel", "body": "@Override\n    public DMNModel execute(Context context) {\n        RegistryContext registryContext = (RegistryContext) context;\n        DMNModel activeModel = getDMNModel(context);;\n        registryContext.register(DMNModel.class, activeModel);\n        return activeModel;\n    }", "signature": "DMNModel execute(Context context)", "full_signature": "@Override public DMNModel execute(Context context)", "class_method_signature": "SetDMNActiveModelCommand.execute(Context context)", "testcase": false, "constructor": false, "invocations": ["getDMNModel", "register"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}