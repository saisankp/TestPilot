{"test_class": {"identifier": "PrfSetWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int KEY_SIZE = 32;", "modifier": "private static final", "type": "int", "declarator": "KEY_SIZE = 32", "var_name": "KEY_SIZE"}], "file": "java_src/src/test/java/com/google/crypto/tink/prf/PrfSetWrapperTest.java"}, "test_case": {"identifier": "testSmallPlaintextWithMultipleKeys", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSmallPlaintextWithMultipleKeys() throws Exception {\n    byte[] primaryKeyValue = Random.randBytes(KEY_SIZE);\n    Keyset.Key primary =\n        TestUtil.createKey(\n            TestUtil.createPrfKeyData(primaryKeyValue),\n            /* keyId= */ 5,\n            KeyStatusType.ENABLED,\n            OutputPrefixType.RAW);\n    byte[] secondaryKeyValue = Random.randBytes(KEY_SIZE);\n    Keyset.Key secondary =\n        TestUtil.createKey(\n            TestUtil.createPrfKeyData(secondaryKeyValue),\n            /* keyId= */ 6,\n            KeyStatusType.ENABLED,\n            OutputPrefixType.RAW);\n    KeysetHandle keysetHandle =\n        TestUtil.createKeysetHandle(TestUtil.createKeyset(primary, secondary));\n    byte[] plaintext = \"blah\".getBytes(UTF_8);\n\n    PrfSet prfSet = new PrfSetWrapper().wrap(Registry.getPrimitives(keysetHandle, PrfSet.class));\n    byte[] prsPrimary = prfSet.computePrimary(plaintext, 12);\n    byte[] prs5 = prfSet.getPrfs().get(5).compute(plaintext, 12);\n    byte[] prs6 = prfSet.getPrfs().get(6).compute(plaintext, 12);\n\n    assertEquals(5, prfSet.getPrimaryId());\n    assertThat(prfSet.getPrfs()).hasSize(2);\n    assertThat(prsPrimary).hasLength(12);\n    assertArrayEquals(prs5, prsPrimary);\n    assertThat(prsPrimary).isNotEqualTo(prs6);\n  }", "signature": "void testSmallPlaintextWithMultipleKeys()", "full_signature": "@Test public void testSmallPlaintextWithMultipleKeys()", "class_method_signature": "PrfSetWrapperTest.testSmallPlaintextWithMultipleKeys()", "testcase": true, "constructor": false, "invocations": ["randBytes", "createKey", "createPrfKeyData", "randBytes", "createKey", "createPrfKeyData", "createKeysetHandle", "createKeyset", "getBytes", "wrap", "getPrimitives", "computePrimary", "compute", "get", "getPrfs", "compute", "get", "getPrfs", "assertEquals", "getPrimaryId", "hasSize", "assertThat", "getPrfs", "hasLength", "assertThat", "assertArrayEquals", "isNotEqualTo", "assertThat"]}, "focal_class": {"identifier": "PrfSetWrapper", "superclass": "", "interfaces": "implements PrimitiveWrapper<PrfSet, PrfSet>", "fields": [], "methods": [{"identifier": "wrap", "parameters": "(PrimitiveSet<PrfSet> set)", "modifiers": "@Override public", "return": "PrfSet", "signature": "PrfSet wrap(PrimitiveSet<PrfSet> set)", "full_signature": "@Override public PrfSet wrap(PrimitiveSet<PrfSet> set)", "class_method_signature": "PrfSetWrapper.wrap(PrimitiveSet<PrfSet> set)", "testcase": false, "constructor": false}, {"identifier": "getPrimitiveClass", "parameters": "()", "modifiers": "@Override public", "return": "Class<PrfSet>", "signature": "Class<PrfSet> getPrimitiveClass()", "full_signature": "@Override public Class<PrfSet> getPrimitiveClass()", "class_method_signature": "PrfSetWrapper.getPrimitiveClass()", "testcase": false, "constructor": false}, {"identifier": "getInputPrimitiveClass", "parameters": "()", "modifiers": "@Override public", "return": "Class<PrfSet>", "signature": "Class<PrfSet> getInputPrimitiveClass()", "full_signature": "@Override public Class<PrfSet> getInputPrimitiveClass()", "class_method_signature": "PrfSetWrapper.getInputPrimitiveClass()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void register()", "full_signature": "public static void register()", "class_method_signature": "PrfSetWrapper.register()", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/prf/PrfSetWrapper.java"}, "focal_method": {"identifier": "wrap", "parameters": "(PrimitiveSet<PrfSet> set)", "modifiers": "@Override public", "return": "PrfSet", "body": "@Override\n  public PrfSet wrap(PrimitiveSet<PrfSet> set) throws GeneralSecurityException {\n    return new WrappedPrfSet(set);\n  }", "signature": "PrfSet wrap(PrimitiveSet<PrfSet> set)", "full_signature": "@Override public PrfSet wrap(PrimitiveSet<PrfSet> set)", "class_method_signature": "PrfSetWrapper.wrap(PrimitiveSet<PrfSet> set)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}