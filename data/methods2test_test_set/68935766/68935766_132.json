{"test_class": {"identifier": "UUIDTypeTest", "superclass": "", "interfaces": "", "fields": [], "file": "commons/src/test/java/com/karuslabs/commons/command/types/UUIDTypeTest.java"}, "test_case": {"identifier": "mapped", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void mapped() {\n        assertEquals(ArgumentUUID.class, UUIDType.of().mapped().getClass());\n    }", "signature": "void mapped()", "full_signature": "@Test void mapped()", "class_method_signature": "UUIDTypeTest.mapped()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getClass", "mapped", "of"]}, "focal_class": {"identifier": "UUIDType", "superclass": "", "interfaces": "implements Type<UUID>", "fields": [{"original_string": "private static final ArgumentUUID UUID = new ArgumentUUID();", "modifier": "private static final", "type": "ArgumentUUID", "declarator": "UUID = new ArgumentUUID()", "var_name": "UUID"}, {"original_string": "private static final UUIDType TYPE = new UUIDType();", "modifier": "private static final", "type": "UUIDType", "declarator": "TYPE = new UUIDType()", "var_name": "TYPE"}], "methods": [{"identifier": "of", "parameters": "()", "modifiers": "public static", "return": "UUIDType", "signature": "UUIDType of()", "full_signature": "public static UUIDType of()", "class_method_signature": "UUIDType.of()", "testcase": false, "constructor": false}, {"identifier": "UUIDType", "parameters": "()", "modifiers": "private", "return": "", "signature": " UUIDType()", "full_signature": "private  UUIDType()", "class_method_signature": "UUIDType.UUIDType()", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(StringReader reader)", "modifiers": "@Override public", "return": "UUID", "signature": "UUID parse(StringReader reader)", "full_signature": "@Override public UUID parse(StringReader reader)", "class_method_signature": "UUIDType.parse(StringReader reader)", "testcase": false, "constructor": false}, {"identifier": "mapped", "parameters": "()", "modifiers": "@Override public", "return": "ArgumentType<UUID>", "signature": "ArgumentType<UUID> mapped()", "full_signature": "@Override public ArgumentType<UUID> mapped()", "class_method_signature": "UUIDType.mapped()", "testcase": false, "constructor": false}], "file": "commons/src/main/java/com/karuslabs/commons/command/types/UUIDType.java"}, "focal_method": {"identifier": "mapped", "parameters": "()", "modifiers": "@Override public", "return": "ArgumentType<UUID>", "body": "@Override\n    public ArgumentType<UUID> mapped() {\n        return UUID;\n    }", "signature": "ArgumentType<UUID> mapped()", "full_signature": "@Override public ArgumentType<UUID> mapped()", "class_method_signature": "UUIDType.mapped()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 68935766, "url": "https://github.com/Pante/Chimera", "stars": 13, "created": "9/22/2016 3:36:39 PM +00:00", "updates": "2020-01-27T21:22:29+00:00", "fork": "False", "license": "licensed"}}