{"test_class": {"identifier": "TestUtilityService", "superclass": "extends BasicReusableHostTestCase", "interfaces": "", "fields": [], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestUtilityService.java"}, "test_case": {"identifier": "testIsAvailableStatAndSuffix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsAvailableStatAndSuffix() throws Throwable {\n        long c = 1;\n        URI factoryURI = UriUtils.buildFactoryUri(this.host, ExampleService.class);\n        String name = UUID.randomUUID().toString();\n        ExampleServiceState s = new ExampleServiceState();\n        s.name = name;\n        Consumer<Operation> bodySetter = (o) -> {\n            o.setBody(s);\n        };\n        Map<URI, ExampleServiceState> states = this.host.doFactoryChildServiceStart(null, c,\n                ExampleServiceState.class, bodySetter, factoryURI);\n\n        // first verify that service that do not explicitly use the setAvailable method,\n        // appear available. Both a factory and a child service\n        this.host.waitForServiceAvailable(factoryURI);\n\n        // expect 200 from /factory/<child>/available\n        TestContext ctx = testCreate(states.size());\n        for (URI u : states.keySet()) {\n            Operation get = Operation.createGet(UriUtils.buildAvailableUri(u))\n                    .setCompletion(ctx.getCompletion());\n            this.host.send(get);\n        }\n        testWait(ctx);\n\n        // verify that PUT on /available can make it switch to unavailable (503)\n        ServiceStat body = new ServiceStat();\n        body.name = Service.STAT_NAME_AVAILABLE;\n        body.latestValue = 0.0;\n\n        Operation put = Operation.createPut(\n                UriUtils.buildAvailableUri(this.host, factoryURI.getPath()))\n                .setBody(body);\n        this.host.sendAndWaitExpectSuccess(put);\n\n        // verify factory now appears unavailable\n        Operation get = Operation.createGet(UriUtils.buildAvailableUri(factoryURI));\n        this.host.sendAndWaitExpectFailure(get);\n\n        // verify PUT on child services makes them unavailable\n        ctx = testCreate(states.size());\n        for (URI u : states.keySet()) {\n            put = put.clone().setUri(UriUtils.buildAvailableUri(u))\n                    .setBody(body)\n                    .setCompletion(ctx.getCompletion());\n            this.host.send(put);\n        }\n        testWait(ctx);\n\n        // expect 503 from /factory/<child>/available\n        ctx = testCreate(states.size());\n        for (URI u : states.keySet()) {\n            get = get.clone().setUri(UriUtils.buildAvailableUri(u))\n                    .setCompletion(ctx.getExpectedFailureCompletion());\n            this.host.send(get);\n        }\n        testWait(ctx);\n\n        // now validate a stateful service that is in memory, and explicitly calls setAvailable\n        // sometime after it starts\n        Service service = this.host.startServiceAndWait(new SetAvailableValidationService(),\n                UUID.randomUUID().toString(), new ExampleServiceState());\n\n        // verify service is NOT available, since we have not yet poked it, to become available\n        get = Operation.createGet(UriUtils.buildAvailableUri(service.getUri()));\n        this.host.sendAndWaitExpectFailure(get);\n\n        // send a PATCH to this special test service, to make it switch to available\n        Operation patch = Operation.createPatch(service.getUri())\n                .setBody(new ExampleServiceState());\n        this.host.sendAndWaitExpectSuccess(patch);\n\n        // verify service now appears available\n        get = Operation.createGet(UriUtils.buildAvailableUri(service.getUri()));\n        this.host.sendAndWaitExpectSuccess(get);\n    }", "signature": "void testIsAvailableStatAndSuffix()", "full_signature": "@Test public void testIsAvailableStatAndSuffix()", "class_method_signature": "TestUtilityService.testIsAvailableStatAndSuffix()", "testcase": true, "constructor": false, "invocations": ["buildFactoryUri", "toString", "randomUUID", "setBody", "doFactoryChildServiceStart", "waitForServiceAvailable", "testCreate", "size", "keySet", "setCompletion", "createGet", "buildAvailableUri", "getCompletion", "send", "testWait", "setBody", "createPut", "buildAvailableUri", "getPath", "sendAndWaitExpectSuccess", "createGet", "buildAvailableUri", "sendAndWaitExpectFailure", "testCreate", "size", "keySet", "setCompletion", "setBody", "setUri", "clone", "buildAvailableUri", "getCompletion", "send", "testWait", "testCreate", "size", "keySet", "setCompletion", "setUri", "clone", "buildAvailableUri", "getExpectedFailureCompletion", "send", "testWait", "startServiceAndWait", "toString", "randomUUID", "createGet", "buildAvailableUri", "getUri", "sendAndWaitExpectFailure", "setBody", "createPatch", "getUri", "sendAndWaitExpectSuccess", "createGet", "buildAvailableUri", "getUri", "sendAndWaitExpectSuccess"]}, "focal_class": {"identifier": "UtilityService", "superclass": "", "interfaces": "implements Service", "fields": [{"original_string": "private transient Service parent;", "modifier": "private transient", "type": "Service", "declarator": "parent", "var_name": "parent"}, {"original_string": "private ServiceStats stats;", "modifier": "private", "type": "ServiceStats", "declarator": "stats", "var_name": "stats"}, {"original_string": "private ServiceSubscriptionState subscriptions;", "modifier": "private", "type": "ServiceSubscriptionState", "declarator": "subscriptions", "var_name": "subscriptions"}, {"original_string": "private UiContentService uiService;", "modifier": "private", "type": "UiContentService", "declarator": "uiService", "var_name": "uiService"}, {"original_string": "private static final StatsKeyDeduper STATS_KEY_DICT = new StatsKeyDeduper();", "modifier": "private static final", "type": "StatsKeyDeduper", "declarator": "STATS_KEY_DICT = new StatsKeyDeduper()", "var_name": "STATS_KEY_DICT"}], "methods": [{"identifier": "UtilityService", "parameters": "()", "modifiers": "public", "return": "", "signature": " UtilityService()", "full_signature": "public  UtilityService()", "class_method_signature": "UtilityService.UtilityService()", "testcase": false, "constructor": true}, {"identifier": "setParent", "parameters": "(Service parent)", "modifiers": "public", "return": "UtilityService", "signature": "UtilityService setParent(Service parent)", "full_signature": "public UtilityService setParent(Service parent)", "class_method_signature": "UtilityService.setParent(Service parent)", "testcase": false, "constructor": false}, {"identifier": "authorizeRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void authorizeRequest(Operation op)", "full_signature": "@Override public void authorizeRequest(Operation op)", "class_method_signature": "UtilityService.authorizeRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void handleRequest(Operation op)", "full_signature": "@Override public void handleRequest(Operation op)", "class_method_signature": "UtilityService.handleRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleCreate", "parameters": "(Operation post)", "modifiers": "@Override public", "return": "void", "signature": "void handleCreate(Operation post)", "full_signature": "@Override public void handleCreate(Operation post)", "class_method_signature": "UtilityService.handleCreate(Operation post)", "testcase": false, "constructor": false}, {"identifier": "handleStart", "parameters": "(Operation startPost)", "modifiers": "@Override public", "return": "void", "signature": "void handleStart(Operation startPost)", "full_signature": "@Override public void handleStart(Operation startPost)", "class_method_signature": "UtilityService.handleStart(Operation startPost)", "testcase": false, "constructor": false}, {"identifier": "handleStop", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void handleStop(Operation op)", "full_signature": "@Override public void handleStop(Operation op)", "class_method_signature": "UtilityService.handleStop(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(Operation op, OperationProcessingStage opProcessingStage)", "modifiers": "@Override public", "return": "void", "signature": "void handleRequest(Operation op, OperationProcessingStage opProcessingStage)", "full_signature": "@Override public void handleRequest(Operation op, OperationProcessingStage opProcessingStage)", "class_method_signature": "UtilityService.handleRequest(Operation op, OperationProcessingStage opProcessingStage)", "testcase": false, "constructor": false}, {"identifier": "handleSynchRequest", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleSynchRequest(Operation op)", "full_signature": "private void handleSynchRequest(Operation op)", "class_method_signature": "UtilityService.handleSynchRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "synchronizeChildService", "parameters": "(String link, Operation op)", "modifiers": "private", "return": "void", "signature": "void synchronizeChildService(String link, Operation op)", "full_signature": "private void synchronizeChildService(String link, Operation op)", "class_method_signature": "UtilityService.synchronizeChildService(String link, Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleAvailableRequest", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleAvailableRequest(Operation op)", "full_signature": "private void handleAvailableRequest(Operation op)", "class_method_signature": "UtilityService.handleAvailableRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleSubscriptionsRequest", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleSubscriptionsRequest(Operation op)", "full_signature": "private void handleSubscriptionsRequest(Operation op)", "class_method_signature": "UtilityService.handleSubscriptionsRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "hasSubscribers", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasSubscribers()", "full_signature": "public boolean hasSubscribers()", "class_method_signature": "UtilityService.hasSubscribers()", "testcase": false, "constructor": false}, {"identifier": "hasStats", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasStats()", "full_signature": "public boolean hasStats()", "class_method_signature": "UtilityService.hasStats()", "testcase": false, "constructor": false}, {"identifier": "notifySubscribers", "parameters": "(Operation op)", "modifiers": "public", "return": "void", "signature": "void notifySubscribers(Operation op)", "full_signature": "public void notifySubscribers(Operation op)", "class_method_signature": "UtilityService.notifySubscribers(Operation op)", "testcase": false, "constructor": false}, {"identifier": "notifySubscriber", "parameters": "(long now, Operation clone, ServiceSubscriber s)", "modifiers": "private", "return": "void", "signature": "void notifySubscriber(long now, Operation clone, ServiceSubscriber s)", "full_signature": "private void notifySubscriber(long now, Operation clone, ServiceSubscriber s)", "class_method_signature": "UtilityService.notifySubscriber(long now, Operation clone, ServiceSubscriber s)", "testcase": false, "constructor": false}, {"identifier": "performSubscriptionsMaintenance", "parameters": "(long now)", "modifiers": "private", "return": "boolean", "signature": "boolean performSubscriptionsMaintenance(long now)", "full_signature": "private boolean performSubscriptionsMaintenance(long now)", "class_method_signature": "UtilityService.performSubscriptionsMaintenance(long now)", "testcase": false, "constructor": false}, {"identifier": "handleUiRequest", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleUiRequest(Operation op)", "full_signature": "private void handleUiRequest(Operation op)", "class_method_signature": "UtilityService.handleUiRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "redirectGetToHtmlUiResource", "parameters": "(Operation op, String htmlResourcePath)", "modifiers": "public", "return": "void", "signature": "void redirectGetToHtmlUiResource(Operation op, String htmlResourcePath)", "full_signature": "public void redirectGetToHtmlUiResource(Operation op, String htmlResourcePath)", "class_method_signature": "UtilityService.redirectGetToHtmlUiResource(Operation op, String htmlResourcePath)", "testcase": false, "constructor": false}, {"identifier": "handleStatsRequest", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleStatsRequest(Operation op)", "full_signature": "private void handleStatsRequest(Operation op)", "class_method_signature": "UtilityService.handleStatsRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleStatsGetWithODataRequest", "parameters": "(Operation op, ServiceStats rsp)", "modifiers": "private", "return": "boolean", "signature": "boolean handleStatsGetWithODataRequest(Operation op, ServiceStats rsp)", "full_signature": "private boolean handleStatsGetWithODataRequest(Operation op, ServiceStats rsp)", "class_method_signature": "UtilityService.handleStatsGetWithODataRequest(Operation op, ServiceStats rsp)", "testcase": false, "constructor": false}, {"identifier": "processStatsODataQueryClauses", "parameters": "(Operation op, ServiceStats rsp,\n            List<Query> clauses)", "modifiers": "private", "return": "boolean", "signature": "boolean processStatsODataQueryClauses(Operation op, ServiceStats rsp,\n            List<Query> clauses)", "full_signature": "private boolean processStatsODataQueryClauses(Operation op, ServiceStats rsp,\n            List<Query> clauses)", "class_method_signature": "UtilityService.processStatsODataQueryClauses(Operation op, ServiceStats rsp,\n            List<Query> clauses)", "testcase": false, "constructor": false}, {"identifier": "populateDocumentProperties", "parameters": "(ServiceStats stats)", "modifiers": "private", "return": "ServiceStats", "signature": "ServiceStats populateDocumentProperties(ServiceStats stats)", "full_signature": "private ServiceStats populateDocumentProperties(ServiceStats stats)", "class_method_signature": "UtilityService.populateDocumentProperties(ServiceStats stats)", "testcase": false, "constructor": false}, {"identifier": "handleDocumentTemplateRequest", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleDocumentTemplateRequest(Operation op)", "full_signature": "private void handleDocumentTemplateRequest(Operation op)", "class_method_signature": "UtilityService.handleDocumentTemplateRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleConfigurationRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void handleConfigurationRequest(Operation op)", "full_signature": "@Override public void handleConfigurationRequest(Operation op)", "class_method_signature": "UtilityService.handleConfigurationRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handlePatchConfiguration", "parameters": "(Operation op, ServiceConfigUpdateRequest updateBody)", "modifiers": "public", "return": "void", "signature": "void handlePatchConfiguration(Operation op, ServiceConfigUpdateRequest updateBody)", "full_signature": "public void handlePatchConfiguration(Operation op, ServiceConfigUpdateRequest updateBody)", "class_method_signature": "UtilityService.handlePatchConfiguration(Operation op, ServiceConfigUpdateRequest updateBody)", "testcase": false, "constructor": false}, {"identifier": "initializeOrSetStat", "parameters": "(ServiceStat stat, ServiceStat newValue)", "modifiers": "private", "return": "void", "signature": "void initializeOrSetStat(ServiceStat stat, ServiceStat newValue)", "full_signature": "private void initializeOrSetStat(ServiceStat stat, ServiceStat newValue)", "class_method_signature": "UtilityService.initializeOrSetStat(ServiceStat stat, ServiceStat newValue)", "testcase": false, "constructor": false}, {"identifier": "setStat", "parameters": "(ServiceStat stat, double newValue)", "modifiers": "@Override public", "return": "void", "signature": "void setStat(ServiceStat stat, double newValue)", "full_signature": "@Override public void setStat(ServiceStat stat, double newValue)", "class_method_signature": "UtilityService.setStat(ServiceStat stat, double newValue)", "testcase": false, "constructor": false}, {"identifier": "addHistogram", "parameters": "(ServiceStat stat, double newValue)", "modifiers": "private", "return": "void", "signature": "void addHistogram(ServiceStat stat, double newValue)", "full_signature": "private void addHistogram(ServiceStat stat, double newValue)", "class_method_signature": "UtilityService.addHistogram(ServiceStat stat, double newValue)", "testcase": false, "constructor": false}, {"identifier": "adjustStat", "parameters": "(ServiceStat stat, double delta)", "modifiers": "@Override public", "return": "void", "signature": "void adjustStat(ServiceStat stat, double delta)", "full_signature": "@Override public void adjustStat(ServiceStat stat, double delta)", "class_method_signature": "UtilityService.adjustStat(ServiceStat stat, double delta)", "testcase": false, "constructor": false}, {"identifier": "getStat", "parameters": "(String name)", "modifiers": "@Override public", "return": "ServiceStat", "signature": "ServiceStat getStat(String name)", "full_signature": "@Override public ServiceStat getStat(String name)", "class_method_signature": "UtilityService.getStat(String name)", "testcase": false, "constructor": false}, {"identifier": "getStat", "parameters": "(String name, boolean create)", "modifiers": "private", "return": "ServiceStat", "signature": "ServiceStat getStat(String name, boolean create)", "full_signature": "private ServiceStat getStat(String name, boolean create)", "class_method_signature": "UtilityService.getStat(String name, boolean create)", "testcase": false, "constructor": false}, {"identifier": "replaceSingleStat", "parameters": "(ServiceStat stat)", "modifiers": "private", "return": "void", "signature": "void replaceSingleStat(ServiceStat stat)", "full_signature": "private void replaceSingleStat(ServiceStat stat)", "class_method_signature": "UtilityService.replaceSingleStat(ServiceStat stat)", "testcase": false, "constructor": false}, {"identifier": "replaceAllStats", "parameters": "(ServiceStats newStats)", "modifiers": "private", "return": "void", "signature": "void replaceAllStats(ServiceStats newStats)", "full_signature": "private void replaceAllStats(ServiceStats newStats)", "class_method_signature": "UtilityService.replaceAllStats(ServiceStats newStats)", "testcase": false, "constructor": false}, {"identifier": "findStat", "parameters": "(String name, boolean create, ServiceStat initialStat)", "modifiers": "private", "return": "ServiceStat", "signature": "ServiceStat findStat(String name, boolean create, ServiceStat initialStat)", "full_signature": "private ServiceStat findStat(String name, boolean create, ServiceStat initialStat)", "class_method_signature": "UtilityService.findStat(String name, boolean create, ServiceStat initialStat)", "testcase": false, "constructor": false}, {"identifier": "allocateStats", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void allocateStats()", "full_signature": "private void allocateStats()", "class_method_signature": "UtilityService.allocateStats()", "testcase": false, "constructor": false}, {"identifier": "allocateStats", "parameters": "(boolean mustAllocate)", "modifiers": "private synchronized", "return": "boolean", "signature": "boolean allocateStats(boolean mustAllocate)", "full_signature": "private synchronized boolean allocateStats(boolean mustAllocate)", "class_method_signature": "UtilityService.allocateStats(boolean mustAllocate)", "testcase": false, "constructor": false}, {"identifier": "getHost", "parameters": "()", "modifiers": "@Override public", "return": "ServiceHost", "signature": "ServiceHost getHost()", "full_signature": "@Override public ServiceHost getHost()", "class_method_signature": "UtilityService.getHost()", "testcase": false, "constructor": false}, {"identifier": "getSelfLink", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSelfLink()", "full_signature": "@Override public String getSelfLink()", "class_method_signature": "UtilityService.getSelfLink()", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "UtilityService.getUri()", "testcase": false, "constructor": false}, {"identifier": "getOperationProcessingChain", "parameters": "()", "modifiers": "@Override public", "return": "OperationProcessingChain", "signature": "OperationProcessingChain getOperationProcessingChain()", "full_signature": "@Override public OperationProcessingChain getOperationProcessingChain()", "class_method_signature": "UtilityService.getOperationProcessingChain()", "testcase": false, "constructor": false}, {"identifier": "getProcessingStage", "parameters": "()", "modifiers": "@Override public", "return": "ProcessingStage", "signature": "ProcessingStage getProcessingStage()", "full_signature": "@Override public ProcessingStage getProcessingStage()", "class_method_signature": "UtilityService.getProcessingStage()", "testcase": false, "constructor": false}, {"identifier": "getOptions", "parameters": "()", "modifiers": "@Override public", "return": "EnumSet<ServiceOption>", "signature": "EnumSet<ServiceOption> getOptions()", "full_signature": "@Override public EnumSet<ServiceOption> getOptions()", "class_method_signature": "UtilityService.getOptions()", "testcase": false, "constructor": false}, {"identifier": "hasOption", "parameters": "(ServiceOption cap)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasOption(ServiceOption cap)", "full_signature": "@Override public boolean hasOption(ServiceOption cap)", "class_method_signature": "UtilityService.hasOption(ServiceOption cap)", "testcase": false, "constructor": false}, {"identifier": "toggleOption", "parameters": "(ServiceOption cap, boolean enable)", "modifiers": "@Override public", "return": "void", "signature": "void toggleOption(ServiceOption cap, boolean enable)", "full_signature": "@Override public void toggleOption(ServiceOption cap, boolean enable)", "class_method_signature": "UtilityService.toggleOption(ServiceOption cap, boolean enable)", "testcase": false, "constructor": false}, {"identifier": "adjustStat", "parameters": "(String name, double delta)", "modifiers": "@Override public", "return": "void", "signature": "void adjustStat(String name, double delta)", "full_signature": "@Override public void adjustStat(String name, double delta)", "class_method_signature": "UtilityService.adjustStat(String name, double delta)", "testcase": false, "constructor": false}, {"identifier": "setStat", "parameters": "(String name, double newValue)", "modifiers": "@Override public", "return": "void", "signature": "void setStat(String name, double newValue)", "full_signature": "@Override public void setStat(String name, double newValue)", "class_method_signature": "UtilityService.setStat(String name, double newValue)", "testcase": false, "constructor": false}, {"identifier": "handleMaintenance", "parameters": "(Operation post)", "modifiers": "@Override public", "return": "void", "signature": "void handleMaintenance(Operation post)", "full_signature": "@Override public void handleMaintenance(Operation post)", "class_method_signature": "UtilityService.handleMaintenance(Operation post)", "testcase": false, "constructor": false}, {"identifier": "setHost", "parameters": "(ServiceHost serviceHost)", "modifiers": "@Override public", "return": "void", "signature": "void setHost(ServiceHost serviceHost)", "full_signature": "@Override public void setHost(ServiceHost serviceHost)", "class_method_signature": "UtilityService.setHost(ServiceHost serviceHost)", "testcase": false, "constructor": false}, {"identifier": "setSelfLink", "parameters": "(String path)", "modifiers": "@Override public", "return": "void", "signature": "void setSelfLink(String path)", "full_signature": "@Override public void setSelfLink(String path)", "class_method_signature": "UtilityService.setSelfLink(String path)", "testcase": false, "constructor": false}, {"identifier": "setOperationProcessingChain", "parameters": "(OperationProcessingChain opProcessingChain)", "modifiers": "@Override public", "return": "void", "signature": "void setOperationProcessingChain(OperationProcessingChain opProcessingChain)", "full_signature": "@Override public void setOperationProcessingChain(OperationProcessingChain opProcessingChain)", "class_method_signature": "UtilityService.setOperationProcessingChain(OperationProcessingChain opProcessingChain)", "testcase": false, "constructor": false}, {"identifier": "setProcessingStage", "parameters": "(ProcessingStage initialized)", "modifiers": "@Override public", "return": "void", "signature": "void setProcessingStage(ProcessingStage initialized)", "full_signature": "@Override public void setProcessingStage(ProcessingStage initialized)", "class_method_signature": "UtilityService.setProcessingStage(ProcessingStage initialized)", "testcase": false, "constructor": false}, {"identifier": "setInitialState", "parameters": "(Object state, Long initialVersion)", "modifiers": "@Override public", "return": "ServiceDocument", "signature": "ServiceDocument setInitialState(Object state, Long initialVersion)", "full_signature": "@Override public ServiceDocument setInitialState(Object state, Long initialVersion)", "class_method_signature": "UtilityService.setInitialState(Object state, Long initialVersion)", "testcase": false, "constructor": false}, {"identifier": "getUtilityService", "parameters": "(String uriPath)", "modifiers": "@Override public", "return": "Service", "signature": "Service getUtilityService(String uriPath)", "full_signature": "@Override public Service getUtilityService(String uriPath)", "class_method_signature": "UtilityService.getUtilityService(String uriPath)", "testcase": false, "constructor": false}, {"identifier": "queueRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean queueRequest(Operation op)", "full_signature": "@Override public boolean queueRequest(Operation op)", "class_method_signature": "UtilityService.queueRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "sendRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void sendRequest(Operation op)", "full_signature": "@Override public void sendRequest(Operation op)", "class_method_signature": "UtilityService.sendRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "getDocumentTemplate", "parameters": "()", "modifiers": "@Override public", "return": "ServiceDocument", "signature": "ServiceDocument getDocumentTemplate()", "full_signature": "@Override public ServiceDocument getDocumentTemplate()", "class_method_signature": "UtilityService.getDocumentTemplate()", "testcase": false, "constructor": false}, {"identifier": "setPeerNodeSelectorPath", "parameters": "(String uriPath)", "modifiers": "@Override public", "return": "void", "signature": "void setPeerNodeSelectorPath(String uriPath)", "full_signature": "@Override public void setPeerNodeSelectorPath(String uriPath)", "class_method_signature": "UtilityService.setPeerNodeSelectorPath(String uriPath)", "testcase": false, "constructor": false}, {"identifier": "getPeerNodeSelectorPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPeerNodeSelectorPath()", "full_signature": "@Override public String getPeerNodeSelectorPath()", "class_method_signature": "UtilityService.getPeerNodeSelectorPath()", "testcase": false, "constructor": false}, {"identifier": "setDocumentIndexPath", "parameters": "(String uriPath)", "modifiers": "@Override public", "return": "void", "signature": "void setDocumentIndexPath(String uriPath)", "full_signature": "@Override public void setDocumentIndexPath(String uriPath)", "class_method_signature": "UtilityService.setDocumentIndexPath(String uriPath)", "testcase": false, "constructor": false}, {"identifier": "getDocumentIndexPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDocumentIndexPath()", "full_signature": "@Override public String getDocumentIndexPath()", "class_method_signature": "UtilityService.getDocumentIndexPath()", "testcase": false, "constructor": false}, {"identifier": "setState", "parameters": "(Operation op, ServiceDocument newState)", "modifiers": "@Override public", "return": "void", "signature": "void setState(Operation op, ServiceDocument newState)", "full_signature": "@Override public void setState(Operation op, ServiceDocument newState)", "class_method_signature": "UtilityService.setState(Operation op, ServiceDocument newState)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "(Operation op)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T getState(Operation op)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T getState(Operation op)", "class_method_signature": "UtilityService.getState(Operation op)", "testcase": false, "constructor": false}, {"identifier": "setMaintenanceIntervalMicros", "parameters": "(long micros)", "modifiers": "@Override public", "return": "void", "signature": "void setMaintenanceIntervalMicros(long micros)", "full_signature": "@Override public void setMaintenanceIntervalMicros(long micros)", "class_method_signature": "UtilityService.setMaintenanceIntervalMicros(long micros)", "testcase": false, "constructor": false}, {"identifier": "setCacheClearDelayMicros", "parameters": "(long micros)", "modifiers": "@Override public", "return": "void", "signature": "void setCacheClearDelayMicros(long micros)", "full_signature": "@Override public void setCacheClearDelayMicros(long micros)", "class_method_signature": "UtilityService.setCacheClearDelayMicros(long micros)", "testcase": false, "constructor": false}, {"identifier": "getMaintenanceIntervalMicros", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMaintenanceIntervalMicros()", "full_signature": "@Override public long getMaintenanceIntervalMicros()", "class_method_signature": "UtilityService.getMaintenanceIntervalMicros()", "testcase": false, "constructor": false}, {"identifier": "getCacheClearDelayMicros", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getCacheClearDelayMicros()", "full_signature": "@Override public long getCacheClearDelayMicros()", "class_method_signature": "UtilityService.getCacheClearDelayMicros()", "testcase": false, "constructor": false}, {"identifier": "dequeueRequest", "parameters": "()", "modifiers": "@Override public", "return": "Operation", "signature": "Operation dequeueRequest()", "full_signature": "@Override public Operation dequeueRequest()", "class_method_signature": "UtilityService.dequeueRequest()", "testcase": false, "constructor": false}, {"identifier": "getStateType", "parameters": "()", "modifiers": "@Override public", "return": "Class<? extends ServiceDocument>", "signature": "Class<? extends ServiceDocument> getStateType()", "full_signature": "@Override public Class<? extends ServiceDocument> getStateType()", "class_method_signature": "UtilityService.getStateType()", "testcase": false, "constructor": false}, {"identifier": "setAuthorizationContext", "parameters": "(Operation op, AuthorizationContext ctx)", "modifiers": "@Override public final", "return": "void", "signature": "void setAuthorizationContext(Operation op, AuthorizationContext ctx)", "full_signature": "@Override public final void setAuthorizationContext(Operation op, AuthorizationContext ctx)", "class_method_signature": "UtilityService.setAuthorizationContext(Operation op, AuthorizationContext ctx)", "testcase": false, "constructor": false}, {"identifier": "getSystemAuthorizationContext", "parameters": "()", "modifiers": "@Override public final", "return": "AuthorizationContext", "signature": "AuthorizationContext getSystemAuthorizationContext()", "full_signature": "@Override public final AuthorizationContext getSystemAuthorizationContext()", "class_method_signature": "UtilityService.getSystemAuthorizationContext()", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/UtilityService.java"}, "focal_method": {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "body": "@Override\n    public URI getUri() {\n        return null;\n    }", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "UtilityService.getUri()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}