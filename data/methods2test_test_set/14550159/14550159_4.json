{"test_class": {"identifier": "DependencySupplierImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "everrest-core/src/test/java/org/everrest/core/tools/DependencySupplierImplTest.java"}, "test_case": {"identifier": "providesInstanceProviderByParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void providesInstanceProviderByParameter() throws Exception {\n        DependencySupplierImpl dependencySupplier = createDependencySupplier(\"foo\", -1);\n        ParameterizedType stringProviderParameterizedType = newParameterizedType(Provider.class, String.class);\n\n        Object instance = dependencySupplier.getInstance(createParameter(Provider.class, stringProviderParameterizedType, null));\n\n        assertTrue(\n                String.format(\"Instance of javax.inject.Provider expected but %s found\", instance == null ? \"null\" : instance.getClass()),\n                instance instanceof Provider);\n        assertEquals(\"foo\", ((Provider)instance).get());\n    }", "signature": "void providesInstanceProviderByParameter()", "full_signature": "@Test public void providesInstanceProviderByParameter()", "class_method_signature": "DependencySupplierImplTest.providesInstanceProviderByParameter()", "testcase": true, "constructor": false, "invocations": ["createDependencySupplier", "newParameterizedType", "getInstance", "createParameter", "assertTrue", "format", "getClass", "assertEquals", "get"]}, "focal_class": {"identifier": "DependencySupplierImpl", "superclass": "extends BaseDependencySupplier", "interfaces": "", "fields": [{"original_string": "private final Map<Class<?>, Object> dependencies = new HashMap<Class<?>, Object>();", "modifier": "private final", "type": "Map<Class<?>, Object>", "declarator": "dependencies = new HashMap<Class<?>, Object>()", "var_name": "dependencies"}], "methods": [{"identifier": "DependencySupplierImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " DependencySupplierImpl()", "full_signature": "public  DependencySupplierImpl()", "class_method_signature": "DependencySupplierImpl.DependencySupplierImpl()", "testcase": false, "constructor": true}, {"identifier": "DependencySupplierImpl", "parameters": "(Class<? extends Annotation> injectAnnotation)", "modifiers": "public", "return": "", "signature": " DependencySupplierImpl(Class<? extends Annotation> injectAnnotation)", "full_signature": "public  DependencySupplierImpl(Class<? extends Annotation> injectAnnotation)", "class_method_signature": "DependencySupplierImpl.DependencySupplierImpl(Class<? extends Annotation> injectAnnotation)", "testcase": false, "constructor": true}, {"identifier": "addInstance", "parameters": "(Class<?> key, Object instance)", "modifiers": "public", "return": "void", "signature": "void addInstance(Class<?> key, Object instance)", "full_signature": "public void addInstance(Class<?> key, Object instance)", "class_method_signature": "DependencySupplierImpl.addInstance(Class<?> key, Object instance)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(Class<?> type)", "modifiers": "@Override public", "return": "Object", "signature": "Object getInstance(Class<?> type)", "full_signature": "@Override public Object getInstance(Class<?> type)", "class_method_signature": "DependencySupplierImpl.getInstance(Class<?> type)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/tools/DependencySupplierImpl.java"}, "focal_method": {"identifier": "getInstance", "parameters": "(Class<?> type)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object getInstance(Class<?> type) {\n        return dependencies.get(type);\n    }", "signature": "Object getInstance(Class<?> type)", "full_signature": "@Override public Object getInstance(Class<?> type)", "class_method_signature": "DependencySupplierImpl.getInstance(Class<?> type)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}