{"test_class": {"identifier": "SimpleOntologyValuesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String IRI = \"urn:test\";", "modifier": "private static final", "type": "String", "declarator": "IRI = \"urn:test\"", "var_name": "IRI"}, {"original_string": "private ValueFactory factory;", "modifier": "private", "type": "ValueFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private BNodeService bNodeService;", "modifier": "private", "type": "BNodeService", "declarator": "bNodeService", "var_name": "bNodeService"}, {"original_string": "private IRI ontologyIRI;", "modifier": "private", "type": "IRI", "declarator": "ontologyIRI", "var_name": "ontologyIRI"}, {"original_string": "private IRI versionIRI;", "modifier": "private", "type": "IRI", "declarator": "versionIRI", "var_name": "versionIRI"}, {"original_string": "private org.semanticweb.owlapi.model.IRI owlOntologyIRI;", "modifier": "private", "type": "org.semanticweb.owlapi.model.IRI", "declarator": "owlOntologyIRI", "var_name": "owlOntologyIRI"}], "file": "com.mobi.ontology.impl.owlapi/src/test/java/com/mobi/ontology/impl/owlapi/SimpleOntologyValuesTest.java"}, "test_case": {"identifier": "testOwlapiIndividual", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOwlapiIndividual() throws Exception {\n        Individual mobiIndividual = mock(Individual.class);\n        IRI mobiIRI = mock(IRI.class);\n        org.semanticweb.owlapi.model.IRI owlIRI = mock(org.semanticweb.owlapi.model.IRI.class);\n        \n        expect(mobiIndividual.getIRI()).andReturn(mobiIRI);\n        expect(mobiIRI.stringValue()).andReturn(\"http://www.test.com/owlapiNamedIndividual\");\n        \n        mockStaticPartial(SimpleOntologyValues.class, \"owlapiIRI\");\n        expect(SimpleOntologyValues.owlapiIRI(isA(IRI.class))).andReturn(owlIRI);\n        replay(mobiIndividual, mobiIRI, SimpleOntologyValues.class);\n        \n        assertTrue(SimpleOntologyValues.owlapiIndividual(mobiIndividual).isOWLNamedIndividual());\n    }", "signature": "void testOwlapiIndividual()", "full_signature": "@Test public void testOwlapiIndividual()", "class_method_signature": "SimpleOntologyValuesTest.testOwlapiIndividual()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "andReturn", "expect", "getIRI", "andReturn", "expect", "stringValue", "mockStaticPartial", "andReturn", "expect", "owlapiIRI", "isA", "replay", "assertTrue", "isOWLNamedIndividual", "owlapiIndividual"]}, "focal_class": {"identifier": "SimpleOntologyValues", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ValueFactory factory;", "modifier": "private static", "type": "ValueFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private static OntologyManager ontologyManager;", "modifier": "private static", "type": "OntologyManager", "declarator": "ontologyManager", "var_name": "ontologyManager"}, {"original_string": "private static SesameTransformer sesameTransformer;", "modifier": "private static", "type": "SesameTransformer", "declarator": "sesameTransformer", "var_name": "sesameTransformer"}, {"original_string": "private static BNodeService bNodeService;", "modifier": "private static", "type": "BNodeService", "declarator": "bNodeService", "var_name": "bNodeService"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SimpleOntologyValues.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SimpleOntologyValues.class)", "var_name": "LOG"}], "methods": [{"identifier": "activate", "parameters": "()", "modifiers": "@Activate public", "return": "void", "signature": "void activate()", "full_signature": "@Activate public void activate()", "class_method_signature": "SimpleOntologyValues.activate()", "testcase": false, "constructor": false}, {"identifier": "deactivate", "parameters": "()", "modifiers": "@Deactivate public", "return": "void", "signature": "void deactivate()", "full_signature": "@Deactivate public void deactivate()", "class_method_signature": "SimpleOntologyValues.deactivate()", "testcase": false, "constructor": false}, {"identifier": "setValueFactory", "parameters": "(final ValueFactory vf)", "modifiers": "@Reference protected", "return": "void", "signature": "void setValueFactory(final ValueFactory vf)", "full_signature": "@Reference protected void setValueFactory(final ValueFactory vf)", "class_method_signature": "SimpleOntologyValues.setValueFactory(final ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "setOntologyManager", "parameters": "(final OntologyManager manager)", "modifiers": "@Reference protected", "return": "void", "signature": "void setOntologyManager(final OntologyManager manager)", "full_signature": "@Reference protected void setOntologyManager(final OntologyManager manager)", "class_method_signature": "SimpleOntologyValues.setOntologyManager(final OntologyManager manager)", "testcase": false, "constructor": false}, {"identifier": "setTransformer", "parameters": "(final SesameTransformer transformer)", "modifiers": "@Reference protected", "return": "void", "signature": "void setTransformer(final SesameTransformer transformer)", "full_signature": "@Reference protected void setTransformer(final SesameTransformer transformer)", "class_method_signature": "SimpleOntologyValues.setTransformer(final SesameTransformer transformer)", "testcase": false, "constructor": false}, {"identifier": "setbNodeService", "parameters": "(final BNodeService service)", "modifiers": "@Reference protected", "return": "void", "signature": "void setbNodeService(final BNodeService service)", "full_signature": "@Reference protected void setbNodeService(final BNodeService service)", "class_method_signature": "SimpleOntologyValues.setbNodeService(final BNodeService service)", "testcase": false, "constructor": false}, {"identifier": "SimpleOntologyValues", "parameters": "()", "modifiers": "public", "return": "", "signature": " SimpleOntologyValues()", "full_signature": "public  SimpleOntologyValues()", "class_method_signature": "SimpleOntologyValues.SimpleOntologyValues()", "testcase": false, "constructor": true}, {"identifier": "owlapiOntology", "parameters": "(Ontology ontology)", "modifiers": "public static", "return": "OWLOntology", "signature": "OWLOntology owlapiOntology(Ontology ontology)", "full_signature": "public static OWLOntology owlapiOntology(Ontology ontology)", "class_method_signature": "SimpleOntologyValues.owlapiOntology(Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "mobiIRI", "parameters": "(org.semanticweb.owlapi.model.IRI owlIri)", "modifiers": "public static", "return": "IRI", "signature": "IRI mobiIRI(org.semanticweb.owlapi.model.IRI owlIri)", "full_signature": "public static IRI mobiIRI(org.semanticweb.owlapi.model.IRI owlIri)", "class_method_signature": "SimpleOntologyValues.mobiIRI(org.semanticweb.owlapi.model.IRI owlIri)", "testcase": false, "constructor": false}, {"identifier": "owlapiIRI", "parameters": "(IRI mobiIri)", "modifiers": "public static", "return": "org.semanticweb.owlapi.model.IRI", "signature": "org.semanticweb.owlapi.model.IRI owlapiIRI(IRI mobiIri)", "full_signature": "public static org.semanticweb.owlapi.model.IRI owlapiIRI(IRI mobiIri)", "class_method_signature": "SimpleOntologyValues.owlapiIRI(IRI mobiIri)", "testcase": false, "constructor": false}, {"identifier": "mobiLiteral", "parameters": "(OWLLiteral owlLiteral)", "modifiers": "public static", "return": "Literal", "signature": "Literal mobiLiteral(OWLLiteral owlLiteral)", "full_signature": "public static Literal mobiLiteral(OWLLiteral owlLiteral)", "class_method_signature": "SimpleOntologyValues.mobiLiteral(OWLLiteral owlLiteral)", "testcase": false, "constructor": false}, {"identifier": "owlapiLiteral", "parameters": "(Literal literal)", "modifiers": "public static", "return": "OWLLiteral", "signature": "OWLLiteral owlapiLiteral(Literal literal)", "full_signature": "public static OWLLiteral owlapiLiteral(Literal literal)", "class_method_signature": "SimpleOntologyValues.owlapiLiteral(Literal literal)", "testcase": false, "constructor": false}, {"identifier": "mobiAnnotation", "parameters": "(OWLAnnotation owlAnno)", "modifiers": "public static", "return": "Annotation", "signature": "Annotation mobiAnnotation(OWLAnnotation owlAnno)", "full_signature": "public static Annotation mobiAnnotation(OWLAnnotation owlAnno)", "class_method_signature": "SimpleOntologyValues.mobiAnnotation(OWLAnnotation owlAnno)", "testcase": false, "constructor": false}, {"identifier": "owlapiAnnotation", "parameters": "(Annotation anno)", "modifiers": "public static", "return": "OWLAnnotation", "signature": "OWLAnnotation owlapiAnnotation(Annotation anno)", "full_signature": "public static OWLAnnotation owlapiAnnotation(Annotation anno)", "class_method_signature": "SimpleOntologyValues.owlapiAnnotation(Annotation anno)", "testcase": false, "constructor": false}, {"identifier": "mobiIndividual", "parameters": "(OWLIndividual owlapiIndividual)", "modifiers": "public static", "return": "Individual", "signature": "Individual mobiIndividual(OWLIndividual owlapiIndividual)", "full_signature": "public static Individual mobiIndividual(OWLIndividual owlapiIndividual)", "class_method_signature": "SimpleOntologyValues.mobiIndividual(OWLIndividual owlapiIndividual)", "testcase": false, "constructor": false}, {"identifier": "owlapiIndividual", "parameters": "(Individual mobiIndividual)", "modifiers": "public static", "return": "OWLNamedIndividual", "signature": "OWLNamedIndividual owlapiIndividual(Individual mobiIndividual)", "full_signature": "public static OWLNamedIndividual owlapiIndividual(Individual mobiIndividual)", "class_method_signature": "SimpleOntologyValues.owlapiIndividual(Individual mobiIndividual)", "testcase": false, "constructor": false}, {"identifier": "mobiOntologyId", "parameters": "(OWLOntologyID owlId)", "modifiers": "public static", "return": "OntologyId", "signature": "OntologyId mobiOntologyId(OWLOntologyID owlId)", "full_signature": "public static OntologyId mobiOntologyId(OWLOntologyID owlId)", "class_method_signature": "SimpleOntologyValues.mobiOntologyId(OWLOntologyID owlId)", "testcase": false, "constructor": false}, {"identifier": "owlapiOntologyId", "parameters": "(OntologyId simpleId)", "modifiers": "public static", "return": "OWLOntologyID", "signature": "OWLOntologyID owlapiOntologyId(OntologyId simpleId)", "full_signature": "public static OWLOntologyID owlapiOntologyId(OntologyId simpleId)", "class_method_signature": "SimpleOntologyValues.owlapiOntologyId(OntologyId simpleId)", "testcase": false, "constructor": false}, {"identifier": "mobiClass", "parameters": "(OWLClass owlapiClass)", "modifiers": "public static", "return": "OClass", "signature": "OClass mobiClass(OWLClass owlapiClass)", "full_signature": "public static OClass mobiClass(OWLClass owlapiClass)", "class_method_signature": "SimpleOntologyValues.mobiClass(OWLClass owlapiClass)", "testcase": false, "constructor": false}, {"identifier": "owlapiClass", "parameters": "(OClass mobiClass)", "modifiers": "public static", "return": "OWLClass", "signature": "OWLClass owlapiClass(OClass mobiClass)", "full_signature": "public static OWLClass owlapiClass(OClass mobiClass)", "class_method_signature": "SimpleOntologyValues.owlapiClass(OClass mobiClass)", "testcase": false, "constructor": false}, {"identifier": "mobiDatatype", "parameters": "(OWLDatatype datatype)", "modifiers": "public static", "return": "Datatype", "signature": "Datatype mobiDatatype(OWLDatatype datatype)", "full_signature": "public static Datatype mobiDatatype(OWLDatatype datatype)", "class_method_signature": "SimpleOntologyValues.mobiDatatype(OWLDatatype datatype)", "testcase": false, "constructor": false}, {"identifier": "owlapiDatatype", "parameters": "(Datatype datatype)", "modifiers": "public static", "return": "OWLDatatype", "signature": "OWLDatatype owlapiDatatype(Datatype datatype)", "full_signature": "public static OWLDatatype owlapiDatatype(Datatype datatype)", "class_method_signature": "SimpleOntologyValues.owlapiDatatype(Datatype datatype)", "testcase": false, "constructor": false}, {"identifier": "mobiObjectProperty", "parameters": "(OWLObjectProperty property)", "modifiers": "public static", "return": "ObjectProperty", "signature": "ObjectProperty mobiObjectProperty(OWLObjectProperty property)", "full_signature": "public static ObjectProperty mobiObjectProperty(OWLObjectProperty property)", "class_method_signature": "SimpleOntologyValues.mobiObjectProperty(OWLObjectProperty property)", "testcase": false, "constructor": false}, {"identifier": "owlapiObjectProperty", "parameters": "(ObjectProperty property)", "modifiers": "public static", "return": "OWLObjectProperty", "signature": "OWLObjectProperty owlapiObjectProperty(ObjectProperty property)", "full_signature": "public static OWLObjectProperty owlapiObjectProperty(ObjectProperty property)", "class_method_signature": "SimpleOntologyValues.owlapiObjectProperty(ObjectProperty property)", "testcase": false, "constructor": false}, {"identifier": "mobiDataProperty", "parameters": "(OWLDataProperty property)", "modifiers": "public static", "return": "DataProperty", "signature": "DataProperty mobiDataProperty(OWLDataProperty property)", "full_signature": "public static DataProperty mobiDataProperty(OWLDataProperty property)", "class_method_signature": "SimpleOntologyValues.mobiDataProperty(OWLDataProperty property)", "testcase": false, "constructor": false}, {"identifier": "owlapiDataProperty", "parameters": "(DataProperty property)", "modifiers": "public static", "return": "OWLDataProperty", "signature": "OWLDataProperty owlapiDataProperty(DataProperty property)", "full_signature": "public static OWLDataProperty owlapiDataProperty(DataProperty property)", "class_method_signature": "SimpleOntologyValues.owlapiDataProperty(DataProperty property)", "testcase": false, "constructor": false}, {"identifier": "mobiAnnotationProperty", "parameters": "(OWLAnnotationProperty property)", "modifiers": "public static", "return": "AnnotationProperty", "signature": "AnnotationProperty mobiAnnotationProperty(OWLAnnotationProperty property)", "full_signature": "public static AnnotationProperty mobiAnnotationProperty(OWLAnnotationProperty property)", "class_method_signature": "SimpleOntologyValues.mobiAnnotationProperty(OWLAnnotationProperty property)", "testcase": false, "constructor": false}, {"identifier": "owlapiAnnotationProperty", "parameters": "(AnnotationProperty property)", "modifiers": "public static", "return": "OWLAnnotationProperty", "signature": "OWLAnnotationProperty owlapiAnnotationProperty(AnnotationProperty property)", "full_signature": "public static OWLAnnotationProperty owlapiAnnotationProperty(AnnotationProperty property)", "class_method_signature": "SimpleOntologyValues.owlapiAnnotationProperty(AnnotationProperty property)", "testcase": false, "constructor": false}], "file": "com.mobi.ontology.impl.owlapi/src/main/java/com/mobi/ontology/impl/owlapi/SimpleOntologyValues.java"}, "focal_method": {"identifier": "owlapiIndividual", "parameters": "(Individual mobiIndividual)", "modifiers": "public static", "return": "OWLNamedIndividual", "body": "public static OWLNamedIndividual owlapiIndividual(Individual mobiIndividual) {\n        if (mobiIndividual == null) {\n            return null;\n        }\n        IRI mobiIri = mobiIndividual.getIRI();\n        org.semanticweb.owlapi.model.IRI owlapiIri = owlapiIRI(mobiIri);\n        return new OWLNamedIndividualImpl(owlapiIri);\n    }", "signature": "OWLNamedIndividual owlapiIndividual(Individual mobiIndividual)", "full_signature": "public static OWLNamedIndividual owlapiIndividual(Individual mobiIndividual)", "class_method_signature": "SimpleOntologyValues.owlapiIndividual(Individual mobiIndividual)", "testcase": false, "constructor": false, "invocations": ["getIRI", "owlapiIRI"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}