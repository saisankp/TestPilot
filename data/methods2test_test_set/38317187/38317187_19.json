{"test_class": {"identifier": "CreateRrdOperationsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CreateRrdOperations rrdOps;", "modifier": "private", "type": "CreateRrdOperations", "declarator": "rrdOps", "var_name": "rrdOps"}, {"original_string": "private StatementContext statementContext;", "modifier": "private", "type": "StatementContext", "declarator": "statementContext", "var_name": "statementContext"}], "file": "meta/src/test/java/org/jboss/hal/meta/processing/CreateRrdOperationsTest.java"}, "test_case": {"identifier": "recursive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void recursive() {\n        LookupResult lookupResult = new LookupResult(Sets.<AddressTemplate>newHashSet(AddressTemplate.of(\"foo=bar\")));\n        List<Operation> operations = rrdOps.create(new LookupContext(lookupResult), true, false);\n        Operation operation = operations.get(0);\n        assertEquals(RRD_DEPTH, operation.get(RECURSIVE_DEPTH).asInt());\n    }", "signature": "void recursive()", "full_signature": "@Test public void recursive()", "class_method_signature": "CreateRrdOperationsTest.recursive()", "testcase": true, "constructor": false, "invocations": ["newHashSet", "of", "create", "get", "assertEquals", "asInt", "get"]}, "focal_class": {"identifier": "CreateRrdOperations", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SecurityContextStatementContext securityContextStatementContext;", "modifier": "private final", "type": "SecurityContextStatementContext", "declarator": "securityContextStatementContext", "var_name": "securityContextStatementContext"}, {"original_string": "private final ResourceDescriptionStatementContext resourceDescriptionStatementContext;", "modifier": "private final", "type": "ResourceDescriptionStatementContext", "declarator": "resourceDescriptionStatementContext", "var_name": "resourceDescriptionStatementContext"}, {"original_string": "private final int depth;", "modifier": "private final", "type": "int", "declarator": "depth", "var_name": "depth"}, {"original_string": "private final String locale;", "modifier": "private final", "type": "String", "declarator": "locale", "var_name": "locale"}], "methods": [{"identifier": "CreateRrdOperations", "parameters": "(Environment environment, StatementContext statementContext, String locale, int depth)", "modifiers": "", "return": "", "signature": " CreateRrdOperations(Environment environment, StatementContext statementContext, String locale, int depth)", "full_signature": "  CreateRrdOperations(Environment environment, StatementContext statementContext, String locale, int depth)", "class_method_signature": "CreateRrdOperations.CreateRrdOperations(Environment environment, StatementContext statementContext, String locale, int depth)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(LookupContext context, boolean recursive, boolean optional)", "modifiers": "public", "return": "List<Operation>", "signature": "List<Operation> create(LookupContext context, boolean recursive, boolean optional)", "full_signature": "public List<Operation> create(LookupContext context, boolean recursive, boolean optional)", "class_method_signature": "CreateRrdOperations.create(LookupContext context, boolean recursive, boolean optional)", "testcase": false, "constructor": false}], "file": "meta/src/main/java/org/jboss/hal/meta/processing/CreateRrdOperations.java"}, "focal_method": {"identifier": "create", "parameters": "(LookupContext context, boolean recursive, boolean optional)", "modifiers": "public", "return": "List<Operation>", "body": "public List<Operation> create(LookupContext context, boolean recursive, boolean optional) {\n        LookupResult lookupResult = context.lookupResult;\n        List<Operation> operations = new ArrayList<>();\n        lookupResult.templates().stream()\n                .filter(template -> optional == template.isOptional())\n                .forEach(template -> {\n                    int missingMetadata = lookupResult.missingMetadata(template);\n                    if (missingMetadata != ALL_PRESENT) {\n\n                        ResourceAddress address;\n                        Operation.Builder builder = null;\n\n                        if (missingMetadata == NOTHING_PRESENT) {\n                            address = template.resolve(securityContextStatementContext);\n                            builder = new Operation.Builder(address, READ_RESOURCE_DESCRIPTION_OPERATION)\n                                    .param(ACCESS_CONTROL, COMBINED_DESCRIPTIONS)\n                                    .param(OPERATIONS, true);\n\n                        } else if (missingMetadata == RESOURCE_DESCRIPTION_PRESENT) {\n                            address = template.resolve(securityContextStatementContext);\n                            builder = new Operation.Builder(address, READ_RESOURCE_DESCRIPTION_OPERATION)\n                                    .param(ACCESS_CONTROL, TRIM_DESCRIPTIONS)\n                                    .param(OPERATIONS, true);\n\n                        } else if (missingMetadata == SECURITY_CONTEXT_PRESENT) {\n                            address = template.resolve(resourceDescriptionStatementContext);\n                            builder = new Operation.Builder(address, READ_RESOURCE_DESCRIPTION_OPERATION)\n                                    .param(OPERATIONS, true);\n                        }\n\n                        if (builder != null) {\n                            if (recursive) {\n                                builder.param(RECURSIVE_DEPTH, depth);\n                            }\n                            builder.param(LOCALE, locale);\n                            operations.add(builder.build());\n                        }\n                    }\n                });\n        return operations;\n    }", "signature": "List<Operation> create(LookupContext context, boolean recursive, boolean optional)", "full_signature": "public List<Operation> create(LookupContext context, boolean recursive, boolean optional)", "class_method_signature": "CreateRrdOperations.create(LookupContext context, boolean recursive, boolean optional)", "testcase": false, "constructor": false, "invocations": ["forEach", "filter", "stream", "templates", "isOptional", "missingMetadata", "resolve", "param", "param", "resolve", "param", "param", "resolve", "param", "param", "param", "add", "build"]}, "repository": {"repo_id": 38317187, "url": "https://github.com/hal/console", "stars": 34, "created": "6/30/2015 3:26:19 PM +00:00", "updates": "2020-01-26T16:25:43+00:00", "fork": "False", "license": "licensed"}}