{"test_class": {"identifier": "PathParameterResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MultivaluedMap<String, String> pathParameters;", "modifier": "private", "type": "MultivaluedMap<String, String>", "declarator": "pathParameters", "var_name": "pathParameters"}, {"original_string": "private ApplicationContext             applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private Parameter                      parameter;", "modifier": "private", "type": "Parameter", "declarator": "parameter", "var_name": "parameter"}, {"original_string": "private TypeProducer                   typeProducer;", "modifier": "private", "type": "TypeProducer", "declarator": "typeProducer", "var_name": "typeProducer"}, {"original_string": "private PathParameterResolver pathParameterResolver;", "modifier": "private", "type": "PathParameterResolver", "declarator": "pathParameterResolver", "var_name": "pathParameterResolver"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/method/PathParameterResolverTest.java"}, "test_case": {"identifier": "retrievesPathParameterFromRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void retrievesPathParameterFromRequest() throws Exception {\n        when(typeProducer.createValue(\"foo\", pathParameters, null)).thenReturn(pathParameters.getFirst(\"foo\"));\n\n        Object resolvedHeader = pathParameterResolver.resolve(parameter, applicationContext);\n\n        assertEquals(pathParameters.getFirst(\"foo\"), resolvedHeader);\n    }", "signature": "void retrievesPathParameterFromRequest()", "full_signature": "@Test public void retrievesPathParameterFromRequest()", "class_method_signature": "PathParameterResolverTest.retrievesPathParameterFromRequest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "createValue", "getFirst", "resolve", "assertEquals", "getFirst"]}, "focal_class": {"identifier": "PathParameterResolver", "superclass": "", "interfaces": "implements ParameterResolver<PathParam>", "fields": [{"original_string": "private final PathParam           pathParam;", "modifier": "private final", "type": "PathParam", "declarator": "pathParam", "var_name": "pathParam"}, {"original_string": "private final TypeProducerFactory typeProducerFactory;", "modifier": "private final", "type": "TypeProducerFactory", "declarator": "typeProducerFactory", "var_name": "typeProducerFactory"}], "methods": [{"identifier": "PathParameterResolver", "parameters": "(PathParam pathParam, TypeProducerFactory typeProducerFactory)", "modifiers": "", "return": "", "signature": " PathParameterResolver(PathParam pathParam, TypeProducerFactory typeProducerFactory)", "full_signature": "  PathParameterResolver(PathParam pathParam, TypeProducerFactory typeProducerFactory)", "class_method_signature": "PathParameterResolver.PathParameterResolver(PathParam pathParam, TypeProducerFactory typeProducerFactory)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(org.everrest.core.Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "signature": "Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "class_method_signature": "PathParameterResolver.resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/method/PathParameterResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(org.everrest.core.Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context) throws Exception {\n        String param = this.pathParam.value();\n        TypeProducer typeProducer = typeProducerFactory.createTypeProducer(parameter.getParameterClass(), parameter.getGenericType());\n        return typeProducer.createValue(param, context.getPathParameters(!parameter.isEncoded()), parameter.getDefaultValue());\n    }", "signature": "Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "class_method_signature": "PathParameterResolver.resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false, "invocations": ["value", "createTypeProducer", "getParameterClass", "getGenericType", "createValue", "getPathParameters", "isEncoded", "getDefaultValue"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}