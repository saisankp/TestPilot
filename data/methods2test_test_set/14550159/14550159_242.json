{"test_class": {"identifier": "SAXSourceEntityProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_XML_CONTENT = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"\n                                                   + \"<book send-by-post=\\\"true\\\">\"\n                                                   + \"  <title>Java and XML Data Binding</title>\"\n                                                   + \"  <author>Brett McLaughlin</author>\"\n                                                   + \"  <price currency=\\\"USD\\\">34.95</price>\"\n                                                   + \"</book>\";", "modifier": "private static final", "type": "String", "declarator": "TEST_XML_CONTENT = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"\n                                                   + \"<book send-by-post=\\\"true\\\">\"\n                                                   + \"  <title>Java and XML Data Binding</title>\"\n                                                   + \"  <author>Brett McLaughlin</author>\"\n                                                   + \"  <price currency=\\\"USD\\\">34.95</price>\"\n                                                   + \"</book>\"", "var_name": "TEST_XML_CONTENT"}, {"original_string": "private static final byte[]              TEST_XML_CONTENT_BYTES = TEST_XML_CONTENT.getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "TEST_XML_CONTENT_BYTES = TEST_XML_CONTENT.getBytes()", "var_name": "TEST_XML_CONTENT_BYTES"}, {"original_string": "private static final Map<String, String> XPATH_EXPR_TO_VALUE    = ImmutableMap.of(\n            \"/book/@send-by-post\", \"true\",\n            \"/book/title\", \"Java and XML Data Binding\",\n            \"/book/author\", \"Brett McLaughlin\",\n            \"/book/price/@currency\", \"USD\",\n            \"/book/price\",\"34.95\");", "modifier": "private static final", "type": "Map<String, String>", "declarator": "XPATH_EXPR_TO_VALUE    = ImmutableMap.of(\n            \"/book/@send-by-post\", \"true\",\n            \"/book/title\", \"Java and XML Data Binding\",\n            \"/book/author\", \"Brett McLaughlin\",\n            \"/book/price/@currency\", \"USD\",\n            \"/book/price\",\"34.95\")", "var_name": "XPATH_EXPR_TO_VALUE"}, {"original_string": "private SAXSourceEntityProvider saxSourceEntityProvider;", "modifier": "private", "type": "SAXSourceEntityProvider", "declarator": "saxSourceEntityProvider", "var_name": "saxSourceEntityProvider"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/SAXSourceEntityProviderTest.java"}, "test_case": {"identifier": "isReadableForSAXSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isReadableForSAXSource() throws Exception {\n        assertTrue(saxSourceEntityProvider.isReadable(SAXSource.class, null, null, APPLICATION_XML_TYPE));\n    }", "signature": "void isReadableForSAXSource()", "full_signature": "@Test public void isReadableForSAXSource()", "class_method_signature": "SAXSourceEntityProviderTest.isReadableForSAXSource()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isReadable"]}, "focal_class": {"identifier": "SAXSourceEntityProvider", "superclass": "", "interfaces": "implements EntityProvider<SAXSource>", "fields": [], "methods": [{"identifier": "isReadable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "SAXSourceEntityProvider.isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "readFrom", "parameters": "(Class<SAXSource> type,\n                              Type genericType,\n                              Annotation[] annotations,\n                              MediaType mediaType,\n                              MultivaluedMap<String, String> httpHeaders,\n                              InputStream entityStream)", "modifiers": "@Override public", "return": "SAXSource", "signature": "SAXSource readFrom(Class<SAXSource> type,\n                              Type genericType,\n                              Annotation[] annotations,\n                              MediaType mediaType,\n                              MultivaluedMap<String, String> httpHeaders,\n                              InputStream entityStream)", "full_signature": "@Override public SAXSource readFrom(Class<SAXSource> type,\n                              Type genericType,\n                              Annotation[] annotations,\n                              MediaType mediaType,\n                              MultivaluedMap<String, String> httpHeaders,\n                              InputStream entityStream)", "class_method_signature": "SAXSourceEntityProvider.readFrom(Class<SAXSource> type,\n                              Type genericType,\n                              Annotation[] annotations,\n                              MediaType mediaType,\n                              MultivaluedMap<String, String> httpHeaders,\n                              InputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "(SAXSource t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "long", "signature": "long getSize(SAXSource t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public long getSize(SAXSource t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "SAXSourceEntityProvider.getSize(SAXSource t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "isWriteable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "SAXSourceEntityProvider.isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(SAXSource saxSource,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(SAXSource saxSource,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "full_signature": "@Override public void writeTo(SAXSource saxSource,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "class_method_signature": "SAXSourceEntityProvider.writeTo(SAXSource saxSource,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "createFeaturedTransformerFactory", "parameters": "()", "modifiers": "private", "return": "TransformerFactory", "signature": "TransformerFactory createFeaturedTransformerFactory()", "full_signature": "private TransformerFactory createFeaturedTransformerFactory()", "class_method_signature": "SAXSourceEntityProvider.createFeaturedTransformerFactory()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/SAXSourceEntityProvider.java"}, "focal_method": {"identifier": "isReadable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType) {\n        return type == SAXSource.class;\n    }", "signature": "boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "SAXSourceEntityProvider.isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}