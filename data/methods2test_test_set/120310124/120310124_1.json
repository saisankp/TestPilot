{"test_class": {"identifier": "BazTest", "superclass": "", "interfaces": "", "fields": [], "file": "application_module_3/src/test/java/de/doubleslash/demo/coverage/module/three/BazTest.java"}, "test_case": {"identifier": "testBazMethod", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testBazMethod() {\n        Baz testee = new Baz();\n        assertThat(testee.bazMethod(), is(6));\n    }", "signature": "void testBazMethod()", "full_signature": "@Test void testBazMethod()", "class_method_signature": "BazTest.testBazMethod()", "testcase": true, "constructor": false, "invocations": ["assertThat", "bazMethod", "is"]}, "focal_class": {"identifier": "Baz", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int i = 6;", "modifier": "private", "type": "int", "declarator": "i = 6", "var_name": "i"}, {"original_string": "private String s = \"jacoco\";", "modifier": "private", "type": "String", "declarator": "s = \"jacoco\"", "var_name": "s"}], "methods": [{"identifier": "bazMethod", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int bazMethod()", "full_signature": "public int bazMethod()", "class_method_signature": "Baz.bazMethod()", "testcase": false, "constructor": false}, {"identifier": "anotherBazMethod", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String anotherBazMethod()", "full_signature": "public String anotherBazMethod()", "class_method_signature": "Baz.anotherBazMethod()", "testcase": false, "constructor": false}], "file": "application_module_3/src/main/java/de/doubleslash/demo/coverage/module/three/Baz.java"}, "focal_method": {"identifier": "bazMethod", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int bazMethod() {\n        return i;\n    }", "signature": "int bazMethod()", "full_signature": "public int bazMethod()", "class_method_signature": "Baz.bazMethod()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 120310124, "url": "https://github.com/doubleSlashde/maven-multimodule-coverage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 16, "license": "licensed"}}