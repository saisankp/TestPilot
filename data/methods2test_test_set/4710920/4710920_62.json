{"test_class": {"identifier": "SignatureUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Object[] objects = new Object[2];", "modifier": "private", "type": "Object[]", "declarator": "objects = new Object[2]", "var_name": "objects"}, {"original_string": "private List<String> list = new ArrayList<>();", "modifier": "private", "type": "List<String>", "declarator": "list = new ArrayList<>()", "var_name": "list"}, {"original_string": "private String temp = \"temp\";", "modifier": "private", "type": "String", "declarator": "temp = \"temp\"", "var_name": "temp"}, {"original_string": "private String key = \"TOKEN\";", "modifier": "private", "type": "String", "declarator": "key = \"TOKEN\"", "var_name": "key"}], "file": "dubbo-plugin/dubbo-auth/src/test/java/org/apache/dubbo/auth/utils/SignatureUtilsTest.java"}, "test_case": {"identifier": "testObjectToByteArray", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testObjectToByteArray() {\n\n        try {\n            byte[] bytes = SignatureUtils.toByteArray(objects);\n            Assertions.assertNotEquals(0, bytes.length);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "signature": "void testObjectToByteArray()", "full_signature": "@Test void testObjectToByteArray()", "class_method_signature": "SignatureUtilsTest.testObjectToByteArray()", "testcase": true, "constructor": false, "invocations": ["toByteArray", "assertNotEquals", "printStackTrace"]}, "focal_class": {"identifier": "SignatureUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HMAC_SHA256_ALGORITHM = \"HmacSHA256\";", "modifier": "private static final", "type": "String", "declarator": "HMAC_SHA256_ALGORITHM = \"HmacSHA256\"", "var_name": "HMAC_SHA256_ALGORITHM"}], "methods": [{"identifier": "sign", "parameters": "(String metadata, String key)", "modifiers": "public static", "return": "String", "signature": "String sign(String metadata, String key)", "full_signature": "public static String sign(String metadata, String key)", "class_method_signature": "SignatureUtils.sign(String metadata, String key)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(Object[] parameters, String metadata, String key)", "modifiers": "public static", "return": "String", "signature": "String sign(Object[] parameters, String metadata, String key)", "full_signature": "public static String sign(Object[] parameters, String metadata, String key)", "class_method_signature": "SignatureUtils.sign(Object[] parameters, String metadata, String key)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(byte[] data, String key)", "modifiers": "public static", "return": "String", "signature": "String sign(byte[] data, String key)", "full_signature": "public static String sign(byte[] data, String key)", "class_method_signature": "SignatureUtils.sign(byte[] data, String key)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(Object[] parameters)", "modifiers": "static", "return": "byte[]", "signature": "byte[] toByteArray(Object[] parameters)", "full_signature": "static byte[] toByteArray(Object[] parameters)", "class_method_signature": "SignatureUtils.toByteArray(Object[] parameters)", "testcase": false, "constructor": false}], "file": "dubbo-plugin/dubbo-auth/src/main/java/org/apache/dubbo/auth/utils/SignatureUtils.java"}, "focal_method": {"identifier": "toByteArray", "parameters": "(Object[] parameters)", "modifiers": "static", "return": "byte[]", "body": "static byte[] toByteArray(Object[] parameters) throws Exception {\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        ObjectOutput out = null;\n        try {\n            out = new ObjectOutputStream(bos);\n            out.writeObject(parameters);\n            out.flush();\n            return bos.toByteArray();\n        } finally {\n            try {\n                bos.close();\n            } catch (IOException ex) {\n                // ignore close exception\n            }\n        }\n    }", "signature": "byte[] toByteArray(Object[] parameters)", "full_signature": "static byte[] toByteArray(Object[] parameters)", "class_method_signature": "SignatureUtils.toByteArray(Object[] parameters)", "testcase": false, "constructor": false, "invocations": ["writeObject", "flush", "toByteArray", "close"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}