{"test_class": {"identifier": "CorsFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONTENT_TYPE_HEADER = HttpHeaders.CONTENT_TYPE;", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE_HEADER = HttpHeaders.CONTENT_TYPE", "var_name": "CONTENT_TYPE_HEADER"}, {"original_string": "private static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";", "modifier": "private static final", "type": "String", "declarator": "ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\"", "var_name": "ACCESS_CONTROL_REQUEST_HEADERS"}, {"original_string": "private static final String ECLIPSE_ORIGIN = \"http://eclipse.org\";", "modifier": "private static final", "type": "String", "declarator": "ECLIPSE_ORIGIN = \"http://eclipse.org\"", "var_name": "ECLIPSE_ORIGIN"}, {"original_string": "private static final String VARY_HEADER_VALUE = \"Content-Type\";", "modifier": "private static final", "type": "String", "declarator": "VARY_HEADER_VALUE = \"Content-Type\"", "var_name": "VARY_HEADER_VALUE"}, {"original_string": "private static final String REQUEST_HEADERS = \"X-Custom, X-Mine\";", "modifier": "private static final", "type": "String", "declarator": "REQUEST_HEADERS = \"X-Custom, X-Mine\"", "var_name": "REQUEST_HEADERS"}, {"original_string": "private CorsFilter filter;", "modifier": "private", "type": "CorsFilter", "declarator": "filter", "var_name": "filter"}, {"original_string": "private MultivaluedMap<String, String> responseHeaders = new MultivaluedHashMap<>();", "modifier": "private", "type": "MultivaluedMap<String, String>", "declarator": "responseHeaders = new MultivaluedHashMap<>()", "var_name": "responseHeaders"}, {"original_string": "private @Mock ContainerRequestContext requestContext;", "modifier": "private @Mock", "type": "ContainerRequestContext", "declarator": "requestContext", "var_name": "requestContext"}, {"original_string": "private @Mock ContainerResponseContext responseContext;", "modifier": "private @Mock", "type": "ContainerResponseContext", "declarator": "responseContext", "var_name": "responseContext"}], "file": "bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/internal/filter/CorsFilterTest.java"}, "test_case": {"identifier": "partialCorsPreflightRequestTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void partialCorsPreflightRequestTest() throws IOException {\n        setupRequestContext(HTTP_OPTIONS_METHOD, ECLIPSE_ORIGIN, null, REQUEST_HEADERS);\n        setupResponseContext(VARY_HEADER_VALUE);\n\n        filter.filter(requestContext, responseContext);\n\n        // Since the requestMethod header is not present in the request, it is not a valid Preflight CORS request.\n        // Thus, no CORS header should be added to the response.\n        assertResponseWithoutHeader(ACCESS_CONTROL_ALLOW_METHODS_HEADER);\n        assertResponseWithoutHeader(ACCESS_CONTROL_ALLOW_ORIGIN_HEADER);\n        assertResponseWithoutHeader(ACCESS_CONTROL_ALLOW_HEADERS);\n        assertResponseHasHeader(VARY_HEADER, VARY_HEADER_VALUE);\n    }", "signature": "void partialCorsPreflightRequestTest()", "full_signature": "@Test public void partialCorsPreflightRequestTest()", "class_method_signature": "CorsFilterTest.partialCorsPreflightRequestTest()", "testcase": true, "constructor": false, "invocations": ["setupRequestContext", "setupResponseContext", "filter", "assertResponseWithoutHeader", "assertResponseWithoutHeader", "assertResponseWithoutHeader", "assertResponseHasHeader"]}, "focal_class": {"identifier": "CorsFilter", "superclass": "", "interfaces": "implements ContainerResponseFilter", "fields": [{"original_string": "static final String HTTP_HEAD_METHOD = \"HEAD\";", "modifier": "static final", "type": "String", "declarator": "HTTP_HEAD_METHOD = \"HEAD\"", "var_name": "HTTP_HEAD_METHOD"}, {"original_string": "static final String HTTP_DELETE_METHOD = \"DELETE\";", "modifier": "static final", "type": "String", "declarator": "HTTP_DELETE_METHOD = \"DELETE\"", "var_name": "HTTP_DELETE_METHOD"}, {"original_string": "static final String HTTP_PUT_METHOD = \"PUT\";", "modifier": "static final", "type": "String", "declarator": "HTTP_PUT_METHOD = \"PUT\"", "var_name": "HTTP_PUT_METHOD"}, {"original_string": "static final String HTTP_POST_METHOD = \"POST\";", "modifier": "static final", "type": "String", "declarator": "HTTP_POST_METHOD = \"POST\"", "var_name": "HTTP_POST_METHOD"}, {"original_string": "static final String HTTP_GET_METHOD = \"GET\";", "modifier": "static final", "type": "String", "declarator": "HTTP_GET_METHOD = \"GET\"", "var_name": "HTTP_GET_METHOD"}, {"original_string": "static final String HTTP_OPTIONS_METHOD = \"OPTIONS\";", "modifier": "static final", "type": "String", "declarator": "HTTP_OPTIONS_METHOD = \"OPTIONS\"", "var_name": "HTTP_OPTIONS_METHOD"}, {"original_string": "static final String CONTENT_TYPE_HEADER = HttpHeaders.CONTENT_TYPE;", "modifier": "static final", "type": "String", "declarator": "CONTENT_TYPE_HEADER = HttpHeaders.CONTENT_TYPE", "var_name": "CONTENT_TYPE_HEADER"}, {"original_string": "static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";", "modifier": "static final", "type": "String", "declarator": "ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\"", "var_name": "ACCESS_CONTROL_REQUEST_METHOD"}, {"original_string": "static final String ACCESS_CONTROL_ALLOW_METHODS_HEADER = \"Access-Control-Allow-Methods\";", "modifier": "static final", "type": "String", "declarator": "ACCESS_CONTROL_ALLOW_METHODS_HEADER = \"Access-Control-Allow-Methods\"", "var_name": "ACCESS_CONTROL_ALLOW_METHODS_HEADER"}, {"original_string": "static final String ACCESS_CONTROL_ALLOW_ORIGIN_HEADER = \"Access-Control-Allow-Origin\";", "modifier": "static final", "type": "String", "declarator": "ACCESS_CONTROL_ALLOW_ORIGIN_HEADER = \"Access-Control-Allow-Origin\"", "var_name": "ACCESS_CONTROL_ALLOW_ORIGIN_HEADER"}, {"original_string": "static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";", "modifier": "static final", "type": "String", "declarator": "ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\"", "var_name": "ACCESS_CONTROL_ALLOW_HEADERS"}, {"original_string": "static final String ORIGIN_HEADER = \"Origin\";", "modifier": "static final", "type": "String", "declarator": "ORIGIN_HEADER = \"Origin\"", "var_name": "ORIGIN_HEADER"}, {"original_string": "static final String VARY_HEADER = \"Vary\";", "modifier": "static final", "type": "String", "declarator": "VARY_HEADER = \"Vary\"", "var_name": "VARY_HEADER"}, {"original_string": "static final String VARY_HEADER_WILDCARD = \"*\";", "modifier": "static final", "type": "String", "declarator": "VARY_HEADER_WILDCARD = \"*\"", "var_name": "VARY_HEADER_WILDCARD"}, {"original_string": "static final String HEADERS_SEPARATOR = \",\";", "modifier": "static final", "type": "String", "declarator": "HEADERS_SEPARATOR = \",\"", "var_name": "HEADERS_SEPARATOR"}, {"original_string": "static final List<String> ACCEPTED_HTTP_METHODS_LIST = List.of(HTTP_GET_METHOD, HTTP_POST_METHOD, HTTP_PUT_METHOD,\n            HTTP_DELETE_METHOD, HTTP_HEAD_METHOD, HTTP_OPTIONS_METHOD);", "modifier": "static final", "type": "List<String>", "declarator": "ACCEPTED_HTTP_METHODS_LIST = List.of(HTTP_GET_METHOD, HTTP_POST_METHOD, HTTP_PUT_METHOD,\n            HTTP_DELETE_METHOD, HTTP_HEAD_METHOD, HTTP_OPTIONS_METHOD)", "var_name": "ACCEPTED_HTTP_METHODS_LIST"}, {"original_string": "static final String ACCEPTED_HTTP_METHODS = ACCEPTED_HTTP_METHODS_LIST.stream()\n            .collect(Collectors.joining(HEADERS_SEPARATOR));", "modifier": "static final", "type": "String", "declarator": "ACCEPTED_HTTP_METHODS = ACCEPTED_HTTP_METHODS_LIST.stream()\n            .collect(Collectors.joining(HEADERS_SEPARATOR))", "var_name": "ACCEPTED_HTTP_METHODS"}, {"original_string": "private final transient Logger logger = LoggerFactory.getLogger(CorsFilter.class);", "modifier": "private final transient", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CorsFilter.class)", "var_name": "logger"}, {"original_string": "private boolean isEnabled;", "modifier": "private", "type": "boolean", "declarator": "isEnabled", "var_name": "isEnabled"}], "methods": [{"identifier": "CorsFilter", "parameters": "()", "modifiers": "public", "return": "", "signature": " CorsFilter()", "full_signature": "public  CorsFilter()", "class_method_signature": "CorsFilter.CorsFilter()", "testcase": false, "constructor": true}, {"identifier": "filter", "parameters": "(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "modifiers": "@Override public", "return": "void", "signature": "void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "full_signature": "@Override public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "class_method_signature": "CorsFilter.filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "testcase": false, "constructor": false}, {"identifier": "processRequest", "parameters": "(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "modifiers": "private", "return": "void", "signature": "void processRequest(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "full_signature": "private void processRequest(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "class_method_signature": "CorsFilter.processRequest(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "testcase": false, "constructor": false}, {"identifier": "processPreflight", "parameters": "(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "modifiers": "private", "return": "boolean", "signature": "boolean processPreflight(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "full_signature": "private boolean processPreflight(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "class_method_signature": "CorsFilter.processPreflight(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(MultivaluedMap<String, String> headers, String header)", "modifiers": "private", "return": "String", "signature": "String getValue(MultivaluedMap<String, String> headers, String header)", "full_signature": "private String getValue(MultivaluedMap<String, String> headers, String header)", "class_method_signature": "CorsFilter.getValue(MultivaluedMap<String, String> headers, String header)", "testcase": false, "constructor": false}, {"identifier": "appendVaryHeader", "parameters": "(ContainerResponseContext responseContext)", "modifiers": "private", "return": "void", "signature": "void appendVaryHeader(ContainerResponseContext responseContext)", "full_signature": "private void appendVaryHeader(ContainerResponseContext responseContext)", "class_method_signature": "CorsFilter.appendVaryHeader(ContainerResponseContext responseContext)", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "(Map<String, Object> properties)", "modifiers": "@Activate protected", "return": "void", "signature": "void activate(Map<String, Object> properties)", "full_signature": "@Activate protected void activate(Map<String, Object> properties)", "class_method_signature": "CorsFilter.activate(Map<String, Object> properties)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.io.rest/src/main/java/org/openhab/core/io/rest/internal/filter/CorsFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)\n            throws IOException {\n        if (isEnabled && !processPreflight(requestContext, responseContext)) {\n            processRequest(requestContext, responseContext);\n        }\n    }", "signature": "void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "full_signature": "@Override public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "class_method_signature": "CorsFilter.filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)", "testcase": false, "constructor": false, "invocations": ["processPreflight", "processRequest"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}