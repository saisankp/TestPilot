{"test_class": {"identifier": "GrapesAuthenticatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/webapp/auth/GrapesAuthenticatorTest.java"}, "test_case": {"identifier": "checkWrongAutentication", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void checkWrongAutentication() throws AuthenticationException, UnknownHostException{\n        final RepositoryHandler repositoryHandler = GrapesTestUtils.getRepoHandlerMock();\n        final GrapesAuthenticator authenticator = new GrapesAuthenticator(repositoryHandler);\n\n        Exception exception = null;\n        Optional<DbCredential> result = null;\n\t\t\n\t\ttry {\n\t\t\tresult = authenticator.authenticate(new BasicCredentials(GrapesTestUtils.USER_4TEST, \"wrongPassword\"));\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\texception = e;\n\t\t}\n\n\t\tassertNull(exception);\n\t\tassertNotNull(result);\n\t\tassertFalse(result.isPresent());\n\t\t\n\t\texception = null;\n\t\tresult = null;\n\t\t\n\t\ttry {\n\t\t\tresult = authenticator.authenticate(new BasicCredentials(\"userWrong\", GrapesTestUtils.PASSWORD_4TEST));\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\texception = e;\n\t\t}\n\n\t\tassertNull(exception);\n\t\tassertNotNull(result);\n\t\tassertFalse(result.isPresent());\n\t\t\n\t\texception = null;\n\t\tresult = null;\n\t\t\n\t\ttry {\n\t\t\tresult = authenticator.authenticate(null);\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\texception = e;\n\t\t}\n\n\t\tassertNull(exception);\n\t\tassertNotNull(result);\n\t\tassertFalse(result.isPresent());\n\t}", "signature": "void checkWrongAutentication()", "full_signature": "@Test public void checkWrongAutentication()", "class_method_signature": "GrapesAuthenticatorTest.checkWrongAutentication()", "testcase": true, "constructor": false, "invocations": ["getRepoHandlerMock", "authenticate", "assertNull", "assertNotNull", "assertFalse", "isPresent", "authenticate", "assertNull", "assertNotNull", "assertFalse", "isPresent", "authenticate", "assertNull", "assertNotNull", "assertFalse", "isPresent"]}, "focal_class": {"identifier": "GrapesAuthenticator", "superclass": "", "interfaces": "implements Authenticator<BasicCredentials, DbCredential>", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(GrapesAuthenticator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(GrapesAuthenticator.class)", "var_name": "LOG"}, {"original_string": "private final RepositoryHandler repoHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repoHandler", "var_name": "repoHandler"}], "methods": [{"identifier": "GrapesAuthenticator", "parameters": "(final RepositoryHandler repoHandler)", "modifiers": "public", "return": "", "signature": " GrapesAuthenticator(final RepositoryHandler repoHandler)", "full_signature": "public  GrapesAuthenticator(final RepositoryHandler repoHandler)", "class_method_signature": "GrapesAuthenticator.GrapesAuthenticator(final RepositoryHandler repoHandler)", "testcase": false, "constructor": true}, {"identifier": "authenticate", "parameters": "(BasicCredentials credentials)", "modifiers": "@Override public", "return": "Optional<DbCredential>", "signature": "Optional<DbCredential> authenticate(BasicCredentials credentials)", "full_signature": "@Override public Optional<DbCredential> authenticate(BasicCredentials credentials)", "class_method_signature": "GrapesAuthenticator.authenticate(BasicCredentials credentials)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(final String password)", "modifiers": "public static", "return": "String", "signature": "String encrypt(final String password)", "full_signature": "public static String encrypt(final String password)", "class_method_signature": "GrapesAuthenticator.encrypt(final String password)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/webapp/auth/GrapesAuthenticator.java"}, "focal_method": {"identifier": "authenticate", "parameters": "(BasicCredentials credentials)", "modifiers": "@Override public", "return": "Optional<DbCredential>", "body": "@Override\n    public Optional<DbCredential> authenticate(BasicCredentials credentials) throws AuthenticationException {\n        if(credentials == null || credentials.getUsername() == null || credentials.getPassword() == null){\n            LOG.error(\"Missing credentials for the authentication\");\n            return Optional.absent();\n        }\n\n        final String encryptedPwd = encrypt(credentials.getPassword());\n\n        final DbCredential dbCredential = repoHandler.getCredential(credentials.getUsername());\n\n        if(dbCredential != null && encryptedPwd.equals(dbCredential.getPassword())){\n            return Optional.of(dbCredential);\n        }\n\n        return Optional.absent();\n    }", "signature": "Optional<DbCredential> authenticate(BasicCredentials credentials)", "full_signature": "@Override public Optional<DbCredential> authenticate(BasicCredentials credentials)", "class_method_signature": "GrapesAuthenticator.authenticate(BasicCredentials credentials)", "testcase": false, "constructor": false, "invocations": ["getUsername", "getPassword", "error", "absent", "encrypt", "getPassword", "getCredential", "getUsername", "equals", "getPassword", "of", "absent"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}