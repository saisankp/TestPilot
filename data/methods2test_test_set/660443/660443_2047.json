{"test_class": {"identifier": "Mol2ReaderTest", "superclass": "extends SimpleChemObjectReaderTest", "interfaces": "", "fields": [{"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(Mol2ReaderTest.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(Mol2ReaderTest.class)", "var_name": "logger"}], "file": "storage/io/src/test/java/org/openscience/cdk/io/Mol2ReaderTest.java"}, "test_case": {"identifier": "testAccepts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccepts() {\n        Mol2Reader reader = new Mol2Reader();\n        Assert.assertTrue(reader.accepts(ChemFile.class));\n        Assert.assertTrue(reader.accepts(ChemModel.class));\n        Assert.assertTrue(reader.accepts(AtomContainer.class));\n    }", "signature": "void testAccepts()", "full_signature": "@Test public void testAccepts()", "class_method_signature": "Mol2ReaderTest.testAccepts()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accepts", "assertTrue", "accepts", "assertTrue", "accepts"]}, "focal_class": {"identifier": "Mol2Reader", "superclass": "extends DefaultChemObjectReader", "interfaces": "", "fields": [{"original_string": "boolean                                  firstLineisMolecule = false;", "modifier": "", "type": "boolean", "declarator": "firstLineisMolecule = false", "var_name": "firstLineisMolecule"}, {"original_string": "BufferedReader                           input               = null;", "modifier": "", "type": "BufferedReader", "declarator": "input               = null", "var_name": "input"}, {"original_string": "private static ILoggingTool              logger              = LoggingToolFactory\n                                                                         .createLoggingTool(Mol2Reader.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger              = LoggingToolFactory\n                                                                         .createLoggingTool(Mol2Reader.class)", "var_name": "logger"}, {"original_string": "private static final Map<String, String> ATOM_TYPE_ALIASES   = ImmutableMap\n                                                                         .<String, String> builder()\n                                                                         // previously produced by Open Babel\n                                                                         .put(\"S.o2\", \"S.O2\")\n                                                                         .put(\"S.o\", \"S.O\")\n                                                                         // seen in MMFF94 validation suite\n                                                                         .put(\"CL\", \"Cl\").put(\"CU\", \"Cu\")\n                                                                         .put(\"FE\", \"Fe\").put(\"BR\", \"Br\")\n                                                                         .put(\"NA\", \"Na\").put(\"SI\", \"Si\")\n                                                                         .put(\"CA\", \"Ca\").put(\"ZN\", \"Zn\")\n                                                                         .put(\"LI\", \"Li\").put(\"MG\", \"Mg\").build();", "modifier": "private static final", "type": "Map<String, String>", "declarator": "ATOM_TYPE_ALIASES   = ImmutableMap\n                                                                         .<String, String> builder()\n                                                                         // previously produced by Open Babel\n                                                                         .put(\"S.o2\", \"S.O2\")\n                                                                         .put(\"S.o\", \"S.O\")\n                                                                         // seen in MMFF94 validation suite\n                                                                         .put(\"CL\", \"Cl\").put(\"CU\", \"Cu\")\n                                                                         .put(\"FE\", \"Fe\").put(\"BR\", \"Br\")\n                                                                         .put(\"NA\", \"Na\").put(\"SI\", \"Si\")\n                                                                         .put(\"CA\", \"Ca\").put(\"ZN\", \"Zn\")\n                                                                         .put(\"LI\", \"Li\").put(\"MG\", \"Mg\").build()", "var_name": "ATOM_TYPE_ALIASES"}], "methods": [{"identifier": "Mol2Reader", "parameters": "(Reader in)", "modifiers": "public", "return": "", "signature": " Mol2Reader(Reader in)", "full_signature": "public  Mol2Reader(Reader in)", "class_method_signature": "Mol2Reader.Mol2Reader(Reader in)", "testcase": false, "constructor": true}, {"identifier": "Mol2Reader", "parameters": "(InputStream input)", "modifiers": "public", "return": "", "signature": " Mol2Reader(InputStream input)", "full_signature": "public  Mol2Reader(InputStream input)", "class_method_signature": "Mol2Reader.Mol2Reader(InputStream input)", "testcase": false, "constructor": true}, {"identifier": "Mol2Reader", "parameters": "()", "modifiers": "public", "return": "", "signature": " Mol2Reader()", "full_signature": "public  Mol2Reader()", "class_method_signature": "Mol2Reader.Mol2Reader()", "testcase": false, "constructor": true}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override public IResourceFormat getFormat()", "class_method_signature": "Mol2Reader.getFormat()", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(Reader input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(Reader input)", "full_signature": "@Override public void setReader(Reader input)", "class_method_signature": "Mol2Reader.setReader(Reader input)", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(InputStream input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(InputStream input)", "full_signature": "@Override public void setReader(InputStream input)", "class_method_signature": "Mol2Reader.setReader(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "Mol2Reader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(T object)", "modifiers": "@Override public", "return": "T", "signature": "T read(T object)", "full_signature": "@Override public T read(T object)", "class_method_signature": "Mol2Reader.read(T object)", "testcase": false, "constructor": false}, {"identifier": "readChemModel", "parameters": "(IChemModel chemModel)", "modifiers": "private", "return": "IChemModel", "signature": "IChemModel readChemModel(IChemModel chemModel)", "full_signature": "private IChemModel readChemModel(IChemModel chemModel)", "class_method_signature": "Mol2Reader.readChemModel(IChemModel chemModel)", "testcase": false, "constructor": false}, {"identifier": "readChemFile", "parameters": "(IChemFile chemFile)", "modifiers": "private", "return": "IChemFile", "signature": "IChemFile readChemFile(IChemFile chemFile)", "full_signature": "private IChemFile readChemFile(IChemFile chemFile)", "class_method_signature": "Mol2Reader.readChemFile(IChemFile chemFile)", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(IChemObject object)", "modifiers": "public", "return": "boolean", "signature": "boolean accepts(IChemObject object)", "full_signature": "public boolean accepts(IChemObject object)", "class_method_signature": "Mol2Reader.accepts(IChemObject object)", "testcase": false, "constructor": false}, {"identifier": "readMolecule", "parameters": "(IAtomContainer molecule)", "modifiers": "private", "return": "IAtomContainer", "signature": "IAtomContainer readMolecule(IAtomContainer molecule)", "full_signature": "private IAtomContainer readMolecule(IAtomContainer molecule)", "class_method_signature": "Mol2Reader.readMolecule(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "isElementSymbol", "parameters": "(String atomTypeStr)", "modifiers": "private", "return": "boolean", "signature": "boolean isElementSymbol(String atomTypeStr)", "full_signature": "private boolean isElementSymbol(String atomTypeStr)", "class_method_signature": "Mol2Reader.isElementSymbol(String atomTypeStr)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Mol2Reader.close()", "testcase": false, "constructor": false}], "file": "storage/io/src/main/java/org/openscience/cdk/io/Mol2Reader.java"}, "focal_method": {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accepts(Class<? extends IChemObject> classObject) {\n        if (IChemFile.class.equals(classObject)) return true;\n        if (IChemModel.class.equals(classObject)) return true;\n        if (IAtomContainer.class.equals(classObject)) return true;\n        Class<?>[] interfaces = classObject.getInterfaces();\n        for (Class<?> anInterface : interfaces) {\n            if (IChemModel.class.equals(anInterface)) return true;\n            if (IChemFile.class.equals(anInterface)) return true;\n            if (IAtomContainer.class.equals(anInterface)) return true;\n        }\n        Class superClass = classObject.getSuperclass();\n        return superClass != null && this.accepts(superClass);\n    }", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "Mol2Reader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "getInterfaces", "equals", "equals", "equals", "getSuperclass", "accepts"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}