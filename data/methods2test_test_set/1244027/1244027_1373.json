{"test_class": {"identifier": "RepositoryConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private boolean print = false;", "modifier": "private", "type": "boolean", "declarator": "print = false", "var_name": "print"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/RepositoryConfigurationTest.java"}, "test_case": {"identifier": "shouldDisableDocumentOptimizationWithoutValidChildCountTargetValue", "parameters": "()", "modifiers": "@FixFor( \"MODE-1988\" ) @Test public", "return": "void", "body": "@FixFor( \"MODE-1988\" )\n    @Test\n    public void shouldDisableDocumentOptimizationWithoutValidChildCountTargetValue() {\n        Document docOpt = Schematic.newDocument(FieldName.OPTIMIZATION_CHILD_COUNT_TOLERANCE, 10);\n        Document doc = Schematic.newDocument(FieldName.NAME, \"repoName\", FieldName.STORAGE,\n                                             Schematic.newDocument(FieldName.DOCUMENT_OPTIMIZATION, docOpt));\n        RepositoryConfiguration config = new RepositoryConfiguration(doc, \"repoName\");\n        DocumentOptimization opt = config.getDocumentOptimization();\n        assertThat(opt, is(notNullValue()));\n        assertThat(opt.isEnabled(), is(false));\n    }", "signature": "void shouldDisableDocumentOptimizationWithoutValidChildCountTargetValue()", "full_signature": "@FixFor( \"MODE-1988\" ) @Test public void shouldDisableDocumentOptimizationWithoutValidChildCountTargetValue()", "class_method_signature": "RepositoryConfigurationTest.shouldDisableDocumentOptimizationWithoutValidChildCountTargetValue()", "testcase": true, "constructor": false, "invocations": ["newDocument", "newDocument", "newDocument", "getDocumentOptimization", "assertThat", "is", "notNullValue", "assertThat", "isEnabled", "is"]}, "focal_class": {"identifier": "RepositoryConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ROOT_NODE_ID = \"/\";", "modifier": "public static final", "type": "String", "declarator": "ROOT_NODE_ID = \"/\"", "var_name": "ROOT_NODE_ID"}, {"original_string": "public static final String SYSTEM_WORKSPACE_NAME = \"system\";", "modifier": "public static final", "type": "String", "declarator": "SYSTEM_WORKSPACE_NAME = \"system\"", "var_name": "SYSTEM_WORKSPACE_NAME"}, {"original_string": "public static final String DEFAULT_JNDI_PREFIX_OF_NAME = \"java:jcr/local/\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_JNDI_PREFIX_OF_NAME = \"java:jcr/local/\"", "var_name": "DEFAULT_JNDI_PREFIX_OF_NAME"}, {"original_string": "private final static String PROJECTION_PATH_EXPRESSION_STRING = \"(\\\\w+):((([/]([^/=]|(\\\\\\\\.))+)+)|[/])\\\\s*=>\\\\s*((([/]([^/]|(\\\\\\\\.))+)+)|[/])\";", "modifier": "private final static", "type": "String", "declarator": "PROJECTION_PATH_EXPRESSION_STRING = \"(\\\\w+):((([/]([^/=]|(\\\\\\\\.))+)+)|[/])\\\\s*=>\\\\s*((([/]([^/]|(\\\\\\\\.))+)+)|[/])\"", "var_name": "PROJECTION_PATH_EXPRESSION_STRING"}, {"original_string": "public final static Pattern PROJECTION_PATH_EXPRESSION_PATTERN = Pattern.compile(PROJECTION_PATH_EXPRESSION_STRING);", "modifier": "public final static", "type": "Pattern", "declarator": "PROJECTION_PATH_EXPRESSION_PATTERN = Pattern.compile(PROJECTION_PATH_EXPRESSION_STRING)", "var_name": "PROJECTION_PATH_EXPRESSION_PATTERN"}, {"original_string": "private final static String INDEX_COLUMN_DEFINITION_STRING = \"(([^:/]+):)?([^:]*)(\\\\(\\\\w{1,}\\\\))\";", "modifier": "private final static", "type": "String", "declarator": "INDEX_COLUMN_DEFINITION_STRING = \"(([^:/]+):)?([^:]*)(\\\\(\\\\w{1,}\\\\))\"", "var_name": "INDEX_COLUMN_DEFINITION_STRING"}, {"original_string": "private final static String INDEX_COLUMN_DEFINITIONS_STRING = INDEX_COLUMN_DEFINITION_STRING + \"(,\"\n                                                                  + INDEX_COLUMN_DEFINITION_STRING + \")*\";", "modifier": "private final static", "type": "String", "declarator": "INDEX_COLUMN_DEFINITIONS_STRING = INDEX_COLUMN_DEFINITION_STRING + \"(,\"\n                                                                  + INDEX_COLUMN_DEFINITION_STRING + \")*\"", "var_name": "INDEX_COLUMN_DEFINITIONS_STRING"}, {"original_string": "public final static Pattern INDEX_COLUMN_DEFINITIONS_PATTERN = Pattern.compile(INDEX_COLUMN_DEFINITIONS_STRING);", "modifier": "public final static", "type": "Pattern", "declarator": "INDEX_COLUMN_DEFINITIONS_PATTERN = Pattern.compile(INDEX_COLUMN_DEFINITIONS_STRING)", "var_name": "INDEX_COLUMN_DEFINITIONS_PATTERN"}, {"original_string": "final static int UNUSED_BINARY_VALUE_AGE_IN_MILLIS = (int)TimeUnit.MILLISECONDS.convert(1, TimeUnit.HOURS);", "modifier": "final static", "type": "int", "declarator": "UNUSED_BINARY_VALUE_AGE_IN_MILLIS = (int)TimeUnit.MILLISECONDS.convert(1, TimeUnit.HOURS)", "var_name": "UNUSED_BINARY_VALUE_AGE_IN_MILLIS"}, {"original_string": "final static String INITIAL_TIME_REGEX = \"(\\\\d\\\\d):(\\\\d\\\\d)\";", "modifier": "final static", "type": "String", "declarator": "INITIAL_TIME_REGEX = \"(\\\\d\\\\d):(\\\\d\\\\d)\"", "var_name": "INITIAL_TIME_REGEX"}, {"original_string": "final static Pattern INITIAL_TIME_PATTERN = Pattern.compile(INITIAL_TIME_REGEX);", "modifier": "final static", "type": "Pattern", "declarator": "INITIAL_TIME_PATTERN = Pattern.compile(INITIAL_TIME_REGEX)", "var_name": "INITIAL_TIME_PATTERN"}, {"original_string": "protected static final Document EMPTY = Schematic.newDocument();", "modifier": "protected static final", "type": "Document", "declarator": "EMPTY = Schematic.newDocument()", "var_name": "EMPTY"}, {"original_string": "protected static final Map<String, String> PROVIDER_ALIASES;", "modifier": "protected static final", "type": "Map<String, String>", "declarator": "PROVIDER_ALIASES", "var_name": "PROVIDER_ALIASES"}, {"original_string": "protected static final Map<String, String> SEQUENCER_ALIASES;", "modifier": "protected static final", "type": "Map<String, String>", "declarator": "SEQUENCER_ALIASES", "var_name": "SEQUENCER_ALIASES"}, {"original_string": "protected static final Map<String, String> INDEX_PROVIDER_ALIASES;", "modifier": "protected static final", "type": "Map<String, String>", "declarator": "INDEX_PROVIDER_ALIASES", "var_name": "INDEX_PROVIDER_ALIASES"}, {"original_string": "protected static final Map<String, String> EXTRACTOR_ALIASES;", "modifier": "protected static final", "type": "Map<String, String>", "declarator": "EXTRACTOR_ALIASES", "var_name": "EXTRACTOR_ALIASES"}, {"original_string": "protected static final Map<String, String> CONNECTOR_ALIASES;", "modifier": "protected static final", "type": "Map<String, String>", "declarator": "CONNECTOR_ALIASES", "var_name": "CONNECTOR_ALIASES"}, {"original_string": "protected static SchemaLibrary SCHEMA_LIBRARY;", "modifier": "protected static", "type": "SchemaLibrary", "declarator": "SCHEMA_LIBRARY", "var_name": "SCHEMA_LIBRARY"}, {"original_string": "public static final String JSON_SCHEMA_URI = \"http://modeshape.org/3.0/repository-config#\";", "modifier": "public static final", "type": "String", "declarator": "JSON_SCHEMA_URI = \"http://modeshape.org/3.0/repository-config#\"", "var_name": "JSON_SCHEMA_URI"}, {"original_string": "public static final String JSON_SCHEMA_RESOURCE_PATH = \"org/modeshape/jcr/repository-config-schema.json\";", "modifier": "public static final", "type": "String", "declarator": "JSON_SCHEMA_RESOURCE_PATH = \"org/modeshape/jcr/repository-config-schema.json\"", "var_name": "JSON_SCHEMA_RESOURCE_PATH"}, {"original_string": "private static final Logger LOGGER = Logger.getLogger(RepositoryConfiguration.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(RepositoryConfiguration.class)", "var_name": "LOGGER"}, {"original_string": "protected static final Set<List<String>> DEPRECATED_FIELDS = Collections.emptySet();", "modifier": "protected static final", "type": "Set<List<String>>", "declarator": "DEPRECATED_FIELDS = Collections.emptySet()", "var_name": "DEPRECATED_FIELDS"}, {"original_string": "protected static final Set<String> COMPONENT_SKIP_PROPERTIES;", "modifier": "protected static final", "type": "Set<String>", "declarator": "COMPONENT_SKIP_PROPERTIES", "var_name": "COMPONENT_SKIP_PROPERTIES"}, {"original_string": "protected static final String COLUMN_DEFN_PATTERN_STRING = \"([^(,]+)[(]([^),]+)[)]\";", "modifier": "protected static final", "type": "String", "declarator": "COLUMN_DEFN_PATTERN_STRING = \"([^(,]+)[(]([^),]+)[)]\"", "var_name": "COLUMN_DEFN_PATTERN_STRING"}, {"original_string": "protected static final Pattern COLUMN_DEFN_PATTERN = Pattern.compile(COLUMN_DEFN_PATTERN_STRING);", "modifier": "protected static final", "type": "Pattern", "declarator": "COLUMN_DEFN_PATTERN = Pattern.compile(COLUMN_DEFN_PATTERN_STRING)", "var_name": "COLUMN_DEFN_PATTERN"}, {"original_string": "protected static final Set<String> INDEX_PROVIDER_FIELDS = org.modeshape.common.collection.Collections.unmodifiableSet(FieldName.PROVIDER_NAME,\n                                                                                                                           FieldName.DESCRIPTION,\n                                                                                                                           FieldName.NODE_TYPE,\n                                                                                                                           FieldName.KIND,\n                                                                                                                           FieldName.COLUMNS,\n                                                                                                                           FieldName.WORKSPACES);", "modifier": "protected static final", "type": "Set<String>", "declarator": "INDEX_PROVIDER_FIELDS = org.modeshape.common.collection.Collections.unmodifiableSet(FieldName.PROVIDER_NAME,\n                                                                                                                           FieldName.DESCRIPTION,\n                                                                                                                           FieldName.NODE_TYPE,\n                                                                                                                           FieldName.KIND,\n                                                                                                                           FieldName.COLUMNS,\n                                                                                                                           FieldName.WORKSPACES)", "var_name": "INDEX_PROVIDER_FIELDS"}, {"original_string": "private final String docName;", "modifier": "private final", "type": "String", "declarator": "docName", "var_name": "docName"}, {"original_string": "private final Document doc;", "modifier": "private final", "type": "Document", "declarator": "doc", "var_name": "doc"}, {"original_string": "private transient Environment environment = new LocalEnvironment();", "modifier": "private transient", "type": "Environment", "declarator": "environment = new LocalEnvironment()", "var_name": "environment"}, {"original_string": "private volatile Problems problems = null;", "modifier": "private volatile", "type": "Problems", "declarator": "problems = null", "var_name": "problems"}], "methods": [{"identifier": "replaceSystemPropertyVariables", "parameters": "( Document doc )", "modifiers": "protected static", "return": "Document", "signature": "Document replaceSystemPropertyVariables( Document doc )", "full_signature": "protected static Document replaceSystemPropertyVariables( Document doc )", "class_method_signature": "RepositoryConfiguration.replaceSystemPropertyVariables( Document doc )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( URL url )", "modifiers": "public static", "return": "RepositoryConfiguration", "signature": "RepositoryConfiguration read( URL url )", "full_signature": "public static RepositoryConfiguration read( URL url )", "class_method_signature": "RepositoryConfiguration.read( URL url )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( File file )", "modifiers": "public static", "return": "RepositoryConfiguration", "signature": "RepositoryConfiguration read( File file )", "full_signature": "public static RepositoryConfiguration read( File file )", "class_method_signature": "RepositoryConfiguration.read( File file )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( InputStream stream,\n                                                String name )", "modifiers": "public static", "return": "RepositoryConfiguration", "signature": "RepositoryConfiguration read( InputStream stream,\n                                                String name )", "full_signature": "public static RepositoryConfiguration read( InputStream stream,\n                                                String name )", "class_method_signature": "RepositoryConfiguration.read( InputStream stream,\n                                                String name )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( String resourcePathOrJsonContentString )", "modifiers": "public static", "return": "RepositoryConfiguration", "signature": "RepositoryConfiguration read( String resourcePathOrJsonContentString )", "full_signature": "public static RepositoryConfiguration read( String resourcePathOrJsonContentString )", "class_method_signature": "RepositoryConfiguration.read( String resourcePathOrJsonContentString )", "testcase": false, "constructor": false}, {"identifier": "withoutExtension", "parameters": "( String name )", "modifiers": "private static", "return": "String", "signature": "String withoutExtension( String name )", "full_signature": "private static String withoutExtension( String name )", "class_method_signature": "RepositoryConfiguration.withoutExtension( String name )", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "( String str )", "modifiers": "private static", "return": "boolean", "signature": "boolean isEmpty( String str )", "full_signature": "private static boolean isEmpty( String str )", "class_method_signature": "RepositoryConfiguration.isEmpty( String str )", "testcase": false, "constructor": false}, {"identifier": "ensureNamed", "parameters": "( Document document,\n                                         String documentName )", "modifiers": "private static", "return": "Document", "signature": "Document ensureNamed( Document document,\n                                         String documentName )", "full_signature": "private static Document ensureNamed( Document document,\n                                         String documentName )", "class_method_signature": "RepositoryConfiguration.ensureNamed( Document document,\n                                         String documentName )", "testcase": false, "constructor": false}, {"identifier": "RepositoryConfiguration", "parameters": "()", "modifiers": "public", "return": "", "signature": " RepositoryConfiguration()", "full_signature": "public  RepositoryConfiguration()", "class_method_signature": "RepositoryConfiguration.RepositoryConfiguration()", "testcase": false, "constructor": true}, {"identifier": "RepositoryConfiguration", "parameters": "( String name )", "modifiers": "public", "return": "", "signature": " RepositoryConfiguration( String name )", "full_signature": "public  RepositoryConfiguration( String name )", "class_method_signature": "RepositoryConfiguration.RepositoryConfiguration( String name )", "testcase": false, "constructor": true}, {"identifier": "RepositoryConfiguration", "parameters": "( Document document,\n                                    String documentName )", "modifiers": "public", "return": "", "signature": " RepositoryConfiguration( Document document,\n                                    String documentName )", "full_signature": "public  RepositoryConfiguration( Document document,\n                                    String documentName )", "class_method_signature": "RepositoryConfiguration.RepositoryConfiguration( Document document,\n                                    String documentName )", "testcase": false, "constructor": true}, {"identifier": "RepositoryConfiguration", "parameters": "( String name,\n                                    Environment environment )", "modifiers": "public", "return": "", "signature": " RepositoryConfiguration( String name,\n                                    Environment environment )", "full_signature": "public  RepositoryConfiguration( String name,\n                                    Environment environment )", "class_method_signature": "RepositoryConfiguration.RepositoryConfiguration( String name,\n                                    Environment environment )", "testcase": false, "constructor": true}, {"identifier": "RepositoryConfiguration", "parameters": "( Document document,\n                                    String documentName,\n                                    Environment environment )", "modifiers": "public", "return": "", "signature": " RepositoryConfiguration( Document document,\n                                    String documentName,\n                                    Environment environment )", "full_signature": "public  RepositoryConfiguration( Document document,\n                                    String documentName,\n                                    Environment environment )", "class_method_signature": "RepositoryConfiguration.RepositoryConfiguration( Document document,\n                                    String documentName,\n                                    Environment environment )", "testcase": false, "constructor": true}, {"identifier": "environment", "parameters": "()", "modifiers": "protected", "return": "Environment", "signature": "Environment environment()", "full_signature": "protected Environment environment()", "class_method_signature": "RepositoryConfiguration.environment()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "RepositoryConfiguration.getName()", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "()", "modifiers": "public", "return": "Document", "signature": "Document getDocument()", "full_signature": "public Document getDocument()", "class_method_signature": "RepositoryConfiguration.getDocument()", "testcase": false, "constructor": false}, {"identifier": "getJndiName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getJndiName()", "full_signature": "public String getJndiName()", "class_method_signature": "RepositoryConfiguration.getJndiName()", "testcase": false, "constructor": false}, {"identifier": "getPersistenceConfiguration", "parameters": "()", "modifiers": "public", "return": "Document", "signature": "Document getPersistenceConfiguration()", "full_signature": "public Document getPersistenceConfiguration()", "class_method_signature": "RepositoryConfiguration.getPersistenceConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getLockTimeoutMillis", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLockTimeoutMillis()", "full_signature": "public long getLockTimeoutMillis()", "class_method_signature": "RepositoryConfiguration.getLockTimeoutMillis()", "testcase": false, "constructor": false}, {"identifier": "getTransactionManagerLookup", "parameters": "()", "modifiers": "public", "return": "TransactionManagerLookup", "signature": "TransactionManagerLookup getTransactionManagerLookup()", "full_signature": "public TransactionManagerLookup getTransactionManagerLookup()", "class_method_signature": "RepositoryConfiguration.getTransactionManagerLookup()", "testcase": false, "constructor": false}, {"identifier": "getWorkspaceCacheSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWorkspaceCacheSize()", "full_signature": "public int getWorkspaceCacheSize()", "class_method_signature": "RepositoryConfiguration.getWorkspaceCacheSize()", "testcase": false, "constructor": false}, {"identifier": "getClustering", "parameters": "()", "modifiers": "public", "return": "Clustering", "signature": "Clustering getClustering()", "full_signature": "public Clustering getClustering()", "class_method_signature": "RepositoryConfiguration.getClustering()", "testcase": false, "constructor": false}, {"identifier": "getBinaryStorage", "parameters": "()", "modifiers": "public", "return": "BinaryStorage", "signature": "BinaryStorage getBinaryStorage()", "full_signature": "public BinaryStorage getBinaryStorage()", "class_method_signature": "RepositoryConfiguration.getBinaryStorage()", "testcase": false, "constructor": false}, {"identifier": "getJournaling", "parameters": "()", "modifiers": "public", "return": "Journaling", "signature": "Journaling getJournaling()", "full_signature": "public Journaling getJournaling()", "class_method_signature": "RepositoryConfiguration.getJournaling()", "testcase": false, "constructor": false}, {"identifier": "getInitialContent", "parameters": "()", "modifiers": "public", "return": "InitialContent", "signature": "InitialContent getInitialContent()", "full_signature": "public InitialContent getInitialContent()", "class_method_signature": "RepositoryConfiguration.getInitialContent()", "testcase": false, "constructor": false}, {"identifier": "getReindexing", "parameters": "()", "modifiers": "public", "return": "Reindexing", "signature": "Reindexing getReindexing()", "full_signature": "public Reindexing getReindexing()", "class_method_signature": "RepositoryConfiguration.getReindexing()", "testcase": false, "constructor": false}, {"identifier": "getNodeTypes", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getNodeTypes()", "full_signature": "public List<String> getNodeTypes()", "class_method_signature": "RepositoryConfiguration.getNodeTypes()", "testcase": false, "constructor": false}, {"identifier": "getBuiltInSequencerClassName", "parameters": "( String alias )", "modifiers": "public static", "return": "String", "signature": "String getBuiltInSequencerClassName( String alias )", "full_signature": "public static String getBuiltInSequencerClassName( String alias )", "class_method_signature": "RepositoryConfiguration.getBuiltInSequencerClassName( String alias )", "testcase": false, "constructor": false}, {"identifier": "getBuiltInConnectorClassName", "parameters": "( String alias )", "modifiers": "public static", "return": "String", "signature": "String getBuiltInConnectorClassName( String alias )", "full_signature": "public static String getBuiltInConnectorClassName( String alias )", "class_method_signature": "RepositoryConfiguration.getBuiltInConnectorClassName( String alias )", "testcase": false, "constructor": false}, {"identifier": "getBuiltInIndexProviderClassName", "parameters": "( String alias )", "modifiers": "public static", "return": "String", "signature": "String getBuiltInIndexProviderClassName( String alias )", "full_signature": "public static String getBuiltInIndexProviderClassName( String alias )", "class_method_signature": "RepositoryConfiguration.getBuiltInIndexProviderClassName( String alias )", "testcase": false, "constructor": false}, {"identifier": "getBuiltInTextExtractorClassName", "parameters": "( String alias )", "modifiers": "public static", "return": "String", "signature": "String getBuiltInTextExtractorClassName( String alias )", "full_signature": "public static String getBuiltInTextExtractorClassName( String alias )", "class_method_signature": "RepositoryConfiguration.getBuiltInTextExtractorClassName( String alias )", "testcase": false, "constructor": false}, {"identifier": "isCreatingWorkspacesAllowed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCreatingWorkspacesAllowed()", "full_signature": "public boolean isCreatingWorkspacesAllowed()", "class_method_signature": "RepositoryConfiguration.isCreatingWorkspacesAllowed()", "testcase": false, "constructor": false}, {"identifier": "getEventBusSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getEventBusSize()", "full_signature": "public int getEventBusSize()", "class_method_signature": "RepositoryConfiguration.getEventBusSize()", "testcase": false, "constructor": false}, {"identifier": "getDefaultWorkspaceName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultWorkspaceName()", "full_signature": "public String getDefaultWorkspaceName()", "class_method_signature": "RepositoryConfiguration.getDefaultWorkspaceName()", "testcase": false, "constructor": false}, {"identifier": "getPredefinedWorkspaceNames", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getPredefinedWorkspaceNames()", "full_signature": "public Set<String> getPredefinedWorkspaceNames()", "class_method_signature": "RepositoryConfiguration.getPredefinedWorkspaceNames()", "testcase": false, "constructor": false}, {"identifier": "getAllWorkspaceNames", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getAllWorkspaceNames()", "full_signature": "public Set<String> getAllWorkspaceNames()", "class_method_signature": "RepositoryConfiguration.getAllWorkspaceNames()", "testcase": false, "constructor": false}, {"identifier": "getSecurity", "parameters": "()", "modifiers": "public", "return": "Security", "signature": "Security getSecurity()", "full_signature": "public Security getSecurity()", "class_method_signature": "RepositoryConfiguration.getSecurity()", "testcase": false, "constructor": false}, {"identifier": "getMonitoring", "parameters": "()", "modifiers": "public", "return": "MonitoringSystem", "signature": "MonitoringSystem getMonitoring()", "full_signature": "public MonitoringSystem getMonitoring()", "class_method_signature": "RepositoryConfiguration.getMonitoring()", "testcase": false, "constructor": false}, {"identifier": "getIndexProviders", "parameters": "()", "modifiers": "public", "return": "List<Component>", "signature": "List<Component> getIndexProviders()", "full_signature": "public List<Component> getIndexProviders()", "class_method_signature": "RepositoryConfiguration.getIndexProviders()", "testcase": false, "constructor": false}, {"identifier": "validateIndexProviders", "parameters": "( Problems problems )", "modifiers": "protected", "return": "void", "signature": "void validateIndexProviders( Problems problems )", "full_signature": "protected void validateIndexProviders( Problems problems )", "class_method_signature": "RepositoryConfiguration.validateIndexProviders( Problems problems )", "testcase": false, "constructor": false}, {"identifier": "getIndexes", "parameters": "()", "modifiers": "public", "return": "Indexes", "signature": "Indexes getIndexes()", "full_signature": "public Indexes getIndexes()", "class_method_signature": "RepositoryConfiguration.getIndexes()", "testcase": false, "constructor": false}, {"identifier": "hasIndexProvider", "parameters": "( String name )", "modifiers": "protected", "return": "boolean", "signature": "boolean hasIndexProvider( String name )", "full_signature": "protected boolean hasIndexProvider( String name )", "class_method_signature": "RepositoryConfiguration.hasIndexProvider( String name )", "testcase": false, "constructor": false}, {"identifier": "getTextExtraction", "parameters": "()", "modifiers": "public", "return": "TextExtraction", "signature": "TextExtraction getTextExtraction()", "full_signature": "public TextExtraction getTextExtraction()", "class_method_signature": "RepositoryConfiguration.getTextExtraction()", "testcase": false, "constructor": false}, {"identifier": "getSequencing", "parameters": "()", "modifiers": "public", "return": "Sequencing", "signature": "Sequencing getSequencing()", "full_signature": "public Sequencing getSequencing()", "class_method_signature": "RepositoryConfiguration.getSequencing()", "testcase": false, "constructor": false}, {"identifier": "getFederation", "parameters": "()", "modifiers": "public", "return": "Federation", "signature": "Federation getFederation()", "full_signature": "public Federation getFederation()", "class_method_signature": "RepositoryConfiguration.getFederation()", "testcase": false, "constructor": false}, {"identifier": "getGarbageCollection", "parameters": "()", "modifiers": "public", "return": "GarbageCollection", "signature": "GarbageCollection getGarbageCollection()", "full_signature": "public GarbageCollection getGarbageCollection()", "class_method_signature": "RepositoryConfiguration.getGarbageCollection()", "testcase": false, "constructor": false}, {"identifier": "getDocumentOptimization", "parameters": "()", "modifiers": "public", "return": "DocumentOptimization", "signature": "DocumentOptimization getDocumentOptimization()", "full_signature": "public DocumentOptimization getDocumentOptimization()", "class_method_signature": "RepositoryConfiguration.getDocumentOptimization()", "testcase": false, "constructor": false}, {"identifier": "readComponents", "parameters": "( Document doc,\n                                              String fieldName,\n                                              String aliasFieldName,\n                                              Map<String, String> classnamesByAlias,\n                                              Problems problems )", "modifiers": "protected", "return": "List<Component>", "signature": "List<Component> readComponents( Document doc,\n                                              String fieldName,\n                                              String aliasFieldName,\n                                              Map<String, String> classnamesByAlias,\n                                              Problems problems )", "full_signature": "protected List<Component> readComponents( Document doc,\n                                              String fieldName,\n                                              String aliasFieldName,\n                                              Map<String, String> classnamesByAlias,\n                                              Problems problems )", "class_method_signature": "RepositoryConfiguration.readComponents( Document doc,\n                                              String fieldName,\n                                              String aliasFieldName,\n                                              Map<String, String> classnamesByAlias,\n                                              Problems problems )", "testcase": false, "constructor": false}, {"identifier": "aliasesStringFrom", "parameters": "( Map<String, String> classnamesByAlias )", "modifiers": "private", "return": "String", "signature": "String aliasesStringFrom( Map<String, String> classnamesByAlias )", "full_signature": "private String aliasesStringFrom( Map<String, String> classnamesByAlias )", "class_method_signature": "RepositoryConfiguration.aliasesStringFrom( Map<String, String> classnamesByAlias )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RepositoryConfiguration.toString()", "testcase": false, "constructor": false}, {"identifier": "edit", "parameters": "()", "modifiers": "public", "return": "Editor", "signature": "Editor edit()", "full_signature": "public Editor edit()", "class_method_signature": "RepositoryConfiguration.edit()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "public", "return": "Problems", "signature": "Problems validate()", "full_signature": "public Problems validate()", "class_method_signature": "RepositoryConfiguration.validate()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "( Changes changes )", "modifiers": "public", "return": "Problems", "signature": "Problems validate( Changes changes )", "full_signature": "public Problems validate( Changes changes )", "class_method_signature": "RepositoryConfiguration.validate( Changes changes )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( Environment environment )", "modifiers": "public", "return": "RepositoryConfiguration", "signature": "RepositoryConfiguration with( Environment environment )", "full_signature": "public RepositoryConfiguration with( Environment environment )", "class_method_signature": "RepositoryConfiguration.with( Environment environment )", "testcase": false, "constructor": false}, {"identifier": "withName", "parameters": "( String docName )", "modifiers": "public", "return": "RepositoryConfiguration", "signature": "RepositoryConfiguration withName( String docName )", "full_signature": "public RepositoryConfiguration withName( String docName )", "class_method_signature": "RepositoryConfiguration.withName( String docName )", "testcase": false, "constructor": false}, {"identifier": "warnUseOfDeprecatedFields", "parameters": "( SimpleProblems problems )", "modifiers": "protected", "return": "void", "signature": "void warnUseOfDeprecatedFields( SimpleProblems problems )", "full_signature": "protected void warnUseOfDeprecatedFields( SimpleProblems problems )", "class_method_signature": "RepositoryConfiguration.warnUseOfDeprecatedFields( SimpleProblems problems )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/RepositoryConfiguration.java"}, "focal_method": {"identifier": "getDocumentOptimization", "parameters": "()", "modifiers": "public", "return": "DocumentOptimization", "body": "public DocumentOptimization getDocumentOptimization() {\n        Document storage = doc.getDocument(FieldName.STORAGE);\n        if (storage == null) {\n            storage = Schematic.newDocument();\n        }\n        return new DocumentOptimization(storage.getDocument(FieldName.DOCUMENT_OPTIMIZATION));\n    }", "signature": "DocumentOptimization getDocumentOptimization()", "full_signature": "public DocumentOptimization getDocumentOptimization()", "class_method_signature": "RepositoryConfiguration.getDocumentOptimization()", "testcase": false, "constructor": false, "invocations": ["getDocument", "newDocument", "getDocument"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}