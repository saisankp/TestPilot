{"test_class": {"identifier": "MarkdownHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "handlebars-markdown/src/test/java/com/github/jknack/handlebars/MarkdownHelperTest.java"}, "test_case": {"identifier": "markdownFalsy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void markdownFalsy() throws IOException {\n    Handlebars handlebars = new Handlebars();\n    handlebars.registerHelper(\"markdown\", new MarkdownHelper());\n    Template template = handlebars.compileInline(\"{{markdown this}}\");\n\n    assertEquals(\"\", template.apply(null));\n  }", "signature": "void markdownFalsy()", "full_signature": "@Test public void markdownFalsy()", "class_method_signature": "MarkdownHelperTest.markdownFalsy()", "testcase": true, "constructor": false, "invocations": ["registerHelper", "compileInline", "assertEquals", "apply"]}, "focal_class": {"identifier": "MarkdownHelper", "superclass": "", "interfaces": "implements Helper<Object>", "fields": [{"original_string": "public static final Helper<Object> INSTANCE = new MarkdownHelper();", "modifier": "public static final", "type": "Helper<Object>", "declarator": "INSTANCE = new MarkdownHelper()", "var_name": "INSTANCE"}], "methods": [{"identifier": "apply", "parameters": "(final Object context, final Options options)", "modifiers": "@Override public", "return": "Object", "signature": "Object apply(final Object context, final Options options)", "full_signature": "@Override public Object apply(final Object context, final Options options)", "class_method_signature": "MarkdownHelper.apply(final Object context, final Options options)", "testcase": false, "constructor": false}], "file": "handlebars-markdown/src/main/java/com/github/jknack/handlebars/MarkdownHelper.java"}, "focal_method": {"identifier": "apply", "parameters": "(final Object context, final Options options)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n  public Object apply(final Object context, final Options options)\n      throws IOException {\n    if (options.isFalsy(context)) {\n      return \"\";\n    }\n    String markdown = context.toString();\n    PegDownProcessor processor = new PegDownProcessor();\n    return new Handlebars.SafeString(processor.markdownToHtml(markdown));\n  }", "signature": "Object apply(final Object context, final Options options)", "full_signature": "@Override public Object apply(final Object context, final Options options)", "class_method_signature": "MarkdownHelper.apply(final Object context, final Options options)", "testcase": false, "constructor": false, "invocations": ["isFalsy", "toString", "markdownToHtml"]}, "repository": {"repo_id": 4459604, "url": "https://github.com/jknack/handlebars.java", "stars": 1107, "created": "5/27/2012 3:22:22 AM +00:00", "updates": "2020-01-24T06:58:31+00:00", "fork": "False", "license": "licensed"}}