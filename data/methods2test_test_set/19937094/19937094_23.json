{"test_class": {"identifier": "FileUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(getClass());", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(getClass())", "var_name": "log"}], "file": "quickfixj-core/src/test/java/quickfix/FileUtilTest.java"}, "test_case": {"identifier": "testURLLocation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testURLLocation() throws Exception {\n        // Assumption: Internet access\n        if (isInternetAccessible()) {\n            InputStream in = FileUtil.open(Message.class, \"http://www.quickfixj.org/\");\n            if (in != null) {\n                in.close();\n            }\n            assertNotNull(\"Resource not found\", in);\n        }\n    }", "signature": "void testURLLocation()", "full_signature": "@Test public void testURLLocation()", "class_method_signature": "FileUtilTest.testURLLocation()", "testcase": true, "constructor": false, "invocations": ["isInternetAccessible", "open", "close", "assertNotNull"]}, "focal_class": {"identifier": "FileUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "fileAppendPath", "parameters": "(String pathPrefix, String pathSuffix)", "modifiers": "public static", "return": "String", "signature": "String fileAppendPath(String pathPrefix, String pathSuffix)", "full_signature": "public static String fileAppendPath(String pathPrefix, String pathSuffix)", "class_method_signature": "FileUtil.fileAppendPath(String pathPrefix, String pathSuffix)", "testcase": false, "constructor": false}, {"identifier": "sessionIdFileName", "parameters": "(SessionID sessionID)", "modifiers": "public static", "return": "String", "signature": "String sessionIdFileName(SessionID sessionID)", "full_signature": "public static String sessionIdFileName(SessionID sessionID)", "class_method_signature": "FileUtil.sessionIdFileName(SessionID sessionID)", "testcase": false, "constructor": false}, {"identifier": "optionalField", "parameters": "(String delim, String value)", "modifiers": "private static", "return": "String", "signature": "String optionalField(String delim, String value)", "full_signature": "private static String optionalField(String delim, String value)", "class_method_signature": "FileUtil.optionalField(String delim, String value)", "testcase": false, "constructor": false}, {"identifier": "replaceIllegalCharactersInFileName", "parameters": "(String fileName)", "modifiers": "private static", "return": "String", "signature": "String replaceIllegalCharactersInFileName(String fileName)", "full_signature": "private static String replaceIllegalCharactersInFileName(String fileName)", "class_method_signature": "FileUtil.replaceIllegalCharactersInFileName(String fileName)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(Class<?> clazz, String name)", "modifiers": "public static", "return": "InputStream", "signature": "InputStream open(Class<?> clazz, String name)", "full_signature": "public static InputStream open(Class<?> clazz, String name)", "class_method_signature": "FileUtil.open(Class<?> clazz, String name)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(Class<?> clazz, String name, Location... locations)", "modifiers": "public static", "return": "InputStream", "signature": "InputStream open(Class<?> clazz, String name, Location... locations)", "full_signature": "public static InputStream open(Class<?> clazz, String name, Location... locations)", "class_method_signature": "FileUtil.open(Class<?> clazz, String name, Location... locations)", "testcase": false, "constructor": false}], "file": "quickfixj-core/src/main/java/quickfix/FileUtil.java"}, "focal_method": {"identifier": "open", "parameters": "(Class<?> clazz, String name)", "modifiers": "public static", "return": "InputStream", "body": "public static InputStream open(Class<?> clazz, String name) {\n        return open(clazz, name, Location.FILESYSTEM,\n                Location.CONTEXT_RESOURCE, Location.CLASS_RESOURCE,\n                Location.CLASSLOADER_RESOURCE, Location.URL);\n    }", "signature": "InputStream open(Class<?> clazz, String name)", "full_signature": "public static InputStream open(Class<?> clazz, String name)", "class_method_signature": "FileUtil.open(Class<?> clazz, String name)", "testcase": false, "constructor": false, "invocations": ["open"]}, "repository": {"repo_id": 19937094, "url": "https://github.com/quickfix-j/quickfixj", "stars": 538, "created": "5/19/2014 10:04:08 AM +00:00", "updates": "2020-01-26T01:21:15+00:00", "fork": "False", "license": "licensed"}}