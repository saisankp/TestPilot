{"test_class": {"identifier": "JobControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "@Autowired\n    private TokenFactory tokenFactory;", "modifier": "@Autowired\n    private", "type": "TokenFactory", "declarator": "tokenFactory", "var_name": "tokenFactory"}, {"original_string": "private ObjectMapper objectMapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "private OAuth2AccessToken accessToken;", "modifier": "private", "type": "OAuth2AccessToken", "declarator": "accessToken", "var_name": "accessToken"}], "file": "lzpeng-boot-server/src/test/java/com/lzpeng/project/monitor/controller/JobControllerTest.java"}, "test_case": {"identifier": "testDelete", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDelete() throws Exception {\n        String id = \"{}\";\n        mockMvc.perform(delete(\"/monitor/job/1\" + id)\n                .header(HttpHeaders.AUTHORIZATION, String.join(\" \", accessToken.getTokenType(), accessToken.getValue()))\n                .contentType(MediaType.APPLICATION_JSON_UTF8) // \u8bf7\u6c42\u7c7b\u578b\n                .accept(MediaType.APPLICATION_JSON_UTF8)) // \u54cd\u5e94\u7c7b\u578b\n                .andExpect(status().isOk());\n    }", "signature": "void testDelete()", "full_signature": "@Test public void testDelete()", "class_method_signature": "JobControllerTest.testDelete()", "testcase": true, "constructor": false, "invocations": ["andExpect", "perform", "accept", "contentType", "header", "delete", "join", "getTokenType", "getValue", "isOk", "status"]}, "focal_class": {"identifier": "JobController", "superclass": "extends BaseControllerImpl<Job>", "interfaces": "", "fields": [{"original_string": "private static final String MODULE_NAME = \"monitor\";", "modifier": "private static final", "type": "String", "declarator": "MODULE_NAME = \"monitor\"", "var_name": "MODULE_NAME"}, {"original_string": "private static final String CLASS_NAME = \"job\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_NAME = \"job\"", "var_name": "CLASS_NAME"}, {"original_string": "private static final String LIST_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":list\";", "modifier": "private static final", "type": "String", "declarator": "LIST_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":list\"", "var_name": "LIST_PERM"}, {"original_string": "private static final String QUERY_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":query\";", "modifier": "private static final", "type": "String", "declarator": "QUERY_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":query\"", "var_name": "QUERY_PERM"}, {"original_string": "private static final String ADD_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":add\";", "modifier": "private static final", "type": "String", "declarator": "ADD_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":add\"", "var_name": "ADD_PERM"}, {"original_string": "private static final String DELETE_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":delete\";", "modifier": "private static final", "type": "String", "declarator": "DELETE_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":delete\"", "var_name": "DELETE_PERM"}, {"original_string": "private static final String EDIT_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":edit\";", "modifier": "private static final", "type": "String", "declarator": "EDIT_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":edit\"", "var_name": "EDIT_PERM"}, {"original_string": "private static final String EXPORT_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":export\";", "modifier": "private static final", "type": "String", "declarator": "EXPORT_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":export\"", "var_name": "EXPORT_PERM"}, {"original_string": "private static final String IMPORT_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":import\";", "modifier": "private static final", "type": "String", "declarator": "IMPORT_PERM = MODULE_NAME + \":\" +  CLASS_NAME + \":import\"", "var_name": "IMPORT_PERM"}, {"original_string": "protected JobService jobService;", "modifier": "protected", "type": "JobService", "declarator": "jobService", "var_name": "jobService"}], "methods": [{"identifier": "setJobService", "parameters": "(JobService jobService)", "modifiers": "@Autowired public", "return": "void", "signature": "void setJobService(JobService jobService)", "full_signature": "@Autowired public void setJobService(JobService jobService)", "class_method_signature": "JobController.setJobService(JobService jobService)", "testcase": false, "constructor": false}, {"identifier": "getTableInfo", "parameters": "()", "modifiers": "@Override @GetMapping(\"/dict\") @ApiOperation(\"\u83b7\u53d6\u5b9a\u65f6\u4efb\u52a1\u7684\u6570\u636e\u5b57\u5178\") @PreAuthorize(\"hasAnyAuthority('\" + LIST_PERM + \"')\") public", "return": "Result<TableInfo>", "signature": "Result<TableInfo> getTableInfo()", "full_signature": "@Override @GetMapping(\"/dict\") @ApiOperation(\"\u83b7\u53d6\u5b9a\u65f6\u4efb\u52a1\u7684\u6570\u636e\u5b57\u5178\") @PreAuthorize(\"hasAnyAuthority('\" + LIST_PERM + \"')\") public Result<TableInfo> getTableInfo()", "class_method_signature": "JobController.getTableInfo()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(@Valid @RequestBody Job model)", "modifiers": "@Override @PostMapping @ApiOperation(\"\u4fdd\u5b58\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + ADD_PERM + \"')\") public", "return": "Result<Job>", "signature": "Result<Job> save(@Valid @RequestBody Job model)", "full_signature": "@Override @PostMapping @ApiOperation(\"\u4fdd\u5b58\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + ADD_PERM + \"')\") public Result<Job> save(@Valid @RequestBody Job model)", "class_method_signature": "JobController.save(@Valid @RequestBody Job model)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "modifiers": "@Override @DeleteMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u5220\u9664\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + DELETE_PERM + \"')\") public", "return": "Result<Void>", "signature": "Result<Void> delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "full_signature": "@Override @DeleteMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u5220\u9664\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + DELETE_PERM + \"')\") public Result<Void> delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "class_method_signature": "JobController.delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id, @RequestBody Job model) {", "modifiers": "@Override @PutMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u66f4\u65b0\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + EDIT_PERM + \"')\") public", "return": "Result<Job>", "signature": "Result<Job> update(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id, @RequestBody Job model) {", "full_signature": "@Override @PutMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u66f4\u65b0\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + EDIT_PERM + \"')\") public Result<Job> update(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id, @RequestBody Job model) {", "class_method_signature": "JobController.update(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id, @RequestBody Job model) {", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(Job model)", "modifiers": "@Override @GetMapping @ApiOperation(\"\u67e5\u8be2\u6240\u6709\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public", "return": "Result<List<Job>>", "signature": "Result<List<Job>> findAll(Job model)", "full_signature": "@Override @GetMapping @ApiOperation(\"\u67e5\u8be2\u6240\u6709\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public Result<List<Job>> findAll(Job model)", "class_method_signature": "JobController.findAll(Job model)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(@ApiParam(value = \"\u9875\u7801\", required = true) @PathVariable(\"page\") int page, @ApiParam(value = \"\u6bcf\u9875\u6570\u636e\u6761\u6570\", required = true) @PathVariable(\"size\") int size, Job model) {", "modifiers": "@Override @GetMapping(\"/{page:[0-9]+}/{size:[0-9]+}\") @ApiOperation(\"\u5206\u9875\u67e5\u8be2\u5b9a\u65f6\u4efb\u52a1\u5217\u8868\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public", "return": "Result<QueryResult<Job>>", "signature": "Result<QueryResult<Job>> query(@ApiParam(value = \"\u9875\u7801\", required = true) @PathVariable(\"page\") int page, @ApiParam(value = \"\u6bcf\u9875\u6570\u636e\u6761\u6570\", required = true) @PathVariable(\"size\") int size, Job model) {", "full_signature": "@Override @GetMapping(\"/{page:[0-9]+}/{size:[0-9]+}\") @ApiOperation(\"\u5206\u9875\u67e5\u8be2\u5b9a\u65f6\u4efb\u52a1\u5217\u8868\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public Result<QueryResult<Job>> query(@ApiParam(value = \"\u9875\u7801\", required = true) @PathVariable(\"page\") int page, @ApiParam(value = \"\u6bcf\u9875\u6570\u636e\u6761\u6570\", required = true) @PathVariable(\"size\") int size, Job model) {", "class_method_signature": "JobController.query(@ApiParam(value = \"\u9875\u7801\", required = true) @PathVariable(\"page\") int page, @ApiParam(value = \"\u6bcf\u9875\u6570\u636e\u6761\u6570\", required = true) @PathVariable(\"size\") int size, Job model) {", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "modifiers": "@Override @GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6839\u636eID\u67e5\u8be2\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public", "return": "Result<Job>", "signature": "Result<Job> findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "full_signature": "@Override @GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6839\u636eID\u67e5\u8be2\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public Result<Job> findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "class_method_signature": "JobController.findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "testcase": false, "constructor": false}, {"identifier": "batch", "parameters": "(@RequestBody BatchModel<Job> batch)", "modifiers": "@Override @PostMapping(\"/batch\") @ApiOperation(\"\u6279\u91cf\u64cd\u4f5c\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAuthority('\" + ADD_PERM +\"') and hasAuthority('\" + EDIT_PERM +\"') and hasAuthority('\" + DELETE_PERM +\"')\") public", "return": "Result", "signature": "Result batch(@RequestBody BatchModel<Job> batch)", "full_signature": "@Override @PostMapping(\"/batch\") @ApiOperation(\"\u6279\u91cf\u64cd\u4f5c\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAuthority('\" + ADD_PERM +\"') and hasAuthority('\" + EDIT_PERM +\"') and hasAuthority('\" + DELETE_PERM +\"')\") public Result batch(@RequestBody BatchModel<Job> batch)", "class_method_signature": "JobController.batch(@RequestBody BatchModel<Job> batch)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "modifiers": "@PostMapping(\"/execute/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u7acb\u5373\u6267\u884c\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public", "return": "Result<String>", "signature": "Result<String> execute(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "full_signature": "@PostMapping(\"/execute/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u7acb\u5373\u6267\u884c\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public Result<String> execute(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "class_method_signature": "JobController.execute(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "testcase": false, "constructor": false}, {"identifier": "pause", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "modifiers": "@PostMapping(\"/pause/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6682\u505c\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public", "return": "Result<String>", "signature": "Result<String> pause(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "full_signature": "@PostMapping(\"/pause/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6682\u505c\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public Result<String> pause(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "class_method_signature": "JobController.pause(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "modifiers": "@PostMapping(\"/stop/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u505c\u6b62\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public", "return": "Result<String>", "signature": "Result<String> stop(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "full_signature": "@PostMapping(\"/stop/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u505c\u6b62\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public Result<String> stop(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "class_method_signature": "JobController.stop(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "testcase": false, "constructor": false}, {"identifier": "resume", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "modifiers": "@PostMapping(\"/resume/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6062\u590d\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public", "return": "Result<String>", "signature": "Result<String> resume(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "full_signature": "@PostMapping(\"/resume/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6062\u590d\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public Result<String> resume(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "class_method_signature": "JobController.resume(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "modifiers": "@PostMapping(\"/start/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u5f00\u542f\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public", "return": "Result<String>", "signature": "Result<String> start(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "full_signature": "@PostMapping(\"/start/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u5f00\u542f\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasRole('ADMIN')\") public Result<String> start(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "class_method_signature": "JobController.start(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) thr", "testcase": false, "constructor": false}, {"identifier": "importData", "parameters": "(MultipartFile file)", "modifiers": "@Override @PostMapping(\"/import\") @ApiOperation(\"\u4ece\u6587\u4ef6\u5bfc\u5165\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + IMPORT_PERM + \"')\") public", "return": "Result<List<Job>>", "signature": "Result<List<Job>> importData(MultipartFile file)", "full_signature": "@Override @PostMapping(\"/import\") @ApiOperation(\"\u4ece\u6587\u4ef6\u5bfc\u5165\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + IMPORT_PERM + \"')\") public Result<List<Job>> importData(MultipartFile file)", "class_method_signature": "JobController.importData(MultipartFile file)", "testcase": false, "constructor": false}, {"identifier": "exportData", "parameters": "(@RequestBody(required = false) List<String> ids, HttpServletResponse response)", "modifiers": "@Override @GetMapping(\"/export\") @ApiOperation(\"\u5bfc\u51fa\u5b9a\u65f6\u4efb\u52a1\u5230\u6587\u4ef6\") @PreAuthorize(\"permitAll()\") public", "return": "void", "signature": "void exportData(@RequestBody(required = false) List<String> ids, HttpServletResponse response)", "full_signature": "@Override @GetMapping(\"/export\") @ApiOperation(\"\u5bfc\u51fa\u5b9a\u65f6\u4efb\u52a1\u5230\u6587\u4ef6\") @PreAuthorize(\"permitAll()\") public void exportData(@RequestBody(required = false) List<String> ids, HttpServletResponse response)", "class_method_signature": "JobController.exportData(@RequestBody(required = false) List<String> ids, HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "lzpeng-boot-server/src/main/java/com/lzpeng/project/monitor/controller/JobController.java"}, "focal_method": {"identifier": "delete", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "modifiers": "@Override @DeleteMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u5220\u9664\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + DELETE_PERM + \"')\") public", "return": "Result<Void>", "body": "@Override\n    @DeleteMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\")\n    @ApiOperation(\"\u5220\u9664\u5b9a\u65f6\u4efb\u52a1\")\n    @PreAuthorize(\"hasAnyAuthority('\" + DELETE_PERM + \"')\")\n    public Result<Void> delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {\n        return super.delete(id);\n    }", "signature": "Result<Void> delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "full_signature": "@Override @DeleteMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u5220\u9664\u5b9a\u65f6\u4efb\u52a1\") @PreAuthorize(\"hasAnyAuthority('\" + DELETE_PERM + \"')\") public Result<Void> delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "class_method_signature": "JobController.delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "testcase": false, "constructor": false, "invocations": ["delete"]}, "repository": {"repo_id": 257335962, "url": "https://github.com/lzpeng723/minimal-boot", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 25, "size": 2632, "license": "licensed"}}