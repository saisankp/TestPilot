{"test_class": {"identifier": "ColCountTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/com/github/mpjct/jmpjct/mysql/proto/ColCountTest.java"}, "test_case": {"identifier": "test1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test1() {\n        byte[] packet = new byte[] {\n            (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x05\n        };\n\n        ColCount colcount = ColCount.loadFromPacket(packet);\n\n        assertArrayEquals(packet, colcount.toPacket());\n        assertEquals(colcount.colCount, 5);\n        assertEquals(colcount.sequenceId, 1);\n    }", "signature": "void test1()", "full_signature": "@Test public void test1()", "class_method_signature": "ColCountTest.test1()", "testcase": true, "constructor": false, "invocations": ["loadFromPacket", "assertArrayEquals", "toPacket", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "ColCount", "superclass": "extends Packet", "interfaces": "", "fields": [{"original_string": "public long colCount = 0;", "modifier": "public", "type": "long", "declarator": "colCount = 0", "var_name": "colCount"}], "methods": [{"identifier": "getPayload", "parameters": "()", "modifiers": "public", "return": "ArrayList<byte[]>", "signature": "ArrayList<byte[]> getPayload()", "full_signature": "public ArrayList<byte[]> getPayload()", "class_method_signature": "ColCount.getPayload()", "testcase": false, "constructor": false}, {"identifier": "loadFromPacket", "parameters": "(byte[] packet)", "modifiers": "public static", "return": "ColCount", "signature": "ColCount loadFromPacket(byte[] packet)", "full_signature": "public static ColCount loadFromPacket(byte[] packet)", "class_method_signature": "ColCount.loadFromPacket(byte[] packet)", "testcase": false, "constructor": false}], "file": "src/com/github/mpjct/jmpjct/mysql/proto/ColCount.java"}, "focal_method": {"identifier": "loadFromPacket", "parameters": "(byte[] packet)", "modifiers": "public static", "return": "ColCount", "body": "public static ColCount loadFromPacket(byte[] packet) {\n        ColCount obj = new ColCount();\n        Proto proto = new Proto(packet, 3);\n        \n        obj.sequenceId = proto.get_fixed_int(1);\n        obj.colCount = proto.get_lenenc_int();\n        \n        return obj;\n    }", "signature": "ColCount loadFromPacket(byte[] packet)", "full_signature": "public static ColCount loadFromPacket(byte[] packet)", "class_method_signature": "ColCount.loadFromPacket(byte[] packet)", "testcase": false, "constructor": false, "invocations": ["get_fixed_int", "get_lenenc_int"]}, "repository": {"repo_id": 5184704, "url": "https://github.com/MPjct/JMPjct", "language": "Java", "is_fork": false, "fork_count": 52, "stargazer_count": 81, "size": 16233, "license": "licensed"}}