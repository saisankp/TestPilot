{"test_class": {"identifier": "TestCliGitInit", "superclass": "extends TestBase", "interfaces": "", "fields": [{"original_string": "private File repoDirectory;", "modifier": "private", "type": "File", "declarator": "repoDirectory", "var_name": "repoDirectory"}, {"original_string": "private GitCommit commit;", "modifier": "private", "type": "GitCommit", "declarator": "commit", "var_name": "commit"}, {"original_string": "private GitAdd add;", "modifier": "private", "type": "GitAdd", "declarator": "add", "var_name": "add"}], "file": "javagit/src/test/java/edu/nyu/cs/javagit/client/cli/TestCliGitInit.java"}, "test_case": {"identifier": "testGitInitaliaze", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGitInitaliaze() throws IOException, JavaGitException {\n\n        CliGitInit gitInit = new CliGitInit();\n        GitInitOptions options = new GitInitOptions();\n        GitInitResponse response = gitInit.init(repoDirectory, options);\n        if (!response.isInitialized()) {\n            fail(\"Failed to initialize git repository\");\n        }\n    }", "signature": "void testGitInitaliaze()", "full_signature": "@Test public void testGitInitaliaze()", "class_method_signature": "TestCliGitInit.testGitInitaliaze()", "testcase": true, "constructor": false, "invocations": ["init", "isInitialized", "fail"]}, "focal_class": {"identifier": "CliGitInit", "superclass": "", "interfaces": "implements IGitInit", "fields": [], "methods": [{"identifier": "init", "parameters": "(File repoDirectory, GitInitOptions options)", "modifiers": "public", "return": "GitInitResponse", "signature": "GitInitResponse init(File repoDirectory, GitInitOptions options)", "full_signature": "public GitInitResponse init(File repoDirectory, GitInitOptions options)", "class_method_signature": "CliGitInit.init(File repoDirectory, GitInitOptions options)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(File repoDirectory)", "modifiers": "public", "return": "GitInitResponse", "signature": "GitInitResponse init(File repoDirectory)", "full_signature": "public GitInitResponse init(File repoDirectory)", "class_method_signature": "CliGitInit.init(File repoDirectory)", "testcase": false, "constructor": false}, {"identifier": "buildCommand", "parameters": "(File repoDirectory, GitInitOptions options)", "modifiers": "private", "return": "List<String>", "signature": "List<String> buildCommand(File repoDirectory, GitInitOptions options)", "full_signature": "private List<String> buildCommand(File repoDirectory, GitInitOptions options)", "class_method_signature": "CliGitInit.buildCommand(File repoDirectory, GitInitOptions options)", "testcase": false, "constructor": false}], "file": "javagit/src/main/java/edu/nyu/cs/javagit/client/cli/CliGitInit.java"}, "focal_method": {"identifier": "init", "parameters": "(File repoDirectory, GitInitOptions options)", "modifiers": "public", "return": "GitInitResponse", "body": "public GitInitResponse init(File repoDirectory, GitInitOptions options)\n\tthrows JavaGitException, IOException  {\n\t\tCheckUtilities.checkFileValidity(repoDirectory);\n\t\tGitInitParser parser = new GitInitParser();\n\t\tList<String> command = buildCommand(repoDirectory, options);\n\t\tGitInitResponse response =  (GitInitResponse) ProcessUtilities.runCommand(repoDirectory,\n\t\t\t\tcommand, parser);\n\t\tif (response.containsError()) {\n\t\t\tthrow new JavaGitException(418001, \"Git Init error\");\n\t\t}\n\t\treturn response;\n\t}", "signature": "GitInitResponse init(File repoDirectory, GitInitOptions options)", "full_signature": "public GitInitResponse init(File repoDirectory, GitInitOptions options)", "class_method_signature": "CliGitInit.init(File repoDirectory, GitInitOptions options)", "testcase": false, "constructor": false, "invocations": ["checkFileValidity", "buildCommand", "runCommand", "containsError"]}, "repository": {"repo_id": 8397753, "url": "https://github.com/bit-man/SwissArmyJavaGit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 1549, "license": "licensed"}}