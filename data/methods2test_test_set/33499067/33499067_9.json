{"test_class": {"identifier": "FirmwareBundleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "byte[] rawImageData = intArrayToByteArray(new int[] {\n            0xFF, 0xFF, 0xFF, 0xFF,\n            0xFF, 0xFF, 0xFF, 0xFF,\n            0xFF, 0xFF, 0xFF, 0xFF,\n            0xFF, 0xFF, 0xFF, 0xFF\n    });", "modifier": "", "type": "byte[]", "declarator": "rawImageData = intArrayToByteArray(new int[] {\n            0xFF, 0xFF, 0xFF, 0xFF,\n            0xFF, 0xFF, 0xFF, 0xFF,\n            0xFF, 0xFF, 0xFF, 0xFF,\n            0xFF, 0xFF, 0xFF, 0xFF\n    })", "var_name": "rawImageData"}, {"original_string": "List<FirmwareImage> images = new ArrayList<>();", "modifier": "", "type": "List<FirmwareImage>", "declarator": "images = new ArrayList<>()", "var_name": "images"}, {"original_string": "FirmwareImage imageA;", "modifier": "", "type": "FirmwareImage", "declarator": "imageA", "var_name": "imageA"}, {"original_string": "FirmwareImage imageB;", "modifier": "", "type": "FirmwareImage", "declarator": "imageB", "var_name": "imageB"}, {"original_string": "FirmwareBundle bundle;", "modifier": "", "type": "FirmwareBundle", "declarator": "bundle", "var_name": "bundle"}], "file": "sdk/src/test/java/com/punchthrough/bean/sdk/upload/FirmwareBundleTest.java"}, "test_case": {"identifier": "testFirmwareBundleGetNextImageOneImage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFirmwareBundleGetNextImageOneImage() throws ImageParsingException, OADException {\n        // Create a bundle with only 1 image\n        images.add(imageA);\n        bundle = new FirmwareBundle(images);\n\n        assertThat(bundle.getNextImage()).isEqualTo(imageA);\n        try {\n            bundle.getNextImage();\n            fail(\"Expected OAD Exception\");\n        } catch (OADException e) {\n            // good\n        }\n\n    }", "signature": "void testFirmwareBundleGetNextImageOneImage()", "full_signature": "@Test public void testFirmwareBundleGetNextImageOneImage()", "class_method_signature": "FirmwareBundleTest.testFirmwareBundleGetNextImageOneImage()", "testcase": true, "constructor": false, "invocations": ["add", "isEqualTo", "assertThat", "getNextImage", "getNextImage", "fail"]}, "focal_class": {"identifier": "FirmwareBundle", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<FirmwareImage> images;", "modifier": "private", "type": "List<FirmwareImage>", "declarator": "images", "var_name": "images"}, {"original_string": "private int imageCounter;", "modifier": "private", "type": "int", "declarator": "imageCounter", "var_name": "imageCounter"}], "methods": [{"identifier": "FirmwareBundle", "parameters": "(List<FirmwareImage> images)", "modifiers": "public", "return": "", "signature": " FirmwareBundle(List<FirmwareImage> images)", "full_signature": "public  FirmwareBundle(List<FirmwareImage> images)", "class_method_signature": "FirmwareBundle.FirmwareBundle(List<FirmwareImage> images)", "testcase": false, "constructor": true}, {"identifier": "version", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long version()", "full_signature": "public long version()", "class_method_signature": "FirmwareBundle.version()", "testcase": false, "constructor": false}, {"identifier": "getNextImage", "parameters": "()", "modifiers": "public", "return": "FirmwareImage", "signature": "FirmwareImage getNextImage()", "full_signature": "public FirmwareImage getNextImage()", "class_method_signature": "FirmwareBundle.getNextImage()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "FirmwareBundle.reset()", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/punchthrough/bean/sdk/upload/FirmwareBundle.java"}, "focal_method": {"identifier": "getNextImage", "parameters": "()", "modifiers": "public", "return": "FirmwareImage", "body": "public FirmwareImage getNextImage() throws OADException {\n        if (imageCounter >= images.size() ) {\n            throw new OADException(\"Firmware bundle is exhausted, all images rejected\");\n        }\n\n        FirmwareImage i = images.get(imageCounter);\n        imageCounter++;\n        return i;\n    }", "signature": "FirmwareImage getNextImage()", "full_signature": "public FirmwareImage getNextImage()", "class_method_signature": "FirmwareBundle.getNextImage()", "testcase": false, "constructor": false, "invocations": ["size", "get"]}, "repository": {"repo_id": 33499067, "url": "https://github.com/PunchThrough/bean-sdk-android", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 55, "size": 2818, "license": "licensed"}}