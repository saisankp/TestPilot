{"test_class": {"identifier": "JoinTest", "superclass": "", "interfaces": "", "fields": [], "file": "avro/src/test/java/com/quantiply/avro/JoinTest.java"}, "test_case": {"identifier": "testJoin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testJoin() throws IOException {\n        GenericRecord in1 = getIn1();\n        GenericRecord in2 = getIn2();\n\n        GenericRecord joined = new Join(getJoinedSchema())\n                .merge(in1)\n                .merge(in2)\n                .getBuilder()\n                .set(\"charlie\", \"blah blah\")\n                .build();\n\n        assertEquals(\"yo yo\", joined.get(\"foo\"));\n        assertEquals(5, joined.get(\"bar\"));\n        assertEquals(\"blah blah\", joined.get(\"charlie\"));\n    }", "signature": "void testJoin()", "full_signature": "@Test public void testJoin()", "class_method_signature": "JoinTest.testJoin()", "testcase": true, "constructor": false, "invocations": ["getIn1", "getIn2", "build", "set", "getBuilder", "merge", "merge", "getJoinedSchema", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "Join", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GenericRecordBuilder builder;", "modifier": "private", "type": "GenericRecordBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private Schema schema;", "modifier": "private", "type": "Schema", "declarator": "schema", "var_name": "schema"}], "methods": [{"identifier": "Join", "parameters": "(Schema schema)", "modifiers": "public", "return": "", "signature": " Join(Schema schema)", "full_signature": "public  Join(Schema schema)", "class_method_signature": "Join.Join(Schema schema)", "testcase": false, "constructor": true}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "public", "return": "GenericRecordBuilder", "signature": "GenericRecordBuilder getBuilder()", "full_signature": "public GenericRecordBuilder getBuilder()", "class_method_signature": "Join.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(GenericRecord record)", "modifiers": "public", "return": "Join", "signature": "Join merge(GenericRecord record)", "full_signature": "public Join merge(GenericRecord record)", "class_method_signature": "Join.merge(GenericRecord record)", "testcase": false, "constructor": false}], "file": "avro/src/main/java/com/quantiply/avro/Join.java"}, "focal_method": {"identifier": "Join", "parameters": "(Schema schema)", "modifiers": "public", "return": "", "body": "public Join(Schema schema) {\n        this.schema = schema;\n        this.builder = new GenericRecordBuilder(schema);\n    }", "signature": " Join(Schema schema)", "full_signature": "public  Join(Schema schema)", "class_method_signature": "Join.Join(Schema schema)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 23237318, "url": "https://github.com/quantiply/rico", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 5128, "license": "licensed"}}