{"test_class": {"identifier": "VaultConfigSourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String VAULT_SECRETS_PATH1 = \"secret/application/tenant1\";", "modifier": "private static final", "type": "String", "declarator": "VAULT_SECRETS_PATH1 = \"secret/application/tenant1\"", "var_name": "VAULT_SECRETS_PATH1"}, {"original_string": "private static final String VAULT_SECRETS_PATH2 = \"secret/application/tenant2\";", "modifier": "private static final", "type": "String", "declarator": "VAULT_SECRETS_PATH2 = \"secret/application/tenant2\"", "var_name": "VAULT_SECRETS_PATH2"}, {"original_string": "private static final String VAULT_SECRETS_PATH3 = \"secret/application2/tenant3\";", "modifier": "private static final", "type": "String", "declarator": "VAULT_SECRETS_PATH3 = \"secret/application2/tenant3\"", "var_name": "VAULT_SECRETS_PATH3"}, {"original_string": "@RegisterExtension\n  static final VaultContainerExtension vaultContainerExtension = new VaultContainerExtension();", "modifier": "@RegisterExtension\n  static final", "type": "VaultContainerExtension", "declarator": "vaultContainerExtension = new VaultContainerExtension()", "var_name": "vaultContainerExtension"}], "file": "config-vault/src/test/java/io/scalecube/config/vault/VaultConfigSourceTest.java"}, "test_case": {"identifier": "testInvalidAddress", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testInvalidAddress() {\n    VaultConfigSource vaultConfigSource =\n        VaultConfigSource.builder()\n            .config(c -> c.token(vaultContainerExtension.vaultInstance().rootToken()))\n            .config(c -> c.address(\"http://invalid.host.local:8200\"))\n            .addSecretsPath(VAULT_SECRETS_PATH1)\n            .build();\n\n    assertThrows(ConfigSourceNotAvailableException.class, vaultConfigSource::loadConfig);\n  }", "signature": "void testInvalidAddress()", "full_signature": "@Test void testInvalidAddress()", "class_method_signature": "VaultConfigSourceTest.testInvalidAddress()", "testcase": true, "constructor": false, "invocations": ["build", "addSecretsPath", "config", "config", "builder", "token", "rootToken", "vaultInstance", "address", "assertThrows"]}, "focal_class": {"identifier": "VaultConfigSource", "superclass": "", "interfaces": "implements ConfigSource", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(VaultConfigSource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(VaultConfigSource.class)", "var_name": "LOGGER"}, {"original_string": "private static final EnvironmentLoader ENVIRONMENT_LOADER = new EnvironmentLoader();", "modifier": "private static final", "type": "EnvironmentLoader", "declarator": "ENVIRONMENT_LOADER = new EnvironmentLoader()", "var_name": "ENVIRONMENT_LOADER"}, {"original_string": "private static final String PATHS_SEPARATOR = \":\";", "modifier": "private static final", "type": "String", "declarator": "PATHS_SEPARATOR = \":\"", "var_name": "PATHS_SEPARATOR"}, {"original_string": "private final VaultInvoker vault;", "modifier": "private final", "type": "VaultInvoker", "declarator": "vault", "var_name": "vault"}, {"original_string": "private final Collection<String> secretsPaths;", "modifier": "private final", "type": "Collection<String>", "declarator": "secretsPaths", "var_name": "secretsPaths"}], "methods": [{"identifier": "VaultConfigSource", "parameters": "(VaultInvoker vault, Collection<String> secretsPaths)", "modifiers": "private", "return": "", "signature": " VaultConfigSource(VaultInvoker vault, Collection<String> secretsPaths)", "full_signature": "private  VaultConfigSource(VaultInvoker vault, Collection<String> secretsPaths)", "class_method_signature": "VaultConfigSource.VaultConfigSource(VaultInvoker vault, Collection<String> secretsPaths)", "testcase": false, "constructor": true}, {"identifier": "loadConfig", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, ConfigProperty>", "signature": "Map<String, ConfigProperty> loadConfig()", "full_signature": "@Override public Map<String, ConfigProperty> loadConfig()", "class_method_signature": "VaultConfigSource.loadConfig()", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "VaultConfigSource.builder()", "testcase": false, "constructor": false}], "file": "config-vault/src/main/java/io/scalecube/config/vault/VaultConfigSource.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder builder() {\n    return new Builder();\n  }", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "VaultConfigSource.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 100394760, "url": "https://github.com/scalecube/scalecube-config", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 14, "size": 777, "license": "licensed"}}