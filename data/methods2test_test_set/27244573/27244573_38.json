{"test_class": {"identifier": "XviImporterTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/hwyl/sexytopo/control/io/thirdparty/xvi/XviImporterTest.java"}, "test_case": {"identifier": "testGetSimpleBlockContents", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSimpleBlockContents() throws Exception {\n        String simpleText = \"set Command {foo}\";\n        String contents = XviImporter.getBlockContents(simpleText, \"set Command\");\n        Assert.assertEquals(\"foo\", contents);\n    }", "signature": "void testGetSimpleBlockContents()", "full_signature": "@Test public void testGetSimpleBlockContents()", "class_method_signature": "XviImporterTest.testGetSimpleBlockContents()", "testcase": true, "constructor": false, "invocations": ["getBlockContents", "assertEquals"]}, "focal_class": {"identifier": "XviImporter", "superclass": "extends Importer", "interfaces": "", "fields": [{"original_string": "private static XviImporter instance = new XviImporter();", "modifier": "private static", "type": "XviImporter", "declarator": "instance = new XviImporter()", "var_name": "instance"}], "methods": [{"identifier": "toSurvey", "parameters": "(File file)", "modifiers": "public", "return": "Survey", "signature": "Survey toSurvey(File file)", "full_signature": "public Survey toSurvey(File file)", "class_method_signature": "XviImporter.toSurvey(File file)", "testcase": false, "constructor": false}, {"identifier": "getSketch", "parameters": "(File file)", "modifiers": "public static", "return": "Sketch", "signature": "Sketch getSketch(File file)", "full_signature": "public static Sketch getSketch(File file)", "class_method_signature": "XviImporter.getSketch(File file)", "testcase": false, "constructor": false}, {"identifier": "canHandleFile", "parameters": "(File file)", "modifiers": "public", "return": "boolean", "signature": "boolean canHandleFile(File file)", "full_signature": "public boolean canHandleFile(File file)", "class_method_signature": "XviImporter.canHandleFile(File file)", "testcase": false, "constructor": false}, {"identifier": "parseGrid", "parameters": "(String contents)", "modifiers": "public", "return": "Grid", "signature": "Grid parseGrid(String contents)", "full_signature": "public Grid parseGrid(String contents)", "class_method_signature": "XviImporter.parseGrid(String contents)", "testcase": false, "constructor": false}, {"identifier": "parseSketchlineBlock", "parameters": "(double scale, String contents)", "modifiers": "public static", "return": "Set<PathDetail>", "signature": "Set<PathDetail> parseSketchlineBlock(double scale, String contents)", "full_signature": "public static Set<PathDetail> parseSketchlineBlock(double scale, String contents)", "class_method_signature": "XviImporter.parseSketchlineBlock(double scale, String contents)", "testcase": false, "constructor": false}, {"identifier": "parseBlockEntries", "parameters": "(String content)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> parseBlockEntries(String content)", "full_signature": "public static List<String> parseBlockEntries(String content)", "class_method_signature": "XviImporter.parseBlockEntries(String content)", "testcase": false, "constructor": false}, {"identifier": "parseSketchEntry", "parameters": "(double scale, String entry)", "modifiers": "public static", "return": "PathDetail", "signature": "PathDetail parseSketchEntry(double scale, String entry)", "full_signature": "public static PathDetail parseSketchEntry(double scale, String entry)", "class_method_signature": "XviImporter.parseSketchEntry(double scale, String entry)", "testcase": false, "constructor": false}, {"identifier": "getBlockContents", "parameters": "(String text, String command)", "modifiers": "public static", "return": "String", "signature": "String getBlockContents(String text, String command)", "full_signature": "public static String getBlockContents(String text, String command)", "class_method_signature": "XviImporter.getBlockContents(String text, String command)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/hwyl/sexytopo/control/io/thirdparty/xvi/XviImporter.java"}, "focal_method": {"identifier": "getBlockContents", "parameters": "(String text, String command)", "modifiers": "public static", "return": "String", "body": "public static String getBlockContents(String text, String command) throws Exception {\n\n        outer:\n        for (int i = 0; i < text.length(); i++) {\n\n            // keep trying to match the command string\n            for (int j = 0; j < command.length(); j++) {\n                char text_current = text.charAt(i + j);\n                char command_current = command.charAt(j);\n                if (text_current != command_current) {\n                    continue outer;\n                }\n            }\n\n            i += command.length();\n            // from here we're at the end of a matched command string\n\n            // eat up any whitespace\n            while (Character.isWhitespace(text.charAt(i))) {\n                i++;\n            }\n\n            // hopefully we've found an opening { block now\n            if (text.charAt(i) == '{') {\n                i++;\n            } else {\n                continue outer; // otherwise try to match again...\n            }\n\n            int openBraces = 1;\n            int startOfContent = i;\n\n            for(; i < text.length(); i++) {\n                if (text.charAt(i) == '{') {\n                    openBraces++;\n                } else if (text.charAt(i) == '}') {\n                    openBraces--;\n                }\n\n                if (openBraces == 0) {\n                    int endOfContent = i;\n                    String content = text.substring(startOfContent, endOfContent);\n                    return content;\n                }\n\n            }\n\n            throw new Exception(\"Malformed text: could not match braces\");\n\n        }\n\n        throw new Exception(\"Could not match command in text\");\n    }", "signature": "String getBlockContents(String text, String command)", "full_signature": "public static String getBlockContents(String text, String command)", "class_method_signature": "XviImporter.getBlockContents(String text, String command)", "testcase": false, "constructor": false, "invocations": ["length", "length", "charAt", "charAt", "length", "isWhitespace", "charAt", "charAt", "length", "charAt", "charAt", "substring"]}, "repository": {"repo_id": 27244573, "url": "https://github.com/richsmith/sexytopo", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 83635, "license": "licensed"}}