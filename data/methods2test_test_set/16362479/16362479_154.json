{"test_class": {"identifier": "ServerConfigurationPayloadTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendaylight/md-sal/sal-akka-raft/src/test/java/org/opendaylight/controller/cluster/raft/persisted/ServerConfigurationPayloadTest.java"}, "test_case": {"identifier": "testSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSize() {\n        ServerConfigurationPayload expected = new ServerConfigurationPayload(Arrays.asList(new ServerInfo(\"1\", true)));\n        assertTrue(expected.size() > 0);\n    }", "signature": "void testSize()", "full_signature": "@Test public void testSize()", "class_method_signature": "ServerConfigurationPayloadTest.testSize()", "testcase": true, "constructor": false, "invocations": ["asList", "assertTrue", "size"]}, "focal_class": {"identifier": "ServerConfigurationPayload", "superclass": "extends Payload", "interfaces": "implements PersistentPayload, Serializable", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ServerConfigurationPayload.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ServerConfigurationPayload.class)", "var_name": "LOG"}, {"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "@SuppressFBWarnings(value = \"SE_BAD_FIELD\", justification = \"This field is not Serializable but this class \"\n            + \"implements writeReplace to delegate serialization to a Proxy class and thus instances of this class \"\n            + \"aren't serialized. FindBugs does not recognize this.\")\n    private final List<ServerInfo> serverConfig;", "modifier": "@SuppressFBWarnings(value = \"SE_BAD_FIELD\", justification = \"This field is not Serializable but this class \"\n            + \"implements writeReplace to delegate serialization to a Proxy class and thus instances of this class \"\n            + \"aren't serialized. FindBugs does not recognize this.\")\n    private final", "type": "List<ServerInfo>", "declarator": "serverConfig", "var_name": "serverConfig"}, {"original_string": "private int serializedSize = -1;", "modifier": "private", "type": "int", "declarator": "serializedSize = -1", "var_name": "serializedSize"}], "methods": [{"identifier": "ServerConfigurationPayload", "parameters": "(final @NonNull List<ServerInfo> serverConfig)", "modifiers": "public", "return": "", "signature": " ServerConfigurationPayload(final @NonNull List<ServerInfo> serverConfig)", "full_signature": "public  ServerConfigurationPayload(final @NonNull List<ServerInfo> serverConfig)", "class_method_signature": "ServerConfigurationPayload.ServerConfigurationPayload(final @NonNull List<ServerInfo> serverConfig)", "testcase": false, "constructor": true}, {"identifier": "getServerConfig", "parameters": "()", "modifiers": "public @NonNull", "return": "List<ServerInfo>", "signature": "List<ServerInfo> getServerConfig()", "full_signature": "public @NonNull List<ServerInfo> getServerConfig()", "class_method_signature": "ServerConfigurationPayload.getServerConfig()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "ServerConfigurationPayload.size()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ServerConfigurationPayload.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "ServerConfigurationPayload.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ServerConfigurationPayload.toString()", "testcase": false, "constructor": false}, {"identifier": "writeReplace", "parameters": "()", "modifiers": "private", "return": "Object", "signature": "Object writeReplace()", "full_signature": "private Object writeReplace()", "class_method_signature": "ServerConfigurationPayload.writeReplace()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/persisted/ServerConfigurationPayload.java"}, "focal_method": {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int size() {\n        if (serializedSize < 0) {\n            try (ByteArrayOutputStream bos = new ByteArrayOutputStream()) {\n                try (ObjectOutputStream out = new ObjectOutputStream(bos)) {\n                    out.writeObject(writeReplace());\n                }\n\n                serializedSize = bos.toByteArray().length;\n            } catch (IOException e) {\n                serializedSize = 0;\n                LOG.error(\"Error serializing\", e);\n            }\n        }\n\n        return serializedSize;\n    }", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "ServerConfigurationPayload.size()", "testcase": false, "constructor": false, "invocations": ["writeObject", "writeReplace", "toByteArray", "error"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}