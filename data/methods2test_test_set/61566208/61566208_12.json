{"test_class": {"identifier": "HmsGenericUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/hms-util/src/test/java/com/vmware/vrack/hms/common/util/HmsGenericUtilTest.java"}, "test_case": {"identifier": "testIsHostReachable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsHostReachable()\n    {\n        /*\n         * Seeing issues with bash -c not working in SBB environment. But code is working fine when run in dev env.\n         */\n        PowerMockito.mockStatic( ProcessUtil.class );\n        // Below has to be mocked as the command doesn't execute on buildweb\n        Mockito.when( ProcessUtil.executeCommand( Mockito.anyListOf( String.class ) ) ).thenReturn( 0 );\n        assertTrue( HmsGenericUtil.isHostReachable( \"127.0.0.1\" ) );\n    }", "signature": "void testIsHostReachable()", "full_signature": "@Test public void testIsHostReachable()", "class_method_signature": "HmsGenericUtilTest.testIsHostReachable()", "testcase": true, "constructor": false, "invocations": ["mockStatic", "thenReturn", "when", "executeCommand", "anyListOf", "assertTrue", "isHostReachable"]}, "focal_class": {"identifier": "HmsGenericUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MASK_DATA = \"****\";", "modifier": "private static final", "type": "String", "declarator": "MASK_DATA = \"****\"", "var_name": "MASK_DATA"}, {"original_string": "private static Logger logger = LoggerFactory.getLogger( HmsGenericUtil.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( HmsGenericUtil.class )", "var_name": "logger"}], "methods": [{"identifier": "maskPassword", "parameters": "( Object obj )", "modifiers": "public static", "return": "Object", "signature": "Object maskPassword( Object obj )", "full_signature": "public static Object maskPassword( Object obj )", "class_method_signature": "HmsGenericUtil.maskPassword( Object obj )", "testcase": false, "constructor": false}, {"identifier": "getBuildVersion", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getBuildVersion()", "full_signature": "public static String getBuildVersion()", "class_method_signature": "HmsGenericUtil.getBuildVersion()", "testcase": false, "constructor": false}, {"identifier": "getBaseResponse", "parameters": "( final Status status, final String errorMessage )", "modifiers": "public static", "return": "BaseResponse", "signature": "BaseResponse getBaseResponse( final Status status, final String errorMessage )", "full_signature": "public static BaseResponse getBaseResponse( final Status status, final String errorMessage )", "class_method_signature": "HmsGenericUtil.getBaseResponse( final Status status, final String errorMessage )", "testcase": false, "constructor": false}, {"identifier": "getBaseResponse", "parameters": "( final int statusCode, final String statusMessage,\n                                                final String errorMessage )", "modifiers": "public static", "return": "BaseResponse", "signature": "BaseResponse getBaseResponse( final int statusCode, final String statusMessage,\n                                                final String errorMessage )", "full_signature": "public static BaseResponse getBaseResponse( final int statusCode, final String statusMessage,\n                                                final String errorMessage )", "class_method_signature": "HmsGenericUtil.getBaseResponse( final int statusCode, final String statusMessage,\n                                                final String errorMessage )", "testcase": false, "constructor": false}, {"identifier": "sleepThread", "parameters": "( boolean isTaskCompleted, long sleepInterval )", "modifiers": "public static", "return": "void", "signature": "void sleepThread( boolean isTaskCompleted, long sleepInterval )", "full_signature": "public static void sleepThread( boolean isTaskCompleted, long sleepInterval )", "class_method_signature": "HmsGenericUtil.sleepThread( boolean isTaskCompleted, long sleepInterval )", "testcase": false, "constructor": false}, {"identifier": "parseJson", "parameters": "( String input )", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> parseJson( String input )", "full_signature": "public static Map<String, Object> parseJson( String input )", "class_method_signature": "HmsGenericUtil.parseJson( String input )", "testcase": false, "constructor": false}, {"identifier": "parseStringAsValueType", "parameters": "( final String content, Class<T> valueType )", "modifiers": "public static", "return": "T", "signature": "T parseStringAsValueType( final String content, Class<T> valueType )", "full_signature": "public static T parseStringAsValueType( final String content, Class<T> valueType )", "class_method_signature": "HmsGenericUtil.parseStringAsValueType( final String content, Class<T> valueType )", "testcase": false, "constructor": false}, {"identifier": "parseStringAsTypeReference", "parameters": "( final String content, TypeReference<T> typeRef )", "modifiers": "public static", "return": "T", "signature": "T parseStringAsTypeReference( final String content, TypeReference<T> typeRef )", "full_signature": "public static T parseStringAsTypeReference( final String content, TypeReference<T> typeRef )", "class_method_signature": "HmsGenericUtil.parseStringAsTypeReference( final String content, TypeReference<T> typeRef )", "testcase": false, "constructor": false}, {"identifier": "getPayload", "parameters": "( T object )", "modifiers": "public static", "return": "String", "signature": "String getPayload( T object )", "full_signature": "public static String getPayload( T object )", "class_method_signature": "HmsGenericUtil.getPayload( T object )", "testcase": false, "constructor": false}, {"identifier": "isHostReachable", "parameters": "( String ipAddress )", "modifiers": "public static", "return": "boolean", "signature": "boolean isHostReachable( String ipAddress )", "full_signature": "public static boolean isHostReachable( String ipAddress )", "class_method_signature": "HmsGenericUtil.isHostReachable( String ipAddress )", "testcase": false, "constructor": false}, {"identifier": "deleteLatestInventoryBackup", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void deleteLatestInventoryBackup()", "full_signature": "public static void deleteLatestInventoryBackup()", "class_method_signature": "HmsGenericUtil.deleteLatestInventoryBackup()", "testcase": false, "constructor": false}], "file": "modules/hms-util/src/main/java/com/vmware/vrack/hms/common/util/HmsGenericUtil.java"}, "focal_method": {"identifier": "isHostReachable", "parameters": "( String ipAddress )", "modifiers": "public static", "return": "boolean", "body": "public static boolean isHostReachable( String ipAddress )\n    {\n        try\n        {\n            final String pingCommandTemplate = Constants.HMS_HOST_REACHABILITY_VERIFICATION_COMMAND_TEMPLATE;\n            String command = String.format( pingCommandTemplate, ipAddress );\n            List<String> commands = new ArrayList<String>();\n            commands.add( \"bash\" );\n            commands.add( \"-c\" );\n            commands.add( command );\n            int status = ProcessUtil.executeCommand( commands );\n            logger.debug( \"Ip '{}' reachability status: {}\", ipAddress, status );\n            if ( status == 0 )\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        catch ( Exception e )\n        {\n            String message = String.format( \"Exception while trying to reach ip: '%s'.\", ipAddress );\n            logger.error( message, e );\n            return false;\n        }\n    }", "signature": "boolean isHostReachable( String ipAddress )", "full_signature": "public static boolean isHostReachable( String ipAddress )", "class_method_signature": "HmsGenericUtil.isHostReachable( String ipAddress )", "testcase": false, "constructor": false, "invocations": ["format", "add", "add", "add", "executeCommand", "debug", "format", "error"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}