{"test_class": {"identifier": "IntentManagerImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/org/apache/cxf/dosgi/common/intent/impl/IntentManagerImplTest.java"}, "test_case": {"identifier": "testIntentsFromFeatureAnn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIntentsFromFeatureAnn() {\n        IntentManagerImpl im = new IntentManagerImpl();\n        List<Object> intents = im.getIntentsFromService(new DummyServiceWithLogging());\n        Assert.assertEquals(1, intents.size());\n        Object feature = intents.iterator().next();\n        Assert.assertEquals(GZIPFeature.class, feature.getClass());\n    }", "signature": "void testIntentsFromFeatureAnn()", "full_signature": "@Test public void testIntentsFromFeatureAnn()", "class_method_signature": "IntentManagerImplTest.testIntentsFromFeatureAnn()", "testcase": true, "constructor": false, "invocations": ["getIntentsFromService", "assertEquals", "size", "next", "iterator", "assertEquals", "getClass"]}, "focal_class": {"identifier": "IntentManagerImpl", "superclass": "", "interfaces": "implements IntentManager", "fields": [{"original_string": "static final Logger LOG = LoggerFactory.getLogger(IntentManagerImpl.class);", "modifier": "static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(IntentManagerImpl.class)", "var_name": "LOG"}, {"original_string": "private static final int DEFAULT_INTENT_TIMEOUT = 30000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_INTENT_TIMEOUT = 30000", "var_name": "DEFAULT_INTENT_TIMEOUT"}, {"original_string": "private final Map<String, Object> intentMap = new HashMap<>();", "modifier": "private final", "type": "Map<String, Object>", "declarator": "intentMap = new HashMap<>()", "var_name": "intentMap"}, {"original_string": "private final long maxIntentWaitTime = DEFAULT_INTENT_TIMEOUT;", "modifier": "private final", "type": "long", "declarator": "maxIntentWaitTime = DEFAULT_INTENT_TIMEOUT", "var_name": "maxIntentWaitTime"}, {"original_string": "private ServiceTracker<Object, Object> tracker;", "modifier": "private", "type": "ServiceTracker<Object, Object>", "declarator": "tracker", "var_name": "tracker"}], "methods": [{"identifier": "activate", "parameters": "(BundleContext context)", "modifiers": "@Activate public", "return": "void", "signature": "void activate(BundleContext context)", "full_signature": "@Activate public void activate(BundleContext context)", "class_method_signature": "IntentManagerImpl.activate(BundleContext context)", "testcase": false, "constructor": false}, {"identifier": "deactivate", "parameters": "()", "modifiers": "@Deactivate public", "return": "void", "signature": "void deactivate()", "full_signature": "@Deactivate public void deactivate()", "class_method_signature": "IntentManagerImpl.deactivate()", "testcase": false, "constructor": false}, {"identifier": "addIntent", "parameters": "(Object intent, String intentName)", "modifiers": "public synchronized", "return": "void", "signature": "void addIntent(Object intent, String intentName)", "full_signature": "public synchronized void addIntent(Object intent, String intentName)", "class_method_signature": "IntentManagerImpl.addIntent(Object intent, String intentName)", "testcase": false, "constructor": false}, {"identifier": "removeIntent", "parameters": "(Object intent, String intentName)", "modifiers": "public synchronized", "return": "void", "signature": "void removeIntent(Object intent, String intentName)", "full_signature": "public synchronized void removeIntent(Object intent, String intentName)", "class_method_signature": "IntentManagerImpl.removeIntent(Object intent, String intentName)", "testcase": false, "constructor": false}, {"identifier": "getRequiredIntents", "parameters": "(Set<String> requiredIntents)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public synchronized", "return": "List<Object>", "signature": "List<Object> getRequiredIntents(Set<String> requiredIntents)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public synchronized List<Object> getRequiredIntents(Set<String> requiredIntents)", "class_method_signature": "IntentManagerImpl.getRequiredIntents(Set<String> requiredIntents)", "testcase": false, "constructor": false}, {"identifier": "getIntent", "parameters": "(Class<? extends T> type, List<Object> intents)", "modifiers": "@Override public", "return": "T", "signature": "T getIntent(Class<? extends T> type, List<Object> intents)", "full_signature": "@Override public T getIntent(Class<? extends T> type, List<Object> intents)", "class_method_signature": "IntentManagerImpl.getIntent(Class<? extends T> type, List<Object> intents)", "testcase": false, "constructor": false}, {"identifier": "getIntents", "parameters": "(Class<? extends T> type, List<Object> intents)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> getIntents(Class<? extends T> type, List<Object> intents)", "full_signature": "@Override public List<T> getIntents(Class<? extends T> type, List<Object> intents)", "class_method_signature": "IntentManagerImpl.getIntents(Class<? extends T> type, List<Object> intents)", "testcase": false, "constructor": false}, {"identifier": "assertAllIntentsSupported", "parameters": "(Set<String> requiredIntents)", "modifiers": "public synchronized", "return": "String[]", "signature": "String[] assertAllIntentsSupported(Set<String> requiredIntents)", "full_signature": "public synchronized String[] assertAllIntentsSupported(Set<String> requiredIntents)", "class_method_signature": "IntentManagerImpl.assertAllIntentsSupported(Set<String> requiredIntents)", "testcase": false, "constructor": false}, {"identifier": "getMissingIntents", "parameters": "(Collection<String> requiredIntents)", "modifiers": "private synchronized", "return": "Set<String>", "signature": "Set<String> getMissingIntents(Collection<String> requiredIntents)", "full_signature": "private synchronized Set<String> getMissingIntents(Collection<String> requiredIntents)", "class_method_signature": "IntentManagerImpl.getMissingIntents(Collection<String> requiredIntents)", "testcase": false, "constructor": false}, {"identifier": "getExported", "parameters": "(Map<String, Object> sd)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getExported(Map<String, Object> sd)", "full_signature": "@Override public Set<String> getExported(Map<String, Object> sd)", "class_method_signature": "IntentManagerImpl.getExported(Map<String, Object> sd)", "testcase": false, "constructor": false}, {"identifier": "getIntentsFromService", "parameters": "(Object serviceBean)", "modifiers": "@Override public", "return": "List<Object>", "signature": "List<Object> getIntentsFromService(Object serviceBean)", "full_signature": "@Override public List<Object> getIntentsFromService(Object serviceBean)", "class_method_signature": "IntentManagerImpl.getIntentsFromService(Object serviceBean)", "testcase": false, "constructor": false}, {"identifier": "getImported", "parameters": "(Map<String, Object> sd)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getImported(Map<String, Object> sd)", "full_signature": "@Override public Set<String> getImported(Map<String, Object> sd)", "class_method_signature": "IntentManagerImpl.getImported(Map<String, Object> sd)", "testcase": false, "constructor": false}, {"identifier": "parseIntents", "parameters": "(Collection<String> intents)", "modifiers": "private static", "return": "Collection<String>", "signature": "Collection<String> parseIntents(Collection<String> intents)", "full_signature": "private static Collection<String> parseIntents(Collection<String> intents)", "class_method_signature": "IntentManagerImpl.parseIntents(Collection<String> intents)", "testcase": false, "constructor": false}], "file": "common/src/main/java/org/apache/cxf/dosgi/common/intent/impl/IntentManagerImpl.java"}, "focal_method": {"identifier": "getIntentsFromService", "parameters": "(Object serviceBean)", "modifiers": "@Override public", "return": "List<Object>", "body": "@Override\n    public List<Object> getIntentsFromService(Object serviceBean) {\n        List<Object> intents = new ArrayList<>();\n        if (serviceBean instanceof IntentsProvider) {\n            intents.addAll(((IntentsProvider)serviceBean).getIntents());\n        }\n        Features features = serviceBean.getClass().getAnnotation(Features.class);\n        if (features != null && features.classes() != null) {\n            for (Class<?> clazz : features.classes()) {\n                try {\n                    intents.add(clazz.newInstance());\n                } catch (Exception e) {\n                    throw new RuntimeException(\"Could not instantiate feature from class \" + clazz.getName(), e);\n                }\n            }\n        }\n        return intents;\n    }", "signature": "List<Object> getIntentsFromService(Object serviceBean)", "full_signature": "@Override public List<Object> getIntentsFromService(Object serviceBean)", "class_method_signature": "IntentManagerImpl.getIntentsFromService(Object serviceBean)", "testcase": false, "constructor": false, "invocations": ["addAll", "getIntents", "getAnnotation", "getClass", "classes", "classes", "add", "newInstance", "getName"]}, "repository": {"repo_id": 17537835, "url": "https://github.com/apache/cxf-dosgi", "language": "Java", "is_fork": false, "fork_count": 27, "stargazer_count": 26, "size": 3444, "license": "licensed"}}