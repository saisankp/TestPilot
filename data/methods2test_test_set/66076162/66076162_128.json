{"test_class": {"identifier": "CheckIfPermissionGrantedInteractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CheckIfPermissionGrantedInteractor checkIfPermissionGrantedInteractor;", "modifier": "private", "type": "CheckIfPermissionGrantedInteractor", "declarator": "checkIfPermissionGrantedInteractor", "var_name": "checkIfPermissionGrantedInteractor"}, {"original_string": "@Mock private ThreadExecutor mockThreadExecutor;", "modifier": "@Mock private", "type": "ThreadExecutor", "declarator": "mockThreadExecutor", "var_name": "mockThreadExecutor"}, {"original_string": "@Mock private PostExecutionThread mockPostExecutionThread;", "modifier": "@Mock private", "type": "PostExecutionThread", "declarator": "mockPostExecutionThread", "var_name": "mockPostExecutionThread"}, {"original_string": "@Mock private PermissionActionProvider mockPermissionActionProvider;", "modifier": "@Mock private", "type": "PermissionActionProvider", "declarator": "mockPermissionActionProvider", "var_name": "mockPermissionActionProvider"}], "file": "domain/src/test/java/com/remotecraft/app/domain/interactor/CheckIfPermissionGrantedInteractorTest.java"}, "test_case": {"identifier": "shouldReturnErrorWhenNullPermissionGiven", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnErrorWhenNullPermissionGiven() throws Exception {\n    Single<Boolean> reactiveStream = checkIfPermissionGrantedInteractor.buildReactiveStream(null);\n\n    assertThat(reactiveStream).isNotNull();\n    TestObserver<Boolean> testObserver = reactiveStream.test();\n    testObserver.assertError(IllegalArgumentException.class);\n    testObserver.assertErrorMessage(\"Invalid Permission\");\n    testObserver.assertNotComplete();\n  }", "signature": "void shouldReturnErrorWhenNullPermissionGiven()", "full_signature": "@Test public void shouldReturnErrorWhenNullPermissionGiven()", "class_method_signature": "CheckIfPermissionGrantedInteractorTest.shouldReturnErrorWhenNullPermissionGiven()", "testcase": true, "constructor": false, "invocations": ["buildReactiveStream", "isNotNull", "assertThat", "test", "assertError", "assertErrorMessage", "assertNotComplete"]}, "focal_class": {"identifier": "CheckIfPermissionGrantedInteractor", "superclass": "extends SingleInteractor<Boolean, CheckIfPermissionGrantedInteractor.Params>", "interfaces": "", "fields": [{"original_string": "private final PermissionActionProvider permissionActionProvider;", "modifier": "private final", "type": "PermissionActionProvider", "declarator": "permissionActionProvider", "var_name": "permissionActionProvider"}], "methods": [{"identifier": "CheckIfPermissionGrantedInteractor", "parameters": "(PermissionActionProvider permissionActionProvider,\n      ThreadExecutor threadExecutor, PostExecutionThread postExecutionThread)", "modifiers": "public", "return": "", "signature": " CheckIfPermissionGrantedInteractor(PermissionActionProvider permissionActionProvider,\n      ThreadExecutor threadExecutor, PostExecutionThread postExecutionThread)", "full_signature": "public  CheckIfPermissionGrantedInteractor(PermissionActionProvider permissionActionProvider,\n      ThreadExecutor threadExecutor, PostExecutionThread postExecutionThread)", "class_method_signature": "CheckIfPermissionGrantedInteractor.CheckIfPermissionGrantedInteractor(PermissionActionProvider permissionActionProvider,\n      ThreadExecutor threadExecutor, PostExecutionThread postExecutionThread)", "testcase": false, "constructor": true}, {"identifier": "buildReactiveStream", "parameters": "(Params params)", "modifiers": "@Override protected", "return": "Single<Boolean>", "signature": "Single<Boolean> buildReactiveStream(Params params)", "full_signature": "@Override protected Single<Boolean> buildReactiveStream(Params params)", "class_method_signature": "CheckIfPermissionGrantedInteractor.buildReactiveStream(Params params)", "testcase": false, "constructor": false}], "file": "domain/src/main/java/com/remotecraft/app/domain/interactor/CheckIfPermissionGrantedInteractor.java"}, "focal_method": {"identifier": "buildReactiveStream", "parameters": "(Params params)", "modifiers": "@Override protected", "return": "Single<Boolean>", "body": "@Override\n  protected Single<Boolean> buildReactiveStream(Params params) {\n    if (params == null) {\n      return Single.error(new IllegalArgumentException(\"Invalid Permission\"));\n    }\n\n    return permissionActionProvider.isGranted(params.permission);\n  }", "signature": "Single<Boolean> buildReactiveStream(Params params)", "full_signature": "@Override protected Single<Boolean> buildReactiveStream(Params params)", "class_method_signature": "CheckIfPermissionGrantedInteractor.buildReactiveStream(Params params)", "testcase": false, "constructor": false, "invocations": ["error", "isGranted"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}