{"test_class": {"identifier": "ShipLauncherTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/exec/ShipLauncherTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test @PrepareForTest({ ShipLauncher.class, System.class }) public", "return": "void", "body": "@Test\n  @PrepareForTest({ ShipLauncher.class, System.class })\n  public void testExecute() {\n    final ShipLauncher shipLauncher = spy(new ShipLauncher(DummyMessagePrinter.getInstance()));\n    doNothing().when(shipLauncher).exit(anyInt());\n    final Command command = mock(Command.class);\n    shipLauncher.execute(command);\n    verify(shipLauncher).exit(anyInt());\n  }", "signature": "void testExecute()", "full_signature": "@Test @PrepareForTest({ ShipLauncher.class, System.class }) public void testExecute()", "class_method_signature": "ShipLauncherTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["spy", "getInstance", "exit", "when", "doNothing", "anyInt", "mock", "execute", "exit", "verify", "anyInt"]}, "focal_class": {"identifier": "ShipLauncher", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Logger logger = getLogger(ShipLauncher.class);", "modifier": "protected static final", "type": "Logger", "declarator": "logger = getLogger(ShipLauncher.class)", "var_name": "logger"}, {"original_string": "protected static final String NL_0 = ShipLauncher.class.getName() + \".0\";", "modifier": "protected static final", "type": "String", "declarator": "NL_0 = ShipLauncher.class.getName() + \".0\"", "var_name": "NL_0"}, {"original_string": "protected static final String NL_1 = ShipLauncher.class.getName() + \".1\";", "modifier": "protected static final", "type": "String", "declarator": "NL_1 = ShipLauncher.class.getName() + \".1\"", "var_name": "NL_1"}, {"original_string": "protected static final String NL_2 = ShipLauncher.class.getName() + \".2\";", "modifier": "protected static final", "type": "String", "declarator": "NL_2 = ShipLauncher.class.getName() + \".2\"", "var_name": "NL_2"}, {"original_string": "protected static final String NL_3 = ShipLauncher.class.getName() + \".3\";", "modifier": "protected static final", "type": "String", "declarator": "NL_3 = ShipLauncher.class.getName() + \".3\"", "var_name": "NL_3"}, {"original_string": "protected final MessagePrinter messagePrinter;", "modifier": "protected final", "type": "MessagePrinter", "declarator": "messagePrinter", "var_name": "messagePrinter"}], "methods": [{"identifier": "main", "parameters": "(final String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(final String[] args)", "full_signature": "public static void main(final String[] args)", "class_method_signature": "ShipLauncher.main(final String[] args)", "testcase": false, "constructor": false}, {"identifier": "exit", "parameters": "(int returnCode)", "modifiers": "public", "return": "void", "signature": "void exit(int returnCode)", "full_signature": "public void exit(int returnCode)", "class_method_signature": "ShipLauncher.exit(int returnCode)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(final String[] args)", "modifiers": "public", "return": "void", "signature": "void run(final String[] args)", "full_signature": "public void run(final String[] args)", "class_method_signature": "ShipLauncher.run(final String[] args)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(final Command command)", "modifiers": "public", "return": "void", "signature": "void execute(final Command command)", "full_signature": "public void execute(final Command command)", "class_method_signature": "ShipLauncher.execute(final Command command)", "testcase": false, "constructor": false}, {"identifier": "handleCommandException", "parameters": "(\n      final Command command,\n      final CommandException commandException)", "modifiers": "protected", "return": "void", "signature": "void handleCommandException(\n      final Command command,\n      final CommandException commandException)", "full_signature": "protected void handleCommandException(\n      final Command command,\n      final CommandException commandException)", "class_method_signature": "ShipLauncher.handleCommandException(\n      final Command command,\n      final CommandException commandException)", "testcase": false, "constructor": false}, {"identifier": "handleThrowable", "parameters": "(final Command command, final Throwable throwable)", "modifiers": "protected", "return": "void", "signature": "void handleThrowable(final Command command, final Throwable throwable)", "full_signature": "protected void handleThrowable(final Command command, final Throwable throwable)", "class_method_signature": "ShipLauncher.handleThrowable(final Command command, final Throwable throwable)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/exec/ShipLauncher.java"}, "focal_method": {"identifier": "execute", "parameters": "(final Command command)", "modifiers": "public", "return": "void", "body": "public void execute(final Command command) {\n    try {\n      logger.trace(\"{} starting...\", command);\n      command.execute();\n      exit(0);\n    } catch (final CommandException throwable) {\n      handleCommandException(command, throwable);\n    } catch (final Throwable throwable) {\n      handleThrowable(command, throwable);\n    }\n  }", "signature": "void execute(final Command command)", "full_signature": "public void execute(final Command command)", "class_method_signature": "ShipLauncher.execute(final Command command)", "testcase": false, "constructor": false, "invocations": ["trace", "execute", "exit", "handleCommandException", "handleThrowable"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}