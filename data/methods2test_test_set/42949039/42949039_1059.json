{"test_class": {"identifier": "NamespaceRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private NamespaceRestController namespaceRestController;", "modifier": "@InjectMocks\n    private", "type": "NamespaceRestController", "declarator": "namespaceRestController", "var_name": "namespaceRestController"}, {"original_string": "@Mock\n    private NamespaceService namespaceService;", "modifier": "@Mock\n    private", "type": "NamespaceService", "declarator": "namespaceService", "var_name": "namespaceService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/NamespaceRestControllerTest.java"}, "test_case": {"identifier": "testCreateNamespace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateNamespace() throws Exception\n    {\n        NamespaceCreateRequest request = namespaceServiceTestHelper.createNamespaceCreateRequest(NAMESPACE);\n        Namespace namespace = new Namespace(NAMESPACE);\n        when(namespaceService.createNamespace(request)).thenReturn(namespace);\n        // Create a namespace.\n        Namespace resultNamespace = namespaceRestController.createNamespace(request);\n\n        // Validate the returned object.\n        namespaceServiceTestHelper.validateNamespace(NAMESPACE, resultNamespace);\n\n        // Verify the external calls.\n        verify(namespaceService).createNamespace(request);\n        verifyNoMoreInteractions(namespaceService);\n        // Validate the returned object.\n        assertEquals(namespace, resultNamespace);\n    }", "signature": "void testCreateNamespace()", "full_signature": "@Test public void testCreateNamespace()", "class_method_signature": "NamespaceRestControllerTest.testCreateNamespace()", "testcase": true, "constructor": false, "invocations": ["createNamespaceCreateRequest", "thenReturn", "when", "createNamespace", "createNamespace", "validateNamespace", "createNamespace", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "NamespaceRestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private NamespaceService namespaceService;", "modifier": "@Autowired\n    private", "type": "NamespaceService", "declarator": "namespaceService", "var_name": "namespaceService"}], "methods": [{"identifier": "createNamespace", "parameters": "(@RequestBody NamespaceCreateRequest request)", "modifiers": "@RequestMapping(value = \"/namespaces\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_NAMESPACES_POST) public", "return": "Namespace", "signature": "Namespace createNamespace(@RequestBody NamespaceCreateRequest request)", "full_signature": "@RequestMapping(value = \"/namespaces\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_NAMESPACES_POST) public Namespace createNamespace(@RequestBody NamespaceCreateRequest request)", "class_method_signature": "NamespaceRestController.createNamespace(@RequestBody NamespaceCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "getNamespace", "parameters": "(@PathVariable(\"namespaceCode\") String namespaceCode)", "modifiers": "@RequestMapping(value = \"/namespaces/{namespaceCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_NAMESPACES_GET) public", "return": "Namespace", "signature": "Namespace getNamespace(@PathVariable(\"namespaceCode\") String namespaceCode)", "full_signature": "@RequestMapping(value = \"/namespaces/{namespaceCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_NAMESPACES_GET) public Namespace getNamespace(@PathVariable(\"namespaceCode\") String namespaceCode)", "class_method_signature": "NamespaceRestController.getNamespace(@PathVariable(\"namespaceCode\") String namespaceCode)", "testcase": false, "constructor": false}, {"identifier": "deleteNamespace", "parameters": "(@PathVariable(\"namespaceCode\") String namespaceCode)", "modifiers": "@RequestMapping(value = \"/namespaces/{namespaceCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_NAMESPACES_DELETE) public", "return": "Namespace", "signature": "Namespace deleteNamespace(@PathVariable(\"namespaceCode\") String namespaceCode)", "full_signature": "@RequestMapping(value = \"/namespaces/{namespaceCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_NAMESPACES_DELETE) public Namespace deleteNamespace(@PathVariable(\"namespaceCode\") String namespaceCode)", "class_method_signature": "NamespaceRestController.deleteNamespace(@PathVariable(\"namespaceCode\") String namespaceCode)", "testcase": false, "constructor": false}, {"identifier": "getNamespaces", "parameters": "()", "modifiers": "@RequestMapping(value = \"/namespaces\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_NAMESPACES_ALL_GET) public", "return": "NamespaceKeys", "signature": "NamespaceKeys getNamespaces()", "full_signature": "@RequestMapping(value = \"/namespaces\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_NAMESPACES_ALL_GET) public NamespaceKeys getNamespaces()", "class_method_signature": "NamespaceRestController.getNamespaces()", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/NamespaceRestController.java"}, "focal_method": {"identifier": "createNamespace", "parameters": "(@RequestBody NamespaceCreateRequest request)", "modifiers": "@RequestMapping(value = \"/namespaces\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_NAMESPACES_POST) public", "return": "Namespace", "body": "@RequestMapping(value = \"/namespaces\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"})\n    @Secured(SecurityFunctions.FN_NAMESPACES_POST)\n    public Namespace createNamespace(@RequestBody NamespaceCreateRequest request)\n    {\n        return namespaceService.createNamespace(request);\n    }", "signature": "Namespace createNamespace(@RequestBody NamespaceCreateRequest request)", "full_signature": "@RequestMapping(value = \"/namespaces\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_NAMESPACES_POST) public Namespace createNamespace(@RequestBody NamespaceCreateRequest request)", "class_method_signature": "NamespaceRestController.createNamespace(@RequestBody NamespaceCreateRequest request)", "testcase": false, "constructor": false, "invocations": ["createNamespace"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}