{"test_class": {"identifier": "HTTPTest", "superclass": "", "interfaces": "", "fields": [], "file": "util/src/test/java/io/advantageous/boon/HTTPTest.java"}, "test_case": {"identifier": "testBinary", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBinary() throws Exception {\n\n        HttpServer server = HttpServer.create( new InetSocketAddress( 7212 ), 0 );\n        server.createContext( \"/test\", new MyHandler2() );\n        server.setExecutor( null ); // creates a default executor\n        server.start();\n\n        Thread.sleep( 10 );\n\n        byte[] response = HTTP.getBytesWithHeaders(\n                \"http://localhost:7212/test\",\n                \"application/java-archive\",\n                Maps.map(\n                        \"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n                        \"Accept-Encoding\", \"gzip,deflate,sdch\",\n                        \"Accept-Language\", \"en-US,en;q=0.8\"\n                )\n        );\n\n\n        boolean ok = true;\n\n        ok &= response.length == 19 || die( \"response is the wrong length\" + response.length );\n\n        for ( int index = 0; index < 19; index++ ) {\n            ok &= response[ index ] == index || die( Str.sputs(\"index\", index, \"ressponse at index\", response[index]) );\n\n        }\n        Thread.sleep( 10 );\n\n        //uts( \"binary test passed\", ok );\n\n        server.stop( 0 );\n\n\n    }", "signature": "void testBinary()", "full_signature": "@Test public void testBinary()", "class_method_signature": "HTTPTest.testBinary()", "testcase": true, "constructor": false, "invocations": ["create", "createContext", "setExecutor", "start", "sleep", "getBytesWithHeaders", "map", "die", "die", "sputs", "sleep", "stop"]}, "focal_class": {"identifier": "HTTP", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_TIMEOUT_SECONDS = Sys.sysProp(\"HTTP.timeout.seconds\", 30 );", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_TIMEOUT_SECONDS = Sys.sysProp(\"HTTP.timeout.seconds\", 30 )", "var_name": "DEFAULT_TIMEOUT_SECONDS"}, {"original_string": "public static final String APPLICATION_JSON = \"application/json\";", "modifier": "public static final", "type": "String", "declarator": "APPLICATION_JSON = \"application/json\"", "var_name": "APPLICATION_JSON"}], "methods": [{"identifier": "get", "parameters": "(\n            final String url )", "modifiers": "public static", "return": "String", "signature": "String get(\n            final String url )", "full_signature": "public static String get(\n            final String url )", "class_method_signature": "HTTP.get(\n            final String url )", "testcase": false, "constructor": false}, {"identifier": "post", "parameters": "(\n            final String url,\n            final String body )", "modifiers": "public static", "return": "String", "signature": "String post(\n            final String url,\n            final String body )", "full_signature": "public static String post(\n            final String url,\n            final String body )", "class_method_signature": "HTTP.post(\n            final String url,\n            final String body )", "testcase": false, "constructor": false}, {"identifier": "getResponse", "parameters": "(\n            final String url )", "modifiers": "public static", "return": "Response", "signature": "Response getResponse(\n            final String url )", "full_signature": "public static Response getResponse(\n            final String url )", "class_method_signature": "HTTP.getResponse(\n            final String url )", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(\n            final String url, final String contentType )", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytes(\n            final String url, final String contentType )", "full_signature": "public static byte[] getBytes(\n            final String url, final String contentType )", "class_method_signature": "HTTP.getBytes(\n            final String url, final String contentType )", "testcase": false, "constructor": false}, {"identifier": "getBytesWithHeaders", "parameters": "(\n            final String url, final String contentType, final Map<String, ?> headers )", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytesWithHeaders(\n            final String url, final String contentType, final Map<String, ?> headers )", "full_signature": "public static byte[] getBytesWithHeaders(\n            final String url, final String contentType, final Map<String, ?> headers )", "class_method_signature": "HTTP.getBytesWithHeaders(\n            final String url, final String contentType, final Map<String, ?> headers )", "testcase": false, "constructor": false}, {"identifier": "getWithHeaders", "parameters": "(\n            final String url,\n            final Map<String, ?> headers )", "modifiers": "public static", "return": "String", "signature": "String getWithHeaders(\n            final String url,\n            final Map<String, ?> headers )", "full_signature": "public static String getWithHeaders(\n            final String url,\n            final Map<String, ?> headers )", "class_method_signature": "HTTP.getWithHeaders(\n            final String url,\n            final Map<String, ?> headers )", "testcase": false, "constructor": false}, {"identifier": "getWithContentType", "parameters": "(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType )", "modifiers": "public static", "return": "String", "signature": "String getWithContentType(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType )", "full_signature": "public static String getWithContentType(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType )", "class_method_signature": "HTTP.getWithContentType(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType )", "testcase": false, "constructor": false}, {"identifier": "getWithCharSet", "parameters": "(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String charSet )", "modifiers": "public static", "return": "String", "signature": "String getWithCharSet(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String charSet )", "full_signature": "public static String getWithCharSet(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String charSet )", "class_method_signature": "HTTP.getWithCharSet(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String charSet )", "testcase": false, "constructor": false}, {"identifier": "postText", "parameters": "(\n            final String url,\n            final String body )", "modifiers": "public static", "return": "String", "signature": "String postText(\n            final String url,\n            final String body )", "full_signature": "public static String postText(\n            final String url,\n            final String body )", "class_method_signature": "HTTP.postText(\n            final String url,\n            final String body )", "testcase": false, "constructor": false}, {"identifier": "postBodyTextWithContentType", "parameters": "(\n            final String url,\n            final String contentType,\n            final String body )", "modifiers": "public static", "return": "String", "signature": "String postBodyTextWithContentType(\n            final String url,\n            final String contentType,\n            final String body )", "full_signature": "public static String postBodyTextWithContentType(\n            final String url,\n            final String contentType,\n            final String body )", "class_method_signature": "HTTP.postBodyTextWithContentType(\n            final String url,\n            final String contentType,\n            final String body )", "testcase": false, "constructor": false}, {"identifier": "postJSON", "parameters": "(\n            final String url,\n            final String jsonString )", "modifiers": "public static", "return": "String", "signature": "String postJSON(\n            final String url,\n            final String jsonString )", "full_signature": "public static String postJSON(\n            final String url,\n            final String jsonString )", "class_method_signature": "HTTP.postJSON(\n            final String url,\n            final String jsonString )", "testcase": false, "constructor": false}, {"identifier": "jsonRestCallViaPOST", "parameters": "(\n            final String url,\n            final String jsonString )", "modifiers": "public static", "return": "Response", "signature": "Response jsonRestCallViaPOST(\n            final String url,\n            final String jsonString )", "full_signature": "public static Response jsonRestCallViaPOST(\n            final String url,\n            final String jsonString )", "class_method_signature": "HTTP.jsonRestCallViaPOST(\n            final String url,\n            final String jsonString )", "testcase": false, "constructor": false}, {"identifier": "getJSON", "parameters": "(\n            final String url,\n            final Map<String, ?> headers\n    )", "modifiers": "public static", "return": "String", "signature": "String getJSON(\n            final String url,\n            final Map<String, ?> headers\n    )", "full_signature": "public static String getJSON(\n            final String url,\n            final Map<String, ?> headers\n    )", "class_method_signature": "HTTP.getJSON(\n            final String url,\n            final Map<String, ?> headers\n    )", "testcase": false, "constructor": false}, {"identifier": "jsonRestCallWithHeaders", "parameters": "(\n            final String url,\n            final Map<String, ?> headers\n    )", "modifiers": "public static", "return": "Response", "signature": "Response jsonRestCallWithHeaders(\n            final String url,\n            final Map<String, ?> headers\n    )", "full_signature": "public static Response jsonRestCallWithHeaders(\n            final String url,\n            final Map<String, ?> headers\n    )", "class_method_signature": "HTTP.jsonRestCallWithHeaders(\n            final String url,\n            final Map<String, ?> headers\n    )", "testcase": false, "constructor": false}, {"identifier": "jsonRestCall", "parameters": "(\n            final String url\n    )", "modifiers": "public static", "return": "Response", "signature": "Response jsonRestCall(\n            final String url\n    )", "full_signature": "public static Response jsonRestCall(\n            final String url\n    )", "class_method_signature": "HTTP.jsonRestCall(\n            final String url\n    )", "testcase": false, "constructor": false}, {"identifier": "postBodyTextWithContentTypeReturnResponse", "parameters": "(    final String url,\n            final String contentType,\n            final String body )", "modifiers": "public static", "return": "Response", "signature": "Response postBodyTextWithContentTypeReturnResponse(    final String url,\n            final String contentType,\n            final String body )", "full_signature": "public static Response postBodyTextWithContentTypeReturnResponse(    final String url,\n            final String contentType,\n            final String body )", "class_method_signature": "HTTP.postBodyTextWithContentTypeReturnResponse(    final String url,\n            final String contentType,\n            final String body )", "testcase": false, "constructor": false}, {"identifier": "getJSONWithParams", "parameters": "(\n            final String url,\n            final Map<String, ?> headers, final Map<String, ?> params\n    )", "modifiers": "public static", "return": "String", "signature": "String getJSONWithParams(\n            final String url,\n            final Map<String, ?> headers, final Map<String, ?> params\n    )", "full_signature": "public static String getJSONWithParams(\n            final String url,\n            final Map<String, ?> headers, final Map<String, ?> params\n    )", "class_method_signature": "HTTP.getJSONWithParams(\n            final String url,\n            final Map<String, ?> headers, final Map<String, ?> params\n    )", "testcase": false, "constructor": false}, {"identifier": "postXML", "parameters": "(\n            final String url,\n            final String jsonString )", "modifiers": "public static", "return": "String", "signature": "String postXML(\n            final String url,\n            final String jsonString )", "full_signature": "public static String postXML(\n            final String url,\n            final String jsonString )", "class_method_signature": "HTTP.postXML(\n            final String url,\n            final String jsonString )", "testcase": false, "constructor": false}, {"identifier": "postWithHeaders", "parameters": "(\n            final String url,\n            final Map<String, ?> headers,\n            final String body )", "modifiers": "public static", "return": "String", "signature": "String postWithHeaders(\n            final String url,\n            final Map<String, ?> headers,\n            final String body )", "full_signature": "public static String postWithHeaders(\n            final String url,\n            final Map<String, ?> headers,\n            final String body )", "class_method_signature": "HTTP.postWithHeaders(\n            final String url,\n            final Map<String, ?> headers,\n            final String body )", "testcase": false, "constructor": false}, {"identifier": "postWithContentType", "parameters": "(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String body )", "modifiers": "public static", "return": "String", "signature": "String postWithContentType(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String body )", "full_signature": "public static String postWithContentType(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String body )", "class_method_signature": "HTTP.postWithContentType(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String body )", "testcase": false, "constructor": false}, {"identifier": "postWithCharset", "parameters": "(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String charSet,\n            final String body )", "modifiers": "public static", "return": "String", "signature": "String postWithCharset(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String charSet,\n            final String body )", "full_signature": "public static String postWithCharset(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String charSet,\n            final String body )", "class_method_signature": "HTTP.postWithCharset(\n            final String url,\n            final Map<String, ?> headers,\n            final String contentType,\n            final String charSet,\n            final String body )", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "( String url, Map<String, ?> headers,\n                                         String contentType, String charset, String body\n    )", "modifiers": "private static", "return": "URLConnection", "signature": "URLConnection doPost( String url, Map<String, ?> headers,\n                                         String contentType, String charset, String body\n    )", "full_signature": "private static URLConnection doPost( String url, Map<String, ?> headers,\n                                         String contentType, String charset, String body\n    )", "class_method_signature": "HTTP.doPost( String url, Map<String, ?> headers,\n                                         String contentType, String charset, String body\n    )", "testcase": false, "constructor": false}, {"identifier": "postForm", "parameters": "( final String url, final Map<String, ?> headers,\n                                   final Map<String, Object> formData\n    )", "modifiers": "public static", "return": "String", "signature": "String postForm( final String url, final Map<String, ?> headers,\n                                   final Map<String, Object> formData\n    )", "full_signature": "public static String postForm( final String url, final Map<String, ?> headers,\n                                   final Map<String, Object> formData\n    )", "class_method_signature": "HTTP.postForm( final String url, final Map<String, ?> headers,\n                                   final Map<String, Object> formData\n    )", "testcase": false, "constructor": false}, {"identifier": "doPostFormData", "parameters": "( String url, Map<String, ?> headers,\n                                                 Map<String, Object> formData\n    )", "modifiers": "private static", "return": "URLConnection", "signature": "URLConnection doPostFormData( String url, Map<String, ?> headers,\n                                                 Map<String, Object> formData\n    )", "full_signature": "private static URLConnection doPostFormData( String url, Map<String, ?> headers,\n                                                 Map<String, Object> formData\n    )", "class_method_signature": "HTTP.doPostFormData( String url, Map<String, ?> headers,\n                                                 Map<String, Object> formData\n    )", "testcase": false, "constructor": false}, {"identifier": "manageHeaders", "parameters": "( Map<String, ?> headers, URLConnection connection )", "modifiers": "private static", "return": "void", "signature": "void manageHeaders( Map<String, ?> headers, URLConnection connection )", "full_signature": "private static void manageHeaders( Map<String, ?> headers, URLConnection connection )", "class_method_signature": "HTTP.manageHeaders( Map<String, ?> headers, URLConnection connection )", "testcase": false, "constructor": false}, {"identifier": "manageContentTypeHeaders", "parameters": "( String contentType, String charset, URLConnection connection, boolean binary )", "modifiers": "private static", "return": "void", "signature": "void manageContentTypeHeaders( String contentType, String charset, URLConnection connection, boolean binary )", "full_signature": "private static void manageContentTypeHeaders( String contentType, String charset, URLConnection connection, boolean binary )", "class_method_signature": "HTTP.manageContentTypeHeaders( String contentType, String charset, URLConnection connection, boolean binary )", "testcase": false, "constructor": false}, {"identifier": "doGet", "parameters": "( String url, Map<String, ?> headers,\n                                        String contentType, String charset, boolean binary )", "modifiers": "private static", "return": "URLConnection", "signature": "URLConnection doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset, boolean binary )", "full_signature": "private static URLConnection doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset, boolean binary )", "class_method_signature": "HTTP.doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset, boolean binary )", "testcase": false, "constructor": false}, {"identifier": "extractResponseString", "parameters": "( URLConnection connection )", "modifiers": "private static", "return": "String", "signature": "String extractResponseString( URLConnection connection )", "full_signature": "private static String extractResponseString( URLConnection connection )", "class_method_signature": "HTTP.extractResponseString( URLConnection connection )", "testcase": false, "constructor": false}, {"identifier": "extractResponseObject", "parameters": "( URLConnection connection )", "modifiers": "private static", "return": "Response", "signature": "Response extractResponseObject( URLConnection connection )", "full_signature": "private static Response extractResponseObject( URLConnection connection )", "class_method_signature": "HTTP.extractResponseObject( URLConnection connection )", "testcase": false, "constructor": false}, {"identifier": "extractResponseBytes", "parameters": "( URLConnection connection )", "modifiers": "private static", "return": "byte[]", "signature": "byte[] extractResponseBytes( URLConnection connection )", "full_signature": "private static byte[] extractResponseBytes( URLConnection connection )", "class_method_signature": "HTTP.extractResponseBytes( URLConnection connection )", "testcase": false, "constructor": false}, {"identifier": "readResponseBodyAsBytes", "parameters": "( HttpURLConnection http )", "modifiers": "private static", "return": "byte[]", "signature": "byte[] readResponseBodyAsBytes( HttpURLConnection http )", "full_signature": "private static byte[] readResponseBodyAsBytes( HttpURLConnection http )", "class_method_signature": "HTTP.readResponseBodyAsBytes( HttpURLConnection http )", "testcase": false, "constructor": false}, {"identifier": "readErrorResponseBody", "parameters": "( HttpURLConnection http, int status, String charset )", "modifiers": "private static", "return": "String", "signature": "String readErrorResponseBody( HttpURLConnection http, int status, String charset )", "full_signature": "private static String readErrorResponseBody( HttpURLConnection http, int status, String charset )", "class_method_signature": "HTTP.readErrorResponseBody( HttpURLConnection http, int status, String charset )", "testcase": false, "constructor": false}, {"identifier": "readErrorResponseBodyDoNotDie", "parameters": "( HttpURLConnection http, int status, String charset )", "modifiers": "private static", "return": "String", "signature": "String readErrorResponseBodyDoNotDie( HttpURLConnection http, int status, String charset )", "full_signature": "private static String readErrorResponseBodyDoNotDie( HttpURLConnection http, int status, String charset )", "class_method_signature": "HTTP.readErrorResponseBodyDoNotDie( HttpURLConnection http, int status, String charset )", "testcase": false, "constructor": false}, {"identifier": "readResponseBody", "parameters": "( HttpURLConnection http, String charset )", "modifiers": "private static", "return": "String", "signature": "String readResponseBody( HttpURLConnection http, String charset )", "full_signature": "private static String readResponseBody( HttpURLConnection http, String charset )", "class_method_signature": "HTTP.readResponseBody( HttpURLConnection http, String charset )", "testcase": false, "constructor": false}, {"identifier": "getCharset", "parameters": "( String contentType )", "modifiers": "private static", "return": "String", "signature": "String getCharset( String contentType )", "full_signature": "private static String getCharset( String contentType )", "class_method_signature": "HTTP.getCharset( String contentType )", "testcase": false, "constructor": false}, {"identifier": "manageContentTypeHeaders", "parameters": "( String contentType, String charset, URLConnection connection )", "modifiers": "private static", "return": "void", "signature": "void manageContentTypeHeaders( String contentType, String charset, URLConnection connection )", "full_signature": "private static void manageContentTypeHeaders( String contentType, String charset, URLConnection connection )", "class_method_signature": "HTTP.manageContentTypeHeaders( String contentType, String charset, URLConnection connection )", "testcase": false, "constructor": false}, {"identifier": "doGet", "parameters": "( String url, Map<String, ?> headers,\n                                        String contentType, String charset )", "modifiers": "private static", "return": "URLConnection", "signature": "URLConnection doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset )", "full_signature": "private static URLConnection doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset )", "class_method_signature": "HTTP.doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset )", "testcase": false, "constructor": false}, {"identifier": "doGet", "parameters": "( String url, Map<String, ?> headers,\n                                        String contentType, String charset, Map<String, ?> params )", "modifiers": "private static", "return": "URLConnection", "signature": "URLConnection doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset, Map<String, ?> params )", "full_signature": "private static URLConnection doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset, Map<String, ?> params )", "class_method_signature": "HTTP.doGet( String url, Map<String, ?> headers,\n                                        String contentType, String charset, Map<String, ?> params )", "testcase": false, "constructor": false}], "file": "util/src/main/java/io/advantageous/boon/HTTP.java"}, "focal_method": {"identifier": "getBytesWithHeaders", "parameters": "(\n            final String url, final String contentType, final Map<String, ?> headers )", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] getBytesWithHeaders(\n            final String url, final String contentType, final Map<String, ?> headers ) {\n\n        return Exceptions.tryIt( byte[].class, new Exceptions.TrialWithReturn<byte[]>() {\n            @Override\n            public byte[] tryIt() throws Exception {\n                URLConnection connection;\n                connection = doGet( url, headers, contentType, null, true );\n                return extractResponseBytes( connection );\n            }\n        } );\n\n    }", "signature": "byte[] getBytesWithHeaders(\n            final String url, final String contentType, final Map<String, ?> headers )", "full_signature": "public static byte[] getBytesWithHeaders(\n            final String url, final String contentType, final Map<String, ?> headers )", "class_method_signature": "HTTP.getBytesWithHeaders(\n            final String url, final String contentType, final Map<String, ?> headers )", "testcase": false, "constructor": false, "invocations": ["tryIt", "doGet", "extractResponseBytes"]}, "repository": {"repo_id": 33015857, "url": "https://github.com/advantageous/boon", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 6174, "license": "licensed"}}