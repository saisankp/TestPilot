{"test_class": {"identifier": "CachedExportStrategyTest", "superclass": "extends ServiceBaseTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    ContentCache cache;", "modifier": "@Autowired", "type": "ContentCache", "declarator": "cache", "var_name": "cache"}, {"original_string": "@Autowired\n    CacheKeyGenerator cacheKeyGenerator;", "modifier": "@Autowired", "type": "CacheKeyGenerator", "declarator": "cacheKeyGenerator", "var_name": "cacheKeyGenerator"}, {"original_string": "@Autowired\n    CachedExportStrategy cachedExportStrategy;", "modifier": "@Autowired", "type": "CachedExportStrategy", "declarator": "cachedExportStrategy", "var_name": "cachedExportStrategy"}, {"original_string": "@Autowired\n    PreparationRepository preparationRepository;", "modifier": "@Autowired", "type": "PreparationRepository", "declarator": "preparationRepository", "var_name": "preparationRepository"}], "file": "dataprep-transformation/src/test/java/org/talend/dataprep/transformation/service/export/CachedExportStrategyTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotAcceptNullParameter() throws Exception {\n        // Then\n        assertFalse(cachedExportStrategy.test(null));\n    }", "signature": "void shouldNotAcceptNullParameter()", "full_signature": "@Test public void shouldNotAcceptNullParameter()", "class_method_signature": "CachedExportStrategyTest.shouldNotAcceptNullParameter()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "test"]}, "focal_class": {"identifier": "CachedExportStrategy", "superclass": "extends BaseSampleExportStrategy", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(CachedExportStrategy.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(CachedExportStrategy.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private CacheKeyGenerator cacheKeyGenerator;", "modifier": "@Autowired\n    private", "type": "CacheKeyGenerator", "declarator": "cacheKeyGenerator", "var_name": "cacheKeyGenerator"}], "methods": [{"identifier": "test", "parameters": "(ExportParameters parameters)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean test(ExportParameters parameters)", "full_signature": "@Override public boolean test(ExportParameters parameters)", "class_method_signature": "CachedExportStrategy.test(ExportParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(ExportParameters parameters)", "modifiers": "@Override public", "return": "StreamingResponseBody", "signature": "StreamingResponseBody execute(ExportParameters parameters)", "full_signature": "@Override public StreamingResponseBody execute(ExportParameters parameters)", "class_method_signature": "CachedExportStrategy.execute(ExportParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "getCacheKey", "parameters": "(ExportParameters parameters)", "modifiers": "private", "return": "TransformationCacheKey", "signature": "TransformationCacheKey getCacheKey(ExportParameters parameters)", "full_signature": "private TransformationCacheKey getCacheKey(ExportParameters parameters)", "class_method_signature": "CachedExportStrategy.getCacheKey(ExportParameters parameters)", "testcase": false, "constructor": false}], "file": "dataprep-transformation/src/main/java/org/talend/dataprep/transformation/service/export/CachedExportStrategy.java"}, "focal_method": {"identifier": "test", "parameters": "(ExportParameters parameters)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean test(ExportParameters parameters) {\n        if (parameters == null) {\n            return false;\n        }\n        if (parameters.getContent() != null) {\n            return false;\n        }\n        if (StringUtils.isEmpty(parameters.getPreparationId())) {\n            return false;\n        }\n        try {\n            final TransformationCacheKey contentKey = getCacheKey(parameters);\n            return contentCache.has(contentKey);\n        } catch (TDPException e) {\n            LOGGER.debug(\"Unable to use cached export strategy.\", e);\n            return false;\n        }\n    }", "signature": "boolean test(ExportParameters parameters)", "full_signature": "@Override public boolean test(ExportParameters parameters)", "class_method_signature": "CachedExportStrategy.test(ExportParameters parameters)", "testcase": false, "constructor": false, "invocations": ["getContent", "isEmpty", "getPreparationId", "getCacheKey", "has", "debug"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}