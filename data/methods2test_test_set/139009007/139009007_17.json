{"test_class": {"identifier": "FlatMapStageFactoryTest", "superclass": "extends StageTestBase", "interfaces": "", "fields": [{"original_string": "private final FlatMapStageFactory factory = new FlatMapStageFactory();", "modifier": "private final", "type": "FlatMapStageFactory", "declarator": "factory = new FlatMapStageFactory()", "var_name": "factory"}, {"original_string": "private final ExecutorService executor = Executors.newSingleThreadExecutor();", "modifier": "private final", "type": "ExecutorService", "declarator": "executor = Executors.newSingleThreadExecutor()", "var_name": "executor"}], "file": "implementation/src/test/java/io/smallrye/reactive/streams/stages/FlatMapStageFactoryTest.java"}, "test_case": {"identifier": "createWithoutFunction", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void createWithoutFunction() {\n        factory.create(null, () -> null);\n    }", "signature": "void createWithoutFunction()", "full_signature": "@Test(expected = NullPointerException.class) public void createWithoutFunction()", "class_method_signature": "FlatMapStageFactoryTest.createWithoutFunction()", "testcase": true, "constructor": false, "invocations": ["create"]}, "focal_class": {"identifier": "FlatMapStageFactory", "superclass": "", "interfaces": "implements ProcessingStageFactory<Stage.FlatMap>", "fields": [], "methods": [{"identifier": "create", "parameters": "(Engine engine, Stage.FlatMap stage)", "modifiers": "@Override public", "return": "ProcessingStage<I, O>", "signature": "ProcessingStage<I, O> create(Engine engine, Stage.FlatMap stage)", "full_signature": "@Override public ProcessingStage<I, O> create(Engine engine, Stage.FlatMap stage)", "class_method_signature": "FlatMapStageFactory.create(Engine engine, Stage.FlatMap stage)", "testcase": false, "constructor": false}], "file": "implementation/src/main/java/io/smallrye/reactive/streams/stages/FlatMapStageFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(Engine engine, Stage.FlatMap stage)", "modifiers": "@Override public", "return": "ProcessingStage<I, O>", "body": "@Override\n    public <I, O> ProcessingStage<I, O> create(Engine engine, Stage.FlatMap stage) {\n        Function<I, Graph> mapper = Casts.cast(stage.getMapper());\n        return new FlatMapStage<>(engine, mapper);\n    }", "signature": "ProcessingStage<I, O> create(Engine engine, Stage.FlatMap stage)", "full_signature": "@Override public ProcessingStage<I, O> create(Engine engine, Stage.FlatMap stage)", "class_method_signature": "FlatMapStageFactory.create(Engine engine, Stage.FlatMap stage)", "testcase": false, "constructor": false, "invocations": ["cast", "getMapper"]}, "repository": {"repo_id": 139009007, "url": "https://github.com/smallrye/smallrye-reactive-streams-operators", "stars": 14, "created": "6/28/2018 11:27:21 AM +00:00", "updates": "2020-01-20T06:48:19+00:00", "fork": "False", "license": "licensed"}}