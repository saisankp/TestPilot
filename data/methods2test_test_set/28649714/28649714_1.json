{"test_class": {"identifier": "ConerCoreApplicationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "JerseyRegistrationComponent components;", "modifier": "", "type": "JerseyRegistrationComponent", "declarator": "components", "var_name": "components"}, {"original_string": "@Mock\n    private Bootstrap<ConerCoreConfiguration> bootstrap;", "modifier": "@Mock\n    private", "type": "Bootstrap<ConerCoreConfiguration>", "declarator": "bootstrap", "var_name": "bootstrap"}, {"original_string": "@Mock\n    private ObjectMapper objectMapper;", "modifier": "@Mock\n    private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "@Mock\n    private ConerCoreConfiguration config;", "modifier": "@Mock\n    private", "type": "ConerCoreConfiguration", "declarator": "config", "var_name": "config"}, {"original_string": "@Mock\n    private DataSourceFactory dataSourceFactory;", "modifier": "@Mock\n    private", "type": "DataSourceFactory", "declarator": "dataSourceFactory", "var_name": "dataSourceFactory"}, {"original_string": "@Mock\n    private Environment environment;", "modifier": "@Mock\n    private", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "@Mock\n    private JerseyEnvironment jersey;", "modifier": "@Mock\n    private", "type": "JerseyEnvironment", "declarator": "jersey", "var_name": "jersey"}, {"original_string": "@Mock\n    private AdminEnvironment adminEnvironment;", "modifier": "@Mock\n    private", "type": "AdminEnvironment", "declarator": "adminEnvironment", "var_name": "adminEnvironment"}, {"original_string": "@InjectMocks\n    private ConerCoreApplication application;", "modifier": "@InjectMocks\n    private", "type": "ConerCoreApplication", "declarator": "application", "var_name": "application"}], "file": "service/src/test/java/org/coner/core/ConerCoreApplicationTest.java"}, "test_case": {"identifier": "itShouldWriteDatesAsTimestamps", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void itShouldWriteDatesAsTimestamps() {\n        application.initialize(bootstrap);\n\n        ArgumentCaptor<SerializationFeature> serializationFeatureArgumentCaptor = ArgumentCaptor.forClass(\n                SerializationFeature.class\n        );\n        ArgumentCaptor<Boolean> valueArgumentCaptor = ArgumentCaptor.forClass(Boolean.class);\n        verify(objectMapper).configure(serializationFeatureArgumentCaptor.capture(), valueArgumentCaptor.capture());\n\n        assertThat(serializationFeatureArgumentCaptor.getValue())\n                .isEqualTo(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        assertThat(valueArgumentCaptor.getValue()).isFalse();\n    }", "signature": "void itShouldWriteDatesAsTimestamps()", "full_signature": "@Test public void itShouldWriteDatesAsTimestamps()", "class_method_signature": "ConerCoreApplicationTest.itShouldWriteDatesAsTimestamps()", "testcase": true, "constructor": false, "invocations": ["initialize", "forClass", "forClass", "configure", "verify", "capture", "capture", "isEqualTo", "assertThat", "getValue", "isFalse", "assertThat", "getValue"]}, "focal_class": {"identifier": "ConerCoreApplication", "superclass": "extends Application<ConerCoreConfiguration>", "interfaces": "", "fields": [{"original_string": "JerseyRegistrationComponent components;", "modifier": "", "type": "JerseyRegistrationComponent", "declarator": "components", "var_name": "components"}, {"original_string": "HibernateBundle<ConerCoreConfiguration> hibernateBundle;", "modifier": "", "type": "HibernateBundle<ConerCoreConfiguration>", "declarator": "hibernateBundle", "var_name": "hibernateBundle"}], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "ConerCoreApplication.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    )", "modifiers": "@Override public", "return": "void", "signature": "void initialize(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    )", "full_signature": "@Override public void initialize(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    )", "class_method_signature": "ConerCoreApplication.initialize(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    )", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(\n            ConerCoreConfiguration conerCoreConfiguration,\n            Environment environment\n    )", "modifiers": "@Override public", "return": "void", "signature": "void run(\n            ConerCoreConfiguration conerCoreConfiguration,\n            Environment environment\n    )", "full_signature": "@Override public void run(\n            ConerCoreConfiguration conerCoreConfiguration,\n            Environment environment\n    )", "class_method_signature": "ConerCoreApplication.run(\n            ConerCoreConfiguration conerCoreConfiguration,\n            Environment environment\n    )", "testcase": false, "constructor": false}, {"identifier": "initComponents", "parameters": "(ConerCoreConfiguration conerCoreConfiguration)", "modifiers": "private", "return": "void", "signature": "void initComponents(ConerCoreConfiguration conerCoreConfiguration)", "full_signature": "private void initComponents(ConerCoreConfiguration conerCoreConfiguration)", "class_method_signature": "ConerCoreApplication.initComponents(ConerCoreConfiguration conerCoreConfiguration)", "testcase": false, "constructor": false}, {"identifier": "getHibernateBundle", "parameters": "()", "modifiers": "private", "return": "HibernateBundle<ConerCoreConfiguration>", "signature": "HibernateBundle<ConerCoreConfiguration> getHibernateBundle()", "full_signature": "private HibernateBundle<ConerCoreConfiguration> getHibernateBundle()", "class_method_signature": "ConerCoreApplication.getHibernateBundle()", "testcase": false, "constructor": false}, {"identifier": "optionallyRegisterHsqlDatabaseManagerSwingTask", "parameters": "(\n            Environment environment,\n            ConerCoreConfiguration conerCoreConfiguration\n    )", "modifiers": "private", "return": "void", "signature": "void optionallyRegisterHsqlDatabaseManagerSwingTask(\n            Environment environment,\n            ConerCoreConfiguration conerCoreConfiguration\n    )", "full_signature": "private void optionallyRegisterHsqlDatabaseManagerSwingTask(\n            Environment environment,\n            ConerCoreConfiguration conerCoreConfiguration\n    )", "class_method_signature": "ConerCoreApplication.optionallyRegisterHsqlDatabaseManagerSwingTask(\n            Environment environment,\n            ConerCoreConfiguration conerCoreConfiguration\n    )", "testcase": false, "constructor": false}], "file": "service/src/main/java/org/coner/core/ConerCoreApplication.java"}, "focal_method": {"identifier": "initialize", "parameters": "(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    )", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void initialize(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    ) {\n        bootstrap.addBundle(getHibernateBundle());\n        bootstrap.addBundle(new SwaggerBundle<ConerCoreConfiguration>() {\n            @Override\n            protected SwaggerBundleConfiguration getSwaggerBundleConfiguration(\n                    ConerCoreConfiguration configuration\n            ) {\n                return configuration.getSwaggerBundleConfiguration();\n            }\n        });\n\n        JacksonUtil.configureObjectMapper(bootstrap.getObjectMapper());\n    }", "signature": "void initialize(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    )", "full_signature": "@Override public void initialize(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    )", "class_method_signature": "ConerCoreApplication.initialize(\n            Bootstrap<ConerCoreConfiguration> bootstrap\n    )", "testcase": false, "constructor": false, "invocations": ["addBundle", "getHibernateBundle", "addBundle", "getSwaggerBundleConfiguration", "configureObjectMapper", "getObjectMapper"]}, "repository": {"repo_id": 28649714, "url": "https://github.com/caeos/coner-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1027, "license": "licensed"}}