{"test_class": {"identifier": "ComponentGroupTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ComponentGroup mComponentGroup;", "modifier": "private", "type": "ComponentGroup", "declarator": "mComponentGroup", "var_name": "mComponentGroup"}], "file": "bento/src/test/java/com/yelp/android/bento/core/ComponentGroupTest.java"}, "test_case": {"identifier": "test_NotifyRangeInserted_ComponentAddedInTheMiddle_CallsNotifyItemRangeInserted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_NotifyRangeInserted_ComponentAddedInTheMiddle_CallsNotifyItemRangeInserted() {\n        List<String> fakeData = new ArrayList<>(Arrays.asList(\"a\", \"b\", \"c\"));\n        ListComponent<String, String> listComponent0 = new ListComponent<>(null, null);\n        listComponent0.toggleDivider(false);\n        listComponent0.setData(fakeData);\n        ListComponent<String, String> listComponent1 = new ListComponent<>(null, null);\n        listComponent1.toggleDivider(false);\n        listComponent1.setData(fakeData);\n        ComponentGroup group = new ComponentGroup();\n        group.addComponent(listComponent0);\n        group.addComponent(listComponent1);\n\n        List<String> insertedData = new ArrayList<>(Arrays.asList(\"0\", \"1\", \"2\", \"3\"));\n        ListComponent<String, String> insertedComponent = new ListComponent<>(null, null);\n        insertedComponent.toggleDivider(false);\n        insertedComponent.setData(insertedData);\n        ComponentGroup spyGroup = spy(group);\n\n        spyGroup.addComponent(1, insertedComponent);\n        verify(spyGroup, times(1)).notifyItemRangeInserted(3, 4);\n    }", "signature": "void test_NotifyRangeInserted_ComponentAddedInTheMiddle_CallsNotifyItemRangeInserted()", "full_signature": "@Test public void test_NotifyRangeInserted_ComponentAddedInTheMiddle_CallsNotifyItemRangeInserted()", "class_method_signature": "ComponentGroupTest.test_NotifyRangeInserted_ComponentAddedInTheMiddle_CallsNotifyItemRangeInserted()", "testcase": true, "constructor": false, "invocations": ["asList", "toggleDivider", "setData", "toggleDivider", "setData", "addComponent", "addComponent", "asList", "toggleDivider", "setData", "spy", "addComponent", "notifyItemRangeInserted", "verify", "times"]}, "focal_class": {"identifier": "ComponentGroup", "superclass": "extends Component", "interfaces": "", "fields": [{"original_string": "private final AccordionList<Component> mComponentAccordionList = new AccordionList<>();", "modifier": "private final", "type": "AccordionList<Component>", "declarator": "mComponentAccordionList = new AccordionList<>()", "var_name": "mComponentAccordionList"}, {"original_string": "private final Map<Component, Integer> mComponentIndexMap = new HashMap<>();", "modifier": "private final", "type": "Map<Component, Integer>", "declarator": "mComponentIndexMap = new HashMap<>()", "var_name": "mComponentIndexMap"}, {"original_string": "private final Map<Component, ComponentDataObserver> mComponentDataObserverMap = new HashMap<>();", "modifier": "private final", "type": "Map<Component, ComponentDataObserver>", "declarator": "mComponentDataObserverMap = new HashMap<>()", "var_name": "mComponentDataObserverMap"}, {"original_string": "private final ComponentGroupObservable mObservable = new ComponentGroupObservable();", "modifier": "private final", "type": "ComponentGroupObservable", "declarator": "mObservable = new ComponentGroupObservable()", "var_name": "mObservable"}], "methods": [{"identifier": "ComponentGroup", "parameters": "()", "modifiers": "public", "return": "", "signature": " ComponentGroup()", "full_signature": "public  ComponentGroup()", "class_method_signature": "ComponentGroup.ComponentGroup()", "testcase": false, "constructor": true}, {"identifier": "getSpan", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSpan()", "full_signature": "public int getSpan()", "class_method_signature": "ComponentGroup.getSpan()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSize()", "full_signature": "public int getSize()", "class_method_signature": "ComponentGroup.getSize()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "@NonNull public", "return": "Component", "signature": "Component get(int index)", "full_signature": "@NonNull public Component get(int index)", "class_method_signature": "ComponentGroup.get(int index)", "testcase": false, "constructor": false}, {"identifier": "componentAt", "parameters": "(int position)", "modifiers": "@NonNull public", "return": "Component", "signature": "Component componentAt(int position)", "full_signature": "@NonNull public Component componentAt(int position)", "class_method_signature": "ComponentGroup.componentAt(int position)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(@NonNull Component component)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(@NonNull Component component)", "full_signature": "public boolean contains(@NonNull Component component)", "class_method_signature": "ComponentGroup.contains(@NonNull Component component)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(@NonNull Component component)", "modifiers": "public", "return": "int", "signature": "int indexOf(@NonNull Component component)", "full_signature": "public int indexOf(@NonNull Component component)", "class_method_signature": "ComponentGroup.indexOf(@NonNull Component component)", "testcase": false, "constructor": false}, {"identifier": "rangeOf", "parameters": "(@NonNull Component component)", "modifiers": "@Nullable public", "return": "Range", "signature": "Range rangeOf(@NonNull Component component)", "full_signature": "@Nullable public Range rangeOf(@NonNull Component component)", "class_method_signature": "ComponentGroup.rangeOf(@NonNull Component component)", "testcase": false, "constructor": false}, {"identifier": "addComponent", "parameters": "(@NonNull Component component)", "modifiers": "@NonNull public", "return": "ComponentGroup", "signature": "ComponentGroup addComponent(@NonNull Component component)", "full_signature": "@NonNull public ComponentGroup addComponent(@NonNull Component component)", "class_method_signature": "ComponentGroup.addComponent(@NonNull Component component)", "testcase": false, "constructor": false}, {"identifier": "addComponent", "parameters": "(@NonNull ComponentGroup componentGroup)", "modifiers": "@NonNull public", "return": "ComponentGroup", "signature": "ComponentGroup addComponent(@NonNull ComponentGroup componentGroup)", "full_signature": "@NonNull public ComponentGroup addComponent(@NonNull ComponentGroup componentGroup)", "class_method_signature": "ComponentGroup.addComponent(@NonNull ComponentGroup componentGroup)", "testcase": false, "constructor": false}, {"identifier": "addComponent", "parameters": "(int index, @NonNull final Component component)", "modifiers": "@NonNull public", "return": "ComponentGroup", "signature": "ComponentGroup addComponent(int index, @NonNull final Component component)", "full_signature": "@NonNull public ComponentGroup addComponent(int index, @NonNull final Component component)", "class_method_signature": "ComponentGroup.addComponent(int index, @NonNull final Component component)", "testcase": false, "constructor": false}, {"identifier": "addComponent", "parameters": "(int index, @NonNull ComponentGroup componentGroup)", "modifiers": "@NonNull public", "return": "ComponentGroup", "signature": "ComponentGroup addComponent(int index, @NonNull ComponentGroup componentGroup)", "full_signature": "@NonNull public ComponentGroup addComponent(int index, @NonNull ComponentGroup componentGroup)", "class_method_signature": "ComponentGroup.addComponent(int index, @NonNull ComponentGroup componentGroup)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(@NonNull Collection<? extends Component> components)", "modifiers": "@NonNull public", "return": "ComponentGroup", "signature": "ComponentGroup addAll(@NonNull Collection<? extends Component> components)", "full_signature": "@NonNull public ComponentGroup addAll(@NonNull Collection<? extends Component> components)", "class_method_signature": "ComponentGroup.addAll(@NonNull Collection<? extends Component> components)", "testcase": false, "constructor": false}, {"identifier": "replaceComponent", "parameters": "(int index, @NonNull Component component)", "modifiers": "@NonNull public", "return": "ComponentGroup", "signature": "ComponentGroup replaceComponent(int index, @NonNull Component component)", "full_signature": "@NonNull public ComponentGroup replaceComponent(int index, @NonNull Component component)", "class_method_signature": "ComponentGroup.replaceComponent(int index, @NonNull Component component)", "testcase": false, "constructor": false}, {"identifier": "replaceComponent", "parameters": "(int index, @NonNull ComponentGroup componentGroup)", "modifiers": "@NonNull public", "return": "ComponentGroup", "signature": "ComponentGroup replaceComponent(int index, @NonNull ComponentGroup componentGroup)", "full_signature": "@NonNull public ComponentGroup replaceComponent(int index, @NonNull ComponentGroup componentGroup)", "class_method_signature": "ComponentGroup.replaceComponent(int index, @NonNull ComponentGroup componentGroup)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int index)", "modifiers": "@NonNull public", "return": "Component", "signature": "Component remove(int index)", "full_signature": "@NonNull public Component remove(int index)", "class_method_signature": "ComponentGroup.remove(int index)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(@NonNull Component component)", "modifiers": "public", "return": "boolean", "signature": "boolean remove(@NonNull Component component)", "full_signature": "public boolean remove(@NonNull Component component)", "class_method_signature": "ComponentGroup.remove(@NonNull Component component)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "ComponentGroup.clear()", "testcase": false, "constructor": false}, {"identifier": "getHolderType", "parameters": "(int position)", "modifiers": "@NonNull @SuppressWarnings(\"unchecked\") // Unchecked Component generics. public", "return": "Class<? extends ComponentViewHolder>", "signature": "Class<? extends ComponentViewHolder> getHolderType(int position)", "full_signature": "@NonNull @SuppressWarnings(\"unchecked\") // Unchecked Component generics. public Class<? extends ComponentViewHolder> getHolderType(int position)", "class_method_signature": "ComponentGroup.getHolderType(int position)", "testcase": false, "constructor": false}, {"identifier": "getPresenter", "parameters": "(int position)", "modifiers": "@Nullable @Override public", "return": "Object", "signature": "Object getPresenter(int position)", "full_signature": "@Nullable @Override public Object getPresenter(int position)", "class_method_signature": "ComponentGroup.getPresenter(int position)", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getCount()", "full_signature": "@Override public int getCount()", "class_method_signature": "ComponentGroup.getCount()", "testcase": false, "constructor": false}, {"identifier": "onItemVisible", "parameters": "(int index)", "modifiers": "@Override @CallSuper public", "return": "void", "signature": "void onItemVisible(int index)", "full_signature": "@Override @CallSuper public void onItemVisible(int index)", "class_method_signature": "ComponentGroup.onItemVisible(int index)", "testcase": false, "constructor": false}, {"identifier": "onItemNotVisible", "parameters": "(int index)", "modifiers": "@Override public", "return": "void", "signature": "void onItemNotVisible(int index)", "full_signature": "@Override public void onItemNotVisible(int index)", "class_method_signature": "ComponentGroup.onItemNotVisible(int index)", "testcase": false, "constructor": false}, {"identifier": "registerComponentGroupObserver", "parameters": "(@NonNull ComponentGroupDataObserver observer)", "modifiers": "public", "return": "void", "signature": "void registerComponentGroupObserver(@NonNull ComponentGroupDataObserver observer)", "full_signature": "public void registerComponentGroupObserver(@NonNull ComponentGroupDataObserver observer)", "class_method_signature": "ComponentGroup.registerComponentGroupObserver(@NonNull ComponentGroupDataObserver observer)", "testcase": false, "constructor": false}, {"identifier": "unregisterComponentGroupObserver", "parameters": "(@NonNull ComponentGroupDataObserver observer)", "modifiers": "public", "return": "void", "signature": "void unregisterComponentGroupObserver(@NonNull ComponentGroupDataObserver observer)", "full_signature": "public void unregisterComponentGroupObserver(@NonNull ComponentGroupDataObserver observer)", "class_method_signature": "ComponentGroup.unregisterComponentGroupObserver(@NonNull ComponentGroupDataObserver observer)", "testcase": false, "constructor": false}, {"identifier": "getItem", "parameters": "(int position)", "modifiers": "@Override public", "return": "Object", "signature": "Object getItem(int position)", "full_signature": "@Override public Object getItem(int position)", "class_method_signature": "ComponentGroup.getItem(int position)", "testcase": false, "constructor": false}, {"identifier": "getNumberLanes", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int getNumberLanes()", "full_signature": "@Override public final int getNumberLanes()", "class_method_signature": "ComponentGroup.getNumberLanes()", "testcase": false, "constructor": false}, {"identifier": "getSpanSizeLookup", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "SpanSizeLookup", "signature": "SpanSizeLookup getSpanSizeLookup()", "full_signature": "@NonNull @Override public SpanSizeLookup getSpanSizeLookup()", "class_method_signature": "ComponentGroup.getSpanSizeLookup()", "testcase": false, "constructor": false}, {"identifier": "findComponentOffset", "parameters": "(@NonNull Component component)", "modifiers": "public", "return": "int", "signature": "int findComponentOffset(@NonNull Component component)", "full_signature": "public int findComponentOffset(@NonNull Component component)", "class_method_signature": "ComponentGroup.findComponentOffset(@NonNull Component component)", "testcase": false, "constructor": false}, {"identifier": "findComponentWithIndex", "parameters": "(int index)", "modifiers": "public", "return": "Component", "signature": "Component findComponentWithIndex(int index)", "full_signature": "public Component findComponentWithIndex(int index)", "class_method_signature": "ComponentGroup.findComponentWithIndex(int index)", "testcase": false, "constructor": false}, {"identifier": "findRangedComponentWithIndex", "parameters": "(int index)", "modifiers": "public", "return": "RangedValue<Component>", "signature": "RangedValue<Component> findRangedComponentWithIndex(int index)", "full_signature": "public RangedValue<Component> findRangedComponentWithIndex(int index)", "class_method_signature": "ComponentGroup.findRangedComponentWithIndex(int index)", "testcase": false, "constructor": false}, {"identifier": "notifyFirstItemVisibilityChanged", "parameters": "(int i)", "modifiers": "", "return": "void", "signature": "void notifyFirstItemVisibilityChanged(int i)", "full_signature": " void notifyFirstItemVisibilityChanged(int i)", "class_method_signature": "ComponentGroup.notifyFirstItemVisibilityChanged(int i)", "testcase": false, "constructor": false}, {"identifier": "notifyVisibilityChange", "parameters": "(int i, boolean visible)", "modifiers": "", "return": "void", "signature": "void notifyVisibilityChange(int i, boolean visible)", "full_signature": " void notifyVisibilityChange(int i, boolean visible)", "class_method_signature": "ComponentGroup.notifyVisibilityChange(int i, boolean visible)", "testcase": false, "constructor": false}, {"identifier": "notifyRangeUpdated", "parameters": "(@NonNull Range originalRange, int newSize)", "modifiers": "private", "return": "void", "signature": "void notifyRangeUpdated(@NonNull Range originalRange, int newSize)", "full_signature": "private void notifyRangeUpdated(@NonNull Range originalRange, int newSize)", "class_method_signature": "ComponentGroup.notifyRangeUpdated(@NonNull Range originalRange, int newSize)", "testcase": false, "constructor": false}, {"identifier": "addComponentAndUpdateIndices", "parameters": "(int index, @NonNull Component component)", "modifiers": "private", "return": "void", "signature": "void addComponentAndUpdateIndices(int index, @NonNull Component component)", "full_signature": "private void addComponentAndUpdateIndices(int index, @NonNull Component component)", "class_method_signature": "ComponentGroup.addComponentAndUpdateIndices(int index, @NonNull Component component)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int index, @Nullable Component component)", "modifiers": "private", "return": "boolean", "signature": "boolean remove(int index, @Nullable Component component)", "full_signature": "private boolean remove(int index, @Nullable Component component)", "class_method_signature": "ComponentGroup.remove(int index, @Nullable Component component)", "testcase": false, "constructor": false}, {"identifier": "cleanupComponent", "parameters": "(@NonNull Component component)", "modifiers": "private", "return": "void", "signature": "void cleanupComponent(@NonNull Component component)", "full_signature": "private void cleanupComponent(@NonNull Component component)", "class_method_signature": "ComponentGroup.cleanupComponent(@NonNull Component component)", "testcase": false, "constructor": false}], "file": "bento/src/main/java/com/yelp/android/bento/core/ComponentGroup.java"}, "focal_method": {"identifier": "addComponent", "parameters": "(@NonNull Component component)", "modifiers": "@NonNull public", "return": "ComponentGroup", "body": "@NonNull\n    public ComponentGroup addComponent(@NonNull Component component) {\n        return addComponent(getSize(), component);\n    }", "signature": "ComponentGroup addComponent(@NonNull Component component)", "full_signature": "@NonNull public ComponentGroup addComponent(@NonNull Component component)", "class_method_signature": "ComponentGroup.addComponent(@NonNull Component component)", "testcase": false, "constructor": false, "invocations": ["addComponent", "getSize"]}, "repository": {"repo_id": 181976854, "url": "https://github.com/Yelp/bento", "language": "Java", "is_fork": false, "fork_count": 24, "stargazer_count": 277, "size": 4887, "license": "licensed"}}