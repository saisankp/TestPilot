{"test_class": {"identifier": "SerializerProcessorTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/nextdoor/bender/serializer/SerializerProcessorTest.java"}, "test_case": {"identifier": "testStatsLoggingOnError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testStatsLoggingOnError() {\n    DummySerializer serializer = mock(DummySerializer.class);\n    SerializerProcessor processor = new SerializerProcessor(serializer);\n\n    doThrow(new RuntimeException()).when(serializer).serialize(\"foo\");\n\n    /*\n     * Mock the Stat object\n     */\n    Stat runtimeStat = mock(Stat.class);\n    Stat successStat = mock(Stat.class);\n    Stat errorStat = mock(Stat.class);\n\n    processor.setRuntimeStat(runtimeStat);\n    processor.setSuccessCountStat(successStat);\n    processor.setErrorCountStat(errorStat);\n\n    try {\n      processor.serialize(\"foo\");\n    } catch (Exception e) {\n      // expected\n    }\n\n    /*\n     * Verify start, stop are called, increment error count and never increment success count.\n     */\n    verify(runtimeStat, times(1)).start();\n    verify(runtimeStat, times(1)).stop();\n    verify(successStat, never()).increment();\n    verify(errorStat, times(1)).increment();\n  }", "signature": "void testStatsLoggingOnError()", "full_signature": "@Test public void testStatsLoggingOnError()", "class_method_signature": "SerializerProcessorTest.testStatsLoggingOnError()", "testcase": true, "constructor": false, "invocations": ["mock", "serialize", "when", "doThrow", "mock", "mock", "mock", "setRuntimeStat", "setSuccessCountStat", "setErrorCountStat", "serialize", "start", "verify", "times", "stop", "verify", "times", "increment", "verify", "never", "increment", "verify", "times"]}, "focal_class": {"identifier": "SerializerProcessor", "superclass": "extends MonitoredProcess", "interfaces": "", "fields": [{"original_string": "private Serializer serializer;", "modifier": "private", "type": "Serializer", "declarator": "serializer", "var_name": "serializer"}], "methods": [{"identifier": "SerializerProcessor", "parameters": "(Serializer serializer)", "modifiers": "public", "return": "", "signature": " SerializerProcessor(Serializer serializer)", "full_signature": "public  SerializerProcessor(Serializer serializer)", "class_method_signature": "SerializerProcessor.SerializerProcessor(Serializer serializer)", "testcase": false, "constructor": true}, {"identifier": "SerializerProcessor", "parameters": "(Class<? extends SerializerFactory> clazz)", "modifiers": "public", "return": "", "signature": " SerializerProcessor(Class<? extends SerializerFactory> clazz)", "full_signature": "public  SerializerProcessor(Class<? extends SerializerFactory> clazz)", "class_method_signature": "SerializerProcessor.SerializerProcessor(Class<? extends SerializerFactory> clazz)", "testcase": false, "constructor": true}, {"identifier": "serialize", "parameters": "(Object obj)", "modifiers": "public", "return": "String", "signature": "String serialize(Object obj)", "full_signature": "public String serialize(Object obj)", "class_method_signature": "SerializerProcessor.serialize(Object obj)", "testcase": false, "constructor": false}, {"identifier": "getSerializer", "parameters": "()", "modifiers": "public", "return": "Serializer", "signature": "Serializer getSerializer()", "full_signature": "public Serializer getSerializer()", "class_method_signature": "SerializerProcessor.getSerializer()", "testcase": false, "constructor": false}, {"identifier": "setSerializer", "parameters": "(Serializer serializer)", "modifiers": "public", "return": "void", "signature": "void setSerializer(Serializer serializer)", "full_signature": "public void setSerializer(Serializer serializer)", "class_method_signature": "SerializerProcessor.setSerializer(Serializer serializer)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/nextdoor/bender/serializer/SerializerProcessor.java"}, "focal_method": {"identifier": "serialize", "parameters": "(Object obj)", "modifiers": "public", "return": "String", "body": "public String serialize(Object obj) throws SerializationException {\n    this.getRuntimeStat().start();\n    String serialized;\n    try {\n      serialized = this.serializer.serialize(obj);\n    } catch (Exception e) {\n      this.getErrorCountStat().increment();\n      throw new SerializationException(e);\n    } finally {\n      this.getRuntimeStat().stop();\n    }\n\n    this.getSuccessCountStat().increment();\n\n    return serialized;\n  }", "signature": "String serialize(Object obj)", "full_signature": "public String serialize(Object obj)", "class_method_signature": "SerializerProcessor.serialize(Object obj)", "testcase": false, "constructor": false, "invocations": ["start", "getRuntimeStat", "serialize", "increment", "getErrorCountStat", "stop", "getRuntimeStat", "increment", "getSuccessCountStat"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}