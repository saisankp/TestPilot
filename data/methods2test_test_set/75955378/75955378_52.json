{"test_class": {"identifier": "GelfOperationTest", "superclass": "extends OperationTest", "interfaces": "", "fields": [], "file": "operations/src/test/java/com/nextdoor/bender/operation/gelf/GelfOperationTest.java"}, "test_case": {"identifier": "testEventTimestamp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEventTimestamp() throws JsonSyntaxException,  IOException {\n    JsonParser parser = new JsonParser();\n\n    JsonElement input = parser.parse(getResourceString(\"prefixed_input.json\"));\n\n    DummpyEvent devent = new DummpyEvent();\n    devent.payload = input.getAsJsonObject();\n\n    GelfOperation op = new GelfOperation(new ArrayList<>());\n\n    InternalEvent ievent = new InternalEvent(\"\", null, 1234567890123L);\n    ievent.setEventObj(devent);\n    ievent.setEventTime(1522686301055L);\n    op.perform(ievent);\n\n    assertTrue(devent.payload.toString().contains(\"\\\"timestamp\\\":1.522686301055E9\"));\n  }", "signature": "void testEventTimestamp()", "full_signature": "@Test public void testEventTimestamp()", "class_method_signature": "GelfOperationTest.testEventTimestamp()", "testcase": true, "constructor": false, "invocations": ["parse", "getResourceString", "getAsJsonObject", "setEventObj", "setEventTime", "perform", "assertTrue", "contains", "toString"]}, "focal_class": {"identifier": "GelfOperation", "superclass": "", "interfaces": "implements EventOperation", "fields": [{"original_string": "private final FlattenOperation flattenOp;", "modifier": "private final", "type": "FlattenOperation", "declarator": "flattenOp", "var_name": "flattenOp"}, {"original_string": "private final SubstitutionOperation subOp;", "modifier": "private final", "type": "SubstitutionOperation", "declarator": "subOp", "var_name": "subOp"}, {"original_string": "private static final Set<String> GELF_FIELDS = new HashSet<>(Arrays.asList(\"version\", \"host\",\n      \"short_message\", \"full_message\", \"timestamp\", \"level\", \"facility\", \"line\", \"file\"));", "modifier": "private static final", "type": "Set<String>", "declarator": "GELF_FIELDS = new HashSet<>(Arrays.asList(\"version\", \"host\",\n      \"short_message\", \"full_message\", \"timestamp\", \"level\", \"facility\", \"line\", \"file\"))", "var_name": "GELF_FIELDS"}], "methods": [{"identifier": "GelfOperation", "parameters": "(List<Substitution> substitutions)", "modifiers": "public", "return": "", "signature": " GelfOperation(List<Substitution> substitutions)", "full_signature": "public  GelfOperation(List<Substitution> substitutions)", "class_method_signature": "GelfOperation.GelfOperation(List<Substitution> substitutions)", "testcase": false, "constructor": true}, {"identifier": "prefix", "parameters": "(InternalEvent ievent)", "modifiers": "protected", "return": "InternalEvent", "signature": "InternalEvent prefix(InternalEvent ievent)", "full_signature": "protected InternalEvent prefix(InternalEvent ievent)", "class_method_signature": "GelfOperation.prefix(InternalEvent ievent)", "testcase": false, "constructor": false}, {"identifier": "setTimestamp", "parameters": "(InternalEvent ievent)", "modifiers": "protected", "return": "InternalEvent", "signature": "InternalEvent setTimestamp(InternalEvent ievent)", "full_signature": "protected InternalEvent setTimestamp(InternalEvent ievent)", "class_method_signature": "GelfOperation.setTimestamp(InternalEvent ievent)", "testcase": false, "constructor": false}, {"identifier": "perform", "parameters": "(InternalEvent ievent)", "modifiers": "public", "return": "InternalEvent", "signature": "InternalEvent perform(InternalEvent ievent)", "full_signature": "public InternalEvent perform(InternalEvent ievent)", "class_method_signature": "GelfOperation.perform(InternalEvent ievent)", "testcase": false, "constructor": false}], "file": "operations/src/main/java/com/nextdoor/bender/operation/gelf/GelfOperation.java"}, "focal_method": {"identifier": "perform", "parameters": "(InternalEvent ievent)", "modifiers": "public", "return": "InternalEvent", "body": "public InternalEvent perform(InternalEvent ievent) {\n    /*\n     * Substitute\n     */\n    ievent = subOp.perform(ievent);\n\n    /*\n     * Flatten\n     */\n    ievent = flattenOp.perform(ievent);\n\n    /*\n     * Prefix\n     */\n    ievent = prefix(ievent);\n\n    /*\n     * Rewrite the timestamp field from the Internal Event time\n     */\n    ievent = setTimestamp(ievent);\n\n    return ievent;\n  }", "signature": "InternalEvent perform(InternalEvent ievent)", "full_signature": "public InternalEvent perform(InternalEvent ievent)", "class_method_signature": "GelfOperation.perform(InternalEvent ievent)", "testcase": false, "constructor": false, "invocations": ["perform", "perform", "prefix", "setTimestamp"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}