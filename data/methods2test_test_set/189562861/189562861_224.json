{"test_class": {"identifier": "InternalThreadLocalTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int THREADS = 10;", "modifier": "private static final", "type": "int", "declarator": "THREADS = 10", "var_name": "THREADS"}, {"original_string": "private static final int PERFORMANCE_THREAD_COUNT = 1000;", "modifier": "private static final", "type": "int", "declarator": "PERFORMANCE_THREAD_COUNT = 1000", "var_name": "PERFORMANCE_THREAD_COUNT"}, {"original_string": "private static final int GET_COUNT = 1000000;", "modifier": "private static final", "type": "int", "declarator": "GET_COUNT = 1000000", "var_name": "GET_COUNT"}], "file": "dubbo-common/src/test/java/com/alibaba/dubbo/common/threadlocal/InternalThreadLocalTest.java"}, "test_case": {"identifier": "testRemoveAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveAll() throws InterruptedException {\n        final InternalThreadLocal<Integer> internalThreadLocal = new InternalThreadLocal<Integer>();\n        internalThreadLocal.set(1);\n        Assert.assertTrue(\"set failed\", internalThreadLocal.get() == 1);\n\n        final InternalThreadLocal<String> internalThreadLocalString = new InternalThreadLocal<String>();\n        internalThreadLocalString.set(\"value\");\n        Assert.assertTrue(\"set failed\", \"value\".equals(internalThreadLocalString.get()));\n\n        InternalThreadLocal.removeAll();\n        Assert.assertTrue(\"removeAll failed!\", internalThreadLocal.get() == null);\n        Assert.assertTrue(\"removeAll failed!\", internalThreadLocalString.get() == null);\n    }", "signature": "void testRemoveAll()", "full_signature": "@Test public void testRemoveAll()", "class_method_signature": "InternalThreadLocalTest.testRemoveAll()", "testcase": true, "constructor": false, "invocations": ["set", "assertTrue", "get", "set", "assertTrue", "equals", "get", "removeAll", "assertTrue", "get", "assertTrue", "get"]}, "focal_class": {"identifier": "InternalThreadLocal", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int variablesToRemoveIndex = InternalThreadLocalMap.nextVariableIndex();", "modifier": "private static final", "type": "int", "declarator": "variablesToRemoveIndex = InternalThreadLocalMap.nextVariableIndex()", "var_name": "variablesToRemoveIndex"}, {"original_string": "private final int index;", "modifier": "private final", "type": "int", "declarator": "index", "var_name": "index"}], "methods": [{"identifier": "InternalThreadLocal", "parameters": "()", "modifiers": "public", "return": "", "signature": " InternalThreadLocal()", "full_signature": "public  InternalThreadLocal()", "class_method_signature": "InternalThreadLocal.InternalThreadLocal()", "testcase": false, "constructor": true}, {"identifier": "removeAll", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "signature": "void removeAll()", "full_signature": "@SuppressWarnings(\"unchecked\") public static void removeAll()", "class_method_signature": "InternalThreadLocal.removeAll()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int size()", "full_signature": "public static int size()", "class_method_signature": "InternalThreadLocal.size()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void destroy()", "full_signature": "public static void destroy()", "class_method_signature": "InternalThreadLocal.destroy()", "testcase": false, "constructor": false}, {"identifier": "addToVariablesToRemove", "parameters": "(InternalThreadLocalMap threadLocalMap, InternalThreadLocal<?> variable)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "void", "signature": "void addToVariablesToRemove(InternalThreadLocalMap threadLocalMap, InternalThreadLocal<?> variable)", "full_signature": "@SuppressWarnings(\"unchecked\") private static void addToVariablesToRemove(InternalThreadLocalMap threadLocalMap, InternalThreadLocal<?> variable)", "class_method_signature": "InternalThreadLocal.addToVariablesToRemove(InternalThreadLocalMap threadLocalMap, InternalThreadLocal<?> variable)", "testcase": false, "constructor": false}, {"identifier": "removeFromVariablesToRemove", "parameters": "(InternalThreadLocalMap threadLocalMap, InternalThreadLocal<?> variable)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "void", "signature": "void removeFromVariablesToRemove(InternalThreadLocalMap threadLocalMap, InternalThreadLocal<?> variable)", "full_signature": "@SuppressWarnings(\"unchecked\") private static void removeFromVariablesToRemove(InternalThreadLocalMap threadLocalMap, InternalThreadLocal<?> variable)", "class_method_signature": "InternalThreadLocal.removeFromVariablesToRemove(InternalThreadLocalMap threadLocalMap, InternalThreadLocal<?> variable)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public final", "return": "V", "signature": "V get()", "full_signature": "@SuppressWarnings(\"unchecked\") public final V get()", "class_method_signature": "InternalThreadLocal.get()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(InternalThreadLocalMap threadLocalMap)", "modifiers": "private", "return": "V", "signature": "V initialize(InternalThreadLocalMap threadLocalMap)", "full_signature": "private V initialize(InternalThreadLocalMap threadLocalMap)", "class_method_signature": "InternalThreadLocal.initialize(InternalThreadLocalMap threadLocalMap)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(V value)", "modifiers": "public final", "return": "void", "signature": "void set(V value)", "full_signature": "public final void set(V value)", "class_method_signature": "InternalThreadLocal.set(V value)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public final", "return": "void", "signature": "void remove()", "full_signature": "@SuppressWarnings(\"unchecked\") public final void remove()", "class_method_signature": "InternalThreadLocal.remove()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(InternalThreadLocalMap threadLocalMap)", "modifiers": "@SuppressWarnings(\"unchecked\") public final", "return": "void", "signature": "void remove(InternalThreadLocalMap threadLocalMap)", "full_signature": "@SuppressWarnings(\"unchecked\") public final void remove(InternalThreadLocalMap threadLocalMap)", "class_method_signature": "InternalThreadLocal.remove(InternalThreadLocalMap threadLocalMap)", "testcase": false, "constructor": false}, {"identifier": "initialValue", "parameters": "()", "modifiers": "protected", "return": "V", "signature": "V initialValue()", "full_signature": "protected V initialValue()", "class_method_signature": "InternalThreadLocal.initialValue()", "testcase": false, "constructor": false}, {"identifier": "onRemoval", "parameters": "(@SuppressWarnings(\"unused\") V value)", "modifiers": "protected", "return": "void", "signature": "void onRemoval(@SuppressWarnings(\"unused\") V value)", "full_signature": "protected void onRemoval(@SuppressWarnings(\"unused\") V value)", "class_method_signature": "InternalThreadLocal.onRemoval(@SuppressWarnings(\"unused\") V value)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/com/alibaba/dubbo/common/threadlocal/InternalThreadLocal.java"}, "focal_method": {"identifier": "removeAll", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    public static void removeAll() {\n        InternalThreadLocalMap threadLocalMap = InternalThreadLocalMap.getIfSet();\n        if (threadLocalMap == null) {\n            return;\n        }\n\n        try {\n            Object v = threadLocalMap.indexedVariable(variablesToRemoveIndex);\n            if (v != null && v != InternalThreadLocalMap.UNSET) {\n                Set<InternalThreadLocal<?>> variablesToRemove = (Set<InternalThreadLocal<?>>) v;\n                InternalThreadLocal<?>[] variablesToRemoveArray =\n                        variablesToRemove.toArray(new InternalThreadLocal[variablesToRemove.size()]);\n                for (InternalThreadLocal<?> tlv : variablesToRemoveArray) {\n                    tlv.remove(threadLocalMap);\n                }\n            }\n        } finally {\n            InternalThreadLocalMap.remove();\n        }\n    }", "signature": "void removeAll()", "full_signature": "@SuppressWarnings(\"unchecked\") public static void removeAll()", "class_method_signature": "InternalThreadLocal.removeAll()", "testcase": false, "constructor": false, "invocations": ["getIfSet", "indexedVariable", "toArray", "size", "remove", "remove"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}