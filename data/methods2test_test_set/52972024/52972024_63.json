{"test_class": {"identifier": "FilesystemFacadeImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final IFilesystemFacade filesystemFacade = new FilesystemFacadeImpl();", "modifier": "private final", "type": "IFilesystemFacade", "declarator": "filesystemFacade = new FilesystemFacadeImpl()", "var_name": "filesystemFacade"}], "file": "CoreFeatures/FeatureLoader/FilesystemFacade/src/test/java/info/smart_tools/smartactors/feature_loader/filesystem_facade/FilesystemFacadeImplTest.java"}, "test_case": {"identifier": "Should_listFiles_listFilesMatchingGivenFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_listFiles_listFilesMatchingGivenFilter()\n            throws Exception {\n        java.nio.file.Path dirPath = Files.createTempDirectory(\"directory-with-files-\");\n        Files.createDirectory(dirPath.resolve(\"1a\"));\n        Files.createFile(dirPath.resolve(\"2a\"));\n        Files.createFile(dirPath.resolve(\"b\"));\n        Collection<IPath> paths = filesystemFacade.listFiles(\n                new Path(dirPath),\n                path -> path.getPath().endsWith(\"a\"));\n\n        assertNotNull(paths);\n        assertEquals(1, paths.size());\n        assertEquals(dirPath.resolve(\"2a\").toString(), paths.iterator().next().getPath());\n    }", "signature": "void Should_listFiles_listFilesMatchingGivenFilter()", "full_signature": "@Test public void Should_listFiles_listFilesMatchingGivenFilter()", "class_method_signature": "FilesystemFacadeImplTest.Should_listFiles_listFilesMatchingGivenFilter()", "testcase": true, "constructor": false, "invocations": ["createTempDirectory", "createDirectory", "resolve", "createFile", "resolve", "createFile", "resolve", "listFiles", "endsWith", "getPath", "assertNotNull", "assertEquals", "size", "assertEquals", "toString", "resolve", "getPath", "next", "iterator"]}, "focal_class": {"identifier": "FilesystemFacadeImpl", "superclass": "", "interfaces": "implements IFilesystemFacade", "fields": [], "methods": [{"identifier": "listSubdirectories", "parameters": "(final IPath directory)", "modifiers": "@Override public", "return": "Collection<IPath>", "signature": "Collection<IPath> listSubdirectories(final IPath directory)", "full_signature": "@Override public Collection<IPath> listSubdirectories(final IPath directory)", "class_method_signature": "FilesystemFacadeImpl.listSubdirectories(final IPath directory)", "testcase": false, "constructor": false}, {"identifier": "listFiles", "parameters": "(final IPath directory, final IPathFilter filter)", "modifiers": "@Override public", "return": "Collection<IPath>", "signature": "Collection<IPath> listFiles(final IPath directory, final IPathFilter filter)", "full_signature": "@Override public Collection<IPath> listFiles(final IPath directory, final IPathFilter filter)", "class_method_signature": "FilesystemFacadeImpl.listFiles(final IPath directory, final IPathFilter filter)", "testcase": false, "constructor": false}, {"identifier": "joinPaths", "parameters": "(final IPath first, final IPath... rest)", "modifiers": "@Override public", "return": "IPath", "signature": "IPath joinPaths(final IPath first, final IPath... rest)", "full_signature": "@Override public IPath joinPaths(final IPath first, final IPath... rest)", "class_method_signature": "FilesystemFacadeImpl.joinPaths(final IPath first, final IPath... rest)", "testcase": false, "constructor": false}, {"identifier": "readToString", "parameters": "(final IPath path)", "modifiers": "@Override public", "return": "String", "signature": "String readToString(final IPath path)", "full_signature": "@Override public String readToString(final IPath path)", "class_method_signature": "FilesystemFacadeImpl.readToString(final IPath path)", "testcase": false, "constructor": false}], "file": "CoreFeatures/FeatureLoader/FilesystemFacade/src/main/java/info/smart_tools/smartactors/feature_loader/filesystem_facade/FilesystemFacadeImpl.java"}, "focal_method": {"identifier": "listFiles", "parameters": "(final IPath directory, final IPathFilter filter)", "modifiers": "@Override public", "return": "Collection<IPath>", "body": "@Override\n    public Collection<IPath> listFiles(final IPath directory, final IPathFilter filter) throws IOException {\n        File dir = new File(directory.getPath());\n\n        if (!dir.isDirectory()) {\n            throw new NotDirectoryException(directory.getPath());\n        }\n\n        File[] files = dir.listFiles(file -> file.isFile() && filter.accept(new Path(file)));\n        IPath[] paths = new IPath[files.length];\n\n        for (int i = 0; i < files.length; i++) {\n            paths[i] = new Path(files[i]);\n        }\n\n        return Arrays.asList(paths);\n    }", "signature": "Collection<IPath> listFiles(final IPath directory, final IPathFilter filter)", "full_signature": "@Override public Collection<IPath> listFiles(final IPath directory, final IPathFilter filter)", "class_method_signature": "FilesystemFacadeImpl.listFiles(final IPath directory, final IPathFilter filter)", "testcase": false, "constructor": false, "invocations": ["getPath", "isDirectory", "getPath", "listFiles", "isFile", "accept", "asList"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}