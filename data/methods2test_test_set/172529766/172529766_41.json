{"test_class": {"identifier": "PageServiceTest", "superclass": "extends PrimeTimeTest", "interfaces": "", "fields": [{"original_string": "private PageService pageService;", "modifier": "private", "type": "PageService", "declarator": "pageService", "var_name": "pageService"}, {"original_string": "private PlaylistService playlistService;", "modifier": "private", "type": "PlaylistService", "declarator": "playlistService", "var_name": "playlistService"}], "file": "common/app/src/test/java/com/sap/primetime/api/PageServiceTest.java"}, "test_case": {"identifier": "testGetPage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetPage() throws Exception {\n\t\tPage page = pageService.createPage(new Page(\"p1\"));\n\n\t\tassertNotNull(pageService.getPage(page.getId()));\n\t\tassertEquals(\"p1\", pageService.getPage(page.getId()).getName());\n\t}", "signature": "void testGetPage()", "full_signature": "@Test public void testGetPage()", "class_method_signature": "PageServiceTest.testGetPage()", "testcase": true, "constructor": false, "invocations": ["createPage", "assertNotNull", "getPage", "getId", "assertEquals", "getName", "getPage", "getId"]}, "focal_class": {"identifier": "PageService", "superclass": "extends BasicService", "interfaces": "implements OwnerAPISupport<Page>", "fields": [{"original_string": "private Map<Long, Page> drafts = new HashMap<>();", "modifier": "private", "type": "Map<Long, Page>", "declarator": "drafts = new HashMap<>()", "var_name": "drafts"}], "methods": [{"identifier": "getPages", "parameters": "(@QueryParam(\"userId\") String userId)", "modifiers": "@GET @Path(\"/pages\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Page>", "signature": "List<Page> getPages(@QueryParam(\"userId\") String userId)", "full_signature": "@GET @Path(\"/pages\") @Produces(MediaType.APPLICATION_JSON) public List<Page> getPages(@QueryParam(\"userId\") String userId)", "class_method_signature": "PageService.getPages(@QueryParam(\"userId\") String userId)", "testcase": false, "constructor": false}, {"identifier": "getPageCatalog", "parameters": "()", "modifiers": "@GET @Path(\"/catalog\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Page>", "signature": "List<Page> getPageCatalog()", "full_signature": "@GET @Path(\"/catalog\") @Produces(MediaType.APPLICATION_JSON) public List<Page> getPageCatalog()", "class_method_signature": "PageService.getPageCatalog()", "testcase": false, "constructor": false}, {"identifier": "getAdvertisedPages", "parameters": "(@DefaultValue(\"0\") @QueryParam(\"maxResults\") int maxResults)", "modifiers": "@GET @Path(\"/advertisedpages\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Page>", "signature": "List<Page> getAdvertisedPages(@DefaultValue(\"0\") @QueryParam(\"maxResults\") int maxResults)", "full_signature": "@GET @Path(\"/advertisedpages\") @Produces(MediaType.APPLICATION_JSON) public List<Page> getAdvertisedPages(@DefaultValue(\"0\") @QueryParam(\"maxResults\") int maxResults)", "class_method_signature": "PageService.getAdvertisedPages(@DefaultValue(\"0\") @QueryParam(\"maxResults\") int maxResults)", "testcase": false, "constructor": false}, {"identifier": "getPage", "parameters": "(@PathParam(\"pageId\") long pageId)", "modifiers": "@GET @Path(\"/pages/{pageId}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page getPage(@PathParam(\"pageId\") long pageId)", "full_signature": "@GET @Path(\"/pages/{pageId}\") @Produces(MediaType.APPLICATION_JSON) public Page getPage(@PathParam(\"pageId\") long pageId)", "class_method_signature": "PageService.getPage(@PathParam(\"pageId\") long pageId)", "testcase": false, "constructor": false}, {"identifier": "updatePage", "parameters": "(@PathParam(\"pageId\") long pageId, Page pageData)", "modifiers": "@PUT @Path(\"/pages/{pageId}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page updatePage(@PathParam(\"pageId\") long pageId, Page pageData)", "full_signature": "@PUT @Path(\"/pages/{pageId}\") @Produces(MediaType.APPLICATION_JSON) public Page updatePage(@PathParam(\"pageId\") long pageId, Page pageData)", "class_method_signature": "PageService.updatePage(@PathParam(\"pageId\") long pageId, Page pageData)", "testcase": false, "constructor": false}, {"identifier": "updateTemplateValues", "parameters": "(@PathParam(\"pageId\") long pageId, Page pageData)", "modifiers": "@PUT @Path(\"/pages/{pageId}/templatevalues\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page updateTemplateValues(@PathParam(\"pageId\") long pageId, Page pageData)", "full_signature": "@PUT @Path(\"/pages/{pageId}/templatevalues\") @Produces(MediaType.APPLICATION_JSON) public Page updateTemplateValues(@PathParam(\"pageId\") long pageId, Page pageData)", "class_method_signature": "PageService.updateTemplateValues(@PathParam(\"pageId\") long pageId, Page pageData)", "testcase": false, "constructor": false}, {"identifier": "createPage", "parameters": "(Page page)", "modifiers": "@POST @Path(\"/pages\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page createPage(Page page)", "full_signature": "@POST @Path(\"/pages\") @Consumes(MediaType.APPLICATION_JSON) public Page createPage(Page page)", "class_method_signature": "PageService.createPage(Page page)", "testcase": false, "constructor": false}, {"identifier": "uploadScreenshot", "parameters": "(@PathParam(\"pageId\") long pageId)", "modifiers": "@POST @Path(\"/pages/{pageId}/screenshot\") public", "return": "Response", "signature": "Response uploadScreenshot(@PathParam(\"pageId\") long pageId)", "full_signature": "@POST @Path(\"/pages/{pageId}/screenshot\") public Response uploadScreenshot(@PathParam(\"pageId\") long pageId)", "class_method_signature": "PageService.uploadScreenshot(@PathParam(\"pageId\") long pageId)", "testcase": false, "constructor": false}, {"identifier": "deleteScreenshot", "parameters": "(@PathParam(\"pageId\") long pageId)", "modifiers": "@DELETE @Path(\"/pages/{pageId}/screenshot\") public", "return": "Response", "signature": "Response deleteScreenshot(@PathParam(\"pageId\") long pageId)", "full_signature": "@DELETE @Path(\"/pages/{pageId}/screenshot\") public Response deleteScreenshot(@PathParam(\"pageId\") long pageId)", "class_method_signature": "PageService.deleteScreenshot(@PathParam(\"pageId\") long pageId)", "testcase": false, "constructor": false}, {"identifier": "getDraft", "parameters": "(@PathParam(\"pageId\") long pageId)", "modifiers": "@GET @Path(\"/drafts/{pageId}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page getDraft(@PathParam(\"pageId\") long pageId)", "full_signature": "@GET @Path(\"/drafts/{pageId}\") @Produces(MediaType.APPLICATION_JSON) public Page getDraft(@PathParam(\"pageId\") long pageId)", "class_method_signature": "PageService.getDraft(@PathParam(\"pageId\") long pageId)", "testcase": false, "constructor": false}, {"identifier": "setDraft", "parameters": "(@PathParam(\"pageId\") long pageId, Page page)", "modifiers": "@PUT @Path(\"/drafts/{pageId}\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page setDraft(@PathParam(\"pageId\") long pageId, Page page)", "full_signature": "@PUT @Path(\"/drafts/{pageId}\") @Consumes(MediaType.APPLICATION_JSON) public Page setDraft(@PathParam(\"pageId\") long pageId, Page page)", "class_method_signature": "PageService.setDraft(@PathParam(\"pageId\") long pageId, Page page)", "testcase": false, "constructor": false}, {"identifier": "deleteDraft", "parameters": "(@PathParam(\"pageId\") long pageId)", "modifiers": "@DELETE @Path(\"/drafts/{pageId}\") public", "return": "Response", "signature": "Response deleteDraft(@PathParam(\"pageId\") long pageId)", "full_signature": "@DELETE @Path(\"/drafts/{pageId}\") public Response deleteDraft(@PathParam(\"pageId\") long pageId)", "class_method_signature": "PageService.deleteDraft(@PathParam(\"pageId\") long pageId)", "testcase": false, "constructor": false}, {"identifier": "sanitizePageData", "parameters": "(Page page)", "modifiers": "private", "return": "void", "signature": "void sanitizePageData(Page page)", "full_signature": "private void sanitizePageData(Page page)", "class_method_signature": "PageService.sanitizePageData(Page page)", "testcase": false, "constructor": false}, {"identifier": "deletePage", "parameters": "(@PathParam(\"pageId\") long pageId)", "modifiers": "@DELETE @Path(\"/pages/{pageId}\") public", "return": "Response", "signature": "Response deletePage(@PathParam(\"pageId\") long pageId)", "full_signature": "@DELETE @Path(\"/pages/{pageId}\") public Response deletePage(@PathParam(\"pageId\") long pageId)", "class_method_signature": "PageService.deletePage(@PathParam(\"pageId\") long pageId)", "testcase": false, "constructor": false}, {"identifier": "copyPage", "parameters": "(@PathParam(\"pageId\") long pageId, Page newPage)", "modifiers": "@POST @Path(\"/pages/{pageId}/copy\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page copyPage(@PathParam(\"pageId\") long pageId, Page newPage)", "full_signature": "@POST @Path(\"/pages/{pageId}/copy\") @Consumes(MediaType.APPLICATION_JSON) public Page copyPage(@PathParam(\"pageId\") long pageId, Page newPage)", "class_method_signature": "PageService.copyPage(@PathParam(\"pageId\") long pageId, Page newPage)", "testcase": false, "constructor": false}, {"identifier": "getReferences", "parameters": "(@PathParam(\"pageId\") long pageId)", "modifiers": "@GET @Path(\"/pages/{pageId}/references\") @Produces(MediaType.APPLICATION_JSON) public", "return": "PageReferences", "signature": "PageReferences getReferences(@PathParam(\"pageId\") long pageId)", "full_signature": "@GET @Path(\"/pages/{pageId}/references\") @Produces(MediaType.APPLICATION_JSON) public PageReferences getReferences(@PathParam(\"pageId\") long pageId)", "class_method_signature": "PageService.getReferences(@PathParam(\"pageId\") long pageId)", "testcase": false, "constructor": false}, {"identifier": "addOwners", "parameters": "(@PathParam(\"pageId\") long pageId, Owner[] ownerData)", "modifiers": "@Override @POST @Path(\"/pages/{pageId}/owners\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page addOwners(@PathParam(\"pageId\") long pageId, Owner[] ownerData)", "full_signature": "@Override @POST @Path(\"/pages/{pageId}/owners\") @Consumes(MediaType.APPLICATION_JSON) public Page addOwners(@PathParam(\"pageId\") long pageId, Owner[] ownerData)", "class_method_signature": "PageService.addOwners(@PathParam(\"pageId\") long pageId, Owner[] ownerData)", "testcase": false, "constructor": false}, {"identifier": "updateOwner", "parameters": "(@PathParam(\"pageId\") long pageId, @PathParam(\"ownerId\") long ownerId, Owner owner)", "modifiers": "@Override @PUT @Path(\"/pages/{pageId}/owners/{ownerId}\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page updateOwner(@PathParam(\"pageId\") long pageId, @PathParam(\"ownerId\") long ownerId, Owner owner)", "full_signature": "@Override @PUT @Path(\"/pages/{pageId}/owners/{ownerId}\") @Consumes(MediaType.APPLICATION_JSON) public Page updateOwner(@PathParam(\"pageId\") long pageId, @PathParam(\"ownerId\") long ownerId, Owner owner)", "class_method_signature": "PageService.updateOwner(@PathParam(\"pageId\") long pageId, @PathParam(\"ownerId\") long ownerId, Owner owner)", "testcase": false, "constructor": false}, {"identifier": "deleteOwner", "parameters": "(@PathParam(\"pageId\") long pageId, @PathParam(\"ownerId\") long ownerId)", "modifiers": "@Override @DELETE @Path(\"/pages/{pageId}/owners/{ownerId}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Page", "signature": "Page deleteOwner(@PathParam(\"pageId\") long pageId, @PathParam(\"ownerId\") long ownerId)", "full_signature": "@Override @DELETE @Path(\"/pages/{pageId}/owners/{ownerId}\") @Produces(MediaType.APPLICATION_JSON) public Page deleteOwner(@PathParam(\"pageId\") long pageId, @PathParam(\"ownerId\") long ownerId)", "class_method_signature": "PageService.deleteOwner(@PathParam(\"pageId\") long pageId, @PathParam(\"ownerId\") long ownerId)", "testcase": false, "constructor": false}], "file": "common/app/src/main/java/com/sap/primetime/api/PageService.java"}, "focal_method": {"identifier": "getPage", "parameters": "(@PathParam(\"pageId\") long pageId)", "modifiers": "@GET @Path(\"/pages/{pageId}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Page", "body": "@GET\n\t@Path(\"/pages/{pageId}\")\n\t@Produces(MediaType.APPLICATION_JSON)\n\tpublic Page getPage(@PathParam(\"pageId\") long pageId) {\n\t\treturn getExistingPage(pageId, false);\n\t}", "signature": "Page getPage(@PathParam(\"pageId\") long pageId)", "full_signature": "@GET @Path(\"/pages/{pageId}\") @Produces(MediaType.APPLICATION_JSON) public Page getPage(@PathParam(\"pageId\") long pageId)", "class_method_signature": "PageService.getPage(@PathParam(\"pageId\") long pageId)", "testcase": false, "constructor": false, "invocations": ["getExistingPage"]}, "repository": {"repo_id": 172529766, "url": "https://github.com/SAP/cloud-primetime", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 25, "size": 7529, "license": "licensed"}}