{"test_class": {"identifier": "ScorerTest", "superclass": "", "interfaces": "", "fields": [], "file": "catwatch-backend/src/test/java/org/zalando/catwatch/backend/model/util/ScorerTest.java"}, "test_case": {"identifier": "testScore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testScore() throws Exception {\n\n        // given\n        Scorer scorer = new Scorer();\n        scorer.setScoringProject(\"function(project) { return project.forksCount > 0 ? ( \"\n                + \"project.starsCount + project.forksCount + project.contributorsCount + \"\n                + \"project.commitsCount / 100 ) : 0 }\");\n\n        // when\n        Project project = new ProjectBuilder().starsCount(20).forksCount(10).contributorsCount(5).commitsCount(230)\n                .create();\n\n        // then\n        assertEquals(20 + 10 + 5 + 2, scorer.score(project));\n\n        // when\n        project.setForksCount(0);\n\n        // then\n        assertEquals(0, scorer.score(project));\n    }", "signature": "void testScore()", "full_signature": "@Test public void testScore()", "class_method_signature": "ScorerTest.testScore()", "testcase": true, "constructor": false, "invocations": ["setScoringProject", "create", "commitsCount", "contributorsCount", "forksCount", "starsCount", "assertEquals", "score", "setForksCount", "assertEquals", "score"]}, "focal_class": {"identifier": "Scorer", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Value(\"${scoring.project}\")\n    private String scoringProject;", "modifier": "@Value(\"${scoring.project}\")\n    private", "type": "String", "declarator": "scoringProject", "var_name": "scoringProject"}], "methods": [{"identifier": "score", "parameters": "(Project project)", "modifiers": "public", "return": "int", "signature": "int score(Project project)", "full_signature": "public int score(Project project)", "class_method_signature": "Scorer.score(Project project)", "testcase": false, "constructor": false}, {"identifier": "setScoringProject", "parameters": "(String scoringProject)", "modifiers": "public", "return": "void", "signature": "void setScoringProject(String scoringProject)", "full_signature": "public void setScoringProject(String scoringProject)", "class_method_signature": "Scorer.setScoringProject(String scoringProject)", "testcase": false, "constructor": false}], "file": "catwatch-backend/src/main/java/org/zalando/catwatch/backend/model/util/Scorer.java"}, "focal_method": {"identifier": "score", "parameters": "(Project project)", "modifiers": "public", "return": "int", "body": "public int score(Project project) {\n        \n        String jsCode = \"\";\n        jsCode += \"var scoring = \" + scoringProject + \";\\n\";\n        jsCode += \"result.value = scoring(project);\";\n        \n        return ((Number) newExecutor(jsCode).bind(\"project\", project).execute()).intValue();\n    }", "signature": "int score(Project project)", "full_signature": "public int score(Project project)", "class_method_signature": "Scorer.score(Project project)", "testcase": false, "constructor": false, "invocations": ["intValue", "execute", "bind", "newExecutor"]}, "repository": {"repo_id": 35957836, "url": "https://github.com/zalando-incubator/catwatch", "language": "Java", "is_fork": false, "fork_count": 20, "stargazer_count": 55, "size": 1999, "license": "licensed"}}