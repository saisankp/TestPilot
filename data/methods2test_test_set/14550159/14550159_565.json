{"test_class": {"identifier": "AcceptLanguageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RuntimeDelegate.HeaderDelegate<AcceptLanguage> headerDelegate;", "modifier": "private", "type": "RuntimeDelegate.HeaderDelegate<AcceptLanguage>", "declarator": "headerDelegate", "var_name": "headerDelegate"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/header/AcceptLanguageTest.java"}, "test_case": {"identifier": "testIsCompatible", "parameters": "(AcceptLanguage acceptLanguage, AcceptLanguage checkAcceptLanguage, boolean expectedResult)", "modifiers": "@UseDataProvider(\"forTestIsCompatible\") @Test public", "return": "void", "body": "@UseDataProvider(\"forTestIsCompatible\")\n    @Test\n    public void testIsCompatible(AcceptLanguage acceptLanguage, AcceptLanguage checkAcceptLanguage, boolean expectedResult) {\n        assertEquals(expectedResult, acceptLanguage.isCompatible(checkAcceptLanguage));\n    }", "signature": "void testIsCompatible(AcceptLanguage acceptLanguage, AcceptLanguage checkAcceptLanguage, boolean expectedResult)", "full_signature": "@UseDataProvider(\"forTestIsCompatible\") @Test public void testIsCompatible(AcceptLanguage acceptLanguage, AcceptLanguage checkAcceptLanguage, boolean expectedResult)", "class_method_signature": "AcceptLanguageTest.testIsCompatible(AcceptLanguage acceptLanguage, AcceptLanguage checkAcceptLanguage, boolean expectedResult)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "isCompatible"]}, "focal_class": {"identifier": "AcceptLanguage", "superclass": "", "interfaces": "implements QualityValue", "fields": [{"original_string": "public static final AcceptLanguage DEFAULT = new AcceptLanguage(new Locale(\"*\"));", "modifier": "public static final", "type": "AcceptLanguage", "declarator": "DEFAULT = new AcceptLanguage(new Locale(\"*\"))", "var_name": "DEFAULT"}, {"original_string": "private final Language language;", "modifier": "private final", "type": "Language", "declarator": "language", "var_name": "language"}, {"original_string": "private final float qValue;", "modifier": "private final", "type": "float", "declarator": "qValue", "var_name": "qValue"}], "methods": [{"identifier": "valueOf", "parameters": "(String header)", "modifiers": "public static", "return": "AcceptLanguage", "signature": "AcceptLanguage valueOf(String header)", "full_signature": "public static AcceptLanguage valueOf(String header)", "class_method_signature": "AcceptLanguage.valueOf(String header)", "testcase": false, "constructor": false}, {"identifier": "AcceptLanguage", "parameters": "(Language language)", "modifiers": "public", "return": "", "signature": " AcceptLanguage(Language language)", "full_signature": "public  AcceptLanguage(Language language)", "class_method_signature": "AcceptLanguage.AcceptLanguage(Language language)", "testcase": false, "constructor": true}, {"identifier": "AcceptLanguage", "parameters": "(Language language, float qValue)", "modifiers": "public", "return": "", "signature": " AcceptLanguage(Language language, float qValue)", "full_signature": "public  AcceptLanguage(Language language, float qValue)", "class_method_signature": "AcceptLanguage.AcceptLanguage(Language language, float qValue)", "testcase": false, "constructor": true}, {"identifier": "AcceptLanguage", "parameters": "(Locale locale, float qValue)", "modifiers": "public", "return": "", "signature": " AcceptLanguage(Locale locale, float qValue)", "full_signature": "public  AcceptLanguage(Locale locale, float qValue)", "class_method_signature": "AcceptLanguage.AcceptLanguage(Locale locale, float qValue)", "testcase": false, "constructor": true}, {"identifier": "AcceptLanguage", "parameters": "(Locale locale)", "modifiers": "public", "return": "", "signature": " AcceptLanguage(Locale locale)", "full_signature": "public  AcceptLanguage(Locale locale)", "class_method_signature": "AcceptLanguage.AcceptLanguage(Locale locale)", "testcase": false, "constructor": true}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "public", "return": "Language", "signature": "Language getLanguage()", "full_signature": "public Language getLanguage()", "class_method_signature": "AcceptLanguage.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "getPrimaryTag", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrimaryTag()", "full_signature": "public String getPrimaryTag()", "class_method_signature": "AcceptLanguage.getPrimaryTag()", "testcase": false, "constructor": false}, {"identifier": "getSubTag", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSubTag()", "full_signature": "public String getSubTag()", "class_method_signature": "AcceptLanguage.getSubTag()", "testcase": false, "constructor": false}, {"identifier": "getLocale", "parameters": "()", "modifiers": "public", "return": "Locale", "signature": "Locale getLocale()", "full_signature": "public Locale getLocale()", "class_method_signature": "AcceptLanguage.getLocale()", "testcase": false, "constructor": false}, {"identifier": "isCompatible", "parameters": "(AcceptLanguage other)", "modifiers": "public", "return": "boolean", "signature": "boolean isCompatible(AcceptLanguage other)", "full_signature": "public boolean isCompatible(AcceptLanguage other)", "class_method_signature": "AcceptLanguage.isCompatible(AcceptLanguage other)", "testcase": false, "constructor": false}, {"identifier": "isCompatible", "parameters": "(Language other)", "modifiers": "public", "return": "boolean", "signature": "boolean isCompatible(Language other)", "full_signature": "public boolean isCompatible(Language other)", "class_method_signature": "AcceptLanguage.isCompatible(Language other)", "testcase": false, "constructor": false}, {"identifier": "getQvalue", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float getQvalue()", "full_signature": "@Override public float getQvalue()", "class_method_signature": "AcceptLanguage.getQvalue()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AcceptLanguage.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AcceptLanguage.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AcceptLanguage.toString()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/header/AcceptLanguage.java"}, "focal_method": {"identifier": "isCompatible", "parameters": "(AcceptLanguage other)", "modifiers": "public", "return": "boolean", "body": "public boolean isCompatible(AcceptLanguage other) {\n        if (other == null) {\n            return false;\n        }\n        return isCompatible(other.getLanguage());\n    }", "signature": "boolean isCompatible(AcceptLanguage other)", "full_signature": "public boolean isCompatible(AcceptLanguage other)", "class_method_signature": "AcceptLanguage.isCompatible(AcceptLanguage other)", "testcase": false, "constructor": false, "invocations": ["isCompatible", "getLanguage"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}