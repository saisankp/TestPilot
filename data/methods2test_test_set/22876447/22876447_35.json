{"test_class": {"identifier": "XmlExtractorFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String XML = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<test></test>\";", "modifier": "private static final", "type": "String", "declarator": "XML = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<test></test>\"", "var_name": "XML"}, {"original_string": "protected static final String CONNECTOR_ID = \"testConnectorId\";", "modifier": "protected static final", "type": "String", "declarator": "CONNECTOR_ID = \"testConnectorId\"", "var_name": "CONNECTOR_ID"}, {"original_string": "protected XmlExtractorFactory extractorFactory;", "modifier": "protected", "type": "XmlExtractorFactory", "declarator": "extractorFactory", "var_name": "extractorFactory"}, {"original_string": "protected StreamConnector connectorMock;", "modifier": "protected", "type": "StreamConnector", "declarator": "connectorMock", "var_name": "connectorMock"}, {"original_string": "private MutableExtractorModel model;", "modifier": "private", "type": "MutableExtractorModel", "declarator": "model", "var_name": "model"}], "file": "link-move/src/test/java/com/nhl/link/move/runtime/xml/XmlExtractorFactoryTest.java"}, "test_case": {"identifier": "testGetConnectorType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetConnectorType() {\n        assertEquals(StreamConnector.class, extractorFactory.getConnectorType());\n    }", "signature": "void testGetConnectorType()", "full_signature": "@Test public void testGetConnectorType()", "class_method_signature": "XmlExtractorFactoryTest.testGetConnectorType()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getConnectorType"]}, "focal_class": {"identifier": "XmlExtractorFactory", "superclass": "", "interfaces": "implements IExtractorFactory<StreamConnector>", "fields": [{"original_string": "public static final String XPATH_EXPRESSION_PROPERTY = \"extractor.xml.xpathexpression\";", "modifier": "public static final", "type": "String", "declarator": "XPATH_EXPRESSION_PROPERTY = \"extractor.xml.xpathexpression\"", "var_name": "XPATH_EXPRESSION_PROPERTY"}, {"original_string": "public static final String XPATH_NS_BINDING_PROPERTY = \"extractor.xml.nsbinding\";", "modifier": "public static final", "type": "String", "declarator": "XPATH_NS_BINDING_PROPERTY = \"extractor.xml.nsbinding\"", "var_name": "XPATH_NS_BINDING_PROPERTY"}, {"original_string": "private static final String XML_EXTRACTOR_TYPE = \"xml\";", "modifier": "private static final", "type": "String", "declarator": "XML_EXTRACTOR_TYPE = \"xml\"", "var_name": "XML_EXTRACTOR_TYPE"}, {"original_string": "private final XPathFactory xPathFactory;", "modifier": "private final", "type": "XPathFactory", "declarator": "xPathFactory", "var_name": "xPathFactory"}], "methods": [{"identifier": "XmlExtractorFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " XmlExtractorFactory()", "full_signature": "public  XmlExtractorFactory()", "class_method_signature": "XmlExtractorFactory.XmlExtractorFactory()", "testcase": false, "constructor": true}, {"identifier": "getExtractorType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getExtractorType()", "full_signature": "@Override public String getExtractorType()", "class_method_signature": "XmlExtractorFactory.getExtractorType()", "testcase": false, "constructor": false}, {"identifier": "getConnectorType", "parameters": "()", "modifiers": "@Override public", "return": "Class<StreamConnector>", "signature": "Class<StreamConnector> getConnectorType()", "full_signature": "@Override public Class<StreamConnector> getConnectorType()", "class_method_signature": "XmlExtractorFactory.getConnectorType()", "testcase": false, "constructor": false}, {"identifier": "createExtractor", "parameters": "(StreamConnector connector, ExtractorModel model)", "modifiers": "@Override public", "return": "Extractor", "signature": "Extractor createExtractor(StreamConnector connector, ExtractorModel model)", "full_signature": "@Override public Extractor createExtractor(StreamConnector connector, ExtractorModel model)", "class_method_signature": "XmlExtractorFactory.createExtractor(StreamConnector connector, ExtractorModel model)", "testcase": false, "constructor": false}, {"identifier": "getXPathExpression", "parameters": "(ExtractorModel model, NamespaceContext namespaceContext)", "modifiers": "private", "return": "XPathExpression", "signature": "XPathExpression getXPathExpression(ExtractorModel model, NamespaceContext namespaceContext)", "full_signature": "private XPathExpression getXPathExpression(ExtractorModel model, NamespaceContext namespaceContext)", "class_method_signature": "XmlExtractorFactory.getXPathExpression(ExtractorModel model, NamespaceContext namespaceContext)", "testcase": false, "constructor": false}, {"identifier": "getNamespaceContext", "parameters": "(ExtractorModel model)", "modifiers": "private", "return": "NamespaceContext", "signature": "NamespaceContext getNamespaceContext(ExtractorModel model)", "full_signature": "private NamespaceContext getNamespaceContext(ExtractorModel model)", "class_method_signature": "XmlExtractorFactory.getNamespaceContext(ExtractorModel model)", "testcase": false, "constructor": false}, {"identifier": "mapToXmlAttributes", "parameters": "(RowAttribute[] attributes, NamespaceContext namespaceContext)", "modifiers": "private", "return": "XmlRowAttribute[]", "signature": "XmlRowAttribute[] mapToXmlAttributes(RowAttribute[] attributes, NamespaceContext namespaceContext)", "full_signature": "private XmlRowAttribute[] mapToXmlAttributes(RowAttribute[] attributes, NamespaceContext namespaceContext)", "class_method_signature": "XmlExtractorFactory.mapToXmlAttributes(RowAttribute[] attributes, NamespaceContext namespaceContext)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/runtime/xml/XmlExtractorFactory.java"}, "focal_method": {"identifier": "getConnectorType", "parameters": "()", "modifiers": "@Override public", "return": "Class<StreamConnector>", "body": "@Override\n    public Class<StreamConnector> getConnectorType() {\n        return StreamConnector.class;\n    }", "signature": "Class<StreamConnector> getConnectorType()", "full_signature": "@Override public Class<StreamConnector> getConnectorType()", "class_method_signature": "XmlExtractorFactory.getConnectorType()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}