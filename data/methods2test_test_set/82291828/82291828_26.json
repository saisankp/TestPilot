{"test_class": {"identifier": "WeightsTest", "superclass": "", "interfaces": "", "fields": [], "file": "algo/src/test/java/org/neo4j/graphalgo/similarity/WeightsTest.java"}, "test_case": {"identifier": "shouldTransformListToArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldTransformListToArray() throws Exception {\n        Number[] values = {1.0, 2.0, 3.0, 4.0};\n        List<Number> weightList = Arrays.asList(values);\n        assertArrayEquals(new double[]{1.0, 2.0, 3.0, 4.0}, Weights.buildWeights(weightList), 0.01);\n    }", "signature": "void shouldTransformListToArray()", "full_signature": "@Test public void shouldTransformListToArray()", "class_method_signature": "WeightsTest.shouldTransformListToArray()", "testcase": true, "constructor": false, "invocations": ["asList", "assertArrayEquals", "buildWeights"]}, "focal_class": {"identifier": "Weights", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final long REPEAT_CUTOFF = 3L;", "modifier": "public static final", "type": "long", "declarator": "REPEAT_CUTOFF = 3L", "var_name": "REPEAT_CUTOFF"}], "methods": [{"identifier": "buildWeights", "parameters": "(List<Number> weightList)", "modifiers": "public static", "return": "double[]", "signature": "double[] buildWeights(List<Number> weightList)", "full_signature": "public static double[] buildWeights(List<Number> weightList)", "class_method_signature": "Weights.buildWeights(List<Number> weightList)", "testcase": false, "constructor": false}, {"identifier": "buildRleWeights", "parameters": "(List<Number> weightList, int limit)", "modifiers": "public static", "return": "double[]", "signature": "double[] buildRleWeights(List<Number> weightList, int limit)", "full_signature": "public static double[] buildRleWeights(List<Number> weightList, int limit)", "class_method_signature": "Weights.buildRleWeights(List<Number> weightList, int limit)", "testcase": false, "constructor": false}, {"identifier": "buildRleWeights", "parameters": "(double[] weightList, int limit)", "modifiers": "public static", "return": "double[]", "signature": "double[] buildRleWeights(double[] weightList, int limit)", "full_signature": "public static double[] buildRleWeights(double[] weightList, int limit)", "class_method_signature": "Weights.buildRleWeights(double[] weightList, int limit)", "testcase": false, "constructor": false}], "file": "algo/src/main/java/org/neo4j/graphalgo/similarity/Weights.java"}, "focal_method": {"identifier": "buildWeights", "parameters": "(List<Number> weightList)", "modifiers": "public static", "return": "double[]", "body": "public static double[] buildWeights(List<Number> weightList) {\n        double[] weights = new double[weightList.size()];\n        int i = 0;\n        for (Number value : weightList) {\n            weights[i++] = value.doubleValue();\n        }\n        return weights;\n    }", "signature": "double[] buildWeights(List<Number> weightList)", "full_signature": "public static double[] buildWeights(List<Number> weightList)", "class_method_signature": "Weights.buildWeights(List<Number> weightList)", "testcase": false, "constructor": false, "invocations": ["size", "doubleValue"]}, "repository": {"repo_id": 82291828, "url": "https://github.com/neo4j-contrib/neo4j-graph-algorithms", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 689, "size": 43359, "license": "licensed"}}