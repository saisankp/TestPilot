{"test_class": {"identifier": "urn_perun_user_attribute_def_def_userPreferredCertDNTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static urn_perun_user_attribute_def_def_userPreferredCertDN classInstance;", "modifier": "private static", "type": "urn_perun_user_attribute_def_def_userPreferredCertDN", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private static PerunSessionImpl session;", "modifier": "private static", "type": "PerunSessionImpl", "declarator": "session", "var_name": "session"}, {"original_string": "private static User user;", "modifier": "private static", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private static Attribute attributeToCheck;", "modifier": "private static", "type": "Attribute", "declarator": "attributeToCheck", "var_name": "attributeToCheck"}, {"original_string": "private static Attribute reqAttribute;", "modifier": "private static", "type": "Attribute", "declarator": "reqAttribute", "var_name": "reqAttribute"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_userPreferredCertDNTest.java"}, "test_case": {"identifier": "testCheckWithInvalidPreferredValue", "parameters": "()", "modifiers": "@Test(expected = WrongReferenceAttributeValueException.class) public", "return": "void", "body": "@Test(expected = WrongReferenceAttributeValueException.class)\n\tpublic void testCheckWithInvalidPreferredValue() throws Exception {\n\t\tSystem.out.println(\"testCheckWithInvalidPreferredValue()\");\n\t\tMap<String, String> value = new LinkedHashMap<>();\n\t\tvalue.put(\"example\", \"example\");\n\t\treqAttribute.setValue(value);\n\t\tattributeToCheck.setValue(\"bad_example\");\n\n\t\tclassInstance.checkAttributeSemantics(session, user, attributeToCheck);\n\t}", "signature": "void testCheckWithInvalidPreferredValue()", "full_signature": "@Test(expected = WrongReferenceAttributeValueException.class) public void testCheckWithInvalidPreferredValue()", "class_method_signature": "urn_perun_user_attribute_def_def_userPreferredCertDNTest.testCheckWithInvalidPreferredValue()", "testcase": true, "constructor": false, "invocations": ["println", "put", "setValue", "setValue", "checkAttributeSemantics"]}, "focal_class": {"identifier": "urn_perun_user_attribute_def_def_userPreferredCertDN", "superclass": "extends UserAttributesModuleAbstract", "interfaces": "implements UserAttributesModuleImplApi", "fields": [], "methods": [{"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, User user, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "class_method_signature": "urn_perun_user_attribute_def_def_userPreferredCertDN.checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "fillAttribute", "parameters": "(PerunSessionImpl sess, User user, AttributeDefinition attribute)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute fillAttribute(PerunSessionImpl sess, User user, AttributeDefinition attribute)", "full_signature": "@Override public Attribute fillAttribute(PerunSessionImpl sess, User user, AttributeDefinition attribute)", "class_method_signature": "urn_perun_user_attribute_def_def_userPreferredCertDN.fillAttribute(PerunSessionImpl sess, User user, AttributeDefinition attribute)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getDependencies()", "full_signature": "@Override public List<String> getDependencies()", "class_method_signature": "urn_perun_user_attribute_def_def_userPreferredCertDN.getDependencies()", "testcase": false, "constructor": false}, {"identifier": "getAttributeDefinition", "parameters": "()", "modifiers": "@Override public", "return": "AttributeDefinition", "signature": "AttributeDefinition getAttributeDefinition()", "full_signature": "@Override public AttributeDefinition getAttributeDefinition()", "class_method_signature": "urn_perun_user_attribute_def_def_userPreferredCertDN.getAttributeDefinition()", "testcase": false, "constructor": false}, {"identifier": "changedAttributeHook", "parameters": "(PerunSessionImpl session, User user, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void changedAttributeHook(PerunSessionImpl session, User user, Attribute attribute)", "full_signature": "@Override public void changedAttributeHook(PerunSessionImpl session, User user, Attribute attribute)", "class_method_signature": "urn_perun_user_attribute_def_def_userPreferredCertDN.changedAttributeHook(PerunSessionImpl session, User user, Attribute attribute)", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_userPreferredCertDN.java"}, "focal_method": {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, User user, Attribute attribute)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute) throws WrongAttributeAssignmentException, WrongReferenceAttributeValueException {\n\t\tAttribute userCertDNs;\n\t\ttry {\n\t\t\tuserCertDNs = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, AttributesManager.NS_USER_ATTR_DEF + \":userCertDNs\");\n\t\t} catch (AttributeNotExistsException ex) {\n\t\t\tthrow new ConsistencyErrorException(ex);\n\t\t}\n\t\tMap<String, String> certDNsValue;\n\t\tif(userCertDNs.getValue() != null) {\n\t\t\tcertDNsValue = userCertDNs.valueAsMap();\n\t\t} else {\n\t\t\tif(attribute.getValue() != null) throw new WrongReferenceAttributeValueException(attribute, userCertDNs, user, null, user, null, \"There is no certificates for this user so preferred certificate can't be choose.\");\n\t\t\telse return;\n\t\t}\n\t\tif(attribute.getValue() == null) {\n\t\t\tif(certDNsValue != null && !certDNsValue.isEmpty()) throw new WrongReferenceAttributeValueException(attribute, userCertDNs, user, null, user, null, \"This attribute value can't be null because of notNull attribute userCertDNs\");\n\t\t} else {\n\t\t\tString preferredCertDNValue = attribute.valueAsString();\n\t\t\tif(!certDNsValue.containsKey(preferredCertDNValue)) throw new WrongReferenceAttributeValueException(attribute, userCertDNs, user, null, user, null, \"This attribute value must be one of exsiting keys in userCertDNs.\");\n\t\t}\n\t}", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "class_method_signature": "urn_perun_user_attribute_def_def_userPreferredCertDN.checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "testcase": false, "constructor": false, "invocations": ["getAttribute", "getAttributesManagerBl", "getPerunBl", "getValue", "valueAsMap", "getValue", "getValue", "isEmpty", "valueAsString", "containsKey"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}