{"test_class": {"identifier": "ThreadUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static long ONE_SECOND_IN_MILLISECONDS = 1000l;", "modifier": "private final static", "type": "long", "declarator": "ONE_SECOND_IN_MILLISECONDS = 1000l", "var_name": "ONE_SECOND_IN_MILLISECONDS"}, {"original_string": "private ThreadUtils spy;", "modifier": "private", "type": "ThreadUtils", "declarator": "spy", "var_name": "spy"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/utils/ThreadUtilsTest.java"}, "test_case": {"identifier": "sleepThreadTestCatchInterruptedException", "parameters": "()", "modifiers": "@Test(expected = CloudRuntimeException.class) public", "return": "void", "body": "@Test(expected = CloudRuntimeException.class)\n    public void sleepThreadTestCatchInterruptedException() throws InterruptedException {\n\n        PowerMockito.doThrow(new InterruptedException()).when(Thread.class);\n        Thread.sleep(Mockito.anyLong());\n\n        spy.sleepThread(2);\n\n        PowerMockito.verifyStatic();\n        Thread.sleep(Mockito.eq(2 * ONE_SECOND_IN_MILLISECONDS));\n    }", "signature": "void sleepThreadTestCatchInterruptedException()", "full_signature": "@Test(expected = CloudRuntimeException.class) public void sleepThreadTestCatchInterruptedException()", "class_method_signature": "ThreadUtilsTest.sleepThreadTestCatchInterruptedException()", "testcase": true, "constructor": false, "invocations": ["when", "doThrow", "sleep", "anyLong", "sleepThread", "verifyStatic", "sleep", "eq"]}, "focal_class": {"identifier": "ThreadUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static long ONE_SECOND_IN_MILLISECONDS = 1000l;", "modifier": "private final static", "type": "long", "declarator": "ONE_SECOND_IN_MILLISECONDS = 1000l", "var_name": "ONE_SECOND_IN_MILLISECONDS"}], "methods": [{"identifier": "sleepThread", "parameters": "(int secondsToSleep)", "modifiers": "public", "return": "void", "signature": "void sleepThread(int secondsToSleep)", "full_signature": "public void sleepThread(int secondsToSleep)", "class_method_signature": "ThreadUtils.sleepThread(int secondsToSleep)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/utils/ThreadUtils.java"}, "focal_method": {"identifier": "sleepThread", "parameters": "(int secondsToSleep)", "modifiers": "public", "return": "void", "body": "public void sleepThread(int secondsToSleep) {\n        try {\n            Thread.sleep(secondsToSleep * ONE_SECOND_IN_MILLISECONDS);\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n            throw new CloudRuntimeException(e);\n        }\n    }", "signature": "void sleepThread(int secondsToSleep)", "full_signature": "public void sleepThread(int secondsToSleep)", "class_method_signature": "ThreadUtils.sleepThread(int secondsToSleep)", "testcase": false, "constructor": false, "invocations": ["sleep", "interrupt", "currentThread"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}