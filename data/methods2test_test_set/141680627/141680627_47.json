{"test_class": {"identifier": "TunnelOptionsPanelTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private TunnelOptionsPanel mTunnelOptionsPanel;", "modifier": "private", "type": "TunnelOptionsPanel", "declarator": "mTunnelOptionsPanel", "var_name": "mTunnelOptionsPanel"}, {"original_string": "private boolean mCallbackCalled;", "modifier": "private", "type": "boolean", "declarator": "mCallbackCalled", "var_name": "mCallbackCalled"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/routing/TunnelOptionsPanelTest.java"}, "test_case": {"identifier": "testChangeListener", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChangeListener() {\n        final MockUtils.MockRouteOptionsBuilder builder = new MockUtils.MockRouteOptionsBuilder();\n        RouteOptions options = builder.withTunnelOptions().build();\n        mTunnelOptionsPanel.setRouteOptions(options);\n        mTunnelOptionsPanel.setListener(new OptionsPanel.Listener() {\n            @Override\n            public void onOptionCreated(List<OptionItem> item) {\n                mCallbackCalled = false;\n            }\n\n            @Override\n            public void onOptionChanged(OptionItem item) {\n                mCallbackCalled = true;\n            }\n        });\n        // negate one part\n        options = builder.withNoTunnelOptions().build();\n        mTunnelOptionsPanel.setRouteOptions(options);\n        assertThat(mCallbackCalled, is(true));\n    }", "signature": "void testChangeListener()", "full_signature": "@Test public void testChangeListener()", "class_method_signature": "TunnelOptionsPanelTest.testChangeListener()", "testcase": true, "constructor": false, "invocations": ["build", "withTunnelOptions", "setRouteOptions", "setListener", "build", "withNoTunnelOptions", "setRouteOptions", "assertThat", "is"]}, "focal_class": {"identifier": "TunnelOptionsPanel", "superclass": "extends OptionsPanel", "interfaces": "implements OptionItem.OnChangedListener", "fields": [{"original_string": "private Map<RouteOptions.TunnelCategory, String> mResourceKey;", "modifier": "private", "type": "Map<RouteOptions.TunnelCategory, String>", "declarator": "mResourceKey", "var_name": "mResourceKey"}, {"original_string": "private OptionItem mSubOptionItem;", "modifier": "private", "type": "OptionItem", "declarator": "mSubOptionItem", "var_name": "mSubOptionItem"}, {"original_string": "private RouteOptions mRouteOptions;", "modifier": "private", "type": "RouteOptions", "declarator": "mRouteOptions", "var_name": "mRouteOptions"}], "methods": [{"identifier": "TunnelOptionsPanel", "parameters": "(final Context context)", "modifiers": "public", "return": "", "signature": " TunnelOptionsPanel(final Context context)", "full_signature": "public  TunnelOptionsPanel(final Context context)", "class_method_signature": "TunnelOptionsPanel.TunnelOptionsPanel(final Context context)", "testcase": false, "constructor": true}, {"identifier": "TunnelOptionsPanel", "parameters": "(final Context context, final AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " TunnelOptionsPanel(final Context context, final AttributeSet attrs)", "full_signature": "public  TunnelOptionsPanel(final Context context, final AttributeSet attrs)", "class_method_signature": "TunnelOptionsPanel.TunnelOptionsPanel(final Context context, final AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "TunnelOptionsPanel", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr)", "modifiers": "public", "return": "", "signature": " TunnelOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr)", "full_signature": "public  TunnelOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr)", "class_method_signature": "TunnelOptionsPanel.TunnelOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "TunnelOptionsPanel", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "modifiers": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public", "return": "", "signature": " TunnelOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "full_signature": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public  TunnelOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "class_method_signature": "TunnelOptionsPanel.TunnelOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "testcase": false, "constructor": true}, {"identifier": "populateResources", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void populateResources()", "full_signature": "private void populateResources()", "class_method_signature": "TunnelOptionsPanel.populateResources()", "testcase": false, "constructor": false}, {"identifier": "createPanel", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createPanel()", "full_signature": "private void createPanel()", "class_method_signature": "TunnelOptionsPanel.createPanel()", "testcase": false, "constructor": false}, {"identifier": "getRouteOptions", "parameters": "()", "modifiers": "public", "return": "RouteOptions", "signature": "RouteOptions getRouteOptions()", "full_signature": "public RouteOptions getRouteOptions()", "class_method_signature": "TunnelOptionsPanel.getRouteOptions()", "testcase": false, "constructor": false}, {"identifier": "setRouteOptions", "parameters": "(final RouteOptions routeOptions)", "modifiers": "public", "return": "void", "signature": "void setRouteOptions(final RouteOptions routeOptions)", "full_signature": "public void setRouteOptions(final RouteOptions routeOptions)", "class_method_signature": "TunnelOptionsPanel.setRouteOptions(final RouteOptions routeOptions)", "testcase": false, "constructor": false}, {"identifier": "populateRouteOptions", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void populateRouteOptions()", "full_signature": "public void populateRouteOptions()", "class_method_signature": "TunnelOptionsPanel.populateRouteOptions()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(final RouteOptions.TunnelCategory category)", "modifiers": "private", "return": "void", "signature": "void select(final RouteOptions.TunnelCategory category)", "full_signature": "private void select(final RouteOptions.TunnelCategory category)", "class_method_signature": "TunnelOptionsPanel.select(final RouteOptions.TunnelCategory category)", "testcase": false, "constructor": false}, {"identifier": "onChanged", "parameters": "(OptionItem item)", "modifiers": "@Override public", "return": "void", "signature": "void onChanged(OptionItem item)", "full_signature": "@Override public void onChanged(OptionItem item)", "class_method_signature": "TunnelOptionsPanel.onChanged(OptionItem item)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/routing/TunnelOptionsPanel.java"}, "focal_method": {"identifier": "setRouteOptions", "parameters": "(final RouteOptions routeOptions)", "modifiers": "public", "return": "void", "body": "public void setRouteOptions(final RouteOptions routeOptions) {\n        if (routeOptions == null) {\n            throw new IllegalArgumentException(getString(R.string.msdkui_exception_route_options_null));\n        }\n        mRouteOptions = routeOptions;\n        select(mRouteOptions.getTruckTunnelCategory());\n    }", "signature": "void setRouteOptions(final RouteOptions routeOptions)", "full_signature": "public void setRouteOptions(final RouteOptions routeOptions)", "class_method_signature": "TunnelOptionsPanel.setRouteOptions(final RouteOptions routeOptions)", "testcase": false, "constructor": false, "invocations": ["getString", "select", "getTruckTunnelCategory"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}