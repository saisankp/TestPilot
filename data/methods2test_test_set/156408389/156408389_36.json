{"test_class": {"identifier": "AccountInfoRetrieverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ACCOUNT_ID = \"GBQUCJ755LJBUFFKFZCTV7XFA6JUR5NAAEJF66SPCN3XROHVKSG3VVUY\";", "modifier": "private static final", "type": "String", "declarator": "ACCOUNT_ID = \"GBQUCJ755LJBUFFKFZCTV7XFA6JUR5NAAEJF66SPCN3XROHVKSG3VVUY\"", "var_name": "ACCOUNT_ID"}, {"original_string": "@Rule\n    public ExpectedException expectedEx = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedEx = ExpectedException.none()", "var_name": "expectedEx"}, {"original_string": "private Server server;", "modifier": "private", "type": "Server", "declarator": "server", "var_name": "server"}, {"original_string": "private MockWebServer mockWebServer;", "modifier": "private", "type": "MockWebServer", "declarator": "mockWebServer", "var_name": "mockWebServer"}], "file": "kin-sdk/kin-sdk-lib/src/test/java/kin/sdk/AccountInfoRetrieverTest.java"}, "test_case": {"identifier": "getBalance_NullInput_IllegalArgumentException", "parameters": "()", "modifiers": "@SuppressWarnings(\"ConstantConditions\") @Test public", "return": "void", "body": "@SuppressWarnings(\"ConstantConditions\")\n    @Test\n    public void getBalance_NullInput_IllegalArgumentException() throws Exception {\n        mockWebServer.enqueue(new MockResponse()\n                .setResponseCode(500)\n        );\n        expectedEx.expect(IllegalArgumentException.class);\n        AccountInfoRetriever accountInfoRetriever = new AccountInfoRetriever(server);\n        accountInfoRetriever.getBalance(null);\n    }", "signature": "void getBalance_NullInput_IllegalArgumentException()", "full_signature": "@SuppressWarnings(\"ConstantConditions\") @Test public void getBalance_NullInput_IllegalArgumentException()", "class_method_signature": "AccountInfoRetrieverTest.getBalance_NullInput_IllegalArgumentException()", "testcase": true, "constructor": false, "invocations": ["enqueue", "setResponseCode", "expect", "getBalance"]}, "focal_class": {"identifier": "AccountInfoRetriever", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Server server;", "modifier": "private final", "type": "Server", "declarator": "server", "var_name": "server"}], "methods": [{"identifier": "AccountInfoRetriever", "parameters": "(Server server)", "modifiers": "", "return": "", "signature": " AccountInfoRetriever(Server server)", "full_signature": "  AccountInfoRetriever(Server server)", "class_method_signature": "AccountInfoRetriever.AccountInfoRetriever(Server server)", "testcase": false, "constructor": true}, {"identifier": "getBalance", "parameters": "(@NonNull String accountId)", "modifiers": "", "return": "Balance", "signature": "Balance getBalance(@NonNull String accountId)", "full_signature": " Balance getBalance(@NonNull String accountId)", "class_method_signature": "AccountInfoRetriever.getBalance(@NonNull String accountId)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "(@NonNull String accountId)", "modifiers": "@AccountStatus", "return": "int", "signature": "int getStatus(@NonNull String accountId)", "full_signature": "@AccountStatus int getStatus(@NonNull String accountId)", "class_method_signature": "AccountInfoRetriever.getStatus(@NonNull String accountId)", "testcase": false, "constructor": false}], "file": "kin-sdk/kin-sdk-lib/src/main/java/kin/sdk/AccountInfoRetriever.java"}, "focal_method": {"identifier": "getBalance", "parameters": "(@NonNull String accountId)", "modifiers": "", "return": "Balance", "body": "Balance getBalance(@NonNull String accountId) throws OperationFailedException {\n        Utils.checkNotNull(accountId, \"account\");\n        Balance balance = null;\n\n        try {\n            AccountResponse accountResponse = server.accounts().account(KeyPair.fromAccountId(accountId));\n            if (accountResponse == null) {\n                throw new OperationFailedException(\"can't retrieve data for account \" + accountId);\n            }\n            for (AccountResponse.Balance assetBalance : accountResponse.getBalances()) {\n                if (assetBalance.getAsset().getType().equalsIgnoreCase(\"native\")) {\n                    balance = new BalanceImpl(new BigDecimal(assetBalance.getBalance()));\n\n                }\n            }\n        } catch (HttpResponseException httpError) {\n            if (httpError.getStatusCode() == 404) {\n                throw new AccountNotFoundException(accountId);\n            } else {\n                throw new OperationFailedException(httpError);\n            }\n        } catch (IOException e) {\n            throw new OperationFailedException(e);\n        }\n        if (balance == null) {\n            throw new OperationFailedException(accountId);\n        }\n\n        return balance;\n    }", "signature": "Balance getBalance(@NonNull String accountId)", "full_signature": " Balance getBalance(@NonNull String accountId)", "class_method_signature": "AccountInfoRetriever.getBalance(@NonNull String accountId)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "account", "accounts", "fromAccountId", "getBalances", "equalsIgnoreCase", "getType", "getAsset", "getBalance", "getStatusCode"]}, "repository": {"repo_id": 156408389, "url": "https://github.com/kinecosystem/kin-sdk-android", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 3232, "license": "licensed"}}