{"test_class": {"identifier": "SaveToCassandraOperationsServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SaveToCassandraOperationsServiceTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SaveToCassandraOperationsServiceTest.class)", "var_name": "LOGGER"}, {"original_string": "private SaveToCassandraOperationsService service;", "modifier": "private", "type": "SaveToCassandraOperationsService", "declarator": "service", "var_name": "service"}, {"original_string": "private final String KEYSPACE= \"mykeyspace\";", "modifier": "private final", "type": "String", "declarator": "KEYSPACE= \"mykeyspace\"", "var_name": "KEYSPACE"}, {"original_string": "private final String TABLE= \"mytable\";", "modifier": "private final", "type": "String", "declarator": "TABLE= \"mytable\"", "var_name": "TABLE"}, {"original_string": "private final List<ColumnNameTypeValue> columns= new ArrayList<ColumnNameTypeValue>();", "modifier": "private final", "type": "List<ColumnNameTypeValue>", "declarator": "columns= new ArrayList<ColumnNameTypeValue>()", "var_name": "columns"}, {"original_string": "@Mock\n    private Session mockedSession;", "modifier": "@Mock\n    private", "type": "Session", "declarator": "mockedSession", "var_name": "mockedSession"}], "file": "engine/src/test/java/com/stratio/decision/service/SaveToCassandraOperationsServiceTest.java"}, "test_case": {"identifier": "testCreateInsertStatement", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateInsertStatement() throws Exception {\n        Insert insert= service.createInsertStatement(TABLE, columns, \"timestamp\");\n        assertEquals(\"Expected keyspace not found\",\n                \"\\\"\" + STREAMING.STREAMING_KEYSPACE_NAME + \"\\\"\", insert.getKeyspace());\n\n    }", "signature": "void testCreateInsertStatement()", "full_signature": "@Test public void testCreateInsertStatement()", "class_method_signature": "SaveToCassandraOperationsServiceTest.testCreateInsertStatement()", "testcase": true, "constructor": false, "invocations": ["createInsertStatement", "assertEquals", "getKeyspace"]}, "focal_class": {"identifier": "SaveToCassandraOperationsService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(SaveToCassandraOperationsService.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(SaveToCassandraOperationsService.class)", "var_name": "log"}, {"original_string": "private  final Session session;", "modifier": "private  final", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "private HashMap<String, Integer> tablenames = new HashMap<>();", "modifier": "private", "type": "HashMap<String, Integer>", "declarator": "tablenames = new HashMap<>()", "var_name": "tablenames"}], "methods": [{"identifier": "SaveToCassandraOperationsService", "parameters": "(Session session)", "modifiers": "public", "return": "", "signature": " SaveToCassandraOperationsService(Session session)", "full_signature": "public  SaveToCassandraOperationsService(Session session)", "class_method_signature": "SaveToCassandraOperationsService.SaveToCassandraOperationsService(Session session)", "testcase": false, "constructor": true}, {"identifier": "check", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean check()", "full_signature": "public Boolean check()", "class_method_signature": "SaveToCassandraOperationsService.check()", "testcase": false, "constructor": false}, {"identifier": "refreshTablenames", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void refreshTablenames()", "full_signature": "public void refreshTablenames()", "class_method_signature": "SaveToCassandraOperationsService.refreshTablenames()", "testcase": false, "constructor": false}, {"identifier": "checkKeyspace", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void checkKeyspace()", "full_signature": "public void checkKeyspace()", "class_method_signature": "SaveToCassandraOperationsService.checkKeyspace()", "testcase": false, "constructor": false}, {"identifier": "createKeyspace", "parameters": "(String keyspaceName)", "modifiers": "public", "return": "void", "signature": "void createKeyspace(String keyspaceName)", "full_signature": "public void createKeyspace(String keyspaceName)", "class_method_signature": "SaveToCassandraOperationsService.createKeyspace(String keyspaceName)", "testcase": false, "constructor": false}, {"identifier": "createTable", "parameters": "(String tableName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "modifiers": "public", "return": "void", "signature": "void createTable(String tableName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "full_signature": "public void createTable(String tableName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "class_method_signature": "SaveToCassandraOperationsService.createTable(String tableName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "testcase": false, "constructor": false}, {"identifier": "createInsertStatement", "parameters": "(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "modifiers": "public", "return": "Insert", "signature": "Insert createInsertStatement(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "full_signature": "public Insert createInsertStatement(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "class_method_signature": "SaveToCassandraOperationsService.createInsertStatement(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "testcase": false, "constructor": false}, {"identifier": "alterTable", "parameters": "(String streamName, Set<String> oldColumnNames, List<ColumnNameTypeValue> columns)", "modifiers": "public", "return": "void", "signature": "void alterTable(String streamName, Set<String> oldColumnNames, List<ColumnNameTypeValue> columns)", "full_signature": "public void alterTable(String streamName, Set<String> oldColumnNames, List<ColumnNameTypeValue> columns)", "class_method_signature": "SaveToCassandraOperationsService.alterTable(String streamName, Set<String> oldColumnNames, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false}, {"identifier": "addQuotes", "parameters": "(String source)", "modifiers": "private", "return": "String", "signature": "String addQuotes(String source)", "full_signature": "private String addQuotes(String source)", "class_method_signature": "SaveToCassandraOperationsService.addQuotes(String source)", "testcase": false, "constructor": false}, {"identifier": "getStreamFieldsAndTypes", "parameters": "(List<ColumnNameTypeValue> columns)", "modifiers": "private", "return": "HashMap<String, String>", "signature": "HashMap<String, String> getStreamFieldsAndTypes(List<ColumnNameTypeValue> columns)", "full_signature": "private HashMap<String, String> getStreamFieldsAndTypes(List<ColumnNameTypeValue> columns)", "class_method_signature": "SaveToCassandraOperationsService.getStreamFieldsAndTypes(List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false}, {"identifier": "getTableNames", "parameters": "()", "modifiers": "public", "return": "HashMap<String, Integer>", "signature": "HashMap<String, Integer> getTableNames()", "full_signature": "public HashMap<String, Integer> getTableNames()", "class_method_signature": "SaveToCassandraOperationsService.getTableNames()", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "()", "modifiers": "public", "return": "Session", "signature": "Session getSession()", "full_signature": "public Session getSession()", "class_method_signature": "SaveToCassandraOperationsService.getSession()", "testcase": false, "constructor": false}], "file": "engine/src/main/java/com/stratio/decision/service/SaveToCassandraOperationsService.java"}, "focal_method": {"identifier": "createInsertStatement", "parameters": "(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "modifiers": "public", "return": "Insert", "body": "public Insert createInsertStatement(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName) {\n        Insert insert = QueryBuilder.insertInto(addQuotes(STREAMING.STREAMING_KEYSPACE_NAME), addQuotes(streamName));\n        for (ColumnNameTypeValue column : columns) {\n            insert.value(addQuotes(column.getColumn()), column.getValue());\n        }\n        insert.value(addQuotes(timestampColumnName), UUIDs.timeBased());\n        return insert;\n    }", "signature": "Insert createInsertStatement(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "full_signature": "public Insert createInsertStatement(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "class_method_signature": "SaveToCassandraOperationsService.createInsertStatement(String streamName, List<ColumnNameTypeValue> columns, String timestampColumnName)", "testcase": false, "constructor": false, "invocations": ["insertInto", "addQuotes", "addQuotes", "value", "addQuotes", "getColumn", "getValue", "value", "addQuotes", "timeBased"]}, "repository": {"repo_id": 20521495, "url": "https://github.com/Stratio/Decision", "language": "Java", "is_fork": false, "fork_count": 85, "stargazer_count": 305, "size": 41858, "license": "licensed"}}