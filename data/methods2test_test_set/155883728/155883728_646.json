{"test_class": {"identifier": "VersionManagerFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/version/VersionManagerFacadeTest.java"}, "test_case": {"identifier": "testRORestoreVersion", "parameters": "()", "modifiers": "@Test(expected = ListenerReadOnlyException.class) public", "return": "void", "body": "@Test(expected = ListenerReadOnlyException.class)\n    public void testRORestoreVersion() throws Exception {\n        VersionManagerFacade<Session> facade = getFacade(mock(VersionManager.class));\n        facade.restore((Version) null, true);\n    }", "signature": "void testRORestoreVersion()", "full_signature": "@Test(expected = ListenerReadOnlyException.class) public void testRORestoreVersion()", "class_method_signature": "VersionManagerFacadeTest.testRORestoreVersion()", "testcase": true, "constructor": false, "invocations": ["getFacade", "mock", "restore"]}, "focal_class": {"identifier": "VersionManagerFacade", "superclass": "", "interfaces": "implements VersionManager", "fields": [{"original_string": "private final @NotNull VersionManager delegate;", "modifier": "private final @NotNull", "type": "VersionManager", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final @NotNull SessionFacade<S> session;", "modifier": "private final @NotNull", "type": "SessionFacade<S>", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "VersionManagerFacade", "parameters": "(final @NotNull VersionManager delegate, final @NotNull SessionFacade<S> session)", "modifiers": "public", "return": "", "signature": " VersionManagerFacade(final @NotNull VersionManager delegate, final @NotNull SessionFacade<S> session)", "full_signature": "public  VersionManagerFacade(final @NotNull VersionManager delegate, final @NotNull SessionFacade<S> session)", "class_method_signature": "VersionManagerFacade.VersionManagerFacade(final @NotNull VersionManager delegate, final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "isCheckedOut", "parameters": "(String absPath)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCheckedOut(String absPath)", "full_signature": "@Override public boolean isCheckedOut(String absPath)", "class_method_signature": "VersionManagerFacade.isCheckedOut(String absPath)", "testcase": false, "constructor": false}, {"identifier": "getVersionHistory", "parameters": "(String absPath)", "modifiers": "@Override public", "return": "VersionHistory", "signature": "VersionHistory getVersionHistory(String absPath)", "full_signature": "@Override public VersionHistory getVersionHistory(String absPath)", "class_method_signature": "VersionManagerFacade.getVersionHistory(String absPath)", "testcase": false, "constructor": false}, {"identifier": "getBaseVersion", "parameters": "(String absPath)", "modifiers": "@Override public", "return": "Version", "signature": "Version getBaseVersion(String absPath)", "full_signature": "@Override public Version getBaseVersion(String absPath)", "class_method_signature": "VersionManagerFacade.getBaseVersion(String absPath)", "testcase": false, "constructor": false}, {"identifier": "getActivity", "parameters": "()", "modifiers": "@Override public", "return": "Node", "signature": "Node getActivity()", "full_signature": "@Override public Node getActivity()", "class_method_signature": "VersionManagerFacade.getActivity()", "testcase": false, "constructor": false}, {"identifier": "checkin", "parameters": "(String absPath)", "modifiers": "@Override public", "return": "Version", "signature": "Version checkin(String absPath)", "full_signature": "@Override public Version checkin(String absPath)", "class_method_signature": "VersionManagerFacade.checkin(String absPath)", "testcase": false, "constructor": false}, {"identifier": "checkout", "parameters": "(String absPath)", "modifiers": "@Override public", "return": "void", "signature": "void checkout(String absPath)", "full_signature": "@Override public void checkout(String absPath)", "class_method_signature": "VersionManagerFacade.checkout(String absPath)", "testcase": false, "constructor": false}, {"identifier": "checkpoint", "parameters": "(String absPath)", "modifiers": "@Override public", "return": "Version", "signature": "Version checkpoint(String absPath)", "full_signature": "@Override public Version checkpoint(String absPath)", "class_method_signature": "VersionManagerFacade.checkpoint(String absPath)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(Version[] versions, boolean removeExisting)", "modifiers": "@Override public", "return": "void", "signature": "void restore(Version[] versions, boolean removeExisting)", "full_signature": "@Override public void restore(Version[] versions, boolean removeExisting)", "class_method_signature": "VersionManagerFacade.restore(Version[] versions, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(String absPath, String versionName, boolean removeExisting)", "modifiers": "@Override public", "return": "void", "signature": "void restore(String absPath, String versionName, boolean removeExisting)", "full_signature": "@Override public void restore(String absPath, String versionName, boolean removeExisting)", "class_method_signature": "VersionManagerFacade.restore(String absPath, String versionName, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(Version version, boolean removeExisting)", "modifiers": "@Override public", "return": "void", "signature": "void restore(Version version, boolean removeExisting)", "full_signature": "@Override public void restore(Version version, boolean removeExisting)", "class_method_signature": "VersionManagerFacade.restore(Version version, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(String absPath, Version version, boolean removeExisting)", "modifiers": "@Override public", "return": "void", "signature": "void restore(String absPath, Version version, boolean removeExisting)", "full_signature": "@Override public void restore(String absPath, Version version, boolean removeExisting)", "class_method_signature": "VersionManagerFacade.restore(String absPath, Version version, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "restoreByLabel", "parameters": "(String absPath, String versionLabel, boolean removeExisting)", "modifiers": "@Override public", "return": "void", "signature": "void restoreByLabel(String absPath, String versionLabel, boolean removeExisting)", "full_signature": "@Override public void restoreByLabel(String absPath, String versionLabel, boolean removeExisting)", "class_method_signature": "VersionManagerFacade.restoreByLabel(String absPath, String versionLabel, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(String absPath, String srcWorkspace, boolean bestEffort)", "modifiers": "@Override public", "return": "NodeIterator", "signature": "NodeIterator merge(String absPath, String srcWorkspace, boolean bestEffort)", "full_signature": "@Override public NodeIterator merge(String absPath, String srcWorkspace, boolean bestEffort)", "class_method_signature": "VersionManagerFacade.merge(String absPath, String srcWorkspace, boolean bestEffort)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(String absPath, String srcWorkspace, boolean bestEffort, boolean isShallow)", "modifiers": "@Override public", "return": "NodeIterator", "signature": "NodeIterator merge(String absPath, String srcWorkspace, boolean bestEffort, boolean isShallow)", "full_signature": "@Override public NodeIterator merge(String absPath, String srcWorkspace, boolean bestEffort, boolean isShallow)", "class_method_signature": "VersionManagerFacade.merge(String absPath, String srcWorkspace, boolean bestEffort, boolean isShallow)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(Node activityNode)", "modifiers": "@Override public", "return": "NodeIterator", "signature": "NodeIterator merge(Node activityNode)", "full_signature": "@Override public NodeIterator merge(Node activityNode)", "class_method_signature": "VersionManagerFacade.merge(Node activityNode)", "testcase": false, "constructor": false}, {"identifier": "doneMerge", "parameters": "(String absPath, Version version)", "modifiers": "@Override public", "return": "void", "signature": "void doneMerge(String absPath, Version version)", "full_signature": "@Override public void doneMerge(String absPath, Version version)", "class_method_signature": "VersionManagerFacade.doneMerge(String absPath, Version version)", "testcase": false, "constructor": false}, {"identifier": "cancelMerge", "parameters": "(String absPath, Version version)", "modifiers": "@Override public", "return": "void", "signature": "void cancelMerge(String absPath, Version version)", "full_signature": "@Override public void cancelMerge(String absPath, Version version)", "class_method_signature": "VersionManagerFacade.cancelMerge(String absPath, Version version)", "testcase": false, "constructor": false}, {"identifier": "createConfiguration", "parameters": "(String absPath)", "modifiers": "@Override public", "return": "Node", "signature": "Node createConfiguration(String absPath)", "full_signature": "@Override public Node createConfiguration(String absPath)", "class_method_signature": "VersionManagerFacade.createConfiguration(String absPath)", "testcase": false, "constructor": false}, {"identifier": "setActivity", "parameters": "(Node activity)", "modifiers": "@Override public", "return": "Node", "signature": "Node setActivity(Node activity)", "full_signature": "@Override public Node setActivity(Node activity)", "class_method_signature": "VersionManagerFacade.setActivity(Node activity)", "testcase": false, "constructor": false}, {"identifier": "createActivity", "parameters": "(String title)", "modifiers": "@Override public", "return": "Node", "signature": "Node createActivity(String title)", "full_signature": "@Override public Node createActivity(String title)", "class_method_signature": "VersionManagerFacade.createActivity(String title)", "testcase": false, "constructor": false}, {"identifier": "removeActivity", "parameters": "(Node activityNode)", "modifiers": "@Override public", "return": "void", "signature": "void removeActivity(Node activityNode)", "full_signature": "@Override public void removeActivity(Node activityNode)", "class_method_signature": "VersionManagerFacade.removeActivity(Node activityNode)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/version/VersionManagerFacade.java"}, "focal_method": {"identifier": "restore", "parameters": "(Version[] versions, boolean removeExisting)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void restore(Version[] versions, boolean removeExisting) throws RepositoryException {\n        throw new ListenerReadOnlyException();\n    }", "signature": "void restore(Version[] versions, boolean removeExisting)", "full_signature": "@Override public void restore(Version[] versions, boolean removeExisting)", "class_method_signature": "VersionManagerFacade.restore(Version[] versions, boolean removeExisting)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}