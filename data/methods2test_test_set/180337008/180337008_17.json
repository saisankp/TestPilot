{"test_class": {"identifier": "PaullEndpointTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ApplicationContext applicationContext;", "modifier": "@Autowired\n    private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private MockWebServiceClient mockClient;", "modifier": "private", "type": "MockWebServiceClient", "declarator": "mockClient", "var_name": "mockClient"}, {"original_string": "@SpyBean\n    private PaullEndpoint paullEndpoint;", "modifier": "@SpyBean\n    private", "type": "PaullEndpoint", "declarator": "paullEndpoint", "var_name": "paullEndpoint"}, {"original_string": "@MockBean\n    private PesAllerService pesAllerService;", "modifier": "@MockBean\n    private", "type": "PesAllerService", "declarator": "pesAllerService", "var_name": "pesAllerService"}, {"original_string": "@MockBean\n    private PesRetourService pesRetourService;", "modifier": "@MockBean\n    private", "type": "PesRetourService", "declarator": "pesRetourService", "var_name": "pesRetourService"}, {"original_string": "@MockBean\n    private LocalAuthorityService localAuthorityService;", "modifier": "@MockBean\n    private", "type": "LocalAuthorityService", "declarator": "localAuthorityService", "var_name": "localAuthorityService"}, {"original_string": "@MockBean\n    private ExternalRestService externalRestService;", "modifier": "@MockBean\n    private", "type": "ExternalRestService", "declarator": "externalRestService", "var_name": "externalRestService"}, {"original_string": "@MockBean\n    private SesileService sesileService;", "modifier": "@MockBean\n    private", "type": "SesileService", "declarator": "sesileService", "var_name": "sesileService"}, {"original_string": "private DateTimeFormatter dateFormatterWithSeconds = DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\");", "modifier": "private", "type": "DateTimeFormatter", "declarator": "dateFormatterWithSeconds = DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\")", "var_name": "dateFormatterWithSeconds"}, {"original_string": "private DateTimeFormatter dateFormatterWithMinutes = DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");", "modifier": "private", "type": "DateTimeFormatter", "declarator": "dateFormatterWithMinutes = DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")", "var_name": "dateFormatterWithMinutes"}, {"original_string": "private DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");", "modifier": "private", "type": "DateTimeFormatter", "declarator": "dateFormatter = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")", "var_name": "dateFormatter"}], "file": "pes-service/src/test/java/fr/sictiam/stela/pesservice/soap/endpoints/PaullEndpointTest.java"}, "test_case": {"identifier": "getDetailsPesAller", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getDetailsPesAller() throws IOException, ParseException {\n\n        LocalDateTime now = LocalDateTime.now();\n\n        String detailsPesAllerRequest =\n            \"<getDetailsPESAllerRequest xmlns='http://www.processmaker.com'>\" +\n                \"<sessionId>sessionid</sessionId>\" +\n                \"<IdPesAller>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</IdPesAller>\" +\n            \"</getDetailsPESAllerRequest>\";\n\n        String detailsPesAllerResponse =\n            \"<ns2:getDetailsPESAllerResponse xmlns:ns2=\\\"http://www.processmaker.com\\\">\" +\n                \"<ns2:statusCode>OK</ns2:statusCode>\" +\n                \"<ns2:retour>\" +\n                    \"<ns2:message>SUCCESS</ns2:message>\" +\n                    \"<ns2:PESPJ>0</ns2:PESPJ>\" +\n                    \"<ns2:objet>objet</ns2:objet>\" +\n                    \"<ns2:userName>agent@sictiam.fr</ns2:userName>\" +\n                    \"<ns2:nomDocument>pes.xml</ns2:nomDocument>\" +\n                    \"<ns2:dateDepot>\" + dateFormatterWithMinutes.format(now) + \"</ns2:dateDepot>\" +\n                    \"<ns2:dateAR>\" + dateFormatter.format(now) + \"</ns2:dateAR>\" +\n                    \"<ns2:dateAnomalie/><ns2:motifAnomalie/>\" +\n                    \"<ns2:motifPlusAnomalie/>\" +\n                    \"<ns2:userNameBannette/>\" +\n                    \"<ns2:dateDepotBannette/>\" +\n                    \"<ns2:statutBannette/>\" +\n                    \"<ns2:etatclasseur>2</ns2:etatclasseur>\" +\n                    \"<ns2:acteurCourant/>\" +\n                    \"<ns2:circuitClasseur/>\" +\n                    \"<ns2:actionsClasseur>\" +\n                        \"<ns2:nomActeur>agent-pes</ns2:nomActeur>\" +\n                        \"<ns2:dateAction>\" + dateFormatterWithSeconds.format(now) + \"</ns2:dateAction>\" +\n                        \"<ns2:libelleAction>signature</ns2:libelleAction>\" +\n                    \"</ns2:actionsClasseur>\" +\n                \"</ns2:retour>\" +\n            \"</ns2:getDetailsPESAllerResponse>\";\n\n        given(paullEndpoint.getToken(any()))\n                .willReturn(new PaullSoapToken());\n        given(localAuthorityService.getBySiren(any()))\n                .willReturn(localAuthority());\n        given(localAuthorityService.localAuthorityGranted(any(), any()))\n                .willReturn(true);\n        given(pesAllerService.getByUuid(any()))\n                .willReturn(pesAller(now));\n        given(sesileService.getClasseur(any(), any()))\n                .willReturn(Either.right(classeur(now)));\n        given(externalRestService.getProfile(any()))\n                .willReturn(profileNode());\n        given(pesAllerService.getPesHistoryByTypes(any(), any()))\n                .willReturn(Collections.singletonList(pesHistory(now)));\n\n        mockClient.sendRequest(withPayload(new StringSource(detailsPesAllerRequest)))\n                .andExpect(payload(new StringSource(detailsPesAllerResponse)));\n    }", "signature": "void getDetailsPesAller()", "full_signature": "@Test public void getDetailsPesAller()", "class_method_signature": "PaullEndpointTest.getDetailsPesAller()", "testcase": true, "constructor": false, "invocations": ["now", "format", "format", "format", "willReturn", "given", "getToken", "any", "willReturn", "given", "getBySiren", "any", "localAuthority", "willReturn", "given", "localAuthorityGranted", "any", "any", "willReturn", "given", "getByUuid", "any", "pesAller", "willReturn", "given", "getClasseur", "any", "any", "right", "classeur", "willReturn", "given", "getProfile", "any", "profileNode", "willReturn", "given", "getPesHistoryByTypes", "any", "any", "singletonList", "pesHistory", "andExpect", "sendRequest", "withPayload", "payload"]}, "focal_class": {"identifier": "PaullEndpoint", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PaullEndpoint.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PaullEndpoint.class)", "var_name": "LOGGER"}, {"original_string": "private static final String NAMESPACE_URI = \"http://www.processmaker.com\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE_URI = \"http://www.processmaker.com\"", "var_name": "NAMESPACE_URI"}, {"original_string": "private DateTimeFormatter dateFormatterWithMinutes = DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");", "modifier": "private", "type": "DateTimeFormatter", "declarator": "dateFormatterWithMinutes = DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")", "var_name": "dateFormatterWithMinutes"}, {"original_string": "private DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");", "modifier": "private", "type": "DateTimeFormatter", "declarator": "dateFormatter = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")", "var_name": "dateFormatter"}, {"original_string": "@Value(\"${application.jwt.secret}\")\n    String SECRET;", "modifier": "@Value(\"${application.jwt.secret}\")", "type": "String", "declarator": "SECRET", "var_name": "SECRET"}, {"original_string": "private final PesAllerService pesAllerService;", "modifier": "private final", "type": "PesAllerService", "declarator": "pesAllerService", "var_name": "pesAllerService"}, {"original_string": "private final PesRetourService pesRetourService;", "modifier": "private final", "type": "PesRetourService", "declarator": "pesRetourService", "var_name": "pesRetourService"}, {"original_string": "private final LocalAuthorityService localAuthorityService;", "modifier": "private final", "type": "LocalAuthorityService", "declarator": "localAuthorityService", "var_name": "localAuthorityService"}, {"original_string": "private final ExternalRestService externalRestService;", "modifier": "private final", "type": "ExternalRestService", "declarator": "externalRestService", "var_name": "externalRestService"}, {"original_string": "private final SesileService sesileService;", "modifier": "private final", "type": "SesileService", "declarator": "sesileService", "var_name": "sesileService"}], "methods": [{"identifier": "PaullEndpoint", "parameters": "(PesAllerService pesAllerService, LocalAuthorityService localAuthorityService,\n            ExternalRestService externalRestService, PesRetourService pesRetourService, SesileService sesileService)", "modifiers": "public", "return": "", "signature": " PaullEndpoint(PesAllerService pesAllerService, LocalAuthorityService localAuthorityService,\n            ExternalRestService externalRestService, PesRetourService pesRetourService, SesileService sesileService)", "full_signature": "public  PaullEndpoint(PesAllerService pesAllerService, LocalAuthorityService localAuthorityService,\n            ExternalRestService externalRestService, PesRetourService pesRetourService, SesileService sesileService)", "class_method_signature": "PaullEndpoint.PaullEndpoint(PesAllerService pesAllerService, LocalAuthorityService localAuthorityService,\n            ExternalRestService externalRestService, PesRetourService pesRetourService, SesileService sesileService)", "testcase": false, "constructor": true}, {"identifier": "getToken", "parameters": "(String sessionID)", "modifiers": "", "return": "PaullSoapToken", "signature": "PaullSoapToken getToken(String sessionID)", "full_signature": " PaullSoapToken getToken(String sessionID)", "class_method_signature": "PaullEndpoint.getToken(String sessionID)", "testcase": false, "constructor": false}, {"identifier": "depotPESAller", "parameters": "(@RequestPayload DepotPESAllerRequest depotPesAller)", "modifiers": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"depotPESAllerRequest\") public @ResponsePayload", "return": "DepotPESAllerResponse", "signature": "DepotPESAllerResponse depotPESAller(@RequestPayload DepotPESAllerRequest depotPesAller)", "full_signature": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"depotPESAllerRequest\") public @ResponsePayload DepotPESAllerResponse depotPESAller(@RequestPayload DepotPESAllerRequest depotPesAller)", "class_method_signature": "PaullEndpoint.depotPESAller(@RequestPayload DepotPESAllerRequest depotPesAller)", "testcase": false, "constructor": false}, {"identifier": "getDetailsPESAller", "parameters": "(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest)", "modifiers": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getDetailsPESAllerRequest\") public @ResponsePayload", "return": "GetDetailsPESAllerResponse", "signature": "GetDetailsPESAllerResponse getDetailsPESAller(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest)", "full_signature": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getDetailsPESAllerRequest\") public @ResponsePayload GetDetailsPESAllerResponse getDetailsPESAller(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest)", "class_method_signature": "PaullEndpoint.getDetailsPESAller(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest)", "testcase": false, "constructor": false}, {"identifier": "getDetailsPESAllerResponseError", "parameters": "(String errorMessage)", "modifiers": "private", "return": "GetDetailsPESAllerResponse", "signature": "GetDetailsPESAllerResponse getDetailsPESAllerResponseError(String errorMessage)", "full_signature": "private GetDetailsPESAllerResponse getDetailsPESAllerResponseError(String errorMessage)", "class_method_signature": "PaullEndpoint.getDetailsPESAllerResponseError(String errorMessage)", "testcase": false, "constructor": false}, {"identifier": "getPESAller", "parameters": "(@RequestPayload GetPESAllerRequest getPESAllerRequest)", "modifiers": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getPESAllerRequest\") public @ResponsePayload", "return": "GetPESAllerResponse", "signature": "GetPESAllerResponse getPESAller(@RequestPayload GetPESAllerRequest getPESAllerRequest)", "full_signature": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getPESAllerRequest\") public @ResponsePayload GetPESAllerResponse getPESAller(@RequestPayload GetPESAllerRequest getPESAllerRequest)", "class_method_signature": "PaullEndpoint.getPESAller(@RequestPayload GetPESAllerRequest getPESAllerRequest)", "testcase": false, "constructor": false}, {"identifier": "getPESRetour", "parameters": "(@RequestPayload GetPESRetourRequest getPESRetourRequest)", "modifiers": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getPESRetourRequest\") public @ResponsePayload", "return": "GetPESRetourResponse", "signature": "GetPESRetourResponse getPESRetour(@RequestPayload GetPESRetourRequest getPESRetourRequest)", "full_signature": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getPESRetourRequest\") public @ResponsePayload GetPESRetourResponse getPESRetour(@RequestPayload GetPESRetourRequest getPESRetourRequest)", "class_method_signature": "PaullEndpoint.getPESRetour(@RequestPayload GetPESRetourRequest getPESRetourRequest)", "testcase": false, "constructor": false}], "file": "pes-service/src/main/java/fr/sictiam/stela/pesservice/soap/endpoints/PaullEndpoint.java"}, "focal_method": {"identifier": "getDetailsPESAller", "parameters": "(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest)", "modifiers": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getDetailsPESAllerRequest\") public @ResponsePayload", "return": "GetDetailsPESAllerResponse", "body": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getDetailsPESAllerRequest\")\n    public @ResponsePayload\n    GetDetailsPESAllerResponse getDetailsPESAller(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest) throws IOException {\n\n        PaullSoapToken paullSoapToken = getToken(getDetailsPESAllerRequest.getSessionId());\n        if (paullSoapToken == null)\n            return getDetailsPESAllerResponseError(\"SESSION_INVALID_OR_EXPIRED\");\n\n        GenericAccount genericAccount = externalRestService.getGenericAccount(paullSoapToken.getAccountUuid());\n        if (!localAuthorityService.localAuthorityGranted(genericAccount, paullSoapToken.getSiren()))\n            return getDetailsPESAllerResponseError(\"LOCALAUTHORITY_NOT_GRANTED\");\n\n        GetDetailsPESAllerResponse detailsPESAllerResponse = new GetDetailsPESAllerResponse();\n        GetDetailsPESAllerStruct detailsPESAllerStruct = new GetDetailsPESAllerStruct();\n\n        PesAller pesAller = pesAllerService.getByUuid(getDetailsPESAllerRequest.getIdPesAller());\n        Optional<LocalAuthority> localAuthority = localAuthorityService.getBySiren(paullSoapToken.getSiren());\n\n        // PES PJ are not sent to signature, don't bother checking something impossible\n        if (!pesAller.isPj() && !pesAllerService.isAPesOrmc(pesAller) && pesAller.getSesileClasseurId() != null) {\n            Either<HttpStatus, Classeur> sesileResponse = sesileService.getClasseur(localAuthority.get(),\n                    pesAller);\n            if (sesileResponse.isLeft()) {\n                return getDetailsPESAllerResponseError(sesileResponse.getLeft() + \": \"\n                        + sesileResponse.getLeft().getReasonPhrase());\n            }\n\n            Classeur classeur = sesileResponse.get();\n            detailsPESAllerStruct.setNomClasseur(classeur.getNom());\n            detailsPESAllerStruct.setEtatclasseur(classeur.getStatus().ordinal() + \"\");\n            if (classeur.getCircuit() != null)\n                detailsPESAllerStruct.setCircuitClasseur(classeur.getCircuit());\n            else\n                detailsPESAllerStruct.setCircuitClasseur(\"\");\n            classeur.getActions().forEach(action -> {\n                GetDetailsPESAllerStruct1 xmlAction = new GetDetailsPESAllerStruct1();\n                xmlAction.setDateAction(new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\").format(action.getDate()));\n                xmlAction.setLibelleAction(action.getAction());\n                xmlAction.setNomActeur(action.getUsername());\n                detailsPESAllerStruct.getActionsClasseur().add(xmlAction);\n            });\n        } else {\n            detailsPESAllerStruct.setNomClasseur(\"\");\n            detailsPESAllerStruct.setEtatclasseur(\"\");\n            detailsPESAllerStruct.setCircuitClasseur(\"\");\n        }\n\n        JsonNode node = externalRestService.getProfile(pesAller.getProfileUuid());\n\n        detailsPESAllerStruct.setPESPJ(pesAller.isPj() ? \"1\" : \"0\");\n        detailsPESAllerStruct.setObjet(pesAller.getObjet());\n        detailsPESAllerStruct.setUserName(JsonExtractorUtils.extractEmailFromProfile(node));\n        detailsPESAllerStruct.setNomDocument(pesAller.getFileName());\n        detailsPESAllerStruct.setDateDepot(dateFormatterWithMinutes.format(pesAller.getCreation()));\n        detailsPESAllerStruct.setStatutBannette(pesAller.getLastHistoryStatus().name());\n\n        List<PesHistory> fileHistories = pesAllerService.getPesHistoryByTypes(\n                getDetailsPESAllerRequest.getIdPesAller(),\n                Arrays.asList(StatusType.ACK_RECEIVED, StatusType.NACK_RECEIVED));\n\n        Optional<PesHistory> peshistory = fileHistories.stream().findFirst();\n\n        if (peshistory.isPresent()) {\n            detailsPESAllerStruct.setDateAR(dateFormatter.format(peshistory.get().getDate()));\n            detailsPESAllerStruct.setDateAnomalie(\"\");\n            detailsPESAllerStruct.setMotifAnomalie(\"\");\n        } else if (pesAllerService.hasAFatalError(pesAller)) {\n            detailsPESAllerStruct.setDateAR(\"\");\n            detailsPESAllerStruct.setDateAnomalie(dateFormatterWithMinutes.format(pesAller.getLastHistoryDate()));\n            detailsPESAllerStruct.setMotifAnomalie(pesAller.getLastHistoryStatus().name());\n        } else {\n            detailsPESAllerStruct.setDateAR(\"\");\n            detailsPESAllerStruct.setDateAnomalie(\"\");\n            detailsPESAllerStruct.setMotifAnomalie(\"\");\n        }\n\n        // bunch of no longer used properties, set them all to an empty string\n        detailsPESAllerStruct.setMotifPlusAnomalie(\"\");\n        detailsPESAllerStruct.setDateDepotBannette(\"\");\n        detailsPESAllerStruct.setStatutBannette(\"\");\n        detailsPESAllerStruct.setUserNameBannette(\"\");\n        detailsPESAllerStruct.setActeurCourant(\"\");\n\n        detailsPESAllerStruct.setMessage(\"SUCCESS\");\n        detailsPESAllerResponse.getRetour().add(detailsPESAllerStruct);\n        detailsPESAllerResponse.setStatusCode(\"OK\");\n        return detailsPESAllerResponse;\n\n    }", "signature": "GetDetailsPESAllerResponse getDetailsPESAller(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest)", "full_signature": "@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getDetailsPESAllerRequest\") public @ResponsePayload GetDetailsPESAllerResponse getDetailsPESAller(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest)", "class_method_signature": "PaullEndpoint.getDetailsPESAller(\n            @RequestPayload GetDetailsPESAllerRequest getDetailsPESAllerRequest)", "testcase": false, "constructor": false, "invocations": ["getToken", "getSessionId", "getDetailsPESAllerResponseError", "getGenericAccount", "getAccountUuid", "localAuthorityGranted", "getSiren", "getDetailsPESAllerResponseError", "getByUuid", "getIdPesAller", "getBySiren", "getSiren", "isPj", "isAPesOrmc", "getSesileClasseurId", "getClasseur", "get", "isLeft", "getDetailsPESAllerResponseError", "getLeft", "getReasonPhrase", "getLeft", "get", "setNomClasseur", "getNom", "setEtatclasseur", "ordinal", "getStatus", "getCircuit", "setCircuitClasseur", "getCircuit", "setCircuitClasseur", "forEach", "getActions", "setDateAction", "format", "getDate", "setLibelleAction", "getAction", "setNomActeur", "getUsername", "add", "getActionsClasseur", "setNomClasseur", "setEtatclasseur", "setCircuitClasseur", "getProfile", "getProfileUuid", "setPESPJ", "isPj", "setObjet", "getObjet", "setUserName", "extractEmailFromProfile", "setNomDocument", "getFileName", "setDateDepot", "format", "getCreation", "setStatutBannette", "name", "getLastHistoryStatus", "getPesHistoryByTypes", "getIdPesAller", "asList", "findFirst", "stream", "isPresent", "setDateAR", "format", "getDate", "get", "setDateAnomalie", "setMotifAnomalie", "hasAFatalError", "setDateAR", "setDateAnomalie", "format", "getLastHistoryDate", "setMotifAnomalie", "name", "getLastHistoryStatus", "setDateAR", "setDateAnomalie", "setMotifAnomalie", "setMotifPlusAnomalie", "setDateDepotBannette", "setStatutBannette", "setUserNameBannette", "setActeurCourant", "setMessage", "add", "getRetour", "setStatusCode"]}, "repository": {"repo_id": 180337008, "url": "https://github.com/SICTIAM/stela", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 7714, "license": "licensed"}}