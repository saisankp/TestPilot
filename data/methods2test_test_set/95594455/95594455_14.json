{"test_class": {"identifier": "ApplicationScopedTimedMethodBeanTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String TIMER_NAME = MetricRegistry.name(ApplicationScopedTimedMethodBean.class, \"applicationScopedTimedMethod\");", "modifier": "private final static", "type": "String", "declarator": "TIMER_NAME = MetricRegistry.name(ApplicationScopedTimedMethodBean.class, \"applicationScopedTimedMethod\")", "var_name": "TIMER_NAME"}, {"original_string": "private static MetricID timerMID;", "modifier": "private static", "type": "MetricID", "declarator": "timerMID", "var_name": "timerMID"}, {"original_string": "@Inject\n    private MetricRegistry registry;", "modifier": "@Inject\n    private", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "@Inject\n    private ApplicationScopedTimedMethodBean bean;", "modifier": "@Inject\n    private", "type": "ApplicationScopedTimedMethodBean", "declarator": "bean", "var_name": "bean"}], "file": "tck/api/src/main/java/org/eclipse/microprofile/metrics/tck/cdi/ApplicationScopedTimedMethodBeanTest.java"}, "test_case": {"identifier": "callTimedMethodOnce", "parameters": "()", "modifiers": "@Test @InSequence(2) public", "return": "void", "body": "@Test\n    @InSequence(2)\n    public void callTimedMethodOnce() {\n        Timer timer = registry.getTimer(timerMID);\n        assertThat(\"Timer is not registered correctly\", timer, notNullValue());\n\n        // Call the timed method and assert it's been timed\n        bean.applicationScopedTimedMethod();\n\n        // Make sure that the timer has been called\n        assertThat(\"Timer count is incorrect\", timer.getCount(), is(equalTo(1L)));\n    }", "signature": "void callTimedMethodOnce()", "full_signature": "@Test @InSequence(2) public void callTimedMethodOnce()", "class_method_signature": "ApplicationScopedTimedMethodBeanTest.callTimedMethodOnce()", "testcase": true, "constructor": false, "invocations": ["getTimer", "assertThat", "notNullValue", "applicationScopedTimedMethod", "assertThat", "getCount", "is", "equalTo"]}, "focal_class": {"identifier": "ApplicationScopedTimedMethodBean", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "applicationScopedTimedMethod", "parameters": "()", "modifiers": "@Timed public", "return": "void", "signature": "void applicationScopedTimedMethod()", "full_signature": "@Timed public void applicationScopedTimedMethod()", "class_method_signature": "ApplicationScopedTimedMethodBean.applicationScopedTimedMethod()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ApplicationScopedTimedMethodBean.toString()", "testcase": false, "constructor": false}], "file": "tck/api/src/main/java/org/eclipse/microprofile/metrics/tck/cdi/ApplicationScopedTimedMethodBean.java"}, "focal_method": {"identifier": "applicationScopedTimedMethod", "parameters": "()", "modifiers": "@Timed public", "return": "void", "body": "@Timed\n    public void applicationScopedTimedMethod() {\n    }", "signature": "void applicationScopedTimedMethod()", "full_signature": "@Timed public void applicationScopedTimedMethod()", "class_method_signature": "ApplicationScopedTimedMethodBean.applicationScopedTimedMethod()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 95594455, "url": "https://github.com/eclipse/microprofile-metrics", "stars": 57, "created": "6/27/2017 7:44:21 PM +00:00", "updates": "2020-01-24T22:21:48+00:00", "fork": "False", "license": "licensed"}}