{"test_class": {"identifier": "TraceableHttpServerRequestTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "private Request request;", "modifier": "private", "type": "Request", "declarator": "request", "var_name": "request"}, {"original_string": "private HttpServerRequest httpServerRequest;", "modifier": "private", "type": "HttpServerRequest", "declarator": "httpServerRequest", "var_name": "httpServerRequest"}], "file": "analytics/zipkin-tracing/src/test/java/org/wso2/msf4j/analytics/zipkintracing/TraceableHttpServerRequestTest.java"}, "test_case": {"identifier": "testGetHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetHeader() {\n        assertEquals(httpServerRequest.getHttpHeaderValue(\"testK\"), \"testV\");\n    }", "signature": "void testGetHeader()", "full_signature": "@Test public void testGetHeader()", "class_method_signature": "TraceableHttpServerRequestTest.testGetHeader()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getHttpHeaderValue"]}, "focal_class": {"identifier": "TraceableHttpServerRequest", "superclass": "", "interfaces": "implements HttpServerRequest", "fields": [{"original_string": "private final Request req;", "modifier": "private final", "type": "Request", "declarator": "req", "var_name": "req"}], "methods": [{"identifier": "TraceableHttpServerRequest", "parameters": "(Request req)", "modifiers": "", "return": "", "signature": " TraceableHttpServerRequest(Request req)", "full_signature": "  TraceableHttpServerRequest(Request req)", "class_method_signature": "TraceableHttpServerRequest.TraceableHttpServerRequest(Request req)", "testcase": false, "constructor": true}, {"identifier": "getHttpHeaderValue", "parameters": "(String headerName)", "modifiers": "@Override public", "return": "String", "signature": "String getHttpHeaderValue(String headerName)", "full_signature": "@Override public String getHttpHeaderValue(String headerName)", "class_method_signature": "TraceableHttpServerRequest.getHttpHeaderValue(String headerName)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "TraceableHttpServerRequest.getUri()", "testcase": false, "constructor": false}, {"identifier": "getHttpMethod", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getHttpMethod()", "full_signature": "@Override public String getHttpMethod()", "class_method_signature": "TraceableHttpServerRequest.getHttpMethod()", "testcase": false, "constructor": false}], "file": "analytics/zipkin-tracing/src/main/java/org/wso2/msf4j/analytics/zipkintracing/TraceableHttpServerRequest.java"}, "focal_method": {"identifier": "getHttpHeaderValue", "parameters": "(String headerName)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getHttpHeaderValue(String headerName) {\n        return req.getHeader(headerName);\n    }", "signature": "String getHttpHeaderValue(String headerName)", "full_signature": "@Override public String getHttpHeaderValue(String headerName)", "class_method_signature": "TraceableHttpServerRequest.getHttpHeaderValue(String headerName)", "testcase": false, "constructor": false, "invocations": ["getHeader"]}, "repository": {"repo_id": 42847560, "url": "https://github.com/wso2/msf4j", "language": "Java", "is_fork": false, "fork_count": 337, "stargazer_count": 345, "size": 33285, "license": "licensed"}}