{"test_class": {"identifier": "J4pClientBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/java/src/test/java/org/jolokia/client/J4pClientBuilderTest.java"}, "test_case": {"identifier": "testParseProxySettings_null", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParseProxySettings_null() throws Exception {\n        assertNull(J4pClientBuilder.parseProxySettings(null));\n    }", "signature": "void testParseProxySettings_null()", "full_signature": "@Test public void testParseProxySettings_null()", "class_method_signature": "J4pClientBuilderTest.testParseProxySettings_null()", "testcase": true, "constructor": false, "invocations": ["assertNull", "parseProxySettings"]}, "focal_class": {"identifier": "J4pClientBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int connectionTimeout;", "modifier": "private", "type": "int", "declarator": "connectionTimeout", "var_name": "connectionTimeout"}, {"original_string": "private int socketTimeout;", "modifier": "private", "type": "int", "declarator": "socketTimeout", "var_name": "socketTimeout"}, {"original_string": "private int maxTotalConnections;", "modifier": "private", "type": "int", "declarator": "maxTotalConnections", "var_name": "maxTotalConnections"}, {"original_string": "private int defaultMaxConnectionsPerRoute;", "modifier": "private", "type": "int", "declarator": "defaultMaxConnectionsPerRoute", "var_name": "defaultMaxConnectionsPerRoute"}, {"original_string": "private int maxConnectionPoolTimeout;", "modifier": "private", "type": "int", "declarator": "maxConnectionPoolTimeout", "var_name": "maxConnectionPoolTimeout"}, {"original_string": "private Charset contentCharset;", "modifier": "private", "type": "Charset", "declarator": "contentCharset", "var_name": "contentCharset"}, {"original_string": "private boolean expectContinue;", "modifier": "private", "type": "boolean", "declarator": "expectContinue", "var_name": "expectContinue"}, {"original_string": "private boolean tcpNoDelay;", "modifier": "private", "type": "boolean", "declarator": "tcpNoDelay", "var_name": "tcpNoDelay"}, {"original_string": "private int socketBufferSize;", "modifier": "private", "type": "int", "declarator": "socketBufferSize", "var_name": "socketBufferSize"}, {"original_string": "private ConnectionSocketFactory sslConnectionSocketFactory;", "modifier": "private", "type": "ConnectionSocketFactory", "declarator": "sslConnectionSocketFactory", "var_name": "sslConnectionSocketFactory"}, {"original_string": "private boolean pooledConnections;", "modifier": "private", "type": "boolean", "declarator": "pooledConnections", "var_name": "pooledConnections"}, {"original_string": "private String url;", "modifier": "private", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "private String user;", "modifier": "private", "type": "String", "declarator": "user", "var_name": "user"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private String targetUrl;", "modifier": "private", "type": "String", "declarator": "targetUrl", "var_name": "targetUrl"}, {"original_string": "private String targetUser;", "modifier": "private", "type": "String", "declarator": "targetUser", "var_name": "targetUser"}, {"original_string": "private String targetPassword;", "modifier": "private", "type": "String", "declarator": "targetPassword", "var_name": "targetPassword"}, {"original_string": "private CookieStore cookieStore;", "modifier": "private", "type": "CookieStore", "declarator": "cookieStore", "var_name": "cookieStore"}, {"original_string": "private J4pAuthenticator authenticator;", "modifier": "private", "type": "J4pAuthenticator", "declarator": "authenticator", "var_name": "authenticator"}, {"original_string": "private Proxy httpProxy;", "modifier": "private", "type": "Proxy", "declarator": "httpProxy", "var_name": "httpProxy"}, {"original_string": "private J4pResponseExtractor responseExtractor;", "modifier": "private", "type": "J4pResponseExtractor", "declarator": "responseExtractor", "var_name": "responseExtractor"}], "methods": [{"identifier": "J4pClientBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " J4pClientBuilder()", "full_signature": "public  J4pClientBuilder()", "class_method_signature": "J4pClientBuilder.J4pClientBuilder()", "testcase": false, "constructor": true}, {"identifier": "url", "parameters": "(String pUrl)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder url(String pUrl)", "full_signature": "public final J4pClientBuilder url(String pUrl)", "class_method_signature": "J4pClientBuilder.url(String pUrl)", "testcase": false, "constructor": false}, {"identifier": "user", "parameters": "(String pUser)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder user(String pUser)", "full_signature": "public final J4pClientBuilder user(String pUser)", "class_method_signature": "J4pClientBuilder.user(String pUser)", "testcase": false, "constructor": false}, {"identifier": "password", "parameters": "(String pPassword)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder password(String pPassword)", "full_signature": "public final J4pClientBuilder password(String pPassword)", "class_method_signature": "J4pClientBuilder.password(String pPassword)", "testcase": false, "constructor": false}, {"identifier": "target", "parameters": "(String pUrl)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder target(String pUrl)", "full_signature": "public final J4pClientBuilder target(String pUrl)", "class_method_signature": "J4pClientBuilder.target(String pUrl)", "testcase": false, "constructor": false}, {"identifier": "targetUser", "parameters": "(String pUser)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder targetUser(String pUser)", "full_signature": "public final J4pClientBuilder targetUser(String pUser)", "class_method_signature": "J4pClientBuilder.targetUser(String pUser)", "testcase": false, "constructor": false}, {"identifier": "targetPassword", "parameters": "(String pPassword)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder targetPassword(String pPassword)", "full_signature": "public final J4pClientBuilder targetPassword(String pPassword)", "class_method_signature": "J4pClientBuilder.targetPassword(String pPassword)", "testcase": false, "constructor": false}, {"identifier": "singleConnection", "parameters": "()", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder singleConnection()", "full_signature": "public final J4pClientBuilder singleConnection()", "class_method_signature": "J4pClientBuilder.singleConnection()", "testcase": false, "constructor": false}, {"identifier": "pooledConnections", "parameters": "()", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder pooledConnections()", "full_signature": "public final J4pClientBuilder pooledConnections()", "class_method_signature": "J4pClientBuilder.pooledConnections()", "testcase": false, "constructor": false}, {"identifier": "connectionTimeout", "parameters": "(int pTimeOut)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder connectionTimeout(int pTimeOut)", "full_signature": "public final J4pClientBuilder connectionTimeout(int pTimeOut)", "class_method_signature": "J4pClientBuilder.connectionTimeout(int pTimeOut)", "testcase": false, "constructor": false}, {"identifier": "socketTimeout", "parameters": "(int pTimeOut)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder socketTimeout(int pTimeOut)", "full_signature": "public final J4pClientBuilder socketTimeout(int pTimeOut)", "class_method_signature": "J4pClientBuilder.socketTimeout(int pTimeOut)", "testcase": false, "constructor": false}, {"identifier": "maxTotalConnections", "parameters": "(int pConnections)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder maxTotalConnections(int pConnections)", "full_signature": "public final J4pClientBuilder maxTotalConnections(int pConnections)", "class_method_signature": "J4pClientBuilder.maxTotalConnections(int pConnections)", "testcase": false, "constructor": false}, {"identifier": "defaultMaxConnectionsPerRoute", "parameters": "(int pDefaultMaxConnectionsPerRoute)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder defaultMaxConnectionsPerRoute(int pDefaultMaxConnectionsPerRoute)", "full_signature": "public final J4pClientBuilder defaultMaxConnectionsPerRoute(int pDefaultMaxConnectionsPerRoute)", "class_method_signature": "J4pClientBuilder.defaultMaxConnectionsPerRoute(int pDefaultMaxConnectionsPerRoute)", "testcase": false, "constructor": false}, {"identifier": "maxConnectionPoolTimeout", "parameters": "(int pConnectionPoolTimeout)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder maxConnectionPoolTimeout(int pConnectionPoolTimeout)", "full_signature": "public final J4pClientBuilder maxConnectionPoolTimeout(int pConnectionPoolTimeout)", "class_method_signature": "J4pClientBuilder.maxConnectionPoolTimeout(int pConnectionPoolTimeout)", "testcase": false, "constructor": false}, {"identifier": "contentCharset", "parameters": "(String pContentCharset)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder contentCharset(String pContentCharset)", "full_signature": "public final J4pClientBuilder contentCharset(String pContentCharset)", "class_method_signature": "J4pClientBuilder.contentCharset(String pContentCharset)", "testcase": false, "constructor": false}, {"identifier": "contentCharset", "parameters": "(Charset pContentCharset)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder contentCharset(Charset pContentCharset)", "full_signature": "public final J4pClientBuilder contentCharset(Charset pContentCharset)", "class_method_signature": "J4pClientBuilder.contentCharset(Charset pContentCharset)", "testcase": false, "constructor": false}, {"identifier": "expectContinue", "parameters": "(boolean pUse)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder expectContinue(boolean pUse)", "full_signature": "public final J4pClientBuilder expectContinue(boolean pUse)", "class_method_signature": "J4pClientBuilder.expectContinue(boolean pUse)", "testcase": false, "constructor": false}, {"identifier": "tcpNoDelay", "parameters": "(boolean pUse)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder tcpNoDelay(boolean pUse)", "full_signature": "public final J4pClientBuilder tcpNoDelay(boolean pUse)", "class_method_signature": "J4pClientBuilder.tcpNoDelay(boolean pUse)", "testcase": false, "constructor": false}, {"identifier": "socketBufferSize", "parameters": "(int pSize)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder socketBufferSize(int pSize)", "full_signature": "public final J4pClientBuilder socketBufferSize(int pSize)", "class_method_signature": "J4pClientBuilder.socketBufferSize(int pSize)", "testcase": false, "constructor": false}, {"identifier": "cookieStore", "parameters": "(CookieStore pCookieStore)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder cookieStore(CookieStore pCookieStore)", "full_signature": "public final J4pClientBuilder cookieStore(CookieStore pCookieStore)", "class_method_signature": "J4pClientBuilder.cookieStore(CookieStore pCookieStore)", "testcase": false, "constructor": false}, {"identifier": "authenticator", "parameters": "(J4pAuthenticator pAuthenticator)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder authenticator(J4pAuthenticator pAuthenticator)", "full_signature": "public final J4pClientBuilder authenticator(J4pAuthenticator pAuthenticator)", "class_method_signature": "J4pClientBuilder.authenticator(J4pAuthenticator pAuthenticator)", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "(String pProxy)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder proxy(String pProxy)", "full_signature": "public final J4pClientBuilder proxy(String pProxy)", "class_method_signature": "J4pClientBuilder.proxy(String pProxy)", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "(String pProxyHost, int pProxyPort)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder proxy(String pProxyHost, int pProxyPort)", "full_signature": "public final J4pClientBuilder proxy(String pProxyHost, int pProxyPort)", "class_method_signature": "J4pClientBuilder.proxy(String pProxyHost, int pProxyPort)", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "(String pProxyHost, int pProxyPort, String pProxyUser, String pProxyPass)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder proxy(String pProxyHost, int pProxyPort, String pProxyUser, String pProxyPass)", "full_signature": "public final J4pClientBuilder proxy(String pProxyHost, int pProxyPort, String pProxyUser, String pProxyPass)", "class_method_signature": "J4pClientBuilder.proxy(String pProxyHost, int pProxyPort, String pProxyUser, String pProxyPass)", "testcase": false, "constructor": false}, {"identifier": "useProxyFromEnvironment", "parameters": "()", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder useProxyFromEnvironment()", "full_signature": "public final J4pClientBuilder useProxyFromEnvironment()", "class_method_signature": "J4pClientBuilder.useProxyFromEnvironment()", "testcase": false, "constructor": false}, {"identifier": "responseExtractor", "parameters": "(J4pResponseExtractor pResponseExtractor)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder responseExtractor(J4pResponseExtractor pResponseExtractor)", "full_signature": "public final J4pClientBuilder responseExtractor(J4pResponseExtractor pResponseExtractor)", "class_method_signature": "J4pClientBuilder.responseExtractor(J4pResponseExtractor pResponseExtractor)", "testcase": false, "constructor": false}, {"identifier": "sslConnectionSocketFactory", "parameters": "(ConnectionSocketFactory pSslConnectionSocketFactory)", "modifiers": "public final", "return": "J4pClientBuilder", "signature": "J4pClientBuilder sslConnectionSocketFactory(ConnectionSocketFactory pSslConnectionSocketFactory)", "full_signature": "public final J4pClientBuilder sslConnectionSocketFactory(ConnectionSocketFactory pSslConnectionSocketFactory)", "class_method_signature": "J4pClientBuilder.sslConnectionSocketFactory(ConnectionSocketFactory pSslConnectionSocketFactory)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "J4pClient", "signature": "J4pClient build()", "full_signature": "public J4pClient build()", "class_method_signature": "J4pClientBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "createHttpClient", "parameters": "()", "modifiers": "public", "return": "HttpClient", "signature": "HttpClient createHttpClient()", "full_signature": "public HttpClient createHttpClient()", "class_method_signature": "J4pClientBuilder.createHttpClient()", "testcase": false, "constructor": false}, {"identifier": "parseProxySettings", "parameters": "(String spec)", "modifiers": "static", "return": "Proxy", "signature": "Proxy parseProxySettings(String spec)", "full_signature": "static Proxy parseProxySettings(String spec)", "class_method_signature": "J4pClientBuilder.parseProxySettings(String spec)", "testcase": false, "constructor": false}, {"identifier": "setupProxyIfNeeded", "parameters": "(HttpClientBuilder builder)", "modifiers": "private", "return": "void", "signature": "void setupProxyIfNeeded(HttpClientBuilder builder)", "full_signature": "private void setupProxyIfNeeded(HttpClientBuilder builder)", "class_method_signature": "J4pClientBuilder.setupProxyIfNeeded(HttpClientBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "getVersionInfo", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getVersionInfo()", "full_signature": "private String getVersionInfo()", "class_method_signature": "J4pClientBuilder.getVersionInfo()", "testcase": false, "constructor": false}, {"identifier": "createRequestConfig", "parameters": "()", "modifiers": "private", "return": "RequestConfig", "signature": "RequestConfig createRequestConfig()", "full_signature": "private RequestConfig createRequestConfig()", "class_method_signature": "J4pClientBuilder.createRequestConfig()", "testcase": false, "constructor": false}, {"identifier": "createBasicConnectionManager", "parameters": "()", "modifiers": "private", "return": "BasicHttpClientConnectionManager", "signature": "BasicHttpClientConnectionManager createBasicConnectionManager()", "full_signature": "private BasicHttpClientConnectionManager createBasicConnectionManager()", "class_method_signature": "J4pClientBuilder.createBasicConnectionManager()", "testcase": false, "constructor": false}, {"identifier": "createPoolingConnectionManager", "parameters": "()", "modifiers": "private", "return": "PoolingHttpClientConnectionManager", "signature": "PoolingHttpClientConnectionManager createPoolingConnectionManager()", "full_signature": "private PoolingHttpClientConnectionManager createPoolingConnectionManager()", "class_method_signature": "J4pClientBuilder.createPoolingConnectionManager()", "testcase": false, "constructor": false}, {"identifier": "createDefaultSSLConnectionSocketFactory", "parameters": "()", "modifiers": "private", "return": "SSLConnectionSocketFactory", "signature": "SSLConnectionSocketFactory createDefaultSSLConnectionSocketFactory()", "full_signature": "private SSLConnectionSocketFactory createDefaultSSLConnectionSocketFactory()", "class_method_signature": "J4pClientBuilder.createDefaultSSLConnectionSocketFactory()", "testcase": false, "constructor": false}, {"identifier": "createConnectionConfig", "parameters": "()", "modifiers": "private", "return": "ConnectionConfig", "signature": "ConnectionConfig createConnectionConfig()", "full_signature": "private ConnectionConfig createConnectionConfig()", "class_method_signature": "J4pClientBuilder.createConnectionConfig()", "testcase": false, "constructor": false}, {"identifier": "createSocketConfig", "parameters": "()", "modifiers": "private", "return": "SocketConfig", "signature": "SocketConfig createSocketConfig()", "full_signature": "private SocketConfig createSocketConfig()", "class_method_signature": "J4pClientBuilder.createSocketConfig()", "testcase": false, "constructor": false}, {"identifier": "getSocketFactoryRegistry", "parameters": "()", "modifiers": "private", "return": "Registry<ConnectionSocketFactory>", "signature": "Registry<ConnectionSocketFactory> getSocketFactoryRegistry()", "full_signature": "private Registry<ConnectionSocketFactory> getSocketFactoryRegistry()", "class_method_signature": "J4pClientBuilder.getSocketFactoryRegistry()", "testcase": false, "constructor": false}, {"identifier": "getConnectionFactory", "parameters": "()", "modifiers": "private", "return": "HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection>", "signature": "HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection> getConnectionFactory()", "full_signature": "private HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection> getConnectionFactory()", "class_method_signature": "J4pClientBuilder.getConnectionFactory()", "testcase": false, "constructor": false}], "file": "client/java/src/main/java/org/jolokia/client/J4pClientBuilder.java"}, "focal_method": {"identifier": "parseProxySettings", "parameters": "(String spec)", "modifiers": "static", "return": "Proxy", "body": "static Proxy parseProxySettings(String spec) {\n\n        try {\n            if (spec == null || spec.length() == 0) {\n                return null;\n            }\n            return new Proxy(spec);\n        } catch (URISyntaxException e) {\n            return null;\n        }\n    }", "signature": "Proxy parseProxySettings(String spec)", "full_signature": "static Proxy parseProxySettings(String spec)", "class_method_signature": "J4pClientBuilder.parseProxySettings(String spec)", "testcase": false, "constructor": false, "invocations": ["length"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}