{"test_class": {"identifier": "JavaSourceFetchExtensionTest", "superclass": "", "interfaces": "", "fields": [], "file": "jetty-xslt-tools/src/test/java/org/eclipse/jetty/xslt/tools/JavaSourceFetchExtensionTest.java"}, "test_case": {"identifier": "testSourceFetch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSourceFetch() throws Exception\n    {\n        JavaSourceFetchExtension srcFetch = new JavaSourceFetchExtension();\n        \n        String src = srcFetch.fetch(\"https://raw.githubusercontent.com/eclipse/jetty.project/jetty-9.4.x/jetty-http/src/main/java/org/eclipse/jetty/http/HttpCookie.java\", \"getName\");\n        \n        Assert.assertNotNull(src);\n\n        //System.out.println(src);\n    }", "signature": "void testSourceFetch()", "full_signature": "@Test public void testSourceFetch()", "class_method_signature": "JavaSourceFetchExtensionTest.testSourceFetch()", "testcase": true, "constructor": false, "invocations": ["fetch", "assertNotNull"]}, "focal_class": {"identifier": "JavaSourceFetchExtension", "superclass": "extends AbstractFetchException", "interfaces": "", "fields": [], "methods": [{"identifier": "fetch", "parameters": "( String location, String method )", "modifiers": "public static", "return": "String", "signature": "String fetch( String location, String method )", "full_signature": "public static String fetch( String location, String method )", "class_method_signature": "JavaSourceFetchExtension.fetch( String location, String method )", "testcase": false, "constructor": false}], "file": "jetty-xslt-tools/src/main/java/org/eclipse/jetty/xslt/tools/JavaSourceFetchExtension.java"}, "focal_method": {"identifier": "fetch", "parameters": "( String location, String method )", "modifiers": "public static", "return": "String", "body": "public static String fetch( String location, String method ) throws Exception\n    {        \n        File fetchFile = checkCache( location );\n        \n        if ( fetchFile == null )\n        {\n            URL url = new URL(location);\n            fetchFile = cache(location,url.openStream());\n        }       \n        \n\n        if ( method == null || \"\".equals(method) )\n        {\n            CompilationUnit cu = JavaParser.parse(new FileInputStream(fetchFile));\n            \n            return cu.toString();\n        }\n        else\n        {\n            CompilationUnit cu = JavaParser.parse(new FileInputStream(fetchFile));\n\n            // visit and print the methods names\n            MethodVisitor mv = new MethodVisitor(method);\n\n            mv.visit(cu,null);\n\n            return mv.source;\n        }\n       \n    }", "signature": "String fetch( String location, String method )", "full_signature": "public static String fetch( String location, String method )", "class_method_signature": "JavaSourceFetchExtension.fetch( String location, String method )", "testcase": false, "constructor": false, "invocations": ["checkCache", "cache", "openStream", "equals", "parse", "toString", "parse", "visit"]}, "repository": {"repo_id": 2045140, "url": "https://github.com/eclipse/jetty.toolchain", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 10, "size": 2094, "license": "licensed"}}