{"test_class": {"identifier": "ExpirableBloomFilterConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "filter-service-core/src/test/java/cn/leancloud/filter/service/ExpirableBloomFilterConfigTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        final int validPeriod = ThreadLocalRandom.current().nextInt(0, Integer.MAX_VALUE);\n        final double fpp = ThreadLocalRandom.current().nextDouble(0.0001, 1);\n        final int expectedInsertions = ThreadLocalRandom.current().nextInt(1, Integer.MAX_VALUE);\n        final ExpirableBloomFilterConfig filterA = new ExpirableBloomFilterConfig()\n                .setValidPeriodAfterCreate(Duration.ofSeconds(validPeriod))\n                .setFpp(fpp)\n                .setExpectedInsertions(expectedInsertions);\n\n        final ExpirableBloomFilterConfig filterB = new ExpirableBloomFilterConfig()\n                .setValidPeriodAfterCreate(Duration.ofSeconds(validPeriod))\n                .setFpp(fpp)\n                .setExpectedInsertions(expectedInsertions);\n\n        assertThat(filterA).isEqualTo(filterB);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "ExpirableBloomFilterConfigTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["nextInt", "current", "nextDouble", "current", "nextInt", "current", "setExpectedInsertions", "setFpp", "setValidPeriodAfterCreate", "ofSeconds", "setExpectedInsertions", "setFpp", "setValidPeriodAfterCreate", "ofSeconds", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ExpirableBloomFilterConfig", "superclass": "extends AbstractBloomFilterConfig<ExpirableBloomFilterConfig>", "interfaces": "", "fields": [{"original_string": "private Duration validPeriodAfterCreate;", "modifier": "private", "type": "Duration", "declarator": "validPeriodAfterCreate", "var_name": "validPeriodAfterCreate"}, {"original_string": "@Nullable\n    private Duration validPeriodAfterAccess;", "modifier": "@Nullable\n    private", "type": "Duration", "declarator": "validPeriodAfterAccess", "var_name": "validPeriodAfterAccess"}], "methods": [{"identifier": "ExpirableBloomFilterConfig", "parameters": "()", "modifiers": "", "return": "", "signature": " ExpirableBloomFilterConfig()", "full_signature": "  ExpirableBloomFilterConfig()", "class_method_signature": "ExpirableBloomFilterConfig.ExpirableBloomFilterConfig()", "testcase": false, "constructor": true}, {"identifier": "ExpirableBloomFilterConfig", "parameters": "(int expectedInsertions, double fpp)", "modifiers": "", "return": "", "signature": " ExpirableBloomFilterConfig(int expectedInsertions, double fpp)", "full_signature": "  ExpirableBloomFilterConfig(int expectedInsertions, double fpp)", "class_method_signature": "ExpirableBloomFilterConfig.ExpirableBloomFilterConfig(int expectedInsertions, double fpp)", "testcase": false, "constructor": true}, {"identifier": "ExpirableBloomFilterConfig", "parameters": "(ExpirableBloomFilterConfig config)", "modifiers": "", "return": "", "signature": " ExpirableBloomFilterConfig(ExpirableBloomFilterConfig config)", "full_signature": "  ExpirableBloomFilterConfig(ExpirableBloomFilterConfig config)", "class_method_signature": "ExpirableBloomFilterConfig.ExpirableBloomFilterConfig(ExpirableBloomFilterConfig config)", "testcase": false, "constructor": true}, {"identifier": "validPeriodAfterCreate", "parameters": "()", "modifiers": "", "return": "Duration", "signature": "Duration validPeriodAfterCreate()", "full_signature": " Duration validPeriodAfterCreate()", "class_method_signature": "ExpirableBloomFilterConfig.validPeriodAfterCreate()", "testcase": false, "constructor": false}, {"identifier": "setValidPeriodAfterCreate", "parameters": "(Duration validPeriod)", "modifiers": "", "return": "ExpirableBloomFilterConfig", "signature": "ExpirableBloomFilterConfig setValidPeriodAfterCreate(Duration validPeriod)", "full_signature": " ExpirableBloomFilterConfig setValidPeriodAfterCreate(Duration validPeriod)", "class_method_signature": "ExpirableBloomFilterConfig.setValidPeriodAfterCreate(Duration validPeriod)", "testcase": false, "constructor": false}, {"identifier": "validPeriodAfterAccess", "parameters": "()", "modifiers": "@Nullable", "return": "Duration", "signature": "Duration validPeriodAfterAccess()", "full_signature": "@Nullable Duration validPeriodAfterAccess()", "class_method_signature": "ExpirableBloomFilterConfig.validPeriodAfterAccess()", "testcase": false, "constructor": false}, {"identifier": "setValidPeriodAfterAccess", "parameters": "(Duration validPeriod)", "modifiers": "", "return": "ExpirableBloomFilterConfig", "signature": "ExpirableBloomFilterConfig setValidPeriodAfterAccess(Duration validPeriod)", "full_signature": " ExpirableBloomFilterConfig setValidPeriodAfterAccess(Duration validPeriod)", "class_method_signature": "ExpirableBloomFilterConfig.setValidPeriodAfterAccess(Duration validPeriod)", "testcase": false, "constructor": false}, {"identifier": "expiration", "parameters": "(ZonedDateTime creation)", "modifiers": "", "return": "ZonedDateTime", "signature": "ZonedDateTime expiration(ZonedDateTime creation)", "full_signature": " ZonedDateTime expiration(ZonedDateTime creation)", "class_method_signature": "ExpirableBloomFilterConfig.expiration(ZonedDateTime creation)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ExpirableBloomFilterConfig.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ExpirableBloomFilterConfig.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ExpirableBloomFilterConfig.toString()", "testcase": false, "constructor": false}, {"identifier": "self", "parameters": "()", "modifiers": "@Override protected", "return": "ExpirableBloomFilterConfig", "signature": "ExpirableBloomFilterConfig self()", "full_signature": "@Override protected ExpirableBloomFilterConfig self()", "class_method_signature": "ExpirableBloomFilterConfig.self()", "testcase": false, "constructor": false}], "file": "filter-service-core/src/main/java/cn/leancloud/filter/service/ExpirableBloomFilterConfig.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        final ExpirableBloomFilterConfig that = (ExpirableBloomFilterConfig) o;\n        return validPeriodAfterCreate.equals(that.validPeriodAfterCreate) &&\n                (validPeriodAfterAccess == null || validPeriodAfterAccess.equals(that.validPeriodAfterAccess));\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ExpirableBloomFilterConfig.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals", "equals"]}, "repository": {"repo_id": 217849614, "url": "https://github.com/leancloud/filter-service", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 14, "size": 2797, "license": "licensed"}}