{"test_class": {"identifier": "TaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static OneShotLatch awaitLatch;", "modifier": "private static", "type": "OneShotLatch", "declarator": "awaitLatch", "var_name": "awaitLatch"}, {"original_string": "private static OneShotLatch triggerLatch;", "modifier": "private static", "type": "OneShotLatch", "declarator": "triggerLatch", "var_name": "triggerLatch"}, {"original_string": "private ActorGateway taskManagerGateway;", "modifier": "private", "type": "ActorGateway", "declarator": "taskManagerGateway", "var_name": "taskManagerGateway"}, {"original_string": "private ActorGateway jobManagerGateway;", "modifier": "private", "type": "ActorGateway", "declarator": "jobManagerGateway", "var_name": "jobManagerGateway"}, {"original_string": "private ActorGateway listenerGateway;", "modifier": "private", "type": "ActorGateway", "declarator": "listenerGateway", "var_name": "listenerGateway"}, {"original_string": "private BlockingQueue<Object> taskManagerMessages;", "modifier": "private", "type": "BlockingQueue<Object>", "declarator": "taskManagerMessages", "var_name": "taskManagerMessages"}, {"original_string": "private BlockingQueue<Object> jobManagerMessages;", "modifier": "private", "type": "BlockingQueue<Object>", "declarator": "jobManagerMessages", "var_name": "jobManagerMessages"}, {"original_string": "private BlockingQueue<Object> listenerMessages;", "modifier": "private", "type": "BlockingQueue<Object>", "declarator": "listenerMessages", "var_name": "listenerMessages"}], "file": "flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskTest.java"}, "test_case": {"identifier": "testOnPartitionStateUpdate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testOnPartitionStateUpdate() throws Exception {\n\t\tIntermediateDataSetID resultId = new IntermediateDataSetID();\n\t\tResultPartitionID partitionId = new ResultPartitionID();\n\n\t\tSingleInputGate inputGate = mock(SingleInputGate.class);\n\t\twhen(inputGate.getConsumedResultId()).thenReturn(resultId);\n\n\t\tfinal Task task = createTask(InvokableBlockingInInvoke.class);\n\n\t\t// Set the mock input gate\n\t\tsetInputGate(task, inputGate);\n\n\t\t// Expected task state for each partition state\n\t\tfinal Map<ExecutionState, ExecutionState> expected = Maps\n\t\t\t\t.newHashMapWithExpectedSize(ExecutionState.values().length);\n\n\t\t// Fail the task for unexpected states\n\t\tfor (ExecutionState state : ExecutionState.values()) {\n\t\t\texpected.put(state, ExecutionState.FAILED);\n\t\t}\n\n\t\texpected.put(ExecutionState.RUNNING, ExecutionState.RUNNING);\n\n\t\texpected.put(ExecutionState.CANCELED, ExecutionState.CANCELING);\n\t\texpected.put(ExecutionState.CANCELING, ExecutionState.CANCELING);\n\t\texpected.put(ExecutionState.FAILED, ExecutionState.CANCELING);\n\n\t\tfor (ExecutionState state : ExecutionState.values()) {\n\t\t\tsetState(task, ExecutionState.RUNNING);\n\n\t\t\ttask.onPartitionStateUpdate(resultId, partitionId.getPartitionId(), state);\n\n\t\t\tExecutionState newTaskState = task.getExecutionState();\n\n\t\t\tassertEquals(expected.get(state), newTaskState);\n\t\t}\n\n\t\tverify(inputGate, times(1)).retriggerPartitionRequest(eq(partitionId.getPartitionId()));\n\t}", "signature": "void testOnPartitionStateUpdate()", "full_signature": "@Test public void testOnPartitionStateUpdate()", "class_method_signature": "TaskTest.testOnPartitionStateUpdate()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getConsumedResultId", "createTask", "setInputGate", "newHashMapWithExpectedSize", "values", "values", "put", "put", "put", "put", "put", "values", "setState", "onPartitionStateUpdate", "getPartitionId", "getExecutionState", "assertEquals", "get", "retriggerPartitionRequest", "verify", "times", "eq", "getPartitionId"]}, "focal_class": {"identifier": "Task", "superclass": "", "interfaces": "implements Runnable", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(Task.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(Task.class)", "var_name": "LOG"}, {"original_string": "private static final ThreadGroup TASK_THREADS_GROUP = new ThreadGroup(\"Flink Task Threads\");", "modifier": "private static final", "type": "ThreadGroup", "declarator": "TASK_THREADS_GROUP = new ThreadGroup(\"Flink Task Threads\")", "var_name": "TASK_THREADS_GROUP"}, {"original_string": "private static final AtomicReferenceFieldUpdater<Task, ExecutionState> STATE_UPDATER =\n\t\t\tAtomicReferenceFieldUpdater.newUpdater(Task.class, ExecutionState.class, \"executionState\");", "modifier": "private static final", "type": "AtomicReferenceFieldUpdater<Task, ExecutionState>", "declarator": "STATE_UPDATER =\n\t\t\tAtomicReferenceFieldUpdater.newUpdater(Task.class, ExecutionState.class, \"executionState\")", "var_name": "STATE_UPDATER"}, {"original_string": "private final JobID jobId;", "modifier": "private final", "type": "JobID", "declarator": "jobId", "var_name": "jobId"}, {"original_string": "private final JobVertexID vertexId;", "modifier": "private final", "type": "JobVertexID", "declarator": "vertexId", "var_name": "vertexId"}, {"original_string": "private final ExecutionAttemptID executionId;", "modifier": "private final", "type": "ExecutionAttemptID", "declarator": "executionId", "var_name": "executionId"}, {"original_string": "private final TaskInfo taskInfo;", "modifier": "private final", "type": "TaskInfo", "declarator": "taskInfo", "var_name": "taskInfo"}, {"original_string": "private final String taskNameWithSubtask;", "modifier": "private final", "type": "String", "declarator": "taskNameWithSubtask", "var_name": "taskNameWithSubtask"}, {"original_string": "private final Configuration jobConfiguration;", "modifier": "private final", "type": "Configuration", "declarator": "jobConfiguration", "var_name": "jobConfiguration"}, {"original_string": "private final Configuration taskConfiguration;", "modifier": "private final", "type": "Configuration", "declarator": "taskConfiguration", "var_name": "taskConfiguration"}, {"original_string": "private final List<BlobKey> requiredJarFiles;", "modifier": "private final", "type": "List<BlobKey>", "declarator": "requiredJarFiles", "var_name": "requiredJarFiles"}, {"original_string": "private final List<URL> requiredClasspaths;", "modifier": "private final", "type": "List<URL>", "declarator": "requiredClasspaths", "var_name": "requiredClasspaths"}, {"original_string": "private final String nameOfInvokableClass;", "modifier": "private final", "type": "String", "declarator": "nameOfInvokableClass", "var_name": "nameOfInvokableClass"}, {"original_string": "private final TaskManagerRuntimeInfo taskManagerConfig;", "modifier": "private final", "type": "TaskManagerRuntimeInfo", "declarator": "taskManagerConfig", "var_name": "taskManagerConfig"}, {"original_string": "private final MemoryManager memoryManager;", "modifier": "private final", "type": "MemoryManager", "declarator": "memoryManager", "var_name": "memoryManager"}, {"original_string": "private final IOManager ioManager;", "modifier": "private final", "type": "IOManager", "declarator": "ioManager", "var_name": "ioManager"}, {"original_string": "private final BroadcastVariableManager broadcastVariableManager;", "modifier": "private final", "type": "BroadcastVariableManager", "declarator": "broadcastVariableManager", "var_name": "broadcastVariableManager"}, {"original_string": "private final ResultPartition[] producedPartitions;", "modifier": "private final", "type": "ResultPartition[]", "declarator": "producedPartitions", "var_name": "producedPartitions"}, {"original_string": "private final ResultPartitionWriter[] writers;", "modifier": "private final", "type": "ResultPartitionWriter[]", "declarator": "writers", "var_name": "writers"}, {"original_string": "private final SingleInputGate[] inputGates;", "modifier": "private final", "type": "SingleInputGate[]", "declarator": "inputGates", "var_name": "inputGates"}, {"original_string": "private final Map<IntermediateDataSetID, SingleInputGate> inputGatesById;", "modifier": "private final", "type": "Map<IntermediateDataSetID, SingleInputGate>", "declarator": "inputGatesById", "var_name": "inputGatesById"}, {"original_string": "private final ActorGateway taskManager;", "modifier": "private final", "type": "ActorGateway", "declarator": "taskManager", "var_name": "taskManager"}, {"original_string": "private final ActorGateway jobManager;", "modifier": "private final", "type": "ActorGateway", "declarator": "jobManager", "var_name": "jobManager"}, {"original_string": "private final List<ActorGateway> executionListenerActors;", "modifier": "private final", "type": "List<ActorGateway>", "declarator": "executionListenerActors", "var_name": "executionListenerActors"}, {"original_string": "private final FiniteDuration actorAskTimeout;", "modifier": "private final", "type": "FiniteDuration", "declarator": "actorAskTimeout", "var_name": "actorAskTimeout"}, {"original_string": "private final LibraryCacheManager libraryCache;", "modifier": "private final", "type": "LibraryCacheManager", "declarator": "libraryCache", "var_name": "libraryCache"}, {"original_string": "private final FileCache fileCache;", "modifier": "private final", "type": "FileCache", "declarator": "fileCache", "var_name": "fileCache"}, {"original_string": "private final NetworkEnvironment network;", "modifier": "private final", "type": "NetworkEnvironment", "declarator": "network", "var_name": "network"}, {"original_string": "private final AccumulatorRegistry accumulatorRegistry;", "modifier": "private final", "type": "AccumulatorRegistry", "declarator": "accumulatorRegistry", "var_name": "accumulatorRegistry"}, {"original_string": "private final Thread executingThread;", "modifier": "private final", "type": "Thread", "declarator": "executingThread", "var_name": "executingThread"}, {"original_string": "private final AtomicBoolean invokableHasBeenCanceled;", "modifier": "private final", "type": "AtomicBoolean", "declarator": "invokableHasBeenCanceled", "var_name": "invokableHasBeenCanceled"}, {"original_string": "private volatile AbstractInvokable invokable;", "modifier": "private volatile", "type": "AbstractInvokable", "declarator": "invokable", "var_name": "invokable"}, {"original_string": "private volatile ExecutionState executionState = ExecutionState.CREATED;", "modifier": "private volatile", "type": "ExecutionState", "declarator": "executionState = ExecutionState.CREATED", "var_name": "executionState"}, {"original_string": "private volatile Throwable failureCause;", "modifier": "private volatile", "type": "Throwable", "declarator": "failureCause", "var_name": "failureCause"}, {"original_string": "private volatile ExecutorService asyncCallDispatcher;", "modifier": "private volatile", "type": "ExecutorService", "declarator": "asyncCallDispatcher", "var_name": "asyncCallDispatcher"}, {"original_string": "private volatile SerializedValue<StateHandle<?>> operatorState;", "modifier": "private volatile", "type": "SerializedValue<StateHandle<?>>", "declarator": "operatorState", "var_name": "operatorState"}, {"original_string": "private volatile long recoveryTs;", "modifier": "private volatile", "type": "long", "declarator": "recoveryTs", "var_name": "recoveryTs"}], "methods": [{"identifier": "Task", "parameters": "(TaskDeploymentDescriptor tdd,\n\t\t\t\tMemoryManager memManager,\n\t\t\t\tIOManager ioManager,\n\t\t\t\tNetworkEnvironment networkEnvironment,\n\t\t\t\tBroadcastVariableManager bcVarManager,\n\t\t\t\tActorGateway taskManagerActor,\n\t\t\t\tActorGateway jobManagerActor,\n\t\t\t\tFiniteDuration actorAskTimeout,\n\t\t\t\tLibraryCacheManager libraryCache,\n\t\t\t\tFileCache fileCache,\n\t\t\t\tTaskManagerRuntimeInfo taskManagerConfig)", "modifiers": "public", "return": "", "signature": " Task(TaskDeploymentDescriptor tdd,\n\t\t\t\tMemoryManager memManager,\n\t\t\t\tIOManager ioManager,\n\t\t\t\tNetworkEnvironment networkEnvironment,\n\t\t\t\tBroadcastVariableManager bcVarManager,\n\t\t\t\tActorGateway taskManagerActor,\n\t\t\t\tActorGateway jobManagerActor,\n\t\t\t\tFiniteDuration actorAskTimeout,\n\t\t\t\tLibraryCacheManager libraryCache,\n\t\t\t\tFileCache fileCache,\n\t\t\t\tTaskManagerRuntimeInfo taskManagerConfig)", "full_signature": "public  Task(TaskDeploymentDescriptor tdd,\n\t\t\t\tMemoryManager memManager,\n\t\t\t\tIOManager ioManager,\n\t\t\t\tNetworkEnvironment networkEnvironment,\n\t\t\t\tBroadcastVariableManager bcVarManager,\n\t\t\t\tActorGateway taskManagerActor,\n\t\t\t\tActorGateway jobManagerActor,\n\t\t\t\tFiniteDuration actorAskTimeout,\n\t\t\t\tLibraryCacheManager libraryCache,\n\t\t\t\tFileCache fileCache,\n\t\t\t\tTaskManagerRuntimeInfo taskManagerConfig)", "class_method_signature": "Task.Task(TaskDeploymentDescriptor tdd,\n\t\t\t\tMemoryManager memManager,\n\t\t\t\tIOManager ioManager,\n\t\t\t\tNetworkEnvironment networkEnvironment,\n\t\t\t\tBroadcastVariableManager bcVarManager,\n\t\t\t\tActorGateway taskManagerActor,\n\t\t\t\tActorGateway jobManagerActor,\n\t\t\t\tFiniteDuration actorAskTimeout,\n\t\t\t\tLibraryCacheManager libraryCache,\n\t\t\t\tFileCache fileCache,\n\t\t\t\tTaskManagerRuntimeInfo taskManagerConfig)", "testcase": false, "constructor": true}, {"identifier": "getJobID", "parameters": "()", "modifiers": "public", "return": "JobID", "signature": "JobID getJobID()", "full_signature": "public JobID getJobID()", "class_method_signature": "Task.getJobID()", "testcase": false, "constructor": false}, {"identifier": "getJobVertexId", "parameters": "()", "modifiers": "public", "return": "JobVertexID", "signature": "JobVertexID getJobVertexId()", "full_signature": "public JobVertexID getJobVertexId()", "class_method_signature": "Task.getJobVertexId()", "testcase": false, "constructor": false}, {"identifier": "getExecutionId", "parameters": "()", "modifiers": "public", "return": "ExecutionAttemptID", "signature": "ExecutionAttemptID getExecutionId()", "full_signature": "public ExecutionAttemptID getExecutionId()", "class_method_signature": "Task.getExecutionId()", "testcase": false, "constructor": false}, {"identifier": "getTaskInfo", "parameters": "()", "modifiers": "public", "return": "TaskInfo", "signature": "TaskInfo getTaskInfo()", "full_signature": "public TaskInfo getTaskInfo()", "class_method_signature": "Task.getTaskInfo()", "testcase": false, "constructor": false}, {"identifier": "getJobConfiguration", "parameters": "()", "modifiers": "public", "return": "Configuration", "signature": "Configuration getJobConfiguration()", "full_signature": "public Configuration getJobConfiguration()", "class_method_signature": "Task.getJobConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getTaskConfiguration", "parameters": "()", "modifiers": "public", "return": "Configuration", "signature": "Configuration getTaskConfiguration()", "full_signature": "public Configuration getTaskConfiguration()", "class_method_signature": "Task.getTaskConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getAllWriters", "parameters": "()", "modifiers": "public", "return": "ResultPartitionWriter[]", "signature": "ResultPartitionWriter[] getAllWriters()", "full_signature": "public ResultPartitionWriter[] getAllWriters()", "class_method_signature": "Task.getAllWriters()", "testcase": false, "constructor": false}, {"identifier": "getAllInputGates", "parameters": "()", "modifiers": "public", "return": "SingleInputGate[]", "signature": "SingleInputGate[] getAllInputGates()", "full_signature": "public SingleInputGate[] getAllInputGates()", "class_method_signature": "Task.getAllInputGates()", "testcase": false, "constructor": false}, {"identifier": "getProducedPartitions", "parameters": "()", "modifiers": "public", "return": "ResultPartition[]", "signature": "ResultPartition[] getProducedPartitions()", "full_signature": "public ResultPartition[] getProducedPartitions()", "class_method_signature": "Task.getProducedPartitions()", "testcase": false, "constructor": false}, {"identifier": "getInputGateById", "parameters": "(IntermediateDataSetID id)", "modifiers": "public", "return": "SingleInputGate", "signature": "SingleInputGate getInputGateById(IntermediateDataSetID id)", "full_signature": "public SingleInputGate getInputGateById(IntermediateDataSetID id)", "class_method_signature": "Task.getInputGateById(IntermediateDataSetID id)", "testcase": false, "constructor": false}, {"identifier": "getAccumulatorRegistry", "parameters": "()", "modifiers": "public", "return": "AccumulatorRegistry", "signature": "AccumulatorRegistry getAccumulatorRegistry()", "full_signature": "public AccumulatorRegistry getAccumulatorRegistry()", "class_method_signature": "Task.getAccumulatorRegistry()", "testcase": false, "constructor": false}, {"identifier": "getExecutingThread", "parameters": "()", "modifiers": "public", "return": "Thread", "signature": "Thread getExecutingThread()", "full_signature": "public Thread getExecutingThread()", "class_method_signature": "Task.getExecutingThread()", "testcase": false, "constructor": false}, {"identifier": "getExecutionState", "parameters": "()", "modifiers": "public", "return": "ExecutionState", "signature": "ExecutionState getExecutionState()", "full_signature": "public ExecutionState getExecutionState()", "class_method_signature": "Task.getExecutionState()", "testcase": false, "constructor": false}, {"identifier": "isCanceledOrFailed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCanceledOrFailed()", "full_signature": "public boolean isCanceledOrFailed()", "class_method_signature": "Task.isCanceledOrFailed()", "testcase": false, "constructor": false}, {"identifier": "getFailureCause", "parameters": "()", "modifiers": "public", "return": "Throwable", "signature": "Throwable getFailureCause()", "full_signature": "public Throwable getFailureCause()", "class_method_signature": "Task.getFailureCause()", "testcase": false, "constructor": false}, {"identifier": "startTaskThread", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void startTaskThread()", "full_signature": "public void startTaskThread()", "class_method_signature": "Task.startTaskThread()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "Task.run()", "testcase": false, "constructor": false}, {"identifier": "createUserCodeClassloader", "parameters": "(LibraryCacheManager libraryCache)", "modifiers": "private", "return": "ClassLoader", "signature": "ClassLoader createUserCodeClassloader(LibraryCacheManager libraryCache)", "full_signature": "private ClassLoader createUserCodeClassloader(LibraryCacheManager libraryCache)", "class_method_signature": "Task.createUserCodeClassloader(LibraryCacheManager libraryCache)", "testcase": false, "constructor": false}, {"identifier": "loadAndInstantiateInvokable", "parameters": "(ClassLoader classLoader, String className)", "modifiers": "private", "return": "AbstractInvokable", "signature": "AbstractInvokable loadAndInstantiateInvokable(ClassLoader classLoader, String className)", "full_signature": "private AbstractInvokable loadAndInstantiateInvokable(ClassLoader classLoader, String className)", "class_method_signature": "Task.loadAndInstantiateInvokable(ClassLoader classLoader, String className)", "testcase": false, "constructor": false}, {"identifier": "removeCachedFiles", "parameters": "(Map<String, Future<Path>> entries, FileCache fileCache)", "modifiers": "private", "return": "void", "signature": "void removeCachedFiles(Map<String, Future<Path>> entries, FileCache fileCache)", "full_signature": "private void removeCachedFiles(Map<String, Future<Path>> entries, FileCache fileCache)", "class_method_signature": "Task.removeCachedFiles(Map<String, Future<Path>> entries, FileCache fileCache)", "testcase": false, "constructor": false}, {"identifier": "notifyFinalState", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void notifyFinalState()", "full_signature": "private void notifyFinalState()", "class_method_signature": "Task.notifyFinalState()", "testcase": false, "constructor": false}, {"identifier": "notifyFatalError", "parameters": "(String message, Throwable cause)", "modifiers": "private", "return": "void", "signature": "void notifyFatalError(String message, Throwable cause)", "full_signature": "private void notifyFatalError(String message, Throwable cause)", "class_method_signature": "Task.notifyFatalError(String message, Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "stopExecution", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stopExecution()", "full_signature": "public void stopExecution()", "class_method_signature": "Task.stopExecution()", "testcase": false, "constructor": false}, {"identifier": "cancelExecution", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cancelExecution()", "full_signature": "public void cancelExecution()", "class_method_signature": "Task.cancelExecution()", "testcase": false, "constructor": false}, {"identifier": "failExternally", "parameters": "(Throwable cause)", "modifiers": "public", "return": "void", "signature": "void failExternally(Throwable cause)", "full_signature": "public void failExternally(Throwable cause)", "class_method_signature": "Task.failExternally(Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "cancelOrFailAndCancelInvokable", "parameters": "(ExecutionState targetState, Throwable cause)", "modifiers": "private", "return": "void", "signature": "void cancelOrFailAndCancelInvokable(ExecutionState targetState, Throwable cause)", "full_signature": "private void cancelOrFailAndCancelInvokable(ExecutionState targetState, Throwable cause)", "class_method_signature": "Task.cancelOrFailAndCancelInvokable(ExecutionState targetState, Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "registerExecutionListener", "parameters": "(ActorGateway listener)", "modifiers": "public", "return": "void", "signature": "void registerExecutionListener(ActorGateway listener)", "full_signature": "public void registerExecutionListener(ActorGateway listener)", "class_method_signature": "Task.registerExecutionListener(ActorGateway listener)", "testcase": false, "constructor": false}, {"identifier": "notifyObservers", "parameters": "(ExecutionState newState, Throwable error)", "modifiers": "private", "return": "void", "signature": "void notifyObservers(ExecutionState newState, Throwable error)", "full_signature": "private void notifyObservers(ExecutionState newState, Throwable error)", "class_method_signature": "Task.notifyObservers(ExecutionState newState, Throwable error)", "testcase": false, "constructor": false}, {"identifier": "triggerCheckpointBarrier", "parameters": "(final long checkpointID, final long checkpointTimestamp)", "modifiers": "public", "return": "void", "signature": "void triggerCheckpointBarrier(final long checkpointID, final long checkpointTimestamp)", "full_signature": "public void triggerCheckpointBarrier(final long checkpointID, final long checkpointTimestamp)", "class_method_signature": "Task.triggerCheckpointBarrier(final long checkpointID, final long checkpointTimestamp)", "testcase": false, "constructor": false}, {"identifier": "notifyCheckpointComplete", "parameters": "(final long checkpointID)", "modifiers": "public", "return": "void", "signature": "void notifyCheckpointComplete(final long checkpointID)", "full_signature": "public void notifyCheckpointComplete(final long checkpointID)", "class_method_signature": "Task.notifyCheckpointComplete(final long checkpointID)", "testcase": false, "constructor": false}, {"identifier": "onPartitionStateUpdate", "parameters": "(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState)", "modifiers": "public", "return": "void", "signature": "void onPartitionStateUpdate(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState)", "full_signature": "public void onPartitionStateUpdate(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState)", "class_method_signature": "Task.onPartitionStateUpdate(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState)", "testcase": false, "constructor": false}, {"identifier": "executeAsyncCallRunnable", "parameters": "(Runnable runnable, String callName)", "modifiers": "private", "return": "void", "signature": "void executeAsyncCallRunnable(Runnable runnable, String callName)", "full_signature": "private void executeAsyncCallRunnable(Runnable runnable, String callName)", "class_method_signature": "Task.executeAsyncCallRunnable(Runnable runnable, String callName)", "testcase": false, "constructor": false}, {"identifier": "cancelInvokable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cancelInvokable()", "full_signature": "private void cancelInvokable()", "class_method_signature": "Task.cancelInvokable()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Task.toString()", "testcase": false, "constructor": false}], "file": "flink-runtime/src/main/java/org/apache/flink/runtime/taskmanager/Task.java"}, "focal_method": {"identifier": "onPartitionStateUpdate", "parameters": "(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState)", "modifiers": "public", "return": "void", "body": "public void onPartitionStateUpdate(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState) throws IOException, InterruptedException {\n\n\t\tif (executionState == ExecutionState.RUNNING) {\n\t\t\tfinal SingleInputGate inputGate = inputGatesById.get(resultId);\n\n\t\t\tif (inputGate != null) {\n\t\t\t\tif (partitionState == ExecutionState.RUNNING) {\n\t\t\t\t\t// Retrigger the partition request\n\t\t\t\t\tinputGate.retriggerPartitionRequest(partitionId);\n\t\t\t\t}\n\t\t\t\telse if (partitionState == ExecutionState.CANCELED\n\t\t\t\t\t\t|| partitionState == ExecutionState.CANCELING\n\t\t\t\t\t\t|| partitionState == ExecutionState.FAILED) {\n\n\t\t\t\t\tcancelExecution();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfailExternally(new IllegalStateException(\"Received unexpected partition state \"\n\t\t\t\t\t\t\t+ partitionState + \" for partition request. This is a bug.\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfailExternally(new IllegalStateException(\"Received partition state for \" +\n\t\t\t\t\t\t\"unknown input gate \" + resultId + \". This is a bug.\"));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tLOG.debug(\"Ignoring partition state notification for not running task.\");\n\t\t}\n\t}", "signature": "void onPartitionStateUpdate(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState)", "full_signature": "public void onPartitionStateUpdate(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState)", "class_method_signature": "Task.onPartitionStateUpdate(\n\t\t\tIntermediateDataSetID resultId,\n\t\t\tIntermediateResultPartitionID partitionId,\n\t\t\tExecutionState partitionState)", "testcase": false, "constructor": false, "invocations": ["get", "retriggerPartitionRequest", "cancelExecution", "failExternally", "failExternally", "debug"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}