{"test_class": {"identifier": "EmailUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "favorisites-common/src/test/java/team/soth/favorisites/common/util/EmailUtilTest.java"}, "test_case": {"identifier": "send", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void send() throws Exception {\n\t\tboolean success = EmailUtil.send(\"favorisites\u7528\u6237\", \"1203948298@qq.com\",\n\t\t\t\t\"123456\u662f\u60a8\u7684favorisites\u9a8c\u8bc1\u7801\", \"<div style=\\\"text-align: center;color:dodgerblue;\\\">\u6b22\u8fce\u6ce8\u518c\u4f7f\u7528favoristes\uff0c \u60a8\u7684\u9a8c\u8bc1\u7801\u662f123456</div>\");\n\t\tSystem.out.println(success);\n\t}", "signature": "void send()", "full_signature": "@Test public void send()", "class_method_signature": "EmailUtilTest.send()", "testcase": true, "constructor": false, "invocations": ["send", "println"]}, "focal_class": {"identifier": "EmailUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static PropertiesFileUtil prop = PropertiesFileUtil.getInstance(\"email\");", "modifier": "private static", "type": "PropertiesFileUtil", "declarator": "prop = PropertiesFileUtil.getInstance(\"email\")", "var_name": "prop"}, {"original_string": "private static String SENDER_ACCOUNT = prop.get(\"sender.account\");", "modifier": "private static", "type": "String", "declarator": "SENDER_ACCOUNT = prop.get(\"sender.account\")", "var_name": "SENDER_ACCOUNT"}, {"original_string": "private static String SENDER_PASSWORD = prop.get(\"sender.password\");", "modifier": "private static", "type": "String", "declarator": "SENDER_PASSWORD = prop.get(\"sender.password\")", "var_name": "SENDER_PASSWORD"}, {"original_string": "private static String SENDER_SMTP_HOST = prop.get(\"sender.smtp.host\");", "modifier": "private static", "type": "String", "declarator": "SENDER_SMTP_HOST = prop.get(\"sender.smtp.host\")", "var_name": "SENDER_SMTP_HOST"}, {"original_string": "private static String SENDER_NAME = prop.get(\"sender.name\");", "modifier": "private static", "type": "String", "declarator": "SENDER_NAME = prop.get(\"sender.name\")", "var_name": "SENDER_NAME"}, {"original_string": "private static boolean DEBUG = Boolean.valueOf(prop.get(\"debug\"));", "modifier": "private static", "type": "boolean", "declarator": "DEBUG = Boolean.valueOf(prop.get(\"debug\"))", "var_name": "DEBUG"}, {"original_string": "private static final String EMAIL_SEND_ERROR = \"\u90ae\u4ef6\u53d1\u9001\u51fa\u9519\";", "modifier": "private static final", "type": "String", "declarator": "EMAIL_SEND_ERROR = \"\u90ae\u4ef6\u53d1\u9001\u51fa\u9519\";", "var_name": "EMAIL_SEND_ERROR"}, {"original_string": "private static Logger logger = LoggerFactory.getLogger(EmailUtil.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(EmailUtil.class)", "var_name": "logger"}], "methods": [{"identifier": "send", "parameters": "(String receiverName, String receiverAccount, String subject, String content)", "modifiers": "public static", "return": "boolean", "signature": "boolean send(String receiverName, String receiverAccount, String subject, String content)", "full_signature": "public static boolean send(String receiverName, String receiverAccount, String subject, String content)", "class_method_signature": "EmailUtil.send(String receiverName, String receiverAccount, String subject, String content)", "testcase": false, "constructor": false}, {"identifier": "createMimeMessage", "parameters": "(Session session, String receiverName, String receiverAccount, String subject, String content)", "modifiers": "private static", "return": "MimeMessage", "signature": "MimeMessage createMimeMessage(Session session, String receiverName, String receiverAccount, String subject, String content)", "full_signature": "private static MimeMessage createMimeMessage(Session session, String receiverName, String receiverAccount, String subject, String content)", "class_method_signature": "EmailUtil.createMimeMessage(Session session, String receiverName, String receiverAccount, String subject, String content)", "testcase": false, "constructor": false}], "file": "favorisites-common/src/main/java/team/soth/favorisites/common/util/EmailUtil.java"}, "focal_method": {"identifier": "send", "parameters": "(String receiverName, String receiverAccount, String subject, String content)", "modifiers": "public static", "return": "boolean", "body": "public static boolean send(String receiverName, String receiverAccount, String subject, String content) {\n\t\tProperties props = System.getProperties();\n\t\tprops.setProperty(\"mail.transport.protocol\", \"smtp\");\n\t\tprops.setProperty(\"mail.smtp.host\", SENDER_SMTP_HOST);\n\t\tprops.setProperty(\"mail.smtp.auth\", \"true\");\n\n\t\tSession session = Session.getDefaultInstance(props);\n\t\t// \u8bbe\u7f6e\u4e3adebug\u6a21\u5f0f, \u53ef\u4ee5\u67e5\u770b\u8be6\u7ec6\u7684\u53d1\u9001log\n\t\tsession.setDebug(DEBUG);\n\n\t\tTransport transport = null;\n\t\ttry {\n\t\t\tMimeMessage message = createMimeMessage(session, receiverName, receiverAccount, subject, content);\n\t\t\ttransport = session.getTransport();\n\t\t\ttransport.connect(SENDER_ACCOUNT, SENDER_PASSWORD);\n\t\t\ttransport.sendMessage(message, message.getAllRecipients());\n\t\t} catch (UnsupportedEncodingException | MessagingException e) {\n\t\t\tlogger.error(EMAIL_SEND_ERROR, e);\n\t\t\treturn false;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (transport != null) {\n\t\t\t\t\ttransport.close();\n\t\t\t\t}\n\t\t\t} catch (MessagingException e) {\n\t\t\t\tlogger.error(EMAIL_SEND_ERROR, e);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}", "signature": "boolean send(String receiverName, String receiverAccount, String subject, String content)", "full_signature": "public static boolean send(String receiverName, String receiverAccount, String subject, String content)", "class_method_signature": "EmailUtil.send(String receiverName, String receiverAccount, String subject, String content)", "testcase": false, "constructor": false, "invocations": ["getProperties", "setProperty", "setProperty", "setProperty", "getDefaultInstance", "setDebug", "createMimeMessage", "getTransport", "connect", "sendMessage", "getAllRecipients", "error", "close", "error"]}, "repository": {"repo_id": 107370456, "url": "https://github.com/codethereforam/favorisites", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 35, "size": 2775, "license": "licensed"}}