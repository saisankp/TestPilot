{"test_class": {"identifier": "LaserProfileTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final LaserProfile laser = new LaserProfile(\n            \"laser_id\",\n            \"user_id\",\n            \"Laser Name\",\n            true,\n            0.0,\n            47.24,\n            -123.14,\n            \"source\",\n            new ArrayList<>()\n    );", "modifier": "private final", "type": "LaserProfile", "declarator": "laser = new LaserProfile(\n            \"laser_id\",\n            \"user_id\",\n            \"Laser Name\",\n            true,\n            0.0,\n            47.24,\n            -123.14,\n            \"source\",\n            new ArrayList<>()\n    )", "var_name": "laser"}], "file": "app/src/test/java/com/platypii/baseline/lasers/LaserProfileTest.java"}, "test_case": {"identifier": "locationString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void locationString() {\n        Convert.metric = false;\n        assertEquals(\"47.24, -123.14, 0 ft\", laser.locationString());\n    }", "signature": "void locationString()", "full_signature": "@Test public void locationString()", "class_method_signature": "LaserProfileTest.locationString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "locationString"]}, "focal_class": {"identifier": "LaserProfile", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NonNull\n    public String laser_id;", "modifier": "@NonNull\n    public", "type": "String", "declarator": "laser_id", "var_name": "laser_id"}, {"original_string": "@Nullable\n    public String user_id;", "modifier": "@Nullable\n    public", "type": "String", "declarator": "user_id", "var_name": "user_id"}, {"original_string": "public String name;", "modifier": "public", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@SerializedName(\"public\")\n    public boolean isPublic;", "modifier": "@SerializedName(\"public\")\n    public", "type": "boolean", "declarator": "isPublic", "var_name": "isPublic"}, {"original_string": "@Nullable\n    public Double alt;", "modifier": "@Nullable\n    public", "type": "Double", "declarator": "alt", "var_name": "alt"}, {"original_string": "@Nullable\n    public Double lat;", "modifier": "@Nullable\n    public", "type": "Double", "declarator": "lat", "var_name": "lat"}, {"original_string": "@Nullable\n    public Double lng;", "modifier": "@Nullable\n    public", "type": "Double", "declarator": "lng", "var_name": "lng"}, {"original_string": "@Nullable\n    public Place place;", "modifier": "@Nullable\n    public", "type": "Place", "declarator": "place", "var_name": "place"}, {"original_string": "@Keep\n    @NonNull\n    public String source;", "modifier": "@Keep\n    @NonNull\n    public", "type": "String", "declarator": "source", "var_name": "source"}, {"original_string": "public List<LaserMeasurement> points;", "modifier": "public", "type": "List<LaserMeasurement>", "declarator": "points", "var_name": "points"}], "methods": [{"identifier": "LaserProfile", "parameters": "(\n            @NonNull String laser_id,\n            @Nullable String user_id,\n            String name,\n            boolean isPublic,\n            @Nullable Double alt, @Nullable Double lat, @Nullable Double lng,\n            @NonNull String source,\n            List<LaserMeasurement> points\n    )", "modifiers": "public", "return": "", "signature": " LaserProfile(\n            @NonNull String laser_id,\n            @Nullable String user_id,\n            String name,\n            boolean isPublic,\n            @Nullable Double alt, @Nullable Double lat, @Nullable Double lng,\n            @NonNull String source,\n            List<LaserMeasurement> points\n    )", "full_signature": "public  LaserProfile(\n            @NonNull String laser_id,\n            @Nullable String user_id,\n            String name,\n            boolean isPublic,\n            @Nullable Double alt, @Nullable Double lat, @Nullable Double lng,\n            @NonNull String source,\n            List<LaserMeasurement> points\n    )", "class_method_signature": "LaserProfile.LaserProfile(\n            @NonNull String laser_id,\n            @Nullable String user_id,\n            String name,\n            boolean isPublic,\n            @Nullable Double alt, @Nullable Double lat, @Nullable Double lng,\n            @NonNull String source,\n            List<LaserMeasurement> points\n    )", "testcase": false, "constructor": true}, {"identifier": "locationString", "parameters": "()", "modifiers": "@NonNull public", "return": "String", "signature": "String locationString()", "full_signature": "@NonNull public String locationString()", "class_method_signature": "LaserProfile.locationString()", "testcase": false, "constructor": false}, {"identifier": "isLocal", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLocal()", "full_signature": "public boolean isLocal()", "class_method_signature": "LaserProfile.isLocal()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "LaserProfile.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "String", "signature": "String toString()", "full_signature": "@NonNull @Override public String toString()", "class_method_signature": "LaserProfile.toString()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/platypii/baseline/lasers/LaserProfile.java"}, "focal_method": {"identifier": "locationString", "parameters": "()", "modifiers": "@NonNull public", "return": "String", "body": "@NonNull\n    public String locationString() {\n        if (lat != null && lng != null && alt != null) {\n            return LatLngAlt.formatLatLngAlt(lat, lng, alt);\n        } else {\n            return \"\";\n        }\n    }", "signature": "String locationString()", "full_signature": "@NonNull public String locationString()", "class_method_signature": "LaserProfile.locationString()", "testcase": false, "constructor": false, "invocations": ["formatLatLngAlt"]}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}