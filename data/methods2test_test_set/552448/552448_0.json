{"test_class": {"identifier": "TestAcceptor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Acceptor acceptor;", "modifier": "private", "type": "Acceptor", "declarator": "acceptor", "var_name": "acceptor"}, {"original_string": "private final String nomChamps = \"jetonActif\";", "modifier": "private final", "type": "String", "declarator": "nomChamps = \"jetonActif\"", "var_name": "nomChamps"}], "file": "GTDServer/JBoss/src/test/java/fr/alma/gtd/reactor/TestAcceptor.java"}, "test_case": {"identifier": "testEnregistre", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n\t@Test\n\tpublic void testEnregistre() throws Exception {\n\t\tfinal String id = \"abcde\";\n\t\tboolean result = this.acceptor.enregistre(id);\n\t\tfinal Field f = this.acceptor.getClass().getDeclaredField(this.nomChamps);\n\t\tf.setAccessible(true);\n\t\tfinal Map<String, String> map =  (Map<String, String>) f.get(this.acceptor);\n\t\tassertTrue(\"L'identifiant n'a pas ete enregistre\", map.containsValue(id));\n\t\tassertTrue(\"La methode ne confirme pas l'ajout de l'identifiant\", result);\n\t\t\n\t\tresult = this.acceptor.enregistre(id);\n\t\tassertFalse(\"La methode confirme l'ajout de l'identifiant\", result);\n\t}", "signature": "void testEnregistre()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test public void testEnregistre()", "class_method_signature": "TestAcceptor.testEnregistre()", "testcase": true, "constructor": false, "invocations": ["enregistre", "getDeclaredField", "getClass", "setAccessible", "get", "assertTrue", "containsValue", "assertTrue", "enregistre", "assertFalse"]}, "focal_class": {"identifier": "Acceptor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Acceptor instance = new Acceptor();", "modifier": "private static", "type": "Acceptor", "declarator": "instance = new Acceptor()", "var_name": "instance"}, {"original_string": "private Map<String, String> jetonActif;", "modifier": "private", "type": "Map<String, String>", "declarator": "jetonActif", "var_name": "jetonActif"}], "methods": [{"identifier": "Acceptor", "parameters": "()", "modifiers": "private", "return": "", "signature": " Acceptor()", "full_signature": "private  Acceptor()", "class_method_signature": "Acceptor.Acceptor()", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "(final String jeton)", "modifiers": "public", "return": "String", "signature": "String decode(final String jeton)", "full_signature": "public String decode(final String jeton)", "class_method_signature": "Acceptor.decode(final String jeton)", "testcase": false, "constructor": false}, {"identifier": "enregistre", "parameters": "(final String jeton)", "modifiers": "public", "return": "boolean", "signature": "boolean enregistre(final String jeton)", "full_signature": "public boolean enregistre(final String jeton)", "class_method_signature": "Acceptor.enregistre(final String jeton)", "testcase": false, "constructor": false}, {"identifier": "retire", "parameters": "(final String jeton)", "modifiers": "public", "return": "boolean", "signature": "boolean retire(final String jeton)", "full_signature": "public boolean retire(final String jeton)", "class_method_signature": "Acceptor.retire(final String jeton)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(final String jeton)", "modifiers": "public", "return": "boolean", "signature": "boolean accept(final String jeton)", "full_signature": "public boolean accept(final String jeton)", "class_method_signature": "Acceptor.accept(final String jeton)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "Acceptor", "signature": "Acceptor getInstance()", "full_signature": "public static Acceptor getInstance()", "class_method_signature": "Acceptor.getInstance()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(final String str)", "modifiers": "public", "return": "String", "signature": "String encode(final String str)", "full_signature": "public String encode(final String str)", "class_method_signature": "Acceptor.encode(final String str)", "testcase": false, "constructor": false}], "file": "GTDServer/JBoss/src/main/java/fr/alma/gtd/reactor/Acceptor.java"}, "focal_method": {"identifier": "enregistre", "parameters": "(final String jeton)", "modifiers": "public", "return": "boolean", "body": "public boolean enregistre(final String jeton) {\n\t\tboolean result = false;\n\t\t\n\t\tif (!this.jetonActif.keySet().contains(this.encode(jeton))) {\n\t\t\tthis.jetonActif.put(this.encode(jeton), jeton);\n\t\t\tresult = true;\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "signature": "boolean enregistre(final String jeton)", "full_signature": "public boolean enregistre(final String jeton)", "class_method_signature": "Acceptor.enregistre(final String jeton)", "testcase": false, "constructor": false, "invocations": ["contains", "keySet", "encode", "put", "encode"]}, "repository": {"repo_id": 552448, "url": "https://github.com/sunye/AlmaGTD", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 27723, "license": "licensed"}}