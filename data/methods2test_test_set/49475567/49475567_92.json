{"test_class": {"identifier": "WorkAreaTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SortedSet<Field> fields;", "modifier": "private", "type": "SortedSet<Field>", "declarator": "fields", "var_name": "fields"}, {"original_string": "private Field fieldOne;", "modifier": "private", "type": "Field", "declarator": "fieldOne", "var_name": "fieldOne"}, {"original_string": "private Field fieldTwo;", "modifier": "private", "type": "Field", "declarator": "fieldTwo", "var_name": "fieldTwo"}, {"original_string": "private Field fieldComposite;", "modifier": "private", "type": "Field", "declarator": "fieldComposite", "var_name": "fieldComposite"}, {"original_string": "private Field fieldThree;", "modifier": "private", "type": "Field", "declarator": "fieldThree", "var_name": "fieldThree"}, {"original_string": "private Field fieldFour;", "modifier": "private", "type": "Field", "declarator": "fieldFour", "var_name": "fieldFour"}, {"original_string": "private Field fieldFourDuplicate;", "modifier": "private", "type": "Field", "declarator": "fieldFourDuplicate", "var_name": "fieldFourDuplicate"}, {"original_string": "private Field fieldFive;", "modifier": "private", "type": "Field", "declarator": "fieldFive", "var_name": "fieldFive"}, {"original_string": "private List<Filter> outputFilters;", "modifier": "private", "type": "List<Filter>", "declarator": "outputFilters", "var_name": "outputFilters"}, {"original_string": "private WorkArea workArea;", "modifier": "private", "type": "WorkArea", "declarator": "workArea", "var_name": "workArea"}, {"original_string": "private WorkArea workAreaWithFilters;", "modifier": "private", "type": "WorkArea", "declarator": "workAreaWithFilters", "var_name": "workAreaWithFilters"}], "file": "geoclient-core/src/test/java/gov/nyc/doitt/gis/geoclient/function/WorkAreaTest.java"}, "test_case": {"identifier": "testGetFieldIds_withComparator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFieldIds_withComparator()\n    {\n        assertEquals(Arrays.asList(\"fieldComposite\",\"fieldFive\",\"fieldFour\",\"fieldOne\",\"fieldThree\",\"fieldTwo\"), workAreaWithFilters.getFieldIds(Field.NAME_SORT,true, true));\n        assertEquals(Arrays.asList(\"fieldFive\"), workAreaWithFilters.getFieldIds(Field.NAME_SORT,true, false));\n        assertEquals(Arrays.asList(\"fieldComposite\",\"fieldFive\",\"fieldFour\",\"fieldTwo\"), workAreaWithFilters.getFieldIds(Field.NAME_SORT,false, true));\n        assertEquals(Arrays.asList(\"fieldFive\"), workAreaWithFilters.getFieldIds(Field.NAME_SORT,false, false));\n    }", "signature": "void testGetFieldIds_withComparator()", "full_signature": "@Test public void testGetFieldIds_withComparator()", "class_method_signature": "WorkAreaTest.testGetFieldIds_withComparator()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "asList", "getFieldIds", "assertEquals", "asList", "getFieldIds", "assertEquals", "asList", "getFieldIds", "assertEquals", "asList", "getFieldIds"]}, "focal_class": {"identifier": "WorkArea", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(WorkArea.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(WorkArea.class)", "var_name": "log"}, {"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private final SortedSet<Field> fields;", "modifier": "private final", "type": "SortedSet<Field>", "declarator": "fields", "var_name": "fields"}, {"original_string": "private final int length;", "modifier": "private final", "type": "int", "declarator": "length", "var_name": "length"}, {"original_string": "private final List<Filter> outputFilters;", "modifier": "private final", "type": "List<Filter>", "declarator": "outputFilters", "var_name": "outputFilters"}], "methods": [{"identifier": "WorkArea", "parameters": "(String id, SortedSet<Field> fields)", "modifiers": "public", "return": "", "signature": " WorkArea(String id, SortedSet<Field> fields)", "full_signature": "public  WorkArea(String id, SortedSet<Field> fields)", "class_method_signature": "WorkArea.WorkArea(String id, SortedSet<Field> fields)", "testcase": false, "constructor": true}, {"identifier": "WorkArea", "parameters": "(String id, SortedSet<Field> fields, List<Filter> outputFilters)", "modifiers": "public", "return": "", "signature": " WorkArea(String id, SortedSet<Field> fields, List<Filter> outputFilters)", "full_signature": "public  WorkArea(String id, SortedSet<Field> fields, List<Filter> outputFilters)", "class_method_signature": "WorkArea.WorkArea(String id, SortedSet<Field> fields, List<Filter> outputFilters)", "testcase": false, "constructor": true}, {"identifier": "createBuffer", "parameters": "(Map<String, Object> parameters)", "modifiers": "public", "return": "ByteBuffer", "signature": "ByteBuffer createBuffer(Map<String, Object> parameters)", "full_signature": "public ByteBuffer createBuffer(Map<String, Object> parameters)", "class_method_signature": "WorkArea.createBuffer(Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "createBuffer", "parameters": "()", "modifiers": "public", "return": "ByteBuffer", "signature": "ByteBuffer createBuffer()", "full_signature": "public ByteBuffer createBuffer()", "class_method_signature": "WorkArea.createBuffer()", "testcase": false, "constructor": false}, {"identifier": "parseResults", "parameters": "(ByteBuffer buffer)", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> parseResults(ByteBuffer buffer)", "full_signature": "public Map<String, Object> parseResults(ByteBuffer buffer)", "class_method_signature": "WorkArea.parseResults(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "getFieldIds", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFieldIds()", "full_signature": "public List<String> getFieldIds()", "class_method_signature": "WorkArea.getFieldIds()", "testcase": false, "constructor": false}, {"identifier": "getFieldIds", "parameters": "(Comparator<Field> comparator, boolean includeFiltered, boolean includeInputFields)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFieldIds(Comparator<Field> comparator, boolean includeFiltered, boolean includeInputFields)", "full_signature": "public List<String> getFieldIds(Comparator<Field> comparator, boolean includeFiltered, boolean includeInputFields)", "class_method_signature": "WorkArea.getFieldIds(Comparator<Field> comparator, boolean includeFiltered, boolean includeInputFields)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int length()", "full_signature": "public int length()", "class_method_signature": "WorkArea.length()", "testcase": false, "constructor": false}, {"identifier": "findField", "parameters": "(String id)", "modifiers": "public", "return": "Field", "signature": "Field findField(String id)", "full_signature": "public Field findField(String id)", "class_method_signature": "WorkArea.findField(String id)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "WorkArea.getId()", "testcase": false, "constructor": false}, {"identifier": "isFiltered", "parameters": "(Field field)", "modifiers": "public", "return": "boolean", "signature": "boolean isFiltered(Field field)", "full_signature": "public boolean isFiltered(Field field)", "class_method_signature": "WorkArea.isFiltered(Field field)", "testcase": false, "constructor": false}, {"identifier": "resolveInputValue", "parameters": "(Map<String, Object> parameters, Field field)", "modifiers": "protected", "return": "Object", "signature": "Object resolveInputValue(Map<String, Object> parameters, Field field)", "full_signature": "protected Object resolveInputValue(Map<String, Object> parameters, Field field)", "class_method_signature": "WorkArea.resolveInputValue(Map<String, Object> parameters, Field field)", "testcase": false, "constructor": false}, {"identifier": "computeLength", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int computeLength()", "full_signature": "private int computeLength()", "class_method_signature": "WorkArea.computeLength()", "testcase": false, "constructor": false}, {"identifier": "createByteBuffer", "parameters": "()", "modifiers": "private", "return": "ByteBuffer", "signature": "ByteBuffer createByteBuffer()", "full_signature": "private ByteBuffer createByteBuffer()", "class_method_signature": "WorkArea.createByteBuffer()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "WorkArea.toString()", "testcase": false, "constructor": false}], "file": "geoclient-core/src/main/java/gov/nyc/doitt/gis/geoclient/function/WorkArea.java"}, "focal_method": {"identifier": "getFieldIds", "parameters": "()", "modifiers": "public", "return": "List<String>", "body": "public List<String> getFieldIds()\n    {\n        return this.getFieldIds(null, false, true);\n    }", "signature": "List<String> getFieldIds()", "full_signature": "public List<String> getFieldIds()", "class_method_signature": "WorkArea.getFieldIds()", "testcase": false, "constructor": false, "invocations": ["getFieldIds"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}