{"test_class": {"identifier": "ModifyFeaturePropertiesStrategyTest", "superclass": "extends AbstractCommandStrategyTest", "interfaces": "", "fields": [{"original_string": "private static final long THING_SIZE_LIMIT_BYTES = Long.parseLong(\n            System.getProperty(ThingCommandSizeValidator.DITTO_LIMITS_THINGS_MAX_SIZE_BYTES, \"-1\"));", "modifier": "private static final", "type": "long", "declarator": "THING_SIZE_LIMIT_BYTES = Long.parseLong(\n            System.getProperty(ThingCommandSizeValidator.DITTO_LIMITS_THINGS_MAX_SIZE_BYTES, \"-1\"))", "var_name": "THING_SIZE_LIMIT_BYTES"}, {"original_string": "private static String featureId;", "modifier": "private static", "type": "String", "declarator": "featureId", "var_name": "featureId"}, {"original_string": "private static FeatureProperties modifiedFeatureProperties;", "modifier": "private static", "type": "FeatureProperties", "declarator": "modifiedFeatureProperties", "var_name": "modifiedFeatureProperties"}, {"original_string": "private ModifyFeaturePropertiesStrategy underTest;", "modifier": "private", "type": "ModifyFeaturePropertiesStrategy", "declarator": "underTest", "var_name": "underTest"}], "file": "services/things/persistence/src/test/java/org/eclipse/ditto/services/things/persistence/actors/strategies/commands/ModifyFeaturePropertiesStrategyTest.java"}, "test_case": {"identifier": "modifyFeaturePropertiesSoThatThingGetsTooLarge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void modifyFeaturePropertiesSoThatThingGetsTooLarge() {\n        final CommandStrategy.Context<ThingId> context = getDefaultContext();\n\n        final Feature feature = Feature.newBuilder()\n                .properties(JsonObject.newBuilder().set(\"foo\", false).set(\"bar\", 42).build())\n                .withId(\"myFeature\")\n                .build();\n\n        final long staticOverhead = 80;\n        final StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < THING_SIZE_LIMIT_BYTES - staticOverhead; i++) {\n            sb.append('a');\n        }\n        final JsonObject largeAttributes = JsonObject.newBuilder()\n                .set(\"a\", sb.toString())\n                .build();\n        final ThingId thingId = ThingId.of(\"foo\",\"bar\");\n        final Thing thing = Thing.newBuilder()\n                .setId(thingId)\n                .setAttributes(largeAttributes)\n                .build();\n\n        // creating the Thing should be possible as we are below the limit:\n        CreateThing.of(thing, null, DittoHeaders.empty());\n\n        final ModifyFeatureProperties command =\n                ModifyFeatureProperties.of(thingId, feature.getId(), feature.getProperties().get(),\n                        DittoHeaders.empty());\n\n        // but modifying the feature properties which would cause the Thing to exceed the limit should not be allowed:\n        assertThatThrownBy(() -> underTest.doApply(context, thing, NEXT_REVISION, command, null))\n                .isInstanceOf(ThingTooLargeException.class);\n    }", "signature": "void modifyFeaturePropertiesSoThatThingGetsTooLarge()", "full_signature": "@Test public void modifyFeaturePropertiesSoThatThingGetsTooLarge()", "class_method_signature": "ModifyFeaturePropertiesStrategyTest.modifyFeaturePropertiesSoThatThingGetsTooLarge()", "testcase": true, "constructor": false, "invocations": ["getDefaultContext", "build", "withId", "properties", "newBuilder", "build", "set", "set", "newBuilder", "append", "build", "set", "newBuilder", "toString", "of", "build", "setAttributes", "setId", "newBuilder", "of", "empty", "of", "getId", "get", "getProperties", "empty", "isInstanceOf", "assertThatThrownBy", "doApply"]}, "focal_class": {"identifier": "ModifyFeaturePropertiesStrategy", "superclass": "extends AbstractThingCommandStrategy<ModifyFeatureProperties>", "interfaces": "", "fields": [], "methods": [{"identifier": "ModifyFeaturePropertiesStrategy", "parameters": "()", "modifiers": "", "return": "", "signature": " ModifyFeaturePropertiesStrategy()", "full_signature": "  ModifyFeaturePropertiesStrategy()", "class_method_signature": "ModifyFeaturePropertiesStrategy.ModifyFeaturePropertiesStrategy()", "testcase": false, "constructor": true}, {"identifier": "doApply", "parameters": "(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata)", "modifiers": "@Override protected", "return": "Result<ThingEvent>", "signature": "Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata)", "full_signature": "@Override protected Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata)", "class_method_signature": "ModifyFeaturePropertiesStrategy.doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata)", "testcase": false, "constructor": false}, {"identifier": "extractFeature", "parameters": "(final ModifyFeatureProperties command, @Nullable final Thing thing)", "modifiers": "private", "return": "Optional<Feature>", "signature": "Optional<Feature> extractFeature(final ModifyFeatureProperties command, @Nullable final Thing thing)", "full_signature": "private Optional<Feature> extractFeature(final ModifyFeatureProperties command, @Nullable final Thing thing)", "class_method_signature": "ModifyFeaturePropertiesStrategy.extractFeature(final ModifyFeatureProperties command, @Nullable final Thing thing)", "testcase": false, "constructor": false}, {"identifier": "getModifyOrCreateResult", "parameters": "(final Feature feature, final Context<ThingId> context,\n            final long nextRevision, final ModifyFeatureProperties command, @Nullable final Thing thing,\n            @Nullable final Metadata metadata)", "modifiers": "private", "return": "Result<ThingEvent>", "signature": "Result<ThingEvent> getModifyOrCreateResult(final Feature feature, final Context<ThingId> context,\n            final long nextRevision, final ModifyFeatureProperties command, @Nullable final Thing thing,\n            @Nullable final Metadata metadata)", "full_signature": "private Result<ThingEvent> getModifyOrCreateResult(final Feature feature, final Context<ThingId> context,\n            final long nextRevision, final ModifyFeatureProperties command, @Nullable final Thing thing,\n            @Nullable final Metadata metadata)", "class_method_signature": "ModifyFeaturePropertiesStrategy.getModifyOrCreateResult(final Feature feature, final Context<ThingId> context,\n            final long nextRevision, final ModifyFeatureProperties command, @Nullable final Thing thing,\n            @Nullable final Metadata metadata)", "testcase": false, "constructor": false}, {"identifier": "getModifyResult", "parameters": "(final Context<ThingId> context, final long nextRevision,\n            final ModifyFeatureProperties command, @Nullable final Thing thing, @Nullable final Metadata metadata)", "modifiers": "private", "return": "Result<ThingEvent>", "signature": "Result<ThingEvent> getModifyResult(final Context<ThingId> context, final long nextRevision,\n            final ModifyFeatureProperties command, @Nullable final Thing thing, @Nullable final Metadata metadata)", "full_signature": "private Result<ThingEvent> getModifyResult(final Context<ThingId> context, final long nextRevision,\n            final ModifyFeatureProperties command, @Nullable final Thing thing, @Nullable final Metadata metadata)", "class_method_signature": "ModifyFeaturePropertiesStrategy.getModifyResult(final Context<ThingId> context, final long nextRevision,\n            final ModifyFeatureProperties command, @Nullable final Thing thing, @Nullable final Metadata metadata)", "testcase": false, "constructor": false}, {"identifier": "getCreateResult", "parameters": "(final Context<ThingId> context, final long nextRevision,\n            final ModifyFeatureProperties command, @Nullable final Thing thing, @Nullable final Metadata metadata)", "modifiers": "private", "return": "Result<ThingEvent>", "signature": "Result<ThingEvent> getCreateResult(final Context<ThingId> context, final long nextRevision,\n            final ModifyFeatureProperties command, @Nullable final Thing thing, @Nullable final Metadata metadata)", "full_signature": "private Result<ThingEvent> getCreateResult(final Context<ThingId> context, final long nextRevision,\n            final ModifyFeatureProperties command, @Nullable final Thing thing, @Nullable final Metadata metadata)", "class_method_signature": "ModifyFeaturePropertiesStrategy.getCreateResult(final Context<ThingId> context, final long nextRevision,\n            final ModifyFeatureProperties command, @Nullable final Thing thing, @Nullable final Metadata metadata)", "testcase": false, "constructor": false}, {"identifier": "previousEntityTag", "parameters": "(final ModifyFeatureProperties command,\n            @Nullable final Thing previousEntity)", "modifiers": "@Override public", "return": "Optional<EntityTag>", "signature": "Optional<EntityTag> previousEntityTag(final ModifyFeatureProperties command,\n            @Nullable final Thing previousEntity)", "full_signature": "@Override public Optional<EntityTag> previousEntityTag(final ModifyFeatureProperties command,\n            @Nullable final Thing previousEntity)", "class_method_signature": "ModifyFeaturePropertiesStrategy.previousEntityTag(final ModifyFeatureProperties command,\n            @Nullable final Thing previousEntity)", "testcase": false, "constructor": false}, {"identifier": "nextEntityTag", "parameters": "(final ModifyFeatureProperties command, @Nullable final Thing newEntity)", "modifiers": "@Override public", "return": "Optional<EntityTag>", "signature": "Optional<EntityTag> nextEntityTag(final ModifyFeatureProperties command, @Nullable final Thing newEntity)", "full_signature": "@Override public Optional<EntityTag> nextEntityTag(final ModifyFeatureProperties command, @Nullable final Thing newEntity)", "class_method_signature": "ModifyFeaturePropertiesStrategy.nextEntityTag(final ModifyFeatureProperties command, @Nullable final Thing newEntity)", "testcase": false, "constructor": false}], "file": "services/things/persistence/src/main/java/org/eclipse/ditto/services/things/persistence/actors/strategies/commands/ModifyFeaturePropertiesStrategy.java"}, "focal_method": {"identifier": "doApply", "parameters": "(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata)", "modifiers": "@Override protected", "return": "Result<ThingEvent>", "body": "@Override\n    protected Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata) {\n\n        final String featureId = command.getFeatureId();\n\n        final Thing nonNullThing = getEntityOrThrow(thing);\n\n        final JsonObject thingWithoutProperties = nonNullThing.removeFeatureProperties(featureId).toJson();\n        final JsonObject propertiesJsonObject = command.getProperties().toJson();\n\n        ThingCommandSizeValidator.getInstance().ensureValidSize(\n                () -> {\n                    final long lengthWithOutProperties = thingWithoutProperties.getUpperBoundForStringSize();\n                    final long propertiesLength = propertiesJsonObject.getUpperBoundForStringSize()\n                            + \"properties\".length() + featureId.length() + 5L;\n                    return lengthWithOutProperties + propertiesLength;\n                },\n                () -> {\n                    final long lengthWithOutProperties = thingWithoutProperties.toString().length();\n                    final long propertiesLength = propertiesJsonObject.toString().length()\n                            + \"properties\".length() + featureId.length() + 5L;\n                    return lengthWithOutProperties + propertiesLength;\n                },\n                command::getDittoHeaders);\n\n        return extractFeature(command, nonNullThing)\n                .map(feature -> getModifyOrCreateResult(feature, context, nextRevision, command, thing, metadata))\n                .orElseGet(() -> ResultFactory.newErrorResult(\n                        ExceptionFactory.featureNotFound(context.getState(), featureId,\n                                command.getDittoHeaders()), command));\n    }", "signature": "Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata)", "full_signature": "@Override protected Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata)", "class_method_signature": "ModifyFeaturePropertiesStrategy.doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final ModifyFeatureProperties command,\n            @Nullable final Metadata metadata)", "testcase": false, "constructor": false, "invocations": ["getFeatureId", "getEntityOrThrow", "toJson", "removeFeatureProperties", "toJson", "getProperties", "ensureValidSize", "getInstance", "getUpperBoundForStringSize", "getUpperBoundForStringSize", "length", "length", "length", "toString", "length", "toString", "length", "length", "orElseGet", "map", "extractFeature", "getModifyOrCreateResult", "newErrorResult", "featureNotFound", "getState", "getDittoHeaders"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}