{"test_class": {"identifier": "CsvWriterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/tech/tablesaw/io/csv/CsvWriterTest.java"}, "test_case": {"identifier": "quoteAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void quoteAll() throws IOException {\n    StringColumn colA = StringColumn.create(\"colA\", ImmutableList.of(\"a\", \"b\"));\n    StringColumn colB = StringColumn.create(\"colB\", ImmutableList.of(\"1\", \"2\"));\n    Table table = Table.create(\"testTable\", colA, colB);\n    StringWriter writer = new StringWriter();\n    table.write().usingOptions(CsvWriteOptions.builder(writer).quoteAllFields(true).build());\n    assertEquals(\n        \"\\\"colA\\\",\\\"colB\\\"\\n\\\"a\\\",\\\"1\\\"\\n\\\"b\\\",\\\"2\\\"\\n\",\n        writer.toString().replaceAll(\"\\\\r\\\\n\", \"\\n\"));\n  }", "signature": "void quoteAll()", "full_signature": "@Test public void quoteAll()", "class_method_signature": "CsvWriterTest.quoteAll()", "testcase": true, "constructor": false, "invocations": ["create", "of", "create", "of", "create", "usingOptions", "write", "build", "quoteAllFields", "builder", "assertEquals", "replaceAll", "toString"]}, "focal_class": {"identifier": "CsvWriter", "superclass": "", "interfaces": "implements DataWriter<CsvWriteOptions>", "fields": [{"original_string": "private static final CsvWriter INSTANCE = new CsvWriter();", "modifier": "private static final", "type": "CsvWriter", "declarator": "INSTANCE = new CsvWriter()", "var_name": "INSTANCE"}, {"original_string": "private static final String nullValue = \"\";", "modifier": "private static final", "type": "String", "declarator": "nullValue = \"\"", "var_name": "nullValue"}], "methods": [{"identifier": "register", "parameters": "(WriterRegistry registry)", "modifiers": "public static", "return": "void", "signature": "void register(WriterRegistry registry)", "full_signature": "public static void register(WriterRegistry registry)", "class_method_signature": "CsvWriter.register(WriterRegistry registry)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Table table, CsvWriteOptions options)", "modifiers": "public", "return": "void", "signature": "void write(Table table, CsvWriteOptions options)", "full_signature": "public void write(Table table, CsvWriteOptions options)", "class_method_signature": "CsvWriter.write(Table table, CsvWriteOptions options)", "testcase": false, "constructor": false}, {"identifier": "createSettings", "parameters": "(CsvWriteOptions options)", "modifiers": "protected static", "return": "CsvWriterSettings", "signature": "CsvWriterSettings createSettings(CsvWriteOptions options)", "full_signature": "protected static CsvWriterSettings createSettings(CsvWriteOptions options)", "class_method_signature": "CsvWriter.createSettings(CsvWriteOptions options)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Table table, Destination dest)", "modifiers": "@Override public", "return": "void", "signature": "void write(Table table, Destination dest)", "full_signature": "@Override public void write(Table table, Destination dest)", "class_method_signature": "CsvWriter.write(Table table, Destination dest)", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/io/csv/CsvWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(Table table, CsvWriteOptions options)", "modifiers": "public", "return": "void", "body": "public void write(Table table, CsvWriteOptions options) {\n    CsvWriterSettings settings = createSettings(options);\n\n    com.univocity.parsers.csv.CsvWriter csvWriter = null;\n    // Creates a writer with the above settings;\n    try {\n      csvWriter =\n          new com.univocity.parsers.csv.CsvWriter(options.destination().createWriter(), settings);\n\n      if (options.header()) {\n        String[] header = new String[table.columnCount()];\n        for (int c = 0; c < table.columnCount(); c++) {\n          header[c] = table.column(c).name();\n        }\n        csvWriter.writeHeaders(header);\n      }\n      for (int r = 0; r < table.rowCount(); r++) {\n        String[] entries = new String[table.columnCount()];\n        for (int c = 0; c < table.columnCount(); c++) {\n          table.get(r, c);\n          entries[c] = table.getUnformatted(r, c);\n        }\n        csvWriter.writeRow(entries);\n      }\n    } finally {\n      if (csvWriter != null) {\n        csvWriter.flush();\n        csvWriter.close();\n      }\n    }\n  }", "signature": "void write(Table table, CsvWriteOptions options)", "full_signature": "public void write(Table table, CsvWriteOptions options)", "class_method_signature": "CsvWriter.write(Table table, CsvWriteOptions options)", "testcase": false, "constructor": false, "invocations": ["createSettings", "createWriter", "destination", "header", "columnCount", "columnCount", "name", "column", "writeHeaders", "rowCount", "columnCount", "columnCount", "get", "getUnformatted", "writeRow", "flush", "close"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}