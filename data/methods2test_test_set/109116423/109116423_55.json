{"test_class": {"identifier": "ItemGroupTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Item CHILD_1 = new EqualsItem(\"Child 1\");", "modifier": "private static final", "type": "Item", "declarator": "CHILD_1 = new EqualsItem(\"Child 1\")", "var_name": "CHILD_1"}, {"original_string": "private static final Item CHILD_2 = new EqualsItem(\"Child 2\");", "modifier": "private static final", "type": "Item", "declarator": "CHILD_2 = new EqualsItem(\"Child 2\")", "var_name": "CHILD_2"}, {"original_string": "private static final Item CHILD_3 = new EqualsItem(\"Child 3\");", "modifier": "private static final", "type": "Item", "declarator": "CHILD_3 = new EqualsItem(\"Child 3\")", "var_name": "CHILD_3"}, {"original_string": "private static final Item CHILD_4 = new EqualsItem(\"Child 4\");", "modifier": "private static final", "type": "Item", "declarator": "CHILD_4 = new EqualsItem(\"Child 4\")", "var_name": "CHILD_4"}, {"original_string": "private ItemGroup mItemGroup;", "modifier": "private", "type": "ItemGroup", "declarator": "mItemGroup", "var_name": "mItemGroup"}, {"original_string": "@Mock\n    private ItemHierarchy.Observer mObserver;", "modifier": "@Mock\n    private", "type": "ItemHierarchy.Observer", "declarator": "mObserver", "var_name": "mObserver"}], "file": "com/android/setupwizardlib/items/ItemGroupTest.java"}, "test_case": {"identifier": "testFindItemById", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindItemById() {\n        CHILD_1.setId(12345);\n        CHILD_2.setId(23456);\n\n        mItemGroup.addChild(CHILD_1);\n        mItemGroup.addChild(CHILD_2);\n\n        assertSame(\"Find item 23456 should return child 2\",\n                CHILD_2, mItemGroup.findItemById(23456));\n    }", "signature": "void testFindItemById()", "full_signature": "@Test public void testFindItemById()", "class_method_signature": "ItemGroupTest.testFindItemById()", "testcase": true, "constructor": false, "invocations": ["setId", "setId", "addChild", "addChild", "assertSame", "findItemById"]}, "focal_class": {"identifier": "ItemGroup", "superclass": "extends AbstractItemHierarchy", "interfaces": "implements ItemInflater.ItemParent,\n        ItemHierarchy.Observer", "fields": [{"original_string": "private static final String TAG = \"ItemGroup\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"ItemGroup\"", "var_name": "TAG"}, {"original_string": "private List<ItemHierarchy> mChildren = new ArrayList<>();", "modifier": "private", "type": "List<ItemHierarchy>", "declarator": "mChildren = new ArrayList<>()", "var_name": "mChildren"}, {"original_string": "private SparseIntArray mHierarchyStart = new SparseIntArray();", "modifier": "private", "type": "SparseIntArray", "declarator": "mHierarchyStart = new SparseIntArray()", "var_name": "mHierarchyStart"}, {"original_string": "private int mCount = 0;", "modifier": "private", "type": "int", "declarator": "mCount = 0", "var_name": "mCount"}, {"original_string": "private boolean mDirty = false;", "modifier": "private", "type": "boolean", "declarator": "mDirty = false", "var_name": "mDirty"}], "methods": [{"identifier": "binarySearch", "parameters": "(SparseIntArray array, int value)", "modifiers": "private static", "return": "int", "signature": "int binarySearch(SparseIntArray array, int value)", "full_signature": "private static int binarySearch(SparseIntArray array, int value)", "class_method_signature": "ItemGroup.binarySearch(SparseIntArray array, int value)", "testcase": false, "constructor": false}, {"identifier": "identityIndexOf", "parameters": "(List<T> list, T object)", "modifiers": "private static", "return": "int", "signature": "int identityIndexOf(List<T> list, T object)", "full_signature": "private static int identityIndexOf(List<T> list, T object)", "class_method_signature": "ItemGroup.identityIndexOf(List<T> list, T object)", "testcase": false, "constructor": false}, {"identifier": "ItemGroup", "parameters": "()", "modifiers": "public", "return": "", "signature": " ItemGroup()", "full_signature": "public  ItemGroup()", "class_method_signature": "ItemGroup.ItemGroup()", "testcase": false, "constructor": true}, {"identifier": "ItemGroup", "parameters": "(Context context, AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " ItemGroup(Context context, AttributeSet attrs)", "full_signature": "public  ItemGroup(Context context, AttributeSet attrs)", "class_method_signature": "ItemGroup.ItemGroup(Context context, AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "addChild", "parameters": "(ItemHierarchy child)", "modifiers": "@Override public", "return": "void", "signature": "void addChild(ItemHierarchy child)", "full_signature": "@Override public void addChild(ItemHierarchy child)", "class_method_signature": "ItemGroup.addChild(ItemHierarchy child)", "testcase": false, "constructor": false}, {"identifier": "removeChild", "parameters": "(ItemHierarchy child)", "modifiers": "public", "return": "boolean", "signature": "boolean removeChild(ItemHierarchy child)", "full_signature": "public boolean removeChild(ItemHierarchy child)", "class_method_signature": "ItemGroup.removeChild(ItemHierarchy child)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "ItemGroup.clear()", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getCount()", "full_signature": "@Override public int getCount()", "class_method_signature": "ItemGroup.getCount()", "testcase": false, "constructor": false}, {"identifier": "getItemAt", "parameters": "(int position)", "modifiers": "@Override public", "return": "IItem", "signature": "IItem getItemAt(int position)", "full_signature": "@Override public IItem getItemAt(int position)", "class_method_signature": "ItemGroup.getItemAt(int position)", "testcase": false, "constructor": false}, {"identifier": "onChanged", "parameters": "(ItemHierarchy hierarchy)", "modifiers": "@Override public", "return": "void", "signature": "void onChanged(ItemHierarchy hierarchy)", "full_signature": "@Override public void onChanged(ItemHierarchy hierarchy)", "class_method_signature": "ItemGroup.onChanged(ItemHierarchy hierarchy)", "testcase": false, "constructor": false}, {"identifier": "getChildPosition", "parameters": "(ItemHierarchy child)", "modifiers": "private", "return": "int", "signature": "int getChildPosition(ItemHierarchy child)", "full_signature": "private int getChildPosition(ItemHierarchy child)", "class_method_signature": "ItemGroup.getChildPosition(ItemHierarchy child)", "testcase": false, "constructor": false}, {"identifier": "getChildPosition", "parameters": "(int childIndex)", "modifiers": "private", "return": "int", "signature": "int getChildPosition(int childIndex)", "full_signature": "private int getChildPosition(int childIndex)", "class_method_signature": "ItemGroup.getChildPosition(int childIndex)", "testcase": false, "constructor": false}, {"identifier": "onItemRangeChanged", "parameters": "(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "modifiers": "@Override public", "return": "void", "signature": "void onItemRangeChanged(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "full_signature": "@Override public void onItemRangeChanged(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "class_method_signature": "ItemGroup.onItemRangeChanged(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "onItemRangeInserted", "parameters": "(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "modifiers": "@Override public", "return": "void", "signature": "void onItemRangeInserted(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "full_signature": "@Override public void onItemRangeInserted(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "class_method_signature": "ItemGroup.onItemRangeInserted(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "onItemRangeMoved", "parameters": "(ItemHierarchy itemHierarchy, int fromPosition, int toPosition,\n            int itemCount)", "modifiers": "@Override public", "return": "void", "signature": "void onItemRangeMoved(ItemHierarchy itemHierarchy, int fromPosition, int toPosition,\n            int itemCount)", "full_signature": "@Override public void onItemRangeMoved(ItemHierarchy itemHierarchy, int fromPosition, int toPosition,\n            int itemCount)", "class_method_signature": "ItemGroup.onItemRangeMoved(ItemHierarchy itemHierarchy, int fromPosition, int toPosition,\n            int itemCount)", "testcase": false, "constructor": false}, {"identifier": "onItemRangeRemoved", "parameters": "(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "modifiers": "@Override public", "return": "void", "signature": "void onItemRangeRemoved(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "full_signature": "@Override public void onItemRangeRemoved(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "class_method_signature": "ItemGroup.onItemRangeRemoved(ItemHierarchy itemHierarchy, int positionStart, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "findItemById", "parameters": "(int id)", "modifiers": "@Override public", "return": "ItemHierarchy", "signature": "ItemHierarchy findItemById(int id)", "full_signature": "@Override public ItemHierarchy findItemById(int id)", "class_method_signature": "ItemGroup.findItemById(int id)", "testcase": false, "constructor": false}, {"identifier": "updateDataIfNeeded", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateDataIfNeeded()", "full_signature": "private void updateDataIfNeeded()", "class_method_signature": "ItemGroup.updateDataIfNeeded()", "testcase": false, "constructor": false}, {"identifier": "getItemIndex", "parameters": "(int position)", "modifiers": "private", "return": "int", "signature": "int getItemIndex(int position)", "full_signature": "private int getItemIndex(int position)", "class_method_signature": "ItemGroup.getItemIndex(int position)", "testcase": false, "constructor": false}], "file": "com/android/setupwizardlib/items/ItemGroup.java"}, "focal_method": {"identifier": "findItemById", "parameters": "(int id)", "modifiers": "@Override public", "return": "ItemHierarchy", "body": "@Override\n    public ItemHierarchy findItemById(int id) {\n        if (id == getId()) {\n            return this;\n        }\n        for (ItemHierarchy child : mChildren) {\n            ItemHierarchy childFindItem = child.findItemById(id);\n            if (childFindItem != null) {\n                return childFindItem;\n            }\n        }\n        return null;\n    }", "signature": "ItemHierarchy findItemById(int id)", "full_signature": "@Override public ItemHierarchy findItemById(int id)", "class_method_signature": "ItemGroup.findItemById(int id)", "testcase": false, "constructor": false, "invocations": ["getId", "findItemById"]}, "repository": {"repo_id": 109116423, "url": "https://github.com/AndroidSDKSources/android-sdk-sources-for-api-level-26", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 29147, "license": "licensed"}}