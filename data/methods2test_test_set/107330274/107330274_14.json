{"test_class": {"identifier": "SeqNumberDataGeneratorsTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/data/generator/internal/SeqNumberDataGeneratorsTest.java"}, "test_case": {"identifier": "testIntAscending", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIntAscending() throws Exception {\n        List<int[]> sequences = DataGenerator.sequenceOfAscendingIntegers(5, -10, 10).toList(3);\n        for (int[] seq : sequences) {\n            for (int i = 1; i < seq.length; i++) {\n                assertThat(seq[i - 1] <= seq[i]).isTrue();\n            }\n        }\n    }", "signature": "void testIntAscending()", "full_signature": "@Test public void testIntAscending()", "class_method_signature": "SeqNumberDataGeneratorsTest.testIntAscending()", "testcase": true, "constructor": false, "invocations": ["toList", "sequenceOfAscendingIntegers", "isTrue", "assertThat"]}, "focal_class": {"identifier": "SeqNumberDataGenerators", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "sequenceOfAscendingIntegers", "parameters": "(int size, int lowerBound, int upperBound)", "modifiers": "public static", "return": "DataGenerator<int[]>", "signature": "DataGenerator<int[]> sequenceOfAscendingIntegers(int size, int lowerBound, int upperBound)", "full_signature": "public static DataGenerator<int[]> sequenceOfAscendingIntegers(int size, int lowerBound, int upperBound)", "class_method_signature": "SeqNumberDataGenerators.sequenceOfAscendingIntegers(int size, int lowerBound, int upperBound)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/data/generator/internal/SeqNumberDataGenerators.java"}, "focal_method": {"identifier": "sequenceOfAscendingIntegers", "parameters": "(int size, int lowerBound, int upperBound)", "modifiers": "public static", "return": "DataGenerator<int[]>", "body": "public static DataGenerator<int[]> sequenceOfAscendingIntegers(int size, int lowerBound, int upperBound) {\n        final int range = upperBound - lowerBound;\n        return DataGenerator.fromContext(new Random(), random -> {\n            int[] result = new int[size];\n            for (int i = 0; i < size; i++) {\n                result[i] = lowerBound + random.nextInt(range);\n            }\n            Arrays.sort(result);\n            return Pair.of(random, result);\n        });\n    }", "signature": "DataGenerator<int[]> sequenceOfAscendingIntegers(int size, int lowerBound, int upperBound)", "full_signature": "public static DataGenerator<int[]> sequenceOfAscendingIntegers(int size, int lowerBound, int upperBound)", "class_method_signature": "SeqNumberDataGenerators.sequenceOfAscendingIntegers(int size, int lowerBound, int upperBound)", "testcase": false, "constructor": false, "invocations": ["fromContext", "nextInt", "sort", "of"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}