{"test_class": {"identifier": "WelcomePresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private WelcomePresenter mWelcomePresenter;", "modifier": "private", "type": "WelcomePresenter", "declarator": "mWelcomePresenter", "var_name": "mWelcomePresenter"}, {"original_string": "@Mock WelcomeMvpView mMockWelcomeMvpView;", "modifier": "@Mock", "type": "WelcomeMvpView", "declarator": "mMockWelcomeMvpView", "var_name": "mMockWelcomeMvpView"}, {"original_string": "@Mock DataManager mMockDataManager;", "modifier": "@Mock", "type": "DataManager", "declarator": "mMockDataManager", "var_name": "mMockDataManager"}, {"original_string": "@Rule\n    public final RxSchedulersOverrideRule mOverrideSchedulersRule = new RxSchedulersOverrideRule();", "modifier": "@Rule\n    public final", "type": "RxSchedulersOverrideRule", "declarator": "mOverrideSchedulersRule = new RxSchedulersOverrideRule()", "var_name": "mOverrideSchedulersRule"}], "file": "app/src/test/java/com/hitherejoe/mondroid/ui/welcome/WelcomePresenterTest.java"}, "test_case": {"identifier": "getAccessTokenSucceedsAndLaunchesMainActivity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAccessTokenSucceedsAndLaunchesMainActivity() {\n        AccessToken accessToken = TestDataFactory.makeAccessToken();\n        stubDataManagerGetAccessToken(Single.just(accessToken));\n        mWelcomePresenter.getAccessToken(\"code\");\n\n        verify(mMockWelcomeMvpView).showLoadingState(true);\n        verify(mMockWelcomeMvpView).launchMainActivity();\n        verify(mMockWelcomeMvpView).showLoadingState(false);\n    }", "signature": "void getAccessTokenSucceedsAndLaunchesMainActivity()", "full_signature": "@Test public void getAccessTokenSucceedsAndLaunchesMainActivity()", "class_method_signature": "WelcomePresenterTest.getAccessTokenSucceedsAndLaunchesMainActivity()", "testcase": true, "constructor": false, "invocations": ["makeAccessToken", "stubDataManagerGetAccessToken", "just", "getAccessToken", "showLoadingState", "verify", "launchMainActivity", "verify", "showLoadingState", "verify"]}, "focal_class": {"identifier": "WelcomePresenter", "superclass": "extends BasePresenter<WelcomeMvpView>", "interfaces": "", "fields": [{"original_string": "private final DataManager mDataManager;", "modifier": "private final", "type": "DataManager", "declarator": "mDataManager", "var_name": "mDataManager"}, {"original_string": "private Subscription mSubscription;", "modifier": "private", "type": "Subscription", "declarator": "mSubscription", "var_name": "mSubscription"}], "methods": [{"identifier": "WelcomePresenter", "parameters": "(DataManager dataManager)", "modifiers": "@Inject public", "return": "", "signature": " WelcomePresenter(DataManager dataManager)", "full_signature": "@Inject public  WelcomePresenter(DataManager dataManager)", "class_method_signature": "WelcomePresenter.WelcomePresenter(DataManager dataManager)", "testcase": false, "constructor": true}, {"identifier": "detachView", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void detachView()", "full_signature": "@Override public void detachView()", "class_method_signature": "WelcomePresenter.detachView()", "testcase": false, "constructor": false}, {"identifier": "getAccessToken", "parameters": "(String code)", "modifiers": "public", "return": "void", "signature": "void getAccessToken(String code)", "full_signature": "public void getAccessToken(String code)", "class_method_signature": "WelcomePresenter.getAccessToken(String code)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/hitherejoe/mondroid/ui/welcome/WelcomePresenter.java"}, "focal_method": {"identifier": "getAccessToken", "parameters": "(String code)", "modifiers": "public", "return": "void", "body": "public void getAccessToken(String code) {\n        checkViewAttached();\n        getMvpView().showLoadingState(true);\n        mSubscription = mDataManager.getAccessToken(code)\n                .subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new SingleSubscriber<AccessToken>() {\n                    @Override\n                    public void onSuccess(AccessToken accessToken) {\n                        getMvpView().showLoadingState(false);\n                        getMvpView().launchMainActivity();\n                    }\n\n                    @Override\n                    public void onError(Throwable error) {\n                        getMvpView().showLoadingState(false);\n                        Timber.e(error, \"There was a problem retrieving the access token\");\n                        getMvpView().showAccessTokenError();\n                    }\n                });\n    }", "signature": "void getAccessToken(String code)", "full_signature": "public void getAccessToken(String code)", "class_method_signature": "WelcomePresenter.getAccessToken(String code)", "testcase": false, "constructor": false, "invocations": ["checkViewAttached", "showLoadingState", "getMvpView", "subscribe", "observeOn", "subscribeOn", "getAccessToken", "io", "mainThread", "showLoadingState", "getMvpView", "launchMainActivity", "getMvpView", "showLoadingState", "getMvpView", "e", "showAccessTokenError", "getMvpView"]}, "repository": {"repo_id": 60776569, "url": "https://github.com/hitherejoe/Mondroid", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 138, "size": 1756, "license": "GNU General Public License v3.0"}}