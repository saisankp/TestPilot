{"test_class": {"identifier": "HashesTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/HashesTest.java"}, "test_case": {"identifier": "success_7", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_7() {\n        String seed1 = \"ed25519\";\n\n        byte[] result1 = Hashes.hash(HashAlgorithm.SHAKE_256, 64, seed1.getBytes());\n        assertThat(HexEncoder.getString(result1), is(\"4670b3737cc4f03c97e005f447da7262359670bbfc72f16a50191a6b083df15aebe8ad55e1ec161b7b42fa6d1de20e2e426f0ca6c84899a13edacfdff47c788a\"));\n\n        byte[] result2 = Hashes.hash(HashAlgorithm.SHAKE_256, 65, seed1.getBytes());\n        assertThat(HexEncoder.getString(result2), is(\"4670b3737cc4f03c97e005f447da7262359670bbfc72f16a50191a6b083df15aebe8ad55e1ec161b7b42fa6d1de20e2e426f0ca6c84899a13edacfdff47c788a57\"));\n\n        String seed2 = \"This is a pen.\";\n\n        byte[] result3 = Hashes.hash(HashAlgorithm.SHAKE_256, 64, seed2.getBytes());\n        assertThat(HexEncoder.getString(result3), is(\"c766adb0fb2e2fe5fb03df0e88b51768ea48f6d956681094de11df13e4c95a63349fb527e0e08bd30284e9a22b026ffaeace849089d8d632209640a7c125c0c0\"));\n\n        byte[] result4 = Hashes.hash(HashAlgorithm.SHAKE_256, 65, seed2.getBytes());\n        assertThat(HexEncoder.getString(result4), is(\"c766adb0fb2e2fe5fb03df0e88b51768ea48f6d956681094de11df13e4c95a63349fb527e0e08bd30284e9a22b026ffaeace849089d8d632209640a7c125c0c09e\"));\n\n        String seed3 = \"lkadjlkfalkgnlaksdnfkladf\";\n\n        byte[] result5 = Hashes.hash(HashAlgorithm.SHAKE_128, 32, seed3.getBytes());\n        assertThat(HexEncoder.getString(result5), is(\"d00a3d9da389b712ecac6f6c2f9833b866417fa67ed9f1f23dd991df82b847d1\"));\n\n        byte[] result6 = Hashes.hash(HashAlgorithm.SHAKE_128, 36, seed3.getBytes());\n        assertThat(HexEncoder.getString(result6), is(\"d00a3d9da389b712ecac6f6c2f9833b866417fa67ed9f1f23dd991df82b847d156ca43fe\"));\n    }", "signature": "void success_7()", "full_signature": "@Test public void success_7()", "class_method_signature": "HashesTest.success_7()", "testcase": true, "constructor": false, "invocations": ["hash", "getBytes", "assertThat", "getString", "is", "hash", "getBytes", "assertThat", "getString", "is", "hash", "getBytes", "assertThat", "getString", "is", "hash", "getBytes", "assertThat", "getString", "is", "hash", "getBytes", "assertThat", "getString", "is", "hash", "getBytes", "assertThat", "getString", "is"]}, "focal_class": {"identifier": "Hashes", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(String algorithm, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hash(String algorithm, byte[]... inputs)", "full_signature": "private static byte[] hash(String algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(String algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hashVariableOutput", "parameters": "(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "full_signature": "private static byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "class_method_signature": "Hashes.hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/Hashes.java"}, "focal_method": {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs) {\n        return hash(algorithm, algorithm.getDefaultBitLength() / 8, inputs);\n    }", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false, "invocations": ["hash", "getDefaultBitLength"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}