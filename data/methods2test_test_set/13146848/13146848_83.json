{"test_class": {"identifier": "MarginsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/scale/MarginsTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        Margins eq1 = new Margins(0, 1, 10, 9);\n        Margins eq2 = new Margins(0, 1, 10, 9);\n        Margins eq3 = new Margins(0, 1, 10, 9);\n        Margins diff = new Margins(1, 1, 10, 9);\n        TestUtils.testEqualsAndHashCodes(eq1, eq2, eq3, diff);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "MarginsTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["testEqualsAndHashCodes"]}, "focal_class": {"identifier": "Margins", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNegative\n    public final double top;", "modifier": "@NotNegative\n    public final", "type": "double", "declarator": "top", "var_name": "top"}, {"original_string": "@NotNegative\n    public final double right;", "modifier": "@NotNegative\n    public final", "type": "double", "declarator": "right", "var_name": "right"}, {"original_string": "@NotNegative\n    public final double bottom;", "modifier": "@NotNegative\n    public final", "type": "double", "declarator": "bottom", "var_name": "bottom"}, {"original_string": "@NotNegative\n    public final double left;", "modifier": "@NotNegative\n    public final", "type": "double", "declarator": "left", "var_name": "left"}], "methods": [{"identifier": "Margins", "parameters": "(double top, double right, double bottom, double left)", "modifiers": "public", "return": "", "signature": " Margins(double top, double right, double bottom, double left)", "full_signature": "public  Margins(double top, double right, double bottom, double left)", "class_method_signature": "Margins.Margins(double top, double right, double bottom, double left)", "testcase": false, "constructor": true}, {"identifier": "inchesToPoints", "parameters": "(double inches)", "modifiers": "public static", "return": "double", "signature": "double inchesToPoints(double inches)", "full_signature": "public static double inchesToPoints(double inches)", "class_method_signature": "Margins.inchesToPoints(double inches)", "testcase": false, "constructor": false}, {"identifier": "pointsToInches", "parameters": "(double points)", "modifiers": "public static", "return": "double", "signature": "double pointsToInches(double points)", "full_signature": "public static double pointsToInches(double points)", "class_method_signature": "Margins.pointsToInches(double points)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "()", "modifiers": "public", "return": "Margins", "signature": "Margins rotate()", "full_signature": "public Margins rotate()", "class_method_signature": "Margins.rotate()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Margins.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Margins.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Margins.equals(Object other)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/scale/Margins.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (!(other instanceof Margins)) {\n            return false;\n        }\n        Margins instance = (Margins) other;\n        return new EqualsBuilder().append(top, instance.top).append(right, instance.right)\n                .append(bottom, instance.bottom).append(left, instance.left).isEquals();\n    }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Margins.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["isEquals", "append", "append", "append", "append"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}