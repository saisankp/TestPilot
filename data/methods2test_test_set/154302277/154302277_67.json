{"test_class": {"identifier": "TimestampMeasurementElementTest", "superclass": "", "interfaces": "", "fields": [], "file": "osgp/platform/osgp-domain-distributionautomation/src/test/java/org/opensmartgridplatform/domain/da/measurements/elements/TimestampMeasurementElementTest.java"}, "test_case": {"identifier": "AsZonedDateTimeShouldReturnCorrectZonedDateTimeWhenConstructedUsingZonedDateTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void AsZonedDateTimeShouldReturnCorrectZonedDateTimeWhenConstructedUsingZonedDateTime() {\n        // Arrange\n        final ZonedDateTime expected = ZonedDateTime.of(2020, 2, 20, 21, 59, 59, 0, ZoneOffset.UTC);\n\n        // Act\n        final TimestampMeasurementElement element = new TimestampMeasurementElement(expected);\n        final ZonedDateTime actual = element.asZonedDateTime();\n\n        // Assert\n        assertThat(actual).isEqualTo(expected);\n    }", "signature": "void AsZonedDateTimeShouldReturnCorrectZonedDateTimeWhenConstructedUsingZonedDateTime()", "full_signature": "@Test public void AsZonedDateTimeShouldReturnCorrectZonedDateTimeWhenConstructedUsingZonedDateTime()", "class_method_signature": "TimestampMeasurementElementTest.AsZonedDateTimeShouldReturnCorrectZonedDateTimeWhenConstructedUsingZonedDateTime()", "testcase": true, "constructor": false, "invocations": ["of", "asZonedDateTime", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "TimestampMeasurementElement", "superclass": "", "interfaces": "implements MeasurementElement, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private Long value;", "modifier": "private", "type": "Long", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "TimestampMeasurementElement", "parameters": "(final long value)", "modifiers": "public", "return": "", "signature": " TimestampMeasurementElement(final long value)", "full_signature": "public  TimestampMeasurementElement(final long value)", "class_method_signature": "TimestampMeasurementElement.TimestampMeasurementElement(final long value)", "testcase": false, "constructor": true}, {"identifier": "TimestampMeasurementElement", "parameters": "(final ZonedDateTime zonedDateTime)", "modifiers": "public", "return": "", "signature": " TimestampMeasurementElement(final ZonedDateTime zonedDateTime)", "full_signature": "public  TimestampMeasurementElement(final ZonedDateTime zonedDateTime)", "class_method_signature": "TimestampMeasurementElement.TimestampMeasurementElement(final ZonedDateTime zonedDateTime)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getValue()", "full_signature": "public Long getValue()", "class_method_signature": "TimestampMeasurementElement.getValue()", "testcase": false, "constructor": false}, {"identifier": "asZonedDateTime", "parameters": "()", "modifiers": "public", "return": "ZonedDateTime", "signature": "ZonedDateTime asZonedDateTime()", "full_signature": "public ZonedDateTime asZonedDateTime()", "class_method_signature": "TimestampMeasurementElement.asZonedDateTime()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "TimestampMeasurementElement.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TimestampMeasurementElement.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TimestampMeasurementElement.toString()", "testcase": false, "constructor": false}], "file": "osgp/platform/osgp-domain-distributionautomation/src/main/java/org/opensmartgridplatform/domain/da/measurements/elements/TimestampMeasurementElement.java"}, "focal_method": {"identifier": "asZonedDateTime", "parameters": "()", "modifiers": "public", "return": "ZonedDateTime", "body": "public ZonedDateTime asZonedDateTime() {\n        return ZonedDateTime.ofInstant(Instant.ofEpochMilli(this.value), ZoneOffset.UTC);\n    }", "signature": "ZonedDateTime asZonedDateTime()", "full_signature": "public ZonedDateTime asZonedDateTime()", "class_method_signature": "TimestampMeasurementElement.asZonedDateTime()", "testcase": false, "constructor": false, "invocations": ["ofInstant", "ofEpochMilli"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}