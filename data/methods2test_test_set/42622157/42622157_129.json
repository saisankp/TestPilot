{"test_class": {"identifier": "DriverInjectionTest", "superclass": "extends TestWithGitBackedRepository", "interfaces": "", "fields": [], "file": "org.eclipse.winery.repository/src/test/java/org/eclipse/winery/repository/driverspecificationandinjection/DriverInjectionTest.java"}, "test_case": {"identifier": "setDriverProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setDriverProperty() throws Exception {\n        setRevisionTo(\"d8ee55deecf37f5052d27807df691a7b70ec50f2\");\n        ServiceTemplateId id = new ServiceTemplateId(\"http://winery.opentosca.org/test/servicetemplates/ponyuniverse/daspecifier\", \"DASpecificationTest\", false);\n        TTopologyTemplate topologyTemplate = this.repository.getElement(id).getTopologyTemplate();\n        TRelationshipTemplate relationshipTemplate = topologyTemplate.getRelationshipTemplate(\"con_71\");\n        TDeploymentArtifact deploymentArtifact = topologyTemplate.getNodeTemplate(\"dressageequipment\").getDeploymentArtifacts().getDeploymentArtifact().stream()\n            .filter(da -> da.getName().equalsIgnoreCase(\"DressageEquipment_Pony\")).findFirst().get();\n\n        DriverInjection.setDriverProperty(relationshipTemplate, deploymentArtifact);\n\n        assertEquals(\"org.test.dressagedriver\", ModelUtilities.getPropertiesKV(relationshipTemplate).get(\"Driver\"));\n\n    }", "signature": "void setDriverProperty()", "full_signature": "@Test public void setDriverProperty()", "class_method_signature": "DriverInjectionTest.setDriverProperty()", "testcase": true, "constructor": false, "invocations": ["setRevisionTo", "getTopologyTemplate", "getElement", "getRelationshipTemplate", "get", "findFirst", "filter", "stream", "getDeploymentArtifact", "getDeploymentArtifacts", "getNodeTemplate", "equalsIgnoreCase", "getName", "setDriverProperty", "assertEquals", "get", "getPropertiesKV"]}, "focal_class": {"identifier": "DriverInjection", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "injectDriver", "parameters": "(TTopologyTemplate topologyTemplate)", "modifiers": "public static", "return": "TTopologyTemplate", "signature": "TTopologyTemplate injectDriver(TTopologyTemplate topologyTemplate)", "full_signature": "public static TTopologyTemplate injectDriver(TTopologyTemplate topologyTemplate)", "class_method_signature": "DriverInjection.injectDriver(TTopologyTemplate topologyTemplate)", "testcase": false, "constructor": false}, {"identifier": "setDriverProperty", "parameters": "(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact)", "modifiers": "public static", "return": "void", "signature": "void setDriverProperty(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact)", "full_signature": "public static void setDriverProperty(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact)", "class_method_signature": "DriverInjection.setDriverProperty(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact)", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.repository/src/main/java/org/eclipse/winery/repository/driverspecificationandinjection/DriverInjection.java"}, "focal_method": {"identifier": "setDriverProperty", "parameters": "(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact)", "modifiers": "public static", "return": "void", "body": "public static void setDriverProperty(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact) throws Exception {\n        QName DAArtifactTemplateQName = driverDeploymentArtifact.getArtifactRef();\n        ArtifactTemplateId artifactTemplateId = new ArtifactTemplateId(DAArtifactTemplateQName);\n        TArtifactTemplate artifactTemplate = RepositoryFactory.getRepository().getElement(artifactTemplateId);\n\n        Map<String, String> artifactProperties = ModelUtilities.getPropertiesKV(artifactTemplate);\n        Map<String, String> relationshipProperties = ModelUtilities.getPropertiesKV(relationshipTemplate);\n\n        if ((artifactProperties != null) && (relationshipProperties != null) && artifactProperties.containsKey(\"Driver\") && relationshipProperties.containsKey(\"Driver\")) {\n            relationshipProperties.put(\"Driver\", artifactProperties.get(\"Driver\"));\n            relationshipTemplate.getProperties().setKVProperties(relationshipProperties);\n        } else {\n            throw new WineryRepositoryException(\"No Property found to set to the driver classname\");\n        }\n    }", "signature": "void setDriverProperty(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact)", "full_signature": "public static void setDriverProperty(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact)", "class_method_signature": "DriverInjection.setDriverProperty(TRelationshipTemplate relationshipTemplate, TDeploymentArtifact driverDeploymentArtifact)", "testcase": false, "constructor": false, "invocations": ["getArtifactRef", "getElement", "getRepository", "getPropertiesKV", "getPropertiesKV", "containsKey", "containsKey", "put", "get", "setKVProperties", "getProperties"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}