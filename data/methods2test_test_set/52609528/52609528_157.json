{"test_class": {"identifier": "DeltaHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RedisClient redisClient;", "modifier": "private", "type": "RedisClient", "declarator": "redisClient", "var_name": "redisClient"}, {"original_string": "private Router router = mock(Router.class);", "modifier": "private", "type": "Router", "declarator": "router = mock(Router.class)", "var_name": "router"}, {"original_string": "private HttpServerRequest request;", "modifier": "private", "type": "HttpServerRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private CaseInsensitiveHeaders requestHeaders = new CaseInsensitiveHeaders();", "modifier": "private", "type": "CaseInsensitiveHeaders", "declarator": "requestHeaders = new CaseInsensitiveHeaders()", "var_name": "requestHeaders"}], "file": "gateleen-delta/src/test/java/org/swisspush/gateleen/delta/DeltaHandlerTest.java"}, "test_case": {"identifier": "testDeltaWithExpiry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeltaWithExpiry() {\n        requestHeaders.add(\"x-expire-after\", \"123\");\n\n        DeltaHandler deltaHandler = new DeltaHandler(redisClient, null);\n        deltaHandler.handle(request, router);\n\n        verify(redisClient, times(1)).setex(eq(\"delta:resources:a:b:c\"), eq(123L), eq(\"555\"), any());\n        verify(redisClient, never()).set(any(), any(), any());\n    }", "signature": "void testDeltaWithExpiry()", "full_signature": "@Test public void testDeltaWithExpiry()", "class_method_signature": "DeltaHandlerTest.testDeltaWithExpiry()", "testcase": true, "constructor": false, "invocations": ["add", "handle", "setex", "verify", "times", "eq", "eq", "eq", "any", "set", "verify", "never", "any", "any", "any"]}, "focal_class": {"identifier": "DeltaHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DELTA_PARAM = \"delta\";", "modifier": "private static final", "type": "String", "declarator": "DELTA_PARAM = \"delta\"", "var_name": "DELTA_PARAM"}, {"original_string": "private static final String DELTA_HEADER = \"x-delta\";", "modifier": "private static final", "type": "String", "declarator": "DELTA_HEADER = \"x-delta\"", "var_name": "DELTA_HEADER"}, {"original_string": "private static final String IF_NONE_MATCH_HEADER = \"if-none-match\";", "modifier": "private static final", "type": "String", "declarator": "IF_NONE_MATCH_HEADER = \"if-none-match\"", "var_name": "IF_NONE_MATCH_HEADER"}, {"original_string": "private static final String DELTA_BACKEND_HEADER = \"x-delta-backend\";", "modifier": "private static final", "type": "String", "declarator": "DELTA_BACKEND_HEADER = \"x-delta-backend\"", "var_name": "DELTA_BACKEND_HEADER"}, {"original_string": "private static final String EXPIRE_AFTER_HEADER = \"X-Expire-After\";", "modifier": "private static final", "type": "String", "declarator": "EXPIRE_AFTER_HEADER = \"X-Expire-After\"", "var_name": "EXPIRE_AFTER_HEADER"}, {"original_string": "private static final String SLASH = \"/\";", "modifier": "private static final", "type": "String", "declarator": "SLASH = \"/\"", "var_name": "SLASH"}, {"original_string": "private static final int TIMEOUT = 120000;", "modifier": "private static final", "type": "int", "declarator": "TIMEOUT = 120000", "var_name": "TIMEOUT"}, {"original_string": "private static final String SEQUENCE_KEY = \"delta:sequence\";", "modifier": "private static final", "type": "String", "declarator": "SEQUENCE_KEY = \"delta:sequence\"", "var_name": "SEQUENCE_KEY"}, {"original_string": "private static final String RESOURCE_KEY_PREFIX = \"delta:resources\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_KEY_PREFIX = \"delta:resources\"", "var_name": "RESOURCE_KEY_PREFIX"}, {"original_string": "private static final String ETAG_KEY_PREFIX = \"delta:etags\";", "modifier": "private static final", "type": "String", "declarator": "ETAG_KEY_PREFIX = \"delta:etags\"", "var_name": "ETAG_KEY_PREFIX"}, {"original_string": "private HttpClient httpClient;", "modifier": "private", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private RedisClient redisClient;", "modifier": "private", "type": "RedisClient", "declarator": "redisClient", "var_name": "redisClient"}], "methods": [{"identifier": "DeltaHandler", "parameters": "(RedisClient redisClient, HttpClient httpClient)", "modifiers": "public", "return": "", "signature": " DeltaHandler(RedisClient redisClient, HttpClient httpClient)", "full_signature": "public  DeltaHandler(RedisClient redisClient, HttpClient httpClient)", "class_method_signature": "DeltaHandler.DeltaHandler(RedisClient redisClient, HttpClient httpClient)", "testcase": false, "constructor": true}, {"identifier": "isDeltaRequest", "parameters": "(HttpServerRequest request)", "modifiers": "public", "return": "boolean", "signature": "boolean isDeltaRequest(HttpServerRequest request)", "full_signature": "public boolean isDeltaRequest(HttpServerRequest request)", "class_method_signature": "DeltaHandler.isDeltaRequest(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "isDeltaPUTRequest", "parameters": "(HttpServerRequest request)", "modifiers": "private", "return": "boolean", "signature": "boolean isDeltaPUTRequest(HttpServerRequest request)", "full_signature": "private boolean isDeltaPUTRequest(HttpServerRequest request)", "class_method_signature": "DeltaHandler.isDeltaPUTRequest(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "isDeltaGETRequest", "parameters": "(HttpServerRequest request)", "modifiers": "private", "return": "boolean", "signature": "boolean isDeltaGETRequest(HttpServerRequest request)", "full_signature": "private boolean isDeltaGETRequest(HttpServerRequest request)", "class_method_signature": "DeltaHandler.isDeltaGETRequest(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(final HttpServerRequest request, Router router)", "modifiers": "public", "return": "void", "signature": "void handle(final HttpServerRequest request, Router router)", "full_signature": "public void handle(final HttpServerRequest request, Router router)", "class_method_signature": "DeltaHandler.handle(final HttpServerRequest request, Router router)", "testcase": false, "constructor": false}, {"identifier": "handleResourcePUT", "parameters": "(final HttpServerRequest request, final Router router, final Logger log)", "modifiers": "private", "return": "void", "signature": "void handleResourcePUT(final HttpServerRequest request, final Router router, final Logger log)", "full_signature": "private void handleResourcePUT(final HttpServerRequest request, final Router router, final Logger log)", "class_method_signature": "DeltaHandler.handleResourcePUT(final HttpServerRequest request, final Router router, final Logger log)", "testcase": false, "constructor": false}, {"identifier": "handleDeltaEtag", "parameters": "(final HttpServerRequest request, final Logger log, final Handler<Boolean> callback)", "modifiers": "private", "return": "void", "signature": "void handleDeltaEtag(final HttpServerRequest request, final Logger log, final Handler<Boolean> callback)", "full_signature": "private void handleDeltaEtag(final HttpServerRequest request, final Logger log, final Handler<Boolean> callback)", "class_method_signature": "DeltaHandler.handleDeltaEtag(final HttpServerRequest request, final Logger log, final Handler<Boolean> callback)", "testcase": false, "constructor": false}, {"identifier": "saveOrUpdateDeltaEtag", "parameters": "(final String etagResourceKey, final HttpServerRequest request, final Logger log, final Handler<Boolean> updateCallback)", "modifiers": "private", "return": "void", "signature": "void saveOrUpdateDeltaEtag(final String etagResourceKey, final HttpServerRequest request, final Logger log, final Handler<Boolean> updateCallback)", "full_signature": "private void saveOrUpdateDeltaEtag(final String etagResourceKey, final HttpServerRequest request, final Logger log, final Handler<Boolean> updateCallback)", "class_method_signature": "DeltaHandler.saveOrUpdateDeltaEtag(final String etagResourceKey, final HttpServerRequest request, final Logger log, final Handler<Boolean> updateCallback)", "testcase": false, "constructor": false}, {"identifier": "saveDelta", "parameters": "(String deltaKey, String deltaValue, Long expireAfter, Handler<AsyncResult<Object>> handler)", "modifiers": "private", "return": "void", "signature": "void saveDelta(String deltaKey, String deltaValue, Long expireAfter, Handler<AsyncResult<Object>> handler)", "full_signature": "private void saveDelta(String deltaKey, String deltaValue, Long expireAfter, Handler<AsyncResult<Object>> handler)", "class_method_signature": "DeltaHandler.saveDelta(String deltaKey, String deltaValue, Long expireAfter, Handler<AsyncResult<Object>> handler)", "testcase": false, "constructor": false}, {"identifier": "extractStringDeltaParameter", "parameters": "(HttpServerRequest request, Logger log)", "modifiers": "private", "return": "String", "signature": "String extractStringDeltaParameter(HttpServerRequest request, Logger log)", "full_signature": "private String extractStringDeltaParameter(HttpServerRequest request, Logger log)", "class_method_signature": "DeltaHandler.extractStringDeltaParameter(HttpServerRequest request, Logger log)", "testcase": false, "constructor": false}, {"identifier": "extractNumberDeltaParameter", "parameters": "(String deltaStringId, HttpServerRequest request, Logger log)", "modifiers": "private", "return": "Long", "signature": "Long extractNumberDeltaParameter(String deltaStringId, HttpServerRequest request, Logger log)", "full_signature": "private Long extractNumberDeltaParameter(String deltaStringId, HttpServerRequest request, Logger log)", "class_method_signature": "DeltaHandler.extractNumberDeltaParameter(String deltaStringId, HttpServerRequest request, Logger log)", "testcase": false, "constructor": false}, {"identifier": "respondInvalidDeltaParameter", "parameters": "(String deltaStringId, HttpServerRequest request, Logger log)", "modifiers": "private", "return": "void", "signature": "void respondInvalidDeltaParameter(String deltaStringId, HttpServerRequest request, Logger log)", "full_signature": "private void respondInvalidDeltaParameter(String deltaStringId, HttpServerRequest request, Logger log)", "class_method_signature": "DeltaHandler.respondInvalidDeltaParameter(String deltaStringId, HttpServerRequest request, Logger log)", "testcase": false, "constructor": false}, {"identifier": "getDeltaResourceNames", "parameters": "(List<String> subResourceNames, JsonArray storageUpdateIds, long updateId)", "modifiers": "private", "return": "DeltaResourcesContainer", "signature": "DeltaResourcesContainer getDeltaResourceNames(List<String> subResourceNames, JsonArray storageUpdateIds, long updateId)", "full_signature": "private DeltaResourcesContainer getDeltaResourceNames(List<String> subResourceNames, JsonArray storageUpdateIds, long updateId)", "class_method_signature": "DeltaHandler.getDeltaResourceNames(List<String> subResourceNames, JsonArray storageUpdateIds, long updateId)", "testcase": false, "constructor": false}, {"identifier": "handleCollectionGET", "parameters": "(final HttpServerRequest request, final String updateId, final Logger log)", "modifiers": "private", "return": "void", "signature": "void handleCollectionGET(final HttpServerRequest request, final String updateId, final Logger log)", "full_signature": "private void handleCollectionGET(final HttpServerRequest request, final String updateId, final Logger log)", "class_method_signature": "DeltaHandler.handleCollectionGET(final HttpServerRequest request, final String updateId, final Logger log)", "testcase": false, "constructor": false}, {"identifier": "buildDeltaResourceKeys", "parameters": "(String requestPath, List<String> subResourceNames)", "modifiers": "private", "return": "List<String>", "signature": "List<String> buildDeltaResourceKeys(String requestPath, List<String> subResourceNames)", "full_signature": "private List<String> buildDeltaResourceKeys(String requestPath, List<String> subResourceNames)", "class_method_signature": "DeltaHandler.buildDeltaResourceKeys(String requestPath, List<String> subResourceNames)", "testcase": false, "constructor": false}, {"identifier": "buildResultJsonObject", "parameters": "(List<String> subResourceNames, String collectionName)", "modifiers": "private", "return": "JsonObject", "signature": "JsonObject buildResultJsonObject(List<String> subResourceNames, String collectionName)", "full_signature": "private JsonObject buildResultJsonObject(List<String> subResourceNames, String collectionName)", "class_method_signature": "DeltaHandler.buildResultJsonObject(List<String> subResourceNames, String collectionName)", "testcase": false, "constructor": false}, {"identifier": "handleError", "parameters": "(HttpServerRequest request, String errorMessage)", "modifiers": "private", "return": "void", "signature": "void handleError(HttpServerRequest request, String errorMessage)", "full_signature": "private void handleError(HttpServerRequest request, String errorMessage)", "class_method_signature": "DeltaHandler.handleError(HttpServerRequest request, String errorMessage)", "testcase": false, "constructor": false}, {"identifier": "getResourceKey", "parameters": "(String path, boolean useEtagPrefix)", "modifiers": "private", "return": "String", "signature": "String getResourceKey(String path, boolean useEtagPrefix)", "full_signature": "private String getResourceKey(String path, boolean useEtagPrefix)", "class_method_signature": "DeltaHandler.getResourceKey(String path, boolean useEtagPrefix)", "testcase": false, "constructor": false}, {"identifier": "getExpireAfterValue", "parameters": "(HttpServerRequest request, Logger log)", "modifiers": "private", "return": "Long", "signature": "Long getExpireAfterValue(HttpServerRequest request, Logger log)", "full_signature": "private Long getExpireAfterValue(HttpServerRequest request, Logger log)", "class_method_signature": "DeltaHandler.getExpireAfterValue(HttpServerRequest request, Logger log)", "testcase": false, "constructor": false}, {"identifier": "logCause", "parameters": "(AsyncResult result)", "modifiers": "private", "return": "String", "signature": "String logCause(AsyncResult result)", "full_signature": "private String logCause(AsyncResult result)", "class_method_signature": "DeltaHandler.logCause(AsyncResult result)", "testcase": false, "constructor": false}], "file": "gateleen-delta/src/main/java/org/swisspush/gateleen/delta/DeltaHandler.java"}, "focal_method": {"identifier": "handle", "parameters": "(final HttpServerRequest request, Router router)", "modifiers": "public", "return": "void", "body": "public void handle(final HttpServerRequest request, Router router) {\n        Logger log = RequestLoggerFactory.getLogger(DeltaHandler.class, request);\n        if (isDeltaPUTRequest(request)) {\n            handleResourcePUT(request, router, log);\n        }\n        if (isDeltaGETRequest(request)) {\n            String updateId = extractStringDeltaParameter(request, log);\n            if (updateId != null) {\n                handleCollectionGET(request, updateId, log);\n            }\n        }\n    }", "signature": "void handle(final HttpServerRequest request, Router router)", "full_signature": "public void handle(final HttpServerRequest request, Router router)", "class_method_signature": "DeltaHandler.handle(final HttpServerRequest request, Router router)", "testcase": false, "constructor": false, "invocations": ["getLogger", "isDeltaPUTRequest", "handleResourcePUT", "isDeltaGETRequest", "extractStringDeltaParameter", "handleCollectionGET"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}