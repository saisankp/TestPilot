{"test_class": {"identifier": "LideaLogDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private LideaLogDAO lideaLogDAO;", "modifier": "@Resource\n    private", "type": "LideaLogDAO", "declarator": "lideaLogDAO", "var_name": "lideaLogDAO"}], "file": "mmc-lidea-web/src/test/java/com/mmc/flink/lidea/dao/LideaLogDAOTest.java"}, "test_case": {"identifier": "testPut", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPut() {\n\n        // \u6d4b\u8bd5\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\n        LideaLogBO bo = new LideaLogBO();\n        bo.setTime(TimeUtil.dateToString(LocalDateTime.now()));\n        bo.setAppName(\"cabinet-base-server\");\n        bo.setServiceName(\"com.fcbox.edms.terminal.api.CabinetServiceFacade\");\n        bo.setMethodName(\"getCabinetInfo\");\n        bo.setCount(RandomUtil.getRandomNumberInRange(1, 100));\n        bo.setAvg(RandomUtil.getRandomNumberInRange(100, 999));\n        bo.setException(RandomUtil.getRandomNumberInRange(1, 100));\n        bo.setTraceIds(UUID.randomUUID().toString().replace(\"-\", \"\"));\n\n        lideaLogDAO.put(bo);\n\n        System.out.println(\"==========================================================================================\");\n        System.out.println(JSON.toJSONString(bo));\n    }", "signature": "void testPut()", "full_signature": "@Test public void testPut()", "class_method_signature": "LideaLogDAOTest.testPut()", "testcase": true, "constructor": false, "invocations": ["setTime", "dateToString", "now", "setAppName", "setServiceName", "setMethodName", "setCount", "getRandomNumberInRange", "setAvg", "getRandomNumberInRange", "setException", "getRandomNumberInRange", "setTraceIds", "replace", "toString", "randomUUID", "put", "println", "println", "toJSONString"]}, "focal_class": {"identifier": "LideaLogDAO", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private HbaseTemplate hbaseTemplate;", "modifier": "@Resource\n    private", "type": "HbaseTemplate", "declarator": "hbaseTemplate", "var_name": "hbaseTemplate"}], "methods": [{"identifier": "put", "parameters": "(LideaLogBO bo)", "modifiers": "public", "return": "void", "signature": "void put(LideaLogBO bo)", "full_signature": "public void put(LideaLogBO bo)", "class_method_signature": "LideaLogDAO.put(LideaLogBO bo)", "testcase": false, "constructor": false}, {"identifier": "scan", "parameters": "(LideaLogReq req)", "modifiers": "public", "return": "LideaLogResp", "signature": "LideaLogResp scan(LideaLogReq req)", "full_signature": "public LideaLogResp scan(LideaLogReq req)", "class_method_signature": "LideaLogDAO.scan(LideaLogReq req)", "testcase": false, "constructor": false}, {"identifier": "createScan", "parameters": "(LideaLogReq bo)", "modifiers": "private", "return": "Scan", "signature": "Scan createScan(LideaLogReq bo)", "full_signature": "private Scan createScan(LideaLogReq bo)", "class_method_signature": "LideaLogDAO.createScan(LideaLogReq bo)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(LideaLogReq req)", "modifiers": "public", "return": "LideaLogResp", "signature": "LideaLogResp get(LideaLogReq req)", "full_signature": "public LideaLogResp get(LideaLogReq req)", "class_method_signature": "LideaLogDAO.get(LideaLogReq req)", "testcase": false, "constructor": false}], "file": "mmc-lidea-web/src/main/java/com/mmc/flink/lidea/dao/LideaLogDAO.java"}, "focal_method": {"identifier": "put", "parameters": "(LideaLogBO bo)", "modifiers": "public", "return": "void", "body": "public void put(LideaLogBO bo) {\n\n        Put put = LideaLogEntry.of(bo);\n\n        hbaseTemplate.execute(Const.LIDEA_LOG_TABLE, (htable) -> {\n\n            htable.put(put);\n            return null;\n        });\n\n    }", "signature": "void put(LideaLogBO bo)", "full_signature": "public void put(LideaLogBO bo)", "class_method_signature": "LideaLogDAO.put(LideaLogBO bo)", "testcase": false, "constructor": false, "invocations": ["of", "execute", "put"]}, "repository": {"repo_id": 201420026, "url": "https://github.com/VIPJoey/Lidea", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 13, "size": 991, "license": "licensed"}}