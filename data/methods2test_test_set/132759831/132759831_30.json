{"test_class": {"identifier": "CinemaResponseToCinemaTest", "superclass": "extends UnitTest", "interfaces": "", "fields": [{"original_string": "@Mock private CinemaDetailResponse cinemaDetailResponseMock;", "modifier": "@Mock private", "type": "CinemaDetailResponse", "declarator": "cinemaDetailResponseMock", "var_name": "cinemaDetailResponseMock"}, {"original_string": "@Mock private CinemaResponse cinemaResponseMock;", "modifier": "@Mock private", "type": "CinemaResponse", "declarator": "cinemaResponseMock", "var_name": "cinemaResponseMock"}, {"original_string": "@Mock private List<CinemaNetwork> cinemaNetworkListMock;", "modifier": "@Mock private", "type": "List<CinemaNetwork>", "declarator": "cinemaNetworkListMock", "var_name": "cinemaNetworkListMock"}, {"original_string": "@Mock private Iterator<CinemaNetwork> cinemaNetworkIteratorMock;", "modifier": "@Mock private", "type": "Iterator<CinemaNetwork>", "declarator": "cinemaNetworkIteratorMock", "var_name": "cinemaNetworkIteratorMock"}, {"original_string": "private CinemaResponseToCinema mapper;", "modifier": "private", "type": "CinemaResponseToCinema", "declarator": "mapper", "var_name": "mapper"}], "file": "app/src/test/java/com/ru/devit/mediateka/models/mapper/CinemaResponseToCinemaTest.java"}, "test_case": {"identifier": "shouldMapId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldMapId(){\n        doReturn(77).when(cinemaDetailResponseMock).getId();\n\n        final Cinema cinema = mapper.map(cinemaDetailResponseMock);\n        assertThat(cinema.getId() , is(cinemaDetailResponseMock.getId()));\n    }", "signature": "void shouldMapId()", "full_signature": "@Test public void shouldMapId()", "class_method_signature": "CinemaResponseToCinemaTest.shouldMapId()", "testcase": true, "constructor": false, "invocations": ["getId", "when", "doReturn", "map", "assertThat", "getId", "is", "getId"]}, "focal_class": {"identifier": "CinemaResponseToCinema", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "map", "parameters": "(CinemaResponse cinemaResponse)", "modifiers": "public", "return": "List<Cinema>", "signature": "List<Cinema> map(CinemaResponse cinemaResponse)", "full_signature": "public List<Cinema> map(CinemaResponse cinemaResponse)", "class_method_signature": "CinemaResponseToCinema.map(CinemaResponse cinemaResponse)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(CinemaDetailResponse response)", "modifiers": "public", "return": "Cinema", "signature": "Cinema map(CinemaDetailResponse response)", "full_signature": "public Cinema map(CinemaDetailResponse response)", "class_method_signature": "CinemaResponseToCinema.map(CinemaDetailResponse response)", "testcase": false, "constructor": false}, {"identifier": "setGenres", "parameters": "(CinemaDetailResponse response , Cinema cinema)", "modifiers": "private", "return": "void", "signature": "void setGenres(CinemaDetailResponse response , Cinema cinema)", "full_signature": "private void setGenres(CinemaDetailResponse response , Cinema cinema)", "class_method_signature": "CinemaResponseToCinema.setGenres(CinemaDetailResponse response , Cinema cinema)", "testcase": false, "constructor": false}, {"identifier": "setActors", "parameters": "(CinemaDetailResponse response , Cinema cinema)", "modifiers": "private", "return": "void", "signature": "void setActors(CinemaDetailResponse response , Cinema cinema)", "full_signature": "private void setActors(CinemaDetailResponse response , Cinema cinema)", "class_method_signature": "CinemaResponseToCinema.setActors(CinemaDetailResponse response , Cinema cinema)", "testcase": false, "constructor": false}, {"identifier": "setDirectorName", "parameters": "(CinemaDetailResponse response , Cinema cinema)", "modifiers": "private", "return": "void", "signature": "void setDirectorName(CinemaDetailResponse response , Cinema cinema)", "full_signature": "private void setDirectorName(CinemaDetailResponse response , Cinema cinema)", "class_method_signature": "CinemaResponseToCinema.setDirectorName(CinemaDetailResponse response , Cinema cinema)", "testcase": false, "constructor": false}, {"identifier": "setPosters", "parameters": "(CinemaDetailResponse response , Cinema cinema)", "modifiers": "private", "return": "void", "signature": "void setPosters(CinemaDetailResponse response , Cinema cinema)", "full_signature": "private void setPosters(CinemaDetailResponse response , Cinema cinema)", "class_method_signature": "CinemaResponseToCinema.setPosters(CinemaDetailResponse response , Cinema cinema)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/ru/devit/mediateka/models/mapper/CinemaResponseToCinema.java"}, "focal_method": {"identifier": "map", "parameters": "(CinemaResponse cinemaResponse)", "modifiers": "public", "return": "List<Cinema>", "body": "public List<Cinema> map(CinemaResponse cinemaResponse) {\n        List<Cinema> cinemas = new ArrayList<>();\n        if (cinemaResponse.getCinemas() != null){\n            for (int i = 0; i < cinemaResponse.getCinemas().size(); i++){\n                final Cinema cinema = new Cinema();\n                final CinemaNetwork response = cinemaResponse.getCinemas().get(i);\n                cinema.setPage(cinemaResponse.getPage());\n                cinema.setTotalPages(cinemaResponse.getTotalPages());\n                cinema.setTotalResults(cinemaResponse.getTotalResults());\n                cinema.setId(response.getId());\n                cinema.setVoteAverage(response.getVoteAverage());\n                cinema.setTitle(response.getTitle());\n                cinema.setAdult(response.isAdult());\n                cinema.setDescription(response.getDescription());\n                cinema.setPosterUrl(response.getPosterUrl());\n                cinema.setReleaseDate(response.getReleaseDate());\n                cinema.setPopularity(response.getPopularity());\n                cinema.setGenres(response.getGenreIds());\n                cinemas.add(cinema);\n            }\n        }\n        return cinemas;\n    }", "signature": "List<Cinema> map(CinemaResponse cinemaResponse)", "full_signature": "public List<Cinema> map(CinemaResponse cinemaResponse)", "class_method_signature": "CinemaResponseToCinema.map(CinemaResponse cinemaResponse)", "testcase": false, "constructor": false, "invocations": ["getCinemas", "size", "getCinemas", "get", "getCinemas", "setPage", "getPage", "setTotalPages", "getTotalPages", "setTotalResults", "getTotalResults", "setId", "getId", "setVoteAverage", "getVoteAverage", "setTitle", "getTitle", "setAdult", "isAdult", "setDescription", "getDescription", "setPosterUrl", "getPosterUrl", "setReleaseDate", "getReleaseDate", "setPopularity", "getPopularity", "setGenres", "getGenreIds", "add"]}, "repository": {"repo_id": 132759831, "url": "https://github.com/Devit951/Mediateka", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 33, "size": 679, "license": "licensed"}}