{"test_class": {"identifier": "HudsonConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Hudson hudson;", "modifier": "@Mock", "type": "Hudson", "declarator": "hudson", "var_name": "hudson"}, {"original_string": "HudsonConnection hudsonConnection;", "modifier": "", "type": "HudsonConnection", "declarator": "hudsonConnection", "var_name": "hudsonConnection"}], "file": "component/core/src/test/java/fr/norad/visuwall/plugin/hudson/HudsonConnectionTest.java"}, "test_case": {"identifier": "should_remove_default_view", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_remove_default_view() {\n        List<String> viewNames = asList(\"Alle\", \"Todo\", \"Tous\", \"\\u3059\\u3079\\u3066\", \"Tudo\", \"\\u0412\\u0441\\u0435\",\n                \"Hepsi\", \"All\");\n        List<String> defaultViews = new ArrayList<String>(viewNames);\n        when(hudson.findViews()).thenReturn(defaultViews);\n        List<String> views = hudsonConnection.findViews();\n        assertTrue(views.isEmpty());\n    }", "signature": "void should_remove_default_view()", "full_signature": "@Test public void should_remove_default_view()", "class_method_signature": "HudsonConnectionTest.should_remove_default_view()", "testcase": true, "constructor": false, "invocations": ["asList", "thenReturn", "when", "findViews", "findViews", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "HudsonConnection", "superclass": "", "interfaces": "implements BuildCapability, ViewCapability, TestCapability", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(HudsonConnection.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(HudsonConnection.class)", "var_name": "LOG"}, {"original_string": "private static final Collection<String> DEFAULT_VIEWS = asList(\"Alle\", \"Todo\", \"Tous\", \"\\u3059\\u3079\\u3066\",\n            \"Tudo\", \"\\u0412\\u0441\\u0435\", \"Hepsi\", \"All\");", "modifier": "private static final", "type": "Collection<String>", "declarator": "DEFAULT_VIEWS = asList(\"Alle\", \"Todo\", \"Tous\", \"\\u3059\\u3079\\u3066\",\n            \"Tudo\", \"\\u0412\\u0441\\u0435\", \"Hepsi\", \"All\")", "var_name": "DEFAULT_VIEWS"}, {"original_string": "@VisibleForTesting\n    Hudson hudson;", "modifier": "@VisibleForTesting", "type": "Hudson", "declarator": "hudson", "var_name": "hudson"}, {"original_string": "private boolean connected;", "modifier": "private", "type": "boolean", "declarator": "connected", "var_name": "connected"}], "methods": [{"identifier": "connect", "parameters": "(String url, String login, String password)", "modifiers": "@Override public", "return": "void", "signature": "void connect(String url, String login, String password)", "full_signature": "@Override public void connect(String url, String login, String password)", "class_method_signature": "HudsonConnection.connect(String url, String login, String password)", "testcase": false, "constructor": false}, {"identifier": "listSoftwareProjectIds", "parameters": "()", "modifiers": "@Override public", "return": "Map<SoftwareProjectId, String>", "signature": "Map<SoftwareProjectId, String> listSoftwareProjectIds()", "full_signature": "@Override public Map<SoftwareProjectId, String> listSoftwareProjectIds()", "class_method_signature": "HudsonConnection.listSoftwareProjectIds()", "testcase": false, "constructor": false}, {"identifier": "getEstimatedFinishTime", "parameters": "(SoftwareProjectId projectId, String buildId)", "modifiers": "@Override public", "return": "Date", "signature": "Date getEstimatedFinishTime(SoftwareProjectId projectId, String buildId)", "full_signature": "@Override public Date getEstimatedFinishTime(SoftwareProjectId projectId, String buildId)", "class_method_signature": "HudsonConnection.getEstimatedFinishTime(SoftwareProjectId projectId, String buildId)", "testcase": false, "constructor": false}, {"identifier": "isBuilding", "parameters": "(SoftwareProjectId projectId, String buildId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isBuilding(SoftwareProjectId projectId, String buildId)", "full_signature": "@Override public boolean isBuilding(SoftwareProjectId projectId, String buildId)", "class_method_signature": "HudsonConnection.isBuilding(SoftwareProjectId projectId, String buildId)", "testcase": false, "constructor": false}, {"identifier": "getBuildState", "parameters": "(SoftwareProjectId projectId, String buildId)", "modifiers": "@Override public", "return": "BuildState", "signature": "BuildState getBuildState(SoftwareProjectId projectId, String buildId)", "full_signature": "@Override public BuildState getBuildState(SoftwareProjectId projectId, String buildId)", "class_method_signature": "HudsonConnection.getBuildState(SoftwareProjectId projectId, String buildId)", "testcase": false, "constructor": false}, {"identifier": "getLastBuildId", "parameters": "(SoftwareProjectId projectId)", "modifiers": "@Override public", "return": "String", "signature": "String getLastBuildId(SoftwareProjectId projectId)", "full_signature": "@Override public String getLastBuildId(SoftwareProjectId projectId)", "class_method_signature": "HudsonConnection.getLastBuildId(SoftwareProjectId projectId)", "testcase": false, "constructor": false}, {"identifier": "findViews", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> findViews()", "full_signature": "@Override public List<String> findViews()", "class_method_signature": "HudsonConnection.findViews()", "testcase": false, "constructor": false}, {"identifier": "findProjectNamesByView", "parameters": "(String viewName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> findProjectNamesByView(String viewName)", "full_signature": "@Override public List<String> findProjectNamesByView(String viewName)", "class_method_signature": "HudsonConnection.findProjectNamesByView(String viewName)", "testcase": false, "constructor": false}, {"identifier": "findSoftwareProjectIdsByViews", "parameters": "(List<String> views)", "modifiers": "@Override public", "return": "List<SoftwareProjectId>", "signature": "List<SoftwareProjectId> findSoftwareProjectIdsByViews(List<String> views)", "full_signature": "@Override public List<SoftwareProjectId> findSoftwareProjectIdsByViews(List<String> views)", "class_method_signature": "HudsonConnection.findSoftwareProjectIdsByViews(List<String> views)", "testcase": false, "constructor": false}, {"identifier": "findSoftwareProjectIdsByNames", "parameters": "(List<String> names)", "modifiers": "private", "return": "List<SoftwareProjectId>", "signature": "List<SoftwareProjectId> findSoftwareProjectIdsByNames(List<String> names)", "full_signature": "private List<SoftwareProjectId> findSoftwareProjectIdsByNames(List<String> names)", "class_method_signature": "HudsonConnection.findSoftwareProjectIdsByNames(List<String> names)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "HudsonConnection.close()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(SoftwareProjectId projectId)", "modifiers": "@Override public", "return": "String", "signature": "String getDescription(SoftwareProjectId projectId)", "full_signature": "@Override public String getDescription(SoftwareProjectId projectId)", "class_method_signature": "HudsonConnection.getDescription(SoftwareProjectId projectId)", "testcase": false, "constructor": false}, {"identifier": "identify", "parameters": "(ProjectKey projectKey)", "modifiers": "@Override public", "return": "SoftwareProjectId", "signature": "SoftwareProjectId identify(ProjectKey projectKey)", "full_signature": "@Override public SoftwareProjectId identify(ProjectKey projectKey)", "class_method_signature": "HudsonConnection.identify(ProjectKey projectKey)", "testcase": false, "constructor": false}, {"identifier": "getBuildIds", "parameters": "(SoftwareProjectId softwareProjectId)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getBuildIds(SoftwareProjectId softwareProjectId)", "full_signature": "@Override public List<String> getBuildIds(SoftwareProjectId softwareProjectId)", "class_method_signature": "HudsonConnection.getBuildIds(SoftwareProjectId softwareProjectId)", "testcase": false, "constructor": false}, {"identifier": "getMavenId", "parameters": "(SoftwareProjectId softwareProjectId)", "modifiers": "@Override public", "return": "String", "signature": "String getMavenId(SoftwareProjectId softwareProjectId)", "full_signature": "@Override public String getMavenId(SoftwareProjectId softwareProjectId)", "class_method_signature": "HudsonConnection.getMavenId(SoftwareProjectId softwareProjectId)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "(SoftwareProjectId softwareProjectId)", "modifiers": "@Override public", "return": "String", "signature": "String getName(SoftwareProjectId softwareProjectId)", "full_signature": "@Override public String getName(SoftwareProjectId softwareProjectId)", "class_method_signature": "HudsonConnection.getName(SoftwareProjectId softwareProjectId)", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "@Override public boolean isClosed()", "class_method_signature": "HudsonConnection.isClosed()", "testcase": false, "constructor": false}, {"identifier": "getBuildTime", "parameters": "(SoftwareProjectId softwareProjectId, String buildId)", "modifiers": "@Override public", "return": "BuildTime", "signature": "BuildTime getBuildTime(SoftwareProjectId softwareProjectId, String buildId)", "full_signature": "@Override public BuildTime getBuildTime(SoftwareProjectId softwareProjectId, String buildId)", "class_method_signature": "HudsonConnection.getBuildTime(SoftwareProjectId softwareProjectId, String buildId)", "testcase": false, "constructor": false}, {"identifier": "isProjectDisabled", "parameters": "(SoftwareProjectId softwareProjectId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isProjectDisabled(SoftwareProjectId softwareProjectId)", "full_signature": "@Override public boolean isProjectDisabled(SoftwareProjectId softwareProjectId)", "class_method_signature": "HudsonConnection.isProjectDisabled(SoftwareProjectId softwareProjectId)", "testcase": false, "constructor": false}, {"identifier": "getBuildCommiters", "parameters": "(SoftwareProjectId softwareProjectId, String buildId)", "modifiers": "@Override public", "return": "List<Commiter>", "signature": "List<Commiter> getBuildCommiters(SoftwareProjectId softwareProjectId, String buildId)", "full_signature": "@Override public List<Commiter> getBuildCommiters(SoftwareProjectId softwareProjectId, String buildId)", "class_method_signature": "HudsonConnection.getBuildCommiters(SoftwareProjectId softwareProjectId, String buildId)", "testcase": false, "constructor": false}, {"identifier": "analyzeUnitTests", "parameters": "(SoftwareProjectId softwareProjectId)", "modifiers": "@Override public", "return": "TestResult", "signature": "TestResult analyzeUnitTests(SoftwareProjectId softwareProjectId)", "full_signature": "@Override public TestResult analyzeUnitTests(SoftwareProjectId softwareProjectId)", "class_method_signature": "HudsonConnection.analyzeUnitTests(SoftwareProjectId softwareProjectId)", "testcase": false, "constructor": false}, {"identifier": "analyzeIntegrationTests", "parameters": "(SoftwareProjectId softwareProjectId)", "modifiers": "@Override public", "return": "TestResult", "signature": "TestResult analyzeIntegrationTests(SoftwareProjectId softwareProjectId)", "full_signature": "@Override public TestResult analyzeIntegrationTests(SoftwareProjectId softwareProjectId)", "class_method_signature": "HudsonConnection.analyzeIntegrationTests(SoftwareProjectId softwareProjectId)", "testcase": false, "constructor": false}, {"identifier": "jobName", "parameters": "(SoftwareProjectId softwareProjectId)", "modifiers": "private", "return": "String", "signature": "String jobName(SoftwareProjectId softwareProjectId)", "full_signature": "private String jobName(SoftwareProjectId softwareProjectId)", "class_method_signature": "HudsonConnection.jobName(SoftwareProjectId softwareProjectId)", "testcase": false, "constructor": false}, {"identifier": "checkBuildId", "parameters": "(String buildId)", "modifiers": "private", "return": "void", "signature": "void checkBuildId(String buildId)", "full_signature": "private void checkBuildId(String buildId)", "class_method_signature": "HudsonConnection.checkBuildId(String buildId)", "testcase": false, "constructor": false}, {"identifier": "checkSoftwareProjectId", "parameters": "(SoftwareProjectId softwareProjectId)", "modifiers": "private", "return": "void", "signature": "void checkSoftwareProjectId(SoftwareProjectId softwareProjectId)", "full_signature": "private void checkSoftwareProjectId(SoftwareProjectId softwareProjectId)", "class_method_signature": "HudsonConnection.checkSoftwareProjectId(SoftwareProjectId softwareProjectId)", "testcase": false, "constructor": false}, {"identifier": "checkConnected", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkConnected()", "full_signature": "private void checkConnected()", "class_method_signature": "HudsonConnection.checkConnected()", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/plugin/hudson/HudsonConnection.java"}, "focal_method": {"identifier": "findViews", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "body": "@Override\n    public List<String> findViews() {\n        checkConnected();\n        List<String> views = hudson.findViews();\n        views.removeAll(DEFAULT_VIEWS);\n        return views;\n    }", "signature": "List<String> findViews()", "full_signature": "@Override public List<String> findViews()", "class_method_signature": "HudsonConnection.findViews()", "testcase": false, "constructor": false, "invocations": ["checkConnected", "findViews", "removeAll"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}