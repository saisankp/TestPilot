{"test_class": {"identifier": "AbstractSessionHolderProviderManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AbstractSessionHolderProviderManager providerManager;", "modifier": "private", "type": "AbstractSessionHolderProviderManager", "declarator": "providerManager", "var_name": "providerManager"}, {"original_string": "private List<SessionHolderProvider> providers;", "modifier": "private", "type": "List<SessionHolderProvider>", "declarator": "providers", "var_name": "providers"}, {"original_string": "private String repositoryName;", "modifier": "private", "type": "String", "declarator": "repositoryName", "var_name": "repositoryName"}, {"original_string": "private Session session;", "modifier": "private", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "private Repository repository;", "modifier": "private", "type": "Repository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private SessionFactory sessionfactory;", "modifier": "private", "type": "SessionFactory", "declarator": "sessionfactory", "var_name": "sessionfactory"}, {"original_string": "private SessionHolderProvider customProvider;", "modifier": "private", "type": "SessionHolderProvider", "declarator": "customProvider", "var_name": "customProvider"}], "file": "se-jcr-commons/src/test/java/org/springframework/extensions/jcr/support/AbstractSessionHolderProviderManagerTest.java"}, "test_case": {"identifier": "testCustomSessionProvider", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCustomSessionProvider() {\n        // sanity check\n        providers = new ArrayList<SessionHolderProvider>();\n        providers.add(customProvider);\n\n        replay(sessionfactory, session, repository);\n\n        assertSame(customProvider, providerManager.getSessionProvider(repository));\n    }", "signature": "void testCustomSessionProvider()", "full_signature": "@Test public void testCustomSessionProvider()", "class_method_signature": "AbstractSessionHolderProviderManagerTest.testCustomSessionProvider()", "testcase": true, "constructor": false, "invocations": ["add", "replay", "assertSame", "getSessionProvider"]}, "focal_class": {"identifier": "AbstractSessionHolderProviderManager", "superclass": "", "interfaces": "implements SessionHolderProviderManager", "fields": [{"original_string": "protected static final Logger LOG = LoggerFactory.getLogger(AbstractSessionHolderProviderManager.class);", "modifier": "protected static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(AbstractSessionHolderProviderManager.class)", "var_name": "LOG"}, {"original_string": "protected SessionHolderProvider defaultProvider = new GenericSessionHolderProvider();", "modifier": "protected", "type": "SessionHolderProvider", "declarator": "defaultProvider = new GenericSessionHolderProvider()", "var_name": "defaultProvider"}], "methods": [{"identifier": "getProviders", "parameters": "()", "modifiers": "public abstract", "return": "List<SessionHolderProvider>", "signature": "List<SessionHolderProvider> getProviders()", "full_signature": "public abstract List<SessionHolderProvider> getProviders()", "class_method_signature": "AbstractSessionHolderProviderManager.getProviders()", "testcase": false, "constructor": false}, {"identifier": "getSessionProvider", "parameters": "(Repository repository)", "modifiers": "public", "return": "SessionHolderProvider", "signature": "SessionHolderProvider getSessionProvider(Repository repository)", "full_signature": "public SessionHolderProvider getSessionProvider(Repository repository)", "class_method_signature": "AbstractSessionHolderProviderManager.getSessionProvider(Repository repository)", "testcase": false, "constructor": false}], "file": "se-jcr-commons/src/main/java/org/springframework/extensions/jcr/support/AbstractSessionHolderProviderManager.java"}, "focal_method": {"identifier": "getSessionProvider", "parameters": "(Repository repository)", "modifiers": "public", "return": "SessionHolderProvider", "body": "public SessionHolderProvider getSessionProvider(Repository repository) {\n        // graceful fallback\n        if (repository == null)\n            return defaultProvider;\n\n        String key = repository.getDescriptor(Repository.REP_NAME_DESC);\n        List<SessionHolderProvider> providers = getProviders();\n\n        // search the provider\n        for (int i = 0; i < providers.size(); i++) {\n            SessionHolderProvider provider = providers.get(i);\n            if (provider.acceptsRepository(key)) {\n                if (LOG.isDebugEnabled())\n                    LOG.debug(\"specific SessionHolderProvider found for repository \" + key);\n                return provider;\n            }\n        }\n\n        // no provider found - return the default one\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"no specific SessionHolderProvider found for repository \" + key + \"; using the default one\");\n        return defaultProvider;\n    }", "signature": "SessionHolderProvider getSessionProvider(Repository repository)", "full_signature": "public SessionHolderProvider getSessionProvider(Repository repository)", "class_method_signature": "AbstractSessionHolderProviderManager.getSessionProvider(Repository repository)", "testcase": false, "constructor": false, "invocations": ["getDescriptor", "getProviders", "size", "get", "acceptsRepository", "isDebugEnabled", "debug", "isDebugEnabled", "debug"]}, "repository": {"repo_id": 3415463, "url": "https://github.com/jbellmann/jcr-springextension", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 14, "size": 634, "license": "licensed"}}