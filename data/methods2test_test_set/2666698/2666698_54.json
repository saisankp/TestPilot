{"test_class": {"identifier": "DefaultTargetPlatformConfigurationReaderTest", "superclass": "extends AbstractTychoMojoTestCase", "interfaces": "", "fields": [{"original_string": "private DefaultTargetPlatformConfigurationReader configurationReader;", "modifier": "private", "type": "DefaultTargetPlatformConfigurationReader", "declarator": "configurationReader", "var_name": "configurationReader"}], "file": "tycho-core/src/test/java/org/eclipse/tycho/core/resolver/DefaultTargetPlatformConfigurationReaderTest.java"}, "test_case": {"identifier": "testExtraRequirementId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExtraRequirementId() throws Exception {\n        Xpp3Dom dom = createConfigurationDom(\"type\", \"versionRange\");\n        try {\n            configurationReader.readExtraRequirements(new TargetPlatformConfiguration(), dom);\n            fail();\n        } catch (BuildFailureException e) {\n            assertTrue(e.getMessage().contains(\"Element <id> is missing in <extraRequirements><requirement> section.\"));\n        }\n    }", "signature": "void testExtraRequirementId()", "full_signature": "@Test public void testExtraRequirementId()", "class_method_signature": "DefaultTargetPlatformConfigurationReaderTest.testExtraRequirementId()", "testcase": true, "constructor": false, "invocations": ["createConfigurationDom", "readExtraRequirements", "fail", "assertTrue", "contains", "getMessage"]}, "focal_class": {"identifier": "DefaultTargetPlatformConfigurationReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String TARGET_DEFINITION_INCLUDE_SOURCE = \"targetDefinitionIncludeSource\";", "modifier": "public static final", "type": "String", "declarator": "TARGET_DEFINITION_INCLUDE_SOURCE = \"targetDefinitionIncludeSource\"", "var_name": "TARGET_DEFINITION_INCLUDE_SOURCE"}, {"original_string": "public static final String INCLUDE_PACKED_ARTIFACTS = \"includePackedArtifacts\";", "modifier": "public static final", "type": "String", "declarator": "INCLUDE_PACKED_ARTIFACTS = \"includePackedArtifacts\"", "var_name": "INCLUDE_PACKED_ARTIFACTS"}, {"original_string": "public static final String DEPENDENCY_RESOLUTION = \"dependency-resolution\";", "modifier": "public static final", "type": "String", "declarator": "DEPENDENCY_RESOLUTION = \"dependency-resolution\"", "var_name": "DEPENDENCY_RESOLUTION"}, {"original_string": "public static final String FILTERS = \"filters\";", "modifier": "public static final", "type": "String", "declarator": "FILTERS = \"filters\"", "var_name": "FILTERS"}, {"original_string": "public static final String RESOLVE_WITH_EXECUTION_ENVIRONMENT_CONSTRAINTS = \"resolveWithExecutionEnvironmentConstraints\";", "modifier": "public static final", "type": "String", "declarator": "RESOLVE_WITH_EXECUTION_ENVIRONMENT_CONSTRAINTS = \"resolveWithExecutionEnvironmentConstraints\"", "var_name": "RESOLVE_WITH_EXECUTION_ENVIRONMENT_CONSTRAINTS"}, {"original_string": "public static final String BREE_HEADER_SELECTION_POLICY = \"breeHeaderSelectionPolicy\";", "modifier": "public static final", "type": "String", "declarator": "BREE_HEADER_SELECTION_POLICY = \"breeHeaderSelectionPolicy\"", "var_name": "BREE_HEADER_SELECTION_POLICY"}, {"original_string": "public static final String EXECUTION_ENVIRONMENT_DEFAULT = \"executionEnvironmentDefault\";", "modifier": "public static final", "type": "String", "declarator": "EXECUTION_ENVIRONMENT_DEFAULT = \"executionEnvironmentDefault\"", "var_name": "EXECUTION_ENVIRONMENT_DEFAULT"}, {"original_string": "public static final String EXECUTION_ENVIRONMENT = \"executionEnvironment\";", "modifier": "public static final", "type": "String", "declarator": "EXECUTION_ENVIRONMENT = \"executionEnvironment\"", "var_name": "EXECUTION_ENVIRONMENT"}, {"original_string": "public static final String ALLOW_CONFLICTING_DEPENDENCIES = \"allowConflictingDependencies\";", "modifier": "public static final", "type": "String", "declarator": "ALLOW_CONFLICTING_DEPENDENCIES = \"allowConflictingDependencies\"", "var_name": "ALLOW_CONFLICTING_DEPENDENCIES"}, {"original_string": "public static final String POM_DEPENDENCIES = \"pomDependencies\";", "modifier": "public static final", "type": "String", "declarator": "POM_DEPENDENCIES = \"pomDependencies\"", "var_name": "POM_DEPENDENCIES"}, {"original_string": "public static final String TARGET = \"target\";", "modifier": "public static final", "type": "String", "declarator": "TARGET = \"target\"", "var_name": "TARGET"}, {"original_string": "public static final String RESOLVER = \"resolver\";", "modifier": "public static final", "type": "String", "declarator": "RESOLVER = \"resolver\"", "var_name": "RESOLVER"}, {"original_string": "public static final String ENVIRONMENTS = \"environments\";", "modifier": "public static final", "type": "String", "declarator": "ENVIRONMENTS = \"environments\"", "var_name": "ENVIRONMENTS"}, {"original_string": "private static final String OPTIONAL_RESOLUTION_REQUIRE = \"require\";", "modifier": "private static final", "type": "String", "declarator": "OPTIONAL_RESOLUTION_REQUIRE = \"require\"", "var_name": "OPTIONAL_RESOLUTION_REQUIRE"}, {"original_string": "private static final String OPTIONAL_RESOLUTION_IGNORE = \"ignore\";", "modifier": "private static final", "type": "String", "declarator": "OPTIONAL_RESOLUTION_IGNORE = \"ignore\"", "var_name": "OPTIONAL_RESOLUTION_IGNORE"}, {"original_string": "private static final String FILE_EXTENSION = \".target\";", "modifier": "private static final", "type": "String", "declarator": "FILE_EXTENSION = \".target\"", "var_name": "FILE_EXTENSION"}, {"original_string": "@Requirement\n    private Logger logger;", "modifier": "@Requirement\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Requirement\n    private RepositorySystem repositorySystem;", "modifier": "@Requirement\n    private", "type": "RepositorySystem", "declarator": "repositorySystem", "var_name": "repositorySystem"}, {"original_string": "@Requirement\n    private Map<String, TychoProject> projectTypes;", "modifier": "@Requirement\n    private", "type": "Map<String, TychoProject>", "declarator": "projectTypes", "var_name": "projectTypes"}, {"original_string": "@Requirement\n    private TargetPlatformFilterConfigurationReader filterReader;", "modifier": "@Requirement\n    private", "type": "TargetPlatformFilterConfigurationReader", "declarator": "filterReader", "var_name": "filterReader"}], "methods": [{"identifier": "getTargetPlatformConfiguration", "parameters": "(MavenSession session, MavenProject project)", "modifiers": "public", "return": "TargetPlatformConfiguration", "signature": "TargetPlatformConfiguration getTargetPlatformConfiguration(MavenSession session, MavenProject project)", "full_signature": "public TargetPlatformConfiguration getTargetPlatformConfiguration(MavenSession session, MavenProject project)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.getTargetPlatformConfiguration(MavenSession session, MavenProject project)", "testcase": false, "constructor": false}, {"identifier": "setIncludePackedArtifacts", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setIncludePackedArtifacts(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void setIncludePackedArtifacts(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setIncludePackedArtifacts(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "setTargetDefinitionIncludeSources", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setTargetDefinitionIncludeSources(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void setTargetDefinitionIncludeSources(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setTargetDefinitionIncludeSources(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "readDependencyResolutionConfiguration", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void readDependencyResolutionConfiguration(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void readDependencyResolutionConfiguration(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.readDependencyResolutionConfiguration(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "setOptionalDependencies", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "modifiers": "private", "return": "void", "signature": "void setOptionalDependencies(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "full_signature": "private void setOptionalDependencies(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setOptionalDependencies(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "testcase": false, "constructor": false}, {"identifier": "readExtraRequirements", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "modifiers": "protected", "return": "void", "signature": "void readExtraRequirements(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "full_signature": "protected void readExtraRequirements(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.readExtraRequirements(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "testcase": false, "constructor": false}, {"identifier": "readProfileProperties", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "modifiers": "private", "return": "void", "signature": "void readProfileProperties(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "full_signature": "private void readProfileProperties(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.readProfileProperties(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "testcase": false, "constructor": false}, {"identifier": "setExecutionEnvironment", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setExecutionEnvironment(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void setExecutionEnvironment(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setExecutionEnvironment(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "setExecutionEnvironmentDefault", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setExecutionEnvironmentDefault(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void setExecutionEnvironmentDefault(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setExecutionEnvironmentDefault(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "setBREEHeaderSelectionPolicy", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setBREEHeaderSelectionPolicy(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void setBREEHeaderSelectionPolicy(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setBREEHeaderSelectionPolicy(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "setResolveWithEEContraints", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "modifiers": "private", "return": "void", "signature": "void setResolveWithEEContraints(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "full_signature": "private void setResolveWithEEContraints(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setResolveWithEEContraints(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "testcase": false, "constructor": false}, {"identifier": "setDisableP2Mirrors", "parameters": "(Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setDisableP2Mirrors(Xpp3Dom configuration)", "full_signature": "private void setDisableP2Mirrors(Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setDisableP2Mirrors(Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "setAllowConflictingDependencies", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setAllowConflictingDependencies(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void setAllowConflictingDependencies(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setAllowConflictingDependencies(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "addTargetEnvironments", "parameters": "(TargetPlatformConfiguration result, MavenProject project,\n            Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void addTargetEnvironments(TargetPlatformConfiguration result, MavenProject project,\n            Xpp3Dom configuration)", "full_signature": "private void addTargetEnvironments(TargetPlatformConfiguration result, MavenProject project,\n            Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.addTargetEnvironments(TargetPlatformConfiguration result, MavenProject project,\n            Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "getDeprecatedTargetEnvironment", "parameters": "(Xpp3Dom configuration)", "modifiers": "protected", "return": "TargetEnvironment", "signature": "TargetEnvironment getDeprecatedTargetEnvironment(Xpp3Dom configuration)", "full_signature": "protected TargetEnvironment getDeprecatedTargetEnvironment(Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.getDeprecatedTargetEnvironment(Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "setPomDependencies", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setPomDependencies(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void setPomDependencies(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setPomDependencies(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "setTarget", "parameters": "(TargetPlatformConfiguration result, MavenSession session, MavenProject project,\n            Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setTarget(TargetPlatformConfiguration result, MavenSession session, MavenProject project,\n            Xpp3Dom configuration)", "full_signature": "private void setTarget(TargetPlatformConfiguration result, MavenSession session, MavenProject project,\n            Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setTarget(TargetPlatformConfiguration result, MavenSession session, MavenProject project,\n            Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "addTargetArtifact", "parameters": "(TargetPlatformConfiguration result, MavenSession session, MavenProject project,\n            Xpp3Dom artifactDom)", "modifiers": "protected", "return": "void", "signature": "void addTargetArtifact(TargetPlatformConfiguration result, MavenSession session, MavenProject project,\n            Xpp3Dom artifactDom)", "full_signature": "protected void addTargetArtifact(TargetPlatformConfiguration result, MavenSession session, MavenProject project,\n            Xpp3Dom artifactDom)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.addTargetArtifact(TargetPlatformConfiguration result, MavenSession session, MavenProject project,\n            Xpp3Dom artifactDom)", "testcase": false, "constructor": false}, {"identifier": "setTargetPlatformResolver", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void setTargetPlatformResolver(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void setTargetPlatformResolver(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.setTargetPlatformResolver(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "readFilters", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom configuration)", "modifiers": "private", "return": "void", "signature": "void readFilters(TargetPlatformConfiguration result, Xpp3Dom configuration)", "full_signature": "private void readFilters(TargetPlatformConfiguration result, Xpp3Dom configuration)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.readFilters(TargetPlatformConfiguration result, Xpp3Dom configuration)", "testcase": false, "constructor": false}, {"identifier": "newTargetEnvironment", "parameters": "(Xpp3Dom environmentDom)", "modifiers": "private static", "return": "TargetEnvironment", "signature": "TargetEnvironment newTargetEnvironment(Xpp3Dom environmentDom)", "full_signature": "private static TargetEnvironment newTargetEnvironment(Xpp3Dom environmentDom)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.newTargetEnvironment(Xpp3Dom environmentDom)", "testcase": false, "constructor": false}, {"identifier": "getStringValue", "parameters": "(Xpp3Dom element)", "modifiers": "private static", "return": "String", "signature": "String getStringValue(Xpp3Dom element)", "full_signature": "private static String getStringValue(Xpp3Dom element)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.getStringValue(Xpp3Dom element)", "testcase": false, "constructor": false}, {"identifier": "listTargetFiles", "parameters": "(File folder)", "modifiers": "public static", "return": "File[]", "signature": "File[] listTargetFiles(File folder)", "full_signature": "public static File[] listTargetFiles(File folder)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.listTargetFiles(File folder)", "testcase": false, "constructor": false}, {"identifier": "isTargetFile", "parameters": "(File file)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTargetFile(File file)", "full_signature": "public static boolean isTargetFile(File file)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.isTargetFile(File file)", "testcase": false, "constructor": false}, {"identifier": "isPrimaryTarget", "parameters": "(MavenProject project, File targetFile, File[] otherTargetFiles)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPrimaryTarget(MavenProject project, File targetFile, File[] otherTargetFiles)", "full_signature": "public static boolean isPrimaryTarget(MavenProject project, File targetFile, File[] otherTargetFiles)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.isPrimaryTarget(MavenProject project, File targetFile, File[] otherTargetFiles)", "testcase": false, "constructor": false}, {"identifier": "throwNoPrimaryTargetFound", "parameters": "(MavenProject project, File[] targetFiles)", "modifiers": "public static", "return": "void", "signature": "void throwNoPrimaryTargetFound(MavenProject project, File[] targetFiles)", "full_signature": "public static void throwNoPrimaryTargetFound(MavenProject project, File[] targetFiles)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.throwNoPrimaryTargetFound(MavenProject project, File[] targetFiles)", "testcase": false, "constructor": false}], "file": "tycho-core/src/main/java/org/eclipse/tycho/core/resolver/DefaultTargetPlatformConfigurationReader.java"}, "focal_method": {"identifier": "readExtraRequirements", "parameters": "(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "modifiers": "protected", "return": "void", "body": "protected void readExtraRequirements(TargetPlatformConfiguration result, Xpp3Dom resolverDom)\n            throws BuildFailureException {\n        Xpp3Dom requirementsDom = resolverDom.getChild(\"extraRequirements\");\n        if (requirementsDom == null) {\n            return;\n        }\n\n        for (Xpp3Dom requirementDom : requirementsDom.getChildren(\"requirement\")) {\n            Dependency d = new Dependency();\n            if (requirementDom.getChild(\"type\") == null) {\n                throw new BuildFailureException(\n                        \"Element <type> is missing in <extraRequirements><requirement> section.\");\n            }\n            if (requirementDom.getChild(\"id\") == null) {\n                throw new BuildFailureException(\"Element <id> is missing in <extraRequirements><requirement> section.\");\n            }\n            if (requirementDom.getChild(\"versionRange\") == null) {\n                throw new BuildFailureException(\n                        \"Element <versionRange> is missing in <extraRequirements><requirement> section.\");\n            }\n            d.setType(requirementDom.getChild(\"type\").getValue());\n            d.setArtifactId(requirementDom.getChild(\"id\").getValue());\n            d.setVersion(requirementDom.getChild(\"versionRange\").getValue());\n            result.addExtraRequirement(d);\n        }\n    }", "signature": "void readExtraRequirements(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "full_signature": "protected void readExtraRequirements(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "class_method_signature": "DefaultTargetPlatformConfigurationReader.readExtraRequirements(TargetPlatformConfiguration result, Xpp3Dom resolverDom)", "testcase": false, "constructor": false, "invocations": ["getChild", "getChildren", "getChild", "getChild", "getChild", "setType", "getValue", "getChild", "setArtifactId", "getValue", "getChild", "setVersion", "getValue", "getChild", "addExtraRequirement"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}