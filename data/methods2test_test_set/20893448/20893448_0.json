{"test_class": {"identifier": "MimicCreatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MimicCreator mimicCreator;", "modifier": "private", "type": "MimicCreator", "declarator": "mimicCreator", "var_name": "mimicCreator"}, {"original_string": "private CtClass src;", "modifier": "private", "type": "CtClass", "declarator": "src", "var_name": "src"}, {"original_string": "private CtClass dst;", "modifier": "private", "type": "CtClass", "declarator": "dst", "var_name": "dst"}], "file": "mimic-library/src/test/java/com/github/stephanenicolas/mimic/MimicCreatorTest.java"}, "test_case": {"identifier": "testMimicClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMimicClass() throws Exception {\n        // GIVEN\n        CtClass interfazz = ClassPool.getDefault().makeInterface(\"Able\" + TestCounter.testCounter);\n        src.addInterface(interfazz);\n        // to load the interface class\n        Class<?> interfaceClass = ClassPool.getDefault().toClass(interfazz);\n\n        src.addField(new CtField(CtClass.intType, \"foo\", src));\n        src.addConstructor(CtNewConstructor.make(\"public Src() { foo = 2; }\", src));\n        src.addMethod(CtNewMethod.make(\"public boolean foo() { return true;}\", src));\n\n        // WHEN\n        mimicCreator.mimicClass(src, dst, MimicMode.AFTER_SUPER, new MimicMethod[0]);\n\n        // THEN\n        Class<?> dstClass = dst.toClass();\n\n        assertHasInterface(interfaceClass, dstClass);\n        assertHasFooFieldAndConstructor(dstClass);\n        assertHasFooMethod(dst, dstClass);\n    }", "signature": "void testMimicClass()", "full_signature": "@Test public void testMimicClass()", "class_method_signature": "MimicCreatorTest.testMimicClass()", "testcase": true, "constructor": false, "invocations": ["makeInterface", "getDefault", "addInterface", "toClass", "getDefault", "addField", "addConstructor", "make", "addMethod", "make", "mimicClass", "toClass", "assertHasInterface", "assertHasFooFieldAndConstructor", "assertHasFooMethod"]}, "focal_class": {"identifier": "MimicCreator", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Getter\n    private String key;", "modifier": "@Getter\n    private", "type": "String", "declarator": "key", "var_name": "key"}], "methods": [{"identifier": "MimicCreator", "parameters": "()", "modifiers": "public", "return": "", "signature": " MimicCreator()", "full_signature": "public  MimicCreator()", "class_method_signature": "MimicCreator.MimicCreator()", "testcase": false, "constructor": true}, {"identifier": "MimicCreator", "parameters": "(String key)", "modifiers": "public", "return": "", "signature": " MimicCreator(String key)", "full_signature": "public  MimicCreator(String key)", "class_method_signature": "MimicCreator.MimicCreator(String key)", "testcase": false, "constructor": true}, {"identifier": "buildMimicModeMethodMap", "parameters": "(MimicMethod[] mimicMethods)", "modifiers": "private", "return": "HashMap<String, MimicMode>", "signature": "HashMap<String, MimicMode> buildMimicModeMethodMap(MimicMethod[] mimicMethods)", "full_signature": "private HashMap<String, MimicMode> buildMimicModeMethodMap(MimicMethod[] mimicMethods)", "class_method_signature": "MimicCreator.buildMimicModeMethodMap(MimicMethod[] mimicMethods)", "testcase": false, "constructor": false}, {"identifier": "buildInsertionMethodMap", "parameters": "(MimicMethod[] mimicMethods)", "modifiers": "private", "return": "HashMap<String, String>", "signature": "HashMap<String, String> buildInsertionMethodMap(MimicMethod[] mimicMethods)", "full_signature": "private HashMap<String, String> buildInsertionMethodMap(MimicMethod[] mimicMethods)", "class_method_signature": "MimicCreator.buildInsertionMethodMap(MimicMethod[] mimicMethods)", "testcase": false, "constructor": false}, {"identifier": "createInvocation", "parameters": "(CtMethod method, String copiedMethodName)", "modifiers": "private", "return": "String", "signature": "String createInvocation(CtMethod method, String copiedMethodName)", "full_signature": "private String createInvocation(CtMethod method, String copiedMethodName)", "class_method_signature": "MimicCreator.createInvocation(CtMethod method, String copiedMethodName)", "testcase": false, "constructor": false}, {"identifier": "hasField", "parameters": "(CtClass clazz, CtField field)", "modifiers": "public", "return": "boolean", "signature": "boolean hasField(CtClass clazz, CtField field)", "full_signature": "public boolean hasField(CtClass clazz, CtField field)", "class_method_signature": "MimicCreator.hasField(CtClass clazz, CtField field)", "testcase": false, "constructor": false}, {"identifier": "hasInterface", "parameters": "(CtClass dst, CtClass interfazz)", "modifiers": "public", "return": "boolean", "signature": "boolean hasInterface(CtClass dst, CtClass interfazz)", "full_signature": "public boolean hasInterface(CtClass dst, CtClass interfazz)", "class_method_signature": "MimicCreator.hasInterface(CtClass dst, CtClass interfazz)", "testcase": false, "constructor": false}, {"identifier": "mimicClass", "parameters": "(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "modifiers": "public", "return": "void", "signature": "void mimicClass(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "full_signature": "public void mimicClass(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "class_method_signature": "MimicCreator.mimicClass(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "testcase": false, "constructor": false}, {"identifier": "mimicConstructors", "parameters": "(CtClass src, CtClass dst)", "modifiers": "public", "return": "void", "signature": "void mimicConstructors(CtClass src, CtClass dst)", "full_signature": "public void mimicConstructors(CtClass src, CtClass dst)", "class_method_signature": "MimicCreator.mimicConstructors(CtClass src, CtClass dst)", "testcase": false, "constructor": false}, {"identifier": "mimicFields", "parameters": "(CtClass src, CtClass dst)", "modifiers": "public", "return": "void", "signature": "void mimicFields(CtClass src, CtClass dst)", "full_signature": "public void mimicFields(CtClass src, CtClass dst)", "class_method_signature": "MimicCreator.mimicFields(CtClass src, CtClass dst)", "testcase": false, "constructor": false}, {"identifier": "mimicInterfaces", "parameters": "(CtClass src, CtClass dst)", "modifiers": "public", "return": "void", "signature": "void mimicInterfaces(CtClass src, CtClass dst)", "full_signature": "public void mimicInterfaces(CtClass src, CtClass dst)", "class_method_signature": "MimicCreator.mimicInterfaces(CtClass src, CtClass dst)", "testcase": false, "constructor": false}, {"identifier": "mimicMethods", "parameters": "(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "modifiers": "public", "return": "void", "signature": "void mimicMethods(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "full_signature": "public void mimicMethods(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "class_method_signature": "MimicCreator.mimicMethods(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "testcase": false, "constructor": false}, {"identifier": "findMethod", "parameters": "(CtClass dst, CtMethod insertionMethod, String insertionMethodName)", "modifiers": "private", "return": "CtMethod", "signature": "CtMethod findMethod(CtClass dst, CtMethod insertionMethod, String insertionMethodName)", "full_signature": "private CtMethod findMethod(CtClass dst, CtMethod insertionMethod, String insertionMethodName)", "class_method_signature": "MimicCreator.findMethod(CtClass dst, CtMethod insertionMethod, String insertionMethodName)", "testcase": false, "constructor": false}], "file": "mimic-library/src/main/java/com/github/stephanenicolas/mimic/MimicCreator.java"}, "focal_method": {"identifier": "mimicClass", "parameters": "(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "modifiers": "public", "return": "void", "body": "public void mimicClass(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods) throws NotFoundException, CannotCompileException, MimicException {\n        mimicInterfaces(src, dst);\n        mimicFields(src, dst);\n        mimicConstructors(src, dst);\n        mimicMethods(src, dst, defaultMimicMode, mimicMethods);\n    }", "signature": "void mimicClass(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "full_signature": "public void mimicClass(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "class_method_signature": "MimicCreator.mimicClass(CtClass src, CtClass dst, MimicMode defaultMimicMode, MimicMethod[] mimicMethods)", "testcase": false, "constructor": false, "invocations": ["mimicInterfaces", "mimicFields", "mimicConstructors", "mimicMethods"]}, "repository": {"repo_id": 20893448, "url": "https://github.com/stephanenicolas/mimic", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 18, "size": 673, "license": "licensed"}}