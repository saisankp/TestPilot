{"test_class": {"identifier": "ListsTest", "superclass": "", "interfaces": "", "fields": [], "file": "brave/src/test/java/brave/internal/collect/ListsTest.java"}, "test_case": {"identifier": "ensureMutable_leavesArrayList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void ensureMutable_leavesArrayList() {\n    List<Object> list = new ArrayList<>();\n\n    assertThat(Lists.ensureMutable(list))\n      .isSameAs(list);\n  }", "signature": "void ensureMutable_leavesArrayList()", "full_signature": "@Test public void ensureMutable_leavesArrayList()", "class_method_signature": "ListsTest.ensureMutable_leavesArrayList()", "testcase": true, "constructor": false, "invocations": ["isSameAs", "assertThat", "ensureMutable"]}, "focal_class": {"identifier": "Lists", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ensureMutable", "parameters": "(List<E> list)", "modifiers": "public static", "return": "List<E>", "signature": "List<E> ensureMutable(List<E> list)", "full_signature": "public static List<E> ensureMutable(List<E> list)", "class_method_signature": "Lists.ensureMutable(List<E> list)", "testcase": false, "constructor": false}, {"identifier": "ensureImmutable", "parameters": "(List<E> list)", "modifiers": "public static", "return": "List<E>", "signature": "List<E> ensureImmutable(List<E> list)", "full_signature": "public static List<E> ensureImmutable(List<E> list)", "class_method_signature": "Lists.ensureImmutable(List<E> list)", "testcase": false, "constructor": false}, {"identifier": "isImmutable", "parameters": "(List<?> extra)", "modifiers": "static", "return": "boolean", "signature": "boolean isImmutable(List<?> extra)", "full_signature": "static boolean isImmutable(List<?> extra)", "class_method_signature": "Lists.isImmutable(List<?> extra)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(List<E> left, List<E> right)", "modifiers": "public static", "return": "List<E>", "signature": "List<E> concat(List<E> left, List<E> right)", "full_signature": "public static List<E> concat(List<E> left, List<E> right)", "class_method_signature": "Lists.concat(List<E> left, List<E> right)", "testcase": false, "constructor": false}, {"identifier": "Lists", "parameters": "()", "modifiers": "", "return": "", "signature": " Lists()", "full_signature": "  Lists()", "class_method_signature": "Lists.Lists()", "testcase": false, "constructor": true}], "file": "brave/src/main/java/brave/internal/collect/Lists.java"}, "focal_method": {"identifier": "ensureMutable", "parameters": "(List<E> list)", "modifiers": "public static", "return": "List<E>", "body": "public static <E> List<E> ensureMutable(List<E> list) {\n    if (list instanceof ArrayList) return list;\n    int size = list.size();\n    ArrayList<E> mutable = new ArrayList<>(size);\n    for (int i = 0; i < size; i++) {\n      mutable.add(list.get(i));\n    }\n    return mutable;\n  }", "signature": "List<E> ensureMutable(List<E> list)", "full_signature": "public static List<E> ensureMutable(List<E> list)", "class_method_signature": "Lists.ensureMutable(List<E> list)", "testcase": false, "constructor": false, "invocations": ["size", "add", "get"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}