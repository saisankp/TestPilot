{"test_class": {"identifier": "SW360ClientConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String REST_URL = \"https://www.sw360.org/api\";", "modifier": "private static final", "type": "String", "declarator": "REST_URL = \"https://www.sw360.org/api\"", "var_name": "REST_URL"}, {"original_string": "private static final String AUTH_URL = \"https://auth.sw360.org/token\";", "modifier": "private static final", "type": "String", "declarator": "AUTH_URL = \"https://auth.sw360.org/token\"", "var_name": "AUTH_URL"}, {"original_string": "private static final String USER = \"scott\";", "modifier": "private static final", "type": "String", "declarator": "USER = \"scott\"", "var_name": "USER"}, {"original_string": "private static final String PASSWORD = \"tiger\";", "modifier": "private static final", "type": "String", "declarator": "PASSWORD = \"tiger\"", "var_name": "PASSWORD"}, {"original_string": "private static final String USER_TOKEN = \"\";", "modifier": "private static final", "type": "String", "declarator": "USER_TOKEN = \"\"", "var_name": "USER_TOKEN"}, {"original_string": "private static final String CLIENT_ID = \"myTestClientID\";", "modifier": "private static final", "type": "String", "declarator": "CLIENT_ID = \"myTestClientID\"", "var_name": "CLIENT_ID"}, {"original_string": "private static final String CLIENT_PASS = \"secretClientPwd\";", "modifier": "private static final", "type": "String", "declarator": "CLIENT_PASS = \"secretClientPwd\"", "var_name": "CLIENT_PASS"}, {"original_string": "private HttpClient httpClient;", "modifier": "private", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private ObjectMapper mapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/config/SW360ClientConfigTest.java"}, "test_case": {"identifier": "testEmptyUserThrows", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testEmptyUserThrows() {\n        SW360ClientConfig.createConfig(REST_URL, AUTH_URL, \"\", PASSWORD, CLIENT_ID, CLIENT_PASS, USER_TOKEN, httpClient, mapper);\n    }", "signature": "void testEmptyUserThrows()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testEmptyUserThrows()", "class_method_signature": "SW360ClientConfigTest.testEmptyUserThrows()", "testcase": true, "constructor": false, "invocations": ["createConfig"]}, "focal_class": {"identifier": "SW360ClientConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final URI baseURI;", "modifier": "private final", "type": "URI", "declarator": "baseURI", "var_name": "baseURI"}, {"original_string": "private final String authURL;", "modifier": "private final", "type": "String", "declarator": "authURL", "var_name": "authURL"}, {"original_string": "private final String user;", "modifier": "private final", "type": "String", "declarator": "user", "var_name": "user"}, {"original_string": "private final String password;", "modifier": "private final", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private final String clientId;", "modifier": "private final", "type": "String", "declarator": "clientId", "var_name": "clientId"}, {"original_string": "private final String clientPassword;", "modifier": "private final", "type": "String", "declarator": "clientPassword", "var_name": "clientPassword"}, {"original_string": "private final String token;", "modifier": "private final", "type": "String", "declarator": "token", "var_name": "token"}, {"original_string": "private final HttpClient httpClient;", "modifier": "private final", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private final ObjectMapper objectMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}], "methods": [{"identifier": "SW360ClientConfig", "parameters": "(URI baseURI, String authURL, String user, String password, String clientId,\n                              String clientPassword, String token, HttpClient httpClient, ObjectMapper objectMapper)", "modifiers": "private", "return": "", "signature": " SW360ClientConfig(URI baseURI, String authURL, String user, String password, String clientId,\n                              String clientPassword, String token, HttpClient httpClient, ObjectMapper objectMapper)", "full_signature": "private  SW360ClientConfig(URI baseURI, String authURL, String user, String password, String clientId,\n                              String clientPassword, String token, HttpClient httpClient, ObjectMapper objectMapper)", "class_method_signature": "SW360ClientConfig.SW360ClientConfig(URI baseURI, String authURL, String user, String password, String clientId,\n                              String clientPassword, String token, HttpClient httpClient, ObjectMapper objectMapper)", "testcase": false, "constructor": true}, {"identifier": "createConfig", "parameters": "(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper)", "modifiers": "public static", "return": "SW360ClientConfig", "signature": "SW360ClientConfig createConfig(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper)", "full_signature": "public static SW360ClientConfig createConfig(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper)", "class_method_signature": "SW360ClientConfig.createConfig(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper)", "testcase": false, "constructor": false}, {"identifier": "getRestURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRestURL()", "full_signature": "public String getRestURL()", "class_method_signature": "SW360ClientConfig.getRestURL()", "testcase": false, "constructor": false}, {"identifier": "getBaseURI", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getBaseURI()", "full_signature": "public URI getBaseURI()", "class_method_signature": "SW360ClientConfig.getBaseURI()", "testcase": false, "constructor": false}, {"identifier": "getAuthURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAuthURL()", "full_signature": "public String getAuthURL()", "class_method_signature": "SW360ClientConfig.getAuthURL()", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUser()", "full_signature": "public String getUser()", "class_method_signature": "SW360ClientConfig.getUser()", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPassword()", "full_signature": "public String getPassword()", "class_method_signature": "SW360ClientConfig.getPassword()", "testcase": false, "constructor": false}, {"identifier": "getClientId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientId()", "full_signature": "public String getClientId()", "class_method_signature": "SW360ClientConfig.getClientId()", "testcase": false, "constructor": false}, {"identifier": "getClientPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientPassword()", "full_signature": "public String getClientPassword()", "class_method_signature": "SW360ClientConfig.getClientPassword()", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getToken()", "full_signature": "public String getToken()", "class_method_signature": "SW360ClientConfig.getToken()", "testcase": false, "constructor": false}, {"identifier": "getHttpClient", "parameters": "()", "modifiers": "public", "return": "HttpClient", "signature": "HttpClient getHttpClient()", "full_signature": "public HttpClient getHttpClient()", "class_method_signature": "SW360ClientConfig.getHttpClient()", "testcase": false, "constructor": false}, {"identifier": "getObjectMapper", "parameters": "()", "modifiers": "public", "return": "ObjectMapper", "signature": "ObjectMapper getObjectMapper()", "full_signature": "public ObjectMapper getObjectMapper()", "class_method_signature": "SW360ClientConfig.getObjectMapper()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "SW360ClientConfig.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SW360ClientConfig.hashCode()", "testcase": false, "constructor": false}, {"identifier": "stripTrailingSeparator", "parameters": "(String url)", "modifiers": "private static", "return": "String", "signature": "String stripTrailingSeparator(String url)", "full_signature": "private static String stripTrailingSeparator(String url)", "class_method_signature": "SW360ClientConfig.stripTrailingSeparator(String url)", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/config/SW360ClientConfig.java"}, "focal_method": {"identifier": "createConfig", "parameters": "(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper)", "modifiers": "public static", "return": "SW360ClientConfig", "body": "public static SW360ClientConfig createConfig(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper) {\n        if(!StringUtils.isEmpty(token)){\n            return new SW360ClientConfig(\n                    URI.create(stripTrailingSeparator(Validate.notEmpty(restURL, \"Undefined REST URL\"))),\n                    stripTrailingSeparator(Validate.notEmpty(authURL, \"Undefined authentication URL\")),\n                    user,\n                    password,\n                    Validate.notEmpty(clientId, \"Undefined client ID\"),\n                    Validate.notEmpty(clientPassword, \"Undefined client password\"),\n                    Validate.notEmpty(token, \"Undefined token\"),\n                    Validate.notNull(httpClient),\n                    Validate.notNull(mapper));\n        }\n        return new SW360ClientConfig(\n                URI.create(stripTrailingSeparator(Validate.notEmpty(restURL, \"Undefined REST URL\"))),\n                stripTrailingSeparator(Validate.notEmpty(authURL, \"Undefined authentication URL\")),\n                Validate.notEmpty(user, \"Undefined user\"),\n                Validate.notEmpty(password, \"Undefined password\"),\n                Validate.notEmpty(clientId, \"Undefined client ID\"),\n                Validate.notEmpty(clientPassword, \"Undefined client password\"),\n                token,\n                Validate.notNull(httpClient),\n                Validate.notNull(mapper));\n    }", "signature": "SW360ClientConfig createConfig(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper)", "full_signature": "public static SW360ClientConfig createConfig(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper)", "class_method_signature": "SW360ClientConfig.createConfig(String restURL, String authURL, String user,\n                                                 String password, String clientId, String clientPassword,\n                                                 String token, HttpClient httpClient, ObjectMapper mapper)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "create", "stripTrailingSeparator", "notEmpty", "stripTrailingSeparator", "notEmpty", "notEmpty", "notEmpty", "notEmpty", "notNull", "notNull", "create", "stripTrailingSeparator", "notEmpty", "stripTrailingSeparator", "notEmpty", "notEmpty", "notEmpty", "notEmpty", "notEmpty", "notNull", "notNull"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}