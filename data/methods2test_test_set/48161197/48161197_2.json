{"test_class": {"identifier": "DSSetTest", "superclass": "extends DbUtility", "interfaces": "", "fields": [{"original_string": "private static final String dbSchemaUrl = \"jdbc:h2:mem:DSSetTest;DB_CLOSE_DELAY=-1\";", "modifier": "private static final", "type": "String", "declarator": "dbSchemaUrl = \"jdbc:h2:mem:DSSetTest;DB_CLOSE_DELAY=-1\"", "var_name": "dbSchemaUrl"}, {"original_string": "private static DSSetDAO dsSetDAO;", "modifier": "private static", "type": "DSSetDAO", "declarator": "dsSetDAO", "var_name": "dsSetDAO"}], "file": "catalog/src/test/java/com/qubole/quark/catalog/db/pojo/DSSetTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGet() {\n    List<DSSet> dsSetList = dsSetDAO.findAll();\n    assertThat(dsSetList.size(), equalTo(1));\n    assertThat(dsSetList.get(0).getName(), equalTo(\"quark_default\"));\n  }", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "DSSetTest.testGet()", "testcase": true, "constructor": false, "invocations": ["findAll", "assertThat", "size", "equalTo", "assertThat", "getName", "get", "equalTo"]}, "focal_class": {"identifier": "DSSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private long id;", "modifier": "private", "type": "long", "declarator": "id", "var_name": "id"}, {"original_string": "private long defaultDatasourceId;", "modifier": "private", "type": "long", "declarator": "defaultDatasourceId", "var_name": "defaultDatasourceId"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "DSSet", "parameters": "(long id, String name, long defaultDatasourceId)", "modifiers": "public", "return": "", "signature": " DSSet(long id, String name, long defaultDatasourceId)", "full_signature": "public  DSSet(long id, String name, long defaultDatasourceId)", "class_method_signature": "DSSet.DSSet(long id, String name, long defaultDatasourceId)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getId()", "full_signature": "public long getId()", "class_method_signature": "DSSet.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(long id)", "modifiers": "public", "return": "void", "signature": "void setId(long id)", "full_signature": "public void setId(long id)", "class_method_signature": "DSSet.setId(long id)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "DSSet.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "DSSet.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getDefaultDatasourceId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getDefaultDatasourceId()", "full_signature": "public long getDefaultDatasourceId()", "class_method_signature": "DSSet.getDefaultDatasourceId()", "testcase": false, "constructor": false}, {"identifier": "setDefaultDataasourceId", "parameters": "(long defaultDatasourceId)", "modifiers": "public", "return": "void", "signature": "void setDefaultDataasourceId(long defaultDatasourceId)", "full_signature": "public void setDefaultDataasourceId(long defaultDatasourceId)", "class_method_signature": "DSSet.setDefaultDataasourceId(long defaultDatasourceId)", "testcase": false, "constructor": false}], "file": "catalog/src/main/java/com/qubole/quark/catalog/db/pojo/DSSet.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getName() {\n    return name;\n  }", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "DSSet.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48161197, "url": "https://github.com/qubole/quark", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 81, "size": 574, "license": "licensed"}}