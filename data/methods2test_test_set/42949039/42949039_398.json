{"test_class": {"identifier": "StorageFileHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "private static final Path LOCAL_TEMP_PATH = Paths.get(System.getProperty(\"java.io.tmpdir\"), \"herd-helper-test\", RANDOM_SUFFIX);", "modifier": "private static final", "type": "Path", "declarator": "LOCAL_TEMP_PATH = Paths.get(System.getProperty(\"java.io.tmpdir\"), \"herd-helper-test\", RANDOM_SUFFIX)", "var_name": "LOCAL_TEMP_PATH"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/StorageFileHelperTest.java"}, "test_case": {"identifier": "testValidateRegisteredS3FilesActualFileNoExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateRegisteredS3FilesActualFileNoExists() throws IOException\n    {\n        // Create two lists of expected and actual storage files, with one expected file not being added to the list of actual files.\n        List<StorageFile> testExpectedFiles = Collections.singletonList(new StorageFile(TARGET_S3_KEY, FILE_SIZE, ROW_COUNT_1000));\n        List<S3ObjectSummary> testActualFiles = new ArrayList<>();\n\n        // Try to validate S3 files when expected S3 file does not exist.\n        try\n        {\n            storageFileHelper.validateRegisteredS3Files(testExpectedFiles, testActualFiles, STORAGE_NAME,\n                new BusinessObjectDataKey(BDEF_NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION, PARTITION_VALUE,\n                    SUBPARTITION_VALUES, DATA_VERSION));\n            fail(\"Should throw an ObjectNotFoundException when the registered S3 file does not exist.\");\n        }\n        catch (ObjectNotFoundException e)\n        {\n            assertEquals(String.format(\"Registered file \\\"%s\\\" does not exist in \\\"%s\\\" storage.\", TARGET_S3_KEY, STORAGE_NAME), e.getMessage());\n        }\n    }", "signature": "void testValidateRegisteredS3FilesActualFileNoExists()", "full_signature": "@Test public void testValidateRegisteredS3FilesActualFileNoExists()", "class_method_signature": "StorageFileHelperTest.testValidateRegisteredS3FilesActualFileNoExists()", "testcase": true, "constructor": false, "invocations": ["singletonList", "validateRegisteredS3Files", "fail", "assertEquals", "format", "getMessage"]}, "focal_class": {"identifier": "StorageFileHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(StorageFileHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StorageFileHelper.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}], "methods": [{"identifier": "createStorageFileFromEntity", "parameters": "(StorageFileEntity storageFileEntity, String storageUnitDirectoryPath)", "modifiers": "", "return": "StorageFile", "signature": "StorageFile createStorageFileFromEntity(StorageFileEntity storageFileEntity, String storageUnitDirectoryPath)", "full_signature": " StorageFile createStorageFileFromEntity(StorageFileEntity storageFileEntity, String storageUnitDirectoryPath)", "class_method_signature": "StorageFileHelper.createStorageFileFromEntity(StorageFileEntity storageFileEntity, String storageUnitDirectoryPath)", "testcase": false, "constructor": false}, {"identifier": "createStorageFilesFromEntities", "parameters": "(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "full_signature": "public List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "class_method_signature": "StorageFileHelper.createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "testcase": false, "constructor": false}, {"identifier": "createStorageFilesFromEntities", "parameters": "(Collection<StorageFileEntity> storageFileEntities)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities)", "full_signature": "public List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities)", "class_method_signature": "StorageFileHelper.createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities)", "testcase": false, "constructor": false}, {"identifier": "createStorageFilesFromS3ObjectSummaries", "parameters": "(List<S3ObjectSummary> s3ObjectSummaries)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> createStorageFilesFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "full_signature": "public List<StorageFile> createStorageFilesFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "class_method_signature": "StorageFileHelper.createStorageFilesFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "testcase": false, "constructor": false}, {"identifier": "getAndValidateStorageFiles", "parameters": "(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> getAndValidateStorageFiles(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public List<StorageFile> getAndValidateStorageFiles(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageFileHelper.getAndValidateStorageFiles(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "getAndValidateStorageFilesIfPresent", "parameters": "(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> getAndValidateStorageFilesIfPresent(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public List<StorageFile> getAndValidateStorageFilesIfPresent(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageFileHelper.getAndValidateStorageFilesIfPresent(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "getFilePathsFromS3ObjectSummaries", "parameters": "(List<S3ObjectSummary> s3ObjectSummaries)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFilePathsFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "full_signature": "public List<String> getFilePathsFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "class_method_signature": "StorageFileHelper.getFilePathsFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "testcase": false, "constructor": false}, {"identifier": "getFilePathsFromStorageFiles", "parameters": "(List<StorageFile> storageFiles)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFilePathsFromStorageFiles(List<StorageFile> storageFiles)", "full_signature": "public List<String> getFilePathsFromStorageFiles(List<StorageFile> storageFiles)", "class_method_signature": "StorageFileHelper.getFilePathsFromStorageFiles(List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "getFiles", "parameters": "(List<StorageFile> storageFiles)", "modifiers": "public", "return": "List<File>", "signature": "List<File> getFiles(List<StorageFile> storageFiles)", "full_signature": "public List<File> getFiles(List<StorageFile> storageFiles)", "class_method_signature": "StorageFileHelper.getFiles(List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "getStorageFileEntitiesMap", "parameters": "(Collection<StorageFileEntity> storageFileEntities)", "modifiers": "public", "return": "Map<String, StorageFileEntity>", "signature": "Map<String, StorageFileEntity> getStorageFileEntitiesMap(Collection<StorageFileEntity> storageFileEntities)", "full_signature": "public Map<String, StorageFileEntity> getStorageFileEntitiesMap(Collection<StorageFileEntity> storageFileEntities)", "class_method_signature": "StorageFileHelper.getStorageFileEntitiesMap(Collection<StorageFileEntity> storageFileEntities)", "testcase": false, "constructor": false}, {"identifier": "getStorageFilesMapFromS3ObjectSummaries", "parameters": "(List<S3ObjectSummary> s3ObjectSummaries)", "modifiers": "public", "return": "Map<String, StorageFile>", "signature": "Map<String, StorageFile> getStorageFilesMapFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "full_signature": "public Map<String, StorageFile> getStorageFilesMapFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "class_method_signature": "StorageFileHelper.getStorageFilesMapFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "testcase": false, "constructor": false}, {"identifier": "validateCreateRequestStorageFiles", "parameters": "(List<StorageFile> storageFiles)", "modifiers": "public", "return": "void", "signature": "void validateCreateRequestStorageFiles(List<StorageFile> storageFiles)", "full_signature": "public void validateCreateRequestStorageFiles(List<StorageFile> storageFiles)", "class_method_signature": "StorageFileHelper.validateCreateRequestStorageFiles(List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "validateDownloadedS3Files", "parameters": "(String baseDirectory, String s3KeyPrefix, StorageUnit storageUnit)", "modifiers": "public", "return": "void", "signature": "void validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, StorageUnit storageUnit)", "full_signature": "public void validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, StorageUnit storageUnit)", "class_method_signature": "StorageFileHelper.validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, StorageUnit storageUnit)", "testcase": false, "constructor": false}, {"identifier": "validateDownloadedS3Files", "parameters": "(String baseDirectory, String s3KeyPrefix, List<StorageFile> storageFiles)", "modifiers": "public", "return": "void", "signature": "void validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, List<StorageFile> storageFiles)", "full_signature": "public void validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, List<StorageFile> storageFiles)", "class_method_signature": "StorageFileHelper.validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "validateRegisteredS3Files", "parameters": "(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "void", "signature": "void validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public void validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageFileHelper.validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "validateStorageFile", "parameters": "(StorageFile storageFile, String s3BucketName, Map<String, StorageFile> actualS3Keys, boolean validateFileSize)", "modifiers": "public", "return": "void", "signature": "void validateStorageFile(StorageFile storageFile, String s3BucketName, Map<String, StorageFile> actualS3Keys, boolean validateFileSize)", "full_signature": "public void validateStorageFile(StorageFile storageFile, String s3BucketName, Map<String, StorageFile> actualS3Keys, boolean validateFileSize)", "class_method_signature": "StorageFileHelper.validateStorageFile(StorageFile storageFile, String s3BucketName, Map<String, StorageFile> actualS3Keys, boolean validateFileSize)", "testcase": false, "constructor": false}, {"identifier": "validateStorageFileEntity", "parameters": "(StorageFileEntity storageFileEntity, String s3BucketName, Map<String, StorageFile> actualS3Keys,\n        boolean validateFileSize)", "modifiers": "public", "return": "void", "signature": "void validateStorageFileEntity(StorageFileEntity storageFileEntity, String s3BucketName, Map<String, StorageFile> actualS3Keys,\n        boolean validateFileSize)", "full_signature": "public void validateStorageFileEntity(StorageFileEntity storageFileEntity, String s3BucketName, Map<String, StorageFile> actualS3Keys,\n        boolean validateFileSize)", "class_method_signature": "StorageFileHelper.validateStorageFileEntity(StorageFileEntity storageFileEntity, String s3BucketName, Map<String, StorageFile> actualS3Keys,\n        boolean validateFileSize)", "testcase": false, "constructor": false}, {"identifier": "validateStorageFilePaths", "parameters": "(Collection<String> storageFilePaths, String s3KeyPrefix, BusinessObjectDataKey businessObjectDataKey,\n        String storageName)", "modifiers": "public", "return": "void", "signature": "void validateStorageFilePaths(Collection<String> storageFilePaths, String s3KeyPrefix, BusinessObjectDataKey businessObjectDataKey,\n        String storageName)", "full_signature": "public void validateStorageFilePaths(Collection<String> storageFilePaths, String s3KeyPrefix, BusinessObjectDataKey businessObjectDataKey,\n        String storageName)", "class_method_signature": "StorageFileHelper.validateStorageFilePaths(Collection<String> storageFilePaths, String s3KeyPrefix, BusinessObjectDataKey businessObjectDataKey,\n        String storageName)", "testcase": false, "constructor": false}, {"identifier": "validateStorageUnitS3Files", "parameters": "(StorageUnit storageUnit, List<String> actualS3Files, String s3KeyPrefix)", "modifiers": "public", "return": "void", "signature": "void validateStorageUnitS3Files(StorageUnit storageUnit, List<String> actualS3Files, String s3KeyPrefix)", "full_signature": "public void validateStorageUnitS3Files(StorageUnit storageUnit, List<String> actualS3Files, String s3KeyPrefix)", "class_method_signature": "StorageFileHelper.validateStorageUnitS3Files(StorageUnit storageUnit, List<String> actualS3Files, String s3KeyPrefix)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/StorageFileHelper.java"}, "focal_method": {"identifier": "validateRegisteredS3Files", "parameters": "(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "void", "body": "public void validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)\n    {\n        // Get a set of actual S3 file paths.\n        Set<String> actualS3FilePaths = new HashSet<>(getFilePathsFromS3ObjectSummaries(s3ObjectSummaries));\n\n        // Validate existence and file size for all expected files.\n        for (StorageFile expectedStorageFile : expectedStorageFiles)\n        {\n            if (!actualS3FilePaths.contains(expectedStorageFile.getFilePath()))\n            {\n                throw new ObjectNotFoundException(\n                    String.format(\"Registered file \\\"%s\\\" does not exist in \\\"%s\\\" storage.\", expectedStorageFile.getFilePath(), storageName));\n            }\n        }\n\n        // Get a set of expected file paths.\n        Set<String> expectedFilePaths = new HashSet<>(getFilePathsFromStorageFiles(expectedStorageFiles));\n\n        // Create a JSON representation of the business object data key.\n        String businessObjectDataKeyAsJson = jsonHelper.objectToJson(businessObjectDataKey);\n\n        // Validate that no other files in S3 bucket except for expected storage files have the same S3 key prefix.\n        // Please note that this validation ignores (does not fail on) any unregistered zero byte S3 files.\n        for (S3ObjectSummary s3ObjectSummary : s3ObjectSummaries)\n        {\n            if (!expectedFilePaths.contains(s3ObjectSummary.getKey()))\n            {\n                // Ignore unregistered zero byte S3 files.\n                if (s3ObjectSummary.getSize() == 0)\n                {\n                    LOGGER.info(\"Ignoring unregistered zero byte S3 file. s3Key=\\\"{}\\\" storageName=\\\"{}\\\" businessObjectDataKey={}\", s3ObjectSummary.getKey(),\n                        storageName, businessObjectDataKeyAsJson);\n                }\n                else\n                {\n                    throw new IllegalStateException(String\n                        .format(\"Found unregistered non-empty S3 file \\\"%s\\\" in \\\"%s\\\" storage. Business object data {%s}\", s3ObjectSummary.getKey(),\n                            storageName, businessObjectDataHelper.businessObjectDataKeyToString(businessObjectDataKey)));\n                }\n            }\n        }\n    }", "signature": "void validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public void validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageFileHelper.validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false, "invocations": ["getFilePathsFromS3ObjectSummaries", "contains", "getFilePath", "format", "getFilePath", "getFilePathsFromStorageFiles", "objectToJson", "contains", "getKey", "getSize", "info", "getKey", "format", "getKey", "businessObjectDataKeyToString"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}