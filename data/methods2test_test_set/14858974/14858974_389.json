{"test_class": {"identifier": "OrganizationHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/core/OrganizationHandlerTest.java"}, "test_case": {"identifier": "getMatchingOrganizationOfAModuleWhenThereIsNone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getMatchingOrganizationOfAModuleWhenThereIsNone(){\n        final DbModule module = new DbModule();\n        final DbArtifact artifact = new DbArtifact();\n        artifact.setGroupId(\"unknown.production\");\n        module.addArtifact(artifact);\n\n        final RepositoryHandler repositoryHandler = GrapesTestUtils.getRepoHandlerMock();\n        final OrganizationHandler handler = new OrganizationHandler(repositoryHandler);\n\n        final DbOrganization organization = handler.getMatchingOrganization(new DbModule());\n\n        assertNull(organization);\n    }", "signature": "void getMatchingOrganizationOfAModuleWhenThereIsNone()", "full_signature": "@Test public void getMatchingOrganizationOfAModuleWhenThereIsNone()", "class_method_signature": "OrganizationHandlerTest.getMatchingOrganizationOfAModuleWhenThereIsNone()", "testcase": true, "constructor": false, "invocations": ["setGroupId", "addArtifact", "getRepoHandlerMock", "getMatchingOrganization", "assertNull"]}, "focal_class": {"identifier": "OrganizationHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RepositoryHandler repositoryHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}], "methods": [{"identifier": "OrganizationHandler", "parameters": "(final RepositoryHandler repositoryHandler)", "modifiers": "public", "return": "", "signature": " OrganizationHandler(final RepositoryHandler repositoryHandler)", "full_signature": "public  OrganizationHandler(final RepositoryHandler repositoryHandler)", "class_method_signature": "OrganizationHandler.OrganizationHandler(final RepositoryHandler repositoryHandler)", "testcase": false, "constructor": true}, {"identifier": "store", "parameters": "(final DbOrganization dbOrganization)", "modifiers": "public", "return": "void", "signature": "void store(final DbOrganization dbOrganization)", "full_signature": "public void store(final DbOrganization dbOrganization)", "class_method_signature": "OrganizationHandler.store(final DbOrganization dbOrganization)", "testcase": false, "constructor": false}, {"identifier": "getOrganizationNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getOrganizationNames()", "full_signature": "public List<String> getOrganizationNames()", "class_method_signature": "OrganizationHandler.getOrganizationNames()", "testcase": false, "constructor": false}, {"identifier": "getOrganization", "parameters": "(final String organizationId)", "modifiers": "public", "return": "DbOrganization", "signature": "DbOrganization getOrganization(final String organizationId)", "full_signature": "public DbOrganization getOrganization(final String organizationId)", "class_method_signature": "OrganizationHandler.getOrganization(final String organizationId)", "testcase": false, "constructor": false}, {"identifier": "deleteOrganization", "parameters": "(final String organizationId)", "modifiers": "public", "return": "void", "signature": "void deleteOrganization(final String organizationId)", "full_signature": "public void deleteOrganization(final String organizationId)", "class_method_signature": "OrganizationHandler.deleteOrganization(final String organizationId)", "testcase": false, "constructor": false}, {"identifier": "getCorporateGroupIds", "parameters": "(final String organizationId)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getCorporateGroupIds(final String organizationId)", "full_signature": "public List<String> getCorporateGroupIds(final String organizationId)", "class_method_signature": "OrganizationHandler.getCorporateGroupIds(final String organizationId)", "testcase": false, "constructor": false}, {"identifier": "addCorporateGroupId", "parameters": "(final String organizationId, final String corporateGroupId)", "modifiers": "public", "return": "void", "signature": "void addCorporateGroupId(final String organizationId, final String corporateGroupId)", "full_signature": "public void addCorporateGroupId(final String organizationId, final String corporateGroupId)", "class_method_signature": "OrganizationHandler.addCorporateGroupId(final String organizationId, final String corporateGroupId)", "testcase": false, "constructor": false}, {"identifier": "removeCorporateGroupId", "parameters": "(final String organizationId, final String corporateGroupId)", "modifiers": "public", "return": "void", "signature": "void removeCorporateGroupId(final String organizationId, final String corporateGroupId)", "full_signature": "public void removeCorporateGroupId(final String organizationId, final String corporateGroupId)", "class_method_signature": "OrganizationHandler.removeCorporateGroupId(final String organizationId, final String corporateGroupId)", "testcase": false, "constructor": false}, {"identifier": "getMatchingOrganization", "parameters": "(final DbModule dbModule)", "modifiers": "public", "return": "DbOrganization", "signature": "DbOrganization getMatchingOrganization(final DbModule dbModule)", "full_signature": "public DbOrganization getMatchingOrganization(final DbModule dbModule)", "class_method_signature": "OrganizationHandler.getMatchingOrganization(final DbModule dbModule)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/core/OrganizationHandler.java"}, "focal_method": {"identifier": "getMatchingOrganization", "parameters": "(final DbModule dbModule)", "modifiers": "public", "return": "DbOrganization", "body": "public DbOrganization getMatchingOrganization(final DbModule dbModule) {\n        if(dbModule.getOrganization() != null\n                && !dbModule.getOrganization().isEmpty()){\n            return getOrganization(dbModule.getOrganization());\n        }\n\n        for(final DbOrganization organization: repositoryHandler.getAllOrganizations()){\n            final CorporateFilter corporateFilter = new CorporateFilter(organization);\n            if(corporateFilter.matches(dbModule)){\n                return organization;\n            }\n        }\n\n        return null;\n    }", "signature": "DbOrganization getMatchingOrganization(final DbModule dbModule)", "full_signature": "public DbOrganization getMatchingOrganization(final DbModule dbModule)", "class_method_signature": "OrganizationHandler.getMatchingOrganization(final DbModule dbModule)", "testcase": false, "constructor": false, "invocations": ["getOrganization", "isEmpty", "getOrganization", "getOrganization", "getOrganization", "getAllOrganizations", "matches"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}