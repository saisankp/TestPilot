{"test_class": {"identifier": "XmlXpathResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    private XPathProvider xPathProvider;", "modifier": "@Spy\n    private", "type": "XPathProvider", "declarator": "xPathProvider", "var_name": "xPathProvider"}, {"original_string": "@InjectMocks\n    private XmlXpathResolver underTest;", "modifier": "@InjectMocks\n    private", "type": "XmlXpathResolver", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/sequence/formatters/helper/resolver/XmlXpathResolverTest.java"}, "test_case": {"identifier": "testGetValueWithInvalid", "parameters": "()", "modifiers": "@Test(expectedExceptions = XmlXpathResolver.InvalidXPathExperssionException.class) public", "return": "void", "body": "@Test(expectedExceptions = XmlXpathResolver.InvalidXPathExperssionException.class)\n    public void testGetValueWithInvalid() {\n        //GIVEN in request\n        //WHEN\n        underTest.getValue(\"local-name(//***\\\\\\\\/*[1])\", request());\n        //THEN exception is thrown\n    }", "signature": "void testGetValueWithInvalid()", "full_signature": "@Test(expectedExceptions = XmlXpathResolver.InvalidXPathExperssionException.class) public void testGetValueWithInvalid()", "class_method_signature": "XmlXpathResolverTest.testGetValueWithInvalid()", "testcase": true, "constructor": false, "invocations": ["getValue", "request"]}, "focal_class": {"identifier": "XmlXpathResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private XPathProvider xPathProvider;", "modifier": "@Autowired\n    private", "type": "XPathProvider", "declarator": "xPathProvider", "var_name": "xPathProvider"}], "methods": [{"identifier": "getValue", "parameters": "(final String typeQuery, final String xml)", "modifiers": "public", "return": "String", "signature": "String getValue(final String typeQuery, final String xml)", "full_signature": "public String getValue(final String typeQuery, final String xml)", "class_method_signature": "XmlXpathResolver.getValue(final String typeQuery, final String xml)", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(final String typeQuery, final XPath xPath, final InputSource source)", "modifiers": "private", "return": "String", "signature": "String evaluate(final String typeQuery, final XPath xPath, final InputSource source)", "full_signature": "private String evaluate(final String typeQuery, final XPath xPath, final InputSource source)", "class_method_signature": "XmlXpathResolver.evaluate(final String typeQuery, final XPath xPath, final InputSource source)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/sequence/formatters/helper/resolver/XmlXpathResolver.java"}, "focal_method": {"identifier": "getValue", "parameters": "(final String typeQuery, final String xml)", "modifiers": "public", "return": "String", "body": "public String getValue(final String typeQuery, final String xml) {\n        XPath xPath = xPathProvider.getXPath();\n        InputSource source = new InputSource(new StringReader(xml));\n        return evaluate(typeQuery, xPath, source);\n    }", "signature": "String getValue(final String typeQuery, final String xml)", "full_signature": "public String getValue(final String typeQuery, final String xml)", "class_method_signature": "XmlXpathResolver.getValue(final String typeQuery, final String xml)", "testcase": false, "constructor": false, "invocations": ["getXPath", "evaluate"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}