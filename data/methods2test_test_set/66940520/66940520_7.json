{"test_class": {"identifier": "SetMandatoryFieldImplementerTest", "superclass": "extends AbstractImportValidationTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ObjectBundleService objectBundleService;", "modifier": "@Autowired\n    private", "type": "ObjectBundleService", "declarator": "objectBundleService", "var_name": "objectBundleService"}, {"original_string": "@Autowired\n    private ObjectBundleValidationService objectBundleValidationService;", "modifier": "@Autowired\n    private", "type": "ObjectBundleValidationService", "declarator": "objectBundleValidationService", "var_name": "objectBundleValidationService"}, {"original_string": "@Autowired\n    private RenderService _renderService;", "modifier": "@Autowired\n    private", "type": "RenderService", "declarator": "_renderService", "var_name": "_renderService"}, {"original_string": "@Autowired\n    private UserService _userService;", "modifier": "@Autowired\n    private", "type": "UserService", "declarator": "_userService", "var_name": "_userService"}, {"original_string": "@Autowired\n    private TrackerBundleService trackerBundleService;", "modifier": "@Autowired\n    private", "type": "TrackerBundleService", "declarator": "trackerBundleService", "var_name": "trackerBundleService"}, {"original_string": "@Autowired\n    private ProgramRuleService programRuleService;", "modifier": "@Autowired\n    private", "type": "ProgramRuleService", "declarator": "programRuleService", "var_name": "programRuleService"}, {"original_string": "@Autowired\n    private ProgramRuleActionService programRuleActionService;", "modifier": "@Autowired\n    private", "type": "ProgramRuleActionService", "declarator": "programRuleActionService", "var_name": "programRuleActionService"}, {"original_string": "@Autowired\n    private ProgramRuleVariableService programRuleVariableService;", "modifier": "@Autowired\n    private", "type": "ProgramRuleVariableService", "declarator": "programRuleVariableService", "var_name": "programRuleVariableService"}, {"original_string": "@Autowired\n    private SetMandatoryFieldImplementer implementerToTest;", "modifier": "@Autowired\n    private", "type": "SetMandatoryFieldImplementer", "declarator": "implementerToTest", "var_name": "implementerToTest"}], "file": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/programrule/SetMandatoryFieldImplementerTest.java"}, "test_case": {"identifier": "testValidateWithErrorMandatoryFieldsForEvents", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateWithErrorMandatoryFieldsForEvents()\n        throws IOException\n    {\n        TrackerBundleParams bundleParams = createBundleFromJson(\n            \"tracker/event_events_and_enrollment_with_null_data_element.json\" );\n\n        TrackerBundle trackerBundle = trackerBundleService.create( bundleParams );\n\n        trackerBundle = trackerBundleService.runRuleEngine( trackerBundle );\n\n        Map<String, List<String>> errors = implementerToTest.validateEvents( trackerBundle );\n\n        assertFalse( errors.isEmpty() );\n\n        errors.entrySet().stream()\n            .filter( e -> !e.getKey().equals( \"D9PbzJY8bJO\" ) )\n            .forEach( e -> assertTrue( e.getValue().isEmpty() ) );\n\n        errors.entrySet().stream()\n            .filter( e -> e.getKey().equals( \"D9PbzJY8bJO\" ) )\n            .forEach( e -> assertTrue( e.getValue().size() == 1 ) );\n    }", "signature": "void testValidateWithErrorMandatoryFieldsForEvents()", "full_signature": "@Test public void testValidateWithErrorMandatoryFieldsForEvents()", "class_method_signature": "SetMandatoryFieldImplementerTest.testValidateWithErrorMandatoryFieldsForEvents()", "testcase": true, "constructor": false, "invocations": ["createBundleFromJson", "create", "runRuleEngine", "validateEvents", "assertFalse", "isEmpty", "forEach", "filter", "stream", "entrySet", "equals", "getKey", "assertTrue", "isEmpty", "getValue", "forEach", "filter", "stream", "entrySet", "equals", "getKey", "assertTrue", "size", "getValue"]}, "focal_class": {"identifier": "SetMandatoryFieldImplementer", "superclass": "", "interfaces": "implements RuleActionValidator", "fields": [], "methods": [{"identifier": "getActionClass", "parameters": "()", "modifiers": "@Override public", "return": "Class", "signature": "Class getActionClass()", "full_signature": "@Override public Class getActionClass()", "class_method_signature": "SetMandatoryFieldImplementer.getActionClass()", "testcase": false, "constructor": false}, {"identifier": "validateEnrollments", "parameters": "( TrackerBundle bundle )", "modifiers": "@Override public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> validateEnrollments( TrackerBundle bundle )", "full_signature": "@Override public Map<String, List<String>> validateEnrollments( TrackerBundle bundle )", "class_method_signature": "SetMandatoryFieldImplementer.validateEnrollments( TrackerBundle bundle )", "testcase": false, "constructor": false}, {"identifier": "validateEvents", "parameters": "( TrackerBundle bundle )", "modifiers": "@Override public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> validateEvents( TrackerBundle bundle )", "full_signature": "@Override public Map<String, List<String>> validateEvents( TrackerBundle bundle )", "class_method_signature": "SetMandatoryFieldImplementer.validateEvents( TrackerBundle bundle )", "testcase": false, "constructor": false}, {"identifier": "isWarning", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWarning()", "full_signature": "@Override public boolean isWarning()", "class_method_signature": "SetMandatoryFieldImplementer.isWarning()", "testcase": false, "constructor": false}, {"identifier": "checkMandatoryTeiAttribute", "parameters": "( TrackedEntity tei, List<RuleEffect> effects )", "modifiers": "private", "return": "List<String>", "signature": "List<String> checkMandatoryTeiAttribute( TrackedEntity tei, List<RuleEffect> effects )", "full_signature": "private List<String> checkMandatoryTeiAttribute( TrackedEntity tei, List<RuleEffect> effects )", "class_method_signature": "SetMandatoryFieldImplementer.checkMandatoryTeiAttribute( TrackedEntity tei, List<RuleEffect> effects )", "testcase": false, "constructor": false}, {"identifier": "checkMandatoryDataElement", "parameters": "( Event event, List<RuleEffect> effects )", "modifiers": "private", "return": "List<String>", "signature": "List<String> checkMandatoryDataElement( Event event, List<RuleEffect> effects )", "full_signature": "private List<String> checkMandatoryDataElement( Event event, List<RuleEffect> effects )", "class_method_signature": "SetMandatoryFieldImplementer.checkMandatoryDataElement( Event event, List<RuleEffect> effects )", "testcase": false, "constructor": false}, {"identifier": "getEvent", "parameters": "( TrackerBundle bundle, String eventUid )", "modifiers": "private", "return": "Optional<Event>", "signature": "Optional<Event> getEvent( TrackerBundle bundle, String eventUid )", "full_signature": "private Optional<Event> getEvent( TrackerBundle bundle, String eventUid )", "class_method_signature": "SetMandatoryFieldImplementer.getEvent( TrackerBundle bundle, String eventUid )", "testcase": false, "constructor": false}, {"identifier": "getTrackedEntity", "parameters": "( TrackerBundle bundle, String teiUid )", "modifiers": "private", "return": "Optional<TrackedEntity>", "signature": "Optional<TrackedEntity> getTrackedEntity( TrackerBundle bundle, String teiUid )", "full_signature": "private Optional<TrackedEntity> getTrackedEntity( TrackerBundle bundle, String teiUid )", "class_method_signature": "SetMandatoryFieldImplementer.getTrackedEntity( TrackerBundle bundle, String teiUid )", "testcase": false, "constructor": false}, {"identifier": "getTrackedEntityFromEnrollment", "parameters": "( TrackerBundle bundle, String enrollmentUid )", "modifiers": "private", "return": "Optional<TrackedEntity>", "signature": "Optional<TrackedEntity> getTrackedEntityFromEnrollment( TrackerBundle bundle, String enrollmentUid )", "full_signature": "private Optional<TrackedEntity> getTrackedEntityFromEnrollment( TrackerBundle bundle, String enrollmentUid )", "class_method_signature": "SetMandatoryFieldImplementer.getTrackedEntityFromEnrollment( TrackerBundle bundle, String enrollmentUid )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/programrule/SetMandatoryFieldImplementer.java"}, "focal_method": {"identifier": "validateEvents", "parameters": "( TrackerBundle bundle )", "modifiers": "@Override public", "return": "Map<String, List<String>>", "body": "@Override\n    public Map<String, List<String>> validateEvents( TrackerBundle bundle )\n    {\n        Map<String, List<RuleEffect>> effects = getEffects( bundle.getEventRuleEffects() );\n\n        return effects.entrySet().stream()\n            .collect( Collectors.toMap( e -> e.getKey(),\n                e -> getEvent( bundle, e.getKey() )\n                    .map( tei -> checkMandatoryDataElement( tei, e.getValue() ) ).orElse( Lists.newArrayList() ) ) );\n    }", "signature": "Map<String, List<String>> validateEvents( TrackerBundle bundle )", "full_signature": "@Override public Map<String, List<String>> validateEvents( TrackerBundle bundle )", "class_method_signature": "SetMandatoryFieldImplementer.validateEvents( TrackerBundle bundle )", "testcase": false, "constructor": false, "invocations": ["getEffects", "getEventRuleEffects", "collect", "stream", "entrySet", "toMap", "getKey", "orElse", "map", "getEvent", "getKey", "checkMandatoryDataElement", "getValue", "newArrayList"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}