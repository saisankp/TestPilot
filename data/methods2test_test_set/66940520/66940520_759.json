{"test_class": {"identifier": "CachingMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Callable<Animal> FN = () -> null;", "modifier": "private static final", "type": "Callable<Animal>", "declarator": "FN = () -> null", "var_name": "FN"}], "file": "dhis-2/dhis-support/dhis-support-commons/src/test/java/org/hisp/dhis/commons/collection/CachingMapTest.java"}, "test_case": {"identifier": "testIsCacheLoaded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsCacheLoaded()\n    {\n        Set<Animal> animals = new HashSet<>();\n        animals.add( new Animal( 1, \"horse\" ) );\n        animals.add( new Animal( 3, \"cat\" ) );\n\n        CachingMap<Integer, Animal> cache = new CachingMap<Integer, Animal>();\n        \n        assertFalse( cache.isCacheLoaded() );\n        \n        cache.load( animals, a -> a.getId() );\n\n        assertTrue( cache.isCacheLoaded() );\n    }", "signature": "void testIsCacheLoaded()", "full_signature": "@Test public void testIsCacheLoaded()", "class_method_signature": "CachingMapTest.testIsCacheLoaded()", "testcase": true, "constructor": false, "invocations": ["add", "add", "assertFalse", "isCacheLoaded", "load", "getId", "assertTrue", "isCacheLoaded"]}, "focal_class": {"identifier": "CachingMap", "superclass": "extends HashMap<K, V>", "interfaces": "", "fields": [{"original_string": "private long cacheHitCount;", "modifier": "private", "type": "long", "declarator": "cacheHitCount", "var_name": "cacheHitCount"}, {"original_string": "private long cacheMissCount;", "modifier": "private", "type": "long", "declarator": "cacheMissCount", "var_name": "cacheMissCount"}, {"original_string": "private long cacheLoadCount;", "modifier": "private", "type": "long", "declarator": "cacheLoadCount", "var_name": "cacheLoadCount"}], "methods": [{"identifier": "get", "parameters": "( K key, Callable<V> callable )", "modifiers": "public", "return": "V", "signature": "V get( K key, Callable<V> callable )", "full_signature": "public V get( K key, Callable<V> callable )", "class_method_signature": "CachingMap.get( K key, Callable<V> callable )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( K key, Callable<V> callable, V defaultValue )", "modifiers": "public", "return": "V", "signature": "V get( K key, Callable<V> callable, V defaultValue )", "full_signature": "public V get( K key, Callable<V> callable, V defaultValue )", "class_method_signature": "CachingMap.get( K key, Callable<V> callable, V defaultValue )", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "( Collection<V> collection, Function<V, K> keyMapper )", "modifiers": "public", "return": "CachingMap<K, V>", "signature": "CachingMap<K, V> load( Collection<V> collection, Function<V, K> keyMapper )", "full_signature": "public CachingMap<K, V> load( Collection<V> collection, Function<V, K> keyMapper )", "class_method_signature": "CachingMap.load( Collection<V> collection, Function<V, K> keyMapper )", "testcase": false, "constructor": false}, {"identifier": "getCacheHitCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCacheHitCount()", "full_signature": "public long getCacheHitCount()", "class_method_signature": "CachingMap.getCacheHitCount()", "testcase": false, "constructor": false}, {"identifier": "getCacheMissCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCacheMissCount()", "full_signature": "public long getCacheMissCount()", "class_method_signature": "CachingMap.getCacheMissCount()", "testcase": false, "constructor": false}, {"identifier": "getCacheHitRatio", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getCacheHitRatio()", "full_signature": "public double getCacheHitRatio()", "class_method_signature": "CachingMap.getCacheHitRatio()", "testcase": false, "constructor": false}, {"identifier": "getCacheLoadCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCacheLoadCount()", "full_signature": "public long getCacheLoadCount()", "class_method_signature": "CachingMap.getCacheLoadCount()", "testcase": false, "constructor": false}, {"identifier": "isCacheLoaded", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCacheLoaded()", "full_signature": "public boolean isCacheLoaded()", "class_method_signature": "CachingMap.isCacheLoaded()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CachingMap.toString()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-support/dhis-support-commons/src/main/java/org/hisp/dhis/commons/collection/CachingMap.java"}, "focal_method": {"identifier": "isCacheLoaded", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isCacheLoaded()\n    {\n        return cacheLoadCount > 0;\n    }", "signature": "boolean isCacheLoaded()", "full_signature": "public boolean isCacheLoaded()", "class_method_signature": "CachingMap.isCacheLoaded()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}