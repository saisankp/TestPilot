{"test_class": {"identifier": "TestMorphlineInterceptor", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "private static final String RESOURCES_DIR = \"target/test-classes\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCES_DIR = \"target/test-classes\"", "var_name": "RESOURCES_DIR"}], "file": "flume-ng-sinks/flume-ng-morphline-solr-sink/src/test/java/org/apache/flume/sink/solr/morphline/TestMorphlineInterceptor.java"}, "test_case": {"identifier": "testReadClob", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testReadClob() throws Exception {\n    Context context = new Context();\n    context.put(MorphlineHandlerImpl.MORPHLINE_FILE_PARAM,\n                RESOURCES_DIR + \"/test-morphlines/readClob.conf\");\n    Event input = EventBuilder.withBody(\"foo\", Charsets.UTF_8);\n    input.getHeaders().put(\"name\", \"nadja\");\n    Event actual = build(context).intercept(input);\n    Event expected = EventBuilder.withBody(null,\n                                           ImmutableMap.of(\"name\", \"nadja\", Fields.MESSAGE, \"foo\"));\n    assertEqualsEvent(expected, actual);\n\n    List<Event> actualList = build(context).intercept(Collections.singletonList(input));\n    List<Event> expectedList = Collections.singletonList(expected);\n    assertEqualsEventList(expectedList, actualList);\n  }", "signature": "void testReadClob()", "full_signature": "@Test public void testReadClob()", "class_method_signature": "TestMorphlineInterceptor.testReadClob()", "testcase": true, "constructor": false, "invocations": ["put", "withBody", "put", "getHeaders", "intercept", "build", "withBody", "of", "assertEqualsEvent", "intercept", "build", "singletonList", "singletonList", "assertEqualsEventList"]}, "focal_class": {"identifier": "MorphlineInterceptor", "superclass": "", "interfaces": "implements Interceptor", "fields": [{"original_string": "private final Context context;", "modifier": "private final", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private final Queue<LocalMorphlineInterceptor> pool = new ConcurrentLinkedQueue<>();", "modifier": "private final", "type": "Queue<LocalMorphlineInterceptor>", "declarator": "pool = new ConcurrentLinkedQueue<>()", "var_name": "pool"}], "methods": [{"identifier": "MorphlineInterceptor", "parameters": "(Context context)", "modifiers": "protected", "return": "", "signature": " MorphlineInterceptor(Context context)", "full_signature": "protected  MorphlineInterceptor(Context context)", "class_method_signature": "MorphlineInterceptor.MorphlineInterceptor(Context context)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "MorphlineInterceptor.initialize()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MorphlineInterceptor.close()", "testcase": false, "constructor": false}, {"identifier": "intercept", "parameters": "(List<Event> events)", "modifiers": "@Override public", "return": "List<Event>", "signature": "List<Event> intercept(List<Event> events)", "full_signature": "@Override public List<Event> intercept(List<Event> events)", "class_method_signature": "MorphlineInterceptor.intercept(List<Event> events)", "testcase": false, "constructor": false}, {"identifier": "intercept", "parameters": "(Event event)", "modifiers": "@Override public", "return": "Event", "signature": "Event intercept(Event event)", "full_signature": "@Override public Event intercept(Event event)", "class_method_signature": "MorphlineInterceptor.intercept(Event event)", "testcase": false, "constructor": false}, {"identifier": "returnToPool", "parameters": "(LocalMorphlineInterceptor interceptor)", "modifiers": "private", "return": "void", "signature": "void returnToPool(LocalMorphlineInterceptor interceptor)", "full_signature": "private void returnToPool(LocalMorphlineInterceptor interceptor)", "class_method_signature": "MorphlineInterceptor.returnToPool(LocalMorphlineInterceptor interceptor)", "testcase": false, "constructor": false}, {"identifier": "borrowFromPool", "parameters": "()", "modifiers": "private", "return": "LocalMorphlineInterceptor", "signature": "LocalMorphlineInterceptor borrowFromPool()", "full_signature": "private LocalMorphlineInterceptor borrowFromPool()", "class_method_signature": "MorphlineInterceptor.borrowFromPool()", "testcase": false, "constructor": false}], "file": "flume-ng-sinks/flume-ng-morphline-solr-sink/src/main/java/org/apache/flume/sink/solr/morphline/MorphlineInterceptor.java"}, "focal_method": {"identifier": "intercept", "parameters": "(List<Event> events)", "modifiers": "@Override public", "return": "List<Event>", "body": "@Override\n  public List<Event> intercept(List<Event> events) {\n    LocalMorphlineInterceptor interceptor = borrowFromPool();\n    List<Event> results = interceptor.intercept(events);\n    returnToPool(interceptor);\n    return results;\n  }", "signature": "List<Event> intercept(List<Event> events)", "full_signature": "@Override public List<Event> intercept(List<Event> events)", "class_method_signature": "MorphlineInterceptor.intercept(List<Event> events)", "testcase": false, "constructor": false, "invocations": ["borrowFromPool", "intercept", "returnToPool"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}