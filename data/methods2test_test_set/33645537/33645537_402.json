{"test_class": {"identifier": "FindNthMostRepeatedElementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FindNthMostRepeatedElement findNthMostRepeatedElement;", "modifier": "private", "type": "FindNthMostRepeatedElement", "declarator": "findNthMostRepeatedElement", "var_name": "findNthMostRepeatedElement"}], "file": "algs/src/test/java/com/github/pedrovgs/problem45/FindNthMostRepeatedElementTest.java"}, "test_case": {"identifier": "shouldFindNthMostRepeatedElement", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldFindNthMostRepeatedElement() {\n    int[] numbers = { 1, 1, 2, 3, 4, 5, 2, 2, 2, 4, 4, 6, 7, 4, 9, 214, 4, 5, };\n\n    int result = findNthMostRepeatedElement.find(numbers, 2);\n\n    assertEquals(1, result);\n  }", "signature": "void shouldFindNthMostRepeatedElement()", "full_signature": "@Test public void shouldFindNthMostRepeatedElement()", "class_method_signature": "FindNthMostRepeatedElementTest.shouldFindNthMostRepeatedElement()", "testcase": true, "constructor": false, "invocations": ["find", "assertEquals"]}, "focal_class": {"identifier": "FindNthMostRepeatedElement", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "find", "parameters": "(int[] numbers, int position)", "modifiers": "public", "return": "int", "signature": "int find(int[] numbers, int position)", "full_signature": "public int find(int[] numbers, int position)", "class_method_signature": "FindNthMostRepeatedElement.find(int[] numbers, int position)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(int[] numbers, int position)", "modifiers": "private", "return": "void", "signature": "void validateInput(int[] numbers, int position)", "full_signature": "private void validateInput(int[] numbers, int position)", "class_method_signature": "FindNthMostRepeatedElement.validateInput(int[] numbers, int position)", "testcase": false, "constructor": false}, {"identifier": "validateResult", "parameters": "(Integer result)", "modifiers": "private", "return": "void", "signature": "void validateResult(Integer result)", "full_signature": "private void validateResult(Integer result)", "class_method_signature": "FindNthMostRepeatedElement.validateResult(Integer result)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem45/FindNthMostRepeatedElement.java"}, "focal_method": {"identifier": "find", "parameters": "(int[] numbers, int position)", "modifiers": "public", "return": "int", "body": "public int find(int[] numbers, int position) {\n    validateInput(numbers, position);\n    Integer result = null;\n    Map<Integer, Integer> counter = new HashMap<Integer, Integer>();\n    for (int i : numbers) {\n      if (counter.get(i) == null) {\n        counter.put(i, 1);\n      } else {\n        counter.put(i, counter.get(i) + 1);\n      }\n    }\n    for (Integer candidate : counter.keySet()) {\n      if (counter.get(candidate) == position) {\n        result = candidate;\n        break;\n      }\n    }\n    validateResult(result);\n    return result;\n  }", "signature": "int find(int[] numbers, int position)", "full_signature": "public int find(int[] numbers, int position)", "class_method_signature": "FindNthMostRepeatedElement.find(int[] numbers, int position)", "testcase": false, "constructor": false, "invocations": ["validateInput", "get", "put", "put", "get", "keySet", "get", "validateResult"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}