{"test_class": {"identifier": "AverageTenderAndAwardPeriodsControllerTest", "superclass": "extends AbstractEndPointControllerTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AverageTenderAndAwardPeriodsController averageTenderAndAwardPeriodsController;", "modifier": "@Autowired\n    private", "type": "AverageTenderAndAwardPeriodsController", "declarator": "averageTenderAndAwardPeriodsController", "var_name": "averageTenderAndAwardPeriodsController"}], "file": "web/src/test/java/org/devgateway/ocds/web/rest/controller/AverageTenderAndAwardPeriodsControllerTest.java"}, "test_case": {"identifier": "qualityAverageTenderPeriod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void qualityAverageTenderPeriod() throws Exception {\n        final List<Document> qualityAverageTenderPeriod = averageTenderAndAwardPeriodsController\n                .qualityAverageTenderPeriod(new DefaultFilterPagingRequest());\n\n        final Document first = qualityAverageTenderPeriod.get(0);\n        int totalTenderWithStartEndDates = (int) first\n                .get(AverageTenderAndAwardPeriodsController.Keys.TOTAL_TENDER_WITH_START_END_DATES);\n        int totalTenders = (int) first\n                .get(AverageTenderAndAwardPeriodsController.Keys.TOTAL_TENDERS);\n        double percentageTenderWithStartEndDates = (double) first\n                .get(AverageTenderAndAwardPeriodsController.Keys.PERCENTAGE_TENDER_WITH_START_END_DATES);\n        Assert.assertEquals(3, totalTenderWithStartEndDates);\n        Assert.assertEquals(3, totalTenders);\n        Assert.assertEquals(100.0, percentageTenderWithStartEndDates, 0);\n    }", "signature": "void qualityAverageTenderPeriod()", "full_signature": "@Test public void qualityAverageTenderPeriod()", "class_method_signature": "AverageTenderAndAwardPeriodsControllerTest.qualityAverageTenderPeriod()", "testcase": true, "constructor": false, "invocations": ["qualityAverageTenderPeriod", "get", "get", "get", "get", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "AverageTenderAndAwardPeriodsController", "superclass": "extends GenericOCDSController", "interfaces": "", "fields": [], "methods": [{"identifier": "averageTenderPeriod", "parameters": "(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Calculates the average tender period, per each year. The year is taken from \" + \"tender.tenderPeriod.startDate and the duration is taken by counting the days\" + \"between tender.tenderPeriod.endDate and tender.tenderPeriod.startDate\") @RequestMapping(value = \"/api/averageTenderPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> averageTenderPeriod(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Calculates the average tender period, per each year. The year is taken from \" + \"tender.tenderPeriod.startDate and the duration is taken by counting the days\" + \"between tender.tenderPeriod.endDate and tender.tenderPeriod.startDate\") @RequestMapping(value = \"/api/averageTenderPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> averageTenderPeriod(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "AverageTenderAndAwardPeriodsController.averageTenderPeriod(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "qualityAverageTenderPeriod", "parameters": "(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Quality indicator for averageTenderPeriod endpoint, \" + \"showing the percentage of tenders that have start and end dates vs the total tenders in the system\") @RequestMapping(value = \"/api/qualityAverageTenderPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> qualityAverageTenderPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Quality indicator for averageTenderPeriod endpoint, \" + \"showing the percentage of tenders that have start and end dates vs the total tenders in the system\") @RequestMapping(value = \"/api/qualityAverageTenderPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> qualityAverageTenderPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "class_method_signature": "AverageTenderAndAwardPeriodsController.qualityAverageTenderPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "averageAwardPeriod", "parameters": "(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Calculates the average award period, per each year. The year is taken from \" + \"awards.date and the duration is taken by counting the days\" + \"between tender.tenderPeriod.endDate and tender.tenderPeriod.startDate. The award has to be active.\") @RequestMapping(value = \"/api/averageAwardPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> averageAwardPeriod(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Calculates the average award period, per each year. The year is taken from \" + \"awards.date and the duration is taken by counting the days\" + \"between tender.tenderPeriod.endDate and tender.tenderPeriod.startDate. The award has to be active.\") @RequestMapping(value = \"/api/averageAwardPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> averageAwardPeriod(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "AverageTenderAndAwardPeriodsController.averageAwardPeriod(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "qualityAverageAwardPeriod", "parameters": "(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Quality indicator for averageAwardPeriod endpoint, \" + \"showing the percentage of awards that have start and end dates vs the total tenders in the system\") @RequestMapping(value = \"/api/qualityAverageAwardPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> qualityAverageAwardPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Quality indicator for averageAwardPeriod endpoint, \" + \"showing the percentage of awards that have start and end dates vs the total tenders in the system\") @RequestMapping(value = \"/api/qualityAverageAwardPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> qualityAverageAwardPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "class_method_signature": "AverageTenderAndAwardPeriodsController.qualityAverageAwardPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "testcase": false, "constructor": false}], "file": "web/src/main/java/org/devgateway/ocds/web/rest/controller/AverageTenderAndAwardPeriodsController.java"}, "focal_method": {"identifier": "qualityAverageTenderPeriod", "parameters": "(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Quality indicator for averageTenderPeriod endpoint, \" + \"showing the percentage of tenders that have start and end dates vs the total tenders in the system\") @RequestMapping(value = \"/api/qualityAverageTenderPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "body": "@ApiOperation(value = \"Quality indicator for averageTenderPeriod endpoint, \"\n            + \"showing the percentage of tenders that have start and end dates vs the total tenders in the system\")\n    @RequestMapping(value = \"/api/qualityAverageTenderPeriod\",\n            method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\")\n    public List<Document> qualityAverageTenderPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter) {\n\n        DBObject project = new BasicDBObject();\n        project.put(Fields.UNDERSCORE_ID, 0);\n        project.put(\n                \"tenderWithStartEndDates\",\n                new BasicDBObject(\n                        \"$cond\",\n                        Arrays.asList(\n                                new BasicDBObject(\"$and\", Arrays.asList(\n                                        new BasicDBObject(\n                                                \"$gt\",\n                                                Arrays.asList(\n                                                        ref(MongoConstants.FieldNames.TENDER_PERIOD_START_DATE),\n                                                        null\n                                                )\n                                        ),\n                                        new BasicDBObject(\n                                                \"$gt\",\n                                                Arrays.asList(\n                                                        ref(MongoConstants.FieldNames.TENDER_PERIOD_END_DATE),\n                                                        null\n                                                )\n                                        )\n                                )),\n                                1, 0\n                        )\n                )\n        );\n\n        DBObject project1 = new BasicDBObject();\n        project1.put(Keys.TOTAL_TENDER_WITH_START_END_DATES, 1);\n        project1.put(Keys.TOTAL_TENDERS, 1);\n        project1.put(\n                Keys.PERCENTAGE_TENDER_WITH_START_END_DATES,\n                new BasicDBObject(\"$multiply\", Arrays.asList(\n                        new BasicDBObject(\"$divide\", Arrays.asList(\"$totalTenderWithStartEndDates\", \"$totalTenders\")),\n                        100\n                ))\n        );\n\n        Aggregation agg = newAggregation(\n                match(getDefaultFilterCriteria(filter)),\n                new CustomProjectionOperation(project),\n                group().sum(\"tenderWithStartEndDates\").as(Keys.TOTAL_TENDER_WITH_START_END_DATES).count().\n                        as(Keys.TOTAL_TENDERS),\n                new CustomProjectionOperation(project1)\n        );\n\n        return releaseAgg(agg);\n    }", "signature": "List<Document> qualityAverageTenderPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Quality indicator for averageTenderPeriod endpoint, \" + \"showing the percentage of tenders that have start and end dates vs the total tenders in the system\") @RequestMapping(value = \"/api/qualityAverageTenderPeriod\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> qualityAverageTenderPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "class_method_signature": "AverageTenderAndAwardPeriodsController.qualityAverageTenderPeriod(@ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "testcase": false, "constructor": false, "invocations": ["put", "put", "asList", "asList", "asList", "ref", "asList", "ref", "put", "put", "put", "asList", "asList", "newAggregation", "match", "getDefaultFilterCriteria", "as", "count", "as", "sum", "group", "releaseAgg"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}