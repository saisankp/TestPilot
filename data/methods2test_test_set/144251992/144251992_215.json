{"test_class": {"identifier": "UserDataLobNormalizerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UserDataLobNormalizer userDataLobNormalizer;", "modifier": "private", "type": "UserDataLobNormalizer", "declarator": "userDataLobNormalizer", "var_name": "userDataLobNormalizer"}, {"original_string": "@Mock\n    private UserData userDataMock;", "modifier": "@Mock\n    private", "type": "UserData", "declarator": "userDataMock", "var_name": "userDataMock"}], "file": "backend/project-board/src/test/java/de/adesso/projectboard/base/normalizer/UserDataLobNormalizerTest.java"}, "test_case": {"identifier": "getLobOfReturnsLobOfUserData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLobOfReturnsLobOfUserData() {\n        // given\n        var expectedLob = \"LOB Test 1\";\n\n        given(userDataMock.getLob()).willReturn(expectedLob);\n\n        // when\n        var actualLob = userDataLobNormalizer.getFieldValue(userDataMock);\n\n        // then\n        assertThat(actualLob).isEqualTo(expectedLob);\n    }", "signature": "void getLobOfReturnsLobOfUserData()", "full_signature": "@Test public void getLobOfReturnsLobOfUserData()", "class_method_signature": "UserDataLobNormalizerTest.getLobOfReturnsLobOfUserData()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getLob", "getFieldValue", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "UserDataLobNormalizer", "superclass": "extends FieldNormalizer<UserData>", "interfaces": "", "fields": [], "methods": [{"identifier": "UserDataLobNormalizer", "parameters": "(Set<RootTermDistanceCalculator> lobDistanceCalculators)", "modifiers": "protected", "return": "", "signature": " UserDataLobNormalizer(Set<RootTermDistanceCalculator> lobDistanceCalculators)", "full_signature": "protected  UserDataLobNormalizer(Set<RootTermDistanceCalculator> lobDistanceCalculators)", "class_method_signature": "UserDataLobNormalizer.UserDataLobNormalizer(Set<RootTermDistanceCalculator> lobDistanceCalculators)", "testcase": false, "constructor": true}, {"identifier": "getFieldValue", "parameters": "(UserData fieldContainingObject)", "modifiers": "@Override", "return": "String", "signature": "String getFieldValue(UserData fieldContainingObject)", "full_signature": "@Override String getFieldValue(UserData fieldContainingObject)", "class_method_signature": "UserDataLobNormalizer.getFieldValue(UserData fieldContainingObject)", "testcase": false, "constructor": false}, {"identifier": "setNormalizedFieldValue", "parameters": "(UserData fieldContainingObject, String normalizedValue)", "modifiers": "@Override", "return": "UserData", "signature": "UserData setNormalizedFieldValue(UserData fieldContainingObject, String normalizedValue)", "full_signature": "@Override UserData setNormalizedFieldValue(UserData fieldContainingObject, String normalizedValue)", "class_method_signature": "UserDataLobNormalizer.setNormalizedFieldValue(UserData fieldContainingObject, String normalizedValue)", "testcase": false, "constructor": false}], "file": "backend/project-board/src/main/java/de/adesso/projectboard/base/normalizer/UserDataLobNormalizer.java"}, "focal_method": {"identifier": "getFieldValue", "parameters": "(UserData fieldContainingObject)", "modifiers": "@Override", "return": "String", "body": "@Override\n    String getFieldValue(UserData fieldContainingObject) {\n        return fieldContainingObject.getLob();\n    }", "signature": "String getFieldValue(UserData fieldContainingObject)", "full_signature": "@Override String getFieldValue(UserData fieldContainingObject)", "class_method_signature": "UserDataLobNormalizer.getFieldValue(UserData fieldContainingObject)", "testcase": false, "constructor": false, "invocations": ["getLob"]}, "repository": {"repo_id": 144251992, "url": "https://github.com/adessoAG/project-board", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 2608, "license": "licensed"}}