{"test_class": {"identifier": "CategorizedColorTest", "superclass": "", "interfaces": "", "fields": [], "file": "legend/src/test/java/org/orbisgis/legend/structure/categorize/CategorizedColorTest.java"}, "test_case": {"identifier": "testRemoveFromLiteral", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveFromLiteral(){\n        CategorizedColor cs = new CategorizedColor(new ColorLiteral(\"#EDCBA0\"));\n        assertNull(cs.remove(50.0));\n        assertNull(cs.remove(Double.NEGATIVE_INFINITY));\n    }", "signature": "void testRemoveFromLiteral()", "full_signature": "@Test public void testRemoveFromLiteral()", "class_method_signature": "CategorizedColorTest.testRemoveFromLiteral()", "testcase": true, "constructor": false, "invocations": ["assertNull", "remove", "assertNull", "remove"]}, "focal_class": {"identifier": "CategorizedColor", "superclass": "extends CategorizedLegend<Color>", "interfaces": "", "fields": [{"original_string": "private ColorParameter parameter = new ColorLiteral();", "modifier": "private", "type": "ColorParameter", "declarator": "parameter = new ColorLiteral()", "var_name": "parameter"}], "methods": [{"identifier": "CategorizedColor", "parameters": "(ColorParameter sp)", "modifiers": "public", "return": "", "signature": " CategorizedColor(ColorParameter sp)", "full_signature": "public  CategorizedColor(ColorParameter sp)", "class_method_signature": "CategorizedColor.CategorizedColor(ColorParameter sp)", "testcase": false, "constructor": true}, {"identifier": "getParameter", "parameters": "()", "modifiers": "@Override public", "return": "SeParameter", "signature": "SeParameter getParameter()", "full_signature": "@Override public SeParameter getParameter()", "class_method_signature": "CategorizedColor.getParameter()", "testcase": false, "constructor": false}, {"identifier": "setParameter", "parameters": "(ColorParameter param)", "modifiers": "public", "return": "void", "signature": "void setParameter(ColorParameter param)", "full_signature": "public void setParameter(ColorParameter param)", "class_method_signature": "CategorizedColor.setParameter(ColorParameter param)", "testcase": false, "constructor": false}, {"identifier": "getFallbackValue", "parameters": "()", "modifiers": "public", "return": "Color", "signature": "Color getFallbackValue()", "full_signature": "public Color getFallbackValue()", "class_method_signature": "CategorizedColor.getFallbackValue()", "testcase": false, "constructor": false}, {"identifier": "setFallbackValue", "parameters": "(Color value)", "modifiers": "public", "return": "void", "signature": "void setFallbackValue(Color value)", "full_signature": "public void setFallbackValue(Color value)", "class_method_signature": "CategorizedColor.setFallbackValue(Color value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Color", "signature": "Color get(Double d)", "full_signature": "@Override public Color get(Double d)", "class_method_signature": "CategorizedColor.get(Double d)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Double d, Color v)", "modifiers": "@Override public", "return": "void", "signature": "void put(Double d, Color v)", "full_signature": "@Override public void put(Double d, Color v)", "class_method_signature": "CategorizedColor.put(Double d, Color v)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Color", "signature": "Color remove(Double d)", "full_signature": "@Override public Color remove(Double d)", "class_method_signature": "CategorizedColor.remove(Double d)", "testcase": false, "constructor": false}, {"identifier": "getFromLower", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Color", "signature": "Color getFromLower(Double d)", "full_signature": "@Override public Color getFromLower(Double d)", "class_method_signature": "CategorizedColor.getFromLower(Double d)", "testcase": false, "constructor": false}], "file": "legend/src/main/java/org/orbisgis/legend/structure/categorize/CategorizedColor.java"}, "focal_method": {"identifier": "remove", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Color", "body": "@Override\n    public Color remove(Double d){\n        if(d==null){\n            throw new NullPointerException(\"The input threshold must not be null\");\n        }\n        if(parameter instanceof ColorLiteral){\n            return null;\n        } else {\n            Categorize2Color c2s = (Categorize2Color) parameter;\n            ColorParameter ret = c2s.remove(new RealLiteral(d));\n            if(ret == null){\n                return null;\n            } else if(c2s.getNumClasses()==1 && c2s.getFallbackValue().equals(c2s.get(0))){\n                parameter = new ColorLiteral(c2s.getFallbackValue().getColor(null));\n            }\n            if(ret instanceof ColorLiteral){\n                try{\n                    return ret.getColor(null);\n                } catch (ParameterException pe){\n                    throw new IllegalStateException(\"We've failed at retrieved the value of a literal. \" +\n                            \"Something is going really wrong here.\");\n                }\n            } else {\n                throw new IllegalStateException(\"We're not supposed to have values that are not ColorLiteral in this categorize.\");\n            }\n        }\n    }", "signature": "Color remove(Double d)", "full_signature": "@Override public Color remove(Double d)", "class_method_signature": "CategorizedColor.remove(Double d)", "testcase": false, "constructor": false, "invocations": ["remove", "getNumClasses", "equals", "getFallbackValue", "get", "getColor", "getFallbackValue", "getColor"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}