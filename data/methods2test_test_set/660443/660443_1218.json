{"test_class": {"identifier": "AtomRefinableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static IChemObjectBuilder builder = SilentChemObjectBuilder.getInstance();", "modifier": "public static", "type": "IChemObjectBuilder", "declarator": "builder = SilentChemObjectBuilder.getInstance()", "var_name": "builder"}], "file": "tool/group/src/test/java/org/openscience/cdk/group/AtomRefinableTest.java"}, "test_case": {"identifier": "getConnectivity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getConnectivity() {\n        String acpString = \"C0C1C2C3 0:1(1),1:2(2),2:3(3)\";\n        IAtomContainer ac = AtomContainerPrinter.fromString(acpString, builder);\n        AtomRefinable refinable = new AtomRefinable(ac);\n        assertEquals(1, refinable.getConnectivity(0, 1));\n        assertEquals(2, refinable.getConnectivity(1, 2));\n        assertEquals(3, refinable.getConnectivity(2, 3));\n    }", "signature": "void getConnectivity()", "full_signature": "@Test public void getConnectivity()", "class_method_signature": "AtomRefinableTest.getConnectivity()", "testcase": true, "constructor": false, "invocations": ["fromString", "assertEquals", "getConnectivity", "assertEquals", "getConnectivity", "assertEquals", "getConnectivity"]}, "focal_class": {"identifier": "AtomRefinable", "superclass": "", "interfaces": "implements Refinable", "fields": [{"original_string": "private final IAtomContainer atomContainer;", "modifier": "private final", "type": "IAtomContainer", "declarator": "atomContainer", "var_name": "atomContainer"}, {"original_string": "private int[][] connectionTable;", "modifier": "private", "type": "int[][]", "declarator": "connectionTable", "var_name": "connectionTable"}, {"original_string": "private int[][] bondOrders;", "modifier": "private", "type": "int[][]", "declarator": "bondOrders", "var_name": "bondOrders"}, {"original_string": "private boolean ignoreElements;", "modifier": "private", "type": "boolean", "declarator": "ignoreElements", "var_name": "ignoreElements"}, {"original_string": "private boolean ignoreBondOrders;", "modifier": "private", "type": "boolean", "declarator": "ignoreBondOrders", "var_name": "ignoreBondOrders"}, {"original_string": "private int maxBondOrder;", "modifier": "private", "type": "int", "declarator": "maxBondOrder", "var_name": "maxBondOrder"}], "methods": [{"identifier": "AtomRefinable", "parameters": "(IAtomContainer atomContainer)", "modifiers": "public", "return": "", "signature": " AtomRefinable(IAtomContainer atomContainer)", "full_signature": "public  AtomRefinable(IAtomContainer atomContainer)", "class_method_signature": "AtomRefinable.AtomRefinable(IAtomContainer atomContainer)", "testcase": false, "constructor": true}, {"identifier": "AtomRefinable", "parameters": "(IAtomContainer atomContainer, boolean ignoreElements, boolean ignoreBondOrders)", "modifiers": "public", "return": "", "signature": " AtomRefinable(IAtomContainer atomContainer, boolean ignoreElements, boolean ignoreBondOrders)", "full_signature": "public  AtomRefinable(IAtomContainer atomContainer, boolean ignoreElements, boolean ignoreBondOrders)", "class_method_signature": "AtomRefinable.AtomRefinable(IAtomContainer atomContainer, boolean ignoreElements, boolean ignoreBondOrders)", "testcase": false, "constructor": true}, {"identifier": "neighboursInBlock", "parameters": "(Set<Integer> block, int vertexIndex)", "modifiers": "@Override public", "return": "Invariant", "signature": "Invariant neighboursInBlock(Set<Integer> block, int vertexIndex)", "full_signature": "@Override public Invariant neighboursInBlock(Set<Integer> block, int vertexIndex)", "class_method_signature": "AtomRefinable.neighboursInBlock(Set<Integer> block, int vertexIndex)", "testcase": false, "constructor": false}, {"identifier": "getSimpleInvariant", "parameters": "(Set<Integer> block, int vertexIndex)", "modifiers": "private", "return": "Invariant", "signature": "Invariant getSimpleInvariant(Set<Integer> block, int vertexIndex)", "full_signature": "private Invariant getSimpleInvariant(Set<Integer> block, int vertexIndex)", "class_method_signature": "AtomRefinable.getSimpleInvariant(Set<Integer> block, int vertexIndex)", "testcase": false, "constructor": false}, {"identifier": "getMultipleInvariant", "parameters": "(Set<Integer> block, int vertexIndex)", "modifiers": "private", "return": "Invariant", "signature": "Invariant getMultipleInvariant(Set<Integer> block, int vertexIndex)", "full_signature": "private Invariant getMultipleInvariant(Set<Integer> block, int vertexIndex)", "class_method_signature": "AtomRefinable.getMultipleInvariant(Set<Integer> block, int vertexIndex)", "testcase": false, "constructor": false}, {"identifier": "getVertexCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getVertexCount()", "full_signature": "@Override public int getVertexCount()", "class_method_signature": "AtomRefinable.getVertexCount()", "testcase": false, "constructor": false}, {"identifier": "getConnectivity", "parameters": "(int vertexI, int vertexJ)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectivity(int vertexI, int vertexJ)", "full_signature": "@Override public int getConnectivity(int vertexI, int vertexJ)", "class_method_signature": "AtomRefinable.getConnectivity(int vertexI, int vertexJ)", "testcase": false, "constructor": false}, {"identifier": "getConnectedIndices", "parameters": "(int vertexIndex)", "modifiers": "private", "return": "int[]", "signature": "int[] getConnectedIndices(int vertexIndex)", "full_signature": "private int[] getConnectedIndices(int vertexIndex)", "class_method_signature": "AtomRefinable.getConnectedIndices(int vertexIndex)", "testcase": false, "constructor": false}, {"identifier": "getInitialPartition", "parameters": "()", "modifiers": "@Override public", "return": "Partition", "signature": "Partition getInitialPartition()", "full_signature": "@Override public Partition getInitialPartition()", "class_method_signature": "AtomRefinable.getInitialPartition()", "testcase": false, "constructor": false}, {"identifier": "setupConnectionTable", "parameters": "(IAtomContainer atomContainer)", "modifiers": "private", "return": "void", "signature": "void setupConnectionTable(IAtomContainer atomContainer)", "full_signature": "private void setupConnectionTable(IAtomContainer atomContainer)", "class_method_signature": "AtomRefinable.setupConnectionTable(IAtomContainer atomContainer)", "testcase": false, "constructor": false}], "file": "tool/group/src/main/java/org/openscience/cdk/group/AtomRefinable.java"}, "focal_method": {"identifier": "getConnectivity", "parameters": "(int vertexI, int vertexJ)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getConnectivity(int vertexI, int vertexJ) {\n        int indexInRow;\n        int maxRowIndex = connectionTable[vertexI].length;\n        for (indexInRow = 0; indexInRow < maxRowIndex; indexInRow++) {\n            if (connectionTable[vertexI][indexInRow] == vertexJ) {\n                break;\n            }\n        }\n        if (ignoreBondOrders) {\n            if (indexInRow < maxRowIndex) {\n                return 1;\n            } else {\n                return 0;\n            }\n        } else {\n            if (indexInRow < maxRowIndex) {\n                return bondOrders[vertexI][indexInRow];\n            } else {\n                return 0;\n            }\n        }\n    }", "signature": "int getConnectivity(int vertexI, int vertexJ)", "full_signature": "@Override public int getConnectivity(int vertexI, int vertexJ)", "class_method_signature": "AtomRefinable.getConnectivity(int vertexI, int vertexJ)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}