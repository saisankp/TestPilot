{"test_class": {"identifier": "SplitMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "splitmap/src/test/java/com/openkappa/splitmap/SplitMapTest.java"}, "test_case": {"identifier": "testCardinality", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCardinality() {\n    SplitMapPageWriter writer = new SplitMapPageWriter();\n    writer.add(1);\n    writer.add(1 << 14);\n    writer.add(1 << 16 | 1);\n    writer.add(1 << 17);\n    assertEquals(writer.toSplitMap().getCardinality(), 4);\n  }", "signature": "void testCardinality()", "full_signature": "@Test public void testCardinality()", "class_method_signature": "SplitMapTest.testCardinality()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "assertEquals", "getCardinality", "toSplitMap"]}, "focal_class": {"identifier": "SplitMap", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final PrefixIndex<Container> index;", "modifier": "private final", "type": "PrefixIndex<Container>", "declarator": "index", "var_name": "index"}, {"original_string": "private final KeyInvolution involution;", "modifier": "private final", "type": "KeyInvolution", "declarator": "involution", "var_name": "involution"}], "methods": [{"identifier": "SplitMap", "parameters": "(PrefixIndex<Container> index, KeyInvolution involution)", "modifiers": "public", "return": "", "signature": " SplitMap(PrefixIndex<Container> index, KeyInvolution involution)", "full_signature": "public  SplitMap(PrefixIndex<Container> index, KeyInvolution involution)", "class_method_signature": "SplitMap.SplitMap(PrefixIndex<Container> index, KeyInvolution involution)", "testcase": false, "constructor": true}, {"identifier": "SplitMap", "parameters": "(PrefixIndex<Container> index)", "modifiers": "public", "return": "", "signature": " SplitMap(PrefixIndex<Container> index)", "full_signature": "public  SplitMap(PrefixIndex<Container> index)", "class_method_signature": "SplitMap.SplitMap(PrefixIndex<Container> index)", "testcase": false, "constructor": true}, {"identifier": "SplitMap", "parameters": "(KeyInvolution involution)", "modifiers": "public", "return": "", "signature": " SplitMap(KeyInvolution involution)", "full_signature": "public  SplitMap(KeyInvolution involution)", "class_method_signature": "SplitMap.SplitMap(KeyInvolution involution)", "testcase": false, "constructor": true}, {"identifier": "insert", "parameters": "(short key, Container region)", "modifiers": "public", "return": "void", "signature": "void insert(short key, Container region)", "full_signature": "public void insert(short key, Container region)", "class_method_signature": "SplitMap.insert(short key, Container region)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(int value)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(int value)", "full_signature": "public boolean contains(int value)", "class_method_signature": "SplitMap.contains(int value)", "testcase": false, "constructor": false}, {"identifier": "getCardinality", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCardinality()", "full_signature": "public long getCardinality()", "class_method_signature": "SplitMap.getCardinality()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "SplitMap.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "stream", "parameters": "()", "modifiers": "public", "return": "Stream<PrefixIndex<Container>>", "signature": "Stream<PrefixIndex<Container>> stream()", "full_signature": "public Stream<PrefixIndex<Container>> stream()", "class_method_signature": "SplitMap.stream()", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "()", "modifiers": "", "return": "PrefixIndex<Container>", "signature": "PrefixIndex<Container> getIndex()", "full_signature": " PrefixIndex<Container> getIndex()", "class_method_signature": "SplitMap.getIndex()", "testcase": false, "constructor": false}], "file": "splitmap/src/main/java/com/openkappa/splitmap/SplitMap.java"}, "focal_method": {"identifier": "getCardinality", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getCardinality() {\n    return index.reduceLong(0L, Container::getCardinality, (x, y) -> x + y);\n  }", "signature": "long getCardinality()", "full_signature": "public long getCardinality()", "class_method_signature": "SplitMap.getCardinality()", "testcase": false, "constructor": false, "invocations": ["reduceLong"]}, "repository": {"repo_id": 120205336, "url": "https://github.com/richardstartin/splitmap", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 14, "size": 253, "license": "licensed"}}