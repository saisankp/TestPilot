{"test_class": {"identifier": "AWSZTSHealthNotificationTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ZTSClientNotification ztsClientNotification;", "modifier": "private", "type": "ZTSClientNotification", "declarator": "ztsClientNotification", "var_name": "ztsClientNotification"}, {"original_string": "private DataStore dataStore;", "modifier": "private", "type": "DataStore", "declarator": "dataStore", "var_name": "dataStore"}, {"original_string": "private final String userDomainPrefix = \"user.\";", "modifier": "private final", "type": "String", "declarator": "userDomainPrefix = \"user.\"", "var_name": "userDomainPrefix"}, {"original_string": "private final String serverName = \"testServer\";", "modifier": "private final", "type": "String", "declarator": "serverName = \"testServer\"", "var_name": "serverName"}], "file": "servers/zts/src/test/java/com/yahoo/athenz/zts/notification/AWSZTSHealthNotificationTaskTest.java"}, "test_case": {"identifier": "testGetNotifications", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNotifications() {\n        System.setProperty(ZTSConsts.ZTS_PROP_NOTIFICATION_AWS_HEALTH_DOMAIN, \"testDomain\");\n\n        ZTSClientNotification clientNotification = new ZTSClientNotification(\n                \"zts.url\",\n                \"role\",\n                \"AWS\",\n                1592346376,\n                false,\n                \"testDomain\"\n        );\n\n        RoleMember roleMember1 = new RoleMember();\n        roleMember1.setMemberName(\"user.test1\");\n        RoleMember roleMember2 = new RoleMember();\n        roleMember2.setMemberName(\"user.test2\");\n        List<RoleMember> roleMembers = new ArrayList<>();\n\n        roleMembers.add(roleMember1);\n        roleMembers.add(roleMember2);\n        Role adminRole = new Role();\n        adminRole.setRoleMembers(roleMembers);\n        adminRole.setName(\"testDomain:role.admin\");\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(adminRole);\n\n        when(dataStore.getRolesByDomain(eq(\"testDomain\"))).thenReturn(roles);\n        AWSZTSHealthNotificationTask awsztsHealthNotificationTask = new AWSZTSHealthNotificationTask(\n                clientNotification,\n                dataStore,\n                userDomainPrefix,\n                serverName);\n\n        List<Notification> notifications = awsztsHealthNotificationTask.getNotifications();\n        assertEquals(1, notifications.size());\n        assertTrue(notifications.get(0).getRecipients().contains(\"user.test1\"));\n        assertTrue(notifications.get(0).getRecipients().contains(\"user.test2\"));\n        assertEquals(\"zts.url;testDomain;role;1592346376;Fail to get token of type AWS. \", notifications.get(0).getDetails().get(\"awsZtsHealth\"));\n        assertEquals(\"testServer\", notifications.get(0).getDetails().get(\"affectedZts\"));\n\n        System.clearProperty(ZTSConsts.ZTS_PROP_NOTIFICATION_AWS_HEALTH_DOMAIN);\n    }", "signature": "void testGetNotifications()", "full_signature": "@Test public void testGetNotifications()", "class_method_signature": "AWSZTSHealthNotificationTaskTest.testGetNotifications()", "testcase": true, "constructor": false, "invocations": ["setProperty", "setMemberName", "setMemberName", "add", "add", "setRoleMembers", "setName", "add", "thenReturn", "when", "getRolesByDomain", "eq", "getNotifications", "assertEquals", "size", "assertTrue", "contains", "getRecipients", "get", "assertTrue", "contains", "getRecipients", "get", "assertEquals", "get", "getDetails", "get", "assertEquals", "get", "getDetails", "get", "clearProperty"]}, "focal_class": {"identifier": "AWSZTSHealthNotificationTask", "superclass": "", "interfaces": "implements NotificationTask", "fields": [{"original_string": "private final static String DESCRIPTION = \"ZTS On AWS Health Notification\";", "modifier": "private final static", "type": "String", "declarator": "DESCRIPTION = \"ZTS On AWS Health Notification\"", "var_name": "DESCRIPTION"}, {"original_string": "private final static String NOTIFICATION_TYPE = \"aws_zts_health\";", "modifier": "private final static", "type": "String", "declarator": "NOTIFICATION_TYPE = \"aws_zts_health\"", "var_name": "NOTIFICATION_TYPE"}, {"original_string": "private final NotificationCommon notificationCommon;", "modifier": "private final", "type": "NotificationCommon", "declarator": "notificationCommon", "var_name": "notificationCommon"}, {"original_string": "private final ZTSClientNotification ztsClientNotification;", "modifier": "private final", "type": "ZTSClientNotification", "declarator": "ztsClientNotification", "var_name": "ztsClientNotification"}, {"original_string": "private final String serverName;", "modifier": "private final", "type": "String", "declarator": "serverName", "var_name": "serverName"}, {"original_string": "private final String athenzAdminDomain;", "modifier": "private final", "type": "String", "declarator": "athenzAdminDomain", "var_name": "athenzAdminDomain"}, {"original_string": "private final AWSZTSHealthNotificationTask.AWSZTSHealthNotificationToEmailConverter awsZTSHealthNotificationToEmailConverter;", "modifier": "private final", "type": "AWSZTSHealthNotificationTask.AWSZTSHealthNotificationToEmailConverter", "declarator": "awsZTSHealthNotificationToEmailConverter", "var_name": "awsZTSHealthNotificationToEmailConverter"}], "methods": [{"identifier": "AWSZTSHealthNotificationTask", "parameters": "(ZTSClientNotification ztsClientNotification,\n                                        RolesProvider rolesProvider,\n                                        String userDomainPrefix,\n                                        String serverName)", "modifiers": "public", "return": "", "signature": " AWSZTSHealthNotificationTask(ZTSClientNotification ztsClientNotification,\n                                        RolesProvider rolesProvider,\n                                        String userDomainPrefix,\n                                        String serverName)", "full_signature": "public  AWSZTSHealthNotificationTask(ZTSClientNotification ztsClientNotification,\n                                        RolesProvider rolesProvider,\n                                        String userDomainPrefix,\n                                        String serverName)", "class_method_signature": "AWSZTSHealthNotificationTask.AWSZTSHealthNotificationTask(ZTSClientNotification ztsClientNotification,\n                                        RolesProvider rolesProvider,\n                                        String userDomainPrefix,\n                                        String serverName)", "testcase": false, "constructor": true}, {"identifier": "getNotifications", "parameters": "()", "modifiers": "@Override public", "return": "List<Notification>", "signature": "List<Notification> getNotifications()", "full_signature": "@Override public List<Notification> getNotifications()", "class_method_signature": "AWSZTSHealthNotificationTask.getNotifications()", "testcase": false, "constructor": false}, {"identifier": "getNotificationDetails", "parameters": "()", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getNotificationDetails()", "full_signature": "private Map<String, String> getNotificationDetails()", "class_method_signature": "AWSZTSHealthNotificationTask.getNotificationDetails()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "AWSZTSHealthNotificationTask.getDescription()", "testcase": false, "constructor": false}], "file": "servers/zts/src/main/java/com/yahoo/athenz/zts/notification/AWSZTSHealthNotificationTask.java"}, "focal_method": {"identifier": "getNotifications", "parameters": "()", "modifiers": "@Override public", "return": "List<Notification>", "body": "@Override\n    public List<Notification> getNotifications() {\n        List<Notification> notificationList = new ArrayList<>();\n        Map<String, String> details = getNotificationDetails();\n\n        Notification notification = notificationCommon.createNotification(\n                ResourceUtils.roleResourceName(athenzAdminDomain, ADMIN_ROLE_NAME),\n                details,\n                awsZTSHealthNotificationToEmailConverter,\n                NOTIFICATION_TYPE);\n        if (notification != null) {\n            notificationList.add(notification);\n        }\n\n        return notificationList;\n    }", "signature": "List<Notification> getNotifications()", "full_signature": "@Override public List<Notification> getNotifications()", "class_method_signature": "AWSZTSHealthNotificationTask.getNotifications()", "testcase": false, "constructor": false, "invocations": ["getNotificationDetails", "createNotification", "roleResourceName", "add"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}