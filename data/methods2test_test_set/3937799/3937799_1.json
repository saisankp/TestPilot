{"test_class": {"identifier": "TestJspHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Configuration conf = new Configuration();", "modifier": "private", "type": "Configuration", "declarator": "conf = new Configuration()", "var_name": "conf"}], "file": "adfs-hdfs-project/adfs-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestJspHelper.java"}, "test_case": {"identifier": "testDelegationTokenUrlParam", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDelegationTokenUrlParam() {\n    conf.set(DFSConfigKeys.HADOOP_SECURITY_AUTHENTICATION, \"kerberos\");\n    UserGroupInformation.setConfiguration(conf);\n    String tokenString = \"xyzabc\";\n    String delegationTokenParam = JspHelper\n        .getDelegationTokenUrlParam(tokenString);\n    //Security is enabled\n    Assert.assertEquals(JspHelper.SET_DELEGATION + \"xyzabc\",\n        delegationTokenParam);\n    conf.set(DFSConfigKeys.HADOOP_SECURITY_AUTHENTICATION, \"simple\");\n    UserGroupInformation.setConfiguration(conf);\n    delegationTokenParam = JspHelper\n        .getDelegationTokenUrlParam(tokenString);\n    //Empty string must be returned because security is disabled.\n    Assert.assertEquals(\"\", delegationTokenParam);\n  }", "signature": "void testDelegationTokenUrlParam()", "full_signature": "@Test public void testDelegationTokenUrlParam()", "class_method_signature": "TestJspHelper.testDelegationTokenUrlParam()", "testcase": true, "constructor": false, "invocations": ["set", "setConfiguration", "getDelegationTokenUrlParam", "assertEquals", "set", "setConfiguration", "getDelegationTokenUrlParam", "assertEquals"]}, "focal_class": {"identifier": "JspHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CURRENT_CONF = \"current.conf\";", "modifier": "public static final", "type": "String", "declarator": "CURRENT_CONF = \"current.conf\"", "var_name": "CURRENT_CONF"}, {"original_string": "final static public String WEB_UGI_PROPERTY_NAME = \"dfs.web.ugi\";", "modifier": "final static public", "type": "String", "declarator": "WEB_UGI_PROPERTY_NAME = \"dfs.web.ugi\"", "var_name": "WEB_UGI_PROPERTY_NAME"}, {"original_string": "public static final String DELEGATION_PARAMETER_NAME = \"delegation\";", "modifier": "public static final", "type": "String", "declarator": "DELEGATION_PARAMETER_NAME = \"delegation\"", "var_name": "DELEGATION_PARAMETER_NAME"}, {"original_string": "static final String SET_DELEGATION = \"&\" + DELEGATION_PARAMETER_NAME +\n                                              \"=\";", "modifier": "static final", "type": "String", "declarator": "SET_DELEGATION = \"&\" + DELEGATION_PARAMETER_NAME +\n                                              \"=\"", "var_name": "SET_DELEGATION"}, {"original_string": "private static final Log LOG = LogFactory.getLog(JspHelper.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(JspHelper.class)", "var_name": "LOG"}, {"original_string": "static FSNamesystem fsn = null;", "modifier": "static", "type": "FSNamesystem", "declarator": "fsn = null", "var_name": "fsn"}, {"original_string": "public static InetSocketAddress nameNodeAddr;", "modifier": "public static", "type": "InetSocketAddress", "declarator": "nameNodeAddr", "var_name": "nameNodeAddr"}, {"original_string": "static Random rand = new Random();", "modifier": "static", "type": "Random", "declarator": "rand = new Random()", "var_name": "rand"}], "methods": [{"identifier": "JspHelper", "parameters": "()", "modifiers": "public", "return": "", "signature": " JspHelper()", "full_signature": "public  JspHelper()", "class_method_signature": "JspHelper.JspHelper()", "testcase": false, "constructor": true}, {"identifier": "randomNode", "parameters": "()", "modifiers": "public", "return": "DatanodeID", "signature": "DatanodeID randomNode()", "full_signature": "public DatanodeID randomNode()", "class_method_signature": "JspHelper.randomNode()", "testcase": false, "constructor": false}, {"identifier": "bestNode", "parameters": "(LocatedBlock blk)", "modifiers": "public", "return": "DatanodeInfo", "signature": "DatanodeInfo bestNode(LocatedBlock blk)", "full_signature": "public DatanodeInfo bestNode(LocatedBlock blk)", "class_method_signature": "JspHelper.bestNode(LocatedBlock blk)", "testcase": false, "constructor": false}, {"identifier": "streamBlockInAscii", "parameters": "(InetSocketAddress addr, long blockId, \n               Token<BlockTokenIdentifier> accessToken, long genStamp, \n                                 long blockSize, \n                                 long offsetIntoBlock, long chunkSizeToView, \n                                 JspWriter out,\n                                 Configuration conf)", "modifiers": "public", "return": "void", "signature": "void streamBlockInAscii(InetSocketAddress addr, long blockId, \n               Token<BlockTokenIdentifier> accessToken, long genStamp, \n                                 long blockSize, \n                                 long offsetIntoBlock, long chunkSizeToView, \n                                 JspWriter out,\n                                 Configuration conf)", "full_signature": "public void streamBlockInAscii(InetSocketAddress addr, long blockId, \n               Token<BlockTokenIdentifier> accessToken, long genStamp, \n                                 long blockSize, \n                                 long offsetIntoBlock, long chunkSizeToView, \n                                 JspWriter out,\n                                 Configuration conf)", "class_method_signature": "JspHelper.streamBlockInAscii(InetSocketAddress addr, long blockId, \n               Token<BlockTokenIdentifier> accessToken, long genStamp, \n                                 long blockSize, \n                                 long offsetIntoBlock, long chunkSizeToView, \n                                 JspWriter out,\n                                 Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "DFSNodesStatus", "parameters": "(ArrayList<DatanodeDescriptor> live,\n                             ArrayList<DatanodeDescriptor> dead)", "modifiers": "public", "return": "void", "signature": "void DFSNodesStatus(ArrayList<DatanodeDescriptor> live,\n                             ArrayList<DatanodeDescriptor> dead)", "full_signature": "public void DFSNodesStatus(ArrayList<DatanodeDescriptor> live,\n                             ArrayList<DatanodeDescriptor> dead)", "class_method_signature": "JspHelper.DFSNodesStatus(ArrayList<DatanodeDescriptor> live,\n                             ArrayList<DatanodeDescriptor> dead)", "testcase": false, "constructor": false}, {"identifier": "addTableHeader", "parameters": "(JspWriter out)", "modifiers": "public", "return": "void", "signature": "void addTableHeader(JspWriter out)", "full_signature": "public void addTableHeader(JspWriter out)", "class_method_signature": "JspHelper.addTableHeader(JspWriter out)", "testcase": false, "constructor": false}, {"identifier": "addTableHeadingRow", "parameters": "(JspWriter out, String[] columns)", "modifiers": "public", "return": "void", "signature": "void addTableHeadingRow(JspWriter out, String[] columns)", "full_signature": "public void addTableHeadingRow(JspWriter out, String[] columns)", "class_method_signature": "JspHelper.addTableHeadingRow(JspWriter out, String[] columns)", "testcase": false, "constructor": false}, {"identifier": "addTableRow", "parameters": "(JspWriter out, String[] columns)", "modifiers": "public", "return": "void", "signature": "void addTableRow(JspWriter out, String[] columns)", "full_signature": "public void addTableRow(JspWriter out, String[] columns)", "class_method_signature": "JspHelper.addTableRow(JspWriter out, String[] columns)", "testcase": false, "constructor": false}, {"identifier": "addTableFooter", "parameters": "(JspWriter out)", "modifiers": "public", "return": "void", "signature": "void addTableFooter(JspWriter out)", "full_signature": "public void addTableFooter(JspWriter out)", "class_method_signature": "JspHelper.addTableFooter(JspWriter out)", "testcase": false, "constructor": false}, {"identifier": "getSafeModeText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSafeModeText()", "full_signature": "public String getSafeModeText()", "class_method_signature": "JspHelper.getSafeModeText()", "testcase": false, "constructor": false}, {"identifier": "getWarningText", "parameters": "(FSNamesystem fsn)", "modifiers": "public static", "return": "String", "signature": "String getWarningText(FSNamesystem fsn)", "full_signature": "public static String getWarningText(FSNamesystem fsn)", "class_method_signature": "JspHelper.getWarningText(FSNamesystem fsn)", "testcase": false, "constructor": false}, {"identifier": "getInodeLimitText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInodeLimitText()", "full_signature": "public String getInodeLimitText()", "class_method_signature": "JspHelper.getInodeLimitText()", "testcase": false, "constructor": false}, {"identifier": "getUpgradeStatusText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUpgradeStatusText()", "full_signature": "public String getUpgradeStatusText()", "class_method_signature": "JspHelper.getUpgradeStatusText()", "testcase": false, "constructor": false}, {"identifier": "sortNodeList", "parameters": "(ArrayList<DatanodeDescriptor> nodes,\n                           String field, String order)", "modifiers": "public", "return": "void", "signature": "void sortNodeList(ArrayList<DatanodeDescriptor> nodes,\n                           String field, String order)", "full_signature": "public void sortNodeList(ArrayList<DatanodeDescriptor> nodes,\n                           String field, String order)", "class_method_signature": "JspHelper.sortNodeList(ArrayList<DatanodeDescriptor> nodes,\n                           String field, String order)", "testcase": false, "constructor": false}, {"identifier": "printPathWithLinks", "parameters": "(String dir, JspWriter out, \n                                        int namenodeInfoPort,\n                                        String tokenString\n                                       )", "modifiers": "public static", "return": "void", "signature": "void printPathWithLinks(String dir, JspWriter out, \n                                        int namenodeInfoPort,\n                                        String tokenString\n                                       )", "full_signature": "public static void printPathWithLinks(String dir, JspWriter out, \n                                        int namenodeInfoPort,\n                                        String tokenString\n                                       )", "class_method_signature": "JspHelper.printPathWithLinks(String dir, JspWriter out, \n                                        int namenodeInfoPort,\n                                        String tokenString\n                                       )", "testcase": false, "constructor": false}, {"identifier": "printGotoForm", "parameters": "(JspWriter out,\n                                   int namenodeInfoPort,\n                                   String tokenString,\n                                   String file)", "modifiers": "public static", "return": "void", "signature": "void printGotoForm(JspWriter out,\n                                   int namenodeInfoPort,\n                                   String tokenString,\n                                   String file)", "full_signature": "public static void printGotoForm(JspWriter out,\n                                   int namenodeInfoPort,\n                                   String tokenString,\n                                   String file)", "class_method_signature": "JspHelper.printGotoForm(JspWriter out,\n                                   int namenodeInfoPort,\n                                   String tokenString,\n                                   String file)", "testcase": false, "constructor": false}, {"identifier": "createTitle", "parameters": "(JspWriter out, \n                                 HttpServletRequest req, \n                                 String  file)", "modifiers": "public static", "return": "void", "signature": "void createTitle(JspWriter out, \n                                 HttpServletRequest req, \n                                 String  file)", "full_signature": "public static void createTitle(JspWriter out, \n                                 HttpServletRequest req, \n                                 String  file)", "class_method_signature": "JspHelper.createTitle(JspWriter out, \n                                 HttpServletRequest req, \n                                 String  file)", "testcase": false, "constructor": false}, {"identifier": "getDefaultWebUser", "parameters": "(Configuration conf\n                                                       )", "modifiers": "public static", "return": "UserGroupInformation", "signature": "UserGroupInformation getDefaultWebUser(Configuration conf\n                                                       )", "full_signature": "public static UserGroupInformation getDefaultWebUser(Configuration conf\n                                                       )", "class_method_signature": "JspHelper.getDefaultWebUser(Configuration conf\n                                                       )", "testcase": false, "constructor": false}, {"identifier": "getUGI", "parameters": "(HttpServletRequest request,\n                                            Configuration conf\n                                           )", "modifiers": "public static", "return": "UserGroupInformation", "signature": "UserGroupInformation getUGI(HttpServletRequest request,\n                                            Configuration conf\n                                           )", "full_signature": "public static UserGroupInformation getUGI(HttpServletRequest request,\n                                            Configuration conf\n                                           )", "class_method_signature": "JspHelper.getUGI(HttpServletRequest request,\n                                            Configuration conf\n                                           )", "testcase": false, "constructor": false}, {"identifier": "getDFSClient", "parameters": "(final UserGroupInformation user,\n                                       final InetSocketAddress addr,\n                                       final Configuration conf\n                                       )", "modifiers": "public static", "return": "DFSClient", "signature": "DFSClient getDFSClient(final UserGroupInformation user,\n                                       final InetSocketAddress addr,\n                                       final Configuration conf\n                                       )", "full_signature": "public static DFSClient getDFSClient(final UserGroupInformation user,\n                                       final InetSocketAddress addr,\n                                       final Configuration conf\n                                       )", "class_method_signature": "JspHelper.getDFSClient(final UserGroupInformation user,\n                                       final InetSocketAddress addr,\n                                       final Configuration conf\n                                       )", "testcase": false, "constructor": false}, {"identifier": "getDelegationTokenUrlParam", "parameters": "(String tokenString)", "modifiers": "public static", "return": "String", "signature": "String getDelegationTokenUrlParam(String tokenString)", "full_signature": "public static String getDelegationTokenUrlParam(String tokenString)", "class_method_signature": "JspHelper.getDelegationTokenUrlParam(String tokenString)", "testcase": false, "constructor": false}, {"identifier": "string2ChunkSizeToView", "parameters": "(String s, int defaultValue)", "modifiers": "public static", "return": "int", "signature": "int string2ChunkSizeToView(String s, int defaultValue)", "full_signature": "public static int string2ChunkSizeToView(String s, int defaultValue)", "class_method_signature": "JspHelper.string2ChunkSizeToView(String s, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getDefaultChunkSize", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "int", "signature": "int getDefaultChunkSize(Configuration conf)", "full_signature": "public static int getDefaultChunkSize(Configuration conf)", "class_method_signature": "JspHelper.getDefaultChunkSize(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getVersionTable", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getVersionTable()", "full_signature": "public static String getVersionTable()", "class_method_signature": "JspHelper.getVersionTable()", "testcase": false, "constructor": false}], "file": "adfs-hdfs-project/adfs-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/JspHelper.java"}, "focal_method": {"identifier": "getDelegationTokenUrlParam", "parameters": "(String tokenString)", "modifiers": "public static", "return": "String", "body": "public static String getDelegationTokenUrlParam(String tokenString) {\n    if (tokenString == null ) {\n      return \"\";\n    }\n    if (UserGroupInformation.isSecurityEnabled()) {\n      return SET_DELEGATION + tokenString;\n    } else {\n      return \"\";\n    }\n  }", "signature": "String getDelegationTokenUrlParam(String tokenString)", "full_signature": "public static String getDelegationTokenUrlParam(String tokenString)", "class_method_signature": "JspHelper.getDelegationTokenUrlParam(String tokenString)", "testcase": false, "constructor": false, "invocations": ["isSecurityEnabled"]}, "repository": {"repo_id": 3937799, "url": "https://github.com/taobao/ADFS", "language": "Java", "is_fork": false, "fork_count": 50, "stargazer_count": 108, "size": 53300, "license": "licensed"}}