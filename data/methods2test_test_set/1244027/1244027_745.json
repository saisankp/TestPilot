{"test_class": {"identifier": "InMemoryBinaryValueTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private byte[] validByteArrayContent;", "modifier": "private", "type": "byte[]", "declarator": "validByteArrayContent", "var_name": "validByteArrayContent"}, {"original_string": "private String validStringContent;", "modifier": "private", "type": "String", "declarator": "validStringContent", "var_name": "validStringContent"}, {"original_string": "private InMemoryBinaryValue binary;", "modifier": "private", "type": "InMemoryBinaryValue", "declarator": "binary", "var_name": "binary"}, {"original_string": "private BinaryStore store;", "modifier": "private", "type": "BinaryStore", "declarator": "store", "var_name": "store"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/value/binary/InMemoryBinaryValueTest.java"}, "test_case": {"identifier": "shouldConstructFromByteArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldConstructFromByteArray() {\n        binary = new InMemoryBinaryValue(store, validByteArrayContent);\n        assertThat(binary.getSize(), is((long)validByteArrayContent.length));\n        assertThat(binary, hasContent(validByteArrayContent));\n    }", "signature": "void shouldConstructFromByteArray()", "full_signature": "@Test public void shouldConstructFromByteArray()", "class_method_signature": "InMemoryBinaryValueTest.shouldConstructFromByteArray()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getSize", "is", "assertThat", "hasContent"]}, "focal_class": {"identifier": "InMemoryBinaryValue", "superclass": "extends AbstractBinary", "interfaces": "", "fields": [{"original_string": "private static final BinaryKey INVALID_KEY = new BinaryKey(\"invalid\");", "modifier": "private static final", "type": "BinaryKey", "declarator": "INVALID_KEY = new BinaryKey(\"invalid\")", "var_name": "INVALID_KEY"}, {"original_string": "private static final long serialVersionUID = 2L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2L", "var_name": "serialVersionUID"}, {"original_string": "private transient final BinaryStore store;", "modifier": "private transient final", "type": "BinaryStore", "declarator": "store", "var_name": "store"}, {"original_string": "private final byte[] bytes;", "modifier": "private final", "type": "byte[]", "declarator": "bytes", "var_name": "bytes"}, {"original_string": "private transient String mimeType;", "modifier": "private transient", "type": "String", "declarator": "mimeType", "var_name": "mimeType"}], "methods": [{"identifier": "InMemoryBinaryValue", "parameters": "( BinaryStore store,\n                                byte[] bytes )", "modifiers": "public", "return": "", "signature": " InMemoryBinaryValue( BinaryStore store,\n                                byte[] bytes )", "full_signature": "public  InMemoryBinaryValue( BinaryStore store,\n                                byte[] bytes )", "class_method_signature": "InMemoryBinaryValue.InMemoryBinaryValue( BinaryStore store,\n                                byte[] bytes )", "testcase": false, "constructor": true}, {"identifier": "InMemoryBinaryValue", "parameters": "( BinaryStore store,\n                                BinaryKey key,\n                                byte[] bytes )", "modifiers": "public", "return": "", "signature": " InMemoryBinaryValue( BinaryStore store,\n                                BinaryKey key,\n                                byte[] bytes )", "full_signature": "public  InMemoryBinaryValue( BinaryStore store,\n                                BinaryKey key,\n                                byte[] bytes )", "class_method_signature": "InMemoryBinaryValue.InMemoryBinaryValue( BinaryStore store,\n                                BinaryKey key,\n                                byte[] bytes )", "testcase": false, "constructor": true}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getSize()", "full_signature": "@Override public long getSize()", "class_method_signature": "InMemoryBinaryValue.getSize()", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getBytes()", "full_signature": "public byte[] getBytes()", "class_method_signature": "InMemoryBinaryValue.getBytes()", "testcase": false, "constructor": false}, {"identifier": "getMimeType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMimeType()", "full_signature": "@Override public String getMimeType()", "class_method_signature": "InMemoryBinaryValue.getMimeType()", "testcase": false, "constructor": false}, {"identifier": "getMimeType", "parameters": "( String name )", "modifiers": "@Override public", "return": "String", "signature": "String getMimeType( String name )", "full_signature": "@Override public String getMimeType( String name )", "class_method_signature": "InMemoryBinaryValue.getMimeType( String name )", "testcase": false, "constructor": false}, {"identifier": "internalStream", "parameters": "()", "modifiers": "@Override protected", "return": "InputStream", "signature": "InputStream internalStream()", "full_signature": "@Override protected InputStream internalStream()", "class_method_signature": "InMemoryBinaryValue.internalStream()", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/value/binary/InMemoryBinaryValue.java"}, "focal_method": {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getSize() {\n        return bytes.length;\n    }", "signature": "long getSize()", "full_signature": "@Override public long getSize()", "class_method_signature": "InMemoryBinaryValue.getSize()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}