{"test_class": {"identifier": "XodusIxMapTest", "superclass": "extends IxMapTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final TemporaryFolder tmp = new TemporaryFolder();", "modifier": "@Rule\n    public final", "type": "TemporaryFolder", "declarator": "tmp = new TemporaryFolder()", "var_name": "tmp"}, {"original_string": "private Xodus xodus;", "modifier": "private", "type": "Xodus", "declarator": "xodus", "var_name": "xodus"}], "file": "rpki-validator/src/test/java/net/ripe/rpki/validator3/storage/xodus/XodusIxMapTest.java"}, "test_case": {"identifier": "testReindex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReindex() {\n        ixMap = xodus.createIxMap(\"testReindex\",\n                ImmutableMap.of(\n                        \"len\", IxMapTest::stringLen,\n                        \"lower\", s -> Key.keys(Key.of(s.toLowerCase()))),\n                CoderFactory.makeCoder(String.class));\n\n        Set<String> dbNames = new HashSet<>(rtx(tx -> xodus.getEnv().getAllStoreNames((Transaction) tx.txn())));\n\n        assertTrue(dbNames.containsAll(Sets.newHashSet(\"testReindex-idx-lower\", \"testReindex-idx-len\", \"testReindex-main\")));\n\n        wtx0(tx -> ixMap.put(tx, Key.of(1L), \"aa\"));\n        wtx0(tx -> ixMap.put(tx, Key.of(2L), \"aBa\"));\n\n        assertEquals(ImmutableMap.of(Key.of(1L), \"aa\"), xodus.readTx(tx -> ixMap.getByIndex(\"len\", tx, intKey(2))));\n        assertEquals(ImmutableMap.of(Key.of(2L), \"aBa\"), xodus.readTx(tx -> ixMap.getByIndex(\"len\", tx, intKey(3))));\n        assertEquals(ImmutableMap.of(Key.of(2L), \"aBa\"), xodus.readTx(tx -> ixMap.getByIndex(\"lower\", tx, Key.of(\"aba\"))));\n\n        ixMap = xodus.createIxMap(\"testReindex\",\n                ImmutableMap.of(\n                        \"lenPlus1\", s -> Key.keys(intKey(s.length() + 1)),\n                        \"lower\", s -> Key.keys(Key.of(s.toLowerCase()))),\n                CoderFactory.makeCoder(String.class));\n\n        Set<String> dbNames1 = new HashSet<>(rtx(tx -> xodus.getEnv().getAllStoreNames((Transaction) tx.txn())));\n\n        assertTrue(dbNames1.containsAll(Sets.newHashSet(\"testReindex-idx-lower\", \"testReindex-idx-lenPlus1\", \"testReindex-main\")));\n        assertFalse(dbNames1.contains(\"testReindex-idx-len\"));\n\n        assertEquals(Optional.of(\"aa\"), xodus.readTx(tx -> ixMap.get(tx, Key.of(1L))));\n        assertEquals(Optional.of(\"aBa\"), xodus.readTx(tx -> ixMap.get(tx, Key.of(2L))));\n\n        assertEquals(ImmutableMap.of(), xodus.readTx(tx -> ixMap.getByIndex(\"len\", tx, intKey(2))));\n        assertEquals(ImmutableMap.of(Key.of(1L), \"aa\"), xodus.readTx(tx -> ixMap.getByIndex(\"lenPlus1\", tx, intKey(3))));\n        assertEquals(ImmutableMap.of(Key.of(2L), \"aBa\"), xodus.readTx(tx -> ixMap.getByIndex(\"lenPlus1\", tx, intKey(4))));\n        assertEquals(ImmutableMap.of(Key.of(2L), \"aBa\"), xodus.readTx(tx -> ixMap.getByIndex(\"lower\", tx, Key.of(\"aba\"))));\n    }", "signature": "void testReindex()", "full_signature": "@Test public void testReindex()", "class_method_signature": "XodusIxMapTest.testReindex()", "testcase": true, "constructor": false, "invocations": ["createIxMap", "of", "keys", "of", "toLowerCase", "makeCoder", "rtx", "getAllStoreNames", "getEnv", "txn", "assertTrue", "containsAll", "newHashSet", "wtx0", "put", "of", "wtx0", "put", "of", "assertEquals", "of", "of", "readTx", "getByIndex", "intKey", "assertEquals", "of", "of", "readTx", "getByIndex", "intKey", "assertEquals", "of", "of", "readTx", "getByIndex", "of", "createIxMap", "of", "keys", "intKey", "length", "keys", "of", "toLowerCase", "makeCoder", "rtx", "getAllStoreNames", "getEnv", "txn", "assertTrue", "containsAll", "newHashSet", "assertFalse", "contains", "assertEquals", "of", "readTx", "get", "of", "assertEquals", "of", "readTx", "get", "of", "assertEquals", "of", "readTx", "getByIndex", "intKey", "assertEquals", "of", "of", "readTx", "getByIndex", "intKey", "assertEquals", "of", "of", "readTx", "getByIndex", "intKey", "assertEquals", "of", "of", "readTx", "getByIndex", "of"]}, "focal_class": {"identifier": "XodusIxMap", "superclass": "extends XodusIxBase<T>", "interfaces": "implements IxMap<T>", "fields": [{"original_string": "private final Map<String, Store> indexes;", "modifier": "private final", "type": "Map<String, Store>", "declarator": "indexes", "var_name": "indexes"}, {"original_string": "private final Map<String, Function<T, Set<Key>>> indexFunctions;", "modifier": "private final", "type": "Map<String, Function<T, Set<Key>>>", "declarator": "indexFunctions", "var_name": "indexFunctions"}, {"original_string": "private final List<BiConsumer<Tx.Write, Key>> onDeleteTriggers = new ArrayList<>();", "modifier": "private final", "type": "List<BiConsumer<Tx.Write, Key>>", "declarator": "onDeleteTriggers = new ArrayList<>()", "var_name": "onDeleteTriggers"}], "methods": [{"identifier": "XodusIxMap", "parameters": "(final Xodus xodus,\n                      final String name,\n                      final Coder<T> coder,\n                      final Map<String, Function<T, Set<Key>>> indexFunctions)", "modifiers": "public", "return": "", "signature": " XodusIxMap(final Xodus xodus,\n                      final String name,\n                      final Coder<T> coder,\n                      final Map<String, Function<T, Set<Key>>> indexFunctions)", "full_signature": "public  XodusIxMap(final Xodus xodus,\n                      final String name,\n                      final Coder<T> coder,\n                      final Map<String, Function<T, Set<Key>>> indexFunctions)", "class_method_signature": "XodusIxMap.XodusIxMap(final Xodus xodus,\n                      final String name,\n                      final Coder<T> coder,\n                      final Map<String, Function<T, Set<Key>>> indexFunctions)", "testcase": false, "constructor": true}, {"identifier": "reindex", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void reindex()", "full_signature": "private void reindex()", "class_method_signature": "XodusIxMap.reindex()", "testcase": false, "constructor": false}, {"identifier": "getIdx", "parameters": "(String name)", "modifiers": "private", "return": "Store", "signature": "Store getIdx(String name)", "full_signature": "private Store getIdx(String name)", "class_method_signature": "XodusIxMap.getIdx(String name)", "testcase": false, "constructor": false}, {"identifier": "dropIndexes", "parameters": "(Tx.Write tx)", "modifiers": "private", "return": "void", "signature": "void dropIndexes(Tx.Write tx)", "full_signature": "private void dropIndexes(Tx.Write tx)", "class_method_signature": "XodusIxMap.dropIndexes(Tx.Write tx)", "testcase": false, "constructor": false}, {"identifier": "getStoreConfig", "parameters": "()", "modifiers": "protected", "return": "StoreConfig", "signature": "StoreConfig getStoreConfig()", "full_signature": "protected StoreConfig getStoreConfig()", "class_method_signature": "XodusIxMap.getStoreConfig()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Key primaryKey)", "modifiers": "public", "return": "Optional<T>", "signature": "Optional<T> get(Key primaryKey)", "full_signature": "public Optional<T> get(Key primaryKey)", "class_method_signature": "XodusIxMap.get(Key primaryKey)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Tx.Read tx, Key primaryKey)", "modifiers": "public", "return": "Optional<T>", "signature": "Optional<T> get(Tx.Read tx, Key primaryKey)", "full_signature": "public Optional<T> get(Tx.Read tx, Key primaryKey)", "class_method_signature": "XodusIxMap.get(Tx.Read tx, Key primaryKey)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Tx.Read txn, Set<Key> primaryKeys)", "modifiers": "public", "return": "List<T>", "signature": "List<T> get(Tx.Read txn, Set<Key> primaryKeys)", "full_signature": "public List<T> get(Tx.Read txn, Set<Key> primaryKeys)", "class_method_signature": "XodusIxMap.get(Tx.Read txn, Set<Key> primaryKeys)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Tx.Write tx, Key primaryKey, T value)", "modifiers": "public", "return": "Optional<T>", "signature": "Optional<T> put(Tx.Write tx, Key primaryKey, T value)", "full_signature": "public Optional<T> put(Tx.Write tx, Key primaryKey, T value)", "class_method_signature": "XodusIxMap.put(Tx.Write tx, Key primaryKey, T value)", "testcase": false, "constructor": false}, {"identifier": "modify", "parameters": "(Tx.Write tx, Key primaryKey, Consumer<T> modifyValue)", "modifiers": "public", "return": "boolean", "signature": "boolean modify(Tx.Write tx, Key primaryKey, Consumer<T> modifyValue)", "full_signature": "public boolean modify(Tx.Write tx, Key primaryKey, Consumer<T> modifyValue)", "class_method_signature": "XodusIxMap.modify(Tx.Write tx, Key primaryKey, Consumer<T> modifyValue)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Tx.Write tx, Key primaryKey)", "modifiers": "public", "return": "void", "signature": "void delete(Tx.Write tx, Key primaryKey)", "full_signature": "public void delete(Tx.Write tx, Key primaryKey)", "class_method_signature": "XodusIxMap.delete(Tx.Write tx, Key primaryKey)", "testcase": false, "constructor": false}, {"identifier": "getByIndex", "parameters": "(String indexName, Tx.Read tx, Key indexKey)", "modifiers": "public", "return": "Map<Key, T>", "signature": "Map<Key, T> getByIndex(String indexName, Tx.Read tx, Key indexKey)", "full_signature": "public Map<Key, T> getByIndex(String indexName, Tx.Read tx, Key indexKey)", "class_method_signature": "XodusIxMap.getByIndex(String indexName, Tx.Read tx, Key indexKey)", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "(Tx.Read tx, Set<Key> pks)", "modifiers": "public", "return": "Map<Key, T>", "signature": "Map<Key, T> values(Tx.Read tx, Set<Key> pks)", "full_signature": "public Map<Key, T> values(Tx.Read tx, Set<Key> pks)", "class_method_signature": "XodusIxMap.values(Tx.Read tx, Set<Key> pks)", "testcase": false, "constructor": false}, {"identifier": "getPkByIndex", "parameters": "(String indexName, Tx.Read tx, Key indexKey)", "modifiers": "public", "return": "Set<Key>", "signature": "Set<Key> getPkByIndex(String indexName, Tx.Read tx, Key indexKey)", "full_signature": "public Set<Key> getPkByIndex(String indexName, Tx.Read tx, Key indexKey)", "class_method_signature": "XodusIxMap.getPkByIndex(String indexName, Tx.Read tx, Key indexKey)", "testcase": false, "constructor": false}, {"identifier": "getByIndexLessThan", "parameters": "(String indexName, Tx.Read tx, Key indexKey)", "modifiers": "public", "return": "Map<Key, T>", "signature": "Map<Key, T> getByIndexLessThan(String indexName, Tx.Read tx, Key indexKey)", "full_signature": "public Map<Key, T> getByIndexLessThan(String indexName, Tx.Read tx, Key indexKey)", "class_method_signature": "XodusIxMap.getByIndexLessThan(String indexName, Tx.Read tx, Key indexKey)", "testcase": false, "constructor": false}, {"identifier": "getByIndexNotLessThan", "parameters": "(String indexName, Tx.Read tx, Key indexKey)", "modifiers": "public", "return": "Map<Key, T>", "signature": "Map<Key, T> getByIndexNotLessThan(String indexName, Tx.Read tx, Key indexKey)", "full_signature": "public Map<Key, T> getByIndexNotLessThan(String indexName, Tx.Read tx, Key indexKey)", "class_method_signature": "XodusIxMap.getByIndexNotLessThan(String indexName, Tx.Read tx, Key indexKey)", "testcase": false, "constructor": false}, {"identifier": "getPkByIndexLessThan", "parameters": "(String indexName, Tx.Read tx, Key indexKey)", "modifiers": "public", "return": "Set<Key>", "signature": "Set<Key> getPkByIndexLessThan(String indexName, Tx.Read tx, Key indexKey)", "full_signature": "public Set<Key> getPkByIndexLessThan(String indexName, Tx.Read tx, Key indexKey)", "class_method_signature": "XodusIxMap.getPkByIndexLessThan(String indexName, Tx.Read tx, Key indexKey)", "testcase": false, "constructor": false}, {"identifier": "getPkByIndexGreaterThan", "parameters": "(String indexName, Tx.Read tx, Key indexKey)", "modifiers": "public", "return": "Set<Key>", "signature": "Set<Key> getPkByIndexGreaterThan(String indexName, Tx.Read tx, Key indexKey)", "full_signature": "public Set<Key> getPkByIndexGreaterThan(String indexName, Tx.Read tx, Key indexKey)", "class_method_signature": "XodusIxMap.getPkByIndexGreaterThan(String indexName, Tx.Read tx, Key indexKey)", "testcase": false, "constructor": false}, {"identifier": "getByIdxDescendingWhere", "parameters": "(String indexName, Tx.Read tx, Predicate<T> p)", "modifiers": "public", "return": "Map<Key, T>", "signature": "Map<Key, T> getByIdxDescendingWhere(String indexName, Tx.Read tx, Predicate<T> p)", "full_signature": "public Map<Key, T> getByIdxDescendingWhere(String indexName, Tx.Read tx, Predicate<T> p)", "class_method_signature": "XodusIxMap.getByIdxDescendingWhere(String indexName, Tx.Read tx, Predicate<T> p)", "testcase": false, "constructor": false}, {"identifier": "getByIdxAscendingWhere", "parameters": "(String indexName, Tx.Read tx, Predicate<T> p)", "modifiers": "public", "return": "Map<Key, T>", "signature": "Map<Key, T> getByIdxAscendingWhere(String indexName, Tx.Read tx, Predicate<T> p)", "full_signature": "public Map<Key, T> getByIdxAscendingWhere(String indexName, Tx.Read tx, Predicate<T> p)", "class_method_signature": "XodusIxMap.getByIdxAscendingWhere(String indexName, Tx.Read tx, Predicate<T> p)", "testcase": false, "constructor": false}, {"identifier": "getOrderedMapWhere", "parameters": "(String indexName, Tx.Read tx,\n                                           boolean ascending,\n                                           Predicate<T> predicate)", "modifiers": "private", "return": "Map<Key, T>", "signature": "Map<Key, T> getOrderedMapWhere(String indexName, Tx.Read tx,\n                                           boolean ascending,\n                                           Predicate<T> predicate)", "full_signature": "private Map<Key, T> getOrderedMapWhere(String indexName, Tx.Read tx,\n                                           boolean ascending,\n                                           Predicate<T> predicate)", "class_method_signature": "XodusIxMap.getOrderedMapWhere(String indexName, Tx.Read tx,\n                                           boolean ascending,\n                                           Predicate<T> predicate)", "testcase": false, "constructor": false}, {"identifier": "onDelete", "parameters": "(BiConsumer<Tx.Write, Key> bf)", "modifiers": "public", "return": "void", "signature": "void onDelete(BiConsumer<Tx.Write, Key> bf)", "full_signature": "public void onDelete(BiConsumer<Tx.Write, Key> bf)", "class_method_signature": "XodusIxMap.onDelete(BiConsumer<Tx.Write, Key> bf)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "(Tx.Write tx)", "modifiers": "@Override public", "return": "void", "signature": "void clear(Tx.Write tx)", "full_signature": "@Override public void clear(Tx.Write tx)", "class_method_signature": "XodusIxMap.clear(Tx.Write tx)", "testcase": false, "constructor": false}, {"identifier": "toValue", "parameters": "(byte[] bb)", "modifiers": "@Override public", "return": "T", "signature": "T toValue(byte[] bb)", "full_signature": "@Override public T toValue(byte[] bb)", "class_method_signature": "XodusIxMap.toValue(byte[] bb)", "testcase": false, "constructor": false}, {"identifier": "getPkByIndexKeyRange", "parameters": "(String indexName, Tx.Read tx, ByteIterable start, ByteIterable stop)", "modifiers": "private", "return": "Set<Key>", "signature": "Set<Key> getPkByIndexKeyRange(String indexName, Tx.Read tx, ByteIterable start, ByteIterable stop)", "full_signature": "private Set<Key> getPkByIndexKeyRange(String indexName, Tx.Read tx, ByteIterable start, ByteIterable stop)", "class_method_signature": "XodusIxMap.getPkByIndexKeyRange(String indexName, Tx.Read tx, ByteIterable start, ByteIterable stop)", "testcase": false, "constructor": false}, {"identifier": "sizeInfo", "parameters": "(Tx.Read tx)", "modifiers": "@Override public", "return": "XodusIxBase.Sizes", "signature": "XodusIxBase.Sizes sizeInfo(Tx.Read tx)", "full_signature": "@Override public XodusIxBase.Sizes sizeInfo(Tx.Read tx)", "class_method_signature": "XodusIxMap.sizeInfo(Tx.Read tx)", "testcase": false, "constructor": false}], "file": "rpki-validator/src/main/java/net/ripe/rpki/validator3/storage/xodus/XodusIxMap.java"}, "focal_method": {"identifier": "reindex", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void reindex() {\n        this.env.executeInExclusiveTransaction(txn -> {\n            indexes.forEach((name, idx) -> env.truncateStore(idx.getName(), txn));\n            try (final Cursor ci = getMainDb().openCursor(txn)) {\n                while (ci.getNext()) {\n                    ByteIterable pk = ci.getKey();\n                    final T value = getValue(new Key(pk), Bytes.toBytes(ci.getValue()));\n                    indexFunctions.forEach((n, idxFun) -> {\n                        final Store idx = getIdx(n);\n                        idxFun.apply(value).forEach(ik -> idx.put(txn, ik.toByteIterable(), pk));\n                    });\n                }\n            }\n        });\n    }", "signature": "void reindex()", "full_signature": "private void reindex()", "class_method_signature": "XodusIxMap.reindex()", "testcase": false, "constructor": false, "invocations": ["executeInExclusiveTransaction", "forEach", "truncateStore", "getName", "openCursor", "getMainDb", "getNext", "getKey", "getValue", "toBytes", "getValue", "forEach", "getIdx", "forEach", "apply", "put", "toByteIterable"]}, "repository": {"repo_id": 104217624, "url": "https://github.com/RIPE-NCC/rpki-validator-3", "stars": 32, "created": "9/20/2017 1:15:05 PM +00:00", "updates": "2020-01-27T10:48:38+00:00", "fork": "False", "license": "licensed"}}