{"test_class": {"identifier": "AclFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AclFactory aclFactory;", "modifier": "private", "type": "AclFactory", "declarator": "aclFactory", "var_name": "aclFactory"}, {"original_string": "private RoleMapperFactory roleMapperFactory;", "modifier": "private", "type": "RoleMapperFactory", "declarator": "roleMapperFactory", "var_name": "roleMapperFactory"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private final String INVALID_ACL_JSON = ResourcesUtils.loadResource(\"testresource_invalid_acl_json\", true);", "modifier": "private final", "type": "String", "declarator": "INVALID_ACL_JSON = ResourcesUtils.loadResource(\"testresource_invalid_acl_json\", true)", "var_name": "INVALID_ACL_JSON"}, {"original_string": "private final String VALID_ACL_RESOURCE = ResourcesUtils.loadResource(\"testresource_valid_acl_resource\", true);", "modifier": "private final", "type": "String", "declarator": "VALID_ACL_RESOURCE = ResourcesUtils.loadResource(\"testresource_valid_acl_resource\", true)", "var_name": "VALID_ACL_RESOURCE"}, {"original_string": "private final String ADDITIONAL_PROP_ACL_RESOURCE = ResourcesUtils.loadResource(\"testresource_additionalproperties_acl_resource\", true);", "modifier": "private final", "type": "String", "declarator": "ADDITIONAL_PROP_ACL_RESOURCE = ResourcesUtils.loadResource(\"testresource_additionalproperties_acl_resource\", true)", "var_name": "ADDITIONAL_PROP_ACL_RESOURCE"}], "file": "gateleen-security/src/test/java/org/swisspush/gateleen/security/authorization/AclFactoryTest.java"}, "test_case": {"identifier": "testInvalidACLJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInvalidACLJson() throws ValidationException {\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"Unable to parse json\");\n        aclFactory.parseAcl(Buffer.buffer(INVALID_ACL_JSON));\n    }", "signature": "void testInvalidACLJson()", "full_signature": "@Test public void testInvalidACLJson()", "class_method_signature": "AclFactoryTest.testInvalidACLJson()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "parseAcl", "buffer"]}, "focal_class": {"identifier": "AclFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String aclSchema;", "modifier": "private", "type": "String", "declarator": "aclSchema", "var_name": "aclSchema"}, {"original_string": "private Logger log = LoggerFactory.getLogger(AclFactory.class);", "modifier": "private", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(AclFactory.class)", "var_name": "log"}], "methods": [{"identifier": "AclFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " AclFactory()", "full_signature": "public  AclFactory()", "class_method_signature": "AclFactory.AclFactory()", "testcase": false, "constructor": true}, {"identifier": "parseAcl", "parameters": "(Buffer buffer)", "modifiers": "public", "return": "Map<PatternHolder, Set<String>>", "signature": "Map<PatternHolder, Set<String>> parseAcl(Buffer buffer)", "full_signature": "public Map<PatternHolder, Set<String>> parseAcl(Buffer buffer)", "class_method_signature": "AclFactory.parseAcl(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "checkPropertiesValid", "parameters": "(String path, JsonArray methods, String id)", "modifiers": "private", "return": "void", "signature": "void checkPropertiesValid(String path, JsonArray methods, String id)", "full_signature": "private void checkPropertiesValid(String path, JsonArray methods, String id)", "class_method_signature": "AclFactory.checkPropertiesValid(String path, JsonArray methods, String id)", "testcase": false, "constructor": false}], "file": "gateleen-security/src/main/java/org/swisspush/gateleen/security/authorization/AclFactory.java"}, "focal_method": {"identifier": "parseAcl", "parameters": "(Buffer buffer)", "modifiers": "public", "return": "Map<PatternHolder, Set<String>>", "body": "public Map<PatternHolder, Set<String>> parseAcl(Buffer buffer) throws ValidationException {\n        ValidationResult validationResult = Validator.validateStatic(buffer, aclSchema, log);\n        if (!validationResult.isSuccess()) {\n            throw new ValidationException(validationResult);\n        }\n\n        Map<PatternHolder, Set<String>> result = new HashMap<>();\n        JsonObject aclItems = new JsonObject(buffer.toString(\"UTF-8\"));\n\n        for (String id : aclItems.fieldNames()) {\n            Object aclItemToTest = aclItems.getValue(id);\n            if (!(aclItemToTest instanceof JsonObject)) {\n                throw new ValidationException(\"acl item must be a map: \" + id);\n            }\n            JsonObject aclItem = aclItems.getJsonObject(id);\n            aclItems.getValue(\"debug.read\");\n            String path = aclItem.getString(\"path\");\n            JsonArray methods = aclItem.getJsonArray(\"methods\");\n            checkPropertiesValid(path, methods, id);\n            if (path != null) {\n                PatternHolder holder = new PatternHolder(Pattern.compile(path));\n                Set<String> methodSet = result.get(holder);\n                if (methodSet == null) {\n                    methodSet = new HashSet<>();\n                    result.put(holder, methodSet);\n                }\n                if (methods != null) {\n                    for (Object methodObj : methods) {\n                        String method = (String) methodObj;\n                        methodSet.add(method);\n                    }\n                }\n            }\n        }\n        return result;\n    }", "signature": "Map<PatternHolder, Set<String>> parseAcl(Buffer buffer)", "full_signature": "public Map<PatternHolder, Set<String>> parseAcl(Buffer buffer)", "class_method_signature": "AclFactory.parseAcl(Buffer buffer)", "testcase": false, "constructor": false, "invocations": ["validateStatic", "isSuccess", "toString", "fieldNames", "getValue", "getJsonObject", "getValue", "getString", "getJsonArray", "checkPropertiesValid", "compile", "get", "put", "add"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}