{"test_class": {"identifier": "GeoStoreClientTest", "superclass": "extends BaseGeoStoreClientTest", "interfaces": "", "fields": [{"original_string": "private final static Logger LOGGER = Logger.getLogger(GeoStoreClientTest.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(GeoStoreClientTest.class)", "var_name": "LOGGER"}, {"original_string": "final String DEFAULTCATEGORYNAME = \"TestCategory1\";", "modifier": "final", "type": "String", "declarator": "DEFAULTCATEGORYNAME = \"TestCategory1\"", "var_name": "DEFAULTCATEGORYNAME"}], "file": "src/modules/rest/client/src/test/java/it/geosolutions/geostore/services/rest/GeoStoreClientTest.java"}, "test_case": {"identifier": "testupdateSecurityRules", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testupdateSecurityRules() {\n    \t\n    \tcreateDefaultCategory();\n\n        RESTResource res = new RESTResource();\n        res.setCategory(new RESTCategory(DEFAULTCATEGORYNAME));\n\n        String timeid = Long.toString(System.currentTimeMillis());\n        res.setName(\"rest_test_resource_\" + timeid);\n\n        Long userId = createUser(\"u1_\" + timeid, Role.USER, \"---\");\n        \n        UserGroup g1 = new UserGroup();\n        g1.setGroupName(\"g1_\"  + timeid);\n        Long groupId = adminClient.insertUserGroup(g1);\n        \n        \n        Long id = client.insert(res);\n        List<SecurityRule> ruleList = new ArrayList<SecurityRule>();\n        \n        SecurityRule rule = new SecurityRule();\n        rule.setCanRead(true);\n        rule.setCanWrite(true);   \n        User user = new User();\n        user.setId(userId);\n        rule.setUser(user);\n        ruleList.add(rule);\n        \n        rule = new SecurityRule();\n        rule.setCanRead(true);\n        rule.setCanWrite(false); \n        UserGroup group = new UserGroup();\n        group.setId(groupId);\n        rule.setGroup(group);\n        ruleList.add(rule);\n        \n        SecurityRuleList rules = new SecurityRuleList(ruleList);\n        client.updateSecurityRules(id, rules);\n        \n        SecurityRuleList writtenRules = client.getSecurityRules(id);\n        assertNotNull(writtenRules.getList());\n        assertEquals(2, rules.getList().size());\n    }", "signature": "void testupdateSecurityRules()", "full_signature": "@Test public void testupdateSecurityRules()", "class_method_signature": "GeoStoreClientTest.testupdateSecurityRules()", "testcase": true, "constructor": false, "invocations": ["createDefaultCategory", "setCategory", "toString", "currentTimeMillis", "setName", "createUser", "setGroupName", "insertUserGroup", "insert", "setCanRead", "setCanWrite", "setId", "setUser", "add", "setCanRead", "setCanWrite", "setId", "setGroup", "add", "updateSecurityRules", "getSecurityRules", "assertNotNull", "getList", "assertEquals", "size", "getList"]}, "focal_class": {"identifier": "GeoStoreClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String username = null;", "modifier": "private", "type": "String", "declarator": "username = null", "var_name": "username"}, {"original_string": "private String password = null;", "modifier": "private", "type": "String", "declarator": "password = null", "var_name": "password"}, {"original_string": "private String geostoreRestUrl = null;", "modifier": "private", "type": "String", "declarator": "geostoreRestUrl = null", "var_name": "geostoreRestUrl"}], "methods": [{"identifier": "GeoStoreClient", "parameters": "()", "modifiers": "public", "return": "", "signature": " GeoStoreClient()", "full_signature": "public  GeoStoreClient()", "class_method_signature": "GeoStoreClient.GeoStoreClient()", "testcase": false, "constructor": true}, {"identifier": "searchResources", "parameters": "(SearchFilter searchFilter)", "modifiers": "@Deprecated public", "return": "ShortResourceList", "signature": "ShortResourceList searchResources(SearchFilter searchFilter)", "full_signature": "@Deprecated public ShortResourceList searchResources(SearchFilter searchFilter)", "class_method_signature": "GeoStoreClient.searchResources(SearchFilter searchFilter)", "testcase": false, "constructor": false}, {"identifier": "searchResources", "parameters": "(SearchFilter searchFilter,\n            Integer page, Integer entries,\n            Boolean includeAttributes, Boolean includeData)", "modifiers": "public", "return": "ResourceList", "signature": "ResourceList searchResources(SearchFilter searchFilter,\n            Integer page, Integer entries,\n            Boolean includeAttributes, Boolean includeData)", "full_signature": "public ResourceList searchResources(SearchFilter searchFilter,\n            Integer page, Integer entries,\n            Boolean includeAttributes, Boolean includeData)", "class_method_signature": "GeoStoreClient.searchResources(SearchFilter searchFilter,\n            Integer page, Integer entries,\n            Boolean includeAttributes, Boolean includeData)", "testcase": false, "constructor": false}, {"identifier": "addQParam", "parameters": "(WebResource wb, String key, Object value)", "modifiers": "protected", "return": "WebResource", "signature": "WebResource addQParam(WebResource wb, String key, Object value)", "full_signature": "protected WebResource addQParam(WebResource wb, String key, Object value)", "class_method_signature": "GeoStoreClient.addQParam(WebResource wb, String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(RESTResource resource)", "modifiers": "public", "return": "Long", "signature": "Long insert(RESTResource resource)", "full_signature": "public Long insert(RESTResource resource)", "class_method_signature": "GeoStoreClient.insert(RESTResource resource)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(Long id, boolean full)", "modifiers": "public", "return": "Resource", "signature": "Resource getResource(Long id, boolean full)", "full_signature": "public Resource getResource(Long id, boolean full)", "class_method_signature": "GeoStoreClient.getResource(Long id, boolean full)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(Long id)", "modifiers": "public", "return": "Resource", "signature": "Resource getResource(Long id)", "full_signature": "public Resource getResource(Long id)", "class_method_signature": "GeoStoreClient.getResource(Long id)", "testcase": false, "constructor": false}, {"identifier": "deleteResource", "parameters": "(Long id)", "modifiers": "public", "return": "void", "signature": "void deleteResource(Long id)", "full_signature": "public void deleteResource(Long id)", "class_method_signature": "GeoStoreClient.deleteResource(Long id)", "testcase": false, "constructor": false}, {"identifier": "updateResource", "parameters": "(Long id, RESTResource resource)", "modifiers": "public", "return": "void", "signature": "void updateResource(Long id, RESTResource resource)", "full_signature": "public void updateResource(Long id, RESTResource resource)", "class_method_signature": "GeoStoreClient.updateResource(Long id, RESTResource resource)", "testcase": false, "constructor": false}, {"identifier": "getAllShortResource", "parameters": "(Integer page, Integer entries)", "modifiers": "public", "return": "ShortResourceList", "signature": "ShortResourceList getAllShortResource(Integer page, Integer entries)", "full_signature": "public ShortResourceList getAllShortResource(Integer page, Integer entries)", "class_method_signature": "GeoStoreClient.getAllShortResource(Integer page, Integer entries)", "testcase": false, "constructor": false}, {"identifier": "getSecurityRules", "parameters": "(Long resourceId)", "modifiers": "public", "return": "SecurityRuleList", "signature": "SecurityRuleList getSecurityRules(Long resourceId)", "full_signature": "public SecurityRuleList getSecurityRules(Long resourceId)", "class_method_signature": "GeoStoreClient.getSecurityRules(Long resourceId)", "testcase": false, "constructor": false}, {"identifier": "updateSecurityRules", "parameters": "(Long resourceId, SecurityRuleList rules)", "modifiers": "public", "return": "void", "signature": "void updateSecurityRules(Long resourceId, SecurityRuleList rules)", "full_signature": "public void updateSecurityRules(Long resourceId, SecurityRuleList rules)", "class_method_signature": "GeoStoreClient.updateSecurityRules(Long resourceId, SecurityRuleList rules)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "(Long id)", "modifiers": "public", "return": "String", "signature": "String getData(Long id)", "full_signature": "public String getData(Long id)", "class_method_signature": "GeoStoreClient.getData(Long id)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "(Long id, MediaType acceptMediaType)", "modifiers": "public", "return": "String", "signature": "String getData(Long id, MediaType acceptMediaType)", "full_signature": "public String getData(Long id, MediaType acceptMediaType)", "class_method_signature": "GeoStoreClient.getData(Long id, MediaType acceptMediaType)", "testcase": false, "constructor": false}, {"identifier": "getRawData", "parameters": "(Long id, RawFormat decodeFrom)", "modifiers": "public", "return": "byte[]", "signature": "byte[] getRawData(Long id, RawFormat decodeFrom)", "full_signature": "public byte[] getRawData(Long id, RawFormat decodeFrom)", "class_method_signature": "GeoStoreClient.getRawData(Long id, RawFormat decodeFrom)", "testcase": false, "constructor": false}, {"identifier": "getRawData", "parameters": "(Class<T> clazz, Long id, RawFormat decodeFrom)", "modifiers": "public", "return": "T", "signature": "T getRawData(Class<T> clazz, Long id, RawFormat decodeFrom)", "full_signature": "public T getRawData(Class<T> clazz, Long id, RawFormat decodeFrom)", "class_method_signature": "GeoStoreClient.getRawData(Class<T> clazz, Long id, RawFormat decodeFrom)", "testcase": false, "constructor": false}, {"identifier": "setData", "parameters": "(Long id, String data)", "modifiers": "public", "return": "void", "signature": "void setData(Long id, String data)", "full_signature": "public void setData(Long id, String data)", "class_method_signature": "GeoStoreClient.setData(Long id, String data)", "testcase": false, "constructor": false}, {"identifier": "updateData", "parameters": "(Long id, String data)", "modifiers": "public", "return": "void", "signature": "void updateData(Long id, String data)", "full_signature": "public void updateData(Long id, String data)", "class_method_signature": "GeoStoreClient.updateData(Long id, String data)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(RESTCategory category)", "modifiers": "public", "return": "Long", "signature": "Long insert(RESTCategory category)", "full_signature": "public Long insert(RESTCategory category)", "class_method_signature": "GeoStoreClient.insert(RESTCategory category)", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "(Long id)", "modifiers": "public", "return": "Category", "signature": "Category getCategory(Long id)", "full_signature": "public Category getCategory(Long id)", "class_method_signature": "GeoStoreClient.getCategory(Long id)", "testcase": false, "constructor": false}, {"identifier": "getCategoryCount", "parameters": "(String nameLike)", "modifiers": "public", "return": "Long", "signature": "Long getCategoryCount(String nameLike)", "full_signature": "public Long getCategoryCount(String nameLike)", "class_method_signature": "GeoStoreClient.getCategoryCount(String nameLike)", "testcase": false, "constructor": false}, {"identifier": "getCategories", "parameters": "(Integer page, Integer entries)", "modifiers": "public", "return": "CategoryList", "signature": "CategoryList getCategories(Integer page, Integer entries)", "full_signature": "public CategoryList getCategories(Integer page, Integer entries)", "class_method_signature": "GeoStoreClient.getCategories(Integer page, Integer entries)", "testcase": false, "constructor": false}, {"identifier": "getCategories", "parameters": "()", "modifiers": "public", "return": "CategoryList", "signature": "CategoryList getCategories()", "full_signature": "public CategoryList getCategories()", "class_method_signature": "GeoStoreClient.getCategories()", "testcase": false, "constructor": false}, {"identifier": "deleteCategory", "parameters": "(Long id)", "modifiers": "public", "return": "void", "signature": "void deleteCategory(Long id)", "full_signature": "public void deleteCategory(Long id)", "class_method_signature": "GeoStoreClient.deleteCategory(Long id)", "testcase": false, "constructor": false}, {"identifier": "searchUserGroup", "parameters": "(Integer start,Integer limit, String nameLike, boolean all)", "modifiers": "public", "return": "ExtGroupList", "signature": "ExtGroupList searchUserGroup(Integer start,Integer limit, String nameLike, boolean all)", "full_signature": "public ExtGroupList searchUserGroup(Integer start,Integer limit, String nameLike, boolean all)", "class_method_signature": "GeoStoreClient.searchUserGroup(Integer start,Integer limit, String nameLike, boolean all)", "testcase": false, "constructor": false}, {"identifier": "searchUserGroup", "parameters": "(Integer start,Integer limit, String nameLike)", "modifiers": "public", "return": "ExtGroupList", "signature": "ExtGroupList searchUserGroup(Integer start,Integer limit, String nameLike)", "full_signature": "public ExtGroupList searchUserGroup(Integer start,Integer limit, String nameLike)", "class_method_signature": "GeoStoreClient.searchUserGroup(Integer start,Integer limit, String nameLike)", "testcase": false, "constructor": false}, {"identifier": "getShortResource", "parameters": "(long id)", "modifiers": "public", "return": "ShortResource", "signature": "ShortResource getShortResource(long id)", "full_signature": "public ShortResource getShortResource(long id)", "class_method_signature": "GeoStoreClient.getShortResource(long id)", "testcase": false, "constructor": false}, {"identifier": "getBaseWebResource", "parameters": "()", "modifiers": "protected", "return": "WebResource", "signature": "WebResource getBaseWebResource()", "full_signature": "protected WebResource getBaseWebResource()", "class_method_signature": "GeoStoreClient.getBaseWebResource()", "testcase": false, "constructor": false}, {"identifier": "getBaseWebResource", "parameters": "(Object... path)", "modifiers": "protected", "return": "WebResource", "signature": "WebResource getBaseWebResource(Object... path)", "full_signature": "protected WebResource getBaseWebResource(Object... path)", "class_method_signature": "GeoStoreClient.getBaseWebResource(Object... path)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPassword()", "full_signature": "public String getPassword()", "class_method_signature": "GeoStoreClient.getPassword()", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(String password)", "modifiers": "public", "return": "void", "signature": "void setPassword(String password)", "full_signature": "public void setPassword(String password)", "class_method_signature": "GeoStoreClient.setPassword(String password)", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUsername()", "full_signature": "public String getUsername()", "class_method_signature": "GeoStoreClient.getUsername()", "testcase": false, "constructor": false}, {"identifier": "setUsername", "parameters": "(String username)", "modifiers": "public", "return": "void", "signature": "void setUsername(String username)", "full_signature": "public void setUsername(String username)", "class_method_signature": "GeoStoreClient.setUsername(String username)", "testcase": false, "constructor": false}, {"identifier": "getGeostoreRestUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGeostoreRestUrl()", "full_signature": "public String getGeostoreRestUrl()", "class_method_signature": "GeoStoreClient.getGeostoreRestUrl()", "testcase": false, "constructor": false}, {"identifier": "setGeostoreRestUrl", "parameters": "(String geostoreRestUrl)", "modifiers": "public", "return": "void", "signature": "void setGeostoreRestUrl(String geostoreRestUrl)", "full_signature": "public void setGeostoreRestUrl(String geostoreRestUrl)", "class_method_signature": "GeoStoreClient.setGeostoreRestUrl(String geostoreRestUrl)", "testcase": false, "constructor": false}], "file": "src/modules/rest/client/src/main/java/it/geosolutions/geostore/services/rest/GeoStoreClient.java"}, "focal_method": {"identifier": "updateSecurityRules", "parameters": "(Long resourceId, SecurityRuleList rules)", "modifiers": "public", "return": "void", "body": "public void updateSecurityRules(Long resourceId, SecurityRuleList rules)\n    {\n    \t getBaseWebResource(\"resources\", \"resource\", resourceId, \"permissions\")\n    \t \t.header(\"Content-Type\", MediaType.TEXT_XML)\n                 .accept(MediaType.TEXT_PLAIN)\n    \t \t.post(rules);\n    }", "signature": "void updateSecurityRules(Long resourceId, SecurityRuleList rules)", "full_signature": "public void updateSecurityRules(Long resourceId, SecurityRuleList rules)", "class_method_signature": "GeoStoreClient.updateSecurityRules(Long resourceId, SecurityRuleList rules)", "testcase": false, "constructor": false, "invocations": ["post", "accept", "header", "getBaseWebResource"]}, "repository": {"repo_id": 4157021, "url": "https://github.com/geosolutions-it/geostore", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 19, "size": 1798, "license": "licensed"}}