{"test_class": {"identifier": "VolumeObjectTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    VolumeDao volumeDao;", "modifier": "@Mock", "type": "VolumeDao", "declarator": "volumeDao", "var_name": "volumeDao"}, {"original_string": "@Mock\n    VolumeDataStoreDao volumeStoreDao;", "modifier": "@Mock", "type": "VolumeDataStoreDao", "declarator": "volumeStoreDao", "var_name": "volumeStoreDao"}, {"original_string": "@Mock\n    ObjectInDataStoreManager objectInStoreMgr;", "modifier": "@Mock", "type": "ObjectInDataStoreManager", "declarator": "objectInStoreMgr", "var_name": "objectInStoreMgr"}, {"original_string": "@Mock\n    VMInstanceDao vmInstanceDao;", "modifier": "@Mock", "type": "VMInstanceDao", "declarator": "vmInstanceDao", "var_name": "vmInstanceDao"}, {"original_string": "@Mock\n    DiskOfferingDao diskOfferingDao;", "modifier": "@Mock", "type": "DiskOfferingDao", "declarator": "diskOfferingDao", "var_name": "diskOfferingDao"}, {"original_string": "@InjectMocks\n    VolumeObject volumeObject;", "modifier": "@InjectMocks", "type": "VolumeObject", "declarator": "volumeObject", "var_name": "volumeObject"}], "file": "engine/storage/volume/src/test/java/org/apache/cloudstack/storage/volume/VolumeObjectTest.java"}, "test_case": {"identifier": "testStateTransit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStateTransit() {\n        boolean result = volumeObject.stateTransit(Volume.Event.OperationFailed);\n        Assert.assertFalse(\"since the volume doesnt exist in the db, the operation should fail but, should not throw any exception\", result);\n    }", "signature": "void testStateTransit()", "full_signature": "@Test public void testStateTransit()", "class_method_signature": "VolumeObjectTest.testStateTransit()", "testcase": true, "constructor": false, "invocations": ["stateTransit", "assertFalse"]}, "focal_class": {"identifier": "VolumeObject", "superclass": "", "interfaces": "implements VolumeInfo", "fields": [{"original_string": "private static final Logger s_logger = LoggerFactory.getLogger(VolumeObject.class);", "modifier": "private static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(VolumeObject.class)", "var_name": "s_logger"}, {"original_string": "protected VolumeVO volumeVO;", "modifier": "protected", "type": "VolumeVO", "declarator": "volumeVO", "var_name": "volumeVO"}, {"original_string": "private StateMachine2<Volume.State, Volume.Event, Volume> _volStateMachine;", "modifier": "private", "type": "StateMachine2<Volume.State, Volume.Event, Volume>", "declarator": "_volStateMachine", "var_name": "_volStateMachine"}, {"original_string": "protected DataStore dataStore;", "modifier": "protected", "type": "DataStore", "declarator": "dataStore", "var_name": "dataStore"}, {"original_string": "@Inject\n    VolumeDao volumeDao;", "modifier": "@Inject", "type": "VolumeDao", "declarator": "volumeDao", "var_name": "volumeDao"}, {"original_string": "@Inject\n    VolumeDataStoreDao volumeStoreDao;", "modifier": "@Inject", "type": "VolumeDataStoreDao", "declarator": "volumeStoreDao", "var_name": "volumeStoreDao"}, {"original_string": "@Inject\n    ObjectInDataStoreManager objectInStoreMgr;", "modifier": "@Inject", "type": "ObjectInDataStoreManager", "declarator": "objectInStoreMgr", "var_name": "objectInStoreMgr"}, {"original_string": "@Inject\n    VMInstanceDao vmInstanceDao;", "modifier": "@Inject", "type": "VMInstanceDao", "declarator": "vmInstanceDao", "var_name": "vmInstanceDao"}, {"original_string": "@Inject\n    DiskOfferingDao diskOfferingDao;", "modifier": "@Inject", "type": "DiskOfferingDao", "declarator": "diskOfferingDao", "var_name": "diskOfferingDao"}, {"original_string": "private Object payload;", "modifier": "private", "type": "Object", "declarator": "payload", "var_name": "payload"}], "methods": [{"identifier": "VolumeObject", "parameters": "()", "modifiers": "public", "return": "", "signature": " VolumeObject()", "full_signature": "public  VolumeObject()", "class_method_signature": "VolumeObject.VolumeObject()", "testcase": false, "constructor": true}, {"identifier": "configure", "parameters": "(DataStore dataStore, VolumeVO volumeVO)", "modifiers": "protected", "return": "void", "signature": "void configure(DataStore dataStore, VolumeVO volumeVO)", "full_signature": "protected void configure(DataStore dataStore, VolumeVO volumeVO)", "class_method_signature": "VolumeObject.configure(DataStore dataStore, VolumeVO volumeVO)", "testcase": false, "constructor": false}, {"identifier": "getVolumeObject", "parameters": "(DataStore dataStore, VolumeVO volumeVO)", "modifiers": "public static", "return": "VolumeObject", "signature": "VolumeObject getVolumeObject(DataStore dataStore, VolumeVO volumeVO)", "full_signature": "public static VolumeObject getVolumeObject(DataStore dataStore, VolumeVO volumeVO)", "class_method_signature": "VolumeObject.getVolumeObject(DataStore dataStore, VolumeVO volumeVO)", "testcase": false, "constructor": false}, {"identifier": "getAttachedVmName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAttachedVmName()", "full_signature": "@Override public String getAttachedVmName()", "class_method_signature": "VolumeObject.getAttachedVmName()", "testcase": false, "constructor": false}, {"identifier": "getAttachedVM", "parameters": "()", "modifiers": "@Override public", "return": "VirtualMachine", "signature": "VirtualMachine getAttachedVM()", "full_signature": "@Override public VirtualMachine getAttachedVM()", "class_method_signature": "VolumeObject.getAttachedVM()", "testcase": false, "constructor": false}, {"identifier": "getUuid", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUuid()", "full_signature": "@Override public String getUuid()", "class_method_signature": "VolumeObject.getUuid()", "testcase": false, "constructor": false}, {"identifier": "setUuid", "parameters": "(String uuid)", "modifiers": "public", "return": "void", "signature": "void setUuid(String uuid)", "full_signature": "public void setUuid(String uuid)", "class_method_signature": "VolumeObject.setUuid(String uuid)", "testcase": false, "constructor": false}, {"identifier": "get_iScsiName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String get_iScsiName()", "full_signature": "@Override public String get_iScsiName()", "class_method_signature": "VolumeObject.get_iScsiName()", "testcase": false, "constructor": false}, {"identifier": "setSize", "parameters": "(Long size)", "modifiers": "public", "return": "void", "signature": "void setSize(Long size)", "full_signature": "public void setSize(Long size)", "class_method_signature": "VolumeObject.setSize(Long size)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "@Override public", "return": "Volume.State", "signature": "Volume.State getState()", "full_signature": "@Override public Volume.State getState()", "class_method_signature": "VolumeObject.getState()", "testcase": false, "constructor": false}, {"identifier": "getDataStore", "parameters": "()", "modifiers": "@Override public", "return": "DataStore", "signature": "DataStore getDataStore()", "full_signature": "@Override public DataStore getDataStore()", "class_method_signature": "VolumeObject.getDataStore()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getSize()", "full_signature": "@Override public Long getSize()", "class_method_signature": "VolumeObject.getSize()", "testcase": false, "constructor": false}, {"identifier": "getMinIops", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getMinIops()", "full_signature": "@Override public Long getMinIops()", "class_method_signature": "VolumeObject.getMinIops()", "testcase": false, "constructor": false}, {"identifier": "getMaxIops", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getMaxIops()", "full_signature": "@Override public Long getMaxIops()", "class_method_signature": "VolumeObject.getMaxIops()", "testcase": false, "constructor": false}, {"identifier": "getHypervisorSnapshotReserve", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getHypervisorSnapshotReserve()", "full_signature": "@Override public Integer getHypervisorSnapshotReserve()", "class_method_signature": "VolumeObject.getHypervisorSnapshotReserve()", "testcase": false, "constructor": false}, {"identifier": "isDisplayVolume", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisplayVolume()", "full_signature": "@Override public boolean isDisplayVolume()", "class_method_signature": "VolumeObject.isDisplayVolume()", "testcase": false, "constructor": false}, {"identifier": "isDisplay", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisplay()", "full_signature": "@Override public boolean isDisplay()", "class_method_signature": "VolumeObject.isDisplay()", "testcase": false, "constructor": false}, {"identifier": "getVolumeId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getVolumeId()", "full_signature": "public long getVolumeId()", "class_method_signature": "VolumeObject.getVolumeId()", "testcase": false, "constructor": false}, {"identifier": "stateTransit", "parameters": "(Volume.Event event)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean stateTransit(Volume.Event event)", "full_signature": "@Override public boolean stateTransit(Volume.Event event)", "class_method_signature": "VolumeObject.stateTransit(Volume.Event event)", "testcase": false, "constructor": false}, {"identifier": "getDiskOfferingVO", "parameters": "()", "modifiers": "private", "return": "DiskOfferingVO", "signature": "DiskOfferingVO getDiskOfferingVO()", "full_signature": "private DiskOfferingVO getDiskOfferingVO()", "class_method_signature": "VolumeObject.getDiskOfferingVO()", "testcase": false, "constructor": false}, {"identifier": "getBytesReadRate", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getBytesReadRate()", "full_signature": "@Override public Long getBytesReadRate()", "class_method_signature": "VolumeObject.getBytesReadRate()", "testcase": false, "constructor": false}, {"identifier": "getBytesWriteRate", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getBytesWriteRate()", "full_signature": "@Override public Long getBytesWriteRate()", "class_method_signature": "VolumeObject.getBytesWriteRate()", "testcase": false, "constructor": false}, {"identifier": "getIopsReadRate", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getIopsReadRate()", "full_signature": "@Override public Long getIopsReadRate()", "class_method_signature": "VolumeObject.getIopsReadRate()", "testcase": false, "constructor": false}, {"identifier": "getIopsWriteRate", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getIopsWriteRate()", "full_signature": "@Override public Long getIopsWriteRate()", "class_method_signature": "VolumeObject.getIopsWriteRate()", "testcase": false, "constructor": false}, {"identifier": "getCacheMode", "parameters": "()", "modifiers": "@Override public", "return": "DiskCacheMode", "signature": "DiskCacheMode getCacheMode()", "full_signature": "@Override public DiskCacheMode getCacheMode()", "class_method_signature": "VolumeObject.getCacheMode()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void update()", "full_signature": "public void update()", "class_method_signature": "VolumeObject.update()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getId()", "full_signature": "@Override public long getId()", "class_method_signature": "VolumeObject.getId()", "testcase": false, "constructor": false}, {"identifier": "isAttachedVM", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAttachedVM()", "full_signature": "@Override public boolean isAttachedVM()", "class_method_signature": "VolumeObject.isAttachedVM()", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUri()", "full_signature": "@Override public String getUri()", "class_method_signature": "VolumeObject.getUri()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "DataObjectType", "signature": "DataObjectType getType()", "full_signature": "@Override public DataObjectType getType()", "class_method_signature": "VolumeObject.getType()", "testcase": false, "constructor": false}, {"identifier": "processEvent", "parameters": "(ObjectInDataStoreStateMachine.Event event)", "modifiers": "@Override public", "return": "void", "signature": "void processEvent(ObjectInDataStoreStateMachine.Event event)", "full_signature": "@Override public void processEvent(ObjectInDataStoreStateMachine.Event event)", "class_method_signature": "VolumeObject.processEvent(ObjectInDataStoreStateMachine.Event event)", "testcase": false, "constructor": false}, {"identifier": "processEventOnly", "parameters": "(ObjectInDataStoreStateMachine.Event event)", "modifiers": "@Override public", "return": "void", "signature": "void processEventOnly(ObjectInDataStoreStateMachine.Event event)", "full_signature": "@Override public void processEventOnly(ObjectInDataStoreStateMachine.Event event)", "class_method_signature": "VolumeObject.processEventOnly(ObjectInDataStoreStateMachine.Event event)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "VolumeObject.getName()", "testcase": false, "constructor": false}, {"identifier": "getInstanceId", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getInstanceId()", "full_signature": "@Override public Long getInstanceId()", "class_method_signature": "VolumeObject.getInstanceId()", "testcase": false, "constructor": false}, {"identifier": "getFolder", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFolder()", "full_signature": "@Override public String getFolder()", "class_method_signature": "VolumeObject.getFolder()", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPath()", "full_signature": "@Override public String getPath()", "class_method_signature": "VolumeObject.getPath()", "testcase": false, "constructor": false}, {"identifier": "getPodId", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getPodId()", "full_signature": "@Override public Long getPodId()", "class_method_signature": "VolumeObject.getPodId()", "testcase": false, "constructor": false}, {"identifier": "getDataCenterId", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getDataCenterId()", "full_signature": "@Override public long getDataCenterId()", "class_method_signature": "VolumeObject.getDataCenterId()", "testcase": false, "constructor": false}, {"identifier": "getVolumeType", "parameters": "()", "modifiers": "@Override public", "return": "Type", "signature": "Type getVolumeType()", "full_signature": "@Override public Type getVolumeType()", "class_method_signature": "VolumeObject.getVolumeType()", "testcase": false, "constructor": false}, {"identifier": "getPoolId", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getPoolId()", "full_signature": "@Override public Long getPoolId()", "class_method_signature": "VolumeObject.getPoolId()", "testcase": false, "constructor": false}, {"identifier": "getAttached", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getAttached()", "full_signature": "@Override public Date getAttached()", "class_method_signature": "VolumeObject.getAttached()", "testcase": false, "constructor": false}, {"identifier": "getDeviceId", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getDeviceId()", "full_signature": "@Override public Long getDeviceId()", "class_method_signature": "VolumeObject.getDeviceId()", "testcase": false, "constructor": false}, {"identifier": "getCreated", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getCreated()", "full_signature": "@Override public Date getCreated()", "class_method_signature": "VolumeObject.getCreated()", "testcase": false, "constructor": false}, {"identifier": "getDiskOfferingId", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getDiskOfferingId()", "full_signature": "@Override public Long getDiskOfferingId()", "class_method_signature": "VolumeObject.getDiskOfferingId()", "testcase": false, "constructor": false}, {"identifier": "getChainInfo", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getChainInfo()", "full_signature": "@Override public String getChainInfo()", "class_method_signature": "VolumeObject.getChainInfo()", "testcase": false, "constructor": false}, {"identifier": "isRecreatable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRecreatable()", "full_signature": "@Override public boolean isRecreatable()", "class_method_signature": "VolumeObject.isRecreatable()", "testcase": false, "constructor": false}, {"identifier": "getUpdatedCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getUpdatedCount()", "full_signature": "@Override public long getUpdatedCount()", "class_method_signature": "VolumeObject.getUpdatedCount()", "testcase": false, "constructor": false}, {"identifier": "incrUpdatedCount", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void incrUpdatedCount()", "full_signature": "@Override public void incrUpdatedCount()", "class_method_signature": "VolumeObject.incrUpdatedCount()", "testcase": false, "constructor": false}, {"identifier": "getUpdated", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getUpdated()", "full_signature": "@Override public Date getUpdated()", "class_method_signature": "VolumeObject.getUpdated()", "testcase": false, "constructor": false}, {"identifier": "getReservationId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getReservationId()", "full_signature": "@Override public String getReservationId()", "class_method_signature": "VolumeObject.getReservationId()", "testcase": false, "constructor": false}, {"identifier": "setReservationId", "parameters": "(String reserv)", "modifiers": "@Override public", "return": "void", "signature": "void setReservationId(String reserv)", "full_signature": "@Override public void setReservationId(String reserv)", "class_method_signature": "VolumeObject.setReservationId(String reserv)", "testcase": false, "constructor": false}, {"identifier": "getAccountId", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getAccountId()", "full_signature": "@Override public long getAccountId()", "class_method_signature": "VolumeObject.getAccountId()", "testcase": false, "constructor": false}, {"identifier": "getDomainId", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getDomainId()", "full_signature": "@Override public long getDomainId()", "class_method_signature": "VolumeObject.getDomainId()", "testcase": false, "constructor": false}, {"identifier": "getTemplateId", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getTemplateId()", "full_signature": "@Override public Long getTemplateId()", "class_method_signature": "VolumeObject.getTemplateId()", "testcase": false, "constructor": false}, {"identifier": "addPayload", "parameters": "(Object data)", "modifiers": "@Override public", "return": "void", "signature": "void addPayload(Object data)", "full_signature": "@Override public void addPayload(Object data)", "class_method_signature": "VolumeObject.addPayload(Object data)", "testcase": false, "constructor": false}, {"identifier": "getpayload", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object getpayload()", "full_signature": "@Override public Object getpayload()", "class_method_signature": "VolumeObject.getpayload()", "testcase": false, "constructor": false}, {"identifier": "getVolume", "parameters": "()", "modifiers": "public", "return": "VolumeVO", "signature": "VolumeVO getVolume()", "full_signature": "public VolumeVO getVolume()", "class_method_signature": "VolumeObject.getVolume()", "testcase": false, "constructor": false}, {"identifier": "getHypervisorType", "parameters": "()", "modifiers": "@Override public", "return": "HypervisorType", "signature": "HypervisorType getHypervisorType()", "full_signature": "@Override public HypervisorType getHypervisorType()", "class_method_signature": "VolumeObject.getHypervisorType()", "testcase": false, "constructor": false}, {"identifier": "getLastPoolId", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getLastPoolId()", "full_signature": "@Override public Long getLastPoolId()", "class_method_signature": "VolumeObject.getLastPoolId()", "testcase": false, "constructor": false}, {"identifier": "getTO", "parameters": "()", "modifiers": "@Override public", "return": "DataTO", "signature": "DataTO getTO()", "full_signature": "@Override public DataTO getTO()", "class_method_signature": "VolumeObject.getTO()", "testcase": false, "constructor": false}, {"identifier": "processEvent", "parameters": "(ObjectInDataStoreStateMachine.Event event, Answer answer)", "modifiers": "@Override public", "return": "void", "signature": "void processEvent(ObjectInDataStoreStateMachine.Event event, Answer answer)", "full_signature": "@Override public void processEvent(ObjectInDataStoreStateMachine.Event event, Answer answer)", "class_method_signature": "VolumeObject.processEvent(ObjectInDataStoreStateMachine.Event event, Answer answer)", "testcase": false, "constructor": false}, {"identifier": "incRefCount", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void incRefCount()", "full_signature": "@Override public void incRefCount()", "class_method_signature": "VolumeObject.incRefCount()", "testcase": false, "constructor": false}, {"identifier": "decRefCount", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void decRefCount()", "full_signature": "@Override public void decRefCount()", "class_method_signature": "VolumeObject.decRefCount()", "testcase": false, "constructor": false}, {"identifier": "getRefCount", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getRefCount()", "full_signature": "@Override public Long getRefCount()", "class_method_signature": "VolumeObject.getRefCount()", "testcase": false, "constructor": false}, {"identifier": "processEventOnly", "parameters": "(ObjectInDataStoreStateMachine.Event event, Answer answer)", "modifiers": "@Override public", "return": "void", "signature": "void processEventOnly(ObjectInDataStoreStateMachine.Event event, Answer answer)", "full_signature": "@Override public void processEventOnly(ObjectInDataStoreStateMachine.Event event, Answer answer)", "class_method_signature": "VolumeObject.processEventOnly(ObjectInDataStoreStateMachine.Event event, Answer answer)", "testcase": false, "constructor": false}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "ImageFormat", "signature": "ImageFormat getFormat()", "full_signature": "@Override public ImageFormat getFormat()", "class_method_signature": "VolumeObject.getFormat()", "testcase": false, "constructor": false}, {"identifier": "getProvisioningType", "parameters": "()", "modifiers": "@Override public", "return": "ProvisioningType", "signature": "ProvisioningType getProvisioningType()", "full_signature": "@Override public ProvisioningType getProvisioningType()", "class_method_signature": "VolumeObject.getProvisioningType()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean delete()", "full_signature": "@Override public boolean delete()", "class_method_signature": "VolumeObject.delete()", "testcase": false, "constructor": false}, {"identifier": "getVmSnapshotChainSize", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getVmSnapshotChainSize()", "full_signature": "@Override public Long getVmSnapshotChainSize()", "class_method_signature": "VolumeObject.getVmSnapshotChainSize()", "testcase": false, "constructor": false}, {"identifier": "getEntityType", "parameters": "()", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> getEntityType()", "full_signature": "@Override public Class<?> getEntityType()", "class_method_signature": "VolumeObject.getEntityType()", "testcase": false, "constructor": false}], "file": "engine/storage/volume/src/main/java/org/apache/cloudstack/storage/volume/VolumeObject.java"}, "focal_method": {"identifier": "stateTransit", "parameters": "(Volume.Event event)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean  stateTransit(Volume.Event event) {\n        boolean result = false;\n        try {\n            volumeVO = volumeDao.findById(volumeVO.getId());\n            if(volumeVO != null) {\n                result = _volStateMachine.transitTo(volumeVO, event, null, volumeDao);\n                volumeVO = volumeDao.findById(volumeVO.getId());\n            }\n        } catch (NoTransitionException e) {\n            String errorMessage = \"Failed to transit volume: \" + getVolumeId() + \", due to: \" + e.toString();\n            s_logger.debug(errorMessage);\n            throw new CloudRuntimeException(errorMessage);\n        }\n        return result;\n    }", "signature": "boolean stateTransit(Volume.Event event)", "full_signature": "@Override public boolean stateTransit(Volume.Event event)", "class_method_signature": "VolumeObject.stateTransit(Volume.Event event)", "testcase": false, "constructor": false, "invocations": ["findById", "getId", "transitTo", "findById", "getId", "getVolumeId", "toString", "debug"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}