{"test_class": {"identifier": "UtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/main/java/com/gxchain/client/graphenej/UtilTest.java"}, "test_case": {"identifier": "testRevertUnsignedLong", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRevertUnsignedLong(){\n        UnsignedLong unsignedLong = UnsignedLong.valueOf(\"12179241258665439971\");\n        byte[] reversed = Util.revertUnsignedLong(unsignedLong);\n        Assert.assertEquals(\"e3f28878655b05a9\", Util.bytesToHex(reversed));\n    }", "signature": "void testRevertUnsignedLong()", "full_signature": "@Test public void testRevertUnsignedLong()", "class_method_signature": "UtilTest.testRevertUnsignedLong()", "testcase": true, "constructor": false, "invocations": ["valueOf", "revertUnsignedLong", "assertEquals", "bytesToHex"]}, "focal_class": {"identifier": "Util", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final org.slf4j.Logger LOGGER = LoggerFactory.getLogger(Util.class);", "modifier": "private static final", "type": "org.slf4j.Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Util.class)", "var_name": "LOGGER"}, {"original_string": "public static final String TAG = \"Util\";", "modifier": "public static final", "type": "String", "declarator": "TAG = \"Util\"", "var_name": "TAG"}, {"original_string": "private static final char[] hexArray = \"0123456789abcdef\".toCharArray();", "modifier": "private static final", "type": "char[]", "declarator": "hexArray = \"0123456789abcdef\".toCharArray()", "var_name": "hexArray"}, {"original_string": "public static final int LZMA = 0;", "modifier": "public static final", "type": "int", "declarator": "LZMA = 0", "var_name": "LZMA"}, {"original_string": "public static final int XZ = 1;", "modifier": "public static final", "type": "int", "declarator": "XZ = 1", "var_name": "XZ"}, {"original_string": "public static final int KEY_LENGTH = 32;", "modifier": "public static final", "type": "int", "declarator": "KEY_LENGTH = 32", "var_name": "KEY_LENGTH"}, {"original_string": "public static final String TIME_DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss\";", "modifier": "public static final", "type": "String", "declarator": "TIME_DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss\"", "var_name": "TIME_DATE_FORMAT"}], "methods": [{"identifier": "hexToBytes", "parameters": "(String s)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hexToBytes(String s)", "full_signature": "public static byte[] hexToBytes(String s)", "class_method_signature": "Util.hexToBytes(String s)", "testcase": false, "constructor": false}, {"identifier": "bytesToHex", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHex(byte[] bytes)", "full_signature": "public static String bytesToHex(byte[] bytes)", "class_method_signature": "Util.bytesToHex(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "hexlify", "parameters": "(String data)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hexlify(String data)", "full_signature": "public static byte[] hexlify(String data)", "class_method_signature": "Util.hexlify(String data)", "testcase": false, "constructor": false}, {"identifier": "compress", "parameters": "(byte[] inputBytes, int which)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] compress(byte[] inputBytes, int which)", "full_signature": "public static byte[] compress(byte[] inputBytes, int which)", "class_method_signature": "Util.compress(byte[] inputBytes, int which)", "testcase": false, "constructor": false}, {"identifier": "decompress", "parameters": "(byte[] inputBytes, int which)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decompress(byte[] inputBytes, int which)", "full_signature": "public static byte[] decompress(byte[] inputBytes, int which)", "class_method_signature": "Util.decompress(byte[] inputBytes, int which)", "testcase": false, "constructor": false}, {"identifier": "revertInteger", "parameters": "(Integer input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] revertInteger(Integer input)", "full_signature": "public static byte[] revertInteger(Integer input)", "class_method_signature": "Util.revertInteger(Integer input)", "testcase": false, "constructor": false}, {"identifier": "revertShort", "parameters": "(Short input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] revertShort(Short input)", "full_signature": "public static byte[] revertShort(Short input)", "class_method_signature": "Util.revertShort(Short input)", "testcase": false, "constructor": false}, {"identifier": "revertLong", "parameters": "(Long input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] revertLong(Long input)", "full_signature": "public static byte[] revertLong(Long input)", "class_method_signature": "Util.revertLong(Long input)", "testcase": false, "constructor": false}, {"identifier": "revertUnsignedLong", "parameters": "(UnsignedLong input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] revertUnsignedLong(UnsignedLong input)", "full_signature": "public static byte[] revertUnsignedLong(UnsignedLong input)", "class_method_signature": "Util.revertUnsignedLong(UnsignedLong input)", "testcase": false, "constructor": false}, {"identifier": "revertBytes", "parameters": "(byte[] array)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] revertBytes(byte[] array)", "full_signature": "public static byte[] revertBytes(byte[] array)", "class_method_signature": "Util.revertBytes(byte[] array)", "testcase": false, "constructor": false}, {"identifier": "encryptAES", "parameters": "(byte[] input, byte[] key)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encryptAES(byte[] input, byte[] key)", "full_signature": "public static byte[] encryptAES(byte[] input, byte[] key)", "class_method_signature": "Util.encryptAES(byte[] input, byte[] key)", "testcase": false, "constructor": false}, {"identifier": "decryptAES", "parameters": "(byte[] input, byte[] key)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decryptAES(byte[] input, byte[] key)", "full_signature": "public static byte[] decryptAES(byte[] input, byte[] key)", "class_method_signature": "Util.decryptAES(byte[] input, byte[] key)", "testcase": false, "constructor": false}, {"identifier": "byteToString", "parameters": "(byte[] input)", "modifiers": "public static", "return": "String", "signature": "String byteToString(byte[] input)", "full_signature": "public static String byteToString(byte[] input)", "class_method_signature": "Util.byteToString(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "fromBase", "parameters": "(AssetAmount assetAmount)", "modifiers": "public static", "return": "double", "signature": "double fromBase(AssetAmount assetAmount)", "full_signature": "public static double fromBase(AssetAmount assetAmount)", "class_method_signature": "Util.fromBase(AssetAmount assetAmount)", "testcase": false, "constructor": false}, {"identifier": "toBase", "parameters": "(double value, int precision)", "modifiers": "public static", "return": "long", "signature": "long toBase(double value, int precision)", "full_signature": "public static long toBase(double value, int precision)", "class_method_signature": "Util.toBase(double value, int precision)", "testcase": false, "constructor": false}], "file": "src/main/java/com/gxchain/client/graphenej/Util.java"}, "focal_method": {"identifier": "revertUnsignedLong", "parameters": "(UnsignedLong input)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] revertUnsignedLong(UnsignedLong input) {\n        return ByteBuffer.allocate(Long.SIZE / 8).putLong(Long.reverseBytes(input.longValue())).array();\n    }", "signature": "byte[] revertUnsignedLong(UnsignedLong input)", "full_signature": "public static byte[] revertUnsignedLong(UnsignedLong input)", "class_method_signature": "Util.revertUnsignedLong(UnsignedLong input)", "testcase": false, "constructor": false, "invocations": ["array", "putLong", "allocate", "reverseBytes", "longValue"]}, "repository": {"repo_id": 140260316, "url": "https://github.com/gxchain/gxclient-java", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 11, "size": 457, "license": "licensed"}}