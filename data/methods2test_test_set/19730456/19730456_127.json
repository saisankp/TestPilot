{"test_class": {"identifier": "ByzantiumConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] FAKE_HASH = {11, 12};", "modifier": "private static final", "type": "byte[]", "declarator": "FAKE_HASH = {11, 12}", "var_name": "FAKE_HASH"}], "file": "ethereumj-core/src/test/java/org/ethereum/config/blockchain/ByzantiumConfigTest.java"}, "test_case": {"identifier": "testDifficultyAdjustedForParentBlockHavingUncles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDifficultyAdjustedForParentBlockHavingUncles() throws Exception {\n        ByzantiumConfig byzantiumConfig = new ByzantiumConfig(new TestBlockchainConfig());\n        BlockHeader parent = new BlockHeaderBuilder(new byte[]{11, 12}, 0L, 0)\n                .withTimestamp(0L)\n                .withUncles(new byte[]{1, 2})\n                .build();\n        BlockHeader current = new BlockHeaderBuilder(parent.getHash(), 1L, 0)\n                .withTimestamp(9L)\n                .build();\n        assertEquals(1, byzantiumConfig.getCalcDifficultyMultiplier(current, parent).intValue());\n    }", "signature": "void testDifficultyAdjustedForParentBlockHavingUncles()", "full_signature": "@Test public void testDifficultyAdjustedForParentBlockHavingUncles()", "class_method_signature": "ByzantiumConfigTest.testDifficultyAdjustedForParentBlockHavingUncles()", "testcase": true, "constructor": false, "invocations": ["build", "withUncles", "withTimestamp", "build", "withTimestamp", "getHash", "assertEquals", "intValue", "getCalcDifficultyMultiplier"]}, "focal_class": {"identifier": "ByzantiumConfig", "superclass": "extends Eip160HFConfig", "interfaces": "", "fields": [{"original_string": "private final Constants constants;", "modifier": "private final", "type": "Constants", "declarator": "constants", "var_name": "constants"}], "methods": [{"identifier": "ByzantiumConfig", "parameters": "(BlockchainConfig parent)", "modifiers": "public", "return": "", "signature": " ByzantiumConfig(BlockchainConfig parent)", "full_signature": "public  ByzantiumConfig(BlockchainConfig parent)", "class_method_signature": "ByzantiumConfig.ByzantiumConfig(BlockchainConfig parent)", "testcase": false, "constructor": true}, {"identifier": "getConstants", "parameters": "()", "modifiers": "@Override public", "return": "Constants", "signature": "Constants getConstants()", "full_signature": "@Override public Constants getConstants()", "class_method_signature": "ByzantiumConfig.getConstants()", "testcase": false, "constructor": false}, {"identifier": "calcDifficulty", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override public BigInteger calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ByzantiumConfig.calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}, {"identifier": "getExplosion", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "protected", "return": "int", "signature": "int getExplosion(BlockHeader curBlock, BlockHeader parent)", "full_signature": "protected int getExplosion(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ByzantiumConfig.getExplosion(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}, {"identifier": "getCalcDifficultyMultiplier", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override public BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ByzantiumConfig.getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}, {"identifier": "eip198", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip198()", "full_signature": "@Override public boolean eip198()", "class_method_signature": "ByzantiumConfig.eip198()", "testcase": false, "constructor": false}, {"identifier": "eip206", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip206()", "full_signature": "@Override public boolean eip206()", "class_method_signature": "ByzantiumConfig.eip206()", "testcase": false, "constructor": false}, {"identifier": "eip211", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip211()", "full_signature": "@Override public boolean eip211()", "class_method_signature": "ByzantiumConfig.eip211()", "testcase": false, "constructor": false}, {"identifier": "eip212", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip212()", "full_signature": "@Override public boolean eip212()", "class_method_signature": "ByzantiumConfig.eip212()", "testcase": false, "constructor": false}, {"identifier": "eip213", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip213()", "full_signature": "@Override public boolean eip213()", "class_method_signature": "ByzantiumConfig.eip213()", "testcase": false, "constructor": false}, {"identifier": "eip214", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip214()", "full_signature": "@Override public boolean eip214()", "class_method_signature": "ByzantiumConfig.eip214()", "testcase": false, "constructor": false}, {"identifier": "eip658", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip658()", "full_signature": "@Override public boolean eip658()", "class_method_signature": "ByzantiumConfig.eip658()", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/config/blockchain/ByzantiumConfig.java"}, "focal_method": {"identifier": "getCalcDifficultyMultiplier", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override public", "return": "BigInteger", "body": "@Override\n    public BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent) {\n        long unclesAdj = parent.hasUncles() ? 2 : 1;\n        return BigInteger.valueOf(Math.max(unclesAdj - (curBlock.getTimestamp() - parent.getTimestamp()) / 9, -99));\n    }", "signature": "BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override public BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ByzantiumConfig.getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false, "invocations": ["hasUncles", "valueOf", "max", "getTimestamp", "getTimestamp"]}, "repository": {"repo_id": 19730456, "url": "https://github.com/ethereum/ethereumj", "language": "Java", "is_fork": false, "fork_count": 1034, "stargazer_count": 2058, "size": 47979, "license": "licensed"}}