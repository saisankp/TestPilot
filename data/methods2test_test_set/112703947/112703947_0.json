{"test_class": {"identifier": "JdbcLogServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private LogService logService;", "modifier": "@Autowired\n    private", "type": "LogService", "declarator": "logService", "var_name": "logService"}], "file": "myth-admin/src/test/java/org/dromara/myth/admin/service/log/JdbcLogServiceImplTest.java"}, "test_case": {"identifier": "listByPage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void listByPage() throws Exception {\n        ConditionQuery query = new ConditionQuery();\n\n        PageParameter pageParameter = new PageParameter(1, 10);\n\n        query.setPageParameter(pageParameter);\n        query.setApplicationName(\"account-service\");\n\n        final CommonPager<LogVO> pager = logService.listByPage(query);\n\n        Assert.assertNotNull(pager.getDataList());\n\n\n    }", "signature": "void listByPage()", "full_signature": "@Test public void listByPage()", "class_method_signature": "JdbcLogServiceImplTest.listByPage()", "testcase": true, "constructor": false, "invocations": ["setPageParameter", "setApplicationName", "listByPage", "assertNotNull", "getDataList"]}, "focal_class": {"identifier": "JdbcLogServiceImpl", "superclass": "", "interfaces": "implements LogService", "fields": [{"original_string": "@Autowired\n    private JdbcTemplate jdbcTemplate;", "modifier": "@Autowired\n    private", "type": "JdbcTemplate", "declarator": "jdbcTemplate", "var_name": "jdbcTemplate"}, {"original_string": "private String dbType;", "modifier": "private", "type": "String", "declarator": "dbType", "var_name": "dbType"}], "methods": [{"identifier": "listByPage", "parameters": "(final ConditionQuery query)", "modifiers": "@Override public", "return": "CommonPager<LogVO>", "signature": "CommonPager<LogVO> listByPage(final ConditionQuery query)", "full_signature": "@Override public CommonPager<LogVO> listByPage(final ConditionQuery query)", "class_method_signature": "JdbcLogServiceImpl.listByPage(final ConditionQuery query)", "testcase": false, "constructor": false}, {"identifier": "batchRemove", "parameters": "(final List<String> ids, final String appName)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean batchRemove(final List<String> ids, final String appName)", "full_signature": "@Override public Boolean batchRemove(final List<String> ids, final String appName)", "class_method_signature": "JdbcLogServiceImpl.batchRemove(final List<String> ids, final String appName)", "testcase": false, "constructor": false}, {"identifier": "updateRetry", "parameters": "(final String id, final Integer retry, final String appName)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean updateRetry(final String id, final Integer retry, final String appName)", "full_signature": "@Override public Boolean updateRetry(final String id, final Integer retry, final String appName)", "class_method_signature": "JdbcLogServiceImpl.updateRetry(final String id, final Integer retry, final String appName)", "testcase": false, "constructor": false}, {"identifier": "buildByMap", "parameters": "(final Map<String, Object> map)", "modifiers": "private", "return": "LogVO", "signature": "LogVO buildByMap(final Map<String, Object> map)", "full_signature": "private LogVO buildByMap(final Map<String, Object> map)", "class_method_signature": "JdbcLogServiceImpl.buildByMap(final Map<String, Object> map)", "testcase": false, "constructor": false}, {"identifier": "setDbType", "parameters": "(final String dbType)", "modifiers": "public", "return": "void", "signature": "void setDbType(final String dbType)", "full_signature": "public void setDbType(final String dbType)", "class_method_signature": "JdbcLogServiceImpl.setDbType(final String dbType)", "testcase": false, "constructor": false}, {"identifier": "buildPageSql", "parameters": "(final String sql, final PageParameter pageParameter)", "modifiers": "private", "return": "String", "signature": "String buildPageSql(final String sql, final PageParameter pageParameter)", "full_signature": "private String buildPageSql(final String sql, final PageParameter pageParameter)", "class_method_signature": "JdbcLogServiceImpl.buildPageSql(final String sql, final PageParameter pageParameter)", "testcase": false, "constructor": false}, {"identifier": "buildDelSql", "parameters": "(final String tableName, final String id)", "modifiers": "private", "return": "String", "signature": "String buildDelSql(final String tableName, final String id)", "full_signature": "private String buildDelSql(final String tableName, final String id)", "class_method_signature": "JdbcLogServiceImpl.buildDelSql(final String tableName, final String id)", "testcase": false, "constructor": false}], "file": "myth-admin/src/main/java/org/dromara/myth/admin/service/log/JdbcLogServiceImpl.java"}, "focal_method": {"identifier": "listByPage", "parameters": "(final ConditionQuery query)", "modifiers": "@Override public", "return": "CommonPager<LogVO>", "body": "@Override\n    public CommonPager<LogVO> listByPage(final ConditionQuery query) {\n        final String tableName = RepositoryPathUtils.buildDbTableName(query.getApplicationName());\n        final PageParameter pageParameter = query.getPageParameter();\n        StringBuilder sqlBuilder = new StringBuilder();\n        sqlBuilder.append(\"select trans_id,target_class,target_method,\"\n                + \" retried_count,create_time,last_time,version,error_msg from \")\n                .append(tableName).append(\" where 1= 1 \");\n\n        if (StringUtils.isNoneBlank(query.getTransId())) {\n            sqlBuilder.append(\" and trans_id = \").append(query.getTransId());\n        }\n        final String sql = buildPageSql(sqlBuilder.toString(), pageParameter);\n        CommonPager<LogVO> pager = new CommonPager<>();\n        final List<Map<String, Object>> mapList = jdbcTemplate.queryForList(sql);\n        if (CollectionUtils.isNotEmpty(mapList)) {\n            pager.setDataList(mapList.stream().map(this::buildByMap).collect(Collectors.toList()));\n        }\n        final Integer totalCount =\n                jdbcTemplate.queryForObject(String.format(\"select count(1) from %s\", tableName), Integer.class);\n        pager.setPage(PageHelper.buildPage(pageParameter, totalCount));\n        return pager;\n    }", "signature": "CommonPager<LogVO> listByPage(final ConditionQuery query)", "full_signature": "@Override public CommonPager<LogVO> listByPage(final ConditionQuery query)", "class_method_signature": "JdbcLogServiceImpl.listByPage(final ConditionQuery query)", "testcase": false, "constructor": false, "invocations": ["buildDbTableName", "getApplicationName", "getPageParameter", "append", "append", "append", "isNoneBlank", "getTransId", "append", "append", "getTransId", "buildPageSql", "toString", "queryForList", "isNotEmpty", "setDataList", "collect", "map", "stream", "toList", "queryForObject", "format", "setPage", "buildPage"]}, "repository": {"repo_id": 112703947, "url": "https://github.com/Dromara/myth", "language": "Java", "is_fork": false, "fork_count": 621, "stargazer_count": 1416, "size": 1399, "license": "licensed"}}