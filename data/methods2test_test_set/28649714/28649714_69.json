{"test_class": {"identifier": "CompetitionGroupSetServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    CompetitionGroupSetService service;", "modifier": "@InjectMocks", "type": "CompetitionGroupSetService", "declarator": "service", "var_name": "service"}, {"original_string": "@Mock\n    CompetitionGroupSetGateway gateway;", "modifier": "@Mock", "type": "CompetitionGroupSetGateway", "declarator": "gateway", "var_name": "gateway"}, {"original_string": "@Mock\n    CompetitionGroupEntityService competitionGroupEntityService;", "modifier": "@Mock", "type": "CompetitionGroupEntityService", "declarator": "competitionGroupEntityService", "var_name": "competitionGroupEntityService"}], "file": "service/src/test/java/org/coner/core/domain/service/CompetitionGroupSetServiceTest.java"}, "test_case": {"identifier": "testIssue172", "parameters": "()", "modifiers": "@Test /** *@see https://github.com/caeos/coner-core/issues/172 */ public", "return": "void", "body": "@Test\n    /**\n     *@see https://github.com/caeos/coner-core/issues/172\n     */\n    public void testIssue172() throws EntityNotFoundException, AddEntityException {\n        CompetitionGroupSetAddPayload payload = mock(CompetitionGroupSetAddPayload.class);\n        CompetitionGroup domainEntity = DomainEntityTestUtils.fullCompetitionGroup();\n        when(payload.getCompetitionGroupIds()).thenReturn(Sets.newHashSet(domainEntity.getId()));\n        when(competitionGroupEntityService.getById(domainEntity.getId())).thenReturn(domainEntity);\n        CompetitionGroupSet domainSetEntity = mock(CompetitionGroupSet.class);\n        when(gateway.add(payload)).thenReturn(domainSetEntity);\n\n        CompetitionGroupSet actual = service.add(payload);\n\n        verify(payload).setCompetitionGroups(\n                argThat(argument -> argument.contains(domainEntity))\n        );\n        verify(gateway).add(payload);\n        assertThat(actual).isSameAs(domainSetEntity);\n    }", "signature": "void testIssue172()", "full_signature": "@Test /** *@see https://github.com/caeos/coner-core/issues/172 */ public void testIssue172()", "class_method_signature": "CompetitionGroupSetServiceTest.testIssue172()", "testcase": true, "constructor": false, "invocations": ["mock", "fullCompetitionGroup", "thenReturn", "when", "getCompetitionGroupIds", "newHashSet", "getId", "thenReturn", "when", "getById", "getId", "mock", "thenReturn", "when", "add", "add", "setCompetitionGroups", "verify", "argThat", "contains", "add", "verify", "isSameAs", "assertThat"]}, "focal_class": {"identifier": "CompetitionGroupSetService", "superclass": "extends AbstractEntityService<\n        CompetitionGroupSet,\n        CompetitionGroupSetAddPayload,\n        CompetitionGroupSetGateway>", "interfaces": "", "fields": [{"original_string": "private final CompetitionGroupEntityService competitionGroupEntityService;", "modifier": "private final", "type": "CompetitionGroupEntityService", "declarator": "competitionGroupEntityService", "var_name": "competitionGroupEntityService"}], "methods": [{"identifier": "CompetitionGroupSetService", "parameters": "(\n            CompetitionGroupSetGateway gateway,\n            CompetitionGroupEntityService competitionGroupEntityService)", "modifiers": "@Inject public", "return": "", "signature": " CompetitionGroupSetService(\n            CompetitionGroupSetGateway gateway,\n            CompetitionGroupEntityService competitionGroupEntityService)", "full_signature": "@Inject public  CompetitionGroupSetService(\n            CompetitionGroupSetGateway gateway,\n            CompetitionGroupEntityService competitionGroupEntityService)", "class_method_signature": "CompetitionGroupSetService.CompetitionGroupSetService(\n            CompetitionGroupSetGateway gateway,\n            CompetitionGroupEntityService competitionGroupEntityService)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(CompetitionGroupSetAddPayload addPayload)", "modifiers": "@Override public", "return": "CompetitionGroupSet", "signature": "CompetitionGroupSet add(CompetitionGroupSetAddPayload addPayload)", "full_signature": "@Override public CompetitionGroupSet add(CompetitionGroupSetAddPayload addPayload)", "class_method_signature": "CompetitionGroupSetService.add(CompetitionGroupSetAddPayload addPayload)", "testcase": false, "constructor": false}, {"identifier": "addToCompetitionGroups", "parameters": "(\n            CompetitionGroupSet competitionGroupSet,\n            CompetitionGroup competitionGroup\n    )", "modifiers": "public", "return": "CompetitionGroupSet", "signature": "CompetitionGroupSet addToCompetitionGroups(\n            CompetitionGroupSet competitionGroupSet,\n            CompetitionGroup competitionGroup\n    )", "full_signature": "public CompetitionGroupSet addToCompetitionGroups(\n            CompetitionGroupSet competitionGroupSet,\n            CompetitionGroup competitionGroup\n    )", "class_method_signature": "CompetitionGroupSetService.addToCompetitionGroups(\n            CompetitionGroupSet competitionGroupSet,\n            CompetitionGroup competitionGroup\n    )", "testcase": false, "constructor": false}], "file": "service/src/main/java/org/coner/core/domain/service/CompetitionGroupSetService.java"}, "focal_method": {"identifier": "add", "parameters": "(CompetitionGroupSetAddPayload addPayload)", "modifiers": "@Override public", "return": "CompetitionGroupSet", "body": "@Override\n    public CompetitionGroupSet add(CompetitionGroupSetAddPayload addPayload) throws AddEntityException {\n        ImmutableSet.Builder<CompetitionGroup> competitionGroupsBuilder = ImmutableSet.builder();\n        try {\n            for (String competitionGroupId : addPayload.getCompetitionGroupIds()) {\n                competitionGroupsBuilder.add(competitionGroupEntityService.getById(competitionGroupId));\n            }\n        } catch (EntityNotFoundException e) {\n            throw new AddEntityException(e);\n        }\n        addPayload.setCompetitionGroups(competitionGroupsBuilder.build());\n        return gateway.add(addPayload);\n    }", "signature": "CompetitionGroupSet add(CompetitionGroupSetAddPayload addPayload)", "full_signature": "@Override public CompetitionGroupSet add(CompetitionGroupSetAddPayload addPayload)", "class_method_signature": "CompetitionGroupSetService.add(CompetitionGroupSetAddPayload addPayload)", "testcase": false, "constructor": false, "invocations": ["builder", "getCompetitionGroupIds", "add", "getById", "setCompetitionGroups", "build", "add"]}, "repository": {"repo_id": 28649714, "url": "https://github.com/caeos/coner-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1027, "license": "licensed"}}