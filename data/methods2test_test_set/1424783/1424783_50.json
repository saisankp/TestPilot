{"test_class": {"identifier": "ZoomEstimatorTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    XYPlot xyPlot;", "modifier": "@Mock", "type": "XYPlot", "declarator": "xyPlot", "var_name": "xyPlot"}], "file": "androidplot-core/src/test/java/com/androidplot/xy/ZoomEstimatorTest.java"}, "test_case": {"identifier": "testCheck", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheck() throws Exception {\n        ZoomEstimator estimator = spy(new ZoomEstimator());\n\n        SampledXYSeries series =\n                spy(new SampledXYSeries(TestUtils\n                        .generateXYSeries(\"test series\", 1000), 2, 100));\n        series.resample();\n        assertEquals(8d, series.getMaxZoomFactor());\n\n        XYSeriesBundle bundle = new XYSeriesBundle(series, null);\n\n        when(xyPlot.getBounds())\n                .thenReturn(new RectRegion(0, 1000, 0, 1000))\n                .thenReturn(new RectRegion(0, 500, 0, 500))\n                .thenReturn(new RectRegion(0, 1, 0, 1));\n\n        estimator.run(xyPlot, bundle);\n        estimator.run(xyPlot, bundle);\n        estimator.run(xyPlot, bundle);\n\n        verify(series).setZoomFactor(8);\n        verify(series).setZoomFactor(4);\n        verify(series).setZoomFactor(1);\n    }", "signature": "void testCheck()", "full_signature": "@Test public void testCheck()", "class_method_signature": "ZoomEstimatorTest.testCheck()", "testcase": true, "constructor": false, "invocations": ["spy", "spy", "generateXYSeries", "resample", "assertEquals", "getMaxZoomFactor", "thenReturn", "thenReturn", "thenReturn", "when", "getBounds", "run", "run", "run", "setZoomFactor", "verify", "setZoomFactor", "verify", "setZoomFactor", "verify"]}, "focal_class": {"identifier": "ZoomEstimator", "superclass": "extends Estimator", "interfaces": "", "fields": [], "methods": [{"identifier": "run", "parameters": "(XYPlot plot, XYSeriesBundle sf)", "modifiers": "@Override public", "return": "void", "signature": "void run(XYPlot plot, XYSeriesBundle sf)", "full_signature": "@Override public void run(XYPlot plot, XYSeriesBundle sf)", "class_method_signature": "ZoomEstimator.run(XYPlot plot, XYSeriesBundle sf)", "testcase": false, "constructor": false}, {"identifier": "calculateZoom", "parameters": "(SampledXYSeries series, RectRegion visibleBounds)", "modifiers": "protected", "return": "double", "signature": "double calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "full_signature": "protected double calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "class_method_signature": "ZoomEstimator.calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/xy/ZoomEstimator.java"}, "focal_method": {"identifier": "run", "parameters": "(XYPlot plot, XYSeriesBundle sf)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run(XYPlot plot, XYSeriesBundle sf) {\n        if(sf.getSeries() instanceof SampledXYSeries) {\n            SampledXYSeries oxy = (SampledXYSeries) sf.getSeries();\n            final double factor = calculateZoom(oxy, plot.getBounds());\n            oxy.setZoomFactor(factor);\n        }\n    }", "signature": "void run(XYPlot plot, XYSeriesBundle sf)", "full_signature": "@Override public void run(XYPlot plot, XYSeriesBundle sf)", "class_method_signature": "ZoomEstimator.run(XYPlot plot, XYSeriesBundle sf)", "testcase": false, "constructor": false, "invocations": ["getSeries", "getSeries", "calculateZoom", "getBounds", "setZoomFactor"]}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}