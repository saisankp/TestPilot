{"test_class": {"identifier": "EnvironmentScopeMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "tiles-request-freemarker/src/test/java/org/apache/tiles/request/freemarker/EnvironmentScopeMapTest.java"}, "test_case": {"identifier": "testKeySetException", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test(expected = FreemarkerRequestException.class) public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    @Test(expected = FreemarkerRequestException.class)\n    public void testKeySetException() throws TemplateModelException {\n        Template template = createMock(Template.class);\n        TemplateHashModelEx model = createMock(TemplateHashModelEx.class);\n        Configuration configuration = createMock(Configuration.class);\n        Set<String> names = createMock(Set.class);\n        Writer writer = new StringWriter();\n\n        expect(template.getMacros()).andReturn(new HashMap<Object, Object>());\n        expect(model.keys()).andThrow(new TemplateModelException());\n        expect(template.getConfiguration()).andReturn(configuration);\n        expect(configuration.getSharedVariableNames()).andReturn(names);\n\n        try {\n            replay(template, model, configuration, names);\n            Environment env = new Environment(template, model, writer);\n            EnvironmentScopeMap map = new EnvironmentScopeMap(env);\n            map.keySet();\n        } finally {\n            verify(template, model, configuration, names);\n        }\n    }", "signature": "void testKeySetException()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test(expected = FreemarkerRequestException.class) public void testKeySetException()", "class_method_signature": "EnvironmentScopeMapTest.testKeySetException()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "createMock", "createMock", "andReturn", "expect", "getMacros", "andThrow", "expect", "keys", "andReturn", "expect", "getConfiguration", "andReturn", "expect", "getSharedVariableNames", "replay", "keySet", "verify"]}, "focal_class": {"identifier": "EnvironmentScopeMap", "superclass": "extends ScopeMap", "interfaces": "", "fields": [{"original_string": "private Environment request = null;", "modifier": "private", "type": "Environment", "declarator": "request = null", "var_name": "request"}], "methods": [{"identifier": "EnvironmentScopeMap", "parameters": "(Environment request)", "modifiers": "public", "return": "", "signature": " EnvironmentScopeMap(Environment request)", "full_signature": "public  EnvironmentScopeMap(Environment request)", "class_method_signature": "EnvironmentScopeMap.EnvironmentScopeMap(Environment request)", "testcase": false, "constructor": true}, {"identifier": "keySet", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "Set<String>", "signature": "Set<String> keySet()", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public Set<String> keySet()", "class_method_signature": "EnvironmentScopeMap.keySet()", "testcase": false, "constructor": false}], "file": "tiles-request-freemarker/src/main/java/org/apache/tiles/request/freemarker/EnvironmentScopeMap.java"}, "focal_method": {"identifier": "keySet", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "Set<String>", "body": "@SuppressWarnings(\"unchecked\")\n    @Override\n    public Set<String> keySet() {\n        try {\n            return request.getKnownVariableNames();\n        } catch (TemplateModelException e) {\n            throw new FreemarkerRequestException(\n                    \"Cannot get known variable names\", e);\n        }\n    }", "signature": "Set<String> keySet()", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public Set<String> keySet()", "class_method_signature": "EnvironmentScopeMap.keySet()", "testcase": false, "constructor": false, "invocations": ["getKnownVariableNames"]}, "repository": {"repo_id": 4269155, "url": "https://github.com/apache/tiles-request", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 865, "license": "licensed"}}