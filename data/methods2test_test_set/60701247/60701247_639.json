{"test_class": {"identifier": "JComboBoxViewTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<String> myList;", "modifier": "private", "type": "List<String>", "declarator": "myList", "var_name": "myList"}, {"original_string": "private String mySelected;", "modifier": "private", "type": "String", "declarator": "mySelected", "var_name": "mySelected"}, {"original_string": "private JComboBox<String> myComboBox = new JComboBox<>();", "modifier": "private", "type": "JComboBox<String>", "declarator": "myComboBox = new JComboBox<>()", "var_name": "myComboBox"}, {"original_string": "private JComboBoxView myComboBoxView;", "modifier": "private", "type": "JComboBoxView", "declarator": "myComboBoxView", "var_name": "myComboBoxView"}, {"original_string": "private AspectModel<TestAspect> myAspectModel = new AspectModel<>();", "modifier": "private", "type": "AspectModel<TestAspect>", "declarator": "myAspectModel = new AspectModel<>()", "var_name": "myAspectModel"}], "file": "profilers-ui/testSrc/com/android/tools/profilers/JComboBoxViewTest.java"}, "test_case": {"identifier": "changedList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void changedList() {\n    myList.add(\"D\");\n    myAspectModel.changed(TestAspect.CHANGED);\n    check();\n  }", "signature": "void changedList()", "full_signature": "@Test public void changedList()", "class_method_signature": "JComboBoxViewTest.changedList()", "testcase": true, "constructor": false, "invocations": ["add", "changed", "check"]}, "focal_class": {"identifier": "JComboBoxView", "superclass": "", "interfaces": "implements ItemListener", "fields": [{"original_string": "private final Supplier<List<T>> myList;", "modifier": "private final", "type": "Supplier<List<T>>", "declarator": "myList", "var_name": "myList"}, {"original_string": "private final Supplier<T> myGet;", "modifier": "private final", "type": "Supplier<T>", "declarator": "myGet", "var_name": "myGet"}, {"original_string": "private final Consumer<T> mySet;", "modifier": "private final", "type": "Consumer<T>", "declarator": "mySet", "var_name": "mySet"}, {"original_string": "private final JComboBox<T> myCombo;", "modifier": "private final", "type": "JComboBox<T>", "declarator": "myCombo", "var_name": "myCombo"}, {"original_string": "private final AspectModel<A> myObject;", "modifier": "private final", "type": "AspectModel<A>", "declarator": "myObject", "var_name": "myObject"}, {"original_string": "private final A myAspect;", "modifier": "private final", "type": "A", "declarator": "myAspect", "var_name": "myAspect"}, {"original_string": "private final AspectObserver myAspectObserver;", "modifier": "private final", "type": "AspectObserver", "declarator": "myAspectObserver", "var_name": "myAspectObserver"}, {"original_string": "private boolean myIgnoreEvents;", "modifier": "private", "type": "boolean", "declarator": "myIgnoreEvents", "var_name": "myIgnoreEvents"}], "methods": [{"identifier": "JComboBoxView", "parameters": "(JComboBox<T> combo, AspectModel<A> object, A aspect, Supplier<List<T>> list, Supplier<T> get, Consumer<T> set)", "modifiers": "public", "return": "", "signature": " JComboBoxView(JComboBox<T> combo, AspectModel<A> object, A aspect, Supplier<List<T>> list, Supplier<T> get, Consumer<T> set)", "full_signature": "public  JComboBoxView(JComboBox<T> combo, AspectModel<A> object, A aspect, Supplier<List<T>> list, Supplier<T> get, Consumer<T> set)", "class_method_signature": "JComboBoxView.JComboBoxView(JComboBox<T> combo, AspectModel<A> object, A aspect, Supplier<List<T>> list, Supplier<T> get, Consumer<T> set)", "testcase": false, "constructor": true}, {"identifier": "bind", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void bind()", "full_signature": "public void bind()", "class_method_signature": "JComboBoxView.bind()", "testcase": false, "constructor": false}, {"identifier": "itemStateChanged", "parameters": "(ItemEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void itemStateChanged(ItemEvent event)", "full_signature": "@Override public void itemStateChanged(ItemEvent event)", "class_method_signature": "JComboBoxView.itemStateChanged(ItemEvent event)", "testcase": false, "constructor": false}, {"identifier": "changed", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void changed()", "full_signature": "private void changed()", "class_method_signature": "JComboBoxView.changed()", "testcase": false, "constructor": false}], "file": "profilers-ui/src/com/android/tools/profilers/JComboBoxView.java"}, "focal_method": {"identifier": "changed", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void changed() {\n    List<T> list = myList.get();\n    T selected = myGet.get();\n\n    myIgnoreEvents = true;\n    myCombo.removeAllItems();\n    if (list.isEmpty()) {\n      // We add a null item so combobox can get its layout updated and width set properly,\n      // for the empty message (e.g., \"No Connected Devices\").\n      myCombo.addItem(null);\n    } else {\n      for (T t : list) {\n        myCombo.addItem(t);\n      }\n    }\n    myCombo.setSelectedItem(selected);\n    myIgnoreEvents = false;\n  }", "signature": "void changed()", "full_signature": "private void changed()", "class_method_signature": "JComboBoxView.changed()", "testcase": false, "constructor": false, "invocations": ["get", "get", "removeAllItems", "isEmpty", "addItem", "addItem", "setSelectedItem"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}