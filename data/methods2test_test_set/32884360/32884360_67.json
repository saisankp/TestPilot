{"test_class": {"identifier": "WrappingByteSourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/util/WrappingByteSourceTest.java"}, "test_case": {"identifier": "negativeLength", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void negativeLength() {\n        wrap(new byte[10], 0, -1);\n    }", "signature": "void negativeLength()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void negativeLength()", "class_method_signature": "WrappingByteSourceTest.negativeLength()", "testcase": true, "constructor": false, "invocations": ["wrap"]}, "focal_class": {"identifier": "WrappingByteSource", "superclass": "", "interfaces": "implements ByteSource", "fields": [{"original_string": "private byte[] bytes;", "modifier": "private", "type": "byte[]", "declarator": "bytes", "var_name": "bytes"}, {"original_string": "private int offset;", "modifier": "private", "type": "int", "declarator": "offset", "var_name": "offset"}, {"original_string": "private int length;", "modifier": "private", "type": "int", "declarator": "length", "var_name": "length"}, {"original_string": "private final int HASH_BYTES = 5;", "modifier": "private final", "type": "int", "declarator": "HASH_BYTES = 5", "var_name": "HASH_BYTES"}], "methods": [{"identifier": "fromByteBuffer", "parameters": "(ByteBuffer byteBuffer)", "modifiers": "public static", "return": "WrappingByteSource", "signature": "WrappingByteSource fromByteBuffer(ByteBuffer byteBuffer)", "full_signature": "public static WrappingByteSource fromByteBuffer(ByteBuffer byteBuffer)", "class_method_signature": "WrappingByteSource.fromByteBuffer(ByteBuffer byteBuffer)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "WrappingByteSource", "signature": "WrappingByteSource wrap(byte[] bytes)", "full_signature": "public WrappingByteSource wrap(byte[] bytes)", "class_method_signature": "WrappingByteSource.wrap(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public", "return": "WrappingByteSource", "signature": "WrappingByteSource wrap(byte[] bytes, int offset, int length)", "full_signature": "public WrappingByteSource wrap(byte[] bytes, int offset, int length)", "class_method_signature": "WrappingByteSource.wrap(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "WrappingByteSource", "parameters": "()", "modifiers": "public", "return": "", "signature": " WrappingByteSource()", "full_signature": "public  WrappingByteSource()", "class_method_signature": "WrappingByteSource.WrappingByteSource()", "testcase": false, "constructor": true}, {"identifier": "WrappingByteSource", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "", "signature": " WrappingByteSource(byte[] bytes)", "full_signature": "public  WrappingByteSource(byte[] bytes)", "class_method_signature": "WrappingByteSource.WrappingByteSource(byte[] bytes)", "testcase": false, "constructor": true}, {"identifier": "WrappingByteSource", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public", "return": "", "signature": " WrappingByteSource(byte[] bytes, int offset, int length)", "full_signature": "public  WrappingByteSource(byte[] bytes, int offset, int length)", "class_method_signature": "WrappingByteSource.WrappingByteSource(byte[] bytes, int offset, int length)", "testcase": false, "constructor": true}, {"identifier": "byteArray", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] byteArray()", "full_signature": "@Override public byte[] byteArray()", "class_method_signature": "WrappingByteSource.byteArray()", "testcase": false, "constructor": false}, {"identifier": "byteArrayOffset", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int byteArrayOffset()", "full_signature": "@Override public int byteArrayOffset()", "class_method_signature": "WrappingByteSource.byteArrayOffset()", "testcase": false, "constructor": false}, {"identifier": "byteArrayLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int byteArrayLength()", "full_signature": "@Override public int byteArrayLength()", "class_method_signature": "WrappingByteSource.byteArrayLength()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(ByteSource o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(ByteSource o)", "full_signature": "@Override public int compareTo(ByteSource o)", "class_method_signature": "WrappingByteSource.compareTo(ByteSource o)", "testcase": false, "constructor": false}, {"identifier": "toByteSubarray", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] toByteSubarray()", "full_signature": "@Override public byte[] toByteSubarray()", "class_method_signature": "WrappingByteSource.toByteSubarray()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "WrappingByteSource.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "WrappingByteSource.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "WrappingByteSource.hashCode()", "testcase": false, "constructor": false}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/util/WrappingByteSource.java"}, "focal_method": {"identifier": "wrap", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "WrappingByteSource", "body": "public WrappingByteSource wrap(byte[] bytes) {\n        return wrap(bytes, 0, bytes.length);\n    }", "signature": "WrappingByteSource wrap(byte[] bytes)", "full_signature": "public WrappingByteSource wrap(byte[] bytes)", "class_method_signature": "WrappingByteSource.wrap(byte[] bytes)", "testcase": false, "constructor": false, "invocations": ["wrap"]}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}