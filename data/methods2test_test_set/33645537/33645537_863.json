{"test_class": {"identifier": "IntervalTest", "superclass": "", "interfaces": "", "fields": [], "file": "zava/src/test/java/com/github/geophile/erdo/util/IntervalTest.java"}, "test_case": {"identifier": "testComparisons", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testComparisons()\n    {\n        // One interval inside another\n        check(interval(4, 4), interval(4, 4), 0);\n        check(interval(4, 4), interval(3, 4), 0);\n        check(interval(4, 4), interval(4, 5), 0);\n        check(interval(3, 5), interval(4, 4), 0);\n        check(interval(3, 4), interval(4, 4), 0);\n        check(interval(4, 5), interval(4, 4), 0);\n        check(interval(3, 5), interval(4, 4), 0);\n        // Disjoint intervals\n        check(interval(3, 4), interval(4, 5), -1);\n        check(interval(4, 5), interval(3, 4), 1);\n        // Not comparable intervals\n        checkNotComparable(interval(3, 5), interval(4, 6));\n        checkNotComparable(interval(4, 6), interval(3, 5));\n    }", "signature": "void testComparisons()", "full_signature": "@Test public void testComparisons()", "class_method_signature": "IntervalTest.testComparisons()", "testcase": true, "constructor": false, "invocations": ["check", "interval", "interval", "check", "interval", "interval", "check", "interval", "interval", "check", "interval", "interval", "check", "interval", "interval", "check", "interval", "interval", "check", "interval", "interval", "check", "interval", "interval", "check", "interval", "interval", "checkNotComparable", "interval", "interval", "checkNotComparable", "interval", "interval"]}, "focal_class": {"identifier": "Interval", "superclass": "", "interfaces": "implements Comparable<Interval>", "fields": [{"original_string": "private final long min;", "modifier": "private final", "type": "long", "declarator": "min", "var_name": "min"}, {"original_string": "private final long max;", "modifier": "private final", "type": "long", "declarator": "max", "var_name": "max"}], "methods": [{"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Interval.toString()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Interval that)", "modifiers": "public", "return": "int", "signature": "int compareTo(Interval that)", "full_signature": "public int compareTo(Interval that)", "class_method_signature": "Interval.compareTo(Interval that)", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long min()", "full_signature": "public long min()", "class_method_signature": "Interval.min()", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long max()", "full_signature": "public long max()", "class_method_signature": "Interval.max()", "testcase": false, "constructor": false}, {"identifier": "Interval", "parameters": "(long x)", "modifiers": "public", "return": "", "signature": " Interval(long x)", "full_signature": "public  Interval(long x)", "class_method_signature": "Interval.Interval(long x)", "testcase": false, "constructor": true}, {"identifier": "Interval", "parameters": "(long min, long max)", "modifiers": "public", "return": "", "signature": " Interval(long min, long max)", "full_signature": "public  Interval(long min, long max)", "class_method_signature": "Interval.Interval(long min, long max)", "testcase": false, "constructor": true}], "file": "zava/src/main/java/com/github/geophile/erdo/util/Interval.java"}, "focal_method": {"identifier": "Interval", "parameters": "(long x)", "modifiers": "public", "return": "", "body": "public Interval(long x)\n    {\n        this(x, x);\n    }", "signature": " Interval(long x)", "full_signature": "public  Interval(long x)", "class_method_signature": "Interval.Interval(long x)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}