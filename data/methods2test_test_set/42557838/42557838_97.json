{"test_class": {"identifier": "RangeHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RangeHelper rangeHelper = new RangeHelper();", "modifier": "private", "type": "RangeHelper", "declarator": "rangeHelper = new RangeHelper()", "var_name": "rangeHelper"}], "file": "http/src/test/java/ro/polak/http/servlet/helper/RangeHelperTest.java"}, "test_case": {"identifier": "shouldComputeTotalLengthX", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldComputeTotalLengthX() {\n        List<Range> ranges = new ArrayList<>();\n        ranges.add(new Range(0, 1));\n        ranges.add(new Range(2, 3));\n        assertThat(rangeHelper.getTotalLength(ranges), is(4L));\n    }", "signature": "void shouldComputeTotalLengthX()", "full_signature": "@Test public void shouldComputeTotalLengthX()", "class_method_signature": "RangeHelperTest.shouldComputeTotalLengthX()", "testcase": true, "constructor": false, "invocations": ["add", "add", "assertThat", "getTotalLength", "is"]}, "focal_class": {"identifier": "RangeHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getRangeLength", "parameters": "(final Range range)", "modifiers": "public", "return": "long", "signature": "long getRangeLength(final Range range)", "full_signature": "public long getRangeLength(final Range range)", "class_method_signature": "RangeHelper.getRangeLength(final Range range)", "testcase": false, "constructor": false}, {"identifier": "isRangeValid", "parameters": "(final Range range)", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeValid(final Range range)", "full_signature": "public boolean isRangeValid(final Range range)", "class_method_signature": "RangeHelper.isRangeValid(final Range range)", "testcase": false, "constructor": false}, {"identifier": "getTotalLength", "parameters": "(final List<Range> ranges)", "modifiers": "public", "return": "long", "signature": "long getTotalLength(final List<Range> ranges)", "full_signature": "public long getTotalLength(final List<Range> ranges)", "class_method_signature": "RangeHelper.getTotalLength(final List<Range> ranges)", "testcase": false, "constructor": false}, {"identifier": "isSatisfiable", "parameters": "(final Iterable<Range> ranges, final long streamLength)", "modifiers": "public", "return": "boolean", "signature": "boolean isSatisfiable(final Iterable<Range> ranges, final long streamLength)", "full_signature": "public boolean isSatisfiable(final Iterable<Range> ranges, final long streamLength)", "class_method_signature": "RangeHelper.isSatisfiable(final Iterable<Range> ranges, final long streamLength)", "testcase": false, "constructor": false}], "file": "http/src/main/java/ro/polak/http/servlet/helper/RangeHelper.java"}, "focal_method": {"identifier": "getTotalLength", "parameters": "(final List<Range> ranges)", "modifiers": "public", "return": "long", "body": "public long getTotalLength(final List<Range> ranges) {\n        int totalLength = 0;\n        for (Range range : ranges) {\n            totalLength += getRangeLength(range);\n        }\n        return totalLength;\n    }", "signature": "long getTotalLength(final List<Range> ranges)", "full_signature": "public long getTotalLength(final List<Range> ranges)", "class_method_signature": "RangeHelper.getTotalLength(final List<Range> ranges)", "testcase": false, "constructor": false, "invocations": ["getRangeLength"]}, "repository": {"repo_id": 42557838, "url": "https://github.com/piotrpolak/android-http-server", "language": "Java", "is_fork": false, "fork_count": 41, "stargazer_count": 136, "size": 2000, "license": "licensed"}}