{"test_class": {"identifier": "BsUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "feya/libraries/archive_diff/diff.generator/src/test/java/com/google/archivepatcher/generator/bsdiff/BsUtilTest.java"}, "test_case": {"identifier": "writeFormattedLongTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void writeFormattedLongTest() throws IOException {\n    ByteArrayOutputStream outputStream = new ByteArrayOutputStream(16);\n    BsUtil.writeFormattedLong(0x12345678, outputStream);\n    BsUtil.writeFormattedLong(0x0eadbeef, outputStream);\n    byte[] actual = outputStream.toByteArray();\n\n    byte[] expected = {\n      (byte) 0x78,\n      (byte) 0x56,\n      (byte) 0x34,\n      (byte) 0x12,\n      (byte) 0,\n      (byte) 0,\n      (byte) 0,\n      (byte) 0,\n      (byte) 0xef,\n      (byte) 0xbe,\n      (byte) 0xad,\n      (byte) 0x0e,\n      (byte) 0,\n      (byte) 0,\n      (byte) 0,\n      (byte) 0\n    };\n    Assert.assertArrayEquals(expected, actual);\n  }", "signature": "void writeFormattedLongTest()", "full_signature": "@Test public void writeFormattedLongTest()", "class_method_signature": "BsUtilTest.writeFormattedLongTest()", "testcase": true, "constructor": false, "invocations": ["writeFormattedLong", "writeFormattedLong", "toByteArray", "assertArrayEquals"]}, "focal_class": {"identifier": "BsUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long NEGATIVE_MASK = 1L << 63;", "modifier": "private static final", "type": "long", "declarator": "NEGATIVE_MASK = 1L << 63", "var_name": "NEGATIVE_MASK"}], "methods": [{"identifier": "writeFormattedLong", "parameters": "(final long value, OutputStream outputStream)", "modifiers": "static", "return": "void", "signature": "void writeFormattedLong(final long value, OutputStream outputStream)", "full_signature": "static void writeFormattedLong(final long value, OutputStream outputStream)", "class_method_signature": "BsUtil.writeFormattedLong(final long value, OutputStream outputStream)", "testcase": false, "constructor": false}, {"identifier": "readFormattedLong", "parameters": "(InputStream inputStream)", "modifiers": "static", "return": "long", "signature": "long readFormattedLong(InputStream inputStream)", "full_signature": "static long readFormattedLong(InputStream inputStream)", "class_method_signature": "BsUtil.readFormattedLong(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "lexicographicalCompare", "parameters": "(\n      final RandomAccessObject data1,\n      final int start1,\n      final int length1,\n      final RandomAccessObject data2,\n      final int start2,\n      final int length2)", "modifiers": "static", "return": "int", "signature": "int lexicographicalCompare(\n      final RandomAccessObject data1,\n      final int start1,\n      final int length1,\n      final RandomAccessObject data2,\n      final int start2,\n      final int length2)", "full_signature": "static int lexicographicalCompare(\n      final RandomAccessObject data1,\n      final int start1,\n      final int length1,\n      final RandomAccessObject data2,\n      final int start2,\n      final int length2)", "class_method_signature": "BsUtil.lexicographicalCompare(\n      final RandomAccessObject data1,\n      final int start1,\n      final int length1,\n      final RandomAccessObject data2,\n      final int start2,\n      final int length2)", "testcase": false, "constructor": false}], "file": "feya/libraries/archive_diff/diff.generator/src/main/java/com/google/archivepatcher/generator/bsdiff/BsUtil.java"}, "focal_method": {"identifier": "writeFormattedLong", "parameters": "(final long value, OutputStream outputStream)", "modifiers": "static", "return": "void", "body": "static void writeFormattedLong(final long value, OutputStream outputStream)\n      throws IOException {\n        long y = value;\n        if (y < 0) {\n            y = (-y) | NEGATIVE_MASK;\n        }\n\n        for (int i = 0; i < 8; ++i) {\n            outputStream.write((byte) (y & 0xff));\n            y >>>= 8;\n        }\n    }", "signature": "void writeFormattedLong(final long value, OutputStream outputStream)", "full_signature": "static void writeFormattedLong(final long value, OutputStream outputStream)", "class_method_signature": "BsUtil.writeFormattedLong(final long value, OutputStream outputStream)", "testcase": false, "constructor": false, "invocations": ["write"]}, "repository": {"repo_id": 20126854, "url": "https://github.com/kaedea/Feya", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 12, "size": 7798, "license": "licensed"}}