{"test_class": {"identifier": "ThingModifyCommandResponseAdapterTest", "superclass": "extends LiveTwinTest", "interfaces": "implements ProtocolAdapterTest", "fields": [{"original_string": "private ThingModifyCommandResponseAdapter underTest;", "modifier": "private", "type": "ThingModifyCommandResponseAdapter", "declarator": "underTest", "var_name": "underTest"}], "file": "protocol-adapter/src/test/java/org/eclipse/ditto/protocoladapter/things/ThingModifyCommandResponseAdapterTest.java"}, "test_case": {"identifier": "modifyAclEntryResponseFromAdaptable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void modifyAclEntryResponseFromAdaptable() {\n        final TopicPath topicPath = topicPath(TopicPath.Action.MODIFY);\n        final JsonPointer path = JsonPointer.of(\"/acl/\" + TestConstants.AUTHORIZATION_SUBJECT.getId());\n\n        final ModifyAclEntryResponse expectedCreated =\n                ModifyAclEntryResponse.created(TestConstants.THING_ID, TestConstants.ACL_ENTRY,\n                        TestConstants.DITTO_HEADERS_V_1);\n\n        final Adaptable adaptableCreated = Adaptable.newBuilder(topicPath)\n                .withPayload(Payload.newBuilder(path)\n                        .withStatus(HttpStatusCode.CREATED)\n                        .withValue(TestConstants.ACL_ENTRY.getPermissions().toJson())\n                        .build())\n                .withHeaders(TestConstants.HEADERS_V_1)\n                .build();\n        final ThingModifyCommandResponse<?> actualCreated = underTest.fromAdaptable(adaptableCreated);\n\n        assertWithExternalHeadersThat(actualCreated).isEqualTo(expectedCreated);\n\n        final ModifyAclEntryResponse expectedModified =\n                ModifyAclEntryResponse.modified(TestConstants.THING_ID, TestConstants.ACL_ENTRY,\n                        TestConstants.DITTO_HEADERS_V_1);\n\n        final Adaptable adaptableModified = Adaptable.newBuilder(topicPath)\n                .withPayload(Payload.newBuilder(path)\n                        .withStatus(HttpStatusCode.NO_CONTENT)\n                        .withValue(TestConstants.ACL_ENTRY.getPermissions().toJson())\n                        .build())\n                .withHeaders(TestConstants.HEADERS_V_1)\n                .build();\n        final ThingModifyCommandResponse<?> actualModified = underTest.fromAdaptable(adaptableModified);\n\n        assertWithExternalHeadersThat(actualModified).isEqualTo(expectedModified);\n    }", "signature": "void modifyAclEntryResponseFromAdaptable()", "full_signature": "@Test public void modifyAclEntryResponseFromAdaptable()", "class_method_signature": "ThingModifyCommandResponseAdapterTest.modifyAclEntryResponseFromAdaptable()", "testcase": true, "constructor": false, "invocations": ["topicPath", "of", "getId", "created", "build", "withHeaders", "withPayload", "newBuilder", "build", "withValue", "withStatus", "newBuilder", "toJson", "getPermissions", "fromAdaptable", "isEqualTo", "assertWithExternalHeadersThat", "modified", "build", "withHeaders", "withPayload", "newBuilder", "build", "withValue", "withStatus", "newBuilder", "toJson", "getPermissions", "fromAdaptable", "isEqualTo", "assertWithExternalHeadersThat"]}, "focal_class": {"identifier": "ThingModifyCommandResponseAdapter", "superclass": "extends AbstractThingAdapter<ThingModifyCommandResponse<?>>", "interfaces": "implements ModifyCommandResponseAdapter<ThingModifyCommandResponse<?>>", "fields": [{"original_string": "private final SignalMapper<ThingModifyCommandResponse<?>>\n            signalMapper = SignalMapperFactory.newThingModifyResponseSignalMapper();", "modifier": "private final", "type": "SignalMapper<ThingModifyCommandResponse<?>>", "declarator": "signalMapper = SignalMapperFactory.newThingModifyResponseSignalMapper()", "var_name": "signalMapper"}], "methods": [{"identifier": "ThingModifyCommandResponseAdapter", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "private", "return": "", "signature": " ThingModifyCommandResponseAdapter(final HeaderTranslator headerTranslator)", "full_signature": "private  ThingModifyCommandResponseAdapter(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingModifyCommandResponseAdapter.ThingModifyCommandResponseAdapter(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "ThingModifyCommandResponseAdapter", "signature": "ThingModifyCommandResponseAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static ThingModifyCommandResponseAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingModifyCommandResponseAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false}, {"identifier": "getTypeCriterionAsString", "parameters": "(final TopicPath topicPath)", "modifiers": "@Override protected", "return": "String", "signature": "String getTypeCriterionAsString(final TopicPath topicPath)", "full_signature": "@Override protected String getTypeCriterionAsString(final TopicPath topicPath)", "class_method_signature": "ThingModifyCommandResponseAdapter.getTypeCriterionAsString(final TopicPath topicPath)", "testcase": false, "constructor": false}, {"identifier": "mapSignalToAdaptable", "parameters": "(final ThingModifyCommandResponse<?> signal,\n            final TopicPath.Channel channel)", "modifiers": "@Override protected", "return": "Adaptable", "signature": "Adaptable mapSignalToAdaptable(final ThingModifyCommandResponse<?> signal,\n            final TopicPath.Channel channel)", "full_signature": "@Override protected Adaptable mapSignalToAdaptable(final ThingModifyCommandResponse<?> signal,\n            final TopicPath.Channel channel)", "class_method_signature": "ThingModifyCommandResponseAdapter.mapSignalToAdaptable(final ThingModifyCommandResponse<?> signal,\n            final TopicPath.Channel channel)", "testcase": false, "constructor": false}], "file": "protocol-adapter/src/main/java/org/eclipse/ditto/protocoladapter/things/ThingModifyCommandResponseAdapter.java"}, "focal_method": {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "ThingModifyCommandResponseAdapter", "body": "public static ThingModifyCommandResponseAdapter of(final HeaderTranslator headerTranslator) {\n        return new ThingModifyCommandResponseAdapter(requireNonNull(headerTranslator));\n    }", "signature": "ThingModifyCommandResponseAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static ThingModifyCommandResponseAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingModifyCommandResponseAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false, "invocations": ["requireNonNull"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}