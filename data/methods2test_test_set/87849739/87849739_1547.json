{"test_class": {"identifier": "ImmutableAuthorizationContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DittoAuthorizationContextType KNOWN_TYPE = DittoAuthorizationContextType.UNSPECIFIED;", "modifier": "private static final", "type": "DittoAuthorizationContextType", "declarator": "KNOWN_TYPE = DittoAuthorizationContextType.UNSPECIFIED", "var_name": "KNOWN_TYPE"}, {"original_string": "private static final AuthorizationSubject SUB_1_1 = AuthorizationSubject.newInstance(\"sub_1_1\");", "modifier": "private static final", "type": "AuthorizationSubject", "declarator": "SUB_1_1 = AuthorizationSubject.newInstance(\"sub_1_1\")", "var_name": "SUB_1_1"}, {"original_string": "private static final AuthorizationSubject SUB_1_2 = AuthorizationSubject.newInstance(\"sub_1_2\");", "modifier": "private static final", "type": "AuthorizationSubject", "declarator": "SUB_1_2 = AuthorizationSubject.newInstance(\"sub_1_2\")", "var_name": "SUB_1_2"}, {"original_string": "private static final List<AuthorizationSubject> SUBJECTS_1 = Lists.newArrayList(SUB_1_1, SUB_1_2);", "modifier": "private static final", "type": "List<AuthorizationSubject>", "declarator": "SUBJECTS_1 = Lists.newArrayList(SUB_1_1, SUB_1_2)", "var_name": "SUBJECTS_1"}, {"original_string": "private static final List<AuthorizationSubject> SUBJECTS_2 =\n            Lists.newArrayList(AuthorizationSubject.newInstance(\"sub_2_1\"),\n                    AuthorizationSubject.newInstance(\"sub_2_2\"));", "modifier": "private static final", "type": "List<AuthorizationSubject>", "declarator": "SUBJECTS_2 =\n            Lists.newArrayList(AuthorizationSubject.newInstance(\"sub_2_1\"),\n                    AuthorizationSubject.newInstance(\"sub_2_2\"))", "var_name": "SUBJECTS_2"}, {"original_string": "private static JsonObject knownJsonRepresentation;", "modifier": "private static", "type": "JsonObject", "declarator": "knownJsonRepresentation", "var_name": "knownJsonRepresentation"}], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/auth/ImmutableAuthorizationContextTest.java"}, "test_case": {"identifier": "addTail", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addTail() {\n        final ImmutableAuthorizationContext underTest = ImmutableAuthorizationContext.of(KNOWN_TYPE, SUBJECTS_1);\n\n        final AuthorizationContext newContext = underTest.addTail(SUBJECTS_2);\n\n        final List<AuthorizationSubject> expectedAuthSubjects = new ArrayList<>();\n        expectedAuthSubjects.addAll(SUBJECTS_1);\n        expectedAuthSubjects.addAll(SUBJECTS_2);\n        final AuthorizationContext expectedContext = ImmutableAuthorizationContext.of(KNOWN_TYPE, expectedAuthSubjects);\n\n        assertThat(newContext).isEqualTo(expectedContext);\n    }", "signature": "void addTail()", "full_signature": "@Test public void addTail()", "class_method_signature": "ImmutableAuthorizationContextTest.addTail()", "testcase": true, "constructor": false, "invocations": ["of", "addTail", "addAll", "addAll", "of", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ImmutableAuthorizationContext", "superclass": "", "interfaces": "implements AuthorizationContext", "fields": [{"original_string": "private final AuthorizationContextType type;", "modifier": "private final", "type": "AuthorizationContextType", "declarator": "type", "var_name": "type"}, {"original_string": "private final List<AuthorizationSubject> authorizationSubjects;", "modifier": "private final", "type": "List<AuthorizationSubject>", "declarator": "authorizationSubjects", "var_name": "authorizationSubjects"}, {"original_string": "@Nullable private List<String> authorizationSubjectIds;", "modifier": "@Nullable private", "type": "List<String>", "declarator": "authorizationSubjectIds", "var_name": "authorizationSubjectIds"}], "methods": [{"identifier": "ImmutableAuthorizationContext", "parameters": "(final AuthorizationContextType type,\n            final List<AuthorizationSubject> authorizationSubjects)", "modifiers": "private", "return": "", "signature": " ImmutableAuthorizationContext(final AuthorizationContextType type,\n            final List<AuthorizationSubject> authorizationSubjects)", "full_signature": "private  ImmutableAuthorizationContext(final AuthorizationContextType type,\n            final List<AuthorizationSubject> authorizationSubjects)", "class_method_signature": "ImmutableAuthorizationContext.ImmutableAuthorizationContext(final AuthorizationContextType type,\n            final List<AuthorizationSubject> authorizationSubjects)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final AuthorizationContextType type,\n            final List<AuthorizationSubject> authorizationSubjects)", "modifiers": "public static", "return": "ImmutableAuthorizationContext", "signature": "ImmutableAuthorizationContext of(final AuthorizationContextType type,\n            final List<AuthorizationSubject> authorizationSubjects)", "full_signature": "public static ImmutableAuthorizationContext of(final AuthorizationContextType type,\n            final List<AuthorizationSubject> authorizationSubjects)", "class_method_signature": "ImmutableAuthorizationContext.of(final AuthorizationContextType type,\n            final List<AuthorizationSubject> authorizationSubjects)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final AuthorizationContextType type,\n            final AuthorizationSubject authorizationSubject,\n            final AuthorizationSubject... furtherAuthorizationSubjects)", "modifiers": "public static", "return": "ImmutableAuthorizationContext", "signature": "ImmutableAuthorizationContext of(final AuthorizationContextType type,\n            final AuthorizationSubject authorizationSubject,\n            final AuthorizationSubject... furtherAuthorizationSubjects)", "full_signature": "public static ImmutableAuthorizationContext of(final AuthorizationContextType type,\n            final AuthorizationSubject authorizationSubject,\n            final AuthorizationSubject... furtherAuthorizationSubjects)", "class_method_signature": "ImmutableAuthorizationContext.of(final AuthorizationContextType type,\n            final AuthorizationSubject authorizationSubject,\n            final AuthorizationSubject... furtherAuthorizationSubjects)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "ImmutableAuthorizationContext", "signature": "ImmutableAuthorizationContext fromJson(final JsonObject jsonObject)", "full_signature": "public static ImmutableAuthorizationContext fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutableAuthorizationContext.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "AuthorizationContextType", "signature": "AuthorizationContextType getType()", "full_signature": "@Override public AuthorizationContextType getType()", "class_method_signature": "ImmutableAuthorizationContext.getType()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationSubjects", "parameters": "()", "modifiers": "@Override public", "return": "List<AuthorizationSubject>", "signature": "List<AuthorizationSubject> getAuthorizationSubjects()", "full_signature": "@Override public List<AuthorizationSubject> getAuthorizationSubjects()", "class_method_signature": "ImmutableAuthorizationContext.getAuthorizationSubjects()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationSubjectIds", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getAuthorizationSubjectIds()", "full_signature": "@Override public List<String> getAuthorizationSubjectIds()", "class_method_signature": "ImmutableAuthorizationContext.getAuthorizationSubjectIds()", "testcase": false, "constructor": false}, {"identifier": "getFirstAuthorizationSubject", "parameters": "()", "modifiers": "@Override public", "return": "Optional<AuthorizationSubject>", "signature": "Optional<AuthorizationSubject> getFirstAuthorizationSubject()", "full_signature": "@Override public Optional<AuthorizationSubject> getFirstAuthorizationSubject()", "class_method_signature": "ImmutableAuthorizationContext.getFirstAuthorizationSubject()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "ImmutableAuthorizationContext.getSize()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "ImmutableAuthorizationContext.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "addHead", "parameters": "(final List<AuthorizationSubject> authorizationSubjects)", "modifiers": "@Override public", "return": "AuthorizationContext", "signature": "AuthorizationContext addHead(final List<AuthorizationSubject> authorizationSubjects)", "full_signature": "@Override public AuthorizationContext addHead(final List<AuthorizationSubject> authorizationSubjects)", "class_method_signature": "ImmutableAuthorizationContext.addHead(final List<AuthorizationSubject> authorizationSubjects)", "testcase": false, "constructor": false}, {"identifier": "addTail", "parameters": "(final List<AuthorizationSubject> authorizationSubjects)", "modifiers": "@Override public", "return": "AuthorizationContext", "signature": "AuthorizationContext addTail(final List<AuthorizationSubject> authorizationSubjects)", "full_signature": "@Override public AuthorizationContext addTail(final List<AuthorizationSubject> authorizationSubjects)", "class_method_signature": "ImmutableAuthorizationContext.addTail(final List<AuthorizationSubject> authorizationSubjects)", "testcase": false, "constructor": false}, {"identifier": "isAuthorized", "parameters": "(final Collection<AuthorizationSubject> granted,\n            final Collection<AuthorizationSubject> revoked)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAuthorized(final Collection<AuthorizationSubject> granted,\n            final Collection<AuthorizationSubject> revoked)", "full_signature": "@Override public boolean isAuthorized(final Collection<AuthorizationSubject> granted,\n            final Collection<AuthorizationSubject> revoked)", "class_method_signature": "ImmutableAuthorizationContext.isAuthorized(final Collection<AuthorizationSubject> granted,\n            final Collection<AuthorizationSubject> revoked)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableAuthorizationContext.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "authorizedSubjectsToJson", "parameters": "()", "modifiers": "private", "return": "JsonArray", "signature": "JsonArray authorizedSubjectsToJson()", "full_signature": "private JsonArray authorizedSubjectsToJson()", "class_method_signature": "ImmutableAuthorizationContext.authorizedSubjectsToJson()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<AuthorizationSubject>", "signature": "Iterator<AuthorizationSubject> iterator()", "full_signature": "@Override public Iterator<AuthorizationSubject> iterator()", "class_method_signature": "ImmutableAuthorizationContext.iterator()", "testcase": false, "constructor": false}, {"identifier": "stream", "parameters": "()", "modifiers": "@Override public", "return": "Stream<AuthorizationSubject>", "signature": "Stream<AuthorizationSubject> stream()", "full_signature": "@Override public Stream<AuthorizationSubject> stream()", "class_method_signature": "ImmutableAuthorizationContext.stream()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableAuthorizationContext.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableAuthorizationContext.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableAuthorizationContext.toString()", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/auth/ImmutableAuthorizationContext.java"}, "focal_method": {"identifier": "addTail", "parameters": "(final List<AuthorizationSubject> authorizationSubjects)", "modifiers": "@Override public", "return": "AuthorizationContext", "body": "@Override\n    public AuthorizationContext addTail(final List<AuthorizationSubject> authorizationSubjects) {\n        checkNotNull(authorizationSubjects, \"authorizationSubjects\");\n\n        final List<AuthorizationSubject> newAuthorizationSubjects =\n                new ArrayList<>(this.authorizationSubjects.size() + authorizationSubjects.size());\n        newAuthorizationSubjects.addAll(this.authorizationSubjects);\n        newAuthorizationSubjects.addAll(authorizationSubjects);\n\n        return new ImmutableAuthorizationContext(type, newAuthorizationSubjects);\n    }", "signature": "AuthorizationContext addTail(final List<AuthorizationSubject> authorizationSubjects)", "full_signature": "@Override public AuthorizationContext addTail(final List<AuthorizationSubject> authorizationSubjects)", "class_method_signature": "ImmutableAuthorizationContext.addTail(final List<AuthorizationSubject> authorizationSubjects)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "size", "size", "addAll", "addAll"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}