{"test_class": {"identifier": "MethodInvokerDecoratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MethodInvokerDecorator decorator;", "modifier": "private", "type": "MethodInvokerDecorator", "declarator": "decorator", "var_name": "decorator"}, {"original_string": "private MethodInvoker          methodInvoker;", "modifier": "private", "type": "MethodInvoker", "declarator": "methodInvoker", "var_name": "methodInvoker"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/method/MethodInvokerDecoratorTest.java"}, "test_case": {"identifier": "delegatesCallToMethodInvoker", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void delegatesCallToMethodInvoker() throws Exception {\n        Object object = new Object();\n        GenericResourceMethod method = mock(GenericResourceMethod.class);\n        ApplicationContext applicationContext = mock(ApplicationContext.class);\n\n        decorator.invokeMethod(object, method, applicationContext);\n\n        verify(methodInvoker).invokeMethod(object, method, applicationContext);\n    }", "signature": "void delegatesCallToMethodInvoker()", "full_signature": "@Test public void delegatesCallToMethodInvoker()", "class_method_signature": "MethodInvokerDecoratorTest.delegatesCallToMethodInvoker()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "invokeMethod", "invokeMethod", "verify"]}, "focal_class": {"identifier": "MethodInvokerDecorator", "superclass": "", "interfaces": "implements MethodInvoker", "fields": [{"original_string": "protected final MethodInvoker decoratedInvoker;", "modifier": "protected final", "type": "MethodInvoker", "declarator": "decoratedInvoker", "var_name": "decoratedInvoker"}], "methods": [{"identifier": "MethodInvokerDecorator", "parameters": "(MethodInvoker decoratedInvoker)", "modifiers": "public", "return": "", "signature": " MethodInvokerDecorator(MethodInvoker decoratedInvoker)", "full_signature": "public  MethodInvokerDecorator(MethodInvoker decoratedInvoker)", "class_method_signature": "MethodInvokerDecorator.MethodInvokerDecorator(MethodInvoker decoratedInvoker)", "testcase": false, "constructor": true}, {"identifier": "invokeMethod", "parameters": "(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "signature": "Object invokeMethod(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context)", "full_signature": "@Override public Object invokeMethod(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context)", "class_method_signature": "MethodInvokerDecorator.invokeMethod(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/method/MethodInvokerDecorator.java"}, "focal_method": {"identifier": "invokeMethod", "parameters": "(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object invokeMethod(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context) {\n        return decoratedInvoker.invokeMethod(resource, genericResourceMethod, context);\n    }", "signature": "Object invokeMethod(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context)", "full_signature": "@Override public Object invokeMethod(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context)", "class_method_signature": "MethodInvokerDecorator.invokeMethod(Object resource, GenericResourceMethod genericResourceMethod, ApplicationContext context)", "testcase": false, "constructor": false, "invocations": ["invokeMethod"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}