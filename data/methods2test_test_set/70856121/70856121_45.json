{"test_class": {"identifier": "JmxAddressesTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/server/src/test/java/io/cassandrareaper/jmx/JmxAddressesTest.java"}, "test_case": {"identifier": "getJmxServiceUrlIPv6NumericTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getJmxServiceUrlIPv6NumericTest() throws Exception {\n    int port = 8888;\n    assertEquals(jmxUrlPath(\"[::1]\", port),\n        getJmxServiceUrl(\"::1\", port).getURLPath());\n    assertEquals(jmxUrlPath(\"[::1]\", port),\n        getJmxServiceUrl(\"[::1]\", port).getURLPath());\n    assertEquals(jmxUrlPath(\"127.0.0.1\", port),\n        getJmxServiceUrl(\"127.0.0.1\", port).getURLPath());\n    assertEquals(jmxUrlPath(\"[2a06:6b8:b010:d007::1:c8]\", port),\n        getJmxServiceUrl(\"2a06:6b8:b010:d007::1:c8\", port).getURLPath());\n    assertEquals(jmxUrlPath(\"localhost\", port),\n        getJmxServiceUrl(\"localhost\", port).getURLPath());\n    assertEquals(jmxUrlPath(\"example.com\", port),\n        getJmxServiceUrl(\"example.com\", port).getURLPath());\n  }", "signature": "void getJmxServiceUrlIPv6NumericTest()", "full_signature": "@Test public void getJmxServiceUrlIPv6NumericTest()", "class_method_signature": "JmxAddressesTest.getJmxServiceUrlIPv6NumericTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "jmxUrlPath", "getURLPath", "getJmxServiceUrl", "assertEquals", "jmxUrlPath", "getURLPath", "getJmxServiceUrl", "assertEquals", "jmxUrlPath", "getURLPath", "getJmxServiceUrl", "assertEquals", "jmxUrlPath", "getURLPath", "getJmxServiceUrl", "assertEquals", "jmxUrlPath", "getURLPath", "getJmxServiceUrl", "assertEquals", "jmxUrlPath", "getURLPath", "getJmxServiceUrl"]}, "focal_class": {"identifier": "JmxAddresses", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String JMX_URL = \"service:jmx:rmi:///jndi/rmi://%s:%d/jmxrmi\";", "modifier": "private static final", "type": "String", "declarator": "JMX_URL = \"service:jmx:rmi:///jndi/rmi://%s:%d/jmxrmi\"", "var_name": "JMX_URL"}, {"original_string": "private static final String JMXMP_URL = \"service:jmx:jmxmp://%s:%d/\";", "modifier": "private static final", "type": "String", "declarator": "JMXMP_URL = \"service:jmx:jmxmp://%s:%d/\"", "var_name": "JMXMP_URL"}], "methods": [{"identifier": "JmxAddresses", "parameters": "()", "modifiers": "private", "return": "", "signature": " JmxAddresses()", "full_signature": "private  JmxAddresses()", "class_method_signature": "JmxAddresses.JmxAddresses()", "testcase": false, "constructor": true}, {"identifier": "isNumericIPv6Address", "parameters": "(String address)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNumericIPv6Address(String address)", "full_signature": "public static boolean isNumericIPv6Address(String address)", "class_method_signature": "JmxAddresses.isNumericIPv6Address(String address)", "testcase": false, "constructor": false}, {"identifier": "getJmxServiceUrl", "parameters": "(String host, int port)", "modifiers": "public static", "return": "JMXServiceURL", "signature": "JMXServiceURL getJmxServiceUrl(String host, int port)", "full_signature": "public static JMXServiceURL getJmxServiceUrl(String host, int port)", "class_method_signature": "JmxAddresses.getJmxServiceUrl(String host, int port)", "testcase": false, "constructor": false}, {"identifier": "getJmxServiceUrl", "parameters": "(String host, int port, boolean jmxmp)", "modifiers": "public static", "return": "JMXServiceURL", "signature": "JMXServiceURL getJmxServiceUrl(String host, int port, boolean jmxmp)", "full_signature": "public static JMXServiceURL getJmxServiceUrl(String host, int port, boolean jmxmp)", "class_method_signature": "JmxAddresses.getJmxServiceUrl(String host, int port, boolean jmxmp)", "testcase": false, "constructor": false}, {"identifier": "wrapIPv6BracesIfNeed", "parameters": "(String address)", "modifiers": "private static", "return": "String", "signature": "String wrapIPv6BracesIfNeed(String address)", "full_signature": "private static String wrapIPv6BracesIfNeed(String address)", "class_method_signature": "JmxAddresses.wrapIPv6BracesIfNeed(String address)", "testcase": false, "constructor": false}], "file": "src/server/src/main/java/io/cassandrareaper/jmx/JmxAddresses.java"}, "focal_method": {"identifier": "getJmxServiceUrl", "parameters": "(String host, int port)", "modifiers": "public static", "return": "JMXServiceURL", "body": "public static JMXServiceURL getJmxServiceUrl(String host, int port)\n        throws MalformedURLException {\n    return getJmxServiceUrl(host, port, false);\n  }", "signature": "JMXServiceURL getJmxServiceUrl(String host, int port)", "full_signature": "public static JMXServiceURL getJmxServiceUrl(String host, int port)", "class_method_signature": "JmxAddresses.getJmxServiceUrl(String host, int port)", "testcase": false, "constructor": false, "invocations": ["getJmxServiceUrl"]}, "repository": {"repo_id": 70856121, "url": "https://github.com/thelastpickle/cassandra-reaper", "language": "Java", "is_fork": false, "fork_count": 156, "stargazer_count": 353, "size": 43662, "license": "licensed"}}