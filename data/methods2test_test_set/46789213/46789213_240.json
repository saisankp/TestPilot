{"test_class": {"identifier": "BroadcastValidationProtocolTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/lib/generic/BroadcastValidationProtocolTest.java"}, "test_case": {"identifier": "testEvaluateWithTwoPartiesReturnsDone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEvaluateWithTwoPartiesReturnsDone() {\n    EvaluationStatus status = new BroadcastValidationProtocol<>(new byte[1])\n        .evaluate(0, new ResourcePool() {\n          @Override\n          public int getMyId() {\n            return 0;\n          }\n\n          @Override\n          public int getNoOfParties() {\n            return 2;\n          }\n        }, null);\n    Assert.assertEquals(EvaluationStatus.IS_DONE, status);\n  }", "signature": "void testEvaluateWithTwoPartiesReturnsDone()", "full_signature": "@Test public void testEvaluateWithTwoPartiesReturnsDone()", "class_method_signature": "BroadcastValidationProtocolTest.testEvaluateWithTwoPartiesReturnsDone()", "testcase": true, "constructor": false, "invocations": ["evaluate", "assertEquals"]}, "focal_class": {"identifier": "BroadcastValidationProtocol", "superclass": "", "interfaces": "implements\n    NativeProtocol<Void, ResourcePoolT>", "fields": [{"original_string": "private final List<byte[]> input;", "modifier": "private final", "type": "List<byte[]>", "declarator": "input", "var_name": "input"}, {"original_string": "private SecureBroadcastUtil broadcast;", "modifier": "private", "type": "SecureBroadcastUtil", "declarator": "broadcast", "var_name": "broadcast"}, {"original_string": "private byte[] digest;", "modifier": "private", "type": "byte[]", "declarator": "digest", "var_name": "digest"}], "methods": [{"identifier": "BroadcastValidationProtocol", "parameters": "(List<byte[]> input)", "modifiers": "public", "return": "", "signature": " BroadcastValidationProtocol(List<byte[]> input)", "full_signature": "public  BroadcastValidationProtocol(List<byte[]> input)", "class_method_signature": "BroadcastValidationProtocol.BroadcastValidationProtocol(List<byte[]> input)", "testcase": false, "constructor": true}, {"identifier": "BroadcastValidationProtocol", "parameters": "(byte[] input)", "modifiers": "public", "return": "", "signature": " BroadcastValidationProtocol(byte[] input)", "full_signature": "public  BroadcastValidationProtocol(byte[] input)", "class_method_signature": "BroadcastValidationProtocol.BroadcastValidationProtocol(byte[] input)", "testcase": false, "constructor": true}, {"identifier": "out", "parameters": "()", "modifiers": "@Override public", "return": "Void", "signature": "Void out()", "full_signature": "@Override public Void out()", "class_method_signature": "BroadcastValidationProtocol.out()", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(int round, ResourcePoolT resourcePool, Network network)", "modifiers": "@Override public", "return": "EvaluationStatus", "signature": "EvaluationStatus evaluate(int round, ResourcePoolT resourcePool, Network network)", "full_signature": "@Override public EvaluationStatus evaluate(int round, ResourcePoolT resourcePool, Network network)", "class_method_signature": "BroadcastValidationProtocol.evaluate(int round, ResourcePoolT resourcePool, Network network)", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/lib/generic/BroadcastValidationProtocol.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(int round, ResourcePoolT resourcePool, Network network)", "modifiers": "@Override public", "return": "EvaluationStatus", "body": "@Override\n  public EvaluationStatus evaluate(int round, ResourcePoolT resourcePool, Network network) {\n    if (resourcePool.getNoOfParties() <= 2) {\n      return EvaluationStatus.IS_DONE;\n    }\n    if (round == 0) {\n      broadcast = new SecureBroadcastUtil(network);\n      digest = broadcast.computeAndSendDigests(input);\n      return EvaluationStatus.HAS_MORE_ROUNDS;\n    } else {\n      broadcast.receiveAndValidateDigests(digest);\n      return EvaluationStatus.IS_DONE;\n    }\n  }", "signature": "EvaluationStatus evaluate(int round, ResourcePoolT resourcePool, Network network)", "full_signature": "@Override public EvaluationStatus evaluate(int round, ResourcePoolT resourcePool, Network network)", "class_method_signature": "BroadcastValidationProtocol.evaluate(int round, ResourcePoolT resourcePool, Network network)", "testcase": false, "constructor": false, "invocations": ["getNoOfParties", "computeAndSendDigests", "receiveAndValidateDigests"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}