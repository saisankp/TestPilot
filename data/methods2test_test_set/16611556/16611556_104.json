{"test_class": {"identifier": "CacheKeyMethodStoreImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static CacheKeyMethodStoreImpl cacheKeyMethodStoreImpl;", "modifier": "private static", "type": "CacheKeyMethodStoreImpl", "declarator": "cacheKeyMethodStoreImpl", "var_name": "cacheKeyMethodStoreImpl"}], "file": "simple-spring-memcached/src/test/java/com/google/code/ssm/aop/support/CacheKeyMethodStoreImplTest.java"}, "test_case": {"identifier": "invalidMethodSignature2", "parameters": "()", "modifiers": "@Test(expected = InvalidAnnotationException.class) public", "return": "void", "body": "@Test(expected = InvalidAnnotationException.class)\n    public void invalidMethodSignature2() throws NoSuchMethodException {\n        cacheKeyMethodStoreImpl.getKeyMethod(InvalidCacheKeyMethodSignatureModel2.class);\n    }", "signature": "void invalidMethodSignature2()", "full_signature": "@Test(expected = InvalidAnnotationException.class) public void invalidMethodSignature2()", "class_method_signature": "CacheKeyMethodStoreImplTest.invalidMethodSignature2()", "testcase": true, "constructor": false, "invocations": ["getKeyMethod"]}, "focal_class": {"identifier": "CacheKeyMethodStoreImpl", "superclass": "", "interfaces": "implements CacheKeyMethodStore", "fields": [{"original_string": "public static final String DEFAULT_KEY_METHOD_NAME = \"toString\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_KEY_METHOD_NAME = \"toString\"", "var_name": "DEFAULT_KEY_METHOD_NAME"}, {"original_string": "private final Map<Class<?>, Method> map = new ConcurrentHashMap<Class<?>, Method>();", "modifier": "private final", "type": "Map<Class<?>, Method>", "declarator": "map = new ConcurrentHashMap<Class<?>, Method>()", "var_name": "map"}], "methods": [{"identifier": "getKeyMethod", "parameters": "(final Class<?> keyClass)", "modifiers": "@Override public", "return": "Method", "signature": "Method getKeyMethod(final Class<?> keyClass)", "full_signature": "@Override public Method getKeyMethod(final Class<?> keyClass)", "class_method_signature": "CacheKeyMethodStoreImpl.getKeyMethod(final Class<?> keyClass)", "testcase": false, "constructor": false}, {"identifier": "getFromClass", "parameters": "(final Class<?> keyClass)", "modifiers": "private", "return": "Method", "signature": "Method getFromClass(final Class<?> keyClass)", "full_signature": "private Method getFromClass(final Class<?> keyClass)", "class_method_signature": "CacheKeyMethodStoreImpl.getFromClass(final Class<?> keyClass)", "testcase": false, "constructor": false}, {"identifier": "isCacheKeyMethod", "parameters": "(final Method method)", "modifiers": "private", "return": "boolean", "signature": "boolean isCacheKeyMethod(final Method method)", "full_signature": "private boolean isCacheKeyMethod(final Method method)", "class_method_signature": "CacheKeyMethodStoreImpl.isCacheKeyMethod(final Method method)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final Class<?> key, final Method value)", "modifiers": "private", "return": "void", "signature": "void add(final Class<?> key, final Method value)", "full_signature": "private void add(final Class<?> key, final Method value)", "class_method_signature": "CacheKeyMethodStoreImpl.add(final Class<?> key, final Method value)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(final Class<?> key)", "modifiers": "private", "return": "Method", "signature": "Method find(final Class<?> key)", "full_signature": "private Method find(final Class<?> key)", "class_method_signature": "CacheKeyMethodStoreImpl.find(final Class<?> key)", "testcase": false, "constructor": false}], "file": "simple-spring-memcached/src/main/java/com/google/code/ssm/aop/support/CacheKeyMethodStoreImpl.java"}, "focal_method": {"identifier": "getKeyMethod", "parameters": "(final Class<?> keyClass)", "modifiers": "@Override public", "return": "Method", "body": "@Override\n    public Method getKeyMethod(final Class<?> keyClass) throws NoSuchMethodException {\n        final Method storedMethod = find(keyClass);\n        if (storedMethod != null) {\n            return storedMethod;\n        }\n        Method targetMethod = getFromClass(keyClass);\n\n        if (targetMethod == null) {\n            // try to get from superclass\n            Class<?> superKeyClass = keyClass.getSuperclass();\n            if (superKeyClass != null) {\n                targetMethod = getKeyMethod(superKeyClass);\n            }\n\n            if (targetMethod == null || DEFAULT_KEY_METHOD_NAME.equals(targetMethod.getName())) {\n                targetMethod = keyClass.getMethod(DEFAULT_KEY_METHOD_NAME, (Class<?>[]) null);\n            }\n        }\n\n        add(keyClass, targetMethod);\n\n        return targetMethod;\n    }", "signature": "Method getKeyMethod(final Class<?> keyClass)", "full_signature": "@Override public Method getKeyMethod(final Class<?> keyClass)", "class_method_signature": "CacheKeyMethodStoreImpl.getKeyMethod(final Class<?> keyClass)", "testcase": false, "constructor": false, "invocations": ["find", "getFromClass", "getSuperclass", "getKeyMethod", "equals", "getName", "getMethod", "add"]}, "repository": {"repo_id": 16611556, "url": "https://github.com/ragnor/simple-spring-memcached", "language": "Java", "is_fork": false, "fork_count": 86, "stargazer_count": 181, "size": 3625, "license": "licensed"}}