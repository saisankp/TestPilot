{"test_class": {"identifier": "MockClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GitHub github;", "modifier": "private", "type": "GitHub", "declarator": "github", "var_name": "github"}, {"original_string": "private MockClient mockClient;", "modifier": "private", "type": "MockClient", "declarator": "mockClient", "var_name": "mockClient"}], "file": "mock/src/test/java/feign/mock/MockClientTest.java"}, "test_case": {"identifier": "paramsEncoding", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void paramsEncoding() {\n    List<Contributor> contributors = github.contributors(\"7 7\", \"netflix\", \"feign\");\n    assertThat(contributors, hasSize(30));\n    mockClient.verifyStatus();\n  }", "signature": "void paramsEncoding()", "full_signature": "@Test public void paramsEncoding()", "class_method_signature": "MockClientTest.paramsEncoding()", "testcase": true, "constructor": false, "invocations": ["contributors", "assertThat", "hasSize", "verifyStatus"]}, "focal_class": {"identifier": "MockClient", "superclass": "", "interfaces": "implements Client", "fields": [{"original_string": "private final List<RequestResponse> responses = new ArrayList<RequestResponse>();", "modifier": "private final", "type": "List<RequestResponse>", "declarator": "responses = new ArrayList<RequestResponse>()", "var_name": "responses"}, {"original_string": "private final Map<RequestKey, List<Request>> requests = new HashMap<RequestKey, List<Request>>();", "modifier": "private final", "type": "Map<RequestKey, List<Request>>", "declarator": "requests = new HashMap<RequestKey, List<Request>>()", "var_name": "requests"}, {"original_string": "private boolean sequential;", "modifier": "private", "type": "boolean", "declarator": "sequential", "var_name": "sequential"}, {"original_string": "private Iterator<RequestResponse> responseIterator;", "modifier": "private", "type": "Iterator<RequestResponse>", "declarator": "responseIterator", "var_name": "responseIterator"}], "methods": [{"identifier": "MockClient", "parameters": "()", "modifiers": "public", "return": "", "signature": " MockClient()", "full_signature": "public  MockClient()", "class_method_signature": "MockClient.MockClient()", "testcase": false, "constructor": true}, {"identifier": "MockClient", "parameters": "(boolean sequential)", "modifiers": "public", "return": "", "signature": " MockClient(boolean sequential)", "full_signature": "public  MockClient(boolean sequential)", "class_method_signature": "MockClient.MockClient(boolean sequential)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(Request request, Request.Options options)", "modifiers": "@Override public synchronized", "return": "Response", "signature": "Response execute(Request request, Request.Options options)", "full_signature": "@Override public synchronized Response execute(Request request, Request.Options options)", "class_method_signature": "MockClient.execute(Request request, Request.Options options)", "testcase": false, "constructor": false}, {"identifier": "executeSequential", "parameters": "(RequestKey requestKey)", "modifiers": "private", "return": "Response.Builder", "signature": "Response.Builder executeSequential(RequestKey requestKey)", "full_signature": "private Response.Builder executeSequential(RequestKey requestKey)", "class_method_signature": "MockClient.executeSequential(RequestKey requestKey)", "testcase": false, "constructor": false}, {"identifier": "executeAny", "parameters": "(Request request, RequestKey requestKey)", "modifiers": "private", "return": "Response.Builder", "signature": "Response.Builder executeAny(Request request, RequestKey requestKey)", "full_signature": "private Response.Builder executeAny(Request request, RequestKey requestKey)", "class_method_signature": "MockClient.executeAny(Request request, RequestKey requestKey)", "testcase": false, "constructor": false}, {"identifier": "getResponseBuilder", "parameters": "(Request request, RequestKey requestKey)", "modifiers": "private", "return": "Response.Builder", "signature": "Response.Builder getResponseBuilder(Request request, RequestKey requestKey)", "full_signature": "private Response.Builder getResponseBuilder(Request request, RequestKey requestKey)", "class_method_signature": "MockClient.getResponseBuilder(Request request, RequestKey requestKey)", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "(HttpMethod method, String url, InputStream responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient ok(HttpMethod method, String url, InputStream responseBody)", "full_signature": "public MockClient ok(HttpMethod method, String url, InputStream responseBody)", "class_method_signature": "MockClient.ok(HttpMethod method, String url, InputStream responseBody)", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "(HttpMethod method, String url, String responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient ok(HttpMethod method, String url, String responseBody)", "full_signature": "public MockClient ok(HttpMethod method, String url, String responseBody)", "class_method_signature": "MockClient.ok(HttpMethod method, String url, String responseBody)", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "(HttpMethod method, String url, byte[] responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient ok(HttpMethod method, String url, byte[] responseBody)", "full_signature": "public MockClient ok(HttpMethod method, String url, byte[] responseBody)", "class_method_signature": "MockClient.ok(HttpMethod method, String url, byte[] responseBody)", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "(HttpMethod method, String url)", "modifiers": "public", "return": "MockClient", "signature": "MockClient ok(HttpMethod method, String url)", "full_signature": "public MockClient ok(HttpMethod method, String url)", "class_method_signature": "MockClient.ok(HttpMethod method, String url)", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "(RequestKey requestKey, InputStream responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient ok(RequestKey requestKey, InputStream responseBody)", "full_signature": "public MockClient ok(RequestKey requestKey, InputStream responseBody)", "class_method_signature": "MockClient.ok(RequestKey requestKey, InputStream responseBody)", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "(RequestKey requestKey, String responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient ok(RequestKey requestKey, String responseBody)", "full_signature": "public MockClient ok(RequestKey requestKey, String responseBody)", "class_method_signature": "MockClient.ok(RequestKey requestKey, String responseBody)", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "(RequestKey requestKey, byte[] responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient ok(RequestKey requestKey, byte[] responseBody)", "full_signature": "public MockClient ok(RequestKey requestKey, byte[] responseBody)", "class_method_signature": "MockClient.ok(RequestKey requestKey, byte[] responseBody)", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "(RequestKey requestKey)", "modifiers": "public", "return": "MockClient", "signature": "MockClient ok(RequestKey requestKey)", "full_signature": "public MockClient ok(RequestKey requestKey)", "class_method_signature": "MockClient.ok(RequestKey requestKey)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HttpMethod method, String url, int status, InputStream responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(HttpMethod method, String url, int status, InputStream responseBody)", "full_signature": "public MockClient add(HttpMethod method, String url, int status, InputStream responseBody)", "class_method_signature": "MockClient.add(HttpMethod method, String url, int status, InputStream responseBody)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HttpMethod method, String url, int status, String responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(HttpMethod method, String url, int status, String responseBody)", "full_signature": "public MockClient add(HttpMethod method, String url, int status, String responseBody)", "class_method_signature": "MockClient.add(HttpMethod method, String url, int status, String responseBody)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HttpMethod method, String url, int status, byte[] responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(HttpMethod method, String url, int status, byte[] responseBody)", "full_signature": "public MockClient add(HttpMethod method, String url, int status, byte[] responseBody)", "class_method_signature": "MockClient.add(HttpMethod method, String url, int status, byte[] responseBody)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HttpMethod method, String url, int status)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(HttpMethod method, String url, int status)", "full_signature": "public MockClient add(HttpMethod method, String url, int status)", "class_method_signature": "MockClient.add(HttpMethod method, String url, int status)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HttpMethod method, String url, Response.Builder response)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(HttpMethod method, String url, Response.Builder response)", "full_signature": "public MockClient add(HttpMethod method, String url, Response.Builder response)", "class_method_signature": "MockClient.add(HttpMethod method, String url, Response.Builder response)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(RequestKey requestKey, int status, InputStream responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(RequestKey requestKey, int status, InputStream responseBody)", "full_signature": "public MockClient add(RequestKey requestKey, int status, InputStream responseBody)", "class_method_signature": "MockClient.add(RequestKey requestKey, int status, InputStream responseBody)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(RequestKey requestKey, int status, String responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(RequestKey requestKey, int status, String responseBody)", "full_signature": "public MockClient add(RequestKey requestKey, int status, String responseBody)", "class_method_signature": "MockClient.add(RequestKey requestKey, int status, String responseBody)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(RequestKey requestKey, int status, byte[] responseBody)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(RequestKey requestKey, int status, byte[] responseBody)", "full_signature": "public MockClient add(RequestKey requestKey, int status, byte[] responseBody)", "class_method_signature": "MockClient.add(RequestKey requestKey, int status, byte[] responseBody)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(RequestKey requestKey, int status)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(RequestKey requestKey, int status)", "full_signature": "public MockClient add(RequestKey requestKey, int status)", "class_method_signature": "MockClient.add(RequestKey requestKey, int status)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(RequestKey requestKey, Response.Builder response)", "modifiers": "public", "return": "MockClient", "signature": "MockClient add(RequestKey requestKey, Response.Builder response)", "full_signature": "public MockClient add(RequestKey requestKey, Response.Builder response)", "class_method_signature": "MockClient.add(RequestKey requestKey, Response.Builder response)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HttpMethod method, String url, Response response)", "modifiers": "@Deprecated public", "return": "MockClient", "signature": "MockClient add(HttpMethod method, String url, Response response)", "full_signature": "@Deprecated public MockClient add(HttpMethod method, String url, Response response)", "class_method_signature": "MockClient.add(HttpMethod method, String url, Response response)", "testcase": false, "constructor": false}, {"identifier": "noContent", "parameters": "(HttpMethod method, String url)", "modifiers": "public", "return": "MockClient", "signature": "MockClient noContent(HttpMethod method, String url)", "full_signature": "public MockClient noContent(HttpMethod method, String url)", "class_method_signature": "MockClient.noContent(HttpMethod method, String url)", "testcase": false, "constructor": false}, {"identifier": "verifyOne", "parameters": "(HttpMethod method, String url)", "modifiers": "public", "return": "Request", "signature": "Request verifyOne(HttpMethod method, String url)", "full_signature": "public Request verifyOne(HttpMethod method, String url)", "class_method_signature": "MockClient.verifyOne(HttpMethod method, String url)", "testcase": false, "constructor": false}, {"identifier": "verifyTimes", "parameters": "(final HttpMethod method, final String url, final int times)", "modifiers": "public", "return": "List<Request>", "signature": "List<Request> verifyTimes(final HttpMethod method, final String url, final int times)", "full_signature": "public List<Request> verifyTimes(final HttpMethod method, final String url, final int times)", "class_method_signature": "MockClient.verifyTimes(final HttpMethod method, final String url, final int times)", "testcase": false, "constructor": false}, {"identifier": "verifyNever", "parameters": "(HttpMethod method, String url)", "modifiers": "public", "return": "void", "signature": "void verifyNever(HttpMethod method, String url)", "full_signature": "public void verifyNever(HttpMethod method, String url)", "class_method_signature": "MockClient.verifyNever(HttpMethod method, String url)", "testcase": false, "constructor": false}, {"identifier": "verifyStatus", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void verifyStatus()", "full_signature": "public void verifyStatus()", "class_method_signature": "MockClient.verifyStatus()", "testcase": false, "constructor": false}, {"identifier": "resetRequests", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetRequests()", "full_signature": "public void resetRequests()", "class_method_signature": "MockClient.resetRequests()", "testcase": false, "constructor": false}], "file": "mock/src/main/java/feign/mock/MockClient.java"}, "focal_method": {"identifier": "verifyStatus", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void verifyStatus() {\n    if (sequential) {\n      boolean unopenedIterator = responseIterator == null && !responses.isEmpty();\n      if (unopenedIterator || responseIterator.hasNext()) {\n        throw new VerificationAssertionError(\"More executions were expected\");\n      }\n    }\n  }", "signature": "void verifyStatus()", "full_signature": "public void verifyStatus()", "class_method_signature": "MockClient.verifyStatus()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "hasNext"]}, "repository": {"repo_id": 10981994, "url": "https://github.com/OpenFeign/feign", "stars": 5385, "created": "6/26/2013 11:28:16 PM +00:00", "updates": "2020-01-27T14:44:13+00:00", "fork": "False", "license": "licensed"}}