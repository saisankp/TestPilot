{"test_class": {"identifier": "ArrayUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/util/ArrayUtilsTest.java"}, "test_case": {"identifier": "success_ReverseIntegerArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_ReverseIntegerArray() {\n        int[] input1 = new int[]{0, 1, 1, -1, 0, 0, -1};\n        assertThat(ArrayUtils.reverse(input1), is(new int[]{-1, 0, 0, -1, 1, 1, 0}));\n\n        int[] input2 = new int[]{0, -1, 1, -1, 0, 1, -1, 1, 1, 1, 0, -1, -1, 0};\n        assertThat(ArrayUtils.reverse(input2), is(new int[]{0, -1, -1, 0, 1, 1, 1, -1, 1, 0, -1, 1, -1, 0}));\n    }", "signature": "void success_ReverseIntegerArray()", "full_signature": "@Test public void success_ReverseIntegerArray()", "class_method_signature": "ArrayUtilsTest.success_ReverseIntegerArray()", "testcase": true, "constructor": false, "invocations": ["assertThat", "reverse", "is", "assertThat", "reverse", "is"]}, "focal_class": {"identifier": "ArrayUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "split", "parameters": "(byte[] bytes, int splitIndex)", "modifiers": "public static", "return": "byte[][]", "signature": "byte[][] split(byte[] bytes, int splitIndex)", "full_signature": "public static byte[][] split(byte[] bytes, int splitIndex)", "class_method_signature": "ArrayUtils.split(byte[] bytes, int splitIndex)", "testcase": false, "constructor": false}, {"identifier": "reverse", "parameters": "(int[] input)", "modifiers": "public static", "return": "int[]", "signature": "int[] reverse(int[] input)", "full_signature": "public static int[] reverse(int[] input)", "class_method_signature": "ArrayUtils.reverse(int[] input)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(BigInteger value, int expectedBytesLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(BigInteger value, int expectedBytesLength)", "full_signature": "public static byte[] toByteArray(BigInteger value, int expectedBytesLength)", "class_method_signature": "ArrayUtils.toByteArray(BigInteger value, int expectedBytesLength)", "testcase": false, "constructor": false}, {"identifier": "toBinaryArray", "parameters": "(BigInteger integer)", "modifiers": "public static", "return": "int[]", "signature": "int[] toBinaryArray(BigInteger integer)", "full_signature": "public static int[] toBinaryArray(BigInteger integer)", "class_method_signature": "ArrayUtils.toBinaryArray(BigInteger integer)", "testcase": false, "constructor": false}, {"identifier": "toMutualOppositeForm", "parameters": "(BigInteger integer)", "modifiers": "public static", "return": "int[]", "signature": "int[] toMutualOppositeForm(BigInteger integer)", "full_signature": "public static int[] toMutualOppositeForm(BigInteger integer)", "class_method_signature": "ArrayUtils.toMutualOppositeForm(BigInteger integer)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/util/ArrayUtils.java"}, "focal_method": {"identifier": "reverse", "parameters": "(int[] input)", "modifiers": "public static", "return": "int[]", "body": "public static int[] reverse(int[] input) {\n        int[] output = new int[input.length];\n        int counter = 0;\n        for (int i : input) {\n            output[input.length - counter - 1] = i;\n            counter++;\n        }\n        return output;\n    }", "signature": "int[] reverse(int[] input)", "full_signature": "public static int[] reverse(int[] input)", "class_method_signature": "ArrayUtils.reverse(int[] input)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}