{"test_class": {"identifier": "ReflectionUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Long privateField;", "modifier": "private", "type": "Long", "declarator": "privateField", "var_name": "privateField"}], "file": "core/src/test/java/eu/drus/jpa/unit/util/ReflectionUtilsTest.java"}, "test_case": {"identifier": "testGetValeOfAPrivateFieldUsingFieldObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetValeOfAPrivateFieldUsingFieldObject() throws Exception {\n        // GIVEN\n        privateField = 10l;\n        final Field toi = getClass().getDeclaredField(\"privateField\");\n\n        // WHEN\n        final Object value = ReflectionUtils.getValue(this, toi);\n\n        // THEN\n        assertThat(privateField, equalTo(value));\n    }", "signature": "void testGetValeOfAPrivateFieldUsingFieldObject()", "full_signature": "@Test public void testGetValeOfAPrivateFieldUsingFieldObject()", "class_method_signature": "ReflectionUtilsTest.testGetValeOfAPrivateFieldUsingFieldObject()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "getClass", "getValue", "assertThat", "equalTo"]}, "focal_class": {"identifier": "ReflectionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ReflectionUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ReflectionUtils()", "full_signature": "private  ReflectionUtils()", "class_method_signature": "ReflectionUtils.ReflectionUtils()", "testcase": false, "constructor": true}, {"identifier": "findField", "parameters": "(final Object src, final String fieldName)", "modifiers": "private static", "return": "Field", "signature": "Field findField(final Object src, final String fieldName)", "full_signature": "private static Field findField(final Object src, final String fieldName)", "class_method_signature": "ReflectionUtils.findField(final Object src, final String fieldName)", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "(Class<?> clazz, final String fieldName)", "modifiers": "private static", "return": "Field", "signature": "Field getField(Class<?> clazz, final String fieldName)", "full_signature": "private static Field getField(Class<?> clazz, final String fieldName)", "class_method_signature": "ReflectionUtils.getField(Class<?> clazz, final String fieldName)", "testcase": false, "constructor": false}, {"identifier": "injectValue", "parameters": "(final Object obj, final String fieldName, final Object value)", "modifiers": "public static", "return": "void", "signature": "void injectValue(final Object obj, final String fieldName, final Object value)", "full_signature": "public static void injectValue(final Object obj, final String fieldName, final Object value)", "class_method_signature": "ReflectionUtils.injectValue(final Object obj, final String fieldName, final Object value)", "testcase": false, "constructor": false}, {"identifier": "injectValue", "parameters": "(final Object obj, final Field field, final Object value)", "modifiers": "public static", "return": "void", "signature": "void injectValue(final Object obj, final Field field, final Object value)", "full_signature": "public static void injectValue(final Object obj, final Field field, final Object value)", "class_method_signature": "ReflectionUtils.injectValue(final Object obj, final Field field, final Object value)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(final Object src, final String fieldName)", "modifiers": "public static", "return": "Object", "signature": "Object getValue(final Object src, final String fieldName)", "full_signature": "public static Object getValue(final Object src, final String fieldName)", "class_method_signature": "ReflectionUtils.getValue(final Object src, final String fieldName)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(final Object src, final Field field)", "modifiers": "public static", "return": "Object", "signature": "Object getValue(final Object src, final Field field)", "full_signature": "public static Object getValue(final Object src, final Field field)", "class_method_signature": "ReflectionUtils.getValue(final Object src, final Field field)", "testcase": false, "constructor": false}], "file": "core/src/main/java/eu/drus/jpa/unit/util/ReflectionUtils.java"}, "focal_method": {"identifier": "getValue", "parameters": "(final Object src, final String fieldName)", "modifiers": "public static", "return": "Object", "body": "public static Object getValue(final Object src, final String fieldName) throws IllegalAccessException, NoSuchFieldException {\n    \treturn getValue(src, findField(src, fieldName));\n    }", "signature": "Object getValue(final Object src, final String fieldName)", "full_signature": "public static Object getValue(final Object src, final String fieldName)", "class_method_signature": "ReflectionUtils.getValue(final Object src, final String fieldName)", "testcase": false, "constructor": false, "invocations": ["getValue", "findField"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}