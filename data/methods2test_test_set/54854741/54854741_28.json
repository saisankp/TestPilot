{"test_class": {"identifier": "EncryptorServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private SettingsService settingsService;", "modifier": "private", "type": "SettingsService", "declarator": "settingsService", "var_name": "settingsService"}, {"original_string": "private EncryptorProviderService encryptorProviderService;", "modifier": "private", "type": "EncryptorProviderService", "declarator": "encryptorProviderService", "var_name": "encryptorProviderService"}, {"original_string": "private EncryptorService encryptorService;", "modifier": "private", "type": "EncryptorService", "declarator": "encryptorService", "var_name": "encryptorService"}, {"original_string": "private final EncryptorListener encryptorListener = mock(EncryptorListener.class);", "modifier": "private final", "type": "EncryptorListener", "declarator": "encryptorListener = mock(EncryptorListener.class)", "var_name": "encryptorListener"}, {"original_string": "private final AtomicReference<Settings> settings = new AtomicReference<>();", "modifier": "private final", "type": "AtomicReference<Settings>", "declarator": "settings = new AtomicReference<>()", "var_name": "settings"}], "file": "services/src/test/java/com/greensopinion/finance/services/encryption/EncryptorServiceTest.java"}, "test_case": {"identifier": "reconfigureNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void reconfigureNull() {\n\t\tthrown.expect(NullPointerException.class);\n\t\tthrown.expectMessage(\"Must provide a master password\");\n\t\tencryptorService.reconfigure(null);\n\t}", "signature": "void reconfigureNull()", "full_signature": "@Test public void reconfigureNull()", "class_method_signature": "EncryptorServiceTest.reconfigureNull()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "reconfigure"]}, "focal_class": {"identifier": "EncryptorService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SettingsService settingsService;", "modifier": "private final", "type": "SettingsService", "declarator": "settingsService", "var_name": "settingsService"}, {"original_string": "private final EncryptorProviderService encryptorProviderService;", "modifier": "private final", "type": "EncryptorProviderService", "declarator": "encryptorProviderService", "var_name": "encryptorProviderService"}, {"original_string": "private final Object configurationLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "configurationLock = new Object()", "var_name": "configurationLock"}, {"original_string": "private final EncryptorListener encryptorListener;", "modifier": "private final", "type": "EncryptorListener", "declarator": "encryptorListener", "var_name": "encryptorListener"}], "methods": [{"identifier": "EncryptorService", "parameters": "(SettingsService settingsService, EncryptorProviderService encryptorProviderService,\n\t\t\tEncryptorListener encryptorListener)", "modifiers": "@Inject public", "return": "", "signature": " EncryptorService(SettingsService settingsService, EncryptorProviderService encryptorProviderService,\n\t\t\tEncryptorListener encryptorListener)", "full_signature": "@Inject public  EncryptorService(SettingsService settingsService, EncryptorProviderService encryptorProviderService,\n\t\t\tEncryptorListener encryptorListener)", "class_method_signature": "EncryptorService.EncryptorService(SettingsService settingsService, EncryptorProviderService encryptorProviderService,\n\t\t\tEncryptorListener encryptorListener)", "testcase": false, "constructor": true}, {"identifier": "isConfigured", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isConfigured()", "full_signature": "public boolean isConfigured()", "class_method_signature": "EncryptorService.isConfigured()", "testcase": false, "constructor": false}, {"identifier": "isInitialized", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInitialized()", "full_signature": "public boolean isInitialized()", "class_method_signature": "EncryptorService.isInitialized()", "testcase": false, "constructor": false}, {"identifier": "reconfigure", "parameters": "(String newMasterPassword)", "modifiers": "public", "return": "void", "signature": "void reconfigure(String newMasterPassword)", "full_signature": "public void reconfigure(String newMasterPassword)", "class_method_signature": "EncryptorService.reconfigure(String newMasterPassword)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(String masterPassword)", "modifiers": "public", "return": "void", "signature": "void configure(String masterPassword)", "full_signature": "public void configure(String masterPassword)", "class_method_signature": "EncryptorService.configure(String masterPassword)", "testcase": false, "constructor": false}, {"identifier": "checkMasterPassword", "parameters": "(String masterPassword)", "modifiers": "private", "return": "void", "signature": "void checkMasterPassword(String masterPassword)", "full_signature": "private void checkMasterPassword(String masterPassword)", "class_method_signature": "EncryptorService.checkMasterPassword(String masterPassword)", "testcase": false, "constructor": false}, {"identifier": "setMasterPassword", "parameters": "(String masterPassword)", "modifiers": "private", "return": "void", "signature": "void setMasterPassword(String masterPassword)", "full_signature": "private void setMasterPassword(String masterPassword)", "class_method_signature": "EncryptorService.setMasterPassword(String masterPassword)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(String masterPassword)", "modifiers": "public", "return": "void", "signature": "void initialize(String masterPassword)", "full_signature": "public void initialize(String masterPassword)", "class_method_signature": "EncryptorService.initialize(String masterPassword)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/encryption/EncryptorService.java"}, "focal_method": {"identifier": "reconfigure", "parameters": "(String newMasterPassword)", "modifiers": "public", "return": "void", "body": "public void reconfigure(String newMasterPassword) {\n\t\tcheckMasterPassword(newMasterPassword);\n\t\tsynchronized (configurationLock) {\n\t\t\tcheckState(isConfigured(), \"Encryption must be configured to reset the master password\");\n\t\t\tcheckState(isInitialized(), \"Encryption must be initialized to reset the master password\");\n\n\t\t\tencryptorListener.aboutToChangeEncryptor();\n\t\t\tsetMasterPassword(newMasterPassword);\n\t\t\tencryptorListener.encryptorChanged();\n\t\t}\n\t}", "signature": "void reconfigure(String newMasterPassword)", "full_signature": "public void reconfigure(String newMasterPassword)", "class_method_signature": "EncryptorService.reconfigure(String newMasterPassword)", "testcase": false, "constructor": false, "invocations": ["checkMasterPassword", "checkState", "isConfigured", "checkState", "isInitialized", "aboutToChangeEncryptor", "setMasterPassword", "encryptorChanged"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}