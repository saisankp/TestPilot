{"test_class": {"identifier": "Space3DUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/hwyl/sexytopo/control/util/Space3DUtilsTest.java"}, "test_case": {"identifier": "testTransform3N3E3S3W", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTransform3N3E3S3W() {\n        Leg n3 = new Leg(3, 0, 0);\n        Coord3D result = Space3DUtils.toCartesian(Coord3D.ORIGIN, n3);\n        Leg e3 = new Leg(3, 90, 0);\n        result = Space3DUtils.toCartesian(result, e3);\n        Leg s3 = new Leg(3, 180, 0);\n        result = Space3DUtils.toCartesian(result, s3);\n        Leg w3 = new Leg(3, 270, 0);\n        result = Space3DUtils.toCartesian(result, w3);\n        assertEquals(Coord3D.ORIGIN, result);\n    }", "signature": "void testTransform3N3E3S3W()", "full_signature": "@Test public void testTransform3N3E3S3W()", "class_method_signature": "Space3DUtilsTest.testTransform3N3E3S3W()", "testcase": true, "constructor": false, "invocations": ["toCartesian", "toCartesian", "toCartesian", "toCartesian", "assertEquals"]}, "focal_class": {"identifier": "Space3DUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toCartesian", "parameters": "(Coord3D start, Leg leg)", "modifiers": "public static", "return": "Coord3D", "signature": "Coord3D toCartesian(Coord3D start, Leg leg)", "full_signature": "public static Coord3D toCartesian(Coord3D start, Leg leg)", "class_method_signature": "Space3DUtils.toCartesian(Coord3D start, Leg leg)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/hwyl/sexytopo/control/util/Space3DUtils.java"}, "focal_method": {"identifier": "toCartesian", "parameters": "(Coord3D start, Leg leg)", "modifiers": "public static", "return": "Coord3D", "body": "public static Coord3D toCartesian(Coord3D start, Leg leg) {\n        double r = leg.getDistance();\n        double phi = Math.toRadians(leg.getAzimuth());\n        double theta = Math.toRadians(leg.getInclination());\n\n        double y = r * Math.cos(theta) * Math.cos(phi);\n        double x = r * Math.cos(theta) * Math.sin(phi);\n        double z = r * Math.sin(theta);\n\n        x += start.x;\n        y += start.y;\n        z += start.z;\n\n        return new Coord3D(x, y, z);\n    }", "signature": "Coord3D toCartesian(Coord3D start, Leg leg)", "full_signature": "public static Coord3D toCartesian(Coord3D start, Leg leg)", "class_method_signature": "Space3DUtils.toCartesian(Coord3D start, Leg leg)", "testcase": false, "constructor": false, "invocations": ["getDistance", "toRadians", "getAzimuth", "toRadians", "getInclination", "cos", "cos", "cos", "sin", "sin"]}, "repository": {"repo_id": 27244573, "url": "https://github.com/richsmith/sexytopo", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 83635, "license": "licensed"}}