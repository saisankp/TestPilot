{"test_class": {"identifier": "TimeSeriesUtilitiesTest", "superclass": "", "interfaces": "", "fields": [], "file": "stl-decomp-4j/src/test/java/com/github/servicenow/ds/stats/TimeSeriesUtilitiesTest.java"}, "test_case": {"identifier": "smaWithWindowEqualLengthIsJustAverage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void smaWithWindowEqualLengthIsJustAverage() {\n        int length = (int) (Math.random() * 1000 + 1); // uniform random in [1..1000]\n\n        double[] data = createRandomArray(length);\n\n        double sum = 0.0;\n        for (int i = 0; i < data.length; ++i) {\n            sum += data[i];\n        }\n\n        double mean = sum / data.length;\n\n        double[] average = TimeSeriesUtilities.simpleMovingAverage(data, data.length);\n\n        assertEquals(\"average has length of 1\", 1, average.length);\n        assertEquals(\"average[0] value is just the average\", mean, average[0], 1.0e-10);\n    }", "signature": "void smaWithWindowEqualLengthIsJustAverage()", "full_signature": "@Test public void smaWithWindowEqualLengthIsJustAverage()", "class_method_signature": "TimeSeriesUtilitiesTest.smaWithWindowEqualLengthIsJustAverage()", "testcase": true, "constructor": false, "invocations": ["random", "createRandomArray", "simpleMovingAverage", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "TimeSeriesUtilities", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "simpleMovingAverage", "parameters": "(final double[] data, final int window)", "modifiers": "public static", "return": "double[]", "signature": "double[] simpleMovingAverage(final double[] data, final int window)", "full_signature": "public static double[] simpleMovingAverage(final double[] data, final int window)", "class_method_signature": "TimeSeriesUtilities.simpleMovingAverage(final double[] data, final int window)", "testcase": false, "constructor": false}, {"identifier": "simpleMovingAverage", "parameters": "(final double[] data, final int window, final double[] average)", "modifiers": "public static", "return": "void", "signature": "void simpleMovingAverage(final double[] data, final int window, final double[] average)", "full_signature": "public static void simpleMovingAverage(final double[] data, final int window, final double[] average)", "class_method_signature": "TimeSeriesUtilities.simpleMovingAverage(final double[] data, final int window, final double[] average)", "testcase": false, "constructor": false}], "file": "stl-decomp-4j/src/main/java/com/github/servicenow/ds/stats/TimeSeriesUtilities.java"}, "focal_method": {"identifier": "simpleMovingAverage", "parameters": "(final double[] data, final int window)", "modifiers": "public static", "return": "double[]", "body": "public static double[] simpleMovingAverage(final double[] data, final int window) {\n        double[] average = new double[data.length - window + 1];\n        simpleMovingAverage(data, window, average);\n        return average;\n    }", "signature": "double[] simpleMovingAverage(final double[] data, final int window)", "full_signature": "public static double[] simpleMovingAverage(final double[] data, final int window)", "class_method_signature": "TimeSeriesUtilities.simpleMovingAverage(final double[] data, final int window)", "testcase": false, "constructor": false, "invocations": ["simpleMovingAverage"]}, "repository": {"repo_id": 80868140, "url": "https://github.com/ServiceNow/stl-decomp-4j", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 79, "size": 3949, "license": "licensed"}}