{"test_class": {"identifier": "HelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Helper mHelper;", "modifier": "private", "type": "Helper", "declarator": "mHelper", "var_name": "mHelper"}], "file": "fit/src/test/java/jp/yokomark/fit/HelperTest.java"}, "test_case": {"identifier": "validation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validation() throws Exception {\n        List<VersionModule> modules = new ArrayList<VersionModule>();\n        modules.add(new MockModule());\n        mHelper.validate(modules);\n    }", "signature": "void validation()", "full_signature": "@Test public void validation()", "class_method_signature": "HelperTest.validation()", "testcase": true, "constructor": false, "invocations": ["add", "validate"]}, "focal_class": {"identifier": "Helper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String TAG = Helper.class.getSimpleName();", "modifier": "public static final", "type": "String", "declarator": "TAG = Helper.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private final Application mApplication;", "modifier": "private final", "type": "Application", "declarator": "mApplication", "var_name": "mApplication"}], "methods": [{"identifier": "Helper", "parameters": "(Application application)", "modifiers": "", "return": "", "signature": " Helper(Application application)", "full_signature": "  Helper(Application application)", "class_method_signature": "Helper.Helper(Application application)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(List<VersionModule> modules)", "modifiers": "public", "return": "void", "signature": "void validate(List<VersionModule> modules)", "full_signature": "public void validate(List<VersionModule> modules)", "class_method_signature": "Helper.validate(List<VersionModule> modules)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(int baseVersion, List<VersionModule> modules)", "modifiers": "public", "return": "void", "signature": "void execute(int baseVersion, List<VersionModule> modules)", "full_signature": "public void execute(int baseVersion, List<VersionModule> modules)", "class_method_signature": "Helper.execute(int baseVersion, List<VersionModule> modules)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(int baseVersion, VersionModule module, List<Method> methods)", "modifiers": "", "return": "void", "signature": "void execute(int baseVersion, VersionModule module, List<Method> methods)", "full_signature": " void execute(int baseVersion, VersionModule module, List<Method> methods)", "class_method_signature": "Helper.execute(int baseVersion, VersionModule module, List<Method> methods)", "testcase": false, "constructor": false}], "file": "fit/src/main/java/jp/yokomark/fit/Helper.java"}, "focal_method": {"identifier": "validate", "parameters": "(List<VersionModule> modules)", "modifiers": "public", "return": "void", "body": "public void validate(List<VersionModule> modules) {\n        if (modules == null || modules.isEmpty()) {\n            throw new IllegalArgumentException(\"No modules found.\");\n        }\n        for (VersionModule module : modules) {\n            if (!Utils.hasAnnotatedMethods(module.getClass(), VersionCode.class)) {\n                throw new IllegalArgumentException(\"No annotated method found.\");\n            }\n        }\n    }", "signature": "void validate(List<VersionModule> modules)", "full_signature": "public void validate(List<VersionModule> modules)", "class_method_signature": "Helper.validate(List<VersionModule> modules)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "hasAnnotatedMethods", "getClass"]}, "repository": {"repo_id": 21187043, "url": "https://github.com/KeithYokoma/Fit", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 57, "size": 140, "license": "licensed"}}