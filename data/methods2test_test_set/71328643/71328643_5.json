{"test_class": {"identifier": "JsonFilterServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    JsonFilterService jsonFilterService;", "modifier": "@Autowired", "type": "JsonFilterService", "declarator": "jsonFilterService", "var_name": "jsonFilterService"}, {"original_string": "@Mock\n    ResultSetMetaData resultSetMetaData;", "modifier": "@Mock", "type": "ResultSetMetaData", "declarator": "resultSetMetaData", "var_name": "resultSetMetaData"}], "file": "abixen-platform-business-intelligence-service/src/test/java/com/abixen/platform/service/businessintelligence/multivisualisation/application/service/JsonFilterServiceTest.java"}, "test_case": {"identifier": "convertJsonToSqlTest", "parameters": "()", "modifiers": "@Ignore @Test public", "return": "void", "body": "@Ignore\n    @Test\n    public void convertJsonToSqlTest() throws SQLException {\n        String jsonCriteria = \"{\\n\" +\n                \"  \\\"group\\\": {\\n\" +\n                \"    \\\"operator\\\": \\\"AND\\\",\\n\" +\n                \"    \\\"rules\\\": [\\n\" +\n                \"      {\\n\" +\n                \"        \\\"condition\\\": \\\"=\\\",\\n\" +\n                \"        \\\"field\\\": \\\"REVENUE_GROSS\\\",\\n\" +\n                \"        \\\"data\\\": \\\"23\\\",\\n\" +\n                \"        \\\"$$hashKey\\\": \\\"object:434\\\"\\n\" +\n                \"      },\\n\" +\n                \"      {\\n\" +\n                \"        \\\"condition\\\": \\\"=\\\",\\n\" +\n                \"        \\\"field\\\": \\\"ID\\\",\\n\" +\n                \"        \\\"data\\\": \\\"4\\\",\\n\" +\n                \"        \\\"$$hashKey\\\": \\\"object:454\\\"\\n\" +\n                \"      },\\n\" +\n                \"      {\\n\" +\n                \"        \\\"group\\\": {\\n\" +\n                \"          \\\"operator\\\": \\\"AND\\\",\\n\" +\n                \"          \\\"rules\\\": [\\n\" +\n                \"            {\\n\" +\n                \"              \\\"condition\\\": \\\"=\\\",\\n\" +\n                \"              \\\"field\\\": \\\"REVENUE_NET\\\",\\n\" +\n                \"              \\\"data\\\": \\\"22\\\",\\n\" +\n                \"              \\\"$$hashKey\\\": \\\"object:476\\\"\\n\" +\n                \"            },\\n\" +\n                \"            {\\n\" +\n                \"              \\\"condition\\\": \\\"=\\\",\\n\" +\n                \"              \\\"field\\\": \\\"SALES_DAY\\\",\\n\" +\n                \"              \\\"data\\\": \\\"2016-10-02T232\\\",\\n\" +\n                \"              \\\"$$hashKey\\\": \\\"object:476\\\"\\n\" +\n                \"            }\\n\" +\n                \"          ]\\n\" +\n                \"        },\\n\" +\n                \"        \\\"$$hashKey\\\": \\\"object:463\\\"\\n\" +\n                \"      }\\n\" +\n                \"    ]\\n\" +\n                \"  }\\n\" +\n                \"}\";\n        when(resultSetMetaData.getColumnCount()).thenReturn(new Integer(3));\n        when(resultSetMetaData.getColumnName(0)).thenReturn(\"REVENUE_GROSS\");\n        when(resultSetMetaData.getColumnName(1)).thenReturn(\"ID\");\n        when(resultSetMetaData.getColumnName(2)).thenReturn(\"REVENUE_NET\");\n        when(resultSetMetaData.getColumnName(3)).thenReturn(\"SALES_DAY\");\n        when(resultSetMetaData.getColumnTypeName(0)).thenReturn(\"DOUBLE\");\n        when(resultSetMetaData.getColumnTypeName(1)).thenReturn(\"BIGINT\");\n        when(resultSetMetaData.getColumnTypeName(2)).thenReturn(\"DOUBLE\");\n        when(resultSetMetaData.getColumnTypeName(3)).thenReturn(\"DATE\");\n        String manualyConvertedCriteria = \"(REVENUE_GROSS = 23 AND ID = 4 AND (REVENUE_NET = 22 AND SALES_DAY = '2016-10-02'))\";\n        String convertedCriteria = jsonFilterService.convertJsonToJpql(jsonCriteria, resultSetMetaData);\n        assertEquals(manualyConvertedCriteria, convertedCriteria);\n    }", "signature": "void convertJsonToSqlTest()", "full_signature": "@Ignore @Test public void convertJsonToSqlTest()", "class_method_signature": "JsonFilterServiceTest.convertJsonToSqlTest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getColumnCount", "thenReturn", "when", "getColumnName", "thenReturn", "when", "getColumnName", "thenReturn", "when", "getColumnName", "thenReturn", "when", "getColumnName", "thenReturn", "when", "getColumnTypeName", "thenReturn", "when", "getColumnTypeName", "thenReturn", "when", "getColumnTypeName", "thenReturn", "when", "getColumnTypeName", "convertJsonToJpql", "assertEquals"]}, "focal_class": {"identifier": "JsonFilterService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int DATA_END_INDEX = 10;", "modifier": "private static final", "type": "int", "declarator": "DATA_END_INDEX = 10", "var_name": "DATA_END_INDEX"}, {"original_string": "private static final int DATA_BEGIN_INDEX = 0;", "modifier": "private static final", "type": "int", "declarator": "DATA_BEGIN_INDEX = 0", "var_name": "DATA_BEGIN_INDEX"}], "methods": [{"identifier": "convertJsonToJpql", "parameters": "(String jsonCriteria, ResultSetMetaData resultSetMetaData)", "modifiers": "public", "return": "String", "signature": "String convertJsonToJpql(String jsonCriteria, ResultSetMetaData resultSetMetaData)", "full_signature": "public String convertJsonToJpql(String jsonCriteria, ResultSetMetaData resultSetMetaData)", "class_method_signature": "JsonFilterService.convertJsonToJpql(String jsonCriteria, ResultSetMetaData resultSetMetaData)", "testcase": false, "constructor": false}, {"identifier": "convertJsonToJpqlRecursive", "parameters": "(Map<String, Object> jsonCriteriaMap, List<Object> parameters, Map<String, String> typeMapping)", "modifiers": "protected", "return": "String", "signature": "String convertJsonToJpqlRecursive(Map<String, Object> jsonCriteriaMap, List<Object> parameters, Map<String, String> typeMapping)", "full_signature": "protected String convertJsonToJpqlRecursive(Map<String, Object> jsonCriteriaMap, List<Object> parameters, Map<String, String> typeMapping)", "class_method_signature": "JsonFilterService.convertJsonToJpqlRecursive(Map<String, Object> jsonCriteriaMap, List<Object> parameters, Map<String, String> typeMapping)", "testcase": false, "constructor": false}, {"identifier": "prepareDataSection", "parameters": "(DataValueType dataValueType, String data)", "modifiers": "private", "return": "String", "signature": "String prepareDataSection(DataValueType dataValueType, String data)", "full_signature": "private String prepareDataSection(DataValueType dataValueType, String data)", "class_method_signature": "JsonFilterService.prepareDataSection(DataValueType dataValueType, String data)", "testcase": false, "constructor": false}, {"identifier": "getColumnTypeMapping", "parameters": "(ResultSetMetaData rsmd)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getColumnTypeMapping(ResultSetMetaData rsmd)", "full_signature": "private Map<String, String> getColumnTypeMapping(ResultSetMetaData rsmd)", "class_method_signature": "JsonFilterService.getColumnTypeMapping(ResultSetMetaData rsmd)", "testcase": false, "constructor": false}], "file": "abixen-platform-business-intelligence-service/src/main/java/com/abixen/platform/service/businessintelligence/multivisualisation/application/service/JsonFilterService.java"}, "focal_method": {"identifier": "convertJsonToJpql", "parameters": "(String jsonCriteria, ResultSetMetaData resultSetMetaData)", "modifiers": "public", "return": "String", "body": "public String convertJsonToJpql(String jsonCriteria, ResultSetMetaData resultSetMetaData) throws SQLException {\n        Map<String, Object> jsonCriteriaMap = new Gson().fromJson(jsonCriteria, new TypeToken<HashMap<String, Object>>() {\n        }.getType());\n        String conditionString = \"()\";\n        if (jsonCriteriaMap != null && jsonCriteriaMap.size() > 0) {\n            List<Object> queryParameters = new ArrayList<>();\n            conditionString = convertJsonToJpqlRecursive(jsonCriteriaMap, queryParameters, getColumnTypeMapping(resultSetMetaData));\n        }\n        return !\"()\".equals(conditionString) ? conditionString : \"1=1\";\n    }", "signature": "String convertJsonToJpql(String jsonCriteria, ResultSetMetaData resultSetMetaData)", "full_signature": "public String convertJsonToJpql(String jsonCriteria, ResultSetMetaData resultSetMetaData)", "class_method_signature": "JsonFilterService.convertJsonToJpql(String jsonCriteria, ResultSetMetaData resultSetMetaData)", "testcase": false, "constructor": false, "invocations": ["fromJson", "getType", "size", "convertJsonToJpqlRecursive", "getColumnTypeMapping", "equals"]}, "repository": {"repo_id": 71328643, "url": "https://github.com/abixen/abixen-platform", "language": "Java", "is_fork": false, "fork_count": 186, "stargazer_count": 527, "size": 82130, "license": "licensed"}}