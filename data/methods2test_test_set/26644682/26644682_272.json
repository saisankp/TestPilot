{"test_class": {"identifier": "ReleasableInputStreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AtomicBoolean wasCalled = new AtomicBoolean();", "modifier": "private final", "type": "AtomicBoolean", "declarator": "wasCalled = new AtomicBoolean()", "var_name": "wasCalled"}, {"original_string": "private ReleasableInputStream releasableInputStream;", "modifier": "private", "type": "ReleasableInputStream", "declarator": "releasableInputStream", "var_name": "releasableInputStream"}, {"original_string": "private ReleasableInputStream failedReleasableInputStream;", "modifier": "private", "type": "ReleasableInputStream", "declarator": "failedReleasableInputStream", "var_name": "failedReleasableInputStream"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/io/ReleasableInputStreamTest.java"}, "test_case": {"identifier": "markSupported", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void markSupported() throws Exception {\n        // When\n        releasableInputStream.markSupported();\n\n        // Then\n        assertFalse(wasCalled.get());\n    }", "signature": "void markSupported()", "full_signature": "@Test public void markSupported()", "class_method_signature": "ReleasableInputStreamTest.markSupported()", "testcase": true, "constructor": false, "invocations": ["markSupported", "assertFalse", "get"]}, "focal_class": {"identifier": "ReleasableInputStream", "superclass": "extends InputStream", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ReleasableInputStream.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ReleasableInputStream.class)", "var_name": "LOG"}, {"original_string": "private final InputStream delegate;", "modifier": "private final", "type": "InputStream", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final Runnable onClose;", "modifier": "private final", "type": "Runnable", "declarator": "onClose", "var_name": "onClose"}, {"original_string": "private boolean isClosed;", "modifier": "private", "type": "boolean", "declarator": "isClosed", "var_name": "isClosed"}], "methods": [{"identifier": "ReleasableInputStream", "parameters": "(InputStream delegate, Runnable onClose)", "modifiers": "public", "return": "", "signature": " ReleasableInputStream(InputStream delegate, Runnable onClose)", "full_signature": "public  ReleasableInputStream(InputStream delegate, Runnable onClose)", "class_method_signature": "ReleasableInputStream.ReleasableInputStream(InputStream delegate, Runnable onClose)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "ReleasableInputStream.read()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte[] bytes)", "modifiers": "@Override public", "return": "int", "signature": "int read(byte[] bytes)", "full_signature": "@Override public int read(byte[] bytes)", "class_method_signature": "ReleasableInputStream.read(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte[] bytes, int i, int i1)", "modifiers": "@Override public", "return": "int", "signature": "int read(byte[] bytes, int i, int i1)", "full_signature": "@Override public int read(byte[] bytes, int i, int i1)", "class_method_signature": "ReleasableInputStream.read(byte[] bytes, int i, int i1)", "testcase": false, "constructor": false}, {"identifier": "skip", "parameters": "(long l)", "modifiers": "@Override public", "return": "long", "signature": "long skip(long l)", "full_signature": "@Override public long skip(long l)", "class_method_signature": "ReleasableInputStream.skip(long l)", "testcase": false, "constructor": false}, {"identifier": "available", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int available()", "full_signature": "@Override public int available()", "class_method_signature": "ReleasableInputStream.available()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ReleasableInputStream.close()", "testcase": false, "constructor": false}, {"identifier": "safeClose", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void safeClose()", "full_signature": "private synchronized void safeClose()", "class_method_signature": "ReleasableInputStream.safeClose()", "testcase": false, "constructor": false}, {"identifier": "mark", "parameters": "(int i)", "modifiers": "@Override public", "return": "void", "signature": "void mark(int i)", "full_signature": "@Override public void mark(int i)", "class_method_signature": "ReleasableInputStream.mark(int i)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "ReleasableInputStream.reset()", "testcase": false, "constructor": false}, {"identifier": "markSupported", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean markSupported()", "full_signature": "@Override public boolean markSupported()", "class_method_signature": "ReleasableInputStream.markSupported()", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/io/ReleasableInputStream.java"}, "focal_method": {"identifier": "markSupported", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean markSupported() {\n        return delegate.markSupported();\n    }", "signature": "boolean markSupported()", "full_signature": "@Override public boolean markSupported()", "class_method_signature": "ReleasableInputStream.markSupported()", "testcase": false, "constructor": false, "invocations": ["markSupported"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}