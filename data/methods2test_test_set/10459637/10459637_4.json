{"test_class": {"identifier": "HexStringTest", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "network-level/fl-ho-nl/src/test/java/org/openflow/util/HexStringTest.java"}, "test_case": {"identifier": "testFromHexStringError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFromHexStringError() {\n        String invalidStr = \"00:00:00:00:00:00:ffff\";\n        try {\n            HexString.fromHexString(invalidStr);\n            fail(\"HexString.fromHexString() should have thrown a NumberFormatException\");\n        }\n        catch (NumberFormatException expected) {\n            // do nothing\n        }\n    }", "signature": "void testFromHexStringError()", "full_signature": "@Test public void testFromHexStringError()", "class_method_signature": "HexStringTest.testFromHexStringError()", "testcase": true, "constructor": false, "invocations": ["fromHexString", "fail"]}, "focal_class": {"identifier": "HexString", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toHexString", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String toHexString(byte[] bytes)", "full_signature": "public static String toHexString(byte[] bytes)", "class_method_signature": "HexString.toHexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(long val, int padTo)", "modifiers": "public static", "return": "String", "signature": "String toHexString(long val, int padTo)", "full_signature": "public static String toHexString(long val, int padTo)", "class_method_signature": "HexString.toHexString(long val, int padTo)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(long val)", "modifiers": "public static", "return": "String", "signature": "String toHexString(long val)", "full_signature": "public static String toHexString(long val)", "class_method_signature": "HexString.toHexString(long val)", "testcase": false, "constructor": false}, {"identifier": "fromHexString", "parameters": "(String values)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] fromHexString(String values)", "full_signature": "public static byte[] fromHexString(String values)", "class_method_signature": "HexString.fromHexString(String values)", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "(String values)", "modifiers": "public static", "return": "long", "signature": "long toLong(String values)", "full_signature": "public static long toLong(String values)", "class_method_signature": "HexString.toLong(String values)", "testcase": false, "constructor": false}], "file": "network-level/fl-ho-nl/src/main/java/org/openflow/util/HexString.java"}, "focal_method": {"identifier": "fromHexString", "parameters": "(String values)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] fromHexString(String values) throws NumberFormatException {\n        String[] octets = values.split(\":\");\n        byte[] ret = new byte[octets.length];\n        \n        for(int i = 0; i < octets.length; i++) {\n            if (octets[i].length() > 2)\n                throw new NumberFormatException(\"Invalid octet length\");\n            ret[i] = Integer.valueOf(octets[i], 16).byteValue();\n        }\n        return ret;\n    }", "signature": "byte[] fromHexString(String values)", "full_signature": "public static byte[] fromHexString(String values)", "class_method_signature": "HexString.fromHexString(String values)", "testcase": false, "constructor": false, "invocations": ["split", "length", "byteValue", "valueOf"]}, "repository": {"repo_id": 10459637, "url": "https://github.com/rizard/geni-openflow-vertical-handover", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 33971, "license": "licensed"}}