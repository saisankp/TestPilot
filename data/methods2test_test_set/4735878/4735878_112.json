{"test_class": {"identifier": "LocalizedTextTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/core-map/src/test/java/org/orbisgis/coremap/renderer/se/common/LocalizedTextTest.java"}, "test_case": {"identifier": "testLocaleSeparation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n        public void testLocaleSeparation() {\n                String[] parts = LocalizedText.separateLocale(\"en-\");\n                assertTrue(\"Invalid Locale parts size:\"+parts.length,\n                        parts.length==1);                \n                parts = LocalizedText.separateLocale(\"en\");\n                assertTrue(\"Invalid Locale parts size:\"+parts.length,\n                        parts.length==1);\n                parts = LocalizedText.separateLocale(\"en-US\");\n                assertTrue(\"Invalid Locale parts size:\"+parts.length,\n                        parts.length==2);\n                parts = LocalizedText.separateLocale(\"en-US-x-twain\");\n                assertTrue(\"Invalid Locale parts size:\"+parts.length,\n                        parts.length==3);\n        }", "signature": "void testLocaleSeparation()", "full_signature": "@Test public void testLocaleSeparation()", "class_method_signature": "LocalizedTextTest.testLocaleSeparation()", "testcase": true, "constructor": false, "invocations": ["separateLocale", "assertTrue", "separateLocale", "assertTrue", "separateLocale", "assertTrue", "separateLocale", "assertTrue"]}, "focal_class": {"identifier": "LocalizedText", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String lang_sep = \"-\";", "modifier": "private static final", "type": "String", "declarator": "lang_sep = \"-\"", "var_name": "lang_sep"}, {"original_string": "private String content;", "modifier": "private", "type": "String", "declarator": "content", "var_name": "content"}, {"original_string": "private Locale locale;", "modifier": "private", "type": "Locale", "declarator": "locale", "var_name": "locale"}, {"original_string": "private static final I18n I18N = I18nFactory.getI18n(LocalizedText.class);", "modifier": "private static final", "type": "I18n", "declarator": "I18N = I18nFactory.getI18n(LocalizedText.class)", "var_name": "I18N"}], "methods": [{"identifier": "LocalizedText", "parameters": "(String string, Locale l)", "modifiers": "", "return": "", "signature": " LocalizedText(String string, Locale l)", "full_signature": "  LocalizedText(String string, Locale l)", "class_method_signature": "LocalizedText.LocalizedText(String string, Locale l)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "LocalizedText.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String content)", "modifiers": "public", "return": "void", "signature": "void setValue(String content)", "full_signature": "public void setValue(String content)", "class_method_signature": "LocalizedText.setValue(String content)", "testcase": false, "constructor": false}, {"identifier": "getLocale", "parameters": "()", "modifiers": "public", "return": "Locale", "signature": "Locale getLocale()", "full_signature": "public Locale getLocale()", "class_method_signature": "LocalizedText.getLocale()", "testcase": false, "constructor": false}, {"identifier": "setLocale", "parameters": "(Locale locale)", "modifiers": "public", "return": "void", "signature": "void setLocale(Locale locale)", "full_signature": "public void setLocale(Locale locale)", "class_method_signature": "LocalizedText.setLocale(Locale locale)", "testcase": false, "constructor": false}, {"identifier": "separateLocale", "parameters": "(String localeRepresentation)", "modifiers": "public static", "return": "String[]", "signature": "String[] separateLocale(String localeRepresentation)", "full_signature": "public static String[] separateLocale(String localeRepresentation)", "class_method_signature": "LocalizedText.separateLocale(String localeRepresentation)", "testcase": false, "constructor": false}, {"identifier": "forLanguageTag", "parameters": "(String localeRepresentation)", "modifiers": "public static", "return": "Locale", "signature": "Locale forLanguageTag(String localeRepresentation)", "full_signature": "public static Locale forLanguageTag(String localeRepresentation)", "class_method_signature": "LocalizedText.forLanguageTag(String localeRepresentation)", "testcase": false, "constructor": false}, {"identifier": "validateLanguage", "parameters": "(String language)", "modifiers": "public static", "return": "boolean", "signature": "boolean validateLanguage(String language)", "full_signature": "public static boolean validateLanguage(String language)", "class_method_signature": "LocalizedText.validateLanguage(String language)", "testcase": false, "constructor": false}, {"identifier": "validateCountry", "parameters": "(String country)", "modifiers": "public static", "return": "boolean", "signature": "boolean validateCountry(String country)", "full_signature": "public static boolean validateCountry(String country)", "class_method_signature": "LocalizedText.validateCountry(String country)", "testcase": false, "constructor": false}, {"identifier": "validateVariant", "parameters": "(String variant)", "modifiers": "public static", "return": "boolean", "signature": "boolean validateVariant(String variant)", "full_signature": "public static boolean validateVariant(String variant)", "class_method_signature": "LocalizedText.validateVariant(String variant)", "testcase": false, "constructor": false}, {"identifier": "toLanguageTag", "parameters": "(Locale locale)", "modifiers": "public static", "return": "String", "signature": "String toLanguageTag(Locale locale)", "full_signature": "public static String toLanguageTag(Locale locale)", "class_method_signature": "LocalizedText.toLanguageTag(Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getJAXBType", "parameters": "()", "modifiers": "public", "return": "LanguageStringType", "signature": "LanguageStringType getJAXBType()", "full_signature": "public LanguageStringType getJAXBType()", "class_method_signature": "LocalizedText.getJAXBType()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "LocalizedText.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "LocalizedText.hashCode()", "testcase": false, "constructor": false}], "file": "bundles/core-map/src/main/java/org/orbisgis/coremap/renderer/se/common/LocalizedText.java"}, "focal_method": {"identifier": "separateLocale", "parameters": "(String localeRepresentation)", "modifiers": "public static", "return": "String[]", "body": "public static String[] separateLocale(String localeRepresentation) {\n            List<String> ret = new ArrayList<String>(3);\n            int start = 0;\n            do {\n                    int end = localeRepresentation.indexOf(lang_sep, start);\n                    if(ret.size()==2 || end==-1) {\n                            if(start<localeRepresentation.length()) {\n                                ret.add(localeRepresentation.substring(start));\n                            }\n                            break;\n                    } else {\n                            ret.add(localeRepresentation.substring(start,end));\n                    }\n                    start = end + 1;\n            } while(start!=0);\n            return ret.toArray(new String[ret.size()]);\n    }", "signature": "String[] separateLocale(String localeRepresentation)", "full_signature": "public static String[] separateLocale(String localeRepresentation)", "class_method_signature": "LocalizedText.separateLocale(String localeRepresentation)", "testcase": false, "constructor": false, "invocations": ["indexOf", "size", "length", "add", "substring", "add", "substring", "toArray", "size"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}