{"test_class": {"identifier": "ContractApiImplTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "client/smart-contract/src/test/java/hera/contract/ContractApiImplTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToString() throws InterruptedException {\n    final ContractAddress contractAddress = new AergoKeyGenerator().create().getAddress()\n        .adapt(ContractAddress.class);\n    final TxRequester txRequester = new NonceRefreshingTxRequester(TryCountAndInterval.of(3,\n        Time.of(1000L)), new SimpleNonceProvider());\n    final ContractInvocationHandler invocationHandler = new ContractInvocationHandler(\n        contractAddress, txRequester);\n    final ContractTest contractTest = (ContractTest) Proxy\n        .newProxyInstance(getClass().getClassLoader(), new Class[]{ContractTest.class},\n            invocationHandler);\n    final ContractApi<ContractTest> contractApi = new ContractApiImpl<>(contractAddress,\n        contractTest, invocationHandler);\n    assertTrue(contractApi.toString().contains(contractAddress.toString()));\n  }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "ContractApiImplTest.testToString()", "testcase": true, "constructor": false, "invocations": ["adapt", "getAddress", "create", "of", "of", "newProxyInstance", "getClassLoader", "getClass", "assertTrue", "contains", "toString", "toString"]}, "focal_class": {"identifier": "ContractApiImpl", "superclass": "", "interfaces": "implements ContractApi<ContractT>, PreparedContractApi<ContractT>", "fields": [{"original_string": "@NonNull\n  protected final ContractAddress contractAddress;", "modifier": "@NonNull\n  protected final", "type": "ContractAddress", "declarator": "contractAddress", "var_name": "contractAddress"}, {"original_string": "@NonNull\n  protected final ContractT proxy;", "modifier": "@NonNull\n  protected final", "type": "ContractT", "declarator": "proxy", "var_name": "proxy"}, {"original_string": "@NonNull\n  protected final ContractInvocationHandler proxyInvocationHandler;", "modifier": "@NonNull\n  protected final", "type": "ContractInvocationHandler", "declarator": "proxyInvocationHandler", "var_name": "proxyInvocationHandler"}], "methods": [{"identifier": "with", "parameters": "(final AergoClient aergoClient)", "modifiers": "@Override public", "return": "PreparedContractApi<ContractT>", "signature": "PreparedContractApi<ContractT> with(final AergoClient aergoClient)", "full_signature": "@Override public PreparedContractApi<ContractT> with(final AergoClient aergoClient)", "class_method_signature": "ContractApiImpl.with(final AergoClient aergoClient)", "testcase": false, "constructor": false}, {"identifier": "execution", "parameters": "(final Signer signer)", "modifiers": "@Override public", "return": "ContractT", "signature": "ContractT execution(final Signer signer)", "full_signature": "@Override public ContractT execution(final Signer signer)", "class_method_signature": "ContractApiImpl.execution(final Signer signer)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "()", "modifiers": "@Override public", "return": "ContractT", "signature": "ContractT query()", "full_signature": "@Override public ContractT query()", "class_method_signature": "ContractApiImpl.query()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ContractApiImpl.toString()", "testcase": false, "constructor": false}], "file": "client/smart-contract/src/main/java/hera/contract/ContractApiImpl.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return String.format(\"ContractApiImpl(contractAddress=%s)\", contractAddress);\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ContractApiImpl.toString()", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}