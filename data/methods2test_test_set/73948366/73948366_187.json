{"test_class": {"identifier": "EmailNotificationServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/notification/impl/EmailNotificationServiceTest.java"}, "test_case": {"identifier": "testReadBinaryFromFileNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReadBinaryFromFileNull() {\n        EmailProvider emailProvider = mock(EmailProvider.class);\n        EmailNotificationService svc = new EmailNotificationService(emailProvider);\n        assertNull(svc.readBinaryFromFile(\"resources/non-existent\"));\n    }", "signature": "void testReadBinaryFromFileNull()", "full_signature": "@Test public void testReadBinaryFromFileNull()", "class_method_signature": "EmailNotificationServiceTest.testReadBinaryFromFileNull()", "testcase": true, "constructor": false, "invocations": ["mock", "assertNull", "readBinaryFromFile"]}, "focal_class": {"identifier": "EmailNotificationService", "superclass": "", "interfaces": "implements NotificationService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(EmailNotificationService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(EmailNotificationService.class)", "var_name": "LOGGER"}, {"original_string": "private static final int SES_RECIPIENTS_LIMIT_PER_MESSAGE = 50;", "modifier": "private static final", "type": "int", "declarator": "SES_RECIPIENTS_LIMIT_PER_MESSAGE = 50", "var_name": "SES_RECIPIENTS_LIMIT_PER_MESSAGE"}, {"original_string": "private static final String EMAIL_TEMPLATE_ATHENZ_LOGO = \"emails/athenz-logo-white.png\";", "modifier": "private static final", "type": "String", "declarator": "EMAIL_TEMPLATE_ATHENZ_LOGO = \"emails/athenz-logo-white.png\"", "var_name": "EMAIL_TEMPLATE_ATHENZ_LOGO"}, {"original_string": "private static final String PROP_NOTIFICATION_EMAIL_DOMAIN_FROM = \"athenz.notification_email_domain_from\";", "modifier": "private static final", "type": "String", "declarator": "PROP_NOTIFICATION_EMAIL_DOMAIN_FROM = \"athenz.notification_email_domain_from\"", "var_name": "PROP_NOTIFICATION_EMAIL_DOMAIN_FROM"}, {"original_string": "private static final String PROP_NOTIFICATION_EMAIL_FROM = \"athenz.notification_email_from\";", "modifier": "private static final", "type": "String", "declarator": "PROP_NOTIFICATION_EMAIL_FROM = \"athenz.notification_email_from\"", "var_name": "PROP_NOTIFICATION_EMAIL_FROM"}, {"original_string": "private static final String AT = \"@\";", "modifier": "private static final", "type": "String", "declarator": "AT = \"@\"", "var_name": "AT"}, {"original_string": "private final EmailProvider emailProvider;", "modifier": "private final", "type": "EmailProvider", "declarator": "emailProvider", "var_name": "emailProvider"}, {"original_string": "private final String emailDomainFrom;", "modifier": "private final", "type": "String", "declarator": "emailDomainFrom", "var_name": "emailDomainFrom"}, {"original_string": "private final String from;", "modifier": "private final", "type": "String", "declarator": "from", "var_name": "from"}, {"original_string": "private byte[] logoImage;", "modifier": "private", "type": "byte[]", "declarator": "logoImage", "var_name": "logoImage"}], "methods": [{"identifier": "EmailNotificationService", "parameters": "(EmailProvider emailProvider)", "modifiers": "public", "return": "", "signature": " EmailNotificationService(EmailProvider emailProvider)", "full_signature": "public  EmailNotificationService(EmailProvider emailProvider)", "class_method_signature": "EmailNotificationService.EmailNotificationService(EmailProvider emailProvider)", "testcase": false, "constructor": true}, {"identifier": "readBinaryFromFile", "parameters": "(String fileName)", "modifiers": "", "return": "byte[]", "signature": "byte[] readBinaryFromFile(String fileName)", "full_signature": " byte[] readBinaryFromFile(String fileName)", "class_method_signature": "EmailNotificationService.readBinaryFromFile(String fileName)", "testcase": false, "constructor": false}, {"identifier": "notify", "parameters": "(Notification notification)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean notify(Notification notification)", "full_signature": "@Override public boolean notify(Notification notification)", "class_method_signature": "EmailNotificationService.notify(Notification notification)", "testcase": false, "constructor": false}, {"identifier": "sendEmail", "parameters": "(Set<String> recipients, String subject, String body)", "modifiers": "", "return": "boolean", "signature": "boolean sendEmail(Set<String> recipients, String subject, String body)", "full_signature": " boolean sendEmail(Set<String> recipients, String subject, String body)", "class_method_signature": "EmailNotificationService.sendEmail(Set<String> recipients, String subject, String body)", "testcase": false, "constructor": false}, {"identifier": "getMimeMessage", "parameters": "(String subject, String body, Collection<String> recipients, String from, byte[] logoImage)", "modifiers": "private", "return": "MimeMessage", "signature": "MimeMessage getMimeMessage(String subject, String body, Collection<String> recipients, String from, byte[] logoImage)", "full_signature": "private MimeMessage getMimeMessage(String subject, String body, Collection<String> recipients, String from, byte[] logoImage)", "class_method_signature": "EmailNotificationService.getMimeMessage(String subject, String body, Collection<String> recipients, String from, byte[] logoImage)", "testcase": false, "constructor": false}, {"identifier": "sendEmailMIME", "parameters": "(String subject, String body, Collection<String> recipients)", "modifiers": "private", "return": "boolean", "signature": "boolean sendEmailMIME(String subject, String body, Collection<String> recipients)", "full_signature": "private boolean sendEmailMIME(String subject, String body, Collection<String> recipients)", "class_method_signature": "EmailNotificationService.sendEmailMIME(String subject, String body, Collection<String> recipients)", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/EmailNotificationService.java"}, "focal_method": {"identifier": "readBinaryFromFile", "parameters": "(String fileName)", "modifiers": "", "return": "byte[]", "body": "byte[] readBinaryFromFile(String fileName) {\n\n        byte[] fileByteArray = null;\n        URL resource = getClass().getClassLoader().getResource(fileName);\n        if (resource != null) {\n            try (InputStream fileStream = resource.openStream()) {\n                //convert to byte array\n                fileByteArray = IOUtils.toByteArray(fileStream);\n\n            } catch (IOException ex) {\n                LOGGER.error(\"Could not read file: {}. Error message: {}\", fileName, ex.getMessage());\n            }\n        }\n        return fileByteArray;\n    }", "signature": "byte[] readBinaryFromFile(String fileName)", "full_signature": " byte[] readBinaryFromFile(String fileName)", "class_method_signature": "EmailNotificationService.readBinaryFromFile(String fileName)", "testcase": false, "constructor": false, "invocations": ["getResource", "getClassLoader", "getClass", "openStream", "toByteArray", "error", "getMessage"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}