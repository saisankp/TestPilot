{"test_class": {"identifier": "AppGroupServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AppGroupService appGroupService;", "modifier": "@Mock\n    private", "type": "AppGroupService", "declarator": "appGroupService", "var_name": "appGroupService"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/service/AppGroupServiceTest.java"}, "test_case": {"identifier": "validatePermisionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validatePermisionTest() throws Exception {\n        LoginUser user = LoginUser.builder().id(1L).build();\n        DasGroup dasGroup = DasGroup.builder().group_name(\"name\").build();\n        Errors errors = new BeanPropertyBindingResult(dasGroup, \"dasGroup\", true, 256);\n        ValidatorChain chain = appGroupService.validatePermision(user, errors);\n        Assert.assertTrue(chain.validate().isValid());\n    }", "signature": "void validatePermisionTest()", "full_signature": "@Test public void validatePermisionTest()", "class_method_signature": "AppGroupServiceTest.validatePermisionTest()", "testcase": true, "constructor": false, "invocations": ["build", "id", "builder", "build", "group_name", "builder", "validatePermision", "assertTrue", "isValid", "validate"]}, "focal_class": {"identifier": "AppGroupService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private Message message;", "modifier": "@Autowired\n    private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "@Autowired\n    private AppGroupDao appGroupDao;", "modifier": "@Autowired\n    private", "type": "AppGroupDao", "declarator": "appGroupDao", "var_name": "appGroupDao"}, {"original_string": "@Autowired\n    private ProjectDao projectDao;", "modifier": "@Autowired\n    private", "type": "ProjectDao", "declarator": "projectDao", "var_name": "projectDao"}, {"original_string": "@Autowired\n    private PermissionService permissionService;", "modifier": "@Autowired\n    private", "type": "PermissionService", "declarator": "permissionService", "var_name": "permissionService"}, {"original_string": "@Autowired\n    private DeleteCheckDao deleteCheckDao;", "modifier": "@Autowired\n    private", "type": "DeleteCheckDao", "declarator": "deleteCheckDao", "var_name": "deleteCheckDao"}], "methods": [{"identifier": "validatePermision", "parameters": "(LoginUser user, Errors errors)", "modifiers": "public", "return": "ValidatorChain", "signature": "ValidatorChain validatePermision(LoginUser user, Errors errors)", "full_signature": "public ValidatorChain validatePermision(LoginUser user, Errors errors)", "class_method_signature": "AppGroupService.validatePermision(LoginUser user, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "findProjectGroupPageList", "parameters": "(Paging<AppGroup> paging)", "modifiers": "public", "return": "ListResult<AppGroupView>", "signature": "ListResult<AppGroupView> findProjectGroupPageList(Paging<AppGroup> paging)", "full_signature": "public ListResult<AppGroupView> findProjectGroupPageList(Paging<AppGroup> paging)", "class_method_signature": "AppGroupService.findProjectGroupPageList(Paging<AppGroup> paging)", "testcase": false, "constructor": false}, {"identifier": "insertAppGroup", "parameters": "(AppGroup appGroup)", "modifiers": "public", "return": "ServiceResult<String>", "signature": "ServiceResult<String> insertAppGroup(AppGroup appGroup)", "full_signature": "public ServiceResult<String> insertAppGroup(AppGroup appGroup)", "class_method_signature": "AppGroupService.insertAppGroup(AppGroup appGroup)", "testcase": false, "constructor": false}, {"identifier": "deleteCheck", "parameters": "(Long dbsetId)", "modifiers": "public", "return": "ServiceResult", "signature": "ServiceResult deleteCheck(Long dbsetId)", "full_signature": "public ServiceResult deleteCheck(Long dbsetId)", "class_method_signature": "AppGroupService.deleteCheck(Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "deleteAppGroup", "parameters": "(AppGroup appGroup)", "modifiers": "public", "return": "ServiceResult<String>", "signature": "ServiceResult<String> deleteAppGroup(AppGroup appGroup)", "full_signature": "public ServiceResult<String> deleteAppGroup(AppGroup appGroup)", "class_method_signature": "AppGroupService.deleteAppGroup(AppGroup appGroup)", "testcase": false, "constructor": false}, {"identifier": "updateAppGroup", "parameters": "(AppGroup appGroup)", "modifiers": "public", "return": "ServiceResult<String>", "signature": "ServiceResult<String> updateAppGroup(AppGroup appGroup)", "full_signature": "public ServiceResult<String> updateAppGroup(AppGroup appGroup)", "class_method_signature": "AppGroupService.updateAppGroup(AppGroup appGroup)", "testcase": false, "constructor": false}, {"identifier": "isNotExistByName", "parameters": "(AppGroup appGroup)", "modifiers": "public", "return": "boolean", "signature": "boolean isNotExistByName(AppGroup appGroup)", "full_signature": "public boolean isNotExistByName(AppGroup appGroup)", "class_method_signature": "AppGroupService.isNotExistByName(AppGroup appGroup)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/service/AppGroupService.java"}, "focal_method": {"identifier": "validatePermision", "parameters": "(LoginUser user, Errors errors)", "modifiers": "public", "return": "ValidatorChain", "body": "public ValidatorChain validatePermision(LoginUser user, Errors errors) {\n        return ValidatorChain.newInstance().controllerValidate(errors)\n                .addAssert(() -> permissionService.isManagerById(user.getId()), message.permisson_user_crud);\n    }", "signature": "ValidatorChain validatePermision(LoginUser user, Errors errors)", "full_signature": "public ValidatorChain validatePermision(LoginUser user, Errors errors)", "class_method_signature": "AppGroupService.validatePermision(LoginUser user, Errors errors)", "testcase": false, "constructor": false, "invocations": ["addAssert", "controllerValidate", "newInstance", "isManagerById", "getId"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}