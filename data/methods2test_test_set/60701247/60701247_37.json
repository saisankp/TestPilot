{"test_class": {"identifier": "TextAppearanceEnumSupportTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public final AndroidProjectRule myProjectRule = AndroidProjectRule.withSdk().initAndroid(true);", "modifier": "@Rule\n  public final", "type": "AndroidProjectRule", "declarator": "myProjectRule = AndroidProjectRule.withSdk().initAndroid(true)", "var_name": "myProjectRule"}, {"original_string": "@Rule\n  public final EdtRule myEdtRule = new EdtRule();", "modifier": "@Rule\n  public final", "type": "EdtRule", "declarator": "myEdtRule = new EdtRule()", "var_name": "myEdtRule"}, {"original_string": "private SyncNlModel myModel;", "modifier": "private", "type": "SyncNlModel", "declarator": "myModel", "var_name": "myModel"}, {"original_string": "private NlComponent myLayout;", "modifier": "private", "type": "NlComponent", "declarator": "myLayout", "var_name": "myLayout"}], "file": "designer/testSrc/com/android/tools/idea/uibuilder/property/editors/support/TextAppearanceEnumSupportTest.java"}, "test_case": {"identifier": "testFindPossibleValues", "parameters": "()", "modifiers": "@RunsInEdt @Test public", "return": "void", "body": "@RunsInEdt\n  @Test\n  public void testFindPossibleValues() {\n    Dependencies.INSTANCE.add(myProjectRule.fixture, APPCOMPAT_LIB_ARTIFACT_ID);\n    NlComponent textView = myLayout.getChild(0);\n    NlPropertyItem property = NlPropertyItem.create(new XmlName(ATTR_STYLE, ANDROID_URI), null, ImmutableList.of(textView), null);\n    TextAppearanceEnumSupport support = new TextAppearanceEnumSupport(property);\n    List<ValueWithDisplayString> values = support.getAllValues();\n    assertThat(values.subList(0, 7)).containsExactly(\n      new ValueWithDisplayString(\"MyOwnStyle\", \"@style/MyOwnStyle\"),\n      new ValueWithDisplayString(\"MyOwnStyle.Medium\", \"@style/MyOwnStyle.Medium\"),\n      new ValueWithDisplayString(\"TextAppearance\", \"@style/TextAppearance\"),\n      ValueWithDisplayString.SEPARATOR,\n      new ValueWithDisplayString(\"AppCompat\", \"@style/TextAppearance.AppCompat\"),\n      new ValueWithDisplayString(\"AppCompat.Body1\", \"@style/TextAppearance.AppCompat.Body1\"),\n      new ValueWithDisplayString(\"AppCompat.Body2\", \"@style/TextAppearance.AppCompat.Body2\")).inOrder();\n\n    assertThat(support.getAllValues()).containsAllOf(\n      new ValueWithDisplayString(\"TextAppearance\", \"@android:style/TextAppearance\"),\n      new ValueWithDisplayString(\"Material\", \"@android:style/TextAppearance.Material\"),\n      new ValueWithDisplayString(\"Material.Small\", \"@android:style/TextAppearance.Material.Small\"),\n      new ValueWithDisplayString(\"AppCompat\", \"@style/TextAppearance.AppCompat\"),\n      new ValueWithDisplayString(\"AppCompat.Display1\", \"@style/TextAppearance.AppCompat.Display1\"),\n      new ValueWithDisplayString(\"AppCompat.Display2\", \"@style/TextAppearance.AppCompat.Display2\"),\n      new ValueWithDisplayString(\"AppCompat.Display3\", \"@style/TextAppearance.AppCompat.Display3\"),\n      new ValueWithDisplayString(\"AppCompat.Display4\", \"@style/TextAppearance.AppCompat.Display4\"),\n      new ValueWithDisplayString(\"Widget.TextView\", \"@android:style/TextAppearance.Widget.TextView\"));\n  }", "signature": "void testFindPossibleValues()", "full_signature": "@RunsInEdt @Test public void testFindPossibleValues()", "class_method_signature": "TextAppearanceEnumSupportTest.testFindPossibleValues()", "testcase": true, "constructor": false, "invocations": ["add", "getChild", "create", "of", "getAllValues", "inOrder", "containsExactly", "assertThat", "subList", "containsAllOf", "assertThat", "getAllValues"]}, "focal_class": {"identifier": "TextAppearanceEnumSupport", "superclass": "extends StyleEnumSupport", "interfaces": "", "fields": [{"original_string": "static final String TEXT_APPEARANCE = \"TextAppearance\";", "modifier": "static final", "type": "String", "declarator": "TEXT_APPEARANCE = \"TextAppearance\"", "var_name": "TEXT_APPEARANCE"}, {"original_string": "static final Pattern TEXT_APPEARANCE_PATTERN = Pattern.compile(\"^((@(\\\\w+:)?)style/)?TextAppearance(\\\\.(.+))?$\");", "modifier": "static final", "type": "Pattern", "declarator": "TEXT_APPEARANCE_PATTERN = Pattern.compile(\"^((@(\\\\w+:)?)style/)?TextAppearance(\\\\.(.+))?$\")", "var_name": "TEXT_APPEARANCE_PATTERN"}], "methods": [{"identifier": "TextAppearanceEnumSupport", "parameters": "(@NotNull NlProperty property)", "modifiers": "public", "return": "", "signature": " TextAppearanceEnumSupport(@NotNull NlProperty property)", "full_signature": "public  TextAppearanceEnumSupport(@NotNull NlProperty property)", "class_method_signature": "TextAppearanceEnumSupport.TextAppearanceEnumSupport(@NotNull NlProperty property)", "testcase": false, "constructor": true}, {"identifier": "getAllValues", "parameters": "()", "modifiers": "@Override @NotNull public", "return": "List<ValueWithDisplayString>", "signature": "List<ValueWithDisplayString> getAllValues()", "full_signature": "@Override @NotNull public List<ValueWithDisplayString> getAllValues()", "class_method_signature": "TextAppearanceEnumSupport.getAllValues()", "testcase": false, "constructor": false}, {"identifier": "createFromResolvedValue", "parameters": "(@NotNull String resolvedValue, @Nullable String value, @Nullable String hint)", "modifiers": "@Override @NotNull protected", "return": "ValueWithDisplayString", "signature": "ValueWithDisplayString createFromResolvedValue(@NotNull String resolvedValue, @Nullable String value, @Nullable String hint)", "full_signature": "@Override @NotNull protected ValueWithDisplayString createFromResolvedValue(@NotNull String resolvedValue, @Nullable String value, @Nullable String hint)", "class_method_signature": "TextAppearanceEnumSupport.createFromResolvedValue(@NotNull String resolvedValue, @Nullable String value, @Nullable String hint)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(@NotNull ResourceNamespace namespace, @NotNull String styleName)", "modifiers": "@Nullable @Override protected", "return": "StyleResourceValue", "signature": "StyleResourceValue resolve(@NotNull ResourceNamespace namespace, @NotNull String styleName)", "full_signature": "@Nullable @Override protected StyleResourceValue resolve(@NotNull ResourceNamespace namespace, @NotNull String styleName)", "class_method_signature": "TextAppearanceEnumSupport.resolve(@NotNull ResourceNamespace namespace, @NotNull String styleName)", "testcase": false, "constructor": false}], "file": "designer/src/com/android/tools/idea/uibuilder/property/editors/support/TextAppearanceEnumSupport.java"}, "focal_method": {"identifier": "getAllValues", "parameters": "()", "modifiers": "@Override @NotNull public", "return": "List<ValueWithDisplayString>", "body": "@Override\n  @NotNull\n  public List<ValueWithDisplayString> getAllValues() {\n    StyleResourceValue style = resolve(ResourceNamespace.ANDROID, TEXT_APPEARANCE);\n    if (style == null) {\n      return Collections.emptyList();\n    }\n    return convertStylesToDisplayValues(myStyleFilter.getStylesDerivedFrom(style));\n  }", "signature": "List<ValueWithDisplayString> getAllValues()", "full_signature": "@Override @NotNull public List<ValueWithDisplayString> getAllValues()", "class_method_signature": "TextAppearanceEnumSupport.getAllValues()", "testcase": false, "constructor": false, "invocations": ["resolve", "emptyList", "convertStylesToDisplayValues", "getStylesDerivedFrom"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}