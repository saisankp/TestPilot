{"test_class": {"identifier": "JobPercentagePerIntervalRateControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Job<BatchJobExt> REFERENCE_JOB = newBatchJob(\n            10,\n            budget(percentageOfHealthyPolicy(100), ratePercentagePerInterval(600_000, 100), Collections.emptyList())\n    );", "modifier": "private static final", "type": "Job<BatchJobExt>", "declarator": "REFERENCE_JOB = newBatchJob(\n            10,\n            budget(percentageOfHealthyPolicy(100), ratePercentagePerInterval(600_000, 100), Collections.emptyList())\n    )", "var_name": "REFERENCE_JOB"}, {"original_string": "private static final Reference JOB_REFERENCE = Reference.job(REFERENCE_JOB.getId());", "modifier": "private static final", "type": "Reference", "declarator": "JOB_REFERENCE = Reference.job(REFERENCE_JOB.getId())", "var_name": "JOB_REFERENCE"}, {"original_string": "private static final Duration ONE_MINUTE = Duration.ofMinutes(1);", "modifier": "private static final", "type": "Duration", "declarator": "ONE_MINUTE = Duration.ofMinutes(1)", "var_name": "ONE_MINUTE"}, {"original_string": "private final TitusRuntime titusRuntime = TitusRuntimes.test();", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.test()", "var_name": "titusRuntime"}, {"original_string": "private final TestClock clock = (TestClock) titusRuntime.getClock();", "modifier": "private final", "type": "TestClock", "declarator": "clock = (TestClock) titusRuntime.getClock()", "var_name": "clock"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/eviction/service/quota/job/JobPercentagePerIntervalRateControllerTest.java"}, "test_case": {"identifier": "testQuota", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testQuota() {\n        JobPercentagePerIntervalRateController quotaController = newJobPercentagePerIntervalRateController(\n                exceptRate(REFERENCE_JOB, ratePercentagePerInterval(600_000, 50)),\n                SelfJobDisruptionBudgetResolver.getInstance(),\n                titusRuntime\n        );\n\n        assertThat(quotaController.getQuota(JOB_REFERENCE).getQuota()).isEqualTo(5);\n\n        // Consume everything\n        consumeAtInterval(quotaController, 5, ONE_MINUTE);\n        assertThat(quotaController.getQuota(JOB_REFERENCE).getQuota()).isEqualTo(0);\n\n        // Now shift time and consume again\n        clock.advanceTime(ONE_MINUTE.multipliedBy(5));\n        clock.advanceTime(ONE_MINUTE);\n        assertThat(quotaController.consume(\"someTaskId\").isApproved()).isTrue();\n\n        // Now move long into the future\n        clock.advanceTime(Duration.ofHours(2));\n        assertThat(quotaController.getQuota(JOB_REFERENCE).getQuota()).isEqualTo(5);\n    }", "signature": "void testQuota()", "full_signature": "@Test public void testQuota()", "class_method_signature": "JobPercentagePerIntervalRateControllerTest.testQuota()", "testcase": true, "constructor": false, "invocations": ["newJobPercentagePerIntervalRateController", "exceptRate", "ratePercentagePerInterval", "getInstance", "isEqualTo", "assertThat", "getQuota", "getQuota", "consumeAtInterval", "isEqualTo", "assertThat", "getQuota", "getQuota", "advanceTime", "multipliedBy", "advanceTime", "isTrue", "assertThat", "isApproved", "consume", "advanceTime", "ofHours", "isEqualTo", "assertThat", "getQuota", "getQuota"]}, "focal_class": {"identifier": "JobPercentagePerIntervalRateController", "superclass": "extends AbstractRatePerIntervalRateController", "interfaces": "", "fields": [{"original_string": "private final EffectiveJobDisruptionBudgetResolver budgetResolver;", "modifier": "private final", "type": "EffectiveJobDisruptionBudgetResolver", "declarator": "budgetResolver", "var_name": "budgetResolver"}], "methods": [{"identifier": "JobPercentagePerIntervalRateController", "parameters": "(Job<?> job,\n                                                     long intervalMs,\n                                                     long evictionsPerInterval,\n                                                     EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                     TitusRuntime titusRuntime)", "modifiers": "protected", "return": "", "signature": " JobPercentagePerIntervalRateController(Job<?> job,\n                                                     long intervalMs,\n                                                     long evictionsPerInterval,\n                                                     EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                     TitusRuntime titusRuntime)", "full_signature": "protected  JobPercentagePerIntervalRateController(Job<?> job,\n                                                     long intervalMs,\n                                                     long evictionsPerInterval,\n                                                     EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                     TitusRuntime titusRuntime)", "class_method_signature": "JobPercentagePerIntervalRateController.JobPercentagePerIntervalRateController(Job<?> job,\n                                                     long intervalMs,\n                                                     long evictionsPerInterval,\n                                                     EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                     TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "JobPercentagePerIntervalRateController", "parameters": "(Job<?> newJob,\n                                                   long intervalMs,\n                                                   long evictionsPerInterval,\n                                                   JobPercentagePerIntervalRateController previous)", "modifiers": "private", "return": "", "signature": " JobPercentagePerIntervalRateController(Job<?> newJob,\n                                                   long intervalMs,\n                                                   long evictionsPerInterval,\n                                                   JobPercentagePerIntervalRateController previous)", "full_signature": "private  JobPercentagePerIntervalRateController(Job<?> newJob,\n                                                   long intervalMs,\n                                                   long evictionsPerInterval,\n                                                   JobPercentagePerIntervalRateController previous)", "class_method_signature": "JobPercentagePerIntervalRateController.JobPercentagePerIntervalRateController(Job<?> newJob,\n                                                   long intervalMs,\n                                                   long evictionsPerInterval,\n                                                   JobPercentagePerIntervalRateController previous)", "testcase": false, "constructor": true}, {"identifier": "update", "parameters": "(Job<?> newJob)", "modifiers": "@Override public", "return": "JobPercentagePerIntervalRateController", "signature": "JobPercentagePerIntervalRateController update(Job<?> newJob)", "full_signature": "@Override public JobPercentagePerIntervalRateController update(Job<?> newJob)", "class_method_signature": "JobPercentagePerIntervalRateController.update(Job<?> newJob)", "testcase": false, "constructor": false}, {"identifier": "newJobPercentagePerIntervalRateController", "parameters": "(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime)", "modifiers": "public static", "return": "JobPercentagePerIntervalRateController", "signature": "JobPercentagePerIntervalRateController newJobPercentagePerIntervalRateController(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime)", "full_signature": "public static JobPercentagePerIntervalRateController newJobPercentagePerIntervalRateController(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime)", "class_method_signature": "JobPercentagePerIntervalRateController.newJobPercentagePerIntervalRateController(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime)", "testcase": false, "constructor": false}, {"identifier": "getIntervalLimitPair", "parameters": "(Job<?> job, EffectiveJobDisruptionBudgetResolver budgetResolver)", "modifiers": "private static", "return": "Pair<Long, Integer>", "signature": "Pair<Long, Integer> getIntervalLimitPair(Job<?> job, EffectiveJobDisruptionBudgetResolver budgetResolver)", "full_signature": "private static Pair<Long, Integer> getIntervalLimitPair(Job<?> job, EffectiveJobDisruptionBudgetResolver budgetResolver)", "class_method_signature": "JobPercentagePerIntervalRateController.getIntervalLimitPair(Job<?> job, EffectiveJobDisruptionBudgetResolver budgetResolver)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/eviction/service/quota/job/JobPercentagePerIntervalRateController.java"}, "focal_method": {"identifier": "newJobPercentagePerIntervalRateController", "parameters": "(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime)", "modifiers": "public static", "return": "JobPercentagePerIntervalRateController", "body": "public static JobPercentagePerIntervalRateController newJobPercentagePerIntervalRateController(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime) {\n        Pair<Long, Integer> pair = getIntervalLimitPair(job, budgetResolver);\n        return new JobPercentagePerIntervalRateController(job, pair.getLeft(), pair.getRight(), budgetResolver, titusRuntime);\n    }", "signature": "JobPercentagePerIntervalRateController newJobPercentagePerIntervalRateController(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime)", "full_signature": "public static JobPercentagePerIntervalRateController newJobPercentagePerIntervalRateController(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime)", "class_method_signature": "JobPercentagePerIntervalRateController.newJobPercentagePerIntervalRateController(Job<?> job,\n                                                                                                   EffectiveJobDisruptionBudgetResolver budgetResolver,\n                                                                                                   TitusRuntime titusRuntime)", "testcase": false, "constructor": false, "invocations": ["getIntervalLimitPair", "getLeft", "getRight"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}