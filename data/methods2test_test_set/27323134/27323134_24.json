{"test_class": {"identifier": "MasterBackendVideoDataStoreTest", "superclass": "extends ApplicationTestCase", "interfaces": "", "fields": [{"original_string": "private static final int FAKE_VIDEO_ID = 999;", "modifier": "private static final", "type": "int", "declarator": "FAKE_VIDEO_ID = 999", "var_name": "FAKE_VIDEO_ID"}, {"original_string": "private static final String FAKE_VIDEO_FILENAME= \"filename\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_VIDEO_FILENAME= \"filename\"", "var_name": "FAKE_VIDEO_FILENAME"}, {"original_string": "private MasterBackendVideoDataStore masterBackendVideoDataStore;", "modifier": "private", "type": "MasterBackendVideoDataStore", "declarator": "masterBackendVideoDataStore", "var_name": "masterBackendVideoDataStore"}, {"original_string": "@Mock\n    private VideoApi mockVideoApi;", "modifier": "@Mock\n    private", "type": "VideoApi", "declarator": "mockVideoApi", "var_name": "mockVideoApi"}], "file": "mythtv-player/src/test/java/org/mythtv/android/data/repository/datasource/MasterBackendVideoDataStoreTest.java"}, "test_case": {"identifier": "testGetVideos", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetVideos() {\n\n        List<VideoMetadataInfoEntity> fakeVideoMetadataInfoEntities = new ArrayList<>();\n        VideoMetadataInfoEntity fakeVideoMetadataInfoEntity = createVideoMetadataInfoEntity();\n        fakeVideoMetadataInfoEntities.add( fakeVideoMetadataInfoEntity );\n        Observable<List<VideoMetadataInfoEntity>> fakeObservable = Observable.just( fakeVideoMetadataInfoEntities );\n        given( mockVideoApi.getVideoList( null, null, false, -1, -1 ) ).willReturn( fakeObservable );\n\n        masterBackendVideoDataStore.getVideos(null, null, false, -1, -1);\n        verify( mockVideoApi ).getVideoList( null, null, false, -1, -1);\n\n    }", "signature": "void testGetVideos()", "full_signature": "@Test public void testGetVideos()", "class_method_signature": "MasterBackendVideoDataStoreTest.testGetVideos()", "testcase": true, "constructor": false, "invocations": ["createVideoMetadataInfoEntity", "add", "just", "willReturn", "given", "getVideoList", "getVideos", "getVideoList", "verify"]}, "focal_class": {"identifier": "MasterBackendVideoDataStore", "superclass": "", "interfaces": "implements VideoDataStore", "fields": [{"original_string": "private static final String TAG = MasterBackendVideoDataStore.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = MasterBackendVideoDataStore.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private final VideoApi api;", "modifier": "private final", "type": "VideoApi", "declarator": "api", "var_name": "api"}], "methods": [{"identifier": "MasterBackendVideoDataStore", "parameters": "( VideoApi api )", "modifiers": "public", "return": "", "signature": " MasterBackendVideoDataStore( VideoApi api )", "full_signature": "public  MasterBackendVideoDataStore( VideoApi api )", "class_method_signature": "MasterBackendVideoDataStore.MasterBackendVideoDataStore( VideoApi api )", "testcase": false, "constructor": true}, {"identifier": "getVideos", "parameters": "( String folder, String sort, boolean descending, int startIndex, int count )", "modifiers": "@Override public", "return": "Observable<List<VideoMetadataInfoEntity>>", "signature": "Observable<List<VideoMetadataInfoEntity>> getVideos( String folder, String sort, boolean descending, int startIndex, int count )", "full_signature": "@Override public Observable<List<VideoMetadataInfoEntity>> getVideos( String folder, String sort, boolean descending, int startIndex, int count )", "class_method_signature": "MasterBackendVideoDataStore.getVideos( String folder, String sort, boolean descending, int startIndex, int count )", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "( final String category )", "modifiers": "@Override public", "return": "Observable<List<VideoMetadataInfoEntity>>", "signature": "Observable<List<VideoMetadataInfoEntity>> getCategory( final String category )", "full_signature": "@Override public Observable<List<VideoMetadataInfoEntity>> getCategory( final String category )", "class_method_signature": "MasterBackendVideoDataStore.getCategory( final String category )", "testcase": false, "constructor": false}, {"identifier": "getSeriesInCategory", "parameters": "( String category, String series )", "modifiers": "@Override public", "return": "Observable<List<VideoMetadataInfoEntity>>", "signature": "Observable<List<VideoMetadataInfoEntity>> getSeriesInCategory( String category, String series )", "full_signature": "@Override public Observable<List<VideoMetadataInfoEntity>> getSeriesInCategory( String category, String series )", "class_method_signature": "MasterBackendVideoDataStore.getSeriesInCategory( String category, String series )", "testcase": false, "constructor": false}, {"identifier": "getVideoById", "parameters": "( int id )", "modifiers": "@Override public", "return": "Observable<VideoMetadataInfoEntity>", "signature": "Observable<VideoMetadataInfoEntity> getVideoById( int id )", "full_signature": "@Override public Observable<VideoMetadataInfoEntity> getVideoById( int id )", "class_method_signature": "MasterBackendVideoDataStore.getVideoById( int id )", "testcase": false, "constructor": false}, {"identifier": "getVideoByFilename", "parameters": "( String filename )", "modifiers": "@Override public", "return": "Observable<VideoMetadataInfoEntity>", "signature": "Observable<VideoMetadataInfoEntity> getVideoByFilename( String filename )", "full_signature": "@Override public Observable<VideoMetadataInfoEntity> getVideoByFilename( String filename )", "class_method_signature": "MasterBackendVideoDataStore.getVideoByFilename( String filename )", "testcase": false, "constructor": false}, {"identifier": "updateWatchedStatus", "parameters": "( final int videoId, final boolean watched )", "modifiers": "@Override public", "return": "Observable<Boolean>", "signature": "Observable<Boolean> updateWatchedStatus( final int videoId, final boolean watched )", "full_signature": "@Override public Observable<Boolean> updateWatchedStatus( final int videoId, final boolean watched )", "class_method_signature": "MasterBackendVideoDataStore.updateWatchedStatus( final int videoId, final boolean watched )", "testcase": false, "constructor": false}], "file": "mythtv-player/src/main/java/org/mythtv/android/data/repository/datasource/MasterBackendVideoDataStore.java"}, "focal_method": {"identifier": "getVideos", "parameters": "( String folder, String sort, boolean descending, int startIndex, int count )", "modifiers": "@Override public", "return": "Observable<List<VideoMetadataInfoEntity>>", "body": "@Override\n    public Observable<List<VideoMetadataInfoEntity>> getVideos( String folder, String sort, boolean descending, int startIndex, int count ) {\n        Log.d( TAG, \"getVideos : enter\" );\n\n        Log.d( TAG, \"getVideos : folder=\" + folder + \", sort=\" + sort + \", descending=\" + descending + \", startIndex=\" + startIndex + \", count=\" + count );\n\n        Observable<List<VideoMetadataInfoEntity>> videoList = this.api.getVideoList( folder, sort, descending, startIndex, count )\n                .subscribeOn( Schedulers.io() )\n                .observeOn( AndroidSchedulers.mainThread() );\n\n        Log.d( TAG, \"getVideos : exit\" );\n        return videoList;\n    }", "signature": "Observable<List<VideoMetadataInfoEntity>> getVideos( String folder, String sort, boolean descending, int startIndex, int count )", "full_signature": "@Override public Observable<List<VideoMetadataInfoEntity>> getVideos( String folder, String sort, boolean descending, int startIndex, int count )", "class_method_signature": "MasterBackendVideoDataStore.getVideos( String folder, String sort, boolean descending, int startIndex, int count )", "testcase": false, "constructor": false, "invocations": ["d", "d", "observeOn", "subscribeOn", "getVideoList", "io", "mainThread", "d"]}, "repository": {"repo_id": 27323134, "url": "https://github.com/MythTV-Clients/MythtvPlayerForAndroid", "stars": 17, "created": "11/30/2014 3:26:45 AM +00:00", "updates": "2019-12-31T22:13:00+00:00", "fork": "False", "license": "licensed"}}