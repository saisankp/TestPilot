{"test_class": {"identifier": "ElectronContainerDiffTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "misc/diff/src/test/java/org/openscience/cdk/tools/diff/ElectronContainerDiffTest.java"}, "test_case": {"identifier": "testDifference", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDifference() {\n        IElectronContainer ec1 = mock(IElectronContainer.class);\n        IElectronContainer ec2 = mock(IElectronContainer.class);\n        when(ec1.getElectronCount()).thenReturn(2);\n        when(ec2.getElectronCount()).thenReturn(3);\n\n        IDifference difference = ElectronContainerDiff.difference(ec1, ec2);\n        Assert.assertNotNull(difference);\n    }", "signature": "void testDifference()", "full_signature": "@Test public void testDifference()", "class_method_signature": "ElectronContainerDiffTest.testDifference()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getElectronCount", "thenReturn", "when", "getElectronCount", "difference", "assertNotNull"]}, "focal_class": {"identifier": "ElectronContainerDiff", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ElectronContainerDiff", "parameters": "()", "modifiers": "private", "return": "", "signature": " ElectronContainerDiff()", "full_signature": "private  ElectronContainerDiff()", "class_method_signature": "ElectronContainerDiff.ElectronContainerDiff()", "testcase": false, "constructor": true}, {"identifier": "diff", "parameters": "(IChemObject first, IChemObject second)", "modifiers": "public static", "return": "String", "signature": "String diff(IChemObject first, IChemObject second)", "full_signature": "public static String diff(IChemObject first, IChemObject second)", "class_method_signature": "ElectronContainerDiff.diff(IChemObject first, IChemObject second)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(IChemObject first, IChemObject second)", "modifiers": "public static", "return": "IDifference", "signature": "IDifference difference(IChemObject first, IChemObject second)", "full_signature": "public static IDifference difference(IChemObject first, IChemObject second)", "class_method_signature": "ElectronContainerDiff.difference(IChemObject first, IChemObject second)", "testcase": false, "constructor": false}], "file": "misc/diff/src/main/java/org/openscience/cdk/tools/diff/ElectronContainerDiff.java"}, "focal_method": {"identifier": "difference", "parameters": "(IChemObject first, IChemObject second)", "modifiers": "public static", "return": "IDifference", "body": "public static IDifference difference(IChemObject first, IChemObject second) {\n        if (!(first instanceof IElectronContainer && second instanceof IElectronContainer)) {\n            return null;\n        }\n        IElectronContainer firstEC = (IElectronContainer) first;\n        IElectronContainer secondEC = (IElectronContainer) second;\n        IDifferenceList totalDiff = new ChemObjectDifference(\"ElectronContainerDiff\");\n        totalDiff.addChild(IntegerDifference.construct(\"eCount\", firstEC.getElectronCount(),\n                secondEC.getElectronCount()));\n        totalDiff.addChild(ChemObjectDiff.difference(first, second));\n        if (totalDiff.childCount() > 0) {\n            return totalDiff;\n        } else {\n            return null;\n        }\n    }", "signature": "IDifference difference(IChemObject first, IChemObject second)", "full_signature": "public static IDifference difference(IChemObject first, IChemObject second)", "class_method_signature": "ElectronContainerDiff.difference(IChemObject first, IChemObject second)", "testcase": false, "constructor": false, "invocations": ["addChild", "construct", "getElectronCount", "getElectronCount", "addChild", "difference", "childCount"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}