{"test_class": {"identifier": "AndroidGradlePluginOutputParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private BuildOutputInstantReader myReader;", "modifier": "@Mock private", "type": "BuildOutputInstantReader", "declarator": "myReader", "var_name": "myReader"}, {"original_string": "@Mock private Consumer<BuildEvent> myConsumer;", "modifier": "@Mock private", "type": "Consumer<BuildEvent>", "declarator": "myConsumer", "var_name": "myConsumer"}, {"original_string": "@Nullable private AndroidGradlePluginOutputParser myParser;", "modifier": "@Nullable private", "type": "AndroidGradlePluginOutputParser", "declarator": "myParser", "var_name": "myParser"}], "file": "android/testSrc/com/android/tools/idea/gradle/project/build/output/AndroidGradlePluginOutputParserTest.java"}, "test_case": {"identifier": "testParseJavacWithSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testParseJavacWithSource() {\n    String line = \"MyClass.java:38: warning: [serial] serializable class MyClass has no definition of serialVersionUID\";\n    when(myReader.getParentEventId()).thenReturn(\"BUILD_ID_MOCK\");\n    assertFalse(myParser.parse(line, myReader, myConsumer));\n  }", "signature": "void testParseJavacWithSource()", "full_signature": "@Test public void testParseJavacWithSource()", "class_method_signature": "AndroidGradlePluginOutputParserTest.testParseJavacWithSource()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getParentEventId", "assertFalse", "parse"]}, "focal_class": {"identifier": "AndroidGradlePluginOutputParser", "superclass": "", "interfaces": "implements BuildOutputParser", "fields": [{"original_string": "@NotNull\n  static final String ANDROID_GRADLE_PLUGIN_MESSAGES_GROUP = \"Android Gradle Plugin\";", "modifier": "@NotNull\n  static final", "type": "String", "declarator": "ANDROID_GRADLE_PLUGIN_MESSAGES_GROUP = \"Android Gradle Plugin\"", "var_name": "ANDROID_GRADLE_PLUGIN_MESSAGES_GROUP"}, {"original_string": "@NotNull\n  private static final String WARNING_PREFIX = \"warning:\";", "modifier": "@NotNull\n  private static final", "type": "String", "declarator": "WARNING_PREFIX = \"warning:\"", "var_name": "WARNING_PREFIX"}, {"original_string": "@NotNull\n  private static final String ERROR_PREFIX = \"error:\";", "modifier": "@NotNull\n  private static final", "type": "String", "declarator": "ERROR_PREFIX = \"error:\"", "var_name": "ERROR_PREFIX"}], "methods": [{"identifier": "parse", "parameters": "(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean parse(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer)", "full_signature": "@Override public boolean parse(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer)", "class_method_signature": "AndroidGradlePluginOutputParser.parse(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/gradle/project/build/output/AndroidGradlePluginOutputParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean parse(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer) {\n    if (WARNING_PREFIX.regionMatches(true, 0, line, 0, WARNING_PREFIX.length())) {\n      String message = line.substring(WARNING_PREFIX.length()).trim();\n      messageConsumer\n        .accept(\n          new MessageEventImpl(reader.getParentEventId(), MessageEvent.Kind.WARNING, ANDROID_GRADLE_PLUGIN_MESSAGES_GROUP, message, message));\n      return true;\n    }\n    if (ERROR_PREFIX.regionMatches(true, 0, line, 0, ERROR_PREFIX.length())) {\n      String message = line.substring(ERROR_PREFIX.length()).trim();\n      messageConsumer\n        .accept(new MessageEventImpl(reader.getParentEventId(), MessageEvent.Kind.ERROR, ANDROID_GRADLE_PLUGIN_MESSAGES_GROUP, message, message));\n      return true;\n    }\n    return false;\n  }", "signature": "boolean parse(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer)", "full_signature": "@Override public boolean parse(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer)", "class_method_signature": "AndroidGradlePluginOutputParser.parse(String line, BuildOutputInstantReader reader, Consumer<? super BuildEvent> messageConsumer)", "testcase": false, "constructor": false, "invocations": ["regionMatches", "length", "trim", "substring", "length", "accept", "getParentEventId", "regionMatches", "length", "trim", "substring", "length", "accept", "getParentEventId"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}