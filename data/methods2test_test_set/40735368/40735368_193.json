{"test_class": {"identifier": "AppSchemaValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/extension/app-schema/app-schema-resolver/src/test/java/org/geotools/xml/AppSchemaValidatorTest.java"}, "test_case": {"identifier": "validateGetFeature", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validateGetFeature() {\n        AppSchemaValidator.validate(\"<wfs:GetFeature \" //\n                + \"xmlns:wfs=\\\"http://www.opengis.net/wfs\\\" \" //\n                + \"xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \" //\n                + \"xsi:schemaLocation=\\\"\" //\n                + \"http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd\" //\n                + \"\\\"><wfs:Query typeName=\\\"test\\\"/></wfs:GetFeature>\", null);\n    }", "signature": "void validateGetFeature()", "full_signature": "@Test public void validateGetFeature()", "class_method_signature": "AppSchemaValidatorTest.validateGetFeature()", "testcase": true, "constructor": false, "invocations": ["validate"]}, "focal_class": {"identifier": "AppSchemaValidator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern XML_ENCODING_PATTERN = Pattern\n            .compile(\"<\\\\?xml.*?encoding=[\\\"'](.+?)[\\\"'].*?\\\\?>.*\");", "modifier": "private static final", "type": "Pattern", "declarator": "XML_ENCODING_PATTERN = Pattern\n            .compile(\"<\\\\?xml.*?encoding=[\\\"'](.+?)[\\\"'].*?\\\\?>.*\")", "var_name": "XML_ENCODING_PATTERN"}, {"original_string": "private final SchemaResolver resolver;", "modifier": "private final", "type": "SchemaResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private final List<String> failures = new ArrayList<String>();", "modifier": "private final", "type": "List<String>", "declarator": "failures = new ArrayList<String>()", "var_name": "failures"}, {"original_string": "private boolean failOnWarning = true;", "modifier": "private", "type": "boolean", "declarator": "failOnWarning = true", "var_name": "failOnWarning"}], "methods": [{"identifier": "AppSchemaValidator", "parameters": "()", "modifiers": "private", "return": "", "signature": " AppSchemaValidator()", "full_signature": "private  AppSchemaValidator()", "class_method_signature": "AppSchemaValidator.AppSchemaValidator()", "testcase": false, "constructor": true}, {"identifier": "AppSchemaValidator", "parameters": "(SchemaResolver resolver)", "modifiers": "private", "return": "", "signature": " AppSchemaValidator(SchemaResolver resolver)", "full_signature": "private  AppSchemaValidator(SchemaResolver resolver)", "class_method_signature": "AppSchemaValidator.AppSchemaValidator(SchemaResolver resolver)", "testcase": false, "constructor": true}, {"identifier": "AppSchemaValidator", "parameters": "(SchemaCatalog catalog)", "modifiers": "private", "return": "", "signature": " AppSchemaValidator(SchemaCatalog catalog)", "full_signature": "private  AppSchemaValidator(SchemaCatalog catalog)", "class_method_signature": "AppSchemaValidator.AppSchemaValidator(SchemaCatalog catalog)", "testcase": false, "constructor": true}, {"identifier": "getFailures", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFailures()", "full_signature": "public List<String> getFailures()", "class_method_signature": "AppSchemaValidator.getFailures()", "testcase": false, "constructor": false}, {"identifier": "isFailOnWarning", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFailOnWarning()", "full_signature": "public boolean isFailOnWarning()", "class_method_signature": "AppSchemaValidator.isFailOnWarning()", "testcase": false, "constructor": false}, {"identifier": "setFailOnWarning", "parameters": "(boolean failOnWarning)", "modifiers": "public", "return": "void", "signature": "void setFailOnWarning(boolean failOnWarning)", "full_signature": "public void setFailOnWarning(boolean failOnWarning)", "class_method_signature": "AppSchemaValidator.setFailOnWarning(boolean failOnWarning)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(InputStream input)", "modifiers": "public", "return": "void", "signature": "void parse(InputStream input)", "full_signature": "public void parse(InputStream input)", "class_method_signature": "AppSchemaValidator.parse(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "checkForFailures", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void checkForFailures()", "full_signature": "public void checkForFailures()", "class_method_signature": "AppSchemaValidator.checkForFailures()", "testcase": false, "constructor": false}, {"identifier": "buildFailureMessage", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String buildFailureMessage()", "full_signature": "private String buildFailureMessage()", "class_method_signature": "AppSchemaValidator.buildFailureMessage()", "testcase": false, "constructor": false}, {"identifier": "buildValidator", "parameters": "()", "modifiers": "public static", "return": "AppSchemaValidator", "signature": "AppSchemaValidator buildValidator()", "full_signature": "public static AppSchemaValidator buildValidator()", "class_method_signature": "AppSchemaValidator.buildValidator()", "testcase": false, "constructor": false}, {"identifier": "buildValidator", "parameters": "(SchemaResolver resolver)", "modifiers": "public static", "return": "AppSchemaValidator", "signature": "AppSchemaValidator buildValidator(SchemaResolver resolver)", "full_signature": "public static AppSchemaValidator buildValidator(SchemaResolver resolver)", "class_method_signature": "AppSchemaValidator.buildValidator(SchemaResolver resolver)", "testcase": false, "constructor": false}, {"identifier": "buildValidator", "parameters": "(SchemaCatalog catalog)", "modifiers": "public static", "return": "AppSchemaValidator", "signature": "AppSchemaValidator buildValidator(SchemaCatalog catalog)", "full_signature": "public static AppSchemaValidator buildValidator(SchemaCatalog catalog)", "class_method_signature": "AppSchemaValidator.buildValidator(SchemaCatalog catalog)", "testcase": false, "constructor": false}, {"identifier": "validateResource", "parameters": "(String name, SchemaCatalog catalog)", "modifiers": "public static", "return": "void", "signature": "void validateResource(String name, SchemaCatalog catalog)", "full_signature": "public static void validateResource(String name, SchemaCatalog catalog)", "class_method_signature": "AppSchemaValidator.validateResource(String name, SchemaCatalog catalog)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(String xml, SchemaCatalog catalog)", "modifiers": "public static", "return": "void", "signature": "void validate(String xml, SchemaCatalog catalog)", "full_signature": "public static void validate(String xml, SchemaCatalog catalog)", "class_method_signature": "AppSchemaValidator.validate(String xml, SchemaCatalog catalog)", "testcase": false, "constructor": false}, {"identifier": "getEncoding", "parameters": "(String xml)", "modifiers": "static", "return": "String", "signature": "String getEncoding(String xml)", "full_signature": "static String getEncoding(String xml)", "class_method_signature": "AppSchemaValidator.getEncoding(String xml)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(InputStream input, SchemaCatalog catalog)", "modifiers": "public static", "return": "void", "signature": "void validate(InputStream input, SchemaCatalog catalog)", "full_signature": "public static void validate(InputStream input, SchemaCatalog catalog)", "class_method_signature": "AppSchemaValidator.validate(InputStream input, SchemaCatalog catalog)", "testcase": false, "constructor": false}], "file": "modules/extension/app-schema/app-schema-resolver/src/main/java/org/geotools/xml/AppSchemaValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(String xml, SchemaCatalog catalog)", "modifiers": "public static", "return": "void", "body": "public static void validate(String xml, SchemaCatalog catalog) {\n        byte[] bytes = null;\n        String encoding = getEncoding(xml);\n        if (encoding != null) {\n            try {\n                bytes = xml.getBytes(encoding);\n            } catch (UnsupportedEncodingException e) {\n                // ignore, handled below\n            }\n        }\n        if (bytes == null) {\n            // no encoding in declaration or unsupported encoding\n            // fall back to platform default\n            bytes = xml.getBytes();\n        }\n        InputStream input = null;\n        try {\n            input = new ByteArrayInputStream(bytes);\n            validate(input, catalog);\n        } finally {\n            if (input != null) {\n                try {\n                    input.close();\n                } catch (IOException e) {\n                    // we tried\n                }\n            }\n        }\n    }", "signature": "void validate(String xml, SchemaCatalog catalog)", "full_signature": "public static void validate(String xml, SchemaCatalog catalog)", "class_method_signature": "AppSchemaValidator.validate(String xml, SchemaCatalog catalog)", "testcase": false, "constructor": false, "invocations": ["getEncoding", "getBytes", "getBytes", "validate", "close"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}