{"test_class": {"identifier": "URLDecodeOperationTest", "superclass": "", "interfaces": "", "fields": [], "file": "operations/src/test/java/com/nextdoor/bender/operation/decode/URLDecodeOperationTest.java"}, "test_case": {"identifier": "testDecodeTwoThingsEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDecodeTwoThingsEmpty() throws FieldNotFoundException {\n    DummpyMapEvent devent = new DummpyMapEvent();\n    devent.setField(\"foo\", \"%3Ffoo%3Dbar%26baz%3Dqux\");\n\n    URLDecodeOperation op = new URLDecodeOperation(Arrays.asList(\"foo\", \"bar\"), 1);\n    InternalEvent ievent = new InternalEvent(\"\", null, 0);\n    ievent.setEventObj(devent);\n\n    op.perform(ievent);\n\n    assertEquals(1, devent.payload.size());\n    assertEquals(\"?foo=bar&baz=qux\", devent.getFieldAsString(\"foo\"));\n  }", "signature": "void testDecodeTwoThingsEmpty()", "full_signature": "@Test public void testDecodeTwoThingsEmpty()", "class_method_signature": "URLDecodeOperationTest.testDecodeTwoThingsEmpty()", "testcase": true, "constructor": false, "invocations": ["setField", "asList", "setEventObj", "perform", "assertEquals", "size", "assertEquals", "getFieldAsString"]}, "focal_class": {"identifier": "URLDecodeOperation", "superclass": "", "interfaces": "implements EventOperation", "fields": [{"original_string": "public static final URLCodec codec = new URLCodec();", "modifier": "public static final", "type": "URLCodec", "declarator": "codec = new URLCodec()", "var_name": "codec"}, {"original_string": "private final List<String> fieldNames;", "modifier": "private final", "type": "List<String>", "declarator": "fieldNames", "var_name": "fieldNames"}, {"original_string": "private final int times;", "modifier": "private final", "type": "int", "declarator": "times", "var_name": "times"}], "methods": [{"identifier": "URLDecodeOperation", "parameters": "(List<String> fieldNames, int times)", "modifiers": "public", "return": "", "signature": " URLDecodeOperation(List<String> fieldNames, int times)", "full_signature": "public  URLDecodeOperation(List<String> fieldNames, int times)", "class_method_signature": "URLDecodeOperation.URLDecodeOperation(List<String> fieldNames, int times)", "testcase": false, "constructor": true}, {"identifier": "perform", "parameters": "(InternalEvent ievent)", "modifiers": "@Override public", "return": "InternalEvent", "signature": "InternalEvent perform(InternalEvent ievent)", "full_signature": "@Override public InternalEvent perform(InternalEvent ievent)", "class_method_signature": "URLDecodeOperation.perform(InternalEvent ievent)", "testcase": false, "constructor": false}], "file": "operations/src/main/java/com/nextdoor/bender/operation/decode/URLDecodeOperation.java"}, "focal_method": {"identifier": "perform", "parameters": "(InternalEvent ievent)", "modifiers": "@Override public", "return": "InternalEvent", "body": "@Override\n  public InternalEvent perform(InternalEvent ievent) {\n    if (ievent == null || ievent.getEventObj() == null\n        || ievent.getEventObj().getPayload() == null) {\n      return ievent;\n    }\n\n    for (String fieldName : fieldNames) {\n      /*\n       * Get field value\n       */\n      String value = null;\n      try {\n        value = ievent.getEventObj().getFieldAsString(fieldName);\n      } catch (FieldNotFoundException e) {\n        continue;\n      }\n\n      if (value == null) {\n        return ievent;\n      }\n\n      /*\n       * Perform decode multiple times if required.\n       */\n      try {\n        for (int i = 0; i < this.times; i++) {\n          value = codec.decode(value);\n        }\n      } catch (DecoderException e) {\n        continue;\n      }\n\n      /*\n       * Update value\n       */\n      try {\n        ievent.getEventObj().setField(fieldName, value);\n      } catch (FieldNotFoundException e) {\n        throw new OperationException(\"failed to update original field in URL decode\");\n      }\n    }\n\n    return ievent;\n  }", "signature": "InternalEvent perform(InternalEvent ievent)", "full_signature": "@Override public InternalEvent perform(InternalEvent ievent)", "class_method_signature": "URLDecodeOperation.perform(InternalEvent ievent)", "testcase": false, "constructor": false, "invocations": ["getEventObj", "getPayload", "getEventObj", "getFieldAsString", "getEventObj", "decode", "setField", "getEventObj"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}