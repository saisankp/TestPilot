{"test_class": {"identifier": "ConfigFactoryTest", "superclass": "", "interfaces": "implements TestConstants", "fields": [], "file": "owner/src/test/java/org/aeonbits/owner/ConfigFactoryTest.java"}, "test_case": {"identifier": "testGetPropertiesEmptyKey", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testGetPropertiesEmptyKey() {\n        ConfigFactory.getProperty(\"\");\n    }", "signature": "void testGetPropertiesEmptyKey()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testGetPropertiesEmptyKey()", "class_method_signature": "ConfigFactoryTest.testGetPropertiesEmptyKey()", "testcase": true, "constructor": false, "invocations": ["getProperty"]}, "focal_class": {"identifier": "ConfigFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Factory INSTANCE = newInstance();", "modifier": "static final", "type": "Factory", "declarator": "INSTANCE = newInstance()", "var_name": "INSTANCE"}], "methods": [{"identifier": "ConfigFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " ConfigFactory()", "full_signature": "private  ConfigFactory()", "class_method_signature": "ConfigFactory.ConfigFactory()", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "()", "modifiers": "public static", "return": "Factory", "signature": "Factory newInstance()", "full_signature": "public static Factory newInstance()", "class_method_signature": "ConfigFactory.newInstance()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Class<? extends T> clazz, Map<?, ?>... imports)", "modifiers": "public static", "return": "T", "signature": "T create(Class<? extends T> clazz, Map<?, ?>... imports)", "full_signature": "public static T create(Class<? extends T> clazz, Map<?, ?>... imports)", "class_method_signature": "ConfigFactory.create(Class<? extends T> clazz, Map<?, ?>... imports)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String key, String value)", "modifiers": "public static", "return": "String", "signature": "String setProperty(String key, String value)", "full_signature": "public static String setProperty(String key, String value)", "class_method_signature": "ConfigFactory.setProperty(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public static", "return": "Properties", "signature": "Properties getProperties()", "full_signature": "public static Properties getProperties()", "class_method_signature": "ConfigFactory.getProperties()", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(Properties properties)", "modifiers": "public static", "return": "void", "signature": "void setProperties(Properties properties)", "full_signature": "public static void setProperties(Properties properties)", "class_method_signature": "ConfigFactory.setProperties(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(String key)", "modifiers": "public static", "return": "String", "signature": "String getProperty(String key)", "full_signature": "public static String getProperty(String key)", "class_method_signature": "ConfigFactory.getProperty(String key)", "testcase": false, "constructor": false}, {"identifier": "clearProperty", "parameters": "(String key)", "modifiers": "public static", "return": "String", "signature": "String clearProperty(String key)", "full_signature": "public static String clearProperty(String key)", "class_method_signature": "ConfigFactory.clearProperty(String key)", "testcase": false, "constructor": false}, {"identifier": "registerLoader", "parameters": "(Loader loader)", "modifiers": "public static", "return": "void", "signature": "void registerLoader(Loader loader)", "full_signature": "public static void registerLoader(Loader loader)", "class_method_signature": "ConfigFactory.registerLoader(Loader loader)", "testcase": false, "constructor": false}, {"identifier": "setTypeConverter", "parameters": "(Class<?> type, Class<? extends Converter<?>> converter)", "modifiers": "public static", "return": "void", "signature": "void setTypeConverter(Class<?> type, Class<? extends Converter<?>> converter)", "full_signature": "public static void setTypeConverter(Class<?> type, Class<? extends Converter<?>> converter)", "class_method_signature": "ConfigFactory.setTypeConverter(Class<?> type, Class<? extends Converter<?>> converter)", "testcase": false, "constructor": false}, {"identifier": "removeTypeConverter", "parameters": "(Class<?> type)", "modifiers": "public static", "return": "void", "signature": "void removeTypeConverter(Class<?> type)", "full_signature": "public static void removeTypeConverter(Class<?> type)", "class_method_signature": "ConfigFactory.removeTypeConverter(Class<?> type)", "testcase": false, "constructor": false}], "file": "owner/src/main/java/org/aeonbits/owner/ConfigFactory.java"}, "focal_method": {"identifier": "getProperty", "parameters": "(String key)", "modifiers": "public static", "return": "String", "body": "public static String getProperty(String key) {\n        return INSTANCE.getProperty(key);\n    }", "signature": "String getProperty(String key)", "full_signature": "public static String getProperty(String key)", "class_method_signature": "ConfigFactory.getProperty(String key)", "testcase": false, "constructor": false, "invocations": ["getProperty"]}, "repository": {"repo_id": 7292204, "url": "https://github.com/lviggiano/owner", "stars": 723, "created": "12/23/2012 5:38:31 AM +00:00", "updates": "2020-01-21T03:13:31+00:00", "fork": "False", "license": "licensed"}}