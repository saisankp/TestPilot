{"test_class": {"identifier": "MultiplicationWithoutMultiplyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MultiplicationWithoutMultiply multiply;", "modifier": "private", "type": "MultiplicationWithoutMultiply", "declarator": "multiply", "var_name": "multiply"}], "file": "algs/src/test/java/com/github/pedrovgs/problem20/MultiplicationWithoutMultiplyTest.java"}, "test_case": {"identifier": "anyNumberMultipliedByOneShouldReturnTheSameNumber", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void anyNumberMultipliedByOneShouldReturnTheSameNumber() {\n    assertEquals(7, multiply.calculate(1, 7));\n  }", "signature": "void anyNumberMultipliedByOneShouldReturnTheSameNumber()", "full_signature": "@Test public void anyNumberMultipliedByOneShouldReturnTheSameNumber()", "class_method_signature": "MultiplicationWithoutMultiplyTest.anyNumberMultipliedByOneShouldReturnTheSameNumber()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "calculate"]}, "focal_class": {"identifier": "MultiplicationWithoutMultiply", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "calculate", "parameters": "(int n1, int n2)", "modifiers": "public", "return": "int", "signature": "int calculate(int n1, int n2)", "full_signature": "public int calculate(int n1, int n2)", "class_method_signature": "MultiplicationWithoutMultiply.calculate(int n1, int n2)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem20/MultiplicationWithoutMultiply.java"}, "focal_method": {"identifier": "calculate", "parameters": "(int n1, int n2)", "modifiers": "public", "return": "int", "body": "public int calculate(int n1, int n2) {\n    int result = 0;\n    boolean negative = (n1 < 0 && n2 >= 0) || (n2 < 0 && n1 >= 0);\n    boolean positive = !negative;\n    n1 = Math.abs(n1);\n    for (int i = 0; i < n1; i++) {\n      if (negative && n2 > 0 || positive && n2 < 0)\n        result -= n2;\n      else\n        result += n2;\n    }\n\n    return result;\n  }", "signature": "int calculate(int n1, int n2)", "full_signature": "public int calculate(int n1, int n2)", "class_method_signature": "MultiplicationWithoutMultiply.calculate(int n1, int n2)", "testcase": false, "constructor": false, "invocations": ["abs"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}