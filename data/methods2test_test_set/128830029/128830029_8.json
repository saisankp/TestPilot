{"test_class": {"identifier": "MenuSessionImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private MenuItem item1;", "modifier": "@Mock\n    private", "type": "MenuItem", "declarator": "item1", "var_name": "item1"}, {"original_string": "@Mock\n    private MenuItem item2;", "modifier": "@Mock\n    private", "type": "MenuItem", "declarator": "item2", "var_name": "item2"}, {"original_string": "@Mock\n    private MenuTemplate template;", "modifier": "@Mock\n    private", "type": "MenuTemplate", "declarator": "template", "var_name": "template"}, {"original_string": "@Mock\n    private Player player;", "modifier": "@Mock\n    private", "type": "Player", "declarator": "player", "var_name": "player"}, {"original_string": "@Mock\n    private Consumer<Map<String, Object>> headerConsumer;", "modifier": "@Mock\n    private", "type": "Consumer<Map<String, Object>>", "declarator": "headerConsumer", "var_name": "headerConsumer"}, {"original_string": "private MenuSessionImpl session;", "modifier": "private", "type": "MenuSessionImpl", "declarator": "session", "var_name": "session"}], "file": "menu-api/src/test/java/ru/hyndo/sightmenu/MenuSessionImplTest.java"}, "test_case": {"identifier": "getItemByIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getItemByIndex() {\n        assertTrue(session.getItemByIndex(2).isPresent());\n        assertTrue(session.getItemByIndex(16).isPresent());\n        assertEquals(session.getItemByIndex(2).get(), item1);\n        assertEquals(session.getItemByIndex(16).get(), item2);\n    }", "signature": "void getItemByIndex()", "full_signature": "@Test public void getItemByIndex()", "class_method_signature": "MenuSessionImplTest.getItemByIndex()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isPresent", "getItemByIndex", "assertTrue", "isPresent", "getItemByIndex", "assertEquals", "get", "getItemByIndex", "assertEquals", "get", "getItemByIndex"]}, "focal_class": {"identifier": "MenuSessionImpl", "superclass": "", "interfaces": "implements MenuSession", "fields": [{"original_string": "private Inventory inventory;", "modifier": "private", "type": "Inventory", "declarator": "inventory", "var_name": "inventory"}, {"original_string": "private MenuTemplate menuTemplate;", "modifier": "private", "type": "MenuTemplate", "declarator": "menuTemplate", "var_name": "menuTemplate"}, {"original_string": "private Player owner;", "modifier": "private", "type": "Player", "declarator": "owner", "var_name": "owner"}, {"original_string": "private boolean isOpeningFinished;", "modifier": "private", "type": "boolean", "declarator": "isOpeningFinished", "var_name": "isOpeningFinished"}, {"original_string": "private MenuOpenProcessor openProcessor;", "modifier": "private", "type": "MenuOpenProcessor", "declarator": "openProcessor", "var_name": "openProcessor"}, {"original_string": "private Consumer<Map<String, Object>> headerConsumer;", "modifier": "private", "type": "Consumer<Map<String, Object>>", "declarator": "headerConsumer", "var_name": "headerConsumer"}, {"original_string": "private Map<Integer, MenuItem> itemsByIndex;", "modifier": "private", "type": "Map<Integer, MenuItem>", "declarator": "itemsByIndex", "var_name": "itemsByIndex"}], "methods": [{"identifier": "MenuSessionImpl", "parameters": "(MenuTemplate menuTemplate, MenuOpenProcessor openProcessor, Player owner, Consumer<Map<String, Object>> headerConsumer)", "modifiers": "protected", "return": "", "signature": " MenuSessionImpl(MenuTemplate menuTemplate, MenuOpenProcessor openProcessor, Player owner, Consumer<Map<String, Object>> headerConsumer)", "full_signature": "protected  MenuSessionImpl(MenuTemplate menuTemplate, MenuOpenProcessor openProcessor, Player owner, Consumer<Map<String, Object>> headerConsumer)", "class_method_signature": "MenuSessionImpl.MenuSessionImpl(MenuTemplate menuTemplate, MenuOpenProcessor openProcessor, Player owner, Consumer<Map<String, Object>> headerConsumer)", "testcase": false, "constructor": true}, {"identifier": "getItemByIndex", "parameters": "(int index)", "modifiers": "@Override public", "return": "Optional<MenuItem>", "signature": "Optional<MenuItem> getItemByIndex(int index)", "full_signature": "@Override public Optional<MenuItem> getItemByIndex(int index)", "class_method_signature": "MenuSessionImpl.getItemByIndex(int index)", "testcase": false, "constructor": false}, {"identifier": "getTemplate", "parameters": "()", "modifiers": "@Override public", "return": "MenuTemplate", "signature": "MenuTemplate getTemplate()", "full_signature": "@Override public MenuTemplate getTemplate()", "class_method_signature": "MenuSessionImpl.getTemplate()", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "@Override public", "return": "Player", "signature": "Player getOwner()", "full_signature": "@Override public Player getOwner()", "class_method_signature": "MenuSessionImpl.getOwner()", "testcase": false, "constructor": false}, {"identifier": "isOpeningFinished", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isOpeningFinished()", "full_signature": "@Override public boolean isOpeningFinished()", "class_method_signature": "MenuSessionImpl.isOpeningFinished()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MenuSessionImpl.close()", "testcase": false, "constructor": false}, {"identifier": "sendHeader", "parameters": "(Map<String, Object> headers)", "modifiers": "@Override public", "return": "void", "signature": "void sendHeader(Map<String, Object> headers)", "full_signature": "@Override public void sendHeader(Map<String, Object> headers)", "class_method_signature": "MenuSessionImpl.sendHeader(Map<String, Object> headers)", "testcase": false, "constructor": false}, {"identifier": "getInventory", "parameters": "()", "modifiers": "@Override public", "return": "Inventory", "signature": "Inventory getInventory()", "full_signature": "@Override public Inventory getInventory()", "class_method_signature": "MenuSessionImpl.getInventory()", "testcase": false, "constructor": false}, {"identifier": "getHeaderConsumer", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Consumer<Map<String, Object>>", "signature": "Consumer<Map<String, Object>> getHeaderConsumer()", "full_signature": "@Nonnull @Override public Consumer<Map<String, Object>> getHeaderConsumer()", "class_method_signature": "MenuSessionImpl.getHeaderConsumer()", "testcase": false, "constructor": false}, {"identifier": "updateItems", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void updateItems()", "full_signature": "@Override public void updateItems()", "class_method_signature": "MenuSessionImpl.updateItems()", "testcase": false, "constructor": false}, {"identifier": "updateItem", "parameters": "(int index)", "modifiers": "@Override public", "return": "void", "signature": "void updateItem(int index)", "full_signature": "@Override public void updateItem(int index)", "class_method_signature": "MenuSessionImpl.updateItem(int index)", "testcase": false, "constructor": false}, {"identifier": "updateTemplate", "parameters": "(MenuTemplate menuTemplate)", "modifiers": "@Override public", "return": "void", "signature": "void updateTemplate(MenuTemplate menuTemplate)", "full_signature": "@Override public void updateTemplate(MenuTemplate menuTemplate)", "class_method_signature": "MenuSessionImpl.updateTemplate(MenuTemplate menuTemplate)", "testcase": false, "constructor": false}, {"identifier": "setHeaderConsumer", "parameters": "(@Nonnull Consumer<Map<String, Object>> consumer)", "modifiers": "@Override public", "return": "void", "signature": "void setHeaderConsumer(@Nonnull Consumer<Map<String, Object>> consumer)", "full_signature": "@Override public void setHeaderConsumer(@Nonnull Consumer<Map<String, Object>> consumer)", "class_method_signature": "MenuSessionImpl.setHeaderConsumer(@Nonnull Consumer<Map<String, Object>> consumer)", "testcase": false, "constructor": false}], "file": "menu-api/src/main/java/ru/hyndo/sightmenu/MenuSessionImpl.java"}, "focal_method": {"identifier": "getItemByIndex", "parameters": "(int index)", "modifiers": "@Override public", "return": "Optional<MenuItem>", "body": "@Override\n    public Optional<MenuItem> getItemByIndex(int index) {\n        return Optional.ofNullable(itemsByIndex.get(index));\n    }", "signature": "Optional<MenuItem> getItemByIndex(int index)", "full_signature": "@Override public Optional<MenuItem> getItemByIndex(int index)", "class_method_signature": "MenuSessionImpl.getItemByIndex(int index)", "testcase": false, "constructor": false, "invocations": ["ofNullable", "get"]}, "repository": {"repo_id": 128830029, "url": "https://github.com/hyndor/SightMenu", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 130, "license": "licensed"}}