{"test_class": {"identifier": "RetrieveImagingDocumentSetRequestValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RetrieveImagingDocumentSetRequestValidator validator;", "modifier": "private", "type": "RetrieveImagingDocumentSetRequestValidator", "declarator": "validator", "var_name": "validator"}, {"original_string": "private RetrieveImagingDocumentSet request;", "modifier": "private", "type": "RetrieveImagingDocumentSet", "declarator": "request", "var_name": "request"}, {"original_string": "private RetrieveImagingDocumentSetRequestTransformer transformer;", "modifier": "private", "type": "RetrieveImagingDocumentSetRequestTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private ValidationProfile profile;", "modifier": "private", "type": "ValidationProfile", "declarator": "profile", "var_name": "profile"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/validate/requests/RetrieveImagingDocumentSetRequestValidatorTest.java"}, "test_case": {"identifier": "testGoodCase", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGoodCase() throws XDSMetaDataException {\n        validator.validate(transformer.toEbXML(request), profile);\n    }", "signature": "void testGoodCase()", "full_signature": "@Test public void testGoodCase()", "class_method_signature": "RetrieveImagingDocumentSetRequestValidatorTest.testGoodCase()", "testcase": true, "constructor": false, "invocations": ["validate", "toEbXML"]}, "focal_class": {"identifier": "RetrieveImagingDocumentSetRequestValidator", "superclass": "", "interfaces": "implements Validator<EbXMLRetrieveImagingDocumentSetRequest, ValidationProfile>", "fields": [{"original_string": "private final HomeCommunityIdValidator hcValidator = new HomeCommunityIdValidator(true);", "modifier": "private final", "type": "HomeCommunityIdValidator", "declarator": "hcValidator = new HomeCommunityIdValidator(true)", "var_name": "hcValidator"}], "methods": [{"identifier": "validate", "parameters": "(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile)", "modifiers": "@Override public", "return": "void", "signature": "void validate(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile)", "full_signature": "@Override public void validate(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile)", "class_method_signature": "RetrieveImagingDocumentSetRequestValidator.validate(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/validate/requests/RetrieveImagingDocumentSetRequestValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile) {\n        notNull(request, \"request cannot be null\");\n        \n        for (RetrieveStudy retrieveStudy : request.getRetrieveStudies()) {\n            String studyInstanceUID = retrieveStudy.getStudyInstanceUID();\n            metaDataAssert(studyInstanceUID != null && !studyInstanceUID.isEmpty(), STUDY_INSTANCE_UID_MUST_BE_SPECIFIED);\n\n            for (RetrieveSeries retrieveSeries : retrieveStudy.getRetrieveSerieses()) {\n                String seriesInstanceUID = retrieveSeries.getSeriesInstanceUID();\n                metaDataAssert(seriesInstanceUID != null && !seriesInstanceUID.isEmpty(), SERIES_INSTANCE_UID_MUST_BE_SPECIFIED);\n\n                for (RetrieveDocument document : retrieveSeries.getDocuments()) {\n                    //todo: Eliminate this duplicate code from DocumentRequest?\n                    String repoId = document.getRepositoryUniqueId();\n                    metaDataAssert(repoId != null && !repoId.isEmpty(), REPO_ID_MUST_BE_SPECIFIED);\n\n                    String docId = document.getDocumentUniqueId();\n                    metaDataAssert(docId != null && !docId.isEmpty(), DOC_ID_MUST_BE_SPECIFIED);\n\n                    if (profile.getProfile() == ValidationProfile.InteractionProfile.XCA) {\n                        hcValidator.validate(document.getHomeCommunityId());\n                    }\n                }\n            }\n        }\n    }", "signature": "void validate(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile)", "full_signature": "@Override public void validate(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile)", "class_method_signature": "RetrieveImagingDocumentSetRequestValidator.validate(EbXMLRetrieveImagingDocumentSetRequest request, ValidationProfile profile)", "testcase": false, "constructor": false, "invocations": ["notNull", "getRetrieveStudies", "getStudyInstanceUID", "metaDataAssert", "isEmpty", "getRetrieveSerieses", "getSeriesInstanceUID", "metaDataAssert", "isEmpty", "getDocuments", "getRepositoryUniqueId", "metaDataAssert", "isEmpty", "getDocumentUniqueId", "metaDataAssert", "isEmpty", "getProfile", "validate", "getHomeCommunityId"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}