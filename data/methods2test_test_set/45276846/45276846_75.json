{"test_class": {"identifier": "TestUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public int iterationCount = 1000;", "modifier": "public", "type": "int", "declarator": "iterationCount = 1000", "var_name": "iterationCount"}, {"original_string": "public boolean checkHashCollisions = true;", "modifier": "public", "type": "boolean", "declarator": "checkHashCollisions = true", "var_name": "checkHashCollisions"}, {"original_string": "@Rule\n    public TestResults testResults = new TestResults();", "modifier": "@Rule\n    public", "type": "TestResults", "declarator": "testResults = new TestResults()", "var_name": "testResults"}, {"original_string": "@Rule\n    public ExpectedException expectedEx = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedEx = ExpectedException.none()", "var_name": "expectedEx"}, {"original_string": "private static final int EXAMPLE_SERVICE_CLASS_ID = 1234;", "modifier": "private static final", "type": "int", "declarator": "EXAMPLE_SERVICE_CLASS_ID = 1234", "var_name": "EXAMPLE_SERVICE_CLASS_ID"}, {"original_string": "private static final int NUM_THREADS = 2;", "modifier": "private static final", "type": "int", "declarator": "NUM_THREADS = 2", "var_name": "NUM_THREADS"}, {"original_string": "private static final int NUM_ITERATIONS = 100;", "modifier": "private static final", "type": "int", "declarator": "NUM_ITERATIONS = 100", "var_name": "NUM_ITERATIONS"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestUtils.java"}, "test_case": {"identifier": "fromBytes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fromBytes() {\n        int count = 100000;\n        Map<String, Long> s = new HashMap<>();\n        s.put(UUID.randomUUID().toString(), 1L);\n        s.put(UUID.randomUUID().toString(), 2L);\n\n        byte[] content = new byte[1024];\n        Utils.toBytes(s, content, 0);\n        for (int i = 0; i < count; i++) {\n            @SuppressWarnings(\"unchecked\")\n            Map<String, Long> s1 = (Map<String, Long>) Utils.fromBytes(content, 0,\n                    content.length);\n            assertEquals(s.size(), s1.size());\n            for (Entry<String, Long> e : s1.entrySet()) {\n                assertEquals(s.get(e.getKey()), e.getValue());\n            }\n        }\n    }", "signature": "void fromBytes()", "full_signature": "@Test public void fromBytes()", "class_method_signature": "TestUtils.fromBytes()", "testcase": true, "constructor": false, "invocations": ["put", "toString", "randomUUID", "put", "toString", "randomUUID", "toBytes", "fromBytes", "assertEquals", "size", "size", "entrySet", "assertEquals", "get", "getKey", "getValue"]}, "focal_class": {"identifier": "Utils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String PROPERTY_NAME_PREFIX = \"xenon.\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_NAME_PREFIX = \"xenon.\"", "var_name": "PROPERTY_NAME_PREFIX"}, {"original_string": "public static final Charset CHARSET_OBJECT = StandardCharsets.UTF_8;", "modifier": "public static final", "type": "Charset", "declarator": "CHARSET_OBJECT = StandardCharsets.UTF_8", "var_name": "CHARSET_OBJECT"}, {"original_string": "public static final String CHARSET = \"UTF-8\";", "modifier": "public static final", "type": "String", "declarator": "CHARSET = \"UTF-8\"", "var_name": "CHARSET"}, {"original_string": "public static final String UI_DIRECTORY_NAME = \"ui\";", "modifier": "public static final", "type": "String", "declarator": "UI_DIRECTORY_NAME = \"ui\"", "var_name": "UI_DIRECTORY_NAME"}, {"original_string": "public static final String PROPERTY_NAME_TIME_COMPARISON = \"timeComparisonEpsilonMicros\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_NAME_TIME_COMPARISON = \"timeComparisonEpsilonMicros\"", "var_name": "PROPERTY_NAME_TIME_COMPARISON"}, {"original_string": "public static final int DEFAULT_IO_THREAD_COUNT = Math.min(2, Runtime.getRuntime()\n            .availableProcessors());", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_IO_THREAD_COUNT = Math.min(2, Runtime.getRuntime()\n            .availableProcessors())", "var_name": "DEFAULT_IO_THREAD_COUNT"}, {"original_string": "public static final int DEFAULT_THREAD_COUNT = Math.max(4, Runtime.getRuntime()\n            .availableProcessors());", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_THREAD_COUNT = Math.max(4, Runtime.getRuntime()\n            .availableProcessors())", "var_name": "DEFAULT_THREAD_COUNT"}, {"original_string": "public static final long DEFAULT_TIME_DRIFT_THRESHOLD_MICROS = TimeUnit.SECONDS.toMicros(1);", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_TIME_DRIFT_THRESHOLD_MICROS = TimeUnit.SECONDS.toMicros(1)", "var_name": "DEFAULT_TIME_DRIFT_THRESHOLD_MICROS"}, {"original_string": "private static final long PING_LAUNCH_TOLERANCE_MS = 50;", "modifier": "private static final", "type": "long", "declarator": "PING_LAUNCH_TOLERANCE_MS = 50", "var_name": "PING_LAUNCH_TOLERANCE_MS"}, {"original_string": "private static final ThreadLocal<CharsetDecoder> decodersPerThread = ThreadLocal\n            .withInitial(CHARSET_OBJECT::newDecoder);", "modifier": "private static final", "type": "ThreadLocal<CharsetDecoder>", "declarator": "decodersPerThread = ThreadLocal\n            .withInitial(CHARSET_OBJECT::newDecoder)", "var_name": "decodersPerThread"}, {"original_string": "private static final AtomicLong previousTimeValue = new AtomicLong();", "modifier": "private static final", "type": "AtomicLong", "declarator": "previousTimeValue = new AtomicLong()", "var_name": "previousTimeValue"}, {"original_string": "private static long timeComparisonEpsilon = initializeTimeEpsilon();", "modifier": "private static", "type": "long", "declarator": "timeComparisonEpsilon = initializeTimeEpsilon()", "var_name": "timeComparisonEpsilon"}, {"original_string": "private static long timeDriftThresholdMicros = DEFAULT_TIME_DRIFT_THRESHOLD_MICROS;", "modifier": "private static", "type": "long", "declarator": "timeDriftThresholdMicros = DEFAULT_TIME_DRIFT_THRESHOLD_MICROS", "var_name": "timeDriftThresholdMicros"}, {"original_string": "private static final ConcurrentMap<String, String> KINDS = new ConcurrentSkipListMap<>();", "modifier": "private static final", "type": "ConcurrentMap<String, String>", "declarator": "KINDS = new ConcurrentSkipListMap<>()", "var_name": "KINDS"}, {"original_string": "private static final ConcurrentMap<String, Class<?>> KIND_TO_TYPE = new ConcurrentSkipListMap<>();", "modifier": "private static final", "type": "ConcurrentMap<String, Class<?>>", "declarator": "KIND_TO_TYPE = new ConcurrentSkipListMap<>()", "var_name": "KIND_TO_TYPE"}, {"original_string": "private static final StringBuilderThreadLocal builderPerThread = new StringBuilderThreadLocal();", "modifier": "private static final", "type": "StringBuilderThreadLocal", "declarator": "builderPerThread = new StringBuilderThreadLocal()", "var_name": "builderPerThread"}], "methods": [{"identifier": "Utils", "parameters": "()", "modifiers": "private", "return": "", "signature": " Utils()", "full_signature": "private  Utils()", "class_method_signature": "Utils.Utils()", "testcase": false, "constructor": true}, {"identifier": "registerCustomJsonMapper", "parameters": "(Class<?> clazz,\n            JsonMapper mapper)", "modifiers": "public static", "return": "void", "signature": "void registerCustomJsonMapper(Class<?> clazz,\n            JsonMapper mapper)", "full_signature": "public static void registerCustomJsonMapper(Class<?> clazz,\n            JsonMapper mapper)", "class_method_signature": "Utils.registerCustomJsonMapper(Class<?> clazz,\n            JsonMapper mapper)", "testcase": false, "constructor": false}, {"identifier": "registerCustomKryoSerializer", "parameters": "(ThreadLocal<Kryo> kryoThreadLocal,\n            boolean isDocumentSerializer)", "modifiers": "public static", "return": "void", "signature": "void registerCustomKryoSerializer(ThreadLocal<Kryo> kryoThreadLocal,\n            boolean isDocumentSerializer)", "full_signature": "public static void registerCustomKryoSerializer(ThreadLocal<Kryo> kryoThreadLocal,\n            boolean isDocumentSerializer)", "class_method_signature": "Utils.registerCustomKryoSerializer(ThreadLocal<Kryo> kryoThreadLocal,\n            boolean isDocumentSerializer)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "(T t)", "modifiers": "public static", "return": "T", "signature": "T clone(T t)", "full_signature": "public static T clone(T t)", "class_method_signature": "Utils.clone(T t)", "testcase": false, "constructor": false}, {"identifier": "cloneObject", "parameters": "(T t)", "modifiers": "public static", "return": "T", "signature": "T cloneObject(T t)", "full_signature": "public static T cloneObject(T t)", "class_method_signature": "Utils.cloneObject(T t)", "testcase": false, "constructor": false}, {"identifier": "computeSignature", "parameters": "(ServiceDocument s, ServiceDocumentDescription description)", "modifiers": "public static", "return": "String", "signature": "String computeSignature(ServiceDocument s, ServiceDocumentDescription description)", "full_signature": "public static String computeSignature(ServiceDocument s, ServiceDocumentDescription description)", "class_method_signature": "Utils.computeSignature(ServiceDocument s, ServiceDocumentDescription description)", "testcase": false, "constructor": false}, {"identifier": "getBuffer", "parameters": "(int capacity)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBuffer(int capacity)", "full_signature": "public static byte[] getBuffer(int capacity)", "class_method_signature": "Utils.getBuffer(int capacity)", "testcase": false, "constructor": false}, {"identifier": "toBytes", "parameters": "(Object o, byte[] buffer, int position)", "modifiers": "public static", "return": "int", "signature": "int toBytes(Object o, byte[] buffer, int position)", "full_signature": "public static int toBytes(Object o, byte[] buffer, int position)", "class_method_signature": "Utils.toBytes(Object o, byte[] buffer, int position)", "testcase": false, "constructor": false}, {"identifier": "fromBytes", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "Object", "signature": "Object fromBytes(byte[] bytes)", "full_signature": "public static Object fromBytes(byte[] bytes)", "class_method_signature": "Utils.fromBytes(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "fromBytes", "parameters": "(byte[] bytes, int position, int length)", "modifiers": "public static", "return": "Object", "signature": "Object fromBytes(byte[] bytes, int position, int length)", "full_signature": "public static Object fromBytes(byte[] bytes, int position, int length)", "class_method_signature": "Utils.fromBytes(byte[] bytes, int position, int length)", "testcase": false, "constructor": false}, {"identifier": "fromQueryBinaryDocument", "parameters": "(String link, Object binaryData)", "modifiers": "public static", "return": "ServiceDocument", "signature": "ServiceDocument fromQueryBinaryDocument(String link, Object binaryData)", "full_signature": "public static ServiceDocument fromQueryBinaryDocument(String link, Object binaryData)", "class_method_signature": "Utils.fromQueryBinaryDocument(String link, Object binaryData)", "testcase": false, "constructor": false}, {"identifier": "performMaintenance", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void performMaintenance()", "full_signature": "public static void performMaintenance()", "class_method_signature": "Utils.performMaintenance()", "testcase": false, "constructor": false}, {"identifier": "computeHash", "parameters": "(CharSequence content)", "modifiers": "public static", "return": "String", "signature": "String computeHash(CharSequence content)", "full_signature": "public static String computeHash(CharSequence content)", "class_method_signature": "Utils.computeHash(CharSequence content)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(Object body)", "modifiers": "public static", "return": "String", "signature": "String toJson(Object body)", "full_signature": "public static String toJson(Object body)", "class_method_signature": "Utils.toJson(Object body)", "testcase": false, "constructor": false}, {"identifier": "toJsonHtml", "parameters": "(Object body)", "modifiers": "public static", "return": "String", "signature": "String toJsonHtml(Object body)", "full_signature": "public static String toJsonHtml(Object body)", "class_method_signature": "Utils.toJsonHtml(Object body)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(boolean hideSensitiveFields, boolean useHtmlFormatting, Object body)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String toJson(boolean hideSensitiveFields, boolean useHtmlFormatting, Object body)", "full_signature": "@Deprecated public static String toJson(boolean hideSensitiveFields, boolean useHtmlFormatting, Object body)", "class_method_signature": "Utils.toJson(boolean hideSensitiveFields, boolean useHtmlFormatting, Object body)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(Set<JsonMapper.JsonOptions> options, Object body)", "modifiers": "public static", "return": "String", "signature": "String toJson(Set<JsonMapper.JsonOptions> options, Object body)", "full_signature": "public static String toJson(Set<JsonMapper.JsonOptions> options, Object body)", "class_method_signature": "Utils.toJson(Set<JsonMapper.JsonOptions> options, Object body)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(String json, Class<T> clazz)", "modifiers": "public static", "return": "T", "signature": "T fromJson(String json, Class<T> clazz)", "full_signature": "public static T fromJson(String json, Class<T> clazz)", "class_method_signature": "Utils.fromJson(String json, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(Object json, Class<T> clazz)", "modifiers": "public static", "return": "T", "signature": "T fromJson(Object json, Class<T> clazz)", "full_signature": "public static T fromJson(Object json, Class<T> clazz)", "class_method_signature": "Utils.fromJson(Object json, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(Object json, Type type)", "modifiers": "public static", "return": "T", "signature": "T fromJson(Object json, Type type)", "full_signature": "public static T fromJson(Object json, Type type)", "class_method_signature": "Utils.fromJson(Object json, Type type)", "testcase": false, "constructor": false}, {"identifier": "getJsonMapValue", "parameters": "(Object json, String key, Class<T> valueClazz)", "modifiers": "public static", "return": "T", "signature": "T getJsonMapValue(Object json, String key, Class<T> valueClazz)", "full_signature": "public static T getJsonMapValue(Object json, String key, Class<T> valueClazz)", "class_method_signature": "Utils.getJsonMapValue(Object json, String key, Class<T> valueClazz)", "testcase": false, "constructor": false}, {"identifier": "getJsonMapValue", "parameters": "(Object json, String key, Type valueType)", "modifiers": "public static", "return": "T", "signature": "T getJsonMapValue(Object json, String key, Type valueType)", "full_signature": "public static T getJsonMapValue(Object json, String key, Type valueType)", "class_method_signature": "Utils.getJsonMapValue(Object json, String key, Type valueType)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Throwable t)", "modifiers": "public static", "return": "String", "signature": "String toString(Throwable t)", "full_signature": "public static String toString(Throwable t)", "class_method_signature": "Utils.toString(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Map<?, Throwable> exceptions)", "modifiers": "public static", "return": "String", "signature": "String toString(Map<?, Throwable> exceptions)", "full_signature": "public static String toString(Map<?, Throwable> exceptions)", "class_method_signature": "Utils.toString(Map<?, Throwable> exceptions)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Class<?> type, String classOrUri, Level level, String fmt,\n            Object... args)", "modifiers": "public static", "return": "void", "signature": "void log(Class<?> type, String classOrUri, Level level, String fmt,\n            Object... args)", "full_signature": "public static void log(Class<?> type, String classOrUri, Level level, String fmt,\n            Object... args)", "class_method_signature": "Utils.log(Class<?> type, String classOrUri, Level level, String fmt,\n            Object... args)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Class<?> type, String classOrUri, Level level,\n            Supplier<String> messageSupplier)", "modifiers": "public static", "return": "void", "signature": "void log(Class<?> type, String classOrUri, Level level,\n            Supplier<String> messageSupplier)", "full_signature": "public static void log(Class<?> type, String classOrUri, Level level,\n            Supplier<String> messageSupplier)", "class_method_signature": "Utils.log(Class<?> type, String classOrUri, Level level,\n            Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Logger lg, Integer nestingLevel, String classOrUri, Level level,\n            String fmt, Object... args)", "modifiers": "public static", "return": "void", "signature": "void log(Logger lg, Integer nestingLevel, String classOrUri, Level level,\n            String fmt, Object... args)", "full_signature": "public static void log(Logger lg, Integer nestingLevel, String classOrUri, Level level,\n            String fmt, Object... args)", "class_method_signature": "Utils.log(Logger lg, Integer nestingLevel, String classOrUri, Level level,\n            String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Logger lg, Integer nestingLevel, String classOrUri, Level level,\n            Supplier<String> messageSupplier)", "modifiers": "public static", "return": "void", "signature": "void log(Logger lg, Integer nestingLevel, String classOrUri, Level level,\n            Supplier<String> messageSupplier)", "full_signature": "public static void log(Logger lg, Integer nestingLevel, String classOrUri, Level level,\n            Supplier<String> messageSupplier)", "class_method_signature": "Utils.log(Logger lg, Integer nestingLevel, String classOrUri, Level level,\n            Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "logWarning", "parameters": "(String fmt, Object... args)", "modifiers": "public static", "return": "void", "signature": "void logWarning(String fmt, Object... args)", "full_signature": "public static void logWarning(String fmt, Object... args)", "class_method_signature": "Utils.logWarning(String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "toDocumentKind", "parameters": "(Class<?> type)", "modifiers": "public static", "return": "String", "signature": "String toDocumentKind(Class<?> type)", "full_signature": "public static String toDocumentKind(Class<?> type)", "class_method_signature": "Utils.toDocumentKind(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "fromDocumentKind", "parameters": "(String kind)", "modifiers": "public static", "return": "String", "signature": "String fromDocumentKind(String kind)", "full_signature": "public static String fromDocumentKind(String kind)", "class_method_signature": "Utils.fromDocumentKind(String kind)", "testcase": false, "constructor": false}, {"identifier": "registerKind", "parameters": "(Class<?> type, String kind)", "modifiers": "public static", "return": "String", "signature": "String registerKind(Class<?> type, String kind)", "full_signature": "public static String registerKind(Class<?> type, String kind)", "class_method_signature": "Utils.registerKind(Class<?> type, String kind)", "testcase": false, "constructor": false}, {"identifier": "getTypeFromKind", "parameters": "(String kind)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getTypeFromKind(String kind)", "full_signature": "public static Class<?> getTypeFromKind(String kind)", "class_method_signature": "Utils.getTypeFromKind(String kind)", "testcase": false, "constructor": false}, {"identifier": "buildKind", "parameters": "(Class<?> type)", "modifiers": "public static", "return": "String", "signature": "String buildKind(Class<?> type)", "full_signature": "public static String buildKind(Class<?> type)", "class_method_signature": "Utils.buildKind(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "toServiceErrorResponse", "parameters": "(Throwable e)", "modifiers": "public static", "return": "ServiceErrorResponse", "signature": "ServiceErrorResponse toServiceErrorResponse(Throwable e)", "full_signature": "public static ServiceErrorResponse toServiceErrorResponse(Throwable e)", "class_method_signature": "Utils.toServiceErrorResponse(Throwable e)", "testcase": false, "constructor": false}, {"identifier": "toValidationErrorResponse", "parameters": "(Throwable t, Operation op)", "modifiers": "public static", "return": "ServiceErrorResponse", "signature": "ServiceErrorResponse toValidationErrorResponse(Throwable t, Operation op)", "full_signature": "public static ServiceErrorResponse toValidationErrorResponse(Throwable t, Operation op)", "class_method_signature": "Utils.toValidationErrorResponse(Throwable t, Operation op)", "testcase": false, "constructor": false}, {"identifier": "isValidationError", "parameters": "(Throwable e)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidationError(Throwable e)", "full_signature": "public static boolean isValidationError(Throwable e)", "class_method_signature": "Utils.isValidationError(Throwable e)", "testcase": false, "constructor": false}, {"identifier": "buildServicePath", "parameters": "(Class<? extends Service> klass)", "modifiers": "public static", "return": "String", "signature": "String buildServicePath(Class<? extends Service> klass)", "full_signature": "public static String buildServicePath(Class<? extends Service> klass)", "class_method_signature": "Utils.buildServicePath(Class<? extends Service> klass)", "testcase": false, "constructor": false}, {"identifier": "buildUiResourceUriPrefixPath", "parameters": "(Class<? extends Service> klass)", "modifiers": "public static", "return": "String", "signature": "String buildUiResourceUriPrefixPath(Class<? extends Service> klass)", "full_signature": "public static String buildUiResourceUriPrefixPath(Class<? extends Service> klass)", "class_method_signature": "Utils.buildUiResourceUriPrefixPath(Class<? extends Service> klass)", "testcase": false, "constructor": false}, {"identifier": "buildUiResourceUriPrefixPath", "parameters": "(Service service)", "modifiers": "public static", "return": "String", "signature": "String buildUiResourceUriPrefixPath(Service service)", "full_signature": "public static String buildUiResourceUriPrefixPath(Service service)", "class_method_signature": "Utils.buildUiResourceUriPrefixPath(Service service)", "testcase": false, "constructor": false}, {"identifier": "buildCustomUiResourceUriPrefixPath", "parameters": "(Service service)", "modifiers": "public static", "return": "String", "signature": "String buildCustomUiResourceUriPrefixPath(Service service)", "full_signature": "public static String buildCustomUiResourceUriPrefixPath(Service service)", "class_method_signature": "Utils.buildCustomUiResourceUriPrefixPath(Service service)", "testcase": false, "constructor": false}, {"identifier": "setJsonProperty", "parameters": "(Object body, String fieldName, String fieldValue)", "modifiers": "public static", "return": "Object", "signature": "Object setJsonProperty(Object body, String fieldName, String fieldValue)", "full_signature": "public static Object setJsonProperty(Object body, String fieldName, String fieldValue)", "class_method_signature": "Utils.setJsonProperty(Object body, String fieldName, String fieldValue)", "testcase": false, "constructor": false}, {"identifier": "validateServiceOption", "parameters": "(EnumSet<ServiceOption> options,\n            ServiceOption option)", "modifiers": "public static", "return": "String", "signature": "String validateServiceOption(EnumSet<ServiceOption> options,\n            ServiceOption option)", "full_signature": "public static String validateServiceOption(EnumSet<ServiceOption> options,\n            ServiceOption option)", "class_method_signature": "Utils.validateServiceOption(EnumSet<ServiceOption> options,\n            ServiceOption option)", "testcase": false, "constructor": false}, {"identifier": "validateServiceOptions", "parameters": "(ServiceHost host, Service service, Operation post)", "modifiers": "static", "return": "boolean", "signature": "boolean validateServiceOptions(ServiceHost host, Service service, Operation post)", "full_signature": "static boolean validateServiceOptions(ServiceHost host, Service service, Operation post)", "class_method_signature": "Utils.validateServiceOptions(ServiceHost host, Service service, Operation post)", "testcase": false, "constructor": false}, {"identifier": "checkAndUpdateDocumentOwnership", "parameters": "(ServiceHost host, Service service,\n            long expirationTimeMicrosUtc, CompletionHandler ch)", "modifiers": "static", "return": "void", "signature": "void checkAndUpdateDocumentOwnership(ServiceHost host, Service service,\n            long expirationTimeMicrosUtc, CompletionHandler ch)", "full_signature": "static void checkAndUpdateDocumentOwnership(ServiceHost host, Service service,\n            long expirationTimeMicrosUtc, CompletionHandler ch)", "class_method_signature": "Utils.checkAndUpdateDocumentOwnership(ServiceHost host, Service service,\n            long expirationTimeMicrosUtc, CompletionHandler ch)", "testcase": false, "constructor": false}, {"identifier": "setFactoryAvailabilityIfOwner", "parameters": "(ServiceHost host, String factoryLink,\n            String factoryNodeSelectorPath, boolean isAvailable)", "modifiers": "public static", "return": "void", "signature": "void setFactoryAvailabilityIfOwner(ServiceHost host, String factoryLink,\n            String factoryNodeSelectorPath, boolean isAvailable)", "full_signature": "public static void setFactoryAvailabilityIfOwner(ServiceHost host, String factoryLink,\n            String factoryNodeSelectorPath, boolean isAvailable)", "class_method_signature": "Utils.setFactoryAvailabilityIfOwner(ServiceHost host, String factoryLink,\n            String factoryNodeSelectorPath, boolean isAvailable)", "testcase": false, "constructor": false}, {"identifier": "isReachable", "parameters": "(SystemHostInfo systemInfo, InetAddress addr, long timeoutMs)", "modifiers": "public static", "return": "boolean", "signature": "boolean isReachable(SystemHostInfo systemInfo, InetAddress addr, long timeoutMs)", "full_signature": "public static boolean isReachable(SystemHostInfo systemInfo, InetAddress addr, long timeoutMs)", "class_method_signature": "Utils.isReachable(SystemHostInfo systemInfo, InetAddress addr, long timeoutMs)", "testcase": false, "constructor": false}, {"identifier": "isReachableByPing", "parameters": "(SystemHostInfo systemInfo, InetAddress addr,\n            long timeoutMs)", "modifiers": "public static", "return": "boolean", "signature": "boolean isReachableByPing(SystemHostInfo systemInfo, InetAddress addr,\n            long timeoutMs)", "full_signature": "public static boolean isReachableByPing(SystemHostInfo systemInfo, InetAddress addr,\n            long timeoutMs)", "class_method_signature": "Utils.isReachableByPing(SystemHostInfo systemInfo, InetAddress addr,\n            long timeoutMs)", "testcase": false, "constructor": false}, {"identifier": "getNormalizedHostAddress", "parameters": "(SystemHostInfo systemInfo, InetAddress addr)", "modifiers": "public static", "return": "String", "signature": "String getNormalizedHostAddress(SystemHostInfo systemInfo, InetAddress addr)", "full_signature": "public static String getNormalizedHostAddress(SystemHostInfo systemInfo, InetAddress addr)", "class_method_signature": "Utils.getNormalizedHostAddress(SystemHostInfo systemInfo, InetAddress addr)", "testcase": false, "constructor": false}, {"identifier": "encodeAndTransferLinkedStateToBody", "parameters": "(Operation source, Operation target,\n            boolean useBinary)", "modifiers": "public static", "return": "void", "signature": "void encodeAndTransferLinkedStateToBody(Operation source, Operation target,\n            boolean useBinary)", "full_signature": "public static void encodeAndTransferLinkedStateToBody(Operation source, Operation target,\n            boolean useBinary)", "class_method_signature": "Utils.encodeAndTransferLinkedStateToBody(Operation source, Operation target,\n            boolean useBinary)", "testcase": false, "constructor": false}, {"identifier": "encodeBody", "parameters": "(Operation op, boolean isRequest)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encodeBody(Operation op, boolean isRequest)", "full_signature": "public static byte[] encodeBody(Operation op, boolean isRequest)", "class_method_signature": "Utils.encodeBody(Operation op, boolean isRequest)", "testcase": false, "constructor": false}, {"identifier": "encodeBody", "parameters": "(Operation op, Object body, String contentType, boolean isRequest)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encodeBody(Operation op, Object body, String contentType, boolean isRequest)", "full_signature": "public static byte[] encodeBody(Operation op, Object body, String contentType, boolean isRequest)", "class_method_signature": "Utils.encodeBody(Operation op, Object body, String contentType, boolean isRequest)", "testcase": false, "constructor": false}, {"identifier": "compressGZip", "parameters": "(byte[] input)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] compressGZip(byte[] input)", "full_signature": "private static byte[] compressGZip(byte[] input)", "class_method_signature": "Utils.compressGZip(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "decodeBody", "parameters": "(Operation op, ByteBuffer buffer, boolean isRequest)", "modifiers": "public static", "return": "void", "signature": "void decodeBody(Operation op, ByteBuffer buffer, boolean isRequest)", "full_signature": "public static void decodeBody(Operation op, ByteBuffer buffer, boolean isRequest)", "class_method_signature": "Utils.decodeBody(Operation op, ByteBuffer buffer, boolean isRequest)", "testcase": false, "constructor": false}, {"identifier": "decodeBody", "parameters": "(\n            Operation op, ByteBuffer buffer, boolean isRequest, boolean compressed)", "modifiers": "public static", "return": "void", "signature": "void decodeBody(\n            Operation op, ByteBuffer buffer, boolean isRequest, boolean compressed)", "full_signature": "public static void decodeBody(\n            Operation op, ByteBuffer buffer, boolean isRequest, boolean compressed)", "class_method_signature": "Utils.decodeBody(\n            Operation op, ByteBuffer buffer, boolean isRequest, boolean compressed)", "testcase": false, "constructor": false}, {"identifier": "decodeIfText", "parameters": "(ByteBuffer buffer, String contentType)", "modifiers": "public static", "return": "String", "signature": "String decodeIfText(ByteBuffer buffer, String contentType)", "full_signature": "public static String decodeIfText(ByteBuffer buffer, String contentType)", "class_method_signature": "Utils.decodeIfText(ByteBuffer buffer, String contentType)", "testcase": false, "constructor": false}, {"identifier": "decompressGZip", "parameters": "(ByteBuffer bb)", "modifiers": "private static", "return": "ByteBuffer", "signature": "ByteBuffer decompressGZip(ByteBuffer bb)", "full_signature": "private static ByteBuffer decompressGZip(ByteBuffer bb)", "class_method_signature": "Utils.decompressGZip(ByteBuffer bb)", "testcase": false, "constructor": false}, {"identifier": "compressGZip", "parameters": "(String text)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer compressGZip(String text)", "full_signature": "public static ByteBuffer compressGZip(String text)", "class_method_signature": "Utils.compressGZip(String text)", "testcase": false, "constructor": false}, {"identifier": "isContentTypeKryoBinary", "parameters": "(String contentType)", "modifiers": "public static", "return": "boolean", "signature": "boolean isContentTypeKryoBinary(String contentType)", "full_signature": "public static boolean isContentTypeKryoBinary(String contentType)", "class_method_signature": "Utils.isContentTypeKryoBinary(String contentType)", "testcase": false, "constructor": false}, {"identifier": "isContentTypeText", "parameters": "(String contentType)", "modifiers": "private static", "return": "boolean", "signature": "boolean isContentTypeText(String contentType)", "full_signature": "private static boolean isContentTypeText(String contentType)", "class_method_signature": "Utils.isContentTypeText(String contentType)", "testcase": false, "constructor": false}, {"identifier": "getServiceUiResourcePath", "parameters": "(Service s)", "modifiers": "public static", "return": "Path", "signature": "Path getServiceUiResourcePath(Service s)", "full_signature": "public static Path getServiceUiResourcePath(Service s)", "class_method_signature": "Utils.getServiceUiResourcePath(Service s)", "testcase": false, "constructor": false}, {"identifier": "mergeWithState", "parameters": "(\n            ServiceDocumentDescription desc,\n            T source, T patch)", "modifiers": "public static", "return": "boolean", "signature": "boolean mergeWithState(\n            ServiceDocumentDescription desc,\n            T source, T patch)", "full_signature": "public static boolean mergeWithState(\n            ServiceDocumentDescription desc,\n            T source, T patch)", "class_method_signature": "Utils.mergeWithState(\n            ServiceDocumentDescription desc,\n            T source, T patch)", "testcase": false, "constructor": false}, {"identifier": "mergeWithState", "parameters": "(T currentState, Operation op)", "modifiers": "public static", "return": "boolean", "signature": "boolean mergeWithState(T currentState, Operation op)", "full_signature": "public static boolean mergeWithState(T currentState, Operation op)", "class_method_signature": "Utils.mergeWithState(T currentState, Operation op)", "testcase": false, "constructor": false}, {"identifier": "mergeWithStateAdvanced", "parameters": "(\n            ServiceDocumentDescription desc, T currentState, Class<T> type, Operation op)", "modifiers": "public static", "return": "EnumSet<MergeResult>", "signature": "EnumSet<MergeResult> mergeWithStateAdvanced(\n            ServiceDocumentDescription desc, T currentState, Class<T> type, Operation op)", "full_signature": "public static EnumSet<MergeResult> mergeWithStateAdvanced(\n            ServiceDocumentDescription desc, T currentState, Class<T> type, Operation op)", "class_method_signature": "Utils.mergeWithStateAdvanced(\n            ServiceDocumentDescription desc, T currentState, Class<T> type, Operation op)", "testcase": false, "constructor": false}, {"identifier": "validateState", "parameters": "(\n            ServiceDocumentDescription desc, T state)", "modifiers": "public static", "return": "void", "signature": "void validateState(\n            ServiceDocumentDescription desc, T state)", "full_signature": "public static void validateState(\n            ServiceDocumentDescription desc, T state)", "class_method_signature": "Utils.validateState(\n            ServiceDocumentDescription desc, T state)", "testcase": false, "constructor": false}, {"identifier": "initializeTimeEpsilon", "parameters": "()", "modifiers": "private static", "return": "long", "signature": "long initializeTimeEpsilon()", "full_signature": "private static long initializeTimeEpsilon()", "class_method_signature": "Utils.initializeTimeEpsilon()", "testcase": false, "constructor": false}, {"identifier": "fromNowMicrosUtc", "parameters": "(long deltaMicros)", "modifiers": "public static", "return": "long", "signature": "long fromNowMicrosUtc(long deltaMicros)", "full_signature": "public static long fromNowMicrosUtc(long deltaMicros)", "class_method_signature": "Utils.fromNowMicrosUtc(long deltaMicros)", "testcase": false, "constructor": false}, {"identifier": "beforeNow", "parameters": "(long microsUtc)", "modifiers": "public static", "return": "boolean", "signature": "boolean beforeNow(long microsUtc)", "full_signature": "public static boolean beforeNow(long microsUtc)", "class_method_signature": "Utils.beforeNow(long microsUtc)", "testcase": false, "constructor": false}, {"identifier": "getSystemNowMicrosUtc", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long getSystemNowMicrosUtc()", "full_signature": "public static long getSystemNowMicrosUtc()", "class_method_signature": "Utils.getSystemNowMicrosUtc()", "testcase": false, "constructor": false}, {"identifier": "getNowMicrosUtc", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long getNowMicrosUtc()", "full_signature": "public static long getNowMicrosUtc()", "class_method_signature": "Utils.getNowMicrosUtc()", "testcase": false, "constructor": false}, {"identifier": "setTimeDriftThreshold", "parameters": "(long micros)", "modifiers": "public static", "return": "void", "signature": "void setTimeDriftThreshold(long micros)", "full_signature": "public static void setTimeDriftThreshold(long micros)", "class_method_signature": "Utils.setTimeDriftThreshold(long micros)", "testcase": false, "constructor": false}, {"identifier": "resetTimeComparisonEpsilonMicros", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void resetTimeComparisonEpsilonMicros()", "full_signature": "public static void resetTimeComparisonEpsilonMicros()", "class_method_signature": "Utils.resetTimeComparisonEpsilonMicros()", "testcase": false, "constructor": false}, {"identifier": "setTimeComparisonEpsilonMicros", "parameters": "(long micros)", "modifiers": "public static", "return": "void", "signature": "void setTimeComparisonEpsilonMicros(long micros)", "full_signature": "public static void setTimeComparisonEpsilonMicros(long micros)", "class_method_signature": "Utils.setTimeComparisonEpsilonMicros(long micros)", "testcase": false, "constructor": false}, {"identifier": "getTimeComparisonEpsilonMicros", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long getTimeComparisonEpsilonMicros()", "full_signature": "public static long getTimeComparisonEpsilonMicros()", "class_method_signature": "Utils.getTimeComparisonEpsilonMicros()", "testcase": false, "constructor": false}, {"identifier": "isWithinTimeComparisonEpsilon", "parameters": "(long timeMicros)", "modifiers": "public static", "return": "boolean", "signature": "boolean isWithinTimeComparisonEpsilon(long timeMicros)", "full_signature": "public static boolean isWithinTimeComparisonEpsilon(long timeMicros)", "class_method_signature": "Utils.isWithinTimeComparisonEpsilon(long timeMicros)", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "public static", "return": "StringBuilder", "signature": "StringBuilder getBuilder()", "full_signature": "public static StringBuilder getBuilder()", "class_method_signature": "Utils.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "updateCollections", "parameters": "(T currentState,\n            ServiceStateCollectionUpdateRequest patchBody)", "modifiers": "public static", "return": "boolean", "signature": "boolean updateCollections(T currentState,\n            ServiceStateCollectionUpdateRequest patchBody)", "full_signature": "public static boolean updateCollections(T currentState,\n            ServiceStateCollectionUpdateRequest patchBody)", "class_method_signature": "Utils.updateCollections(T currentState,\n            ServiceStateCollectionUpdateRequest patchBody)", "testcase": false, "constructor": false}, {"identifier": "updateMaps", "parameters": "(T currentState,\n            ServiceStateMapUpdateRequest patchBody)", "modifiers": "public static", "return": "boolean", "signature": "boolean updateMaps(T currentState,\n            ServiceStateMapUpdateRequest patchBody)", "full_signature": "public static boolean updateMaps(T currentState,\n            ServiceStateMapUpdateRequest patchBody)", "class_method_signature": "Utils.updateMaps(T currentState,\n            ServiceStateMapUpdateRequest patchBody)", "testcase": false, "constructor": false}, {"identifier": "processCollection", "parameters": "(\n            Collection<Object> inputCollection, String collectionName,\n            T currentState, CollectionOperation operation)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "boolean", "signature": "boolean processCollection(\n            Collection<Object> inputCollection, String collectionName,\n            T currentState, CollectionOperation operation)", "full_signature": "@SuppressWarnings(\"unchecked\") private static boolean processCollection(\n            Collection<Object> inputCollection, String collectionName,\n            T currentState, CollectionOperation operation)", "class_method_signature": "Utils.processCollection(\n            Collection<Object> inputCollection, String collectionName,\n            T currentState, CollectionOperation operation)", "testcase": false, "constructor": false}, {"identifier": "processMapKeyRemoval", "parameters": "(\n            Collection<Object> keysToRemove, String mapName, T currentState)", "modifiers": "private static", "return": "boolean", "signature": "boolean processMapKeyRemoval(\n            Collection<Object> keysToRemove, String mapName, T currentState)", "full_signature": "private static boolean processMapKeyRemoval(\n            Collection<Object> keysToRemove, String mapName, T currentState)", "class_method_signature": "Utils.processMapKeyRemoval(\n            Collection<Object> keysToRemove, String mapName, T currentState)", "testcase": false, "constructor": false}, {"identifier": "processMapEntryAddition", "parameters": "(\n            Map<Object, Object> entriesToAdd, String mapName, T currentState)", "modifiers": "private static", "return": "boolean", "signature": "boolean processMapEntryAddition(\n            Map<Object, Object> entriesToAdd, String mapName, T currentState)", "full_signature": "private static boolean processMapEntryAddition(\n            Map<Object, Object> entriesToAdd, String mapName, T currentState)", "class_method_signature": "Utils.processMapEntryAddition(\n            Map<Object, Object> entriesToAdd, String mapName, T currentState)", "testcase": false, "constructor": false}, {"identifier": "buildUUID", "parameters": "(String id)", "modifiers": "public static", "return": "String", "signature": "String buildUUID(String id)", "full_signature": "public static String buildUUID(String id)", "class_method_signature": "Utils.buildUUID(String id)", "testcase": false, "constructor": false}, {"identifier": "buildServiceConfig", "parameters": "(T config, Service service)", "modifiers": "public static", "return": "T", "signature": "T buildServiceConfig(T config, Service service)", "full_signature": "public static T buildServiceConfig(T config, Service service)", "class_method_signature": "Utils.buildServiceConfig(T config, Service service)", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/Utils.java"}, "focal_method": {"identifier": "fromBytes", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "Object", "body": "public static Object fromBytes(byte[] bytes) {\n        return KryoSerializers.deserializeObject(bytes, 0, bytes.length);\n    }", "signature": "Object fromBytes(byte[] bytes)", "full_signature": "public static Object fromBytes(byte[] bytes)", "class_method_signature": "Utils.fromBytes(byte[] bytes)", "testcase": false, "constructor": false, "invocations": ["deserializeObject"]}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}