{"test_class": {"identifier": "DenseVectorSummarizerTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/alibaba/alink/operator/common/statistics/basicstatistic/DenseVectorSummarizerTest.java"}, "test_case": {"identifier": "toSummary", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toSummary() {\n        DenseVectorSummary summary = (DenseVectorSummary) summarizer().toSummary();\n\n        assertEquals(5, summary.count);\n        assertArrayEquals(new double[]{15.0, -15.0, 15.0}, summary.sum.getData(), 10e-6);\n        assertArrayEquals(new double[]{55.0, 55.0, 45.0}, summary.squareSum.getData(), 10e-6);\n        assertArrayEquals(new double[]{1.0, -5.0, 3.0}, summary.min.getData(), 10e-6);\n        assertArrayEquals(new double[]{5.0, -1.0, 3.0}, summary.max.getData(), 10e-6);\n        assertArrayEquals(new double[]{15.0, 15.0, 15.0}, summary.normL1.getData(), 10e-6);\n    }", "signature": "void toSummary()", "full_signature": "@Test public void toSummary()", "class_method_signature": "DenseVectorSummarizerTest.toSummary()", "testcase": true, "constructor": false, "invocations": ["toSummary", "summarizer", "assertEquals", "assertArrayEquals", "getData", "assertArrayEquals", "getData", "assertArrayEquals", "getData", "assertArrayEquals", "getData", "assertArrayEquals", "getData"]}, "focal_class": {"identifier": "DenseVectorSummarizer", "superclass": "extends BaseVectorSummarizer", "interfaces": "", "fields": [{"original_string": "public DenseVector sum;", "modifier": "public", "type": "DenseVector", "declarator": "sum", "var_name": "sum"}, {"original_string": "public DenseVector squareSum;", "modifier": "public", "type": "DenseVector", "declarator": "squareSum", "var_name": "squareSum"}, {"original_string": "public DenseVector min;", "modifier": "public", "type": "DenseVector", "declarator": "min", "var_name": "min"}, {"original_string": "public DenseVector max;", "modifier": "public", "type": "DenseVector", "declarator": "max", "var_name": "max"}, {"original_string": "public DenseVector normL1;", "modifier": "public", "type": "DenseVector", "declarator": "normL1", "var_name": "normL1"}, {"original_string": "public DenseVector numNonZero;", "modifier": "public", "type": "DenseVector", "declarator": "numNonZero", "var_name": "numNonZero"}], "methods": [{"identifier": "DenseVectorSummarizer", "parameters": "()", "modifiers": "", "return": "", "signature": " DenseVectorSummarizer()", "full_signature": "  DenseVectorSummarizer()", "class_method_signature": "DenseVectorSummarizer.DenseVectorSummarizer()", "testcase": false, "constructor": true}, {"identifier": "DenseVectorSummarizer", "parameters": "(boolean calculateOuterProduction)", "modifiers": "public", "return": "", "signature": " DenseVectorSummarizer(boolean calculateOuterProduction)", "full_signature": "public  DenseVectorSummarizer(boolean calculateOuterProduction)", "class_method_signature": "DenseVectorSummarizer.DenseVectorSummarizer(boolean calculateOuterProduction)", "testcase": false, "constructor": true}, {"identifier": "visit", "parameters": "(Vector vec)", "modifiers": "@Override public", "return": "BaseVectorSummarizer", "signature": "BaseVectorSummarizer visit(Vector vec)", "full_signature": "@Override public BaseVectorSummarizer visit(Vector vec)", "class_method_signature": "DenseVectorSummarizer.visit(Vector vec)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(int n)", "modifiers": "private", "return": "void", "signature": "void init(int n)", "full_signature": "private void init(int n)", "class_method_signature": "DenseVectorSummarizer.init(int n)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DenseVectorSummarizer.toString()", "testcase": false, "constructor": false}, {"identifier": "toSummary", "parameters": "()", "modifiers": "@Override public", "return": "BaseVectorSummary", "signature": "BaseVectorSummary toSummary()", "full_signature": "@Override public BaseVectorSummary toSummary()", "class_method_signature": "DenseVectorSummarizer.toSummary()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "protected", "return": "DenseVectorSummarizer", "signature": "DenseVectorSummarizer copy()", "full_signature": "protected DenseVectorSummarizer copy()", "class_method_signature": "DenseVectorSummarizer.copy()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/common/statistics/basicstatistic/DenseVectorSummarizer.java"}, "focal_method": {"identifier": "toSummary", "parameters": "()", "modifiers": "@Override public", "return": "BaseVectorSummary", "body": "@Override\n    public BaseVectorSummary toSummary() {\n        DenseVectorSummary summary = new DenseVectorSummary();\n        summary.count = count;\n        summary.sum = sum;\n        summary.squareSum = squareSum;\n        summary.normL1 = normL1;\n        summary.min = min;\n        summary.max = max;\n\n        return summary;\n    }", "signature": "BaseVectorSummary toSummary()", "full_signature": "@Override public BaseVectorSummary toSummary()", "class_method_signature": "DenseVectorSummarizer.toSummary()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}