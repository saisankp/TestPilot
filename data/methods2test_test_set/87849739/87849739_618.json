{"test_class": {"identifier": "ImmutableDittoLoggingAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CORRELATION_ID_KEY = CommonMdcEntryKey.CORRELATION_ID.toString();", "modifier": "private static final", "type": "String", "declarator": "CORRELATION_ID_KEY = CommonMdcEntryKey.CORRELATION_ID.toString()", "var_name": "CORRELATION_ID_KEY"}, {"original_string": "private static final String CONNECTION_ID_KEY = \"connection-id\";", "modifier": "private static final", "type": "String", "declarator": "CONNECTION_ID_KEY = \"connection-id\"", "var_name": "CONNECTION_ID_KEY"}, {"original_string": "private static final String CONNECTION_ID_VALUE = \"my-connection\";", "modifier": "private static final", "type": "String", "declarator": "CONNECTION_ID_VALUE = \"my-connection\"", "var_name": "CONNECTION_ID_VALUE"}, {"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "@Mock\n    private DiagnosticLoggingAdapter loggingAdapterWithNonEmptyMdc;", "modifier": "@Mock\n    private", "type": "DiagnosticLoggingAdapter", "declarator": "loggingAdapterWithNonEmptyMdc", "var_name": "loggingAdapterWithNonEmptyMdc"}, {"original_string": "@Mock\n    private DiagnosticLoggingAdapter loggingAdapterWithEmptyMdc;", "modifier": "@Mock\n    private", "type": "DiagnosticLoggingAdapter", "declarator": "loggingAdapterWithEmptyMdc", "var_name": "loggingAdapterWithEmptyMdc"}, {"original_string": "@Mock\n    private Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory;", "modifier": "@Mock\n    private", "type": "Supplier<DiagnosticLoggingAdapter>", "declarator": "diagnosticLoggingAdapterFactory", "var_name": "diagnosticLoggingAdapterFactory"}], "file": "services/utils/akka/src/test/java/org/eclipse/ditto/services/utils/akka/logging/ImmutableDittoLoggingAdapterTest.java"}, "test_case": {"identifier": "getInstanceWithNullDiagnosticLoggingAdapterFactory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getInstanceWithNullDiagnosticLoggingAdapterFactory() {\n        assertThatNullPointerException()\n                .isThrownBy(() -> ImmutableDittoLoggingAdapter.of(null))\n                .withMessage(\"The diagnosticLoggingAdapterFactory must not be null!\")\n                .withNoCause();\n    }", "signature": "void getInstanceWithNullDiagnosticLoggingAdapterFactory()", "full_signature": "@Test public void getInstanceWithNullDiagnosticLoggingAdapterFactory()", "class_method_signature": "ImmutableDittoLoggingAdapterTest.getInstanceWithNullDiagnosticLoggingAdapterFactory()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatNullPointerException", "of"]}, "focal_class": {"identifier": "ImmutableDittoLoggingAdapter", "superclass": "extends ThreadSafeDittoLoggingAdapter", "interfaces": "", "fields": [{"original_string": "private final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory;", "modifier": "private final", "type": "Supplier<DiagnosticLoggingAdapter>", "declarator": "diagnosticLoggingAdapterFactory", "var_name": "diagnosticLoggingAdapterFactory"}, {"original_string": "private final DiagnosticLoggingAdapter loggingAdapter;", "modifier": "private final", "type": "DiagnosticLoggingAdapter", "declarator": "loggingAdapter", "var_name": "loggingAdapter"}], "methods": [{"identifier": "ImmutableDittoLoggingAdapter", "parameters": "(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "modifiers": "private", "return": "", "signature": " ImmutableDittoLoggingAdapter(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "full_signature": "private  ImmutableDittoLoggingAdapter(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "class_method_signature": "ImmutableDittoLoggingAdapter.ImmutableDittoLoggingAdapter(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "modifiers": "static", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter of(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "full_signature": "static ImmutableDittoLoggingAdapter of(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "class_method_signature": "ImmutableDittoLoggingAdapter.of(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(\n            final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory, final Map<String, Object> mdc)", "modifiers": "private static", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter newInstance(\n            final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory, final Map<String, Object> mdc)", "full_signature": "private static ImmutableDittoLoggingAdapter newInstance(\n            final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory, final Map<String, Object> mdc)", "class_method_signature": "ImmutableDittoLoggingAdapter.newInstance(\n            final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory, final Map<String, Object> mdc)", "testcase": false, "constructor": false}, {"identifier": "withCorrelationId", "parameters": "(@Nullable final CharSequence correlationId)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter withCorrelationId(@Nullable final CharSequence correlationId)", "full_signature": "@Override public ImmutableDittoLoggingAdapter withCorrelationId(@Nullable final CharSequence correlationId)", "class_method_signature": "ImmutableDittoLoggingAdapter.withCorrelationId(@Nullable final CharSequence correlationId)", "testcase": false, "constructor": false}, {"identifier": "withCorrelationId", "parameters": "(final WithDittoHeaders<?> withDittoHeaders)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter withCorrelationId(final WithDittoHeaders<?> withDittoHeaders)", "full_signature": "@Override public ImmutableDittoLoggingAdapter withCorrelationId(final WithDittoHeaders<?> withDittoHeaders)", "class_method_signature": "ImmutableDittoLoggingAdapter.withCorrelationId(final WithDittoHeaders<?> withDittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "withCorrelationId", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter withCorrelationId(final DittoHeaders dittoHeaders)", "full_signature": "@Override public ImmutableDittoLoggingAdapter withCorrelationId(final DittoHeaders dittoHeaders)", "class_method_signature": "ImmutableDittoLoggingAdapter.withCorrelationId(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "discardCorrelationId", "parameters": "()", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter discardCorrelationId()", "full_signature": "@Override public ImmutableDittoLoggingAdapter discardCorrelationId()", "class_method_signature": "ImmutableDittoLoggingAdapter.discardCorrelationId()", "testcase": false, "constructor": false}, {"identifier": "withMdcEntry", "parameters": "(final CharSequence key, @Nullable final CharSequence value)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter withMdcEntry(final CharSequence key, @Nullable final CharSequence value)", "full_signature": "@Override public ImmutableDittoLoggingAdapter withMdcEntry(final CharSequence key, @Nullable final CharSequence value)", "class_method_signature": "ImmutableDittoLoggingAdapter.withMdcEntry(final CharSequence key, @Nullable final CharSequence value)", "testcase": false, "constructor": false}, {"identifier": "getMdc", "parameters": "()", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> getMdc()", "full_signature": "private Map<String, Object> getMdc()", "class_method_signature": "ImmutableDittoLoggingAdapter.getMdc()", "testcase": false, "constructor": false}, {"identifier": "validateMdcEntryKey", "parameters": "(final CharSequence key, final String argumentName)", "modifiers": "private static", "return": "void", "signature": "void validateMdcEntryKey(final CharSequence key, final String argumentName)", "full_signature": "private static void validateMdcEntryKey(final CharSequence key, final String argumentName)", "class_method_signature": "ImmutableDittoLoggingAdapter.validateMdcEntryKey(final CharSequence key, final String argumentName)", "testcase": false, "constructor": false}, {"identifier": "getCopyOfMdc", "parameters": "()", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> getCopyOfMdc()", "full_signature": "private Map<String, Object> getCopyOfMdc()", "class_method_signature": "ImmutableDittoLoggingAdapter.getCopyOfMdc()", "testcase": false, "constructor": false}, {"identifier": "setMdc", "parameters": "(final Map<String, Object> mdc)", "modifiers": "private", "return": "void", "signature": "void setMdc(final Map<String, Object> mdc)", "full_signature": "private void setMdc(final Map<String, Object> mdc)", "class_method_signature": "ImmutableDittoLoggingAdapter.setMdc(final Map<String, Object> mdc)", "testcase": false, "constructor": false}, {"identifier": "withMdcEntries", "parameters": "(final CharSequence k1, @Nullable final CharSequence v1,\n            final CharSequence k2, @Nullable final CharSequence v2)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter withMdcEntries(final CharSequence k1, @Nullable final CharSequence v1,\n            final CharSequence k2, @Nullable final CharSequence v2)", "full_signature": "@Override public ImmutableDittoLoggingAdapter withMdcEntries(final CharSequence k1, @Nullable final CharSequence v1,\n            final CharSequence k2, @Nullable final CharSequence v2)", "class_method_signature": "ImmutableDittoLoggingAdapter.withMdcEntries(final CharSequence k1, @Nullable final CharSequence v1,\n            final CharSequence k2, @Nullable final CharSequence v2)", "testcase": false, "constructor": false}, {"identifier": "putOrRemove", "parameters": "(final CharSequence key, @Nullable final CharSequence value,\n            final Map<String, Object> map)", "modifiers": "private static", "return": "void", "signature": "void putOrRemove(final CharSequence key, @Nullable final CharSequence value,\n            final Map<String, Object> map)", "full_signature": "private static void putOrRemove(final CharSequence key, @Nullable final CharSequence value,\n            final Map<String, Object> map)", "class_method_signature": "ImmutableDittoLoggingAdapter.putOrRemove(final CharSequence key, @Nullable final CharSequence value,\n            final Map<String, Object> map)", "testcase": false, "constructor": false}, {"identifier": "withMdcEntries", "parameters": "(final CharSequence k1, @Nullable final CharSequence v1,\n            final CharSequence k2, @Nullable final CharSequence v2,\n            final CharSequence k3, @Nullable final CharSequence v3)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter withMdcEntries(final CharSequence k1, @Nullable final CharSequence v1,\n            final CharSequence k2, @Nullable final CharSequence v2,\n            final CharSequence k3, @Nullable final CharSequence v3)", "full_signature": "@Override public ImmutableDittoLoggingAdapter withMdcEntries(final CharSequence k1, @Nullable final CharSequence v1,\n            final CharSequence k2, @Nullable final CharSequence v2,\n            final CharSequence k3, @Nullable final CharSequence v3)", "class_method_signature": "ImmutableDittoLoggingAdapter.withMdcEntries(final CharSequence k1, @Nullable final CharSequence v1,\n            final CharSequence k2, @Nullable final CharSequence v2,\n            final CharSequence k3, @Nullable final CharSequence v3)", "testcase": false, "constructor": false}, {"identifier": "withMdcEntry", "parameters": "(final MdcEntry mdcEntry, final Seq<MdcEntry> furtherMdcEntries)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter withMdcEntry(final MdcEntry mdcEntry, final Seq<MdcEntry> furtherMdcEntries)", "full_signature": "@Override public ImmutableDittoLoggingAdapter withMdcEntry(final MdcEntry mdcEntry, final Seq<MdcEntry> furtherMdcEntries)", "class_method_signature": "ImmutableDittoLoggingAdapter.withMdcEntry(final MdcEntry mdcEntry, final Seq<MdcEntry> furtherMdcEntries)", "testcase": false, "constructor": false}, {"identifier": "withMdcEntry", "parameters": "(final MdcEntry mdcEntry, final MdcEntry... furtherMdcEntries)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter withMdcEntry(final MdcEntry mdcEntry, final MdcEntry... furtherMdcEntries)", "full_signature": "@Override public ImmutableDittoLoggingAdapter withMdcEntry(final MdcEntry mdcEntry, final MdcEntry... furtherMdcEntries)", "class_method_signature": "ImmutableDittoLoggingAdapter.withMdcEntry(final MdcEntry mdcEntry, final MdcEntry... furtherMdcEntries)", "testcase": false, "constructor": false}, {"identifier": "removeMdcEntry", "parameters": "(final CharSequence key)", "modifiers": "@Override public", "return": "ImmutableDittoLoggingAdapter", "signature": "ImmutableDittoLoggingAdapter removeMdcEntry(final CharSequence key)", "full_signature": "@Override public ImmutableDittoLoggingAdapter removeMdcEntry(final CharSequence key)", "class_method_signature": "ImmutableDittoLoggingAdapter.removeMdcEntry(final CharSequence key)", "testcase": false, "constructor": false}, {"identifier": "isErrorEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isErrorEnabled()", "full_signature": "@Override public boolean isErrorEnabled()", "class_method_signature": "ImmutableDittoLoggingAdapter.isErrorEnabled()", "testcase": false, "constructor": false}, {"identifier": "isWarningEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWarningEnabled()", "full_signature": "@Override public boolean isWarningEnabled()", "class_method_signature": "ImmutableDittoLoggingAdapter.isWarningEnabled()", "testcase": false, "constructor": false}, {"identifier": "isInfoEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isInfoEnabled()", "full_signature": "@Override public boolean isInfoEnabled()", "class_method_signature": "ImmutableDittoLoggingAdapter.isInfoEnabled()", "testcase": false, "constructor": false}, {"identifier": "isDebugEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDebugEnabled()", "full_signature": "@Override public boolean isDebugEnabled()", "class_method_signature": "ImmutableDittoLoggingAdapter.isDebugEnabled()", "testcase": false, "constructor": false}, {"identifier": "notifyError", "parameters": "(final String message)", "modifiers": "@Override public", "return": "void", "signature": "void notifyError(final String message)", "full_signature": "@Override public void notifyError(final String message)", "class_method_signature": "ImmutableDittoLoggingAdapter.notifyError(final String message)", "testcase": false, "constructor": false}, {"identifier": "notifyError", "parameters": "(final Throwable cause, final String message)", "modifiers": "@Override public", "return": "void", "signature": "void notifyError(final Throwable cause, final String message)", "full_signature": "@Override public void notifyError(final Throwable cause, final String message)", "class_method_signature": "ImmutableDittoLoggingAdapter.notifyError(final Throwable cause, final String message)", "testcase": false, "constructor": false}, {"identifier": "notifyWarning", "parameters": "(final String message)", "modifiers": "@Override public", "return": "void", "signature": "void notifyWarning(final String message)", "full_signature": "@Override public void notifyWarning(final String message)", "class_method_signature": "ImmutableDittoLoggingAdapter.notifyWarning(final String message)", "testcase": false, "constructor": false}, {"identifier": "notifyInfo", "parameters": "(final String message)", "modifiers": "@Override public", "return": "void", "signature": "void notifyInfo(final String message)", "full_signature": "@Override public void notifyInfo(final String message)", "class_method_signature": "ImmutableDittoLoggingAdapter.notifyInfo(final String message)", "testcase": false, "constructor": false}, {"identifier": "notifyDebug", "parameters": "(final String message)", "modifiers": "@Override public", "return": "void", "signature": "void notifyDebug(final String message)", "full_signature": "@Override public void notifyDebug(final String message)", "class_method_signature": "ImmutableDittoLoggingAdapter.notifyDebug(final String message)", "testcase": false, "constructor": false}], "file": "services/utils/akka/src/main/java/org/eclipse/ditto/services/utils/akka/logging/ImmutableDittoLoggingAdapter.java"}, "focal_method": {"identifier": "of", "parameters": "(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "modifiers": "static", "return": "ImmutableDittoLoggingAdapter", "body": "static ImmutableDittoLoggingAdapter of(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory) {\n        return newInstance(checkNotNull(diagnosticLoggingAdapterFactory, \"diagnosticLoggingAdapterFactory\"), Map.of());\n    }", "signature": "ImmutableDittoLoggingAdapter of(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "full_signature": "static ImmutableDittoLoggingAdapter of(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "class_method_signature": "ImmutableDittoLoggingAdapter.of(final Supplier<DiagnosticLoggingAdapter> diagnosticLoggingAdapterFactory)", "testcase": false, "constructor": false, "invocations": ["newInstance", "checkNotNull", "of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}