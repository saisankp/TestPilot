{"test_class": {"identifier": "StubModeEvaluatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_GROUPNAME = \"test\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_GROUPNAME = \"test\"", "var_name": "DEFAULT_GROUPNAME"}, {"original_string": "private static final String DIALOG_DESCRIPTOR_NAME_FOR_STUB_MODE = \"dialog-descriptor-for-stub-mode\";", "modifier": "private static final", "type": "String", "declarator": "DIALOG_DESCRIPTOR_NAME_FOR_STUB_MODE = \"dialog-descriptor-for-stub-mode\"", "var_name": "DIALOG_DESCRIPTOR_NAME_FOR_STUB_MODE"}, {"original_string": "private byte[] resource;", "modifier": "private", "type": "byte[]", "declarator": "resource", "var_name": "resource"}, {"original_string": "private Map<String, StubDescriptor> stubDescriptors;", "modifier": "private", "type": "Map<String, StubDescriptor>", "declarator": "stubDescriptors", "var_name": "stubDescriptors"}, {"original_string": "private StubDescriptorAttributes attributes;", "modifier": "private", "type": "StubDescriptorAttributes", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "private ResponseDescriptorAttributes responseDescriptorAttributes;", "modifier": "private", "type": "ResponseDescriptorAttributes", "declarator": "responseDescriptorAttributes", "var_name": "responseDescriptorAttributes"}, {"original_string": "@Mock\n    private DialogDescriptorFactory dialogDescriptorFactory;", "modifier": "@Mock\n    private", "type": "DialogDescriptorFactory", "declarator": "dialogDescriptorFactory", "var_name": "dialogDescriptorFactory"}, {"original_string": "@Mock\n    private ResponseDescriptorDtoFactory responseDescriptorDtoFactory;", "modifier": "@Mock\n    private", "type": "ResponseDescriptorDtoFactory", "declarator": "responseDescriptorDtoFactory", "var_name": "responseDescriptorDtoFactory"}, {"original_string": "@Mock\n    private StubDescriptor stubDescriptor;", "modifier": "@Mock\n    private", "type": "StubDescriptor", "declarator": "stubDescriptor", "var_name": "stubDescriptor"}, {"original_string": "@Mock\n    private ResponseDescriptorDTO responseDescriptorDTO;", "modifier": "@Mock\n    private", "type": "ResponseDescriptorDTO", "declarator": "responseDescriptorDTO", "var_name": "responseDescriptorDTO"}, {"original_string": "@Mock\n    private DialogDescriptor dialogDescriptor;", "modifier": "@Mock\n    private", "type": "DialogDescriptor", "declarator": "dialogDescriptor", "var_name": "dialogDescriptor"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private ResponseDescriptor responseDescriptor;", "modifier": "@Mock\n    private", "type": "ResponseDescriptor", "declarator": "responseDescriptor", "var_name": "responseDescriptor"}, {"original_string": "@Mock\n    private Template template;", "modifier": "@Mock\n    private", "type": "Template", "declarator": "template", "var_name": "template"}, {"original_string": "@InjectMocks\n    private StubModeEvaluator underTest;", "modifier": "@InjectMocks\n    private", "type": "StubModeEvaluator", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-route-engine/src/test/java/com/epam/wilma/router/evaluation/StubModeEvaluatorTest.java"}, "test_case": {"identifier": "testGetResponseDescriptorForStubModeShouldReturnNullWhenOperationModeIsWilma", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetResponseDescriptorForStubModeShouldReturnNullWhenOperationModeIsWilma() {\n        //GIVEN\n        //WHEN\n        ResponseDescriptorDTO result = underTest.getResponseDescriptorForStubMode(request, OperationMode.WILMA);\n        //THEN\n        Assert.assertNull(result);\n    }", "signature": "void testGetResponseDescriptorForStubModeShouldReturnNullWhenOperationModeIsWilma()", "full_signature": "@Test public void testGetResponseDescriptorForStubModeShouldReturnNullWhenOperationModeIsWilma()", "class_method_signature": "StubModeEvaluatorTest.testGetResponseDescriptorForStubModeShouldReturnNullWhenOperationModeIsWilma()", "testcase": true, "constructor": false, "invocations": ["getResponseDescriptorForStubMode", "assertNull"]}, "focal_class": {"identifier": "StubModeEvaluator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DIALOG_DESCRIPTOR_NAME_FOR_STUB_MODE = \"dialog-descriptor-for-stub-mode\";", "modifier": "private static final", "type": "String", "declarator": "DIALOG_DESCRIPTOR_NAME_FOR_STUB_MODE = \"dialog-descriptor-for-stub-mode\"", "var_name": "DIALOG_DESCRIPTOR_NAME_FOR_STUB_MODE"}, {"original_string": "private DialogDescriptor dialogDescriptorForStub;", "modifier": "private", "type": "DialogDescriptor", "declarator": "dialogDescriptorForStub", "var_name": "dialogDescriptorForStub"}, {"original_string": "@Autowired\n    private DialogDescriptorFactory dialogDescriptorFactory;", "modifier": "@Autowired\n    private", "type": "DialogDescriptorFactory", "declarator": "dialogDescriptorFactory", "var_name": "dialogDescriptorFactory"}, {"original_string": "@Autowired\n    private ResponseDescriptorDtoFactory responseDescriptorDtoFactory;", "modifier": "@Autowired\n    private", "type": "ResponseDescriptorDtoFactory", "declarator": "responseDescriptorDtoFactory", "var_name": "responseDescriptorDtoFactory"}], "methods": [{"identifier": "getResponseDescriptorForStubMode", "parameters": "(final WilmaHttpRequest request, final OperationMode operationMode)", "modifiers": "public", "return": "ResponseDescriptorDTO", "signature": "ResponseDescriptorDTO getResponseDescriptorForStubMode(final WilmaHttpRequest request, final OperationMode operationMode)", "full_signature": "public ResponseDescriptorDTO getResponseDescriptorForStubMode(final WilmaHttpRequest request, final OperationMode operationMode)", "class_method_signature": "StubModeEvaluator.getResponseDescriptorForStubMode(final WilmaHttpRequest request, final OperationMode operationMode)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-route-engine/src/main/java/com/epam/wilma/router/evaluation/StubModeEvaluator.java"}, "focal_method": {"identifier": "getResponseDescriptorForStubMode", "parameters": "(final WilmaHttpRequest request, final OperationMode operationMode)", "modifiers": "public", "return": "ResponseDescriptorDTO", "body": "public ResponseDescriptorDTO getResponseDescriptorForStubMode(final WilmaHttpRequest request, final OperationMode operationMode) {\n        ResponseDescriptorDTO responseDescriptorDTOForStub = null;\n        if (operationMode == OperationMode.STUB) {\n            if (dialogDescriptorForStub == null) {\n                dialogDescriptorForStub = dialogDescriptorFactory.createDialogDescriptorForStubMode(DIALOG_DESCRIPTOR_NAME_FOR_STUB_MODE);\n            }\n            responseDescriptorDTOForStub = responseDescriptorDtoFactory.createResponseDescriptorDTO(request.getBody(), dialogDescriptorForStub);\n            responseDescriptorDtoFactory.modifyResponseDescriptorDTOForStubMode(request, responseDescriptorDTOForStub);\n        }\n        return responseDescriptorDTOForStub;\n    }", "signature": "ResponseDescriptorDTO getResponseDescriptorForStubMode(final WilmaHttpRequest request, final OperationMode operationMode)", "full_signature": "public ResponseDescriptorDTO getResponseDescriptorForStubMode(final WilmaHttpRequest request, final OperationMode operationMode)", "class_method_signature": "StubModeEvaluator.getResponseDescriptorForStubMode(final WilmaHttpRequest request, final OperationMode operationMode)", "testcase": false, "constructor": false, "invocations": ["createDialogDescriptorForStubMode", "createResponseDescriptorDTO", "getBody", "modifyResponseDescriptorDTOForStubMode"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}