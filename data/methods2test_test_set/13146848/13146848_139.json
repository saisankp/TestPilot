{"test_class": {"identifier": "SplitByPagesParametersTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/parameter/SplitByPagesParametersTest.java"}, "test_case": {"identifier": "getPages", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getPages() {\n        SplitByPagesParameters victim = new SplitByPagesParameters();\n        victim.addPage(1);\n        victim.addPage(10);\n        assertEquals(1, victim.getPages(5).size());\n        assertEquals(2, victim.getPages(15).size());\n    }", "signature": "void getPages()", "full_signature": "@Test public void getPages()", "class_method_signature": "SplitByPagesParametersTest.getPages()", "testcase": true, "constructor": false, "invocations": ["addPage", "addPage", "assertEquals", "size", "getPages", "assertEquals", "size", "getPages"]}, "focal_class": {"identifier": "SplitByPagesParameters", "superclass": "extends AbstractSplitByPageParameters", "interfaces": "", "fields": [{"original_string": "@NotEmpty\n    private final Set<Integer> pages = new NullSafeSet<Integer>();", "modifier": "@NotEmpty\n    private final", "type": "Set<Integer>", "declarator": "pages = new NullSafeSet<Integer>()", "var_name": "pages"}], "methods": [{"identifier": "addPages", "parameters": "(Collection<Integer> pagesToAdd)", "modifiers": "public", "return": "void", "signature": "void addPages(Collection<Integer> pagesToAdd)", "full_signature": "public void addPages(Collection<Integer> pagesToAdd)", "class_method_signature": "SplitByPagesParameters.addPages(Collection<Integer> pagesToAdd)", "testcase": false, "constructor": false}, {"identifier": "addPage", "parameters": "(Integer page)", "modifiers": "public", "return": "void", "signature": "void addPage(Integer page)", "full_signature": "public void addPage(Integer page)", "class_method_signature": "SplitByPagesParameters.addPage(Integer page)", "testcase": false, "constructor": false}, {"identifier": "getPages", "parameters": "(int upperLimit)", "modifiers": "@Override public", "return": "Set<Integer>", "signature": "Set<Integer> getPages(int upperLimit)", "full_signature": "@Override public Set<Integer> getPages(int upperLimit)", "class_method_signature": "SplitByPagesParameters.getPages(int upperLimit)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SplitByPagesParameters.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SplitByPagesParameters.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SplitByPagesParameters.equals(Object other)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/parameter/SplitByPagesParameters.java"}, "focal_method": {"identifier": "getPages", "parameters": "(int upperLimit)", "modifiers": "@Override public", "return": "Set<Integer>", "body": "@Override\n    public Set<Integer> getPages(int upperLimit) {\n        return Collections\n                .unmodifiableSet(pages.stream().filter(p -> p <= upperLimit && p > 0).collect(Collectors.toSet()));\n    }", "signature": "Set<Integer> getPages(int upperLimit)", "full_signature": "@Override public Set<Integer> getPages(int upperLimit)", "class_method_signature": "SplitByPagesParameters.getPages(int upperLimit)", "testcase": false, "constructor": false, "invocations": ["unmodifiableSet", "collect", "filter", "stream", "toSet"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}