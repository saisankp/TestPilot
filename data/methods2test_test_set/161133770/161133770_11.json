{"test_class": {"identifier": "JsonUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "ingestion/src/test/java/feast/ingestion/utils/JsonUtilTest.java"}, "test_case": {"identifier": "convertJsonStringToMapShouldConvertJsonStringToMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void convertJsonStringToMapShouldConvertJsonStringToMap() {\n    String input = \"{\\\"key\\\": \\\"value\\\"}\";\n    Map<String, String> expected = new HashMap<>();\n    expected.put(\"key\", \"value\");\n    assertThat(JsonUtil.convertJsonStringToMap(input), equalTo(expected));\n  }", "signature": "void convertJsonStringToMapShouldConvertJsonStringToMap()", "full_signature": "@Test public void convertJsonStringToMapShouldConvertJsonStringToMap()", "class_method_signature": "JsonUtilTest.convertJsonStringToMapShouldConvertJsonStringToMap()", "testcase": true, "constructor": false, "invocations": ["put", "assertThat", "convertJsonStringToMap", "equalTo"]}, "focal_class": {"identifier": "JsonUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Gson gson = new Gson();", "modifier": "private static", "type": "Gson", "declarator": "gson = new Gson()", "var_name": "gson"}], "methods": [{"identifier": "convertJsonStringToMap", "parameters": "(String jsonString)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> convertJsonStringToMap(String jsonString)", "full_signature": "public static Map<String, String> convertJsonStringToMap(String jsonString)", "class_method_signature": "JsonUtil.convertJsonStringToMap(String jsonString)", "testcase": false, "constructor": false}], "file": "ingestion/src/main/java/feast/ingestion/utils/JsonUtil.java"}, "focal_method": {"identifier": "convertJsonStringToMap", "parameters": "(String jsonString)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> convertJsonStringToMap(String jsonString) {\n    if (jsonString == null || jsonString.equals(\"\") || jsonString.equals(\"{}\")) {\n      return Collections.emptyMap();\n    }\n    Type stringMapType = new TypeToken<Map<String, String>>() {}.getType();\n    return gson.fromJson(jsonString, stringMapType);\n  }", "signature": "Map<String, String> convertJsonStringToMap(String jsonString)", "full_signature": "public static Map<String, String> convertJsonStringToMap(String jsonString)", "class_method_signature": "JsonUtil.convertJsonStringToMap(String jsonString)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "emptyMap", "getType", "fromJson"]}, "repository": {"repo_id": 161133770, "url": "https://github.com/gojek/feast", "stars": 633, "created": "12/10/2018 7:20:15 AM +00:00", "updates": "2020-01-27T12:39:33+00:00", "fork": "False", "license": "licensed"}}