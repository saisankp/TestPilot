{"test_class": {"identifier": "ThreadPoolSupportTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ThreadPoolSupport pool;", "modifier": "private", "type": "ThreadPoolSupport", "declarator": "pool", "var_name": "pool"}, {"original_string": "private Buffer buffer;", "modifier": "private", "type": "Buffer", "declarator": "buffer", "var_name": "buffer"}], "file": "legacy/extensions/core/commons/src/test/java/org/apache/isis/legacy/commons/internal/threadpool/ThreadPoolSupportTest.java"}, "test_case": {"identifier": "shouldPreserveSequence_whenNoThread", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldPreserveSequence_whenNoThread() {\n        buffer.append(\"A\");\n        buffer.append(\"B\");\n        buffer.append(\"C\");\n        Assertions.assertEquals(\"ABC\", buffer.toString());\n    }", "signature": "void shouldPreserveSequence_whenNoThread()", "full_signature": "@Test void shouldPreserveSequence_whenNoThread()", "class_method_signature": "ThreadPoolSupportTest.shouldPreserveSequence_whenNoThread()", "testcase": true, "constructor": false, "invocations": ["append", "append", "append", "assertEquals", "toString"]}, "focal_class": {"identifier": "ThreadPoolSupport", "superclass": "", "interfaces": "implements AutoCloseable", "fields": [{"original_string": "public static ThreadPoolExecutionMode HIGHEST_CONCURRENCY_EXECUTION_MODE_ALLOWED = \n            ThreadPoolExecutionMode.PARALLEL;", "modifier": "public static", "type": "ThreadPoolExecutionMode", "declarator": "HIGHEST_CONCURRENCY_EXECUTION_MODE_ALLOWED = \n            ThreadPoolExecutionMode.PARALLEL", "var_name": "HIGHEST_CONCURRENCY_EXECUTION_MODE_ALLOWED"}, {"original_string": "private static final int KEEP_ALIVE_TIME_SECS = 5;", "modifier": "private static final", "type": "int", "declarator": "KEEP_ALIVE_TIME_SECS = 5", "var_name": "KEEP_ALIVE_TIME_SECS"}, {"original_string": "private static final int QUEUE_CAPACITY = Integer.MAX_VALUE;", "modifier": "private static final", "type": "int", "declarator": "QUEUE_CAPACITY = Integer.MAX_VALUE", "var_name": "QUEUE_CAPACITY"}, {"original_string": "private final ThreadGroup group;", "modifier": "private final", "type": "ThreadGroup", "declarator": "group", "var_name": "group"}, {"original_string": "private final ThreadPoolExecutor concurrentExecutor;", "modifier": "private final", "type": "ThreadPoolExecutor", "declarator": "concurrentExecutor", "var_name": "concurrentExecutor"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "ThreadPoolSupport", "signature": "ThreadPoolSupport getInstance()", "full_signature": "public static ThreadPoolSupport getInstance()", "class_method_signature": "ThreadPoolSupport.getInstance()", "testcase": false, "constructor": false}, {"identifier": "ThreadPoolSupport", "parameters": "()", "modifiers": "", "return": "", "signature": " ThreadPoolSupport()", "full_signature": "  ThreadPoolSupport()", "class_method_signature": "ThreadPoolSupport.ThreadPoolSupport()", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ThreadPoolSupport.close()", "testcase": false, "constructor": false}, {"identifier": "getExecutor", "parameters": "()", "modifiers": "public", "return": "Executor", "signature": "Executor getExecutor()", "full_signature": "public Executor getExecutor()", "class_method_signature": "ThreadPoolSupport.getExecutor()", "testcase": false, "constructor": false}, {"identifier": "newCompletableFuture", "parameters": "(Supplier<T> computation)", "modifiers": "public", "return": "CompletableFuture<T>", "signature": "CompletableFuture<T> newCompletableFuture(Supplier<T> computation)", "full_signature": "public CompletableFuture<T> newCompletableFuture(Supplier<T> computation)", "class_method_signature": "ThreadPoolSupport.newCompletableFuture(Supplier<T> computation)", "testcase": false, "constructor": false}, {"identifier": "invokeAll", "parameters": "(\n            final ThreadPoolExecutionMode proposedExecutionMode,\n            @Nullable final List<? extends Callable<T>> callables)", "modifiers": "public", "return": "List<Future<T>>", "signature": "List<Future<T>> invokeAll(\n            final ThreadPoolExecutionMode proposedExecutionMode,\n            @Nullable final List<? extends Callable<T>> callables)", "full_signature": "public List<Future<T>> invokeAll(\n            final ThreadPoolExecutionMode proposedExecutionMode,\n            @Nullable final List<? extends Callable<T>> callables)", "class_method_signature": "ThreadPoolSupport.invokeAll(\n            final ThreadPoolExecutionMode proposedExecutionMode,\n            @Nullable final List<? extends Callable<T>> callables)", "testcase": false, "constructor": false}, {"identifier": "invokeAll", "parameters": "(@Nullable final List<? extends Callable<T>> callables)", "modifiers": "public", "return": "List<Future<T>>", "signature": "List<Future<T>> invokeAll(@Nullable final List<? extends Callable<T>> callables)", "full_signature": "public List<Future<T>> invokeAll(@Nullable final List<? extends Callable<T>> callables)", "class_method_signature": "ThreadPoolSupport.invokeAll(@Nullable final List<? extends Callable<T>> callables)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(@Nullable final List<? extends Future<?>> futures)", "modifiers": "public", "return": "List<?>", "signature": "List<?> join(@Nullable final List<? extends Future<?>> futures)", "full_signature": "public List<?> join(@Nullable final List<? extends Future<?>> futures)", "class_method_signature": "ThreadPoolSupport.join(@Nullable final List<? extends Future<?>> futures)", "testcase": false, "constructor": false}, {"identifier": "joinGatherFailures", "parameters": "(final List<? extends Future<T>> futures)", "modifiers": "public", "return": "List<T>", "signature": "List<T> joinGatherFailures(final List<? extends Future<T>> futures)", "full_signature": "public List<T> joinGatherFailures(final List<? extends Future<T>> futures)", "class_method_signature": "ThreadPoolSupport.joinGatherFailures(final List<? extends Future<T>> futures)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(final Future<T> future)", "modifiers": "public", "return": "T", "signature": "T join(final Future<T> future)", "full_signature": "public T join(final Future<T> future)", "class_method_signature": "ThreadPoolSupport.join(final Future<T> future)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ThreadPoolSupport.toString()", "testcase": false, "constructor": false}, {"identifier": "invokeAll", "parameters": "(\n            ThreadPoolExecutor executor, \n            @Nullable final List<? extends Callable<T>> callables)", "modifiers": "private", "return": "List<Future<T>>", "signature": "List<Future<T>> invokeAll(\n            ThreadPoolExecutor executor, \n            @Nullable final List<? extends Callable<T>> callables)", "full_signature": "private List<Future<T>> invokeAll(\n            ThreadPoolExecutor executor, \n            @Nullable final List<? extends Callable<T>> callables)", "class_method_signature": "ThreadPoolSupport.invokeAll(\n            ThreadPoolExecutor executor, \n            @Nullable final List<? extends Callable<T>> callables)", "testcase": false, "constructor": false}, {"identifier": "timed", "parameters": "(\n            final ThreadPoolExecutor executor,\n            final List<? extends Callable<T>> callables)", "modifiers": "private static", "return": "List<Callable<T>>", "signature": "List<Callable<T>> timed(\n            final ThreadPoolExecutor executor,\n            final List<? extends Callable<T>> callables)", "full_signature": "private static List<Callable<T>> timed(\n            final ThreadPoolExecutor executor,\n            final List<? extends Callable<T>> callables)", "class_method_signature": "ThreadPoolSupport.timed(\n            final ThreadPoolExecutor executor,\n            final List<? extends Callable<T>> callables)", "testcase": false, "constructor": false}, {"identifier": "timed", "parameters": "(\n            final Callable<T> callable,\n            final int queueSize,\n            final long queuedAt)", "modifiers": "private static", "return": "Callable<T>", "signature": "Callable<T> timed(\n            final Callable<T> callable,\n            final int queueSize,\n            final long queuedAt)", "full_signature": "private static Callable<T> timed(\n            final Callable<T> callable,\n            final int queueSize,\n            final long queuedAt)", "class_method_signature": "ThreadPoolSupport.timed(\n            final Callable<T> callable,\n            final int queueSize,\n            final long queuedAt)", "testcase": false, "constructor": false}, {"identifier": "toSingleTask", "parameters": "(final List<? extends Callable<T>> callables)", "modifiers": "private", "return": "Callable<List<T>>", "signature": "Callable<List<T>> toSingleTask(final List<? extends Callable<T>> callables)", "full_signature": "private Callable<List<T>> toSingleTask(final List<? extends Callable<T>> callables)", "class_method_signature": "ThreadPoolSupport.toSingleTask(final List<? extends Callable<T>> callables)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(Collection<?> x)", "modifiers": "private static", "return": "boolean", "signature": "boolean isEmpty(Collection<?> x)", "full_signature": "private static boolean isEmpty(Collection<?> x)", "class_method_signature": "ThreadPoolSupport.isEmpty(Collection<?> x)", "testcase": false, "constructor": false}], "file": "legacy/extensions/core/commons/src/main/java/org/apache/isis/legacy/commons/internal/threadpool/ThreadPoolSupport.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return concurrentExecutor.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ThreadPoolSupport.toString()", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 6935442, "url": "https://github.com/apache/isis", "stars": 516, "created": "11/30/2012 8:00:24 AM +00:00", "updates": "2020-01-27T13:28:09+00:00", "fork": "False", "license": "licensed"}}