{"test_class": {"identifier": "TilesContextPropertyAccessorDelegateFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "tiles-ognl/src/test/java/org/apache/tiles/ognl/TilesContextPropertyAccessorDelegateFactoryTest.java"}, "test_case": {"identifier": "testGetPropertyAccessorRequestScopeDefault", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPropertyAccessorRequestScopeDefault() {\n        PropertyAccessor objectPropertyAccessor = createMock(PropertyAccessor.class);\n        PropertyAccessor applicationContextPropertyAccessor = createMock(PropertyAccessor.class);\n        PropertyAccessor requestScopePropertyAccessor = createMock(PropertyAccessor.class);\n        PropertyAccessor sessionScopePropertyAccessor = createMock(PropertyAccessor.class);\n        PropertyAccessor applicationScopePropertyAccessor = createMock(PropertyAccessor.class);\n        Request request = createMock(Request.class);\n        ApplicationContext applicationContext = createMock(ApplicationContext.class);\n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(\"anotherAttribute\", 1);\n\n        replay(objectPropertyAccessor, applicationContextPropertyAccessor, requestScopePropertyAccessor,\n                sessionScopePropertyAccessor, applicationScopePropertyAccessor, request, applicationContext);\n        PropertyAccessorDelegateFactory<Request> factory = new TilesContextPropertyAccessorDelegateFactory(\n                objectPropertyAccessor, applicationContextPropertyAccessor,\n                requestScopePropertyAccessor, sessionScopePropertyAccessor);\n        assertEquals(requestScopePropertyAccessor, factory.getPropertyAccessor(\"attribute\", request));\n\n        verify(objectPropertyAccessor, applicationContextPropertyAccessor, requestScopePropertyAccessor,\n                sessionScopePropertyAccessor, applicationScopePropertyAccessor, request, applicationContext);\n    }", "signature": "void testGetPropertyAccessorRequestScopeDefault()", "full_signature": "@Test public void testGetPropertyAccessorRequestScopeDefault()", "class_method_signature": "TilesContextPropertyAccessorDelegateFactoryTest.testGetPropertyAccessorRequestScopeDefault()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "createMock", "createMock", "createMock", "createMock", "createMock", "put", "replay", "assertEquals", "getPropertyAccessor", "verify"]}, "focal_class": {"identifier": "TilesContextPropertyAccessorDelegateFactory", "superclass": "", "interfaces": "implements\n        PropertyAccessorDelegateFactory<Request>", "fields": [{"original_string": "private PropertyAccessor objectPropertyAccessor;", "modifier": "private", "type": "PropertyAccessor", "declarator": "objectPropertyAccessor", "var_name": "objectPropertyAccessor"}, {"original_string": "private PropertyAccessor applicationContextPropertyAccessor;", "modifier": "private", "type": "PropertyAccessor", "declarator": "applicationContextPropertyAccessor", "var_name": "applicationContextPropertyAccessor"}, {"original_string": "private PropertyAccessor anyScopePropertyAccessor;", "modifier": "private", "type": "PropertyAccessor", "declarator": "anyScopePropertyAccessor", "var_name": "anyScopePropertyAccessor"}, {"original_string": "private PropertyAccessor scopePropertyAccessor;", "modifier": "private", "type": "PropertyAccessor", "declarator": "scopePropertyAccessor", "var_name": "scopePropertyAccessor"}, {"original_string": "private CombinedBeanInfo beanInfo;", "modifier": "private", "type": "CombinedBeanInfo", "declarator": "beanInfo", "var_name": "beanInfo"}], "methods": [{"identifier": "TilesContextPropertyAccessorDelegateFactory", "parameters": "(\n            PropertyAccessor objectPropertyAccessor,\n            PropertyAccessor applicationContextPropertyAccessor,\n            PropertyAccessor anyScopePropertyAccessor,\n            PropertyAccessor scopePropertyAccessor)", "modifiers": "public", "return": "", "signature": " TilesContextPropertyAccessorDelegateFactory(\n            PropertyAccessor objectPropertyAccessor,\n            PropertyAccessor applicationContextPropertyAccessor,\n            PropertyAccessor anyScopePropertyAccessor,\n            PropertyAccessor scopePropertyAccessor)", "full_signature": "public  TilesContextPropertyAccessorDelegateFactory(\n            PropertyAccessor objectPropertyAccessor,\n            PropertyAccessor applicationContextPropertyAccessor,\n            PropertyAccessor anyScopePropertyAccessor,\n            PropertyAccessor scopePropertyAccessor)", "class_method_signature": "TilesContextPropertyAccessorDelegateFactory.TilesContextPropertyAccessorDelegateFactory(\n            PropertyAccessor objectPropertyAccessor,\n            PropertyAccessor applicationContextPropertyAccessor,\n            PropertyAccessor anyScopePropertyAccessor,\n            PropertyAccessor scopePropertyAccessor)", "testcase": false, "constructor": true}, {"identifier": "getPropertyAccessor", "parameters": "(String propertyName,\n            Request request)", "modifiers": "public", "return": "PropertyAccessor", "signature": "PropertyAccessor getPropertyAccessor(String propertyName,\n            Request request)", "full_signature": "public PropertyAccessor getPropertyAccessor(String propertyName,\n            Request request)", "class_method_signature": "TilesContextPropertyAccessorDelegateFactory.getPropertyAccessor(String propertyName,\n            Request request)", "testcase": false, "constructor": false}], "file": "tiles-ognl/src/main/java/org/apache/tiles/ognl/TilesContextPropertyAccessorDelegateFactory.java"}, "focal_method": {"identifier": "getPropertyAccessor", "parameters": "(String propertyName,\n            Request request)", "modifiers": "public", "return": "PropertyAccessor", "body": "public PropertyAccessor getPropertyAccessor(String propertyName,\n            Request request) {\n        PropertyAccessor retValue;\n        if (propertyName.endsWith(\"Scope\")) {\n            String scopeName = propertyName.substring(0, propertyName.length()\n                    - ScopePropertyAccessor.SCOPE_SUFFIX_LENGTH);\n            if (request.getContext(scopeName) != null) {\n                return scopePropertyAccessor;\n            }\n        }\n        if (beanInfo.getMappedDescriptors(Request.class)\n                .containsKey(propertyName)) {\n            retValue = objectPropertyAccessor;\n        } else if (beanInfo.getMappedDescriptors(ApplicationContext.class)\n                .containsKey(propertyName)) {\n            retValue = applicationContextPropertyAccessor;\n        } else {\n            return anyScopePropertyAccessor;\n        }\n        return retValue;\n    }", "signature": "PropertyAccessor getPropertyAccessor(String propertyName,\n            Request request)", "full_signature": "public PropertyAccessor getPropertyAccessor(String propertyName,\n            Request request)", "class_method_signature": "TilesContextPropertyAccessorDelegateFactory.getPropertyAccessor(String propertyName,\n            Request request)", "testcase": false, "constructor": false, "invocations": ["endsWith", "substring", "length", "getContext", "containsKey", "getMappedDescriptors", "containsKey", "getMappedDescriptors"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}