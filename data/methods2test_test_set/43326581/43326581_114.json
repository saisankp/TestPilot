{"test_class": {"identifier": "ListMatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "String needle1 = \"needle1\";", "modifier": "", "type": "String", "declarator": "needle1 = \"needle1\"", "var_name": "needle1"}, {"original_string": "String needle2 = \"ndl2\";", "modifier": "", "type": "String", "declarator": "needle2 = \"ndl2\"", "var_name": "needle2"}, {"original_string": "String needle3 = \"ndl3\";", "modifier": "", "type": "String", "declarator": "needle3 = \"ndl3\"", "var_name": "needle3"}, {"original_string": "ArrayList<String> needles;", "modifier": "", "type": "ArrayList<String>", "declarator": "needles", "var_name": "needles"}, {"original_string": "ListMatcher listMatcher;", "modifier": "", "type": "ListMatcher", "declarator": "listMatcher", "var_name": "listMatcher"}], "file": "backend/src/src-cvesearch/src/test/java/org/eclipse/sw360/cvesearch/datasource/matcher/ListMatcherTest.java"}, "test_case": {"identifier": "getMatchTestFullMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getMatchTestFullMatch() {\n\n        List<Match> matches = listMatcher.getMatches(needle2);\n\n        assert(matches.get(0).getNeedle().equals(needle2));\n        assert(matches.get(0).getDistance() == 0);\n        assert(matches.get(1).getDistance() != 0);\n        assert(matches.get(2).getDistance() != 0);\n    }", "signature": "void getMatchTestFullMatch()", "full_signature": "@Test public void getMatchTestFullMatch()", "class_method_signature": "ListMatcherTest.getMatchTestFullMatch()", "testcase": true, "constructor": false, "invocations": ["getMatches", "equals", "getNeedle", "get", "getDistance", "get", "getDistance", "get", "getDistance", "get"]}, "focal_class": {"identifier": "ListMatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Collection<String> needleList;", "modifier": "private", "type": "Collection<String>", "declarator": "needleList", "var_name": "needleList"}, {"original_string": "Logger log = Logger.getLogger(ListMatcher.class);", "modifier": "", "type": "Logger", "declarator": "log = Logger.getLogger(ListMatcher.class)", "var_name": "log"}], "methods": [{"identifier": "ListMatcher", "parameters": "(Collection<String> needleList)", "modifiers": "public", "return": "", "signature": " ListMatcher(Collection<String> needleList)", "full_signature": "public  ListMatcher(Collection<String> needleList)", "class_method_signature": "ListMatcher.ListMatcher(Collection<String> needleList)", "testcase": false, "constructor": true}, {"identifier": "getMatches", "parameters": "(String haystack)", "modifiers": "public", "return": "List<Match>", "signature": "List<Match> getMatches(String haystack)", "full_signature": "public List<Match> getMatches(String haystack)", "class_method_signature": "ListMatcher.getMatches(String haystack)", "testcase": false, "constructor": false}], "file": "backend/src/src-cvesearch/src/main/java/org/eclipse/sw360/cvesearch/datasource/matcher/ListMatcher.java"}, "focal_method": {"identifier": "getMatches", "parameters": "(String haystack)", "modifiers": "public", "return": "List<Match>", "body": "public List<Match> getMatches(String haystack){\n        return needleList.stream()\n                .map(needle -> levenshteinMatch(needle, haystack))\n                .sorted((sm1,sm2) -> sm1.compareTo(sm2))\n                .collect(Collectors.toList());\n    }", "signature": "List<Match> getMatches(String haystack)", "full_signature": "public List<Match> getMatches(String haystack)", "class_method_signature": "ListMatcher.getMatches(String haystack)", "testcase": false, "constructor": false, "invocations": ["collect", "sorted", "map", "stream", "levenshteinMatch", "compareTo", "toList"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}