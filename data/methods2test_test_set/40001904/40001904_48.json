{"test_class": {"identifier": "PageTest", "superclass": "extends BaseJWPLTest", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass())", "var_name": "logger"}, {"original_string": "private static final String A_FAMOUS_PAGE = \"Wikipedia API\";", "modifier": "private static final", "type": "String", "declarator": "A_FAMOUS_PAGE = \"Wikipedia API\"", "var_name": "A_FAMOUS_PAGE"}, {"original_string": "private static final int A_FAMOUS_PAGE_ID = 1014;", "modifier": "private static final", "type": "int", "declarator": "A_FAMOUS_PAGE_ID = 1014", "var_name": "A_FAMOUS_PAGE_ID"}, {"original_string": "private static final long A_FAMOUS_PAGE_OBJECT_ID = 1;", "modifier": "private static final", "type": "long", "declarator": "A_FAMOUS_PAGE_OBJECT_ID = 1", "var_name": "A_FAMOUS_PAGE_OBJECT_ID"}, {"original_string": "private Page page;", "modifier": "private", "type": "Page", "declarator": "page", "var_name": "page"}], "file": "de.tudarmstadt.ukp.wikipedia.api/src/test/java/de/tudarmstadt/ukp/wikipedia/api/PageTest.java"}, "test_case": {"identifier": "testGetInlinks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetInlinks() {\n\t\tSet<Page> inlinks = page.getInlinks();\n\t\tassertNotNull(inlinks);\n\t\tassertFalse(inlinks.isEmpty());\n\t\tassertEquals(3, inlinks.size());\n\t}", "signature": "void testGetInlinks()", "full_signature": "@Test public void testGetInlinks()", "class_method_signature": "PageTest.testGetInlinks()", "testcase": true, "constructor": false, "invocations": ["getInlinks", "assertNotNull", "assertFalse", "isEmpty", "assertEquals", "size"]}, "focal_class": {"identifier": "Page", "superclass": "", "interfaces": "implements WikiConstants", "fields": [{"original_string": "private final Wikipedia wiki;", "modifier": "private final", "type": "Wikipedia", "declarator": "wiki", "var_name": "wiki"}, {"original_string": "private final PageDAO pageDAO;", "modifier": "private final", "type": "PageDAO", "declarator": "pageDAO", "var_name": "pageDAO"}, {"original_string": "private de.tudarmstadt.ukp.wikipedia.api.hibernate.Page hibernatePage;", "modifier": "private", "type": "de.tudarmstadt.ukp.wikipedia.api.hibernate.Page", "declarator": "hibernatePage", "var_name": "hibernatePage"}, {"original_string": "private boolean isRedirect = false;", "modifier": "private", "type": "boolean", "declarator": "isRedirect = false", "var_name": "isRedirect"}], "methods": [{"identifier": "Page", "parameters": "(Wikipedia wiki, long id)", "modifiers": "protected", "return": "", "signature": " Page(Wikipedia wiki, long id)", "full_signature": "protected  Page(Wikipedia wiki, long id)", "class_method_signature": "Page.Page(Wikipedia wiki, long id)", "testcase": false, "constructor": true}, {"identifier": "Page", "parameters": "(Wikipedia wiki, int pageID)", "modifiers": "protected", "return": "", "signature": " Page(Wikipedia wiki, int pageID)", "full_signature": "protected  Page(Wikipedia wiki, int pageID)", "class_method_signature": "Page.Page(Wikipedia wiki, int pageID)", "testcase": false, "constructor": true}, {"identifier": "Page", "parameters": "(Wikipedia wiki, String pName)", "modifiers": "public", "return": "", "signature": " Page(Wikipedia wiki, String pName)", "full_signature": "public  Page(Wikipedia wiki, String pName)", "class_method_signature": "Page.Page(Wikipedia wiki, String pName)", "testcase": false, "constructor": true}, {"identifier": "Page", "parameters": "(Wikipedia wiki, String pName, boolean useExactTitle)", "modifiers": "public", "return": "", "signature": " Page(Wikipedia wiki, String pName, boolean useExactTitle)", "full_signature": "public  Page(Wikipedia wiki, String pName, boolean useExactTitle)", "class_method_signature": "Page.Page(Wikipedia wiki, String pName, boolean useExactTitle)", "testcase": false, "constructor": true}, {"identifier": "Page", "parameters": "(Wikipedia wiki, long id,\n\t\t\tde.tudarmstadt.ukp.wikipedia.api.hibernate.Page hibernatePage)", "modifiers": "protected", "return": "", "signature": " Page(Wikipedia wiki, long id,\n\t\t\tde.tudarmstadt.ukp.wikipedia.api.hibernate.Page hibernatePage)", "full_signature": "protected  Page(Wikipedia wiki, long id,\n\t\t\tde.tudarmstadt.ukp.wikipedia.api.hibernate.Page hibernatePage)", "class_method_signature": "Page.Page(Wikipedia wiki, long id,\n\t\t\tde.tudarmstadt.ukp.wikipedia.api.hibernate.Page hibernatePage)", "testcase": false, "constructor": true}, {"identifier": "fetchByHibernateId", "parameters": "(long id)", "modifiers": "private", "return": "void", "signature": "void fetchByHibernateId(long id)", "full_signature": "private void fetchByHibernateId(long id)", "class_method_signature": "Page.fetchByHibernateId(long id)", "testcase": false, "constructor": false}, {"identifier": "fetchByPageId", "parameters": "(int pageID)", "modifiers": "private", "return": "void", "signature": "void fetchByPageId(int pageID)", "full_signature": "private void fetchByPageId(int pageID)", "class_method_signature": "Page.fetchByPageId(int pageID)", "testcase": false, "constructor": false}, {"identifier": "fetchByTitle", "parameters": "(Title pTitle, boolean useExactTitle)", "modifiers": "private", "return": "void", "signature": "void fetchByTitle(Title pTitle, boolean useExactTitle)", "full_signature": "private void fetchByTitle(Title pTitle, boolean useExactTitle)", "class_method_signature": "Page.fetchByTitle(Title pTitle, boolean useExactTitle)", "testcase": false, "constructor": false}, {"identifier": "__getId", "parameters": "()", "modifiers": "", "return": "long", "signature": "long __getId()", "full_signature": " long __getId()", "class_method_signature": "Page.__getId()", "testcase": false, "constructor": false}, {"identifier": "getPageId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPageId()", "full_signature": "public int getPageId()", "class_method_signature": "Page.getPageId()", "testcase": false, "constructor": false}, {"identifier": "getCategories", "parameters": "()", "modifiers": "public", "return": "Set<Category>", "signature": "Set<Category> getCategories()", "full_signature": "public Set<Category> getCategories()", "class_method_signature": "Page.getCategories()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfCategories", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfCategories()", "full_signature": "public int getNumberOfCategories()", "class_method_signature": "Page.getNumberOfCategories()", "testcase": false, "constructor": false}, {"identifier": "getInlinks", "parameters": "()", "modifiers": "public", "return": "Set<Page>", "signature": "Set<Page> getInlinks()", "full_signature": "public Set<Page> getInlinks()", "class_method_signature": "Page.getInlinks()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfInlinks", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfInlinks()", "full_signature": "public int getNumberOfInlinks()", "class_method_signature": "Page.getNumberOfInlinks()", "testcase": false, "constructor": false}, {"identifier": "getInlinkIDs", "parameters": "()", "modifiers": "public", "return": "Set<Integer>", "signature": "Set<Integer> getInlinkIDs()", "full_signature": "public Set<Integer> getInlinkIDs()", "class_method_signature": "Page.getInlinkIDs()", "testcase": false, "constructor": false}, {"identifier": "getOutlinks", "parameters": "()", "modifiers": "public", "return": "Set<Page>", "signature": "Set<Page> getOutlinks()", "full_signature": "public Set<Page> getOutlinks()", "class_method_signature": "Page.getOutlinks()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfOutlinks", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfOutlinks()", "full_signature": "public int getNumberOfOutlinks()", "class_method_signature": "Page.getNumberOfOutlinks()", "testcase": false, "constructor": false}, {"identifier": "getOutlinkIDs", "parameters": "()", "modifiers": "public", "return": "Set<Integer>", "signature": "Set<Integer> getOutlinkIDs()", "full_signature": "public Set<Integer> getOutlinkIDs()", "class_method_signature": "Page.getOutlinkIDs()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "Title", "signature": "Title getTitle()", "full_signature": "public Title getTitle()", "class_method_signature": "Page.getTitle()", "testcase": false, "constructor": false}, {"identifier": "getRedirects", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getRedirects()", "full_signature": "public Set<String> getRedirects()", "class_method_signature": "Page.getRedirects()", "testcase": false, "constructor": false}, {"identifier": "getText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getText()", "full_signature": "public String getText()", "class_method_signature": "Page.getText()", "testcase": false, "constructor": false}, {"identifier": "isDisambiguation", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDisambiguation()", "full_signature": "public boolean isDisambiguation()", "class_method_signature": "Page.isDisambiguation()", "testcase": false, "constructor": false}, {"identifier": "isRedirect", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRedirect()", "full_signature": "public boolean isRedirect()", "class_method_signature": "Page.isRedirect()", "testcase": false, "constructor": false}, {"identifier": "isDiscussion", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDiscussion()", "full_signature": "public boolean isDiscussion()", "class_method_signature": "Page.isDiscussion()", "testcase": false, "constructor": false}, {"identifier": "getPlainText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPlainText()", "full_signature": "public String getPlainText()", "class_method_signature": "Page.getPlainText()", "testcase": false, "constructor": false}, {"identifier": "parsePage", "parameters": "(AstVisitor v)", "modifiers": "private", "return": "Object", "signature": "Object parsePage(AstVisitor v)", "full_signature": "private Object parsePage(AstVisitor v)", "class_method_signature": "Page.parsePage(AstVisitor v)", "testcase": false, "constructor": false}, {"identifier": "getCompiledPage", "parameters": "()", "modifiers": "private", "return": "EngProcessedPage", "signature": "EngProcessedPage getCompiledPage()", "full_signature": "private EngProcessedPage getCompiledPage()", "class_method_signature": "Page.getCompiledPage()", "testcase": false, "constructor": false}, {"identifier": "getPageInfo", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getPageInfo()", "full_signature": "protected String getPageInfo()", "class_method_signature": "Page.getPageInfo()", "testcase": false, "constructor": false}], "file": "de.tudarmstadt.ukp.wikipedia.api/src/main/java/de/tudarmstadt/ukp/wikipedia/api/Page.java"}, "focal_method": {"identifier": "getInlinks", "parameters": "()", "modifiers": "public", "return": "Set<Page>", "body": "public Set<Page> getInlinks()\n\t{\n\t\tSession session = wiki.__getHibernateSession();\n\t\tsession.beginTransaction();\n\t\tsession.buildLockRequest(LockOptions.NONE).lock(hibernatePage);\n\t\t// Have to copy links here since getPage later will close the session.\n\t\tSet<Integer> pageIDs = new UnmodifiableArraySet<Integer>(hibernatePage.getInLinks());\n\t\tsession.getTransaction().commit();\n\n\t\tSet<Page> pages = new HashSet<Page>();\n\t\tfor (int pageID : pageIDs) {\n\t\t\ttry {\n\t\t\t\tpages.add(wiki.getPage(pageID));\n\t\t\t}\n\t\t\tcatch (WikiApiException e) {\n\t\t\t\t// Silently ignore if a page could not be found\n\t\t\t\t// There may be inlinks that do not come from an existing page.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\treturn pages;\n\t}", "signature": "Set<Page> getInlinks()", "full_signature": "public Set<Page> getInlinks()", "class_method_signature": "Page.getInlinks()", "testcase": false, "constructor": false, "invocations": ["__getHibernateSession", "beginTransaction", "lock", "buildLockRequest", "getInLinks", "commit", "getTransaction", "add", "getPage"]}, "repository": {"repo_id": 40001904, "url": "https://github.com/dkpro/dkpro-jwpl", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 68, "size": 6884, "license": "licensed"}}