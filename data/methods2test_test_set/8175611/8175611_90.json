{"test_class": {"identifier": "BasePlaceholderTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "junit4/src/test/java/com/tngtech/java/junit/dataprovider/internal/placeholder/BasePlaceholderTest.java"}, "test_case": {"identifier": "testProcessShouldReplacePlaceholderNotCauseAnStackOverflowExceptionIfPlaceholderIsReplacedbyItself", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessShouldReplacePlaceholderNotCauseAnStackOverflowExceptionIfPlaceholderIsReplacedbyItself() {\n        // Given:\n        BasePlaceholder underTest = new TestPlaceholder(\"%s\", \"%s\");\n\n        // When:\n        String result = underTest.process(\"%s\");\n\n        // Then:\n        assertThat(result).isEqualTo(\"%s\");\n    }", "signature": "void testProcessShouldReplacePlaceholderNotCauseAnStackOverflowExceptionIfPlaceholderIsReplacedbyItself()", "full_signature": "@Test public void testProcessShouldReplacePlaceholderNotCauseAnStackOverflowExceptionIfPlaceholderIsReplacedbyItself()", "class_method_signature": "BasePlaceholderTest.testProcessShouldReplacePlaceholderNotCauseAnStackOverflowExceptionIfPlaceholderIsReplacedbyItself()", "testcase": true, "constructor": false, "invocations": ["process", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "BasePlaceholder", "superclass": "extends com.tngtech.junit.dataprovider.placeholder.BasePlaceholder", "interfaces": "", "fields": [{"original_string": "protected Method method;", "modifier": "protected", "type": "Method", "declarator": "method", "var_name": "method"}, {"original_string": "protected int idx;", "modifier": "protected", "type": "int", "declarator": "idx", "var_name": "idx"}, {"original_string": "protected Object[] parameters;", "modifier": "protected", "type": "Object[]", "declarator": "parameters", "var_name": "parameters"}], "methods": [{"identifier": "BasePlaceholder", "parameters": "(String placeholderRegex)", "modifiers": "public", "return": "", "signature": " BasePlaceholder(String placeholderRegex)", "full_signature": "public  BasePlaceholder(String placeholderRegex)", "class_method_signature": "BasePlaceholder.BasePlaceholder(String placeholderRegex)", "testcase": false, "constructor": true}, {"identifier": "setContext", "parameters": "(Method method, int idx, Object[] parameters)", "modifiers": "public", "return": "void", "signature": "void setContext(Method method, int idx, Object[] parameters)", "full_signature": "public void setContext(Method method, int idx, Object[] parameters)", "class_method_signature": "BasePlaceholder.setContext(Method method, int idx, Object[] parameters)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(String formatPattern)", "modifiers": "public", "return": "String", "signature": "String process(String formatPattern)", "full_signature": "public String process(String formatPattern)", "class_method_signature": "BasePlaceholder.process(String formatPattern)", "testcase": false, "constructor": false}, {"identifier": "getReplacementFor", "parameters": "(String placeholder)", "modifiers": "protected abstract", "return": "String", "signature": "String getReplacementFor(String placeholder)", "full_signature": "protected abstract String getReplacementFor(String placeholder)", "class_method_signature": "BasePlaceholder.getReplacementFor(String placeholder)", "testcase": false, "constructor": false}], "file": "junit4/src/main/java/com/tngtech/java/junit/dataprovider/internal/placeholder/BasePlaceholder.java"}, "focal_method": {"identifier": "process", "parameters": "(String formatPattern)", "modifiers": "public", "return": "String", "body": "public String process(String formatPattern) {\n        ReplacementData data = ReplacementData.of(method, idx, Arrays.asList(parameters));\n        return super.process(data, formatPattern);\n    }", "signature": "String process(String formatPattern)", "full_signature": "public String process(String formatPattern)", "class_method_signature": "BasePlaceholder.process(String formatPattern)", "testcase": false, "constructor": false, "invocations": ["of", "asList", "process"]}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}