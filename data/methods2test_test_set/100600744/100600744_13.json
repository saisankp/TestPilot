{"test_class": {"identifier": "QueueManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private QueueManager sut;", "modifier": "private", "type": "QueueManager", "declarator": "sut", "var_name": "sut"}, {"original_string": "private JMSTestModule testModule;", "modifier": "private", "type": "JMSTestModule", "declarator": "testModule", "var_name": "testModule"}, {"original_string": "private MockQueue q1, q2;", "modifier": "private", "type": "MockQueue", "declarator": "q1", "var_name": "q1"}, {"original_string": "private LocalMessageStorage storage;", "modifier": "private", "type": "LocalMessageStorage", "declarator": "storage", "var_name": "storage"}], "file": "backend/src/test/java/jmstool/QueueManagerTest.java"}, "test_case": {"identifier": "lookupOutgoingQueues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void lookupOutgoingQueues() throws Exception {\n\t\tsut.outgoingQueues = Arrays.asList(\"java:comp/env/q1\", \"java:comp/env/q1\");\n\t\tsut.run(\"\");\n\t}", "signature": "void lookupOutgoingQueues()", "full_signature": "@Test public void lookupOutgoingQueues()", "class_method_signature": "QueueManagerTest.lookupOutgoingQueues()", "testcase": true, "constructor": false, "invocations": ["asList", "run"]}, "focal_class": {"identifier": "QueueManager", "superclass": "", "interfaces": "implements CommandLineRunner", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(this.getClass());", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(this.getClass())", "var_name": "logger"}, {"original_string": "@Value(\"${jmstool.incomingQueues:}\")\n\tprotected List<String> incomingQueues = new ArrayList<>();", "modifier": "@Value(\"${jmstool.incomingQueues:}\")\n\tprotected", "type": "List<String>", "declarator": "incomingQueues = new ArrayList<>()", "var_name": "incomingQueues"}, {"original_string": "@Value(\"${jmstool.outgoingQueues:}\")\n\tprotected List<String> outgoingQueues = new ArrayList<>();", "modifier": "@Value(\"${jmstool.outgoingQueues:}\")\n\tprotected", "type": "List<String>", "declarator": "outgoingQueues = new ArrayList<>()", "var_name": "outgoingQueues"}, {"original_string": "@Value(\"${jmstool.showMessagePropertiesForIncomingMessages:}\")\n\tprotected List<String> incomingMessagesProperties = new ArrayList<>();", "modifier": "@Value(\"${jmstool.showMessagePropertiesForIncomingMessages:}\")\n\tprotected", "type": "List<String>", "declarator": "incomingMessagesProperties = new ArrayList<>()", "var_name": "incomingMessagesProperties"}, {"original_string": "@Value(\"${jmstool.encoding:UTF-8}\")\n\tprotected String encoding;", "modifier": "@Value(\"${jmstool.encoding:UTF-8}\")\n\tprotected", "type": "String", "declarator": "encoding", "var_name": "encoding"}, {"original_string": "@Autowired\n\tprotected ConnectionFactory cf;", "modifier": "@Autowired\n\tprotected", "type": "ConnectionFactory", "declarator": "cf", "var_name": "cf"}, {"original_string": "@Resource(name = \"incomingStorage\")\n\tprotected LocalMessageStorage incomingLocalStorage;", "modifier": "@Resource(name = \"incomingStorage\")\n\tprotected", "type": "LocalMessageStorage", "declarator": "incomingLocalStorage", "var_name": "incomingLocalStorage"}, {"original_string": "private final Collection<DefaultMessageListenerContainer> containers = new ArrayList<>();", "modifier": "private final", "type": "Collection<DefaultMessageListenerContainer>", "declarator": "containers = new ArrayList<>()", "var_name": "containers"}], "methods": [{"identifier": "run", "parameters": "(String... arg0)", "modifiers": "@Override public", "return": "void", "signature": "void run(String... arg0)", "full_signature": "@Override public void run(String... arg0)", "class_method_signature": "QueueManager.run(String... arg0)", "testcase": false, "constructor": false}, {"identifier": "registerOutgoingQueue", "parameters": "(final String queue)", "modifiers": "private", "return": "void", "signature": "void registerOutgoingQueue(final String queue)", "full_signature": "private void registerOutgoingQueue(final String queue)", "class_method_signature": "QueueManager.registerOutgoingQueue(final String queue)", "testcase": false, "constructor": false}, {"identifier": "registerIncomingQueue", "parameters": "(final String queue)", "modifiers": "private", "return": "void", "signature": "void registerIncomingQueue(final String queue)", "full_signature": "private void registerIncomingQueue(final String queue)", "class_method_signature": "QueueManager.registerIncomingQueue(final String queue)", "testcase": false, "constructor": false}, {"identifier": "lookupQueue", "parameters": "(String queue)", "modifiers": "private", "return": "void", "signature": "void lookupQueue(String queue)", "full_signature": "private void lookupQueue(String queue)", "class_method_signature": "QueueManager.lookupQueue(String queue)", "testcase": false, "constructor": false}, {"identifier": "createContainer", "parameters": "(String queue)", "modifiers": "private", "return": "DefaultMessageListenerContainer", "signature": "DefaultMessageListenerContainer createContainer(String queue)", "full_signature": "private DefaultMessageListenerContainer createContainer(String queue)", "class_method_signature": "QueueManager.createContainer(String queue)", "testcase": false, "constructor": false}, {"identifier": "getOutgoingQueues", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getOutgoingQueues()", "full_signature": "public List<String> getOutgoingQueues()", "class_method_signature": "QueueManager.getOutgoingQueues()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void shutdown()", "full_signature": "@PreDestroy public void shutdown()", "class_method_signature": "QueueManager.shutdown()", "testcase": false, "constructor": false}, {"identifier": "getListenerStatus", "parameters": "()", "modifiers": "public", "return": "Map<String, Boolean>", "signature": "Map<String, Boolean> getListenerStatus()", "full_signature": "public Map<String, Boolean> getListenerStatus()", "class_method_signature": "QueueManager.getListenerStatus()", "testcase": false, "constructor": false}, {"identifier": "findContainerForQueue", "parameters": "(String queue)", "modifiers": "private", "return": "MessageListenerContainer", "signature": "MessageListenerContainer findContainerForQueue(String queue)", "full_signature": "private MessageListenerContainer findContainerForQueue(String queue)", "class_method_signature": "QueueManager.findContainerForQueue(String queue)", "testcase": false, "constructor": false}, {"identifier": "stopListener", "parameters": "(String queue)", "modifiers": "public", "return": "void", "signature": "void stopListener(String queue)", "full_signature": "public void stopListener(String queue)", "class_method_signature": "QueueManager.stopListener(String queue)", "testcase": false, "constructor": false}, {"identifier": "startListener", "parameters": "(String queue)", "modifiers": "public", "return": "void", "signature": "void startListener(String queue)", "full_signature": "public void startListener(String queue)", "class_method_signature": "QueueManager.startListener(String queue)", "testcase": false, "constructor": false}], "file": "backend/src/main/java/jmstool/QueueManager.java"}, "focal_method": {"identifier": "run", "parameters": "(String... arg0)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void run(String... arg0) throws Exception {\n\n\t\tfor (final String queue : incomingQueues) {\n\t\t\tregisterIncomingQueue(queue);\n\t\t}\n\n\t\tfor (final String queue : outgoingQueues) {\n\t\t\tregisterOutgoingQueue(queue);\n\t\t}\n\t}", "signature": "void run(String... arg0)", "full_signature": "@Override public void run(String... arg0)", "class_method_signature": "QueueManager.run(String... arg0)", "testcase": false, "constructor": false, "invocations": ["registerIncomingQueue", "registerOutgoingQueue"]}, "repository": {"repo_id": 100600744, "url": "https://github.com/0xERR0R/jmstool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 577, "license": "licensed"}}