{"test_class": {"identifier": "ProfileTemplateTest", "superclass": "extends AbstractLinkedInApiTest", "interfaces": "", "fields": [], "file": "spring-social-linkedin/src/test/java/org/springframework/social/linkedin/api/impl/ProfileTemplateTest.java"}, "test_case": {"identifier": "getUserProfileFull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getUserProfileFull() {\n\t\tmockServer.expect(requestTo(LinkedInTemplate.BASE_URL + \"~\" + ProfileTemplate.FULL_PROFILE_FIELDS + \"&oauth2_access_token=ACCESS_TOKEN\")).andExpect(method(GET))\n\t\t\t.andRespond(withSuccess(new ClassPathResource(\"profile_full.json\", getClass()), MediaType.APPLICATION_JSON));\n\n\t\tLinkedInProfileFull profile = linkedIn.profileOperations().getUserProfileFull();\n\n\t\tassertProfile(profile, \"UB2kruYmAL\", \"Software Architect\", \"Robert\", \"Drysdale\", \"Telecommunications\", null);\n\n\t\tassertEquals(\"Canoeing Ireland\", profile.getAssociations());\n\t\tassertEquals(1900, profile.getDateOfBirth().getYear());\n\t\tassertEquals(1, profile.getDateOfBirth().getMonth());\n\t\tassertEquals(1, profile.getDateOfBirth().getDay());\n\t\tassertEquals(3, profile.getEducations().size());\n\t\tassertEquals(\"MSc Innovation & Technology Management\", profile.getEducations().get(0).getDegree());\n\t\tassertEquals(\"University College Dublin\", profile.getEducations().get(0).getSchoolName());\n\t\tassertEquals(2009, profile.getEducations().get(0).getEndDate().getYear());\n\t\tassertEquals(2007, profile.getEducations().get(0).getStartDate().getYear());\n\t\tassertEquals(\"None\", profile.getHonors());\n\t\tassertEquals(1, profile.getImAccounts().size());\n\t\tassertEquals(\"robbiedrysdale\", profile.getImAccounts().get(0).getImAccountName());\n\t\tassertEquals(\"skype\", profile.getImAccounts().get(0).getImAccountType());\n\t\tassertEquals(\"Telecommunications\", profile.getIndustry());\n\t\tassertEquals(\"ie\", profile.getLocation().getCountry());\n\t\tassertEquals(\"Ireland\", profile.getLocation().getName());\n\t\tassertEquals(189, profile.getNumConnections());\n\t\tassertEquals(\"Dublin, Ireland\", profile.getMainAddress());\n\t\tassertEquals(1, profile.getMemberUrlResources().size());\n\t\tassertEquals(\"Company Website\", profile.getMemberUrlResources().get(0).getName());\n\t\tassertEquals(\"https://www.robatron.com\", profile.getMemberUrlResources().get(0).getUrl());\n\t\tassertEquals(2, profile.getNumRecommenders());\n\t\tassertEquals(\"+353 87 9580000\", profile.getPhoneNumbers().get(0).getPhoneNumber());\n\t\tassertEquals(\"mobile\", profile.getPhoneNumbers().get(0).getPhoneType());\n\t\tassertEquals(8, profile.getPositions().size());\n\t\tassertEquals(\"133861560\", profile.getPositions().get(0).getId());\n\t\tassertEquals(true, profile.getPositions().get(0).getIsCurrent());\n\t\tassertEquals(2010, profile.getPositions().get(0).getStartDate().getYear());\n\t\tassertEquals(6, profile.getPositions().get(0).getStartDate().getMonth());\n\t\tassertEquals(0, profile.getPositions().get(0).getStartDate().getDay());\n\t\tassertEquals(\"CBW at robatron, a Media Streaming startup.  Ongoing Technology research into potential new products.\", profile.getPositions().get(0).getSummary());\n\t\tassertEquals(\"CBW\", profile.getPositions().get(0).getTitle());\n\t\tassertEquals(\"Computer Software\", profile.getPositions().get(0).getCompany().getIndustry());\n\t\tassertEquals(\"robatron\", profile.getPositions().get(0).getCompany().getName());\n\t\tassertEquals(2, profile.getRecommendationsReceived().size());\n\t\tassertEquals(\"Great guy to work with, open, friendly and approachable as well as very knowledgeable on a wide range of areas outside the immediate remit of standard java development. In all an asset to any team, would be happy to work with him again.\", profile.getRecommendationsReceived().get(0).getRecommendationText());\n\t\tassertEquals(RecommendationType.COLLEAGUE, profile.getRecommendationsReceived().get(0).getRecommendationType());\n\t\tassertEquals(\"Damien\", profile.getRecommendationsReceived().get(0).getRecommender().getFirstName());\n\t\tassertEquals(3, profile.getSkills().size());\n\t\tassertEquals(\"Java\", profile.getSkills().get(0));\n\t\tassertEquals(206,profile.getSpecialties().length());\n\t\tassertEquals(462,profile.getSummary().length());\n\t\tassertEquals(\"robdrysdale\",profile.getTwitterAccounts().get(0).getProviderAccountName());\n\t}", "signature": "void getUserProfileFull()", "full_signature": "@Test public void getUserProfileFull()", "class_method_signature": "ProfileTemplateTest.getUserProfileFull()", "testcase": true, "constructor": false, "invocations": ["andRespond", "andExpect", "expect", "requestTo", "method", "withSuccess", "getClass", "getUserProfileFull", "profileOperations", "assertProfile", "assertEquals", "getAssociations", "assertEquals", "getYear", "getDateOfBirth", "assertEquals", "getMonth", "getDateOfBirth", "assertEquals", "getDay", "getDateOfBirth", "assertEquals", "size", "getEducations", "assertEquals", "getDegree", "get", "getEducations", "assertEquals", "getSchoolName", "get", "getEducations", "assertEquals", "getYear", "getEndDate", "get", "getEducations", "assertEquals", "getYear", "getStartDate", "get", "getEducations", "assertEquals", "getHonors", "assertEquals", "size", "getImAccounts", "assertEquals", "getImAccountName", "get", "getImAccounts", "assertEquals", "getImAccountType", "get", "getImAccounts", "assertEquals", "getIndustry", "assertEquals", "getCountry", "getLocation", "assertEquals", "getName", "getLocation", "assertEquals", "getNumConnections", "assertEquals", "getMainAddress", "assertEquals", "size", "getMemberUrlResources", "assertEquals", "getName", "get", "getMemberUrlResources", "assertEquals", "getUrl", "get", "getMemberUrlResources", "assertEquals", "getNumRecommenders", "assertEquals", "getPhoneNumber", "get", "getPhoneNumbers", "assertEquals", "getPhoneType", "get", "getPhoneNumbers", "assertEquals", "size", "getPositions", "assertEquals", "getId", "get", "getPositions", "assertEquals", "getIsCurrent", "get", "getPositions", "assertEquals", "getYear", "getStartDate", "get", "getPositions", "assertEquals", "getMonth", "getStartDate", "get", "getPositions", "assertEquals", "getDay", "getStartDate", "get", "getPositions", "assertEquals", "getSummary", "get", "getPositions", "assertEquals", "getTitle", "get", "getPositions", "assertEquals", "getIndustry", "getCompany", "get", "getPositions", "assertEquals", "getName", "getCompany", "get", "getPositions", "assertEquals", "size", "getRecommendationsReceived", "assertEquals", "getRecommendationText", "get", "getRecommendationsReceived", "assertEquals", "getRecommendationType", "get", "getRecommendationsReceived", "assertEquals", "getFirstName", "getRecommender", "get", "getRecommendationsReceived", "assertEquals", "size", "getSkills", "assertEquals", "get", "getSkills", "assertEquals", "length", "getSpecialties", "assertEquals", "length", "getSummary", "assertEquals", "getProviderAccountName", "get", "getTwitterAccounts"]}, "focal_class": {"identifier": "ProfileTemplate", "superclass": "extends AbstractTemplate", "interfaces": "implements ProfileOperations", "fields": [{"original_string": "private RestOperations restOperations;", "modifier": "private", "type": "RestOperations", "declarator": "restOperations", "var_name": "restOperations"}, {"original_string": "private ObjectMapper objectMapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "static final String PROFILE_FIELDS = \":(id,first-name,last-name,emailAddress,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary)?format=json\";", "modifier": "static final", "type": "String", "declarator": "PROFILE_FIELDS = \":(id,first-name,last-name,emailAddress,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary)?format=json\"", "var_name": "PROFILE_FIELDS"}, {"original_string": "static final String FULL_PROFILE_FIELDS;", "modifier": "static final", "type": "String", "declarator": "FULL_PROFILE_FIELDS", "var_name": "FULL_PROFILE_FIELDS"}, {"original_string": "static final String PEOPLE_SEARCH_URL = \"https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))\";", "modifier": "static final", "type": "String", "declarator": "PEOPLE_SEARCH_URL = \"https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))\"", "var_name": "PEOPLE_SEARCH_URL"}], "methods": [{"identifier": "ProfileTemplate", "parameters": "(RestOperations restOperations, ObjectMapper objectMapper)", "modifiers": "public", "return": "", "signature": " ProfileTemplate(RestOperations restOperations, ObjectMapper objectMapper)", "full_signature": "public  ProfileTemplate(RestOperations restOperations, ObjectMapper objectMapper)", "class_method_signature": "ProfileTemplate.ProfileTemplate(RestOperations restOperations, ObjectMapper objectMapper)", "testcase": false, "constructor": true}, {"identifier": "getProfileId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProfileId()", "full_signature": "public String getProfileId()", "class_method_signature": "ProfileTemplate.getProfileId()", "testcase": false, "constructor": false}, {"identifier": "getProfileUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProfileUrl()", "full_signature": "public String getProfileUrl()", "class_method_signature": "ProfileTemplate.getProfileUrl()", "testcase": false, "constructor": false}, {"identifier": "getUserProfile", "parameters": "()", "modifiers": "public", "return": "LinkedInProfile", "signature": "LinkedInProfile getUserProfile()", "full_signature": "public LinkedInProfile getUserProfile()", "class_method_signature": "ProfileTemplate.getUserProfile()", "testcase": false, "constructor": false}, {"identifier": "getUserProfileFull", "parameters": "()", "modifiers": "public", "return": "LinkedInProfileFull", "signature": "LinkedInProfileFull getUserProfileFull()", "full_signature": "public LinkedInProfileFull getUserProfileFull()", "class_method_signature": "ProfileTemplate.getUserProfileFull()", "testcase": false, "constructor": false}, {"identifier": "getProfileById", "parameters": "(String id)", "modifiers": "public", "return": "LinkedInProfile", "signature": "LinkedInProfile getProfileById(String id)", "full_signature": "public LinkedInProfile getProfileById(String id)", "class_method_signature": "ProfileTemplate.getProfileById(String id)", "testcase": false, "constructor": false}, {"identifier": "getProfileByPublicUrl", "parameters": "(String url)", "modifiers": "public", "return": "LinkedInProfile", "signature": "LinkedInProfile getProfileByPublicUrl(String url)", "full_signature": "public LinkedInProfile getProfileByPublicUrl(String url)", "class_method_signature": "ProfileTemplate.getProfileByPublicUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getProfileFullById", "parameters": "(String id)", "modifiers": "public", "return": "LinkedInProfileFull", "signature": "LinkedInProfileFull getProfileFullById(String id)", "full_signature": "public LinkedInProfileFull getProfileFullById(String id)", "class_method_signature": "ProfileTemplate.getProfileFullById(String id)", "testcase": false, "constructor": false}, {"identifier": "getProfileFullByPublicUrl", "parameters": "(String url)", "modifiers": "public", "return": "LinkedInProfileFull", "signature": "LinkedInProfileFull getProfileFullByPublicUrl(String url)", "full_signature": "public LinkedInProfileFull getProfileFullByPublicUrl(String url)", "class_method_signature": "ProfileTemplate.getProfileFullByPublicUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(SearchParameters parameters)", "modifiers": "public", "return": "LinkedInProfiles", "signature": "LinkedInProfiles search(SearchParameters parameters)", "full_signature": "public LinkedInProfiles search(SearchParameters parameters)", "class_method_signature": "ProfileTemplate.search(SearchParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "getUserProfile", "parameters": "(String fields, Class<T> type)", "modifiers": "private", "return": "T", "signature": "T getUserProfile(String fields, Class<T> type)", "full_signature": "private T getUserProfile(String fields, Class<T> type)", "class_method_signature": "ProfileTemplate.getUserProfile(String fields, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getProfileFullById", "parameters": "(String id, String fields, Class<T> type)", "modifiers": "private", "return": "T", "signature": "T getProfileFullById(String id, String fields, Class<T> type)", "full_signature": "private T getProfileFullById(String id, String fields, Class<T> type)", "class_method_signature": "ProfileTemplate.getProfileFullById(String id, String fields, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getProfileByPublicUrl", "parameters": "(String url, String fields, Class<T> type)", "modifiers": "private", "return": "T", "signature": "T getProfileByPublicUrl(String url, String fields, Class<T> type)", "full_signature": "private T getProfileByPublicUrl(String url, String fields, Class<T> type)", "class_method_signature": "ProfileTemplate.getProfileByPublicUrl(String url, String fields, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "expand", "parameters": "(String url, SearchParameters parameters)", "modifiers": "private", "return": "URI", "signature": "URI expand(String url, SearchParameters parameters)", "full_signature": "private URI expand(String url, SearchParameters parameters)", "class_method_signature": "ProfileTemplate.expand(String url, SearchParameters parameters)", "testcase": false, "constructor": false}], "file": "spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/impl/ProfileTemplate.java"}, "focal_method": {"identifier": "getUserProfileFull", "parameters": "()", "modifiers": "public", "return": "LinkedInProfileFull", "body": "public LinkedInProfileFull getUserProfileFull() {\n\t\treturn getUserProfile(FULL_PROFILE_FIELDS, LinkedInProfileFull.class);\n\t}", "signature": "LinkedInProfileFull getUserProfileFull()", "full_signature": "public LinkedInProfileFull getUserProfileFull()", "class_method_signature": "ProfileTemplate.getUserProfileFull()", "testcase": false, "constructor": false, "invocations": ["getUserProfile"]}, "repository": {"repo_id": 1767898, "url": "https://github.com/spring-projects/spring-social-linkedin", "language": "Java", "is_fork": false, "fork_count": 66, "stargazer_count": 71, "size": 12391, "license": "licensed"}}