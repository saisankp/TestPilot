{"test_class": {"identifier": "ExceptionUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/org/solenopsis/lasius/util/ExceptionUtilTest.java"}, "test_case": {"identifier": "test_isExceptionMsg_String_String", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_isExceptionMsg_String_String() {\n        Assert.assertFalse(\"Should not be an exception msg\", ExceptionUtil.isExceptionMsg(\"test a\", (String) null));\n        Assert.assertFalse(\"Should not be an exception msg\", ExceptionUtil.isExceptionMsg(\"test b\", \"try 1\"));\n        Assert.assertTrue(\"Should be an exception msg\", ExceptionUtil.isExceptionMsg(\"test c\", \"try 2 test c lmn\"));\n        Assert.assertTrue(\"Should be an exception msg\", ExceptionUtil.isExceptionMsg(\"test d\", \"test d lmn\"));\n        Assert.assertTrue(\"Should be an exception msg\", ExceptionUtil.isExceptionMsg(\"test e\", \"try 2 test e\"));\n    }", "signature": "void test_isExceptionMsg_String_String()", "full_signature": "@Test public void test_isExceptionMsg_String_String()", "class_method_signature": "ExceptionUtilTest.test_isExceptionMsg_String_String()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isExceptionMsg", "assertFalse", "isExceptionMsg", "assertTrue", "isExceptionMsg", "assertTrue", "isExceptionMsg", "assertTrue", "isExceptionMsg"]}, "focal_class": {"identifier": "ExceptionUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(ExceptionUtil.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(ExceptionUtil.class.getName())", "var_name": "logger"}, {"original_string": "public static final String INVALID_SESSION_ID = \"INVALID_SESSION_ID\";", "modifier": "public static final", "type": "String", "declarator": "INVALID_SESSION_ID = \"INVALID_SESSION_ID\"", "var_name": "INVALID_SESSION_ID"}, {"original_string": "public static final int INVALID_SESSION_INDEX = 0;", "modifier": "public static final", "type": "int", "declarator": "INVALID_SESSION_INDEX = 0", "var_name": "INVALID_SESSION_INDEX"}, {"original_string": "public static final String SERVER_UNAVAILABLE = \"SERVER_UNAVAILABLE\";", "modifier": "public static final", "type": "String", "declarator": "SERVER_UNAVAILABLE = \"SERVER_UNAVAILABLE\"", "var_name": "SERVER_UNAVAILABLE"}, {"original_string": "public static final int SERVER_UNAVAILABLE_INDEX = 1;", "modifier": "public static final", "type": "int", "declarator": "SERVER_UNAVAILABLE_INDEX = 1", "var_name": "SERVER_UNAVAILABLE_INDEX"}, {"original_string": "public static final String SERVICE_UNAVAILABLE = \"Service Unavailable\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_UNAVAILABLE = \"Service Unavailable\"", "var_name": "SERVICE_UNAVAILABLE"}, {"original_string": "public static final int SERVICE_UNAVAILABLE_INDEX = 2;", "modifier": "public static final", "type": "int", "declarator": "SERVICE_UNAVAILABLE_INDEX = 2", "var_name": "SERVICE_UNAVAILABLE_INDEX"}, {"original_string": "public static final String UNABLE_TO_LOCK_ROW = \"UNABLE_TO_LOCK_ROW\";", "modifier": "public static final", "type": "String", "declarator": "UNABLE_TO_LOCK_ROW = \"UNABLE_TO_LOCK_ROW\"", "var_name": "UNABLE_TO_LOCK_ROW"}, {"original_string": "public static final int UNABLE_TO_LOCK_ROW_INDEX = 3;", "modifier": "public static final", "type": "int", "declarator": "UNABLE_TO_LOCK_ROW_INDEX = 3", "var_name": "UNABLE_TO_LOCK_ROW_INDEX"}], "methods": [{"identifier": "getLogger", "parameters": "()", "modifiers": "protected static", "return": "Logger", "signature": "Logger getLogger()", "full_signature": "protected static Logger getLogger()", "class_method_signature": "ExceptionUtil.getLogger()", "testcase": false, "constructor": false}, {"identifier": "isExceptionMsg", "parameters": "(final String toCompare, final String message)", "modifiers": "public static", "return": "boolean", "signature": "boolean isExceptionMsg(final String toCompare, final String message)", "full_signature": "public static boolean isExceptionMsg(final String toCompare, final String message)", "class_method_signature": "ExceptionUtil.isExceptionMsg(final String toCompare, final String message)", "testcase": false, "constructor": false}, {"identifier": "isExceptionMsg", "parameters": "(final String toCompare, final Throwable failure)", "modifiers": "public static", "return": "boolean", "signature": "boolean isExceptionMsg(final String toCompare, final Throwable failure)", "full_signature": "public static boolean isExceptionMsg(final String toCompare, final Throwable failure)", "class_method_signature": "ExceptionUtil.isExceptionMsg(final String toCompare, final Throwable failure)", "testcase": false, "constructor": false}, {"identifier": "isInvalidSessionId", "parameters": "(final String message)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInvalidSessionId(final String message)", "full_signature": "public static boolean isInvalidSessionId(final String message)", "class_method_signature": "ExceptionUtil.isInvalidSessionId(final String message)", "testcase": false, "constructor": false}, {"identifier": "isInvalidSessionId", "parameters": "(final Throwable failure)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInvalidSessionId(final Throwable failure)", "full_signature": "public static boolean isInvalidSessionId(final Throwable failure)", "class_method_signature": "ExceptionUtil.isInvalidSessionId(final Throwable failure)", "testcase": false, "constructor": false}, {"identifier": "isServerUnavailable", "parameters": "(final String message, final int[] retryIssues)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServerUnavailable(final String message, final int[] retryIssues)", "full_signature": "public static boolean isServerUnavailable(final String message, final int[] retryIssues)", "class_method_signature": "ExceptionUtil.isServerUnavailable(final String message, final int[] retryIssues)", "testcase": false, "constructor": false}, {"identifier": "isServerUnavailable", "parameters": "(final Throwable failure, final int[] retryIssues)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServerUnavailable(final Throwable failure, final int[] retryIssues)", "full_signature": "public static boolean isServerUnavailable(final Throwable failure, final int[] retryIssues)", "class_method_signature": "ExceptionUtil.isServerUnavailable(final Throwable failure, final int[] retryIssues)", "testcase": false, "constructor": false}, {"identifier": "isServiceUnavailable", "parameters": "(final Throwable failure, final int[] retryIssues)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceUnavailable(final Throwable failure, final int[] retryIssues)", "full_signature": "public static boolean isServiceUnavailable(final Throwable failure, final int[] retryIssues)", "class_method_signature": "ExceptionUtil.isServiceUnavailable(final Throwable failure, final int[] retryIssues)", "testcase": false, "constructor": false}, {"identifier": "isUnableToLockRow", "parameters": "(final Throwable failure, final int[] retryIssues)", "modifiers": "public static", "return": "boolean", "signature": "boolean isUnableToLockRow(final Throwable failure, final int[] retryIssues)", "full_signature": "public static boolean isUnableToLockRow(final Throwable failure, final int[] retryIssues)", "class_method_signature": "ExceptionUtil.isUnableToLockRow(final Throwable failure, final int[] retryIssues)", "testcase": false, "constructor": false}, {"identifier": "isReloginException", "parameters": "(final Throwable failure, final int[] retryIssues)", "modifiers": "public static", "return": "boolean", "signature": "boolean isReloginException(final Throwable failure, final int[] retryIssues)", "full_signature": "public static boolean isReloginException(final Throwable failure, final int[] retryIssues)", "class_method_signature": "ExceptionUtil.isReloginException(final Throwable failure, final int[] retryIssues)", "testcase": false, "constructor": false}, {"identifier": "isRetryException", "parameters": "(final Throwable failure, final int[] retryIssues)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRetryException(final Throwable failure, final int[] retryIssues)", "full_signature": "public static boolean isRetryException(final Throwable failure, final int[] retryIssues)", "class_method_signature": "ExceptionUtil.isRetryException(final Throwable failure, final int[] retryIssues)", "testcase": false, "constructor": false}, {"identifier": "ExceptionUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ExceptionUtil()", "full_signature": "private  ExceptionUtil()", "class_method_signature": "ExceptionUtil.ExceptionUtil()", "testcase": false, "constructor": true}], "file": "common/src/main/java/org/solenopsis/lasius/util/ExceptionUtil.java"}, "focal_method": {"identifier": "isExceptionMsg", "parameters": "(final String toCompare, final String message)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isExceptionMsg(final String toCompare, final String message) {\n        return (null == message ? false : message.contains(toCompare));\n    }", "signature": "boolean isExceptionMsg(final String toCompare, final String message)", "full_signature": "public static boolean isExceptionMsg(final String toCompare, final String message)", "class_method_signature": "ExceptionUtil.isExceptionMsg(final String toCompare, final String message)", "testcase": false, "constructor": false, "invocations": ["contains"]}, "repository": {"repo_id": 4705783, "url": "https://github.com/solenopsis/Lasius", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 908, "license": "licensed"}}