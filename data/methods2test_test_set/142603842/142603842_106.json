{"test_class": {"identifier": "DataSetMarshallerTest", "superclass": "", "interfaces": "", "fields": [], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/service/demo/dataset/DataSetMarshallerTest.java"}, "test_case": {"identifier": "marshal_data_set", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void marshal_data_set() {\n        DataSet dataSet = new DataSet();\n        String name = \"Test data set\";\n        dataSet.setName(name);\n        DataSetLocation depot = new DataSetLocation(\"Depot\", -1.1, -9.9);\n        DataSetLocation location1 = new DataSetLocation(\"Location 1\", 1.0, 0.1);\n        DataSetLocation location2 = new DataSetLocation(\"Location 2\", 2.0, 0.2);\n        dataSet.setDepot(depot);\n        dataSet.setVisits(Arrays.asList(location1, location2));\n        DataSetVehicle vehicle1 = new DataSetVehicle(\"Vehicle 1\", 123);\n        DataSetVehicle vehicle2 = new DataSetVehicle(\"Vehicle 2\", 222);\n        dataSet.setVehicles(Arrays.asList(vehicle1, vehicle2));\n\n        String yaml = new DataSetMarshaller().marshal(dataSet);\n        assertThat(yaml)\n                .contains(\"name: \\\"\" + name)\n                .contains(\n                        depot.getLabel(),\n                        location1.getLabel(),\n                        location2.getLabel(),\n                        vehicle1.name,\n                        vehicle2.name,\n                        String.valueOf(vehicle1.capacity),\n                        String.valueOf(vehicle2.capacity));\n    }", "signature": "void marshal_data_set()", "full_signature": "@Test void marshal_data_set()", "class_method_signature": "DataSetMarshallerTest.marshal_data_set()", "testcase": true, "constructor": false, "invocations": ["setName", "setDepot", "setVisits", "asList", "setVehicles", "asList", "marshal", "contains", "contains", "assertThat", "getLabel", "getLabel", "getLabel", "valueOf", "valueOf"]}, "focal_class": {"identifier": "DataSetMarshaller", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper mapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "DataSetMarshaller", "parameters": "()", "modifiers": "", "return": "", "signature": " DataSetMarshaller()", "full_signature": "  DataSetMarshaller()", "class_method_signature": "DataSetMarshaller.DataSetMarshaller()", "testcase": false, "constructor": true}, {"identifier": "DataSetMarshaller", "parameters": "(ObjectMapper mapper)", "modifiers": "", "return": "", "signature": " DataSetMarshaller(ObjectMapper mapper)", "full_signature": "  DataSetMarshaller(ObjectMapper mapper)", "class_method_signature": "DataSetMarshaller.DataSetMarshaller(ObjectMapper mapper)", "testcase": false, "constructor": true}, {"identifier": "unmarshal", "parameters": "(Reader reader)", "modifiers": "public", "return": "RoutingProblem", "signature": "RoutingProblem unmarshal(Reader reader)", "full_signature": "public RoutingProblem unmarshal(Reader reader)", "class_method_signature": "DataSetMarshaller.unmarshal(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "marshal", "parameters": "(RoutingProblem routingProblem)", "modifiers": "public", "return": "String", "signature": "String marshal(RoutingProblem routingProblem)", "full_signature": "public String marshal(RoutingProblem routingProblem)", "class_method_signature": "DataSetMarshaller.marshal(RoutingProblem routingProblem)", "testcase": false, "constructor": false}, {"identifier": "unmarshalToDataSet", "parameters": "(Reader reader)", "modifiers": "", "return": "DataSet", "signature": "DataSet unmarshalToDataSet(Reader reader)", "full_signature": " DataSet unmarshalToDataSet(Reader reader)", "class_method_signature": "DataSetMarshaller.unmarshalToDataSet(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "marshal", "parameters": "(DataSet dataSet)", "modifiers": "", "return": "String", "signature": "String marshal(DataSet dataSet)", "full_signature": " String marshal(DataSet dataSet)", "class_method_signature": "DataSetMarshaller.marshal(DataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "toDataSet", "parameters": "(RoutingProblem routingProblem)", "modifiers": "static", "return": "DataSet", "signature": "DataSet toDataSet(RoutingProblem routingProblem)", "full_signature": "static DataSet toDataSet(RoutingProblem routingProblem)", "class_method_signature": "DataSetMarshaller.toDataSet(RoutingProblem routingProblem)", "testcase": false, "constructor": false}, {"identifier": "toDataSet", "parameters": "(LocationData locationData)", "modifiers": "static", "return": "DataSetLocation", "signature": "DataSetLocation toDataSet(LocationData locationData)", "full_signature": "static DataSetLocation toDataSet(LocationData locationData)", "class_method_signature": "DataSetMarshaller.toDataSet(LocationData locationData)", "testcase": false, "constructor": false}, {"identifier": "toDataSet", "parameters": "(VehicleData vehicleData)", "modifiers": "static", "return": "DataSetVehicle", "signature": "DataSetVehicle toDataSet(VehicleData vehicleData)", "full_signature": "static DataSetVehicle toDataSet(VehicleData vehicleData)", "class_method_signature": "DataSetMarshaller.toDataSet(VehicleData vehicleData)", "testcase": false, "constructor": false}, {"identifier": "toDomain", "parameters": "(DataSet dataSet)", "modifiers": "static", "return": "RoutingProblem", "signature": "RoutingProblem toDomain(DataSet dataSet)", "full_signature": "static RoutingProblem toDomain(DataSet dataSet)", "class_method_signature": "DataSetMarshaller.toDomain(DataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "toDomain", "parameters": "(DataSetLocation dataSetLocation)", "modifiers": "static", "return": "LocationData", "signature": "LocationData toDomain(DataSetLocation dataSetLocation)", "full_signature": "static LocationData toDomain(DataSetLocation dataSetLocation)", "class_method_signature": "DataSetMarshaller.toDomain(DataSetLocation dataSetLocation)", "testcase": false, "constructor": false}, {"identifier": "toDomain", "parameters": "(DataSetVehicle dataSetVehicle)", "modifiers": "static", "return": "VehicleData", "signature": "VehicleData toDomain(DataSetVehicle dataSetVehicle)", "full_signature": "static VehicleData toDomain(DataSetVehicle dataSetVehicle)", "class_method_signature": "DataSetMarshaller.toDomain(DataSetVehicle dataSetVehicle)", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/service/demo/dataset/DataSetMarshaller.java"}, "focal_method": {"identifier": "marshal", "parameters": "(RoutingProblem routingProblem)", "modifiers": "public", "return": "String", "body": "public String marshal(RoutingProblem routingProblem) {\n        return marshal(toDataSet(routingProblem));\n    }", "signature": "String marshal(RoutingProblem routingProblem)", "full_signature": "public String marshal(RoutingProblem routingProblem)", "class_method_signature": "DataSetMarshaller.marshal(RoutingProblem routingProblem)", "testcase": false, "constructor": false, "invocations": ["marshal", "toDataSet"]}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}