{"test_class": {"identifier": "ApiModelBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "ramler-common/src/test/java/org/ops4j/ramler/common/model/ApiModelBuilderTest.java"}, "test_case": {"identifier": "shouldLogParserErrors", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldLogParserErrors() {\n        assertThatExceptionOfType(ParserException.class)\n            .isThrownBy(() -> new ApiModelBuilder().buildApiModel(\"raml/syntaxError.raml\"))\n            .withMessageContaining(\"RAML syntax errors\")\n            .withMessageContaining(\"/types/City/properties/population/type\")\n            .withMessageContaining(\"Invalid reference 'int'\");\n    }", "signature": "void shouldLogParserErrors()", "full_signature": "@Test public void shouldLogParserErrors()", "class_method_signature": "ApiModelBuilderTest.shouldLogParserErrors()", "testcase": true, "constructor": false, "invocations": ["withMessageContaining", "withMessageContaining", "withMessageContaining", "isThrownBy", "assertThatExceptionOfType", "buildApiModel"]}, "focal_class": {"identifier": "ApiModelBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(ApiModelBuilder.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ApiModelBuilder.class)", "var_name": "log"}], "methods": [{"identifier": "buildApiModel", "parameters": "(String sourceFileName)", "modifiers": "public", "return": "ApiModel", "signature": "ApiModel buildApiModel(String sourceFileName)", "full_signature": "public ApiModel buildApiModel(String sourceFileName)", "class_method_signature": "ApiModelBuilder.buildApiModel(String sourceFileName)", "testcase": false, "constructor": false}], "file": "ramler-common/src/main/java/org/ops4j/ramler/common/model/ApiModelBuilder.java"}, "focal_method": {"identifier": "buildApiModel", "parameters": "(String sourceFileName)", "modifiers": "public", "return": "ApiModel", "body": "public ApiModel buildApiModel(String sourceFileName) {\n        RamlModelResult ramlModelResult = new RamlModelBuilder().buildApi(sourceFileName);\n        log.debug(\"Finished parsing\");\n        if (ramlModelResult.hasErrors()) {\n            StringBuilder builder = new StringBuilder(\"RAML syntax errors:\\n\");\n            for (ValidationResult result : ramlModelResult.getValidationResults()) {\n                builder.append(result.getPath());\n                builder.append(\": \");\n                builder.append(result.getMessage());\n            }\n            throw new ParserException(builder.toString());\n        }\n\n        Api api = ramlModelResult.getApiV10();\n        return new ApiModel(api);\n    }", "signature": "ApiModel buildApiModel(String sourceFileName)", "full_signature": "public ApiModel buildApiModel(String sourceFileName)", "class_method_signature": "ApiModelBuilder.buildApiModel(String sourceFileName)", "testcase": false, "constructor": false, "invocations": ["buildApi", "debug", "hasErrors", "getValidationResults", "append", "getPath", "append", "append", "getMessage", "toString", "getApiV10"]}, "repository": {"repo_id": 63543726, "url": "https://github.com/ops4j/org.ops4j.ramler", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 1033, "license": "licensed"}}