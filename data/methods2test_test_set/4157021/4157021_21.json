{"test_class": {"identifier": "UserServiceImplTest", "superclass": "extends ServiceTestBase", "interfaces": "", "fields": [], "file": "src/core/services-impl/src/test/java/it/geosolutions/geostore/services/UserServiceImplTest.java"}, "test_case": {"identifier": "testGetByAttribute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetByAttribute() throws Exception {\n        UserAttribute attribute = new UserAttribute();\n        String token = UUID.randomUUID().toString();\n        attribute.setName(\"UUID\");\n        attribute.setValue(token);\n        createUser(\"test\", Role.USER, \"tesPW\", Arrays.asList(attribute));\n        \n        assertEquals(1, userService.getByAttribute(attribute).size());\n    }", "signature": "void testGetByAttribute()", "full_signature": "@Test public void testGetByAttribute()", "class_method_signature": "UserServiceImplTest.testGetByAttribute()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "setName", "setValue", "createUser", "asList", "assertEquals", "size", "getByAttribute"]}, "focal_class": {"identifier": "UserServiceImpl", "superclass": "", "interfaces": "implements UserService", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(UserServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(UserServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "private UserDAO userDAO;", "modifier": "private", "type": "UserDAO", "declarator": "userDAO", "var_name": "userDAO"}, {"original_string": "private UserAttributeDAO userAttributeDAO;", "modifier": "private", "type": "UserAttributeDAO", "declarator": "userAttributeDAO", "var_name": "userAttributeDAO"}, {"original_string": "private UserGroupDAO userGroupDAO;", "modifier": "private", "type": "UserGroupDAO", "declarator": "userGroupDAO", "var_name": "userGroupDAO"}], "methods": [{"identifier": "setUserGroupDAO", "parameters": "(UserGroupDAO userGroupDAO)", "modifiers": "public", "return": "void", "signature": "void setUserGroupDAO(UserGroupDAO userGroupDAO)", "full_signature": "public void setUserGroupDAO(UserGroupDAO userGroupDAO)", "class_method_signature": "UserServiceImpl.setUserGroupDAO(UserGroupDAO userGroupDAO)", "testcase": false, "constructor": false}, {"identifier": "setUserAttributeDAO", "parameters": "(UserAttributeDAO userAttributeDAO)", "modifiers": "public", "return": "void", "signature": "void setUserAttributeDAO(UserAttributeDAO userAttributeDAO)", "full_signature": "public void setUserAttributeDAO(UserAttributeDAO userAttributeDAO)", "class_method_signature": "UserServiceImpl.setUserAttributeDAO(UserAttributeDAO userAttributeDAO)", "testcase": false, "constructor": false}, {"identifier": "setUserDAO", "parameters": "(UserDAO userDAO)", "modifiers": "public", "return": "void", "signature": "void setUserDAO(UserDAO userDAO)", "full_signature": "public void setUserDAO(UserDAO userDAO)", "class_method_signature": "UserServiceImpl.setUserDAO(UserDAO userDAO)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(User user)", "modifiers": "@Override public", "return": "long", "signature": "long insert(User user)", "full_signature": "@Override public long insert(User user)", "class_method_signature": "UserServiceImpl.insert(User user)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(User user)", "modifiers": "@Override public", "return": "long", "signature": "long update(User user)", "full_signature": "@Override public long update(User user)", "class_method_signature": "UserServiceImpl.update(User user)", "testcase": false, "constructor": false}, {"identifier": "updateAttributes", "parameters": "(long id, List<UserAttribute> attributes)", "modifiers": "@Override public", "return": "void", "signature": "void updateAttributes(long id, List<UserAttribute> attributes)", "full_signature": "@Override public void updateAttributes(long id, List<UserAttribute> attributes)", "class_method_signature": "UserServiceImpl.updateAttributes(long id, List<UserAttribute> attributes)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long id)", "modifiers": "@Override public", "return": "User", "signature": "User get(long id)", "full_signature": "@Override public User get(long id)", "class_method_signature": "UserServiceImpl.get(long id)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String name)", "modifiers": "@Override public", "return": "User", "signature": "User get(String name)", "full_signature": "@Override public User get(String name)", "class_method_signature": "UserServiceImpl.get(String name)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(long id)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean delete(long id)", "full_signature": "@Override public boolean delete(long id)", "class_method_signature": "UserServiceImpl.delete(long id)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(Integer page, Integer entries)", "modifiers": "@Override public", "return": "List<User>", "signature": "List<User> getAll(Integer page, Integer entries)", "full_signature": "@Override public List<User> getAll(Integer page, Integer entries)", "class_method_signature": "UserServiceImpl.getAll(Integer page, Integer entries)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(Integer page, Integer entries, String nameLike,\n            boolean includeAttributes)", "modifiers": "@Override public", "return": "List<User>", "signature": "List<User> getAll(Integer page, Integer entries, String nameLike,\n            boolean includeAttributes)", "full_signature": "@Override public List<User> getAll(Integer page, Integer entries, String nameLike,\n            boolean includeAttributes)", "class_method_signature": "UserServiceImpl.getAll(Integer page, Integer entries, String nameLike,\n            boolean includeAttributes)", "testcase": false, "constructor": false}, {"identifier": "configUserList", "parameters": "(List<User> list, boolean includeAttributes)", "modifiers": "private", "return": "List<User>", "signature": "List<User> configUserList(List<User> list, boolean includeAttributes)", "full_signature": "private List<User> configUserList(List<User> list, boolean includeAttributes)", "class_method_signature": "UserServiceImpl.configUserList(List<User> list, boolean includeAttributes)", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "(String nameLike)", "modifiers": "@Override public", "return": "long", "signature": "long getCount(String nameLike)", "full_signature": "@Override public long getCount(String nameLike)", "class_method_signature": "UserServiceImpl.getCount(String nameLike)", "testcase": false, "constructor": false}, {"identifier": "insertSpecialUsers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertSpecialUsers()", "full_signature": "@Override public boolean insertSpecialUsers()", "class_method_signature": "UserServiceImpl.insertSpecialUsers()", "testcase": false, "constructor": false}, {"identifier": "getByAttribute", "parameters": "(UserAttribute attribute)", "modifiers": "@Override public", "return": "Collection<User>", "signature": "Collection<User> getByAttribute(UserAttribute attribute)", "full_signature": "@Override public Collection<User> getByAttribute(UserAttribute attribute)", "class_method_signature": "UserServiceImpl.getByAttribute(UserAttribute attribute)", "testcase": false, "constructor": false}, {"identifier": "getByGroup", "parameters": "(UserGroup group)", "modifiers": "@Override public", "return": "Collection<User>", "signature": "Collection<User> getByGroup(UserGroup group)", "full_signature": "@Override public Collection<User> getByGroup(UserGroup group)", "class_method_signature": "UserServiceImpl.getByGroup(UserGroup group)", "testcase": false, "constructor": false}], "file": "src/core/services-impl/src/main/java/it/geosolutions/geostore/services/UserServiceImpl.java"}, "focal_method": {"identifier": "getByAttribute", "parameters": "(UserAttribute attribute)", "modifiers": "@Override public", "return": "Collection<User>", "body": "@Override\n    public Collection<User> getByAttribute(UserAttribute attribute) {\n        \n        Search searchCriteria = new Search(UserAttribute.class);\n        searchCriteria.addFilterEqual(\"name\", attribute.getName());\n        searchCriteria.addFilterEqual(\"value\", attribute.getValue());\n        searchCriteria.addFetch(\"user\");\n\n        List<UserAttribute> attributes = userAttributeDAO.search(searchCriteria);\n        \n        Set<User> users = new HashSet<User>();\n        for(UserAttribute userAttr : attributes) {\n            if(userAttr.getUser() != null) {\n                users.add(userAttr.getUser());\n            }\n        }\n        return users;\n    }", "signature": "Collection<User> getByAttribute(UserAttribute attribute)", "full_signature": "@Override public Collection<User> getByAttribute(UserAttribute attribute)", "class_method_signature": "UserServiceImpl.getByAttribute(UserAttribute attribute)", "testcase": false, "constructor": false, "invocations": ["addFilterEqual", "getName", "addFilterEqual", "getValue", "addFetch", "search", "getUser", "add", "getUser"]}, "repository": {"repo_id": 4157021, "url": "https://github.com/geosolutions-it/geostore", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 19, "size": 1798, "license": "licensed"}}