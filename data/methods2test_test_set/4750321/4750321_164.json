{"test_class": {"identifier": "DirectoryDataStoreTest", "superclass": "extends TestSupport", "interfaces": "", "fields": [{"original_string": "private static final String DESTDIR = \"shapes\";", "modifier": "private static final", "type": "String", "declarator": "DESTDIR = \"shapes\"", "var_name": "DESTDIR"}], "file": "modules/unsupported/directory/src/test/java/org/geotools/data/directory/DirectoryDataStoreTest.java"}, "test_case": {"identifier": "testCreateSchema", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateSchema() throws Exception {\n        File dir = File.createTempFile(\"foo\", \"shp\", new File(\"target\"));\n        dir.delete();\n        dir.mkdir();\n        \n        DataStore ds = new DirectoryDataStore(dir, NSURI);\n        assertEquals(0, ds.getTypeNames().length);\n        \n        SimpleFeatureTypeBuilder tb = new SimpleFeatureTypeBuilder();\n        tb.setName(\"foo\");\n        tb.add(\"geom\", Polygon.class);\n        tb.add(\"bar\", Integer.class);\n        ds.createSchema(tb.buildFeatureType());\n        \n        SimpleFeatureType ft = ds.getSchema(\"foo\");\n        assertNotNull(ft);\n        \n        //clean up\n        ds.dispose();\n        for (File f : dir.listFiles()) {\n            f.delete();\n        }\n        dir.delete();\n    }", "signature": "void testCreateSchema()", "full_signature": "@Test public void testCreateSchema()", "class_method_signature": "DirectoryDataStoreTest.testCreateSchema()", "testcase": true, "constructor": false, "invocations": ["createTempFile", "delete", "mkdir", "assertEquals", "getTypeNames", "setName", "add", "add", "createSchema", "buildFeatureType", "getSchema", "assertNotNull", "dispose", "listFiles", "delete", "delete"]}, "focal_class": {"identifier": "DirectoryDataStore", "superclass": "", "interfaces": "implements DataStore", "fields": [{"original_string": "DirectoryTypeCache cache;", "modifier": "", "type": "DirectoryTypeCache", "declarator": "cache", "var_name": "cache"}, {"original_string": "DirectoryLockingManager lm;", "modifier": "", "type": "DirectoryLockingManager", "declarator": "lm", "var_name": "lm"}], "methods": [{"identifier": "DirectoryDataStore", "parameters": "(File directory, URI namespaceURI)", "modifiers": "public", "return": "", "signature": " DirectoryDataStore(File directory, URI namespaceURI)", "full_signature": "public  DirectoryDataStore(File directory, URI namespaceURI)", "class_method_signature": "DirectoryDataStore.DirectoryDataStore(File directory, URI namespaceURI)", "testcase": false, "constructor": true}, {"identifier": "getFeatureReader", "parameters": "(\n            Query query, Transaction transaction)", "modifiers": "public", "return": "FeatureReader<SimpleFeatureType, SimpleFeature>", "signature": "FeatureReader<SimpleFeatureType, SimpleFeature> getFeatureReader(\n            Query query, Transaction transaction)", "full_signature": "public FeatureReader<SimpleFeatureType, SimpleFeature> getFeatureReader(\n            Query query, Transaction transaction)", "class_method_signature": "DirectoryDataStore.getFeatureReader(\n            Query query, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureSource", "parameters": "(\n            String typeName)", "modifiers": "public", "return": "FeatureSource<SimpleFeatureType, SimpleFeature>", "signature": "FeatureSource<SimpleFeatureType, SimpleFeature> getFeatureSource(\n            String typeName)", "full_signature": "public FeatureSource<SimpleFeatureType, SimpleFeature> getFeatureSource(\n            String typeName)", "class_method_signature": "DirectoryDataStore.getFeatureSource(\n            String typeName)", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriter", "parameters": "(\n            String typeName, Filter filter, Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(\n            String typeName, Filter filter, Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(\n            String typeName, Filter filter, Transaction transaction)", "class_method_signature": "DirectoryDataStore.getFeatureWriter(\n            String typeName, Filter filter, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriter", "parameters": "(\n            String typeName, Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(\n            String typeName, Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(\n            String typeName, Transaction transaction)", "class_method_signature": "DirectoryDataStore.getFeatureWriter(\n            String typeName, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriterAppend", "parameters": "(\n            String typeName, Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriterAppend(\n            String typeName, Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriterAppend(\n            String typeName, Transaction transaction)", "class_method_signature": "DirectoryDataStore.getFeatureWriterAppend(\n            String typeName, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getLockingManager", "parameters": "()", "modifiers": "public", "return": "LockingManager", "signature": "LockingManager getLockingManager()", "full_signature": "public LockingManager getLockingManager()", "class_method_signature": "DirectoryDataStore.getLockingManager()", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "(String typeName)", "modifiers": "public", "return": "SimpleFeatureType", "signature": "SimpleFeatureType getSchema(String typeName)", "full_signature": "public SimpleFeatureType getSchema(String typeName)", "class_method_signature": "DirectoryDataStore.getSchema(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getTypeNames", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getTypeNames()", "full_signature": "public String[] getTypeNames()", "class_method_signature": "DirectoryDataStore.getTypeNames()", "testcase": false, "constructor": false}, {"identifier": "getView", "parameters": "(Query query)", "modifiers": "public", "return": "FeatureSource<SimpleFeatureType, SimpleFeature>", "signature": "FeatureSource<SimpleFeatureType, SimpleFeature> getView(Query query)", "full_signature": "public FeatureSource<SimpleFeatureType, SimpleFeature> getView(Query query)", "class_method_signature": "DirectoryDataStore.getView(Query query)", "testcase": false, "constructor": false}, {"identifier": "updateSchema", "parameters": "(String typeName, SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void updateSchema(String typeName, SimpleFeatureType featureType)", "full_signature": "public void updateSchema(String typeName, SimpleFeatureType featureType)", "class_method_signature": "DirectoryDataStore.updateSchema(String typeName, SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "createSchema", "parameters": "(SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void createSchema(SimpleFeatureType featureType)", "full_signature": "public void createSchema(SimpleFeatureType featureType)", "class_method_signature": "DirectoryDataStore.createSchema(SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void dispose()", "full_signature": "public void dispose()", "class_method_signature": "DirectoryDataStore.dispose()", "testcase": false, "constructor": false}, {"identifier": "getFeatureSource", "parameters": "(\n            Name typeName)", "modifiers": "public", "return": "FeatureSource<SimpleFeatureType, SimpleFeature>", "signature": "FeatureSource<SimpleFeatureType, SimpleFeature> getFeatureSource(\n            Name typeName)", "full_signature": "public FeatureSource<SimpleFeatureType, SimpleFeature> getFeatureSource(\n            Name typeName)", "class_method_signature": "DirectoryDataStore.getFeatureSource(\n            Name typeName)", "testcase": false, "constructor": false}, {"identifier": "getInfo", "parameters": "()", "modifiers": "public", "return": "ServiceInfo", "signature": "ServiceInfo getInfo()", "full_signature": "public ServiceInfo getInfo()", "class_method_signature": "DirectoryDataStore.getInfo()", "testcase": false, "constructor": false}, {"identifier": "getNames", "parameters": "()", "modifiers": "public", "return": "List<Name>", "signature": "List<Name> getNames()", "full_signature": "public List<Name> getNames()", "class_method_signature": "DirectoryDataStore.getNames()", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "(Name name)", "modifiers": "public", "return": "SimpleFeatureType", "signature": "SimpleFeatureType getSchema(Name name)", "full_signature": "public SimpleFeatureType getSchema(Name name)", "class_method_signature": "DirectoryDataStore.getSchema(Name name)", "testcase": false, "constructor": false}, {"identifier": "updateSchema", "parameters": "(Name typeName, SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void updateSchema(Name typeName, SimpleFeatureType featureType)", "full_signature": "public void updateSchema(Name typeName, SimpleFeatureType featureType)", "class_method_signature": "DirectoryDataStore.updateSchema(Name typeName, SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "getDataStore", "parameters": "(String typeName)", "modifiers": "public", "return": "DataStore", "signature": "DataStore getDataStore(String typeName)", "full_signature": "public DataStore getDataStore(String typeName)", "class_method_signature": "DirectoryDataStore.getDataStore(String typeName)", "testcase": false, "constructor": false}], "file": "modules/unsupported/directory/src/main/java/org/geotools/data/directory/DirectoryDataStore.java"}, "focal_method": {"identifier": "createSchema", "parameters": "(SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "body": "public void createSchema(SimpleFeatureType featureType) throws IOException {\n        File f = new File(cache.directory, featureType.getTypeName()+\".shp\");\n        \n        String shpDataStoreClassName = \"org.geotools.data.shapefile.ShapefileDataStore\";\n        DataStore ds = null;\n        try {\n            ds = (DataStore) Class.forName(shpDataStoreClassName).getConstructor(URL.class)\n                .newInstance(f.toURL());\n            ds.createSchema(featureType);\n            cache.refreshCacheContents();\n        }\n        catch(Exception e) {\n            throw (IOException) new IOException(\"Error creating new data store\").initCause(e);\n        }\n    }", "signature": "void createSchema(SimpleFeatureType featureType)", "full_signature": "public void createSchema(SimpleFeatureType featureType)", "class_method_signature": "DirectoryDataStore.createSchema(SimpleFeatureType featureType)", "testcase": false, "constructor": false, "invocations": ["getTypeName", "newInstance", "getConstructor", "forName", "toURL", "createSchema", "refreshCacheContents", "initCause"]}, "repository": {"repo_id": 4750321, "url": "https://github.com/HGitMaster/geotools-osgi", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 114107, "license": "licensed"}}