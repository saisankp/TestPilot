{"test_class": {"identifier": "ProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "StubProcessor processor = new StubProcessor();", "modifier": "", "type": "StubProcessor", "declarator": "processor = new StubProcessor()", "var_name": "processor"}], "file": "scribe/core/src/test/java/com/karuslabs/scribe/core/ProcessorTest.java"}, "test_case": {"identifier": "annotations", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void annotations() {\n        var annotations = processor.annotations();\n        \n        assertNotNull(processor.annotations);\n        assertEquals(\n            Set.of(\n                API.class,\n                Command.class,\n                Commands.class,\n                Information.class,\n                Load.class,\n                Permission.class,\n                Permissions.class,\n                Plugin.class\n            ), \n            annotations\n        );\n    }", "signature": "void annotations()", "full_signature": "@Test void annotations()", "class_method_signature": "ProcessorTest.annotations()", "testcase": true, "constructor": false, "invocations": ["annotations", "assertNotNull", "assertEquals", "of"]}, "focal_class": {"identifier": "Processor", "superclass": "", "interfaces": "", "fields": [{"original_string": "Environment<T> environment;", "modifier": "", "type": "Environment<T>", "declarator": "environment", "var_name": "environment"}, {"original_string": "List<Parser<T>> parsers;", "modifier": "", "type": "List<Parser<T>>", "declarator": "parsers", "var_name": "parsers"}, {"original_string": "@Nullable Set<Class<? extends Annotation>> annotations;", "modifier": "@Nullable", "type": "Set<Class<? extends Annotation>>", "declarator": "annotations", "var_name": "annotations"}], "methods": [{"identifier": "loader", "parameters": "(List<String> classpaths)", "modifiers": "public static", "return": "ClassLoader", "signature": "ClassLoader loader(List<String> classpaths)", "full_signature": "public static ClassLoader loader(List<String> classpaths)", "class_method_signature": "Processor.loader(List<String> classpaths)", "testcase": false, "constructor": false}, {"identifier": "Processor", "parameters": "(Environment<T> environment, PluginParser<T> parser)", "modifiers": "public", "return": "", "signature": " Processor(Environment<T> environment, PluginParser<T> parser)", "full_signature": "public  Processor(Environment<T> environment, PluginParser<T> parser)", "class_method_signature": "Processor.Processor(Environment<T> environment, PluginParser<T> parser)", "testcase": false, "constructor": true}, {"identifier": "Processor", "parameters": "(Environment<T> environment, List<Parser<T>> parsers)", "modifiers": "public", "return": "", "signature": " Processor(Environment<T> environment, List<Parser<T>> parsers)", "full_signature": "public  Processor(Environment<T> environment, List<Parser<T>> parsers)", "class_method_signature": "Processor.Processor(Environment<T> environment, List<Parser<T>> parsers)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "Processor.run()", "testcase": false, "constructor": false}, {"identifier": "annotated", "parameters": "(Class<? extends Annotation> annotation)", "modifiers": "protected abstract", "return": "Stream<T>", "signature": "Stream<T> annotated(Class<? extends Annotation> annotation)", "full_signature": "protected abstract Stream<T> annotated(Class<? extends Annotation> annotation)", "class_method_signature": "Processor.annotated(Class<? extends Annotation> annotation)", "testcase": false, "constructor": false}, {"identifier": "annotations", "parameters": "()", "modifiers": "public", "return": "Set<Class<? extends Annotation>>", "signature": "Set<Class<? extends Annotation>> annotations()", "full_signature": "public Set<Class<? extends Annotation>> annotations()", "class_method_signature": "Processor.annotations()", "testcase": false, "constructor": false}], "file": "scribe/core/src/main/java/com/karuslabs/scribe/core/Processor.java"}, "focal_method": {"identifier": "annotations", "parameters": "()", "modifiers": "public", "return": "Set<Class<? extends Annotation>>", "body": "public Set<Class<? extends Annotation>> annotations() {\n        if (annotations == null) {\n            annotations = parsers.stream().collect(flatMapping((resolver) -> resolver.annotations().stream(), toSet()));\n        }\n        \n        return annotations;\n    }", "signature": "Set<Class<? extends Annotation>> annotations()", "full_signature": "public Set<Class<? extends Annotation>> annotations()", "class_method_signature": "Processor.annotations()", "testcase": false, "constructor": false, "invocations": ["collect", "stream", "flatMapping", "stream", "annotations", "toSet"]}, "repository": {"repo_id": 68935766, "url": "https://github.com/Pante/Chimera", "stars": 13, "created": "9/22/2016 3:36:39 PM +00:00", "updates": "2020-01-27T21:22:29+00:00", "fork": "False", "license": "licensed"}}