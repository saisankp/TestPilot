{"test_class": {"identifier": "MutablePermissionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Permissions underTest = null;", "modifier": "private", "type": "Permissions", "declarator": "underTest = null", "var_name": "underTest"}], "file": "model/things/src/test/java/org/eclipse/ditto/model/things/MutablePermissionsTest.java"}, "test_case": {"identifier": "createJsonRepresentationOfEmptyMutablePermissions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createJsonRepresentationOfEmptyMutablePermissions() {\n        final JsonValue actualJsonValue = underTest.toJson();\n\n        final JsonObjectBuilder jsonObjectBuilder = JsonFactory.newObjectBuilder();\n        for (final Permission permission : Permission.values()) {\n            jsonObjectBuilder.set(permission.toJsonKey(), false);\n        }\n        final JsonObject expectedJsonObject = jsonObjectBuilder.build();\n\n        assertThat(actualJsonValue).isEqualTo(expectedJsonObject);\n    }", "signature": "void createJsonRepresentationOfEmptyMutablePermissions()", "full_signature": "@Test public void createJsonRepresentationOfEmptyMutablePermissions()", "class_method_signature": "MutablePermissionsTest.createJsonRepresentationOfEmptyMutablePermissions()", "testcase": true, "constructor": false, "invocations": ["toJson", "newObjectBuilder", "values", "set", "toJsonKey", "build", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "MutablePermissions", "superclass": "extends AbstractSet<Permission>", "interfaces": "implements Permissions", "fields": [{"original_string": "private final Set<Permission> values;", "modifier": "private final", "type": "Set<Permission>", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "MutablePermissions", "parameters": "(final Set<Permission> permissions)", "modifiers": "", "return": "", "signature": " MutablePermissions(final Set<Permission> permissions)", "full_signature": "  MutablePermissions(final Set<Permission> permissions)", "class_method_signature": "MutablePermissions.MutablePermissions(final Set<Permission> permissions)", "testcase": false, "constructor": true}, {"identifier": "MutablePermissions", "parameters": "(final Collection<Permission> permissions)", "modifiers": "public", "return": "", "signature": " MutablePermissions(final Collection<Permission> permissions)", "full_signature": "public  MutablePermissions(final Collection<Permission> permissions)", "class_method_signature": "MutablePermissions.MutablePermissions(final Collection<Permission> permissions)", "testcase": false, "constructor": true}, {"identifier": "none", "parameters": "()", "modifiers": "public static", "return": "Permissions", "signature": "Permissions none()", "full_signature": "public static Permissions none()", "class_method_signature": "MutablePermissions.none()", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "()", "modifiers": "public static", "return": "Permissions", "signature": "Permissions all()", "full_signature": "public static Permissions all()", "class_method_signature": "MutablePermissions.all()", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final Permission permission, final Permission... furtherPermissions)", "modifiers": "public static", "return": "Permissions", "signature": "Permissions of(final Permission permission, final Permission... furtherPermissions)", "full_signature": "public static Permissions of(final Permission permission, final Permission... furtherPermissions)", "class_method_signature": "MutablePermissions.of(final Permission permission, final Permission... furtherPermissions)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final Permission permission, final Permission... furtherPermissions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(final Permission permission, final Permission... furtherPermissions)", "full_signature": "@Override public boolean contains(final Permission permission, final Permission... furtherPermissions)", "class_method_signature": "MutablePermissions.contains(final Permission permission, final Permission... furtherPermissions)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final Permission permission)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(final Permission permission)", "full_signature": "@Override public boolean add(final Permission permission)", "class_method_signature": "MutablePermissions.add(final Permission permission)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Permission>", "signature": "Iterator<Permission> iterator()", "full_signature": "@Override public Iterator<Permission> iterator()", "class_method_signature": "MutablePermissions.iterator()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "MutablePermissions.size()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "MutablePermissions.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonPointer pointer)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonPointer pointer)", "full_signature": "@Override public JsonObject toJson(final JsonPointer pointer)", "class_method_signature": "MutablePermissions.toJson(final JsonPointer pointer)", "testcase": false, "constructor": false}], "file": "model/things/src/main/java/org/eclipse/ditto/model/things/MutablePermissions.java"}, "focal_method": {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "body": "@Override\n    public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate) {\n        // explicitly DO NOT use the schemaVersion in the predicate - as there is no schema version on the field definitions\n        final JsonObjectBuilder jsonObjectBuilder = JsonFactory.newObjectBuilder();\n        for (final Permission permission : Permission.values()) {\n            jsonObjectBuilder.set(permission.toJsonKey(), JsonFactory.newValue(values.contains(permission)));\n        }\n        return jsonObjectBuilder.build();\n    }", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "MutablePermissions.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false, "invocations": ["newObjectBuilder", "values", "set", "toJsonKey", "newValue", "contains", "build"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}