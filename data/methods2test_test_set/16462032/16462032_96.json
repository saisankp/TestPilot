{"test_class": {"identifier": "TranslatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "mucommander-translator/src/test/java/com/mucommander/text/TranslatorTest.java"}, "test_case": {"identifier": "reusesKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void reusesKey() {\n        assert Translator.get(\"key1\").equals(\"Hello\");\n        assert Translator.get(\"key2\").equals(\"World\");\n        assert Translator.get(\"key3\").equals(\"Hello\");\n        assert Translator.get(\"key4\").equals(\"\\\"Hello the World!\\\"\");\n        assert Translator.get(\"key5\").equals(\"\\\"Hello the $[key0]!\\\"\");\n        assert Translator.get(\"key6\").equals(\"-\\\"Hello the World!\\\"-\\\"Hello the $[key0]!\\\"-$[key7]-\");\n    }", "signature": "void reusesKey()", "full_signature": "@Test public void reusesKey()", "class_method_signature": "TranslatorTest.reusesKey()", "testcase": true, "constructor": false, "invocations": ["equals", "get", "equals", "get", "equals", "get", "equals", "get", "equals", "get", "equals", "get"]}, "focal_class": {"identifier": "Translator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Translator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Translator.class)", "var_name": "LOGGER"}, {"original_string": "private static List<Locale> availableLanguages;", "modifier": "private static", "type": "List<Locale>", "declarator": "availableLanguages", "var_name": "availableLanguages"}, {"original_string": "private static ResourceBundle dictionaryBundle;", "modifier": "private static", "type": "ResourceBundle", "declarator": "dictionaryBundle", "var_name": "dictionaryBundle"}, {"original_string": "private static ResourceBundle languagesBundle;", "modifier": "private static", "type": "ResourceBundle", "declarator": "languagesBundle", "var_name": "languagesBundle"}], "methods": [{"identifier": "Translator", "parameters": "()", "modifiers": "private", "return": "", "signature": " Translator()", "full_signature": "private  Translator()", "class_method_signature": "Translator.Translator()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(ResourceBundle dictionaryBundle, ResourceBundle languagesBundle, List<Locale> availableLanguages)", "modifiers": "public static", "return": "void", "signature": "void init(ResourceBundle dictionaryBundle, ResourceBundle languagesBundle, List<Locale> availableLanguages)", "full_signature": "public static void init(ResourceBundle dictionaryBundle, ResourceBundle languagesBundle, List<Locale> availableLanguages)", "class_method_signature": "Translator.init(ResourceBundle dictionaryBundle, ResourceBundle languagesBundle, List<Locale> availableLanguages)", "testcase": false, "constructor": false}, {"identifier": "test", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void test()", "full_signature": "public static void test()", "class_method_signature": "Translator.test()", "testcase": false, "constructor": false}, {"identifier": "getAvailableLanguages", "parameters": "()", "modifiers": "public static", "return": "List<Locale>", "signature": "List<Locale> getAvailableLanguages()", "full_signature": "public static List<Locale> getAvailableLanguages()", "class_method_signature": "Translator.getAvailableLanguages()", "testcase": false, "constructor": false}, {"identifier": "hasValue", "parameters": "(String key, boolean useDefaultLanguage)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasValue(String key, boolean useDefaultLanguage)", "full_signature": "public static boolean hasValue(String key, boolean useDefaultLanguage)", "class_method_signature": "Translator.hasValue(String key, boolean useDefaultLanguage)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key, String... paramValues)", "modifiers": "public static", "return": "String", "signature": "String get(String key, String... paramValues)", "full_signature": "public static String get(String key, String... paramValues)", "class_method_signature": "Translator.get(String key, String... paramValues)", "testcase": false, "constructor": false}], "file": "mucommander-translator/src/main/java/com/mucommander/text/Translator.java"}, "focal_method": {"identifier": "get", "parameters": "(String key, String... paramValues)", "modifiers": "public static", "return": "String", "body": "public static String get(String key, String... paramValues) {\n        if (dictionaryBundle.containsKey(key))\n            return MessageFormat.format(dictionaryBundle.getString(key), (Object[]) paramValues);\n\n        if (languagesBundle.containsKey(key))\n            return languagesBundle.getString(key);\n\n        return key;\n    }", "signature": "String get(String key, String... paramValues)", "full_signature": "public static String get(String key, String... paramValues)", "class_method_signature": "Translator.get(String key, String... paramValues)", "testcase": false, "constructor": false, "invocations": ["containsKey", "format", "getString", "containsKey", "getString"]}, "repository": {"repo_id": 16462032, "url": "https://github.com/mucommander/mucommander", "language": "Java", "is_fork": false, "fork_count": 124, "stargazer_count": 448, "size": 47123, "license": "licensed"}}