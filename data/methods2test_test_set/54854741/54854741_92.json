{"test_class": {"identifier": "CategorizerServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CategorizerService service;", "modifier": "private", "type": "CategorizerService", "declarator": "service", "var_name": "service"}], "file": "services/src/test/java/com/greensopinion/finance/services/domain/CategorizerServiceTest.java"}, "test_case": {"identifier": "categorizeNone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void categorizeNone() {\n\t\tList<Transaction> transactions = ImmutableList.of(MockTransaction.create(\"2015-01-01\", \"no\", 123));\n\t\tList<Transaction> categorized = service.categorize(transactions);\n\t\tassertEquals(transactions, categorized);\n\t\tassertEquals(null, categorized.get(0).getCategory());\n\t}", "signature": "void categorizeNone()", "full_signature": "@Test public void categorizeNone()", "class_method_signature": "CategorizerServiceTest.categorizeNone()", "testcase": true, "constructor": false, "invocations": ["of", "create", "categorize", "assertEquals", "assertEquals", "getCategory", "get"]}, "focal_class": {"identifier": "CategorizerService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final CategoriesService categoriesService;", "modifier": "private final", "type": "CategoriesService", "declarator": "categoriesService", "var_name": "categoriesService"}], "methods": [{"identifier": "CategorizerService", "parameters": "(CategoriesService categoriesService)", "modifiers": "@Inject", "return": "", "signature": " CategorizerService(CategoriesService categoriesService)", "full_signature": "@Inject  CategorizerService(CategoriesService categoriesService)", "class_method_signature": "CategorizerService.CategorizerService(CategoriesService categoriesService)", "testcase": false, "constructor": true}, {"identifier": "categorize", "parameters": "(List<Transaction> transactions)", "modifiers": "public", "return": "List<Transaction>", "signature": "List<Transaction> categorize(List<Transaction> transactions)", "full_signature": "public List<Transaction> categorize(List<Transaction> transactions)", "class_method_signature": "CategorizerService.categorize(List<Transaction> transactions)", "testcase": false, "constructor": false}, {"identifier": "categorize", "parameters": "(Transaction transaction)", "modifiers": "private", "return": "Transaction", "signature": "Transaction categorize(Transaction transaction)", "full_signature": "private Transaction categorize(Transaction transaction)", "class_method_signature": "CategorizerService.categorize(Transaction transaction)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/domain/CategorizerService.java"}, "focal_method": {"identifier": "categorize", "parameters": "(List<Transaction> transactions)", "modifiers": "public", "return": "List<Transaction>", "body": "public List<Transaction> categorize(List<Transaction> transactions) {\n\t\tcheckNotNull(transactions);\n\t\tImmutableList.Builder<Transaction> builder = ImmutableList.builder();\n\t\tfor (Transaction transaction : transactions) {\n\t\t\tbuilder.add(categorize(transaction));\n\t\t}\n\t\treturn builder.build();\n\t}", "signature": "List<Transaction> categorize(List<Transaction> transactions)", "full_signature": "public List<Transaction> categorize(List<Transaction> transactions)", "class_method_signature": "CategorizerService.categorize(List<Transaction> transactions)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "builder", "add", "categorize", "build"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}