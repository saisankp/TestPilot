{"test_class": {"identifier": "MessageListTrapTest", "superclass": "", "interfaces": "", "fields": [], "file": "OcavaCore/src/test/java/com/ocadotechnology/notification/util/MessageListTrapTest.java"}, "test_case": {"identifier": "getCapturedNotifications", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCapturedNotifications() {\n        MessageListTrap<TestNotification> trap = MessageListTrap.createAndSubscribe(TestNotification.class, false, TestSchedulerType.TEST_SCHEDULER_TYPE);\n        NotificationRouter.get().broadcast(new TestNotification());\n        NotificationRouter.get().broadcast(new TestNotification());\n        NotificationRouter.get().broadcast(new TestNotification());\n        Assertions.assertEquals(3, trap.getCapturedNotifications().size(), \"Expected 3 Notifications\");\n    }", "signature": "void getCapturedNotifications()", "full_signature": "@Test public void getCapturedNotifications()", "class_method_signature": "MessageListTrapTest.getCapturedNotifications()", "testcase": true, "constructor": false, "invocations": ["createAndSubscribe", "broadcast", "get", "broadcast", "get", "broadcast", "get", "assertEquals", "size", "getCapturedNotifications"]}, "focal_class": {"identifier": "MessageListTrap", "superclass": "", "interfaces": "implements Subscriber", "fields": [{"original_string": "private final Class<T> type;", "modifier": "private final", "type": "Class<T>", "declarator": "type", "var_name": "type"}, {"original_string": "private final boolean acceptSubclasses;", "modifier": "private final", "type": "boolean", "declarator": "acceptSubclasses", "var_name": "acceptSubclasses"}, {"original_string": "private final EventSchedulerType schedulerType;", "modifier": "private final", "type": "EventSchedulerType", "declarator": "schedulerType", "var_name": "schedulerType"}, {"original_string": "private final List<T> trappedNotifications = new ArrayList<>();", "modifier": "private final", "type": "List<T>", "declarator": "trappedNotifications = new ArrayList<>()", "var_name": "trappedNotifications"}], "methods": [{"identifier": "MessageListTrap", "parameters": "(Class<T> type, boolean acceptSubclasses, EventSchedulerType schedulerType)", "modifiers": "private", "return": "", "signature": " MessageListTrap(Class<T> type, boolean acceptSubclasses, EventSchedulerType schedulerType)", "full_signature": "private  MessageListTrap(Class<T> type, boolean acceptSubclasses, EventSchedulerType schedulerType)", "class_method_signature": "MessageListTrap.MessageListTrap(Class<T> type, boolean acceptSubclasses, EventSchedulerType schedulerType)", "testcase": false, "constructor": true}, {"identifier": "createAndSubscribe", "parameters": "(Class<T> type, boolean acceptSubclasses, EventSchedulerType schedulerType)", "modifiers": "public static", "return": "MessageListTrap<T>", "signature": "MessageListTrap<T> createAndSubscribe(Class<T> type, boolean acceptSubclasses, EventSchedulerType schedulerType)", "full_signature": "public static MessageListTrap<T> createAndSubscribe(Class<T> type, boolean acceptSubclasses, EventSchedulerType schedulerType)", "class_method_signature": "MessageListTrap.createAndSubscribe(Class<T> type, boolean acceptSubclasses, EventSchedulerType schedulerType)", "testcase": false, "constructor": false}, {"identifier": "anyNotificationOfType", "parameters": "(T n)", "modifiers": "@Subscribe public", "return": "void", "signature": "void anyNotificationOfType(T n)", "full_signature": "@Subscribe public void anyNotificationOfType(T n)", "class_method_signature": "MessageListTrap.anyNotificationOfType(T n)", "testcase": false, "constructor": false}, {"identifier": "getCapturedNotifications", "parameters": "()", "modifiers": "public", "return": "ImmutableList<T>", "signature": "ImmutableList<T> getCapturedNotifications()", "full_signature": "public ImmutableList<T> getCapturedNotifications()", "class_method_signature": "MessageListTrap.getCapturedNotifications()", "testcase": false, "constructor": false}, {"identifier": "getSchedulerType", "parameters": "()", "modifiers": "@Override public", "return": "EventSchedulerType", "signature": "EventSchedulerType getSchedulerType()", "full_signature": "@Override public EventSchedulerType getSchedulerType()", "class_method_signature": "MessageListTrap.getSchedulerType()", "testcase": false, "constructor": false}], "file": "OcavaCore/src/main/java/com/ocadotechnology/notification/util/MessageListTrap.java"}, "focal_method": {"identifier": "getCapturedNotifications", "parameters": "()", "modifiers": "public", "return": "ImmutableList<T>", "body": "public ImmutableList<T> getCapturedNotifications() {\n        return ImmutableList.copyOf(trappedNotifications);\n    }", "signature": "ImmutableList<T> getCapturedNotifications()", "full_signature": "public ImmutableList<T> getCapturedNotifications()", "class_method_signature": "MessageListTrap.getCapturedNotifications()", "testcase": false, "constructor": false, "invocations": ["copyOf"]}, "repository": {"repo_id": 99997703, "url": "https://github.com/ocadotechnology/Ocava", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 1137, "license": "licensed"}}