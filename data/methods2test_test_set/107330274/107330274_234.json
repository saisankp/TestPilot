{"test_class": {"identifier": "VmManagementResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ParameterizedTypeReference<List<ServerInfo>> LIST_SERVER_INFOS_TREF = new ParameterizedTypeReference<List<ServerInfo>>() {\n    };", "modifier": "private static final", "type": "ParameterizedTypeReference<List<ServerInfo>>", "declarator": "LIST_SERVER_INFOS_TREF = new ParameterizedTypeReference<List<ServerInfo>>() {\n    }", "var_name": "LIST_SERVER_INFOS_TREF"}, {"original_string": "private static final ParameterizedTypeReference<List<VMOperations.AgentInfo>> LIST_AGENT_INFO_TREF = new ParameterizedTypeReference<List<VMOperations.AgentInfo>>() {\n    };", "modifier": "private static final", "type": "ParameterizedTypeReference<List<VMOperations.AgentInfo>>", "declarator": "LIST_AGENT_INFO_TREF = new ParameterizedTypeReference<List<VMOperations.AgentInfo>>() {\n    }", "var_name": "LIST_AGENT_INFO_TREF"}, {"original_string": "private static final ParameterizedTypeReference<Map<String, List<VMOperations.JobsOnVMStatus>>> MAP_JOBS_ON_VMS_TREF =\n            new ParameterizedTypeReference<Map<String, List<VMOperations.JobsOnVMStatus>>>() {\n            };", "modifier": "private static final", "type": "ParameterizedTypeReference<Map<String, List<VMOperations.JobsOnVMStatus>>>", "declarator": "MAP_JOBS_ON_VMS_TREF =\n            new ParameterizedTypeReference<Map<String, List<VMOperations.JobsOnVMStatus>>>() {\n            }", "var_name": "MAP_JOBS_ON_VMS_TREF"}, {"original_string": "private static ServerInfoResolver serverInfoResolver = mock(ServerInfoResolver.class);", "modifier": "private static", "type": "ServerInfoResolver", "declarator": "serverInfoResolver = mock(ServerInfoResolver.class)", "var_name": "serverInfoResolver"}, {"original_string": "private static VMOperations vmOps = mock(VMOperations.class);", "modifier": "private static", "type": "VMOperations", "declarator": "vmOps = mock(VMOperations.class)", "var_name": "vmOps"}, {"original_string": "private static final VmManagementResource restService = new VmManagementResource(serverInfoResolver, vmOps);", "modifier": "private static final", "type": "VmManagementResource", "declarator": "restService = new VmManagementResource(serverInfoResolver, vmOps)", "var_name": "restService"}, {"original_string": "@ClassRule\n    public static final JaxRsServerResource<VmManagementResource> jaxRsServer = JaxRsServerResource.newBuilder(restService)\n            .withProviders(new JsonMessageReaderWriter(), new TitusExceptionMapper())\n            .build();", "modifier": "@ClassRule\n    public static final", "type": "JaxRsServerResource<VmManagementResource>", "declarator": "jaxRsServer = JaxRsServerResource.newBuilder(restService)\n            .withProviders(new JsonMessageReaderWriter(), new TitusExceptionMapper())\n            .build()", "var_name": "jaxRsServer"}, {"original_string": "private static WebTestClient testClient;", "modifier": "private static", "type": "WebTestClient", "declarator": "testClient", "var_name": "testClient"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/endpoint/v2/rest/VmManagementResourceTest.java"}, "test_case": {"identifier": "testGetServerInfos", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetServerInfos() {\n        when(serverInfoResolver.resolveAll()).thenReturn(Collections.singletonList(createServerInfo()));\n\n        testClient.get().uri(VmManagementEndpoint.PATH_LIST_SERVER_INFOS).exchange()\n                .expectBody(LIST_SERVER_INFOS_TREF)\n                .value(serverInfos -> assertThat(serverInfos).hasSize(1));\n\n        verify(serverInfoResolver, times(1)).resolveAll();\n    }", "signature": "void testGetServerInfos()", "full_signature": "@Test public void testGetServerInfos()", "class_method_signature": "VmManagementResourceTest.testGetServerInfos()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "resolveAll", "singletonList", "createServerInfo", "value", "expectBody", "exchange", "uri", "get", "hasSize", "assertThat", "resolveAll", "verify", "times"]}, "focal_class": {"identifier": "VmManagementResource", "superclass": "", "interfaces": "implements VmManagementEndpoint", "fields": [{"original_string": "private final ServerInfoResolver serverInfoResolver;", "modifier": "private final", "type": "ServerInfoResolver", "declarator": "serverInfoResolver", "var_name": "serverInfoResolver"}, {"original_string": "private final VMOperations vmOps;", "modifier": "private final", "type": "VMOperations", "declarator": "vmOps", "var_name": "vmOps"}], "methods": [{"identifier": "VmManagementResource", "parameters": "(ServerInfoResolver serverInfoResolver, VMOperations vmOps)", "modifiers": "@Inject public", "return": "", "signature": " VmManagementResource(ServerInfoResolver serverInfoResolver, VMOperations vmOps)", "full_signature": "@Inject public  VmManagementResource(ServerInfoResolver serverInfoResolver, VMOperations vmOps)", "class_method_signature": "VmManagementResource.VmManagementResource(ServerInfoResolver serverInfoResolver, VMOperations vmOps)", "testcase": false, "constructor": true}, {"identifier": "getServerInfos", "parameters": "()", "modifiers": "@GET @Path(PATH_LIST_SERVER_INFOS) @Override public", "return": "List<ServerInfo>", "signature": "List<ServerInfo> getServerInfos()", "full_signature": "@GET @Path(PATH_LIST_SERVER_INFOS) @Override public List<ServerInfo> getServerInfos()", "class_method_signature": "VmManagementResource.getServerInfos()", "testcase": false, "constructor": false}, {"identifier": "getAgents", "parameters": "(@QueryParam(\"detached\") Boolean detached)", "modifiers": "@GET @Path(PATH_LIST_AGENTS) @Override public", "return": "List<VMOperations.AgentInfo>", "signature": "List<VMOperations.AgentInfo> getAgents(@QueryParam(\"detached\") Boolean detached)", "full_signature": "@GET @Path(PATH_LIST_AGENTS) @Override public List<VMOperations.AgentInfo> getAgents(@QueryParam(\"detached\") Boolean detached)", "class_method_signature": "VmManagementResource.getAgents(@QueryParam(\"detached\") Boolean detached)", "testcase": false, "constructor": false}, {"identifier": "getJobsOnVM", "parameters": "(\n            @QueryParam(\"idleOnly\") boolean idleOnly,\n            @QueryParam(\"excludeIdle\") boolean excludeIdle)", "modifiers": "@GET @Path(PATH_LIST_JOBS_ON_VM) @Override public", "return": "Map<String, List<VMOperations.JobsOnVMStatus>>", "signature": "Map<String, List<VMOperations.JobsOnVMStatus>> getJobsOnVM(\n            @QueryParam(\"idleOnly\") boolean idleOnly,\n            @QueryParam(\"excludeIdle\") boolean excludeIdle)", "full_signature": "@GET @Path(PATH_LIST_JOBS_ON_VM) @Override public Map<String, List<VMOperations.JobsOnVMStatus>> getJobsOnVM(\n            @QueryParam(\"idleOnly\") boolean idleOnly,\n            @QueryParam(\"excludeIdle\") boolean excludeIdle)", "class_method_signature": "VmManagementResource.getJobsOnVM(\n            @QueryParam(\"idleOnly\") boolean idleOnly,\n            @QueryParam(\"excludeIdle\") boolean excludeIdle)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/endpoint/v2/rest/VmManagementResource.java"}, "focal_method": {"identifier": "getServerInfos", "parameters": "()", "modifiers": "@GET @Path(PATH_LIST_SERVER_INFOS) @Override public", "return": "List<ServerInfo>", "body": "@GET\n    @Path(PATH_LIST_SERVER_INFOS)\n    @Override\n    public List<ServerInfo> getServerInfos() {\n        return serverInfoResolver.resolveAll();\n    }", "signature": "List<ServerInfo> getServerInfos()", "full_signature": "@GET @Path(PATH_LIST_SERVER_INFOS) @Override public List<ServerInfo> getServerInfos()", "class_method_signature": "VmManagementResource.getServerInfos()", "testcase": false, "constructor": false, "invocations": ["resolveAll"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}