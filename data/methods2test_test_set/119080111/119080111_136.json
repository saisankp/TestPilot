{"test_class": {"identifier": "DoubleValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "opt4j-core/src/test/java/org/opt4j/core/DoubleValueTest.java"}, "test_case": {"identifier": "compareToTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void compareToTest() {\n\t\tDoubleValue dnull = new DoubleValue(null);\n\t\tDoubleValue dnull1 = new DoubleValue(null);\n\t\tDoubleValue d1 = new DoubleValue(1.0);\n\t\tDoubleValue d11 = new DoubleValue(1.0);\n\t\tDoubleValue d2 = new DoubleValue(2.0);\n\n\t\tAssert.assertEquals(0, dnull.compareTo(dnull1));\n\t\tAssert.assertEquals(0, d1.compareTo(d11));\n\t\tAssert.assertEquals(dnull, dnull1);\n\t\tAssert.assertEquals(d1, d11);\n\t\tAssert.assertTrue(dnull.compareTo(d1) > 0);\n\t\tAssert.assertTrue(d1.compareTo(dnull) < 0);\n\t\tAssert.assertTrue(d1.compareTo(d2) < 0);\n\t\tAssert.assertTrue(d2.compareTo(d1) > 0);\n\t}", "signature": "void compareToTest()", "full_signature": "@Test public void compareToTest()", "class_method_signature": "DoubleValueTest.compareToTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "compareTo", "assertEquals", "compareTo", "assertEquals", "assertEquals", "assertTrue", "compareTo", "assertTrue", "compareTo", "assertTrue", "compareTo", "assertTrue", "compareTo"]}, "focal_class": {"identifier": "DoubleValue", "superclass": "", "interfaces": "implements Value<Double>", "fields": [{"original_string": "protected Double value = null;", "modifier": "protected", "type": "Double", "declarator": "value = null", "var_name": "value"}], "methods": [{"identifier": "DoubleValue", "parameters": "(Double value)", "modifiers": "public", "return": "", "signature": " DoubleValue(Double value)", "full_signature": "public  DoubleValue(Double value)", "class_method_signature": "DoubleValue.DoubleValue(Double value)", "testcase": false, "constructor": true}, {"identifier": "getDouble", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getDouble()", "full_signature": "@Override public Double getDouble()", "class_method_signature": "DoubleValue.getDouble()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getValue()", "full_signature": "@Override public Double getValue()", "class_method_signature": "DoubleValue.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Double value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(Double value)", "full_signature": "@Override public void setValue(Double value)", "class_method_signature": "DoubleValue.setValue(Double value)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Value<Double> arg)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Value<Double> arg)", "full_signature": "@Override public int compareTo(Value<Double> arg)", "class_method_signature": "DoubleValue.compareTo(Value<Double> arg)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DoubleValue.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "DoubleValue.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DoubleValue.toString()", "testcase": false, "constructor": false}], "file": "opt4j-core/src/main/java/org/opt4j/core/DoubleValue.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(Value<Double> arg)", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int compareTo(Value<Double> arg) {\n\t\tif (arg == null) {\n\t\t\treturn -1;\n\t\t}\n\t\tDouble other = arg.getValue();\n\t\tif (value == null) {\n\t\t\tif (other == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn 1;\n\t\t} else if (other == null) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn value.compareTo(other);\n\t}", "signature": "int compareTo(Value<Double> arg)", "full_signature": "@Override public int compareTo(Value<Double> arg)", "class_method_signature": "DoubleValue.compareTo(Value<Double> arg)", "testcase": false, "constructor": false, "invocations": ["getValue", "compareTo"]}, "repository": {"repo_id": 119080111, "url": "https://github.com/felixreimann/opt4j", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 11, "size": 8771, "license": "licensed"}}