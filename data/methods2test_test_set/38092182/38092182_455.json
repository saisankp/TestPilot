{"test_class": {"identifier": "MraidVideoViewControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private Bundle bundle;", "modifier": "private", "type": "Bundle", "declarator": "bundle", "var_name": "bundle"}, {"original_string": "private long testBroadcastIdentifier;", "modifier": "private", "type": "long", "declarator": "testBroadcastIdentifier", "var_name": "testBroadcastIdentifier"}, {"original_string": "private MraidVideoViewController subject;", "modifier": "private", "type": "MraidVideoViewController", "declarator": "subject", "var_name": "subject"}, {"original_string": "private BaseVideoViewControllerListener baseVideoViewControllerListener;", "modifier": "private", "type": "BaseVideoViewControllerListener", "declarator": "baseVideoViewControllerListener", "var_name": "baseVideoViewControllerListener"}, {"original_string": "private EventForwardingBroadcastReceiver broadcastReceiver;", "modifier": "private", "type": "EventForwardingBroadcastReceiver", "declarator": "broadcastReceiver", "var_name": "broadcastReceiver"}], "file": "MoPubAd/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java"}, "test_case": {"identifier": "onErrorListener_shouldBroadcastInterstitialError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onErrorListener_shouldBroadcastInterstitialError() throws Exception {\n        Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_FAIL, testBroadcastIdentifier);\n\n        initializeSubject();\n        subject.onCreate();\n\n        assertThat(getShadowVideoView().getOnErrorListener().onError(null, 0, 0)).isEqualTo(false);\n        Robolectric.getUiThreadScheduler().unPause();\n\n        verify(broadcastReceiver).onReceive(any(Context.class), eq(expectedIntent));\n    }", "signature": "void onErrorListener_shouldBroadcastInterstitialError()", "full_signature": "@Test public void onErrorListener_shouldBroadcastInterstitialError()", "class_method_signature": "MraidVideoViewControllerTest.onErrorListener_shouldBroadcastInterstitialError()", "testcase": true, "constructor": false, "invocations": ["getIntentForActionAndIdentifier", "initializeSubject", "onCreate", "isEqualTo", "assertThat", "onError", "getOnErrorListener", "getShadowVideoView", "unPause", "getUiThreadScheduler", "onReceive", "verify", "any", "eq"]}, "focal_class": {"identifier": "MraidVideoViewController", "superclass": "extends BaseVideoViewController", "interfaces": "", "fields": [{"original_string": "private static final float CLOSE_BUTTON_SIZE = 50f;", "modifier": "private static final", "type": "float", "declarator": "CLOSE_BUTTON_SIZE = 50f", "var_name": "CLOSE_BUTTON_SIZE"}, {"original_string": "private static final float CLOSE_BUTTON_PADDING = 8f;", "modifier": "private static final", "type": "float", "declarator": "CLOSE_BUTTON_PADDING = 8f", "var_name": "CLOSE_BUTTON_PADDING"}, {"original_string": "private final VideoView mVideoView;", "modifier": "private final", "type": "VideoView", "declarator": "mVideoView", "var_name": "mVideoView"}, {"original_string": "private ImageButton mCloseButton;", "modifier": "private", "type": "ImageButton", "declarator": "mCloseButton", "var_name": "mCloseButton"}, {"original_string": "private int mButtonPadding;", "modifier": "private", "type": "int", "declarator": "mButtonPadding", "var_name": "mButtonPadding"}, {"original_string": "private int mButtonSize;", "modifier": "private", "type": "int", "declarator": "mButtonSize", "var_name": "mButtonSize"}], "methods": [{"identifier": "MraidVideoViewController", "parameters": "(final Context context, final Bundle bundle, final long broadcastIdentifier, final BaseVideoViewControllerListener baseVideoViewControllerListener)", "modifiers": "public", "return": "", "signature": " MraidVideoViewController(final Context context, final Bundle bundle, final long broadcastIdentifier, final BaseVideoViewControllerListener baseVideoViewControllerListener)", "full_signature": "public  MraidVideoViewController(final Context context, final Bundle bundle, final long broadcastIdentifier, final BaseVideoViewControllerListener baseVideoViewControllerListener)", "class_method_signature": "MraidVideoViewController.MraidVideoViewController(final Context context, final Bundle bundle, final long broadcastIdentifier, final BaseVideoViewControllerListener baseVideoViewControllerListener)", "testcase": false, "constructor": true}, {"identifier": "onCreate", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onCreate()", "full_signature": "@Override protected void onCreate()", "class_method_signature": "MraidVideoViewController.onCreate()", "testcase": false, "constructor": false}, {"identifier": "getVideoView", "parameters": "()", "modifiers": "@Override protected", "return": "VideoView", "signature": "VideoView getVideoView()", "full_signature": "@Override protected VideoView getVideoView()", "class_method_signature": "MraidVideoViewController.getVideoView()", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override protected void onDestroy()", "class_method_signature": "MraidVideoViewController.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "onPause", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onPause()", "full_signature": "@Override protected void onPause()", "class_method_signature": "MraidVideoViewController.onPause()", "testcase": false, "constructor": false}, {"identifier": "onResume", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onResume()", "full_signature": "@Override protected void onResume()", "class_method_signature": "MraidVideoViewController.onResume()", "testcase": false, "constructor": false}, {"identifier": "createInterstitialCloseButton", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createInterstitialCloseButton()", "full_signature": "private void createInterstitialCloseButton()", "class_method_signature": "MraidVideoViewController.createInterstitialCloseButton()", "testcase": false, "constructor": false}], "file": "MoPubAd/mopub-sdk/src/main/java/com/mopub/mraid/MraidVideoViewController.java"}, "focal_method": {"identifier": "onCreate", "parameters": "()", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void onCreate() {\n        super.onCreate();\n        mButtonSize = Dips.asIntPixels(CLOSE_BUTTON_SIZE, getContext());\n        mButtonPadding = Dips.asIntPixels(CLOSE_BUTTON_PADDING, getContext());\n        createInterstitialCloseButton();\n        mCloseButton.setVisibility(GONE);\n        mVideoView.start();\n    }", "signature": "void onCreate()", "full_signature": "@Override protected void onCreate()", "class_method_signature": "MraidVideoViewController.onCreate()", "testcase": false, "constructor": false, "invocations": ["onCreate", "asIntPixels", "getContext", "asIntPixels", "getContext", "createInterstitialCloseButton", "setVisibility", "start"]}, "repository": {"repo_id": 38092182, "url": "https://github.com/harshalbenake/hbworkspace2-100", "language": "Java", "is_fork": false, "fork_count": 160, "stargazer_count": 191, "size": 307516, "license": "licensed"}}