{"test_class": {"identifier": "EventPublishingServiceDiscoveryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final URL url = URL.valueOf(\"zookeeper://127.0.0.1:2181/\");", "modifier": "private static final", "type": "URL", "declarator": "url = URL.valueOf(\"zookeeper://127.0.0.1:2181/\")", "var_name": "url"}, {"original_string": "private EventDispatcher eventDispatcher = EventDispatcher.getDefaultExtension();", "modifier": "private", "type": "EventDispatcher", "declarator": "eventDispatcher = EventDispatcher.getDefaultExtension()", "var_name": "eventDispatcher"}, {"original_string": "private InMemoryServiceDiscovery delegate;", "modifier": "private", "type": "InMemoryServiceDiscovery", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private EventPublishingServiceDiscovery serviceDiscovery;", "modifier": "private", "type": "EventPublishingServiceDiscovery", "declarator": "serviceDiscovery", "var_name": "serviceDiscovery"}, {"original_string": "private ServiceDiscoveryTest serviceDiscoveryTest;", "modifier": "private", "type": "ServiceDiscoveryTest", "declarator": "serviceDiscoveryTest", "var_name": "serviceDiscoveryTest"}], "file": "dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/EventPublishingServiceDiscoveryTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        serviceDiscoveryTest.testToString();\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "EventPublishingServiceDiscoveryTest.testToString()", "testcase": true, "constructor": false, "invocations": ["testToString"]}, "focal_class": {"identifier": "EventPublishingServiceDiscovery", "superclass": "", "interfaces": "implements ServiceDiscovery", "fields": [{"original_string": "protected static final String REGISTER_ACTION = \"register\";", "modifier": "protected static final", "type": "String", "declarator": "REGISTER_ACTION = \"register\"", "var_name": "REGISTER_ACTION"}, {"original_string": "protected static final String UPDATE_ACTION = \"update\";", "modifier": "protected static final", "type": "String", "declarator": "UPDATE_ACTION = \"update\"", "var_name": "UPDATE_ACTION"}, {"original_string": "protected static final String UNREGISTER_ACTION = \"unregister\";", "modifier": "protected static final", "type": "String", "declarator": "UNREGISTER_ACTION = \"unregister\"", "var_name": "UNREGISTER_ACTION"}, {"original_string": "protected static final String INITIALIZE_ACTION = \"initialize\";", "modifier": "protected static final", "type": "String", "declarator": "INITIALIZE_ACTION = \"initialize\"", "var_name": "INITIALIZE_ACTION"}, {"original_string": "protected static final String DESTROY_ACTION = \"destroy\";", "modifier": "protected static final", "type": "String", "declarator": "DESTROY_ACTION = \"destroy\"", "var_name": "DESTROY_ACTION"}, {"original_string": "protected final EventDispatcher eventDispatcher = EventDispatcher.getDefaultExtension();", "modifier": "protected final", "type": "EventDispatcher", "declarator": "eventDispatcher = EventDispatcher.getDefaultExtension()", "var_name": "eventDispatcher"}, {"original_string": "protected final AtomicBoolean initialized = new AtomicBoolean(false);", "modifier": "protected final", "type": "AtomicBoolean", "declarator": "initialized = new AtomicBoolean(false)", "var_name": "initialized"}, {"original_string": "protected final AtomicBoolean destroyed = new AtomicBoolean(false);", "modifier": "protected final", "type": "AtomicBoolean", "declarator": "destroyed = new AtomicBoolean(false)", "var_name": "destroyed"}, {"original_string": "protected final Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "protected final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "private final ServiceDiscovery serviceDiscovery;", "modifier": "private final", "type": "ServiceDiscovery", "declarator": "serviceDiscovery", "var_name": "serviceDiscovery"}], "methods": [{"identifier": "EventPublishingServiceDiscovery", "parameters": "(ServiceDiscovery serviceDiscovery)", "modifiers": "protected", "return": "", "signature": " EventPublishingServiceDiscovery(ServiceDiscovery serviceDiscovery)", "full_signature": "protected  EventPublishingServiceDiscovery(ServiceDiscovery serviceDiscovery)", "class_method_signature": "EventPublishingServiceDiscovery.EventPublishingServiceDiscovery(ServiceDiscovery serviceDiscovery)", "testcase": false, "constructor": true}, {"identifier": "register", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public final", "return": "void", "signature": "void register(ServiceInstance serviceInstance)", "full_signature": "@Override public final void register(ServiceInstance serviceInstance)", "class_method_signature": "EventPublishingServiceDiscovery.register(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public final", "return": "void", "signature": "void update(ServiceInstance serviceInstance)", "full_signature": "@Override public final void update(ServiceInstance serviceInstance)", "class_method_signature": "EventPublishingServiceDiscovery.update(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public final", "return": "void", "signature": "void unregister(ServiceInstance serviceInstance)", "full_signature": "@Override public final void unregister(ServiceInstance serviceInstance)", "class_method_signature": "EventPublishingServiceDiscovery.unregister(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "getServices", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getServices()", "full_signature": "@Override public Set<String> getServices()", "class_method_signature": "EventPublishingServiceDiscovery.getServices()", "testcase": false, "constructor": false}, {"identifier": "getInstances", "parameters": "(String serviceName)", "modifiers": "@Override public", "return": "List<ServiceInstance>", "signature": "List<ServiceInstance> getInstances(String serviceName)", "full_signature": "@Override public List<ServiceInstance> getInstances(String serviceName)", "class_method_signature": "EventPublishingServiceDiscovery.getInstances(String serviceName)", "testcase": false, "constructor": false}, {"identifier": "getInstances", "parameters": "(String serviceName, int offset, int pageSize)", "modifiers": "@Override public", "return": "Page<ServiceInstance>", "signature": "Page<ServiceInstance> getInstances(String serviceName, int offset, int pageSize)", "full_signature": "@Override public Page<ServiceInstance> getInstances(String serviceName, int offset, int pageSize)", "class_method_signature": "EventPublishingServiceDiscovery.getInstances(String serviceName, int offset, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "getInstances", "parameters": "(String serviceName, int offset, int pageSize, boolean healthyOnly)", "modifiers": "@Override public", "return": "Page<ServiceInstance>", "signature": "Page<ServiceInstance> getInstances(String serviceName, int offset, int pageSize, boolean healthyOnly)", "full_signature": "@Override public Page<ServiceInstance> getInstances(String serviceName, int offset, int pageSize, boolean healthyOnly)", "class_method_signature": "EventPublishingServiceDiscovery.getInstances(String serviceName, int offset, int pageSize, boolean healthyOnly)", "testcase": false, "constructor": false}, {"identifier": "getInstances", "parameters": "(Iterable<String> serviceNames, int offset, int requestSize)", "modifiers": "@Override public", "return": "Map<String, Page<ServiceInstance>>", "signature": "Map<String, Page<ServiceInstance>> getInstances(Iterable<String> serviceNames, int offset, int requestSize)", "full_signature": "@Override public Map<String, Page<ServiceInstance>> getInstances(Iterable<String> serviceNames, int offset, int requestSize)", "class_method_signature": "EventPublishingServiceDiscovery.getInstances(Iterable<String> serviceNames, int offset, int requestSize)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "EventPublishingServiceDiscovery.toString()", "testcase": false, "constructor": false}, {"identifier": "addServiceInstancesChangedListener", "parameters": "(ServiceInstancesChangedListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addServiceInstancesChangedListener(ServiceInstancesChangedListener listener)", "full_signature": "@Override public void addServiceInstancesChangedListener(ServiceInstancesChangedListener listener)", "class_method_signature": "EventPublishingServiceDiscovery.addServiceInstancesChangedListener(ServiceInstancesChangedListener listener)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "@Override public", "return": "URL", "signature": "URL getUrl()", "full_signature": "@Override public URL getUrl()", "class_method_signature": "EventPublishingServiceDiscovery.getUrl()", "testcase": false, "constructor": false}, {"identifier": "getLocalInstance", "parameters": "()", "modifiers": "@Override public", "return": "ServiceInstance", "signature": "ServiceInstance getLocalInstance()", "full_signature": "@Override public ServiceInstance getLocalInstance()", "class_method_signature": "EventPublishingServiceDiscovery.getLocalInstance()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(URL registryURL)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(URL registryURL)", "full_signature": "@Override public void initialize(URL registryURL)", "class_method_signature": "EventPublishingServiceDiscovery.initialize(URL registryURL)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "EventPublishingServiceDiscovery.destroy()", "testcase": false, "constructor": false}, {"identifier": "executeWithEvents", "parameters": "(Optional<? extends Event> beforeEvent,\n                                           ThrowableAction action,\n                                           Optional<? extends Event> afterEvent)", "modifiers": "protected final", "return": "void", "signature": "void executeWithEvents(Optional<? extends Event> beforeEvent,\n                                           ThrowableAction action,\n                                           Optional<? extends Event> afterEvent)", "full_signature": "protected final void executeWithEvents(Optional<? extends Event> beforeEvent,\n                                           ThrowableAction action,\n                                           Optional<? extends Event> afterEvent)", "class_method_signature": "EventPublishingServiceDiscovery.executeWithEvents(Optional<? extends Event> beforeEvent,\n                                           ThrowableAction action,\n                                           Optional<? extends Event> afterEvent)", "testcase": false, "constructor": false}, {"identifier": "dispatchEvent", "parameters": "(Event event)", "modifiers": "private", "return": "void", "signature": "void dispatchEvent(Event event)", "full_signature": "private void dispatchEvent(Event event)", "class_method_signature": "EventPublishingServiceDiscovery.dispatchEvent(Event event)", "testcase": false, "constructor": false}, {"identifier": "isInitialized", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isInitialized()", "full_signature": "public final boolean isInitialized()", "class_method_signature": "EventPublishingServiceDiscovery.isInitialized()", "testcase": false, "constructor": false}, {"identifier": "isDestroyed", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isDestroyed()", "full_signature": "public final boolean isDestroyed()", "class_method_signature": "EventPublishingServiceDiscovery.isDestroyed()", "testcase": false, "constructor": false}, {"identifier": "assertDestroyed", "parameters": "(String action)", "modifiers": "protected", "return": "void", "signature": "void assertDestroyed(String action)", "full_signature": "protected void assertDestroyed(String action)", "class_method_signature": "EventPublishingServiceDiscovery.assertDestroyed(String action)", "testcase": false, "constructor": false}, {"identifier": "assertInitialized", "parameters": "(String action)", "modifiers": "protected", "return": "void", "signature": "void assertInitialized(String action)", "full_signature": "protected void assertInitialized(String action)", "class_method_signature": "EventPublishingServiceDiscovery.assertInitialized(String action)", "testcase": false, "constructor": false}], "file": "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/client/EventPublishingServiceDiscovery.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return serviceDiscovery.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "EventPublishingServiceDiscovery.toString()", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}