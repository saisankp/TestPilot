{"test_class": {"identifier": "PriorityServiceComparatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/PriorityServiceComparatorTest.java"}, "test_case": {"identifier": "compare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compare() throws Exception {\n        assertThat(PriorityServiceComparator.getInstance().compare(\"a\", \"b\")==0).isTrue();\n        assertThat(PriorityServiceComparator.getInstance().compare(getClass(), getClass())==0).isTrue();\n        assertThat(PriorityServiceComparator.getInstance().compare(new A(), new SystemPropertySource())==-1).isTrue();\n        assertThat(PriorityServiceComparator.getInstance().compare(new SystemPropertySource(), new A())==1).isTrue();\n    }", "signature": "void compare()", "full_signature": "@Test public void compare()", "class_method_signature": "PriorityServiceComparatorTest.compare()", "testcase": true, "constructor": false, "invocations": ["isTrue", "assertThat", "compare", "getInstance", "isTrue", "assertThat", "compare", "getInstance", "getClass", "getClass", "isTrue", "assertThat", "compare", "getInstance", "isTrue", "assertThat", "compare", "getInstance"]}, "focal_class": {"identifier": "PriorityServiceComparator", "superclass": "", "interfaces": "implements Comparator<Object>, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final PriorityServiceComparator INSTANCE = new PriorityServiceComparator();", "modifier": "private static final", "type": "PriorityServiceComparator", "declarator": "INSTANCE = new PriorityServiceComparator()", "var_name": "INSTANCE"}], "methods": [{"identifier": "PriorityServiceComparator", "parameters": "()", "modifiers": "private", "return": "", "signature": " PriorityServiceComparator()", "full_signature": "private  PriorityServiceComparator()", "class_method_signature": "PriorityServiceComparator.PriorityServiceComparator()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "PriorityServiceComparator", "signature": "PriorityServiceComparator getInstance()", "full_signature": "public static PriorityServiceComparator getInstance()", "class_method_signature": "PriorityServiceComparator.getInstance()", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(Object o1, Object o2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(Object o1, Object o2)", "full_signature": "@Override public int compare(Object o1, Object o2)", "class_method_signature": "PriorityServiceComparator.compare(Object o1, Object o2)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "(Object o)", "modifiers": "public static", "return": "int", "signature": "int getPriority(Object o)", "full_signature": "public static int getPriority(Object o)", "class_method_signature": "PriorityServiceComparator.getPriority(Object o)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "(Class type)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static", "return": "int", "signature": "int getPriority(Class type)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static int getPriority(Class type)", "class_method_signature": "PriorityServiceComparator.getPriority(Class type)", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/PriorityServiceComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(Object o1, Object o2)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compare(Object o1, Object o2) {\n        int prio = getPriority(o1) - getPriority(o2);\n        if (prio < 0) {\n            return 1;\n        } else if (prio > 0) {\n            return -1;\n        } else {\n            return o1.getClass().getSimpleName().compareTo(o2.getClass().getSimpleName());\n        }\n    }", "signature": "int compare(Object o1, Object o2)", "full_signature": "@Override public int compare(Object o1, Object o2)", "class_method_signature": "PriorityServiceComparator.compare(Object o1, Object o2)", "testcase": false, "constructor": false, "invocations": ["getPriority", "getPriority", "compareTo", "getSimpleName", "getClass", "getSimpleName", "getClass"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}