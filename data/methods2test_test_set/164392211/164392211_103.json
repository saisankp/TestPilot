{"test_class": {"identifier": "CsvSaverTest", "superclass": "extends BaseCsvTest", "interfaces": "", "fields": [], "file": "dflib-csv/src/test/java/com/nhl/dflib/csv/CsvSaverTest.java"}, "test_case": {"identifier": "testSaveToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSaveToString() {\n\n        DataFrame df = DataFrame.newFrame(\"A\", \"B\").foldByRow(\n                1, 2,\n                3, 4);\n\n        assertEquals(\"A,B\\r\\n\" +\n                \"1,2\\r\\n\" +\n                \"3,4\\r\\n\", Csv.saver().saveToString(df));\n    }", "signature": "void testSaveToString()", "full_signature": "@Test public void testSaveToString()", "class_method_signature": "CsvSaverTest.testSaveToString()", "testcase": true, "constructor": false, "invocations": ["foldByRow", "newFrame", "assertEquals", "saveToString", "saver"]}, "focal_class": {"identifier": "CsvSaver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CSVFormat format;", "modifier": "private", "type": "CSVFormat", "declarator": "format", "var_name": "format"}, {"original_string": "private boolean createMissingDirs;", "modifier": "private", "type": "boolean", "declarator": "createMissingDirs", "var_name": "createMissingDirs"}, {"original_string": "private boolean printHeader;", "modifier": "private", "type": "boolean", "declarator": "printHeader", "var_name": "printHeader"}], "methods": [{"identifier": "CsvSaver", "parameters": "()", "modifiers": "public", "return": "", "signature": " CsvSaver()", "full_signature": "public  CsvSaver()", "class_method_signature": "CsvSaver.CsvSaver()", "testcase": false, "constructor": true}, {"identifier": "format", "parameters": "(CSVFormat format)", "modifiers": "public", "return": "CsvSaver", "signature": "CsvSaver format(CSVFormat format)", "full_signature": "public CsvSaver format(CSVFormat format)", "class_method_signature": "CsvSaver.format(CSVFormat format)", "testcase": false, "constructor": false}, {"identifier": "createMissingDirs", "parameters": "()", "modifiers": "public", "return": "CsvSaver", "signature": "CsvSaver createMissingDirs()", "full_signature": "public CsvSaver createMissingDirs()", "class_method_signature": "CsvSaver.createMissingDirs()", "testcase": false, "constructor": false}, {"identifier": "noHeader", "parameters": "()", "modifiers": "public", "return": "CsvSaver", "signature": "CsvSaver noHeader()", "full_signature": "public CsvSaver noHeader()", "class_method_signature": "CsvSaver.noHeader()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(DataFrame df, File file)", "modifiers": "public", "return": "void", "signature": "void save(DataFrame df, File file)", "full_signature": "public void save(DataFrame df, File file)", "class_method_signature": "CsvSaver.save(DataFrame df, File file)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(DataFrame df, String fileName)", "modifiers": "public", "return": "void", "signature": "void save(DataFrame df, String fileName)", "full_signature": "public void save(DataFrame df, String fileName)", "class_method_signature": "CsvSaver.save(DataFrame df, String fileName)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(DataFrame df, Appendable out)", "modifiers": "public", "return": "void", "signature": "void save(DataFrame df, Appendable out)", "full_signature": "public void save(DataFrame df, Appendable out)", "class_method_signature": "CsvSaver.save(DataFrame df, Appendable out)", "testcase": false, "constructor": false}, {"identifier": "saveToString", "parameters": "(DataFrame df)", "modifiers": "public", "return": "String", "signature": "String saveToString(DataFrame df)", "full_signature": "public String saveToString(DataFrame df)", "class_method_signature": "CsvSaver.saveToString(DataFrame df)", "testcase": false, "constructor": false}, {"identifier": "printHeader", "parameters": "(CSVPrinter printer, Index index)", "modifiers": "private", "return": "void", "signature": "void printHeader(CSVPrinter printer, Index index)", "full_signature": "private void printHeader(CSVPrinter printer, Index index)", "class_method_signature": "CsvSaver.printHeader(CSVPrinter printer, Index index)", "testcase": false, "constructor": false}, {"identifier": "printRow", "parameters": "(CSVPrinter printer, RowProxy row, int len)", "modifiers": "private", "return": "void", "signature": "void printRow(CSVPrinter printer, RowProxy row, int len)", "full_signature": "private void printRow(CSVPrinter printer, RowProxy row, int len)", "class_method_signature": "CsvSaver.printRow(CSVPrinter printer, RowProxy row, int len)", "testcase": false, "constructor": false}], "file": "dflib-csv/src/main/java/com/nhl/dflib/csv/CsvSaver.java"}, "focal_method": {"identifier": "saveToString", "parameters": "(DataFrame df)", "modifiers": "public", "return": "String", "body": "public String saveToString(DataFrame df) {\n\n        StringWriter out = new StringWriter();\n        save(df, out);\n        return out.toString();\n    }", "signature": "String saveToString(DataFrame df)", "full_signature": "public String saveToString(DataFrame df)", "class_method_signature": "CsvSaver.saveToString(DataFrame df)", "testcase": false, "constructor": false, "invocations": ["save", "toString"]}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}