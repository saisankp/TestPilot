{"test_class": {"identifier": "SpreadsheetImportActivityTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SpreadsheetImportActivity activity;", "modifier": "private", "type": "SpreadsheetImportActivity", "declarator": "activity", "var_name": "activity"}, {"original_string": "private SpreadsheetImportActivityFactory activityFactory;", "modifier": "private", "type": "SpreadsheetImportActivityFactory", "declarator": "activityFactory", "var_name": "activityFactory"}, {"original_string": "private Edits edits;", "modifier": "private", "type": "Edits", "declarator": "edits", "var_name": "edits"}, {"original_string": "private ObjectNode configuration;", "modifier": "private", "type": "ObjectNode", "declarator": "configuration", "var_name": "configuration"}], "file": "taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportActivityTest.java"}, "test_case": {"identifier": "testSpreadsheetImportActivity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSpreadsheetImportActivity() {\n\t\tassertNotNull(activity);\n\t\tassertNull(activity.getConfiguration());\n\t}", "signature": "void testSpreadsheetImportActivity()", "full_signature": "@Test public void testSpreadsheetImportActivity()", "class_method_signature": "SpreadsheetImportActivityTest.testSpreadsheetImportActivity()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "assertNull", "getConfiguration"]}, "focal_class": {"identifier": "SpreadsheetImportActivity", "superclass": "extends AbstractAsynchronousActivity<JsonNode>", "interfaces": "", "fields": [{"original_string": "public static final String URI = \"http://ns.taverna.org.uk/2010/activity/spreadsheet-import\";", "modifier": "public static final", "type": "String", "declarator": "URI = \"http://ns.taverna.org.uk/2010/activity/spreadsheet-import\"", "var_name": "URI"}, {"original_string": "public static final String INPUT_PORT_NAME = \"fileurl\";", "modifier": "public static final", "type": "String", "declarator": "INPUT_PORT_NAME = \"fileurl\"", "var_name": "INPUT_PORT_NAME"}, {"original_string": "public static final String OUTPUT_PORT_NAME = \"output\";", "modifier": "public static final", "type": "String", "declarator": "OUTPUT_PORT_NAME = \"output\"", "var_name": "OUTPUT_PORT_NAME"}, {"original_string": "private static Logger logger = Logger.getLogger(SpreadsheetImportActivity.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger(SpreadsheetImportActivity.class)", "var_name": "logger"}, {"original_string": "private JsonNode configurationBean;", "modifier": "private", "type": "JsonNode", "declarator": "configurationBean", "var_name": "configurationBean"}, {"original_string": "private Range rowRange, columnRange;", "modifier": "private", "type": "Range", "declarator": "rowRange", "var_name": "rowRange"}, {"original_string": "private boolean ignoreBlankRows;", "modifier": "private", "type": "boolean", "declarator": "ignoreBlankRows", "var_name": "ignoreBlankRows"}, {"original_string": "private String missingCellValue;", "modifier": "private", "type": "String", "declarator": "missingCellValue", "var_name": "missingCellValue"}, {"original_string": "private SpreadsheetEmptyCellPolicy emptyCellPolicy;", "modifier": "private", "type": "SpreadsheetEmptyCellPolicy", "declarator": "emptyCellPolicy", "var_name": "emptyCellPolicy"}, {"original_string": "private SpreadsheetOutputFormat outputFormat;", "modifier": "private", "type": "SpreadsheetOutputFormat", "declarator": "outputFormat", "var_name": "outputFormat"}, {"original_string": "private String csvDelimiter;", "modifier": "private", "type": "String", "declarator": "csvDelimiter", "var_name": "csvDelimiter"}], "methods": [{"identifier": "SpreadsheetImportActivity", "parameters": "()", "modifiers": "public", "return": "", "signature": " SpreadsheetImportActivity()", "full_signature": "public  SpreadsheetImportActivity()", "class_method_signature": "SpreadsheetImportActivity.SpreadsheetImportActivity()", "testcase": false, "constructor": true}, {"identifier": "configure", "parameters": "(JsonNode configurationBean)", "modifiers": "@Override public", "return": "void", "signature": "void configure(JsonNode configurationBean)", "full_signature": "@Override public void configure(JsonNode configurationBean)", "class_method_signature": "SpreadsheetImportActivity.configure(JsonNode configurationBean)", "testcase": false, "constructor": false}, {"identifier": "configurePorts", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void configurePorts()", "full_signature": "private void configurePorts()", "class_method_signature": "SpreadsheetImportActivity.configurePorts()", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "@Override public", "return": "JsonNode", "signature": "JsonNode getConfiguration()", "full_signature": "@Override public JsonNode getConfiguration()", "class_method_signature": "SpreadsheetImportActivity.getConfiguration()", "testcase": false, "constructor": false}, {"identifier": "executeAsynch", "parameters": "(final Map<String, T2Reference> data,\n\t\t\tfinal AsynchronousActivityCallback callback)", "modifiers": "@Override public", "return": "void", "signature": "void executeAsynch(final Map<String, T2Reference> data,\n\t\t\tfinal AsynchronousActivityCallback callback)", "full_signature": "@Override public void executeAsynch(final Map<String, T2Reference> data,\n\t\t\tfinal AsynchronousActivityCallback callback)", "class_method_signature": "SpreadsheetImportActivity.executeAsynch(final Map<String, T2Reference> data,\n\t\t\tfinal AsynchronousActivityCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getInputStream", "parameters": "(InvocationContext context,\n\t\t\tReferenceService referenceService, T2Reference inputRef)", "modifiers": "private", "return": "InputStream", "signature": "InputStream getInputStream(InvocationContext context,\n\t\t\tReferenceService referenceService, T2Reference inputRef)", "full_signature": "private InputStream getInputStream(InvocationContext context,\n\t\t\tReferenceService referenceService, T2Reference inputRef)", "class_method_signature": "SpreadsheetImportActivity.getInputStream(InvocationContext context,\n\t\t\tReferenceService referenceService, T2Reference inputRef)", "testcase": false, "constructor": false}], "file": "taverna-spreadsheet-import-activity/src/main/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportActivity.java"}, "focal_method": {"identifier": "SpreadsheetImportActivity", "parameters": "()", "modifiers": "public", "return": "", "body": "public SpreadsheetImportActivity() {\n\t}", "signature": " SpreadsheetImportActivity()", "full_signature": "public  SpreadsheetImportActivity()", "class_method_signature": "SpreadsheetImportActivity.SpreadsheetImportActivity()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 30956938, "url": "https://github.com/apache/incubator-taverna-common-activities", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 5696, "license": "licensed"}}