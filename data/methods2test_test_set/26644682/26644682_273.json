{"test_class": {"identifier": "ReleasableOutputStreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AtomicBoolean wasCalled = new AtomicBoolean();", "modifier": "private final", "type": "AtomicBoolean", "declarator": "wasCalled = new AtomicBoolean()", "var_name": "wasCalled"}, {"original_string": "private ReleasableOutputStream releasableOutputStream;", "modifier": "private", "type": "ReleasableOutputStream", "declarator": "releasableOutputStream", "var_name": "releasableOutputStream"}, {"original_string": "private ReleasableOutputStream failedReleasableOutputStream;", "modifier": "private", "type": "ReleasableOutputStream", "declarator": "failedReleasableOutputStream", "var_name": "failedReleasableOutputStream"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/io/ReleasableOutputStreamTest.java"}, "test_case": {"identifier": "write", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void write() throws Exception {\n        // When\n        releasableOutputStream.write('a');\n\n        // Then\n        assertFalse(wasCalled.get());\n    }", "signature": "void write()", "full_signature": "@Test public void write()", "class_method_signature": "ReleasableOutputStreamTest.write()", "testcase": true, "constructor": false, "invocations": ["write", "assertFalse", "get"]}, "focal_class": {"identifier": "ReleasableOutputStream", "superclass": "extends OutputStream", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ReleasableOutputStream.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ReleasableOutputStream.class)", "var_name": "LOG"}, {"original_string": "private final OutputStream delegate;", "modifier": "private final", "type": "OutputStream", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final Runnable onClose;", "modifier": "private final", "type": "Runnable", "declarator": "onClose", "var_name": "onClose"}, {"original_string": "private boolean isClosed;", "modifier": "private", "type": "boolean", "declarator": "isClosed", "var_name": "isClosed"}], "methods": [{"identifier": "ReleasableOutputStream", "parameters": "(OutputStream delegate, Runnable onClose)", "modifiers": "public", "return": "", "signature": " ReleasableOutputStream(OutputStream delegate, Runnable onClose)", "full_signature": "public  ReleasableOutputStream(OutputStream delegate, Runnable onClose)", "class_method_signature": "ReleasableOutputStream.ReleasableOutputStream(OutputStream delegate, Runnable onClose)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(int b)", "modifiers": "@Override public", "return": "void", "signature": "void write(int b)", "full_signature": "@Override public void write(int b)", "class_method_signature": "ReleasableOutputStream.write(int b)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] b)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b)", "full_signature": "@Override public void write(byte[] b)", "class_method_signature": "ReleasableOutputStream.write(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b, int off, int len)", "full_signature": "@Override public void write(byte[] b, int off, int len)", "class_method_signature": "ReleasableOutputStream.write(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "ReleasableOutputStream.flush()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ReleasableOutputStream.close()", "testcase": false, "constructor": false}, {"identifier": "safeClose", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void safeClose()", "full_signature": "private synchronized void safeClose()", "class_method_signature": "ReleasableOutputStream.safeClose()", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/io/ReleasableOutputStream.java"}, "focal_method": {"identifier": "write", "parameters": "(int b)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(int b) throws IOException {\n        try {\n            delegate.write(b);\n        } catch (IOException e) {\n            safeClose();\n            throw e;\n        }\n    }", "signature": "void write(int b)", "full_signature": "@Override public void write(int b)", "class_method_signature": "ReleasableOutputStream.write(int b)", "testcase": false, "constructor": false, "invocations": ["write", "safeClose"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}