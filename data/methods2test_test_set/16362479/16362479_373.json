{"test_class": {"identifier": "SingleClientHistoryTest", "superclass": "extends AbstractClientHistoryTest<SingleClientHistory>", "interfaces": "", "fields": [{"original_string": "private ActorSystem system;", "modifier": "private", "type": "ActorSystem", "declarator": "system", "var_name": "system"}, {"original_string": "private AbstractDataStoreClientBehavior behavior;", "modifier": "private", "type": "AbstractDataStoreClientBehavior", "declarator": "behavior", "var_name": "behavior"}, {"original_string": "private ClientActorContext clientActorContext;", "modifier": "private", "type": "ClientActorContext", "declarator": "clientActorContext", "var_name": "clientActorContext"}, {"original_string": "private SingleClientHistory object;", "modifier": "private", "type": "SingleClientHistory", "declarator": "object", "var_name": "object"}, {"original_string": "@Mock\n    private AbstractTransactionCommitCohort cohort;", "modifier": "@Mock\n    private", "type": "AbstractTransactionCommitCohort", "declarator": "cohort", "var_name": "cohort"}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/databroker/actors/dds/SingleClientHistoryTest.java"}, "test_case": {"identifier": "testCreateHistoryProxy", "parameters": "()", "modifiers": "@Override @Test public", "return": "void", "body": "@Override\n    @Test\n    public void testCreateHistoryProxy() {\n        final AbstractClientConnection<ShardBackendInfo> clientConnection = behavior.getConnection(0L);\n        final ProxyHistory historyProxy = object().createHistoryProxy(HISTORY_ID, clientConnection);\n        Assert.assertEquals(object().getIdentifier(), historyProxy.getIdentifier());\n    }", "signature": "void testCreateHistoryProxy()", "full_signature": "@Override @Test public void testCreateHistoryProxy()", "class_method_signature": "SingleClientHistoryTest.testCreateHistoryProxy()", "testcase": true, "constructor": false, "invocations": ["getConnection", "createHistoryProxy", "object", "assertEquals", "getIdentifier", "object", "getIdentifier"]}, "focal_class": {"identifier": "SingleClientHistory", "superclass": "extends AbstractClientHistory", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SingleClientHistory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SingleClientHistory.class)", "var_name": "LOG"}], "methods": [{"identifier": "SingleClientHistory", "parameters": "(final AbstractDataStoreClientBehavior client, final LocalHistoryIdentifier identifier)", "modifiers": "", "return": "", "signature": " SingleClientHistory(final AbstractDataStoreClientBehavior client, final LocalHistoryIdentifier identifier)", "full_signature": "  SingleClientHistory(final AbstractDataStoreClientBehavior client, final LocalHistoryIdentifier identifier)", "class_method_signature": "SingleClientHistory.SingleClientHistory(final AbstractDataStoreClientBehavior client, final LocalHistoryIdentifier identifier)", "testcase": false, "constructor": true}, {"identifier": "doCreateSnapshot", "parameters": "()", "modifiers": "@Override", "return": "ClientSnapshot", "signature": "ClientSnapshot doCreateSnapshot()", "full_signature": "@Override ClientSnapshot doCreateSnapshot()", "class_method_signature": "SingleClientHistory.doCreateSnapshot()", "testcase": false, "constructor": false}, {"identifier": "doCreateTransaction", "parameters": "()", "modifiers": "@Override", "return": "ClientTransaction", "signature": "ClientTransaction doCreateTransaction()", "full_signature": "@Override ClientTransaction doCreateTransaction()", "class_method_signature": "SingleClientHistory.doCreateTransaction()", "testcase": false, "constructor": false}, {"identifier": "createHistoryProxy", "parameters": "(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection)", "modifiers": "@Override", "return": "ProxyHistory", "signature": "ProxyHistory createHistoryProxy(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection)", "full_signature": "@Override ProxyHistory createHistoryProxy(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection)", "class_method_signature": "SingleClientHistory.createHistoryProxy(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/databroker/actors/dds/SingleClientHistory.java"}, "focal_method": {"identifier": "createHistoryProxy", "parameters": "(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection)", "modifiers": "@Override", "return": "ProxyHistory", "body": "@Override\n    ProxyHistory createHistoryProxy(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection) {\n        return ProxyHistory.createSingle(this, connection, historyId);\n    }", "signature": "ProxyHistory createHistoryProxy(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection)", "full_signature": "@Override ProxyHistory createHistoryProxy(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection)", "class_method_signature": "SingleClientHistory.createHistoryProxy(final LocalHistoryIdentifier historyId,\n            final AbstractClientConnection<ShardBackendInfo> connection)", "testcase": false, "constructor": false, "invocations": ["createSingle"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}