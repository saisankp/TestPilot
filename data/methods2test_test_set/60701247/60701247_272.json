{"test_class": {"identifier": "NameGetterTest", "superclass": "", "interfaces": "", "fields": [], "file": "android/testSrc/com/android/tools/idea/run/deployment/NameGetterTest.java"}, "test_case": {"identifier": "getNameManufacturerAndModelAreNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getNameManufacturerAndModelAreNull() {\n    // Arrange\n    DeviceNameProperties properties = new DeviceNameProperties(null, null, null, null);\n\n    // Act\n    Object name = NameGetter.getName(properties);\n\n    // Assert\n    assertEquals(\"Physical Device\", name);\n  }", "signature": "void getNameManufacturerAndModelAreNull()", "full_signature": "@Test public void getNameManufacturerAndModelAreNull()", "class_method_signature": "NameGetterTest.getNameManufacturerAndModelAreNull()", "testcase": true, "constructor": false, "invocations": ["getName", "assertEquals"]}, "focal_class": {"identifier": "NameGetter", "superclass": "", "interfaces": "implements Function<ConnectedDevice, String>", "fields": [{"original_string": "@NotNull\n  private final DeviceNamePropertiesProvider myProvider;", "modifier": "@NotNull\n  private final", "type": "DeviceNamePropertiesProvider", "declarator": "myProvider", "var_name": "myProvider"}], "methods": [{"identifier": "NameGetter", "parameters": "(@NotNull Disposable parent)", "modifiers": "", "return": "", "signature": " NameGetter(@NotNull Disposable parent)", "full_signature": "  NameGetter(@NotNull Disposable parent)", "class_method_signature": "NameGetter.NameGetter(@NotNull Disposable parent)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(@NotNull ConnectedDevice device)", "modifiers": "@NotNull @Override public", "return": "String", "signature": "String apply(@NotNull ConnectedDevice device)", "full_signature": "@NotNull @Override public String apply(@NotNull ConnectedDevice device)", "class_method_signature": "NameGetter.apply(@NotNull ConnectedDevice device)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "(@NotNull DeviceNameProperties properties)", "modifiers": "@NotNull @VisibleForTesting static", "return": "String", "signature": "String getName(@NotNull DeviceNameProperties properties)", "full_signature": "@NotNull @VisibleForTesting static String getName(@NotNull DeviceNameProperties properties)", "class_method_signature": "NameGetter.getName(@NotNull DeviceNameProperties properties)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/run/deployment/NameGetter.java"}, "focal_method": {"identifier": "getName", "parameters": "(@NotNull DeviceNameProperties properties)", "modifiers": "@NotNull @VisibleForTesting static", "return": "String", "body": "@NotNull\n  @VisibleForTesting\n  static String getName(@NotNull DeviceNameProperties properties) {\n    String manufacturer = properties.getManufacturer();\n    String model = properties.getModel();\n\n    if (manufacturer == null && model == null) {\n      return \"Physical Device\";\n    }\n\n    if (manufacturer == null) {\n      return model;\n    }\n\n    if (model == null) {\n      return manufacturer + \" Device\";\n    }\n\n    return manufacturer + ' ' + model;\n  }", "signature": "String getName(@NotNull DeviceNameProperties properties)", "full_signature": "@NotNull @VisibleForTesting static String getName(@NotNull DeviceNameProperties properties)", "class_method_signature": "NameGetter.getName(@NotNull DeviceNameProperties properties)", "testcase": false, "constructor": false, "invocations": ["getManufacturer", "getModel"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}