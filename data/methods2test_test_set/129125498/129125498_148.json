{"test_class": {"identifier": "DetectorExecutorImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DetectorExecutorImpl executorUnderTest = new DetectorExecutorImpl();", "modifier": "private", "type": "DetectorExecutorImpl", "declarator": "executorUnderTest = new DetectorExecutorImpl()", "var_name": "executorUnderTest"}, {"original_string": "@Mock\n    private Detector detector;", "modifier": "@Mock\n    private", "type": "Detector", "declarator": "detector", "var_name": "detector"}, {"original_string": "@Mock\n    private MetricData metricData;", "modifier": "@Mock\n    private", "type": "MetricData", "declarator": "metricData", "var_name": "metricData"}, {"original_string": "@Mock\n    private DetectionFilter detectionFilter;", "modifier": "@Mock\n    private", "type": "DetectionFilter", "declarator": "detectionFilter", "var_name": "detectionFilter"}, {"original_string": "@Mock\n    private DetectorResult detectorResult;", "modifier": "@Mock\n    private", "type": "DetectorResult", "declarator": "detectorResult", "var_name": "detectorResult"}, {"original_string": "@Mock\n    private DetectorContainer detectorContainer;", "modifier": "@Mock\n    private", "type": "DetectorContainer", "declarator": "detectorContainer", "var_name": "detectorContainer"}, {"original_string": "@Mock\n    private DetectorRequest detectorRequest;", "modifier": "@Mock\n    private", "type": "DetectorRequest", "declarator": "detectorRequest", "var_name": "detectorRequest"}, {"original_string": "@Mock\n    private DetectorResponse detectorResponse;", "modifier": "@Mock\n    private", "type": "DetectorResponse", "declarator": "detectorResponse", "var_name": "detectorResponse"}], "file": "anomdetect/src/test/java/com/expedia/adaptivealerting/anomdetect/DetectorExecutorImplTest.java"}, "test_case": {"identifier": "doDetectionWithNoFiltering", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void doDetectionWithNoFiltering() {\n        DetectorResult actualResult = executorUnderTest.doDetection(detectorContainer, metricData);\n        assertSame(detectorResult, actualResult);\n    }", "signature": "void doDetectionWithNoFiltering()", "full_signature": "@Test public void doDetectionWithNoFiltering()", "class_method_signature": "DetectorExecutorImplTest.doDetectionWithNoFiltering()", "testcase": true, "constructor": false, "invocations": ["doDetection", "assertSame"]}, "focal_class": {"identifier": "DetectorExecutorImpl", "superclass": "", "interfaces": "implements DetectorExecutor", "fields": [], "methods": [{"identifier": "doDetection", "parameters": "(DetectorContainer detectorContainer, @NonNull MetricData metricData)", "modifiers": "@Override public", "return": "DetectorResult", "signature": "DetectorResult doDetection(DetectorContainer detectorContainer, @NonNull MetricData metricData)", "full_signature": "@Override public DetectorResult doDetection(DetectorContainer detectorContainer, @NonNull MetricData metricData)", "class_method_signature": "DetectorExecutorImpl.doDetection(DetectorContainer detectorContainer, @NonNull MetricData metricData)", "testcase": false, "constructor": false}], "file": "anomdetect/src/main/java/com/expedia/adaptivealerting/anomdetect/DetectorExecutorImpl.java"}, "focal_method": {"identifier": "doDetection", "parameters": "(DetectorContainer detectorContainer, @NonNull MetricData metricData)", "modifiers": "@Override public", "return": "DetectorResult", "body": "@Override\n    public DetectorResult doDetection(DetectorContainer detectorContainer, @NonNull MetricData metricData) {\n        val detectionFilterChain = new DetectionFilterChain(detectorContainer);\n\n        val request = new DetectorRequest(metricData);\n        val response = new DetectorResponse();\n\n        detectionFilterChain.doFilter(request, response);\n        return response.getDetectorResult();\n    }", "signature": "DetectorResult doDetection(DetectorContainer detectorContainer, @NonNull MetricData metricData)", "full_signature": "@Override public DetectorResult doDetection(DetectorContainer detectorContainer, @NonNull MetricData metricData)", "class_method_signature": "DetectorExecutorImpl.doDetection(DetectorContainer detectorContainer, @NonNull MetricData metricData)", "testcase": false, "constructor": false, "invocations": ["doFilter", "getDetectorResult"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}