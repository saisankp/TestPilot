{"test_class": {"identifier": "S3InternalEventTest", "superclass": "", "interfaces": "", "fields": [], "file": "handlers/src/test/java/com/nextdoor/bender/handler/s3/S3InternalEventTest.java"}, "test_case": {"identifier": "testAppendFilename", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAppendFilename() {\n    TestContext context = new TestContext();\n    context.setAwsRequestId(\"req_id\");\n    S3InternalEvent ievent =\n        new S3InternalEvent(\"foo\", new LambdaContext(context), 0, \"file\", \"bucket\", \"v1\");\n\n    ievent.setEventObj(null);\n\n    Map<String, String> expected = new HashMap<String, String>(1);\n    expected.put(S3InternalEvent.FILENAME_PARTITION, DigestUtils.sha1Hex(\"file\"));\n\n    assertEquals(expected, ievent.getPartitions());\n  }", "signature": "void testAppendFilename()", "full_signature": "@Test public void testAppendFilename()", "class_method_signature": "S3InternalEventTest.testAppendFilename()", "testcase": true, "constructor": false, "invocations": ["setAwsRequestId", "setEventObj", "put", "sha1Hex", "assertEquals", "getPartitions"]}, "focal_class": {"identifier": "S3InternalEvent", "superclass": "extends InternalEvent", "interfaces": "", "fields": [{"original_string": "public static final String FILENAME_PARTITION = \"__filename__\";", "modifier": "public static final", "type": "String", "declarator": "FILENAME_PARTITION = \"__filename__\"", "var_name": "FILENAME_PARTITION"}, {"original_string": "private final String s3Key;", "modifier": "private final", "type": "String", "declarator": "s3Key", "var_name": "s3Key"}, {"original_string": "private final String s3Bucket;", "modifier": "private final", "type": "String", "declarator": "s3Bucket", "var_name": "s3Bucket"}, {"original_string": "private final String s3KeyVersion;", "modifier": "private final", "type": "String", "declarator": "s3KeyVersion", "var_name": "s3KeyVersion"}], "methods": [{"identifier": "S3InternalEvent", "parameters": "(String eventString, LambdaContext context, long arrivalTime, String s3Key,\n      String s3Bucket, String s3KeyVersion)", "modifiers": "public", "return": "", "signature": " S3InternalEvent(String eventString, LambdaContext context, long arrivalTime, String s3Key,\n      String s3Bucket, String s3KeyVersion)", "full_signature": "public  S3InternalEvent(String eventString, LambdaContext context, long arrivalTime, String s3Key,\n      String s3Bucket, String s3KeyVersion)", "class_method_signature": "S3InternalEvent.S3InternalEvent(String eventString, LambdaContext context, long arrivalTime, String s3Key,\n      String s3Bucket, String s3KeyVersion)", "testcase": false, "constructor": true}, {"identifier": "getPartitions", "parameters": "()", "modifiers": "@Override public", "return": "LinkedHashMap<String, String>", "signature": "LinkedHashMap<String, String> getPartitions()", "full_signature": "@Override public LinkedHashMap<String, String> getPartitions()", "class_method_signature": "S3InternalEvent.getPartitions()", "testcase": false, "constructor": false}, {"identifier": "getS3Key", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getS3Key()", "full_signature": "public String getS3Key()", "class_method_signature": "S3InternalEvent.getS3Key()", "testcase": false, "constructor": false}, {"identifier": "getS3Bucket", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getS3Bucket()", "full_signature": "public String getS3Bucket()", "class_method_signature": "S3InternalEvent.getS3Bucket()", "testcase": false, "constructor": false}, {"identifier": "getS3KeyVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getS3KeyVersion()", "full_signature": "public String getS3KeyVersion()", "class_method_signature": "S3InternalEvent.getS3KeyVersion()", "testcase": false, "constructor": false}], "file": "handlers/src/main/java/com/nextdoor/bender/handler/s3/S3InternalEvent.java"}, "focal_method": {"identifier": "getPartitions", "parameters": "()", "modifiers": "@Override public", "return": "LinkedHashMap<String, String>", "body": "@Override\n  public LinkedHashMap<String, String> getPartitions() {\n    LinkedHashMap<String, String> partitions = super.getPartitions();\n    if (partitions == null) {\n      partitions = new LinkedHashMap<String, String>(1);\n      super.setPartitions(partitions);\n    }\n\n    partitions.put(FILENAME_PARTITION, DigestUtils.sha1Hex(this.s3Key));\n    return partitions;\n  }", "signature": "LinkedHashMap<String, String> getPartitions()", "full_signature": "@Override public LinkedHashMap<String, String> getPartitions()", "class_method_signature": "S3InternalEvent.getPartitions()", "testcase": false, "constructor": false, "invocations": ["getPartitions", "setPartitions", "put", "sha1Hex"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}