{"test_class": {"identifier": "ObjectFunctionTest", "superclass": "", "interfaces": "", "fields": [], "file": "web-framework/src/test/java/org/unidal/web/jsp/function/ObjectFunctionTest.java"}, "test_case": {"identifier": "testSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testSize() {\n      Assert.assertEquals(null, ObjectFunction.size(null));\n      Assert.assertEquals(4, ObjectFunction.size(Arrays.<Object> asList(\"abc\", null, true, 3)));\n\n      HashMap<Object, Object> map = new HashMap<Object, Object>();\n\n      map.put(\"first\", true);\n      map.put(1, 2);\n\n      Assert.assertEquals(2, ObjectFunction.size(map));\n   }", "signature": "void testSize()", "full_signature": "@Test public void testSize()", "class_method_signature": "ObjectFunctionTest.testSize()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "assertEquals", "size", "asList", "put", "put", "assertEquals", "size"]}, "focal_class": {"identifier": "ObjectFunction", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "length", "parameters": "(Object obj)", "modifiers": "@FunctionMeta(description = \"Length of String, or array\", example = \"${w:length(obj)}\") public static", "return": "Object", "signature": "Object length(Object obj)", "full_signature": "@FunctionMeta(description = \"Length of String, or array\", example = \"${w:length(obj)}\") public static Object length(Object obj)", "class_method_signature": "ObjectFunction.length(Object obj)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "(Object obj)", "modifiers": "@FunctionMeta(description = \"size of colection, or map\", example = \"${w:size(obj)}\") public static", "return": "Object", "signature": "Object size(Object obj)", "full_signature": "@FunctionMeta(description = \"size of colection, or map\", example = \"${w:size(obj)}\") public static Object size(Object obj)", "class_method_signature": "ObjectFunction.size(Object obj)", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "(Object values, Object value)", "modifiers": "@FunctionMeta(description = \"Check if the value is equal or is one of value in the given values.\", example = \"${w:in(values, value)}\") @SuppressWarnings(\"unchecked\") public static", "return": "boolean", "signature": "boolean in(Object values, Object value)", "full_signature": "@FunctionMeta(description = \"Check if the value is equal or is one of value in the given values.\", example = \"${w:in(values, value)}\") @SuppressWarnings(\"unchecked\") public static boolean in(Object values, Object value)", "class_method_signature": "ObjectFunction.in(Object values, Object value)", "testcase": false, "constructor": false}], "file": "web-framework/src/main/java/org/unidal/web/jsp/function/ObjectFunction.java"}, "focal_method": {"identifier": "size", "parameters": "(Object obj)", "modifiers": "@FunctionMeta(description = \"size of colection, or map\", example = \"${w:size(obj)}\") public static", "return": "Object", "body": "@FunctionMeta(description = \"size of colection, or map\", example = \"${w:size(obj)}\")\n   public static Object size(Object obj) {\n      if (obj == null) {\n         return null;\n      } else if (obj instanceof Collection) {\n         return ((Collection<?>) obj).size();\n      } else if (obj instanceof Map) {\n         return ((Map<?, ?>) obj).size();\n      } else {\n         try {\n            return Reflects.forMethod().invokeMethod(obj, \"getSize\", (Object[]) null);\n         } catch (Exception e) {\n            return null;\n         }\n      }\n   }", "signature": "Object size(Object obj)", "full_signature": "@FunctionMeta(description = \"size of colection, or map\", example = \"${w:size(obj)}\") public static Object size(Object obj)", "class_method_signature": "ObjectFunction.size(Object obj)", "testcase": false, "constructor": false, "invocations": ["size", "size", "invokeMethod", "forMethod"]}, "repository": {"repo_id": 6627230, "url": "https://github.com/unidal/frameworks", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 100, "size": 3009, "license": "licensed"}}