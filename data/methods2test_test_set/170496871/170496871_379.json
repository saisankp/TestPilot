{"test_class": {"identifier": "SpringCacheTest", "superclass": "extends GridCommonAbstractTest", "interfaces": "", "fields": [{"original_string": "private static Ignite ignite;", "modifier": "private static", "type": "Ignite", "declarator": "ignite", "var_name": "ignite"}, {"original_string": "private IgniteCache nativeCache;", "modifier": "private", "type": "IgniteCache", "declarator": "nativeCache", "var_name": "nativeCache"}, {"original_string": "private SpringCache springCache;", "modifier": "private", "type": "SpringCache", "declarator": "springCache", "var_name": "springCache"}, {"original_string": "private String cacheName;", "modifier": "private", "type": "String", "declarator": "cacheName", "var_name": "cacheName"}], "file": "modules/spring/src/test/java/org/apache/ignite/cache/spring/SpringCacheTest.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClear() throws Exception {\n        String key;\n        springCache.put((key = \"key1\"), \"value1\");\n        assertNotNull(springCache.get(key));\n        springCache.put((key = \"key2\"), \"value2\");\n        assertNotNull(springCache.get(key));\n        springCache.put((key = \"key3\"), \"value3\");\n        assertNotNull(springCache.get(key));\n\n        springCache.clear();\n\n        assertNull(springCache.get(\"key1\"));\n        assertNull(springCache.get(\"key2\"));\n        assertNull(springCache.get(\"key3\"));\n    }", "signature": "void testClear()", "full_signature": "@Test public void testClear()", "class_method_signature": "SpringCacheTest.testClear()", "testcase": true, "constructor": false, "invocations": ["put", "assertNotNull", "get", "put", "assertNotNull", "get", "put", "assertNotNull", "get", "clear", "assertNull", "get", "assertNull", "get", "assertNull", "get"]}, "focal_class": {"identifier": "SpringCache", "superclass": "", "interfaces": "implements Cache", "fields": [{"original_string": "private static final Object NULL = new NullValue();", "modifier": "private static final", "type": "Object", "declarator": "NULL = new NullValue()", "var_name": "NULL"}, {"original_string": "private final IgniteCache<Object, Object> cache;", "modifier": "private final", "type": "IgniteCache<Object, Object>", "declarator": "cache", "var_name": "cache"}, {"original_string": "private final SpringCacheManager mgr;", "modifier": "private final", "type": "SpringCacheManager", "declarator": "mgr", "var_name": "mgr"}], "methods": [{"identifier": "SpringCache", "parameters": "(IgniteCache<Object, Object> cache, SpringCacheManager mgr)", "modifiers": "", "return": "", "signature": " SpringCache(IgniteCache<Object, Object> cache, SpringCacheManager mgr)", "full_signature": "  SpringCache(IgniteCache<Object, Object> cache, SpringCacheManager mgr)", "class_method_signature": "SpringCache.SpringCache(IgniteCache<Object, Object> cache, SpringCacheManager mgr)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "SpringCache.getName()", "testcase": false, "constructor": false}, {"identifier": "getNativeCache", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object getNativeCache()", "full_signature": "@Override public Object getNativeCache()", "class_method_signature": "SpringCache.getNativeCache()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "@Override public", "return": "ValueWrapper", "signature": "ValueWrapper get(Object key)", "full_signature": "@Override public ValueWrapper get(Object key)", "class_method_signature": "SpringCache.get(Object key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key, Class<T> type)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T get(Object key, Class<T> type)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T get(Object key, Class<T> type)", "class_method_signature": "SpringCache.get(Object key, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final Object key, final Callable<T> valLdr)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T get(final Object key, final Callable<T> valLdr)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T get(final Object key, final Callable<T> valLdr)", "class_method_signature": "SpringCache.get(final Object key, final Callable<T> valLdr)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Object key, Object val)", "modifiers": "@Override public", "return": "void", "signature": "void put(Object key, Object val)", "full_signature": "@Override public void put(Object key, Object val)", "class_method_signature": "SpringCache.put(Object key, Object val)", "testcase": false, "constructor": false}, {"identifier": "putIfAbsent", "parameters": "(Object key, Object val)", "modifiers": "@Override public", "return": "ValueWrapper", "signature": "ValueWrapper putIfAbsent(Object key, Object val)", "full_signature": "@Override public ValueWrapper putIfAbsent(Object key, Object val)", "class_method_signature": "SpringCache.putIfAbsent(Object key, Object val)", "testcase": false, "constructor": false}, {"identifier": "evict", "parameters": "(Object key)", "modifiers": "@Override public", "return": "void", "signature": "void evict(Object key)", "full_signature": "@Override public void evict(Object key)", "class_method_signature": "SpringCache.evict(Object key)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "SpringCache.clear()", "testcase": false, "constructor": false}, {"identifier": "fromValue", "parameters": "(Object val)", "modifiers": "private static", "return": "ValueWrapper", "signature": "ValueWrapper fromValue(Object val)", "full_signature": "private static ValueWrapper fromValue(Object val)", "class_method_signature": "SpringCache.fromValue(Object val)", "testcase": false, "constructor": false}, {"identifier": "unwrapNull", "parameters": "(Object val)", "modifiers": "private static", "return": "Object", "signature": "Object unwrapNull(Object val)", "full_signature": "private static Object unwrapNull(Object val)", "class_method_signature": "SpringCache.unwrapNull(Object val)", "testcase": false, "constructor": false}, {"identifier": "wrapNull", "parameters": "(T val)", "modifiers": "private", "return": "Object", "signature": "Object wrapNull(T val)", "full_signature": "private Object wrapNull(T val)", "class_method_signature": "SpringCache.wrapNull(T val)", "testcase": false, "constructor": false}], "file": "modules/spring/src/main/java/org/apache/ignite/cache/spring/SpringCache.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override public void clear() {\n        cache.removeAll();\n    }", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "SpringCache.clear()", "testcase": false, "constructor": false, "invocations": ["removeAll"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}