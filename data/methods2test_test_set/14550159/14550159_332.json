{"test_class": {"identifier": "DefaultInputItemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private FileItem  fileItem;", "modifier": "private", "type": "FileItem", "declarator": "fileItem", "var_name": "fileItem"}, {"original_string": "private Providers providers;", "modifier": "private", "type": "Providers", "declarator": "providers", "var_name": "providers"}, {"original_string": "private DefaultInputItem inputItem;", "modifier": "private", "type": "DefaultInputItem", "declarator": "inputItem", "var_name": "inputItem"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/multipart/DefaultInputItemTest.java"}, "test_case": {"identifier": "getsName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getsName() throws Exception {\n        when(fileItem.getFieldName()).thenReturn(\"name1\");\n\n        assertEquals(\"name1\", inputItem.getName());\n    }", "signature": "void getsName()", "full_signature": "@Test public void getsName()", "class_method_signature": "DefaultInputItemTest.getsName()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getFieldName", "assertEquals", "getName"]}, "focal_class": {"identifier": "DefaultInputItem", "superclass": "", "interfaces": "implements InputItem", "fields": [{"original_string": "private static final Annotation[] EMPTY = new Annotation[0];", "modifier": "private static final", "type": "Annotation[]", "declarator": "EMPTY = new Annotation[0]", "var_name": "EMPTY"}, {"original_string": "private final FileItem                       fileItem;", "modifier": "private final", "type": "FileItem", "declarator": "fileItem", "var_name": "fileItem"}, {"original_string": "private final MultivaluedMap<String, String> headers;", "modifier": "private final", "type": "MultivaluedMap<String, String>", "declarator": "headers", "var_name": "headers"}, {"original_string": "private final Providers                      providers;", "modifier": "private final", "type": "Providers", "declarator": "providers", "var_name": "providers"}], "methods": [{"identifier": "DefaultInputItem", "parameters": "(FileItem fileItem, Providers providers)", "modifiers": "", "return": "", "signature": " DefaultInputItem(FileItem fileItem, Providers providers)", "full_signature": "  DefaultInputItem(FileItem fileItem, Providers providers)", "class_method_signature": "DefaultInputItem.DefaultInputItem(FileItem fileItem, Providers providers)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DefaultInputItem.getName()", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFilename()", "full_signature": "@Override public String getFilename()", "class_method_signature": "DefaultInputItem.getFilename()", "testcase": false, "constructor": false}, {"identifier": "getMediaType", "parameters": "()", "modifiers": "@Override public", "return": "MediaType", "signature": "MediaType getMediaType()", "full_signature": "@Override public MediaType getMediaType()", "class_method_signature": "DefaultInputItem.getMediaType()", "testcase": false, "constructor": false}, {"identifier": "getHeaders", "parameters": "()", "modifiers": "@Override public", "return": "MultivaluedMap<String, String>", "signature": "MultivaluedMap<String, String> getHeaders()", "full_signature": "@Override public MultivaluedMap<String, String> getHeaders()", "class_method_signature": "DefaultInputItem.getHeaders()", "testcase": false, "constructor": false}, {"identifier": "getBody", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getBody()", "full_signature": "@Override public InputStream getBody()", "class_method_signature": "DefaultInputItem.getBody()", "testcase": false, "constructor": false}, {"identifier": "getBody", "parameters": "(Class<T> type, Type genericType)", "modifiers": "@Override public", "return": "T", "signature": "T getBody(Class<T> type, Type genericType)", "full_signature": "@Override public T getBody(Class<T> type, Type genericType)", "class_method_signature": "DefaultInputItem.getBody(Class<T> type, Type genericType)", "testcase": false, "constructor": false}, {"identifier": "getBodyAsString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getBodyAsString()", "full_signature": "@Override public String getBodyAsString()", "class_method_signature": "DefaultInputItem.getBodyAsString()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/multipart/DefaultInputItem.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getName() {\n        return fileItem.getFieldName();\n    }", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DefaultInputItem.getName()", "testcase": false, "constructor": false, "invocations": ["getFieldName"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}