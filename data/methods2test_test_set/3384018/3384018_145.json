{"test_class": {"identifier": "TestInetAddressUtils", "superclass": "", "interfaces": "", "fields": [], "file": "external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/conn/util/TestInetAddressUtils.java"}, "test_case": {"identifier": "testValidIPv4Address", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidIPv4Address() {\n        Assert.assertTrue(InetAddressUtils.isIPv4Address(\"127.0.0.1\"));\n        Assert.assertTrue(InetAddressUtils.isIPv4Address(\"192.168.0.0\"));\n        Assert.assertTrue(InetAddressUtils.isIPv4Address(\"255.255.255.255\"));\n    }", "signature": "void testValidIPv4Address()", "full_signature": "@Test public void testValidIPv4Address()", "class_method_signature": "TestInetAddressUtils.testValidIPv4Address()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isIPv4Address", "assertTrue", "isIPv4Address", "assertTrue", "isIPv4Address"]}, "focal_class": {"identifier": "InetAddressUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern IPV4_PATTERN =\n        Pattern.compile(\n                \"^(25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}$\");", "modifier": "private static final", "type": "Pattern", "declarator": "IPV4_PATTERN =\n        Pattern.compile(\n                \"^(25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}$\")", "var_name": "IPV4_PATTERN"}, {"original_string": "private static final Pattern IPV6_STD_PATTERN =\n        Pattern.compile(\n                \"^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$\");", "modifier": "private static final", "type": "Pattern", "declarator": "IPV6_STD_PATTERN =\n        Pattern.compile(\n                \"^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$\")", "var_name": "IPV6_STD_PATTERN"}, {"original_string": "private static final Pattern IPV6_HEX_COMPRESSED_PATTERN =\n        Pattern.compile(\n                \"^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)$\");", "modifier": "private static final", "type": "Pattern", "declarator": "IPV6_HEX_COMPRESSED_PATTERN =\n        Pattern.compile(\n                \"^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)$\")", "var_name": "IPV6_HEX_COMPRESSED_PATTERN"}], "methods": [{"identifier": "InetAddressUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " InetAddressUtils()", "full_signature": "private  InetAddressUtils()", "class_method_signature": "InetAddressUtils.InetAddressUtils()", "testcase": false, "constructor": true}, {"identifier": "isIPv4Address", "parameters": "(final String input)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIPv4Address(final String input)", "full_signature": "public static boolean isIPv4Address(final String input)", "class_method_signature": "InetAddressUtils.isIPv4Address(final String input)", "testcase": false, "constructor": false}, {"identifier": "isIPv6StdAddress", "parameters": "(final String input)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIPv6StdAddress(final String input)", "full_signature": "public static boolean isIPv6StdAddress(final String input)", "class_method_signature": "InetAddressUtils.isIPv6StdAddress(final String input)", "testcase": false, "constructor": false}, {"identifier": "isIPv6HexCompressedAddress", "parameters": "(final String input)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIPv6HexCompressedAddress(final String input)", "full_signature": "public static boolean isIPv6HexCompressedAddress(final String input)", "class_method_signature": "InetAddressUtils.isIPv6HexCompressedAddress(final String input)", "testcase": false, "constructor": false}, {"identifier": "isIPv6Address", "parameters": "(final String input)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIPv6Address(final String input)", "full_signature": "public static boolean isIPv6Address(final String input)", "class_method_signature": "InetAddressUtils.isIPv6Address(final String input)", "testcase": false, "constructor": false}], "file": "external_sources/httpclient-4.1.1/httpclient/src/main/java/org/apache/ogt/http/conn/util/InetAddressUtils.java"}, "focal_method": {"identifier": "isIPv4Address", "parameters": "(final String input)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isIPv4Address(final String input) {\n        return IPV4_PATTERN.matcher(input).matches();\n    }", "signature": "boolean isIPv4Address(final String input)", "full_signature": "public static boolean isIPv4Address(final String input)", "class_method_signature": "InetAddressUtils.isIPv4Address(final String input)", "testcase": false, "constructor": false, "invocations": ["matches", "matcher"]}, "repository": {"repo_id": 3384018, "url": "https://github.com/f8full/open-bixi-gpstracker", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2028, "license": "licensed"}}