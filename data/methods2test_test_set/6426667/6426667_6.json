{"test_class": {"identifier": "PrintStreamFailureLoggerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ByteArrayOutputStream output = new ByteArrayOutputStream();", "modifier": "private final", "type": "ByteArrayOutputStream", "declarator": "output = new ByteArrayOutputStream()", "var_name": "output"}, {"original_string": "private final PrintStreamFailureLogger failureHandler = new PrintStreamFailureLogger(new PrintStream(output));", "modifier": "private final", "type": "PrintStreamFailureLogger", "declarator": "failureHandler = new PrintStreamFailureLogger(new PrintStream(output))", "var_name": "failureHandler"}], "file": "jumi-actors/src/test/java/fi/jumi/actors/listeners/PrintStreamFailureLoggerTest.java"}, "test_case": {"identifier": "logs_uncaught_exceptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void logs_uncaught_exceptions() {\n        failureHandler.uncaughtException(\"the actor\", \"the message\", new DummyException());\n\n        String output = this.output.toString();\n        assertThat(output, containsString(\"uncaught exception\"));\n        assertThat(output, containsString(\"the actor\"));\n        assertThat(output, containsString(\"the message\"));\n        assertThat(output, containsString(DummyException.class.getName()));\n        assertThat(\"should contain the stack trace\", output, containsString(\"at \" + getClass().getName()));\n    }", "signature": "void logs_uncaught_exceptions()", "full_signature": "@Test public void logs_uncaught_exceptions()", "class_method_signature": "PrintStreamFailureLoggerTest.logs_uncaught_exceptions()", "testcase": true, "constructor": false, "invocations": ["uncaughtException", "toString", "assertThat", "containsString", "assertThat", "containsString", "assertThat", "containsString", "assertThat", "containsString", "getName", "assertThat", "containsString", "getName", "getClass"]}, "focal_class": {"identifier": "PrintStreamFailureLogger", "superclass": "", "interfaces": "implements FailureHandler", "fields": [{"original_string": "private final PrintStream out;", "modifier": "private final", "type": "PrintStream", "declarator": "out", "var_name": "out"}], "methods": [{"identifier": "PrintStreamFailureLogger", "parameters": "(PrintStream out)", "modifiers": "public", "return": "", "signature": " PrintStreamFailureLogger(PrintStream out)", "full_signature": "public  PrintStreamFailureLogger(PrintStream out)", "class_method_signature": "PrintStreamFailureLogger.PrintStreamFailureLogger(PrintStream out)", "testcase": false, "constructor": true}, {"identifier": "uncaughtException", "parameters": "(Object actor, Object message, Throwable exception)", "modifiers": "@Override public", "return": "void", "signature": "void uncaughtException(Object actor, Object message, Throwable exception)", "full_signature": "@Override public void uncaughtException(Object actor, Object message, Throwable exception)", "class_method_signature": "PrintStreamFailureLogger.uncaughtException(Object actor, Object message, Throwable exception)", "testcase": false, "constructor": false}], "file": "jumi-actors/src/main/java/fi/jumi/actors/listeners/PrintStreamFailureLogger.java"}, "focal_method": {"identifier": "uncaughtException", "parameters": "(Object actor, Object message, Throwable exception)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void uncaughtException(Object actor, Object message, Throwable exception) {\n        synchronized (out) {\n            out.println(\"uncaught exception from \" + actor + \" when processing \" + message);\n            exception.printStackTrace(out);\n        }\n    }", "signature": "void uncaughtException(Object actor, Object message, Throwable exception)", "full_signature": "@Override public void uncaughtException(Object actor, Object message, Throwable exception)", "class_method_signature": "PrintStreamFailureLogger.uncaughtException(Object actor, Object message, Throwable exception)", "testcase": false, "constructor": false, "invocations": ["println", "printStackTrace"]}, "repository": {"repo_id": 6426667, "url": "https://github.com/luontola/jumi-actors", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 78, "size": 2989, "license": "licensed"}}