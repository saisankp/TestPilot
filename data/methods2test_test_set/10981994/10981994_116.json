{"test_class": {"identifier": "BasicAuthRequestInterceptorTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/feign/auth/BasicAuthRequestInterceptorTest.java"}, "test_case": {"identifier": "addsAuthorizationHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void addsAuthorizationHeader() {\n    RequestTemplate template = new RequestTemplate();\n    BasicAuthRequestInterceptor interceptor =\n        new BasicAuthRequestInterceptor(\"Aladdin\", \"open sesame\");\n    interceptor.apply(template);\n\n    assertThat(template)\n        .hasHeaders(\n            entry(\"Authorization\", asList(\"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")));\n  }", "signature": "void addsAuthorizationHeader()", "full_signature": "@Test public void addsAuthorizationHeader()", "class_method_signature": "BasicAuthRequestInterceptorTest.addsAuthorizationHeader()", "testcase": true, "constructor": false, "invocations": ["apply", "hasHeaders", "assertThat", "entry", "asList"]}, "focal_class": {"identifier": "BasicAuthRequestInterceptor", "superclass": "", "interfaces": "implements RequestInterceptor", "fields": [{"original_string": "private final String headerValue;", "modifier": "private final", "type": "String", "declarator": "headerValue", "var_name": "headerValue"}], "methods": [{"identifier": "BasicAuthRequestInterceptor", "parameters": "(String username, String password)", "modifiers": "public", "return": "", "signature": " BasicAuthRequestInterceptor(String username, String password)", "full_signature": "public  BasicAuthRequestInterceptor(String username, String password)", "class_method_signature": "BasicAuthRequestInterceptor.BasicAuthRequestInterceptor(String username, String password)", "testcase": false, "constructor": true}, {"identifier": "BasicAuthRequestInterceptor", "parameters": "(String username, String password, Charset charset)", "modifiers": "public", "return": "", "signature": " BasicAuthRequestInterceptor(String username, String password, Charset charset)", "full_signature": "public  BasicAuthRequestInterceptor(String username, String password, Charset charset)", "class_method_signature": "BasicAuthRequestInterceptor.BasicAuthRequestInterceptor(String username, String password, Charset charset)", "testcase": false, "constructor": true}, {"identifier": "base64Encode", "parameters": "(byte[] bytes)", "modifiers": "private static", "return": "String", "signature": "String base64Encode(byte[] bytes)", "full_signature": "private static String base64Encode(byte[] bytes)", "class_method_signature": "BasicAuthRequestInterceptor.base64Encode(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(RequestTemplate template)", "modifiers": "@Override public", "return": "void", "signature": "void apply(RequestTemplate template)", "full_signature": "@Override public void apply(RequestTemplate template)", "class_method_signature": "BasicAuthRequestInterceptor.apply(RequestTemplate template)", "testcase": false, "constructor": false}], "file": "core/src/main/java/feign/auth/BasicAuthRequestInterceptor.java"}, "focal_method": {"identifier": "apply", "parameters": "(RequestTemplate template)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void apply(RequestTemplate template) {\n    template.header(\"Authorization\", headerValue);\n  }", "signature": "void apply(RequestTemplate template)", "full_signature": "@Override public void apply(RequestTemplate template)", "class_method_signature": "BasicAuthRequestInterceptor.apply(RequestTemplate template)", "testcase": false, "constructor": false, "invocations": ["header"]}, "repository": {"repo_id": 10981994, "url": "https://github.com/OpenFeign/feign", "stars": 5385, "created": "6/26/2013 11:28:16 PM +00:00", "updates": "2020-01-27T14:44:13+00:00", "fork": "False", "license": "licensed"}}