{"test_class": {"identifier": "SiddhiTypeFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/flink/streaming/siddhi/utils/SiddhiTypeFactoryTest.java"}, "test_case": {"identifier": "testBuildTypeInformationForSiddhiStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildTypeInformationForSiddhiStream() {\n        String query = \"define stream inputStream (timestamp long, name string, value double);\"\n            + \"from inputStream select name, value insert into outputStream;\";\n        TypeInformation<Tuple3<Long, String, Double>> inputStreamType = SiddhiTypeFactory.getTupleTypeInformation(query, \"inputStream\");\n        TypeInformation<Tuple2<String, Double>> outputStreamType = SiddhiTypeFactory.getTupleTypeInformation(query, \"outputStream\");\n\n        Assert.assertNotNull(inputStreamType);\n        Assert.assertNotNull(outputStreamType);\n    }", "signature": "void testBuildTypeInformationForSiddhiStream()", "full_signature": "@Test public void testBuildTypeInformationForSiddhiStream()", "class_method_signature": "SiddhiTypeFactoryTest.testBuildTypeInformationForSiddhiStream()", "testcase": true, "constructor": false, "invocations": ["getTupleTypeInformation", "getTupleTypeInformation", "assertNotNull", "assertNotNull"]}, "focal_class": {"identifier": "SiddhiTypeFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<Class<?>, Attribute.Type> JAVA_TO_SIDDHI_TYPE = new HashMap<>();", "modifier": "private static final", "type": "Map<Class<?>, Attribute.Type>", "declarator": "JAVA_TO_SIDDHI_TYPE = new HashMap<>()", "var_name": "JAVA_TO_SIDDHI_TYPE"}, {"original_string": "private static final Map<Attribute.Type, Class<?>> SIDDHI_TO_JAVA_TYPE = new HashMap<>();", "modifier": "private static final", "type": "Map<Attribute.Type, Class<?>>", "declarator": "SIDDHI_TO_JAVA_TYPE = new HashMap<>()", "var_name": "SIDDHI_TO_JAVA_TYPE"}, {"original_string": "@SuppressWarnings(\"unchecked\")\n    private static final TypeInformation<GenericRecord> MAP_PROXY_TYPE_INFORMATION = TypeExtractor.createTypeInfo(GenericRecord.class);", "modifier": "@SuppressWarnings(\"unchecked\")\n    private static final", "type": "TypeInformation<GenericRecord>", "declarator": "MAP_PROXY_TYPE_INFORMATION = TypeExtractor.createTypeInfo(GenericRecord.class)", "var_name": "MAP_PROXY_TYPE_INFORMATION"}], "methods": [{"identifier": "registerType", "parameters": "(Class<?> javaType, Attribute.Type siddhiType)", "modifiers": "public static", "return": "void", "signature": "void registerType(Class<?> javaType, Attribute.Type siddhiType)", "full_signature": "public static void registerType(Class<?> javaType, Attribute.Type siddhiType)", "class_method_signature": "SiddhiTypeFactory.registerType(Class<?> javaType, Attribute.Type siddhiType)", "testcase": false, "constructor": false}, {"identifier": "getStreamDefinition", "parameters": "(String executionPlan, String streamId)", "modifiers": "public static", "return": "AbstractDefinition", "signature": "AbstractDefinition getStreamDefinition(String executionPlan, String streamId)", "full_signature": "public static AbstractDefinition getStreamDefinition(String executionPlan, String streamId)", "class_method_signature": "SiddhiTypeFactory.getStreamDefinition(String executionPlan, String streamId)", "testcase": false, "constructor": false}, {"identifier": "getStreamDefinition", "parameters": "(String executionPlan, String streamId, SiddhiOperatorContext siddhiOperatorContext)", "modifiers": "public static", "return": "AbstractDefinition", "signature": "AbstractDefinition getStreamDefinition(String executionPlan, String streamId, SiddhiOperatorContext siddhiOperatorContext)", "full_signature": "public static AbstractDefinition getStreamDefinition(String executionPlan, String streamId, SiddhiOperatorContext siddhiOperatorContext)", "class_method_signature": "SiddhiTypeFactory.getStreamDefinition(String executionPlan, String streamId, SiddhiOperatorContext siddhiOperatorContext)", "testcase": false, "constructor": false}, {"identifier": "getTupleTypeInformation", "parameters": "(AbstractDefinition definition)", "modifiers": "public static", "return": "TypeInformation<T>", "signature": "TypeInformation<T> getTupleTypeInformation(AbstractDefinition definition)", "full_signature": "public static TypeInformation<T> getTupleTypeInformation(AbstractDefinition definition)", "class_method_signature": "SiddhiTypeFactory.getTupleTypeInformation(AbstractDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "getTupleTypeInformation", "parameters": "(String executionPlan, String streamId)", "modifiers": "public static", "return": "TypeInformation<T>", "signature": "TypeInformation<T> getTupleTypeInformation(String executionPlan, String streamId)", "full_signature": "public static TypeInformation<T> getTupleTypeInformation(String executionPlan, String streamId)", "class_method_signature": "SiddhiTypeFactory.getTupleTypeInformation(String executionPlan, String streamId)", "testcase": false, "constructor": false}, {"identifier": "getTupleTypeInformation", "parameters": "(String executionPlan, String streamId, SiddhiOperatorContext siddhiOperatorContext)", "modifiers": "public static", "return": "TypeInformation<T>", "signature": "TypeInformation<T> getTupleTypeInformation(String executionPlan, String streamId, SiddhiOperatorContext siddhiOperatorContext)", "full_signature": "public static TypeInformation<T> getTupleTypeInformation(String executionPlan, String streamId, SiddhiOperatorContext siddhiOperatorContext)", "class_method_signature": "SiddhiTypeFactory.getTupleTypeInformation(String executionPlan, String streamId, SiddhiOperatorContext siddhiOperatorContext)", "testcase": false, "constructor": false}, {"identifier": "getMapTypeInformation", "parameters": "()", "modifiers": "public static", "return": "TypeInformation<GenericRecord>", "signature": "TypeInformation<GenericRecord> getMapTypeInformation()", "full_signature": "public static TypeInformation<GenericRecord> getMapTypeInformation()", "class_method_signature": "SiddhiTypeFactory.getMapTypeInformation()", "testcase": false, "constructor": false}, {"identifier": "getAttributeType", "parameters": "(TypeInformation<F> fieldType)", "modifiers": "public static", "return": "Attribute.Type", "signature": "Attribute.Type getAttributeType(TypeInformation<F> fieldType)", "full_signature": "public static Attribute.Type getAttributeType(TypeInformation<F> fieldType)", "class_method_signature": "SiddhiTypeFactory.getAttributeType(TypeInformation<F> fieldType)", "testcase": false, "constructor": false}, {"identifier": "getJavaType", "parameters": "(Attribute.Type attributeType)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getJavaType(Attribute.Type attributeType)", "full_signature": "public static Class<?> getJavaType(Attribute.Type attributeType)", "class_method_signature": "SiddhiTypeFactory.getJavaType(Attribute.Type attributeType)", "testcase": false, "constructor": false}, {"identifier": "getStreamTupleTypeInformation", "parameters": "(TypeInformation<T> typeInformation)", "modifiers": "public static", "return": "TypeInformation<Tuple2<StreamRoute, T>>", "signature": "TypeInformation<Tuple2<StreamRoute, T>> getStreamTupleTypeInformation(TypeInformation<T> typeInformation)", "full_signature": "public static TypeInformation<Tuple2<StreamRoute, T>> getStreamTupleTypeInformation(TypeInformation<T> typeInformation)", "class_method_signature": "SiddhiTypeFactory.getStreamTupleTypeInformation(TypeInformation<T> typeInformation)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/flink/streaming/siddhi/utils/SiddhiTypeFactory.java"}, "focal_method": {"identifier": "getTupleTypeInformation", "parameters": "(AbstractDefinition definition)", "modifiers": "public static", "return": "TypeInformation<T>", "body": "public static <T extends Tuple> TypeInformation<T> getTupleTypeInformation(AbstractDefinition definition) {\n        List<TypeInformation> types = new ArrayList<>();\n        for (Attribute attribute : definition.getAttributeList()) {\n            types.add(TypeInformation.of(getJavaType(attribute.getType())));\n        }\n        try {\n            return Types.TUPLE(types.toArray(new TypeInformation[0]));\n        } catch (IllegalArgumentException ex) {\n            throw new IllegalArgumentException(\"Unable to parse \", ex);\n        }\n    }", "signature": "TypeInformation<T> getTupleTypeInformation(AbstractDefinition definition)", "full_signature": "public static TypeInformation<T> getTupleTypeInformation(AbstractDefinition definition)", "class_method_signature": "SiddhiTypeFactory.getTupleTypeInformation(AbstractDefinition definition)", "testcase": false, "constructor": false, "invocations": ["getAttributeList", "add", "of", "getJavaType", "getType", "TUPLE", "toArray"]}, "repository": {"repo_id": 67913797, "url": "https://github.com/haoch/flink-siddhi", "language": "Java", "is_fork": false, "fork_count": 72, "stargazer_count": 148, "size": 635, "license": "licensed"}}