{"test_class": {"identifier": "ClassConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ConversionContext context = new ConversionContext.Builder(TypeLiteral.of(Class.class))\n            .build();", "modifier": "", "type": "ConversionContext", "declarator": "context = new ConversionContext.Builder(TypeLiteral.of(Class.class))\n            .build()", "var_name": "context"}], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/converters/ClassConverterTest.java"}, "test_case": {"identifier": "testConvert_Class_WithSpacesBefore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvert_Class_WithSpacesBefore() throws Exception {\n        ClassConverter converter = new ClassConverter();\n        assertThat(BigDecimal.class).isEqualTo(converter.convert(\"  java.math.BigDecimal\", context));\n    }", "signature": "void testConvert_Class_WithSpacesBefore()", "full_signature": "@Test public void testConvert_Class_WithSpacesBefore()", "class_method_signature": "ClassConverterTest.testConvert_Class_WithSpacesBefore()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "convert"]}, "focal_class": {"identifier": "ClassConverter", "superclass": "", "interfaces": "implements PropertyConverter<Class<?>>", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(ClassConverter.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(ClassConverter.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> convert(String value, ConversionContext ctx)", "full_signature": "@Override public Class<?> convert(String value, ConversionContext ctx)", "class_method_signature": "ClassConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ClassConverter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ClassConverter.hashCode()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/converters/ClassConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "Class<?>", "body": "@Override\n    public Class<?> convert(String value, ConversionContext ctx) {\n        if(value==null){\n            return null;\n        }\n        ctx.addSupportedFormats(getClass(),\"<fullyQualifiedClassName>\");\n        String trimmed = Objects.requireNonNull(value).trim();\n        try {\n            return Class.forName(trimmed, false, Thread.currentThread().getContextClassLoader());\n        } catch(Exception e) {\n            LOG.finest(\"Class not found in context CL: \" + trimmed);\n        }\n        try {\n            return Class.forName(trimmed, false, ClassConverter.class.getClassLoader());\n        } catch(Exception e) {\n            LOG.finest(\"Class not found in ClassConverter's CL: \" + trimmed);\n        }\n        try {\n            return Class.forName(trimmed, false, ClassLoader.getSystemClassLoader());\n        } catch(Exception e) {\n            LOG.finest(\"Class not found in System CL (giving up): \" + trimmed);\n            return null;\n        }\n    }", "signature": "Class<?> convert(String value, ConversionContext ctx)", "full_signature": "@Override public Class<?> convert(String value, ConversionContext ctx)", "class_method_signature": "ClassConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false, "invocations": ["addSupportedFormats", "getClass", "trim", "requireNonNull", "forName", "getContextClassLoader", "currentThread", "finest", "forName", "getClassLoader", "finest", "forName", "getSystemClassLoader", "finest"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}