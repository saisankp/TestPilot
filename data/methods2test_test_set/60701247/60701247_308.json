{"test_class": {"identifier": "ApkClassTest", "superclass": "", "interfaces": "", "fields": [], "file": "android/testSrc/com/android/tools/idea/apk/debugging/ApkClassTest.java"}, "test_case": {"identifier": "getFqn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getFqn() {\n    ApkPackage p1 = new ApkPackage(\"p1\", null);\n    ApkPackage p2 = new ApkPackage(\"p2\", p1);\n\n    ApkClass c = new ApkClass(\"c\", p2);\n    assertEquals(\"p1.p2.c\", c.getFqn());\n  }", "signature": "void getFqn()", "full_signature": "@Test public void getFqn()", "class_method_signature": "ApkClassTest.getFqn()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getFqn"]}, "focal_class": {"identifier": "ApkClass", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull private final String myName;", "modifier": "@NotNull private final", "type": "String", "declarator": "myName", "var_name": "myName"}, {"original_string": "@NotNull private final String myFqn;", "modifier": "@NotNull private final", "type": "String", "declarator": "myFqn", "var_name": "myFqn"}, {"original_string": "@NotNull private final ApkPackage myParent;", "modifier": "@NotNull private final", "type": "ApkPackage", "declarator": "myParent", "var_name": "myParent"}], "methods": [{"identifier": "ApkClass", "parameters": "(@NotNull String name, @NotNull ApkPackage parent)", "modifiers": "public", "return": "", "signature": " ApkClass(@NotNull String name, @NotNull ApkPackage parent)", "full_signature": "public  ApkClass(@NotNull String name, @NotNull ApkPackage parent)", "class_method_signature": "ApkClass.ApkClass(@NotNull String name, @NotNull ApkPackage parent)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String getName()", "full_signature": "@NotNull public String getName()", "class_method_signature": "ApkClass.getName()", "testcase": false, "constructor": false}, {"identifier": "getFqn", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String getFqn()", "full_signature": "@NotNull public String getFqn()", "class_method_signature": "ApkClass.getFqn()", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "@NotNull public", "return": "ApkPackage", "signature": "ApkPackage getParent()", "full_signature": "@NotNull public ApkPackage getParent()", "class_method_signature": "ApkClass.getParent()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ApkClass.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ApkClass.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ApkClass.toString()", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/apk/debugging/ApkClass.java"}, "focal_method": {"identifier": "getFqn", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "body": "@NotNull\n  public String getFqn() {\n    return myFqn;\n  }", "signature": "String getFqn()", "full_signature": "@NotNull public String getFqn()", "class_method_signature": "ApkClass.getFqn()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}