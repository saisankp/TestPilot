{"test_class": {"identifier": "ConfigPropertiesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String ROOT_DIR;", "modifier": "private static", "type": "String", "declarator": "ROOT_DIR", "var_name": "ROOT_DIR"}, {"original_string": "public static final String STR_DEF_ROOT     = \"/home/athenz\";", "modifier": "public static final", "type": "String", "declarator": "STR_DEF_ROOT     = \"/home/athenz\"", "var_name": "STR_DEF_ROOT"}, {"original_string": "private static final String CONFIG_TEST_PROP_ROOT_DIR = \"athenz.config.properties.test.root.dir\";", "modifier": "private static final", "type": "String", "declarator": "CONFIG_TEST_PROP_ROOT_DIR = \"athenz.config.properties.test.root.dir\"", "var_name": "CONFIG_TEST_PROP_ROOT_DIR"}], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/util/ConfigPropertiesTest.java"}, "test_case": {"identifier": "testRetrieveConfigValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRetrieveConfigValue() {\n        System.setProperty(\"athenz.port\", \"4443\");\n        assertEquals(ConfigProperties.retrieveConfigSetting(\"athenz.port\", 4080), 4443);\n\n        System.setProperty(\"athenz.port\", \"-4443\");\n        assertEquals(ConfigProperties.retrieveConfigSetting(\"athenz.port\", 4080), 4080);\n\n        System.setProperty(\"athenz.port\", \"data\");\n        assertEquals(ConfigProperties.retrieveConfigSetting(\"athenz.port\", 4080), 4080);\n    }", "signature": "void testRetrieveConfigValue()", "full_signature": "@Test public void testRetrieveConfigValue()", "class_method_signature": "ConfigPropertiesTest.testRetrieveConfigValue()", "testcase": true, "constructor": false, "invocations": ["setProperty", "assertEquals", "retrieveConfigSetting", "setProperty", "assertEquals", "retrieveConfigSetting", "setProperty", "assertEquals", "retrieveConfigSetting"]}, "focal_class": {"identifier": "ConfigProperties", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ConfigProperties.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ConfigProperties.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "loadProperties", "parameters": "(String propFile)", "modifiers": "public static", "return": "void", "signature": "void loadProperties(String propFile)", "full_signature": "public static void loadProperties(String propFile)", "class_method_signature": "ConfigProperties.loadProperties(String propFile)", "testcase": false, "constructor": false}, {"identifier": "getPortNumber", "parameters": "(String property, int defaultValue)", "modifiers": "public static", "return": "int", "signature": "int getPortNumber(String property, int defaultValue)", "full_signature": "public static int getPortNumber(String property, int defaultValue)", "class_method_signature": "ConfigProperties.getPortNumber(String property, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "retrieveConfigSetting", "parameters": "(String property, int defaultValue)", "modifiers": "public static", "return": "int", "signature": "int retrieveConfigSetting(String property, int defaultValue)", "full_signature": "public static int retrieveConfigSetting(String property, int defaultValue)", "class_method_signature": "ConfigProperties.retrieveConfigSetting(String property, int defaultValue)", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/util/ConfigProperties.java"}, "focal_method": {"identifier": "retrieveConfigSetting", "parameters": "(String property, int defaultValue)", "modifiers": "public static", "return": "int", "body": "public static int retrieveConfigSetting(String property, int defaultValue) {\n\n        int settingValue;\n        try {\n            String propValue = System.getProperty(property);\n            if (propValue == null) {\n                return defaultValue;\n            }\n\n            settingValue = Integer.parseInt(propValue);\n\n            if (settingValue <= 0) {\n                LOGGER.error(\"Invalid {} value: {}, defaulting to {}\", property, propValue, defaultValue);\n                settingValue = defaultValue;\n            }\n        } catch (Exception ex) {\n            LOGGER.error(\"Invalid {} value, defaulting to {}: {}\", property, defaultValue, ex.getMessage());\n            settingValue = defaultValue;\n        }\n\n        return settingValue;\n    }", "signature": "int retrieveConfigSetting(String property, int defaultValue)", "full_signature": "public static int retrieveConfigSetting(String property, int defaultValue)", "class_method_signature": "ConfigProperties.retrieveConfigSetting(String property, int defaultValue)", "testcase": false, "constructor": false, "invocations": ["getProperty", "parseInt", "error", "error", "getMessage"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}