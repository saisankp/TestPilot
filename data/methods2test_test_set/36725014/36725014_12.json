{"test_class": {"identifier": "ValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "squel/src/test/java/com/github/gchudnov/squel/ValidatorTest.java"}, "test_case": {"identifier": "formatStringWithoutQuotes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void formatStringWithoutQuotes() {\n        QueryBuilderOptions options = new QueryBuilderOptions();\n        options.dontQuote = true;\n\n        String fieldName = \"NAME\";\n        String actual = Validator.formatValue(fieldName, options);\n        String expected = \"NAME\";\n        assertEquals(expected, actual);\n    }", "signature": "void formatStringWithoutQuotes()", "full_signature": "@Test public void formatStringWithoutQuotes()", "class_method_signature": "ValidatorTest.formatStringWithoutQuotes()", "testcase": true, "constructor": false, "invocations": ["formatValue", "assertEquals"]}, "focal_class": {"identifier": "Validator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Validator", "parameters": "()", "modifiers": "private", "return": "", "signature": " Validator()", "full_signature": "private  Validator()", "class_method_signature": "Validator.Validator()", "testcase": false, "constructor": true}, {"identifier": "sanitizeFieldAlias", "parameters": "(String value, QueryBuilderOptions options)", "modifiers": "static", "return": "String", "signature": "String sanitizeFieldAlias(String value, QueryBuilderOptions options)", "full_signature": "static String sanitizeFieldAlias(String value, QueryBuilderOptions options)", "class_method_signature": "Validator.sanitizeFieldAlias(String value, QueryBuilderOptions options)", "testcase": false, "constructor": false}, {"identifier": "sanitizeField", "parameters": "(QueryBuilder value)", "modifiers": "static", "return": "String", "signature": "String sanitizeField(QueryBuilder value)", "full_signature": "static String sanitizeField(QueryBuilder value)", "class_method_signature": "Validator.sanitizeField(QueryBuilder value)", "testcase": false, "constructor": false}, {"identifier": "sanitizeField", "parameters": "(String value, QueryBuilderOptions options)", "modifiers": "static", "return": "String", "signature": "String sanitizeField(String value, QueryBuilderOptions options)", "full_signature": "static String sanitizeField(String value, QueryBuilderOptions options)", "class_method_signature": "Validator.sanitizeField(String value, QueryBuilderOptions options)", "testcase": false, "constructor": false}, {"identifier": "sanitizeTable", "parameters": "(String name, QueryBuilderOptions options)", "modifiers": "static", "return": "String", "signature": "String sanitizeTable(String name, QueryBuilderOptions options)", "full_signature": "static String sanitizeTable(String name, QueryBuilderOptions options)", "class_method_signature": "Validator.sanitizeTable(String name, QueryBuilderOptions options)", "testcase": false, "constructor": false}, {"identifier": "sanitizeTableAlias", "parameters": "(String value, QueryBuilderOptions options)", "modifiers": "static", "return": "String", "signature": "String sanitizeTableAlias(String value, QueryBuilderOptions options)", "full_signature": "static String sanitizeTableAlias(String value, QueryBuilderOptions options)", "class_method_signature": "Validator.sanitizeTableAlias(String value, QueryBuilderOptions options)", "testcase": false, "constructor": false}, {"identifier": "formatValue", "parameters": "(Object value, QueryBuilderOptions options)", "modifiers": "static", "return": "String", "signature": "String formatValue(Object value, QueryBuilderOptions options)", "full_signature": "static String formatValue(Object value, QueryBuilderOptions options)", "class_method_signature": "Validator.formatValue(Object value, QueryBuilderOptions options)", "testcase": false, "constructor": false}, {"identifier": "escapeValue", "parameters": "(String value, QueryBuilderOptions options)", "modifiers": "private static", "return": "String", "signature": "String escapeValue(String value, QueryBuilderOptions options)", "full_signature": "private static String escapeValue(String value, QueryBuilderOptions options)", "class_method_signature": "Validator.escapeValue(String value, QueryBuilderOptions options)", "testcase": false, "constructor": false}, {"identifier": "formatNull", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String formatNull()", "full_signature": "private static String formatNull()", "class_method_signature": "Validator.formatNull()", "testcase": false, "constructor": false}, {"identifier": "formatBoolean", "parameters": "(boolean value)", "modifiers": "private static", "return": "String", "signature": "String formatBoolean(boolean value)", "full_signature": "private static String formatBoolean(boolean value)", "class_method_signature": "Validator.formatBoolean(boolean value)", "testcase": false, "constructor": false}, {"identifier": "formatNumber", "parameters": "(Number value)", "modifiers": "private static", "return": "String", "signature": "String formatNumber(Number value)", "full_signature": "private static String formatNumber(Number value)", "class_method_signature": "Validator.formatNumber(Number value)", "testcase": false, "constructor": false}, {"identifier": "formatString", "parameters": "(String value, QueryBuilderOptions options)", "modifiers": "private static", "return": "String", "signature": "String formatString(String value, QueryBuilderOptions options)", "full_signature": "private static String formatString(String value, QueryBuilderOptions options)", "class_method_signature": "Validator.formatString(String value, QueryBuilderOptions options)", "testcase": false, "constructor": false}, {"identifier": "formatQueryBuilder", "parameters": "(QueryBuilder value)", "modifiers": "private static", "return": "String", "signature": "String formatQueryBuilder(QueryBuilder value)", "full_signature": "private static String formatQueryBuilder(QueryBuilder value)", "class_method_signature": "Validator.formatQueryBuilder(QueryBuilder value)", "testcase": false, "constructor": false}, {"identifier": "formatExpression", "parameters": "(Expression value)", "modifiers": "private static", "return": "String", "signature": "String formatExpression(Expression value)", "full_signature": "private static String formatExpression(Expression value)", "class_method_signature": "Validator.formatExpression(Expression value)", "testcase": false, "constructor": false}, {"identifier": "formatIterable", "parameters": "(Iterable<?> values, QueryBuilderOptions options)", "modifiers": "private static", "return": "String", "signature": "String formatIterable(Iterable<?> values, QueryBuilderOptions options)", "full_signature": "private static String formatIterable(Iterable<?> values, QueryBuilderOptions options)", "class_method_signature": "Validator.formatIterable(Iterable<?> values, QueryBuilderOptions options)", "testcase": false, "constructor": false}, {"identifier": "formatArray", "parameters": "(Object[] values, QueryBuilderOptions options)", "modifiers": "private static", "return": "String", "signature": "String formatArray(Object[] values, QueryBuilderOptions options)", "full_signature": "private static String formatArray(Object[] values, QueryBuilderOptions options)", "class_method_signature": "Validator.formatArray(Object[] values, QueryBuilderOptions options)", "testcase": false, "constructor": false}], "file": "squel/src/main/java/com/github/gchudnov/squel/Validator.java"}, "focal_method": {"identifier": "formatValue", "parameters": "(Object value, QueryBuilderOptions options)", "modifiers": "static", "return": "String", "body": "static String formatValue(Object value, QueryBuilderOptions options) {\n        if(value == null) {\n            return formatNull();\n        } else {\n            if(value instanceof Number) {\n                return formatNumber((Number) value);\n            } else if(value instanceof String) {\n                return formatString((String) value, options);\n            } else if(value instanceof Boolean) {\n                return formatBoolean((boolean) value);\n            } else if(value instanceof QueryBuilder) {\n                return formatQueryBuilder((QueryBuilder) value);\n            } else if(value instanceof Expression) {\n                return formatExpression((Expression) value);\n            } else if(value instanceof Object[]) {\n                return formatArray((Object[]) value, options);\n            } else if(value instanceof Iterable<?>) {\n                return formatIterable((Iterable<?>)value, options);\n            }\n        }\n\n        return value.toString();\n    }", "signature": "String formatValue(Object value, QueryBuilderOptions options)", "full_signature": "static String formatValue(Object value, QueryBuilderOptions options)", "class_method_signature": "Validator.formatValue(Object value, QueryBuilderOptions options)", "testcase": false, "constructor": false, "invocations": ["formatNull", "formatNumber", "formatString", "formatBoolean", "formatQueryBuilder", "formatExpression", "formatArray", "formatIterable", "toString"]}, "repository": {"repo_id": 36725014, "url": "https://github.com/gchudnov/squel-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 10, "size": 456, "license": "licensed"}}