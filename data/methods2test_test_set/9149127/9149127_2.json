{"test_class": {"identifier": "MyContainerInjectionProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(MyContainerInjectionProviderTest.class);", "modifier": "private static final", "type": "org.slf4j.Logger", "declarator": "LOG = org.slf4j.LoggerFactory.getLogger(MyContainerInjectionProviderTest.class)", "var_name": "LOG"}, {"original_string": "private static final String IDO_IT = \"IDoIt\";", "modifier": "private static final", "type": "String", "declarator": "IDO_IT = \"IDoIt\"", "var_name": "IDO_IT"}, {"original_string": "private ContainerBuilder builder;", "modifier": "private", "type": "ContainerBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private boolean postConstruct;", "modifier": "private", "type": "boolean", "declarator": "postConstruct", "var_name": "postConstruct"}, {"original_string": "private boolean preDestroy;", "modifier": "private", "type": "boolean", "declarator": "preDestroy", "var_name": "preDestroy"}, {"original_string": "private MyContainerInjectionProvider provider = new MyContainerInjectionProvider();", "modifier": "private", "type": "MyContainerInjectionProvider", "declarator": "provider = new MyContainerInjectionProvider()", "var_name": "provider"}], "file": "mycontainer-components/mycontainer-jsfprovider/src/test/java/com/googlecode/mycontainer/jsfprovider/MyContainerInjectionProviderTest.java"}, "test_case": {"identifier": "testInvokePreDestroy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testInvokePreDestroy() throws Exception {\n\t\tManagedBean mb = new ManagedBean();\n\t\tprovider.invokePreDestroy(mb);\n\t\tassertTrue(preDestroy);\n\t}", "signature": "void testInvokePreDestroy()", "full_signature": "@Test public void testInvokePreDestroy()", "class_method_signature": "MyContainerInjectionProviderTest.testInvokePreDestroy()", "testcase": true, "constructor": false, "invocations": ["invokePreDestroy", "assertTrue"]}, "focal_class": {"identifier": "MyContainerInjectionProvider", "superclass": "extends DiscoverableInjectionProvider", "interfaces": "", "fields": [{"original_string": "private InitialContext ctx;", "modifier": "private", "type": "InitialContext", "declarator": "ctx", "var_name": "ctx"}], "methods": [{"identifier": "MyContainerInjectionProvider", "parameters": "()", "modifiers": "public", "return": "", "signature": " MyContainerInjectionProvider()", "full_signature": "public  MyContainerInjectionProvider()", "class_method_signature": "MyContainerInjectionProvider.MyContainerInjectionProvider()", "testcase": false, "constructor": true}, {"identifier": "inject", "parameters": "(Object instance)", "modifiers": "public", "return": "void", "signature": "void inject(Object instance)", "full_signature": "public void inject(Object instance)", "class_method_signature": "MyContainerInjectionProvider.inject(Object instance)", "testcase": false, "constructor": false}, {"identifier": "invokePostConstruct", "parameters": "(Object instance)", "modifiers": "public", "return": "void", "signature": "void invokePostConstruct(Object instance)", "full_signature": "public void invokePostConstruct(Object instance)", "class_method_signature": "MyContainerInjectionProvider.invokePostConstruct(Object instance)", "testcase": false, "constructor": false}, {"identifier": "invokePreDestroy", "parameters": "(Object instance)", "modifiers": "public", "return": "void", "signature": "void invokePreDestroy(Object instance)", "full_signature": "public void invokePreDestroy(Object instance)", "class_method_signature": "MyContainerInjectionProvider.invokePreDestroy(Object instance)", "testcase": false, "constructor": false}, {"identifier": "invokeMethod", "parameters": "(Object instance, Method method)", "modifiers": "private", "return": "void", "signature": "void invokeMethod(Object instance, Method method)", "full_signature": "private void invokeMethod(Object instance, Method method)", "class_method_signature": "MyContainerInjectionProvider.invokeMethod(Object instance, Method method)", "testcase": false, "constructor": false}], "file": "mycontainer-components/mycontainer-jsfprovider/src/main/java/com/googlecode/mycontainer/jsfprovider/MyContainerInjectionProvider.java"}, "focal_method": {"identifier": "invokePreDestroy", "parameters": "(Object instance)", "modifiers": "public", "return": "void", "body": "public void invokePreDestroy(Object instance) throws InjectionProviderException {\n\t\tMethod preDestroy = AnnotationUtils.findPreDestroy(instance);\n\n\t\tif (preDestroy != null) {\n\t\t\tinvokeMethod(instance, preDestroy);\n\t\t}\n\t}", "signature": "void invokePreDestroy(Object instance)", "full_signature": "public void invokePreDestroy(Object instance)", "class_method_signature": "MyContainerInjectionProvider.invokePreDestroy(Object instance)", "testcase": false, "constructor": false, "invocations": ["findPreDestroy", "invokeMethod"]}, "repository": {"repo_id": 9149127, "url": "https://github.com/murer/mycontainer", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 13, "size": 1353, "license": "licensed"}}