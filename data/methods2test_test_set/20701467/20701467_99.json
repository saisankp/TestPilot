{"test_class": {"identifier": "NetworkGraphImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NetworkGraphImpl networkGraphImpl;", "modifier": "private", "type": "NetworkGraphImpl", "declarator": "networkGraphImpl", "var_name": "networkGraphImpl"}], "file": "loopremover/implementation/src/test/java/org/opendaylight/l2switch/loopremover/topology/NetworkGraphImplTest.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClear() throws Exception {\n        networkGraphImpl.clear();\n    }", "signature": "void testClear()", "full_signature": "@Test public void testClear()", "class_method_signature": "NetworkGraphImplTest.testClear()", "testcase": true, "constructor": false, "invocations": ["clear"]}, "focal_class": {"identifier": "NetworkGraphImpl", "superclass": "", "interfaces": "implements NetworkGraphService", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(NetworkGraphImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(NetworkGraphImpl.class)", "var_name": "LOG"}, {"original_string": "@GuardedBy(\"this\")\n    private Graph<NodeId, Link> networkGraph;", "modifier": "@GuardedBy(\"this\")\n    private", "type": "Graph<NodeId, Link>", "declarator": "networkGraph", "var_name": "networkGraph"}, {"original_string": "private final Set<String> linkAdded = new HashSet<>();", "modifier": "private final", "type": "Set<String>", "declarator": "linkAdded = new HashSet<>()", "var_name": "linkAdded"}], "methods": [{"identifier": "addLinks", "parameters": "(List<Link> links)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void addLinks(List<Link> links)", "full_signature": "@Override public synchronized void addLinks(List<Link> links)", "class_method_signature": "NetworkGraphImpl.addLinks(List<Link> links)", "testcase": false, "constructor": false}, {"identifier": "linkAlreadyAdded", "parameters": "(Link link)", "modifiers": "@GuardedBy(\"this\") private", "return": "boolean", "signature": "boolean linkAlreadyAdded(Link link)", "full_signature": "@GuardedBy(\"this\") private boolean linkAlreadyAdded(Link link)", "class_method_signature": "NetworkGraphImpl.linkAlreadyAdded(Link link)", "testcase": false, "constructor": false}, {"identifier": "removeLinks", "parameters": "(List<Link> links)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void removeLinks(List<Link> links)", "full_signature": "@Override public synchronized void removeLinks(List<Link> links)", "class_method_signature": "NetworkGraphImpl.removeLinks(List<Link> links)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void clear()", "full_signature": "@Override public synchronized void clear()", "class_method_signature": "NetworkGraphImpl.clear()", "testcase": false, "constructor": false}, {"identifier": "getLinksInMst", "parameters": "()", "modifiers": "@Override public synchronized", "return": "List<Link>", "signature": "List<Link> getLinksInMst()", "full_signature": "@Override public synchronized List<Link> getLinksInMst()", "class_method_signature": "NetworkGraphImpl.getLinksInMst()", "testcase": false, "constructor": false}, {"identifier": "getAllLinks", "parameters": "()", "modifiers": "@Override public synchronized", "return": "List<Link>", "signature": "List<Link> getAllLinks()", "full_signature": "@Override public synchronized List<Link> getAllLinks()", "class_method_signature": "NetworkGraphImpl.getAllLinks()", "testcase": false, "constructor": false}], "file": "loopremover/implementation/src/main/java/org/opendaylight/l2switch/loopremover/topology/NetworkGraphImpl.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n    public synchronized void clear() {\n        networkGraph = null;\n        linkAdded.clear();\n        // shortestPath = null;\n    }", "signature": "void clear()", "full_signature": "@Override public synchronized void clear()", "class_method_signature": "NetworkGraphImpl.clear()", "testcase": false, "constructor": false, "invocations": ["clear"]}, "repository": {"repo_id": 20701467, "url": "https://github.com/opendaylight/l2switch", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 25, "size": 4178, "license": "licensed"}}