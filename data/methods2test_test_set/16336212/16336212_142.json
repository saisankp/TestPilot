{"test_class": {"identifier": "V09SupportTest", "superclass": "", "interfaces": "", "fields": [], "file": "central/src/test/java/org/glowroot/central/v09support/V09SupportTest.java"}, "test_case": {"identifier": "shouldGetParentV09", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldGetParentV09() {\n        assertThat(V09Support.getParentV09(\"aaa\")).isNull();\n        assertThat(V09Support.getParentV09(\"aaa::\")).isNull();\n        assertThat(V09Support.getParentV09(\"aaa::bbb\")).isEqualTo(\"aaa\");\n        assertThat(V09Support.getParentV09(\"aaa::bbb::\")).isEqualTo(\"aaa\");\n        assertThat(V09Support.getParentV09(\"aaa::bbb::ccc\")).isEqualTo(\"aaa/bbb\");\n        assertThat(V09Support.getParentV09(\"aaa::bbb::ccc::\")).isEqualTo(\"aaa/bbb\");\n        assertThat(V09Support.getParentV09(\"a\")).isNull();\n        assertThat(V09Support.getParentV09(\"a::\")).isNull();\n        assertThat(V09Support.getParentV09(\"a::b\")).isEqualTo(\"a\");\n        assertThat(V09Support.getParentV09(\"a::b::\")).isEqualTo(\"a\");\n        assertThat(V09Support.getParentV09(\"a::b::c\")).isEqualTo(\"a/b\");\n        assertThat(V09Support.getParentV09(\"a::b::c::\")).isEqualTo(\"a/b\");\n    }", "signature": "void shouldGetParentV09()", "full_signature": "@Test public void shouldGetParentV09()", "class_method_signature": "V09SupportTest.shouldGetParentV09()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "getParentV09", "isNull", "assertThat", "getParentV09", "isEqualTo", "assertThat", "getParentV09", "isEqualTo", "assertThat", "getParentV09", "isEqualTo", "assertThat", "getParentV09", "isEqualTo", "assertThat", "getParentV09", "isNull", "assertThat", "getParentV09", "isNull", "assertThat", "getParentV09", "isEqualTo", "assertThat", "getParentV09", "isEqualTo", "assertThat", "getParentV09", "isEqualTo", "assertThat", "getParentV09", "isEqualTo", "assertThat", "getParentV09"]}, "focal_class": {"identifier": "V09Support", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getAgentRollupIdsV09", "parameters": "(String agentId)", "modifiers": "static", "return": "List<String>", "signature": "List<String> getAgentRollupIdsV09(String agentId)", "full_signature": "static List<String> getAgentRollupIdsV09(String agentId)", "class_method_signature": "V09Support.getAgentRollupIdsV09(String agentId)", "testcase": false, "constructor": false}, {"identifier": "getParentV09", "parameters": "(String agentRollupId)", "modifiers": "static @Nullable", "return": "String", "signature": "String getParentV09(String agentRollupId)", "full_signature": "static @Nullable String getParentV09(String agentRollupId)", "class_method_signature": "V09Support.getParentV09(String agentRollupId)", "testcase": false, "constructor": false}, {"identifier": "convertToV09", "parameters": "(String agentRollupId)", "modifiers": "static", "return": "String", "signature": "String convertToV09(String agentRollupId)", "full_signature": "static String convertToV09(String agentRollupId)", "class_method_signature": "V09Support.convertToV09(String agentRollupId)", "testcase": false, "constructor": false}, {"identifier": "isLeaf", "parameters": "(String agentRollupId)", "modifiers": "static", "return": "boolean", "signature": "boolean isLeaf(String agentRollupId)", "full_signature": "static boolean isLeaf(String agentRollupId)", "class_method_signature": "V09Support.isLeaf(String agentRollupId)", "testcase": false, "constructor": false}, {"identifier": "getPlan", "parameters": "(Set<String> v09AgentRollupIds, long v09LastCaptureTime,\n            String agentRollupId, long from, long to)", "modifiers": "static", "return": "QueryPlan", "signature": "QueryPlan getPlan(Set<String> v09AgentRollupIds, long v09LastCaptureTime,\n            String agentRollupId, long from, long to)", "full_signature": "static QueryPlan getPlan(Set<String> v09AgentRollupIds, long v09LastCaptureTime,\n            String agentRollupId, long from, long to)", "class_method_signature": "V09Support.getPlan(Set<String> v09AgentRollupIds, long v09LastCaptureTime,\n            String agentRollupId, long from, long to)", "testcase": false, "constructor": false}], "file": "central/src/main/java/org/glowroot/central/v09support/V09Support.java"}, "focal_method": {"identifier": "getParentV09", "parameters": "(String agentRollupId)", "modifiers": "static @Nullable", "return": "String", "body": "static @Nullable String getParentV09(String agentRollupId) {\n        int index = agentRollupId.lastIndexOf(\"::\", agentRollupId.length() - 3);\n        if (index == -1) {\n            return null;\n        } else {\n            return agentRollupId.substring(0, index).replace(\"::\", \"/\");\n        }\n    }", "signature": "String getParentV09(String agentRollupId)", "full_signature": "static @Nullable String getParentV09(String agentRollupId)", "class_method_signature": "V09Support.getParentV09(String agentRollupId)", "testcase": false, "constructor": false, "invocations": ["lastIndexOf", "length", "replace", "substring"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}