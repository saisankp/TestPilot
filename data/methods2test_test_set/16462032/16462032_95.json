{"test_class": {"identifier": "FileConfigurationSourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_VALUE = \"Hello, World!\";", "modifier": "private static final", "type": "String", "declarator": "TEST_VALUE = \"Hello, World!\"", "var_name": "TEST_VALUE"}, {"original_string": "private File file;", "modifier": "private", "type": "File", "declarator": "file", "var_name": "file"}], "file": "mucommander-commons-conf/src/test/java/com/mucommander/commons/conf/FileConfigurationSourceTest.java"}, "test_case": {"identifier": "testInitialisation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInitialisation() {\n        FileConfigurationSource source;\n\n        // Makes sure the 'file' constructor works properly.\n        source = new FileConfigurationSource(file, \"utf-8\");\n        assert file.equals(source.getFile());\n\n        // Makes sure the 'string' constructor works properly.\n        source = new FileConfigurationSource(file.getAbsolutePath(), \"utf-8\");\n        assert file.equals(source.getFile());\n    }", "signature": "void testInitialisation()", "full_signature": "@Test public void testInitialisation()", "class_method_signature": "FileConfigurationSourceTest.testInitialisation()", "testcase": true, "constructor": false, "invocations": ["equals", "getFile", "getAbsolutePath", "equals", "getFile"]}, "focal_class": {"identifier": "FileConfigurationSource", "superclass": "", "interfaces": "implements ConfigurationSource", "fields": [{"original_string": "private final File    file;", "modifier": "private final", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private final Charset charset;", "modifier": "private final", "type": "Charset", "declarator": "charset", "var_name": "charset"}], "methods": [{"identifier": "FileConfigurationSource", "parameters": "(File file)", "modifiers": "@Deprecated public", "return": "", "signature": " FileConfigurationSource(File file)", "full_signature": "@Deprecated public  FileConfigurationSource(File file)", "class_method_signature": "FileConfigurationSource.FileConfigurationSource(File file)", "testcase": false, "constructor": true}, {"identifier": "FileConfigurationSource", "parameters": "(File file, Charset charset)", "modifiers": "public", "return": "", "signature": " FileConfigurationSource(File file, Charset charset)", "full_signature": "public  FileConfigurationSource(File file, Charset charset)", "class_method_signature": "FileConfigurationSource.FileConfigurationSource(File file, Charset charset)", "testcase": false, "constructor": true}, {"identifier": "FileConfigurationSource", "parameters": "(File file, String charset)", "modifiers": "public", "return": "", "signature": " FileConfigurationSource(File file, String charset)", "full_signature": "public  FileConfigurationSource(File file, String charset)", "class_method_signature": "FileConfigurationSource.FileConfigurationSource(File file, String charset)", "testcase": false, "constructor": true}, {"identifier": "FileConfigurationSource", "parameters": "(String path)", "modifiers": "@Deprecated public", "return": "", "signature": " FileConfigurationSource(String path)", "full_signature": "@Deprecated public  FileConfigurationSource(String path)", "class_method_signature": "FileConfigurationSource.FileConfigurationSource(String path)", "testcase": false, "constructor": true}, {"identifier": "FileConfigurationSource", "parameters": "(String path, String charset)", "modifiers": "public", "return": "", "signature": " FileConfigurationSource(String path, String charset)", "full_signature": "public  FileConfigurationSource(String path, String charset)", "class_method_signature": "FileConfigurationSource.FileConfigurationSource(String path, String charset)", "testcase": false, "constructor": true}, {"identifier": "FileConfigurationSource", "parameters": "(String path, Charset charset)", "modifiers": "public", "return": "", "signature": " FileConfigurationSource(String path, Charset charset)", "full_signature": "public  FileConfigurationSource(String path, Charset charset)", "class_method_signature": "FileConfigurationSource.FileConfigurationSource(String path, Charset charset)", "testcase": false, "constructor": true}, {"identifier": "getFile", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getFile()", "full_signature": "public File getFile()", "class_method_signature": "FileConfigurationSource.getFile()", "testcase": false, "constructor": false}, {"identifier": "getCharset", "parameters": "()", "modifiers": "public", "return": "Charset", "signature": "Charset getCharset()", "full_signature": "public Charset getCharset()", "class_method_signature": "FileConfigurationSource.getCharset()", "testcase": false, "constructor": false}, {"identifier": "getReader", "parameters": "()", "modifiers": "@Override public", "return": "Reader", "signature": "Reader getReader()", "full_signature": "@Override public Reader getReader()", "class_method_signature": "FileConfigurationSource.getReader()", "testcase": false, "constructor": false}, {"identifier": "getWriter", "parameters": "()", "modifiers": "@Override public", "return": "Writer", "signature": "Writer getWriter()", "full_signature": "@Override public Writer getWriter()", "class_method_signature": "FileConfigurationSource.getWriter()", "testcase": false, "constructor": false}, {"identifier": "isExists", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isExists()", "full_signature": "@Override public boolean isExists()", "class_method_signature": "FileConfigurationSource.isExists()", "testcase": false, "constructor": false}], "file": "mucommander-commons-conf/src/main/java/com/mucommander/commons/conf/FileConfigurationSource.java"}, "focal_method": {"identifier": "getFile", "parameters": "()", "modifiers": "public", "return": "File", "body": "public File getFile() {\n        return file;\n    }", "signature": "File getFile()", "full_signature": "public File getFile()", "class_method_signature": "FileConfigurationSource.getFile()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16462032, "url": "https://github.com/mucommander/mucommander", "language": "Java", "is_fork": false, "fork_count": 124, "stargazer_count": 448, "size": 47123, "license": "licensed"}}