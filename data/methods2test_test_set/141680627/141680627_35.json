{"test_class": {"identifier": "TravelTimePickerTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private TravelTimePicker mTravelTimePicker;", "modifier": "private", "type": "TravelTimePicker", "declarator": "mTravelTimePicker", "var_name": "mTravelTimePicker"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/routing/TravelTimePickerTest.java"}, "test_case": {"identifier": "cancelShouldDismissDialog", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void cancelShouldDismissDialog() {\n        mTravelTimePicker.open(getSupportFragmentManager());\n        final Dialog dialog = mTravelTimePicker.getDialog();\n        assertThat(dialog.isShowing(), is(true));\n        ((AlertDialog) dialog).getButton(AlertDialog.BUTTON_NEGATIVE).performClick();\n        assertThat(dialog.isShowing(), is(false));\n    }", "signature": "void cancelShouldDismissDialog()", "full_signature": "@Test public void cancelShouldDismissDialog()", "class_method_signature": "TravelTimePickerTest.cancelShouldDismissDialog()", "testcase": true, "constructor": false, "invocations": ["open", "getSupportFragmentManager", "getDialog", "assertThat", "isShowing", "is", "performClick", "getButton", "assertThat", "isShowing", "is"]}, "focal_class": {"identifier": "TravelTimePicker", "superclass": "extends DialogFragment", "interfaces": "", "fields": [{"original_string": "public static final String HOUR = \"hour\";", "modifier": "public static final", "type": "String", "declarator": "HOUR = \"hour\"", "var_name": "HOUR"}, {"original_string": "public static final String MINUTE = \"minute\";", "modifier": "public static final", "type": "String", "declarator": "MINUTE = \"minute\"", "var_name": "MINUTE"}, {"original_string": "public static final String YEAR = \"year\";", "modifier": "public static final", "type": "String", "declarator": "YEAR = \"year\"", "var_name": "YEAR"}, {"original_string": "public static final String MONTH = \"month\";", "modifier": "public static final", "type": "String", "declarator": "MONTH = \"month\"", "var_name": "MONTH"}, {"original_string": "public static final String DAY = \"day\";", "modifier": "public static final", "type": "String", "declarator": "DAY = \"day\"", "var_name": "DAY"}, {"original_string": "public static final String TYPE = \"type\";", "modifier": "public static final", "type": "String", "declarator": "TYPE = \"type\"", "var_name": "TYPE"}, {"original_string": "public static final String TAB_SELECTED = \"tab_type\";", "modifier": "public static final", "type": "String", "declarator": "TAB_SELECTED = \"tab_type\"", "var_name": "TAB_SELECTED"}, {"original_string": "public static final String MIN_DAY = \"minDay\";", "modifier": "public static final", "type": "String", "declarator": "MIN_DAY = \"minDay\"", "var_name": "MIN_DAY"}, {"original_string": "public static final String MAX_DAY = \"maxDay\";", "modifier": "public static final", "type": "String", "declarator": "MAX_DAY = \"maxDay\"", "var_name": "MAX_DAY"}, {"original_string": "public static final String TIME_DIALOG_OPEN = \"dialogOpenState\";", "modifier": "public static final", "type": "String", "declarator": "TIME_DIALOG_OPEN = \"dialogOpenState\"", "var_name": "TIME_DIALOG_OPEN"}, {"original_string": "private long mMinDate = -1;", "modifier": "private", "type": "long", "declarator": "mMinDate = -1", "var_name": "mMinDate"}, {"original_string": "private long mMaxDate = -1;", "modifier": "private", "type": "long", "declarator": "mMaxDate = -1", "var_name": "mMaxDate"}, {"original_string": "private final Calendar mCalendar = Calendar.getInstance();", "modifier": "private final", "type": "Calendar", "declarator": "mCalendar = Calendar.getInstance()", "var_name": "mCalendar"}, {"original_string": "private TabLayout mTabLayout;", "modifier": "private", "type": "TabLayout", "declarator": "mTabLayout", "var_name": "mTabLayout"}, {"original_string": "private DatePicker mDatePicker;", "modifier": "private", "type": "DatePicker", "declarator": "mDatePicker", "var_name": "mDatePicker"}, {"original_string": "private TimePicker mTimePicker;", "modifier": "private", "type": "TimePicker", "declarator": "mTimePicker", "var_name": "mTimePicker"}, {"original_string": "private RouteOptions.TimeType mTimeType = RouteOptions.TimeType.DEPARTURE;", "modifier": "private", "type": "RouteOptions.TimeType", "declarator": "mTimeType = RouteOptions.TimeType.DEPARTURE", "var_name": "mTimeType"}, {"original_string": "private Variety mVariety = Variety.DEPARTURE;", "modifier": "private", "type": "Variety", "declarator": "mVariety = Variety.DEPARTURE", "var_name": "mVariety"}, {"original_string": "private OnTimePickedListener mOnTimePickedListener;", "modifier": "private", "type": "OnTimePickedListener", "declarator": "mOnTimePickedListener", "var_name": "mOnTimePickedListener"}, {"original_string": "private final DialogInterface.OnShowListener mOnShowListener = new DialogInterface.OnShowListener() {\n        @Override\n        public void onShow(DialogInterface dialog) {\n            ((AlertDialog) dialog).getButton(AlertDialog.BUTTON_POSITIVE).setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View view) {\n                    handleClick();\n                }\n            });\n        }\n    };", "modifier": "private final", "type": "DialogInterface.OnShowListener", "declarator": "mOnShowListener = new DialogInterface.OnShowListener() {\n        @Override\n        public void onShow(DialogInterface dialog) {\n            ((AlertDialog) dialog).getButton(AlertDialog.BUTTON_POSITIVE).setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View view) {\n                    handleClick();\n                }\n            });\n        }\n    }", "var_name": "mOnShowListener"}], "methods": [{"identifier": "newInstance", "parameters": "()", "modifiers": "public static", "return": "TravelTimePicker", "signature": "TravelTimePicker newInstance()", "full_signature": "public static TravelTimePicker newInstance()", "class_method_signature": "TravelTimePicker.newInstance()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Variety type)", "modifiers": "public static", "return": "TravelTimePicker", "signature": "TravelTimePicker newInstance(Variety type)", "full_signature": "public static TravelTimePicker newInstance(Variety type)", "class_method_signature": "TravelTimePicker.newInstance(Variety type)", "testcase": false, "constructor": false}, {"identifier": "onCreateDialog", "parameters": "(final Bundle savedInstanceState)", "modifiers": "@Override public", "return": "Dialog", "signature": "Dialog onCreateDialog(final Bundle savedInstanceState)", "full_signature": "@Override public Dialog onCreateDialog(final Bundle savedInstanceState)", "class_method_signature": "TravelTimePicker.onCreateDialog(final Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "updateDefaultValues", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateDefaultValues()", "full_signature": "private void updateDefaultValues()", "class_method_signature": "TravelTimePicker.updateDefaultValues()", "testcase": false, "constructor": false}, {"identifier": "updateVisibility", "parameters": "(Bundle savedInstanceState)", "modifiers": "private", "return": "void", "signature": "void updateVisibility(Bundle savedInstanceState)", "full_signature": "private void updateVisibility(Bundle savedInstanceState)", "class_method_signature": "TravelTimePicker.updateVisibility(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "handleClick", "parameters": "()", "modifiers": "", "return": "void", "signature": "void handleClick()", "full_signature": " void handleClick()", "class_method_signature": "TravelTimePicker.handleClick()", "testcase": false, "constructor": false}, {"identifier": "updateTab", "parameters": "(final Bundle savedInstanceState)", "modifiers": "private", "return": "void", "signature": "void updateTab(final Bundle savedInstanceState)", "full_signature": "private void updateTab(final Bundle savedInstanceState)", "class_method_signature": "TravelTimePicker.updateTab(final Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "updateTimePicker", "parameters": "(Bundle savedInstanceState)", "modifiers": "private", "return": "void", "signature": "void updateTimePicker(Bundle savedInstanceState)", "full_signature": "private void updateTimePicker(Bundle savedInstanceState)", "class_method_signature": "TravelTimePicker.updateTimePicker(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "updateDatePicker", "parameters": "(Bundle savedInstanceState)", "modifiers": "private", "return": "void", "signature": "void updateDatePicker(Bundle savedInstanceState)", "full_signature": "private void updateDatePicker(Bundle savedInstanceState)", "class_method_signature": "TravelTimePicker.updateDatePicker(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(final android.app.FragmentManager manager, final Date date)", "modifiers": "public", "return": "void", "signature": "void open(final android.app.FragmentManager manager, final Date date)", "full_signature": "public void open(final android.app.FragmentManager manager, final Date date)", "class_method_signature": "TravelTimePicker.open(final android.app.FragmentManager manager, final Date date)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(final android.app.FragmentManager manager)", "modifiers": "public", "return": "void", "signature": "void open(final android.app.FragmentManager manager)", "full_signature": "public void open(final android.app.FragmentManager manager)", "class_method_signature": "TravelTimePicker.open(final android.app.FragmentManager manager)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(final FragmentManager manager, final Date date)", "modifiers": "public", "return": "void", "signature": "void open(final FragmentManager manager, final Date date)", "full_signature": "public void open(final FragmentManager manager, final Date date)", "class_method_signature": "TravelTimePicker.open(final FragmentManager manager, final Date date)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(final FragmentManager manager)", "modifiers": "public", "return": "void", "signature": "void open(final FragmentManager manager)", "full_signature": "public void open(final FragmentManager manager)", "class_method_signature": "TravelTimePicker.open(final FragmentManager manager)", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getTime()", "full_signature": "public Date getTime()", "class_method_signature": "TravelTimePicker.getTime()", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(final Date time)", "modifiers": "public", "return": "void", "signature": "void setTime(final Date time)", "full_signature": "public void setTime(final Date time)", "class_method_signature": "TravelTimePicker.setTime(final Date time)", "testcase": false, "constructor": false}, {"identifier": "getTimeType", "parameters": "()", "modifiers": "public", "return": "RouteOptions.TimeType", "signature": "RouteOptions.TimeType getTimeType()", "full_signature": "public RouteOptions.TimeType getTimeType()", "class_method_signature": "TravelTimePicker.getTimeType()", "testcase": false, "constructor": false}, {"identifier": "setTimeType", "parameters": "(final RouteOptions.TimeType type)", "modifiers": "public", "return": "void", "signature": "void setTimeType(final RouteOptions.TimeType type)", "full_signature": "public void setTimeType(final RouteOptions.TimeType type)", "class_method_signature": "TravelTimePicker.setTimeType(final RouteOptions.TimeType type)", "testcase": false, "constructor": false}, {"identifier": "getDatePicker", "parameters": "()", "modifiers": "public", "return": "DatePicker", "signature": "DatePicker getDatePicker()", "full_signature": "public DatePicker getDatePicker()", "class_method_signature": "TravelTimePicker.getDatePicker()", "testcase": false, "constructor": false}, {"identifier": "getTimePicker", "parameters": "()", "modifiers": "public", "return": "TimePicker", "signature": "TimePicker getTimePicker()", "full_signature": "public TimePicker getTimePicker()", "class_method_signature": "TravelTimePicker.getTimePicker()", "testcase": false, "constructor": false}, {"identifier": "setMinDate", "parameters": "(long minDate)", "modifiers": "public", "return": "TravelTimePicker", "signature": "TravelTimePicker setMinDate(long minDate)", "full_signature": "public TravelTimePicker setMinDate(long minDate)", "class_method_signature": "TravelTimePicker.setMinDate(long minDate)", "testcase": false, "constructor": false}, {"identifier": "setMaxDate", "parameters": "(long maxDate)", "modifiers": "public", "return": "TravelTimePicker", "signature": "TravelTimePicker setMaxDate(long maxDate)", "full_signature": "public TravelTimePicker setMaxDate(long maxDate)", "class_method_signature": "TravelTimePicker.setMaxDate(long maxDate)", "testcase": false, "constructor": false}, {"identifier": "getMaxDate", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxDate()", "full_signature": "public long getMaxDate()", "class_method_signature": "TravelTimePicker.getMaxDate()", "testcase": false, "constructor": false}, {"identifier": "getMinDate", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMinDate()", "full_signature": "public long getMinDate()", "class_method_signature": "TravelTimePicker.getMinDate()", "testcase": false, "constructor": false}, {"identifier": "getVariety", "parameters": "()", "modifiers": "public", "return": "Variety", "signature": "Variety getVariety()", "full_signature": "public Variety getVariety()", "class_method_signature": "TravelTimePicker.getVariety()", "testcase": false, "constructor": false}, {"identifier": "onSaveInstanceState", "parameters": "(Bundle outState)", "modifiers": "@Override public", "return": "void", "signature": "void onSaveInstanceState(Bundle outState)", "full_signature": "@Override public void onSaveInstanceState(Bundle outState)", "class_method_signature": "TravelTimePicker.onSaveInstanceState(Bundle outState)", "testcase": false, "constructor": false}, {"identifier": "setOnTimePickedListener", "parameters": "(final OnTimePickedListener listener)", "modifiers": "public", "return": "void", "signature": "void setOnTimePickedListener(final OnTimePickedListener listener)", "full_signature": "public void setOnTimePickedListener(final OnTimePickedListener listener)", "class_method_signature": "TravelTimePicker.setOnTimePickedListener(final OnTimePickedListener listener)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/routing/TravelTimePicker.java"}, "focal_method": {"identifier": "open", "parameters": "(final android.app.FragmentManager manager, final Date date)", "modifiers": "public", "return": "void", "body": "public void open(final android.app.FragmentManager manager, final Date date) {\n    }", "signature": "void open(final android.app.FragmentManager manager, final Date date)", "full_signature": "public void open(final android.app.FragmentManager manager, final Date date)", "class_method_signature": "TravelTimePicker.open(final android.app.FragmentManager manager, final Date date)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}