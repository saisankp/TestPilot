{"test_class": {"identifier": "DeployTargetContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DeployTargetProvider myDeviceAndSnapshotComboBoxTargetProvider;", "modifier": "private", "type": "DeployTargetProvider", "declarator": "myDeviceAndSnapshotComboBoxTargetProvider", "var_name": "myDeviceAndSnapshotComboBoxTargetProvider"}, {"original_string": "private DeployTargetProvider myCloudTestMatrixTargetProvider;", "modifier": "private", "type": "DeployTargetProvider", "declarator": "myCloudTestMatrixTargetProvider", "var_name": "myCloudTestMatrixTargetProvider"}, {"original_string": "private DeployTargetContext myContext;", "modifier": "private", "type": "DeployTargetContext", "declarator": "myContext", "var_name": "myContext"}], "file": "android/testSrc/com/android/tools/idea/run/editor/DeployTargetContextTest.java"}, "test_case": {"identifier": "getApplicableDeployTargetProvidersVisibleComboBoxTestConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getApplicableDeployTargetProvidersVisibleComboBoxTestConfiguration() {\n    // Act\n    Object actualProviders = myContext.getApplicableDeployTargetProviders(true);\n\n    // Assert\n    assertEquals(Arrays.asList(myDeviceAndSnapshotComboBoxTargetProvider, myCloudTestMatrixTargetProvider), actualProviders);\n  }", "signature": "void getApplicableDeployTargetProvidersVisibleComboBoxTestConfiguration()", "full_signature": "@Test public void getApplicableDeployTargetProvidersVisibleComboBoxTestConfiguration()", "class_method_signature": "DeployTargetContextTest.getApplicableDeployTargetProvidersVisibleComboBoxTestConfiguration()", "testcase": true, "constructor": false, "invocations": ["getApplicableDeployTargetProviders", "assertEquals", "asList"]}, "focal_class": {"identifier": "DeployTargetContext", "superclass": "", "interfaces": "implements JDOMExternalizable", "fields": [{"original_string": "public String TARGET_SELECTION_MODE = TargetSelectionMode.SHOW_DIALOG.name();", "modifier": "public", "type": "String", "declarator": "TARGET_SELECTION_MODE = TargetSelectionMode.SHOW_DIALOG.name()", "var_name": "TARGET_SELECTION_MODE"}, {"original_string": "private final Collection<DeployTargetProvider> myDeployTargetProviders;", "modifier": "private final", "type": "Collection<DeployTargetProvider>", "declarator": "myDeployTargetProviders", "var_name": "myDeployTargetProviders"}, {"original_string": "private final Map<String, DeployTargetState> myDeployTargetStates;", "modifier": "private final", "type": "Map<String, DeployTargetState>", "declarator": "myDeployTargetStates", "var_name": "myDeployTargetStates"}], "methods": [{"identifier": "DeployTargetContext", "parameters": "()", "modifiers": "public", "return": "", "signature": " DeployTargetContext()", "full_signature": "public  DeployTargetContext()", "class_method_signature": "DeployTargetContext.DeployTargetContext()", "testcase": false, "constructor": true}, {"identifier": "DeployTargetContext", "parameters": "(@NotNull Collection<DeployTargetProvider> deployTargetProviders)", "modifiers": "@VisibleForTesting", "return": "", "signature": " DeployTargetContext(@NotNull Collection<DeployTargetProvider> deployTargetProviders)", "full_signature": "@VisibleForTesting  DeployTargetContext(@NotNull Collection<DeployTargetProvider> deployTargetProviders)", "class_method_signature": "DeployTargetContext.DeployTargetContext(@NotNull Collection<DeployTargetProvider> deployTargetProviders)", "testcase": false, "constructor": true}, {"identifier": "getApplicableDeployTargetProviders", "parameters": "(boolean testConfiguration)", "modifiers": "@NotNull public", "return": "List<DeployTargetProvider>", "signature": "List<DeployTargetProvider> getApplicableDeployTargetProviders(boolean testConfiguration)", "full_signature": "@NotNull public List<DeployTargetProvider> getApplicableDeployTargetProviders(boolean testConfiguration)", "class_method_signature": "DeployTargetContext.getApplicableDeployTargetProviders(boolean testConfiguration)", "testcase": false, "constructor": false}, {"identifier": "getCurrentDeployTargetProvider", "parameters": "()", "modifiers": "@NotNull public", "return": "DeployTargetProvider", "signature": "DeployTargetProvider getCurrentDeployTargetProvider()", "full_signature": "@NotNull public DeployTargetProvider getCurrentDeployTargetProvider()", "class_method_signature": "DeployTargetContext.getCurrentDeployTargetProvider()", "testcase": false, "constructor": false}, {"identifier": "getDeployTargetStates", "parameters": "()", "modifiers": "@NotNull public", "return": "Map<String, DeployTargetState>", "signature": "Map<String, DeployTargetState> getDeployTargetStates()", "full_signature": "@NotNull public Map<String, DeployTargetState> getDeployTargetStates()", "class_method_signature": "DeployTargetContext.getDeployTargetStates()", "testcase": false, "constructor": false}, {"identifier": "getCurrentDeployTargetState", "parameters": "()", "modifiers": "@NotNull public", "return": "DeployTargetState", "signature": "DeployTargetState getCurrentDeployTargetState()", "full_signature": "@NotNull public DeployTargetState getCurrentDeployTargetState()", "class_method_signature": "DeployTargetContext.getCurrentDeployTargetState()", "testcase": false, "constructor": false}, {"identifier": "getDeployTargetState", "parameters": "(@NotNull DeployTargetProvider target)", "modifiers": "@NotNull public", "return": "DeployTargetState", "signature": "DeployTargetState getDeployTargetState(@NotNull DeployTargetProvider target)", "full_signature": "@NotNull public DeployTargetState getDeployTargetState(@NotNull DeployTargetProvider target)", "class_method_signature": "DeployTargetContext.getDeployTargetState(@NotNull DeployTargetProvider target)", "testcase": false, "constructor": false}, {"identifier": "setTargetSelectionMode", "parameters": "(@NotNull TargetSelectionMode mode)", "modifiers": "public", "return": "void", "signature": "void setTargetSelectionMode(@NotNull TargetSelectionMode mode)", "full_signature": "public void setTargetSelectionMode(@NotNull TargetSelectionMode mode)", "class_method_signature": "DeployTargetContext.setTargetSelectionMode(@NotNull TargetSelectionMode mode)", "testcase": false, "constructor": false}, {"identifier": "setTargetSelectionMode", "parameters": "(@NotNull DeployTargetProvider target)", "modifiers": "public", "return": "void", "signature": "void setTargetSelectionMode(@NotNull DeployTargetProvider target)", "full_signature": "public void setTargetSelectionMode(@NotNull DeployTargetProvider target)", "class_method_signature": "DeployTargetContext.setTargetSelectionMode(@NotNull DeployTargetProvider target)", "testcase": false, "constructor": false}, {"identifier": "getTargetSelectionMode", "parameters": "()", "modifiers": "@NotNull public", "return": "TargetSelectionMode", "signature": "TargetSelectionMode getTargetSelectionMode()", "full_signature": "@NotNull public TargetSelectionMode getTargetSelectionMode()", "class_method_signature": "DeployTargetContext.getTargetSelectionMode()", "testcase": false, "constructor": false}, {"identifier": "readExternal", "parameters": "(Element element)", "modifiers": "@Override public", "return": "void", "signature": "void readExternal(Element element)", "full_signature": "@Override public void readExternal(Element element)", "class_method_signature": "DeployTargetContext.readExternal(Element element)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(Element element)", "modifiers": "@Override public", "return": "void", "signature": "void writeExternal(Element element)", "full_signature": "@Override public void writeExternal(Element element)", "class_method_signature": "DeployTargetContext.writeExternal(Element element)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/run/editor/DeployTargetContext.java"}, "focal_method": {"identifier": "getApplicableDeployTargetProviders", "parameters": "(boolean testConfiguration)", "modifiers": "@NotNull public", "return": "List<DeployTargetProvider>", "body": "@NotNull\n  public List<DeployTargetProvider> getApplicableDeployTargetProviders(boolean testConfiguration) {\n    return myDeployTargetProviders.stream()\n      .filter(provider -> provider.isApplicable(testConfiguration))\n      .collect(Collectors.toList());\n  }", "signature": "List<DeployTargetProvider> getApplicableDeployTargetProviders(boolean testConfiguration)", "full_signature": "@NotNull public List<DeployTargetProvider> getApplicableDeployTargetProviders(boolean testConfiguration)", "class_method_signature": "DeployTargetContext.getApplicableDeployTargetProviders(boolean testConfiguration)", "testcase": false, "constructor": false, "invocations": ["collect", "filter", "stream", "isApplicable", "toList"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}