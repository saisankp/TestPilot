{"test_class": {"identifier": "SkelNodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "neuprint/src/test/java/org/janelia/flyem/neuprint/model/SkelNodeTest.java"}, "test_case": {"identifier": "testAddChild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddChild() {\n\n        List<Integer> location1 = new ArrayList<>();\n        location1.add(0);\n        location1.add(1);\n        location1.add(5);\n        SkelNode skelNode1 = new SkelNode(10L, location1, 3.0D, 2, new SkelNode(), 1);\n        List<Integer> location2 = new ArrayList<>();\n        location2.add(0);\n        location2.add(1);\n        location2.add(5);\n        SkelNode skelNode2 = new SkelNode(13L, location2, 34.0D, 1, new SkelNode(), 2);\n        SkelNode skelNode3 = new SkelNode(13L, location2, 34.0D, 1, new SkelNode(), 3);\n\n        skelNode1.addChild(skelNode2);\n        skelNode1.addChild(skelNode3);\n        List<SkelNode> childList = new ArrayList<>();\n        childList.add(skelNode2);\n        childList.add(skelNode3);\n\n        Assert.assertEquals(childList, skelNode1.getChildren());\n        Assert.assertEquals(2, skelNode1.getChildren().size());\n        Assert.assertEquals(0, skelNode2.getChildren().size());\n\n    }", "signature": "void testAddChild()", "full_signature": "@Test public void testAddChild()", "class_method_signature": "SkelNodeTest.testAddChild()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "addChild", "addChild", "add", "add", "assertEquals", "getChildren", "assertEquals", "size", "getChildren", "assertEquals", "size", "getChildren"]}, "focal_class": {"identifier": "SkelNode", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Integer> location;", "modifier": "private", "type": "List<Integer>", "declarator": "location", "var_name": "location"}, {"original_string": "private Double radius;", "modifier": "private", "type": "Double", "declarator": "radius", "var_name": "radius"}, {"original_string": "private Long associatedBodyId;", "modifier": "private", "type": "Long", "declarator": "associatedBodyId", "var_name": "associatedBodyId"}, {"original_string": "private int type;", "modifier": "private", "type": "int", "declarator": "type", "var_name": "type"}, {"original_string": "private transient SkelNode parent;", "modifier": "private transient", "type": "SkelNode", "declarator": "parent", "var_name": "parent"}, {"original_string": "private transient List<SkelNode> children = new ArrayList<>();", "modifier": "private transient", "type": "List<SkelNode>", "declarator": "children = new ArrayList<>()", "var_name": "children"}, {"original_string": "private int rowNumber;", "modifier": "private", "type": "int", "declarator": "rowNumber", "var_name": "rowNumber"}], "methods": [{"identifier": "SkelNode", "parameters": "(Long associatedBodyId, List<Integer> location, Double radius, int type, SkelNode parent, int rowNumber)", "modifiers": "public", "return": "", "signature": " SkelNode(Long associatedBodyId, List<Integer> location, Double radius, int type, SkelNode parent, int rowNumber)", "full_signature": "public  SkelNode(Long associatedBodyId, List<Integer> location, Double radius, int type, SkelNode parent, int rowNumber)", "class_method_signature": "SkelNode.SkelNode(Long associatedBodyId, List<Integer> location, Double radius, int type, SkelNode parent, int rowNumber)", "testcase": false, "constructor": true}, {"identifier": "SkelNode", "parameters": "(Long associatedBodyId, List<Integer> location, Double radius, int rowNumber)", "modifiers": "public", "return": "", "signature": " SkelNode(Long associatedBodyId, List<Integer> location, Double radius, int rowNumber)", "full_signature": "public  SkelNode(Long associatedBodyId, List<Integer> location, Double radius, int rowNumber)", "class_method_signature": "SkelNode.SkelNode(Long associatedBodyId, List<Integer> location, Double radius, int rowNumber)", "testcase": false, "constructor": true}, {"identifier": "SkelNode", "parameters": "()", "modifiers": "public", "return": "", "signature": " SkelNode()", "full_signature": "public  SkelNode()", "class_method_signature": "SkelNode.SkelNode()", "testcase": false, "constructor": true}, {"identifier": "getSkelNodeListJson", "parameters": "(List<SkelNode> skelNodeList)", "modifiers": "public static", "return": "String", "signature": "String getSkelNodeListJson(List<SkelNode> skelNodeList)", "full_signature": "public static String getSkelNodeListJson(List<SkelNode> skelNodeList)", "class_method_signature": "SkelNode.getSkelNodeListJson(List<SkelNode> skelNodeList)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SkelNode.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "SkelNode.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SkelNode.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "public", "return": "List<SkelNode>", "signature": "List<SkelNode> getChildren()", "full_signature": "public List<SkelNode> getChildren()", "class_method_signature": "SkelNode.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "SkelNode", "signature": "SkelNode getParent()", "full_signature": "public SkelNode getParent()", "class_method_signature": "SkelNode.getParent()", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "()", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> getLocation()", "full_signature": "public List<Integer> getLocation()", "class_method_signature": "SkelNode.getLocation()", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getX()", "full_signature": "public Integer getX()", "class_method_signature": "SkelNode.getX()", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getY()", "full_signature": "public Integer getY()", "class_method_signature": "SkelNode.getY()", "testcase": false, "constructor": false}, {"identifier": "getZ", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getZ()", "full_signature": "public Integer getZ()", "class_method_signature": "SkelNode.getZ()", "testcase": false, "constructor": false}, {"identifier": "getRowNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRowNumber()", "full_signature": "public int getRowNumber()", "class_method_signature": "SkelNode.getRowNumber()", "testcase": false, "constructor": false}, {"identifier": "locationToStringKey", "parameters": "(List<Integer> location)", "modifiers": "private", "return": "String", "signature": "String locationToStringKey(List<Integer> location)", "full_signature": "private String locationToStringKey(List<Integer> location)", "class_method_signature": "SkelNode.locationToStringKey(List<Integer> location)", "testcase": false, "constructor": false}, {"identifier": "getLocationString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLocationString()", "full_signature": "public String getLocationString()", "class_method_signature": "SkelNode.getLocationString()", "testcase": false, "constructor": false}, {"identifier": "getLocationAsPoint", "parameters": "()", "modifiers": "public", "return": "Point", "signature": "Point getLocationAsPoint()", "full_signature": "public Point getLocationAsPoint()", "class_method_signature": "SkelNode.getLocationAsPoint()", "testcase": false, "constructor": false}, {"identifier": "getSkelNodeId", "parameters": "(String dataset)", "modifiers": "public", "return": "String", "signature": "String getSkelNodeId(String dataset)", "full_signature": "public String getSkelNodeId(String dataset)", "class_method_signature": "SkelNode.getSkelNodeId(String dataset)", "testcase": false, "constructor": false}, {"identifier": "getRadius", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getRadius()", "full_signature": "public Double getRadius()", "class_method_signature": "SkelNode.getRadius()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getType()", "full_signature": "public int getType()", "class_method_signature": "SkelNode.getType()", "testcase": false, "constructor": false}, {"identifier": "getAssociatedBodyId", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getAssociatedBodyId()", "full_signature": "public Long getAssociatedBodyId()", "class_method_signature": "SkelNode.getAssociatedBodyId()", "testcase": false, "constructor": false}, {"identifier": "addChild", "parameters": "(SkelNode child)", "modifiers": "", "return": "void", "signature": "void addChild(SkelNode child)", "full_signature": " void addChild(SkelNode child)", "class_method_signature": "SkelNode.addChild(SkelNode child)", "testcase": false, "constructor": false}], "file": "neuprint/src/main/java/org/janelia/flyem/neuprint/model/SkelNode.java"}, "focal_method": {"identifier": "addChild", "parameters": "(SkelNode child)", "modifiers": "", "return": "void", "body": "void addChild(SkelNode child) {\n        this.children.add(child);\n    }", "signature": "void addChild(SkelNode child)", "full_signature": " void addChild(SkelNode child)", "class_method_signature": "SkelNode.addChild(SkelNode child)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 129463208, "url": "https://github.com/connectome-neuprint/neuPrint", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 16, "size": 203145, "license": "licensed"}}