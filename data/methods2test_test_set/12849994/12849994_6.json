{"test_class": {"identifier": "OffHeapCacheBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "imcache/src/test/java/com/cetsoft/imcache/cache/builder/OffHeapCacheBuilderTest.java"}, "test_case": {"identifier": "build", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void build() {\n    OffHeapByteBufferStore bufferStore = new OffHeapByteBufferStore(8388608, 10);\n    Cache<Object, Object> cache = CacheBuilder.offHeapCache()\n        .storage(bufferStore)\n        .cacheLoader(BaseCacheBuilder.DEFAULT_CACHE_LOADER)\n        .evictionListener(BaseCacheBuilder.DEFAULT_EVICTION_LISTENER)\n        .indexHandler(DummyIndexHandler.getInstance())\n        .addIndex(\"age\", IndexType.RANGE_INDEX)\n        .serializer(BaseCacheBuilder.DEFAULT_SERIALIZER)\n        .bufferCleanerPeriod(100).bufferCleanerThreshold(0.6f).concurrencyLevel(10)\n        .evictionPeriod(100).build();\n    assertTrue(cache instanceof SearchableCache);\n    assertTrue(cache instanceof OffHeapCache);\n  }", "signature": "void build()", "full_signature": "@Test public void build()", "class_method_signature": "OffHeapCacheBuilderTest.build()", "testcase": true, "constructor": false, "invocations": ["build", "evictionPeriod", "concurrencyLevel", "bufferCleanerThreshold", "bufferCleanerPeriod", "serializer", "addIndex", "indexHandler", "evictionListener", "cacheLoader", "storage", "offHeapCache", "getInstance", "assertTrue", "assertTrue"]}, "focal_class": {"identifier": "OffHeapCacheBuilder", "superclass": "extends BaseCacheBuilder", "interfaces": "", "fields": [{"original_string": "private final AtomicInteger cacheNumber = new AtomicInteger();", "modifier": "private final", "type": "AtomicInteger", "declarator": "cacheNumber = new AtomicInteger()", "var_name": "cacheNumber"}, {"original_string": "private int concurrencyLevel;", "modifier": "private", "type": "int", "declarator": "concurrencyLevel", "var_name": "concurrencyLevel"}, {"original_string": "private long evictionPeriod;", "modifier": "private", "type": "long", "declarator": "evictionPeriod", "var_name": "evictionPeriod"}, {"original_string": "private long bufferCleanerPeriod;", "modifier": "private", "type": "long", "declarator": "bufferCleanerPeriod", "var_name": "bufferCleanerPeriod"}, {"original_string": "private float bufferCleanerThreshold;", "modifier": "private", "type": "float", "declarator": "bufferCleanerThreshold", "var_name": "bufferCleanerThreshold"}, {"original_string": "private OffHeapByteBufferStore byteBufferStore;", "modifier": "private", "type": "OffHeapByteBufferStore", "declarator": "byteBufferStore", "var_name": "byteBufferStore"}], "methods": [{"identifier": "OffHeapCacheBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " OffHeapCacheBuilder()", "full_signature": "public  OffHeapCacheBuilder()", "class_method_signature": "OffHeapCacheBuilder.OffHeapCacheBuilder()", "testcase": false, "constructor": true}, {"identifier": "storage", "parameters": "(final OffHeapByteBufferStore bufferStore)", "modifiers": "public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder storage(final OffHeapByteBufferStore bufferStore)", "full_signature": "public OffHeapCacheBuilder storage(final OffHeapByteBufferStore bufferStore)", "class_method_signature": "OffHeapCacheBuilder.storage(final OffHeapByteBufferStore bufferStore)", "testcase": false, "constructor": false}, {"identifier": "serializer", "parameters": "(final Serializer<V> serializer)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder serializer(final Serializer<V> serializer)", "full_signature": "@SuppressWarnings(\"unchecked\") public OffHeapCacheBuilder serializer(final Serializer<V> serializer)", "class_method_signature": "OffHeapCacheBuilder.serializer(final Serializer<V> serializer)", "testcase": false, "constructor": false}, {"identifier": "cacheLoader", "parameters": "(final CacheLoader<K, V> cacheLoader)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder cacheLoader(final CacheLoader<K, V> cacheLoader)", "full_signature": "@SuppressWarnings(\"unchecked\") public OffHeapCacheBuilder cacheLoader(final CacheLoader<K, V> cacheLoader)", "class_method_signature": "OffHeapCacheBuilder.cacheLoader(final CacheLoader<K, V> cacheLoader)", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "(final String name)", "modifiers": "public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder name(final String name)", "full_signature": "public OffHeapCacheBuilder name(final String name)", "class_method_signature": "OffHeapCacheBuilder.name(final String name)", "testcase": false, "constructor": false}, {"identifier": "evictionListener", "parameters": "(\n      final EvictionListener<K, V> evictionListener)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder evictionListener(\n      final EvictionListener<K, V> evictionListener)", "full_signature": "@SuppressWarnings(\"unchecked\") public OffHeapCacheBuilder evictionListener(\n      final EvictionListener<K, V> evictionListener)", "class_method_signature": "OffHeapCacheBuilder.evictionListener(\n      final EvictionListener<K, V> evictionListener)", "testcase": false, "constructor": false}, {"identifier": "indexHandler", "parameters": "(final IndexHandler<K, V> indexHandler)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder indexHandler(final IndexHandler<K, V> indexHandler)", "full_signature": "@SuppressWarnings(\"unchecked\") public OffHeapCacheBuilder indexHandler(final IndexHandler<K, V> indexHandler)", "class_method_signature": "OffHeapCacheBuilder.indexHandler(final IndexHandler<K, V> indexHandler)", "testcase": false, "constructor": false}, {"identifier": "concurrencyLevel", "parameters": "(final int concurrencyLevel)", "modifiers": "public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder concurrencyLevel(final int concurrencyLevel)", "full_signature": "public OffHeapCacheBuilder concurrencyLevel(final int concurrencyLevel)", "class_method_signature": "OffHeapCacheBuilder.concurrencyLevel(final int concurrencyLevel)", "testcase": false, "constructor": false}, {"identifier": "evictionPeriod", "parameters": "(final long evictionPeriod)", "modifiers": "public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder evictionPeriod(final long evictionPeriod)", "full_signature": "public OffHeapCacheBuilder evictionPeriod(final long evictionPeriod)", "class_method_signature": "OffHeapCacheBuilder.evictionPeriod(final long evictionPeriod)", "testcase": false, "constructor": false}, {"identifier": "bufferCleanerPeriod", "parameters": "(final long bufferCleanerPeriod)", "modifiers": "public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder bufferCleanerPeriod(final long bufferCleanerPeriod)", "full_signature": "public OffHeapCacheBuilder bufferCleanerPeriod(final long bufferCleanerPeriod)", "class_method_signature": "OffHeapCacheBuilder.bufferCleanerPeriod(final long bufferCleanerPeriod)", "testcase": false, "constructor": false}, {"identifier": "bufferCleanerThreshold", "parameters": "(float bufferCleanerThreshold)", "modifiers": "public", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder bufferCleanerThreshold(float bufferCleanerThreshold)", "full_signature": "public OffHeapCacheBuilder bufferCleanerThreshold(float bufferCleanerThreshold)", "class_method_signature": "OffHeapCacheBuilder.bufferCleanerThreshold(float bufferCleanerThreshold)", "testcase": false, "constructor": false}, {"identifier": "addIndex", "parameters": "(final String attributeName,\n      final IndexType indexType)", "modifiers": "public synchronized", "return": "OffHeapCacheBuilder", "signature": "OffHeapCacheBuilder addIndex(final String attributeName,\n      final IndexType indexType)", "full_signature": "public synchronized OffHeapCacheBuilder addIndex(final String attributeName,\n      final IndexType indexType)", "class_method_signature": "OffHeapCacheBuilder.addIndex(final String attributeName,\n      final IndexType indexType)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "OffHeapCache<K, V>", "signature": "OffHeapCache<K, V> build()", "full_signature": "@SuppressWarnings(\"unchecked\") public OffHeapCache<K, V> build()", "class_method_signature": "OffHeapCacheBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(final String name)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "OffHeapCache<K, V>", "signature": "OffHeapCache<K, V> build(final String name)", "full_signature": "@SuppressWarnings(\"unchecked\") public OffHeapCache<K, V> build(final String name)", "class_method_signature": "OffHeapCacheBuilder.build(final String name)", "testcase": false, "constructor": false}], "file": "imcache/src/main/java/com/cetsoft/imcache/cache/builder/OffHeapCacheBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "OffHeapCache<K, V>", "body": "@SuppressWarnings(\"unchecked\")\n  public <K, V> OffHeapCache<K, V> build() {\n    if (this.byteBufferStore == null) {\n      throw new NecessaryArgumentException(\"ByteBufferStore must be set!\");\n    }\n    return new OffHeapCache<>(name, (CacheLoader<K, V>) cacheLoader,\n        (EvictionListener<K, V>) evictionListener,\n        (IndexHandler<K, V>) indexHandler, byteBufferStore, (Serializer<V>) serializer,\n        bufferCleanerPeriod,\n        bufferCleanerThreshold, concurrencyLevel, evictionPeriod);\n  }", "signature": "OffHeapCache<K, V> build()", "full_signature": "@SuppressWarnings(\"unchecked\") public OffHeapCache<K, V> build()", "class_method_signature": "OffHeapCacheBuilder.build()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}