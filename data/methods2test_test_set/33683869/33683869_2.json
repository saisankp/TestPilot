{"test_class": {"identifier": "OpeningHoursIntervalTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/berlin_vegan/bvapp/data/OpeningHoursIntervalTest.java"}, "test_case": {"identifier": "testNumberOfDays", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNumberOfDays() throws Exception {\n        OpeningHoursInterval interval = new OpeningHoursInterval(5, 6, \"9 - 10\");// saturday - sunday\n        assertEquals(2,interval.getNumberOfDays());\n\n        interval = new OpeningHoursInterval(0, 6, \"9 - 10\");// monday - sunday\n        assertEquals(7,interval.getNumberOfDays());\n\n        interval = new OpeningHoursInterval(0, \"9 - 10\");// monday\n        assertEquals(1,interval.getNumberOfDays());\n    }", "signature": "void testNumberOfDays()", "full_signature": "@Test public void testNumberOfDays()", "class_method_signature": "OpeningHoursIntervalTest.testNumberOfDays()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getNumberOfDays", "assertEquals", "getNumberOfDays", "assertEquals", "getNumberOfDays"]}, "focal_class": {"identifier": "OpeningHoursInterval", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CLOSED = \"\";", "modifier": "public static final", "type": "String", "declarator": "CLOSED = \"\"", "var_name": "CLOSED"}, {"original_string": "private static final int sNoEndDay = -1;", "modifier": "private static final", "type": "int", "declarator": "sNoEndDay = -1", "var_name": "sNoEndDay"}, {"original_string": "private int mStartDay = 0;", "modifier": "private", "type": "int", "declarator": "mStartDay = 0", "var_name": "mStartDay"}, {"original_string": "private int mEndDay = sNoEndDay;", "modifier": "private", "type": "int", "declarator": "mEndDay = sNoEndDay", "var_name": "mEndDay"}, {"original_string": "private String mOpeningHoursTimes = CLOSED;", "modifier": "private", "type": "String", "declarator": "mOpeningHoursTimes = CLOSED", "var_name": "mOpeningHoursTimes"}], "methods": [{"identifier": "OpeningHoursInterval", "parameters": "(int startDay, int endDay, String openingHours)", "modifiers": "public", "return": "", "signature": " OpeningHoursInterval(int startDay, int endDay, String openingHours)", "full_signature": "public  OpeningHoursInterval(int startDay, int endDay, String openingHours)", "class_method_signature": "OpeningHoursInterval.OpeningHoursInterval(int startDay, int endDay, String openingHours)", "testcase": false, "constructor": true}, {"identifier": "OpeningHoursInterval", "parameters": "(int startDay, String openingHours)", "modifiers": "public", "return": "", "signature": " OpeningHoursInterval(int startDay, String openingHours)", "full_signature": "public  OpeningHoursInterval(int startDay, String openingHours)", "class_method_signature": "OpeningHoursInterval.OpeningHoursInterval(int startDay, String openingHours)", "testcase": false, "constructor": true}, {"identifier": "getStartDay", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getStartDay()", "full_signature": "public int getStartDay()", "class_method_signature": "OpeningHoursInterval.getStartDay()", "testcase": false, "constructor": false}, {"identifier": "setStartDay", "parameters": "(int startDay)", "modifiers": "public", "return": "void", "signature": "void setStartDay(int startDay)", "full_signature": "public void setStartDay(int startDay)", "class_method_signature": "OpeningHoursInterval.setStartDay(int startDay)", "testcase": false, "constructor": false}, {"identifier": "getEndDay", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getEndDay()", "full_signature": "public int getEndDay()", "class_method_signature": "OpeningHoursInterval.getEndDay()", "testcase": false, "constructor": false}, {"identifier": "setEndDay", "parameters": "(int endDay)", "modifiers": "public", "return": "void", "signature": "void setEndDay(int endDay)", "full_signature": "public void setEndDay(int endDay)", "class_method_signature": "OpeningHoursInterval.setEndDay(int endDay)", "testcase": false, "constructor": false}, {"identifier": "getOpeningHours", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOpeningHours()", "full_signature": "public String getOpeningHours()", "class_method_signature": "OpeningHoursInterval.getOpeningHours()", "testcase": false, "constructor": false}, {"identifier": "setOpeningHours", "parameters": "(String openingHours)", "modifiers": "public", "return": "void", "signature": "void setOpeningHours(String openingHours)", "full_signature": "public void setOpeningHours(String openingHours)", "class_method_signature": "OpeningHoursInterval.setOpeningHours(String openingHours)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfDays", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfDays()", "full_signature": "public int getNumberOfDays()", "class_method_signature": "OpeningHoursInterval.getNumberOfDays()", "testcase": false, "constructor": false}, {"identifier": "isDateInInterval", "parameters": "(Date date)", "modifiers": "public", "return": "boolean", "signature": "boolean isDateInInterval(Date date)", "full_signature": "public boolean isDateInInterval(Date date)", "class_method_signature": "OpeningHoursInterval.isDateInInterval(Date date)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/berlin_vegan/bvapp/data/OpeningHoursInterval.java"}, "focal_method": {"identifier": "getNumberOfDays", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getNumberOfDays() {\n        if (mEndDay == sNoEndDay) {\n            return 1;\n        }\n        return (mEndDay - mStartDay) + 1;\n    }", "signature": "int getNumberOfDays()", "full_signature": "public int getNumberOfDays()", "class_method_signature": "OpeningHoursInterval.getNumberOfDays()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 33683869, "url": "https://github.com/Berlin-Vegan/berlin-vegan-guide", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 13, "size": 885, "license": "licensed"}}