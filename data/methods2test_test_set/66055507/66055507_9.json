{"test_class": {"identifier": "InstanceTest", "superclass": "", "interfaces": "", "fields": [], "file": "examples/basic/src/test/java/net/zerobuilder/examples/generics/InstanceTest.java"}, "test_case": {"identifier": "entry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void entry() throws Exception {\n    Instance<String> instance = new Instance<>(\"\");\n    Map.Entry<Integer, String> entry = InstanceBuilders.entryBuilder(instance)\n        .key(1)\n        .value(\"y\");\n    assertThat(entry.getKey(), is(1));\n    assertThat(entry.getValue(), is(\"y\"));\n  }", "signature": "void entry()", "full_signature": "@Test public void entry()", "class_method_signature": "InstanceTest.entry()", "testcase": true, "constructor": false, "invocations": ["value", "key", "entryBuilder", "assertThat", "getKey", "is", "assertThat", "getValue", "is"]}, "focal_class": {"identifier": "Instance", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final S prefix;", "modifier": "private final", "type": "S", "declarator": "prefix", "var_name": "prefix"}], "methods": [{"identifier": "Instance", "parameters": "(S prefix)", "modifiers": "", "return": "", "signature": " Instance(S prefix)", "full_signature": "  Instance(S prefix)", "class_method_signature": "Instance.Instance(S prefix)", "testcase": false, "constructor": true}, {"identifier": "entry", "parameters": "(K key, V value)", "modifiers": "@Builder @GoalName(\"entry\")", "return": "Map.Entry<K, V>", "signature": "Map.Entry<K, V> entry(K key, V value)", "full_signature": "@Builder @GoalName(\"entry\") Map.Entry<K, V> entry(K key, V value)", "class_method_signature": "Instance.entry(K key, V value)", "testcase": false, "constructor": false}, {"identifier": "ventry", "parameters": "(V value)", "modifiers": "@Builder @GoalName(\"ventry\")", "return": "Map.Entry<V, V>", "signature": "Map.Entry<V, V> ventry(V value)", "full_signature": "@Builder @GoalName(\"ventry\") Map.Entry<V, V> ventry(V value)", "class_method_signature": "Instance.ventry(V value)", "testcase": false, "constructor": false}], "file": "examples/basic/src/main/java/net/zerobuilder/examples/generics/Instance.java"}, "focal_method": {"identifier": "entry", "parameters": "(K key, V value)", "modifiers": "@Builder @GoalName(\"entry\")", "return": "Map.Entry<K, V>", "body": "@Builder\n  @GoalName(\"entry\")\n  <K, V extends S> Map.Entry<K, V> entry(K key, V value) {\n    return new AbstractMap.SimpleEntry(key, String.valueOf(prefix) + value);\n  }", "signature": "Map.Entry<K, V> entry(K key, V value)", "full_signature": "@Builder @GoalName(\"entry\") Map.Entry<K, V> entry(K key, V value)", "class_method_signature": "Instance.entry(K key, V value)", "testcase": false, "constructor": false, "invocations": ["valueOf"]}, "repository": {"repo_id": 66055507, "url": "https://github.com/h908714124/zerobuilder", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 19, "size": 1962, "license": "licensed"}}