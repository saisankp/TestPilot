{"test_class": {"identifier": "JsDatastoreParserObjectTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JsDatastoreParserObject loggedIn;", "modifier": "private", "type": "JsDatastoreParserObject", "declarator": "loggedIn", "var_name": "loggedIn"}, {"original_string": "private JsDatastoreParserObject loggedOut;", "modifier": "private", "type": "JsDatastoreParserObject", "declarator": "loggedOut", "var_name": "loggedOut"}], "file": "app/src/test/java/derpibooru/derpy/server/parsers/objects/JsDatastoreParserObjectTest.java"}, "test_case": {"identifier": "testInteractions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInteractions() throws JSONException {\n        EnumSet expected = EnumSet.of(DerpibooruImageInteraction.InteractionType.Fave,\n                                      DerpibooruImageInteraction.InteractionType.Upvote);\n        ImageInteractionsParserObject interactionsHelper = new ImageInteractionsParserObject(\n                loggedIn.getInteractions().toString());\n        assertThat(interactionsHelper.getImageInteractionsForImage(10005), is(expected));\n        assertNotNull(loggedOut.getInteractions());\n    }", "signature": "void testInteractions()", "full_signature": "@Test public void testInteractions()", "class_method_signature": "JsDatastoreParserObjectTest.testInteractions()", "testcase": true, "constructor": false, "invocations": ["of", "toString", "getInteractions", "assertThat", "getImageInteractionsForImage", "is", "assertNotNull", "getInteractions"]}, "focal_class": {"identifier": "JsDatastoreParserObject", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Element mJsDatastore;", "modifier": "private", "type": "Element", "declarator": "mJsDatastore", "var_name": "mJsDatastore"}], "methods": [{"identifier": "JsDatastoreParserObject", "parameters": "(Document doc)", "modifiers": "public", "return": "", "signature": " JsDatastoreParserObject(Document doc)", "full_signature": "public  JsDatastoreParserObject(Document doc)", "class_method_signature": "JsDatastoreParserObject.JsDatastoreParserObject(Document doc)", "testcase": false, "constructor": true}, {"identifier": "getUsername", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUsername()", "full_signature": "public String getUsername()", "class_method_signature": "JsDatastoreParserObject.getUsername()", "testcase": false, "constructor": false}, {"identifier": "getFilterId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFilterId()", "full_signature": "public int getFilterId()", "class_method_signature": "JsDatastoreParserObject.getFilterId()", "testcase": false, "constructor": false}, {"identifier": "getHiddenTagIds", "parameters": "()", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> getHiddenTagIds()", "full_signature": "public List<Integer> getHiddenTagIds()", "class_method_signature": "JsDatastoreParserObject.getHiddenTagIds()", "testcase": false, "constructor": false}, {"identifier": "getSpoileredTagIds", "parameters": "()", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> getSpoileredTagIds()", "full_signature": "public List<Integer> getSpoileredTagIds()", "class_method_signature": "JsDatastoreParserObject.getSpoileredTagIds()", "testcase": false, "constructor": false}, {"identifier": "getIntList", "parameters": "(String jsonString)", "modifiers": "private", "return": "List<Integer>", "signature": "List<Integer> getIntList(String jsonString)", "full_signature": "private List<Integer> getIntList(String jsonString)", "class_method_signature": "JsDatastoreParserObject.getIntList(String jsonString)", "testcase": false, "constructor": false}, {"identifier": "getInteractions", "parameters": "()", "modifiers": "@NonNull public", "return": "JSONArray", "signature": "JSONArray getInteractions()", "full_signature": "@NonNull public JSONArray getInteractions()", "class_method_signature": "JsDatastoreParserObject.getInteractions()", "testcase": false, "constructor": false}], "file": "app/src/main/java/derpibooru/derpy/server/parsers/objects/JsDatastoreParserObject.java"}, "focal_method": {"identifier": "getInteractions", "parameters": "()", "modifiers": "@NonNull public", "return": "JSONArray", "body": "@NonNull\n    public JSONArray getInteractions() throws JSONException {\n        String interactionsArray = mJsDatastore.attr(\"data-interactions\");\n        if (!interactionsArray.equals(\"[]\")) {\n            return new JSONArray(interactionsArray);\n        }\n        return new JSONArray();\n    }", "signature": "JSONArray getInteractions()", "full_signature": "@NonNull public JSONArray getInteractions()", "class_method_signature": "JsDatastoreParserObject.getInteractions()", "testcase": false, "constructor": false, "invocations": ["attr", "equals"]}, "repository": {"repo_id": 51344857, "url": "https://github.com/deliciousblackink/Derpibooru", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 13, "size": 2552, "license": "licensed"}}