{"test_class": {"identifier": "EverrestInitializedListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ServletContext servletContext;", "modifier": "private", "type": "ServletContext", "declarator": "servletContext", "var_name": "servletContext"}], "file": "everrest-core/src/test/java/org/everrest/core/servlet/EverrestInitializedListenerTest.java"}, "test_case": {"identifier": "startsEverrestProcessorWhenServletContextInitialized", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void startsEverrestProcessorWhenServletContextInitialized() throws Exception {\n        EverrestProcessor everrestProcessor = mock(EverrestProcessor.class);\n        EverrestServletContextInitializer initializer = mock(EverrestServletContextInitializer.class);\n        when(initializer.createEverrestProcessor()).thenReturn(everrestProcessor);\n\n        EverrestInitializedListener everrestInitializedListener = new EverrestInitializedListener();\n        everrestInitializedListener.initializeEverrestComponents(initializer, servletContext);\n\n        verify(everrestProcessor).start();\n    }", "signature": "void startsEverrestProcessorWhenServletContextInitialized()", "full_signature": "@Test public void startsEverrestProcessorWhenServletContextInitialized()", "class_method_signature": "EverrestInitializedListenerTest.startsEverrestProcessorWhenServletContextInitialized()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "createEverrestProcessor", "initializeEverrestComponents", "start", "verify"]}, "focal_class": {"identifier": "EverrestInitializedListener", "superclass": "", "interfaces": "implements ServletContextListener", "fields": [], "methods": [{"identifier": "contextDestroyed", "parameters": "(ServletContextEvent sce)", "modifiers": "@Override public", "return": "void", "signature": "void contextDestroyed(ServletContextEvent sce)", "full_signature": "@Override public void contextDestroyed(ServletContextEvent sce)", "class_method_signature": "EverrestInitializedListener.contextDestroyed(ServletContextEvent sce)", "testcase": false, "constructor": false}, {"identifier": "makeFileCollectorDestroyer", "parameters": "()", "modifiers": "protected", "return": "FileCollectorDestroyer", "signature": "FileCollectorDestroyer makeFileCollectorDestroyer()", "full_signature": "protected FileCollectorDestroyer makeFileCollectorDestroyer()", "class_method_signature": "EverrestInitializedListener.makeFileCollectorDestroyer()", "testcase": false, "constructor": false}, {"identifier": "contextInitialized", "parameters": "(ServletContextEvent sce)", "modifiers": "@Override public", "return": "void", "signature": "void contextInitialized(ServletContextEvent sce)", "full_signature": "@Override public void contextInitialized(ServletContextEvent sce)", "class_method_signature": "EverrestInitializedListener.contextInitialized(ServletContextEvent sce)", "testcase": false, "constructor": false}, {"identifier": "initializeEverrestComponents", "parameters": "(EverrestServletContextInitializer initializer, ServletContext servletContext)", "modifiers": "", "return": "void", "signature": "void initializeEverrestComponents(EverrestServletContextInitializer initializer, ServletContext servletContext)", "full_signature": " void initializeEverrestComponents(EverrestServletContextInitializer initializer, ServletContext servletContext)", "class_method_signature": "EverrestInitializedListener.initializeEverrestComponents(EverrestServletContextInitializer initializer, ServletContext servletContext)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/servlet/EverrestInitializedListener.java"}, "focal_method": {"identifier": "initializeEverrestComponents", "parameters": "(EverrestServletContextInitializer initializer, ServletContext servletContext)", "modifiers": "", "return": "void", "body": "void initializeEverrestComponents(EverrestServletContextInitializer initializer, ServletContext servletContext) {\n        EverrestProcessor processor = initializer.createEverrestProcessor();\n        processor.start();\n\n        servletContext.setAttribute(EverrestProcessor.class.getName(), processor);\n        servletContext.setAttribute(EverrestConfiguration.class.getName(), initializer.createConfiguration());\n        servletContext.setAttribute(Application.class.getName(), processor.getApplication());\n        servletContext.setAttribute(DependencySupplier.class.getName(), processor.getDependencySupplier());\n        servletContext.setAttribute(ResourceBinder.class.getName(), processor.getResources());\n        servletContext.setAttribute(ApplicationProviderBinder.class.getName(), processor.getProviders());\n    }", "signature": "void initializeEverrestComponents(EverrestServletContextInitializer initializer, ServletContext servletContext)", "full_signature": " void initializeEverrestComponents(EverrestServletContextInitializer initializer, ServletContext servletContext)", "class_method_signature": "EverrestInitializedListener.initializeEverrestComponents(EverrestServletContextInitializer initializer, ServletContext servletContext)", "testcase": false, "constructor": false, "invocations": ["createEverrestProcessor", "start", "setAttribute", "getName", "setAttribute", "getName", "createConfiguration", "setAttribute", "getName", "getApplication", "setAttribute", "getName", "getDependencySupplier", "setAttribute", "getName", "getResources", "setAttribute", "getName", "getProviders"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}