{"test_class": {"identifier": "EnvironmentsTest", "superclass": "", "interfaces": "", "fields": [], "file": "org.eclipse.winery.common/src/test/java/org/eclipse/winery/common/configuration/EnvironmentsTest.java"}, "test_case": {"identifier": "testGetUiConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetUiConfig() {\n        UiConfigurationObject testObject = Environments.getInstance().getUiConfig();\n        assertTrue(testObject.getFeatures().get(\"foo\"));\n        assertFalse(testObject.getFeatures().get(\"bar\"));\n        assertEquals(\"http://quaz:8080\", testObject.getEndpoints().get(\"quaz\"));\n    }", "signature": "void testGetUiConfig()", "full_signature": "@Test public void testGetUiConfig()", "class_method_signature": "EnvironmentsTest.testGetUiConfig()", "testcase": true, "constructor": false, "invocations": ["getUiConfig", "getInstance", "assertTrue", "get", "getFeatures", "assertFalse", "get", "getFeatures", "assertEquals", "get", "getEndpoints"]}, "focal_class": {"identifier": "Environments", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Environments.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Environments.class)", "var_name": "LOGGER"}, {"original_string": "private static RepositoryConfigurationObject repositoryConfigurationObject;", "modifier": "private static", "type": "RepositoryConfigurationObject", "declarator": "repositoryConfigurationObject", "var_name": "repositoryConfigurationObject"}, {"original_string": "private static GitConfigurationObject gitConfigurationObject;", "modifier": "private static", "type": "GitConfigurationObject", "declarator": "gitConfigurationObject", "var_name": "gitConfigurationObject"}, {"original_string": "private static UiConfigurationObject uiConfigurationObject;", "modifier": "private static", "type": "UiConfigurationObject", "declarator": "uiConfigurationObject", "var_name": "uiConfigurationObject"}, {"original_string": "private static AccountabilityConfigurationObject accountabilityConfigurationObject;", "modifier": "private static", "type": "AccountabilityConfigurationObject", "declarator": "accountabilityConfigurationObject", "var_name": "accountabilityConfigurationObject"}, {"original_string": "private static Environments instance;", "modifier": "private static", "type": "Environments", "declarator": "instance", "var_name": "instance"}, {"original_string": "private static ArrayList<ConfigurationChangeListener> configurationChangeListeners = new ArrayList<>();", "modifier": "private static", "type": "ArrayList<ConfigurationChangeListener>", "declarator": "configurationChangeListeners = new ArrayList<>()", "var_name": "configurationChangeListeners"}], "methods": [{"identifier": "Environments", "parameters": "()", "modifiers": "private", "return": "", "signature": " Environments()", "full_signature": "private  Environments()", "class_method_signature": "Environments.Environments()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "Environments", "signature": "Environments getInstance()", "full_signature": "public static Environments getInstance()", "class_method_signature": "Environments.getInstance()", "testcase": false, "constructor": false}, {"identifier": "updateInstances", "parameters": "(YAMLConfiguration updatedConfiguration)", "modifiers": "static", "return": "void", "signature": "void updateInstances(YAMLConfiguration updatedConfiguration)", "full_signature": "static void updateInstances(YAMLConfiguration updatedConfiguration)", "class_method_signature": "Environments.updateInstances(YAMLConfiguration updatedConfiguration)", "testcase": false, "constructor": false}, {"identifier": "initializeConfigurationObjects", "parameters": "()", "modifiers": "static", "return": "void", "signature": "void initializeConfigurationObjects()", "full_signature": "static void initializeConfigurationObjects()", "class_method_signature": "Environments.initializeConfigurationObjects()", "testcase": false, "constructor": false}, {"identifier": "getUiConfig", "parameters": "()", "modifiers": "public", "return": "UiConfigurationObject", "signature": "UiConfigurationObject getUiConfig()", "full_signature": "public UiConfigurationObject getUiConfig()", "class_method_signature": "Environments.getUiConfig()", "testcase": false, "constructor": false}, {"identifier": "getGitConfig", "parameters": "()", "modifiers": "public", "return": "GitConfigurationObject", "signature": "GitConfigurationObject getGitConfig()", "full_signature": "public GitConfigurationObject getGitConfig()", "class_method_signature": "Environments.getGitConfig()", "testcase": false, "constructor": false}, {"identifier": "getRepositoryConfig", "parameters": "()", "modifiers": "public", "return": "RepositoryConfigurationObject", "signature": "RepositoryConfigurationObject getRepositoryConfig()", "full_signature": "public RepositoryConfigurationObject getRepositoryConfig()", "class_method_signature": "Environments.getRepositoryConfig()", "testcase": false, "constructor": false}, {"identifier": "getAccountabilityConfig", "parameters": "()", "modifiers": "public", "return": "AccountabilityConfigurationObject", "signature": "AccountabilityConfigurationObject getAccountabilityConfig()", "full_signature": "public AccountabilityConfigurationObject getAccountabilityConfig()", "class_method_signature": "Environments.getAccountabilityConfig()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "Environments.getVersion()", "testcase": false, "constructor": false}, {"identifier": "checkForUpdateAndUpdateInstances", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkForUpdateAndUpdateInstances()", "full_signature": "private void checkForUpdateAndUpdateInstances()", "class_method_signature": "Environments.checkForUpdateAndUpdateInstances()", "testcase": false, "constructor": false}, {"identifier": "addConfigurationChangeListener", "parameters": "(ConfigurationChangeListener newListener)", "modifiers": "public", "return": "void", "signature": "void addConfigurationChangeListener(ConfigurationChangeListener newListener)", "full_signature": "public void addConfigurationChangeListener(ConfigurationChangeListener newListener)", "class_method_signature": "Environments.addConfigurationChangeListener(ConfigurationChangeListener newListener)", "testcase": false, "constructor": false}, {"identifier": "removeConfigurationChangeListener", "parameters": "(ConfigurationChangeListener toRemoveListener)", "modifiers": "public", "return": "void", "signature": "void removeConfigurationChangeListener(ConfigurationChangeListener toRemoveListener)", "full_signature": "public void removeConfigurationChangeListener(ConfigurationChangeListener toRemoveListener)", "class_method_signature": "Environments.removeConfigurationChangeListener(ConfigurationChangeListener toRemoveListener)", "testcase": false, "constructor": false}, {"identifier": "afterUpdateNotify", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void afterUpdateNotify()", "full_signature": "private void afterUpdateNotify()", "class_method_signature": "Environments.afterUpdateNotify()", "testcase": false, "constructor": false}, {"identifier": "getFilebasedRepositoryConfiguration", "parameters": "()", "modifiers": "public", "return": "FileBasedRepositoryConfiguration", "signature": "FileBasedRepositoryConfiguration getFilebasedRepositoryConfiguration()", "full_signature": "public FileBasedRepositoryConfiguration getFilebasedRepositoryConfiguration()", "class_method_signature": "Environments.getFilebasedRepositoryConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getGitBasedRepositoryConfiguration", "parameters": "()", "modifiers": "public", "return": "Optional<GitBasedRepositoryConfiguration>", "signature": "Optional<GitBasedRepositoryConfiguration> getGitBasedRepositoryConfiguration()", "full_signature": "public Optional<GitBasedRepositoryConfiguration> getGitBasedRepositoryConfiguration()", "class_method_signature": "Environments.getGitBasedRepositoryConfiguration()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(final AbstractConfigurationObject configuration)", "modifiers": "public static", "return": "void", "signature": "void save(final AbstractConfigurationObject configuration)", "full_signature": "public static void save(final AbstractConfigurationObject configuration)", "class_method_signature": "Environments.save(final AbstractConfigurationObject configuration)", "testcase": false, "constructor": false}, {"identifier": "getVersionFromProperties", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getVersionFromProperties()", "full_signature": "private String getVersionFromProperties()", "class_method_signature": "Environments.getVersionFromProperties()", "testcase": false, "constructor": false}, {"identifier": "resetAccountabilityConfiguration", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void resetAccountabilityConfiguration()", "full_signature": "public static void resetAccountabilityConfiguration()", "class_method_signature": "Environments.resetAccountabilityConfiguration()", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.common/src/main/java/org/eclipse/winery/common/configuration/Environments.java"}, "focal_method": {"identifier": "getUiConfig", "parameters": "()", "modifiers": "public", "return": "UiConfigurationObject", "body": "public UiConfigurationObject getUiConfig() {\n        checkForUpdateAndUpdateInstances();\n        if (uiConfigurationObject == null) {\n            uiConfigurationObject = new UiConfigurationObject(Environment.getInstance().getConfiguration());\n        }\n        return uiConfigurationObject;\n    }", "signature": "UiConfigurationObject getUiConfig()", "full_signature": "public UiConfigurationObject getUiConfig()", "class_method_signature": "Environments.getUiConfig()", "testcase": false, "constructor": false, "invocations": ["checkForUpdateAndUpdateInstances", "getConfiguration", "getInstance"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}