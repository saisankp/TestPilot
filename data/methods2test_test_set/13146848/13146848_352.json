{"test_class": {"identifier": "OutlineUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-sambox/src/test/java/org/sejda/impl/sambox/component/OutlineUtilsTest.java"}, "test_case": {"identifier": "copyDictionaryFixesNullTitles", "parameters": "()", "modifiers": "@Test // title is required by the spec public", "return": "void", "body": "@Test\n    // title is required by the spec\n    public void copyDictionaryFixesNullTitles() {\n        PDOutlineItem from = new PDOutlineItem();\n        from.setTitle(null);\n        PDOutlineItem to = new PDOutlineItem();\n        assertNull(from.getTitle());\n        OutlineUtils.copyOutlineDictionary(from, to);\n        assertNotNull(to.getTitle());\n    }", "signature": "void copyDictionaryFixesNullTitles()", "full_signature": "@Test // title is required by the spec public void copyDictionaryFixesNullTitles()", "class_method_signature": "OutlineUtilsTest.copyDictionaryFixesNullTitles()", "testcase": true, "constructor": false, "invocations": ["setTitle", "assertNull", "getTitle", "copyOutlineDictionary", "assertNotNull", "getTitle"]}, "focal_class": {"identifier": "OutlineUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(OutlineUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(OutlineUtils.class)", "var_name": "LOG"}], "methods": [{"identifier": "OutlineUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " OutlineUtils()", "full_signature": "private  OutlineUtils()", "class_method_signature": "OutlineUtils.OutlineUtils()", "testcase": false, "constructor": true}, {"identifier": "getOutlineLevelsWithPageDestination", "parameters": "(PDDocument document)", "modifiers": "public static", "return": "Set<Integer>", "signature": "Set<Integer> getOutlineLevelsWithPageDestination(PDDocument document)", "full_signature": "public static Set<Integer> getOutlineLevelsWithPageDestination(PDDocument document)", "class_method_signature": "OutlineUtils.getOutlineLevelsWithPageDestination(PDDocument document)", "testcase": false, "constructor": false}, {"identifier": "toPageDestination", "parameters": "(PDOutlineItem current, PDDocumentCatalog catalog)", "modifiers": "public static", "return": "Optional<PDPageDestination>", "signature": "Optional<PDPageDestination> toPageDestination(PDOutlineItem current, PDDocumentCatalog catalog)", "full_signature": "public static Optional<PDPageDestination> toPageDestination(PDOutlineItem current, PDDocumentCatalog catalog)", "class_method_signature": "OutlineUtils.toPageDestination(PDOutlineItem current, PDDocumentCatalog catalog)", "testcase": false, "constructor": false}, {"identifier": "pageDestinationFor", "parameters": "(PDPage page)", "modifiers": "public static", "return": "PDPageXYZDestination", "signature": "PDPageXYZDestination pageDestinationFor(PDPage page)", "full_signature": "public static PDPageXYZDestination pageDestinationFor(PDPage page)", "class_method_signature": "OutlineUtils.pageDestinationFor(PDPage page)", "testcase": false, "constructor": false}, {"identifier": "clonePageDestination", "parameters": "(PDPageDestination dest, PDPage destPage)", "modifiers": "public static", "return": "PDPageDestination", "signature": "PDPageDestination clonePageDestination(PDPageDestination dest, PDPage destPage)", "full_signature": "public static PDPageDestination clonePageDestination(PDPageDestination dest, PDPage destPage)", "class_method_signature": "OutlineUtils.clonePageDestination(PDPageDestination dest, PDPage destPage)", "testcase": false, "constructor": false}, {"identifier": "resolvePageDestination", "parameters": "(PDPageDestination destination, PDDocument document)", "modifiers": "public static", "return": "PDPage", "signature": "PDPage resolvePageDestination(PDPageDestination destination, PDDocument document)", "full_signature": "public static PDPage resolvePageDestination(PDPageDestination destination, PDDocument document)", "class_method_signature": "OutlineUtils.resolvePageDestination(PDPageDestination destination, PDDocument document)", "testcase": false, "constructor": false}, {"identifier": "copyOutlineDictionary", "parameters": "(PDOutlineItem from, PDOutlineItem to)", "modifiers": "public static", "return": "void", "signature": "void copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "full_signature": "public static void copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "class_method_signature": "OutlineUtils.copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "testcase": false, "constructor": false}, {"identifier": "getFlatOutline", "parameters": "(PDDocument document)", "modifiers": "public static", "return": "List<OutlineItem>", "signature": "List<OutlineItem> getFlatOutline(PDDocument document)", "full_signature": "public static List<OutlineItem> getFlatOutline(PDDocument document)", "class_method_signature": "OutlineUtils.getFlatOutline(PDDocument document)", "testcase": false, "constructor": false}, {"identifier": "recurseFlatOutline", "parameters": "(PDDocument document, Iterable<PDOutlineItem> items, int level)", "modifiers": "private static", "return": "List<OutlineItem>", "signature": "List<OutlineItem> recurseFlatOutline(PDDocument document, Iterable<PDOutlineItem> items, int level)", "full_signature": "private static List<OutlineItem> recurseFlatOutline(PDDocument document, Iterable<PDOutlineItem> items, int level)", "class_method_signature": "OutlineUtils.recurseFlatOutline(PDDocument document, Iterable<PDOutlineItem> items, int level)", "testcase": false, "constructor": false}, {"identifier": "printOutline", "parameters": "(PDDocument document)", "modifiers": "public static", "return": "void", "signature": "void printOutline(PDDocument document)", "full_signature": "public static void printOutline(PDDocument document)", "class_method_signature": "OutlineUtils.printOutline(PDDocument document)", "testcase": false, "constructor": false}, {"identifier": "printNode", "parameters": "(PDOutlineItem node, int level, int childCounter)", "modifiers": "private static", "return": "void", "signature": "void printNode(PDOutlineItem node, int level, int childCounter)", "full_signature": "private static void printNode(PDOutlineItem node, int level, int childCounter)", "class_method_signature": "OutlineUtils.printNode(PDOutlineItem node, int level, int childCounter)", "testcase": false, "constructor": false}], "file": "sejda-sambox/src/main/java/org/sejda/impl/sambox/component/OutlineUtils.java"}, "focal_method": {"identifier": "copyOutlineDictionary", "parameters": "(PDOutlineItem from, PDOutlineItem to)", "modifiers": "public static", "return": "void", "body": "public static void copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to) {\n        to.setTitle(defaultString(from.getTitle()));\n        if (nonNull(from.getCOSObject().getDictionaryObject(COSName.C, COSArray.class))) {\n            to.setTextColor(from.getTextColor());\n        }\n        to.setBold(from.isBold());\n        to.setItalic(from.isItalic());\n        if (from.isNodeOpen()) {\n            to.openNode();\n        } else {\n            to.closeNode();\n        }\n    }", "signature": "void copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "full_signature": "public static void copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "class_method_signature": "OutlineUtils.copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "testcase": false, "constructor": false, "invocations": ["setTitle", "defaultString", "getTitle", "nonNull", "getDictionaryObject", "getCOSObject", "setTextColor", "getTextColor", "setBold", "isBold", "setItalic", "isItalic", "isNodeOpen", "openNode", "closeNode"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}