{"test_class": {"identifier": "ThingSearchCommandAdapterTest", "superclass": "", "interfaces": "implements ProtocolAdapterTest", "fields": [{"original_string": "private static final JsonArray NAMESPACES_ARRAY = TestConstants.NAMESPACES.stream()\n            .map(JsonValue::of)\n            .collect(JsonCollectors.valuesToArray());", "modifier": "private static final", "type": "JsonArray", "declarator": "NAMESPACES_ARRAY = TestConstants.NAMESPACES.stream()\n            .map(JsonValue::of)\n            .collect(JsonCollectors.valuesToArray())", "var_name": "NAMESPACES_ARRAY"}, {"original_string": "private ThingSearchCommandAdapter underTest;", "modifier": "private", "type": "ThingSearchCommandAdapter", "declarator": "underTest", "var_name": "underTest"}], "file": "protocol-adapter/src/test/java/org/eclipse/ditto/protocoladapter/things/ThingSearchCommandAdapterTest.java"}, "test_case": {"identifier": "createSubscriptionFilterOnlyToAdaptable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createSubscriptionFilterOnlyToAdaptable() {\n        final String filter = \"exists(attributes/test)\";\n        final CreateSubscription createSubscription =\n                CreateSubscription.of(filter, null, null, null, DittoHeaders.empty());\n        final Adaptable actual = underTest.toAdaptable(createSubscription);\n        assertThat(actual.getPayload().getValue()).contains(JsonObject.newBuilder()\n                .set(\"filter\", filter)\n                .build());\n    }", "signature": "void createSubscriptionFilterOnlyToAdaptable()", "full_signature": "@Test public void createSubscriptionFilterOnlyToAdaptable()", "class_method_signature": "ThingSearchCommandAdapterTest.createSubscriptionFilterOnlyToAdaptable()", "testcase": true, "constructor": false, "invocations": ["of", "empty", "toAdaptable", "contains", "assertThat", "getValue", "getPayload", "build", "set", "newBuilder"]}, "focal_class": {"identifier": "ThingSearchCommandAdapter", "superclass": "extends AbstractThingAdapter<ThingSearchCommand<?>>", "interfaces": "", "fields": [{"original_string": "private SignalMapper<ThingSearchCommand<?>> signalMapper = SignalMapperFactory.newThingSearchSignalMapper();", "modifier": "private", "type": "SignalMapper<ThingSearchCommand<?>>", "declarator": "signalMapper = SignalMapperFactory.newThingSearchSignalMapper()", "var_name": "signalMapper"}], "methods": [{"identifier": "ThingSearchCommandAdapter", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "private", "return": "", "signature": " ThingSearchCommandAdapter(final HeaderTranslator headerTranslator)", "full_signature": "private  ThingSearchCommandAdapter(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingSearchCommandAdapter.ThingSearchCommandAdapter(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "ThingSearchCommandAdapter", "signature": "ThingSearchCommandAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static ThingSearchCommandAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingSearchCommandAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false}, {"identifier": "mapSignalToAdaptable", "parameters": "(final ThingSearchCommand<?> command, final TopicPath.Channel channel)", "modifiers": "@Override public", "return": "Adaptable", "signature": "Adaptable mapSignalToAdaptable(final ThingSearchCommand<?> command, final TopicPath.Channel channel)", "full_signature": "@Override public Adaptable mapSignalToAdaptable(final ThingSearchCommand<?> command, final TopicPath.Channel channel)", "class_method_signature": "ThingSearchCommandAdapter.mapSignalToAdaptable(final ThingSearchCommand<?> command, final TopicPath.Channel channel)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(final Adaptable adaptable)", "modifiers": "@Override protected", "return": "String", "signature": "String getType(final Adaptable adaptable)", "full_signature": "@Override protected String getType(final Adaptable adaptable)", "class_method_signature": "ThingSearchCommandAdapter.getType(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "getCriteria", "parameters": "()", "modifiers": "@Override public", "return": "Set<TopicPath.Criterion>", "signature": "Set<TopicPath.Criterion> getCriteria()", "full_signature": "@Override public Set<TopicPath.Criterion> getCriteria()", "class_method_signature": "ThingSearchCommandAdapter.getCriteria()", "testcase": false, "constructor": false}, {"identifier": "getActions", "parameters": "()", "modifiers": "@Override public", "return": "Set<TopicPath.Action>", "signature": "Set<TopicPath.Action> getActions()", "full_signature": "@Override public Set<TopicPath.Action> getActions()", "class_method_signature": "ThingSearchCommandAdapter.getActions()", "testcase": false, "constructor": false}, {"identifier": "isForResponses", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isForResponses()", "full_signature": "@Override public boolean isForResponses()", "class_method_signature": "ThingSearchCommandAdapter.isForResponses()", "testcase": false, "constructor": false}, {"identifier": "getSearchActions", "parameters": "()", "modifiers": "@Override public", "return": "Set<TopicPath.SearchAction>", "signature": "Set<TopicPath.SearchAction> getSearchActions()", "full_signature": "@Override public Set<TopicPath.SearchAction> getSearchActions()", "class_method_signature": "ThingSearchCommandAdapter.getSearchActions()", "testcase": false, "constructor": false}], "file": "protocol-adapter/src/main/java/org/eclipse/ditto/protocoladapter/things/ThingSearchCommandAdapter.java"}, "focal_method": {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "ThingSearchCommandAdapter", "body": "public static ThingSearchCommandAdapter of(final HeaderTranslator headerTranslator) {\n        return new ThingSearchCommandAdapter(requireNonNull(headerTranslator));\n    }", "signature": "ThingSearchCommandAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static ThingSearchCommandAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingSearchCommandAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false, "invocations": ["requireNonNull"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}