{"test_class": {"identifier": "UtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/cert_refresher/src/test/java/com/oath/auth/UtilsTest.java"}, "test_case": {"identifier": "getKeyManagersTest", "parameters": "()", "modifiers": "@Test (expected = FileNotFoundException.class) public", "return": "void", "body": "@Test (expected = FileNotFoundException.class)\n    public void getKeyManagersTest() throws FileNotFoundException, IOException, InterruptedException, KeyRefresherException {\n        Utils.getKeyManagers(null, null);\n        Assert.fail(\"Should have thrown FileNotFoundException.\");\n    }", "signature": "void getKeyManagersTest()", "full_signature": "@Test (expected = FileNotFoundException.class) public void getKeyManagersTest()", "class_method_signature": "UtilsTest.getKeyManagersTest()", "testcase": true, "constructor": false, "invocations": ["getKeyManagers", "fail"]}, "focal_class": {"identifier": "Utils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(Utils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(Utils.class)", "var_name": "LOG"}, {"original_string": "private static final String SSLCONTEXT_ALGORITHM = \"TLSv1.2\";", "modifier": "private static final", "type": "String", "declarator": "SSLCONTEXT_ALGORITHM = \"TLSv1.2\"", "var_name": "SSLCONTEXT_ALGORITHM"}, {"original_string": "private static final String PROP_KEY_WAIT_TIME = \"athenz.cert_refresher.key_wait_time\";", "modifier": "private static final", "type": "String", "declarator": "PROP_KEY_WAIT_TIME = \"athenz.cert_refresher.key_wait_time\"", "var_name": "PROP_KEY_WAIT_TIME"}, {"original_string": "private static final char[] KEYSTORE_PASSWORD = \"secret\".toCharArray();", "modifier": "private static final", "type": "char[]", "declarator": "KEYSTORE_PASSWORD = \"secret\".toCharArray()", "var_name": "KEYSTORE_PASSWORD"}, {"original_string": "private static final String DEFAULT_KEYSTORE_TYPE = \"JKS\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_KEYSTORE_TYPE = \"JKS\"", "var_name": "DEFAULT_KEYSTORE_TYPE"}, {"original_string": "private static final long KEY_WAIT_TIME_MILLIS = TimeUnit.MINUTES.toMillis(\n            Integer.parseInt(System.getProperty(PROP_KEY_WAIT_TIME, \"10\")));", "modifier": "private static final", "type": "long", "declarator": "KEY_WAIT_TIME_MILLIS = TimeUnit.MINUTES.toMillis(\n            Integer.parseInt(System.getProperty(PROP_KEY_WAIT_TIME, \"10\")))", "var_name": "KEY_WAIT_TIME_MILLIS"}], "methods": [{"identifier": "getKeyStore", "parameters": "(final String jksFilePath)", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore getKeyStore(final String jksFilePath)", "full_signature": "public static KeyStore getKeyStore(final String jksFilePath)", "class_method_signature": "Utils.getKeyStore(final String jksFilePath)", "testcase": false, "constructor": false}, {"identifier": "getKeyStore", "parameters": "(final String jksFilePath, final char[] password)", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore getKeyStore(final String jksFilePath, final char[] password)", "full_signature": "public static KeyStore getKeyStore(final String jksFilePath, final char[] password)", "class_method_signature": "Utils.getKeyStore(final String jksFilePath, final char[] password)", "testcase": false, "constructor": false}, {"identifier": "getKeyManagers", "parameters": "(final String athenzPublicCert, final String athenzPrivateKey)", "modifiers": "public static", "return": "KeyManager[]", "signature": "KeyManager[] getKeyManagers(final String athenzPublicCert, final String athenzPrivateKey)", "full_signature": "public static KeyManager[] getKeyManagers(final String athenzPublicCert, final String athenzPrivateKey)", "class_method_signature": "Utils.getKeyManagers(final String athenzPublicCert, final String athenzPrivateKey)", "testcase": false, "constructor": false}, {"identifier": "generateKeyRefresher", "parameters": "(final String trustStorePath,\n                                                    final String athenzPublicCert, final String athenzPrivateKey)", "modifiers": "public static", "return": "KeyRefresher", "signature": "KeyRefresher generateKeyRefresher(final String trustStorePath,\n                                                    final String athenzPublicCert, final String athenzPrivateKey)", "full_signature": "public static KeyRefresher generateKeyRefresher(final String trustStorePath,\n                                                    final String athenzPublicCert, final String athenzPrivateKey)", "class_method_signature": "Utils.generateKeyRefresher(final String trustStorePath,\n                                                    final String athenzPublicCert, final String athenzPrivateKey)", "testcase": false, "constructor": false}, {"identifier": "generateKeyRefresher", "parameters": "(final String trustStorePath,\n                                                    final String trustStorePassword, final String athenzPublicCert, final String athenzPrivateKey)", "modifiers": "public static", "return": "KeyRefresher", "signature": "KeyRefresher generateKeyRefresher(final String trustStorePath,\n                                                    final String trustStorePassword, final String athenzPublicCert, final String athenzPrivateKey)", "full_signature": "public static KeyRefresher generateKeyRefresher(final String trustStorePath,\n                                                    final String trustStorePassword, final String athenzPublicCert, final String athenzPrivateKey)", "class_method_signature": "Utils.generateKeyRefresher(final String trustStorePath,\n                                                    final String trustStorePassword, final String athenzPublicCert, final String athenzPrivateKey)", "testcase": false, "constructor": false}, {"identifier": "generateKeyRefresher", "parameters": "(final String trustStorePath,\n                                                    final char[] trustStorePassword, final String athenzPublicCert, final String athenzPrivateKey)", "modifiers": "public static", "return": "KeyRefresher", "signature": "KeyRefresher generateKeyRefresher(final String trustStorePath,\n                                                    final char[] trustStorePassword, final String athenzPublicCert, final String athenzPrivateKey)", "full_signature": "public static KeyRefresher generateKeyRefresher(final String trustStorePath,\n                                                    final char[] trustStorePassword, final String athenzPublicCert, final String athenzPrivateKey)", "class_method_signature": "Utils.generateKeyRefresher(final String trustStorePath,\n                                                    final char[] trustStorePassword, final String athenzPublicCert, final String athenzPrivateKey)", "testcase": false, "constructor": false}, {"identifier": "generateKeyRefresher", "parameters": "(final String trustStorePath,\n                                                    final char[] trustStorePassword, final String athenzPublicCert,\n                                                    final String athenzPrivateKey, final KeyRefresherListener keyRefresherListener)", "modifiers": "public static", "return": "KeyRefresher", "signature": "KeyRefresher generateKeyRefresher(final String trustStorePath,\n                                                    final char[] trustStorePassword, final String athenzPublicCert,\n                                                    final String athenzPrivateKey, final KeyRefresherListener keyRefresherListener)", "full_signature": "public static KeyRefresher generateKeyRefresher(final String trustStorePath,\n                                                    final char[] trustStorePassword, final String athenzPublicCert,\n                                                    final String athenzPrivateKey, final KeyRefresherListener keyRefresherListener)", "class_method_signature": "Utils.generateKeyRefresher(final String trustStorePath,\n                                                    final char[] trustStorePassword, final String athenzPublicCert,\n                                                    final String athenzPrivateKey, final KeyRefresherListener keyRefresherListener)", "testcase": false, "constructor": false}, {"identifier": "generateKeyRefresherFromCaCert", "parameters": "(final String caCertPath,\n                                                              final String athenzPublicCert, final String athenzPrivateKey)", "modifiers": "public static", "return": "KeyRefresher", "signature": "KeyRefresher generateKeyRefresherFromCaCert(final String caCertPath,\n                                                              final String athenzPublicCert, final String athenzPrivateKey)", "full_signature": "public static KeyRefresher generateKeyRefresherFromCaCert(final String caCertPath,\n                                                              final String athenzPublicCert, final String athenzPrivateKey)", "class_method_signature": "Utils.generateKeyRefresherFromCaCert(final String caCertPath,\n                                                              final String athenzPublicCert, final String athenzPrivateKey)", "testcase": false, "constructor": false}, {"identifier": "getKeyRefresher", "parameters": "(String athenzPublicCert, String athenzPrivateKey,\n                                        TrustStore trustStore)", "modifiers": "static", "return": "KeyRefresher", "signature": "KeyRefresher getKeyRefresher(String athenzPublicCert, String athenzPrivateKey,\n                                        TrustStore trustStore)", "full_signature": "static KeyRefresher getKeyRefresher(String athenzPublicCert, String athenzPrivateKey,\n                                        TrustStore trustStore)", "class_method_signature": "Utils.getKeyRefresher(String athenzPublicCert, String athenzPrivateKey,\n                                        TrustStore trustStore)", "testcase": false, "constructor": false}, {"identifier": "getKeyRefresher", "parameters": "(String athenzPublicCert, String athenzPrivateKey,\n                                        TrustStore trustStore, final KeyRefresherListener keyRefresherListener)", "modifiers": "static", "return": "KeyRefresher", "signature": "KeyRefresher getKeyRefresher(String athenzPublicCert, String athenzPrivateKey,\n                                        TrustStore trustStore, final KeyRefresherListener keyRefresherListener)", "full_signature": "static KeyRefresher getKeyRefresher(String athenzPublicCert, String athenzPrivateKey,\n                                        TrustStore trustStore, final KeyRefresherListener keyRefresherListener)", "class_method_signature": "Utils.getKeyRefresher(String athenzPublicCert, String athenzPrivateKey,\n                                        TrustStore trustStore, final KeyRefresherListener keyRefresherListener)", "testcase": false, "constructor": false}, {"identifier": "buildSSLContext", "parameters": "(KeyManagerProxy keyManagerProxy,\n                                             TrustManagerProxy trustManagerProxy)", "modifiers": "public static", "return": "SSLContext", "signature": "SSLContext buildSSLContext(KeyManagerProxy keyManagerProxy,\n                                             TrustManagerProxy trustManagerProxy)", "full_signature": "public static SSLContext buildSSLContext(KeyManagerProxy keyManagerProxy,\n                                             TrustManagerProxy trustManagerProxy)", "class_method_signature": "Utils.buildSSLContext(KeyManagerProxy keyManagerProxy,\n                                             TrustManagerProxy trustManagerProxy)", "testcase": false, "constructor": false}, {"identifier": "inputStreamSupplierFromFile", "parameters": "(File file)", "modifiers": "static", "return": "Supplier<InputStream>", "signature": "Supplier<InputStream> inputStreamSupplierFromFile(File file)", "full_signature": "static Supplier<InputStream> inputStreamSupplierFromFile(File file)", "class_method_signature": "Utils.inputStreamSupplierFromFile(File file)", "testcase": false, "constructor": false}, {"identifier": "inputStreamSupplierFromResource", "parameters": "(String resource)", "modifiers": "static", "return": "Supplier<InputStream>", "signature": "Supplier<InputStream> inputStreamSupplierFromResource(String resource)", "full_signature": "static Supplier<InputStream> inputStreamSupplierFromResource(String resource)", "class_method_signature": "Utils.inputStreamSupplierFromResource(String resource)", "testcase": false, "constructor": false}, {"identifier": "inputStreamSupplierFromString", "parameters": "(String s)", "modifiers": "static", "return": "Supplier<InputStream>", "signature": "Supplier<InputStream> inputStreamSupplierFromString(String s)", "full_signature": "static Supplier<InputStream> inputStreamSupplierFromString(String s)", "class_method_signature": "Utils.inputStreamSupplierFromString(String s)", "testcase": false, "constructor": false}, {"identifier": "createKeyStore", "parameters": "(final String athenzPublicCert, final String athenzPrivateKey)", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore createKeyStore(final String athenzPublicCert, final String athenzPrivateKey)", "full_signature": "public static KeyStore createKeyStore(final String athenzPublicCert, final String athenzPrivateKey)", "class_method_signature": "Utils.createKeyStore(final String athenzPublicCert, final String athenzPrivateKey)", "testcase": false, "constructor": false}, {"identifier": "createKeyStoreFromPems", "parameters": "(\n            final String athenzPublicCertPem,\n            final String athenzPrivateKeyPem)", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore createKeyStoreFromPems(\n            final String athenzPublicCertPem,\n            final String athenzPrivateKeyPem)", "full_signature": "public static KeyStore createKeyStoreFromPems(\n            final String athenzPublicCertPem,\n            final String athenzPrivateKeyPem)", "class_method_signature": "Utils.createKeyStoreFromPems(\n            final String athenzPublicCertPem,\n            final String athenzPrivateKeyPem)", "testcase": false, "constructor": false}, {"identifier": "createKeyStore", "parameters": "(\n            final Supplier<InputStream> athenzPublicCertInputStream,\n            final Supplier<String> athenzPublicCertLocationSupplier,\n            final Supplier<InputStream> athenzPrivateKeyInputStream,\n            final Supplier<String> athenzPrivateKeyLocationSupplier)", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore createKeyStore(\n            final Supplier<InputStream> athenzPublicCertInputStream,\n            final Supplier<String> athenzPublicCertLocationSupplier,\n            final Supplier<InputStream> athenzPrivateKeyInputStream,\n            final Supplier<String> athenzPrivateKeyLocationSupplier)", "full_signature": "public static KeyStore createKeyStore(\n            final Supplier<InputStream> athenzPublicCertInputStream,\n            final Supplier<String> athenzPublicCertLocationSupplier,\n            final Supplier<InputStream> athenzPrivateKeyInputStream,\n            final Supplier<String> athenzPrivateKeyLocationSupplier)", "class_method_signature": "Utils.createKeyStore(\n            final Supplier<InputStream> athenzPublicCertInputStream,\n            final Supplier<String> athenzPublicCertLocationSupplier,\n            final Supplier<InputStream> athenzPrivateKeyInputStream,\n            final Supplier<String> athenzPrivateKeyLocationSupplier)", "testcase": false, "constructor": false}, {"identifier": "generateTrustStore", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore generateTrustStore(InputStream inputStream)", "full_signature": "public static KeyStore generateTrustStore(InputStream inputStream)", "class_method_signature": "Utils.generateTrustStore(InputStream inputStream)", "testcase": false, "constructor": false}], "file": "libs/java/cert_refresher/src/main/java/com/oath/auth/Utils.java"}, "focal_method": {"identifier": "getKeyManagers", "parameters": "(final String athenzPublicCert, final String athenzPrivateKey)", "modifiers": "public static", "return": "KeyManager[]", "body": "public static KeyManager[] getKeyManagers(final String athenzPublicCert, final String athenzPrivateKey) throws FileNotFoundException, IOException, InterruptedException, KeyRefresherException {\n        final KeyStore keystore = createKeyStore(athenzPublicCert, athenzPrivateKey);\n        KeyManagerFactory keyManagerFactory = null;\n        try {\n            keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n            keyManagerFactory.init(keystore, KEYSTORE_PASSWORD);\n        } catch (NoSuchAlgorithmException e) {\n            throw new KeyRefresherException(\"No Provider supports a KeyManagerFactorySpi implementation for the specified algorithm.\", e);\n        } catch (UnrecoverableKeyException e) {\n            throw new KeyRefresherException(\"key cannot be recovered (e.g. the given password is wrong).\", e);\n        } catch (KeyStoreException e) {\n            throw new KeyRefresherException(\"Unable to initialize KeyManagerFactory.\", e);\n        }\n        return keyManagerFactory.getKeyManagers();\n    }", "signature": "KeyManager[] getKeyManagers(final String athenzPublicCert, final String athenzPrivateKey)", "full_signature": "public static KeyManager[] getKeyManagers(final String athenzPublicCert, final String athenzPrivateKey)", "class_method_signature": "Utils.getKeyManagers(final String athenzPublicCert, final String athenzPrivateKey)", "testcase": false, "constructor": false, "invocations": ["createKeyStore", "getInstance", "getDefaultAlgorithm", "init", "getKeyManagers"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}