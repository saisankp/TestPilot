{"test_class": {"identifier": "WorkflowVersionTest", "superclass": "", "interfaces": "", "fields": [], "file": "projects/copper-coreengine/src/test/java/org/copperengine/core/WorkflowVersionTest.java"}, "test_case": {"identifier": "testIsLargerThan", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsLargerThan() {\n        final WorkflowVersion a = new WorkflowVersion(1, 2, 3);\n        assertTrue(a.equals(a));\n        assertFalse(a.isLargerThan(a));\n\n        final WorkflowVersion b = new WorkflowVersion(1, 3, 0);\n        assertFalse(a.equals(b));\n        assertTrue(b.isLargerThan(a));\n    }", "signature": "void testIsLargerThan()", "full_signature": "@Test public void testIsLargerThan()", "class_method_signature": "WorkflowVersionTest.testIsLargerThan()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertFalse", "isLargerThan", "assertFalse", "equals", "assertTrue", "isLargerThan"]}, "focal_class": {"identifier": "WorkflowVersion", "superclass": "", "interfaces": "", "fields": [{"original_string": "final long majorVersion;", "modifier": "final", "type": "long", "declarator": "majorVersion", "var_name": "majorVersion"}, {"original_string": "final long minorVersion;", "modifier": "final", "type": "long", "declarator": "minorVersion", "var_name": "minorVersion"}, {"original_string": "final long patchLevel;", "modifier": "final", "type": "long", "declarator": "patchLevel", "var_name": "patchLevel"}, {"original_string": "final String formatted;", "modifier": "final", "type": "String", "declarator": "formatted", "var_name": "formatted"}], "methods": [{"identifier": "WorkflowVersion", "parameters": "(long majorVersion, long minorVersion, long patchLevel)", "modifiers": "public", "return": "", "signature": " WorkflowVersion(long majorVersion, long minorVersion, long patchLevel)", "full_signature": "public  WorkflowVersion(long majorVersion, long minorVersion, long patchLevel)", "class_method_signature": "WorkflowVersion.WorkflowVersion(long majorVersion, long minorVersion, long patchLevel)", "testcase": false, "constructor": true}, {"identifier": "getMajorVersion", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMajorVersion()", "full_signature": "public long getMajorVersion()", "class_method_signature": "WorkflowVersion.getMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getMinorVersion", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMinorVersion()", "full_signature": "public long getMinorVersion()", "class_method_signature": "WorkflowVersion.getMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "getPatchLevel", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getPatchLevel()", "full_signature": "public long getPatchLevel()", "class_method_signature": "WorkflowVersion.getPatchLevel()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "WorkflowVersion.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "WorkflowVersion.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "WorkflowVersion.toString()", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String format()", "full_signature": "public String format()", "class_method_signature": "WorkflowVersion.format()", "testcase": false, "constructor": false}, {"identifier": "isLargerThan", "parameters": "(WorkflowVersion other)", "modifiers": "public", "return": "boolean", "signature": "boolean isLargerThan(WorkflowVersion other)", "full_signature": "public boolean isLargerThan(WorkflowVersion other)", "class_method_signature": "WorkflowVersion.isLargerThan(WorkflowVersion other)", "testcase": false, "constructor": false}], "file": "projects/copper-coreengine/src/main/java/org/copperengine/core/WorkflowVersion.java"}, "focal_method": {"identifier": "isLargerThan", "parameters": "(WorkflowVersion other)", "modifiers": "public", "return": "boolean", "body": "public boolean isLargerThan(WorkflowVersion other) {\n        if (this.majorVersion > other.majorVersion)\n            return true;\n        if (this.majorVersion == other.majorVersion && this.minorVersion > other.minorVersion)\n            return true;\n        if (this.majorVersion == other.majorVersion && this.minorVersion == other.minorVersion && this.patchLevel > other.patchLevel)\n            return true;\n        return false;\n    }", "signature": "boolean isLargerThan(WorkflowVersion other)", "full_signature": "public boolean isLargerThan(WorkflowVersion other)", "class_method_signature": "WorkflowVersion.isLargerThan(WorkflowVersion other)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 15008570, "url": "https://github.com/copper-engine/copper-engine", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 169, "size": 122984, "license": "licensed"}}