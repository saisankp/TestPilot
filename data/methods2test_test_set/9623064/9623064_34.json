{"test_class": {"identifier": "BloomFilterDuplicateRemoverTest", "superclass": "", "interfaces": "", "fields": [], "file": "webmagic-extension/src/test/java/us/codecraft/webmagic/scheduler/BloomFilterDuplicateRemoverTest.java"}, "test_case": {"identifier": "testMemory", "parameters": "()", "modifiers": "@Ignore(\"long time\") @Test public", "return": "void", "body": "@Ignore(\"long time\")\n    @Test\n    public void testMemory() throws Exception {\n        int times = 5000000;\n        DuplicateRemover duplicateRemover = new BloomFilterDuplicateRemover(times,0.005);\n        long freeMemory = Runtime.getRuntime().freeMemory();\n        long time = System.currentTimeMillis();\n        for (int i = 0; i < times; i++) {\n            duplicateRemover.isDuplicate(new Request(String.valueOf(i)), null);\n        }\n        System.out.println(\"Time used by bloomfilter:\" + (System.currentTimeMillis() - time));\n        System.out.println(\"Memory used by bloomfilter:\" + (freeMemory - Runtime.getRuntime().freeMemory()));\n\n        duplicateRemover = new HashSetDuplicateRemover();\n        System.gc();\n        freeMemory = Runtime.getRuntime().freeMemory();\n        time = System.currentTimeMillis();\n        for (int i = 0; i < times; i++) {\n            duplicateRemover.isDuplicate(new Request(String.valueOf(i)), null);\n        }\n        System.out.println(\"Time used by hashset:\" + (System.currentTimeMillis() - time));\n        System.out.println(\"Memory used by hashset:\" + (freeMemory - Runtime.getRuntime().freeMemory()));\n    }", "signature": "void testMemory()", "full_signature": "@Ignore(\"long time\") @Test public void testMemory()", "class_method_signature": "BloomFilterDuplicateRemoverTest.testMemory()", "testcase": true, "constructor": false, "invocations": ["freeMemory", "getRuntime", "currentTimeMillis", "isDuplicate", "valueOf", "println", "currentTimeMillis", "println", "freeMemory", "getRuntime", "gc", "freeMemory", "getRuntime", "currentTimeMillis", "isDuplicate", "valueOf", "println", "currentTimeMillis", "println", "freeMemory", "getRuntime"]}, "focal_class": {"identifier": "BloomFilterDuplicateRemover", "superclass": "", "interfaces": "implements DuplicateRemover", "fields": [{"original_string": "private int expectedInsertions;", "modifier": "private", "type": "int", "declarator": "expectedInsertions", "var_name": "expectedInsertions"}, {"original_string": "private double fpp;", "modifier": "private", "type": "double", "declarator": "fpp", "var_name": "fpp"}, {"original_string": "private AtomicInteger counter;", "modifier": "private", "type": "AtomicInteger", "declarator": "counter", "var_name": "counter"}, {"original_string": "private final BloomFilter<CharSequence> bloomFilter;", "modifier": "private final", "type": "BloomFilter<CharSequence>", "declarator": "bloomFilter", "var_name": "bloomFilter"}], "methods": [{"identifier": "BloomFilterDuplicateRemover", "parameters": "(int expectedInsertions)", "modifiers": "public", "return": "", "signature": " BloomFilterDuplicateRemover(int expectedInsertions)", "full_signature": "public  BloomFilterDuplicateRemover(int expectedInsertions)", "class_method_signature": "BloomFilterDuplicateRemover.BloomFilterDuplicateRemover(int expectedInsertions)", "testcase": false, "constructor": true}, {"identifier": "BloomFilterDuplicateRemover", "parameters": "(int expectedInsertions, double fpp)", "modifiers": "public", "return": "", "signature": " BloomFilterDuplicateRemover(int expectedInsertions, double fpp)", "full_signature": "public  BloomFilterDuplicateRemover(int expectedInsertions, double fpp)", "class_method_signature": "BloomFilterDuplicateRemover.BloomFilterDuplicateRemover(int expectedInsertions, double fpp)", "testcase": false, "constructor": true}, {"identifier": "rebuildBloomFilter", "parameters": "()", "modifiers": "protected", "return": "BloomFilter<CharSequence>", "signature": "BloomFilter<CharSequence> rebuildBloomFilter()", "full_signature": "protected BloomFilter<CharSequence> rebuildBloomFilter()", "class_method_signature": "BloomFilterDuplicateRemover.rebuildBloomFilter()", "testcase": false, "constructor": false}, {"identifier": "isDuplicate", "parameters": "(Request request, Task task)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDuplicate(Request request, Task task)", "full_signature": "@Override public boolean isDuplicate(Request request, Task task)", "class_method_signature": "BloomFilterDuplicateRemover.isDuplicate(Request request, Task task)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "(Request request)", "modifiers": "protected", "return": "String", "signature": "String getUrl(Request request)", "full_signature": "protected String getUrl(Request request)", "class_method_signature": "BloomFilterDuplicateRemover.getUrl(Request request)", "testcase": false, "constructor": false}, {"identifier": "resetDuplicateCheck", "parameters": "(Task task)", "modifiers": "@Override public", "return": "void", "signature": "void resetDuplicateCheck(Task task)", "full_signature": "@Override public void resetDuplicateCheck(Task task)", "class_method_signature": "BloomFilterDuplicateRemover.resetDuplicateCheck(Task task)", "testcase": false, "constructor": false}, {"identifier": "getTotalRequestsCount", "parameters": "(Task task)", "modifiers": "@Override public", "return": "int", "signature": "int getTotalRequestsCount(Task task)", "full_signature": "@Override public int getTotalRequestsCount(Task task)", "class_method_signature": "BloomFilterDuplicateRemover.getTotalRequestsCount(Task task)", "testcase": false, "constructor": false}], "file": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/BloomFilterDuplicateRemover.java"}, "focal_method": {"identifier": "isDuplicate", "parameters": "(Request request, Task task)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isDuplicate(Request request, Task task) {\n        boolean isDuplicate = bloomFilter.mightContain(getUrl(request));\n        if (!isDuplicate) {\n            bloomFilter.put(getUrl(request));\n            counter.incrementAndGet();\n        }\n        return isDuplicate;\n    }", "signature": "boolean isDuplicate(Request request, Task task)", "full_signature": "@Override public boolean isDuplicate(Request request, Task task)", "class_method_signature": "BloomFilterDuplicateRemover.isDuplicate(Request request, Task task)", "testcase": false, "constructor": false, "invocations": ["mightContain", "getUrl", "put", "getUrl", "incrementAndGet"]}, "repository": {"repo_id": 9623064, "url": "https://github.com/code4craft/webmagic", "language": "Java", "is_fork": false, "fork_count": 3804, "stargazer_count": 9136, "size": 17041, "license": "licensed"}}