{"test_class": {"identifier": "ProxySettingsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String TEST_INPUT = \"*,  ,,*.google.com|*|  | ||*.google.com| proxy.com , last.com\";", "modifier": "private final static", "type": "String", "declarator": "TEST_INPUT = \"*,  ,,*.google.com|*|  | ||*.google.com| proxy.com , last.com\"", "var_name": "TEST_INPUT"}], "file": "android/testSrc/com/android/tools/idea/gradle/util/ProxySettingsTest.java"}, "test_case": {"identifier": "replacePipesWithCommas", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void replacePipesWithCommas() {\n    String expected = \"*, *.google.com, *, *.google.com, proxy.com, last.com\";\n    assertThat(ProxySettings.replacePipesWithCommasAndClean(TEST_INPUT)).isEqualTo(expected);\n  }", "signature": "void replacePipesWithCommas()", "full_signature": "@Test public void replacePipesWithCommas()", "class_method_signature": "ProxySettingsTest.replacePipesWithCommas()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "replacePipesWithCommasAndClean"]}, "focal_class": {"identifier": "ProxySettings", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NonNls public static final String HTTP_PROXY_TYPE = \"http\";", "modifier": "@NonNls public static final", "type": "String", "declarator": "HTTP_PROXY_TYPE = \"http\"", "var_name": "HTTP_PROXY_TYPE"}, {"original_string": "@NonNls public static final String HTTPS_PROXY_TYPE = \"https\";", "modifier": "@NonNls public static final", "type": "String", "declarator": "HTTPS_PROXY_TYPE = \"https\"", "var_name": "HTTPS_PROXY_TYPE"}, {"original_string": "@NonNls private static final String PROXY_HOST_PROPERTY_SUFFIX = \"proxyHost\";", "modifier": "@NonNls private static final", "type": "String", "declarator": "PROXY_HOST_PROPERTY_SUFFIX = \"proxyHost\"", "var_name": "PROXY_HOST_PROPERTY_SUFFIX"}, {"original_string": "@NonNls private static final String PROXY_PORT_PROPERTY_SUFFIX = \"proxyPort\";", "modifier": "@NonNls private static final", "type": "String", "declarator": "PROXY_PORT_PROPERTY_SUFFIX = \"proxyPort\"", "var_name": "PROXY_PORT_PROPERTY_SUFFIX"}, {"original_string": "@NonNls private static final String PROXY_USER_PROPERTY_SUFFIX = \"proxyUser\";", "modifier": "@NonNls private static final", "type": "String", "declarator": "PROXY_USER_PROPERTY_SUFFIX = \"proxyUser\"", "var_name": "PROXY_USER_PROPERTY_SUFFIX"}, {"original_string": "@NonNls private static final String PROXY_PASSWORD_PROPERTY_SUFFIX = \"proxyPassword\";", "modifier": "@NonNls private static final", "type": "String", "declarator": "PROXY_PASSWORD_PROPERTY_SUFFIX = \"proxyPassword\"", "var_name": "PROXY_PASSWORD_PROPERTY_SUFFIX"}, {"original_string": "@NonNls private static final String PROXY_EXCEPTIONS_PROPERTY_SUFFIX = \"nonProxyHosts\";", "modifier": "@NonNls private static final", "type": "String", "declarator": "PROXY_EXCEPTIONS_PROPERTY_SUFFIX = \"nonProxyHosts\"", "var_name": "PROXY_EXCEPTIONS_PROPERTY_SUFFIX"}, {"original_string": "@NotNull private String myProxyType;", "modifier": "@NotNull private", "type": "String", "declarator": "myProxyType", "var_name": "myProxyType"}, {"original_string": "@Nullable private String myHost;", "modifier": "@Nullable private", "type": "String", "declarator": "myHost", "var_name": "myHost"}, {"original_string": "@Nullable private String myExceptions;", "modifier": "@Nullable private", "type": "String", "declarator": "myExceptions", "var_name": "myExceptions"}, {"original_string": "@Nullable private String myUser;", "modifier": "@Nullable private", "type": "String", "declarator": "myUser", "var_name": "myUser"}, {"original_string": "@Nullable private String myPassword;", "modifier": "@Nullable private", "type": "String", "declarator": "myPassword", "var_name": "myPassword"}, {"original_string": "private int myPort = 80;", "modifier": "private", "type": "int", "declarator": "myPort = 80", "var_name": "myPort"}], "methods": [{"identifier": "ProxySettings", "parameters": "(@NotNull String proxyType)", "modifiers": "public", "return": "", "signature": " ProxySettings(@NotNull String proxyType)", "full_signature": "public  ProxySettings(@NotNull String proxyType)", "class_method_signature": "ProxySettings.ProxySettings(@NotNull String proxyType)", "testcase": false, "constructor": true}, {"identifier": "ProxySettings", "parameters": "(@NotNull Properties properties, @NotNull String proxyType)", "modifiers": "public", "return": "", "signature": " ProxySettings(@NotNull Properties properties, @NotNull String proxyType)", "full_signature": "public  ProxySettings(@NotNull Properties properties, @NotNull String proxyType)", "class_method_signature": "ProxySettings.ProxySettings(@NotNull Properties properties, @NotNull String proxyType)", "testcase": false, "constructor": true}, {"identifier": "ProxySettings", "parameters": "(@NotNull HttpConfigurable ideProxySettings)", "modifiers": "public", "return": "", "signature": " ProxySettings(@NotNull HttpConfigurable ideProxySettings)", "full_signature": "public  ProxySettings(@NotNull HttpConfigurable ideProxySettings)", "class_method_signature": "ProxySettings.ProxySettings(@NotNull HttpConfigurable ideProxySettings)", "testcase": false, "constructor": true}, {"identifier": "replaceCommasWithPipesAndClean", "parameters": "(@Nullable String exceptions)", "modifiers": "@Nullable public static", "return": "String", "signature": "String replaceCommasWithPipesAndClean(@Nullable String exceptions)", "full_signature": "@Nullable public static String replaceCommasWithPipesAndClean(@Nullable String exceptions)", "class_method_signature": "ProxySettings.replaceCommasWithPipesAndClean(@Nullable String exceptions)", "testcase": false, "constructor": false}, {"identifier": "replacePipesWithCommasAndClean", "parameters": "(@Nullable String exceptions)", "modifiers": "@Nullable public static", "return": "String", "signature": "String replacePipesWithCommasAndClean(@Nullable String exceptions)", "full_signature": "@Nullable public static String replacePipesWithCommasAndClean(@Nullable String exceptions)", "class_method_signature": "ProxySettings.replacePipesWithCommasAndClean(@Nullable String exceptions)", "testcase": false, "constructor": false}, {"identifier": "replaceSeparatorAndCleanList", "parameters": "(@Nullable String list, @NotNull String separator, @NotNull String replacement)", "modifiers": "@Nullable private static", "return": "String", "signature": "String replaceSeparatorAndCleanList(@Nullable String list, @NotNull String separator, @NotNull String replacement)", "full_signature": "@Nullable private static String replaceSeparatorAndCleanList(@Nullable String list, @NotNull String separator, @NotNull String replacement)", "class_method_signature": "ProxySettings.replaceSeparatorAndCleanList(@Nullable String list, @NotNull String separator, @NotNull String replacement)", "testcase": false, "constructor": false}, {"identifier": "applyProxySettings", "parameters": "(@NotNull Properties properties)", "modifiers": "public", "return": "void", "signature": "void applyProxySettings(@NotNull Properties properties)", "full_signature": "public void applyProxySettings(@NotNull Properties properties)", "class_method_signature": "ProxySettings.applyProxySettings(@NotNull Properties properties)", "testcase": false, "constructor": false}, {"identifier": "getProxyPropertyName", "parameters": "(@NotNull String propertySuffix)", "modifiers": "@NotNull private", "return": "String", "signature": "String getProxyPropertyName(@NotNull String propertySuffix)", "full_signature": "@NotNull private String getProxyPropertyName(@NotNull String propertySuffix)", "class_method_signature": "ProxySettings.getProxyPropertyName(@NotNull String propertySuffix)", "testcase": false, "constructor": false}, {"identifier": "getHost", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getHost()", "full_signature": "@Nullable public String getHost()", "class_method_signature": "ProxySettings.getHost()", "testcase": false, "constructor": false}, {"identifier": "setHost", "parameters": "(@Nullable String host)", "modifiers": "public", "return": "void", "signature": "void setHost(@Nullable String host)", "full_signature": "public void setHost(@Nullable String host)", "class_method_signature": "ProxySettings.setHost(@Nullable String host)", "testcase": false, "constructor": false}, {"identifier": "getExceptions", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getExceptions()", "full_signature": "@Nullable public String getExceptions()", "class_method_signature": "ProxySettings.getExceptions()", "testcase": false, "constructor": false}, {"identifier": "setExceptions", "parameters": "(@Nullable String exceptions)", "modifiers": "public", "return": "void", "signature": "void setExceptions(@Nullable String exceptions)", "full_signature": "public void setExceptions(@Nullable String exceptions)", "class_method_signature": "ProxySettings.setExceptions(@Nullable String exceptions)", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getUser()", "full_signature": "@Nullable public String getUser()", "class_method_signature": "ProxySettings.getUser()", "testcase": false, "constructor": false}, {"identifier": "setUser", "parameters": "(@Nullable String user)", "modifiers": "public", "return": "void", "signature": "void setUser(@Nullable String user)", "full_signature": "public void setUser(@Nullable String user)", "class_method_signature": "ProxySettings.setUser(@Nullable String user)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getPassword()", "full_signature": "@Nullable public String getPassword()", "class_method_signature": "ProxySettings.getPassword()", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(@Nullable String password)", "modifiers": "public", "return": "void", "signature": "void setPassword(@Nullable String password)", "full_signature": "public void setPassword(@Nullable String password)", "class_method_signature": "ProxySettings.setPassword(@Nullable String password)", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPort()", "full_signature": "public int getPort()", "class_method_signature": "ProxySettings.getPort()", "testcase": false, "constructor": false}, {"identifier": "setPort", "parameters": "(int port)", "modifiers": "public", "return": "void", "signature": "void setPort(int port)", "full_signature": "public void setPort(int port)", "class_method_signature": "ProxySettings.setPort(int port)", "testcase": false, "constructor": false}, {"identifier": "setProxyType", "parameters": "(@NotNull String proxyType)", "modifiers": "public", "return": "void", "signature": "void setProxyType(@NotNull String proxyType)", "full_signature": "public void setProxyType(@NotNull String proxyType)", "class_method_signature": "ProxySettings.setProxyType(@NotNull String proxyType)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ProxySettings.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ProxySettings.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ProxySettings.toString()", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/gradle/util/ProxySettings.java"}, "focal_method": {"identifier": "replacePipesWithCommasAndClean", "parameters": "(@Nullable String exceptions)", "modifiers": "@Nullable public static", "return": "String", "body": "@Nullable\n  public static String replacePipesWithCommasAndClean(@Nullable String exceptions) {\n    return replaceSeparatorAndCleanList(exceptions, \"|\", \", \");\n  }", "signature": "String replacePipesWithCommasAndClean(@Nullable String exceptions)", "full_signature": "@Nullable public static String replacePipesWithCommasAndClean(@Nullable String exceptions)", "class_method_signature": "ProxySettings.replacePipesWithCommasAndClean(@Nullable String exceptions)", "testcase": false, "constructor": false, "invocations": ["replaceSeparatorAndCleanList"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}