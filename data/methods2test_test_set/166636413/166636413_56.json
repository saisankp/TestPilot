{"test_class": {"identifier": "DriveHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private DriveHelper.DriveService mockedDriveService;", "modifier": "@Mock\n    private", "type": "DriveHelper.DriveService", "declarator": "mockedDriveService", "var_name": "mockedDriveService"}, {"original_string": "@Mock\n    private Drive.Files.List mockedRequest;", "modifier": "@Mock\n    private", "type": "Drive.Files.List", "declarator": "mockedRequest", "var_name": "mockedRequest"}, {"original_string": "private DriveHelper driveHelper;", "modifier": "private", "type": "DriveHelper", "declarator": "driveHelper", "var_name": "driveHelper"}], "file": "collect_app/src/test/java/org/odk/collect/android/utilities/gdrive/DriveHelperTest.java"}, "test_case": {"identifier": "generateSearchQueryTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void generateSearchQueryTest() {\n        String result = driveHelper.generateSearchQuery(null, null, null);\n        assertNull(result);\n\n        result = driveHelper.generateSearchQuery(\"sample-folder\", null, null);\n        assertEquals(\"name = 'sample-folder' and trashed = false\", result);\n\n        result = driveHelper.generateSearchQuery(null, \"some-parent-id\", null);\n        assertEquals(\"'some-parent-id' in parents and trashed = false\", result);\n\n        result = driveHelper.generateSearchQuery(null, null, \"xml-mime-type\");\n        assertEquals(\"mimeType = 'xml-mime-type' and trashed = false\", result);\n\n        result = driveHelper.generateSearchQuery(\"sample-folder\", null, \"xml-mime-type\");\n        assertEquals(\"name = 'sample-folder' and mimeType = 'xml-mime-type' and trashed = false\", result);\n\n        result = driveHelper.generateSearchQuery(\"sample-folder\", \"some-parent-id\", \"xml-mime-type\");\n        assertEquals(\"name = 'sample-folder' and 'some-parent-id' in parents and mimeType = 'xml-mime-type' and trashed = false\", result);\n    }", "signature": "void generateSearchQueryTest()", "full_signature": "@Test public void generateSearchQueryTest()", "class_method_signature": "DriveHelperTest.generateSearchQueryTest()", "testcase": true, "constructor": false, "invocations": ["generateSearchQuery", "assertNull", "generateSearchQuery", "assertEquals", "generateSearchQuery", "assertEquals", "generateSearchQuery", "assertEquals", "generateSearchQuery", "assertEquals", "generateSearchQuery", "assertEquals"]}, "focal_class": {"identifier": "DriveHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ODK_GOOGLE_DRIVE_ROOT_FOLDER_NAME = \"Open Data Kit\";", "modifier": "public static final", "type": "String", "declarator": "ODK_GOOGLE_DRIVE_ROOT_FOLDER_NAME = \"Open Data Kit\"", "var_name": "ODK_GOOGLE_DRIVE_ROOT_FOLDER_NAME"}, {"original_string": "public static final String ODK_GOOGLE_DRIVE_SUBMISSION_FOLDER_NAME = \"Submissions\";", "modifier": "public static final", "type": "String", "declarator": "ODK_GOOGLE_DRIVE_SUBMISSION_FOLDER_NAME = \"Submissions\"", "var_name": "ODK_GOOGLE_DRIVE_SUBMISSION_FOLDER_NAME"}, {"original_string": "public static final String FOLDER_MIME_TYPE = \"application/vnd.google-apps.folder\";", "modifier": "public static final", "type": "String", "declarator": "FOLDER_MIME_TYPE = \"application/vnd.google-apps.folder\"", "var_name": "FOLDER_MIME_TYPE"}, {"original_string": "private final DriveService driveService;", "modifier": "private final", "type": "DriveService", "declarator": "driveService", "var_name": "driveService"}], "methods": [{"identifier": "DriveHelper", "parameters": "(@NonNull GoogleAccountCredential credential,\n                @NonNull HttpTransport transport,\n                @NonNull JsonFactory jsonFactory)", "modifiers": "", "return": "", "signature": " DriveHelper(@NonNull GoogleAccountCredential credential,\n                @NonNull HttpTransport transport,\n                @NonNull JsonFactory jsonFactory)", "full_signature": "  DriveHelper(@NonNull GoogleAccountCredential credential,\n                @NonNull HttpTransport transport,\n                @NonNull JsonFactory jsonFactory)", "class_method_signature": "DriveHelper.DriveHelper(@NonNull GoogleAccountCredential credential,\n                @NonNull HttpTransport transport,\n                @NonNull JsonFactory jsonFactory)", "testcase": false, "constructor": true}, {"identifier": "DriveHelper", "parameters": "(DriveService driveService)", "modifiers": "", "return": "", "signature": " DriveHelper(DriveService driveService)", "full_signature": "  DriveHelper(DriveService driveService)", "class_method_signature": "DriveHelper.DriveHelper(DriveService driveService)", "testcase": false, "constructor": true}, {"identifier": "getRootFolderId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRootFolderId()", "full_signature": "public String getRootFolderId()", "class_method_signature": "DriveHelper.getRootFolderId()", "testcase": false, "constructor": false}, {"identifier": "buildRequest", "parameters": "(String query, String fields)", "modifiers": "@Nullable public", "return": "Drive.Files.List", "signature": "Drive.Files.List buildRequest(String query, String fields)", "full_signature": "@Nullable public Drive.Files.List buildRequest(String query, String fields)", "class_method_signature": "DriveHelper.buildRequest(String query, String fields)", "testcase": false, "constructor": false}, {"identifier": "downloadFile", "parameters": "(@NonNull String fileId, @NonNull File file)", "modifiers": "public", "return": "void", "signature": "void downloadFile(@NonNull String fileId, @NonNull File file)", "full_signature": "public void downloadFile(@NonNull String fileId, @NonNull File file)", "class_method_signature": "DriveHelper.downloadFile(@NonNull String fileId, @NonNull File file)", "testcase": false, "constructor": false}, {"identifier": "createOrGetIDOfSubmissionsFolder", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String createOrGetIDOfSubmissionsFolder()", "full_signature": "public String createOrGetIDOfSubmissionsFolder()", "class_method_signature": "DriveHelper.createOrGetIDOfSubmissionsFolder()", "testcase": false, "constructor": false}, {"identifier": "getIDOfFolderWithName", "parameters": "(@NonNull String name, @Nullable String inFolder, boolean shouldCreateIfNotFound)", "modifiers": "@Nullable public", "return": "String", "signature": "String getIDOfFolderWithName(@NonNull String name, @Nullable String inFolder, boolean shouldCreateIfNotFound)", "full_signature": "@Nullable public String getIDOfFolderWithName(@NonNull String name, @Nullable String inFolder, boolean shouldCreateIfNotFound)", "class_method_signature": "DriveHelper.getIDOfFolderWithName(@NonNull String name, @Nullable String inFolder, boolean shouldCreateIfNotFound)", "testcase": false, "constructor": false}, {"identifier": "uploadFileToDrive", "parameters": "(String mediaName, String destinationFolderID, File toUpload)", "modifiers": "public", "return": "String", "signature": "String uploadFileToDrive(String mediaName, String destinationFolderID, File toUpload)", "full_signature": "public String uploadFileToDrive(String mediaName, String destinationFolderID, File toUpload)", "class_method_signature": "DriveHelper.uploadFileToDrive(String mediaName, String destinationFolderID, File toUpload)", "testcase": false, "constructor": false}, {"identifier": "createFolderInDrive", "parameters": "(@NonNull String folderName,\n                                      @Nullable String parentId)", "modifiers": "public", "return": "String", "signature": "String createFolderInDrive(@NonNull String folderName,\n                                      @Nullable String parentId)", "full_signature": "public String createFolderInDrive(@NonNull String folderName,\n                                      @Nullable String parentId)", "class_method_signature": "DriveHelper.createFolderInDrive(@NonNull String folderName,\n                                      @Nullable String parentId)", "testcase": false, "constructor": false}, {"identifier": "createNewFile", "parameters": "(@NonNull String name,\n                                                                  @Nullable String mimeType,\n                                                                  @Nullable String parentId)", "modifiers": "public", "return": "com.google.api.services.drive.model.File", "signature": "com.google.api.services.drive.model.File createNewFile(@NonNull String name,\n                                                                  @Nullable String mimeType,\n                                                                  @Nullable String parentId)", "full_signature": "public com.google.api.services.drive.model.File createNewFile(@NonNull String name,\n                                                                  @Nullable String mimeType,\n                                                                  @Nullable String parentId)", "class_method_signature": "DriveHelper.createNewFile(@NonNull String name,\n                                                                  @Nullable String mimeType,\n                                                                  @Nullable String parentId)", "testcase": false, "constructor": false}, {"identifier": "setSharingPermissions", "parameters": "(String folderId)", "modifiers": "private", "return": "void", "signature": "void setSharingPermissions(String folderId)", "full_signature": "private void setSharingPermissions(String folderId)", "class_method_signature": "DriveHelper.setSharingPermissions(String folderId)", "testcase": false, "constructor": false}, {"identifier": "getFilesFromDrive", "parameters": "(\n            @Nullable String folderName,\n            @Nullable String parentId)", "modifiers": "public", "return": "List<com.google.api.services.drive.model.File>", "signature": "List<com.google.api.services.drive.model.File> getFilesFromDrive(\n            @Nullable String folderName,\n            @Nullable String parentId)", "full_signature": "public List<com.google.api.services.drive.model.File> getFilesFromDrive(\n            @Nullable String folderName,\n            @Nullable String parentId)", "class_method_signature": "DriveHelper.getFilesFromDrive(\n            @Nullable String folderName,\n            @Nullable String parentId)", "testcase": false, "constructor": false}, {"identifier": "generateSearchQuery", "parameters": "(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType)", "modifiers": "@Nullable public", "return": "String", "signature": "String generateSearchQuery(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType)", "full_signature": "@Nullable public String generateSearchQuery(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType)", "class_method_signature": "DriveHelper.generateSearchQuery(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType)", "testcase": false, "constructor": false}, {"identifier": "fetchFilesForCurrentPage", "parameters": "(Drive.Files.List request, List<com.google.api.services.drive.model.File> files)", "modifiers": "public", "return": "void", "signature": "void fetchFilesForCurrentPage(Drive.Files.List request, List<com.google.api.services.drive.model.File> files)", "full_signature": "public void fetchFilesForCurrentPage(Drive.Files.List request, List<com.google.api.services.drive.model.File> files)", "class_method_signature": "DriveHelper.fetchFilesForCurrentPage(Drive.Files.List request, List<com.google.api.services.drive.model.File> files)", "testcase": false, "constructor": false}], "file": "collect_app/src/main/java/org/odk/collect/android/utilities/gdrive/DriveHelper.java"}, "focal_method": {"identifier": "generateSearchQuery", "parameters": "(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType)", "modifiers": "@Nullable public", "return": "String", "body": "@Nullable\n    public String generateSearchQuery(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType) {\n        List<String> queryList = new ArrayList<>();\n        if (folderName != null) {\n            queryList.add(String.format(\"name = '%s'\", folderName));\n        }\n        if (parentId != null) {\n            queryList.add(String.format(\"'%s' in parents\", parentId));\n        }\n        if (mimeType != null) {\n            queryList.add(String.format(\"mimeType = '%s'\", mimeType));\n        }\n\n        if (queryList.isEmpty()) {\n            return null;\n        }\n\n        // this query prevents siteName searching the deleted files\n        queryList.add(\"trashed = false\");\n\n        StringBuilder query = new StringBuilder(queryList.get(0));\n        for (int i = 1; i < queryList.size(); i++) {\n            query.append(\" and \").append(queryList.get(i));\n        }\n\n        return query.toString();\n    }", "signature": "String generateSearchQuery(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType)", "full_signature": "@Nullable public String generateSearchQuery(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType)", "class_method_signature": "DriveHelper.generateSearchQuery(@Nullable String folderName,\n                                      @Nullable String parentId,\n                                      @Nullable String mimeType)", "testcase": false, "constructor": false, "invocations": ["add", "format", "add", "format", "add", "format", "isEmpty", "add", "get", "size", "append", "append", "get", "toString"]}, "repository": {"repo_id": 166636413, "url": "https://github.com/fieldsight/fieldsight-mobile", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 14, "size": 41030, "license": "licensed"}}