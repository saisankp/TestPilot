{"test_class": {"identifier": "TestSessionStorage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String sessionId;", "modifier": "private", "type": "String", "declarator": "sessionId", "var_name": "sessionId"}, {"original_string": "private SessionStorage<String> storage;", "modifier": "private", "type": "SessionStorage<String>", "declarator": "storage", "var_name": "storage"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/documentserver/schemestrategy/TestSessionStorage.java"}, "test_case": {"identifier": "testGetSessionIdentifier", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSessionIdentifier() {\n        final String id1 = storage.getSessionIdentifier(sessionId);\n        Assert.assertNotNull(id1);\n        final String id2 = storage.getSessionIdentifier(sessionId);\n        Assert.assertEquals(id1, id2);\n        final String sessionId3 = UUID.randomUUID().toString();\n        final String id3 = storage.getSessionIdentifier(sessionId3);\n        Assert.assertNotSame(id1, id3);\n        final String id4 = storage.getSessionIdentifier(null);\n        Assert.assertNull(\"expected tosessionId retrieve a null identifer\", id4);\n    }", "signature": "void testGetSessionIdentifier()", "full_signature": "@Test public void testGetSessionIdentifier()", "class_method_signature": "TestSessionStorage.testGetSessionIdentifier()", "testcase": true, "constructor": false, "invocations": ["getSessionIdentifier", "assertNotNull", "getSessionIdentifier", "assertEquals", "toString", "randomUUID", "getSessionIdentifier", "assertNotSame", "getSessionIdentifier", "assertNull"]}, "focal_class": {"identifier": "SessionStorage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER =\n            LogManager.getLogger(SessionStorage.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n            LogManager.getLogger(SessionStorage.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, T> sessions;", "modifier": "private final", "type": "Map<String, T>", "declarator": "sessions", "var_name": "sessions"}, {"original_string": "private final SessionIdentifierFactory<T> factory;", "modifier": "private final", "type": "SessionIdentifierFactory<T>", "declarator": "factory", "var_name": "factory"}], "methods": [{"identifier": "SessionStorage", "parameters": "(final SessionIdentifierFactory<T> identifierFactory)", "modifiers": "public", "return": "", "signature": " SessionStorage(final SessionIdentifierFactory<T> identifierFactory)", "full_signature": "public  SessionStorage(final SessionIdentifierFactory<T> identifierFactory)", "class_method_signature": "SessionStorage.SessionStorage(final SessionIdentifierFactory<T> identifierFactory)", "testcase": false, "constructor": true}, {"identifier": "getSessionIdentifier", "parameters": "(final String sessionId)", "modifiers": "public synchronized", "return": "T", "signature": "T getSessionIdentifier(final String sessionId)", "full_signature": "public synchronized T getSessionIdentifier(final String sessionId)", "class_method_signature": "SessionStorage.getSessionIdentifier(final String sessionId)", "testcase": false, "constructor": false}, {"identifier": "releaseSession", "parameters": "(final String sessionId)", "modifiers": "public synchronized", "return": "void", "signature": "void releaseSession(final String sessionId)", "full_signature": "public synchronized void releaseSession(final String sessionId)", "class_method_signature": "SessionStorage.releaseSession(final String sessionId)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/documentserver/schemestrategy/SessionStorage.java"}, "focal_method": {"identifier": "getSessionIdentifier", "parameters": "(final String sessionId)", "modifiers": "public synchronized", "return": "T", "body": "public synchronized T getSessionIdentifier(final String sessionId) {\n        if (sessionId == null) {\n            LOGGER.warn(\"No session given. Unable to determine a session\"\n                    + \" identifier\");\n            return null;\n        }\n        T identifier = sessions.get(sessionId);\n        if (identifier == null) {\n            identifier = factory.createSessionIdentifier(sessionId);\n            sessions.put(sessionId, identifier);\n        }\n        return identifier;\n    }", "signature": "T getSessionIdentifier(final String sessionId)", "full_signature": "public synchronized T getSessionIdentifier(final String sessionId)", "class_method_signature": "SessionStorage.getSessionIdentifier(final String sessionId)", "testcase": false, "constructor": false, "invocations": ["warn", "get", "createSessionIdentifier", "put"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}