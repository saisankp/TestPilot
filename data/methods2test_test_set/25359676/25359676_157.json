{"test_class": {"identifier": "KewTypeBoServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private KewTypeBoServiceImpl kewTypeBoService;", "modifier": "private", "type": "KewTypeBoServiceImpl", "declarator": "kewTypeBoService", "var_name": "kewTypeBoService"}, {"original_string": "@Mock private DataObjectService mockDataObjectService;", "modifier": "@Mock private", "type": "DataObjectService", "declarator": "mockDataObjectService", "var_name": "mockDataObjectService"}, {"original_string": "static Map<String, KewTypeBo> sampleTypes = new HashMap<String, KewTypeBo>();", "modifier": "static", "type": "Map<String, KewTypeBo>", "declarator": "sampleTypes = new HashMap<String, KewTypeBo>()", "var_name": "sampleTypes"}, {"original_string": "static Map<String, KewTypeBo> sampleTypesKeyedByName = new HashMap<String, KewTypeBo>();", "modifier": "static", "type": "Map<String, KewTypeBo>", "declarator": "sampleTypesKeyedByName = new HashMap<String, KewTypeBo>()", "var_name": "sampleTypesKeyedByName"}, {"original_string": "private static final String NAMESPACE = \"KEW_TEST\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE = \"KEW_TEST\"", "var_name": "NAMESPACE"}, {"original_string": "private static final String TYPE_ID = \"KC_MAP123\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_ID = \"KC_MAP123\"", "var_name": "TYPE_ID"}, {"original_string": "private static final String NAME = \"KC_UNIT\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"KC_UNIT\"", "var_name": "NAME"}, {"original_string": "private static final String SERVICE_NAME = \"kcUnitService\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_NAME = \"kcUnitService\"", "var_name": "SERVICE_NAME"}, {"original_string": "private static final String ATTR_ID_1 = \"UNIT_NUM\";", "modifier": "private static final", "type": "String", "declarator": "ATTR_ID_1 = \"UNIT_NUM\"", "var_name": "ATTR_ID_1"}, {"original_string": "private static final String UNIT_NUM_ATTR_DEF_ID = \"1000\";", "modifier": "private static final", "type": "String", "declarator": "UNIT_NUM_ATTR_DEF_ID = \"1000\"", "var_name": "UNIT_NUM_ATTR_DEF_ID"}, {"original_string": "private static final Integer SEQUENCE_NUMBER_1 = new Integer(1);", "modifier": "private static final", "type": "Integer", "declarator": "SEQUENCE_NUMBER_1 = new Integer(1)", "var_name": "SEQUENCE_NUMBER_1"}, {"original_string": "private static final String ATTR_ID_2 = \"CAMPUS\";", "modifier": "private static final", "type": "String", "declarator": "ATTR_ID_2 = \"CAMPUS\"", "var_name": "ATTR_ID_2"}, {"original_string": "private static final String CAMPUS_ATTR_DEF_ID = \"1002\";", "modifier": "private static final", "type": "String", "declarator": "CAMPUS_ATTR_DEF_ID = \"1002\"", "var_name": "CAMPUS_ATTR_DEF_ID"}, {"original_string": "private static final Integer SEQUENCE_NUMBER_2 = new Integer(2);", "modifier": "private static final", "type": "Integer", "declarator": "SEQUENCE_NUMBER_2 = new Integer(2)", "var_name": "SEQUENCE_NUMBER_2"}, {"original_string": "private static final String ATTR_ID_3 = \"NewAttr\";", "modifier": "private static final", "type": "String", "declarator": "ATTR_ID_3 = \"NewAttr\"", "var_name": "ATTR_ID_3"}, {"original_string": "private static final String NEW_ATTR_DEF_ID = \"1004\";", "modifier": "private static final", "type": "String", "declarator": "NEW_ATTR_DEF_ID = \"1004\"", "var_name": "NEW_ATTR_DEF_ID"}, {"original_string": "private static final Integer SEQUENCE_NUMBER_3 = new Integer(3);", "modifier": "private static final", "type": "Integer", "declarator": "SEQUENCE_NUMBER_3 = new Integer(3)", "var_name": "SEQUENCE_NUMBER_3"}, {"original_string": "private static final String ORG_NAME = \"ORG\";", "modifier": "private static final", "type": "String", "declarator": "ORG_NAME = \"ORG\"", "var_name": "ORG_NAME"}, {"original_string": "private static final String ORG_LABEL = \"Organization\";", "modifier": "private static final", "type": "String", "declarator": "ORG_LABEL = \"Organization\"", "var_name": "ORG_LABEL"}, {"original_string": "private static final String COMPONENT = \"someOrgComponent\";", "modifier": "private static final", "type": "String", "declarator": "COMPONENT = \"someOrgComponent\"", "var_name": "COMPONENT"}, {"original_string": "private static KewAttributeDefinition.Builder unitNumAttrDefn = KewAttributeDefinition.Builder.create(UNIT_NUM_ATTR_DEF_ID, \"testAttrDef1\", NAMESPACE);", "modifier": "private static", "type": "KewAttributeDefinition.Builder", "declarator": "unitNumAttrDefn = KewAttributeDefinition.Builder.create(UNIT_NUM_ATTR_DEF_ID, \"testAttrDef1\", NAMESPACE)", "var_name": "unitNumAttrDefn"}, {"original_string": "private static KewAttributeDefinition.Builder campusAttrDefn = KewAttributeDefinition.Builder.create(CAMPUS_ATTR_DEF_ID, \"testAttrDef2\", NAMESPACE);", "modifier": "private static", "type": "KewAttributeDefinition.Builder", "declarator": "campusAttrDefn = KewAttributeDefinition.Builder.create(CAMPUS_ATTR_DEF_ID, \"testAttrDef2\", NAMESPACE)", "var_name": "campusAttrDefn"}, {"original_string": "private static KewAttributeDefinition.Builder newAttrDefn = KewAttributeDefinition.Builder.create(NEW_ATTR_DEF_ID, \"testAttrDef3\", NAMESPACE);", "modifier": "private static", "type": "KewAttributeDefinition.Builder", "declarator": "newAttrDefn = KewAttributeDefinition.Builder.create(NEW_ATTR_DEF_ID, \"testAttrDef3\", NAMESPACE)", "var_name": "newAttrDefn"}, {"original_string": "private static KewTypeAttribute.Builder unitNumAttrBuilder = KewTypeAttribute.Builder.create(ATTR_ID_1, TYPE_ID, UNIT_NUM_ATTR_DEF_ID, SEQUENCE_NUMBER_1).attributeDefinition(unitNumAttrDefn);", "modifier": "private static", "type": "KewTypeAttribute.Builder", "declarator": "unitNumAttrBuilder = KewTypeAttribute.Builder.create(ATTR_ID_1, TYPE_ID, UNIT_NUM_ATTR_DEF_ID, SEQUENCE_NUMBER_1).attributeDefinition(unitNumAttrDefn)", "var_name": "unitNumAttrBuilder"}, {"original_string": "private static KewTypeAttribute.Builder campusAttrBuilder = KewTypeAttribute.Builder.create(ATTR_ID_2, TYPE_ID, CAMPUS_ATTR_DEF_ID, SEQUENCE_NUMBER_2).attributeDefinition(campusAttrDefn);", "modifier": "private static", "type": "KewTypeAttribute.Builder", "declarator": "campusAttrBuilder = KewTypeAttribute.Builder.create(ATTR_ID_2, TYPE_ID, CAMPUS_ATTR_DEF_ID, SEQUENCE_NUMBER_2).attributeDefinition(campusAttrDefn)", "var_name": "campusAttrBuilder"}, {"original_string": "private static KewTypeAttribute newAttr = KewTypeAttribute.Builder.create(ATTR_ID_3, TYPE_ID, NEW_ATTR_DEF_ID, SEQUENCE_NUMBER_3).attributeDefinition(newAttrDefn).build();", "modifier": "private static", "type": "KewTypeAttribute", "declarator": "newAttr = KewTypeAttribute.Builder.create(ATTR_ID_3, TYPE_ID, NEW_ATTR_DEF_ID, SEQUENCE_NUMBER_3).attributeDefinition(newAttrDefn).build()", "var_name": "newAttr"}, {"original_string": "private static List<KewTypeAttribute.Builder> attrs = Arrays.asList(unitNumAttrBuilder, campusAttrBuilder);", "modifier": "private static", "type": "List<KewTypeAttribute.Builder>", "declarator": "attrs = Arrays.asList(unitNumAttrBuilder, campusAttrBuilder)", "var_name": "attrs"}, {"original_string": "private static KewTypeDefinition TEST_KEW_TYPE_DEF = KewTypeDefinition.Builder.create(TYPE_ID, NAME, NAMESPACE).serviceName(SERVICE_NAME).attributes(attrs).build();", "modifier": "private static", "type": "KewTypeDefinition", "declarator": "TEST_KEW_TYPE_DEF = KewTypeDefinition.Builder.create(TYPE_ID, NAME, NAMESPACE).serviceName(SERVICE_NAME).attributes(attrs).build()", "var_name": "TEST_KEW_TYPE_DEF"}, {"original_string": "private static KewTypeBo TEST_KEW_TYPE_BO = KewTypeBo.from(TEST_KEW_TYPE_DEF);", "modifier": "private static", "type": "KewTypeBo", "declarator": "TEST_KEW_TYPE_BO = KewTypeBo.from(TEST_KEW_TYPE_DEF)", "var_name": "TEST_KEW_TYPE_BO"}, {"original_string": "private static KewTypeAttributeBo TEST_KEW_TYPE_ATTRIBUTE_BO = KewTypeAttributeBo.from(newAttr, TEST_KEW_TYPE_BO);", "modifier": "private static", "type": "KewTypeAttributeBo", "declarator": "TEST_KEW_TYPE_ATTRIBUTE_BO = KewTypeAttributeBo.from(newAttr, TEST_KEW_TYPE_BO)", "var_name": "TEST_KEW_TYPE_ATTRIBUTE_BO"}], "file": "rice-middleware/impl/src/test/java/org/kuali/rice/kew/impl/repository/KewTypeBoServiceImplTest.java"}, "test_case": {"identifier": "test_createKewTypeAttribute_null_input", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void test_createKewTypeAttribute_null_input() {\n        getKewTypeBoService().createKewTypeAttribute(null);\n    }", "signature": "void test_createKewTypeAttribute_null_input()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void test_createKewTypeAttribute_null_input()", "class_method_signature": "KewTypeBoServiceImplTest.test_createKewTypeAttribute_null_input()", "testcase": true, "constructor": false, "invocations": ["createKewTypeAttribute", "getKewTypeBoService"]}, "focal_class": {"identifier": "KewTypeBoServiceImpl", "superclass": "", "interfaces": "implements KewTypeRepositoryService", "fields": [{"original_string": "private DataObjectService dataObjectService;", "modifier": "private", "type": "DataObjectService", "declarator": "dataObjectService", "var_name": "dataObjectService"}], "methods": [{"identifier": "createKewType", "parameters": "(KewTypeDefinition kewType)", "modifiers": "@Override public", "return": "KewTypeDefinition", "signature": "KewTypeDefinition createKewType(KewTypeDefinition kewType)", "full_signature": "@Override public KewTypeDefinition createKewType(KewTypeDefinition kewType)", "class_method_signature": "KewTypeBoServiceImpl.createKewType(KewTypeDefinition kewType)", "testcase": false, "constructor": false}, {"identifier": "updateKewType", "parameters": "(KewTypeDefinition kewType)", "modifiers": "@Override public", "return": "void", "signature": "void updateKewType(KewTypeDefinition kewType)", "full_signature": "@Override public void updateKewType(KewTypeDefinition kewType)", "class_method_signature": "KewTypeBoServiceImpl.updateKewType(KewTypeDefinition kewType)", "testcase": false, "constructor": false}, {"identifier": "getTypeById", "parameters": "(final String id)", "modifiers": "@Override public", "return": "KewTypeDefinition", "signature": "KewTypeDefinition getTypeById(final String id)", "full_signature": "@Override public KewTypeDefinition getTypeById(final String id)", "class_method_signature": "KewTypeBoServiceImpl.getTypeById(final String id)", "testcase": false, "constructor": false}, {"identifier": "getTypeByNameAndNamespace", "parameters": "(final String name, final String namespace)", "modifiers": "@Override public", "return": "KewTypeDefinition", "signature": "KewTypeDefinition getTypeByNameAndNamespace(final String name, final String namespace)", "full_signature": "@Override public KewTypeDefinition getTypeByNameAndNamespace(final String name, final String namespace)", "class_method_signature": "KewTypeBoServiceImpl.getTypeByNameAndNamespace(final String name, final String namespace)", "testcase": false, "constructor": false}, {"identifier": "findAllTypesByNamespace", "parameters": "(final String namespace)", "modifiers": "@Override public", "return": "List<KewTypeDefinition>", "signature": "List<KewTypeDefinition> findAllTypesByNamespace(final String namespace)", "full_signature": "@Override public List<KewTypeDefinition> findAllTypesByNamespace(final String namespace)", "class_method_signature": "KewTypeBoServiceImpl.findAllTypesByNamespace(final String namespace)", "testcase": false, "constructor": false}, {"identifier": "findAllTypes", "parameters": "()", "modifiers": "@Override public", "return": "List<KewTypeDefinition>", "signature": "List<KewTypeDefinition> findAllTypes()", "full_signature": "@Override public List<KewTypeDefinition> findAllTypes()", "class_method_signature": "KewTypeBoServiceImpl.findAllTypes()", "testcase": false, "constructor": false}, {"identifier": "setDataObjectService", "parameters": "(final DataObjectService dataObjectService)", "modifiers": "public", "return": "void", "signature": "void setDataObjectService(final DataObjectService dataObjectService)", "full_signature": "public void setDataObjectService(final DataObjectService dataObjectService)", "class_method_signature": "KewTypeBoServiceImpl.setDataObjectService(final DataObjectService dataObjectService)", "testcase": false, "constructor": false}, {"identifier": "convertListOfBosToImmutables", "parameters": "(final Collection<KewTypeBo> kewTypeBos)", "modifiers": "", "return": "List<KewTypeDefinition>", "signature": "List<KewTypeDefinition> convertListOfBosToImmutables(final Collection<KewTypeBo> kewTypeBos)", "full_signature": " List<KewTypeDefinition> convertListOfBosToImmutables(final Collection<KewTypeBo> kewTypeBos)", "class_method_signature": "KewTypeBoServiceImpl.convertListOfBosToImmutables(final Collection<KewTypeBo> kewTypeBos)", "testcase": false, "constructor": false}, {"identifier": "createKewTypeAttribute", "parameters": "(KewTypeAttribute kewTypeAttribute)", "modifiers": "@Override public", "return": "void", "signature": "void createKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "full_signature": "@Override public void createKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "class_method_signature": "KewTypeBoServiceImpl.createKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "testcase": false, "constructor": false}, {"identifier": "updateKewTypeAttribute", "parameters": "(KewTypeAttribute kewTypeAttribute)", "modifiers": "@Override public", "return": "void", "signature": "void updateKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "full_signature": "@Override public void updateKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "class_method_signature": "KewTypeBoServiceImpl.updateKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "testcase": false, "constructor": false}], "file": "rice-middleware/impl/src/main/java/org/kuali/rice/kew/impl/repository/KewTypeBoServiceImpl.java"}, "focal_method": {"identifier": "createKewTypeAttribute", "parameters": "(KewTypeAttribute kewTypeAttribute)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void createKewTypeAttribute(KewTypeAttribute kewTypeAttribute) {\n        if (kewTypeAttribute == null){\n            throw new RiceIllegalArgumentException(\"kewTypeAttribute is null\");\n        }\n\n        KewTypeAttributeBo existing = dataObjectService.find(KewTypeAttributeBo.class, kewTypeAttribute);\n\n        if (null != existing && kewTypeAttribute.getTypeId().equals(existing.getTypeId()) &&\n                kewTypeAttribute.getAttributeDefinitionId().equals(existing.getAttributeDefinitionId())) {\n\n            throw new RiceIllegalStateException(\"The KEW Type Attribute to create already exists: \" + kewTypeAttribute);\n        }\n        KewTypeBo kewType = null;\n        if (kewTypeAttribute.getTypeId() != null) {\n            kewType = dataObjectService.find(KewTypeBo.class, kewTypeAttribute.getTypeId());\n        }\n\n        dataObjectService.save(KewTypeAttributeBo.from(kewTypeAttribute, kewType));\n    }", "signature": "void createKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "full_signature": "@Override public void createKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "class_method_signature": "KewTypeBoServiceImpl.createKewTypeAttribute(KewTypeAttribute kewTypeAttribute)", "testcase": false, "constructor": false, "invocations": ["find", "equals", "getTypeId", "getTypeId", "equals", "getAttributeDefinitionId", "getAttributeDefinitionId", "getTypeId", "find", "getTypeId", "save", "from"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}