{"test_class": {"identifier": "PropertyFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/PropertyFacadeTest.java"}, "test_case": {"identifier": "testROSetValueBinary", "parameters": "()", "modifiers": "@Test(expected = ListenerReadOnlyException.class) public", "return": "void", "body": "@Test(expected = ListenerReadOnlyException.class)\n    public void testROSetValueBinary() throws Exception {\n        PropertyFacade<Session> facade = getFacade(mock(Property.class));\n        facade.setValue((Binary) null);\n    }", "signature": "void testROSetValueBinary()", "full_signature": "@Test(expected = ListenerReadOnlyException.class) public void testROSetValueBinary()", "class_method_signature": "PropertyFacadeTest.testROSetValueBinary()", "testcase": true, "constructor": false, "invocations": ["getFacade", "mock", "setValue"]}, "focal_class": {"identifier": "PropertyFacade", "superclass": "extends ItemFacade<Property, S>", "interfaces": "implements Property", "fields": [], "methods": [{"identifier": "PropertyFacade", "parameters": "(final @NotNull Property delegate,\n                          final @NotNull SessionFacade<S> session)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " PropertyFacade(final @NotNull Property delegate,\n                          final @NotNull SessionFacade<S> session)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  PropertyFacade(final @NotNull Property delegate,\n                          final @NotNull SessionFacade<S> session)", "class_method_signature": "PropertyFacade.PropertyFacade(final @NotNull Property delegate,\n                          final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Value", "signature": "Value getValue()", "full_signature": "@Override public Value getValue()", "class_method_signature": "PropertyFacade.getValue()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "@Override public", "return": "Value[]", "signature": "Value[] getValues()", "full_signature": "@Override public Value[] getValues()", "class_method_signature": "PropertyFacade.getValues()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getString()", "full_signature": "@Override public String getString()", "class_method_signature": "PropertyFacade.getString()", "testcase": false, "constructor": false}, {"identifier": "getStream", "parameters": "()", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public", "return": "InputStream", "signature": "InputStream getStream()", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public InputStream getStream()", "class_method_signature": "PropertyFacade.getStream()", "testcase": false, "constructor": false}, {"identifier": "getBinary", "parameters": "()", "modifiers": "@Override public", "return": "Binary", "signature": "Binary getBinary()", "full_signature": "@Override public Binary getBinary()", "class_method_signature": "PropertyFacade.getBinary()", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLong()", "full_signature": "@Override public long getLong()", "class_method_signature": "PropertyFacade.getLong()", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double getDouble()", "full_signature": "@Override public double getDouble()", "class_method_signature": "PropertyFacade.getDouble()", "testcase": false, "constructor": false}, {"identifier": "getDecimal", "parameters": "()", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal getDecimal()", "full_signature": "@Override public BigDecimal getDecimal()", "class_method_signature": "PropertyFacade.getDecimal()", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "@Override public", "return": "Calendar", "signature": "Calendar getDate()", "full_signature": "@Override public Calendar getDate()", "class_method_signature": "PropertyFacade.getDate()", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getBoolean()", "full_signature": "@Override public boolean getBoolean()", "class_method_signature": "PropertyFacade.getBoolean()", "testcase": false, "constructor": false}, {"identifier": "getNode", "parameters": "()", "modifiers": "@Override public", "return": "Node", "signature": "Node getNode()", "full_signature": "@Override public Node getNode()", "class_method_signature": "PropertyFacade.getNode()", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "()", "modifiers": "@Override public", "return": "Property", "signature": "Property getProperty()", "full_signature": "@Override public Property getProperty()", "class_method_signature": "PropertyFacade.getProperty()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLength()", "full_signature": "@Override public long getLength()", "class_method_signature": "PropertyFacade.getLength()", "testcase": false, "constructor": false}, {"identifier": "getLengths", "parameters": "()", "modifiers": "@Override public", "return": "long[]", "signature": "long[] getLengths()", "full_signature": "@Override public long[] getLengths()", "class_method_signature": "PropertyFacade.getLengths()", "testcase": false, "constructor": false}, {"identifier": "getDefinition", "parameters": "()", "modifiers": "@Override public", "return": "PropertyDefinition", "signature": "PropertyDefinition getDefinition()", "full_signature": "@Override public PropertyDefinition getDefinition()", "class_method_signature": "PropertyFacade.getDefinition()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getType()", "full_signature": "@Override public int getType()", "class_method_signature": "PropertyFacade.getType()", "testcase": false, "constructor": false}, {"identifier": "isMultiple", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isMultiple()", "full_signature": "@Override public boolean isMultiple()", "class_method_signature": "PropertyFacade.isMultiple()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Value value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(Value value)", "full_signature": "@Override public void setValue(Value value)", "class_method_signature": "PropertyFacade.setValue(Value value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Value[] values)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(Value[] values)", "full_signature": "@Override public void setValue(Value[] values)", "class_method_signature": "PropertyFacade.setValue(Value[] values)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(String value)", "full_signature": "@Override public void setValue(String value)", "class_method_signature": "PropertyFacade.setValue(String value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String[] values)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(String[] values)", "full_signature": "@Override public void setValue(String[] values)", "class_method_signature": "PropertyFacade.setValue(String[] values)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(InputStream value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(InputStream value)", "full_signature": "@Override public void setValue(InputStream value)", "class_method_signature": "PropertyFacade.setValue(InputStream value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Binary value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(Binary value)", "full_signature": "@Override public void setValue(Binary value)", "class_method_signature": "PropertyFacade.setValue(Binary value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(long value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(long value)", "full_signature": "@Override public void setValue(long value)", "class_method_signature": "PropertyFacade.setValue(long value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(double value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(double value)", "full_signature": "@Override public void setValue(double value)", "class_method_signature": "PropertyFacade.setValue(double value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(BigDecimal value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(BigDecimal value)", "full_signature": "@Override public void setValue(BigDecimal value)", "class_method_signature": "PropertyFacade.setValue(BigDecimal value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Calendar value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(Calendar value)", "full_signature": "@Override public void setValue(Calendar value)", "class_method_signature": "PropertyFacade.setValue(Calendar value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(boolean value)", "full_signature": "@Override public void setValue(boolean value)", "class_method_signature": "PropertyFacade.setValue(boolean value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Node value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(Node value)", "full_signature": "@Override public void setValue(Node value)", "class_method_signature": "PropertyFacade.setValue(Node value)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/PropertyFacade.java"}, "focal_method": {"identifier": "setValue", "parameters": "(Value value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setValue(Value value) throws RepositoryException {\n        throw new ListenerReadOnlyException();\n    }", "signature": "void setValue(Value value)", "full_signature": "@Override public void setValue(Value value)", "class_method_signature": "PropertyFacade.setValue(Value value)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}