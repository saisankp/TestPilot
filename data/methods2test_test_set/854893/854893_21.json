{"test_class": {"identifier": "ArrayCodecFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AnnotatedElement metadata;", "modifier": "@Mock\n    private", "type": "AnnotatedElement", "declarator": "metadata", "var_name": "metadata"}, {"original_string": "@Mock\n    private BoundList boundList;", "modifier": "@Mock\n    private", "type": "BoundList", "declarator": "boundList", "var_name": "boundList"}, {"original_string": "@Mock\n    private CodecFactory delegate;", "modifier": "@Mock\n    private", "type": "CodecFactory", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "@Mock\n    private ResolverContext context;", "modifier": "@Mock\n    private", "type": "ResolverContext", "declarator": "context", "var_name": "context"}, {"original_string": "private ArrayCodecFactory factory;", "modifier": "private", "type": "ArrayCodecFactory", "declarator": "factory", "var_name": "factory"}], "file": "preon-binding/src/test/java/org/codehaus/preon/codec/ArrayCodecFactoryTest.java"}, "test_case": {"identifier": "shouldNotTryToReturnCodecInCaseSizeUndefined", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotTryToReturnCodecInCaseSizeUndefined() {\n        Object array = new byte[0];\n        Class<?> type = array.getClass();\n        when(metadata.getAnnotation(BoundList.class)).thenReturn(boundList);\n        when(boundList.size()).thenReturn(\"\");\n        assertThat(factory.create(metadata, type, context), is(nullValue()));\n    }", "signature": "void shouldNotTryToReturnCodecInCaseSizeUndefined()", "full_signature": "@Test public void shouldNotTryToReturnCodecInCaseSizeUndefined()", "class_method_signature": "ArrayCodecFactoryTest.shouldNotTryToReturnCodecInCaseSizeUndefined()", "testcase": true, "constructor": false, "invocations": ["getClass", "thenReturn", "when", "getAnnotation", "thenReturn", "when", "size", "assertThat", "create", "is", "nullValue"]}, "focal_class": {"identifier": "ArrayCodecFactory", "superclass": "", "interfaces": "implements CodecFactory", "fields": [{"original_string": "private CodecFactory factory;", "modifier": "private", "type": "CodecFactory", "declarator": "factory", "var_name": "factory"}], "methods": [{"identifier": "ArrayCodecFactory", "parameters": "(CodecFactory delegate)", "modifiers": "public", "return": "", "signature": " ArrayCodecFactory(CodecFactory delegate)", "full_signature": "public  ArrayCodecFactory(CodecFactory delegate)", "class_method_signature": "ArrayCodecFactory.ArrayCodecFactory(CodecFactory delegate)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Codec<T>", "signature": "Codec<T> create(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context)", "full_signature": "@SuppressWarnings(\"unchecked\") public Codec<T> create(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context)", "class_method_signature": "ArrayCodecFactory.create(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context)", "testcase": false, "constructor": false}, {"identifier": "getObjectSettings", "parameters": "(final BoundList settings)", "modifiers": "private", "return": "BoundObject", "signature": "BoundObject getObjectSettings(final BoundList settings)", "full_signature": "private BoundObject getObjectSettings(final BoundList settings)", "class_method_signature": "ArrayCodecFactory.getObjectSettings(final BoundList settings)", "testcase": false, "constructor": false}, {"identifier": "getSizeExpression", "parameters": "(\n            BoundList listSettings, ResolverContext context)", "modifiers": "private", "return": "Expression<Integer, Resolver>", "signature": "Expression<Integer, Resolver> getSizeExpression(\n            BoundList listSettings, ResolverContext context)", "full_signature": "private Expression<Integer, Resolver> getSizeExpression(\n            BoundList listSettings, ResolverContext context)", "class_method_signature": "ArrayCodecFactory.getSizeExpression(\n            BoundList listSettings, ResolverContext context)", "testcase": false, "constructor": false}], "file": "preon-binding/src/main/java/org/codehaus/preon/codec/ArrayCodecFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Codec<T>", "body": "@SuppressWarnings(\"unchecked\")\n    public <T> Codec<T> create(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context) {\n        BoundList settings = null;\n        if (metadata != null\n                && (settings = metadata.getAnnotation(BoundList.class)) != null\n                && type.isArray()\n                && settings.size() != null\n                && settings.size().length() != 0) {\n            Expression<Integer, Resolver> expr = getSizeExpression(settings,\n                    context);\n            Codec<Object> elementCodec = null;\n            if (type.getComponentType().isPrimitive()) {\n                elementCodec = (Codec<Object>) factory.create(null, type\n                        .getComponentType(), context);\n            } else {\n                BoundObject objectSettings = getObjectSettings(settings);\n                elementCodec = (Codec<Object>) factory.create(\n                        new AnnotationWrapper(objectSettings), type\n                                .getComponentType(), context);\n            }\n            return (Codec<T>) new ArrayCodec(expr, elementCodec, type);\n        } else {\n            return null;\n        }\n\n    }", "signature": "Codec<T> create(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context)", "full_signature": "@SuppressWarnings(\"unchecked\") public Codec<T> create(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context)", "class_method_signature": "ArrayCodecFactory.create(AnnotatedElement metadata, Class<T> type,\n                               ResolverContext context)", "testcase": false, "constructor": false, "invocations": ["getAnnotation", "isArray", "size", "length", "size", "getSizeExpression", "isPrimitive", "getComponentType", "create", "getComponentType", "getObjectSettings", "create", "getComponentType"]}, "repository": {"repo_id": 854893, "url": "https://github.com/preon/preon", "language": "Java", "is_fork": false, "fork_count": 78, "stargazer_count": 155, "size": 2459, "license": "licensed"}}