{"test_class": {"identifier": "ConsumerGroupOffsetsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ObjectMapper objectMapper;", "modifier": "@Autowired\n    private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}], "file": "kafka-webview-ui/src/test/java/org/sourcelab/kafka/webview/ui/manager/kafka/dto/ConsumerGroupOffsetsTest.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSerialization() throws JsonProcessingException {\n        // Define our expected output.\n        final String expectedResult = \"{\\\"consumerId\\\":\\\"MyConsumerId\\\",\\\"topics\\\":[{\\\"topic\\\":\\\"topic-a\\\",\\\"partitions\\\":[0,1],\\\"offsets\\\":[{\\\"partition\\\":0,\\\"offset\\\":0},{\\\"partition\\\":1,\\\"offset\\\":1}]},{\\\"topic\\\":\\\"topic-b\\\",\\\"partitions\\\":[0,1],\\\"offsets\\\":[{\\\"partition\\\":0,\\\"offset\\\":2},{\\\"partition\\\":1,\\\"offset\\\":3}]}],\\\"topicNames\\\":[\\\"topic-a\\\",\\\"topic-b\\\"]}\";\n\n        final ConsumerGroupOffsets offsets = ConsumerGroupOffsets.newBuilder()\n            .withConsumerId(\"MyConsumerId\")\n            .withOffset(\"topic-a\", 0, 0)\n            .withOffset(\"topic-a\", 1, 1)\n            .withOffset(\"topic-b\", 0, 2)\n            .withOffset(\"topic-b\", 1, 3)\n            .build();\n\n        // Now attempt to serialize\n        assertTrue(\"Should be able to serialize\", objectMapper.canSerialize(ConsumerGroupOffsets.class));\n\n        // Attempt to serialize\n        final String result = objectMapper.writeValueAsString(offsets);\n\n        // Validate\n        assertEquals(\"Should have expected serialized value\", expectedResult, result);\n    }", "signature": "void testSerialization()", "full_signature": "@Test public void testSerialization()", "class_method_signature": "ConsumerGroupOffsetsTest.testSerialization()", "testcase": true, "constructor": false, "invocations": ["build", "withOffset", "withOffset", "withOffset", "withOffset", "withConsumerId", "newBuilder", "assertTrue", "canSerialize", "writeValueAsString", "assertEquals"]}, "focal_class": {"identifier": "ConsumerGroupOffsets", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String consumerId;", "modifier": "private final", "type": "String", "declarator": "consumerId", "var_name": "consumerId"}, {"original_string": "private final Map<String, ConsumerGroupTopicOffsets> topics;", "modifier": "private final", "type": "Map<String, ConsumerGroupTopicOffsets>", "declarator": "topics", "var_name": "topics"}], "methods": [{"identifier": "ConsumerGroupOffsets", "parameters": "(final String consumerId, final Map<String, ConsumerGroupTopicOffsets> topics)", "modifiers": "public", "return": "", "signature": " ConsumerGroupOffsets(final String consumerId, final Map<String, ConsumerGroupTopicOffsets> topics)", "full_signature": "public  ConsumerGroupOffsets(final String consumerId, final Map<String, ConsumerGroupTopicOffsets> topics)", "class_method_signature": "ConsumerGroupOffsets.ConsumerGroupOffsets(final String consumerId, final Map<String, ConsumerGroupTopicOffsets> topics)", "testcase": false, "constructor": true}, {"identifier": "getConsumerId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getConsumerId()", "full_signature": "public String getConsumerId()", "class_method_signature": "ConsumerGroupOffsets.getConsumerId()", "testcase": false, "constructor": false}, {"identifier": "getTopicNames", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getTopicNames()", "full_signature": "public Collection<String> getTopicNames()", "class_method_signature": "ConsumerGroupOffsets.getTopicNames()", "testcase": false, "constructor": false}, {"identifier": "getTopics", "parameters": "()", "modifiers": "public", "return": "List<ConsumerGroupTopicOffsets>", "signature": "List<ConsumerGroupTopicOffsets> getTopics()", "full_signature": "public List<ConsumerGroupTopicOffsets> getTopics()", "class_method_signature": "ConsumerGroupOffsets.getTopics()", "testcase": false, "constructor": false}, {"identifier": "getOffsetsForTopic", "parameters": "(final String topicName)", "modifiers": "public", "return": "ConsumerGroupTopicOffsets", "signature": "ConsumerGroupTopicOffsets getOffsetsForTopic(final String topicName)", "full_signature": "public ConsumerGroupTopicOffsets getOffsetsForTopic(final String topicName)", "class_method_signature": "ConsumerGroupOffsets.getOffsetsForTopic(final String topicName)", "testcase": false, "constructor": false}, {"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newBuilder()", "full_signature": "public static Builder newBuilder()", "class_method_signature": "ConsumerGroupOffsets.newBuilder()", "testcase": false, "constructor": false}], "file": "kafka-webview-ui/src/main/java/org/sourcelab/kafka/webview/ui/manager/kafka/dto/ConsumerGroupOffsets.java"}, "focal_method": {"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder newBuilder() {\n        return new Builder();\n    }", "signature": "Builder newBuilder()", "full_signature": "public static Builder newBuilder()", "class_method_signature": "ConsumerGroupOffsets.newBuilder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 106082622, "url": "https://github.com/SourceLabOrg/kafka-webview", "stars": 256, "created": "10/7/2017 8:28:45 AM +00:00", "updates": "2020-01-25T06:02:44+00:00", "fork": "False", "license": "licensed"}}