{"test_class": {"identifier": "ParameterNameSanitizerTest", "superclass": "", "interfaces": "", "fields": [], "file": "inputvalidation/src/test/java/com/switchfly/inputvalidation/sanitizer/ParameterNameSanitizerTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws Exception {\n        ParameterNameSanitizer parameterNameSanitizer = new ParameterNameSanitizer();\n        assertEquals(\"Abc-12_4\", parameterNameSanitizer.execute(\"Abc-12_4\"));\n        assertEquals(\"Abc-12_4\", parameterNameSanitizer.execute(\"Abc-1 2_4\"));\n        assertEquals(\"Abc-12_4\", parameterNameSanitizer.execute(\"Abc-12_4!\"));\n        assertEquals(\"Abc-12_4\", parameterNameSanitizer.execute(\"?Ab\\\"c-'12_4!\"));\n        assertEquals(\"script\", parameterNameSanitizer.execute(\"<script>\"));\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "ParameterNameSanitizerTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute"]}, "focal_class": {"identifier": "ParameterNameSanitizer", "superclass": "", "interfaces": "implements Sanitizer<String>", "fields": [{"original_string": "private static final Pattern PATTERN = Pattern.compile(\"[^\\\\w_-]\");", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(\"[^\\\\w_-]\")", "var_name": "PATTERN"}], "methods": [{"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "String", "signature": "String execute(String content)", "full_signature": "@Override public String execute(String content)", "class_method_signature": "ParameterNameSanitizer.execute(String content)", "testcase": false, "constructor": false}], "file": "inputvalidation/src/main/java/com/switchfly/inputvalidation/sanitizer/ParameterNameSanitizer.java"}, "focal_method": {"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String execute(String content) {\n        if (StringUtils.isBlank(content)) {\n            return content;\n        }\n        return PATTERN.matcher(content).replaceAll(\"\");\n    }", "signature": "String execute(String content)", "full_signature": "@Override public String execute(String content)", "class_method_signature": "ParameterNameSanitizer.execute(String content)", "testcase": false, "constructor": false, "invocations": ["isBlank", "replaceAll", "matcher"]}, "repository": {"repo_id": 5622726, "url": "https://github.com/switchfly/switchfly-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 752, "license": "licensed"}}