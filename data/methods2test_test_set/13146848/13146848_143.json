{"test_class": {"identifier": "SplitByOutlineLevelParametersTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/parameter/SplitByOutlineLevelParametersTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        SplitByOutlineLevelParameters eq1 = new SplitByOutlineLevelParameters(10);\n        SplitByOutlineLevelParameters eq2 = new SplitByOutlineLevelParameters(10);\n        SplitByOutlineLevelParameters eq3 = new SplitByOutlineLevelParameters(10);\n        SplitByOutlineLevelParameters diff = new SplitByOutlineLevelParameters(1);\n        diff.setOutputPrefix(\"prefix\");\n        diff.setMatchingTitleRegEx(\"string\");\n        diff.setOptimizationPolicy(OptimizationPolicy.AUTO);\n        TestUtils.testEqualsAndHashCodes(eq1, eq2, eq3, diff);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "SplitByOutlineLevelParametersTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["setOutputPrefix", "setMatchingTitleRegEx", "setOptimizationPolicy", "testEqualsAndHashCodes"]}, "focal_class": {"identifier": "SplitByOutlineLevelParameters", "superclass": "extends MultiplePdfSourceMultipleOutputParameters", "interfaces": "implements OptimizableOutputTaskParameters, DiscardableOutlineTaskParameters", "fields": [{"original_string": "@Min(1)\n    private int levelToSplitAt;", "modifier": "@Min(1)\n    private", "type": "int", "declarator": "levelToSplitAt", "var_name": "levelToSplitAt"}, {"original_string": "private String matchingTitleRegEx;", "modifier": "private", "type": "String", "declarator": "matchingTitleRegEx", "var_name": "matchingTitleRegEx"}, {"original_string": "@NotNull\n    private OptimizationPolicy optimizationPolicy = OptimizationPolicy.NO;", "modifier": "@NotNull\n    private", "type": "OptimizationPolicy", "declarator": "optimizationPolicy = OptimizationPolicy.NO", "var_name": "optimizationPolicy"}, {"original_string": "private boolean discardOutline = false;", "modifier": "private", "type": "boolean", "declarator": "discardOutline = false", "var_name": "discardOutline"}], "methods": [{"identifier": "getOptimizationPolicy", "parameters": "()", "modifiers": "@Override public", "return": "OptimizationPolicy", "signature": "OptimizationPolicy getOptimizationPolicy()", "full_signature": "@Override public OptimizationPolicy getOptimizationPolicy()", "class_method_signature": "SplitByOutlineLevelParameters.getOptimizationPolicy()", "testcase": false, "constructor": false}, {"identifier": "setOptimizationPolicy", "parameters": "(OptimizationPolicy optimizationPolicy)", "modifiers": "@Override public", "return": "void", "signature": "void setOptimizationPolicy(OptimizationPolicy optimizationPolicy)", "full_signature": "@Override public void setOptimizationPolicy(OptimizationPolicy optimizationPolicy)", "class_method_signature": "SplitByOutlineLevelParameters.setOptimizationPolicy(OptimizationPolicy optimizationPolicy)", "testcase": false, "constructor": false}, {"identifier": "discardOutline", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean discardOutline()", "full_signature": "@Override public boolean discardOutline()", "class_method_signature": "SplitByOutlineLevelParameters.discardOutline()", "testcase": false, "constructor": false}, {"identifier": "discardOutline", "parameters": "(boolean discardOutline)", "modifiers": "@Override public", "return": "void", "signature": "void discardOutline(boolean discardOutline)", "full_signature": "@Override public void discardOutline(boolean discardOutline)", "class_method_signature": "SplitByOutlineLevelParameters.discardOutline(boolean discardOutline)", "testcase": false, "constructor": false}, {"identifier": "SplitByOutlineLevelParameters", "parameters": "(int levelToSplitAt)", "modifiers": "public", "return": "", "signature": " SplitByOutlineLevelParameters(int levelToSplitAt)", "full_signature": "public  SplitByOutlineLevelParameters(int levelToSplitAt)", "class_method_signature": "SplitByOutlineLevelParameters.SplitByOutlineLevelParameters(int levelToSplitAt)", "testcase": false, "constructor": true}, {"identifier": "getLevelToSplitAt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLevelToSplitAt()", "full_signature": "public int getLevelToSplitAt()", "class_method_signature": "SplitByOutlineLevelParameters.getLevelToSplitAt()", "testcase": false, "constructor": false}, {"identifier": "getMatchingTitleRegEx", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMatchingTitleRegEx()", "full_signature": "public String getMatchingTitleRegEx()", "class_method_signature": "SplitByOutlineLevelParameters.getMatchingTitleRegEx()", "testcase": false, "constructor": false}, {"identifier": "setMatchingTitleRegEx", "parameters": "(String matchingTitleRegEx)", "modifiers": "public", "return": "void", "signature": "void setMatchingTitleRegEx(String matchingTitleRegEx)", "full_signature": "public void setMatchingTitleRegEx(String matchingTitleRegEx)", "class_method_signature": "SplitByOutlineLevelParameters.setMatchingTitleRegEx(String matchingTitleRegEx)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SplitByOutlineLevelParameters.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SplitByOutlineLevelParameters.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SplitByOutlineLevelParameters.equals(Object other)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/parameter/SplitByOutlineLevelParameters.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (!(other instanceof SplitByOutlineLevelParameters)) {\n            return false;\n        }\n        SplitByOutlineLevelParameters parameter = (SplitByOutlineLevelParameters) other;\n        return new EqualsBuilder().appendSuper(super.equals(other))\n                .append(optimizationPolicy, parameter.getOptimizationPolicy())\n                .append(discardOutline, parameter.discardOutline())\n                .append(levelToSplitAt, parameter.getLevelToSplitAt())\n                .append(matchingTitleRegEx, parameter.getMatchingTitleRegEx()).isEquals();\n    }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SplitByOutlineLevelParameters.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["isEquals", "append", "append", "append", "append", "appendSuper", "equals", "getOptimizationPolicy", "discardOutline", "getLevelToSplitAt", "getMatchingTitleRegEx"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}