{"test_class": {"identifier": "DataFetchingUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String SAMPLE_NAME = \"Axway Enterprise\";", "modifier": "private final", "type": "String", "declarator": "SAMPLE_NAME = \"Axway Enterprise\"", "var_name": "SAMPLE_NAME"}, {"original_string": "private final String SAMPLE_VERSION = \"4.5.9\";", "modifier": "private final", "type": "String", "declarator": "SAMPLE_VERSION = \"4.5.9\"", "var_name": "SAMPLE_VERSION"}], "file": "server/src/test/java/org/axway/grapes/server/reports/utils/DataFetchingUtilsTest.java"}, "test_case": {"identifier": "testCorrectArgsForCommercialDeliveryList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCorrectArgsForCommercialDeliveryList() {\n        final RepositoryHandler repoHandler = mock(RepositoryHandler.class);\n\n        final DataFetchingUtils sut = new DataFetchingUtils();\n        sut.getProductWithCommercialDeliveries(repoHandler);\n\n        ArgumentCaptor<String> nameCaptor = ArgumentCaptor.forClass(String.class);\n        ArgumentCaptor<String> queryCaptor = ArgumentCaptor.forClass(String.class);\n        ArgumentCaptor<Class> classCaptor = ArgumentCaptor.forClass(Class.class);\n\n        verify(repoHandler, times(1)).getListByQuery(\n                nameCaptor.capture(),\n                queryCaptor.capture(),\n                classCaptor.capture());\n\n        assertEquals(DbCollections.DB_PRODUCT, nameCaptor.getValue());\n        assertEquals(\"{'deliveries.0' : {$exists: true}}\", queryCaptor.getValue());\n        assertEquals(DbProduct.class, classCaptor.getValue());\n    }", "signature": "void testCorrectArgsForCommercialDeliveryList()", "full_signature": "@Test public void testCorrectArgsForCommercialDeliveryList()", "class_method_signature": "DataFetchingUtilsTest.testCorrectArgsForCommercialDeliveryList()", "testcase": true, "constructor": false, "invocations": ["mock", "getProductWithCommercialDeliveries", "forClass", "forClass", "forClass", "getListByQuery", "verify", "times", "capture", "capture", "capture", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue"]}, "focal_class": {"identifier": "DataFetchingUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DataFetchingUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DataFetchingUtils.class)", "var_name": "LOG"}, {"original_string": "private final List<String> corporateIds = new ArrayList<>();", "modifier": "private final", "type": "List<String>", "declarator": "corporateIds = new ArrayList<>()", "var_name": "corporateIds"}], "methods": [{"identifier": "getProductWithCommercialDeliveries", "parameters": "(final RepositoryHandler repoHandler)", "modifiers": "public", "return": "List<DbProduct>", "signature": "List<DbProduct> getProductWithCommercialDeliveries(final RepositoryHandler repoHandler)", "full_signature": "public List<DbProduct> getProductWithCommercialDeliveries(final RepositoryHandler repoHandler)", "class_method_signature": "DataFetchingUtils.getProductWithCommercialDeliveries(final RepositoryHandler repoHandler)", "testcase": false, "constructor": false}, {"identifier": "getCommercialDelivery", "parameters": "(final RepositoryHandler repoHandler,\n                                                    final String name,\n                                                    final String version)", "modifiers": "public", "return": "Optional<Delivery>", "signature": "Optional<Delivery> getCommercialDelivery(final RepositoryHandler repoHandler,\n                                                    final String name,\n                                                    final String version)", "full_signature": "public Optional<Delivery> getCommercialDelivery(final RepositoryHandler repoHandler,\n                                                    final String name,\n                                                    final String version)", "class_method_signature": "DataFetchingUtils.getCommercialDelivery(final RepositoryHandler repoHandler,\n                                                    final String name,\n                                                    final String version)", "testcase": false, "constructor": false}, {"identifier": "getDeliveryDependencies", "parameters": "(final RepositoryHandler repoHandler,\n                                               final DependencyHandler depHandler,\n                                               final Delivery delivery)", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getDeliveryDependencies(final RepositoryHandler repoHandler,\n                                               final DependencyHandler depHandler,\n                                               final Delivery delivery)", "full_signature": "public Set<String> getDeliveryDependencies(final RepositoryHandler repoHandler,\n                                               final DependencyHandler depHandler,\n                                               final Delivery delivery)", "class_method_signature": "DataFetchingUtils.getDeliveryDependencies(final RepositoryHandler repoHandler,\n                                               final DependencyHandler depHandler,\n                                               final Delivery delivery)", "testcase": false, "constructor": false}, {"identifier": "initCorporateIDs", "parameters": "(final RepositoryHandler repoHandler,\n                                 final String orgName)", "modifiers": "public", "return": "void", "signature": "void initCorporateIDs(final RepositoryHandler repoHandler,\n                                 final String orgName)", "full_signature": "public void initCorporateIDs(final RepositoryHandler repoHandler,\n                                 final String orgName)", "class_method_signature": "DataFetchingUtils.initCorporateIDs(final RepositoryHandler repoHandler,\n                                 final String orgName)", "testcase": false, "constructor": false}, {"identifier": "isThirdParty", "parameters": "(final DbArtifact artifact)", "modifiers": "public", "return": "boolean", "signature": "boolean isThirdParty(final DbArtifact artifact)", "full_signature": "public boolean isThirdParty(final DbArtifact artifact)", "class_method_signature": "DataFetchingUtils.isThirdParty(final DbArtifact artifact)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/reports/utils/DataFetchingUtils.java"}, "focal_method": {"identifier": "getProductWithCommercialDeliveries", "parameters": "(final RepositoryHandler repoHandler)", "modifiers": "public", "return": "List<DbProduct>", "body": "public List<DbProduct> getProductWithCommercialDeliveries(final RepositoryHandler repoHandler) {\n        return repoHandler.getListByQuery(\n                DbCollections.DB_PRODUCT,\n                QueryUtils.makeQueryAllDeliveries(),\n                DbProduct.class);\n    }", "signature": "List<DbProduct> getProductWithCommercialDeliveries(final RepositoryHandler repoHandler)", "full_signature": "public List<DbProduct> getProductWithCommercialDeliveries(final RepositoryHandler repoHandler)", "class_method_signature": "DataFetchingUtils.getProductWithCommercialDeliveries(final RepositoryHandler repoHandler)", "testcase": false, "constructor": false, "invocations": ["getListByQuery", "makeQueryAllDeliveries"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}