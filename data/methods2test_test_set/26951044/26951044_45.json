{"test_class": {"identifier": "ListValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/api/src/test/java/org/apache/tamaya/spi/ListValueTest.java"}, "test_case": {"identifier": "getLists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLists() {\n        ListValue lv = PropertyValue.createList();\n        PropertyValue val = PropertyValue.createList(\"k\");\n        lv.addPropertyValue(val);\n        PropertyValue val2 = PropertyValue.createObject(\"k2\");\n        lv.addPropertyValue(val2);\n        assertThat(lv.getLists()).isNotEmpty().hasSize(1);\n    }", "signature": "void getLists()", "full_signature": "@Test public void getLists()", "class_method_signature": "ListValueTest.getLists()", "testcase": true, "constructor": false, "invocations": ["createList", "createList", "addPropertyValue", "createObject", "addPropertyValue", "hasSize", "isNotEmpty", "assertThat", "getLists"]}, "focal_class": {"identifier": "ListValue", "superclass": "extends PropertyValue", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private List<PropertyValue> list = new ArrayList<>();", "modifier": "private", "type": "List<PropertyValue>", "declarator": "list = new ArrayList<>()", "var_name": "list"}], "methods": [{"identifier": "ListValue", "parameters": "(String key)", "modifiers": "", "return": "", "signature": " ListValue(String key)", "full_signature": "  ListValue(String key)", "class_method_signature": "ListValue.ListValue(String key)", "testcase": false, "constructor": true}, {"identifier": "getValueType", "parameters": "()", "modifiers": "@Override public", "return": "ValueType", "signature": "ValueType getValueType()", "full_signature": "@Override public ValueType getValueType()", "class_method_signature": "ListValue.getValueType()", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "(PropertyValue member)", "modifiers": "public", "return": "int", "signature": "int getIndex(PropertyValue member)", "full_signature": "public int getIndex(PropertyValue member)", "class_method_signature": "ListValue.getIndex(PropertyValue member)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "ListValue.getSize()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<PropertyValue>", "signature": "Iterator<PropertyValue> iterator()", "full_signature": "@Override public Iterator<PropertyValue> iterator()", "class_method_signature": "ListValue.iterator()", "testcase": false, "constructor": false}, {"identifier": "addPropertyValue", "parameters": "(PropertyValue value)", "modifiers": "public", "return": "ListValue", "signature": "ListValue addPropertyValue(PropertyValue value)", "full_signature": "public ListValue addPropertyValue(PropertyValue value)", "class_method_signature": "ListValue.addPropertyValue(PropertyValue value)", "testcase": false, "constructor": false}, {"identifier": "addValue", "parameters": "(String value)", "modifiers": "public", "return": "ListValue", "signature": "ListValue addValue(String value)", "full_signature": "public ListValue addValue(String value)", "class_method_signature": "ListValue.addValue(String value)", "testcase": false, "constructor": false}, {"identifier": "addValues", "parameters": "(String... values)", "modifiers": "public", "return": "ListValue", "signature": "ListValue addValues(String... values)", "full_signature": "public ListValue addValues(String... values)", "class_method_signature": "ListValue.addValues(String... values)", "testcase": false, "constructor": false}, {"identifier": "addObject", "parameters": "()", "modifiers": "public", "return": "ObjectValue", "signature": "ObjectValue addObject()", "full_signature": "public ObjectValue addObject()", "class_method_signature": "ListValue.addObject()", "testcase": false, "constructor": false}, {"identifier": "addList", "parameters": "()", "modifiers": "public", "return": "ListValue", "signature": "ListValue addList()", "full_signature": "public ListValue addList()", "class_method_signature": "ListValue.addList()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(int index)", "modifiers": "public", "return": "String", "signature": "String getValue(int index)", "full_signature": "public String getValue(int index)", "class_method_signature": "ListValue.getValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getPropertyValue", "parameters": "(int n)", "modifiers": "public", "return": "PropertyValue", "signature": "PropertyValue getPropertyValue(int n)", "full_signature": "public PropertyValue getPropertyValue(int n)", "class_method_signature": "ListValue.getPropertyValue(int n)", "testcase": false, "constructor": false}, {"identifier": "getObjects", "parameters": "(String name)", "modifiers": "public", "return": "List<ObjectValue>", "signature": "List<ObjectValue> getObjects(String name)", "full_signature": "public List<ObjectValue> getObjects(String name)", "class_method_signature": "ListValue.getObjects(String name)", "testcase": false, "constructor": false}, {"identifier": "getLists", "parameters": "(String name)", "modifiers": "public", "return": "List<ListValue>", "signature": "List<ListValue> getLists(String name)", "full_signature": "public List<ListValue> getLists(String name)", "class_method_signature": "ListValue.getLists(String name)", "testcase": false, "constructor": false}, {"identifier": "getLists", "parameters": "()", "modifiers": "public", "return": "List<ListValue>", "signature": "List<ListValue> getLists()", "full_signature": "public List<ListValue> getLists()", "class_method_signature": "ListValue.getLists()", "testcase": false, "constructor": false}, {"identifier": "getPropertyValues", "parameters": "(String name)", "modifiers": "public", "return": "List<PropertyValue>", "signature": "List<PropertyValue> getPropertyValues(String name)", "full_signature": "public List<PropertyValue> getPropertyValues(String name)", "class_method_signature": "ListValue.getPropertyValues(String name)", "testcase": false, "constructor": false}, {"identifier": "toObjectValue", "parameters": "()", "modifiers": "@Override public", "return": "ObjectValue", "signature": "ObjectValue toObjectValue()", "full_signature": "@Override public ObjectValue toObjectValue()", "class_method_signature": "ListValue.toObjectValue()", "testcase": false, "constructor": false}, {"identifier": "toListValue", "parameters": "()", "modifiers": "@Override public", "return": "ListValue", "signature": "ListValue toListValue()", "full_signature": "@Override public ListValue toListValue()", "class_method_signature": "ListValue.toListValue()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "ListValue.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "@Override public", "return": "PropertyValue", "signature": "PropertyValue setValue(String value)", "full_signature": "@Override public PropertyValue setValue(String value)", "class_method_signature": "ListValue.setValue(String value)", "testcase": false, "constructor": false}, {"identifier": "mutable", "parameters": "()", "modifiers": "@Override public", "return": "ListValue", "signature": "ListValue mutable()", "full_signature": "@Override public ListValue mutable()", "class_method_signature": "ListValue.mutable()", "testcase": false, "constructor": false}, {"identifier": "deepClone", "parameters": "()", "modifiers": "@Override protected", "return": "ListValue", "signature": "ListValue deepClone()", "full_signature": "@Override protected ListValue deepClone()", "class_method_signature": "ListValue.deepClone()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ListValue.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "generateListKey", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String generateListKey()", "full_signature": "private String generateListKey()", "class_method_signature": "ListValue.generateListKey()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ListValue.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ListValue.toString()", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(Collection<PropertyValue> values)", "modifiers": "public static", "return": "ListValue", "signature": "ListValue from(Collection<PropertyValue> values)", "full_signature": "public static ListValue from(Collection<PropertyValue> values)", "class_method_signature": "ListValue.from(Collection<PropertyValue> values)", "testcase": false, "constructor": false}], "file": "code/api/src/main/java/org/apache/tamaya/spi/ListValue.java"}, "focal_method": {"identifier": "getLists", "parameters": "(String name)", "modifiers": "public", "return": "List<ListValue>", "body": "public List<ListValue> getLists(String name) {\n        List<ListValue> result = new ArrayList<>();\n        this.list.forEach(el -> {\n                if (el instanceof ListValue && name.equals(el.getKey())) {\n                    result.add((ListValue) el);\n                }\n            });\n        return result;\n    }", "signature": "List<ListValue> getLists(String name)", "full_signature": "public List<ListValue> getLists(String name)", "class_method_signature": "ListValue.getLists(String name)", "testcase": false, "constructor": false, "invocations": ["forEach", "equals", "getKey", "add"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}