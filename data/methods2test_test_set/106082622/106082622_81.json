{"test_class": {"identifier": "ClusterConfigControllerTest", "superclass": "extends AbstractMvcTest", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ClusterConfigControllerTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ClusterConfigControllerTest.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private ClusterTestTools clusterTestTools;", "modifier": "@Autowired\n    private", "type": "ClusterTestTools", "declarator": "clusterTestTools", "var_name": "clusterTestTools"}, {"original_string": "@Autowired\n    private ClusterRepository clusterRepository;", "modifier": "@Autowired\n    private", "type": "ClusterRepository", "declarator": "clusterRepository", "var_name": "clusterRepository"}, {"original_string": "@Autowired\n    private SaslUtility saslUtility;", "modifier": "@Autowired\n    private", "type": "SaslUtility", "declarator": "saslUtility", "var_name": "saslUtility"}, {"original_string": "private String keyStoreUploadPath;", "modifier": "private", "type": "String", "declarator": "keyStoreUploadPath", "var_name": "keyStoreUploadPath"}], "file": "kafka-webview-ui/src/test/java/org/sourcelab/kafka/webview/ui/controller/configuration/cluster/ClusterConfigControllerTest.java"}, "test_case": {"identifier": "testIndex", "parameters": "()", "modifiers": "@Test @Transactional public", "return": "void", "body": "@Test\n    @Transactional\n    public void testIndex() throws Exception {\n        // Create some dummy clusters\n        final Cluster cluster1 = clusterTestTools.createCluster(\"My Test Cluster 1 2 3\");\n        final Cluster cluster2 = clusterTestTools.createCluster(\"Some other Cluster\");\n\n        // Hit index.\n        mockMvc\n            .perform(get(\"/configuration/cluster\").with(user(adminUserDetails)))\n            //.andDo(print())\n            .andExpect(status().isOk())\n            // Validate cluster 1\n            .andExpect(content().string(containsString(cluster1.getName())))\n            .andExpect(content().string(containsString(cluster1.getBrokerHosts())))\n\n            // Validate cluster 2\n            .andExpect(content().string(containsString(cluster2.getName())))\n            .andExpect(content().string(containsString(cluster2.getBrokerHosts())));\n    }", "signature": "void testIndex()", "full_signature": "@Test @Transactional public void testIndex()", "class_method_signature": "ClusterConfigControllerTest.testIndex()", "testcase": true, "constructor": false, "invocations": ["createCluster", "createCluster", "andExpect", "andExpect", "andExpect", "andExpect", "andExpect", "perform", "with", "get", "user", "isOk", "status", "string", "content", "containsString", "getName", "string", "content", "containsString", "getBrokerHosts", "string", "content", "containsString", "getName", "string", "content", "containsString", "getBrokerHosts"]}, "focal_class": {"identifier": "ClusterConfigController", "superclass": "extends BaseController", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ClusterConfigController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ClusterConfigController.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private ClusterRepository clusterRepository;", "modifier": "@Autowired\n    private", "type": "ClusterRepository", "declarator": "clusterRepository", "var_name": "clusterRepository"}, {"original_string": "@Autowired\n    private UploadManager uploadManager;", "modifier": "@Autowired\n    private", "type": "UploadManager", "declarator": "uploadManager", "var_name": "uploadManager"}, {"original_string": "@Autowired\n    private SecretManager secretManager;", "modifier": "@Autowired\n    private", "type": "SecretManager", "declarator": "secretManager", "var_name": "secretManager"}, {"original_string": "@Autowired\n    private KafkaOperationsFactory kafkaOperationsFactory;", "modifier": "@Autowired\n    private", "type": "KafkaOperationsFactory", "declarator": "kafkaOperationsFactory", "var_name": "kafkaOperationsFactory"}, {"original_string": "@Autowired\n    private SaslUtility saslUtility;", "modifier": "@Autowired\n    private", "type": "SaslUtility", "declarator": "saslUtility", "var_name": "saslUtility"}, {"original_string": "@Autowired\n    private SensitiveConfigScrubber sensitiveConfigScrubber;", "modifier": "@Autowired\n    private", "type": "SensitiveConfigScrubber", "declarator": "sensitiveConfigScrubber", "var_name": "sensitiveConfigScrubber"}], "methods": [{"identifier": "index", "parameters": "(final Model model)", "modifiers": "@RequestMapping(path = \"\", method = RequestMethod.GET) public", "return": "String", "signature": "String index(final Model model)", "full_signature": "@RequestMapping(path = \"\", method = RequestMethod.GET) public String index(final Model model)", "class_method_signature": "ClusterConfigController.index(final Model model)", "testcase": false, "constructor": false}, {"identifier": "createClusterForm", "parameters": "(final ClusterForm clusterForm, final Model model)", "modifiers": "@RequestMapping(path = \"/create\", method = RequestMethod.GET) public", "return": "String", "signature": "String createClusterForm(final ClusterForm clusterForm, final Model model)", "full_signature": "@RequestMapping(path = \"/create\", method = RequestMethod.GET) public String createClusterForm(final ClusterForm clusterForm, final Model model)", "class_method_signature": "ClusterConfigController.createClusterForm(final ClusterForm clusterForm, final Model model)", "testcase": false, "constructor": false}, {"identifier": "setupCreateForm", "parameters": "(final Model model)", "modifiers": "private", "return": "void", "signature": "void setupCreateForm(final Model model)", "full_signature": "private void setupCreateForm(final Model model)", "class_method_signature": "ClusterConfigController.setupCreateForm(final Model model)", "testcase": false, "constructor": false}, {"identifier": "editClusterForm", "parameters": "(\n        @PathVariable final Long id,\n        final ClusterForm clusterForm,\n        final RedirectAttributes redirectAttributes,\n        final Model model)", "modifiers": "@RequestMapping(path = \"/edit/{id}\", method = RequestMethod.GET) public", "return": "String", "signature": "String editClusterForm(\n        @PathVariable final Long id,\n        final ClusterForm clusterForm,\n        final RedirectAttributes redirectAttributes,\n        final Model model)", "full_signature": "@RequestMapping(path = \"/edit/{id}\", method = RequestMethod.GET) public String editClusterForm(\n        @PathVariable final Long id,\n        final ClusterForm clusterForm,\n        final RedirectAttributes redirectAttributes,\n        final Model model)", "class_method_signature": "ClusterConfigController.editClusterForm(\n        @PathVariable final Long id,\n        final ClusterForm clusterForm,\n        final RedirectAttributes redirectAttributes,\n        final Model model)", "testcase": false, "constructor": false}, {"identifier": "clusterUpdate", "parameters": "(\n        @Valid final ClusterForm clusterForm,\n        final BindingResult bindingResult,\n        final RedirectAttributes redirectAttributes,\n        final Model model)", "modifiers": "@RequestMapping(path = \"/update\", method = RequestMethod.POST) public", "return": "String", "signature": "String clusterUpdate(\n        @Valid final ClusterForm clusterForm,\n        final BindingResult bindingResult,\n        final RedirectAttributes redirectAttributes,\n        final Model model)", "full_signature": "@RequestMapping(path = \"/update\", method = RequestMethod.POST) public String clusterUpdate(\n        @Valid final ClusterForm clusterForm,\n        final BindingResult bindingResult,\n        final RedirectAttributes redirectAttributes,\n        final Model model)", "class_method_signature": "ClusterConfigController.clusterUpdate(\n        @Valid final ClusterForm clusterForm,\n        final BindingResult bindingResult,\n        final RedirectAttributes redirectAttributes,\n        final Model model)", "testcase": false, "constructor": false}, {"identifier": "handleCustomOptions", "parameters": "(final ClusterForm clusterForm)", "modifiers": "private", "return": "String", "signature": "String handleCustomOptions(final ClusterForm clusterForm)", "full_signature": "private String handleCustomOptions(final ClusterForm clusterForm)", "class_method_signature": "ClusterConfigController.handleCustomOptions(final ClusterForm clusterForm)", "testcase": false, "constructor": false}, {"identifier": "deleteCluster", "parameters": "(@PathVariable final Long id, final RedirectAttributes redirectAttributes)", "modifiers": "@RequestMapping(path = \"/delete/{id}\", method = RequestMethod.POST) public", "return": "String", "signature": "String deleteCluster(@PathVariable final Long id, final RedirectAttributes redirectAttributes)", "full_signature": "@RequestMapping(path = \"/delete/{id}\", method = RequestMethod.POST) public String deleteCluster(@PathVariable final Long id, final RedirectAttributes redirectAttributes)", "class_method_signature": "ClusterConfigController.deleteCluster(@PathVariable final Long id, final RedirectAttributes redirectAttributes)", "testcase": false, "constructor": false}, {"identifier": "testCluster", "parameters": "(@PathVariable final Long id, final RedirectAttributes redirectAttributes)", "modifiers": "@RequestMapping(path = \"/test/{id}\", method = RequestMethod.GET) public", "return": "String", "signature": "String testCluster(@PathVariable final Long id, final RedirectAttributes redirectAttributes)", "full_signature": "@RequestMapping(path = \"/test/{id}\", method = RequestMethod.GET) public String testCluster(@PathVariable final Long id, final RedirectAttributes redirectAttributes)", "class_method_signature": "ClusterConfigController.testCluster(@PathVariable final Long id, final RedirectAttributes redirectAttributes)", "testcase": false, "constructor": false}, {"identifier": "getClientConfig", "parameters": "(\n        @PathVariable final Long id,\n        final RedirectAttributes redirectAttributes,\n        final Model model\n    )", "modifiers": "@RequestMapping(path = \"/config/{id}\", method = RequestMethod.GET) public", "return": "String", "signature": "String getClientConfig(\n        @PathVariable final Long id,\n        final RedirectAttributes redirectAttributes,\n        final Model model\n    )", "full_signature": "@RequestMapping(path = \"/config/{id}\", method = RequestMethod.GET) public String getClientConfig(\n        @PathVariable final Long id,\n        final RedirectAttributes redirectAttributes,\n        final Model model\n    )", "class_method_signature": "ClusterConfigController.getClientConfig(\n        @PathVariable final Long id,\n        final RedirectAttributes redirectAttributes,\n        final Model model\n    )", "testcase": false, "constructor": false}, {"identifier": "setupBreadCrumbs", "parameters": "(final Model model, final String name, final String url)", "modifiers": "private", "return": "void", "signature": "void setupBreadCrumbs(final Model model, final String name, final String url)", "full_signature": "private void setupBreadCrumbs(final Model model, final String name, final String url)", "class_method_signature": "ClusterConfigController.setupBreadCrumbs(final Model model, final String name, final String url)", "testcase": false, "constructor": false}], "file": "kafka-webview-ui/src/main/java/org/sourcelab/kafka/webview/ui/controller/configuration/cluster/ClusterConfigController.java"}, "focal_method": {"identifier": "index", "parameters": "(final Model model)", "modifiers": "@RequestMapping(path = \"\", method = RequestMethod.GET) public", "return": "String", "body": "@RequestMapping(path = \"\", method = RequestMethod.GET)\n    public String index(final Model model) {\n        // Setup breadcrumbs\n        setupBreadCrumbs(model, null, null);\n\n        // Retrieve all clusters\n        final Iterable<Cluster> clusterList = clusterRepository.findAllByOrderByNameAsc();\n        model.addAttribute(\"clusterList\", clusterList);\n\n        return \"configuration/cluster/index\";\n    }", "signature": "String index(final Model model)", "full_signature": "@RequestMapping(path = \"\", method = RequestMethod.GET) public String index(final Model model)", "class_method_signature": "ClusterConfigController.index(final Model model)", "testcase": false, "constructor": false, "invocations": ["setupBreadCrumbs", "findAllByOrderByNameAsc", "addAttribute"]}, "repository": {"repo_id": 106082622, "url": "https://github.com/SourceLabOrg/kafka-webview", "stars": 256, "created": "10/7/2017 8:28:45 AM +00:00", "updates": "2020-01-25T06:02:44+00:00", "fork": "False", "license": "licensed"}}