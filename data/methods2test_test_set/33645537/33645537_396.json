{"test_class": {"identifier": "VectorScalarProductTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private VectorScalarProduct vectorScalarProduct;", "modifier": "private", "type": "VectorScalarProduct", "declarator": "vectorScalarProduct", "var_name": "vectorScalarProduct"}], "file": "algs/src/test/java/com/github/pedrovgs/problem2/VectorScalarProductTest.java"}, "test_case": {"identifier": "shouldReturnZeroIfOneVectorIsFullOfZeros", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReturnZeroIfOneVectorIsFullOfZeros() {\n    Vector v1 = new Vector(1, 2, 3, 4);\n    Vector v2 = new Vector(0, 0, 0, 0);\n\n    int result = vectorScalarProduct.calculateScalarProduct(v1, v2);\n\n    assertEquals(0, result);\n  }", "signature": "void shouldReturnZeroIfOneVectorIsFullOfZeros()", "full_signature": "@Test public void shouldReturnZeroIfOneVectorIsFullOfZeros()", "class_method_signature": "VectorScalarProductTest.shouldReturnZeroIfOneVectorIsFullOfZeros()", "testcase": true, "constructor": false, "invocations": ["calculateScalarProduct", "assertEquals"]}, "focal_class": {"identifier": "VectorScalarProduct", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "calculateScalarProduct", "parameters": "(Vector v1, Vector v2)", "modifiers": "public", "return": "int", "signature": "int calculateScalarProduct(Vector v1, Vector v2)", "full_signature": "public int calculateScalarProduct(Vector v1, Vector v2)", "class_method_signature": "VectorScalarProduct.calculateScalarProduct(Vector v1, Vector v2)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(Vector v1, Vector v2)", "modifiers": "private", "return": "void", "signature": "void validateInput(Vector v1, Vector v2)", "full_signature": "private void validateInput(Vector v1, Vector v2)", "class_method_signature": "VectorScalarProduct.validateInput(Vector v1, Vector v2)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem2/VectorScalarProduct.java"}, "focal_method": {"identifier": "calculateScalarProduct", "parameters": "(Vector v1, Vector v2)", "modifiers": "public", "return": "int", "body": "public int calculateScalarProduct(Vector v1, Vector v2) {\n    validateInput(v1, v2);\n\n    int v1Size = v1.size();\n    int v2Size = v2.size();\n    if (v1Size != v2Size) {\n      throw new IllegalArgumentException(\"Vectors should be contains the same number of elements.\");\n    }\n\n    int result = 0;\n    for (int i = 0; i < v1Size; i++) {\n      result += v1.getAt(i) * v2.getAt(i);\n    }\n    return result;\n  }", "signature": "int calculateScalarProduct(Vector v1, Vector v2)", "full_signature": "public int calculateScalarProduct(Vector v1, Vector v2)", "class_method_signature": "VectorScalarProduct.calculateScalarProduct(Vector v1, Vector v2)", "testcase": false, "constructor": false, "invocations": ["validateInput", "size", "size", "getAt", "getAt"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}