{"test_class": {"identifier": "ClusterAdminRpcServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final MemberName MEMBER_1 = MemberName.forName(\"member-1\");", "modifier": "private static final", "type": "MemberName", "declarator": "MEMBER_1 = MemberName.forName(\"member-1\")", "var_name": "MEMBER_1"}, {"original_string": "private static final MemberName MEMBER_2 = MemberName.forName(\"member-2\");", "modifier": "private static final", "type": "MemberName", "declarator": "MEMBER_2 = MemberName.forName(\"member-2\")", "var_name": "MEMBER_2"}, {"original_string": "private static final MemberName MEMBER_3 = MemberName.forName(\"member-3\");", "modifier": "private static final", "type": "MemberName", "declarator": "MEMBER_3 = MemberName.forName(\"member-3\")", "var_name": "MEMBER_3"}, {"original_string": "private final List<MemberNode> memberNodes = new ArrayList<>();", "modifier": "private final", "type": "List<MemberNode>", "declarator": "memberNodes = new ArrayList<>()", "var_name": "memberNodes"}], "file": "opendaylight/md-sal/sal-cluster-admin-impl/src/test/java/org/opendaylight/controller/cluster/datastore/admin/ClusterAdminRpcServiceTest.java"}, "test_case": {"identifier": "testFlipMemberVotingStatesWithNoInitialLeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFlipMemberVotingStatesWithNoInitialLeader() throws Exception {\n        String name = \"testFlipMemberVotingStatesWithNoInitialLeader\";\n\n        // Members 1, 2, and 3 are initially started up as non-voting. Members 4, 5, and 6 are initially\n        // non-voting and simulated as down by not starting them up.\n        ServerConfigurationPayload persistedServerConfig = new ServerConfigurationPayload(Arrays.asList(\n                new ServerInfo(\"member-1\", false), new ServerInfo(\"member-2\", false),\n                new ServerInfo(\"member-3\", false), new ServerInfo(\"member-4\", true),\n                new ServerInfo(\"member-5\", true), new ServerInfo(\"member-6\", true)));\n\n        setupPersistedServerConfigPayload(persistedServerConfig, \"member-1\", name, \"cars\", \"people\");\n        setupPersistedServerConfigPayload(persistedServerConfig, \"member-2\", name, \"cars\", \"people\");\n        setupPersistedServerConfigPayload(persistedServerConfig, \"member-3\", name, \"cars\", \"people\");\n\n        String moduleShardsConfig = \"module-shards-member1-and-2-and-3.conf\";\n        final MemberNode replicaNode1 = MemberNode.builder(memberNodes).akkaConfig(\"Member1\").testName(name)\n                .moduleShardsConfig(moduleShardsConfig).datastoreContextBuilder(\n                        DatastoreContext.newBuilder().shardHeartbeatIntervalInMillis(300).shardElectionTimeoutFactor(1))\n                .build();\n\n        final MemberNode replicaNode2 = MemberNode.builder(memberNodes).akkaConfig(\"Member2\").testName(name)\n                .moduleShardsConfig(moduleShardsConfig).build();\n\n        final MemberNode replicaNode3 = MemberNode.builder(memberNodes).akkaConfig(\"Member3\").testName(name)\n                .moduleShardsConfig(moduleShardsConfig).build();\n\n        // Initially there won't be a leader b/c all the up nodes are non-voting.\n\n        replicaNode1.waitForMembersUp(\"member-2\", \"member-3\");\n\n        verifyVotingStates(replicaNode1.configDataStore(), \"cars\", new SimpleEntry<>(\"member-1\", FALSE),\n                new SimpleEntry<>(\"member-2\", FALSE), new SimpleEntry<>(\"member-3\", FALSE),\n                new SimpleEntry<>(\"member-4\", TRUE), new SimpleEntry<>(\"member-5\", TRUE),\n                new SimpleEntry<>(\"member-6\", TRUE));\n\n        verifyRaftState(replicaNode1.configDataStore(), \"cars\", raftState ->\n            assertEquals(\"Expected raft state\", RaftState.Follower.toString(), raftState.getRaftState()));\n\n        ClusterAdminRpcService service1 = new ClusterAdminRpcService(replicaNode1.configDataStore(),\n                replicaNode1.operDataStore(), null);\n\n        RpcResult<FlipMemberVotingStatesForAllShardsOutput> rpcResult = service1.flipMemberVotingStatesForAllShards(\n            new FlipMemberVotingStatesForAllShardsInputBuilder().build()).get(10, TimeUnit.SECONDS);\n        FlipMemberVotingStatesForAllShardsOutput result = verifySuccessfulRpcResult(rpcResult);\n        verifyShardResults(result.getShardResult(), successShardResult(\"cars\", DataStoreType.Config),\n                successShardResult(\"people\", DataStoreType.Config),\n                successShardResult(\"cars\", DataStoreType.Operational),\n                successShardResult(\"people\", DataStoreType.Operational));\n\n        verifyVotingStates(new AbstractDataStore[]{replicaNode1.configDataStore(), replicaNode1.operDataStore(),\n                replicaNode2.configDataStore(), replicaNode2.operDataStore(),\n                replicaNode3.configDataStore(), replicaNode3.operDataStore()},\n                new String[]{\"cars\", \"people\"},\n                new SimpleEntry<>(\"member-1\", TRUE), new SimpleEntry<>(\"member-2\", TRUE),\n                new SimpleEntry<>(\"member-3\", TRUE), new SimpleEntry<>(\"member-4\", FALSE),\n                new SimpleEntry<>(\"member-5\", FALSE), new SimpleEntry<>(\"member-6\", FALSE));\n\n        // Since member 1 was changed to voting and there was no leader, it should've started and election\n        // and become leader\n        verifyRaftState(replicaNode1.configDataStore(), \"cars\", raftState -> {\n            assertNotNull(\"Expected non-null leader Id\", raftState.getLeader());\n            assertTrue(\"Expected leader member-1. Actual: \" + raftState.getLeader(),\n                    raftState.getLeader().contains(\"member-1\"));\n        });\n\n        verifyRaftState(replicaNode1.operDataStore(), \"cars\", raftState -> {\n            assertNotNull(\"Expected non-null leader Id\", raftState.getLeader());\n            assertTrue(\"Expected leader member-1. Actual: \" + raftState.getLeader(),\n                    raftState.getLeader().contains(\"member-1\"));\n        });\n    }", "signature": "void testFlipMemberVotingStatesWithNoInitialLeader()", "full_signature": "@Test public void testFlipMemberVotingStatesWithNoInitialLeader()", "class_method_signature": "ClusterAdminRpcServiceTest.testFlipMemberVotingStatesWithNoInitialLeader()", "testcase": true, "constructor": false, "invocations": ["asList", "setupPersistedServerConfigPayload", "setupPersistedServerConfigPayload", "setupPersistedServerConfigPayload", "build", "datastoreContextBuilder", "moduleShardsConfig", "testName", "akkaConfig", "builder", "shardElectionTimeoutFactor", "shardHeartbeatIntervalInMillis", "newBuilder", "build", "moduleShardsConfig", "testName", "akkaConfig", "builder", "build", "moduleShardsConfig", "testName", "akkaConfig", "builder", "waitForMembersUp", "verifyVotingStates", "configDataStore", "verifyRaftState", "configDataStore", "assertEquals", "toString", "getRaftState", "configDataStore", "operDataStore", "get", "flipMemberVotingStatesForAllShards", "build", "verifySuccessfulRpcResult", "verifyShardResults", "getShardResult", "successShardResult", "successShardResult", "successShardResult", "successShardResult", "verifyVotingStates", "configDataStore", "operDataStore", "configDataStore", "operDataStore", "configDataStore", "operDataStore", "verifyRaftState", "configDataStore", "assertNotNull", "getLeader", "assertTrue", "getLeader", "contains", "getLeader", "verifyRaftState", "operDataStore", "assertNotNull", "getLeader", "assertTrue", "getLeader", "contains", "getLeader"]}, "focal_class": {"identifier": "ClusterAdminRpcService", "superclass": "", "interfaces": "implements ClusterAdminService", "fields": [{"original_string": "private static final Timeout SHARD_MGR_TIMEOUT = new Timeout(1, TimeUnit.MINUTES);", "modifier": "private static final", "type": "Timeout", "declarator": "SHARD_MGR_TIMEOUT = new Timeout(1, TimeUnit.MINUTES)", "var_name": "SHARD_MGR_TIMEOUT"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ClusterAdminRpcService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ClusterAdminRpcService.class)", "var_name": "LOG"}, {"original_string": "private static final @NonNull RpcResult<LocateShardOutput> LOCAL_SHARD_RESULT =\n            RpcResultBuilder.success(new LocateShardOutputBuilder()\n                .setMemberNode(new LocalBuilder().setLocal(Empty.getInstance()).build())\n                .build())\n            .build();", "modifier": "private static final @NonNull", "type": "RpcResult<LocateShardOutput>", "declarator": "LOCAL_SHARD_RESULT =\n            RpcResultBuilder.success(new LocateShardOutputBuilder()\n                .setMemberNode(new LocalBuilder().setLocal(Empty.getInstance()).build())\n                .build())\n            .build()", "var_name": "LOCAL_SHARD_RESULT"}, {"original_string": "private final DistributedDataStoreInterface configDataStore;", "modifier": "private final", "type": "DistributedDataStoreInterface", "declarator": "configDataStore", "var_name": "configDataStore"}, {"original_string": "private final DistributedDataStoreInterface operDataStore;", "modifier": "private final", "type": "DistributedDataStoreInterface", "declarator": "operDataStore", "var_name": "operDataStore"}, {"original_string": "private final BindingNormalizedNodeSerializer serializer;", "modifier": "private final", "type": "BindingNormalizedNodeSerializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "private final Timeout makeLeaderLocalTimeout;", "modifier": "private final", "type": "Timeout", "declarator": "makeLeaderLocalTimeout", "var_name": "makeLeaderLocalTimeout"}], "methods": [{"identifier": "ClusterAdminRpcService", "parameters": "(final DistributedDataStoreInterface configDataStore,\n            final DistributedDataStoreInterface operDataStore,\n            final BindingNormalizedNodeSerializer serializer)", "modifiers": "public", "return": "", "signature": " ClusterAdminRpcService(final DistributedDataStoreInterface configDataStore,\n            final DistributedDataStoreInterface operDataStore,\n            final BindingNormalizedNodeSerializer serializer)", "full_signature": "public  ClusterAdminRpcService(final DistributedDataStoreInterface configDataStore,\n            final DistributedDataStoreInterface operDataStore,\n            final BindingNormalizedNodeSerializer serializer)", "class_method_signature": "ClusterAdminRpcService.ClusterAdminRpcService(final DistributedDataStoreInterface configDataStore,\n            final DistributedDataStoreInterface operDataStore,\n            final BindingNormalizedNodeSerializer serializer)", "testcase": false, "constructor": true}, {"identifier": "addShardReplica", "parameters": "(final AddShardReplicaInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<AddShardReplicaOutput>>", "signature": "ListenableFuture<RpcResult<AddShardReplicaOutput>> addShardReplica(final AddShardReplicaInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<AddShardReplicaOutput>> addShardReplica(final AddShardReplicaInput input)", "class_method_signature": "ClusterAdminRpcService.addShardReplica(final AddShardReplicaInput input)", "testcase": false, "constructor": false}, {"identifier": "removeShardReplica", "parameters": "(\n            final RemoveShardReplicaInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<RemoveShardReplicaOutput>>", "signature": "ListenableFuture<RpcResult<RemoveShardReplicaOutput>> removeShardReplica(\n            final RemoveShardReplicaInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<RemoveShardReplicaOutput>> removeShardReplica(\n            final RemoveShardReplicaInput input)", "class_method_signature": "ClusterAdminRpcService.removeShardReplica(\n            final RemoveShardReplicaInput input)", "testcase": false, "constructor": false}, {"identifier": "locateShard", "parameters": "(final LocateShardInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<LocateShardOutput>>", "signature": "ListenableFuture<RpcResult<LocateShardOutput>> locateShard(final LocateShardInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<LocateShardOutput>> locateShard(final LocateShardInput input)", "class_method_signature": "ClusterAdminRpcService.locateShard(final LocateShardInput input)", "testcase": false, "constructor": false}, {"identifier": "makeLeaderLocal", "parameters": "(final MakeLeaderLocalInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<MakeLeaderLocalOutput>>", "signature": "ListenableFuture<RpcResult<MakeLeaderLocalOutput>> makeLeaderLocal(final MakeLeaderLocalInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<MakeLeaderLocalOutput>> makeLeaderLocal(final MakeLeaderLocalInput input)", "class_method_signature": "ClusterAdminRpcService.makeLeaderLocal(final MakeLeaderLocalInput input)", "testcase": false, "constructor": false}, {"identifier": "addPrefixShardReplica", "parameters": "(\n            final AddPrefixShardReplicaInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<AddPrefixShardReplicaOutput>>", "signature": "ListenableFuture<RpcResult<AddPrefixShardReplicaOutput>> addPrefixShardReplica(\n            final AddPrefixShardReplicaInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<AddPrefixShardReplicaOutput>> addPrefixShardReplica(\n            final AddPrefixShardReplicaInput input)", "class_method_signature": "ClusterAdminRpcService.addPrefixShardReplica(\n            final AddPrefixShardReplicaInput input)", "testcase": false, "constructor": false}, {"identifier": "removePrefixShardReplica", "parameters": "(\n            final RemovePrefixShardReplicaInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<RemovePrefixShardReplicaOutput>>", "signature": "ListenableFuture<RpcResult<RemovePrefixShardReplicaOutput>> removePrefixShardReplica(\n            final RemovePrefixShardReplicaInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<RemovePrefixShardReplicaOutput>> removePrefixShardReplica(\n            final RemovePrefixShardReplicaInput input)", "class_method_signature": "ClusterAdminRpcService.removePrefixShardReplica(\n            final RemovePrefixShardReplicaInput input)", "testcase": false, "constructor": false}, {"identifier": "addReplicasForAllShards", "parameters": "(\n            final AddReplicasForAllShardsInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<AddReplicasForAllShardsOutput>>", "signature": "ListenableFuture<RpcResult<AddReplicasForAllShardsOutput>> addReplicasForAllShards(\n            final AddReplicasForAllShardsInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<AddReplicasForAllShardsOutput>> addReplicasForAllShards(\n            final AddReplicasForAllShardsInput input)", "class_method_signature": "ClusterAdminRpcService.addReplicasForAllShards(\n            final AddReplicasForAllShardsInput input)", "testcase": false, "constructor": false}, {"identifier": "removeAllShardReplicas", "parameters": "(\n            final RemoveAllShardReplicasInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<RemoveAllShardReplicasOutput>>", "signature": "ListenableFuture<RpcResult<RemoveAllShardReplicasOutput>> removeAllShardReplicas(\n            final RemoveAllShardReplicasInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<RemoveAllShardReplicasOutput>> removeAllShardReplicas(\n            final RemoveAllShardReplicasInput input)", "class_method_signature": "ClusterAdminRpcService.removeAllShardReplicas(\n            final RemoveAllShardReplicasInput input)", "testcase": false, "constructor": false}, {"identifier": "changeMemberVotingStatesForShard", "parameters": "(\n            final ChangeMemberVotingStatesForShardInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<ChangeMemberVotingStatesForShardOutput>>", "signature": "ListenableFuture<RpcResult<ChangeMemberVotingStatesForShardOutput>> changeMemberVotingStatesForShard(\n            final ChangeMemberVotingStatesForShardInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<ChangeMemberVotingStatesForShardOutput>> changeMemberVotingStatesForShard(\n            final ChangeMemberVotingStatesForShardInput input)", "class_method_signature": "ClusterAdminRpcService.changeMemberVotingStatesForShard(\n            final ChangeMemberVotingStatesForShardInput input)", "testcase": false, "constructor": false}, {"identifier": "changeMemberVotingStatesForAllShards", "parameters": "(\n            final ChangeMemberVotingStatesForAllShardsInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<ChangeMemberVotingStatesForAllShardsOutput>>", "signature": "ListenableFuture<RpcResult<ChangeMemberVotingStatesForAllShardsOutput>> changeMemberVotingStatesForAllShards(\n            final ChangeMemberVotingStatesForAllShardsInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<ChangeMemberVotingStatesForAllShardsOutput>> changeMemberVotingStatesForAllShards(\n            final ChangeMemberVotingStatesForAllShardsInput input)", "class_method_signature": "ClusterAdminRpcService.changeMemberVotingStatesForAllShards(\n            final ChangeMemberVotingStatesForAllShardsInput input)", "testcase": false, "constructor": false}, {"identifier": "flipMemberVotingStatesForAllShards", "parameters": "(\n            final FlipMemberVotingStatesForAllShardsInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<FlipMemberVotingStatesForAllShardsOutput>>", "signature": "ListenableFuture<RpcResult<FlipMemberVotingStatesForAllShardsOutput>> flipMemberVotingStatesForAllShards(\n            final FlipMemberVotingStatesForAllShardsInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<FlipMemberVotingStatesForAllShardsOutput>> flipMemberVotingStatesForAllShards(\n            final FlipMemberVotingStatesForAllShardsInput input)", "class_method_signature": "ClusterAdminRpcService.flipMemberVotingStatesForAllShards(\n            final FlipMemberVotingStatesForAllShardsInput input)", "testcase": false, "constructor": false}, {"identifier": "getShardRole", "parameters": "(final GetShardRoleInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<GetShardRoleOutput>>", "signature": "ListenableFuture<RpcResult<GetShardRoleOutput>> getShardRole(final GetShardRoleInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<GetShardRoleOutput>> getShardRole(final GetShardRoleInput input)", "class_method_signature": "ClusterAdminRpcService.getShardRole(final GetShardRoleInput input)", "testcase": false, "constructor": false}, {"identifier": "getPrefixShardRole", "parameters": "(\n            final GetPrefixShardRoleInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<GetPrefixShardRoleOutput>>", "signature": "ListenableFuture<RpcResult<GetPrefixShardRoleOutput>> getPrefixShardRole(\n            final GetPrefixShardRoleInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<GetPrefixShardRoleOutput>> getPrefixShardRole(\n            final GetPrefixShardRoleInput input)", "class_method_signature": "ClusterAdminRpcService.getPrefixShardRole(\n            final GetPrefixShardRoleInput input)", "testcase": false, "constructor": false}, {"identifier": "backupDatastore", "parameters": "(final BackupDatastoreInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<BackupDatastoreOutput>>", "signature": "ListenableFuture<RpcResult<BackupDatastoreOutput>> backupDatastore(final BackupDatastoreInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<BackupDatastoreOutput>> backupDatastore(final BackupDatastoreInput input)", "class_method_signature": "ClusterAdminRpcService.backupDatastore(final BackupDatastoreInput input)", "testcase": false, "constructor": false}, {"identifier": "getKnownClientsForAllShards", "parameters": "(\n            final GetKnownClientsForAllShardsInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<GetKnownClientsForAllShardsOutput>>", "signature": "ListenableFuture<RpcResult<GetKnownClientsForAllShardsOutput>> getKnownClientsForAllShards(\n            final GetKnownClientsForAllShardsInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<GetKnownClientsForAllShardsOutput>> getKnownClientsForAllShards(\n            final GetKnownClientsForAllShardsInput input)", "class_method_signature": "ClusterAdminRpcService.getKnownClientsForAllShards(\n            final GetKnownClientsForAllShardsInput input)", "testcase": false, "constructor": false}, {"identifier": "processReplies", "parameters": "(\n            final ImmutableMap<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> allShardReplies)", "modifiers": "private static", "return": "RpcResult<GetKnownClientsForAllShardsOutput>", "signature": "RpcResult<GetKnownClientsForAllShardsOutput> processReplies(\n            final ImmutableMap<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> allShardReplies)", "full_signature": "private static RpcResult<GetKnownClientsForAllShardsOutput> processReplies(\n            final ImmutableMap<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> allShardReplies)", "class_method_signature": "ClusterAdminRpcService.processReplies(\n            final ImmutableMap<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> allShardReplies)", "testcase": false, "constructor": false}, {"identifier": "toChangeShardMembersVotingStatus", "parameters": "(final String shardName,\n            final List<MemberVotingState> memberVotingStatus)", "modifiers": "private static", "return": "ChangeShardMembersVotingStatus", "signature": "ChangeShardMembersVotingStatus toChangeShardMembersVotingStatus(final String shardName,\n            final List<MemberVotingState> memberVotingStatus)", "full_signature": "private static ChangeShardMembersVotingStatus toChangeShardMembersVotingStatus(final String shardName,\n            final List<MemberVotingState> memberVotingStatus)", "class_method_signature": "ClusterAdminRpcService.toChangeShardMembersVotingStatus(final String shardName,\n            final List<MemberVotingState> memberVotingStatus)", "testcase": false, "constructor": false}, {"identifier": "waitForShardResults", "parameters": "(\n            final List<Entry<ListenableFuture<Success>, ShardResultBuilder>> shardResultData,\n            final Function<Map<ShardResultKey, ShardResult>, T> resultDataSupplier,\n            final String failureLogMsgPrefix)", "modifiers": "private static", "return": "SettableFuture<RpcResult<T>>", "signature": "SettableFuture<RpcResult<T>> waitForShardResults(\n            final List<Entry<ListenableFuture<Success>, ShardResultBuilder>> shardResultData,\n            final Function<Map<ShardResultKey, ShardResult>, T> resultDataSupplier,\n            final String failureLogMsgPrefix)", "full_signature": "private static SettableFuture<RpcResult<T>> waitForShardResults(\n            final List<Entry<ListenableFuture<Success>, ShardResultBuilder>> shardResultData,\n            final Function<Map<ShardResultKey, ShardResult>, T> resultDataSupplier,\n            final String failureLogMsgPrefix)", "class_method_signature": "ClusterAdminRpcService.waitForShardResults(\n            final List<Entry<ListenableFuture<Success>, ShardResultBuilder>> shardResultData,\n            final Function<Map<ShardResultKey, ShardResult>, T> resultDataSupplier,\n            final String failureLogMsgPrefix)", "testcase": false, "constructor": false}, {"identifier": "sendMessageToManagerForConfiguredShards", "parameters": "(final DataStoreType dataStoreType,\n            final List<Entry<ListenableFuture<T>, ShardResultBuilder>> shardResultData,\n            final Function<String, Object> messageSupplier)", "modifiers": "private", "return": "void", "signature": "void sendMessageToManagerForConfiguredShards(final DataStoreType dataStoreType,\n            final List<Entry<ListenableFuture<T>, ShardResultBuilder>> shardResultData,\n            final Function<String, Object> messageSupplier)", "full_signature": "private void sendMessageToManagerForConfiguredShards(final DataStoreType dataStoreType,\n            final List<Entry<ListenableFuture<T>, ShardResultBuilder>> shardResultData,\n            final Function<String, Object> messageSupplier)", "class_method_signature": "ClusterAdminRpcService.sendMessageToManagerForConfiguredShards(final DataStoreType dataStoreType,\n            final List<Entry<ListenableFuture<T>, ShardResultBuilder>> shardResultData,\n            final Function<String, Object> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "sendMessageToShardManagers", "parameters": "(final Object message)", "modifiers": "private", "return": "ListenableFuture<List<T>>", "signature": "ListenableFuture<List<T>> sendMessageToShardManagers(final Object message)", "full_signature": "private ListenableFuture<List<T>> sendMessageToShardManagers(final Object message)", "class_method_signature": "ClusterAdminRpcService.sendMessageToShardManagers(final Object message)", "testcase": false, "constructor": false}, {"identifier": "sendMessageToShardManager", "parameters": "(final DataStoreType dataStoreType, final Object message)", "modifiers": "private", "return": "ListenableFuture<T>", "signature": "ListenableFuture<T> sendMessageToShardManager(final DataStoreType dataStoreType, final Object message)", "full_signature": "private ListenableFuture<T> sendMessageToShardManager(final DataStoreType dataStoreType, final Object message)", "class_method_signature": "ClusterAdminRpcService.sendMessageToShardManager(final DataStoreType dataStoreType, final Object message)", "testcase": false, "constructor": false}, {"identifier": "saveSnapshotsToFile", "parameters": "(final DatastoreSnapshotList snapshots, final String fileName,\n            final SettableFuture<RpcResult<BackupDatastoreOutput>> returnFuture)", "modifiers": "@SuppressFBWarnings(value = \"UPM_UNCALLED_PRIVATE_METHOD\", justification = \"https://github.com/spotbugs/spotbugs/issues/811\") @SuppressWarnings(\"checkstyle:IllegalCatch\") private static", "return": "void", "signature": "void saveSnapshotsToFile(final DatastoreSnapshotList snapshots, final String fileName,\n            final SettableFuture<RpcResult<BackupDatastoreOutput>> returnFuture)", "full_signature": "@SuppressFBWarnings(value = \"UPM_UNCALLED_PRIVATE_METHOD\", justification = \"https://github.com/spotbugs/spotbugs/issues/811\") @SuppressWarnings(\"checkstyle:IllegalCatch\") private static void saveSnapshotsToFile(final DatastoreSnapshotList snapshots, final String fileName,\n            final SettableFuture<RpcResult<BackupDatastoreOutput>> returnFuture)", "class_method_signature": "ClusterAdminRpcService.saveSnapshotsToFile(final DatastoreSnapshotList snapshots, final String fileName,\n            final SettableFuture<RpcResult<BackupDatastoreOutput>> returnFuture)", "testcase": false, "constructor": false}, {"identifier": "onDatastoreBackupFailure", "parameters": "(final String fileName,\n            final SettableFuture<RpcResult<T>> returnFuture, final Throwable failure)", "modifiers": "private static", "return": "void", "signature": "void onDatastoreBackupFailure(final String fileName,\n            final SettableFuture<RpcResult<T>> returnFuture, final Throwable failure)", "full_signature": "private static void onDatastoreBackupFailure(final String fileName,\n            final SettableFuture<RpcResult<T>> returnFuture, final Throwable failure)", "class_method_signature": "ClusterAdminRpcService.onDatastoreBackupFailure(final String fileName,\n            final SettableFuture<RpcResult<T>> returnFuture, final Throwable failure)", "testcase": false, "constructor": false}, {"identifier": "onMessageFailure", "parameters": "(final String msg, final SettableFuture<RpcResult<T>> returnFuture,\n            final Throwable failure)", "modifiers": "@SuppressFBWarnings(\"SLF4J_SIGN_ONLY_FORMAT\") private static", "return": "void", "signature": "void onMessageFailure(final String msg, final SettableFuture<RpcResult<T>> returnFuture,\n            final Throwable failure)", "full_signature": "@SuppressFBWarnings(\"SLF4J_SIGN_ONLY_FORMAT\") private static void onMessageFailure(final String msg, final SettableFuture<RpcResult<T>> returnFuture,\n            final Throwable failure)", "class_method_signature": "ClusterAdminRpcService.onMessageFailure(final String msg, final SettableFuture<RpcResult<T>> returnFuture,\n            final Throwable failure)", "testcase": false, "constructor": false}, {"identifier": "ask", "parameters": "(final ActorRef actor, final Object message, final Timeout timeout)", "modifiers": "private", "return": "ListenableFuture<T>", "signature": "ListenableFuture<T> ask(final ActorRef actor, final Object message, final Timeout timeout)", "full_signature": "private ListenableFuture<T> ask(final ActorRef actor, final Object message, final Timeout timeout)", "class_method_signature": "ClusterAdminRpcService.ask(final ActorRef actor, final Object message, final Timeout timeout)", "testcase": false, "constructor": false}, {"identifier": "getAllShardLeadersClients", "parameters": "()", "modifiers": "private", "return": "ImmutableMap<ShardIdentifier, ListenableFuture<GetKnownClientsReply>>", "signature": "ImmutableMap<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> getAllShardLeadersClients()", "full_signature": "private ImmutableMap<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> getAllShardLeadersClients()", "class_method_signature": "ClusterAdminRpcService.getAllShardLeadersClients()", "testcase": false, "constructor": false}, {"identifier": "addAllShardsClients", "parameters": "(\n            final ImmutableMap.Builder<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> builder,\n            final DataStoreType type, final ActorUtils utils)", "modifiers": "private static", "return": "void", "signature": "void addAllShardsClients(\n            final ImmutableMap.Builder<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> builder,\n            final DataStoreType type, final ActorUtils utils)", "full_signature": "private static void addAllShardsClients(\n            final ImmutableMap.Builder<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> builder,\n            final DataStoreType type, final ActorUtils utils)", "class_method_signature": "ClusterAdminRpcService.addAllShardsClients(\n            final ImmutableMap.Builder<ShardIdentifier, ListenableFuture<GetKnownClientsReply>> builder,\n            final DataStoreType type, final ActorUtils utils)", "testcase": false, "constructor": false}, {"identifier": "newFailedRpcResultFuture", "parameters": "(final String message)", "modifiers": "private static", "return": "ListenableFuture<RpcResult<T>>", "signature": "ListenableFuture<RpcResult<T>> newFailedRpcResultFuture(final String message)", "full_signature": "private static ListenableFuture<RpcResult<T>> newFailedRpcResultFuture(final String message)", "class_method_signature": "ClusterAdminRpcService.newFailedRpcResultFuture(final String message)", "testcase": false, "constructor": false}, {"identifier": "newFailedRpcResultBuilder", "parameters": "(final String message)", "modifiers": "private static", "return": "RpcResultBuilder<T>", "signature": "RpcResultBuilder<T> newFailedRpcResultBuilder(final String message)", "full_signature": "private static RpcResultBuilder<T> newFailedRpcResultBuilder(final String message)", "class_method_signature": "ClusterAdminRpcService.newFailedRpcResultBuilder(final String message)", "testcase": false, "constructor": false}, {"identifier": "newFailedRpcResultBuilder", "parameters": "(final String message, final Throwable cause)", "modifiers": "private static", "return": "RpcResultBuilder<T>", "signature": "RpcResultBuilder<T> newFailedRpcResultBuilder(final String message, final Throwable cause)", "full_signature": "private static RpcResultBuilder<T> newFailedRpcResultBuilder(final String message, final Throwable cause)", "class_method_signature": "ClusterAdminRpcService.newFailedRpcResultBuilder(final String message, final Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "newSuccessfulResult", "parameters": "(final T data)", "modifiers": "private static", "return": "RpcResult<T>", "signature": "RpcResult<T> newSuccessfulResult(final T data)", "full_signature": "private static RpcResult<T> newSuccessfulResult(final T data)", "class_method_signature": "ClusterAdminRpcService.newSuccessfulResult(final T data)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-cluster-admin-impl/src/main/java/org/opendaylight/controller/cluster/datastore/admin/ClusterAdminRpcService.java"}, "focal_method": {"identifier": "flipMemberVotingStatesForAllShards", "parameters": "(\n            final FlipMemberVotingStatesForAllShardsInput input)", "modifiers": "@Override public", "return": "ListenableFuture<RpcResult<FlipMemberVotingStatesForAllShardsOutput>>", "body": "@Override\n    public ListenableFuture<RpcResult<FlipMemberVotingStatesForAllShardsOutput>> flipMemberVotingStatesForAllShards(\n            final FlipMemberVotingStatesForAllShardsInput input) {\n        final List<Entry<ListenableFuture<Success>, ShardResultBuilder>> shardResultData = new ArrayList<>();\n        Function<String, Object> messageSupplier = FlipShardMembersVotingStatus::new;\n\n        LOG.info(\"Flip member voting states for all shards\");\n\n        sendMessageToManagerForConfiguredShards(DataStoreType.Config, shardResultData, messageSupplier);\n        sendMessageToManagerForConfiguredShards(DataStoreType.Operational, shardResultData, messageSupplier);\n\n        return waitForShardResults(shardResultData, shardResults ->\n                new FlipMemberVotingStatesForAllShardsOutputBuilder().setShardResult(shardResults).build(),\n                \"Failed to change member voting states\");\n    }", "signature": "ListenableFuture<RpcResult<FlipMemberVotingStatesForAllShardsOutput>> flipMemberVotingStatesForAllShards(\n            final FlipMemberVotingStatesForAllShardsInput input)", "full_signature": "@Override public ListenableFuture<RpcResult<FlipMemberVotingStatesForAllShardsOutput>> flipMemberVotingStatesForAllShards(\n            final FlipMemberVotingStatesForAllShardsInput input)", "class_method_signature": "ClusterAdminRpcService.flipMemberVotingStatesForAllShards(\n            final FlipMemberVotingStatesForAllShardsInput input)", "testcase": false, "constructor": false, "invocations": ["info", "sendMessageToManagerForConfiguredShards", "sendMessageToManagerForConfiguredShards", "waitForShardResults", "build", "setShardResult"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}