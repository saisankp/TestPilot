{"test_class": {"identifier": "IntSequenceDataPoolTest", "superclass": "extends AbstractArtefactTest", "interfaces": "", "fields": [], "file": "step-plans/step-plans-base-artefacts/src/test/java/step/datapool/sequence/IntSequenceDataPoolTest.java"}, "test_case": {"identifier": "testIntSequenceDataPool", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIntSequenceDataPool() {\n\t\t\n\t\tint nbIncrementsWanted = 3;\n\t\tint maxIntWanted = 10;\n\t\t\n\t\tIntSequenceDataPool poolConf = new IntSequenceDataPool();\n\t\tpoolConf.setStart(new DynamicValue<Integer>(1));\n\t\tpoolConf.setEnd(new DynamicValue<Integer>(maxIntWanted));\n\t\tpoolConf.setInc(new DynamicValue<Integer>(1));\n\t\t\n\n\t\tDataSet<?> pool = DataPoolFactory.getDataPool(\"sequence\", poolConf, newExecutionContext());\n\n\t\tpool.init();\n\t\tInteger value = incrementNtimes(pool, nbIncrementsWanted);\n\t\tpool.close();\n\t\t\n\t\tAssert.assertEquals(nbIncrementsWanted, value.intValue());\n\t}", "signature": "void testIntSequenceDataPool()", "full_signature": "@Test public void testIntSequenceDataPool()", "class_method_signature": "IntSequenceDataPoolTest.testIntSequenceDataPool()", "testcase": true, "constructor": false, "invocations": ["setStart", "setEnd", "setInc", "getDataPool", "newExecutionContext", "init", "incrementNtimes", "close", "assertEquals", "intValue"]}, "focal_class": {"identifier": "IntSequenceDataPool", "superclass": "extends DataPoolConfiguration", "interfaces": "", "fields": [{"original_string": "DynamicValue<Integer> start = new DynamicValue<Integer>(1);", "modifier": "", "type": "DynamicValue<Integer>", "declarator": "start = new DynamicValue<Integer>(1)", "var_name": "start"}, {"original_string": "DynamicValue<Integer> end = new DynamicValue<Integer>(2);", "modifier": "", "type": "DynamicValue<Integer>", "declarator": "end = new DynamicValue<Integer>(2)", "var_name": "end"}, {"original_string": "DynamicValue<Integer> inc = new DynamicValue<Integer>(1);", "modifier": "", "type": "DynamicValue<Integer>", "declarator": "inc = new DynamicValue<Integer>(1)", "var_name": "inc"}], "methods": [{"identifier": "IntSequenceDataPool", "parameters": "()", "modifiers": "public", "return": "", "signature": " IntSequenceDataPool()", "full_signature": "public  IntSequenceDataPool()", "class_method_signature": "IntSequenceDataPool.IntSequenceDataPool()", "testcase": false, "constructor": true}, {"identifier": "getStart", "parameters": "()", "modifiers": "public", "return": "DynamicValue<Integer>", "signature": "DynamicValue<Integer> getStart()", "full_signature": "public DynamicValue<Integer> getStart()", "class_method_signature": "IntSequenceDataPool.getStart()", "testcase": false, "constructor": false}, {"identifier": "setStart", "parameters": "(DynamicValue<Integer> start)", "modifiers": "public", "return": "void", "signature": "void setStart(DynamicValue<Integer> start)", "full_signature": "public void setStart(DynamicValue<Integer> start)", "class_method_signature": "IntSequenceDataPool.setStart(DynamicValue<Integer> start)", "testcase": false, "constructor": false}, {"identifier": "getEnd", "parameters": "()", "modifiers": "public", "return": "DynamicValue<Integer>", "signature": "DynamicValue<Integer> getEnd()", "full_signature": "public DynamicValue<Integer> getEnd()", "class_method_signature": "IntSequenceDataPool.getEnd()", "testcase": false, "constructor": false}, {"identifier": "setEnd", "parameters": "(DynamicValue<Integer> end)", "modifiers": "public", "return": "void", "signature": "void setEnd(DynamicValue<Integer> end)", "full_signature": "public void setEnd(DynamicValue<Integer> end)", "class_method_signature": "IntSequenceDataPool.setEnd(DynamicValue<Integer> end)", "testcase": false, "constructor": false}, {"identifier": "getInc", "parameters": "()", "modifiers": "public", "return": "DynamicValue<Integer>", "signature": "DynamicValue<Integer> getInc()", "full_signature": "public DynamicValue<Integer> getInc()", "class_method_signature": "IntSequenceDataPool.getInc()", "testcase": false, "constructor": false}, {"identifier": "setInc", "parameters": "(DynamicValue<Integer> inc)", "modifiers": "public", "return": "void", "signature": "void setInc(DynamicValue<Integer> inc)", "full_signature": "public void setInc(DynamicValue<Integer> inc)", "class_method_signature": "IntSequenceDataPool.setInc(DynamicValue<Integer> inc)", "testcase": false, "constructor": false}], "file": "step-plans/step-plans-base-artefacts/src/main/java/step/datapool/sequence/IntSequenceDataPool.java"}, "focal_method": {"identifier": "IntSequenceDataPool", "parameters": "()", "modifiers": "public", "return": "", "body": "public IntSequenceDataPool() {\n\t\tsuper();\n\t}", "signature": " IntSequenceDataPool()", "full_signature": "public  IntSequenceDataPool()", "class_method_signature": "IntSequenceDataPool.IntSequenceDataPool()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 62342369, "url": "https://github.com/exense/step", "stars": 12, "created": "6/30/2016 9:08:29 PM +00:00", "updates": "2020-01-24T17:13:24+00:00", "fork": "False", "license": "licensed"}}