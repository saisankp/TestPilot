{"test_class": {"identifier": "TemporalsTest", "superclass": "", "interfaces": "", "fields": [], "file": "debezium-core/src/test/java/io/debezium/time/TemporalsTest.java"}, "test_case": {"identifier": "maxHandlesEqualValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void maxHandlesEqualValue() {\n        Duration oneMilli = Duration.ofMillis(1);\n        Duration oneMillionNanos = Duration.ofNanos(1_000_000);\n        assertThat(Temporals.max(oneMilli, oneMillionNanos)).isEqualTo(oneMilli);\n        assertThat(Temporals.max(oneMilli, oneMillionNanos)).isEqualTo(oneMillionNanos);\n    }", "signature": "void maxHandlesEqualValue()", "full_signature": "@Test public void maxHandlesEqualValue()", "class_method_signature": "TemporalsTest.maxHandlesEqualValue()", "testcase": true, "constructor": false, "invocations": ["ofMillis", "ofNanos", "isEqualTo", "assertThat", "max", "isEqualTo", "assertThat", "max"]}, "focal_class": {"identifier": "Temporals", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "max", "parameters": "(Duration d1, Duration d2)", "modifiers": "public static", "return": "Duration", "signature": "Duration max(Duration d1, Duration d2)", "full_signature": "public static Duration max(Duration d1, Duration d2)", "class_method_signature": "Temporals.max(Duration d1, Duration d2)", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "(Duration d1, Duration d2)", "modifiers": "public static", "return": "Duration", "signature": "Duration min(Duration d1, Duration d2)", "full_signature": "public static Duration min(Duration d1, Duration d2)", "class_method_signature": "Temporals.min(Duration d1, Duration d2)", "testcase": false, "constructor": false}], "file": "debezium-core/src/main/java/io/debezium/time/Temporals.java"}, "focal_method": {"identifier": "max", "parameters": "(Duration d1, Duration d2)", "modifiers": "public static", "return": "Duration", "body": "public static Duration max(Duration d1, Duration d2) {\n        return d1.compareTo(d2) == 1 ? d1 : d2;\n    }", "signature": "Duration max(Duration d1, Duration d2)", "full_signature": "public static Duration max(Duration d1, Duration d2)", "class_method_signature": "Temporals.max(Duration d1, Duration d2)", "testcase": false, "constructor": false, "invocations": ["compareTo"]}, "repository": {"repo_id": 50205233, "url": "https://github.com/debezium/debezium", "stars": 2686, "created": "1/22/2016 8:17:05 PM +00:00", "updates": "2020-01-27T20:48:54+00:00", "fork": "False", "license": "licensed"}}