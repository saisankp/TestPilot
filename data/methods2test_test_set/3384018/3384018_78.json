{"test_class": {"identifier": "TestHttpRequestBase", "superclass": "", "interfaces": "", "fields": [], "file": "external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/client/methods/TestHttpRequestBase.java"}, "test_case": {"identifier": "testCloneStreamingEntityEnclosingRequests", "parameters": "()", "modifiers": "@Test(expected=CloneNotSupportedException.class) public", "return": "void", "body": "@Test(expected=CloneNotSupportedException.class)\n    public void testCloneStreamingEntityEnclosingRequests() throws Exception {\n        ByteArrayInputStream instream = new ByteArrayInputStream(new byte[] {});\n        InputStreamEntity e2 = new InputStreamEntity(instream, -1);\n        HttpPost httppost = new HttpPost(\"http://host/path\");\n        httppost.setEntity(e2);\n        httppost.clone();\n    }", "signature": "void testCloneStreamingEntityEnclosingRequests()", "full_signature": "@Test(expected=CloneNotSupportedException.class) public void testCloneStreamingEntityEnclosingRequests()", "class_method_signature": "TestHttpRequestBase.testCloneStreamingEntityEnclosingRequests()", "testcase": true, "constructor": false, "invocations": ["setEntity", "clone"]}, "focal_class": {"identifier": "HttpRequestBase", "superclass": "extends AbstractHttpMessage", "interfaces": "implements HttpUriRequest, AbortableHttpRequest, Cloneable", "fields": [{"original_string": "private Lock abortLock;", "modifier": "private", "type": "Lock", "declarator": "abortLock", "var_name": "abortLock"}, {"original_string": "private boolean aborted;", "modifier": "private", "type": "boolean", "declarator": "aborted", "var_name": "aborted"}, {"original_string": "private URI uri;", "modifier": "private", "type": "URI", "declarator": "uri", "var_name": "uri"}, {"original_string": "private ClientConnectionRequest connRequest;", "modifier": "private", "type": "ClientConnectionRequest", "declarator": "connRequest", "var_name": "connRequest"}, {"original_string": "private ConnectionReleaseTrigger releaseTrigger;", "modifier": "private", "type": "ConnectionReleaseTrigger", "declarator": "releaseTrigger", "var_name": "releaseTrigger"}], "methods": [{"identifier": "HttpRequestBase", "parameters": "()", "modifiers": "public", "return": "", "signature": " HttpRequestBase()", "full_signature": "public  HttpRequestBase()", "class_method_signature": "HttpRequestBase.HttpRequestBase()", "testcase": false, "constructor": true}, {"identifier": "getMethod", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String getMethod()", "full_signature": "public abstract String getMethod()", "class_method_signature": "HttpRequestBase.getMethod()", "testcase": false, "constructor": false}, {"identifier": "getProtocolVersion", "parameters": "()", "modifiers": "public", "return": "ProtocolVersion", "signature": "ProtocolVersion getProtocolVersion()", "full_signature": "public ProtocolVersion getProtocolVersion()", "class_method_signature": "HttpRequestBase.getProtocolVersion()", "testcase": false, "constructor": false}, {"identifier": "getURI", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getURI()", "full_signature": "public URI getURI()", "class_method_signature": "HttpRequestBase.getURI()", "testcase": false, "constructor": false}, {"identifier": "getRequestLine", "parameters": "()", "modifiers": "public", "return": "RequestLine", "signature": "RequestLine getRequestLine()", "full_signature": "public RequestLine getRequestLine()", "class_method_signature": "HttpRequestBase.getRequestLine()", "testcase": false, "constructor": false}, {"identifier": "setURI", "parameters": "(final URI uri)", "modifiers": "public", "return": "void", "signature": "void setURI(final URI uri)", "full_signature": "public void setURI(final URI uri)", "class_method_signature": "HttpRequestBase.setURI(final URI uri)", "testcase": false, "constructor": false}, {"identifier": "setConnectionRequest", "parameters": "(final ClientConnectionRequest connRequest)", "modifiers": "public", "return": "void", "signature": "void setConnectionRequest(final ClientConnectionRequest connRequest)", "full_signature": "public void setConnectionRequest(final ClientConnectionRequest connRequest)", "class_method_signature": "HttpRequestBase.setConnectionRequest(final ClientConnectionRequest connRequest)", "testcase": false, "constructor": false}, {"identifier": "setReleaseTrigger", "parameters": "(final ConnectionReleaseTrigger releaseTrigger)", "modifiers": "public", "return": "void", "signature": "void setReleaseTrigger(final ConnectionReleaseTrigger releaseTrigger)", "full_signature": "public void setReleaseTrigger(final ConnectionReleaseTrigger releaseTrigger)", "class_method_signature": "HttpRequestBase.setReleaseTrigger(final ConnectionReleaseTrigger releaseTrigger)", "testcase": false, "constructor": false}, {"identifier": "abort", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void abort()", "full_signature": "public void abort()", "class_method_signature": "HttpRequestBase.abort()", "testcase": false, "constructor": false}, {"identifier": "isAborted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAborted()", "full_signature": "public boolean isAborted()", "class_method_signature": "HttpRequestBase.isAborted()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "HttpRequestBase.clone()", "testcase": false, "constructor": false}], "file": "external_sources/httpclient-4.1.1/httpclient/src/main/java/org/apache/ogt/http/client/methods/HttpRequestBase.java"}, "focal_method": {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object clone() throws CloneNotSupportedException {\n        HttpRequestBase clone = (HttpRequestBase) super.clone();\n        clone.abortLock = new ReentrantLock();\n        clone.aborted = false;\n        clone.releaseTrigger = null;\n        clone.connRequest = null;\n        clone.headergroup = (HeaderGroup) CloneUtils.clone(this.headergroup);\n        clone.params = (HttpParams) CloneUtils.clone(this.params);\n        return clone;\n    }", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "HttpRequestBase.clone()", "testcase": false, "constructor": false, "invocations": ["clone", "clone", "clone"]}, "repository": {"repo_id": 3384018, "url": "https://github.com/f8full/open-bixi-gpstracker", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2028, "license": "licensed"}}