{"test_class": {"identifier": "InsertTest", "superclass": "", "interfaces": "", "fields": [], "file": "squel/src/test/java/com/github/gchudnov/squel/InsertTest.java"}, "test_case": {"identifier": "unionQueryBuilderShouldThrow", "parameters": "()", "modifiers": "@Test(expected=UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected=UnsupportedOperationException.class)\n    public void unionQueryBuilderShouldThrow() {\n        Squel.insert()\n                .union(Squel.select());\n    }", "signature": "void unionQueryBuilderShouldThrow()", "full_signature": "@Test(expected=UnsupportedOperationException.class) public void unionQueryBuilderShouldThrow()", "class_method_signature": "InsertTest.unionQueryBuilderShouldThrow()", "testcase": true, "constructor": false, "invocations": ["union", "insert", "select"]}, "focal_class": {"identifier": "Insert", "superclass": "extends QueryBuilder", "interfaces": "", "fields": [], "methods": [{"identifier": "Insert", "parameters": "(QueryBuilderOptions options)", "modifiers": "", "return": "", "signature": " Insert(QueryBuilderOptions options)", "full_signature": "  Insert(QueryBuilderOptions options)", "class_method_signature": "Insert.Insert(QueryBuilderOptions options)", "testcase": false, "constructor": true}, {"identifier": "into", "parameters": "(String table)", "modifiers": "@Override public", "return": "QueryBuilder", "signature": "QueryBuilder into(String table)", "full_signature": "@Override public QueryBuilder into(String table)", "class_method_signature": "Insert.into(String table)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String field, T value)", "modifiers": "@Override public", "return": "QueryBuilder", "signature": "QueryBuilder set(String field, T value)", "full_signature": "@Override public QueryBuilder set(String field, T value)", "class_method_signature": "Insert.set(String field, T value)", "testcase": false, "constructor": false}, {"identifier": "fromQuery", "parameters": "(Iterable<String> fields, QueryBuilder query)", "modifiers": "@Override public", "return": "QueryBuilder", "signature": "QueryBuilder fromQuery(Iterable<String> fields, QueryBuilder query)", "full_signature": "@Override public QueryBuilder fromQuery(Iterable<String> fields, QueryBuilder query)", "class_method_signature": "Insert.fromQuery(Iterable<String> fields, QueryBuilder query)", "testcase": false, "constructor": false}], "file": "squel/src/main/java/com/github/gchudnov/squel/Insert.java"}, "focal_method": {"identifier": "Insert", "parameters": "(QueryBuilderOptions options)", "modifiers": "", "return": "", "body": "Insert(QueryBuilderOptions options) {\n        super(options, Arrays.asList(\n                new StringBlock(options, \"INSERT\"),\n                new IntoTableBlock(options),            // 1\n                new InsertFieldValueBlock(options),     // 2\n                new InsertFieldsFromQueryBlock(options) // 3\n        ));\n    }", "signature": " Insert(QueryBuilderOptions options)", "full_signature": "  Insert(QueryBuilderOptions options)", "class_method_signature": "Insert.Insert(QueryBuilderOptions options)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 36725014, "url": "https://github.com/gchudnov/squel-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 10, "size": 456, "license": "licensed"}}