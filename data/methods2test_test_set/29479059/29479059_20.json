{"test_class": {"identifier": "JobLauncherFeServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JobLauncherFeService jobLauncherFeService;", "modifier": "private", "type": "JobLauncherFeService", "declarator": "jobLauncherFeService", "var_name": "jobLauncherFeService"}, {"original_string": "@Mock\n    private RegistrationBean registrationBean;", "modifier": "@Mock\n    private", "type": "RegistrationBean", "declarator": "registrationBean", "var_name": "registrationBean"}, {"original_string": "@Mock\n    private JobServerService jobServerService;", "modifier": "@Mock\n    private", "type": "JobServerService", "declarator": "jobServerService", "var_name": "jobServerService"}], "file": "spring-batch-lightmin-server/spring-batch-lightmin-server-fe/src/test/java/org/tuxdevelop/spring/batch/lightmin/server/fe/service/JobLauncherFeServiceTest.java"}, "test_case": {"identifier": "testGetJobLauncherModel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetJobLauncherModel() {\n\n        final String jobName = \"testJob\";\n        final String applicationInstanceId = \"testApp\";\n\n        final String name1 = \"longValue\";\n        final String name2 = \"stringValue\";\n        final JobParameter jobParameter1 = ApiTestHelper.createJobParameter(1L, ParameterType.LONG);\n        final JobParameter jobParameter2 = ApiTestHelper.createJobParameter(\"test\", ParameterType.STRING);\n        final Map<String, JobParameter> jobParameterMap = new HashMap<>();\n        ApiTestHelper.addJobParameter(jobParameterMap, name1, jobParameter1);\n        ApiTestHelper.addJobParameter(jobParameterMap, name2, jobParameter2);\n\n        final JobParameters jobParameters = ApiTestHelper.createJobParameters(jobParameterMap);\n\n        final LightminClientApplication applicationInstance = new LightminClientApplication();\n        when(this.registrationBean.findById(applicationInstanceId)).thenReturn(applicationInstance);\n\n        when(this.jobServerService.getLastJobParameters(jobName, applicationInstance)).thenReturn(jobParameters);\n\n        final JobLauncherModel result = this.jobLauncherFeService.getJobLauncherModel(jobName, applicationInstanceId);\n\n        BDDAssertions.then(result).isNotNull();\n        BDDAssertions.then(result.getJobParameters()).isEqualTo(ApiParameterParser.parseParametersToString(jobParameters));\n        BDDAssertions.then(result.getApplicationInstanceId()).isEqualTo(applicationInstanceId);\n        BDDAssertions.then(result.getJobName()).isEqualTo(jobName);\n    }", "signature": "void testGetJobLauncherModel()", "full_signature": "@Test public void testGetJobLauncherModel()", "class_method_signature": "JobLauncherFeServiceTest.testGetJobLauncherModel()", "testcase": true, "constructor": false, "invocations": ["createJobParameter", "createJobParameter", "addJobParameter", "addJobParameter", "createJobParameters", "thenReturn", "when", "findById", "thenReturn", "when", "getLastJobParameters", "getJobLauncherModel", "isNotNull", "then", "isEqualTo", "then", "getJobParameters", "parseParametersToString", "isEqualTo", "then", "getApplicationInstanceId", "isEqualTo", "then", "getJobName"]}, "focal_class": {"identifier": "JobLauncherFeService", "superclass": "extends CommonFeService", "interfaces": "", "fields": [{"original_string": "private final JobServerService jobServerService;", "modifier": "private final", "type": "JobServerService", "declarator": "jobServerService", "var_name": "jobServerService"}], "methods": [{"identifier": "JobLauncherFeService", "parameters": "(final RegistrationBean registrationBean, final JobServerService jobServerService)", "modifiers": "public", "return": "", "signature": " JobLauncherFeService(final RegistrationBean registrationBean, final JobServerService jobServerService)", "full_signature": "public  JobLauncherFeService(final RegistrationBean registrationBean, final JobServerService jobServerService)", "class_method_signature": "JobLauncherFeService.JobLauncherFeService(final RegistrationBean registrationBean, final JobServerService jobServerService)", "testcase": false, "constructor": true}, {"identifier": "getJobLauncherModel", "parameters": "(final String jobName,\n                                                final String applicationInstanceId)", "modifiers": "public", "return": "JobLauncherModel", "signature": "JobLauncherModel getJobLauncherModel(final String jobName,\n                                                final String applicationInstanceId)", "full_signature": "public JobLauncherModel getJobLauncherModel(final String jobName,\n                                                final String applicationInstanceId)", "class_method_signature": "JobLauncherFeService.getJobLauncherModel(final String jobName,\n                                                final String applicationInstanceId)", "testcase": false, "constructor": false}, {"identifier": "launchJob", "parameters": "(final JobLauncherModel jobLauncherModel)", "modifiers": "public", "return": "void", "signature": "void launchJob(final JobLauncherModel jobLauncherModel)", "full_signature": "public void launchJob(final JobLauncherModel jobLauncherModel)", "class_method_signature": "JobLauncherFeService.launchJob(final JobLauncherModel jobLauncherModel)", "testcase": false, "constructor": false}, {"identifier": "attachIncremeter", "parameters": "(final JobLauncherModel jobLauncherModel, final JobParameters jobParameters)", "modifiers": "", "return": "void", "signature": "void attachIncremeter(final JobLauncherModel jobLauncherModel, final JobParameters jobParameters)", "full_signature": " void attachIncremeter(final JobLauncherModel jobLauncherModel, final JobParameters jobParameters)", "class_method_signature": "JobLauncherFeService.attachIncremeter(final JobLauncherModel jobLauncherModel, final JobParameters jobParameters)", "testcase": false, "constructor": false}], "file": "spring-batch-lightmin-server/spring-batch-lightmin-server-fe/src/main/java/org/tuxdevelop/spring/batch/lightmin/server/fe/service/JobLauncherFeService.java"}, "focal_method": {"identifier": "getJobLauncherModel", "parameters": "(final String jobName,\n                                                final String applicationInstanceId)", "modifiers": "public", "return": "JobLauncherModel", "body": "public JobLauncherModel getJobLauncherModel(final String jobName,\n                                                final String applicationInstanceId) {\n        final LightminClientApplication lightminClientApplication =\n                this.findLightminClientApplicatonById(applicationInstanceId);\n        final JobParameters oldParameters =\n                this.jobServerService.getLastJobParameters(jobName, lightminClientApplication);\n\n        final String oldParametersString = ApiParameterParser.parseParametersToString(oldParameters);\n\n        final JobLauncherModel model = new JobLauncherModel();\n        model.setJobParameters(oldParametersString);\n        model.setJobName(jobName);\n        model.setApplicationInstanceId(applicationInstanceId);\n\n        return model;\n    }", "signature": "JobLauncherModel getJobLauncherModel(final String jobName,\n                                                final String applicationInstanceId)", "full_signature": "public JobLauncherModel getJobLauncherModel(final String jobName,\n                                                final String applicationInstanceId)", "class_method_signature": "JobLauncherFeService.getJobLauncherModel(final String jobName,\n                                                final String applicationInstanceId)", "testcase": false, "constructor": false, "invocations": ["findLightminClientApplicatonById", "getLastJobParameters", "parseParametersToString", "setJobParameters", "setJobName", "setApplicationInstanceId"]}, "repository": {"repo_id": 29479059, "url": "https://github.com/tuxdevelop/spring-batch-lightmin", "language": "Java", "is_fork": false, "fork_count": 34, "stargazer_count": 109, "size": 12355, "license": "licensed"}}