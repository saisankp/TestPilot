{"test_class": {"identifier": "RebindOperationExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LdapOperations ldapOperationsMock;", "modifier": "private", "type": "LdapOperations", "declarator": "ldapOperationsMock", "var_name": "ldapOperationsMock"}], "file": "core/src/test/java/org/springframework/ldap/transaction/compensating/RebindOperationExecutorTest.java"}, "test_case": {"identifier": "testPerformOperation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPerformOperation() {\n        LdapName expectedOriginalDn = LdapUtils.newLdapName(\n                \"cn=john doe\");\n        LdapName expectedTempDn = LdapUtils.newLdapName(\n                \"cn=john doe_temp\");\n        Object expectedObject = new Object();\n        BasicAttributes expectedAttributes = new BasicAttributes();\n        RebindOperationExecutor tested = new RebindOperationExecutor(\n                ldapOperationsMock, expectedOriginalDn, expectedTempDn,\n                expectedObject, expectedAttributes);\n\n        // perform test\n        tested.performOperation();\n        verify(ldapOperationsMock).rename(expectedOriginalDn, expectedTempDn);\n        verify(ldapOperationsMock)\n                .bind(expectedOriginalDn, expectedObject, expectedAttributes);\n    }", "signature": "void testPerformOperation()", "full_signature": "@Test public void testPerformOperation()", "class_method_signature": "RebindOperationExecutorTest.testPerformOperation()", "testcase": true, "constructor": false, "invocations": ["newLdapName", "newLdapName", "performOperation", "rename", "verify", "bind", "verify"]}, "focal_class": {"identifier": "RebindOperationExecutor", "superclass": "", "interfaces": "implements\n        CompensatingTransactionOperationExecutor", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(RebindOperationExecutor.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(RebindOperationExecutor.class)", "var_name": "log"}, {"original_string": "private LdapOperations ldapOperations;", "modifier": "private", "type": "LdapOperations", "declarator": "ldapOperations", "var_name": "ldapOperations"}, {"original_string": "private Name originalDn;", "modifier": "private", "type": "Name", "declarator": "originalDn", "var_name": "originalDn"}, {"original_string": "private Name temporaryDn;", "modifier": "private", "type": "Name", "declarator": "temporaryDn", "var_name": "temporaryDn"}, {"original_string": "private Object originalObject;", "modifier": "private", "type": "Object", "declarator": "originalObject", "var_name": "originalObject"}, {"original_string": "private Attributes originalAttributes;", "modifier": "private", "type": "Attributes", "declarator": "originalAttributes", "var_name": "originalAttributes"}], "methods": [{"identifier": "RebindOperationExecutor", "parameters": "(LdapOperations ldapOperations,\n            Name originalDn, Name temporaryDn, Object originalObject,\n            Attributes originalAttributes)", "modifiers": "public", "return": "", "signature": " RebindOperationExecutor(LdapOperations ldapOperations,\n            Name originalDn, Name temporaryDn, Object originalObject,\n            Attributes originalAttributes)", "full_signature": "public  RebindOperationExecutor(LdapOperations ldapOperations,\n            Name originalDn, Name temporaryDn, Object originalObject,\n            Attributes originalAttributes)", "class_method_signature": "RebindOperationExecutor.RebindOperationExecutor(LdapOperations ldapOperations,\n            Name originalDn, Name temporaryDn, Object originalObject,\n            Attributes originalAttributes)", "testcase": false, "constructor": true}, {"identifier": "getLdapOperations", "parameters": "()", "modifiers": "", "return": "LdapOperations", "signature": "LdapOperations getLdapOperations()", "full_signature": " LdapOperations getLdapOperations()", "class_method_signature": "RebindOperationExecutor.getLdapOperations()", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void rollback()", "full_signature": "public void rollback()", "class_method_signature": "RebindOperationExecutor.rollback()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void commit()", "full_signature": "public void commit()", "class_method_signature": "RebindOperationExecutor.commit()", "testcase": false, "constructor": false}, {"identifier": "performOperation", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void performOperation()", "full_signature": "public void performOperation()", "class_method_signature": "RebindOperationExecutor.performOperation()", "testcase": false, "constructor": false}, {"identifier": "getOriginalAttributes", "parameters": "()", "modifiers": "", "return": "Attributes", "signature": "Attributes getOriginalAttributes()", "full_signature": " Attributes getOriginalAttributes()", "class_method_signature": "RebindOperationExecutor.getOriginalAttributes()", "testcase": false, "constructor": false}, {"identifier": "getOriginalDn", "parameters": "()", "modifiers": "", "return": "Name", "signature": "Name getOriginalDn()", "full_signature": " Name getOriginalDn()", "class_method_signature": "RebindOperationExecutor.getOriginalDn()", "testcase": false, "constructor": false}, {"identifier": "getOriginalObject", "parameters": "()", "modifiers": "", "return": "Object", "signature": "Object getOriginalObject()", "full_signature": " Object getOriginalObject()", "class_method_signature": "RebindOperationExecutor.getOriginalObject()", "testcase": false, "constructor": false}, {"identifier": "getTemporaryDn", "parameters": "()", "modifiers": "", "return": "Name", "signature": "Name getTemporaryDn()", "full_signature": " Name getTemporaryDn()", "class_method_signature": "RebindOperationExecutor.getTemporaryDn()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/transaction/compensating/RebindOperationExecutor.java"}, "focal_method": {"identifier": "performOperation", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void performOperation() {\n        log.debug(\"Performing rebind operation - \"\n                + \"renaming original entry and \"\n                + \"binding new contents to entry.\");\n        ldapOperations.rename(originalDn, temporaryDn);\n        ldapOperations.bind(originalDn, originalObject, originalAttributes);\n    }", "signature": "void performOperation()", "full_signature": "public void performOperation()", "class_method_signature": "RebindOperationExecutor.performOperation()", "testcase": false, "constructor": false, "invocations": ["debug", "rename", "bind"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}