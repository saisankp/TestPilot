{"test_class": {"identifier": "StatsTrendActionTest", "superclass": "extends ActionTest", "interfaces": "", "fields": [], "file": "foxtrot-core/src/test/java/com/flipkart/foxtrot/core/querystore/actions/StatsTrendActionTest.java"}, "test_case": {"identifier": "testStatsTrendActionWithNoFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStatsTrendActionWithNoFilter() throws FoxtrotException, JsonProcessingException {\n        StatsTrendRequest request = new StatsTrendRequest();\n        request.setTable(TestUtils.TEST_TABLE_NAME);\n        request.setTimestamp(\"_timestamp\");\n        request.setField(\"battery\");\n        request.setNesting(Lists.newArrayList(\"os\", \"version\"));\n\n        StatsTrendResponse statsTrendResponse = StatsTrendResponse.class.cast(getQueryExecutor().execute(request));\n        assertNull(statsTrendResponse);\n    }", "signature": "void testStatsTrendActionWithNoFilter()", "full_signature": "@Test public void testStatsTrendActionWithNoFilter()", "class_method_signature": "StatsTrendActionTest.testStatsTrendActionWithNoFilter()", "testcase": true, "constructor": false, "invocations": ["setTable", "setTimestamp", "setField", "setNesting", "newArrayList", "cast", "execute", "getQueryExecutor", "assertNull"]}, "focal_class": {"identifier": "StatsTrendAction", "superclass": "extends Action<StatsTrendRequest>", "interfaces": "", "fields": [{"original_string": "private final ElasticsearchTuningConfig elasticsearchTuningConfig;", "modifier": "private final", "type": "ElasticsearchTuningConfig", "declarator": "elasticsearchTuningConfig", "var_name": "elasticsearchTuningConfig"}], "methods": [{"identifier": "StatsTrendAction", "parameters": "(StatsTrendRequest parameter, AnalyticsLoader analyticsLoader)", "modifiers": "public", "return": "", "signature": " StatsTrendAction(StatsTrendRequest parameter, AnalyticsLoader analyticsLoader)", "full_signature": "public  StatsTrendAction(StatsTrendRequest parameter, AnalyticsLoader analyticsLoader)", "class_method_signature": "StatsTrendAction.StatsTrendAction(StatsTrendRequest parameter, AnalyticsLoader analyticsLoader)", "testcase": false, "constructor": true}, {"identifier": "preprocess", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void preprocess()", "full_signature": "@Override public void preprocess()", "class_method_signature": "StatsTrendAction.preprocess()", "testcase": false, "constructor": false}, {"identifier": "getMetricKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMetricKey()", "full_signature": "@Override public String getMetricKey()", "class_method_signature": "StatsTrendAction.getMetricKey()", "testcase": false, "constructor": false}, {"identifier": "getRequestCacheKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRequestCacheKey()", "full_signature": "@Override public String getRequestCacheKey()", "class_method_signature": "StatsTrendAction.getRequestCacheKey()", "testcase": false, "constructor": false}, {"identifier": "validateImpl", "parameters": "(StatsTrendRequest parameter)", "modifiers": "@Override public", "return": "void", "signature": "void validateImpl(StatsTrendRequest parameter)", "full_signature": "@Override public void validateImpl(StatsTrendRequest parameter)", "class_method_signature": "StatsTrendAction.validateImpl(StatsTrendRequest parameter)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(StatsTrendRequest parameter)", "modifiers": "@Override public", "return": "ActionResponse", "signature": "ActionResponse execute(StatsTrendRequest parameter)", "full_signature": "@Override public ActionResponse execute(StatsTrendRequest parameter)", "class_method_signature": "StatsTrendAction.execute(StatsTrendRequest parameter)", "testcase": false, "constructor": false}, {"identifier": "getRequestBuilder", "parameters": "(StatsTrendRequest parameter)", "modifiers": "@Override public", "return": "SearchRequestBuilder", "signature": "SearchRequestBuilder getRequestBuilder(StatsTrendRequest parameter)", "full_signature": "@Override public SearchRequestBuilder getRequestBuilder(StatsTrendRequest parameter)", "class_method_signature": "StatsTrendAction.getRequestBuilder(StatsTrendRequest parameter)", "testcase": false, "constructor": false}, {"identifier": "getResponse", "parameters": "(org.elasticsearch.action.ActionResponse response, StatsTrendRequest parameter)", "modifiers": "@Override public", "return": "ActionResponse", "signature": "ActionResponse getResponse(org.elasticsearch.action.ActionResponse response, StatsTrendRequest parameter)", "full_signature": "@Override public ActionResponse getResponse(org.elasticsearch.action.ActionResponse response, StatsTrendRequest parameter)", "class_method_signature": "StatsTrendAction.getResponse(org.elasticsearch.action.ActionResponse response, StatsTrendRequest parameter)", "testcase": false, "constructor": false}, {"identifier": "buildAggregation", "parameters": "(StatsTrendRequest request, String table)", "modifiers": "private", "return": "AbstractAggregationBuilder", "signature": "AbstractAggregationBuilder buildAggregation(StatsTrendRequest request, String table)", "full_signature": "private AbstractAggregationBuilder buildAggregation(StatsTrendRequest request, String table)", "class_method_signature": "StatsTrendAction.buildAggregation(StatsTrendRequest request, String table)", "testcase": false, "constructor": false}, {"identifier": "buildResponse", "parameters": "(StatsTrendRequest request, Aggregations aggregations)", "modifiers": "private", "return": "StatsTrendResponse", "signature": "StatsTrendResponse buildResponse(StatsTrendRequest request, Aggregations aggregations)", "full_signature": "private StatsTrendResponse buildResponse(StatsTrendRequest request, Aggregations aggregations)", "class_method_signature": "StatsTrendAction.buildResponse(StatsTrendRequest request, Aggregations aggregations)", "testcase": false, "constructor": false}, {"identifier": "buildNestedTrendStats", "parameters": "(\n            List<String> nesting,\n            Aggregations aggregations)", "modifiers": "private", "return": "List<BucketResponse<List<StatsTrendValue>>>", "signature": "List<BucketResponse<List<StatsTrendValue>>> buildNestedTrendStats(\n            List<String> nesting,\n            Aggregations aggregations)", "full_signature": "private List<BucketResponse<List<StatsTrendValue>>> buildNestedTrendStats(\n            List<String> nesting,\n            Aggregations aggregations)", "class_method_signature": "StatsTrendAction.buildNestedTrendStats(\n            List<String> nesting,\n            Aggregations aggregations)", "testcase": false, "constructor": false}, {"identifier": "buildStatsTrendValue", "parameters": "(String field, Aggregations aggregations)", "modifiers": "private", "return": "List<StatsTrendValue>", "signature": "List<StatsTrendValue> buildStatsTrendValue(String field, Aggregations aggregations)", "full_signature": "private List<StatsTrendValue> buildStatsTrendValue(String field, Aggregations aggregations)", "class_method_signature": "StatsTrendAction.buildStatsTrendValue(String field, Aggregations aggregations)", "testcase": false, "constructor": false}, {"identifier": "getDefaultTimeSpan", "parameters": "()", "modifiers": "@Override protected", "return": "Filter", "signature": "Filter getDefaultTimeSpan()", "full_signature": "@Override protected Filter getDefaultTimeSpan()", "class_method_signature": "StatsTrendAction.getDefaultTimeSpan()", "testcase": false, "constructor": false}], "file": "foxtrot-core/src/main/java/com/flipkart/foxtrot/core/querystore/actions/StatsTrendAction.java"}, "focal_method": {"identifier": "execute", "parameters": "(StatsTrendRequest parameter)", "modifiers": "@Override public", "return": "ActionResponse", "body": "@Override\n    public ActionResponse execute(StatsTrendRequest parameter) {\n        SearchRequestBuilder searchRequestBuilder = getRequestBuilder(parameter);\n\n        try {\n            SearchResponse response = searchRequestBuilder.execute()\n                    .actionGet(getGetQueryTimeout());\n            return getResponse(response, parameter);\n        }\n        catch (ElasticsearchException e) {\n            throw FoxtrotExceptions.createQueryExecutionException(parameter, e);\n        }\n    }", "signature": "ActionResponse execute(StatsTrendRequest parameter)", "full_signature": "@Override public ActionResponse execute(StatsTrendRequest parameter)", "class_method_signature": "StatsTrendAction.execute(StatsTrendRequest parameter)", "testcase": false, "constructor": false, "invocations": ["getRequestBuilder", "actionGet", "execute", "getGetQueryTimeout", "getResponse", "createQueryExecutionException"]}, "repository": {"repo_id": 19980663, "url": "https://github.com/Flipkart/foxtrot", "stars": 22, "created": "5/20/2014 12:52:55 PM +00:00", "updates": "2020-01-07T07:05:03+00:00", "fork": "False", "license": "licensed"}}