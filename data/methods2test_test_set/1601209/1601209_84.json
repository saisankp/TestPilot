{"test_class": {"identifier": "HeadersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String ls  = System.lineSeparator();", "modifier": "private", "type": "String", "declarator": "ls  = System.lineSeparator()", "var_name": "ls"}], "file": "unirest/src/test/java/kong/unirest/HeadersTest.java"}, "test_case": {"identifier": "headersAreEqualIfEntryListIsEqual", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void headersAreEqualIfEntryListIsEqual() {\n        Headers h  = new Headers();\n        h.add(\"Accepts\", \"application/json\");\n\n        Headers j  = new Headers();\n        j.add(\"Accepts\", \"application/json\");\n\n        assertEquals(h, j);\n    }", "signature": "void headersAreEqualIfEntryListIsEqual()", "full_signature": "@Test void headersAreEqualIfEntryListIsEqual()", "class_method_signature": "HeadersTest.headersAreEqualIfEntryListIsEqual()", "testcase": true, "constructor": false, "invocations": ["add", "add", "assertEquals"]}, "focal_class": {"identifier": "Headers", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 71310341388734766L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 71310341388734766L", "var_name": "serialVersionUID"}, {"original_string": "private List<Header> headers = new ArrayList<>();", "modifier": "private", "type": "List<Header>", "declarator": "headers = new ArrayList<>()", "var_name": "headers"}], "methods": [{"identifier": "Headers", "parameters": "()", "modifiers": "public", "return": "", "signature": " Headers()", "full_signature": "public  Headers()", "class_method_signature": "Headers.Headers()", "testcase": false, "constructor": true}, {"identifier": "Headers", "parameters": "(Collection<Entry> entries)", "modifiers": "public", "return": "", "signature": " Headers(Collection<Entry> entries)", "full_signature": "public  Headers(Collection<Entry> entries)", "class_method_signature": "Headers.Headers(Collection<Entry> entries)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(String name, String value)", "modifiers": "public", "return": "void", "signature": "void add(String name, String value)", "full_signature": "public void add(String name, String value)", "class_method_signature": "Headers.add(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String name, Supplier<String> value)", "modifiers": "public", "return": "void", "signature": "void add(String name, Supplier<String> value)", "full_signature": "public void add(String name, Supplier<String> value)", "class_method_signature": "Headers.add(String name, Supplier<String> value)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String name, String value)", "modifiers": "public", "return": "void", "signature": "void replace(String name, String value)", "full_signature": "public void replace(String name, String value)", "class_method_signature": "Headers.replace(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String name)", "modifiers": "private", "return": "void", "signature": "void remove(String name)", "full_signature": "private void remove(String name)", "class_method_signature": "Headers.remove(String name)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "Headers.size()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String name)", "modifiers": "public", "return": "List<String>", "signature": "List<String> get(String name)", "full_signature": "public List<String> get(String name)", "class_method_signature": "Headers.get(String name)", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "(Headers header)", "modifiers": "public", "return": "void", "signature": "void putAll(Headers header)", "full_signature": "public void putAll(Headers header)", "class_method_signature": "Headers.putAll(Headers header)", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean containsKey(String name)", "full_signature": "public boolean containsKey(String name)", "class_method_signature": "Headers.containsKey(String name)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "Headers.clear()", "testcase": false, "constructor": false}, {"identifier": "getFirst", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getFirst(String key)", "full_signature": "public String getFirst(String key)", "class_method_signature": "Headers.getFirst(String key)", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "()", "modifiers": "public", "return": "List<Header>", "signature": "List<Header> all()", "full_signature": "public List<Header> all()", "class_method_signature": "Headers.all()", "testcase": false, "constructor": false}, {"identifier": "isName", "parameters": "(Header h, String name)", "modifiers": "private", "return": "boolean", "signature": "boolean isName(Header h, String name)", "full_signature": "private boolean isName(Header h, String name)", "class_method_signature": "Headers.isName(Header h, String name)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String key, String value)", "modifiers": "", "return": "void", "signature": "void remove(String key, String value)", "full_signature": " void remove(String key, String value)", "class_method_signature": "Headers.remove(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Headers.toString()", "testcase": false, "constructor": false}, {"identifier": "cookie", "parameters": "(Cookie cookie)", "modifiers": "public", "return": "void", "signature": "void cookie(Cookie cookie)", "full_signature": "public void cookie(Cookie cookie)", "class_method_signature": "Headers.cookie(Cookie cookie)", "testcase": false, "constructor": false}, {"identifier": "cookie", "parameters": "(Collection<Cookie> cookies)", "modifiers": "public", "return": "void", "signature": "void cookie(Collection<Cookie> cookies)", "full_signature": "public void cookie(Collection<Cookie> cookies)", "class_method_signature": "Headers.cookie(Collection<Cookie> cookies)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Headers.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Headers.hashCode()", "testcase": false, "constructor": false}], "file": "unirest/src/main/java/kong/unirest/Headers.java"}, "focal_method": {"identifier": "add", "parameters": "(String name, String value)", "modifiers": "public", "return": "void", "body": "public void add(String name, String value) {\n        add(name, () -> value);\n    }", "signature": "void add(String name, String value)", "full_signature": "public void add(String name, String value)", "class_method_signature": "Headers.add(String name, String value)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 1601209, "url": "https://github.com/Kong/unirest-java", "stars": 1855, "created": "4/11/2011 9:19:53 PM +00:00", "updates": "2020-01-25T12:07:58+00:00", "fork": "False", "license": "licensed"}}