{"test_class": {"identifier": "ConversionsTest", "superclass": "", "interfaces": "", "fields": [], "file": "reflekt/src/test/java/io/advantageous/boon/core/ConversionsTest.java"}, "test_case": {"identifier": "coerceInt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void coerceInt() {\n        int i = Conversions.coerce(int.class, 1);\n        boolean ok = i == 1 || die();\n\n    }", "signature": "void coerceInt()", "full_signature": "@Test public void coerceInt()", "class_method_signature": "ConversionsTest.coerceInt()", "testcase": true, "constructor": false, "invocations": ["coerce", "die"]}, "focal_class": {"identifier": "Conversions", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(Conversions.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(Conversions.class.getName())", "var_name": "log"}], "methods": [{"identifier": "toBigDecimal", "parameters": "(Object obj)", "modifiers": "public static", "return": "BigDecimal", "signature": "BigDecimal toBigDecimal(Object obj)", "full_signature": "public static BigDecimal toBigDecimal(Object obj)", "class_method_signature": "Conversions.toBigDecimal(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toBigInteger", "parameters": "(Object obj)", "modifiers": "public static", "return": "BigInteger", "signature": "BigInteger toBigInteger(Object obj)", "full_signature": "public static BigInteger toBigInteger(Object obj)", "class_method_signature": "Conversions.toBigInteger(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "(Object obj)", "modifiers": "public static", "return": "int", "signature": "int toInt(Object obj)", "full_signature": "public static int toInt(Object obj)", "class_method_signature": "Conversions.toInt(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "(Object obj, int defaultValue)", "modifiers": "public static", "return": "int", "signature": "int toInt(Object obj, int defaultValue)", "full_signature": "public static int toInt(Object obj, int defaultValue)", "class_method_signature": "Conversions.toInt(Object obj, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "toByte", "parameters": "(Object obj)", "modifiers": "public static", "return": "byte", "signature": "byte toByte(Object obj)", "full_signature": "public static byte toByte(Object obj)", "class_method_signature": "Conversions.toByte(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toByte", "parameters": "(Object obj, byte defaultByte)", "modifiers": "public static", "return": "byte", "signature": "byte toByte(Object obj, byte defaultByte)", "full_signature": "public static byte toByte(Object obj, byte defaultByte)", "class_method_signature": "Conversions.toByte(Object obj, byte defaultByte)", "testcase": false, "constructor": false}, {"identifier": "toShort", "parameters": "(Object obj)", "modifiers": "public static", "return": "short", "signature": "short toShort(Object obj)", "full_signature": "public static short toShort(Object obj)", "class_method_signature": "Conversions.toShort(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toShort", "parameters": "(Object obj, final short shortDefault)", "modifiers": "public static", "return": "short", "signature": "short toShort(Object obj, final short shortDefault)", "full_signature": "public static short toShort(Object obj, final short shortDefault)", "class_method_signature": "Conversions.toShort(Object obj, final short shortDefault)", "testcase": false, "constructor": false}, {"identifier": "toChar", "parameters": "(Object obj)", "modifiers": "public static", "return": "char", "signature": "char toChar(Object obj)", "full_signature": "public static char toChar(Object obj)", "class_method_signature": "Conversions.toChar(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toChar", "parameters": "(Object obj, final char defaultChar)", "modifiers": "public static", "return": "char", "signature": "char toChar(Object obj, final char defaultChar)", "full_signature": "public static char toChar(Object obj, final char defaultChar)", "class_method_signature": "Conversions.toChar(Object obj, final char defaultChar)", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "(Object obj)", "modifiers": "public static", "return": "long", "signature": "long toLong(Object obj)", "full_signature": "public static long toLong(Object obj)", "class_method_signature": "Conversions.toLong(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toLongOrDie", "parameters": "(Object obj)", "modifiers": "public static", "return": "long", "signature": "long toLongOrDie(Object obj)", "full_signature": "public static long toLongOrDie(Object obj)", "class_method_signature": "Conversions.toLongOrDie(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "(Object obj, final long longDefault)", "modifiers": "public static", "return": "long", "signature": "long toLong(Object obj, final long longDefault)", "full_signature": "public static long toLong(Object obj, final long longDefault)", "class_method_signature": "Conversions.toLong(Object obj, final long longDefault)", "testcase": false, "constructor": false}, {"identifier": "toCurrency", "parameters": "(Object obj)", "modifiers": "public static", "return": "Currency", "signature": "Currency toCurrency(Object obj)", "full_signature": "public static Currency toCurrency(Object obj)", "class_method_signature": "Conversions.toCurrency(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toBoolean", "parameters": "(Object value)", "modifiers": "public static", "return": "boolean", "signature": "boolean toBoolean(Object value)", "full_signature": "public static boolean toBoolean(Object value)", "class_method_signature": "Conversions.toBoolean(Object value)", "testcase": false, "constructor": false}, {"identifier": "toBoolean", "parameters": "(Object obj, boolean defaultValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean toBoolean(Object obj, boolean defaultValue)", "full_signature": "public static boolean toBoolean(Object obj, boolean defaultValue)", "class_method_signature": "Conversions.toBoolean(Object obj, boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "toBooleanOrDie", "parameters": "(Object obj)", "modifiers": "public static", "return": "boolean", "signature": "boolean toBooleanOrDie(Object obj)", "full_signature": "public static boolean toBooleanOrDie(Object obj)", "class_method_signature": "Conversions.toBooleanOrDie(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toDouble", "parameters": "(Object obj)", "modifiers": "public static", "return": "double", "signature": "double toDouble(Object obj)", "full_signature": "public static double toDouble(Object obj)", "class_method_signature": "Conversions.toDouble(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toFloat", "parameters": "(Object obj)", "modifiers": "public static", "return": "float", "signature": "float toFloat(Object obj)", "full_signature": "public static float toFloat(Object obj)", "class_method_signature": "Conversions.toFloat(Object obj)", "testcase": false, "constructor": false}, {"identifier": "coerce", "parameters": "(Class<T> clz, Object value)", "modifiers": "public static", "return": "T", "signature": "T coerce(Class<T> clz, Object value)", "full_signature": "public static T coerce(Class<T> clz, Object value)", "class_method_signature": "Conversions.coerce(Class<T> clz, Object value)", "testcase": false, "constructor": false}, {"identifier": "createFromArg", "parameters": "(Class<T> clz, Object value)", "modifiers": "public static", "return": "T", "signature": "T createFromArg(Class<T> clz, Object value)", "full_signature": "public static T createFromArg(Class<T> clz, Object value)", "class_method_signature": "Conversions.createFromArg(Class<T> clz, Object value)", "testcase": false, "constructor": false}, {"identifier": "coerce", "parameters": "(TypeType coerceTo, Class<T> clz, Object value)", "modifiers": "public static", "return": "T", "signature": "T coerce(TypeType coerceTo, Class<T> clz, Object value)", "full_signature": "public static T coerce(TypeType coerceTo, Class<T> clz, Object value)", "class_method_signature": "Conversions.coerce(TypeType coerceTo, Class<T> clz, Object value)", "testcase": false, "constructor": false}, {"identifier": "toUUID", "parameters": "(Object value)", "modifiers": "private static", "return": "UUID", "signature": "UUID toUUID(Object value)", "full_signature": "private static UUID toUUID(Object value)", "class_method_signature": "Conversions.toUUID(Object value)", "testcase": false, "constructor": false}, {"identifier": "coerceWithFlag", "parameters": "(Class<T> clz, boolean[] flag, Object value)", "modifiers": "public static", "return": "T", "signature": "T coerceWithFlag(Class<T> clz, boolean[] flag, Object value)", "full_signature": "public static T coerceWithFlag(Class<T> clz, boolean[] flag, Object value)", "class_method_signature": "Conversions.coerceWithFlag(Class<T> clz, boolean[] flag, Object value)", "testcase": false, "constructor": false}, {"identifier": "coerceWithFlag", "parameters": "(TypeType coerceTo, Class<T> clz, boolean[] flag, Object value)", "modifiers": "public static", "return": "T", "signature": "T coerceWithFlag(TypeType coerceTo, Class<T> clz, boolean[] flag, Object value)", "full_signature": "public static T coerceWithFlag(TypeType coerceTo, Class<T> clz, boolean[] flag, Object value)", "class_method_signature": "Conversions.coerceWithFlag(TypeType coerceTo, Class<T> clz, boolean[] flag, Object value)", "testcase": false, "constructor": false}, {"identifier": "toUUID", "parameters": "(boolean[] flag, Object value)", "modifiers": "private static", "return": "UUID", "signature": "UUID toUUID(boolean[] flag, Object value)", "full_signature": "private static UUID toUUID(boolean[] flag, Object value)", "class_method_signature": "Conversions.toUUID(boolean[] flag, Object value)", "testcase": false, "constructor": false}, {"identifier": "toTimeZone", "parameters": "(boolean[] flag, Object value)", "modifiers": "public static", "return": "TimeZone", "signature": "TimeZone toTimeZone(boolean[] flag, Object value)", "full_signature": "public static TimeZone toTimeZone(boolean[] flag, Object value)", "class_method_signature": "Conversions.toTimeZone(boolean[] flag, Object value)", "testcase": false, "constructor": false}, {"identifier": "toTimeZone", "parameters": "(Object value)", "modifiers": "public static", "return": "TimeZone", "signature": "TimeZone toTimeZone(Object value)", "full_signature": "public static TimeZone toTimeZone(Object value)", "class_method_signature": "Conversions.toTimeZone(Object value)", "testcase": false, "constructor": false}, {"identifier": "coerceClassic", "parameters": "(Class<T> clz, Object value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T coerceClassic(Class<T> clz, Object value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T coerceClassic(Class<T> clz, Object value)", "class_method_signature": "Conversions.coerceClassic(Class<T> clz, Object value)", "testcase": false, "constructor": false}, {"identifier": "toEnumOld", "parameters": "(Class<T> cls, String value)", "modifiers": "public static", "return": "T", "signature": "T toEnumOld(Class<T> cls, String value)", "full_signature": "public static T toEnumOld(Class<T> cls, String value)", "class_method_signature": "Conversions.toEnumOld(Class<T> cls, String value)", "testcase": false, "constructor": false}, {"identifier": "toEnum", "parameters": "(Class<T> cls, String value)", "modifiers": "public static", "return": "T", "signature": "T toEnum(Class<T> cls, String value)", "full_signature": "public static T toEnum(Class<T> cls, String value)", "class_method_signature": "Conversions.toEnum(Class<T> cls, String value)", "testcase": false, "constructor": false}, {"identifier": "toEnum", "parameters": "(Class<T> cls, String value, Enum defaultEnum)", "modifiers": "public static", "return": "T", "signature": "T toEnum(Class<T> cls, String value, Enum defaultEnum)", "full_signature": "public static T toEnum(Class<T> cls, String value, Enum defaultEnum)", "class_method_signature": "Conversions.toEnum(Class<T> cls, String value, Enum defaultEnum)", "testcase": false, "constructor": false}, {"identifier": "toEnum", "parameters": "(Class<T> cls, int value)", "modifiers": "public static", "return": "T", "signature": "T toEnum(Class<T> cls, int value)", "full_signature": "public static T toEnum(Class<T> cls, int value)", "class_method_signature": "Conversions.toEnum(Class<T> cls, int value)", "testcase": false, "constructor": false}, {"identifier": "toEnumOrDie", "parameters": "(Class<T> cls, int value)", "modifiers": "public static", "return": "T", "signature": "T toEnumOrDie(Class<T> cls, int value)", "full_signature": "public static T toEnumOrDie(Class<T> cls, int value)", "class_method_signature": "Conversions.toEnumOrDie(Class<T> cls, int value)", "testcase": false, "constructor": false}, {"identifier": "toEnum", "parameters": "(Class<T> cls, Object value)", "modifiers": "public static", "return": "T", "signature": "T toEnum(Class<T> cls, Object value)", "full_signature": "public static T toEnum(Class<T> cls, Object value)", "class_method_signature": "Conversions.toEnum(Class<T> cls, Object value)", "testcase": false, "constructor": false}, {"identifier": "toPrimitiveArrayIfPossible", "parameters": "(Class<T> clz, Object value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T toPrimitiveArrayIfPossible(Class<T> clz, Object value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T toPrimitiveArrayIfPossible(Class<T> clz, Object value)", "class_method_signature": "Conversions.toPrimitiveArrayIfPossible(Class<T> clz, Object value)", "testcase": false, "constructor": false}, {"identifier": "darray", "parameters": "(Object value)", "modifiers": "public static", "return": "double[]", "signature": "double[] darray(Object value)", "full_signature": "public static double[] darray(Object value)", "class_method_signature": "Conversions.darray(Object value)", "testcase": false, "constructor": false}, {"identifier": "farray", "parameters": "(Object value)", "modifiers": "public static", "return": "float[]", "signature": "float[] farray(Object value)", "full_signature": "public static float[] farray(Object value)", "class_method_signature": "Conversions.farray(Object value)", "testcase": false, "constructor": false}, {"identifier": "larray", "parameters": "(Object value)", "modifiers": "public static", "return": "long[]", "signature": "long[] larray(Object value)", "full_signature": "public static long[] larray(Object value)", "class_method_signature": "Conversions.larray(Object value)", "testcase": false, "constructor": false}, {"identifier": "sarray", "parameters": "(Object value)", "modifiers": "public static", "return": "short[]", "signature": "short[] sarray(Object value)", "full_signature": "public static short[] sarray(Object value)", "class_method_signature": "Conversions.sarray(Object value)", "testcase": false, "constructor": false}, {"identifier": "iarray", "parameters": "(Object value)", "modifiers": "public static", "return": "int[]", "signature": "int[] iarray(Object value)", "full_signature": "public static int[] iarray(Object value)", "class_method_signature": "Conversions.iarray(Object value)", "testcase": false, "constructor": false}, {"identifier": "barray", "parameters": "(Object value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] barray(Object value)", "full_signature": "public static byte[] barray(Object value)", "class_method_signature": "Conversions.barray(Object value)", "testcase": false, "constructor": false}, {"identifier": "carray", "parameters": "(Object value)", "modifiers": "public static", "return": "char[]", "signature": "char[] carray(Object value)", "full_signature": "public static char[] carray(Object value)", "class_method_signature": "Conversions.carray(Object value)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "(final Object value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Iterator", "signature": "Iterator iterator(final Object value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Iterator iterator(final Object value)", "class_method_signature": "Conversions.iterator(final Object value)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "(Class<T> class1, final Object value)", "modifiers": "public static", "return": "Iterator<T>", "signature": "Iterator<T> iterator(Class<T> class1, final Object value)", "full_signature": "public static Iterator<T> iterator(Class<T> class1, final Object value)", "class_method_signature": "Conversions.iterator(Class<T> class1, final Object value)", "testcase": false, "constructor": false}, {"identifier": "toCollection", "parameters": "(Class<T> clz, Object value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T toCollection(Class<T> clz, Object value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T toCollection(Class<T> clz, Object value)", "class_method_signature": "Conversions.toCollection(Class<T> clz, Object value)", "testcase": false, "constructor": false}, {"identifier": "toList", "parameters": "(Object value)", "modifiers": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public static", "return": "List", "signature": "List toList(Object value)", "full_signature": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public static List toList(Object value)", "class_method_signature": "Conversions.toList(Object value)", "testcase": false, "constructor": false}, {"identifier": "toCollection", "parameters": "(Object value)", "modifiers": "public static", "return": "Collection", "signature": "Collection toCollection(Object value)", "full_signature": "public static Collection toCollection(Object value)", "class_method_signature": "Conversions.toCollection(Object value)", "testcase": false, "constructor": false}, {"identifier": "toSet", "parameters": "(Object value)", "modifiers": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public static", "return": "Set", "signature": "Set toSet(Object value)", "full_signature": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public static Set toSet(Object value)", "class_method_signature": "Conversions.toSet(Object value)", "testcase": false, "constructor": false}, {"identifier": "toSortedSet", "parameters": "(Object value)", "modifiers": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public static", "return": "SortedSet", "signature": "SortedSet toSortedSet(Object value)", "full_signature": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) public static SortedSet toSortedSet(Object value)", "class_method_signature": "Conversions.toSortedSet(Object value)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "(Object value)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> toMap(Object value)", "full_signature": "public static Map<String, Object> toMap(Object value)", "class_method_signature": "Conversions.toMap(Object value)", "testcase": false, "constructor": false}, {"identifier": "toWrapper", "parameters": "(long l)", "modifiers": "public static", "return": "Number", "signature": "Number toWrapper(long l)", "full_signature": "public static Number toWrapper(long l)", "class_method_signature": "Conversions.toWrapper(long l)", "testcase": false, "constructor": false}, {"identifier": "toWrapper", "parameters": "(int i)", "modifiers": "public static", "return": "Number", "signature": "Number toWrapper(int i)", "full_signature": "public static Number toWrapper(int i)", "class_method_signature": "Conversions.toWrapper(int i)", "testcase": false, "constructor": false}, {"identifier": "wrapAsObject", "parameters": "(boolean i)", "modifiers": "public static", "return": "Object", "signature": "Object wrapAsObject(boolean i)", "full_signature": "public static Object wrapAsObject(boolean i)", "class_method_signature": "Conversions.wrapAsObject(boolean i)", "testcase": false, "constructor": false}, {"identifier": "wrapAsObject", "parameters": "(byte i)", "modifiers": "public static", "return": "Object", "signature": "Object wrapAsObject(byte i)", "full_signature": "public static Object wrapAsObject(byte i)", "class_method_signature": "Conversions.wrapAsObject(byte i)", "testcase": false, "constructor": false}, {"identifier": "wrapAsObject", "parameters": "(short i)", "modifiers": "public static", "return": "Object", "signature": "Object wrapAsObject(short i)", "full_signature": "public static Object wrapAsObject(short i)", "class_method_signature": "Conversions.wrapAsObject(short i)", "testcase": false, "constructor": false}, {"identifier": "wrapAsObject", "parameters": "(int i)", "modifiers": "public static", "return": "Object", "signature": "Object wrapAsObject(int i)", "full_signature": "public static Object wrapAsObject(int i)", "class_method_signature": "Conversions.wrapAsObject(int i)", "testcase": false, "constructor": false}, {"identifier": "wrapAsObject", "parameters": "(long i)", "modifiers": "public static", "return": "Object", "signature": "Object wrapAsObject(long i)", "full_signature": "public static Object wrapAsObject(long i)", "class_method_signature": "Conversions.wrapAsObject(long i)", "testcase": false, "constructor": false}, {"identifier": "wrapAsObject", "parameters": "(double i)", "modifiers": "public static", "return": "Object", "signature": "Object wrapAsObject(double i)", "full_signature": "public static Object wrapAsObject(double i)", "class_method_signature": "Conversions.wrapAsObject(double i)", "testcase": false, "constructor": false}, {"identifier": "wrapAsObject", "parameters": "(float i)", "modifiers": "public static", "return": "Object", "signature": "Object wrapAsObject(float i)", "full_signature": "public static Object wrapAsObject(float i)", "class_method_signature": "Conversions.wrapAsObject(float i)", "testcase": false, "constructor": false}, {"identifier": "toArrayGuessType", "parameters": "(Collection<?> value)", "modifiers": "public static", "return": "Object", "signature": "Object toArrayGuessType(Collection<?> value)", "full_signature": "public static Object toArrayGuessType(Collection<?> value)", "class_method_signature": "Conversions.toArrayGuessType(Collection<?> value)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(Class<T> componentType, Collection<T> collection)", "modifiers": "public static", "return": "T[]", "signature": "T[] toArray(Class<T> componentType, Collection<T> collection)", "full_signature": "public static T[] toArray(Class<T> componentType, Collection<T> collection)", "class_method_signature": "Conversions.toArray(Class<T> componentType, Collection<T> collection)", "testcase": false, "constructor": false}, {"identifier": "array", "parameters": "(Class<V> type, final Collection<V> array)", "modifiers": "public static", "return": "V[]", "signature": "V[] array(Class<V> type, final Collection<V> array)", "full_signature": "public static V[] array(Class<V> type, final Collection<V> array)", "class_method_signature": "Conversions.array(Class<V> type, final Collection<V> array)", "testcase": false, "constructor": false}, {"identifier": "toLocalDateTime", "parameters": "(Object object)", "modifiers": "private static", "return": "LocalDateTime", "signature": "LocalDateTime toLocalDateTime(Object object)", "full_signature": "private static LocalDateTime toLocalDateTime(Object object)", "class_method_signature": "Conversions.toLocalDateTime(Object object)", "testcase": false, "constructor": false}, {"identifier": "toLocalDateTime", "parameters": "(Date date)", "modifiers": "private static", "return": "LocalDateTime", "signature": "LocalDateTime toLocalDateTime(Date date)", "full_signature": "private static LocalDateTime toLocalDateTime(Date date)", "class_method_signature": "Conversions.toLocalDateTime(Date date)", "testcase": false, "constructor": false}, {"identifier": "toDate", "parameters": "(Object object)", "modifiers": "public static", "return": "Date", "signature": "Date toDate(Object object)", "full_signature": "public static Date toDate(Object object)", "class_method_signature": "Conversions.toDate(Object object)", "testcase": false, "constructor": false}, {"identifier": "toCalendar", "parameters": "(Date date)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar toCalendar(Date date)", "full_signature": "public static Calendar toCalendar(Date date)", "class_method_signature": "Conversions.toCalendar(Date date)", "testcase": false, "constructor": false}, {"identifier": "toDate", "parameters": "(Calendar c)", "modifiers": "public static", "return": "Date", "signature": "Date toDate(Calendar c)", "full_signature": "public static Date toDate(Calendar c)", "class_method_signature": "Conversions.toDate(Calendar c)", "testcase": false, "constructor": false}, {"identifier": "toDate", "parameters": "(long value)", "modifiers": "public static", "return": "Date", "signature": "Date toDate(long value)", "full_signature": "public static Date toDate(long value)", "class_method_signature": "Conversions.toDate(long value)", "testcase": false, "constructor": false}, {"identifier": "toDate", "parameters": "(Long value)", "modifiers": "public static", "return": "Date", "signature": "Date toDate(Long value)", "full_signature": "public static Date toDate(Long value)", "class_method_signature": "Conversions.toDate(Long value)", "testcase": false, "constructor": false}, {"identifier": "toDate", "parameters": "(String value)", "modifiers": "public static", "return": "Date", "signature": "Date toDate(String value)", "full_signature": "public static Date toDate(String value)", "class_method_signature": "Conversions.toDate(String value)", "testcase": false, "constructor": false}, {"identifier": "toDateUS", "parameters": "(String string)", "modifiers": "public static", "return": "Date", "signature": "Date toDateUS(String string)", "full_signature": "public static Date toDateUS(String string)", "class_method_signature": "Conversions.toDateUS(String string)", "testcase": false, "constructor": false}, {"identifier": "toEuroDate", "parameters": "(String string)", "modifiers": "public static", "return": "Date", "signature": "Date toEuroDate(String string)", "full_signature": "public static Date toEuroDate(String string)", "class_method_signature": "Conversions.toEuroDate(String string)", "testcase": false, "constructor": false}, {"identifier": "createCollection", "parameters": "(Class<?> type, int size)", "modifiers": "public static", "return": "Collection<Object>", "signature": "Collection<Object> createCollection(Class<?> type, int size)", "full_signature": "public static Collection<Object> createCollection(Class<?> type, int size)", "class_method_signature": "Conversions.createCollection(Class<?> type, int size)", "testcase": false, "constructor": false}, {"identifier": "createMap", "parameters": "(Class<?> type, int size)", "modifiers": "public static", "return": "Map<?, ?>", "signature": "Map<?, ?> createMap(Class<?> type, int size)", "full_signature": "public static Map<?, ?> createMap(Class<?> type, int size)", "class_method_signature": "Conversions.createMap(Class<?> type, int size)", "testcase": false, "constructor": false}, {"identifier": "mapFilterNulls", "parameters": "(Function<FROM, TO> converter,\n                                                     Collection<FROM> fromCollection)", "modifiers": "public static", "return": "List<TO>", "signature": "List<TO> mapFilterNulls(Function<FROM, TO> converter,\n                                                     Collection<FROM> fromCollection)", "full_signature": "public static List<TO> mapFilterNulls(Function<FROM, TO> converter,\n                                                     Collection<FROM> fromCollection)", "class_method_signature": "Conversions.mapFilterNulls(Function<FROM, TO> converter,\n                                                     Collection<FROM> fromCollection)", "testcase": false, "constructor": false}, {"identifier": "unifyListOrArray", "parameters": "(Object o)", "modifiers": "public static", "return": "Object", "signature": "Object unifyListOrArray(Object o)", "full_signature": "public static Object unifyListOrArray(Object o)", "class_method_signature": "Conversions.unifyListOrArray(Object o)", "testcase": false, "constructor": false}, {"identifier": "unifyListOrArray", "parameters": "(Object o, List list)", "modifiers": "public static", "return": "Object", "signature": "Object unifyListOrArray(Object o, List list)", "full_signature": "public static Object unifyListOrArray(Object o, List list)", "class_method_signature": "Conversions.unifyListOrArray(Object o, List list)", "testcase": false, "constructor": false}, {"identifier": "unifyList", "parameters": "(List list)", "modifiers": "public static", "return": "Object", "signature": "Object unifyList(List list)", "full_signature": "public static Object unifyList(List list)", "class_method_signature": "Conversions.unifyList(List list)", "testcase": false, "constructor": false}, {"identifier": "unifyList", "parameters": "(Object o, List list)", "modifiers": "public static", "return": "Object", "signature": "Object unifyList(Object o, List list)", "full_signature": "public static Object unifyList(Object o, List list)", "class_method_signature": "Conversions.unifyList(Object o, List list)", "testcase": false, "constructor": false}, {"identifier": "comparable", "parameters": "(Object comparable)", "modifiers": "public static", "return": "Comparable", "signature": "Comparable comparable(Object comparable)", "full_signature": "public static Comparable comparable(Object comparable)", "class_method_signature": "Conversions.comparable(Object comparable)", "testcase": false, "constructor": false}, {"identifier": "lengthOf", "parameters": "(Object obj)", "modifiers": "public static", "return": "int", "signature": "int lengthOf(Object obj)", "full_signature": "public static int lengthOf(Object obj)", "class_method_signature": "Conversions.lengthOf(Object obj)", "testcase": false, "constructor": false}, {"identifier": "len", "parameters": "(Object obj)", "modifiers": "public static", "return": "int", "signature": "int len(Object obj)", "full_signature": "public static int len(Object obj)", "class_method_signature": "Conversions.len(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toClass", "parameters": "(Object value)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> toClass(Object value)", "full_signature": "public static Class<?> toClass(Object value)", "class_method_signature": "Conversions.toClass(Object value)", "testcase": false, "constructor": false}, {"identifier": "toClass", "parameters": "(String str)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> toClass(String str)", "full_signature": "public static Class<?> toClass(String str)", "class_method_signature": "Conversions.toClass(String str)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Object obj, String defaultValue)", "modifiers": "public static", "return": "String", "signature": "String toString(Object obj, String defaultValue)", "full_signature": "public static String toString(Object obj, String defaultValue)", "class_method_signature": "Conversions.toString(Object obj, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Object obj)", "modifiers": "public static", "return": "String", "signature": "String toString(Object obj)", "full_signature": "public static String toString(Object obj)", "class_method_signature": "Conversions.toString(Object obj)", "testcase": false, "constructor": false}, {"identifier": "coerceNumber", "parameters": "(Object inputArgument, Class<?> paraType)", "modifiers": "public", "return": "Number", "signature": "Number coerceNumber(Object inputArgument, Class<?> paraType)", "full_signature": "public Number coerceNumber(Object inputArgument, Class<?> paraType)", "class_method_signature": "Conversions.coerceNumber(Object inputArgument, Class<?> paraType)", "testcase": false, "constructor": false}], "file": "reflekt/src/main/java/io/advantageous/boon/core/Conversions.java"}, "focal_method": {"identifier": "coerce", "parameters": "(Class<T> clz, Object value)", "modifiers": "public static", "return": "T", "body": "public static <T> T coerce(Class<T> clz, Object value) {\n        if (value != null) {\n            if (clz == value.getClass()) {\n                return (T) value;\n            }\n        }\n\n        return coerce(TypeType.getType(clz), clz, value);\n    }", "signature": "T coerce(Class<T> clz, Object value)", "full_signature": "public static T coerce(Class<T> clz, Object value)", "class_method_signature": "Conversions.coerce(Class<T> clz, Object value)", "testcase": false, "constructor": false, "invocations": ["getClass", "coerce", "getType"]}, "repository": {"repo_id": 33015857, "url": "https://github.com/advantageous/boon", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 6174, "license": "licensed"}}