{"test_class": {"identifier": "MimeTypesTest", "superclass": "", "interfaces": "", "fields": [], "file": "flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/files/MimeTypesTest.java"}, "test_case": {"identifier": "testCompleteness", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCompleteness() {\n\t\ttry {\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"txt\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"htm\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"html\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"css\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"js\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"json\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"png\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"jpg\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"jpeg\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"gif\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"woff\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"woff2\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"otf\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"ttf\"));\n\t\t\tassertNotNull(MimeTypes.getMimeTypeForExtension(\"eot\"));\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}", "signature": "void testCompleteness()", "full_signature": "@Test public void testCompleteness()", "class_method_signature": "MimeTypesTest.testCompleteness()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "assertNotNull", "getMimeTypeForExtension", "printStackTrace", "fail", "getMessage"]}, "focal_class": {"identifier": "MimeTypes", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_MIME_TYPE = \"application/octet-stream\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_MIME_TYPE = \"application/octet-stream\"", "var_name": "DEFAULT_MIME_TYPE"}, {"original_string": "private static final HashMap<String, String> MIME_MAP = new HashMap<String, String>();", "modifier": "private static final", "type": "HashMap<String, String>", "declarator": "MIME_MAP = new HashMap<String, String>()", "var_name": "MIME_MAP"}], "methods": [{"identifier": "getMimeTypeForExtension", "parameters": "(String fileExtension)", "modifiers": "public static", "return": "String", "signature": "String getMimeTypeForExtension(String fileExtension)", "full_signature": "public static String getMimeTypeForExtension(String fileExtension)", "class_method_signature": "MimeTypes.getMimeTypeForExtension(String fileExtension)", "testcase": false, "constructor": false}, {"identifier": "getMimeTypeForFileName", "parameters": "(String fileName)", "modifiers": "public static", "return": "String", "signature": "String getMimeTypeForFileName(String fileName)", "full_signature": "public static String getMimeTypeForFileName(String fileName)", "class_method_signature": "MimeTypes.getMimeTypeForFileName(String fileName)", "testcase": false, "constructor": false}, {"identifier": "getDefaultMimeType", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getDefaultMimeType()", "full_signature": "public static String getDefaultMimeType()", "class_method_signature": "MimeTypes.getDefaultMimeType()", "testcase": false, "constructor": false}, {"identifier": "MimeTypes", "parameters": "()", "modifiers": "private", "return": "", "signature": " MimeTypes()", "full_signature": "private  MimeTypes()", "class_method_signature": "MimeTypes.MimeTypes()", "testcase": false, "constructor": true}], "file": "flink-runtime-web/src/main/java/org/apache/flink/runtime/webmonitor/files/MimeTypes.java"}, "focal_method": {"identifier": "getMimeTypeForExtension", "parameters": "(String fileExtension)", "modifiers": "public static", "return": "String", "body": "public static String getMimeTypeForExtension(String fileExtension) {\n\t\treturn MIME_MAP.get(fileExtension.toLowerCase());\n\t}", "signature": "String getMimeTypeForExtension(String fileExtension)", "full_signature": "public static String getMimeTypeForExtension(String fileExtension)", "class_method_signature": "MimeTypes.getMimeTypeForExtension(String fileExtension)", "testcase": false, "constructor": false, "invocations": ["get", "toLowerCase"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}