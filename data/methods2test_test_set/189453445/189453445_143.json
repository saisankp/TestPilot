{"test_class": {"identifier": "DynamoDBRaiderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private DynamoDBRaiderImpl dynamoDBRaider;", "modifier": "@Autowired\n    private", "type": "DynamoDBRaiderImpl", "declarator": "dynamoDBRaider", "var_name": "dynamoDBRaider"}, {"original_string": "@Rule\n    public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}, {"original_string": "@Autowired\n    private SystemRaider systemRaider;", "modifier": "@Autowired\n    private", "type": "SystemRaider", "declarator": "systemRaider", "var_name": "systemRaider"}], "file": "cloudraider-core/src/test/java/com/intuit/cloudraider/core/impl/DynamoDBRaiderImplTest.java"}, "test_case": {"identifier": "testDynamoDBDown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDynamoDBDown() {\n        final String ip = UUID.randomUUID().toString();\n        final String result = UUID.randomUUID().toString();\n\n        Mockito.when(systemRaider.executeScript(ip, ClassLoader.getSystemResource(\"blockdynamo.sh\").getPath())).thenReturn(result);\n\n        Assert.assertEquals(\"Unexpected result: \", result, dynamoDBRaider.blockDynamoDB(ip));\n    }", "signature": "void testDynamoDBDown()", "full_signature": "@Test public void testDynamoDBDown()", "class_method_signature": "DynamoDBRaiderImplTest.testDynamoDBDown()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "toString", "randomUUID", "thenReturn", "when", "executeScript", "getPath", "getSystemResource", "assertEquals", "blockDynamoDB"]}, "focal_class": {"identifier": "DynamoDBRaiderImpl", "superclass": "", "interfaces": "implements DynamoDBRaider", "fields": [{"original_string": "@Autowired\n    @Qualifier(\"systemRaiderBean\")\n    private SystemRaider systemRaider;", "modifier": "@Autowired\n    @Qualifier(\"systemRaiderBean\")\n    private", "type": "SystemRaider", "declarator": "systemRaider", "var_name": "systemRaider"}, {"original_string": "Logger logger = LoggerFactory.getLogger(this.getClass());", "modifier": "", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(this.getClass())", "var_name": "logger"}, {"original_string": "@Autowired\n    private DynamoDBDelegator dynamoDBDelegator;", "modifier": "@Autowired\n    private", "type": "DynamoDBDelegator", "declarator": "dynamoDBDelegator", "var_name": "dynamoDBDelegator"}], "methods": [{"identifier": "DynamoDBRaiderImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " DynamoDBRaiderImpl()", "full_signature": "public  DynamoDBRaiderImpl()", "class_method_signature": "DynamoDBRaiderImpl.DynamoDBRaiderImpl()", "testcase": false, "constructor": true}, {"identifier": "blockDynamoDB", "parameters": "(String ip)", "modifiers": "@Override public", "return": "String", "signature": "String blockDynamoDB(String ip)", "full_signature": "@Override public String blockDynamoDB(String ip)", "class_method_signature": "DynamoDBRaiderImpl.blockDynamoDB(String ip)", "testcase": false, "constructor": false}, {"identifier": "unblockDynamoDB", "parameters": "(String ip)", "modifiers": "@Override public", "return": "String", "signature": "String unblockDynamoDB(String ip)", "full_signature": "@Override public String unblockDynamoDB(String ip)", "class_method_signature": "DynamoDBRaiderImpl.unblockDynamoDB(String ip)", "testcase": false, "constructor": false}, {"identifier": "executeScriptOnClasspath", "parameters": "(String ip, String scriptName)", "modifiers": "private", "return": "String", "signature": "String executeScriptOnClasspath(String ip, String scriptName)", "full_signature": "private String executeScriptOnClasspath(String ip, String scriptName)", "class_method_signature": "DynamoDBRaiderImpl.executeScriptOnClasspath(String ip, String scriptName)", "testcase": false, "constructor": false}, {"identifier": "getDynamoDBReadIOPS", "parameters": "(String tableName)", "modifiers": "@Override public", "return": "long", "signature": "long getDynamoDBReadIOPS(String tableName)", "full_signature": "@Override public long getDynamoDBReadIOPS(String tableName)", "class_method_signature": "DynamoDBRaiderImpl.getDynamoDBReadIOPS(String tableName)", "testcase": false, "constructor": false}, {"identifier": "setDyanmoDBReadIOPS", "parameters": "(String tableName,long readIops)", "modifiers": "@Override public", "return": "void", "signature": "void setDyanmoDBReadIOPS(String tableName,long readIops)", "full_signature": "@Override public void setDyanmoDBReadIOPS(String tableName,long readIops)", "class_method_signature": "DynamoDBRaiderImpl.setDyanmoDBReadIOPS(String tableName,long readIops)", "testcase": false, "constructor": false}, {"identifier": "getDynamoDBWriteIOPS", "parameters": "(String tableName)", "modifiers": "@Override public", "return": "long", "signature": "long getDynamoDBWriteIOPS(String tableName)", "full_signature": "@Override public long getDynamoDBWriteIOPS(String tableName)", "class_method_signature": "DynamoDBRaiderImpl.getDynamoDBWriteIOPS(String tableName)", "testcase": false, "constructor": false}, {"identifier": "setDyanmoDBWriteIOPS", "parameters": "(String tableName, long writeIops)", "modifiers": "@Override public", "return": "void", "signature": "void setDyanmoDBWriteIOPS(String tableName, long writeIops)", "full_signature": "@Override public void setDyanmoDBWriteIOPS(String tableName, long writeIops)", "class_method_signature": "DynamoDBRaiderImpl.setDyanmoDBWriteIOPS(String tableName, long writeIops)", "testcase": false, "constructor": false}, {"identifier": "setDyanmoDBReadAndWriteIOPS", "parameters": "(String tableName, long readIops, long writeIops)", "modifiers": "@Override public", "return": "void", "signature": "void setDyanmoDBReadAndWriteIOPS(String tableName, long readIops, long writeIops)", "full_signature": "@Override public void setDyanmoDBReadAndWriteIOPS(String tableName, long readIops, long writeIops)", "class_method_signature": "DynamoDBRaiderImpl.setDyanmoDBReadAndWriteIOPS(String tableName, long readIops, long writeIops)", "testcase": false, "constructor": false}], "file": "cloudraider-core/src/main/java/com/intuit/cloudraider/core/impl/DynamoDBRaiderImpl.java"}, "focal_method": {"identifier": "blockDynamoDB", "parameters": "(String ip)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String blockDynamoDB(String ip) {\n        return executeScriptOnClasspath(ip, Actions.BLOCKDYNAMO.getActionName());\n    }", "signature": "String blockDynamoDB(String ip)", "full_signature": "@Override public String blockDynamoDB(String ip)", "class_method_signature": "DynamoDBRaiderImpl.blockDynamoDB(String ip)", "testcase": false, "constructor": false, "invocations": ["executeScriptOnClasspath", "getActionName"]}, "repository": {"repo_id": 189453445, "url": "https://github.com/intuit/CloudRaider", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 16, "size": 730, "license": "licensed"}}