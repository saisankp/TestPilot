{"test_class": {"identifier": "JWSHttpServletRequestWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_CONTENT=\"Some text content\";", "modifier": "private static final", "type": "String", "declarator": "TEST_CONTENT=\"Some text content\"", "var_name": "TEST_CONTENT"}, {"original_string": "@Mock\n    private HttpServletRequest request ;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}], "file": "framework/modules/backend/front-facade/rest/src/test/java/org/appverse/web/framework/backend/frontfacade/rest/authentication/servlet/JWSHttpServletRequestWrapperTest.java"}, "test_case": {"identifier": "testWrapperObtainContent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWrapperObtainContent() throws Exception{\n\n        //environment\n        ServletInputStream sis = new DelegatingServletInputStream(new ByteArrayInputStream( TEST_CONTENT.getBytes()));\n        when(request.getInputStream()).thenReturn(sis);\n\n        //test\n        JWSHttpServletRequestWrapper jwsHttpServletRequestWrapper = new JWSHttpServletRequestWrapper(request, null);\n        InputStream is = jwsHttpServletRequestWrapper.getInputStream();\n\n        //validation\n        String obtainedContent = obtainContent(is);\n        Assert.assertNotNull(\"content should be not be null\",obtainedContent);\n        Assert.assertEquals(\"content should be the same\",TEST_CONTENT,obtainedContent);\n\n\n    }", "signature": "void testWrapperObtainContent()", "full_signature": "@Test public void testWrapperObtainContent()", "class_method_signature": "JWSHttpServletRequestWrapperTest.testWrapperObtainContent()", "testcase": true, "constructor": false, "invocations": ["getBytes", "thenReturn", "when", "getInputStream", "getInputStream", "obtainContent", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "JWSHttpServletRequestWrapper", "superclass": "extends SecurityContextHolderAwareRequestWrapper", "interfaces": "", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(JWSHttpServletRequestWrapper.class);", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(JWSHttpServletRequestWrapper.class)", "var_name": "logger"}, {"original_string": "private final String body;", "modifier": "private final", "type": "String", "declarator": "body", "var_name": "body"}], "methods": [{"identifier": "JWSHttpServletRequestWrapper", "parameters": "(final HttpServletRequest request, final String rolePrefix)", "modifiers": "public", "return": "", "signature": " JWSHttpServletRequestWrapper(final HttpServletRequest request, final String rolePrefix)", "full_signature": "public  JWSHttpServletRequestWrapper(final HttpServletRequest request, final String rolePrefix)", "class_method_signature": "JWSHttpServletRequestWrapper.JWSHttpServletRequestWrapper(final HttpServletRequest request, final String rolePrefix)", "testcase": false, "constructor": true}, {"identifier": "getInputStream", "parameters": "()", "modifiers": "@Override public", "return": "ServletInputStream", "signature": "ServletInputStream getInputStream()", "full_signature": "@Override public ServletInputStream getInputStream()", "class_method_signature": "JWSHttpServletRequestWrapper.getInputStream()", "testcase": false, "constructor": false}], "file": "framework/modules/backend/front-facade/rest/src/main/java/org/appverse/web/framework/backend/frontfacade/rest/authentication/servlet/JWSHttpServletRequestWrapper.java"}, "focal_method": {"identifier": "getInputStream", "parameters": "()", "modifiers": "@Override public", "return": "ServletInputStream", "body": "@Override\n\tpublic ServletInputStream getInputStream() throws IOException {\n\t\tfinal ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(body.getBytes());\n\n\t\tServletInputStream inputStream = new ServletInputStream() {\n\t\t\t@Override\n\t\t\tpublic int read() throws IOException {\n\t\t\t\treturn byteArrayInputStream.read();\n\t\t\t}\n\t\t};\n\n\t\treturn inputStream;\n\t}", "signature": "ServletInputStream getInputStream()", "full_signature": "@Override public ServletInputStream getInputStream()", "class_method_signature": "JWSHttpServletRequestWrapper.getInputStream()", "testcase": false, "constructor": false, "invocations": ["getBytes", "read"]}, "repository": {"repo_id": 7113288, "url": "https://github.com/Appverse/appverse-web", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 16, "size": 7090, "license": "licensed"}}