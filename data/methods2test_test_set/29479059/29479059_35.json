{"test_class": {"identifier": "JobSchedulerConfigurationTest", "superclass": "extends PojoTestBase", "interfaces": "", "fields": [], "file": "spring-batch-lightmin-domain/src/test/java/org/tuxdevelop/spring/batch/lightmin/domain/JobSchedulerConfigurationTest.java"}, "test_case": {"identifier": "validateForPeriodTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validateForPeriodTest() {\n        final JobSchedulerConfiguration jobSchedulerConfiguration = new JobSchedulerConfiguration();\n        jobSchedulerConfiguration.setFixedDelay(1000L);\n        jobSchedulerConfiguration.setInitialDelay(1000L);\n        jobSchedulerConfiguration.setJobSchedulerType(JobSchedulerType.PERIOD);\n        jobSchedulerConfiguration.setTaskExecutorType(TaskExecutorType.SYNCHRONOUS);\n        try {\n            jobSchedulerConfiguration.validate();\n        } catch (final SpringBatchLightminApplicationException e) {\n            fail(e.getMessage());\n        }\n    }", "signature": "void validateForPeriodTest()", "full_signature": "@Test public void validateForPeriodTest()", "class_method_signature": "JobSchedulerConfigurationTest.validateForPeriodTest()", "testcase": true, "constructor": false, "invocations": ["setFixedDelay", "setInitialDelay", "setJobSchedulerType", "setTaskExecutorType", "validate", "fail", "getMessage"]}, "focal_class": {"identifier": "JobSchedulerConfiguration", "superclass": "extends AbstractConfiguration", "interfaces": "", "fields": [{"original_string": "private JobSchedulerType jobSchedulerType;", "modifier": "private", "type": "JobSchedulerType", "declarator": "jobSchedulerType", "var_name": "jobSchedulerType"}, {"original_string": "@IsCronExpression\n    private String cronExpression;", "modifier": "@IsCronExpression\n    private", "type": "String", "declarator": "cronExpression", "var_name": "cronExpression"}, {"original_string": "private Long initialDelay;", "modifier": "private", "type": "Long", "declarator": "initialDelay", "var_name": "initialDelay"}, {"original_string": "private Long fixedDelay;", "modifier": "private", "type": "Long", "declarator": "fixedDelay", "var_name": "fixedDelay"}, {"original_string": "private TaskExecutorType taskExecutorType;", "modifier": "private", "type": "TaskExecutorType", "declarator": "taskExecutorType", "var_name": "taskExecutorType"}, {"original_string": "private String beanName;", "modifier": "private", "type": "String", "declarator": "beanName", "var_name": "beanName"}, {"original_string": "private SchedulerStatus schedulerStatus;", "modifier": "private", "type": "SchedulerStatus", "declarator": "schedulerStatus", "var_name": "schedulerStatus"}], "methods": [{"identifier": "validate", "parameters": "()", "modifiers": "", "return": "void", "signature": "void validate()", "full_signature": " void validate()", "class_method_signature": "JobSchedulerConfiguration.validate()", "testcase": false, "constructor": false}, {"identifier": "validateCron", "parameters": "()", "modifiers": "", "return": "void", "signature": "void validateCron()", "full_signature": " void validateCron()", "class_method_signature": "JobSchedulerConfiguration.validateCron()", "testcase": false, "constructor": false}, {"identifier": "validatePeriod", "parameters": "()", "modifiers": "", "return": "void", "signature": "void validatePeriod()", "full_signature": " void validatePeriod()", "class_method_signature": "JobSchedulerConfiguration.validatePeriod()", "testcase": false, "constructor": false}], "file": "spring-batch-lightmin-domain/src/main/java/org/tuxdevelop/spring/batch/lightmin/domain/JobSchedulerConfiguration.java"}, "focal_method": {"identifier": "validate", "parameters": "()", "modifiers": "", "return": "void", "body": "void validate() {\n        if (this.jobSchedulerType == null) {\n            this.throwExceptionAndLogError(\"jobSchedulerType must not be null\");\n        }\n        if (this.taskExecutorType == null) {\n            this.throwExceptionAndLogError(\"taskExecutorType must not be null\");\n        }\n        if (JobSchedulerType.CRON.equals(this.jobSchedulerType)) {\n            this.validateCron();\n        } else if (JobSchedulerType.PERIOD.equals(this.jobSchedulerType)) {\n            this.validatePeriod();\n        } else {\n            this.throwExceptionAndLogError(\"Unknown jobSchedulerType: \" + this.jobSchedulerType);\n        }\n    }", "signature": "void validate()", "full_signature": " void validate()", "class_method_signature": "JobSchedulerConfiguration.validate()", "testcase": false, "constructor": false, "invocations": ["throwExceptionAndLogError", "throwExceptionAndLogError", "equals", "validateCron", "equals", "validatePeriod", "throwExceptionAndLogError"]}, "repository": {"repo_id": 29479059, "url": "https://github.com/tuxdevelop/spring-batch-lightmin", "language": "Java", "is_fork": false, "fork_count": 34, "stargazer_count": 109, "size": 12355, "license": "licensed"}}