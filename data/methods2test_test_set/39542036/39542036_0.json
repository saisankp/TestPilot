{"test_class": {"identifier": "UserRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private DataSource dataSource;", "modifier": "@Resource\n    private", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "@Rule\n    public final TestRule rules = outerRule(new ApplicationComposerRule(this))\n            .around(DBUnitRule.instance(() -> dataSource.getConnection())\n            );", "modifier": "@Rule\n    public final", "type": "TestRule", "declarator": "rules = outerRule(new ApplicationComposerRule(this))\n            .around(DBUnitRule.instance(() -> dataSource.getConnection())\n            )", "var_name": "rules"}, {"original_string": "@Inject\n    private UserRepository repository;", "modifier": "@Inject\n    private", "type": "UserRepository", "declarator": "repository", "var_name": "repository"}], "file": "examples/dbunit-tomee-appcomposer-sample/src/test/java/com/github/dbunit/rules/example/UserRepositoryTest.java"}, "test_case": {"identifier": "find1", "parameters": "()", "modifiers": "@Test @DataSet(\"datasets/users.yml\") public", "return": "void", "body": "@Test\n    @DataSet(\"datasets/users.yml\")\n    public void find1() {\n        assertEquals(\"John Smith\", repository.find(1L).getName());\n        assertEquals(\"Clark Kent\", repository.find(2L).getName());\n    }", "signature": "void find1()", "full_signature": "@Test @DataSet(\"datasets/users.yml\") public void find1()", "class_method_signature": "UserRepositoryTest.find1()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getName", "find", "assertEquals", "getName", "find"]}, "focal_class": {"identifier": "UserRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "@PersistenceContext\n    private EntityManager em;", "modifier": "@PersistenceContext\n    private", "type": "EntityManager", "declarator": "em", "var_name": "em"}], "methods": [{"identifier": "find", "parameters": "(final long id)", "modifiers": "@Transactional(SUPPORTS) public", "return": "User", "signature": "User find(final long id)", "full_signature": "@Transactional(SUPPORTS) public User find(final long id)", "class_method_signature": "UserRepository.find(final long id)", "testcase": false, "constructor": false}], "file": "examples/dbunit-tomee-appcomposer-sample/src/main/java/com/github/dbunit/rules/example/UserRepository.java"}, "focal_method": {"identifier": "find", "parameters": "(final long id)", "modifiers": "@Transactional(SUPPORTS) public", "return": "User", "body": "@Transactional(SUPPORTS)\n    public User find(final long id) {\n        return em.find(User.class, id);\n    }", "signature": "User find(final long id)", "full_signature": "@Transactional(SUPPORTS) public User find(final long id)", "class_method_signature": "UserRepository.find(final long id)", "testcase": false, "constructor": false, "invocations": ["find"]}, "repository": {"repo_id": 39542036, "url": "https://github.com/rmpestano/dbunit-rules", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 13, "size": 3313, "license": "licensed"}}