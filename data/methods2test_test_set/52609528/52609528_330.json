{"test_class": {"identifier": "RoleMapperFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RoleMapperFactory roleMapperFactory;", "modifier": "private", "type": "RoleMapperFactory", "declarator": "roleMapperFactory", "var_name": "roleMapperFactory"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private final String INVALID_MAPPER_JSON = ResourcesUtils.loadResource(\"testresource_invalid_mapper_json\", true);", "modifier": "private final", "type": "String", "declarator": "INVALID_MAPPER_JSON = ResourcesUtils.loadResource(\"testresource_invalid_mapper_json\", true)", "var_name": "INVALID_MAPPER_JSON"}, {"original_string": "private final String VALID_MAPPER_RESOURCE = ResourcesUtils.loadResource(\"testresource_valid_mapper_resource\", true);", "modifier": "private final", "type": "String", "declarator": "VALID_MAPPER_RESOURCE = ResourcesUtils.loadResource(\"testresource_valid_mapper_resource\", true)", "var_name": "VALID_MAPPER_RESOURCE"}, {"original_string": "private final String ADDITIONAL_PROP_MAPPER_RESOURCE = ResourcesUtils.loadResource(\"testresource_additionalproperties_mapper_resource\", true);", "modifier": "private final", "type": "String", "declarator": "ADDITIONAL_PROP_MAPPER_RESOURCE = ResourcesUtils.loadResource(\"testresource_additionalproperties_mapper_resource\", true)", "var_name": "ADDITIONAL_PROP_MAPPER_RESOURCE"}, {"original_string": "private final String EMPTY_PROP_MAPPER_RESOURCE = ResourcesUtils.loadResource(\"testresource_emptyproperties_mapper_resource\", true);", "modifier": "private final", "type": "String", "declarator": "EMPTY_PROP_MAPPER_RESOURCE = ResourcesUtils.loadResource(\"testresource_emptyproperties_mapper_resource\", true)", "var_name": "EMPTY_PROP_MAPPER_RESOURCE"}], "file": "gateleen-security/src/test/java/org/swisspush/gateleen/security/authorization/RoleMapperFactoryTest.java"}, "test_case": {"identifier": "testValidRoleMapperConfig", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidRoleMapperConfig(TestContext context) throws ValidationException {\n        List<RoleMapperHolder> result = roleMapperFactory.parseRoleMapper(Buffer.buffer(VALID_MAPPER_RESOURCE));\n        context.assertNotNull(result);\n        context.assertEquals(1, result.size());\n        RoleMapperHolder holder = result.get(0);\n        context.assertNotNull(holder.getPattern());\n        context.assertNotNull(holder.getRole());\n    }", "signature": "void testValidRoleMapperConfig(TestContext context)", "full_signature": "@Test public void testValidRoleMapperConfig(TestContext context)", "class_method_signature": "RoleMapperFactoryTest.testValidRoleMapperConfig(TestContext context)", "testcase": true, "constructor": false, "invocations": ["parseRoleMapper", "buffer", "assertNotNull", "assertEquals", "size", "get", "assertNotNull", "getPattern", "assertNotNull", "getRole"]}, "focal_class": {"identifier": "RoleMapperFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String mapperSchema;", "modifier": "private final", "type": "String", "declarator": "mapperSchema", "var_name": "mapperSchema"}, {"original_string": "private static Logger LOGGER = LoggerFactory.getLogger(RoleMapperFactory.class);", "modifier": "private static", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(RoleMapperFactory.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, Object> properties;", "modifier": "private final", "type": "Map<String, Object>", "declarator": "properties", "var_name": "properties"}], "methods": [{"identifier": "RoleMapperFactory", "parameters": "(Map<String, Object> properties)", "modifiers": "", "return": "", "signature": " RoleMapperFactory(Map<String, Object> properties)", "full_signature": "  RoleMapperFactory(Map<String, Object> properties)", "class_method_signature": "RoleMapperFactory.RoleMapperFactory(Map<String, Object> properties)", "testcase": false, "constructor": true}, {"identifier": "parseRoleMapper", "parameters": "(Buffer buffer)", "modifiers": "public", "return": "List<RoleMapperHolder>", "signature": "List<RoleMapperHolder> parseRoleMapper(Buffer buffer)", "full_signature": "public List<RoleMapperHolder> parseRoleMapper(Buffer buffer)", "class_method_signature": "RoleMapperFactory.parseRoleMapper(Buffer buffer)", "testcase": false, "constructor": false}], "file": "gateleen-security/src/main/java/org/swisspush/gateleen/security/authorization/RoleMapperFactory.java"}, "focal_method": {"identifier": "parseRoleMapper", "parameters": "(Buffer buffer)", "modifiers": "public", "return": "List<RoleMapperHolder>", "body": "public List<RoleMapperHolder> parseRoleMapper(Buffer buffer) throws ValidationException {\n        ValidationResult validationResult = Validator.validateStatic(buffer, mapperSchema, LOGGER);\n        if (!validationResult.isSuccess()) {\n            throw new ValidationException(validationResult);\n        }\n\n        List<RoleMapperHolder> result = new ArrayList<>();\n        Mappings mappings = Json.decodeValue(buffer, Mappings.class);\n        for (Mapping mapping : mappings.mappings) {\n            if (properties != null) {\n                mapping.pattern = StringUtils.replaceWildcardConfigs(mapping.pattern, properties);\n                mapping.role = StringUtils.replaceWildcardConfigs(mapping.role, properties);\n            }\n            result.add(new RoleMapperHolder(Pattern.compile(mapping.pattern), mapping.role, mapping.keepOriginalRole, mapping.continueMapping, mapping.keepResultingRole));\n        }\n        return result;\n    }", "signature": "List<RoleMapperHolder> parseRoleMapper(Buffer buffer)", "full_signature": "public List<RoleMapperHolder> parseRoleMapper(Buffer buffer)", "class_method_signature": "RoleMapperFactory.parseRoleMapper(Buffer buffer)", "testcase": false, "constructor": false, "invocations": ["validateStatic", "isSuccess", "decodeValue", "replaceWildcardConfigs", "replaceWildcardConfigs", "add", "compile"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}