{"test_class": {"identifier": "DynamoDBSSHRecordStoreConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String tableName = \"cert-table\";", "modifier": "private final", "type": "String", "declarator": "tableName = \"cert-table\"", "var_name": "tableName"}, {"original_string": "@Mock private DynamoDB dynamoDB;", "modifier": "@Mock private", "type": "DynamoDB", "declarator": "dynamoDB", "var_name": "dynamoDB"}, {"original_string": "@Mock private Table table;", "modifier": "@Mock private", "type": "Table", "declarator": "table", "var_name": "table"}, {"original_string": "@Mock private Item item;", "modifier": "@Mock private", "type": "Item", "declarator": "item", "var_name": "item"}, {"original_string": "@Mock private PutItemOutcome putOutcome;", "modifier": "@Mock private", "type": "PutItemOutcome", "declarator": "putOutcome", "var_name": "putOutcome"}, {"original_string": "@Mock private DeleteItemOutcome deleteOutcome;", "modifier": "@Mock private", "type": "DeleteItemOutcome", "declarator": "deleteOutcome", "var_name": "deleteOutcome"}, {"original_string": "@Mock private UpdateItemOutcome updateOutcome;", "modifier": "@Mock private", "type": "UpdateItemOutcome", "declarator": "updateOutcome", "var_name": "updateOutcome"}], "file": "servers/zts/src/test/java/com/yahoo/athenz/zts/cert/impl/DynamoDBSSHRecordStoreConnectionTest.java"}, "test_case": {"identifier": "testdeleteExpiredSSHCertRecords", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testdeleteExpiredSSHCertRecords() {\n        DynamoDBSSHRecordStoreConnection dbConn = new DynamoDBSSHRecordStoreConnection(dynamoDB, tableName);\n        assertEquals(0, dbConn.deleteExpiredSSHCertRecords(100));\n        assertEquals(0, dbConn.deleteExpiredSSHCertRecords(100000));\n        dbConn.close();\n    }", "signature": "void testdeleteExpiredSSHCertRecords()", "full_signature": "@Test public void testdeleteExpiredSSHCertRecords()", "class_method_signature": "DynamoDBSSHRecordStoreConnectionTest.testdeleteExpiredSSHCertRecords()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "deleteExpiredSSHCertRecords", "assertEquals", "deleteExpiredSSHCertRecords", "close"]}, "focal_class": {"identifier": "DynamoDBSSHRecordStoreConnection", "superclass": "", "interfaces": "implements SSHRecordStoreConnection", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DynamoDBSSHRecordStoreConnection.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DynamoDBSSHRecordStoreConnection.class)", "var_name": "LOGGER"}, {"original_string": "private static final String KEY_PRIMARY = \"primaryKey\";", "modifier": "private static final", "type": "String", "declarator": "KEY_PRIMARY = \"primaryKey\"", "var_name": "KEY_PRIMARY"}, {"original_string": "private static final String KEY_INSTANCE_ID = \"instanceId\";", "modifier": "private static final", "type": "String", "declarator": "KEY_INSTANCE_ID = \"instanceId\"", "var_name": "KEY_INSTANCE_ID"}, {"original_string": "private static final String KEY_SERVICE = \"service\";", "modifier": "private static final", "type": "String", "declarator": "KEY_SERVICE = \"service\"", "var_name": "KEY_SERVICE"}, {"original_string": "private static final String KEY_PRINCIPALS = \"principals\";", "modifier": "private static final", "type": "String", "declarator": "KEY_PRINCIPALS = \"principals\"", "var_name": "KEY_PRINCIPALS"}, {"original_string": "private static final String KEY_CLIENT_IP = \"clientIP\";", "modifier": "private static final", "type": "String", "declarator": "KEY_CLIENT_IP = \"clientIP\"", "var_name": "KEY_CLIENT_IP"}, {"original_string": "private static final String KEY_PRIVATE_IP = \"privateIP\";", "modifier": "private static final", "type": "String", "declarator": "KEY_PRIVATE_IP = \"privateIP\"", "var_name": "KEY_PRIVATE_IP"}, {"original_string": "private static final String KEY_TTL = \"ttl\";", "modifier": "private static final", "type": "String", "declarator": "KEY_TTL = \"ttl\"", "var_name": "KEY_TTL"}, {"original_string": "private static long expiryTime = 3660 * Long.parseLong(\n            System.getProperty(ZTSConsts.ZTS_PROP_SSH_DYNAMODB_ITEM_TTL_HOURS, \"720\"));", "modifier": "private static", "type": "long", "declarator": "expiryTime = 3660 * Long.parseLong(\n            System.getProperty(ZTSConsts.ZTS_PROP_SSH_DYNAMODB_ITEM_TTL_HOURS, \"720\"))", "var_name": "expiryTime"}, {"original_string": "private Table table;", "modifier": "private", "type": "Table", "declarator": "table", "var_name": "table"}], "methods": [{"identifier": "DynamoDBSSHRecordStoreConnection", "parameters": "(DynamoDB dynamoDB, final String tableName)", "modifiers": "public", "return": "", "signature": " DynamoDBSSHRecordStoreConnection(DynamoDB dynamoDB, final String tableName)", "full_signature": "public  DynamoDBSSHRecordStoreConnection(DynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.DynamoDBSSHRecordStoreConnection(DynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": true}, {"identifier": "setOperationTimeout", "parameters": "(int queryTimeout)", "modifiers": "@Override public", "return": "void", "signature": "void setOperationTimeout(int queryTimeout)", "full_signature": "@Override public void setOperationTimeout(int queryTimeout)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.setOperationTimeout(int queryTimeout)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "DynamoDBSSHRecordStoreConnection.close()", "testcase": false, "constructor": false}, {"identifier": "getSSHCertRecord", "parameters": "(String instanceId, String service)", "modifiers": "@Override public", "return": "SSHCertRecord", "signature": "SSHCertRecord getSSHCertRecord(String instanceId, String service)", "full_signature": "@Override public SSHCertRecord getSSHCertRecord(String instanceId, String service)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.getSSHCertRecord(String instanceId, String service)", "testcase": false, "constructor": false}, {"identifier": "updateSSHCertRecord", "parameters": "(SSHCertRecord certRecord)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateSSHCertRecord(SSHCertRecord certRecord)", "full_signature": "@Override public boolean updateSSHCertRecord(SSHCertRecord certRecord)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.updateSSHCertRecord(SSHCertRecord certRecord)", "testcase": false, "constructor": false}, {"identifier": "insertSSHCertRecord", "parameters": "(SSHCertRecord certRecord)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertSSHCertRecord(SSHCertRecord certRecord)", "full_signature": "@Override public boolean insertSSHCertRecord(SSHCertRecord certRecord)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.insertSSHCertRecord(SSHCertRecord certRecord)", "testcase": false, "constructor": false}, {"identifier": "deleteSSHCertRecord", "parameters": "(String instanceId, String service)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteSSHCertRecord(String instanceId, String service)", "full_signature": "@Override public boolean deleteSSHCertRecord(String instanceId, String service)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.deleteSSHCertRecord(String instanceId, String service)", "testcase": false, "constructor": false}, {"identifier": "deleteExpiredSSHCertRecords", "parameters": "(int expiryTimeMins)", "modifiers": "@Override public", "return": "int", "signature": "int deleteExpiredSSHCertRecords(int expiryTimeMins)", "full_signature": "@Override public int deleteExpiredSSHCertRecords(int expiryTimeMins)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.deleteExpiredSSHCertRecords(int expiryTimeMins)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryKey", "parameters": "(final String instanceId, final String service)", "modifiers": "private", "return": "String", "signature": "String getPrimaryKey(final String instanceId, final String service)", "full_signature": "private String getPrimaryKey(final String instanceId, final String service)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.getPrimaryKey(final String instanceId, final String service)", "testcase": false, "constructor": false}], "file": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBSSHRecordStoreConnection.java"}, "focal_method": {"identifier": "deleteExpiredSSHCertRecords", "parameters": "(int expiryTimeMins)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int deleteExpiredSSHCertRecords(int expiryTimeMins) {\n\n        // with dynamo db there is no need to manually expunge expired\n        // record since we have the TTL option enabled for our table\n        // and we just need to make sure the attribute is updated with\n        // the epoch time + timeout seconds when it should retire\n\n        return 0;\n    }", "signature": "int deleteExpiredSSHCertRecords(int expiryTimeMins)", "full_signature": "@Override public int deleteExpiredSSHCertRecords(int expiryTimeMins)", "class_method_signature": "DynamoDBSSHRecordStoreConnection.deleteExpiredSSHCertRecords(int expiryTimeMins)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}