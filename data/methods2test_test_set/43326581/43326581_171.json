{"test_class": {"identifier": "LicenseNameWithTextUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "backend/src/src-licenseinfo/src/test/java/org/eclipse/sw360/licenseinfo/util/LicenseNameWithTextUtilsTest.java"}, "test_case": {"identifier": "testSanitize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSanitize() {\n        LicenseNameWithText licenseNameWithText;\n\n\n        licenseNameWithText = createLicense(\"name\", null, null);\n        LicenseNameWithTextUtils.sanitize(licenseNameWithText);\n        Assert.assertThat(licenseNameWithText.getLicenseName(), Matchers.is(\"name\"));\n\n        licenseNameWithText = createLicense(\"\\n\", null, null);\n        LicenseNameWithTextUtils.sanitize(licenseNameWithText);\n        Assert.assertNull(licenseNameWithText.getLicenseName());\n\n        licenseNameWithText = createLicense(null, \"text\", null);\n        LicenseNameWithTextUtils.sanitize(licenseNameWithText);\n        Assert.assertThat(licenseNameWithText.getLicenseText(), Matchers.is(\"text\"));\n\n        licenseNameWithText = createLicense(null, \" \", null);\n        LicenseNameWithTextUtils.sanitize(licenseNameWithText);\n        Assert.assertNull(licenseNameWithText.getLicenseText());\n\n        licenseNameWithText = createLicense(null, null, \"acks\");\n        LicenseNameWithTextUtils.sanitize(licenseNameWithText);\n        Assert.assertThat(licenseNameWithText.getAcknowledgements(), Matchers.is(\"acks\"));\n\n        licenseNameWithText = createLicense(null, null, \"  \");\n        LicenseNameWithTextUtils.sanitize(licenseNameWithText);\n        Assert.assertNull(licenseNameWithText.getAcknowledgements());\n\n    }", "signature": "void testSanitize()", "full_signature": "@Test public void testSanitize()", "class_method_signature": "LicenseNameWithTextUtilsTest.testSanitize()", "testcase": true, "constructor": false, "invocations": ["createLicense", "sanitize", "assertThat", "getLicenseName", "is", "createLicense", "sanitize", "assertNull", "getLicenseName", "createLicense", "sanitize", "assertThat", "getLicenseText", "is", "createLicense", "sanitize", "assertNull", "getLicenseText", "createLicense", "sanitize", "assertThat", "getAcknowledgements", "is", "createLicense", "sanitize", "assertNull", "getAcknowledgements"]}, "focal_class": {"identifier": "LicenseNameWithTextUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "sanitize", "parameters": "(LicenseNameWithText licenseNameWithText)", "modifiers": "public static", "return": "LicenseNameWithText", "signature": "LicenseNameWithText sanitize(LicenseNameWithText licenseNameWithText)", "full_signature": "public static LicenseNameWithText sanitize(LicenseNameWithText licenseNameWithText)", "class_method_signature": "LicenseNameWithTextUtils.sanitize(LicenseNameWithText licenseNameWithText)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(LicenseNameWithText licenseNameWithText)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(LicenseNameWithText licenseNameWithText)", "full_signature": "public static boolean isEmpty(LicenseNameWithText licenseNameWithText)", "class_method_signature": "LicenseNameWithTextUtils.isEmpty(LicenseNameWithText licenseNameWithText)", "testcase": false, "constructor": false}, {"identifier": "licenseNameWithTextEquals", "parameters": "(LicenseNameWithText lnwt1, LicenseNameWithText lnwt2)", "modifiers": "public static", "return": "boolean", "signature": "boolean licenseNameWithTextEquals(LicenseNameWithText lnwt1, LicenseNameWithText lnwt2)", "full_signature": "public static boolean licenseNameWithTextEquals(LicenseNameWithText lnwt1, LicenseNameWithText lnwt2)", "class_method_signature": "LicenseNameWithTextUtils.licenseNameWithTextEquals(LicenseNameWithText lnwt1, LicenseNameWithText lnwt2)", "testcase": false, "constructor": false}], "file": "backend/src/src-licenseinfo/src/main/java/org/eclipse/sw360/licenseinfo/util/LicenseNameWithTextUtils.java"}, "focal_method": {"identifier": "sanitize", "parameters": "(LicenseNameWithText licenseNameWithText)", "modifiers": "public static", "return": "LicenseNameWithText", "body": "public static LicenseNameWithText sanitize(LicenseNameWithText licenseNameWithText) {\n        if (licenseNameWithText.isSetLicenseName()) {\n            String name = licenseNameWithText.getLicenseName().trim();\n            licenseNameWithText.setLicenseName(name.isEmpty() ? null : name);\n        }\n        if (licenseNameWithText.isSetLicenseText()) {\n            String text = licenseNameWithText.getLicenseText().trim();\n            licenseNameWithText.setLicenseText(text.isEmpty() ? null : text);\n        }\n        if (licenseNameWithText.isSetAcknowledgements()) {\n            String acknowledgments = licenseNameWithText.getAcknowledgements().trim();\n            licenseNameWithText.setAcknowledgements(acknowledgments.isEmpty() ? null : acknowledgments);\n        }\n\n        return licenseNameWithText;\n    }", "signature": "LicenseNameWithText sanitize(LicenseNameWithText licenseNameWithText)", "full_signature": "public static LicenseNameWithText sanitize(LicenseNameWithText licenseNameWithText)", "class_method_signature": "LicenseNameWithTextUtils.sanitize(LicenseNameWithText licenseNameWithText)", "testcase": false, "constructor": false, "invocations": ["isSetLicenseName", "trim", "getLicenseName", "setLicenseName", "isEmpty", "isSetLicenseText", "trim", "getLicenseText", "setLicenseText", "isEmpty", "isSetAcknowledgements", "trim", "getAcknowledgements", "setAcknowledgements", "isEmpty"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}