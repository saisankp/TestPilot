{"test_class": {"identifier": "ClientActorContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final MemberName MEMBER_NAME = MemberName.forName(\"member-1\");", "modifier": "private static final", "type": "MemberName", "declarator": "MEMBER_NAME = MemberName.forName(\"member-1\")", "var_name": "MEMBER_NAME"}, {"original_string": "private static final FrontendType FRONTEND_TYPE =\n            FrontendType.forName(ClientActorContextTest.class.getSimpleName());", "modifier": "private static final", "type": "FrontendType", "declarator": "FRONTEND_TYPE =\n            FrontendType.forName(ClientActorContextTest.class.getSimpleName())", "var_name": "FRONTEND_TYPE"}, {"original_string": "private static final FrontendIdentifier FRONTEND_ID = FrontendIdentifier.create(MEMBER_NAME, FRONTEND_TYPE);", "modifier": "private static final", "type": "FrontendIdentifier", "declarator": "FRONTEND_ID = FrontendIdentifier.create(MEMBER_NAME, FRONTEND_TYPE)", "var_name": "FRONTEND_ID"}, {"original_string": "private static final ClientIdentifier CLIENT_ID = ClientIdentifier.create(FRONTEND_ID, 0);", "modifier": "private static final", "type": "ClientIdentifier", "declarator": "CLIENT_ID = ClientIdentifier.create(FRONTEND_ID, 0)", "var_name": "CLIENT_ID"}, {"original_string": "private static final String PERSISTENCE_ID = ClientActorContextTest.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "PERSISTENCE_ID = ClientActorContextTest.class.getSimpleName()", "var_name": "PERSISTENCE_ID"}, {"original_string": "@Mock\n    private InternalCommand<? extends BackendInfo> command;", "modifier": "@Mock\n    private", "type": "InternalCommand<? extends BackendInfo>", "declarator": "command", "var_name": "command"}, {"original_string": "private ActorSystem system;", "modifier": "private", "type": "ActorSystem", "declarator": "system", "var_name": "system"}, {"original_string": "private TestProbe probe;", "modifier": "private", "type": "TestProbe", "declarator": "probe", "var_name": "probe"}, {"original_string": "private ClientActorContext ctx;", "modifier": "private", "type": "ClientActorContext", "declarator": "ctx", "var_name": "ctx"}], "file": "opendaylight/md-sal/cds-access-client/src/test/java/org/opendaylight/controller/cluster/access/client/ClientActorContextTest.java"}, "test_case": {"identifier": "testExecuteInActorScheduled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecuteInActorScheduled() {\n        ctx.executeInActor(command, FiniteDuration.create(1, TimeUnit.SECONDS));\n        probe.expectMsg(command);\n    }", "signature": "void testExecuteInActorScheduled()", "full_signature": "@Test public void testExecuteInActorScheduled()", "class_method_signature": "ClientActorContextTest.testExecuteInActorScheduled()", "testcase": true, "constructor": false, "invocations": ["executeInActor", "create", "expectMsg"]}, "focal_class": {"identifier": "ClientActorContext", "superclass": "extends AbstractClientActorContext", "interfaces": "implements Identifiable<ClientIdentifier>", "fields": [{"original_string": "private final ExecutionContext executionContext;", "modifier": "private final", "type": "ExecutionContext", "declarator": "executionContext", "var_name": "executionContext"}, {"original_string": "private final ClientIdentifier identifier;", "modifier": "private final", "type": "ClientIdentifier", "declarator": "identifier", "var_name": "identifier"}, {"original_string": "private final Scheduler scheduler;", "modifier": "private final", "type": "Scheduler", "declarator": "scheduler", "var_name": "scheduler"}, {"original_string": "private final Dispatchers dispatchers;", "modifier": "private final", "type": "Dispatchers", "declarator": "dispatchers", "var_name": "dispatchers"}, {"original_string": "private final ClientActorConfig config;", "modifier": "private final", "type": "ClientActorConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private final MessageSlicer messageSlicer;", "modifier": "private final", "type": "MessageSlicer", "declarator": "messageSlicer", "var_name": "messageSlicer"}], "methods": [{"identifier": "ClientActorContext", "parameters": "(final ActorRef self, final String persistenceId, final ActorSystem system,\n            final ClientIdentifier identifier, final ClientActorConfig config)", "modifiers": "", "return": "", "signature": " ClientActorContext(final ActorRef self, final String persistenceId, final ActorSystem system,\n            final ClientIdentifier identifier, final ClientActorConfig config)", "full_signature": "  ClientActorContext(final ActorRef self, final String persistenceId, final ActorSystem system,\n            final ClientIdentifier identifier, final ClientActorConfig config)", "class_method_signature": "ClientActorContext.ClientActorContext(final ActorRef self, final String persistenceId, final ActorSystem system,\n            final ClientIdentifier identifier, final ClientActorConfig config)", "testcase": false, "constructor": true}, {"identifier": "getIdentifier", "parameters": "()", "modifiers": "@Override public", "return": "ClientIdentifier", "signature": "ClientIdentifier getIdentifier()", "full_signature": "@Override public ClientIdentifier getIdentifier()", "class_method_signature": "ClientActorContext.getIdentifier()", "testcase": false, "constructor": false}, {"identifier": "config", "parameters": "()", "modifiers": "public @NonNull", "return": "ClientActorConfig", "signature": "ClientActorConfig config()", "full_signature": "public @NonNull ClientActorConfig config()", "class_method_signature": "ClientActorContext.config()", "testcase": false, "constructor": false}, {"identifier": "dispatchers", "parameters": "()", "modifiers": "public @NonNull", "return": "Dispatchers", "signature": "Dispatchers dispatchers()", "full_signature": "public @NonNull Dispatchers dispatchers()", "class_method_signature": "ClientActorContext.dispatchers()", "testcase": false, "constructor": false}, {"identifier": "messageSlicer", "parameters": "()", "modifiers": "public @NonNull", "return": "MessageSlicer", "signature": "MessageSlicer messageSlicer()", "full_signature": "public @NonNull MessageSlicer messageSlicer()", "class_method_signature": "ClientActorContext.messageSlicer()", "testcase": false, "constructor": false}, {"identifier": "ticker", "parameters": "()", "modifiers": "public @NonNull", "return": "Ticker", "signature": "Ticker ticker()", "full_signature": "public @NonNull Ticker ticker()", "class_method_signature": "ClientActorContext.ticker()", "testcase": false, "constructor": false}, {"identifier": "executeInActor", "parameters": "(final @NonNull InternalCommand<T> command)", "modifiers": "public", "return": "void", "signature": "void executeInActor(final @NonNull InternalCommand<T> command)", "full_signature": "public void executeInActor(final @NonNull InternalCommand<T> command)", "class_method_signature": "ClientActorContext.executeInActor(final @NonNull InternalCommand<T> command)", "testcase": false, "constructor": false}, {"identifier": "executeInActor", "parameters": "(final @NonNull InternalCommand<T> command,\n            final FiniteDuration delay)", "modifiers": "public", "return": "Cancellable", "signature": "Cancellable executeInActor(final @NonNull InternalCommand<T> command,\n            final FiniteDuration delay)", "full_signature": "public Cancellable executeInActor(final @NonNull InternalCommand<T> command,\n            final FiniteDuration delay)", "class_method_signature": "ClientActorContext.executeInActor(final @NonNull InternalCommand<T> command,\n            final FiniteDuration delay)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/cds-access-client/src/main/java/org/opendaylight/controller/cluster/access/client/ClientActorContext.java"}, "focal_method": {"identifier": "executeInActor", "parameters": "(final @NonNull InternalCommand<T> command)", "modifiers": "public", "return": "void", "body": "public <T extends BackendInfo> void executeInActor(final @NonNull InternalCommand<T> command) {\n        self().tell(requireNonNull(command), ActorRef.noSender());\n    }", "signature": "void executeInActor(final @NonNull InternalCommand<T> command)", "full_signature": "public void executeInActor(final @NonNull InternalCommand<T> command)", "class_method_signature": "ClientActorContext.executeInActor(final @NonNull InternalCommand<T> command)", "testcase": false, "constructor": false, "invocations": ["tell", "self", "requireNonNull", "noSender"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}