{"test_class": {"identifier": "BatchProcessorTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/db/mongo/BatchProcessorTest.java"}, "test_case": {"identifier": "consumerIsUsedOnAllReturnedEntities", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void consumerIsUsedOnAllReturnedEntities() {\n        List<String> fullList = generateList(4);\n        List<String> batch = generateList(1);\n\n        final BatchProcessor sut = makeSut(batch, 1);\n\n        Consumer<String> consumerMock = mock(Consumer.class);\n\n        sut.process(\"Some collection\",\n                b -> \"\",\n                fullList,\n                String.class,\n                consumerMock);\n\n        verify(consumerMock, times(fullList.size())).accept(anyString());\n    }", "signature": "void consumerIsUsedOnAllReturnedEntities()", "full_signature": "@Test public void consumerIsUsedOnAllReturnedEntities()", "class_method_signature": "BatchProcessorTest.consumerIsUsedOnAllReturnedEntities()", "testcase": true, "constructor": false, "invocations": ["generateList", "generateList", "makeSut", "mock", "process", "accept", "verify", "times", "size", "anyString"]}, "focal_class": {"identifier": "BatchProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RepositoryHandler repoHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repoHandler", "var_name": "repoHandler"}, {"original_string": "private int batchSize = 1;", "modifier": "private", "type": "int", "declarator": "batchSize = 1", "var_name": "batchSize"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(BatchProcessor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(BatchProcessor.class)", "var_name": "LOG"}], "methods": [{"identifier": "BatchProcessor", "parameters": "(RepositoryHandler handler)", "modifiers": "public", "return": "", "signature": " BatchProcessor(RepositoryHandler handler)", "full_signature": "public  BatchProcessor(RepositoryHandler handler)", "class_method_signature": "BatchProcessor.BatchProcessor(RepositoryHandler handler)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer)", "modifiers": "public", "return": "void", "signature": "void process(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer)", "full_signature": "public void process(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer)", "class_method_signature": "BatchProcessor.process(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer)", "testcase": false, "constructor": false}, {"identifier": "setBatchSize", "parameters": "(int value)", "modifiers": "public", "return": "void", "signature": "void setBatchSize(int value)", "full_signature": "public void setBatchSize(int value)", "class_method_signature": "BatchProcessor.setBatchSize(int value)", "testcase": false, "constructor": false}, {"identifier": "splitList", "parameters": "(final int batchSize, List<T> list)", "modifiers": "private", "return": "List<List<T>>", "signature": "List<List<T>> splitList(final int batchSize, List<T> list)", "full_signature": "private List<List<T>> splitList(final int batchSize, List<T> list)", "class_method_signature": "BatchProcessor.splitList(final int batchSize, List<T> list)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/db/mongo/BatchProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer)", "modifiers": "public", "return": "void", "body": "public <T> void process(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer) {\n\n        List<String> asList = new ArrayList<>();\n        asList.addAll(primaryEntries);\n\n        final List<List<String>> batches = splitList(this.batchSize, asList);\n\n        batches.forEach(batch -> {\n            final List<T> dbEntry = repoHandler.getListByQuery(collectionName,\n                    batchQueryFn.apply(batch),\n                    resultClass);\n\n            if(dbEntry.size() < batch.size()) {\n                LOG.warn(String.format(\"Got fewer results %s < %s\", dbEntry.size(), batch.size()));\n                LOG.warn(\"There are referred dependencies not related to known artifacts\");\n            }\n\n            //\n            // Apply the same consumer over every element of the retrieved primaryEntries\n            //\n            dbEntry.forEach(consumer);\n        });\n\n    }", "signature": "void process(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer)", "full_signature": "public void process(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer)", "class_method_signature": "BatchProcessor.process(final String collectionName,\n                            final Function<List<String>, String> batchQueryFn,\n                            final Collection<String> primaryEntries,\n                            final Class<T> resultClass,\n                            final Consumer<T> consumer)", "testcase": false, "constructor": false, "invocations": ["addAll", "splitList", "forEach", "getListByQuery", "apply", "size", "size", "warn", "format", "size", "size", "warn", "forEach"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}