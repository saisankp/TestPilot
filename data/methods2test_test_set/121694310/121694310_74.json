{"test_class": {"identifier": "ElementTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendse-model/src/test/java/net/sf/opendse/model/ElementTest.java"}, "test_case": {"identifier": "testIsdefined", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIsdefined() {\n\t\tElement parent = new Element(\"id\");\n\t\tString parentattribute = \"a\";\n\t\tparent.setAttribute(parentattribute, 1);\n\n\t\tElement element = new Element(parent);\n\t\tString attribute = \"b\";\n\t\telement.setAttribute(attribute, 1);\n\n\t\tAssert.assertTrue(element.isDefined(attribute));\n\t\tAssert.assertTrue(element.isDefined(parentattribute));\n\t\tAssert.assertFalse(element.isDefined(\"c\"));\n\t}", "signature": "void testIsdefined()", "full_signature": "@Test public void testIsdefined()", "class_method_signature": "ElementTest.testIsdefined()", "testcase": true, "constructor": false, "invocations": ["setAttribute", "setAttribute", "assertTrue", "isDefined", "assertTrue", "isDefined", "assertFalse", "isDefined"]}, "focal_class": {"identifier": "Element", "superclass": "", "interfaces": "implements IAttributes", "fields": [{"original_string": "public static String TYPE = \"TYPE\";", "modifier": "public static", "type": "String", "declarator": "TYPE = \"TYPE\"", "var_name": "TYPE"}, {"original_string": "protected final Attributes attributes = new Attributes();", "modifier": "protected final", "type": "Attributes", "declarator": "attributes = new Attributes()", "var_name": "attributes"}, {"original_string": "protected Element parent = null;", "modifier": "protected", "type": "Element", "declarator": "parent = null", "var_name": "parent"}, {"original_string": "protected String id = null;", "modifier": "protected", "type": "String", "declarator": "id = null", "var_name": "id"}], "methods": [{"identifier": "Element", "parameters": "(String id)", "modifiers": "public", "return": "", "signature": " Element(String id)", "full_signature": "public  Element(String id)", "class_method_signature": "Element.Element(String id)", "testcase": false, "constructor": true}, {"identifier": "Element", "parameters": "(Element parent)", "modifiers": "public", "return": "", "signature": " Element(Element parent)", "full_signature": "public  Element(Element parent)", "class_method_signature": "Element.Element(Element parent)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "Element.getId()", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "Element", "signature": "Element getParent()", "full_signature": "public Element getParent()", "class_method_signature": "Element.getParent()", "testcase": false, "constructor": false}, {"identifier": "setParent", "parameters": "(Element element)", "modifiers": "public", "return": "void", "signature": "void setParent(Element element)", "full_signature": "public void setParent(Element element)", "class_method_signature": "Element.setParent(Element element)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String identifier)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "O", "signature": "O getAttribute(String identifier)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public O getAttribute(String identifier)", "class_method_signature": "Element.getAttribute(String identifier)", "testcase": false, "constructor": false}, {"identifier": "isDefined", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDefined(String identifier)", "full_signature": "@Override public boolean isDefined(String identifier)", "class_method_signature": "Element.isDefined(String identifier)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "()", "modifiers": "@Override public", "return": "Attributes", "signature": "Attributes getAttributes()", "full_signature": "@Override public Attributes getAttributes()", "class_method_signature": "Element.getAttributes()", "testcase": false, "constructor": false}, {"identifier": "getLocalAttributes", "parameters": "()", "modifiers": "public", "return": "Attributes", "signature": "Attributes getLocalAttributes()", "full_signature": "public Attributes getLocalAttributes()", "class_method_signature": "Element.getLocalAttributes()", "testcase": false, "constructor": false}, {"identifier": "getLocalAttributeNames", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getLocalAttributeNames()", "full_signature": "public Set<String> getLocalAttributeNames()", "class_method_signature": "Element.getLocalAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String identifier, Object object)", "modifiers": "@Override public", "return": "void", "signature": "void setAttribute(String identifier, Object object)", "full_signature": "@Override public void setAttribute(String identifier, Object object)", "class_method_signature": "Element.setAttribute(String identifier, Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Element.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Element.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Element.toString()", "testcase": false, "constructor": false}, {"identifier": "getAttributeParameter", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "Parameter", "signature": "Parameter getAttributeParameter(String identifier)", "full_signature": "@Override public Parameter getAttributeParameter(String identifier)", "class_method_signature": "Element.getAttributeParameter(String identifier)", "testcase": false, "constructor": false}, {"identifier": "getAttributeNames", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAttributeNames()", "full_signature": "@Override public Set<String> getAttributeNames()", "class_method_signature": "Element.getAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "Element.getType()", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(String type)", "modifiers": "public", "return": "void", "signature": "void setType(String type)", "full_signature": "public void setType(String type)", "class_method_signature": "Element.setType(String type)", "testcase": false, "constructor": false}], "file": "opendse-model/src/main/java/net/sf/opendse/model/Element.java"}, "focal_method": {"identifier": "isDefined", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean isDefined(String identifier) {\n\t\tif (attributes.isDefined(identifier)) {\n\t\t\treturn true;\n\t\t} else if (parent != null) {\n\t\t\treturn parent.isDefined(identifier);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}", "signature": "boolean isDefined(String identifier)", "full_signature": "@Override public boolean isDefined(String identifier)", "class_method_signature": "Element.isDefined(String identifier)", "testcase": false, "constructor": false, "invocations": ["isDefined", "isDefined"]}, "repository": {"repo_id": 121694310, "url": "https://github.com/felixreimann/opendse", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 7, "size": 2024, "license": "licensed"}}