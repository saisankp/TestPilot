{"test_class": {"identifier": "PipelineNodeImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    WorkflowJob job;", "modifier": "@Mock", "type": "WorkflowJob", "declarator": "job", "var_name": "job"}, {"original_string": "@Mock\n    WorkflowRun run;", "modifier": "@Mock", "type": "WorkflowRun", "declarator": "run", "var_name": "run"}], "file": "blueocean-pipeline-api-impl/src/test/java/io/jenkins/blueocean/rest/impl/pipeline/PipelineNodeImplTest.java"}, "test_case": {"identifier": "getRun_FirstFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getRun_FirstFound() throws Exception {\n        PowerMockito.mockStatic(QueueUtil.class);\n        PowerMockito.when(QueueUtil.getRun(job, 1)).thenReturn(run);\n\n        WorkflowRun workflowRun = PipelineNodeImpl.getRun(job, 1);\n        assertEquals(workflowRun, run);\n\n        PowerMockito.verifyStatic(QueueUtil.class, VerificationModeFactory.times(1));\n        QueueUtil.getRun(job, 1); // need to call again to handle verify\n    }", "signature": "void getRun_FirstFound()", "full_signature": "@Test public void getRun_FirstFound()", "class_method_signature": "PipelineNodeImplTest.getRun_FirstFound()", "testcase": true, "constructor": false, "invocations": ["mockStatic", "thenReturn", "when", "getRun", "getRun", "assertEquals", "verifyStatic", "times", "getRun"]}, "focal_class": {"identifier": "PipelineNodeImpl", "superclass": "extends BluePipelineNode", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger( PipelineNodeImpl.class );", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger( PipelineNodeImpl.class )", "var_name": "LOGGER"}, {"original_string": "private final FlowNodeWrapper node;", "modifier": "private final", "type": "FlowNodeWrapper", "declarator": "node", "var_name": "node"}, {"original_string": "private final List<Edge> edges;", "modifier": "private final", "type": "List<Edge>", "declarator": "edges", "var_name": "edges"}, {"original_string": "private final Long durationInMillis;", "modifier": "private final", "type": "Long", "declarator": "durationInMillis", "var_name": "durationInMillis"}, {"original_string": "private final NodeRunStatus status;", "modifier": "private final", "type": "NodeRunStatus", "declarator": "status", "var_name": "status"}, {"original_string": "private final Link self;", "modifier": "private final", "type": "Link", "declarator": "self", "var_name": "self"}, {"original_string": "private final WorkflowRun run;", "modifier": "private final", "type": "WorkflowRun", "declarator": "run", "var_name": "run"}, {"original_string": "private final Reachable parent;", "modifier": "private final", "type": "Reachable", "declarator": "parent", "var_name": "parent"}, {"original_string": "public static final int waitJobInqueueTimeout = Integer.getInteger(\"blueocean.wait.job.inqueue\", 1000);", "modifier": "public static final", "type": "int", "declarator": "waitJobInqueueTimeout = Integer.getInteger(\"blueocean.wait.job.inqueue\", 1000)", "var_name": "waitJobInqueueTimeout"}], "methods": [{"identifier": "PipelineNodeImpl", "parameters": "(FlowNodeWrapper node, Reachable parent, WorkflowRun run)", "modifiers": "public", "return": "", "signature": " PipelineNodeImpl(FlowNodeWrapper node, Reachable parent, WorkflowRun run)", "full_signature": "public  PipelineNodeImpl(FlowNodeWrapper node, Reachable parent, WorkflowRun run)", "class_method_signature": "PipelineNodeImpl.PipelineNodeImpl(FlowNodeWrapper node, Reachable parent, WorkflowRun run)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "PipelineNodeImpl.getId()", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayName()", "full_signature": "@Override public String getDisplayName()", "class_method_signature": "PipelineNodeImpl.getDisplayName()", "testcase": false, "constructor": false}, {"identifier": "getDisplayDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayDescription()", "full_signature": "@Override public String getDisplayDescription()", "class_method_signature": "PipelineNodeImpl.getDisplayDescription()", "testcase": false, "constructor": false}, {"identifier": "getResult", "parameters": "()", "modifiers": "@Override public", "return": "BlueRun.BlueRunResult", "signature": "BlueRun.BlueRunResult getResult()", "full_signature": "@Override public BlueRun.BlueRunResult getResult()", "class_method_signature": "PipelineNodeImpl.getResult()", "testcase": false, "constructor": false}, {"identifier": "getStateObj", "parameters": "()", "modifiers": "@Override public", "return": "BlueRun.BlueRunState", "signature": "BlueRun.BlueRunState getStateObj()", "full_signature": "@Override public BlueRun.BlueRunState getStateObj()", "class_method_signature": "PipelineNodeImpl.getStateObj()", "testcase": false, "constructor": false}, {"identifier": "getFirstParent", "parameters": "()", "modifiers": "@Override @SuppressFBWarnings(value = \"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\") public @CheckForNull", "return": "String", "signature": "String getFirstParent()", "full_signature": "@Override @SuppressFBWarnings(value = \"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\") public @CheckForNull String getFirstParent()", "class_method_signature": "PipelineNodeImpl.getFirstParent()", "testcase": false, "constructor": false}, {"identifier": "getStartTime", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getStartTime()", "full_signature": "@Override public Date getStartTime()", "class_method_signature": "PipelineNodeImpl.getStartTime()", "testcase": false, "constructor": false}, {"identifier": "getStartTimeString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStartTimeString()", "full_signature": "public String getStartTimeString()", "class_method_signature": "PipelineNodeImpl.getStartTimeString()", "testcase": false, "constructor": false}, {"identifier": "getEdges", "parameters": "()", "modifiers": "@Override public", "return": "List<Edge>", "signature": "List<Edge> getEdges()", "full_signature": "@Override public List<Edge> getEdges()", "class_method_signature": "PipelineNodeImpl.getEdges()", "testcase": false, "constructor": false}, {"identifier": "getDurationInMillis", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getDurationInMillis()", "full_signature": "@Override public Long getDurationInMillis()", "class_method_signature": "PipelineNodeImpl.getDurationInMillis()", "testcase": false, "constructor": false}, {"identifier": "getLog", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object getLog()", "full_signature": "@Override public Object getLog()", "class_method_signature": "PipelineNodeImpl.getLog()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getType()", "full_signature": "@Override public String getType()", "class_method_signature": "PipelineNodeImpl.getType()", "testcase": false, "constructor": false}, {"identifier": "getStepType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStepType()", "full_signature": "@Override public String getStepType()", "class_method_signature": "PipelineNodeImpl.getStepType()", "testcase": false, "constructor": false}, {"identifier": "getCauseOfBlockage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCauseOfBlockage()", "full_signature": "@Override public String getCauseOfBlockage()", "class_method_signature": "PipelineNodeImpl.getCauseOfBlockage()", "testcase": false, "constructor": false}, {"identifier": "getSteps", "parameters": "()", "modifiers": "@Override public", "return": "BluePipelineStepContainer", "signature": "BluePipelineStepContainer getSteps()", "full_signature": "@Override public BluePipelineStepContainer getSteps()", "class_method_signature": "PipelineNodeImpl.getSteps()", "testcase": false, "constructor": false}, {"identifier": "getLink", "parameters": "()", "modifiers": "@Override public", "return": "Link", "signature": "Link getLink()", "full_signature": "@Override public Link getLink()", "class_method_signature": "PipelineNodeImpl.getLink()", "testcase": false, "constructor": false}, {"identifier": "getActions", "parameters": "()", "modifiers": "@Override public", "return": "Collection<BlueActionProxy>", "signature": "Collection<BlueActionProxy> getActions()", "full_signature": "@Override public Collection<BlueActionProxy> getActions()", "class_method_signature": "PipelineNodeImpl.getActions()", "testcase": false, "constructor": false}, {"identifier": "isRestartable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRestartable()", "full_signature": "@Override public boolean isRestartable()", "class_method_signature": "PipelineNodeImpl.isRestartable()", "testcase": false, "constructor": false}, {"identifier": "getInputStep", "parameters": "()", "modifiers": "@Override public", "return": "BlueInputStep", "signature": "BlueInputStep getInputStep()", "full_signature": "@Override public BlueInputStep getInputStep()", "class_method_signature": "PipelineNodeImpl.getInputStep()", "testcase": false, "constructor": false}, {"identifier": "submitInputStep", "parameters": "(StaplerRequest request)", "modifiers": "@Override public", "return": "HttpResponse", "signature": "HttpResponse submitInputStep(StaplerRequest request)", "full_signature": "@Override public HttpResponse submitInputStep(StaplerRequest request)", "class_method_signature": "PipelineNodeImpl.submitInputStep(StaplerRequest request)", "testcase": false, "constructor": false}, {"identifier": "restart", "parameters": "(StaplerRequest request)", "modifiers": "public", "return": "HttpResponse", "signature": "HttpResponse restart(StaplerRequest request)", "full_signature": "public HttpResponse restart(StaplerRequest request)", "class_method_signature": "PipelineNodeImpl.restart(StaplerRequest request)", "testcase": false, "constructor": false}, {"identifier": "getRun", "parameters": "(WorkflowJob job, long itemId)", "modifiers": "protected static", "return": "WorkflowRun", "signature": "WorkflowRun getRun(WorkflowJob job, long itemId)", "full_signature": "protected static WorkflowRun getRun(WorkflowJob job, long itemId)", "class_method_signature": "PipelineNodeImpl.getRun(WorkflowJob job, long itemId)", "testcase": false, "constructor": false}, {"identifier": "buildEdges", "parameters": "(List<FlowNodeWrapper> nodes)", "modifiers": "private", "return": "List<Edge>", "signature": "List<Edge> buildEdges(List<FlowNodeWrapper> nodes)", "full_signature": "private List<Edge> buildEdges(List<FlowNodeWrapper> nodes)", "class_method_signature": "PipelineNodeImpl.buildEdges(List<FlowNodeWrapper> nodes)", "testcase": false, "constructor": false}, {"identifier": "getFlowNodeWrapper", "parameters": "()", "modifiers": "", "return": "FlowNodeWrapper", "signature": "FlowNodeWrapper getFlowNodeWrapper()", "full_signature": " FlowNodeWrapper getFlowNodeWrapper()", "class_method_signature": "PipelineNodeImpl.getFlowNodeWrapper()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PipelineNodeImpl.toString()", "testcase": false, "constructor": false}], "file": "blueocean-pipeline-api-impl/src/main/java/io/jenkins/blueocean/rest/impl/pipeline/PipelineNodeImpl.java"}, "focal_method": {"identifier": "getRun", "parameters": "(WorkflowJob job, long itemId)", "modifiers": "protected static", "return": "WorkflowRun", "body": "protected static WorkflowRun getRun(WorkflowJob job, long itemId) throws InterruptedException {\n        WorkflowRun restartRun = QueueUtil.getRun(job, itemId);\n        if (restartRun == null) {\n            long startTimeMs = System.currentTimeMillis();\n            while (restartRun == null && System.currentTimeMillis()-startTimeMs < waitJobInqueueTimeout) {\n                Thread.sleep(100);\n                restartRun = QueueUtil.getRun(job, itemId);\n            }\n        }\n        return restartRun;\n    }", "signature": "WorkflowRun getRun(WorkflowJob job, long itemId)", "full_signature": "protected static WorkflowRun getRun(WorkflowJob job, long itemId)", "class_method_signature": "PipelineNodeImpl.getRun(WorkflowJob job, long itemId)", "testcase": false, "constructor": false, "invocations": ["getRun", "currentTimeMillis", "currentTimeMillis", "sleep", "getRun"]}, "repository": {"repo_id": 50250915, "url": "https://github.com/jenkinsci/blueocean-plugin", "stars": 2605, "created": "1/23/2016 6:02:45 PM +00:00", "updates": "2020-01-25T17:58:46+00:00", "fork": "False", "license": "licensed"}}