{"test_class": {"identifier": "XPathPayloadEndpointMappingTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private XPathPayloadEndpointMapping mapping;", "modifier": "private", "type": "XPathPayloadEndpointMapping", "declarator": "mapping", "var_name": "mapping"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/mapping/XPathPayloadEndpointMappingTest.java"}, "test_case": {"identifier": "testGetLookupKeyForMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetLookupKeyForMessage() throws Exception {\n\t\tmapping.setExpression(\"/root/text()\");\n\t\tmapping.afterPropertiesSet();\n\n\t\tMockWebServiceMessage request = new MockWebServiceMessage(\"<root>value</root>\");\n\t\tMessageContext context = new DefaultMessageContext(request, new MockWebServiceMessageFactory());\n\n\t\tString result = mapping.getLookupKeyForMessage(context);\n\t\tAssert.assertNotNull(\"mapping returns null\", result);\n\t\tAssert.assertEquals(\"mapping returns invalid result\", \"value\", result);\n\t}", "signature": "void testGetLookupKeyForMessage()", "full_signature": "@Test public void testGetLookupKeyForMessage()", "class_method_signature": "XPathPayloadEndpointMappingTest.testGetLookupKeyForMessage()", "testcase": true, "constructor": false, "invocations": ["setExpression", "afterPropertiesSet", "getLookupKeyForMessage", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "XPathPayloadEndpointMapping", "superclass": "extends AbstractMapBasedEndpointMapping", "interfaces": "implements InitializingBean", "fields": [{"original_string": "private String expressionString;", "modifier": "private", "type": "String", "declarator": "expressionString", "var_name": "expressionString"}, {"original_string": "private XPathExpression expression;", "modifier": "private", "type": "XPathExpression", "declarator": "expression", "var_name": "expression"}, {"original_string": "private Map<String, String> namespaces;", "modifier": "private", "type": "Map<String, String>", "declarator": "namespaces", "var_name": "namespaces"}, {"original_string": "private TransformerFactory transformerFactory;", "modifier": "private", "type": "TransformerFactory", "declarator": "transformerFactory", "var_name": "transformerFactory"}], "methods": [{"identifier": "setExpression", "parameters": "(String expression)", "modifiers": "public", "return": "void", "signature": "void setExpression(String expression)", "full_signature": "public void setExpression(String expression)", "class_method_signature": "XPathPayloadEndpointMapping.setExpression(String expression)", "testcase": false, "constructor": false}, {"identifier": "setNamespaces", "parameters": "(Map<String, String> namespaces)", "modifiers": "public", "return": "void", "signature": "void setNamespaces(Map<String, String> namespaces)", "full_signature": "public void setNamespaces(Map<String, String> namespaces)", "class_method_signature": "XPathPayloadEndpointMapping.setNamespaces(Map<String, String> namespaces)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "XPathPayloadEndpointMapping.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "getLookupKeyForMessage", "parameters": "(MessageContext messageContext)", "modifiers": "@Override protected", "return": "String", "signature": "String getLookupKeyForMessage(MessageContext messageContext)", "full_signature": "@Override protected String getLookupKeyForMessage(MessageContext messageContext)", "class_method_signature": "XPathPayloadEndpointMapping.getLookupKeyForMessage(MessageContext messageContext)", "testcase": false, "constructor": false}, {"identifier": "getMessagePayloadElement", "parameters": "(WebServiceMessage message)", "modifiers": "private", "return": "Element", "signature": "Element getMessagePayloadElement(WebServiceMessage message)", "full_signature": "private Element getMessagePayloadElement(WebServiceMessage message)", "class_method_signature": "XPathPayloadEndpointMapping.getMessagePayloadElement(WebServiceMessage message)", "testcase": false, "constructor": false}, {"identifier": "validateLookupKey", "parameters": "(String key)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean validateLookupKey(String key)", "full_signature": "@Override protected boolean validateLookupKey(String key)", "class_method_signature": "XPathPayloadEndpointMapping.validateLookupKey(String key)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/server/endpoint/mapping/XPathPayloadEndpointMapping.java"}, "focal_method": {"identifier": "getLookupKeyForMessage", "parameters": "(MessageContext messageContext)", "modifiers": "@Override protected", "return": "String", "body": "@Override\n\tprotected String getLookupKeyForMessage(MessageContext messageContext) throws Exception {\n\t\tElement payloadElement = getMessagePayloadElement(messageContext.getRequest());\n\t\treturn expression.evaluateAsString(payloadElement);\n\t}", "signature": "String getLookupKeyForMessage(MessageContext messageContext)", "full_signature": "@Override protected String getLookupKeyForMessage(MessageContext messageContext)", "class_method_signature": "XPathPayloadEndpointMapping.getLookupKeyForMessage(MessageContext messageContext)", "testcase": false, "constructor": false, "invocations": ["getMessagePayloadElement", "getRequest", "evaluateAsString"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}