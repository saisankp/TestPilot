{"test_class": {"identifier": "AnyOrderQueryBondTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "legacy/src/test/java/org/openscience/cdk/isomorphism/matchers/smarts/AnyOrderQueryBondTest.java"}, "test_case": {"identifier": "testMatches", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMatches() {\n        IBond testBond = null;\n        AnyOrderQueryBond matcher = new AnyOrderQueryBond(mock(IChemObjectBuilder.class));\n        Assert.assertFalse(matcher.matches(testBond));\n    }", "signature": "void testMatches()", "full_signature": "@Test public void testMatches()", "class_method_signature": "AnyOrderQueryBondTest.testMatches()", "testcase": true, "constructor": false, "invocations": ["mock", "assertFalse", "matches"]}, "focal_class": {"identifier": "AnyOrderQueryBond", "superclass": "extends SMARTSBond", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -826100570208878645L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -826100570208878645L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "AnyOrderQueryBond", "parameters": "(IChemObjectBuilder builder)", "modifiers": "public", "return": "", "signature": " AnyOrderQueryBond(IChemObjectBuilder builder)", "full_signature": "public  AnyOrderQueryBond(IChemObjectBuilder builder)", "class_method_signature": "AnyOrderQueryBond.AnyOrderQueryBond(IChemObjectBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "AnyOrderQueryBond", "parameters": "(IQueryAtom atom1, IQueryAtom atom2, IBond.Order order, IChemObjectBuilder builder)", "modifiers": "public", "return": "", "signature": " AnyOrderQueryBond(IQueryAtom atom1, IQueryAtom atom2, IBond.Order order, IChemObjectBuilder builder)", "full_signature": "public  AnyOrderQueryBond(IQueryAtom atom1, IQueryAtom atom2, IBond.Order order, IChemObjectBuilder builder)", "class_method_signature": "AnyOrderQueryBond.AnyOrderQueryBond(IQueryAtom atom1, IQueryAtom atom2, IBond.Order order, IChemObjectBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(IBond bond)", "full_signature": "@Override public boolean matches(IBond bond)", "class_method_signature": "AnyOrderQueryBond.matches(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AnyOrderQueryBond.toString()", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/isomorphism/matchers/smarts/AnyOrderQueryBond.java"}, "focal_method": {"identifier": "matches", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean matches(IBond bond) {\n        return bond != null; // any bond order is fine\n    }", "signature": "boolean matches(IBond bond)", "full_signature": "@Override public boolean matches(IBond bond)", "class_method_signature": "AnyOrderQueryBond.matches(IBond bond)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}