{"test_class": {"identifier": "BlamesModelTest", "superclass": "extends AbstractDetailsModelTest", "interfaces": "", "fields": [{"original_string": "private static final String COMMIT = \"commit\";", "modifier": "private static final", "type": "String", "declarator": "COMMIT = \"commit\"", "var_name": "COMMIT"}, {"original_string": "private static final String NAME = \"name\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"name\"", "var_name": "NAME"}, {"original_string": "private static final String EMAIL = \"email\";", "modifier": "private static final", "type": "String", "declarator": "EMAIL = \"email\"", "var_name": "EMAIL"}, {"original_string": "private static final int TIME = 12_345;", "modifier": "private static final", "type": "int", "declarator": "TIME = 12_345", "var_name": "TIME"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/model/BlamesModelTest.java"}, "test_case": {"identifier": "shouldShowIssueWithBlames", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldShowIssueWithBlames() {\n        Report report = new Report();\n        Issue issue = createIssue(1);\n        report.add(issue);\n\n        FileBlame blameRequest = mock(FileBlame.class);\n        when(blameRequest.getCommit(issue.getLineStart())).thenReturn(COMMIT);\n        when(blameRequest.getEmail(issue.getLineStart())).thenReturn(EMAIL);\n        when(blameRequest.getName(issue.getLineStart())).thenReturn(NAME);\n        when(blameRequest.getTime(issue.getLineStart())).thenReturn(TIME);\n\n        Blames blames = mock(Blames.class);\n        when(blames.contains(issue.getFileName())).thenReturn(true);\n        when(blames.getBlame(issue.getFileName())).thenReturn(blameRequest);\n\n        BlamesModel model = createModel(report, blames);\n\n        BlamesRow actualRow = model.getRow(issue);\n        assertThat(actualRow).hasDescription(EXPECTED_DESCRIPTION)\n                .hasAge(\"1\")\n                .hasCommit(COMMIT)\n                .hasAuthor(NAME)\n                .hasEmail(EMAIL)\n                .hasAddedAt(TIME);\n        assertThatDetailedColumnContains(actualRow.getFileName(),\n                createExpectedFileName(issue), \"/path/to/file-1:0000015\");\n    }", "signature": "void shouldShowIssueWithBlames()", "full_signature": "@Test void shouldShowIssueWithBlames()", "class_method_signature": "BlamesModelTest.shouldShowIssueWithBlames()", "testcase": true, "constructor": false, "invocations": ["createIssue", "add", "mock", "thenReturn", "when", "getCommit", "getLineStart", "thenReturn", "when", "getEmail", "getLineStart", "thenReturn", "when", "getName", "getLineStart", "thenReturn", "when", "getTime", "getLineStart", "mock", "thenReturn", "when", "contains", "getFileName", "thenReturn", "when", "getBlame", "getFileName", "createModel", "getRow", "hasAddedAt", "hasEmail", "hasAuthor", "hasCommit", "hasAge", "hasDescription", "assertThat", "assertThatDetailedColumnContains", "getFileName", "createExpectedFileName"]}, "focal_class": {"identifier": "BlamesModel", "superclass": "extends DetailsTableModel", "interfaces": "", "fields": [{"original_string": "static final String UNDEFINED = \"-\";", "modifier": "static final", "type": "String", "declarator": "UNDEFINED = \"-\"", "var_name": "UNDEFINED"}, {"original_string": "static final int UNDEFINED_DATE = 0;", "modifier": "static final", "type": "int", "declarator": "UNDEFINED_DATE = 0", "var_name": "UNDEFINED_DATE"}, {"original_string": "private final Blames blames;", "modifier": "private final", "type": "Blames", "declarator": "blames", "var_name": "blames"}], "methods": [{"identifier": "BlamesModel", "parameters": "(final Report report, final Blames blames, final FileNameRenderer fileNameRenderer,\n            final AgeBuilder ageBuilder, final DescriptionProvider labelProvider)", "modifiers": "", "return": "", "signature": " BlamesModel(final Report report, final Blames blames, final FileNameRenderer fileNameRenderer,\n            final AgeBuilder ageBuilder, final DescriptionProvider labelProvider)", "full_signature": "  BlamesModel(final Report report, final Blames blames, final FileNameRenderer fileNameRenderer,\n            final AgeBuilder ageBuilder, final DescriptionProvider labelProvider)", "class_method_signature": "BlamesModel.BlamesModel(final Report report, final Blames blames, final FileNameRenderer fileNameRenderer,\n            final AgeBuilder ageBuilder, final DescriptionProvider labelProvider)", "testcase": false, "constructor": true}, {"identifier": "BlamesModel", "parameters": "(final Report report, final Blames blames, final FileNameRenderer fileNameRenderer,\n            final AgeBuilder ageBuilder, final DescriptionProvider labelProvider, final JenkinsFacade jenkinsFacade)", "modifiers": "@VisibleForTesting", "return": "", "signature": " BlamesModel(final Report report, final Blames blames, final FileNameRenderer fileNameRenderer,\n            final AgeBuilder ageBuilder, final DescriptionProvider labelProvider, final JenkinsFacade jenkinsFacade)", "full_signature": "@VisibleForTesting  BlamesModel(final Report report, final Blames blames, final FileNameRenderer fileNameRenderer,\n            final AgeBuilder ageBuilder, final DescriptionProvider labelProvider, final JenkinsFacade jenkinsFacade)", "class_method_signature": "BlamesModel.BlamesModel(final Report report, final Blames blames, final FileNameRenderer fileNameRenderer,\n            final AgeBuilder ageBuilder, final DescriptionProvider labelProvider, final JenkinsFacade jenkinsFacade)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "BlamesModel.getId()", "testcase": false, "constructor": false}, {"identifier": "getColumns", "parameters": "()", "modifiers": "@Override public", "return": "List<TableColumn>", "signature": "List<TableColumn> getColumns()", "full_signature": "@Override public List<TableColumn> getColumns()", "class_method_signature": "BlamesModel.getColumns()", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(final Issue issue)", "modifiers": "@Override protected", "return": "BlamesRow", "signature": "BlamesRow getRow(final Issue issue)", "full_signature": "@Override protected BlamesRow getRow(final Issue issue)", "class_method_signature": "BlamesModel.getRow(final Issue issue)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/model/BlamesModel.java"}, "focal_method": {"identifier": "getRow", "parameters": "(final Issue issue)", "modifiers": "@Override protected", "return": "BlamesRow", "body": "@Override\n    protected BlamesRow getRow(final Issue issue) {\n        return new BlamesRow(getAgeBuilder(), getFileNameRenderer(), getDescriptionProvider(),\n                issue, getJenkinsFacade(), new Blame(issue, blames));\n    }", "signature": "BlamesRow getRow(final Issue issue)", "full_signature": "@Override protected BlamesRow getRow(final Issue issue)", "class_method_signature": "BlamesModel.getRow(final Issue issue)", "testcase": false, "constructor": false, "invocations": ["getAgeBuilder", "getFileNameRenderer", "getDescriptionProvider", "getJenkinsFacade"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}