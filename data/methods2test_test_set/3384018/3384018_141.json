{"test_class": {"identifier": "TestCookiePathComparator", "superclass": "", "interfaces": "", "fields": [], "file": "external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/cookie/TestCookiePathComparator.java"}, "test_case": {"identifier": "testEquality2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquality2() {\n        BasicClientCookie cookie1 = new BasicClientCookie(\"name1\", \"value\");\n        cookie1.setPath(\"/a/\");\n        BasicClientCookie cookie2 = new BasicClientCookie(\"name1\", \"value\");\n        cookie2.setPath(\"/a\");\n        Comparator<Cookie> comparator = new CookiePathComparator();\n        Assert.assertTrue(comparator.compare(cookie1, cookie2) == 0);\n        Assert.assertTrue(comparator.compare(cookie2, cookie1) == 0);\n    }", "signature": "void testEquality2()", "full_signature": "@Test public void testEquality2()", "class_method_signature": "TestCookiePathComparator.testEquality2()", "testcase": true, "constructor": false, "invocations": ["setPath", "setPath", "assertTrue", "compare", "assertTrue", "compare"]}, "focal_class": {"identifier": "CookiePathComparator", "superclass": "", "interfaces": "implements Serializable, Comparator<Cookie>", "fields": [{"original_string": "private static final long serialVersionUID = 7523645369616405818L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 7523645369616405818L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "normalizePath", "parameters": "(final Cookie cookie)", "modifiers": "private", "return": "String", "signature": "String normalizePath(final Cookie cookie)", "full_signature": "private String normalizePath(final Cookie cookie)", "class_method_signature": "CookiePathComparator.normalizePath(final Cookie cookie)", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(final Cookie c1, final Cookie c2)", "modifiers": "public", "return": "int", "signature": "int compare(final Cookie c1, final Cookie c2)", "full_signature": "public int compare(final Cookie c1, final Cookie c2)", "class_method_signature": "CookiePathComparator.compare(final Cookie c1, final Cookie c2)", "testcase": false, "constructor": false}], "file": "external_sources/httpclient-4.1.1/httpclient/src/main/java/org/apache/ogt/http/cookie/CookiePathComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(final Cookie c1, final Cookie c2)", "modifiers": "public", "return": "int", "body": "public int compare(final Cookie c1, final Cookie c2) {\n        String path1 = normalizePath(c1);\n        String path2 = normalizePath(c2);\n        if (path1.equals(path2)) {\n            return 0;\n        } else if (path1.startsWith(path2)) {\n            return -1;\n        } else if (path2.startsWith(path1)) {\n            return 1;\n        } else {\n            // Does not really matter\n            return 0;\n        }\n    }", "signature": "int compare(final Cookie c1, final Cookie c2)", "full_signature": "public int compare(final Cookie c1, final Cookie c2)", "class_method_signature": "CookiePathComparator.compare(final Cookie c1, final Cookie c2)", "testcase": false, "constructor": false, "invocations": ["normalizePath", "normalizePath", "equals", "startsWith", "startsWith"]}, "repository": {"repo_id": 3384018, "url": "https://github.com/f8full/open-bixi-gpstracker", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2028, "license": "licensed"}}