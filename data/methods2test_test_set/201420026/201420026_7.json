{"test_class": {"identifier": "LideaLogDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private LideaLogDAO lideaLogDAO;", "modifier": "@Resource\n    private", "type": "LideaLogDAO", "declarator": "lideaLogDAO", "var_name": "lideaLogDAO"}], "file": "mmc-lidea-web/src/test/java/com/mmc/flink/lidea/dao/LideaLogDAOTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGet() {\n\n        LideaLogReq req = new LideaLogReq();\n\n        req.setAppName(\"cabinet-base-server\");\n        req.setServiceName(\"com.fcbox.edms.terminal.api.CabinetServiceFacade\");\n        req.setMethodName(\"getCabinetInfo\");\n\n        req.setFrom(TimeUtil.stringToLong(\"2019-08-05 14:26:39\"));\n        req.setTo(TimeUtil.stringToLong(\"2019-08-05 14:26:39\"));\n\n        LideaLogResp resp = lideaLogDAO.get(req);\n        System.out.println(\"==========================================================================================\");\n        System.out.println(JSON.toJSONString(resp));\n\n    }", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "LideaLogDAOTest.testGet()", "testcase": true, "constructor": false, "invocations": ["setAppName", "setServiceName", "setMethodName", "setFrom", "stringToLong", "setTo", "stringToLong", "get", "println", "println", "toJSONString"]}, "focal_class": {"identifier": "LideaLogDAO", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private HbaseTemplate hbaseTemplate;", "modifier": "@Resource\n    private", "type": "HbaseTemplate", "declarator": "hbaseTemplate", "var_name": "hbaseTemplate"}], "methods": [{"identifier": "put", "parameters": "(LideaLogBO bo)", "modifiers": "public", "return": "void", "signature": "void put(LideaLogBO bo)", "full_signature": "public void put(LideaLogBO bo)", "class_method_signature": "LideaLogDAO.put(LideaLogBO bo)", "testcase": false, "constructor": false}, {"identifier": "scan", "parameters": "(LideaLogReq req)", "modifiers": "public", "return": "LideaLogResp", "signature": "LideaLogResp scan(LideaLogReq req)", "full_signature": "public LideaLogResp scan(LideaLogReq req)", "class_method_signature": "LideaLogDAO.scan(LideaLogReq req)", "testcase": false, "constructor": false}, {"identifier": "createScan", "parameters": "(LideaLogReq bo)", "modifiers": "private", "return": "Scan", "signature": "Scan createScan(LideaLogReq bo)", "full_signature": "private Scan createScan(LideaLogReq bo)", "class_method_signature": "LideaLogDAO.createScan(LideaLogReq bo)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(LideaLogReq req)", "modifiers": "public", "return": "LideaLogResp", "signature": "LideaLogResp get(LideaLogReq req)", "full_signature": "public LideaLogResp get(LideaLogReq req)", "class_method_signature": "LideaLogDAO.get(LideaLogReq req)", "testcase": false, "constructor": false}], "file": "mmc-lidea-web/src/main/java/com/mmc/flink/lidea/dao/LideaLogDAO.java"}, "focal_method": {"identifier": "get", "parameters": "(LideaLogReq req)", "modifiers": "public", "return": "LideaLogResp", "body": "public LideaLogResp get(LideaLogReq req) {\n\n        log.info(\"req : {}\", JSON.toJSONString(req));\n\n        LideaLogResp resp = new LideaLogResp();\n        resp.setAppName(req.getAppName());\n        resp.setServiceName(req.getServiceName());\n        resp.setMethodName(req.getMethodName());\n\n        List<LideaLogBO> data = hbaseTemplate.execute(Const.LIDEA_LOG_TABLE, (table) -> {\n\n            String base = StringUtil.format(\"{}{}{}\", req.getAppName(), req.getServiceName(), req.getMethodName());\n\n            byte[] rowKey = LideaLogEntry.makeRowKey(MD5Util.encrypt(base), req.getFrom());\n            Get get = new Get(rowKey);\n\n            Result result = table.get(get);\n\n            LideaLogBO bo = LideaLogResultsExtractor.map(result);\n\n            return Collections.singletonList(bo);\n        });\n\n        resp.setData(data);\n\n        return resp;\n    }", "signature": "LideaLogResp get(LideaLogReq req)", "full_signature": "public LideaLogResp get(LideaLogReq req)", "class_method_signature": "LideaLogDAO.get(LideaLogReq req)", "testcase": false, "constructor": false, "invocations": ["info", "toJSONString", "setAppName", "getAppName", "setServiceName", "getServiceName", "setMethodName", "getMethodName", "execute", "format", "getAppName", "getServiceName", "getMethodName", "makeRowKey", "encrypt", "getFrom", "get", "map", "singletonList", "setData"]}, "repository": {"repo_id": 201420026, "url": "https://github.com/VIPJoey/Lidea", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 13, "size": 991, "license": "licensed"}}