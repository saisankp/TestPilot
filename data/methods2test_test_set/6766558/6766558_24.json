{"test_class": {"identifier": "SerialHystrixRequestEventsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final HystrixCommandGroupKey groupKey = HystrixCommandGroupKey.Factory.asKey(\"GROUP\");", "modifier": "private static final", "type": "HystrixCommandGroupKey", "declarator": "groupKey = HystrixCommandGroupKey.Factory.asKey(\"GROUP\")", "var_name": "groupKey"}, {"original_string": "private static final HystrixThreadPoolKey threadPoolKey = HystrixThreadPoolKey.Factory.asKey(\"ThreadPool\");", "modifier": "private static final", "type": "HystrixThreadPoolKey", "declarator": "threadPoolKey = HystrixThreadPoolKey.Factory.asKey(\"ThreadPool\")", "var_name": "threadPoolKey"}, {"original_string": "private static final HystrixCommandKey fooKey = HystrixCommandKey.Factory.asKey(\"Foo\");", "modifier": "private static final", "type": "HystrixCommandKey", "declarator": "fooKey = HystrixCommandKey.Factory.asKey(\"Foo\")", "var_name": "fooKey"}, {"original_string": "private static final HystrixCommandKey barKey = HystrixCommandKey.Factory.asKey(\"Bar\");", "modifier": "private static final", "type": "HystrixCommandKey", "declarator": "barKey = HystrixCommandKey.Factory.asKey(\"Bar\")", "var_name": "barKey"}, {"original_string": "private static final HystrixCollapserKey collapserKey = HystrixCollapserKey.Factory.asKey(\"FooCollapser\");", "modifier": "private static final", "type": "HystrixCollapserKey", "declarator": "collapserKey = HystrixCollapserKey.Factory.asKey(\"FooCollapser\")", "var_name": "collapserKey"}], "file": "hystrix-serialization/src/test/java/com/netflix/hystrix/serial/SerialHystrixRequestEventsTest.java"}, "test_case": {"identifier": "testTwoSuccessesSameKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTwoSuccessesSameKey() throws IOException {\n        List<HystrixInvokableInfo<?>> executions = new ArrayList<HystrixInvokableInfo<?>>();\n        HystrixInvokableInfo<Integer> foo1 = new SimpleExecution(fooKey, 23, HystrixEventType.SUCCESS);\n        HystrixInvokableInfo<Integer> foo2 = new SimpleExecution(fooKey, 34, HystrixEventType.SUCCESS);\n        executions.add(foo1);\n        executions.add(foo2);\n        HystrixRequestEvents request = new HystrixRequestEvents(executions);\n        String actual = SerialHystrixRequestEvents.toJsonString(request);\n        assertEquals(\"[{\\\"name\\\":\\\"Foo\\\",\\\"events\\\":[\\\"SUCCESS\\\"],\\\"latencies\\\":[23,34]}]\", actual);\n    }", "signature": "void testTwoSuccessesSameKey()", "full_signature": "@Test public void testTwoSuccessesSameKey()", "class_method_signature": "SerialHystrixRequestEventsTest.testTwoSuccessesSameKey()", "testcase": true, "constructor": false, "invocations": ["add", "add", "toJsonString", "assertEquals"]}, "focal_class": {"identifier": "SerialHystrixRequestEvents", "superclass": "extends SerialHystrixMetric", "interfaces": "", "fields": [], "methods": [{"identifier": "toBytes", "parameters": "(HystrixRequestEvents requestEvents)", "modifiers": "@Deprecated public static", "return": "byte[]", "signature": "byte[] toBytes(HystrixRequestEvents requestEvents)", "full_signature": "@Deprecated public static byte[] toBytes(HystrixRequestEvents requestEvents)", "class_method_signature": "SerialHystrixRequestEvents.toBytes(HystrixRequestEvents requestEvents)", "testcase": false, "constructor": false}, {"identifier": "toJsonString", "parameters": "(HystrixRequestEvents requestEvents)", "modifiers": "public static", "return": "String", "signature": "String toJsonString(HystrixRequestEvents requestEvents)", "full_signature": "public static String toJsonString(HystrixRequestEvents requestEvents)", "class_method_signature": "SerialHystrixRequestEvents.toJsonString(HystrixRequestEvents requestEvents)", "testcase": false, "constructor": false}, {"identifier": "serializeRequestEvents", "parameters": "(HystrixRequestEvents requestEvents, JsonGenerator json)", "modifiers": "private static", "return": "void", "signature": "void serializeRequestEvents(HystrixRequestEvents requestEvents, JsonGenerator json)", "full_signature": "private static void serializeRequestEvents(HystrixRequestEvents requestEvents, JsonGenerator json)", "class_method_signature": "SerialHystrixRequestEvents.serializeRequestEvents(HystrixRequestEvents requestEvents, JsonGenerator json)", "testcase": false, "constructor": false}, {"identifier": "convertExecutionToJson", "parameters": "(JsonGenerator json, HystrixRequestEvents.ExecutionSignature executionSignature, List<Integer> latencies)", "modifiers": "private static", "return": "void", "signature": "void convertExecutionToJson(JsonGenerator json, HystrixRequestEvents.ExecutionSignature executionSignature, List<Integer> latencies)", "full_signature": "private static void convertExecutionToJson(JsonGenerator json, HystrixRequestEvents.ExecutionSignature executionSignature, List<Integer> latencies)", "class_method_signature": "SerialHystrixRequestEvents.convertExecutionToJson(JsonGenerator json, HystrixRequestEvents.ExecutionSignature executionSignature, List<Integer> latencies)", "testcase": false, "constructor": false}], "file": "hystrix-serialization/src/main/java/com/netflix/hystrix/serial/SerialHystrixRequestEvents.java"}, "focal_method": {"identifier": "toJsonString", "parameters": "(HystrixRequestEvents requestEvents)", "modifiers": "public static", "return": "String", "body": "public static String toJsonString(HystrixRequestEvents requestEvents) {\n        StringWriter jsonString = new StringWriter();\n\n        try {\n            JsonGenerator json = jsonFactory.createGenerator(jsonString);\n\n            serializeRequestEvents(requestEvents, json);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n\n        return jsonString.getBuffer().toString();\n    }", "signature": "String toJsonString(HystrixRequestEvents requestEvents)", "full_signature": "public static String toJsonString(HystrixRequestEvents requestEvents)", "class_method_signature": "SerialHystrixRequestEvents.toJsonString(HystrixRequestEvents requestEvents)", "testcase": false, "constructor": false, "invocations": ["createGenerator", "serializeRequestEvents", "toString", "getBuffer"]}, "repository": {"repo_id": 6766558, "url": "https://github.com/Netflix/Hystrix", "stars": 19028, "created": "11/19/2012 8:14:46 PM +00:00", "updates": "2020-01-27T17:55:28+00:00", "fork": "False", "license": "licensed"}}