{"test_class": {"identifier": "AutoreleaseBatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Throwable thrown;", "modifier": "private", "type": "Throwable", "declarator": "thrown", "var_name": "thrown"}], "file": "rococoa/rococoa-core/src/test/java/org/rococoa/internal/AutoreleaseBatcherTest.java"}, "test_case": {"identifier": "threadLocal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void threadLocal() {\n        AutoreleaseBatcher.forThread(1);\n        ID idNSObject = Foundation.cfRetain(autoreleasedObject());\n        assertRetainCount(2, idNSObject);\n        \n        AutoreleaseBatcher.forThread(1).operate();\n        assertRetainCount(1, idNSObject);\n    }", "signature": "void threadLocal()", "full_signature": "@Test public void threadLocal()", "class_method_signature": "AutoreleaseBatcherTest.threadLocal()", "testcase": true, "constructor": false, "invocations": ["forThread", "cfRetain", "autoreleasedObject", "assertRetainCount", "operate", "forThread", "assertRetainCount"]}, "focal_class": {"identifier": "AutoreleaseBatcher", "superclass": "extends OperationBatcher", "interfaces": "", "fields": [{"original_string": "private static Logger logging = Logger.getLogger(\"org.rococoa\");", "modifier": "private static", "type": "Logger", "declarator": "logging = Logger.getLogger(\"org.rococoa\")", "var_name": "logging"}, {"original_string": "private static final ThreadLocal<AutoreleaseBatcher> threadLocal = new ThreadLocal<AutoreleaseBatcher>();", "modifier": "private static final", "type": "ThreadLocal<AutoreleaseBatcher>", "declarator": "threadLocal = new ThreadLocal<AutoreleaseBatcher>()", "var_name": "threadLocal"}, {"original_string": "private NSAutoreleasePool pool;", "modifier": "private", "type": "NSAutoreleasePool", "declarator": "pool", "var_name": "pool"}], "methods": [{"identifier": "forThread", "parameters": "(int batchSize)", "modifiers": "public static", "return": "AutoreleaseBatcher", "signature": "AutoreleaseBatcher forThread(int batchSize)", "full_signature": "public static AutoreleaseBatcher forThread(int batchSize)", "class_method_signature": "AutoreleaseBatcher.forThread(int batchSize)", "testcase": false, "constructor": false}, {"identifier": "AutoreleaseBatcher", "parameters": "(int batchSize)", "modifiers": "public", "return": "", "signature": " AutoreleaseBatcher(int batchSize)", "full_signature": "public  AutoreleaseBatcher(int batchSize)", "class_method_signature": "AutoreleaseBatcher.AutoreleaseBatcher(int batchSize)", "testcase": false, "constructor": true}, {"identifier": "operation", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void operation()", "full_signature": "@Override protected void operation()", "class_method_signature": "AutoreleaseBatcher.operation()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void reset()", "full_signature": "@Override protected void reset()", "class_method_signature": "AutoreleaseBatcher.reset()", "testcase": false, "constructor": false}], "file": "rococoa/rococoa-core/src/main/java/org/rococoa/internal/AutoreleaseBatcher.java"}, "focal_method": {"identifier": "forThread", "parameters": "(int batchSize)", "modifiers": "public static", "return": "AutoreleaseBatcher", "body": "public static AutoreleaseBatcher forThread(int batchSize) {\n        if (threadLocal.get() == null) {\n            threadLocal.set(new AutoreleaseBatcher(batchSize));\n        }\n        return threadLocal.get();\n    }", "signature": "AutoreleaseBatcher forThread(int batchSize)", "full_signature": "public static AutoreleaseBatcher forThread(int batchSize)", "class_method_signature": "AutoreleaseBatcher.forThread(int batchSize)", "testcase": false, "constructor": false, "invocations": ["get", "set", "get"]}, "repository": {"repo_id": 32143635, "url": "https://github.com/iterate-ch/rococoa", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 17, "size": 2377, "license": "licensed"}}