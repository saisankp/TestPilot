{"test_class": {"identifier": "MessageContextMethodArgumentResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MessageContextMethodArgumentResolver resolver;", "modifier": "private", "type": "MessageContextMethodArgumentResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private MethodParameter supported;", "modifier": "private", "type": "MethodParameter", "declarator": "supported", "var_name": "supported"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/MessageContextMethodArgumentResolverTest.java"}, "test_case": {"identifier": "resolveArgument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void resolveArgument() throws Exception {\n\t\tMessageContext messageContext = new DefaultMessageContext(new MockWebServiceMessageFactory());\n\n\t\tMessageContext result = resolver.resolveArgument(messageContext, supported);\n\t\tassertSame(\"Invalid message context returned\", messageContext, result);\n\t}", "signature": "void resolveArgument()", "full_signature": "@Test public void resolveArgument()", "class_method_signature": "MessageContextMethodArgumentResolverTest.resolveArgument()", "testcase": true, "constructor": false, "invocations": ["resolveArgument", "assertSame"]}, "focal_class": {"identifier": "MessageContextMethodArgumentResolver", "superclass": "", "interfaces": "implements MethodArgumentResolver", "fields": [], "methods": [{"identifier": "supportsParameter", "parameters": "(MethodParameter parameter)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsParameter(MethodParameter parameter)", "full_signature": "@Override public boolean supportsParameter(MethodParameter parameter)", "class_method_signature": "MessageContextMethodArgumentResolver.supportsParameter(MethodParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "resolveArgument", "parameters": "(MessageContext messageContext, MethodParameter parameter)", "modifiers": "@Override public", "return": "MessageContext", "signature": "MessageContext resolveArgument(MessageContext messageContext, MethodParameter parameter)", "full_signature": "@Override public MessageContext resolveArgument(MessageContext messageContext, MethodParameter parameter)", "class_method_signature": "MessageContextMethodArgumentResolver.resolveArgument(MessageContext messageContext, MethodParameter parameter)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/server/endpoint/adapter/method/MessageContextMethodArgumentResolver.java"}, "focal_method": {"identifier": "resolveArgument", "parameters": "(MessageContext messageContext, MethodParameter parameter)", "modifiers": "@Override public", "return": "MessageContext", "body": "@Override\n\tpublic MessageContext resolveArgument(MessageContext messageContext, MethodParameter parameter) throws Exception {\n\t\treturn messageContext;\n\t}", "signature": "MessageContext resolveArgument(MessageContext messageContext, MethodParameter parameter)", "full_signature": "@Override public MessageContext resolveArgument(MessageContext messageContext, MethodParameter parameter)", "class_method_signature": "MessageContextMethodArgumentResolver.resolveArgument(MessageContext messageContext, MethodParameter parameter)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}