{"test_class": {"identifier": "SuppressGzipCompressionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ANY_HEADER_VALUE = \"value\";", "modifier": "private static final", "type": "String", "declarator": "ANY_HEADER_VALUE = \"value\"", "var_name": "ANY_HEADER_VALUE"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private ParameterList parameterMap;", "modifier": "@Mock\n    private", "type": "ParameterList", "declarator": "parameterMap", "var_name": "parameterMap"}, {"original_string": "private SuppressGzipCompression underTest;", "modifier": "private", "type": "SuppressGzipCompression", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/test/java/com/epam/wilma/stubconfig/response/formatter/SuppressGzipCompressionTest.java"}, "test_case": {"identifier": "testFormatTemplateWithExistingHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFormatTemplateWithExistingHeader() {\n        //GIVEN\n        //SetUp\n        given(request.getHeader(SuppressGzipCompression.HEADER_KEY_ACCEPT_ENCODING)).willReturn(SuppressGzipCompression.HEADER_VALUE_GZIP);\n        given(response.getHeader(SuppressGzipCompression.HEADER_KEY_SUPPRESS_ENCODING)).willReturn(ANY_HEADER_VALUE);\n        //WHEN\n        underTest.formatResponse(request, response, null, parameterMap);\n        //THEN\n        verify(response).addHeader(SuppressGzipCompression.HEADER_KEY_SUPPRESS_ENCODING, ANY_HEADER_VALUE + \",\" + SuppressGzipCompression.HEADER_VALUE_GZIP);\n    }", "signature": "void testFormatTemplateWithExistingHeader()", "full_signature": "@Test public void testFormatTemplateWithExistingHeader()", "class_method_signature": "SuppressGzipCompressionTest.testFormatTemplateWithExistingHeader()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getHeader", "willReturn", "given", "getHeader", "formatResponse", "addHeader", "verify"]}, "focal_class": {"identifier": "SuppressGzipCompression", "superclass": "", "interfaces": "implements ResponseFormatter", "fields": [{"original_string": "static final String HEADER_VALUE_GZIP = \"gzip\";", "modifier": "static final", "type": "String", "declarator": "HEADER_VALUE_GZIP = \"gzip\"", "var_name": "HEADER_VALUE_GZIP"}, {"original_string": "static final String HEADER_KEY_ACCEPT_ENCODING = \"Accept-Encoding\";", "modifier": "static final", "type": "String", "declarator": "HEADER_KEY_ACCEPT_ENCODING = \"Accept-Encoding\"", "var_name": "HEADER_KEY_ACCEPT_ENCODING"}, {"original_string": "static final String HEADER_KEY_SUPPRESS_ENCODING = \"Wilma-Suppress-Encoding\";", "modifier": "static final", "type": "String", "declarator": "HEADER_KEY_SUPPRESS_ENCODING = \"Wilma-Suppress-Encoding\"", "var_name": "HEADER_KEY_SUPPRESS_ENCODING"}], "methods": [{"identifier": "formatResponse", "parameters": "(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "full_signature": "@Override public byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "class_method_signature": "SuppressGzipCompression.formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/main/java/com/epam/wilma/stubconfig/response/formatter/SuppressGzipCompression.java"}, "focal_method": {"identifier": "formatResponse", "parameters": "(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params) {\n        //force turn off gzip compression usage for this answer\n        String acceptEncodingHeader = wilmaRequest.getHeader(HEADER_KEY_ACCEPT_ENCODING);\n        if (acceptEncodingHeader != null && acceptEncodingHeader.contains(HEADER_VALUE_GZIP)) {\n            String existingHeaderContent = resp.getHeader(HEADER_KEY_SUPPRESS_ENCODING);\n            String newHeaderContent = existingHeaderContent == null ? HEADER_VALUE_GZIP : existingHeaderContent + \",\" + HEADER_VALUE_GZIP;\n            resp.addHeader(HEADER_KEY_SUPPRESS_ENCODING, newHeaderContent);\n        }\n        //we don't touch the body part\n        return responseResource;\n    }", "signature": "byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "full_signature": "@Override public byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "class_method_signature": "SuppressGzipCompression.formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "testcase": false, "constructor": false, "invocations": ["getHeader", "contains", "getHeader", "addHeader"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}