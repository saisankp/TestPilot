{"test_class": {"identifier": "FooTest", "superclass": "", "interfaces": "", "fields": [], "file": "application_module_1/src/test/java/de/doubleslash/demo/coverage/module/one/FooTest.java"}, "test_case": {"identifier": "testFooMethod", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testFooMethod() {\n        Foo testee = new Foo();\n        assertThat(testee.fooMethod(), is(7));\n    }", "signature": "void testFooMethod()", "full_signature": "@Test void testFooMethod()", "class_method_signature": "FooTest.testFooMethod()", "testcase": true, "constructor": false, "invocations": ["assertThat", "fooMethod", "is"]}, "focal_class": {"identifier": "Foo", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int i = 7;", "modifier": "private", "type": "int", "declarator": "i = 7", "var_name": "i"}, {"original_string": "private String s = \"jacoco\";", "modifier": "private", "type": "String", "declarator": "s = \"jacoco\"", "var_name": "s"}], "methods": [{"identifier": "fooMethod", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int fooMethod()", "full_signature": "public int fooMethod()", "class_method_signature": "Foo.fooMethod()", "testcase": false, "constructor": false}, {"identifier": "conditionedFooMethod", "parameters": "(boolean condition)", "modifiers": "public", "return": "String", "signature": "String conditionedFooMethod(boolean condition)", "full_signature": "public String conditionedFooMethod(boolean condition)", "class_method_signature": "Foo.conditionedFooMethod(boolean condition)", "testcase": false, "constructor": false}], "file": "application_module_1/src/main/java/de/doubleslash/demo/coverage/module/one/Foo.java"}, "focal_method": {"identifier": "fooMethod", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int fooMethod() {\n        return i;\n    }", "signature": "int fooMethod()", "full_signature": "public int fooMethod()", "class_method_signature": "Foo.fooMethod()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 120310124, "url": "https://github.com/doubleSlashde/maven-multimodule-coverage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 16, "license": "licensed"}}