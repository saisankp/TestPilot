{"test_class": {"identifier": "TransactionTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/core/src/test/java/org/glowroot/agent/impl/TransactionTest.java"}, "test_case": {"identifier": "shouldLowerSixBytesWithTruncation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldLowerSixBytesWithTruncation() {\n        // given\n        long startTime = 123456123456789123L;\n        // when\n        String lowerSixBytes = Transaction.lowerSixBytesHex(startTime);\n        // then\n        assertThat(lowerSixBytes).isEqualTo(\"9ab0affd1a83\");\n    }", "signature": "void shouldLowerSixBytesWithTruncation()", "full_signature": "@Test public void shouldLowerSixBytesWithTruncation()", "class_method_signature": "TransactionTest.shouldLowerSixBytesWithTruncation()", "testcase": true, "constructor": false, "invocations": ["lowerSixBytesHex", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "Transaction", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(Transaction.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(Transaction.class)", "var_name": "logger"}, {"original_string": "static final int USE_GENERAL_STORE_THRESHOLD = -1;", "modifier": "static final", "type": "int", "declarator": "USE_GENERAL_STORE_THRESHOLD = -1", "var_name": "USE_GENERAL_STORE_THRESHOLD"}, {"original_string": "static final String AUXILIARY_THREAD_MESSAGE = \"auxiliary thread\";", "modifier": "static final", "type": "String", "declarator": "AUXILIARY_THREAD_MESSAGE = \"auxiliary thread\"", "var_name": "AUXILIARY_THREAD_MESSAGE"}, {"original_string": "private static final int ATTRIBUTE_KEYS_INITIAL_CAPACITY = 16;", "modifier": "private static final", "type": "int", "declarator": "ATTRIBUTE_KEYS_INITIAL_CAPACITY = 16", "var_name": "ATTRIBUTE_KEYS_INITIAL_CAPACITY"}, {"original_string": "private static final long ATTRIBUTE_VALUES_PER_KEY_LIMIT = 1000;", "modifier": "private static final", "type": "long", "declarator": "ATTRIBUTE_VALUES_PER_KEY_LIMIT = 1000", "var_name": "ATTRIBUTE_VALUES_PER_KEY_LIMIT"}, {"original_string": "private static final int TRANSACTION_AUX_THREAD_CONTEXT_LIMIT =\n            Integer.getInteger(\"glowroot.transaction.aux.thread.context.limit\", 1000);", "modifier": "private static final", "type": "int", "declarator": "TRANSACTION_AUX_THREAD_CONTEXT_LIMIT =\n            Integer.getInteger(\"glowroot.transaction.aux.thread.context.limit\", 1000)", "var_name": "TRANSACTION_AUX_THREAD_CONTEXT_LIMIT"}, {"original_string": "private static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];", "modifier": "private static final", "type": "StackTraceElement[]", "declarator": "EMPTY_STACK_TRACE = new StackTraceElement[0]", "var_name": "EMPTY_STACK_TRACE"}, {"original_string": "private static final Random random = new Random();", "modifier": "private static final", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}, {"original_string": "private volatile @Nullable String traceId;", "modifier": "private volatile @Nullable", "type": "String", "declarator": "traceId", "var_name": "traceId"}, {"original_string": "private final long startTime;", "modifier": "private final", "type": "long", "declarator": "startTime", "var_name": "startTime"}, {"original_string": "private final long startTick;", "modifier": "private final", "type": "long", "declarator": "startTick", "var_name": "startTick"}, {"original_string": "private volatile boolean async;", "modifier": "private volatile", "type": "boolean", "declarator": "async", "var_name": "async"}, {"original_string": "private volatile boolean outer;", "modifier": "private volatile", "type": "boolean", "declarator": "outer", "var_name": "outer"}, {"original_string": "private volatile String transactionType;", "modifier": "private volatile", "type": "String", "declarator": "transactionType", "var_name": "transactionType"}, {"original_string": "private volatile int transactionTypePriority = Integer.MIN_VALUE;", "modifier": "private volatile", "type": "int", "declarator": "transactionTypePriority = Integer.MIN_VALUE", "var_name": "transactionTypePriority"}, {"original_string": "private volatile String transactionName;", "modifier": "private volatile", "type": "String", "declarator": "transactionName", "var_name": "transactionName"}, {"original_string": "private volatile int transactionNamePriority = Integer.MIN_VALUE;", "modifier": "private volatile", "type": "int", "declarator": "transactionNamePriority = Integer.MIN_VALUE", "var_name": "transactionNamePriority"}, {"original_string": "private volatile @Nullable String user;", "modifier": "private volatile @Nullable", "type": "String", "declarator": "user", "var_name": "user"}, {"original_string": "private volatile int userPriority = Integer.MIN_VALUE;", "modifier": "private volatile", "type": "int", "declarator": "userPriority = Integer.MIN_VALUE", "var_name": "userPriority"}, {"original_string": "private final Object attributesLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "attributesLock = new Object()", "var_name": "attributesLock"}, {"original_string": "@GuardedBy(\"attributesLock\")\n    private @MonotonicNonNull SetMultimap<String, String> attributes;", "modifier": "@GuardedBy(\"attributesLock\")\n    private @MonotonicNonNull", "type": "SetMultimap<String, String>", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "private volatile @Nullable ErrorMessage errorMessage;", "modifier": "private volatile @Nullable", "type": "ErrorMessage", "declarator": "errorMessage", "var_name": "errorMessage"}, {"original_string": "private final int maxTraceEntries;", "modifier": "private final", "type": "int", "declarator": "maxTraceEntries", "var_name": "maxTraceEntries"}, {"original_string": "private final int maxQueryAggregates;", "modifier": "private final", "type": "int", "declarator": "maxQueryAggregates", "var_name": "maxQueryAggregates"}, {"original_string": "private final int maxServiceCallAggregates;", "modifier": "private final", "type": "int", "declarator": "maxServiceCallAggregates", "var_name": "maxServiceCallAggregates"}, {"original_string": "private final int maxProfileSamples;", "modifier": "private final", "type": "int", "declarator": "maxProfileSamples", "var_name": "maxProfileSamples"}, {"original_string": "private final TransactionRegistry transactionRegistry;", "modifier": "private final", "type": "TransactionRegistry", "declarator": "transactionRegistry", "var_name": "transactionRegistry"}, {"original_string": "private final TransactionService transactionService;", "modifier": "private final", "type": "TransactionService", "declarator": "transactionService", "var_name": "transactionService"}, {"original_string": "private final ConfigService configService;", "modifier": "private final", "type": "ConfigService", "declarator": "configService", "var_name": "configService"}, {"original_string": "private volatile @MonotonicNonNull ThreadProfile mainThreadProfile;", "modifier": "private volatile @MonotonicNonNull", "type": "ThreadProfile", "declarator": "mainThreadProfile", "var_name": "mainThreadProfile"}, {"original_string": "private volatile @MonotonicNonNull ThreadProfile auxThreadProfile;", "modifier": "private volatile @MonotonicNonNull", "type": "ThreadProfile", "declarator": "auxThreadProfile", "var_name": "auxThreadProfile"}, {"original_string": "private volatile int slowThresholdMillis = USE_GENERAL_STORE_THRESHOLD;", "modifier": "private volatile", "type": "int", "declarator": "slowThresholdMillis = USE_GENERAL_STORE_THRESHOLD", "var_name": "slowThresholdMillis"}, {"original_string": "private volatile int slowThresholdMillisPriority = Integer.MIN_VALUE;", "modifier": "private volatile", "type": "int", "declarator": "slowThresholdMillisPriority = Integer.MIN_VALUE", "var_name": "slowThresholdMillisPriority"}, {"original_string": "private volatile @MonotonicNonNull Cancellable immedateTraceStoreRunnable;", "modifier": "private volatile @MonotonicNonNull", "type": "Cancellable", "declarator": "immedateTraceStoreRunnable", "var_name": "immedateTraceStoreRunnable"}, {"original_string": "private volatile boolean partiallyStored;", "modifier": "private volatile", "type": "boolean", "declarator": "partiallyStored", "var_name": "partiallyStored"}, {"original_string": "private volatile long captureTime;", "modifier": "private volatile", "type": "long", "declarator": "captureTime", "var_name": "captureTime"}, {"original_string": "private volatile boolean memoryBarrier;", "modifier": "private volatile", "type": "boolean", "declarator": "memoryBarrier", "var_name": "memoryBarrier"}, {"original_string": "private final CompletionCallback completionCallback;", "modifier": "private final", "type": "CompletionCallback", "declarator": "completionCallback", "var_name": "completionCallback"}, {"original_string": "private volatile int entryLimitCounter;", "modifier": "private volatile", "type": "int", "declarator": "entryLimitCounter", "var_name": "entryLimitCounter"}, {"original_string": "private volatile int extraErrorEntryLimitCounter;", "modifier": "private volatile", "type": "int", "declarator": "extraErrorEntryLimitCounter", "var_name": "extraErrorEntryLimitCounter"}, {"original_string": "private volatile @Nullable AtomicInteger throwableFrameLimitCounter;", "modifier": "private volatile @Nullable", "type": "AtomicInteger", "declarator": "throwableFrameLimitCounter", "var_name": "throwableFrameLimitCounter"}, {"original_string": "private final ThreadContextImpl mainThreadContext;", "modifier": "private final", "type": "ThreadContextImpl", "declarator": "mainThreadContext", "var_name": "mainThreadContext"}, {"original_string": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull List<ThreadContextImpl> auxThreadContexts;", "modifier": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull", "type": "List<ThreadContextImpl>", "declarator": "auxThreadContexts", "var_name": "auxThreadContexts"}, {"original_string": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull List<ThreadContextImpl> unmergeableAuxThreadContexts;", "modifier": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull", "type": "List<ThreadContextImpl>", "declarator": "unmergeableAuxThreadContexts", "var_name": "unmergeableAuxThreadContexts"}, {"original_string": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull Set<ThreadContextImpl> unmergedLimitExceededAuxThreadContexts;", "modifier": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull", "type": "Set<ThreadContextImpl>", "declarator": "unmergedLimitExceededAuxThreadContexts", "var_name": "unmergedLimitExceededAuxThreadContexts"}, {"original_string": "private final Object asyncComponentsInitLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "asyncComponentsInitLock = new Object()", "var_name": "asyncComponentsInitLock"}, {"original_string": "private volatile @MonotonicNonNull AsyncComponents asyncComponents;", "modifier": "private volatile @MonotonicNonNull", "type": "AsyncComponents", "declarator": "asyncComponents", "var_name": "asyncComponents"}, {"original_string": "private final Object sharedQueryTextCollectionLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "sharedQueryTextCollectionLock = new Object()", "var_name": "sharedQueryTextCollectionLock"}, {"original_string": "@GuardedBy(\"sharedQueryTextCollectionLock\")\n    private @MonotonicNonNull SharedQueryTextCollectionImpl sharedQueryTextCollection;", "modifier": "@GuardedBy(\"sharedQueryTextCollectionLock\")\n    private @MonotonicNonNull", "type": "SharedQueryTextCollectionImpl", "declarator": "sharedQueryTextCollection", "var_name": "sharedQueryTextCollection"}, {"original_string": "private Map<Object, StackTraceElement[]> unreleasedResources = Maps.newConcurrentMap();", "modifier": "private", "type": "Map<Object, StackTraceElement[]>", "declarator": "unreleasedResources = Maps.newConcurrentMap()", "var_name": "unreleasedResources"}, {"original_string": "private volatile boolean waitingToEndAsync;", "modifier": "private volatile", "type": "boolean", "declarator": "waitingToEndAsync", "var_name": "waitingToEndAsync"}, {"original_string": "private volatile boolean completed;", "modifier": "private volatile", "type": "boolean", "declarator": "completed", "var_name": "completed"}, {"original_string": "private volatile long endTick;", "modifier": "private volatile", "type": "long", "declarator": "endTick", "var_name": "endTick"}, {"original_string": "private final Ticker ticker;", "modifier": "private final", "type": "Ticker", "declarator": "ticker", "var_name": "ticker"}, {"original_string": "private @Nullable SelfRemovableEntry transactionEntry;", "modifier": "private @Nullable", "type": "SelfRemovableEntry", "declarator": "transactionEntry", "var_name": "transactionEntry"}, {"original_string": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull RootTimerCollectorImpl alreadyMergedAuxThreadTimers;", "modifier": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull", "type": "RootTimerCollectorImpl", "declarator": "alreadyMergedAuxThreadTimers", "var_name": "alreadyMergedAuxThreadTimers"}, {"original_string": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull ThreadStatsCollectorImpl alreadyMergedAuxThreadStats;", "modifier": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull", "type": "ThreadStatsCollectorImpl", "declarator": "alreadyMergedAuxThreadStats", "var_name": "alreadyMergedAuxThreadStats"}, {"original_string": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull QueryCollector alreadyMergedAuxQueries;", "modifier": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull", "type": "QueryCollector", "declarator": "alreadyMergedAuxQueries", "var_name": "alreadyMergedAuxQueries"}, {"original_string": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull ServiceCallCollector alreadyMergedAuxServiceCalls;", "modifier": "@GuardedBy(\"mainThreadContext\")\n    private @MonotonicNonNull", "type": "ServiceCallCollector", "declarator": "alreadyMergedAuxServiceCalls", "var_name": "alreadyMergedAuxServiceCalls"}, {"original_string": "@GuardedBy(\"mainThreadContext\")\n    private boolean stopMergingAuxThreadContexts;", "modifier": "@GuardedBy(\"mainThreadContext\")\n    private", "type": "boolean", "declarator": "stopMergingAuxThreadContexts", "var_name": "stopMergingAuxThreadContexts"}], "methods": [{"identifier": "Transaction", "parameters": "(long startTime, long startTick, String transactionType, String transactionName,\n            MessageSupplier messageSupplier, TimerName timerName, boolean captureThreadStats,\n            int maxTraceEntries, int maxQueryAggregates, int maxServiceCallAggregates,\n            int maxProfileSamples, @Nullable ThreadAllocatedBytes threadAllocatedBytes,\n            CompletionCallback completionCallback, Ticker ticker,\n            TransactionRegistry transactionRegistry, TransactionService transactionService,\n            ConfigService configService, ThreadContextThreadLocal.Holder threadContextHolder,\n            int rootNestingGroupId, int rootSuppressionKeyId)", "modifiers": "", "return": "", "signature": " Transaction(long startTime, long startTick, String transactionType, String transactionName,\n            MessageSupplier messageSupplier, TimerName timerName, boolean captureThreadStats,\n            int maxTraceEntries, int maxQueryAggregates, int maxServiceCallAggregates,\n            int maxProfileSamples, @Nullable ThreadAllocatedBytes threadAllocatedBytes,\n            CompletionCallback completionCallback, Ticker ticker,\n            TransactionRegistry transactionRegistry, TransactionService transactionService,\n            ConfigService configService, ThreadContextThreadLocal.Holder threadContextHolder,\n            int rootNestingGroupId, int rootSuppressionKeyId)", "full_signature": "  Transaction(long startTime, long startTick, String transactionType, String transactionName,\n            MessageSupplier messageSupplier, TimerName timerName, boolean captureThreadStats,\n            int maxTraceEntries, int maxQueryAggregates, int maxServiceCallAggregates,\n            int maxProfileSamples, @Nullable ThreadAllocatedBytes threadAllocatedBytes,\n            CompletionCallback completionCallback, Ticker ticker,\n            TransactionRegistry transactionRegistry, TransactionService transactionService,\n            ConfigService configService, ThreadContextThreadLocal.Holder threadContextHolder,\n            int rootNestingGroupId, int rootSuppressionKeyId)", "class_method_signature": "Transaction.Transaction(long startTime, long startTick, String transactionType, String transactionName,\n            MessageSupplier messageSupplier, TimerName timerName, boolean captureThreadStats,\n            int maxTraceEntries, int maxQueryAggregates, int maxServiceCallAggregates,\n            int maxProfileSamples, @Nullable ThreadAllocatedBytes threadAllocatedBytes,\n            CompletionCallback completionCallback, Ticker ticker,\n            TransactionRegistry transactionRegistry, TransactionService transactionService,\n            ConfigService configService, ThreadContextThreadLocal.Holder threadContextHolder,\n            int rootNestingGroupId, int rootSuppressionKeyId)", "testcase": false, "constructor": true}, {"identifier": "getStartTime", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getStartTime()", "full_signature": " long getStartTime()", "class_method_signature": "Transaction.getStartTime()", "testcase": false, "constructor": false}, {"identifier": "getTraceId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTraceId()", "full_signature": "public String getTraceId()", "class_method_signature": "Transaction.getTraceId()", "testcase": false, "constructor": false}, {"identifier": "getStartTick", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getStartTick()", "full_signature": "public long getStartTick()", "class_method_signature": "Transaction.getStartTick()", "testcase": false, "constructor": false}, {"identifier": "isCompleted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCompleted()", "full_signature": "public boolean isCompleted()", "class_method_signature": "Transaction.isCompleted()", "testcase": false, "constructor": false}, {"identifier": "isFullyCompleted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFullyCompleted()", "full_signature": "public boolean isFullyCompleted()", "class_method_signature": "Transaction.isFullyCompleted()", "testcase": false, "constructor": false}, {"identifier": "getEndTick", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getEndTick()", "full_signature": " long getEndTick()", "class_method_signature": "Transaction.getEndTick()", "testcase": false, "constructor": false}, {"identifier": "getDurationNanos", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getDurationNanos()", "full_signature": "public long getDurationNanos()", "class_method_signature": "Transaction.getDurationNanos()", "testcase": false, "constructor": false}, {"identifier": "getTransactionType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTransactionType()", "full_signature": "public String getTransactionType()", "class_method_signature": "Transaction.getTransactionType()", "testcase": false, "constructor": false}, {"identifier": "getTransactionName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTransactionName()", "full_signature": "public String getTransactionName()", "class_method_signature": "Transaction.getTransactionName()", "testcase": false, "constructor": false}, {"identifier": "getHeadline", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHeadline()", "full_signature": "public String getHeadline()", "class_method_signature": "Transaction.getHeadline()", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUser()", "full_signature": "public String getUser()", "class_method_signature": "Transaction.getUser()", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "()", "modifiers": "public", "return": "SetMultimap<String, String>", "signature": "SetMultimap<String, String> getAttributes()", "full_signature": "public SetMultimap<String, String> getAttributes()", "class_method_signature": "Transaction.getAttributes()", "testcase": false, "constructor": false}, {"identifier": "getDetail", "parameters": "()", "modifiers": "", "return": "Map<String, ?>", "signature": "Map<String, ?> getDetail()", "full_signature": " Map<String, ?> getDetail()", "class_method_signature": "Transaction.getDetail()", "testcase": false, "constructor": false}, {"identifier": "getLocationStackTrace", "parameters": "()", "modifiers": "@Nullable", "return": "List<StackTraceElement>", "signature": "List<StackTraceElement> getLocationStackTrace()", "full_signature": "@Nullable List<StackTraceElement> getLocationStackTrace()", "class_method_signature": "Transaction.getLocationStackTrace()", "testcase": false, "constructor": false}, {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "public @Nullable", "return": "ErrorMessage", "signature": "ErrorMessage getErrorMessage()", "full_signature": "public @Nullable ErrorMessage getErrorMessage()", "class_method_signature": "Transaction.getErrorMessage()", "testcase": false, "constructor": false}, {"identifier": "isAsync", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isAsync()", "full_signature": " boolean isAsync()", "class_method_signature": "Transaction.isAsync()", "testcase": false, "constructor": false}, {"identifier": "isOuter", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isOuter()", "full_signature": " boolean isOuter()", "class_method_signature": "Transaction.isOuter()", "testcase": false, "constructor": false}, {"identifier": "getMainThreadRootTimer", "parameters": "()", "modifiers": "", "return": "TimerImpl", "signature": "TimerImpl getMainThreadRootTimer()", "full_signature": " TimerImpl getMainThreadRootTimer()", "class_method_signature": "Transaction.getMainThreadRootTimer()", "testcase": false, "constructor": false}, {"identifier": "hasAuxThreadContexts", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean hasAuxThreadContexts()", "full_signature": " boolean hasAuxThreadContexts()", "class_method_signature": "Transaction.hasAuxThreadContexts()", "testcase": false, "constructor": false}, {"identifier": "mergeAuxThreadTimersInto", "parameters": "(AggregatedTimer rootAuxThreadTimer)", "modifiers": "", "return": "void", "signature": "void mergeAuxThreadTimersInto(AggregatedTimer rootAuxThreadTimer)", "full_signature": " void mergeAuxThreadTimersInto(AggregatedTimer rootAuxThreadTimer)", "class_method_signature": "Transaction.mergeAuxThreadTimersInto(AggregatedTimer rootAuxThreadTimer)", "testcase": false, "constructor": false}, {"identifier": "hasAsyncTimers", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean hasAsyncTimers()", "full_signature": " boolean hasAsyncTimers()", "class_method_signature": "Transaction.hasAsyncTimers()", "testcase": false, "constructor": false}, {"identifier": "mergeAsyncTimersInto", "parameters": "(RootTimerCollector asyncTimers)", "modifiers": "", "return": "void", "signature": "void mergeAsyncTimersInto(RootTimerCollector asyncTimers)", "full_signature": " void mergeAsyncTimersInto(RootTimerCollector asyncTimers)", "class_method_signature": "Transaction.mergeAsyncTimersInto(RootTimerCollector asyncTimers)", "testcase": false, "constructor": false}, {"identifier": "getMainThreadStats", "parameters": "()", "modifiers": "", "return": "ThreadStats", "signature": "ThreadStats getMainThreadStats()", "full_signature": " ThreadStats getMainThreadStats()", "class_method_signature": "Transaction.getMainThreadStats()", "testcase": false, "constructor": false}, {"identifier": "getCpuNanos", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCpuNanos()", "full_signature": "public long getCpuNanos()", "class_method_signature": "Transaction.getCpuNanos()", "testcase": false, "constructor": false}, {"identifier": "mergeAuxThreadStatsInto", "parameters": "(ThreadStatsCollector collector)", "modifiers": "", "return": "void", "signature": "void mergeAuxThreadStatsInto(ThreadStatsCollector collector)", "full_signature": " void mergeAuxThreadStatsInto(ThreadStatsCollector collector)", "class_method_signature": "Transaction.mergeAuxThreadStatsInto(ThreadStatsCollector collector)", "testcase": false, "constructor": false}, {"identifier": "mergeQueriesInto", "parameters": "(QueryCollector collector)", "modifiers": "", "return": "void", "signature": "void mergeQueriesInto(QueryCollector collector)", "full_signature": " void mergeQueriesInto(QueryCollector collector)", "class_method_signature": "Transaction.mergeQueriesInto(QueryCollector collector)", "testcase": false, "constructor": false}, {"identifier": "getQueries", "parameters": "()", "modifiers": "public", "return": "List<Aggregate.Query>", "signature": "List<Aggregate.Query> getQueries()", "full_signature": "public List<Aggregate.Query> getQueries()", "class_method_signature": "Transaction.getQueries()", "testcase": false, "constructor": false}, {"identifier": "getQueryCount", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getQueryCount()", "full_signature": " int getQueryCount()", "class_method_signature": "Transaction.getQueryCount()", "testcase": false, "constructor": false}, {"identifier": "getQueriesInternal", "parameters": "(\n            SharedQueryTextCollection sharedQueryTextCollection)", "modifiers": "private", "return": "List<Aggregate.Query>", "signature": "List<Aggregate.Query> getQueriesInternal(\n            SharedQueryTextCollection sharedQueryTextCollection)", "full_signature": "private List<Aggregate.Query> getQueriesInternal(\n            SharedQueryTextCollection sharedQueryTextCollection)", "class_method_signature": "Transaction.getQueriesInternal(\n            SharedQueryTextCollection sharedQueryTextCollection)", "testcase": false, "constructor": false}, {"identifier": "getSharedQueryTexts", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSharedQueryTexts()", "full_signature": "public List<String> getSharedQueryTexts()", "class_method_signature": "Transaction.getSharedQueryTexts()", "testcase": false, "constructor": false}, {"identifier": "mergeServiceCallsInto", "parameters": "(ServiceCallCollector collector)", "modifiers": "", "return": "void", "signature": "void mergeServiceCallsInto(ServiceCallCollector collector)", "full_signature": " void mergeServiceCallsInto(ServiceCallCollector collector)", "class_method_signature": "Transaction.mergeServiceCallsInto(ServiceCallCollector collector)", "testcase": false, "constructor": false}, {"identifier": "allowAnotherEntry", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean allowAnotherEntry()", "full_signature": " boolean allowAnotherEntry()", "class_method_signature": "Transaction.allowAnotherEntry()", "testcase": false, "constructor": false}, {"identifier": "allowAnotherErrorEntry", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean allowAnotherErrorEntry()", "full_signature": " boolean allowAnotherErrorEntry()", "class_method_signature": "Transaction.allowAnotherErrorEntry()", "testcase": false, "constructor": false}, {"identifier": "visitEntries", "parameters": "(long captureTick, TraceEntryVisitor entryVisitor)", "modifiers": "public", "return": "void", "signature": "void visitEntries(long captureTick, TraceEntryVisitor entryVisitor)", "full_signature": "public void visitEntries(long captureTick, TraceEntryVisitor entryVisitor)", "class_method_signature": "Transaction.visitEntries(long captureTick, TraceEntryVisitor entryVisitor)", "testcase": false, "constructor": false}, {"identifier": "getEntryCount", "parameters": "(long captureTick)", "modifiers": "", "return": "int", "signature": "int getEntryCount(long captureTick)", "full_signature": " int getEntryCount(long captureTick)", "class_method_signature": "Transaction.getEntryCount(long captureTick)", "testcase": false, "constructor": false}, {"identifier": "visitEntriesInternal", "parameters": "(long captureTick, TraceEntryVisitor entryVisitor,\n            SharedQueryTextCollection sharedQueryTextCollection)", "modifiers": "private", "return": "void", "signature": "void visitEntriesInternal(long captureTick, TraceEntryVisitor entryVisitor,\n            SharedQueryTextCollection sharedQueryTextCollection)", "full_signature": "private void visitEntriesInternal(long captureTick, TraceEntryVisitor entryVisitor,\n            SharedQueryTextCollection sharedQueryTextCollection)", "class_method_signature": "Transaction.visitEntriesInternal(long captureTick, TraceEntryVisitor entryVisitor,\n            SharedQueryTextCollection sharedQueryTextCollection)", "testcase": false, "constructor": false}, {"identifier": "getMainThreadProfileSampleCount", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getMainThreadProfileSampleCount()", "full_signature": " long getMainThreadProfileSampleCount()", "class_method_signature": "Transaction.getMainThreadProfileSampleCount()", "testcase": false, "constructor": false}, {"identifier": "getMainThreadProfile", "parameters": "()", "modifiers": "@Nullable", "return": "ThreadProfile", "signature": "ThreadProfile getMainThreadProfile()", "full_signature": "@Nullable ThreadProfile getMainThreadProfile()", "class_method_signature": "Transaction.getMainThreadProfile()", "testcase": false, "constructor": false}, {"identifier": "getMainThreadProfileProtobuf", "parameters": "()", "modifiers": "public @Nullable", "return": "Profile", "signature": "Profile getMainThreadProfileProtobuf()", "full_signature": "public @Nullable Profile getMainThreadProfileProtobuf()", "class_method_signature": "Transaction.getMainThreadProfileProtobuf()", "testcase": false, "constructor": false}, {"identifier": "isMainThreadProfileSampleLimitExceeded", "parameters": "(long profileSampleCount)", "modifiers": "", "return": "boolean", "signature": "boolean isMainThreadProfileSampleLimitExceeded(long profileSampleCount)", "full_signature": " boolean isMainThreadProfileSampleLimitExceeded(long profileSampleCount)", "class_method_signature": "Transaction.isMainThreadProfileSampleLimitExceeded(long profileSampleCount)", "testcase": false, "constructor": false}, {"identifier": "getAuxThreadProfileSampleCount", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getAuxThreadProfileSampleCount()", "full_signature": " long getAuxThreadProfileSampleCount()", "class_method_signature": "Transaction.getAuxThreadProfileSampleCount()", "testcase": false, "constructor": false}, {"identifier": "getAuxThreadProfile", "parameters": "()", "modifiers": "@Nullable", "return": "ThreadProfile", "signature": "ThreadProfile getAuxThreadProfile()", "full_signature": "@Nullable ThreadProfile getAuxThreadProfile()", "class_method_signature": "Transaction.getAuxThreadProfile()", "testcase": false, "constructor": false}, {"identifier": "getAuxThreadProfileProtobuf", "parameters": "()", "modifiers": "public @Nullable", "return": "Profile", "signature": "Profile getAuxThreadProfileProtobuf()", "full_signature": "public @Nullable Profile getAuxThreadProfileProtobuf()", "class_method_signature": "Transaction.getAuxThreadProfileProtobuf()", "testcase": false, "constructor": false}, {"identifier": "isAuxThreadProfileSampleLimitExceeded", "parameters": "(long profileSampleCount)", "modifiers": "", "return": "boolean", "signature": "boolean isAuxThreadProfileSampleLimitExceeded(long profileSampleCount)", "full_signature": " boolean isAuxThreadProfileSampleLimitExceeded(long profileSampleCount)", "class_method_signature": "Transaction.isAuxThreadProfileSampleLimitExceeded(long profileSampleCount)", "testcase": false, "constructor": false}, {"identifier": "getSlowThresholdMillisOverride", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getSlowThresholdMillisOverride()", "full_signature": " int getSlowThresholdMillisOverride()", "class_method_signature": "Transaction.getSlowThresholdMillisOverride()", "testcase": false, "constructor": false}, {"identifier": "getImmedateTraceStoreRunnable", "parameters": "()", "modifiers": "public @Nullable", "return": "Cancellable", "signature": "Cancellable getImmedateTraceStoreRunnable()", "full_signature": "public @Nullable Cancellable getImmedateTraceStoreRunnable()", "class_method_signature": "Transaction.getImmedateTraceStoreRunnable()", "testcase": false, "constructor": false}, {"identifier": "isPartiallyStored", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPartiallyStored()", "full_signature": "public boolean isPartiallyStored()", "class_method_signature": "Transaction.isPartiallyStored()", "testcase": false, "constructor": false}, {"identifier": "getMainThreadContext", "parameters": "()", "modifiers": "public", "return": "ThreadContextImpl", "signature": "ThreadContextImpl getMainThreadContext()", "full_signature": "public ThreadContextImpl getMainThreadContext()", "class_method_signature": "Transaction.getMainThreadContext()", "testcase": false, "constructor": false}, {"identifier": "getActiveAuxThreadContexts", "parameters": "()", "modifiers": "public", "return": "List<ThreadContextImpl>", "signature": "List<ThreadContextImpl> getActiveAuxThreadContexts()", "full_signature": "public List<ThreadContextImpl> getActiveAuxThreadContexts()", "class_method_signature": "Transaction.getActiveAuxThreadContexts()", "testcase": false, "constructor": false}, {"identifier": "setAsync", "parameters": "()", "modifiers": "", "return": "void", "signature": "void setAsync()", "full_signature": " void setAsync()", "class_method_signature": "Transaction.setAsync()", "testcase": false, "constructor": false}, {"identifier": "setOuter", "parameters": "()", "modifiers": "", "return": "void", "signature": "void setOuter()", "full_signature": " void setOuter()", "class_method_signature": "Transaction.setOuter()", "testcase": false, "constructor": false}, {"identifier": "setTransactionType", "parameters": "(String transactionType, int priority)", "modifiers": "", "return": "void", "signature": "void setTransactionType(String transactionType, int priority)", "full_signature": " void setTransactionType(String transactionType, int priority)", "class_method_signature": "Transaction.setTransactionType(String transactionType, int priority)", "testcase": false, "constructor": false}, {"identifier": "setTransactionName", "parameters": "(String transactionName, int priority)", "modifiers": "", "return": "void", "signature": "void setTransactionName(String transactionName, int priority)", "full_signature": " void setTransactionName(String transactionName, int priority)", "class_method_signature": "Transaction.setTransactionName(String transactionName, int priority)", "testcase": false, "constructor": false}, {"identifier": "setUser", "parameters": "(String user, int priority)", "modifiers": "", "return": "void", "signature": "void setUser(String user, int priority)", "full_signature": " void setUser(String user, int priority)", "class_method_signature": "Transaction.setUser(String user, int priority)", "testcase": false, "constructor": false}, {"identifier": "addAttribute", "parameters": "(String name, @Nullable String value)", "modifiers": "", "return": "void", "signature": "void addAttribute(String name, @Nullable String value)", "full_signature": " void addAttribute(String name, @Nullable String value)", "class_method_signature": "Transaction.addAttribute(String name, @Nullable String value)", "testcase": false, "constructor": false}, {"identifier": "setError", "parameters": "(@Nullable String message, @Nullable Throwable t)", "modifiers": "", "return": "void", "signature": "void setError(@Nullable String message, @Nullable Throwable t)", "full_signature": " void setError(@Nullable String message, @Nullable Throwable t)", "class_method_signature": "Transaction.setError(@Nullable String message, @Nullable Throwable t)", "testcase": false, "constructor": false}, {"identifier": "setSlowThresholdMillis", "parameters": "(int slowThresholdMillis, int priority)", "modifiers": "", "return": "void", "signature": "void setSlowThresholdMillis(int slowThresholdMillis, int priority)", "full_signature": " void setSlowThresholdMillis(int slowThresholdMillis, int priority)", "class_method_signature": "Transaction.setSlowThresholdMillis(int slowThresholdMillis, int priority)", "testcase": false, "constructor": false}, {"identifier": "setImmediateTraceStoreRunnable", "parameters": "(Cancellable immedateTraceStoreRunnable)", "modifiers": "public", "return": "void", "signature": "void setImmediateTraceStoreRunnable(Cancellable immedateTraceStoreRunnable)", "full_signature": "public void setImmediateTraceStoreRunnable(Cancellable immedateTraceStoreRunnable)", "class_method_signature": "Transaction.setImmediateTraceStoreRunnable(Cancellable immedateTraceStoreRunnable)", "testcase": false, "constructor": false}, {"identifier": "setPartiallyStored", "parameters": "()", "modifiers": "", "return": "void", "signature": "void setPartiallyStored()", "full_signature": " void setPartiallyStored()", "class_method_signature": "Transaction.setPartiallyStored()", "testcase": false, "constructor": false}, {"identifier": "setTransactionEntry", "parameters": "(SelfRemovableEntry transactionEntry)", "modifiers": "", "return": "void", "signature": "void setTransactionEntry(SelfRemovableEntry transactionEntry)", "full_signature": " void setTransactionEntry(SelfRemovableEntry transactionEntry)", "class_method_signature": "Transaction.setTransactionEntry(SelfRemovableEntry transactionEntry)", "testcase": false, "constructor": false}, {"identifier": "removeFromActiveTransactions", "parameters": "()", "modifiers": "", "return": "void", "signature": "void removeFromActiveTransactions()", "full_signature": " void removeFromActiveTransactions()", "class_method_signature": "Transaction.removeFromActiveTransactions()", "testcase": false, "constructor": false}, {"identifier": "startAuxThreadContext", "parameters": "(@Nullable TraceEntryImpl parentTraceEntry,\n            @Nullable TraceEntryImpl parentThreadContextPriorEntry, TimerName auxTimerName,\n            long startTick, ThreadContextThreadLocal.Holder threadContextHolder,\n            @Nullable ServletRequestInfo servletRequestInfo,\n            @Nullable ThreadAllocatedBytes threadAllocatedBytes)", "modifiers": "@Nullable", "return": "ThreadContextImpl", "signature": "ThreadContextImpl startAuxThreadContext(@Nullable TraceEntryImpl parentTraceEntry,\n            @Nullable TraceEntryImpl parentThreadContextPriorEntry, TimerName auxTimerName,\n            long startTick, ThreadContextThreadLocal.Holder threadContextHolder,\n            @Nullable ServletRequestInfo servletRequestInfo,\n            @Nullable ThreadAllocatedBytes threadAllocatedBytes)", "full_signature": "@Nullable ThreadContextImpl startAuxThreadContext(@Nullable TraceEntryImpl parentTraceEntry,\n            @Nullable TraceEntryImpl parentThreadContextPriorEntry, TimerName auxTimerName,\n            long startTick, ThreadContextThreadLocal.Holder threadContextHolder,\n            @Nullable ServletRequestInfo servletRequestInfo,\n            @Nullable ThreadAllocatedBytes threadAllocatedBytes)", "class_method_signature": "Transaction.startAuxThreadContext(@Nullable TraceEntryImpl parentTraceEntry,\n            @Nullable TraceEntryImpl parentThreadContextPriorEntry, TimerName auxTimerName,\n            long startTick, ThreadContextThreadLocal.Holder threadContextHolder,\n            @Nullable ServletRequestInfo servletRequestInfo,\n            @Nullable ThreadAllocatedBytes threadAllocatedBytes)", "testcase": false, "constructor": false}, {"identifier": "mergeLimitExceededAuxThreadContext", "parameters": "(ThreadContextImpl auxThreadContext)", "modifiers": "", "return": "void", "signature": "void mergeLimitExceededAuxThreadContext(ThreadContextImpl auxThreadContext)", "full_signature": " void mergeLimitExceededAuxThreadContext(ThreadContextImpl auxThreadContext)", "class_method_signature": "Transaction.mergeLimitExceededAuxThreadContext(ThreadContextImpl auxThreadContext)", "testcase": false, "constructor": false}, {"identifier": "startAsyncTimer", "parameters": "(TimerName asyncTimerName, long startTick)", "modifiers": "", "return": "AsyncTimer", "signature": "AsyncTimer startAsyncTimer(TimerName asyncTimerName, long startTick)", "full_signature": " AsyncTimer startAsyncTimer(TimerName asyncTimerName, long startTick)", "class_method_signature": "Transaction.startAsyncTimer(TimerName asyncTimerName, long startTick)", "testcase": false, "constructor": false}, {"identifier": "getOrCreateAsyncQueryData", "parameters": "(String queryType, String queryText,\n            boolean bypassLimit)", "modifiers": "", "return": "AsyncQueryData", "signature": "AsyncQueryData getOrCreateAsyncQueryData(String queryType, String queryText,\n            boolean bypassLimit)", "full_signature": " AsyncQueryData getOrCreateAsyncQueryData(String queryType, String queryText,\n            boolean bypassLimit)", "class_method_signature": "Transaction.getOrCreateAsyncQueryData(String queryType, String queryText,\n            boolean bypassLimit)", "testcase": false, "constructor": false}, {"identifier": "getOrCreateAsyncServiceCallData", "parameters": "(String serviceCallType, String serviceCallText,\n            boolean bypassLimit)", "modifiers": "", "return": "AsyncQueryData", "signature": "AsyncQueryData getOrCreateAsyncServiceCallData(String serviceCallType, String serviceCallText,\n            boolean bypassLimit)", "full_signature": " AsyncQueryData getOrCreateAsyncServiceCallData(String serviceCallType, String serviceCallText,\n            boolean bypassLimit)", "class_method_signature": "Transaction.getOrCreateAsyncServiceCallData(String serviceCallType, String serviceCallText,\n            boolean bypassLimit)", "testcase": false, "constructor": false}, {"identifier": "startInnerTransaction", "parameters": "(String transactionType, String transactionName,\n            MessageSupplier messageSupplier, TimerName timerName,\n            ThreadContextThreadLocal.Holder threadContextHolder, int rootNestingGroupId,\n            int rootSuppressionKeyId)", "modifiers": "", "return": "TraceEntryImpl", "signature": "TraceEntryImpl startInnerTransaction(String transactionType, String transactionName,\n            MessageSupplier messageSupplier, TimerName timerName,\n            ThreadContextThreadLocal.Holder threadContextHolder, int rootNestingGroupId,\n            int rootSuppressionKeyId)", "full_signature": " TraceEntryImpl startInnerTransaction(String transactionType, String transactionName,\n            MessageSupplier messageSupplier, TimerName timerName,\n            ThreadContextThreadLocal.Holder threadContextHolder, int rootNestingGroupId,\n            int rootSuppressionKeyId)", "class_method_signature": "Transaction.startInnerTransaction(String transactionType, String transactionName,\n            MessageSupplier messageSupplier, TimerName timerName,\n            ThreadContextThreadLocal.Holder threadContextHolder, int rootNestingGroupId,\n            int rootSuppressionKeyId)", "testcase": false, "constructor": false}, {"identifier": "isEntryLimitExceeded", "parameters": "(int entryCount)", "modifiers": "", "return": "boolean", "signature": "boolean isEntryLimitExceeded(int entryCount)", "full_signature": " boolean isEntryLimitExceeded(int entryCount)", "class_method_signature": "Transaction.isEntryLimitExceeded(int entryCount)", "testcase": false, "constructor": false}, {"identifier": "isQueryLimitExceeded", "parameters": "(int queryCount)", "modifiers": "", "return": "boolean", "signature": "boolean isQueryLimitExceeded(int queryCount)", "full_signature": " boolean isQueryLimitExceeded(int queryCount)", "class_method_signature": "Transaction.isQueryLimitExceeded(int queryCount)", "testcase": false, "constructor": false}, {"identifier": "captureStackTrace", "parameters": "(boolean auxiliary, ThreadInfo threadInfo)", "modifiers": "", "return": "void", "signature": "void captureStackTrace(boolean auxiliary, ThreadInfo threadInfo)", "full_signature": " void captureStackTrace(boolean auxiliary, ThreadInfo threadInfo)", "class_method_signature": "Transaction.captureStackTrace(boolean auxiliary, ThreadInfo threadInfo)", "testcase": false, "constructor": false}, {"identifier": "trackResourceAcquired", "parameters": "(Object resource, boolean withLocationStackTrace)", "modifiers": "", "return": "void", "signature": "void trackResourceAcquired(Object resource, boolean withLocationStackTrace)", "full_signature": " void trackResourceAcquired(Object resource, boolean withLocationStackTrace)", "class_method_signature": "Transaction.trackResourceAcquired(Object resource, boolean withLocationStackTrace)", "testcase": false, "constructor": false}, {"identifier": "trackResourceReleased", "parameters": "(Object resource)", "modifiers": "", "return": "void", "signature": "void trackResourceReleased(Object resource)", "full_signature": " void trackResourceReleased(Object resource)", "class_method_signature": "Transaction.trackResourceReleased(Object resource)", "testcase": false, "constructor": false}, {"identifier": "setWaitingToEndAsync", "parameters": "()", "modifiers": "", "return": "void", "signature": "void setWaitingToEndAsync()", "full_signature": " void setWaitingToEndAsync()", "class_method_signature": "Transaction.setWaitingToEndAsync()", "testcase": false, "constructor": false}, {"identifier": "end", "parameters": "(long endTick, boolean completeAsyncTransaction,\n            boolean isSetTransactionAsyncComplete)", "modifiers": "", "return": "void", "signature": "void end(long endTick, boolean completeAsyncTransaction,\n            boolean isSetTransactionAsyncComplete)", "full_signature": " void end(long endTick, boolean completeAsyncTransaction,\n            boolean isSetTransactionAsyncComplete)", "class_method_signature": "Transaction.end(long endTick, boolean completeAsyncTransaction,\n            boolean isSetTransactionAsyncComplete)", "testcase": false, "constructor": false}, {"identifier": "setCaptureTime", "parameters": "(long captureTime)", "modifiers": "", "return": "void", "signature": "void setCaptureTime(long captureTime)", "full_signature": " void setCaptureTime(long captureTime)", "class_method_signature": "Transaction.setCaptureTime(long captureTime)", "testcase": false, "constructor": false}, {"identifier": "getCaptureTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCaptureTime()", "full_signature": "public long getCaptureTime()", "class_method_signature": "Transaction.getCaptureTime()", "testcase": false, "constructor": false}, {"identifier": "getTransactionRegistry", "parameters": "()", "modifiers": "", "return": "TransactionRegistry", "signature": "TransactionRegistry getTransactionRegistry()", "full_signature": " TransactionRegistry getTransactionRegistry()", "class_method_signature": "Transaction.getTransactionRegistry()", "testcase": false, "constructor": false}, {"identifier": "getTransactionService", "parameters": "()", "modifiers": "", "return": "TransactionService", "signature": "TransactionService getTransactionService()", "full_signature": " TransactionService getTransactionService()", "class_method_signature": "Transaction.getTransactionService()", "testcase": false, "constructor": false}, {"identifier": "getConfigService", "parameters": "()", "modifiers": "", "return": "ConfigService", "signature": "ConfigService getConfigService()", "full_signature": " ConfigService getConfigService()", "class_method_signature": "Transaction.getConfigService()", "testcase": false, "constructor": false}, {"identifier": "getThrowableFrameLimitCounter", "parameters": "()", "modifiers": "", "return": "AtomicInteger", "signature": "AtomicInteger getThrowableFrameLimitCounter()", "full_signature": " AtomicInteger getThrowableFrameLimitCounter()", "class_method_signature": "Transaction.getThrowableFrameLimitCounter()", "testcase": false, "constructor": false}, {"identifier": "memoryBarrierRead", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean memoryBarrierRead()", "full_signature": " boolean memoryBarrierRead()", "class_method_signature": "Transaction.memoryBarrierRead()", "testcase": false, "constructor": false}, {"identifier": "memoryBarrierWrite", "parameters": "()", "modifiers": "", "return": "void", "signature": "void memoryBarrierWrite()", "full_signature": " void memoryBarrierWrite()", "class_method_signature": "Transaction.memoryBarrierWrite()", "testcase": false, "constructor": false}, {"identifier": "memoryBarrierReadWrite", "parameters": "()", "modifiers": "", "return": "void", "signature": "void memoryBarrierReadWrite()", "full_signature": " void memoryBarrierReadWrite()", "class_method_signature": "Transaction.memoryBarrierReadWrite()", "testcase": false, "constructor": false}, {"identifier": "allowAnotherAuxThreadContextWithTraceEntries", "parameters": "()", "modifiers": "@GuardedBy(\"mainThreadContext\") @RequiresNonNull(\"auxThreadContexts\") private", "return": "boolean", "signature": "boolean allowAnotherAuxThreadContextWithTraceEntries()", "full_signature": "@GuardedBy(\"mainThreadContext\") @RequiresNonNull(\"auxThreadContexts\") private boolean allowAnotherAuxThreadContextWithTraceEntries()", "class_method_signature": "Transaction.allowAnotherAuxThreadContextWithTraceEntries()", "testcase": false, "constructor": false}, {"identifier": "initAlreadyMergedAuxComponentsIfNeeded", "parameters": "()", "modifiers": "@GuardedBy(\"mainThreadContext\") @EnsuresNonNull({\"alreadyMergedAuxThreadTimers\", \"alreadyMergedAuxThreadStats\", \"alreadyMergedAuxQueries\", \"alreadyMergedAuxServiceCalls\"}) private", "return": "void", "signature": "void initAlreadyMergedAuxComponentsIfNeeded()", "full_signature": "@GuardedBy(\"mainThreadContext\") @EnsuresNonNull({\"alreadyMergedAuxThreadTimers\", \"alreadyMergedAuxThreadStats\", \"alreadyMergedAuxQueries\", \"alreadyMergedAuxServiceCalls\"}) private void initAlreadyMergedAuxComponentsIfNeeded()", "class_method_signature": "Transaction.initAlreadyMergedAuxComponentsIfNeeded()", "testcase": false, "constructor": false}, {"identifier": "mergeAux", "parameters": "(ThreadContextImpl mergeableAuxThreadContext)", "modifiers": "@GuardedBy(\"mainThreadContext\") @RequiresNonNull({\"alreadyMergedAuxThreadTimers\", \"alreadyMergedAuxThreadStats\", \"alreadyMergedAuxQueries\", \"alreadyMergedAuxServiceCalls\"}) private", "return": "void", "signature": "void mergeAux(ThreadContextImpl mergeableAuxThreadContext)", "full_signature": "@GuardedBy(\"mainThreadContext\") @RequiresNonNull({\"alreadyMergedAuxThreadTimers\", \"alreadyMergedAuxThreadStats\", \"alreadyMergedAuxQueries\", \"alreadyMergedAuxServiceCalls\"}) private void mergeAux(ThreadContextImpl mergeableAuxThreadContext)", "class_method_signature": "Transaction.mergeAux(ThreadContextImpl mergeableAuxThreadContext)", "testcase": false, "constructor": false}, {"identifier": "getOrInitAsyncComponents", "parameters": "()", "modifiers": "private", "return": "AsyncComponents", "signature": "AsyncComponents getOrInitAsyncComponents()", "full_signature": "private AsyncComponents getOrInitAsyncComponents()", "class_method_signature": "Transaction.getOrInitAsyncComponents()", "testcase": false, "constructor": false}, {"identifier": "addProtobufChildEntries", "parameters": "(TraceEntryImpl entry,\n            ListMultimap<TraceEntryImpl, TraceEntryImpl> parentChildMap, long transactionStartTick,\n            long captureTick, int depth, TraceEntryVisitor entryVisitor,\n            SharedQueryTextCollection sharedQueryTextCollection, boolean removeSingleAuxEntry)", "modifiers": "private static", "return": "void", "signature": "void addProtobufChildEntries(TraceEntryImpl entry,\n            ListMultimap<TraceEntryImpl, TraceEntryImpl> parentChildMap, long transactionStartTick,\n            long captureTick, int depth, TraceEntryVisitor entryVisitor,\n            SharedQueryTextCollection sharedQueryTextCollection, boolean removeSingleAuxEntry)", "full_signature": "private static void addProtobufChildEntries(TraceEntryImpl entry,\n            ListMultimap<TraceEntryImpl, TraceEntryImpl> parentChildMap, long transactionStartTick,\n            long captureTick, int depth, TraceEntryVisitor entryVisitor,\n            SharedQueryTextCollection sharedQueryTextCollection, boolean removeSingleAuxEntry)", "class_method_signature": "Transaction.addProtobufChildEntries(TraceEntryImpl entry,\n            ListMultimap<TraceEntryImpl, TraceEntryImpl> parentChildMap, long transactionStartTick,\n            long captureTick, int depth, TraceEntryVisitor entryVisitor,\n            SharedQueryTextCollection sharedQueryTextCollection, boolean removeSingleAuxEntry)", "testcase": false, "constructor": false}, {"identifier": "buildPriorEntryChildThreadContextMap", "parameters": "()", "modifiers": "private", "return": "ListMultimap<TraceEntryImpl, ThreadContextImpl>", "signature": "ListMultimap<TraceEntryImpl, ThreadContextImpl> buildPriorEntryChildThreadContextMap()", "full_signature": "private ListMultimap<TraceEntryImpl, ThreadContextImpl> buildPriorEntryChildThreadContextMap()", "class_method_signature": "Transaction.buildPriorEntryChildThreadContextMap()", "testcase": false, "constructor": false}, {"identifier": "detachIncompleteAuxThreadContexts", "parameters": "()", "modifiers": "@GuardedBy(\"mainThreadContext\") private", "return": "void", "signature": "void detachIncompleteAuxThreadContexts()", "full_signature": "@GuardedBy(\"mainThreadContext\") private void detachIncompleteAuxThreadContexts()", "class_method_signature": "Transaction.detachIncompleteAuxThreadContexts()", "testcase": false, "constructor": false}, {"identifier": "getUnmergedAuxThreadContext", "parameters": "()", "modifiers": "@GuardedBy(\"mainThreadContext\") @RequiresNonNull(\"auxThreadContexts\") private", "return": "Iterable<ThreadContextImpl>", "signature": "Iterable<ThreadContextImpl> getUnmergedAuxThreadContext()", "full_signature": "@GuardedBy(\"mainThreadContext\") @RequiresNonNull(\"auxThreadContexts\") private Iterable<ThreadContextImpl> getUnmergedAuxThreadContext()", "class_method_signature": "Transaction.getUnmergedAuxThreadContext()", "testcase": false, "constructor": false}, {"identifier": "buildTraceId", "parameters": "(long startTime)", "modifiers": "@VisibleForTesting static", "return": "String", "signature": "String buildTraceId(long startTime)", "full_signature": "@VisibleForTesting static String buildTraceId(long startTime)", "class_method_signature": "Transaction.buildTraceId(long startTime)", "testcase": false, "constructor": false}, {"identifier": "lowerSixBytesHex", "parameters": "(long startTime)", "modifiers": "@VisibleForTesting static", "return": "String", "signature": "String lowerSixBytesHex(long startTime)", "full_signature": "@VisibleForTesting static String lowerSixBytesHex(long startTime)", "class_method_signature": "Transaction.lowerSixBytesHex(long startTime)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/glowroot/agent/impl/Transaction.java"}, "focal_method": {"identifier": "lowerSixBytesHex", "parameters": "(long startTime)", "modifiers": "@VisibleForTesting static", "return": "String", "body": "@VisibleForTesting\n    static String lowerSixBytesHex(long startTime) {\n        long mask = 1L << 48;\n        return Long.toHexString(mask | (startTime & (mask - 1))).substring(1);\n    }", "signature": "String lowerSixBytesHex(long startTime)", "full_signature": "@VisibleForTesting static String lowerSixBytesHex(long startTime)", "class_method_signature": "Transaction.lowerSixBytesHex(long startTime)", "testcase": false, "constructor": false, "invocations": ["substring", "toHexString"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}