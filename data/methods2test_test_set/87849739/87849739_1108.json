{"test_class": {"identifier": "ThingIdTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final JUnitSoftAssertions softly = new JUnitSoftAssertions();", "modifier": "@Rule\n    public final", "type": "JUnitSoftAssertions", "declarator": "softly = new JUnitSoftAssertions()", "var_name": "softly"}], "file": "model/things/src/test/java/org/eclipse/ditto/model/things/ThingIdTest.java"}, "test_case": {"identifier": "generateRandomHasEmptyNamespace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void generateRandomHasEmptyNamespace() {\n        final ThingId randomThingId = ThingId.generateRandom();\n\n        assertThat(randomThingId.getNamespace()).isEmpty();\n    }", "signature": "void generateRandomHasEmptyNamespace()", "full_signature": "@Test public void generateRandomHasEmptyNamespace()", "class_method_signature": "ThingIdTest.generateRandomHasEmptyNamespace()", "testcase": true, "constructor": false, "invocations": ["generateRandom", "isEmpty", "assertThat", "getNamespace"]}, "focal_class": {"identifier": "ThingId", "superclass": "extends NamespacedEntityIdWithType", "interfaces": "", "fields": [{"original_string": "private static final ThingId DUMMY_ID = ThingId.of(DefaultNamespacedEntityId.dummy());", "modifier": "private static final", "type": "ThingId", "declarator": "DUMMY_ID = ThingId.of(DefaultNamespacedEntityId.dummy())", "var_name": "DUMMY_ID"}], "methods": [{"identifier": "ThingId", "parameters": "(final NamespacedEntityId entityId)", "modifiers": "private", "return": "", "signature": " ThingId(final NamespacedEntityId entityId)", "full_signature": "private  ThingId(final NamespacedEntityId entityId)", "class_method_signature": "ThingId.ThingId(final NamespacedEntityId entityId)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence thingId)", "modifiers": "public static", "return": "ThingId", "signature": "ThingId of(final CharSequence thingId)", "full_signature": "public static ThingId of(final CharSequence thingId)", "class_method_signature": "ThingId.of(final CharSequence thingId)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String namespace, final String name)", "modifiers": "public static", "return": "ThingId", "signature": "ThingId of(final String namespace, final String name)", "full_signature": "public static ThingId of(final String namespace, final String name)", "class_method_signature": "ThingId.of(final String namespace, final String name)", "testcase": false, "constructor": false}, {"identifier": "inDefaultNamespace", "parameters": "(final String name)", "modifiers": "public static", "return": "ThingId", "signature": "ThingId inDefaultNamespace(final String name)", "full_signature": "public static ThingId inDefaultNamespace(final String name)", "class_method_signature": "ThingId.inDefaultNamespace(final String name)", "testcase": false, "constructor": false}, {"identifier": "generateRandom", "parameters": "()", "modifiers": "public static", "return": "ThingId", "signature": "ThingId generateRandom()", "full_signature": "public static ThingId generateRandom()", "class_method_signature": "ThingId.generateRandom()", "testcase": false, "constructor": false}, {"identifier": "wrapInThingIdInvalidException", "parameters": "(final Supplier<T> supplier)", "modifiers": "private static", "return": "T", "signature": "T wrapInThingIdInvalidException(final Supplier<T> supplier)", "full_signature": "private static T wrapInThingIdInvalidException(final Supplier<T> supplier)", "class_method_signature": "ThingId.wrapInThingIdInvalidException(final Supplier<T> supplier)", "testcase": false, "constructor": false}, {"identifier": "dummy", "parameters": "()", "modifiers": "public static", "return": "ThingId", "signature": "ThingId dummy()", "full_signature": "public static ThingId dummy()", "class_method_signature": "ThingId.dummy()", "testcase": false, "constructor": false}, {"identifier": "getEntityType", "parameters": "()", "modifiers": "@Override public", "return": "EntityType", "signature": "EntityType getEntityType()", "full_signature": "@Override public EntityType getEntityType()", "class_method_signature": "ThingId.getEntityType()", "testcase": false, "constructor": false}], "file": "model/things/src/main/java/org/eclipse/ditto/model/things/ThingId.java"}, "focal_method": {"identifier": "generateRandom", "parameters": "()", "modifiers": "public static", "return": "ThingId", "body": "public static ThingId generateRandom() {\n        return wrapInThingIdInvalidException(() -> new ThingId(DefaultNamespacedEntityId.fromName(UUID.randomUUID().toString())));\n    }", "signature": "ThingId generateRandom()", "full_signature": "public static ThingId generateRandom()", "class_method_signature": "ThingId.generateRandom()", "testcase": false, "constructor": false, "invocations": ["wrapInThingIdInvalidException", "fromName", "toString", "randomUUID"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}