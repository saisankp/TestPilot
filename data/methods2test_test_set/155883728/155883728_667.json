{"test_class": {"identifier": "JackrabbitSessionFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/JackrabbitSessionFacadeTest.java"}, "test_case": {"identifier": "testGetPropertyOrNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPropertyOrNull() throws Exception {\n        inspectForTest(session -> {\n            final JackrabbitSessionFacade facade = new JackrabbitSessionFacade(session, true);\n            assertNull(\"property should be null\", facade.getPropertyOrNull(\"/jcr:system/someProp\"));\n            final Node fooNode = session.getRootNode().addNode(\"foo\", JcrConstants.NT_UNSTRUCTURED);\n            fooNode.setProperty(\"someProp\", \"someVal\");\n            assertEquals(\"someProp should have someVal value\",\n                    \"someVal\", facade.getPropertyOrNull(\"/foo/someProp\").getString());\n        });\n    }", "signature": "void testGetPropertyOrNull()", "full_signature": "@Test public void testGetPropertyOrNull()", "class_method_signature": "JackrabbitSessionFacadeTest.testGetPropertyOrNull()", "testcase": true, "constructor": false, "invocations": ["inspectForTest", "assertNull", "getPropertyOrNull", "addNode", "getRootNode", "setProperty", "assertEquals", "getString", "getPropertyOrNull"]}, "focal_class": {"identifier": "JackrabbitSessionFacade", "superclass": "extends SessionFacade<JackrabbitSession>", "interfaces": "implements JackrabbitSession", "fields": [], "methods": [{"identifier": "JackrabbitSessionFacade", "parameters": "(final @NotNull JackrabbitSession delegate, final boolean notProtected)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " JackrabbitSessionFacade(final @NotNull JackrabbitSession delegate, final boolean notProtected)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  JackrabbitSessionFacade(final @NotNull JackrabbitSession delegate, final boolean notProtected)", "class_method_signature": "JackrabbitSessionFacade.JackrabbitSessionFacade(final @NotNull JackrabbitSession delegate, final boolean notProtected)", "testcase": false, "constructor": true}, {"identifier": "hasPermission", "parameters": "(final @NotNull String absPath, final @NotNull String... actions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasPermission(final @NotNull String absPath, final @NotNull String... actions)", "full_signature": "@Override public boolean hasPermission(final @NotNull String absPath, final @NotNull String... actions)", "class_method_signature": "JackrabbitSessionFacade.hasPermission(final @NotNull String absPath, final @NotNull String... actions)", "testcase": false, "constructor": false}, {"identifier": "getPrincipalManager", "parameters": "()", "modifiers": "@Override public", "return": "PrincipalManager", "signature": "PrincipalManager getPrincipalManager()", "full_signature": "@Override public PrincipalManager getPrincipalManager()", "class_method_signature": "JackrabbitSessionFacade.getPrincipalManager()", "testcase": false, "constructor": false}, {"identifier": "getUserManager", "parameters": "()", "modifiers": "@Override public", "return": "UserManager", "signature": "UserManager getUserManager()", "full_signature": "@Override public UserManager getUserManager()", "class_method_signature": "JackrabbitSessionFacade.getUserManager()", "testcase": false, "constructor": false}, {"identifier": "getItemOrNull", "parameters": "(final String absPath)", "modifiers": "@Override public", "return": "Item", "signature": "Item getItemOrNull(final String absPath)", "full_signature": "@Override public Item getItemOrNull(final String absPath)", "class_method_signature": "JackrabbitSessionFacade.getItemOrNull(final String absPath)", "testcase": false, "constructor": false}, {"identifier": "getPropertyOrNull", "parameters": "(final String absPath)", "modifiers": "@Override public", "return": "Property", "signature": "Property getPropertyOrNull(final String absPath)", "full_signature": "@Override public Property getPropertyOrNull(final String absPath)", "class_method_signature": "JackrabbitSessionFacade.getPropertyOrNull(final String absPath)", "testcase": false, "constructor": false}, {"identifier": "getNodeOrNull", "parameters": "(final String absPath)", "modifiers": "@Override public", "return": "Node", "signature": "Node getNodeOrNull(final String absPath)", "full_signature": "@Override public Node getNodeOrNull(final String absPath)", "class_method_signature": "JackrabbitSessionFacade.getNodeOrNull(final String absPath)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/JackrabbitSessionFacade.java"}, "focal_method": {"identifier": "getPropertyOrNull", "parameters": "(final String absPath)", "modifiers": "@Override public", "return": "Property", "body": "@Override\n    public Property getPropertyOrNull(final String absPath) throws RepositoryException {\n        Property internal = delegate.getPropertyOrNull(absPath);\n        if (internal != null) {\n            return new PropertyFacade<>(internal, this);\n        }\n        return null;\n    }", "signature": "Property getPropertyOrNull(final String absPath)", "full_signature": "@Override public Property getPropertyOrNull(final String absPath)", "class_method_signature": "JackrabbitSessionFacade.getPropertyOrNull(final String absPath)", "testcase": false, "constructor": false, "invocations": ["getPropertyOrNull"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}