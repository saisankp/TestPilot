{"test_class": {"identifier": "FieldTest", "superclass": "", "interfaces": "", "fields": [], "file": "tsfile/src/test/java/org/apache/iotdb/tsfile/read/common/FieldTest.java"}, "test_case": {"identifier": "construct", "parameters": "()", "modifiers": "@Test(expected = NullFieldException.class) public", "return": "void", "body": "@Test(expected = NullFieldException.class)\n  public void construct() {\n    Field field = new Field(null);\n    field.getIntV();\n  }", "signature": "void construct()", "full_signature": "@Test(expected = NullFieldException.class) public void construct()", "class_method_signature": "FieldTest.construct()", "testcase": true, "constructor": false, "invocations": ["getIntV"]}, "focal_class": {"identifier": "Field", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TSDataType dataType;", "modifier": "private", "type": "TSDataType", "declarator": "dataType", "var_name": "dataType"}, {"original_string": "private boolean boolV;", "modifier": "private", "type": "boolean", "declarator": "boolV", "var_name": "boolV"}, {"original_string": "private int intV;", "modifier": "private", "type": "int", "declarator": "intV", "var_name": "intV"}, {"original_string": "private long longV;", "modifier": "private", "type": "long", "declarator": "longV", "var_name": "longV"}, {"original_string": "private float floatV;", "modifier": "private", "type": "float", "declarator": "floatV", "var_name": "floatV"}, {"original_string": "private double doubleV;", "modifier": "private", "type": "double", "declarator": "doubleV", "var_name": "doubleV"}, {"original_string": "private Binary binaryV;", "modifier": "private", "type": "Binary", "declarator": "binaryV", "var_name": "binaryV"}], "methods": [{"identifier": "Field", "parameters": "(TSDataType dataType)", "modifiers": "public", "return": "", "signature": " Field(TSDataType dataType)", "full_signature": "public  Field(TSDataType dataType)", "class_method_signature": "Field.Field(TSDataType dataType)", "testcase": false, "constructor": true}, {"identifier": "copy", "parameters": "(Field field)", "modifiers": "public static", "return": "Field", "signature": "Field copy(Field field)", "full_signature": "public static Field copy(Field field)", "class_method_signature": "Field.copy(Field field)", "testcase": false, "constructor": false}, {"identifier": "getDataType", "parameters": "()", "modifiers": "public", "return": "TSDataType", "signature": "TSDataType getDataType()", "full_signature": "public TSDataType getDataType()", "class_method_signature": "Field.getDataType()", "testcase": false, "constructor": false}, {"identifier": "isNull", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNull()", "full_signature": "public boolean isNull()", "class_method_signature": "Field.isNull()", "testcase": false, "constructor": false}, {"identifier": "getBoolV", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolV()", "full_signature": "public boolean getBoolV()", "class_method_signature": "Field.getBoolV()", "testcase": false, "constructor": false}, {"identifier": "setBoolV", "parameters": "(boolean boolV)", "modifiers": "public", "return": "void", "signature": "void setBoolV(boolean boolV)", "full_signature": "public void setBoolV(boolean boolV)", "class_method_signature": "Field.setBoolV(boolean boolV)", "testcase": false, "constructor": false}, {"identifier": "getIntV", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getIntV()", "full_signature": "public int getIntV()", "class_method_signature": "Field.getIntV()", "testcase": false, "constructor": false}, {"identifier": "setIntV", "parameters": "(int intV)", "modifiers": "public", "return": "void", "signature": "void setIntV(int intV)", "full_signature": "public void setIntV(int intV)", "class_method_signature": "Field.setIntV(int intV)", "testcase": false, "constructor": false}, {"identifier": "getLongV", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLongV()", "full_signature": "public long getLongV()", "class_method_signature": "Field.getLongV()", "testcase": false, "constructor": false}, {"identifier": "setLongV", "parameters": "(long longV)", "modifiers": "public", "return": "void", "signature": "void setLongV(long longV)", "full_signature": "public void setLongV(long longV)", "class_method_signature": "Field.setLongV(long longV)", "testcase": false, "constructor": false}, {"identifier": "getFloatV", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getFloatV()", "full_signature": "public float getFloatV()", "class_method_signature": "Field.getFloatV()", "testcase": false, "constructor": false}, {"identifier": "setFloatV", "parameters": "(float floatV)", "modifiers": "public", "return": "void", "signature": "void setFloatV(float floatV)", "full_signature": "public void setFloatV(float floatV)", "class_method_signature": "Field.setFloatV(float floatV)", "testcase": false, "constructor": false}, {"identifier": "getDoubleV", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDoubleV()", "full_signature": "public double getDoubleV()", "class_method_signature": "Field.getDoubleV()", "testcase": false, "constructor": false}, {"identifier": "setDoubleV", "parameters": "(double doubleV)", "modifiers": "public", "return": "void", "signature": "void setDoubleV(double doubleV)", "full_signature": "public void setDoubleV(double doubleV)", "class_method_signature": "Field.setDoubleV(double doubleV)", "testcase": false, "constructor": false}, {"identifier": "getBinaryV", "parameters": "()", "modifiers": "public", "return": "Binary", "signature": "Binary getBinaryV()", "full_signature": "public Binary getBinaryV()", "class_method_signature": "Field.getBinaryV()", "testcase": false, "constructor": false}, {"identifier": "setBinaryV", "parameters": "(Binary binaryV)", "modifiers": "public", "return": "void", "signature": "void setBinaryV(Binary binaryV)", "full_signature": "public void setBinaryV(Binary binaryV)", "class_method_signature": "Field.setBinaryV(Binary binaryV)", "testcase": false, "constructor": false}, {"identifier": "getStringValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStringValue()", "full_signature": "public String getStringValue()", "class_method_signature": "Field.getStringValue()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Field.toString()", "testcase": false, "constructor": false}, {"identifier": "getObjectValue", "parameters": "(TSDataType dataType)", "modifiers": "public", "return": "Object", "signature": "Object getObjectValue(TSDataType dataType)", "full_signature": "public Object getObjectValue(TSDataType dataType)", "class_method_signature": "Field.getObjectValue(TSDataType dataType)", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "(Object value, TSDataType dataType)", "modifiers": "public static", "return": "Field", "signature": "Field getField(Object value, TSDataType dataType)", "full_signature": "public static Field getField(Object value, TSDataType dataType)", "class_method_signature": "Field.getField(Object value, TSDataType dataType)", "testcase": false, "constructor": false}], "file": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/common/Field.java"}, "focal_method": {"identifier": "getIntV", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getIntV() {\n    if (dataType == null) {\n      throw new NullFieldException();\n    }\n    return intV;\n  }", "signature": "int getIntV()", "full_signature": "public int getIntV()", "class_method_signature": "Field.getIntV()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}