{"test_class": {"identifier": "TestTimeoutCache", "superclass": "", "interfaces": "", "fields": [], "file": "base/src/test/java/com/barchart/feed/base/provider/TestTimeoutCache.java"}, "test_case": {"identifier": "testRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRemove() throws Exception {\n\t\t\n\t\tfinal TimeoutCache<InstrumentID> cache = new TimeoutCache<InstrumentID>(2);\n\t\t\n\t\tfinal List<InstrumentID> ids = new ArrayList<InstrumentID>();\n\t\t\n\t\tfor(int i = 0; i <10000; i++) {\n\t\t\tids.add(new InstrumentID(i));\n\t\t}\n\t\t\n\t\tThread.sleep(10000);\n\t\t\n\t\tfor(final InstrumentID id : ids) {\n\t\t\tcache.put(id, new Runnable() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void run() {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t\t\n\t\tfor(final InstrumentID id : ids) {\n\t\t\tcache.remove(id);\n\t\t}\n\t\t\n\t\tassertEquals(0, cache.size());\n\t\t\n\t}", "signature": "void testRemove()", "full_signature": "@Test public void testRemove()", "class_method_signature": "TestTimeoutCache.testRemove()", "testcase": true, "constructor": false, "invocations": ["add", "sleep", "put", "remove", "assertEquals", "size"]}, "focal_class": {"identifier": "TimeoutCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Logger log = LoggerFactory.getLogger(TimeoutCache.class);", "modifier": "protected static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(TimeoutCache.class)", "var_name": "log"}, {"original_string": "private final ConcurrentMap<T, Integer> timers = new ConcurrentHashMap<T, Integer>();", "modifier": "private final", "type": "ConcurrentMap<T, Integer>", "declarator": "timers = new ConcurrentHashMap<T, Integer>()", "var_name": "timers"}, {"original_string": "private final ConcurrentMap<T, Runnable> tasks = new ConcurrentHashMap<T, Runnable>();", "modifier": "private final", "type": "ConcurrentMap<T, Runnable>", "declarator": "tasks = new ConcurrentHashMap<T, Runnable>()", "var_name": "tasks"}, {"original_string": "private final int timeout;", "modifier": "private final", "type": "int", "declarator": "timeout", "var_name": "timeout"}], "methods": [{"identifier": "TimeoutCache", "parameters": "(final int seconds)", "modifiers": "public", "return": "", "signature": " TimeoutCache(final int seconds)", "full_signature": "public  TimeoutCache(final int seconds)", "class_method_signature": "TimeoutCache.TimeoutCache(final int seconds)", "testcase": false, "constructor": true}, {"identifier": "put", "parameters": "(final T key, final Runnable task)", "modifiers": "public", "return": "void", "signature": "void put(final T key, final Runnable task)", "full_signature": "public void put(final T key, final Runnable task)", "class_method_signature": "TimeoutCache.put(final T key, final Runnable task)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final T key)", "modifiers": "public", "return": "void", "signature": "void remove(final T key)", "full_signature": "public void remove(final T key)", "class_method_signature": "TimeoutCache.remove(final T key)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "TimeoutCache.size()", "testcase": false, "constructor": false}], "file": "base/src/main/java/com/barchart/feed/base/provider/TimeoutCache.java"}, "focal_method": {"identifier": "remove", "parameters": "(final T key)", "modifiers": "public", "return": "void", "body": "public void remove(final T key) {\n\t\t\n\t\ttimers.remove(key);\n\t\ttasks.remove(key);\n\t\t\n\t}", "signature": "void remove(final T key)", "full_signature": "public void remove(final T key)", "class_method_signature": "TimeoutCache.remove(final T key)", "testcase": false, "constructor": false, "invocations": ["remove", "remove"]}, "repository": {"repo_id": 7243760, "url": "https://github.com/barchart/barchart-feed", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 64172, "license": "licensed"}}