{"test_class": {"identifier": "MenuUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Configuration mockConfiguration;", "modifier": "@Mock\n    private", "type": "Configuration", "declarator": "mockConfiguration", "var_name": "mockConfiguration"}], "file": "gazeplay-commons/src/test/java/net/gazeplay/commons/utils/games/MenuUtilsTest.java"}, "test_case": {"identifier": "givenVersionIsKnown_givenProfileIsNamed_shouldBuildMenuBar", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void givenVersionIsKnown_givenProfileIsNamed_shouldBuildMenuBar() {\n        when(mockConfiguration.getUserName()).thenReturn(\"test user name\");\n        new MockUp<ActiveConfigurationContext>() {\n            @mockit.Mock\n            public Configuration getInstance() {\n                return mockConfiguration;\n            }\n        };\n        new MockUp<VersionInfo>() {\n            @mockit.Mock\n            public Optional<String> findVersionInfo(String id, boolean time) {\n                return Optional.of(\"v1.2.3\");\n            }\n        };\n\n        MenuBar menuBar = MenuUtils.buildMenuBar();\n        assertEquals(\"GazePlay v1.2.3\", menuBar.getMenus().get(0).getText());\n        assertEquals(\"Current Profile: test user name\", menuBar.getMenus().get(1).getText());\n    }", "signature": "void givenVersionIsKnown_givenProfileIsNamed_shouldBuildMenuBar()", "full_signature": "@Test void givenVersionIsKnown_givenProfileIsNamed_shouldBuildMenuBar()", "class_method_signature": "MenuUtilsTest.givenVersionIsKnown_givenProfileIsNamed_shouldBuildMenuBar()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getUserName", "of", "buildMenuBar", "assertEquals", "getText", "get", "getMenus", "assertEquals", "getText", "get", "getMenus"]}, "focal_class": {"identifier": "MenuUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "buildMenuBar", "parameters": "()", "modifiers": "public static", "return": "MenuBar", "signature": "MenuBar buildMenuBar()", "full_signature": "public static MenuBar buildMenuBar()", "class_method_signature": "MenuUtils.buildMenuBar()", "testcase": false, "constructor": false}, {"identifier": "loadLicenseFileAsString", "parameters": "(ClassLoader classLoader)", "modifiers": "private static", "return": "String", "signature": "String loadLicenseFileAsString(ClassLoader classLoader)", "full_signature": "private static String loadLicenseFileAsString(ClassLoader classLoader)", "class_method_signature": "MenuUtils.loadLicenseFileAsString(ClassLoader classLoader)", "testcase": false, "constructor": false}], "file": "gazeplay-commons/src/main/java/net/gazeplay/commons/utils/games/MenuUtils.java"}, "focal_method": {"identifier": "buildMenuBar", "parameters": "()", "modifiers": "public static", "return": "MenuBar", "body": "public static MenuBar buildMenuBar() {\n        ClassLoader classLoader = ClassLoader.getSystemClassLoader();\n        String licenseFileAsString = loadLicenseFileAsString(classLoader);\n\n        @Nullable\n        Optional<String> versionNumber = VersionInfo.findVersionInfo(VersionInfo.artifactId, false);\n\n        MenuItem licenseMenuItem = new MenuItem(licenseFileAsString);\n\n        Menu versionMenu = new Menu(versionNumber.map(value -> \"GazePlay \" + value).orElse(\"GazePlay unreleased version\"));\n        versionMenu.getItems().add(licenseMenuItem);\n\n        String username = ActiveConfigurationContext.getInstance().getUserName();\n        Menu profileMenu = new Menu(\"Current Profile: \" + (username.isEmpty() ? \"Default\" : username));\n\n        MenuBar menuBar = new MenuBar();\n        menuBar.getMenus().addAll(versionMenu, profileMenu);\n        menuBar.setPrefHeight(40);\n        menuBar.setPrefWidth(80);\n\n        return menuBar;\n    }", "signature": "MenuBar buildMenuBar()", "full_signature": "public static MenuBar buildMenuBar()", "class_method_signature": "MenuUtils.buildMenuBar()", "testcase": false, "constructor": false, "invocations": ["getSystemClassLoader", "loadLicenseFileAsString", "findVersionInfo", "orElse", "map", "add", "getItems", "getUserName", "getInstance", "isEmpty", "addAll", "getMenus", "setPrefHeight", "setPrefWidth"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}