{"test_class": {"identifier": "RestControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GeosupportService geosupportServiceMock;", "modifier": "private", "type": "GeosupportService", "declarator": "geosupportServiceMock", "var_name": "geosupportServiceMock"}, {"original_string": "private RestController restController;", "modifier": "private", "type": "RestController", "declarator": "restController", "var_name": "restController"}, {"original_string": "private Map<String, Object> expectedResult;", "modifier": "private", "type": "Map<String, Object>", "declarator": "expectedResult", "var_name": "expectedResult"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/web/RestControllerTest.java"}, "test_case": {"identifier": "testBin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBin() {\n        String bin = \"1234567\";\n        Mockito.when(this.geosupportServiceMock.callFunctionBN(bin)).thenReturn(expectedResult);\n        Map<String, Object> actualResult = this.restController.bin(bin);\n        assertSame(expectedResult, actualResult.get(RestController.BIN_OBJ));\n    }", "signature": "void testBin()", "full_signature": "@Test public void testBin()", "class_method_signature": "RestControllerTest.testBin()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "callFunctionBN", "bin", "assertSame", "get"]}, "focal_class": {"identifier": "RestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ADDRESS_URI = \"/address\";", "modifier": "public static final", "type": "String", "declarator": "ADDRESS_URI = \"/address\"", "var_name": "ADDRESS_URI"}, {"original_string": "public static final String ADDRESSPOINT_URI = \"/addresspoint\";", "modifier": "public static final", "type": "String", "declarator": "ADDRESSPOINT_URI = \"/addresspoint\"", "var_name": "ADDRESSPOINT_URI"}, {"original_string": "public static final String BBL_URI = \"/bbl\";", "modifier": "public static final", "type": "String", "declarator": "BBL_URI = \"/bbl\"", "var_name": "BBL_URI"}, {"original_string": "public static final String BIN_URI = \"/bin\";", "modifier": "public static final", "type": "String", "declarator": "BIN_URI = \"/bin\"", "var_name": "BIN_URI"}, {"original_string": "public static final String BLOCKFACE_URI = \"/blockface\";", "modifier": "public static final", "type": "String", "declarator": "BLOCKFACE_URI = \"/blockface\"", "var_name": "BLOCKFACE_URI"}, {"original_string": "public static final String GEOSUPPORT_URI = \"/geosupport\";", "modifier": "public static final", "type": "String", "declarator": "GEOSUPPORT_URI = \"/geosupport\"", "var_name": "GEOSUPPORT_URI"}, {"original_string": "public static final String INTERSECTION_URI = \"/intersection\";", "modifier": "public static final", "type": "String", "declarator": "INTERSECTION_URI = \"/intersection\"", "var_name": "INTERSECTION_URI"}, {"original_string": "public static final String NORMALIZE_URI= \"/normalize\";", "modifier": "public static final", "type": "String", "declarator": "NORMALIZE_URI= \"/normalize\"", "var_name": "NORMALIZE_URI"}, {"original_string": "public static final String PLACE_URI = \"/place\";", "modifier": "public static final", "type": "String", "declarator": "PLACE_URI = \"/place\"", "var_name": "PLACE_URI"}, {"original_string": "public static final String STREETCODE_URI = \"/streetcode\";", "modifier": "public static final", "type": "String", "declarator": "STREETCODE_URI = \"/streetcode\"", "var_name": "STREETCODE_URI"}, {"original_string": "public static final String VERSION_URI = \"/version\";", "modifier": "public static final", "type": "String", "declarator": "VERSION_URI = \"/version\"", "var_name": "VERSION_URI"}, {"original_string": "public static final String ADDRESS_OBJ = ServiceType.ADDRESS.elementName();", "modifier": "public static final", "type": "String", "declarator": "ADDRESS_OBJ = ServiceType.ADDRESS.elementName()", "var_name": "ADDRESS_OBJ"}, {"original_string": "public static final String ADDRESSPOINT_OBJ = ServiceType.ADDRESSPOINT.elementName();", "modifier": "public static final", "type": "String", "declarator": "ADDRESSPOINT_OBJ = ServiceType.ADDRESSPOINT.elementName()", "var_name": "ADDRESSPOINT_OBJ"}, {"original_string": "public static final String BBL_OBJ = ServiceType.BBL.elementName();", "modifier": "public static final", "type": "String", "declarator": "BBL_OBJ = ServiceType.BBL.elementName()", "var_name": "BBL_OBJ"}, {"original_string": "public static final String BIN_OBJ = ServiceType.BIN.elementName();", "modifier": "public static final", "type": "String", "declarator": "BIN_OBJ = ServiceType.BIN.elementName()", "var_name": "BIN_OBJ"}, {"original_string": "public static final String BLOCKFACE_OBJ = ServiceType.BLOCKFACE.elementName();", "modifier": "public static final", "type": "String", "declarator": "BLOCKFACE_OBJ = ServiceType.BLOCKFACE.elementName()", "var_name": "BLOCKFACE_OBJ"}, {"original_string": "public static final String INTERSECTION_OBJ = ServiceType.INTERSECTION.elementName();", "modifier": "public static final", "type": "String", "declarator": "INTERSECTION_OBJ = ServiceType.INTERSECTION.elementName()", "var_name": "INTERSECTION_OBJ"}, {"original_string": "public static final String NORMALIZE_OBJ = ServiceType.NORMALIZE.elementName();", "modifier": "public static final", "type": "String", "declarator": "NORMALIZE_OBJ = ServiceType.NORMALIZE.elementName()", "var_name": "NORMALIZE_OBJ"}, {"original_string": "public static final String PLACE_OBJ = ServiceType.PLACE.elementName();", "modifier": "public static final", "type": "String", "declarator": "PLACE_OBJ = ServiceType.PLACE.elementName()", "var_name": "PLACE_OBJ"}, {"original_string": "public static final String STREETCODE_OBJ = ServiceType.STREETCODE.elementName();", "modifier": "public static final", "type": "String", "declarator": "STREETCODE_OBJ = ServiceType.STREETCODE.elementName()", "var_name": "STREETCODE_OBJ"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(RestController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RestController.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private GeosupportService geosupportService;", "modifier": "@Autowired\n    private", "type": "GeosupportService", "declarator": "geosupportService", "var_name": "geosupportService"}], "methods": [{"identifier": "address", "parameters": "(\n            @RequestParam(required = false) String houseNumber,\n            @RequestParam String street,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "modifiers": "@RequestMapping(value = ADDRESS_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> address(\n            @RequestParam(required = false) String houseNumber,\n            @RequestParam String street,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "full_signature": "@RequestMapping(value = ADDRESS_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> address(\n            @RequestParam(required = false) String houseNumber,\n            @RequestParam String street,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "class_method_signature": "RestController.address(\n            @RequestParam(required = false) String houseNumber,\n            @RequestParam String street,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "testcase": false, "constructor": false}, {"identifier": "addresspoint", "parameters": "(\n            @RequestParam(required = false) String houseNumber,\n            @RequestParam String street,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "modifiers": "@RequestMapping(value = ADDRESSPOINT_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> addresspoint(\n            @RequestParam(required = false) String houseNumber,\n            @RequestParam String street,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "full_signature": "@RequestMapping(value = ADDRESSPOINT_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> addresspoint(\n            @RequestParam(required = false) String houseNumber,\n            @RequestParam String street,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "class_method_signature": "RestController.addresspoint(\n            @RequestParam(required = false) String houseNumber,\n            @RequestParam String street,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "testcase": false, "constructor": false}, {"identifier": "place", "parameters": "(\n            @RequestParam String name,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "modifiers": "@RequestMapping(value = PLACE_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> place(\n            @RequestParam String name,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "full_signature": "@RequestMapping(value = PLACE_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> place(\n            @RequestParam String name,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "class_method_signature": "RestController.place(\n            @RequestParam String name,\n            @RequestParam(required = false) String borough,\n            @RequestParam(required = false) String zip)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(@RequestParam String crossStreetOne, @RequestParam String crossStreetTwo,\n            @RequestParam String borough, @RequestParam(required = false) String boroughCrossStreetTwo,\n            @RequestParam(required = false) String compassDirection)", "modifiers": "@RequestMapping(value = INTERSECTION_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> intersection(@RequestParam String crossStreetOne, @RequestParam String crossStreetTwo,\n            @RequestParam String borough, @RequestParam(required = false) String boroughCrossStreetTwo,\n            @RequestParam(required = false) String compassDirection)", "full_signature": "@RequestMapping(value = INTERSECTION_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> intersection(@RequestParam String crossStreetOne, @RequestParam String crossStreetTwo,\n            @RequestParam String borough, @RequestParam(required = false) String boroughCrossStreetTwo,\n            @RequestParam(required = false) String compassDirection)", "class_method_signature": "RestController.intersection(@RequestParam String crossStreetOne, @RequestParam String crossStreetTwo,\n            @RequestParam String borough, @RequestParam(required = false) String boroughCrossStreetTwo,\n            @RequestParam(required = false) String compassDirection)", "testcase": false, "constructor": false}, {"identifier": "blockface", "parameters": "(@RequestParam String onStreet, @RequestParam String crossStreetOne,\n            @RequestParam String crossStreetTwo, @RequestParam String borough,\n            @RequestParam(required = false) String boroughCrossStreetOne,\n            @RequestParam(required = false) String boroughCrossStreetTwo,\n            @RequestParam(required = false) String compassDirection)", "modifiers": "@RequestMapping(value = BLOCKFACE_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> blockface(@RequestParam String onStreet, @RequestParam String crossStreetOne,\n            @RequestParam String crossStreetTwo, @RequestParam String borough,\n            @RequestParam(required = false) String boroughCrossStreetOne,\n            @RequestParam(required = false) String boroughCrossStreetTwo,\n            @RequestParam(required = false) String compassDirection)", "full_signature": "@RequestMapping(value = BLOCKFACE_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> blockface(@RequestParam String onStreet, @RequestParam String crossStreetOne,\n            @RequestParam String crossStreetTwo, @RequestParam String borough,\n            @RequestParam(required = false) String boroughCrossStreetOne,\n            @RequestParam(required = false) String boroughCrossStreetTwo,\n            @RequestParam(required = false) String compassDirection)", "class_method_signature": "RestController.blockface(@RequestParam String onStreet, @RequestParam String crossStreetOne,\n            @RequestParam String crossStreetTwo, @RequestParam String borough,\n            @RequestParam(required = false) String boroughCrossStreetOne,\n            @RequestParam(required = false) String boroughCrossStreetTwo,\n            @RequestParam(required = false) String compassDirection)", "testcase": false, "constructor": false}, {"identifier": "bbl", "parameters": "(@RequestParam String borough, @RequestParam String block, @RequestParam String lot)", "modifiers": "@RequestMapping(value = BBL_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> bbl(@RequestParam String borough, @RequestParam String block, @RequestParam String lot)", "full_signature": "@RequestMapping(value = BBL_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> bbl(@RequestParam String borough, @RequestParam String block, @RequestParam String lot)", "class_method_signature": "RestController.bbl(@RequestParam String borough, @RequestParam String block, @RequestParam String lot)", "testcase": false, "constructor": false}, {"identifier": "bin", "parameters": "(@RequestParam String bin)", "modifiers": "@RequestMapping(value = BIN_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> bin(@RequestParam String bin)", "full_signature": "@RequestMapping(value = BIN_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> bin(@RequestParam String bin)", "class_method_signature": "RestController.bin(@RequestParam String bin)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "(@RequestParam String name, @RequestParam(required = false, defaultValue = \"32\") Integer length, @RequestParam(required = false, defaultValue = \"S\") String format)", "modifiers": "@RequestMapping(value = NORMALIZE_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> normalize(@RequestParam String name, @RequestParam(required = false, defaultValue = \"32\") Integer length, @RequestParam(required = false, defaultValue = \"S\") String format)", "full_signature": "@RequestMapping(value = NORMALIZE_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> normalize(@RequestParam String name, @RequestParam(required = false, defaultValue = \"32\") Integer length, @RequestParam(required = false, defaultValue = \"S\") String format)", "class_method_signature": "RestController.normalize(@RequestParam String name, @RequestParam(required = false, defaultValue = \"32\") Integer length, @RequestParam(required = false, defaultValue = \"S\") String format)", "testcase": false, "constructor": false}, {"identifier": "streetcode", "parameters": "(@RequestParam String streetCode,\n            @RequestParam(required = false) String streetCodeTwo,\n            @RequestParam(required = false) String streetCodeThree,\n            @RequestParam(required = false, defaultValue = \"32\") Integer length,\n            @RequestParam(required = false, defaultValue = \"S\") String format)", "modifiers": "@RequestMapping(value = STREETCODE_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> streetcode(@RequestParam String streetCode,\n            @RequestParam(required = false) String streetCodeTwo,\n            @RequestParam(required = false) String streetCodeThree,\n            @RequestParam(required = false, defaultValue = \"32\") Integer length,\n            @RequestParam(required = false, defaultValue = \"S\") String format)", "full_signature": "@RequestMapping(value = STREETCODE_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> streetcode(@RequestParam String streetCode,\n            @RequestParam(required = false) String streetCodeTwo,\n            @RequestParam(required = false) String streetCodeThree,\n            @RequestParam(required = false, defaultValue = \"32\") Integer length,\n            @RequestParam(required = false, defaultValue = \"S\") String format)", "class_method_signature": "RestController.streetcode(@RequestParam String streetCode,\n            @RequestParam(required = false) String streetCodeTwo,\n            @RequestParam(required = false) String streetCodeThree,\n            @RequestParam(required = false, defaultValue = \"32\") Integer length,\n            @RequestParam(required = false, defaultValue = \"S\") String format)", "testcase": false, "constructor": false}, {"identifier": "geosupport", "parameters": "(@RequestParam Map<String, Object> params)", "modifiers": "@RequestMapping(value = GEOSUPPORT_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "signature": "Map<String, Object> geosupport(@RequestParam Map<String, Object> params)", "full_signature": "@RequestMapping(value = GEOSUPPORT_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> geosupport(@RequestParam Map<String, Object> params)", "class_method_signature": "RestController.geosupport(@RequestParam Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "version", "parameters": "()", "modifiers": "@RequestMapping(value = VERSION_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Version", "signature": "Version version()", "full_signature": "@RequestMapping(value = VERSION_URI, method = RequestMethod.GET) public @ResponseBody Version version()", "class_method_signature": "RestController.version()", "testcase": false, "constructor": false}, {"identifier": "handleBadRequest", "parameters": "(Exception exception,\n            HttpServletRequest req)", "modifiers": "private", "return": "BadRequest", "signature": "BadRequest handleBadRequest(Exception exception,\n            HttpServletRequest req)", "full_signature": "private BadRequest handleBadRequest(Exception exception,\n            HttpServletRequest req)", "class_method_signature": "RestController.handleBadRequest(Exception exception,\n            HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "handleMissingRequestParameter", "parameters": "(ServletRequestBindingException exception,\n            HttpServletRequest req)", "modifiers": "@ExceptionHandler(value = { MissingAnyOfOptionalServletRequestParametersException.class, MissingServletRequestParameterException.class }) public @ResponseBody", "return": "ResponseEntity<BadRequest>", "signature": "ResponseEntity<BadRequest> handleMissingRequestParameter(ServletRequestBindingException exception,\n            HttpServletRequest req)", "full_signature": "@ExceptionHandler(value = { MissingAnyOfOptionalServletRequestParametersException.class, MissingServletRequestParameterException.class }) public @ResponseBody ResponseEntity<BadRequest> handleMissingRequestParameter(ServletRequestBindingException exception,\n            HttpServletRequest req)", "class_method_signature": "RestController.handleMissingRequestParameter(ServletRequestBindingException exception,\n            HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "handleInvalidStreetCodeRequestParameter", "parameters": "(InvalidStreetCodeException exception,\n            HttpServletRequest req)", "modifiers": "@ExceptionHandler public @ResponseBody", "return": "ResponseEntity<BadRequest>", "signature": "ResponseEntity<BadRequest> handleInvalidStreetCodeRequestParameter(InvalidStreetCodeException exception,\n            HttpServletRequest req)", "full_signature": "@ExceptionHandler public @ResponseBody ResponseEntity<BadRequest> handleInvalidStreetCodeRequestParameter(InvalidStreetCodeException exception,\n            HttpServletRequest req)", "class_method_signature": "RestController.handleInvalidStreetCodeRequestParameter(InvalidStreetCodeException exception,\n            HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "setGeosupportService", "parameters": "(GeosupportService geosupportService)", "modifiers": "public", "return": "void", "signature": "void setGeosupportService(GeosupportService geosupportService)", "full_signature": "public void setGeosupportService(GeosupportService geosupportService)", "class_method_signature": "RestController.setGeosupportService(GeosupportService geosupportService)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/web/RestController.java"}, "focal_method": {"identifier": "bin", "parameters": "(@RequestParam String bin)", "modifiers": "@RequestMapping(value = BIN_URI, method = RequestMethod.GET) public @ResponseBody", "return": "Map<String, Object>", "body": "@RequestMapping(value = BIN_URI, method = RequestMethod.GET)\n    public @ResponseBody\n    Map<String, Object> bin(@RequestParam String bin)\n    {\n        logger.debug(\"bin[bin='{}']\", bin);\n        Map<String, Object> binMap = new HashMap<String, Object>();\n        binMap.put(BIN_OBJ, this.geosupportService.callFunctionBN(bin));\n        return binMap;\n    }", "signature": "Map<String, Object> bin(@RequestParam String bin)", "full_signature": "@RequestMapping(value = BIN_URI, method = RequestMethod.GET) public @ResponseBody Map<String, Object> bin(@RequestParam String bin)", "class_method_signature": "RestController.bin(@RequestParam String bin)", "testcase": false, "constructor": false, "invocations": ["debug", "put", "callFunctionBN"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}