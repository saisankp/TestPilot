{"test_class": {"identifier": "QueryResultsTest", "superclass": "", "interfaces": "", "fields": [], "file": "vars-jpa/src/test/java/vars/query/results/QueryResultsTest.java"}, "test_case": {"identifier": "testCopyData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCopyData() {\n        Map<String, List<Object>> data = new HashMap<>();\n        data.put(\"Foo\", Lists.newArrayList(1, 2, 3, 4));\n        data.put(\"Bar\", Lists.newArrayList(\"a\", \"b\", \"c\", \"d\"));\n        QueryResults queryResults = new QueryResults(data);\n        QueryResults copy = new QueryResults(queryResults.copyData());\n        assertEquals(queryResults.getColumns(), copy.getColumns());\n        assertEquals(queryResults.getRows(), copy.getRows());\n\n    }", "signature": "void testCopyData()", "full_signature": "@Test public void testCopyData()", "class_method_signature": "QueryResultsTest.testCopyData()", "testcase": true, "constructor": false, "invocations": ["put", "newArrayList", "put", "newArrayList", "copyData", "assertEquals", "getColumns", "getColumns", "assertEquals", "getRows", "getRows"]}, "focal_class": {"identifier": "QueryResults", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String, List<Object>> resultsMap = new TreeMap<>();", "modifier": "private", "type": "Map<String, List<Object>>", "declarator": "resultsMap = new TreeMap<>()", "var_name": "resultsMap"}, {"original_string": "private transient final Logger log = LoggerFactory.getLogger(getClass());", "modifier": "private transient final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(getClass())", "var_name": "log"}, {"original_string": "private transient final int rows;", "modifier": "private transient final", "type": "int", "declarator": "rows", "var_name": "rows"}], "methods": [{"identifier": "QueryResults", "parameters": "(Map<String, List<Object>> data)", "modifiers": "public", "return": "", "signature": " QueryResults(Map<String, List<Object>> data)", "full_signature": "public  QueryResults(Map<String, List<Object>> data)", "class_method_signature": "QueryResults.QueryResults(Map<String, List<Object>> data)", "testcase": false, "constructor": true}, {"identifier": "getValues", "parameters": "(String columnName)", "modifiers": "public", "return": "List", "signature": "List getValues(String columnName)", "full_signature": "public List getValues(String columnName)", "class_method_signature": "QueryResults.getValues(String columnName)", "testcase": false, "constructor": false}, {"identifier": "toRowOrientedData", "parameters": "()", "modifiers": "public", "return": "Tuple2<List<String>, List<String[]>>", "signature": "Tuple2<List<String>, List<String[]>> toRowOrientedData()", "full_signature": "public Tuple2<List<String>, List<String[]>> toRowOrientedData()", "class_method_signature": "QueryResults.toRowOrientedData()", "testcase": false, "constructor": false}, {"identifier": "toRowOrientedArray", "parameters": "()", "modifiers": "public", "return": "String[][]", "signature": "String[][] toRowOrientedArray()", "full_signature": "public String[][] toRowOrientedArray()", "class_method_signature": "QueryResults.toRowOrientedArray()", "testcase": false, "constructor": false}, {"identifier": "getColumnNames", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getColumnNames()", "full_signature": "public Set<String> getColumnNames()", "class_method_signature": "QueryResults.getColumnNames()", "testcase": false, "constructor": false}, {"identifier": "getRows", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRows()", "full_signature": "public int getRows()", "class_method_signature": "QueryResults.getRows()", "testcase": false, "constructor": false}, {"identifier": "getColumns", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColumns()", "full_signature": "public int getColumns()", "class_method_signature": "QueryResults.getColumns()", "testcase": false, "constructor": false}, {"identifier": "copyData", "parameters": "()", "modifiers": "public", "return": "Map<String, List<Object>>", "signature": "Map<String, List<Object>> copyData()", "full_signature": "public Map<String, List<Object>> copyData()", "class_method_signature": "QueryResults.copyData()", "testcase": false, "constructor": false}, {"identifier": "fromResultSet", "parameters": "(ResultSet resultSet)", "modifiers": "public static", "return": "QueryResults", "signature": "QueryResults fromResultSet(ResultSet resultSet)", "full_signature": "public static QueryResults fromResultSet(ResultSet resultSet)", "class_method_signature": "QueryResults.fromResultSet(ResultSet resultSet)", "testcase": false, "constructor": false}], "file": "vars-jpa/src/main/java/vars/query/results/QueryResults.java"}, "focal_method": {"identifier": "copyData", "parameters": "()", "modifiers": "public", "return": "Map<String, List<Object>>", "body": "public Map<String, List<Object>> copyData() {\n        Map<String, List<Object>> newMap = new TreeMap<>();\n        resultsMap.entrySet().stream()\n                .forEach(entry -> newMap.put(entry.getKey(), new ArrayList<>(entry.getValue())));\n        return newMap;\n    }", "signature": "Map<String, List<Object>> copyData()", "full_signature": "public Map<String, List<Object>> copyData()", "class_method_signature": "QueryResults.copyData()", "testcase": false, "constructor": false, "invocations": ["forEach", "stream", "entrySet", "put", "getKey", "getValue"]}, "repository": {"repo_id": 13933675, "url": "https://github.com/hohonuuli/vars", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 9, "size": 18273, "license": "licensed"}}