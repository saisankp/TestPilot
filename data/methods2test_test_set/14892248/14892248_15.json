{"test_class": {"identifier": "MessageLocalizationTest", "superclass": "", "interfaces": "", "fields": [], "file": "itext/src/test/java/com/itextpdf/text/error_messages/MessageLocalizationTest.java"}, "test_case": {"identifier": "testBackslashes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBackslashes() throws Exception{\n        String testPath = \"C:\\\\test\\\\file.txt\";\n        String rslt = MessageLocalization.getComposedMessage(\"1.not.found.as.file.or.resource\", testPath);\n        Assert.assertTrue(\"Result doesn't contain the test path\", rslt.contains(testPath));\n    }", "signature": "void testBackslashes()", "full_signature": "@Test public void testBackslashes()", "class_method_signature": "MessageLocalizationTest.testBackslashes()", "testcase": true, "constructor": false, "invocations": ["getComposedMessage", "assertTrue", "contains"]}, "focal_class": {"identifier": "MessageLocalization", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static HashMap<String, String> defaultLanguage = new HashMap<String, String>();", "modifier": "private static", "type": "HashMap<String, String>", "declarator": "defaultLanguage = new HashMap<String, String>()", "var_name": "defaultLanguage"}, {"original_string": "private static HashMap<String, String> currentLanguage;", "modifier": "private static", "type": "HashMap<String, String>", "declarator": "currentLanguage", "var_name": "currentLanguage"}, {"original_string": "private static final String BASE_PATH = \"com/itextpdf/text/l10n/error/\";", "modifier": "private static final", "type": "String", "declarator": "BASE_PATH = \"com/itextpdf/text/l10n/error/\"", "var_name": "BASE_PATH"}], "methods": [{"identifier": "MessageLocalization", "parameters": "()", "modifiers": "private", "return": "", "signature": " MessageLocalization()", "full_signature": "private  MessageLocalization()", "class_method_signature": "MessageLocalization.MessageLocalization()", "testcase": false, "constructor": true}, {"identifier": "getMessage", "parameters": "(String key)", "modifiers": "public static", "return": "String", "signature": "String getMessage(String key)", "full_signature": "public static String getMessage(String key)", "class_method_signature": "MessageLocalization.getMessage(String key)", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "(String key, boolean useDefaultLanguageIfMessageNotFound)", "modifiers": "public static", "return": "String", "signature": "String getMessage(String key, boolean useDefaultLanguageIfMessageNotFound)", "full_signature": "public static String getMessage(String key, boolean useDefaultLanguageIfMessageNotFound)", "class_method_signature": "MessageLocalization.getMessage(String key, boolean useDefaultLanguageIfMessageNotFound)", "testcase": false, "constructor": false}, {"identifier": "getComposedMessage", "parameters": "(String key, int p1)", "modifiers": "public static", "return": "String", "signature": "String getComposedMessage(String key, int p1)", "full_signature": "public static String getComposedMessage(String key, int p1)", "class_method_signature": "MessageLocalization.getComposedMessage(String key, int p1)", "testcase": false, "constructor": false}, {"identifier": "getComposedMessage", "parameters": "(final String key, final Object... param)", "modifiers": "public static", "return": "String", "signature": "String getComposedMessage(final String key, final Object... param)", "full_signature": "public static String getComposedMessage(final String key, final Object... param)", "class_method_signature": "MessageLocalization.getComposedMessage(final String key, final Object... param)", "testcase": false, "constructor": false}, {"identifier": "setLanguage", "parameters": "(String language, String country)", "modifiers": "public static", "return": "boolean", "signature": "boolean setLanguage(String language, String country)", "full_signature": "public static boolean setLanguage(String language, String country)", "class_method_signature": "MessageLocalization.setLanguage(String language, String country)", "testcase": false, "constructor": false}, {"identifier": "setMessages", "parameters": "(Reader r)", "modifiers": "public static", "return": "void", "signature": "void setMessages(Reader r)", "full_signature": "public static void setMessages(Reader r)", "class_method_signature": "MessageLocalization.setMessages(Reader r)", "testcase": false, "constructor": false}, {"identifier": "getLanguageMessages", "parameters": "(String language, String country)", "modifiers": "private static", "return": "HashMap<String, String>", "signature": "HashMap<String, String> getLanguageMessages(String language, String country)", "full_signature": "private static HashMap<String, String> getLanguageMessages(String language, String country)", "class_method_signature": "MessageLocalization.getLanguageMessages(String language, String country)", "testcase": false, "constructor": false}, {"identifier": "readLanguageStream", "parameters": "(InputStream is)", "modifiers": "private static", "return": "HashMap<String, String>", "signature": "HashMap<String, String> readLanguageStream(InputStream is)", "full_signature": "private static HashMap<String, String> readLanguageStream(InputStream is)", "class_method_signature": "MessageLocalization.readLanguageStream(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "readLanguageStream", "parameters": "(Reader r)", "modifiers": "private static", "return": "HashMap<String, String>", "signature": "HashMap<String, String> readLanguageStream(Reader r)", "full_signature": "private static HashMap<String, String> readLanguageStream(Reader r)", "class_method_signature": "MessageLocalization.readLanguageStream(Reader r)", "testcase": false, "constructor": false}], "file": "itext/src/main/java/com/itextpdf/text/error_messages/MessageLocalization.java"}, "focal_method": {"identifier": "getComposedMessage", "parameters": "(String key, int p1)", "modifiers": "public static", "return": "String", "body": "public static String getComposedMessage(String key, int p1) {\n        return getComposedMessage(key, String.valueOf(p1), null, null, null);\n    }", "signature": "String getComposedMessage(String key, int p1)", "full_signature": "public static String getComposedMessage(String key, int p1)", "class_method_signature": "MessageLocalization.getComposedMessage(String key, int p1)", "testcase": false, "constructor": false, "invocations": ["getComposedMessage", "valueOf"]}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}