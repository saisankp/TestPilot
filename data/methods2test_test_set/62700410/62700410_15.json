{"test_class": {"identifier": "ImageSparkTransformTest", "superclass": "", "interfaces": "", "fields": [], "file": "datavec-spark-inference-parent/datavec-spark-inference-model/src/test/java/org/datavec/spark/transform/ImageSparkTransformTest.java"}, "test_case": {"identifier": "testBatchImageSparkTransform", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBatchImageSparkTransform() throws Exception {\n        int seed = 12345;\n\n        File f0 = new ClassPathResource(\"/testimages/class1/A.jpg\").getFile();\n        File f1 = new ClassPathResource(\"/testimages/class1/B.png\").getFile();\n        File f2 = new ClassPathResource(\"/testimages/class1/C.jpg\").getFile();\n\n        BatchImageRecord batch = new BatchImageRecord();\n        batch.add(f0.toURI());\n        batch.add(f1.toURI());\n        batch.add(f2.toURI());\n\n        ImageTransformProcess imgTransformProcess = new ImageTransformProcess.Builder().seed(seed)\n                        .scaleImageTransform(10).cropImageTransform(5).build();\n\n        ImageSparkTransform imgSparkTransform = new ImageSparkTransform(imgTransformProcess);\n        Base64NDArrayBody body = imgSparkTransform.toArray(batch);\n\n        INDArray fromBase64 = Nd4jBase64.fromBase64(body.getNdarray());\n        System.out.println(\"Base 64ed array \" + fromBase64);\n        assertEquals(3, fromBase64.size(0));\n    }", "signature": "void testBatchImageSparkTransform()", "full_signature": "@Test public void testBatchImageSparkTransform()", "class_method_signature": "ImageSparkTransformTest.testBatchImageSparkTransform()", "testcase": true, "constructor": false, "invocations": ["getFile", "getFile", "getFile", "add", "toURI", "add", "toURI", "add", "toURI", "build", "cropImageTransform", "scaleImageTransform", "seed", "toArray", "fromBase64", "getNdarray", "println", "assertEquals", "size"]}, "focal_class": {"identifier": "ImageSparkTransform", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Getter\n    private ImageTransformProcess imageTransformProcess;", "modifier": "@Getter\n    private", "type": "ImageTransformProcess", "declarator": "imageTransformProcess", "var_name": "imageTransformProcess"}], "methods": [{"identifier": "toArray", "parameters": "(SingleImageRecord record)", "modifiers": "public", "return": "Base64NDArrayBody", "signature": "Base64NDArrayBody toArray(SingleImageRecord record)", "full_signature": "public Base64NDArrayBody toArray(SingleImageRecord record)", "class_method_signature": "ImageSparkTransform.toArray(SingleImageRecord record)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(BatchImageRecord batch)", "modifiers": "public", "return": "Base64NDArrayBody", "signature": "Base64NDArrayBody toArray(BatchImageRecord batch)", "full_signature": "public Base64NDArrayBody toArray(BatchImageRecord batch)", "class_method_signature": "ImageSparkTransform.toArray(BatchImageRecord batch)", "testcase": false, "constructor": false}], "file": "datavec-spark-inference-parent/datavec-spark-inference-model/src/main/java/org/datavec/spark/transform/ImageSparkTransform.java"}, "focal_method": {"identifier": "toArray", "parameters": "(SingleImageRecord record)", "modifiers": "public", "return": "Base64NDArrayBody", "body": "public Base64NDArrayBody toArray(SingleImageRecord record) throws IOException {\n        ImageWritable record2 = imageTransformProcess.transformFileUriToInput(record.getUri());\n        INDArray finalRecord = imageTransformProcess.executeArray(record2);\n\n        return new Base64NDArrayBody(Nd4jBase64.base64String(finalRecord));\n    }", "signature": "Base64NDArrayBody toArray(SingleImageRecord record)", "full_signature": "public Base64NDArrayBody toArray(SingleImageRecord record)", "class_method_signature": "ImageSparkTransform.toArray(SingleImageRecord record)", "testcase": false, "constructor": false, "invocations": ["transformFileUriToInput", "getUri", "executeArray", "base64String"]}, "repository": {"repo_id": 62700410, "url": "https://github.com/deeplearning4j/DataVec", "language": "Java", "is_fork": false, "fork_count": 174, "stargazer_count": 260, "size": 39842, "license": "licensed"}}