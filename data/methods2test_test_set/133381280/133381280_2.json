{"test_class": {"identifier": "MetricImporterUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "gateway/metrics/pipeline/src/test/java/com/alipay/sofa/lookout/gateway/metrics/pipeline/common/MetricImporterUtilsTest.java"}, "test_case": {"identifier": "testMergeWithExtraTags", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMergeWithExtraTags() {\n        Map<String, String> tags = new HashMap<>();\n        tags.put(\"app\", \"demo\");\n        tags.put(\"step\", \"10000\");\n        Metric metric = new Metric();\n        metric.getTags().put(\"a\", \"b\");\n        Metric m = MetricImporterUtils.mergeWithExtraTags(metric, tags);\n        Assert.assertEquals(3, m.getTags().size());\n    }", "signature": "void testMergeWithExtraTags()", "full_signature": "@Test public void testMergeWithExtraTags()", "class_method_signature": "MetricImporterUtilsTest.testMergeWithExtraTags()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "getTags", "mergeWithExtraTags", "assertEquals", "size", "getTags"]}, "focal_class": {"identifier": "MetricImporterUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MetricImporterUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MetricImporterUtils()", "full_signature": "private  MetricImporterUtils()", "class_method_signature": "MetricImporterUtils.MetricImporterUtils()", "testcase": false, "constructor": true}, {"identifier": "validExtraTags", "parameters": "(Map<String, String> extraTags)", "modifiers": "public static", "return": "void", "signature": "void validExtraTags(Map<String, String> extraTags)", "full_signature": "public static void validExtraTags(Map<String, String> extraTags)", "class_method_signature": "MetricImporterUtils.validExtraTags(Map<String, String> extraTags)", "testcase": false, "constructor": false}, {"identifier": "mergeWithExtraTags", "parameters": "(Metric metric, Map<String, String> extraTags)", "modifiers": "public static", "return": "Metric", "signature": "Metric mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "full_signature": "public static Metric mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "class_method_signature": "MetricImporterUtils.mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "testcase": false, "constructor": false}, {"identifier": "resolveExtraTagsFromURI", "parameters": "(String baseURIPath, String requestURI,\n                                               Map<String, String> map)", "modifiers": "public static", "return": "void", "signature": "void resolveExtraTagsFromURI(String baseURIPath, String requestURI,\n                                               Map<String, String> map)", "full_signature": "public static void resolveExtraTagsFromURI(String baseURIPath, String requestURI,\n                                               Map<String, String> map)", "class_method_signature": "MetricImporterUtils.resolveExtraTagsFromURI(String baseURIPath, String requestURI,\n                                               Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "resolveExtraTagsFromRequestHeaders", "parameters": "(ServerRequest request,\n                                                                         Map<String, String> map)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "full_signature": "public static Map<String, String> resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "class_method_signature": "MetricImporterUtils.resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "testcase": false, "constructor": false}], "file": "gateway/metrics/pipeline/src/main/java/com/alipay/sofa/lookout/gateway/metrics/pipeline/common/MetricImporterUtils.java"}, "focal_method": {"identifier": "mergeWithExtraTags", "parameters": "(Metric metric, Map<String, String> extraTags)", "modifiers": "public static", "return": "Metric", "body": "public static Metric mergeWithExtraTags(Metric metric, Map<String, String> extraTags) {\n        if (CollectionUtils.isEmpty(extraTags)) {\n            return metric;\n        }\n\n        // \u5982\u679cmetric\u672c\u8eab\u5df2\u7ecf\u6709\u7684tag, \u4e0d\u8981\u8986\u76d6\n        for (Map.Entry<String, String> e : extraTags.entrySet()) {\n            metric.getTags().putIfAbsent(e.getKey(), e.getValue());\n        }\n        return metric;\n    }", "signature": "Metric mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "full_signature": "public static Metric mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "class_method_signature": "MetricImporterUtils.mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "entrySet", "putIfAbsent", "getTags", "getKey", "getValue"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}