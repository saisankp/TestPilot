{"test_class": {"identifier": "RandomAccessFileOrArrayTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "byte[] data;", "modifier": "", "type": "byte[]", "declarator": "data", "var_name": "data"}, {"original_string": "RandomAccessFileOrArray rafoa;", "modifier": "", "type": "RandomAccessFileOrArray", "declarator": "rafoa", "var_name": "rafoa"}], "file": "itext/src/test/java/com/itextpdf/text/pdf/RandomAccessFileOrArrayTest.java"}, "test_case": {"identifier": "testSeek", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSeek() throws Exception {\n\t\tRandomAccessFileOrArray rafoa = new RandomAccessFileOrArray(new RandomAccessSourceFactory().createSource(data));\n\t\trafoa.seek(72);\n\t\tfor(int i = 72; i < data.length; i++){\n\t\t\tAssert.assertEquals(data[i], (byte)rafoa.read());\n\t\t}\n\t}", "signature": "void testSeek()", "full_signature": "@Test public void testSeek()", "class_method_signature": "RandomAccessFileOrArrayTest.testSeek()", "testcase": true, "constructor": false, "invocations": ["createSource", "seek", "assertEquals", "read"]}, "focal_class": {"identifier": "RandomAccessFileOrArray", "superclass": "", "interfaces": "implements DataInput", "fields": [{"original_string": "private final RandomAccessSource byteSource;", "modifier": "private final", "type": "RandomAccessSource", "declarator": "byteSource", "var_name": "byteSource"}, {"original_string": "private long byteSourcePosition;", "modifier": "private", "type": "long", "declarator": "byteSourcePosition", "var_name": "byteSourcePosition"}, {"original_string": "private byte back;", "modifier": "private", "type": "byte", "declarator": "back", "var_name": "back"}, {"original_string": "private boolean isBack = false;", "modifier": "private", "type": "boolean", "declarator": "isBack = false", "var_name": "isBack"}], "methods": [{"identifier": "RandomAccessFileOrArray", "parameters": "(String filename)", "modifiers": "@Deprecated public", "return": "", "signature": " RandomAccessFileOrArray(String filename)", "full_signature": "@Deprecated public  RandomAccessFileOrArray(String filename)", "class_method_signature": "RandomAccessFileOrArray.RandomAccessFileOrArray(String filename)", "testcase": false, "constructor": true}, {"identifier": "RandomAccessFileOrArray", "parameters": "(RandomAccessFileOrArray source)", "modifiers": "@Deprecated public", "return": "", "signature": " RandomAccessFileOrArray(RandomAccessFileOrArray source)", "full_signature": "@Deprecated public  RandomAccessFileOrArray(RandomAccessFileOrArray source)", "class_method_signature": "RandomAccessFileOrArray.RandomAccessFileOrArray(RandomAccessFileOrArray source)", "testcase": false, "constructor": true}, {"identifier": "createView", "parameters": "()", "modifiers": "public", "return": "RandomAccessFileOrArray", "signature": "RandomAccessFileOrArray createView()", "full_signature": "public RandomAccessFileOrArray createView()", "class_method_signature": "RandomAccessFileOrArray.createView()", "testcase": false, "constructor": false}, {"identifier": "createSourceView", "parameters": "()", "modifiers": "public", "return": "RandomAccessSource", "signature": "RandomAccessSource createSourceView()", "full_signature": "public RandomAccessSource createSourceView()", "class_method_signature": "RandomAccessFileOrArray.createSourceView()", "testcase": false, "constructor": false}, {"identifier": "RandomAccessFileOrArray", "parameters": "(RandomAccessSource byteSource)", "modifiers": "public", "return": "", "signature": " RandomAccessFileOrArray(RandomAccessSource byteSource)", "full_signature": "public  RandomAccessFileOrArray(RandomAccessSource byteSource)", "class_method_signature": "RandomAccessFileOrArray.RandomAccessFileOrArray(RandomAccessSource byteSource)", "testcase": false, "constructor": true}, {"identifier": "RandomAccessFileOrArray", "parameters": "(String filename, boolean forceRead, boolean plainRandomAccess)", "modifiers": "@Deprecated public", "return": "", "signature": " RandomAccessFileOrArray(String filename, boolean forceRead, boolean plainRandomAccess)", "full_signature": "@Deprecated public  RandomAccessFileOrArray(String filename, boolean forceRead, boolean plainRandomAccess)", "class_method_signature": "RandomAccessFileOrArray.RandomAccessFileOrArray(String filename, boolean forceRead, boolean plainRandomAccess)", "testcase": false, "constructor": true}, {"identifier": "RandomAccessFileOrArray", "parameters": "(URL url)", "modifiers": "@Deprecated public", "return": "", "signature": " RandomAccessFileOrArray(URL url)", "full_signature": "@Deprecated public  RandomAccessFileOrArray(URL url)", "class_method_signature": "RandomAccessFileOrArray.RandomAccessFileOrArray(URL url)", "testcase": false, "constructor": true}, {"identifier": "RandomAccessFileOrArray", "parameters": "(InputStream is)", "modifiers": "@Deprecated public", "return": "", "signature": " RandomAccessFileOrArray(InputStream is)", "full_signature": "@Deprecated public  RandomAccessFileOrArray(InputStream is)", "class_method_signature": "RandomAccessFileOrArray.RandomAccessFileOrArray(InputStream is)", "testcase": false, "constructor": true}, {"identifier": "RandomAccessFileOrArray", "parameters": "(byte arrayIn[])", "modifiers": "@Deprecated public", "return": "", "signature": " RandomAccessFileOrArray(byte arrayIn[])", "full_signature": "@Deprecated public  RandomAccessFileOrArray(byte arrayIn[])", "class_method_signature": "RandomAccessFileOrArray.RandomAccessFileOrArray(byte arrayIn[])", "testcase": false, "constructor": true}, {"identifier": "getByteSource", "parameters": "()", "modifiers": "@Deprecated //TODO: I'm only putting this in here for backwards compatability with PdfReader(RAFOA, byte[]). Once we get rid of the //PdfReader constructor, we can get rid of this method as well protected", "return": "RandomAccessSource", "signature": "RandomAccessSource getByteSource()", "full_signature": "@Deprecated //TODO: I'm only putting this in here for backwards compatability with PdfReader(RAFOA, byte[]). Once we get rid of the //PdfReader constructor, we can get rid of this method as well protected RandomAccessSource getByteSource()", "class_method_signature": "RandomAccessFileOrArray.getByteSource()", "testcase": false, "constructor": false}, {"identifier": "pushBack", "parameters": "(byte b)", "modifiers": "public", "return": "void", "signature": "void pushBack(byte b)", "full_signature": "public void pushBack(byte b)", "class_method_signature": "RandomAccessFileOrArray.pushBack(byte b)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int read()", "full_signature": "public int read()", "class_method_signature": "RandomAccessFileOrArray.read()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte[] b, int off, int len)", "modifiers": "public", "return": "int", "signature": "int read(byte[] b, int off, int len)", "full_signature": "public int read(byte[] b, int off, int len)", "class_method_signature": "RandomAccessFileOrArray.read(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte b[])", "modifiers": "public", "return": "int", "signature": "int read(byte b[])", "full_signature": "public int read(byte b[])", "class_method_signature": "RandomAccessFileOrArray.read(byte b[])", "testcase": false, "constructor": false}, {"identifier": "readFully", "parameters": "(byte b[])", "modifiers": "public", "return": "void", "signature": "void readFully(byte b[])", "full_signature": "public void readFully(byte b[])", "class_method_signature": "RandomAccessFileOrArray.readFully(byte b[])", "testcase": false, "constructor": false}, {"identifier": "readFully", "parameters": "(byte b[], int off, int len)", "modifiers": "public", "return": "void", "signature": "void readFully(byte b[], int off, int len)", "full_signature": "public void readFully(byte b[], int off, int len)", "class_method_signature": "RandomAccessFileOrArray.readFully(byte b[], int off, int len)", "testcase": false, "constructor": false}, {"identifier": "skip", "parameters": "(long n)", "modifiers": "public", "return": "long", "signature": "long skip(long n)", "full_signature": "public long skip(long n)", "class_method_signature": "RandomAccessFileOrArray.skip(long n)", "testcase": false, "constructor": false}, {"identifier": "skipBytes", "parameters": "(int n)", "modifiers": "public", "return": "int", "signature": "int skipBytes(int n)", "full_signature": "public int skipBytes(int n)", "class_method_signature": "RandomAccessFileOrArray.skipBytes(int n)", "testcase": false, "constructor": false}, {"identifier": "reOpen", "parameters": "()", "modifiers": "@Deprecated //TODO: remove all references to this call, then remove this method public", "return": "void", "signature": "void reOpen()", "full_signature": "@Deprecated //TODO: remove all references to this call, then remove this method public void reOpen()", "class_method_signature": "RandomAccessFileOrArray.reOpen()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "RandomAccessFileOrArray.close()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long length()", "full_signature": "public long length()", "class_method_signature": "RandomAccessFileOrArray.length()", "testcase": false, "constructor": false}, {"identifier": "seek", "parameters": "(long pos)", "modifiers": "public", "return": "void", "signature": "void seek(long pos)", "full_signature": "public void seek(long pos)", "class_method_signature": "RandomAccessFileOrArray.seek(long pos)", "testcase": false, "constructor": false}, {"identifier": "getFilePointer", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getFilePointer()", "full_signature": "public long getFilePointer()", "class_method_signature": "RandomAccessFileOrArray.getFilePointer()", "testcase": false, "constructor": false}, {"identifier": "readBoolean", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean readBoolean()", "full_signature": "public boolean readBoolean()", "class_method_signature": "RandomAccessFileOrArray.readBoolean()", "testcase": false, "constructor": false}, {"identifier": "readByte", "parameters": "()", "modifiers": "public", "return": "byte", "signature": "byte readByte()", "full_signature": "public byte readByte()", "class_method_signature": "RandomAccessFileOrArray.readByte()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedByte", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readUnsignedByte()", "full_signature": "public int readUnsignedByte()", "class_method_signature": "RandomAccessFileOrArray.readUnsignedByte()", "testcase": false, "constructor": false}, {"identifier": "readShort", "parameters": "()", "modifiers": "public", "return": "short", "signature": "short readShort()", "full_signature": "public short readShort()", "class_method_signature": "RandomAccessFileOrArray.readShort()", "testcase": false, "constructor": false}, {"identifier": "readShortLE", "parameters": "()", "modifiers": "public final", "return": "short", "signature": "short readShortLE()", "full_signature": "public final short readShortLE()", "class_method_signature": "RandomAccessFileOrArray.readShortLE()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedShort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readUnsignedShort()", "full_signature": "public int readUnsignedShort()", "class_method_signature": "RandomAccessFileOrArray.readUnsignedShort()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedShortLE", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int readUnsignedShortLE()", "full_signature": "public final int readUnsignedShortLE()", "class_method_signature": "RandomAccessFileOrArray.readUnsignedShortLE()", "testcase": false, "constructor": false}, {"identifier": "readChar", "parameters": "()", "modifiers": "public", "return": "char", "signature": "char readChar()", "full_signature": "public char readChar()", "class_method_signature": "RandomAccessFileOrArray.readChar()", "testcase": false, "constructor": false}, {"identifier": "readCharLE", "parameters": "()", "modifiers": "public final", "return": "char", "signature": "char readCharLE()", "full_signature": "public final char readCharLE()", "class_method_signature": "RandomAccessFileOrArray.readCharLE()", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readInt()", "full_signature": "public int readInt()", "class_method_signature": "RandomAccessFileOrArray.readInt()", "testcase": false, "constructor": false}, {"identifier": "readIntLE", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int readIntLE()", "full_signature": "public final int readIntLE()", "class_method_signature": "RandomAccessFileOrArray.readIntLE()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedInt", "parameters": "()", "modifiers": "public final", "return": "long", "signature": "long readUnsignedInt()", "full_signature": "public final long readUnsignedInt()", "class_method_signature": "RandomAccessFileOrArray.readUnsignedInt()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedIntLE", "parameters": "()", "modifiers": "public final", "return": "long", "signature": "long readUnsignedIntLE()", "full_signature": "public final long readUnsignedIntLE()", "class_method_signature": "RandomAccessFileOrArray.readUnsignedIntLE()", "testcase": false, "constructor": false}, {"identifier": "readLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long readLong()", "full_signature": "public long readLong()", "class_method_signature": "RandomAccessFileOrArray.readLong()", "testcase": false, "constructor": false}, {"identifier": "readLongLE", "parameters": "()", "modifiers": "public final", "return": "long", "signature": "long readLongLE()", "full_signature": "public final long readLongLE()", "class_method_signature": "RandomAccessFileOrArray.readLongLE()", "testcase": false, "constructor": false}, {"identifier": "readFloat", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float readFloat()", "full_signature": "public float readFloat()", "class_method_signature": "RandomAccessFileOrArray.readFloat()", "testcase": false, "constructor": false}, {"identifier": "readFloatLE", "parameters": "()", "modifiers": "public final", "return": "float", "signature": "float readFloatLE()", "full_signature": "public final float readFloatLE()", "class_method_signature": "RandomAccessFileOrArray.readFloatLE()", "testcase": false, "constructor": false}, {"identifier": "readDouble", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double readDouble()", "full_signature": "public double readDouble()", "class_method_signature": "RandomAccessFileOrArray.readDouble()", "testcase": false, "constructor": false}, {"identifier": "readDoubleLE", "parameters": "()", "modifiers": "public final", "return": "double", "signature": "double readDoubleLE()", "full_signature": "public final double readDoubleLE()", "class_method_signature": "RandomAccessFileOrArray.readDoubleLE()", "testcase": false, "constructor": false}, {"identifier": "readLine", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String readLine()", "full_signature": "public String readLine()", "class_method_signature": "RandomAccessFileOrArray.readLine()", "testcase": false, "constructor": false}, {"identifier": "readUTF", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String readUTF()", "full_signature": "public String readUTF()", "class_method_signature": "RandomAccessFileOrArray.readUTF()", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "(int length, String encoding)", "modifiers": "public", "return": "String", "signature": "String readString(int length, String encoding)", "full_signature": "public String readString(int length, String encoding)", "class_method_signature": "RandomAccessFileOrArray.readString(int length, String encoding)", "testcase": false, "constructor": false}], "file": "itext/src/main/java/com/itextpdf/text/pdf/RandomAccessFileOrArray.java"}, "focal_method": {"identifier": "seek", "parameters": "(long pos)", "modifiers": "public", "return": "void", "body": "public void seek(long pos) throws IOException {\n    \tbyteSourcePosition = pos;\n    \tisBack = false;\n    }", "signature": "void seek(long pos)", "full_signature": "public void seek(long pos)", "class_method_signature": "RandomAccessFileOrArray.seek(long pos)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}