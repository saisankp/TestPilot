{"test_class": {"identifier": "TableOfContentsCreatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-sambox/src/test/java/org/sejda/impl/sambox/component/TableOfContentsCreatorTest.java"}, "test_case": {"identifier": "testTocNumberOfPagesNoToc", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTocNumberOfPagesNoToc() {\n        MergeParameters params = new MergeParameters();\n        params.setTableOfContentsPolicy(ToCPolicy.NONE);\n        params.addInput(new PdfMergeInput(mock(PdfFileSource.class)));\n        TableOfContentsCreator victim = new TableOfContentsCreator(params, new PDDocument());\n        assertEquals(0, victim.tocNumberOfPages());\n    }", "signature": "void testTocNumberOfPagesNoToc()", "full_signature": "@Test public void testTocNumberOfPagesNoToc()", "class_method_signature": "TableOfContentsCreatorTest.testTocNumberOfPagesNoToc()", "testcase": true, "constructor": false, "invocations": ["setTableOfContentsPolicy", "addInput", "mock", "assertEquals", "tocNumberOfPages"]}, "focal_class": {"identifier": "TableOfContentsCreator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TableOfContentsCreator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TableOfContentsCreator.class)", "var_name": "LOG"}, {"original_string": "private static final int DEFAULT_FONT_SIZE = 14;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_FONT_SIZE = 14", "var_name": "DEFAULT_FONT_SIZE"}, {"original_string": "private static final int DEFAULT_MARGIN = 72;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MARGIN = 72", "var_name": "DEFAULT_MARGIN"}, {"original_string": "private static final String SEPARATOR = \"  \";", "modifier": "private static final", "type": "String", "declarator": "SEPARATOR = \"  \"", "var_name": "SEPARATOR"}, {"original_string": "private final Deque<ToCItem> items = new LinkedList<>();", "modifier": "private final", "type": "Deque<ToCItem>", "declarator": "items = new LinkedList<>()", "var_name": "items"}, {"original_string": "private PDDocument document;", "modifier": "private", "type": "PDDocument", "declarator": "document", "var_name": "document"}, {"original_string": "private PDRectangle pageSize = null;", "modifier": "private", "type": "PDRectangle", "declarator": "pageSize = null", "var_name": "pageSize"}, {"original_string": "private float fontSize = DEFAULT_FONT_SIZE;", "modifier": "private", "type": "float", "declarator": "fontSize = DEFAULT_FONT_SIZE", "var_name": "fontSize"}, {"original_string": "private float margin = DEFAULT_MARGIN;", "modifier": "private", "type": "float", "declarator": "margin = DEFAULT_MARGIN", "var_name": "margin"}, {"original_string": "private PDFont font = PDType1Font.HELVETICA;", "modifier": "private", "type": "PDFont", "declarator": "font = PDType1Font.HELVETICA", "var_name": "font"}, {"original_string": "private float lineHeight;", "modifier": "private", "type": "float", "declarator": "lineHeight", "var_name": "lineHeight"}, {"original_string": "private int maxRowsPerPage;", "modifier": "private", "type": "int", "declarator": "maxRowsPerPage", "var_name": "maxRowsPerPage"}, {"original_string": "private int tocNumberOfPages;", "modifier": "private", "type": "int", "declarator": "tocNumberOfPages", "var_name": "tocNumberOfPages"}, {"original_string": "private MergeParameters params;", "modifier": "private", "type": "MergeParameters", "declarator": "params", "var_name": "params"}, {"original_string": "private PageTextWriter writer;", "modifier": "private", "type": "PageTextWriter", "declarator": "writer", "var_name": "writer"}], "methods": [{"identifier": "TableOfContentsCreator", "parameters": "(MergeParameters params, PDDocument document)", "modifiers": "public", "return": "", "signature": " TableOfContentsCreator(MergeParameters params, PDDocument document)", "full_signature": "public  TableOfContentsCreator(MergeParameters params, PDDocument document)", "class_method_signature": "TableOfContentsCreator.TableOfContentsCreator(MergeParameters params, PDDocument document)", "testcase": false, "constructor": true}, {"identifier": "appendItem", "parameters": "(String text, long pageNumber, PDPage page)", "modifiers": "public", "return": "void", "signature": "void appendItem(String text, long pageNumber, PDPage page)", "full_signature": "public void appendItem(String text, long pageNumber, PDPage page)", "class_method_signature": "TableOfContentsCreator.appendItem(String text, long pageNumber, PDPage page)", "testcase": false, "constructor": false}, {"identifier": "linkAnnotationFor", "parameters": "(PDPage importedPage)", "modifiers": "private", "return": "PDAnnotationLink", "signature": "PDAnnotationLink linkAnnotationFor(PDPage importedPage)", "full_signature": "private PDAnnotationLink linkAnnotationFor(PDPage importedPage)", "class_method_signature": "TableOfContentsCreator.linkAnnotationFor(PDPage importedPage)", "testcase": false, "constructor": false}, {"identifier": "addToC", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void addToC()", "full_signature": "public void addToC()", "class_method_signature": "TableOfContentsCreator.addToC()", "testcase": false, "constructor": false}, {"identifier": "addToC", "parameters": "(int beforePageNumber)", "modifiers": "public", "return": "void", "signature": "void addToC(int beforePageNumber)", "full_signature": "public void addToC(int beforePageNumber)", "class_method_signature": "TableOfContentsCreator.addToC(int beforePageNumber)", "testcase": false, "constructor": false}, {"identifier": "generateToC", "parameters": "()", "modifiers": "private", "return": "LinkedList<PDPage>", "signature": "LinkedList<PDPage> generateToC()", "full_signature": "private LinkedList<PDPage> generateToC()", "class_method_signature": "TableOfContentsCreator.generateToC()", "testcase": false, "constructor": false}, {"identifier": "writeText", "parameters": "(PDPage page, String s, float x, float y)", "modifiers": "private", "return": "void", "signature": "void writeText(PDPage page, String s, float x, float y)", "full_signature": "private void writeText(PDPage page, String s, float x, float y)", "class_method_signature": "TableOfContentsCreator.writeText(PDPage page, String s, float x, float y)", "testcase": false, "constructor": false}, {"identifier": "multipleLinesIfRequired", "parameters": "(String text, float separatingLineEndingX, float separatorWidth)", "modifiers": "private", "return": "List<String>", "signature": "List<String> multipleLinesIfRequired(String text, float separatingLineEndingX, float separatorWidth)", "full_signature": "private List<String> multipleLinesIfRequired(String text, float separatingLineEndingX, float separatorWidth)", "class_method_signature": "TableOfContentsCreator.multipleLinesIfRequired(String text, float separatingLineEndingX, float separatorWidth)", "testcase": false, "constructor": false}, {"identifier": "createPage", "parameters": "(LinkedList<PDPage> pages)", "modifiers": "private", "return": "PDPage", "signature": "PDPage createPage(LinkedList<PDPage> pages)", "full_signature": "private PDPage createPage(LinkedList<PDPage> pages)", "class_method_signature": "TableOfContentsCreator.createPage(LinkedList<PDPage> pages)", "testcase": false, "constructor": false}, {"identifier": "getSeparatingLineEndingX", "parameters": "(float separatorWidth, long indexPages)", "modifiers": "private", "return": "float", "signature": "float getSeparatingLineEndingX(float separatorWidth, long indexPages)", "full_signature": "private float getSeparatingLineEndingX(float separatorWidth, long indexPages)", "class_method_signature": "TableOfContentsCreator.getSeparatingLineEndingX(float separatorWidth, long indexPages)", "testcase": false, "constructor": false}, {"identifier": "getPageNumberX", "parameters": "(float separatorWidth, long pageNumber)", "modifiers": "private", "return": "float", "signature": "float getPageNumberX(float separatorWidth, long pageNumber)", "full_signature": "private float getPageNumberX(float separatorWidth, long pageNumber)", "class_method_signature": "TableOfContentsCreator.getPageNumberX(float separatorWidth, long pageNumber)", "testcase": false, "constructor": false}, {"identifier": "stringLength", "parameters": "(String text)", "modifiers": "private", "return": "float", "signature": "float stringLength(String text)", "full_signature": "private float stringLength(String text)", "class_method_signature": "TableOfContentsCreator.stringLength(String text)", "testcase": false, "constructor": false}, {"identifier": "hasToc", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasToc()", "full_signature": "public boolean hasToc()", "class_method_signature": "TableOfContentsCreator.hasToc()", "testcase": false, "constructor": false}, {"identifier": "shouldGenerateToC", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean shouldGenerateToC()", "full_signature": "public boolean shouldGenerateToC()", "class_method_signature": "TableOfContentsCreator.shouldGenerateToC()", "testcase": false, "constructor": false}, {"identifier": "pageSizeIfNotSet", "parameters": "(PDRectangle pageSize)", "modifiers": "public", "return": "void", "signature": "void pageSizeIfNotSet(PDRectangle pageSize)", "full_signature": "public void pageSizeIfNotSet(PDRectangle pageSize)", "class_method_signature": "TableOfContentsCreator.pageSizeIfNotSet(PDRectangle pageSize)", "testcase": false, "constructor": false}, {"identifier": "recalculateDimensions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void recalculateDimensions()", "full_signature": "private void recalculateDimensions()", "class_method_signature": "TableOfContentsCreator.recalculateDimensions()", "testcase": false, "constructor": false}, {"identifier": "pageSize", "parameters": "()", "modifiers": "private", "return": "PDRectangle", "signature": "PDRectangle pageSize()", "full_signature": "private PDRectangle pageSize()", "class_method_signature": "TableOfContentsCreator.pageSize()", "testcase": false, "constructor": false}, {"identifier": "getFontSize", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getFontSize()", "full_signature": "public float getFontSize()", "class_method_signature": "TableOfContentsCreator.getFontSize()", "testcase": false, "constructor": false}, {"identifier": "tocNumberOfPages", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long tocNumberOfPages()", "full_signature": "public long tocNumberOfPages()", "class_method_signature": "TableOfContentsCreator.tocNumberOfPages()", "testcase": false, "constructor": false}], "file": "sejda-sambox/src/main/java/org/sejda/impl/sambox/component/TableOfContentsCreator.java"}, "focal_method": {"identifier": "tocNumberOfPages", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long tocNumberOfPages() {\n        return tocNumberOfPages;\n    }", "signature": "long tocNumberOfPages()", "full_signature": "public long tocNumberOfPages()", "class_method_signature": "TableOfContentsCreator.tocNumberOfPages()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}