{"test_class": {"identifier": "FastInfosetDecompressorProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONTENT_TYPE = \"Content-Type\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE = \"Content-Type\"", "var_name": "CONTENT_TYPE"}, {"original_string": "private static final String FAST_INFO_SET = \"fastinfoset\";", "modifier": "private static final", "type": "String", "declarator": "FAST_INFO_SET = \"fastinfoset\"", "var_name": "FAST_INFO_SET"}, {"original_string": "@Mock\n    private WilmaHttpEntity entity;", "modifier": "@Mock\n    private", "type": "WilmaHttpEntity", "declarator": "entity", "var_name": "entity"}, {"original_string": "@Mock\n    private FastInfosetCompressionService fastinfosetDecompressor;", "modifier": "@Mock\n    private", "type": "FastInfosetCompressionService", "declarator": "fastinfosetDecompressor", "var_name": "fastinfosetDecompressor"}, {"original_string": "@Mock\n    private InputStream inputStream;", "modifier": "@Mock\n    private", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "@Mock\n    private ByteArrayOutputStream body;", "modifier": "@Mock\n    private", "type": "ByteArrayOutputStream", "declarator": "body", "var_name": "body"}, {"original_string": "@InjectMocks\n    private FastInfosetDecompressorProcessor underTest;", "modifier": "@InjectMocks\n    private", "type": "FastInfosetDecompressorProcessor", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-core/src/test/java/com/epam/wilma/core/processor/entity/FastInfosetDecompressorProcessorTest.java"}, "test_case": {"identifier": "testProcessShouldCallDecompressWhenFIDecompressionNeeded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessShouldCallDecompressWhenFIDecompressionNeeded() throws ApplicationException {\n        //GIVEN\n        given(entity.getHeader(CONTENT_TYPE)).willReturn(FAST_INFO_SET);\n        given(entity.getInputStream()).willReturn(inputStream);\n        given(fastinfosetDecompressor.decompress(inputStream)).willReturn(body);\n        //WHEN\n        underTest.process(entity);\n        //THEN\n        verify(fastinfosetDecompressor).decompress(inputStream);\n    }", "signature": "void testProcessShouldCallDecompressWhenFIDecompressionNeeded()", "full_signature": "@Test public void testProcessShouldCallDecompressWhenFIDecompressionNeeded()", "class_method_signature": "FastInfosetDecompressorProcessorTest.testProcessShouldCallDecompressWhenFIDecompressionNeeded()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getHeader", "willReturn", "given", "getInputStream", "willReturn", "given", "decompress", "process", "decompress", "verify"]}, "focal_class": {"identifier": "FastInfosetDecompressorProcessor", "superclass": "extends ProcessorBase", "interfaces": "", "fields": [{"original_string": "private static final String CONTENT_TYPE = \"Content-Type\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE = \"Content-Type\"", "var_name": "CONTENT_TYPE"}, {"original_string": "private static final String FAST_INFO_SET = \"fastinfoset\";", "modifier": "private static final", "type": "String", "declarator": "FAST_INFO_SET = \"fastinfoset\"", "var_name": "FAST_INFO_SET"}, {"original_string": "@Autowired\n    private FastInfosetCompressionService fastinfosetDecompressor;", "modifier": "@Autowired\n    private", "type": "FastInfosetCompressionService", "declarator": "fastinfosetDecompressor", "var_name": "fastinfosetDecompressor"}], "methods": [{"identifier": "process", "parameters": "(final WilmaHttpEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void process(final WilmaHttpEntity entity)", "full_signature": "@Override public void process(final WilmaHttpEntity entity)", "class_method_signature": "FastInfosetDecompressorProcessor.process(final WilmaHttpEntity entity)", "testcase": false, "constructor": false}, {"identifier": "isContentFISCompressed", "parameters": "(final WilmaHttpEntity wilmaHttpEntity)", "modifiers": "private", "return": "boolean", "signature": "boolean isContentFISCompressed(final WilmaHttpEntity wilmaHttpEntity)", "full_signature": "private boolean isContentFISCompressed(final WilmaHttpEntity wilmaHttpEntity)", "class_method_signature": "FastInfosetDecompressorProcessor.isContentFISCompressed(final WilmaHttpEntity wilmaHttpEntity)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-core/src/main/java/com/epam/wilma/core/processor/entity/FastInfosetDecompressorProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(final WilmaHttpEntity entity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final WilmaHttpEntity entity) {\n        if (isContentFISCompressed(entity)) {\n            ByteArrayOutputStream compressedBody = fastinfosetDecompressor.decompress(entity.getInputStream());\n            entity.setBody(compressedBody.toString());\n        }\n    }", "signature": "void process(final WilmaHttpEntity entity)", "full_signature": "@Override public void process(final WilmaHttpEntity entity)", "class_method_signature": "FastInfosetDecompressorProcessor.process(final WilmaHttpEntity entity)", "testcase": false, "constructor": false, "invocations": ["isContentFISCompressed", "decompress", "getInputStream", "setBody", "toString"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}