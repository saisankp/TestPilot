{"test_class": {"identifier": "AmplNetworkWriterTest", "superclass": "extends AbstractConverterTest", "interfaces": "", "fields": [], "file": "ampl-converter/src/test/java/com/powsybl/ampl/converter/AmplNetworkWriterTest.java"}, "test_case": {"identifier": "writeCurrentLimits", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writeCurrentLimits() throws IOException {\n        Network network = EurostagTutorialExample1Factory.createWithCurrentLimits();\n\n        MemDataSource dataSource = new MemDataSource();\n        export(network, dataSource);\n\n        assertEqualsToRef(dataSource, \"_network_limits\", \"inputs/current-limits-test-case.txt\");\n    }", "signature": "void writeCurrentLimits()", "full_signature": "@Test public void writeCurrentLimits()", "class_method_signature": "AmplNetworkWriterTest.writeCurrentLimits()", "testcase": true, "constructor": false, "invocations": ["createWithCurrentLimits", "export", "assertEqualsToRef"]}, "focal_class": {"identifier": "AmplNetworkWriter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(AmplNetworkWriter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AmplNetworkWriter.class)", "var_name": "LOGGER"}, {"original_string": "private static final String XNODE_COUNTRY_NAME = \"XNODE\";", "modifier": "private static final", "type": "String", "declarator": "XNODE_COUNTRY_NAME = \"XNODE\"", "var_name": "XNODE_COUNTRY_NAME"}, {"original_string": "private static final String FAULT = \"fault\";", "modifier": "private static final", "type": "String", "declarator": "FAULT = \"fault\"", "var_name": "FAULT"}, {"original_string": "private static final String DESCRIPTION = \"description\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"description\"", "var_name": "DESCRIPTION"}, {"original_string": "private static final String SUBSTATION = \"substation\";", "modifier": "private static final", "type": "String", "declarator": "SUBSTATION = \"substation\"", "var_name": "SUBSTATION"}, {"original_string": "private static final String TARGET_V = \"targetV (pu)\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_V = \"targetV (pu)\"", "var_name": "TARGET_V"}, {"original_string": "private static final String TARGET_Q = \"targetQ (MVar)\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_Q = \"targetQ (MVar)\"", "var_name": "TARGET_Q"}, {"original_string": "private static final String CON_BUS = \"con. bus\";", "modifier": "private static final", "type": "String", "declarator": "CON_BUS = \"con. bus\"", "var_name": "CON_BUS"}, {"original_string": "private static final String MINP = \"minP (MW)\";", "modifier": "private static final", "type": "String", "declarator": "MINP = \"minP (MW)\"", "var_name": "MINP"}, {"original_string": "private static final String MAXP = \"maxP (MW)\";", "modifier": "private static final", "type": "String", "declarator": "MAXP = \"maxP (MW)\"", "var_name": "MAXP"}, {"original_string": "private static final String V_REGUL = \"v regul.\";", "modifier": "private static final", "type": "String", "declarator": "V_REGUL = \"v regul.\"", "var_name": "V_REGUL"}, {"original_string": "private static final String ACTIVE_POWER = \"P (MW)\";", "modifier": "private static final", "type": "String", "declarator": "ACTIVE_POWER = \"P (MW)\"", "var_name": "ACTIVE_POWER"}, {"original_string": "private static final String REACTIVE_POWER = \"Q (MVar)\";", "modifier": "private static final", "type": "String", "declarator": "REACTIVE_POWER = \"Q (MVar)\"", "var_name": "REACTIVE_POWER"}, {"original_string": "private static final String MIN_Q_MAX_P = \"minQmaxP (MVar)\";", "modifier": "private static final", "type": "String", "declarator": "MIN_Q_MAX_P = \"minQmaxP (MVar)\"", "var_name": "MIN_Q_MAX_P"}, {"original_string": "private static final String MIN_Q0 = \"minQ0 (MVar)\";", "modifier": "private static final", "type": "String", "declarator": "MIN_Q0 = \"minQ0 (MVar)\"", "var_name": "MIN_Q0"}, {"original_string": "private static final String MIN_Q_MIN_P = \"minQminP (MVar)\";", "modifier": "private static final", "type": "String", "declarator": "MIN_Q_MIN_P = \"minQminP (MVar)\"", "var_name": "MIN_Q_MIN_P"}, {"original_string": "private static final String MAX_Q_MAX_P = \"maxQmaxP (MVar)\";", "modifier": "private static final", "type": "String", "declarator": "MAX_Q_MAX_P = \"maxQmaxP (MVar)\"", "var_name": "MAX_Q_MAX_P"}, {"original_string": "private static final String MAX_Q0 = \"maxQ0 (MVar)\";", "modifier": "private static final", "type": "String", "declarator": "MAX_Q0 = \"maxQ0 (MVar)\"", "var_name": "MAX_Q0"}, {"original_string": "private static final String MAX_Q_MIN_P = \"maxQminP (MVar)\";", "modifier": "private static final", "type": "String", "declarator": "MAX_Q_MIN_P = \"maxQminP (MVar)\"", "var_name": "MAX_Q_MIN_P"}, {"original_string": "private static final String NUM = \"num\";", "modifier": "private static final", "type": "String", "declarator": "NUM = \"num\"", "var_name": "NUM"}, {"original_string": "private static final String BUS = \"bus\";", "modifier": "private static final", "type": "String", "declarator": "BUS = \"bus\"", "var_name": "BUS"}, {"original_string": "private static final String P0 = \"p0 (MW)\";", "modifier": "private static final", "type": "String", "declarator": "P0 = \"p0 (MW)\"", "var_name": "P0"}, {"original_string": "private static final String Q0 = \"q0 (MW)\";", "modifier": "private static final", "type": "String", "declarator": "Q0 = \"q0 (MW)\"", "var_name": "Q0"}, {"original_string": "private static final String ID = \"id\";", "modifier": "private static final", "type": "String", "declarator": "ID = \"id\"", "var_name": "ID"}, {"original_string": "private final Network network;", "modifier": "private final", "type": "Network", "declarator": "network", "var_name": "network"}, {"original_string": "private final int variantIndex;", "modifier": "private final", "type": "int", "declarator": "variantIndex", "var_name": "variantIndex"}, {"original_string": "private final int faultNum;", "modifier": "private final", "type": "int", "declarator": "faultNum", "var_name": "faultNum"}, {"original_string": "private final int actionNum;", "modifier": "private final", "type": "int", "declarator": "actionNum", "var_name": "actionNum"}, {"original_string": "private final DataSource dataSource;", "modifier": "private final", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private final boolean append;", "modifier": "private final", "type": "boolean", "declarator": "append", "var_name": "append"}, {"original_string": "private final StringToIntMapper<AmplSubset> mapper;", "modifier": "private final", "type": "StringToIntMapper<AmplSubset>", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private final Map<String, List<AmplExtension>> extensionMap;", "modifier": "private final", "type": "Map<String, List<AmplExtension>>", "declarator": "extensionMap", "var_name": "extensionMap"}, {"original_string": "private final AmplExportConfig config;", "modifier": "private final", "type": "AmplExportConfig", "declarator": "config", "var_name": "config"}], "methods": [{"identifier": "AmplNetworkWriter", "parameters": "(Network network, int variantIndex, DataSource dataSource, int faultNum, int actionNum,\n                             boolean append, StringToIntMapper<AmplSubset> mapper, AmplExportConfig config)", "modifiers": "public", "return": "", "signature": " AmplNetworkWriter(Network network, int variantIndex, DataSource dataSource, int faultNum, int actionNum,\n                             boolean append, StringToIntMapper<AmplSubset> mapper, AmplExportConfig config)", "full_signature": "public  AmplNetworkWriter(Network network, int variantIndex, DataSource dataSource, int faultNum, int actionNum,\n                             boolean append, StringToIntMapper<AmplSubset> mapper, AmplExportConfig config)", "class_method_signature": "AmplNetworkWriter.AmplNetworkWriter(Network network, int variantIndex, DataSource dataSource, int faultNum, int actionNum,\n                             boolean append, StringToIntMapper<AmplSubset> mapper, AmplExportConfig config)", "testcase": false, "constructor": true}, {"identifier": "AmplNetworkWriter", "parameters": "(Network network, DataSource dataSource, int faultNum, int actionNum,\n                             boolean append, StringToIntMapper<AmplSubset> mapper, AmplExportConfig config)", "modifiers": "public", "return": "", "signature": " AmplNetworkWriter(Network network, DataSource dataSource, int faultNum, int actionNum,\n                             boolean append, StringToIntMapper<AmplSubset> mapper, AmplExportConfig config)", "full_signature": "public  AmplNetworkWriter(Network network, DataSource dataSource, int faultNum, int actionNum,\n                             boolean append, StringToIntMapper<AmplSubset> mapper, AmplExportConfig config)", "class_method_signature": "AmplNetworkWriter.AmplNetworkWriter(Network network, DataSource dataSource, int faultNum, int actionNum,\n                             boolean append, StringToIntMapper<AmplSubset> mapper, AmplExportConfig config)", "testcase": false, "constructor": true}, {"identifier": "AmplNetworkWriter", "parameters": "(Network network, DataSource dataSource, StringToIntMapper<AmplSubset> mapper,\n                             AmplExportConfig config)", "modifiers": "public", "return": "", "signature": " AmplNetworkWriter(Network network, DataSource dataSource, StringToIntMapper<AmplSubset> mapper,\n                             AmplExportConfig config)", "full_signature": "public  AmplNetworkWriter(Network network, DataSource dataSource, StringToIntMapper<AmplSubset> mapper,\n                             AmplExportConfig config)", "class_method_signature": "AmplNetworkWriter.AmplNetworkWriter(Network network, DataSource dataSource, StringToIntMapper<AmplSubset> mapper,\n                             AmplExportConfig config)", "testcase": false, "constructor": true}, {"identifier": "AmplNetworkWriter", "parameters": "(Network network, DataSource dataSource, AmplExportConfig config)", "modifiers": "public", "return": "", "signature": " AmplNetworkWriter(Network network, DataSource dataSource, AmplExportConfig config)", "full_signature": "public  AmplNetworkWriter(Network network, DataSource dataSource, AmplExportConfig config)", "class_method_signature": "AmplNetworkWriter.AmplNetworkWriter(Network network, DataSource dataSource, AmplExportConfig config)", "testcase": false, "constructor": true}, {"identifier": "getTableTitle", "parameters": "(Network network, String tableName)", "modifiers": "public static", "return": "String", "signature": "String getTableTitle(Network network, String tableName)", "full_signature": "public static String getTableTitle(Network network, String tableName)", "class_method_signature": "AmplNetworkWriter.getTableTitle(Network network, String tableName)", "testcase": false, "constructor": false}, {"identifier": "getThreeWindingsTransformerMiddleBusId", "parameters": "(ThreeWindingsTransformer twt)", "modifiers": "private static", "return": "String", "signature": "String getThreeWindingsTransformerMiddleBusId(ThreeWindingsTransformer twt)", "full_signature": "private static String getThreeWindingsTransformerMiddleBusId(ThreeWindingsTransformer twt)", "class_method_signature": "AmplNetworkWriter.getThreeWindingsTransformerMiddleBusId(ThreeWindingsTransformer twt)", "testcase": false, "constructor": false}, {"identifier": "getThreeWindingsTransformerMiddleVoltageLevelId", "parameters": "(ThreeWindingsTransformer twt)", "modifiers": "private static", "return": "String", "signature": "String getThreeWindingsTransformerMiddleVoltageLevelId(ThreeWindingsTransformer twt)", "full_signature": "private static String getThreeWindingsTransformerMiddleVoltageLevelId(ThreeWindingsTransformer twt)", "class_method_signature": "AmplNetworkWriter.getThreeWindingsTransformerMiddleVoltageLevelId(ThreeWindingsTransformer twt)", "testcase": false, "constructor": false}, {"identifier": "getThreeWindingsTransformerMiddleBusComponentNum", "parameters": "(AmplExportContext context, ThreeWindingsTransformer twt)", "modifiers": "private static", "return": "int", "signature": "int getThreeWindingsTransformerMiddleBusComponentNum(AmplExportContext context, ThreeWindingsTransformer twt)", "full_signature": "private static int getThreeWindingsTransformerMiddleBusComponentNum(AmplExportContext context, ThreeWindingsTransformer twt)", "class_method_signature": "AmplNetworkWriter.getThreeWindingsTransformerMiddleBusComponentNum(AmplExportContext context, ThreeWindingsTransformer twt)", "testcase": false, "constructor": false}, {"identifier": "getDanglingLineMiddleBusId", "parameters": "(DanglingLine dl)", "modifiers": "private static", "return": "String", "signature": "String getDanglingLineMiddleBusId(DanglingLine dl)", "full_signature": "private static String getDanglingLineMiddleBusId(DanglingLine dl)", "class_method_signature": "AmplNetworkWriter.getDanglingLineMiddleBusId(DanglingLine dl)", "testcase": false, "constructor": false}, {"identifier": "getDanglingLineMiddleVoltageLevelId", "parameters": "(DanglingLine dl)", "modifiers": "private static", "return": "String", "signature": "String getDanglingLineMiddleVoltageLevelId(DanglingLine dl)", "full_signature": "private static String getDanglingLineMiddleVoltageLevelId(DanglingLine dl)", "class_method_signature": "AmplNetworkWriter.getDanglingLineMiddleVoltageLevelId(DanglingLine dl)", "testcase": false, "constructor": false}, {"identifier": "getDanglingLineMiddleBusComponentNum", "parameters": "(AmplExportContext context, DanglingLine dl)", "modifiers": "private static", "return": "int", "signature": "int getDanglingLineMiddleBusComponentNum(AmplExportContext context, DanglingLine dl)", "full_signature": "private static int getDanglingLineMiddleBusComponentNum(AmplExportContext context, DanglingLine dl)", "class_method_signature": "AmplNetworkWriter.getDanglingLineMiddleBusComponentNum(AmplExportContext context, DanglingLine dl)", "testcase": false, "constructor": false}, {"identifier": "getTieLineMiddleBusComponentNum", "parameters": "(AmplExportContext context, TieLine tieLine)", "modifiers": "private static", "return": "int", "signature": "int getTieLineMiddleBusComponentNum(AmplExportContext context, TieLine tieLine)", "full_signature": "private static int getTieLineMiddleBusComponentNum(AmplExportContext context, TieLine tieLine)", "class_method_signature": "AmplNetworkWriter.getTieLineMiddleBusComponentNum(AmplExportContext context, TieLine tieLine)", "testcase": false, "constructor": false}, {"identifier": "getPermanentLimit", "parameters": "(CurrentLimits limits)", "modifiers": "private static", "return": "double", "signature": "double getPermanentLimit(CurrentLimits limits)", "full_signature": "private static double getPermanentLimit(CurrentLimits limits)", "class_method_signature": "AmplNetworkWriter.getPermanentLimit(CurrentLimits limits)", "testcase": false, "constructor": false}, {"identifier": "isBusExported", "parameters": "(AmplExportContext context, String busId)", "modifiers": "private static", "return": "boolean", "signature": "boolean isBusExported(AmplExportContext context, String busId)", "full_signature": "private static boolean isBusExported(AmplExportContext context, String busId)", "class_method_signature": "AmplNetworkWriter.isBusExported(AmplExportContext context, String busId)", "testcase": false, "constructor": false}, {"identifier": "getTableTitle", "parameters": "(String tableName)", "modifiers": "private", "return": "String", "signature": "String getTableTitle(String tableName)", "full_signature": "private String getTableTitle(String tableName)", "class_method_signature": "AmplNetworkWriter.getTableTitle(String tableName)", "testcase": false, "constructor": false}, {"identifier": "writeSubstations", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeSubstations()", "full_signature": "private void writeSubstations()", "class_method_signature": "AmplNetworkWriter.writeSubstations()", "testcase": false, "constructor": false}, {"identifier": "isOnlyMainCc", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isOnlyMainCc()", "full_signature": "private boolean isOnlyMainCc()", "class_method_signature": "AmplNetworkWriter.isOnlyMainCc()", "testcase": false, "constructor": false}, {"identifier": "connectedComponentToExport", "parameters": "(int numCC)", "modifiers": "private", "return": "boolean", "signature": "boolean connectedComponentToExport(int numCC)", "full_signature": "private boolean connectedComponentToExport(int numCC)", "class_method_signature": "AmplNetworkWriter.connectedComponentToExport(int numCC)", "testcase": false, "constructor": false}, {"identifier": "writeBuses", "parameters": "(AmplExportContext context)", "modifiers": "private", "return": "void", "signature": "void writeBuses(AmplExportContext context)", "full_signature": "private void writeBuses(AmplExportContext context)", "class_method_signature": "AmplNetworkWriter.writeBuses(AmplExportContext context)", "testcase": false, "constructor": false}, {"identifier": "writeBuses", "parameters": "(AmplExportContext context, TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeBuses(AmplExportContext context, TableFormatter formatter)", "full_signature": "private void writeBuses(AmplExportContext context, TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeBuses(AmplExportContext context, TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "addExtensions", "parameters": "(int extendedNum, Extendable<E> extendable)", "modifiers": "private", "return": "void", "signature": "void addExtensions(int extendedNum, Extendable<E> extendable)", "full_signature": "private void addExtensions(int extendedNum, Extendable<E> extendable)", "class_method_signature": "AmplNetworkWriter.addExtensions(int extendedNum, Extendable<E> extendable)", "testcase": false, "constructor": false}, {"identifier": "exportExtensions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void exportExtensions()", "full_signature": "private void exportExtensions()", "class_method_signature": "AmplNetworkWriter.exportExtensions()", "testcase": false, "constructor": false}, {"identifier": "writeThreeWindingsTransformerMiddleBuses", "parameters": "(AmplExportContext context, TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeThreeWindingsTransformerMiddleBuses(AmplExportContext context, TableFormatter formatter)", "full_signature": "private void writeThreeWindingsTransformerMiddleBuses(AmplExportContext context, TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeThreeWindingsTransformerMiddleBuses(AmplExportContext context, TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeDanglingLineMiddleBuses", "parameters": "(AmplExportContext context, TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeDanglingLineMiddleBuses(AmplExportContext context, TableFormatter formatter)", "full_signature": "private void writeDanglingLineMiddleBuses(AmplExportContext context, TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeDanglingLineMiddleBuses(AmplExportContext context, TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeTieLineMiddleBuses", "parameters": "(AmplExportContext context, TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeTieLineMiddleBuses(AmplExportContext context, TableFormatter formatter)", "full_signature": "private void writeTieLineMiddleBuses(AmplExportContext context, TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeTieLineMiddleBuses(AmplExportContext context, TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeBranches", "parameters": "(AmplExportContext context)", "modifiers": "private", "return": "void", "signature": "void writeBranches(AmplExportContext context)", "full_signature": "private void writeBranches(AmplExportContext context)", "class_method_signature": "AmplNetworkWriter.writeBranches(AmplExportContext context)", "testcase": false, "constructor": false}, {"identifier": "writeLines", "parameters": "(AmplExportContext context, TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeLines(AmplExportContext context, TableFormatter formatter)", "full_signature": "private void writeLines(AmplExportContext context, TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeLines(AmplExportContext context, TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeTwoWindingsTransformers", "parameters": "(AmplExportContext context, TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeTwoWindingsTransformers(AmplExportContext context, TableFormatter formatter)", "full_signature": "private void writeTwoWindingsTransformers(AmplExportContext context, TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeTwoWindingsTransformers(AmplExportContext context, TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeThreeWindingsTransformers", "parameters": "(AmplExportContext context, TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeThreeWindingsTransformers(AmplExportContext context, TableFormatter formatter)", "full_signature": "private void writeThreeWindingsTransformers(AmplExportContext context, TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeThreeWindingsTransformers(AmplExportContext context, TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeDanglingLines", "parameters": "(AmplExportContext context, TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeDanglingLines(AmplExportContext context, TableFormatter formatter)", "full_signature": "private void writeDanglingLines(AmplExportContext context, TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeDanglingLines(AmplExportContext context, TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "getBusId", "parameters": "(Bus bus)", "modifiers": "private", "return": "String", "signature": "String getBusId(Bus bus)", "full_signature": "private String getBusId(Bus bus)", "class_method_signature": "AmplNetworkWriter.getBusId(Bus bus)", "testcase": false, "constructor": false}, {"identifier": "getBusNum", "parameters": "(Bus bus)", "modifiers": "private", "return": "int", "signature": "int getBusNum(Bus bus)", "full_signature": "private int getBusNum(Bus bus)", "class_method_signature": "AmplNetworkWriter.getBusNum(Bus bus)", "testcase": false, "constructor": false}, {"identifier": "writeTapChangerTable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeTapChangerTable()", "full_signature": "private void writeTapChangerTable()", "class_method_signature": "AmplNetworkWriter.writeTapChangerTable()", "testcase": false, "constructor": false}, {"identifier": "writeTwoWindingsTransformerTapChangerTable", "parameters": "(TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeTwoWindingsTransformerTapChangerTable(TableFormatter formatter)", "full_signature": "private void writeTwoWindingsTransformerTapChangerTable(TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeTwoWindingsTransformerTapChangerTable(TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeThreeWindingsTransformerTapChangerTable", "parameters": "(TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeThreeWindingsTransformerTapChangerTable(TableFormatter formatter)", "full_signature": "private void writeThreeWindingsTransformerTapChangerTable(TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeThreeWindingsTransformerTapChangerTable(TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeRatioTapChanger", "parameters": "(TableFormatter formatter, String id, double zb2, double reactance, RatioTapChanger rtc)", "modifiers": "private", "return": "void", "signature": "void writeRatioTapChanger(TableFormatter formatter, String id, double zb2, double reactance, RatioTapChanger rtc)", "full_signature": "private void writeRatioTapChanger(TableFormatter formatter, String id, double zb2, double reactance, RatioTapChanger rtc)", "class_method_signature": "AmplNetworkWriter.writeRatioTapChanger(TableFormatter formatter, String id, double zb2, double reactance, RatioTapChanger rtc)", "testcase": false, "constructor": false}, {"identifier": "writePhaseTapChanger", "parameters": "(TableFormatter formatter, String id, double zb2, double reactance, PhaseTapChanger ptc)", "modifiers": "private", "return": "void", "signature": "void writePhaseTapChanger(TableFormatter formatter, String id, double zb2, double reactance, PhaseTapChanger ptc)", "full_signature": "private void writePhaseTapChanger(TableFormatter formatter, String id, double zb2, double reactance, PhaseTapChanger ptc)", "class_method_signature": "AmplNetworkWriter.writePhaseTapChanger(TableFormatter formatter, String id, double zb2, double reactance, PhaseTapChanger ptc)", "testcase": false, "constructor": false}, {"identifier": "writeRatioTapChanger", "parameters": "(TableFormatter formatter, Identifiable<?> twt, RatioTapChanger rtc, String leg)", "modifiers": "private", "return": "void", "signature": "void writeRatioTapChanger(TableFormatter formatter, Identifiable<?> twt, RatioTapChanger rtc, String leg)", "full_signature": "private void writeRatioTapChanger(TableFormatter formatter, Identifiable<?> twt, RatioTapChanger rtc, String leg)", "class_method_signature": "AmplNetworkWriter.writeRatioTapChanger(TableFormatter formatter, Identifiable<?> twt, RatioTapChanger rtc, String leg)", "testcase": false, "constructor": false}, {"identifier": "writeRatioTapChangers", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeRatioTapChangers()", "full_signature": "private void writeRatioTapChangers()", "class_method_signature": "AmplNetworkWriter.writeRatioTapChangers()", "testcase": false, "constructor": false}, {"identifier": "writePhaseTapChanger", "parameters": "(TableFormatter formatter, Identifiable<?> twt, PhaseTapChanger ptc, String leg)", "modifiers": "private", "return": "void", "signature": "void writePhaseTapChanger(TableFormatter formatter, Identifiable<?> twt, PhaseTapChanger ptc, String leg)", "full_signature": "private void writePhaseTapChanger(TableFormatter formatter, Identifiable<?> twt, PhaseTapChanger ptc, String leg)", "class_method_signature": "AmplNetworkWriter.writePhaseTapChanger(TableFormatter formatter, Identifiable<?> twt, PhaseTapChanger ptc, String leg)", "testcase": false, "constructor": false}, {"identifier": "writePhaseTapChangers", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writePhaseTapChangers()", "full_signature": "private void writePhaseTapChangers()", "class_method_signature": "AmplNetworkWriter.writePhaseTapChangers()", "testcase": false, "constructor": false}, {"identifier": "exportLoad", "parameters": "(AmplExportContext context, String busId)", "modifiers": "private", "return": "boolean", "signature": "boolean exportLoad(AmplExportContext context, String busId)", "full_signature": "private boolean exportLoad(AmplExportContext context, String busId)", "class_method_signature": "AmplNetworkWriter.exportLoad(AmplExportContext context, String busId)", "testcase": false, "constructor": false}, {"identifier": "writeLoads", "parameters": "(AmplExportContext context)", "modifiers": "private", "return": "void", "signature": "void writeLoads(AmplExportContext context)", "full_signature": "private void writeLoads(AmplExportContext context)", "class_method_signature": "AmplNetworkWriter.writeLoads(AmplExportContext context)", "testcase": false, "constructor": false}, {"identifier": "exportGeneratorOrShunt", "parameters": "(AmplExportContext context, String busId, String conBusId)", "modifiers": "private", "return": "boolean", "signature": "boolean exportGeneratorOrShunt(AmplExportContext context, String busId, String conBusId)", "full_signature": "private boolean exportGeneratorOrShunt(AmplExportContext context, String busId, String conBusId)", "class_method_signature": "AmplNetworkWriter.exportGeneratorOrShunt(AmplExportContext context, String busId, String conBusId)", "testcase": false, "constructor": false}, {"identifier": "writeShunts", "parameters": "(AmplExportContext context)", "modifiers": "private", "return": "void", "signature": "void writeShunts(AmplExportContext context)", "full_signature": "private void writeShunts(AmplExportContext context)", "class_method_signature": "AmplNetworkWriter.writeShunts(AmplExportContext context)", "testcase": false, "constructor": false}, {"identifier": "writeStaticVarCompensators", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeStaticVarCompensators()", "full_signature": "private void writeStaticVarCompensators()", "class_method_signature": "AmplNetworkWriter.writeStaticVarCompensators()", "testcase": false, "constructor": false}, {"identifier": "writeGenerators", "parameters": "(AmplExportContext context)", "modifiers": "private", "return": "void", "signature": "void writeGenerators(AmplExportContext context)", "full_signature": "private void writeGenerators(AmplExportContext context)", "class_method_signature": "AmplNetworkWriter.writeGenerators(AmplExportContext context)", "testcase": false, "constructor": false}, {"identifier": "writeBatteries", "parameters": "(AmplExportContext context)", "modifiers": "private", "return": "void", "signature": "void writeBatteries(AmplExportContext context)", "full_signature": "private void writeBatteries(AmplExportContext context)", "class_method_signature": "AmplNetworkWriter.writeBatteries(AmplExportContext context)", "testcase": false, "constructor": false}, {"identifier": "writeTemporaryCurrentLimits", "parameters": "(CurrentLimits limits, TableFormatter formatter, String branchId, boolean side1, String sideId)", "modifiers": "private", "return": "void", "signature": "void writeTemporaryCurrentLimits(CurrentLimits limits, TableFormatter formatter, String branchId, boolean side1, String sideId)", "full_signature": "private void writeTemporaryCurrentLimits(CurrentLimits limits, TableFormatter formatter, String branchId, boolean side1, String sideId)", "class_method_signature": "AmplNetworkWriter.writeTemporaryCurrentLimits(CurrentLimits limits, TableFormatter formatter, String branchId, boolean side1, String sideId)", "testcase": false, "constructor": false}, {"identifier": "writeCurrentLimits", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeCurrentLimits()", "full_signature": "private void writeCurrentLimits()", "class_method_signature": "AmplNetworkWriter.writeCurrentLimits()", "testcase": false, "constructor": false}, {"identifier": "writeBranchCurrentLimits", "parameters": "(TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeBranchCurrentLimits(TableFormatter formatter)", "full_signature": "private void writeBranchCurrentLimits(TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeBranchCurrentLimits(TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeThreeWindingsTransformerCurrentLimits", "parameters": "(TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeThreeWindingsTransformerCurrentLimits(TableFormatter formatter)", "full_signature": "private void writeThreeWindingsTransformerCurrentLimits(TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeThreeWindingsTransformerCurrentLimits(TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeDanglingLineCurrentLimits", "parameters": "(TableFormatter formatter)", "modifiers": "private", "return": "void", "signature": "void writeDanglingLineCurrentLimits(TableFormatter formatter)", "full_signature": "private void writeDanglingLineCurrentLimits(TableFormatter formatter)", "class_method_signature": "AmplNetworkWriter.writeDanglingLineCurrentLimits(TableFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "writeHvdcLines", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeHvdcLines()", "full_signature": "private void writeHvdcLines()", "class_method_signature": "AmplNetworkWriter.writeHvdcLines()", "testcase": false, "constructor": false}, {"identifier": "getHvdcLinesMap", "parameters": "()", "modifiers": "private", "return": "HashMap<String, HvdcLine>", "signature": "HashMap<String, HvdcLine> getHvdcLinesMap()", "full_signature": "private HashMap<String, HvdcLine> getHvdcLinesMap()", "class_method_signature": "AmplNetworkWriter.getHvdcLinesMap()", "testcase": false, "constructor": false}, {"identifier": "writeLccConverterStations", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeLccConverterStations()", "full_signature": "private void writeLccConverterStations()", "class_method_signature": "AmplNetworkWriter.writeLccConverterStations()", "testcase": false, "constructor": false}, {"identifier": "writeVscConverterStations", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeVscConverterStations()", "full_signature": "private void writeVscConverterStations()", "class_method_signature": "AmplNetworkWriter.writeVscConverterStations()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void write()", "full_signature": "public void write()", "class_method_signature": "AmplNetworkWriter.write()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(AmplExportContext context)", "modifiers": "public", "return": "void", "signature": "void write(AmplExportContext context)", "full_signature": "public void write(AmplExportContext context)", "class_method_signature": "AmplNetworkWriter.write(AmplExportContext context)", "testcase": false, "constructor": false}], "file": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java"}, "focal_method": {"identifier": "writeCurrentLimits", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void writeCurrentLimits() throws IOException {\n        try (Writer writer = new OutputStreamWriter(dataSource.newOutputStream(\"_network_limits\", \"txt\", append), StandardCharsets.UTF_8);\n             TableFormatter formatter = new AmplDatTableFormatter(writer,\n                     getTableTitle(\"Temporary current limits\"),\n                     AmplConstants.INVALID_FLOAT_VALUE,\n                     !append,\n                     AmplConstants.LOCALE,\n                     new Column(VARIANT),\n                     new Column(NUM),\n                     new Column(\"branch\"),\n                     new Column(\"side\"),\n                     new Column(\"limit (A)\"),\n                     new Column(\"accept. duration (s)\"),\n                     new Column(FAULT),\n                     new Column(config.getActionType().getLabel()))) {\n\n            writeBranchCurrentLimits(formatter);\n\n            writeThreeWindingsTransformerCurrentLimits(formatter);\n\n            writeDanglingLineCurrentLimits(formatter);\n        }\n    }", "signature": "void writeCurrentLimits()", "full_signature": "private void writeCurrentLimits()", "class_method_signature": "AmplNetworkWriter.writeCurrentLimits()", "testcase": false, "constructor": false, "invocations": ["newOutputStream", "getTableTitle", "getLabel", "getActionType", "writeBranchCurrentLimits", "writeThreeWindingsTransformerCurrentLimits", "writeDanglingLineCurrentLimits"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}