{"test_class": {"identifier": "MovieParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MovieParser movieParser;", "modifier": "private", "type": "MovieParser", "declarator": "movieParser", "var_name": "movieParser"}], "file": "seedboxer-core/src/test/java/net/seedboxer/sources/parser/MovieParserTest.java"}, "test_case": {"identifier": "shouldReturnMovieWhenParseMovieTypeOfInput1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldReturnMovieWhenParseMovieTypeOfInput1() throws MalformedURLException {\n\t\tString movieInput = \"Oz the Great and Powerful 2013 1080p BluRay DTS-HDMA 7 1 x264-LEGi0N\";\n\t\tassertEquals(getExpectedMovie(), movieParser.parse(getMatchItem(movieInput)));\n\t}", "signature": "void shouldReturnMovieWhenParseMovieTypeOfInput1()", "full_signature": "@Test public void shouldReturnMovieWhenParseMovieTypeOfInput1()", "class_method_signature": "MovieParserTest.shouldReturnMovieWhenParseMovieTypeOfInput1()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getExpectedMovie", "parse", "getMatchItem"]}, "focal_class": {"identifier": "MovieParser", "superclass": "extends ContentParser<Movie>", "interfaces": "", "fields": [{"original_string": "private final String QUALITY_HD = \"720p\";", "modifier": "private final", "type": "String", "declarator": "QUALITY_HD = \"720p\"", "var_name": "QUALITY_HD"}, {"original_string": "private final String QUALITY_FULLHD = \"1080p\";", "modifier": "private final", "type": "String", "declarator": "QUALITY_FULLHD = \"1080p\"", "var_name": "QUALITY_FULLHD"}, {"original_string": "private final Pattern mainPattern = Pattern.compile(\n\t\t\"(.+?)(\\\\d{4})(.*)\"\n\t);", "modifier": "private final", "type": "Pattern", "declarator": "mainPattern = Pattern.compile(\n\t\t\"(.+?)(\\\\d{4})(.*)\"\n\t)", "var_name": "mainPattern"}, {"original_string": "private final Pattern qualityPattern = Pattern.compile(\n\t\t\"\\\\d{3,4}p\"\n\t\t);", "modifier": "private final", "type": "Pattern", "declarator": "qualityPattern = Pattern.compile(\n\t\t\"\\\\d{3,4}p\"\n\t\t)", "var_name": "qualityPattern"}], "methods": [{"identifier": "parse", "parameters": "(String input)", "modifiers": "@Override public", "return": "Movie", "signature": "Movie parse(String input)", "full_signature": "@Override public Movie parse(String input)", "class_method_signature": "MovieParser.parse(String input)", "testcase": false, "constructor": false}], "file": "seedboxer-core/src/main/java/net/seedboxer/sources/parser/MovieParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String input)", "modifiers": "@Override public", "return": "Movie", "body": "@Override\n\tpublic Movie parse(String input) {\n\t\tMatcher matcher = mainPattern.matcher(input);\n\t\tif(matcher.matches()){\n\t\t\tString name = getName(matcher.group(1));\n\t\t\tInteger year = Integer.valueOf(matcher.group(2));\n\t\t\tQuality qualityEnum = Quality.STANDARD;\n\t\t\tmatcher = qualityPattern.matcher(input);\n\t\t\tif(matcher.find()){\n\t\t\t    String quality = matcher.group();\n\t\t\t    if(quality.equals(QUALITY_HD))\n\t\t\t\t    qualityEnum = Quality.HD;\n\t\t\t    else if(quality.equals(QUALITY_FULLHD))\n\t\t\t\t    qualityEnum = Quality.FULLHD;\n\t\t\t}\n\n\t\t\treturn new Movie(name, year, qualityEnum);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}", "signature": "Movie parse(String input)", "full_signature": "@Override public Movie parse(String input)", "class_method_signature": "MovieParser.parse(String input)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "getName", "group", "valueOf", "group", "matcher", "find", "group", "equals", "equals"]}, "repository": {"repo_id": 5342001, "url": "https://github.com/jdavisonc/seedboxer", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 15845, "license": "licensed"}}