{"test_class": {"identifier": "SpreadsheetImportHealthCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SpreadsheetImportHealthChecker healthChecker;", "modifier": "private", "type": "SpreadsheetImportHealthChecker", "declarator": "healthChecker", "var_name": "healthChecker"}, {"original_string": "private SpreadsheetImportActivity activity;", "modifier": "private", "type": "SpreadsheetImportActivity", "declarator": "activity", "var_name": "activity"}, {"original_string": "private ArrayList ancestors;", "modifier": "private", "type": "ArrayList", "declarator": "ancestors", "var_name": "ancestors"}], "file": "taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportHealthCheckerTest.java"}, "test_case": {"identifier": "testCanHandle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCanHandle() {\n\t\tassertTrue(healthChecker.canVisit(activity));\n\t\tassertFalse(healthChecker.canVisit(null));\n\t\tassertFalse(healthChecker.canVisit(\"\"));\n\t}", "signature": "void testCanHandle()", "full_signature": "@Test public void testCanHandle()", "class_method_signature": "SpreadsheetImportHealthCheckerTest.testCanHandle()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "canVisit", "assertFalse", "canVisit", "assertFalse", "canVisit"]}, "focal_class": {"identifier": "SpreadsheetImportHealthChecker", "superclass": "", "interfaces": "implements HealthChecker<SpreadsheetImportActivity>", "fields": [], "methods": [{"identifier": "canVisit", "parameters": "(Object subject)", "modifiers": "public", "return": "boolean", "signature": "boolean canVisit(Object subject)", "full_signature": "public boolean canVisit(Object subject)", "class_method_signature": "SpreadsheetImportHealthChecker.canVisit(Object subject)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(SpreadsheetImportActivity activity, List<Object> ancestors)", "modifiers": "public", "return": "VisitReport", "signature": "VisitReport visit(SpreadsheetImportActivity activity, List<Object> ancestors)", "full_signature": "public VisitReport visit(SpreadsheetImportActivity activity, List<Object> ancestors)", "class_method_signature": "SpreadsheetImportHealthChecker.visit(SpreadsheetImportActivity activity, List<Object> ancestors)", "testcase": false, "constructor": false}, {"identifier": "isTimeConsuming", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTimeConsuming()", "full_signature": "public boolean isTimeConsuming()", "class_method_signature": "SpreadsheetImportHealthChecker.isTimeConsuming()", "testcase": false, "constructor": false}], "file": "taverna-spreadsheet-import-activity/src/main/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportHealthChecker.java"}, "focal_method": {"identifier": "canVisit", "parameters": "(Object subject)", "modifiers": "public", "return": "boolean", "body": "public boolean canVisit(Object subject) {\n\t\treturn (subject != null && subject instanceof SpreadsheetImportActivity);\n\t}", "signature": "boolean canVisit(Object subject)", "full_signature": "public boolean canVisit(Object subject)", "class_method_signature": "SpreadsheetImportHealthChecker.canVisit(Object subject)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 30956938, "url": "https://github.com/apache/incubator-taverna-common-activities", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 5696, "license": "licensed"}}