{"test_class": {"identifier": "FlinkOutputFieldsDeclarerTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/api/FlinkOutputFieldsDeclarerTest.java"}, "test_case": {"identifier": "testDeclareDirect2", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n\tpublic void testDeclareDirect2() {\n\t\tnew FlinkOutputFieldsDeclarer().declareStream(Utils.DEFAULT_STREAM_ID, true, null);\n\t}", "signature": "void testDeclareDirect2()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testDeclareDirect2()", "class_method_signature": "FlinkOutputFieldsDeclarerTest.testDeclareDirect2()", "testcase": true, "constructor": false, "invocations": ["declareStream"]}, "focal_class": {"identifier": "FlinkOutputFieldsDeclarer", "superclass": "", "interfaces": "implements OutputFieldsDeclarer", "fields": [{"original_string": "final HashMap<String, Fields> outputStreams = new HashMap<String, Fields>();", "modifier": "final", "type": "HashMap<String, Fields>", "declarator": "outputStreams = new HashMap<String, Fields>()", "var_name": "outputStreams"}], "methods": [{"identifier": "declare", "parameters": "(final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declare(final Fields fields)", "full_signature": "@Override public void declare(final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declare(final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declare", "parameters": "(final boolean direct, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declare(final boolean direct, final Fields fields)", "full_signature": "@Override public void declare(final boolean direct, final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declare(final boolean direct, final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declareStream", "parameters": "(final String streamId, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declareStream(final String streamId, final Fields fields)", "full_signature": "@Override public void declareStream(final String streamId, final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declareStream(final String streamId, final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declareStream", "parameters": "(final String streamId, final boolean direct, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declareStream(final String streamId, final boolean direct, final Fields fields)", "full_signature": "@Override public void declareStream(final String streamId, final boolean direct, final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declareStream(final String streamId, final boolean direct, final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "getOutputType", "parameters": "(final String streamId)", "modifiers": "", "return": "TypeInformation<Tuple>", "signature": "TypeInformation<Tuple> getOutputType(final String streamId)", "full_signature": " TypeInformation<Tuple> getOutputType(final String streamId)", "class_method_signature": "FlinkOutputFieldsDeclarer.getOutputType(final String streamId)", "testcase": false, "constructor": false}, {"identifier": "getGroupingFieldIndexes", "parameters": "(final String streamId, final List<String> groupingFields)", "modifiers": "", "return": "int[]", "signature": "int[] getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "full_signature": " int[] getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "class_method_signature": "FlinkOutputFieldsDeclarer.getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/api/FlinkOutputFieldsDeclarer.java"}, "focal_method": {"identifier": "declareStream", "parameters": "(final String streamId, final Fields fields)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void declareStream(final String streamId, final Fields fields) {\n\t\tthis.declareStream(streamId, false, fields);\n\t}", "signature": "void declareStream(final String streamId, final Fields fields)", "full_signature": "@Override public void declareStream(final String streamId, final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declareStream(final String streamId, final Fields fields)", "testcase": false, "constructor": false, "invocations": ["declareStream"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}