{"test_class": {"identifier": "MediaItemEntityDataMapperTest", "superclass": "extends ApplicationTestCase", "interfaces": "", "fields": [{"original_string": "private static final String JSON_RESPONSE_DVR_GET_RECORDED = \"{\\\"Program\\\": {\\\"StartTime\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTime\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"Title\\\": \\\"Star Wars: Droid Tales\\\", \\\"SubTitle\\\": \\\"Mission to Mos Eisley\\\", \\\"Category\\\": \\\"Fantasy\\\", \\\"CatType\\\": \\\"series\\\", \\\"Repeat\\\": \\\"false\\\", \\\"VideoProps\\\": \\\"11\\\", \\\"AudioProps\\\": \\\"0\\\", \\\"SubProps\\\": \\\"1\\\", \\\"SeriesId\\\": \\\"EP02206828\\\", \\\"ProgramId\\\": \\\"EP022068280003\\\", \\\"Stars\\\": \\\"0\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"ProgramFlags\\\": \\\"5\\\", \\\"Airdate\\\": \\\"2015-09-07\\\", \\\"Description\\\": \\\"C-3PO recounts his adventure with the ``Star Wars Rebels'' crew in an effort to find R2-D2, who has been kidnapped.\\\", \\\"Inetref\\\": \\\"ttvdb.py_298171\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"TotalEpisodes\\\": \\\"0\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"Channel\\\": {\\\"ChanId\\\": \\\"2289\\\", \\\"ChanNum\\\": \\\"1289\\\", \\\"CallSign\\\": \\\"DXDHD\\\", \\\"IconURL\\\": \\\"\\\", \\\"ChannelName\\\": \\\"Disney XD HD\\\", \\\"MplexId\\\": \\\"32767\\\", \\\"ServiceId\\\": \\\"0\\\", \\\"ATSCMajorChan\\\": \\\"1289\\\", \\\"ATSCMinorChan\\\": \\\"0\\\", \\\"Format\\\": \\\"Default\\\", \\\"FrequencyId\\\": \\\"1289\\\", \\\"FineTune\\\": \\\"0\\\", \\\"ChanFilters\\\": \\\"\\\", \\\"SourceId\\\": \\\"1\\\", \\\"InputId\\\": \\\"0\\\", \\\"CommFree\\\": \\\"false\\\", \\\"UseEIT\\\": \\\"false\\\", \\\"Visible\\\": \\\"true\\\", \\\"XMLTVID\\\": \\\"60006\\\", \\\"DefaultAuth\\\": \\\"\\\", \\\"Programs\\\": []}, \\\"Recording\\\": {\\\"RecordedId\\\": \\\"3120\\\", \\\"Status\\\": \\\"-3\\\", \\\"Priority\\\": \\\"0\\\", \\\"StartTs\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTs\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"RecordId\\\": \\\"112\\\", \\\"RecGroup\\\": \\\"Default\\\", \\\"PlayGroup\\\": \\\"Default\\\", \\\"StorageGroup\\\": \\\"Default\\\", \\\"RecType\\\": \\\"0\\\", \\\"DupInType\\\": \\\"15\\\", \\\"DupMethod\\\": \\\"6\\\", \\\"EncoderId\\\": \\\"0\\\", \\\"EncoderName\\\": \\\"\\\", \\\"Profile\\\": \\\"Default\\\"}, \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\";", "modifier": "private static final", "type": "String", "declarator": "JSON_RESPONSE_DVR_GET_RECORDED = \"{\\\"Program\\\": {\\\"StartTime\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTime\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"Title\\\": \\\"Star Wars: Droid Tales\\\", \\\"SubTitle\\\": \\\"Mission to Mos Eisley\\\", \\\"Category\\\": \\\"Fantasy\\\", \\\"CatType\\\": \\\"series\\\", \\\"Repeat\\\": \\\"false\\\", \\\"VideoProps\\\": \\\"11\\\", \\\"AudioProps\\\": \\\"0\\\", \\\"SubProps\\\": \\\"1\\\", \\\"SeriesId\\\": \\\"EP02206828\\\", \\\"ProgramId\\\": \\\"EP022068280003\\\", \\\"Stars\\\": \\\"0\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"ProgramFlags\\\": \\\"5\\\", \\\"Airdate\\\": \\\"2015-09-07\\\", \\\"Description\\\": \\\"C-3PO recounts his adventure with the ``Star Wars Rebels'' crew in an effort to find R2-D2, who has been kidnapped.\\\", \\\"Inetref\\\": \\\"ttvdb.py_298171\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"TotalEpisodes\\\": \\\"0\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"Channel\\\": {\\\"ChanId\\\": \\\"2289\\\", \\\"ChanNum\\\": \\\"1289\\\", \\\"CallSign\\\": \\\"DXDHD\\\", \\\"IconURL\\\": \\\"\\\", \\\"ChannelName\\\": \\\"Disney XD HD\\\", \\\"MplexId\\\": \\\"32767\\\", \\\"ServiceId\\\": \\\"0\\\", \\\"ATSCMajorChan\\\": \\\"1289\\\", \\\"ATSCMinorChan\\\": \\\"0\\\", \\\"Format\\\": \\\"Default\\\", \\\"FrequencyId\\\": \\\"1289\\\", \\\"FineTune\\\": \\\"0\\\", \\\"ChanFilters\\\": \\\"\\\", \\\"SourceId\\\": \\\"1\\\", \\\"InputId\\\": \\\"0\\\", \\\"CommFree\\\": \\\"false\\\", \\\"UseEIT\\\": \\\"false\\\", \\\"Visible\\\": \\\"true\\\", \\\"XMLTVID\\\": \\\"60006\\\", \\\"DefaultAuth\\\": \\\"\\\", \\\"Programs\\\": []}, \\\"Recording\\\": {\\\"RecordedId\\\": \\\"3120\\\", \\\"Status\\\": \\\"-3\\\", \\\"Priority\\\": \\\"0\\\", \\\"StartTs\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTs\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"RecordId\\\": \\\"112\\\", \\\"RecGroup\\\": \\\"Default\\\", \\\"PlayGroup\\\": \\\"Default\\\", \\\"StorageGroup\\\": \\\"Default\\\", \\\"RecType\\\": \\\"0\\\", \\\"DupInType\\\": \\\"15\\\", \\\"DupMethod\\\": \\\"6\\\", \\\"EncoderId\\\": \\\"0\\\", \\\"EncoderName\\\": \\\"\\\", \\\"Profile\\\": \\\"Default\\\"}, \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\"", "var_name": "JSON_RESPONSE_DVR_GET_RECORDED"}, {"original_string": "private static final String JSON_RESPONSE_DVR_GET_RECORDED_NULL_STARTTS = \"{\\\"Program\\\": {\\\"StartTime\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTime\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"Title\\\": \\\"Star Wars: Droid Tales\\\", \\\"SubTitle\\\": \\\"Mission to Mos Eisley\\\", \\\"Category\\\": \\\"Fantasy\\\", \\\"CatType\\\": \\\"series\\\", \\\"Repeat\\\": \\\"false\\\", \\\"VideoProps\\\": \\\"11\\\", \\\"AudioProps\\\": \\\"0\\\", \\\"SubProps\\\": \\\"1\\\", \\\"SeriesId\\\": \\\"EP02206828\\\", \\\"ProgramId\\\": \\\"EP022068280003\\\", \\\"Stars\\\": \\\"0\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"ProgramFlags\\\": \\\"5\\\", \\\"Airdate\\\": \\\"2015-09-07\\\", \\\"Description\\\": \\\"C-3PO recounts his adventure with the ``Star Wars Rebels'' crew in an effort to find R2-D2, who has been kidnapped.\\\", \\\"Inetref\\\": \\\"ttvdb.py_298171\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"TotalEpisodes\\\": \\\"0\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"Channel\\\": {\\\"ChanId\\\": \\\"2289\\\", \\\"ChanNum\\\": \\\"1289\\\", \\\"CallSign\\\": \\\"DXDHD\\\", \\\"IconURL\\\": \\\"\\\", \\\"ChannelName\\\": \\\"Disney XD HD\\\", \\\"MplexId\\\": \\\"32767\\\", \\\"ServiceId\\\": \\\"0\\\", \\\"ATSCMajorChan\\\": \\\"1289\\\", \\\"ATSCMinorChan\\\": \\\"0\\\", \\\"Format\\\": \\\"Default\\\", \\\"FrequencyId\\\": \\\"1289\\\", \\\"FineTune\\\": \\\"0\\\", \\\"ChanFilters\\\": \\\"\\\", \\\"SourceId\\\": \\\"1\\\", \\\"InputId\\\": \\\"0\\\", \\\"CommFree\\\": \\\"false\\\", \\\"UseEIT\\\": \\\"false\\\", \\\"Visible\\\": \\\"true\\\", \\\"XMLTVID\\\": \\\"60006\\\", \\\"DefaultAuth\\\": \\\"\\\", \\\"Programs\\\": []}, \\\"Recording\\\": {\\\"RecordedId\\\": \\\"3120\\\", \\\"Status\\\": \\\"-3\\\", \\\"Priority\\\": \\\"0\\\", \\\"StartTs\\\": \\\"\\\", \\\"EndTs\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"RecordId\\\": \\\"112\\\", \\\"RecGroup\\\": \\\"Default\\\", \\\"PlayGroup\\\": \\\"Default\\\", \\\"StorageGroup\\\": \\\"Default\\\", \\\"RecType\\\": \\\"0\\\", \\\"DupInType\\\": \\\"15\\\", \\\"DupMethod\\\": \\\"6\\\", \\\"EncoderId\\\": \\\"0\\\", \\\"EncoderName\\\": \\\"\\\", \\\"Profile\\\": \\\"Default\\\"}, \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\";", "modifier": "private static final", "type": "String", "declarator": "JSON_RESPONSE_DVR_GET_RECORDED_NULL_STARTTS = \"{\\\"Program\\\": {\\\"StartTime\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTime\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"Title\\\": \\\"Star Wars: Droid Tales\\\", \\\"SubTitle\\\": \\\"Mission to Mos Eisley\\\", \\\"Category\\\": \\\"Fantasy\\\", \\\"CatType\\\": \\\"series\\\", \\\"Repeat\\\": \\\"false\\\", \\\"VideoProps\\\": \\\"11\\\", \\\"AudioProps\\\": \\\"0\\\", \\\"SubProps\\\": \\\"1\\\", \\\"SeriesId\\\": \\\"EP02206828\\\", \\\"ProgramId\\\": \\\"EP022068280003\\\", \\\"Stars\\\": \\\"0\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"ProgramFlags\\\": \\\"5\\\", \\\"Airdate\\\": \\\"2015-09-07\\\", \\\"Description\\\": \\\"C-3PO recounts his adventure with the ``Star Wars Rebels'' crew in an effort to find R2-D2, who has been kidnapped.\\\", \\\"Inetref\\\": \\\"ttvdb.py_298171\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"TotalEpisodes\\\": \\\"0\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"Channel\\\": {\\\"ChanId\\\": \\\"2289\\\", \\\"ChanNum\\\": \\\"1289\\\", \\\"CallSign\\\": \\\"DXDHD\\\", \\\"IconURL\\\": \\\"\\\", \\\"ChannelName\\\": \\\"Disney XD HD\\\", \\\"MplexId\\\": \\\"32767\\\", \\\"ServiceId\\\": \\\"0\\\", \\\"ATSCMajorChan\\\": \\\"1289\\\", \\\"ATSCMinorChan\\\": \\\"0\\\", \\\"Format\\\": \\\"Default\\\", \\\"FrequencyId\\\": \\\"1289\\\", \\\"FineTune\\\": \\\"0\\\", \\\"ChanFilters\\\": \\\"\\\", \\\"SourceId\\\": \\\"1\\\", \\\"InputId\\\": \\\"0\\\", \\\"CommFree\\\": \\\"false\\\", \\\"UseEIT\\\": \\\"false\\\", \\\"Visible\\\": \\\"true\\\", \\\"XMLTVID\\\": \\\"60006\\\", \\\"DefaultAuth\\\": \\\"\\\", \\\"Programs\\\": []}, \\\"Recording\\\": {\\\"RecordedId\\\": \\\"3120\\\", \\\"Status\\\": \\\"-3\\\", \\\"Priority\\\": \\\"0\\\", \\\"StartTs\\\": \\\"\\\", \\\"EndTs\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"RecordId\\\": \\\"112\\\", \\\"RecGroup\\\": \\\"Default\\\", \\\"PlayGroup\\\": \\\"Default\\\", \\\"StorageGroup\\\": \\\"Default\\\", \\\"RecType\\\": \\\"0\\\", \\\"DupInType\\\": \\\"15\\\", \\\"DupMethod\\\": \\\"6\\\", \\\"EncoderId\\\": \\\"0\\\", \\\"EncoderName\\\": \\\"\\\", \\\"Profile\\\": \\\"Default\\\"}, \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\"", "var_name": "JSON_RESPONSE_DVR_GET_RECORDED_NULL_STARTTS"}, {"original_string": "private static final String JSON_RESPONSE_DVR_GET_RECORDED_NULL_RECORDEDID = \"{\\\"Program\\\": {\\\"StartTime\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTime\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"Title\\\": \\\"Star Wars: Droid Tales\\\", \\\"SubTitle\\\": \\\"Mission to Mos Eisley\\\", \\\"Category\\\": \\\"Fantasy\\\", \\\"CatType\\\": \\\"series\\\", \\\"Repeat\\\": \\\"false\\\", \\\"VideoProps\\\": \\\"11\\\", \\\"AudioProps\\\": \\\"0\\\", \\\"SubProps\\\": \\\"1\\\", \\\"SeriesId\\\": \\\"EP02206828\\\", \\\"ProgramId\\\": \\\"EP022068280003\\\", \\\"Stars\\\": \\\"0\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"ProgramFlags\\\": \\\"5\\\", \\\"Airdate\\\": \\\"2015-09-07\\\", \\\"Description\\\": \\\"C-3PO recounts his adventure with the ``Star Wars Rebels'' crew in an effort to find R2-D2, who has been kidnapped.\\\", \\\"Inetref\\\": \\\"ttvdb.py_298171\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"TotalEpisodes\\\": \\\"0\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"Channel\\\": {\\\"ChanId\\\": \\\"2289\\\", \\\"ChanNum\\\": \\\"1289\\\", \\\"CallSign\\\": \\\"DXDHD\\\", \\\"IconURL\\\": \\\"\\\", \\\"ChannelName\\\": \\\"Disney XD HD\\\", \\\"MplexId\\\": \\\"32767\\\", \\\"ServiceId\\\": \\\"0\\\", \\\"ATSCMajorChan\\\": \\\"1289\\\", \\\"ATSCMinorChan\\\": \\\"0\\\", \\\"Format\\\": \\\"Default\\\", \\\"FrequencyId\\\": \\\"1289\\\", \\\"FineTune\\\": \\\"0\\\", \\\"ChanFilters\\\": \\\"\\\", \\\"SourceId\\\": \\\"1\\\", \\\"InputId\\\": \\\"0\\\", \\\"CommFree\\\": \\\"false\\\", \\\"UseEIT\\\": \\\"false\\\", \\\"Visible\\\": \\\"true\\\", \\\"XMLTVID\\\": \\\"60006\\\", \\\"DefaultAuth\\\": \\\"\\\", \\\"Programs\\\": []}, \\\"Recording\\\": {\\\"RecordedId\\\": \\\"\\\", \\\"Status\\\": \\\"-3\\\", \\\"Priority\\\": \\\"0\\\", \\\"StartTs\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTs\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"RecordId\\\": \\\"112\\\", \\\"RecGroup\\\": \\\"Default\\\", \\\"PlayGroup\\\": \\\"Default\\\", \\\"StorageGroup\\\": \\\"Default\\\", \\\"RecType\\\": \\\"0\\\", \\\"DupInType\\\": \\\"15\\\", \\\"DupMethod\\\": \\\"6\\\", \\\"EncoderId\\\": \\\"0\\\", \\\"EncoderName\\\": \\\"\\\", \\\"Profile\\\": \\\"Default\\\"}, \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\";", "modifier": "private static final", "type": "String", "declarator": "JSON_RESPONSE_DVR_GET_RECORDED_NULL_RECORDEDID = \"{\\\"Program\\\": {\\\"StartTime\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTime\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"Title\\\": \\\"Star Wars: Droid Tales\\\", \\\"SubTitle\\\": \\\"Mission to Mos Eisley\\\", \\\"Category\\\": \\\"Fantasy\\\", \\\"CatType\\\": \\\"series\\\", \\\"Repeat\\\": \\\"false\\\", \\\"VideoProps\\\": \\\"11\\\", \\\"AudioProps\\\": \\\"0\\\", \\\"SubProps\\\": \\\"1\\\", \\\"SeriesId\\\": \\\"EP02206828\\\", \\\"ProgramId\\\": \\\"EP022068280003\\\", \\\"Stars\\\": \\\"0\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"ProgramFlags\\\": \\\"5\\\", \\\"Airdate\\\": \\\"2015-09-07\\\", \\\"Description\\\": \\\"C-3PO recounts his adventure with the ``Star Wars Rebels'' crew in an effort to find R2-D2, who has been kidnapped.\\\", \\\"Inetref\\\": \\\"ttvdb.py_298171\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"TotalEpisodes\\\": \\\"0\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"Channel\\\": {\\\"ChanId\\\": \\\"2289\\\", \\\"ChanNum\\\": \\\"1289\\\", \\\"CallSign\\\": \\\"DXDHD\\\", \\\"IconURL\\\": \\\"\\\", \\\"ChannelName\\\": \\\"Disney XD HD\\\", \\\"MplexId\\\": \\\"32767\\\", \\\"ServiceId\\\": \\\"0\\\", \\\"ATSCMajorChan\\\": \\\"1289\\\", \\\"ATSCMinorChan\\\": \\\"0\\\", \\\"Format\\\": \\\"Default\\\", \\\"FrequencyId\\\": \\\"1289\\\", \\\"FineTune\\\": \\\"0\\\", \\\"ChanFilters\\\": \\\"\\\", \\\"SourceId\\\": \\\"1\\\", \\\"InputId\\\": \\\"0\\\", \\\"CommFree\\\": \\\"false\\\", \\\"UseEIT\\\": \\\"false\\\", \\\"Visible\\\": \\\"true\\\", \\\"XMLTVID\\\": \\\"60006\\\", \\\"DefaultAuth\\\": \\\"\\\", \\\"Programs\\\": []}, \\\"Recording\\\": {\\\"RecordedId\\\": \\\"\\\", \\\"Status\\\": \\\"-3\\\", \\\"Priority\\\": \\\"0\\\", \\\"StartTs\\\": \\\"2015-09-08T11:30:00Z\\\", \\\"EndTs\\\": \\\"2015-09-08T12:00:00Z\\\", \\\"FileSize\\\": \\\"2780544064\\\", \\\"FileName\\\": \\\"2289_20150908113000.ts\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"LastModified\\\": \\\"2015-09-08T12:00:01Z\\\", \\\"RecordId\\\": \\\"112\\\", \\\"RecGroup\\\": \\\"Default\\\", \\\"PlayGroup\\\": \\\"Default\\\", \\\"StorageGroup\\\": \\\"Default\\\", \\\"RecType\\\": \\\"0\\\", \\\"DupInType\\\": \\\"15\\\", \\\"DupMethod\\\": \\\"6\\\", \\\"EncoderId\\\": \\\"0\\\", \\\"EncoderName\\\": \\\"\\\", \\\"Profile\\\": \\\"Default\\\"}, \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\"", "var_name": "JSON_RESPONSE_DVR_GET_RECORDED_NULL_RECORDEDID"}, {"original_string": "private static final String JSON_RESPONSE_VIDEO_GET_VIDEO = \"{\\\"VideoMetadataInfo\\\":{\\\"Id\\\": \\\"1\\\", \\\"Title\\\": \\\"big buck bunny 1080p stereo\\\", \\\"SubTitle\\\": \\\"\\\", \\\"Tagline\\\": \\\"\\\", \\\"Director\\\": \\\"Unknown\\\", \\\"Studio\\\": \\\"\\\", \\\"Description\\\": \\\"None\\\", \\\"Certification\\\": \\\"NR\\\", \\\"Inetref\\\": \\\"00000000\\\", \\\"Collectionref\\\": \\\"-1\\\", \\\"HomePage\\\": \\\"\\\", \\\"ReleaseDate\\\": \\\"\\\", \\\"AddDate\\\": \\\"2015-01-05T05:00:00Z\\\", \\\"UserRating\\\": \\\"0\\\", \\\"Length\\\": \\\"0\\\", \\\"PlayCount\\\": \\\"0\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"ParentalLevel\\\": \\\"1\\\", \\\"Visible\\\": \\\"true\\\", \\\"Watched\\\": \\\"false\\\", \\\"Processed\\\": \\\"true\\\", \\\"ContentType\\\": \\\"MOVIE\\\", \\\"FileName\\\": \\\"library\\\\/Blender\\\\/big_buck_bunny_1080p_stereo.ogg\\\", \\\"Hash\\\": \\\"63ad35476c29214c\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"Coverart\\\": \\\"\\\", \\\"Fanart\\\": \\\"\\\", \\\"Banner\\\": \\\"\\\", \\\"Screenshot\\\": \\\"\\\", \\\"Trailer\\\": \\\"\\\", \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\";", "modifier": "private static final", "type": "String", "declarator": "JSON_RESPONSE_VIDEO_GET_VIDEO = \"{\\\"VideoMetadataInfo\\\":{\\\"Id\\\": \\\"1\\\", \\\"Title\\\": \\\"big buck bunny 1080p stereo\\\", \\\"SubTitle\\\": \\\"\\\", \\\"Tagline\\\": \\\"\\\", \\\"Director\\\": \\\"Unknown\\\", \\\"Studio\\\": \\\"\\\", \\\"Description\\\": \\\"None\\\", \\\"Certification\\\": \\\"NR\\\", \\\"Inetref\\\": \\\"00000000\\\", \\\"Collectionref\\\": \\\"-1\\\", \\\"HomePage\\\": \\\"\\\", \\\"ReleaseDate\\\": \\\"\\\", \\\"AddDate\\\": \\\"2015-01-05T05:00:00Z\\\", \\\"UserRating\\\": \\\"0\\\", \\\"Length\\\": \\\"0\\\", \\\"PlayCount\\\": \\\"0\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"ParentalLevel\\\": \\\"1\\\", \\\"Visible\\\": \\\"true\\\", \\\"Watched\\\": \\\"false\\\", \\\"Processed\\\": \\\"true\\\", \\\"ContentType\\\": \\\"MOVIE\\\", \\\"FileName\\\": \\\"library\\\\/Blender\\\\/big_buck_bunny_1080p_stereo.ogg\\\", \\\"Hash\\\": \\\"63ad35476c29214c\\\", \\\"HostName\\\": \\\"mythcenter\\\", \\\"Coverart\\\": \\\"\\\", \\\"Fanart\\\": \\\"\\\", \\\"Banner\\\": \\\"\\\", \\\"Screenshot\\\": \\\"\\\", \\\"Trailer\\\": \\\"\\\", \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\"", "var_name": "JSON_RESPONSE_VIDEO_GET_VIDEO"}, {"original_string": "private static final String JSON_RESPONSE_DVR_GET_RECORDED_BILL_BAD = \"{\\\"Program\\\": {\\\"StartTime\\\": \\\"2017-01-25T01:29:38Z\\\", \\\"EndTime\\\": \\\"2017-01-25T01:29:38Z\\\", \\\"Title\\\": \\\"\\\", \\\"SubTitle\\\": \\\"\\\", \\\"Category\\\": \\\"\\\", \\\"CatType\\\": \\\"\\\", \\\"Repeat\\\": \\\"false\\\", \\\"VideoProps\\\": \\\"0\\\", \\\"AudioProps\\\": \\\"0\\\", \\\"SubProps\\\": \\\"0\\\", \\\"SeriesId\\\": \\\"\\\", \\\"ProgramId\\\": \\\"\\\", \\\"Stars\\\": \\\"0\\\", \\\"LastModified\\\": \\\"2017-01-25T01:29:38Z\\\", \\\"ProgramFlags\\\": \\\"0\\\", \\\"Airdate\\\": \\\"\\\", \\\"Description\\\": \\\"\\\", \\\"Inetref\\\": \\\"\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"TotalEpisodes\\\": \\\"0\\\", \\\"FileSize\\\": \\\"0\\\", \\\"FileName\\\": \\\"\\\", \\\"HostName\\\": \\\"\\\", \\\"Channel\\\": {\\\"ChanId\\\": \\\"0\\\", \\\"ChanNum\\\": \\\"\\\", \\\"CallSign\\\": \\\"\\\", \\\"IconURL\\\": \\\"\\\", \\\"ChannelName\\\": \\\"\\\", \\\"MplexId\\\": \\\"0\\\", \\\"ServiceId\\\": \\\"0\\\", \\\"ATSCMajorChan\\\": \\\"0\\\", \\\"ATSCMinorChan\\\": \\\"0\\\", \\\"Format\\\": \\\"\\\", \\\"FrequencyId\\\": \\\"\\\", \\\"FineTune\\\": \\\"0\\\", \\\"ChanFilters\\\": \\\"\\\", \\\"SourceId\\\": \\\"0\\\", \\\"InputId\\\": \\\"0\\\", \\\"CommFree\\\": \\\"false\\\", \\\"UseEIT\\\": \\\"false\\\", \\\"Visible\\\": \\\"true\\\", \\\"XMLTVID\\\": \\\"\\\", \\\"DefaultAuth\\\": \\\"\\\", \\\"Programs\\\": []}, \\\"Recording\\\": {\\\"RecordedId\\\": \\\"0\\\", \\\"Status\\\": \\\"0\\\", \\\"Priority\\\": \\\"0\\\", \\\"StartTs\\\": \\\"\\\", \\\"EndTs\\\": \\\"\\\", \\\"FileSize\\\": \\\"0\\\", \\\"FileName\\\": \\\"\\\", \\\"HostName\\\": \\\"\\\", \\\"LastModified\\\": \\\"\\\", \\\"RecordId\\\": \\\"0\\\", \\\"RecGroup\\\": \\\"\\\", \\\"PlayGroup\\\": \\\"\\\", \\\"StorageGroup\\\": \\\"\\\", \\\"RecType\\\": \\\"0\\\", \\\"DupInType\\\": \\\"1\\\", \\\"DupMethod\\\": \\\"1\\\", \\\"EncoderId\\\": \\\"0\\\", \\\"EncoderName\\\": \\\"\\\", \\\"Profile\\\": \\\"\\\"}, \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\";", "modifier": "private static final", "type": "String", "declarator": "JSON_RESPONSE_DVR_GET_RECORDED_BILL_BAD = \"{\\\"Program\\\": {\\\"StartTime\\\": \\\"2017-01-25T01:29:38Z\\\", \\\"EndTime\\\": \\\"2017-01-25T01:29:38Z\\\", \\\"Title\\\": \\\"\\\", \\\"SubTitle\\\": \\\"\\\", \\\"Category\\\": \\\"\\\", \\\"CatType\\\": \\\"\\\", \\\"Repeat\\\": \\\"false\\\", \\\"VideoProps\\\": \\\"0\\\", \\\"AudioProps\\\": \\\"0\\\", \\\"SubProps\\\": \\\"0\\\", \\\"SeriesId\\\": \\\"\\\", \\\"ProgramId\\\": \\\"\\\", \\\"Stars\\\": \\\"0\\\", \\\"LastModified\\\": \\\"2017-01-25T01:29:38Z\\\", \\\"ProgramFlags\\\": \\\"0\\\", \\\"Airdate\\\": \\\"\\\", \\\"Description\\\": \\\"\\\", \\\"Inetref\\\": \\\"\\\", \\\"Season\\\": \\\"0\\\", \\\"Episode\\\": \\\"0\\\", \\\"TotalEpisodes\\\": \\\"0\\\", \\\"FileSize\\\": \\\"0\\\", \\\"FileName\\\": \\\"\\\", \\\"HostName\\\": \\\"\\\", \\\"Channel\\\": {\\\"ChanId\\\": \\\"0\\\", \\\"ChanNum\\\": \\\"\\\", \\\"CallSign\\\": \\\"\\\", \\\"IconURL\\\": \\\"\\\", \\\"ChannelName\\\": \\\"\\\", \\\"MplexId\\\": \\\"0\\\", \\\"ServiceId\\\": \\\"0\\\", \\\"ATSCMajorChan\\\": \\\"0\\\", \\\"ATSCMinorChan\\\": \\\"0\\\", \\\"Format\\\": \\\"\\\", \\\"FrequencyId\\\": \\\"\\\", \\\"FineTune\\\": \\\"0\\\", \\\"ChanFilters\\\": \\\"\\\", \\\"SourceId\\\": \\\"0\\\", \\\"InputId\\\": \\\"0\\\", \\\"CommFree\\\": \\\"false\\\", \\\"UseEIT\\\": \\\"false\\\", \\\"Visible\\\": \\\"true\\\", \\\"XMLTVID\\\": \\\"\\\", \\\"DefaultAuth\\\": \\\"\\\", \\\"Programs\\\": []}, \\\"Recording\\\": {\\\"RecordedId\\\": \\\"0\\\", \\\"Status\\\": \\\"0\\\", \\\"Priority\\\": \\\"0\\\", \\\"StartTs\\\": \\\"\\\", \\\"EndTs\\\": \\\"\\\", \\\"FileSize\\\": \\\"0\\\", \\\"FileName\\\": \\\"\\\", \\\"HostName\\\": \\\"\\\", \\\"LastModified\\\": \\\"\\\", \\\"RecordId\\\": \\\"0\\\", \\\"RecGroup\\\": \\\"\\\", \\\"PlayGroup\\\": \\\"\\\", \\\"StorageGroup\\\": \\\"\\\", \\\"RecType\\\": \\\"0\\\", \\\"DupInType\\\": \\\"1\\\", \\\"DupMethod\\\": \\\"1\\\", \\\"EncoderId\\\": \\\"0\\\", \\\"EncoderName\\\": \\\"\\\", \\\"Profile\\\": \\\"\\\"}, \\\"Artwork\\\": {\\\"ArtworkInfos\\\": []}, \\\"Cast\\\": {\\\"CastMembers\\\": []}}}\"", "var_name": "JSON_RESPONSE_DVR_GET_RECORDED_BILL_BAD"}, {"original_string": "private ProgramEntityJsonMapper programEntityJsonMapper;", "modifier": "private", "type": "ProgramEntityJsonMapper", "declarator": "programEntityJsonMapper", "var_name": "programEntityJsonMapper"}, {"original_string": "private VideoMetadataInfoEntityJsonMapper videoMetadataInfoEntityJsonMapper;", "modifier": "private", "type": "VideoMetadataInfoEntityJsonMapper", "declarator": "videoMetadataInfoEntityJsonMapper", "var_name": "videoMetadataInfoEntityJsonMapper"}, {"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "mythtv-player/src/test/java/org/mythtv/android/data/entity/mapper/MediaItemEntityDataMapperTest.java"}, "test_case": {"identifier": "testTransformProgram", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTransformProgram() throws Exception {\n\n        ProgramEntity programEntity = programEntityJsonMapper.transformProgramEntity( JSON_RESPONSE_DVR_GET_RECORDED );\n        assertThat( programEntity, not( nullValue() ) );\n\n        MediaItemEntity mediaItem = MediaItemEntityDataMapper.transform( programEntity );\n        assertThat( mediaItem, not( nullValue() ) );\n        assertThat( mediaItem.id(), is( equalTo( 3120 ) ) );\n        assertThat( mediaItem.media(), is( equalTo( Media.PROGRAM ) ) );\n        assertThat( mediaItem.title(), is( equalTo( \"Star Wars: Droid Tales\" ) ) );\n        assertThat( mediaItem.subTitle(), is( equalTo( \"Mission to Mos Eisley\" ) ) );\n        assertThat( mediaItem.description(), is( equalTo( \"C-3PO recounts his adventure with the ``Star Wars Rebels'' crew in an effort to find R2-D2, who has been kidnapped.\" ) ) );\n        assertThat( mediaItem.startDate(), not( nullValue() ) );\n        assertThat( mediaItem.season(), is( equalTo( 0 ) ) );\n        assertThat( mediaItem.episode(), is( equalTo( 0 ) ) );\n        assertThat( mediaItem.studio(), is( equalTo( \"DXDHD\" ) ) );\n        assertThat( mediaItem.url(), is( equalTo( \"/Content/GetFile?FileName=2289_20150908113000.ts\" ) ) );\n        assertThat( mediaItem.fanartUrl(), is( nullValue() ) );\n        assertThat( mediaItem.coverartUrl(), is( nullValue() ) );\n        assertThat( mediaItem.bannerUrl(), is( nullValue() ) );\n        assertThat( mediaItem.previewUrl(), is( \"/Content/GetPreviewImage?RecordedId=3120\" ) );\n\n        assertThat( mediaItem.duration(), greaterThan(0L) );\n        assertThat( mediaItem.duration(), is( equalTo( 30L ) ) );\n        assertThat( mediaItem.isValid(), is( true ) );\n        assertThat( mediaItem.validationErrors(), hasSize( 0 ) );\n\n    }", "signature": "void testTransformProgram()", "full_signature": "@Test public void testTransformProgram()", "class_method_signature": "MediaItemEntityDataMapperTest.testTransformProgram()", "testcase": true, "constructor": false, "invocations": ["transformProgramEntity", "assertThat", "not", "nullValue", "transform", "assertThat", "not", "nullValue", "assertThat", "id", "is", "equalTo", "assertThat", "media", "is", "equalTo", "assertThat", "title", "is", "equalTo", "assertThat", "subTitle", "is", "equalTo", "assertThat", "description", "is", "equalTo", "assertThat", "startDate", "not", "nullValue", "assertThat", "season", "is", "equalTo", "assertThat", "episode", "is", "equalTo", "assertThat", "studio", "is", "equalTo", "assertThat", "url", "is", "equalTo", "assertThat", "fanartUrl", "is", "nullValue", "assertThat", "coverartUrl", "is", "nullValue", "assertThat", "bannerUrl", "is", "nullValue", "assertThat", "previewUrl", "is", "assertThat", "duration", "greaterThan", "assertThat", "duration", "is", "equalTo", "assertThat", "isValid", "is", "assertThat", "validationErrors", "hasSize"]}, "focal_class": {"identifier": "MediaItemEntityDataMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = MediaItemEntityDataMapper.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = MediaItemEntityDataMapper.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private static final String BANNER_KEY = \"banner\";", "modifier": "private static final", "type": "String", "declarator": "BANNER_KEY = \"banner\"", "var_name": "BANNER_KEY"}, {"original_string": "private static final String COVERART_KEY = \"coverart\";", "modifier": "private static final", "type": "String", "declarator": "COVERART_KEY = \"coverart\"", "var_name": "COVERART_KEY"}, {"original_string": "private static final String FANART_KEY = \"fanart\";", "modifier": "private static final", "type": "String", "declarator": "FANART_KEY = \"fanart\"", "var_name": "FANART_KEY"}], "methods": [{"identifier": "MediaItemEntityDataMapper", "parameters": "()", "modifiers": "private", "return": "", "signature": " MediaItemEntityDataMapper()", "full_signature": "private  MediaItemEntityDataMapper()", "class_method_signature": "MediaItemEntityDataMapper.MediaItemEntityDataMapper()", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "( ProgramEntity programEntity )", "modifiers": "public static", "return": "MediaItemEntity", "signature": "MediaItemEntity transform( ProgramEntity programEntity )", "full_signature": "public static MediaItemEntity transform( ProgramEntity programEntity )", "class_method_signature": "MediaItemEntityDataMapper.transform( ProgramEntity programEntity )", "testcase": false, "constructor": false}, {"identifier": "transformPrograms", "parameters": "( Collection<ProgramEntity> programEntityCollection )", "modifiers": "public static", "return": "List<MediaItemEntity>", "signature": "List<MediaItemEntity> transformPrograms( Collection<ProgramEntity> programEntityCollection )", "full_signature": "public static List<MediaItemEntity> transformPrograms( Collection<ProgramEntity> programEntityCollection )", "class_method_signature": "MediaItemEntityDataMapper.transformPrograms( Collection<ProgramEntity> programEntityCollection )", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "( VideoMetadataInfoEntity videoEntity )", "modifiers": "public static", "return": "MediaItemEntity", "signature": "MediaItemEntity transform( VideoMetadataInfoEntity videoEntity )", "full_signature": "public static MediaItemEntity transform( VideoMetadataInfoEntity videoEntity )", "class_method_signature": "MediaItemEntityDataMapper.transform( VideoMetadataInfoEntity videoEntity )", "testcase": false, "constructor": false}, {"identifier": "transformVideos", "parameters": "( Collection<VideoMetadataInfoEntity> videoEntityCollection )", "modifiers": "public static", "return": "List<MediaItemEntity>", "signature": "List<MediaItemEntity> transformVideos( Collection<VideoMetadataInfoEntity> videoEntityCollection )", "full_signature": "public static List<MediaItemEntity> transformVideos( Collection<VideoMetadataInfoEntity> videoEntityCollection )", "class_method_signature": "MediaItemEntityDataMapper.transformVideos( Collection<VideoMetadataInfoEntity> videoEntityCollection )", "testcase": false, "constructor": false}, {"identifier": "calculateDuration", "parameters": "( DateTime startTime, DateTime endTime )", "modifiers": "private static", "return": "long", "signature": "long calculateDuration( DateTime startTime, DateTime endTime )", "full_signature": "private static long calculateDuration( DateTime startTime, DateTime endTime )", "class_method_signature": "MediaItemEntityDataMapper.calculateDuration( DateTime startTime, DateTime endTime )", "testcase": false, "constructor": false}, {"identifier": "setContentType", "parameters": "( String fileName )", "modifiers": "private static", "return": "String", "signature": "String setContentType( String fileName )", "full_signature": "private static String setContentType( String fileName )", "class_method_signature": "MediaItemEntityDataMapper.setContentType( String fileName )", "testcase": false, "constructor": false}, {"identifier": "addArtwork", "parameters": "( List<ArtworkInfoEntity> artworkInfoEntities )", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> addArtwork( List<ArtworkInfoEntity> artworkInfoEntities )", "full_signature": "private static Map<String, String> addArtwork( List<ArtworkInfoEntity> artworkInfoEntities )", "class_method_signature": "MediaItemEntityDataMapper.addArtwork( List<ArtworkInfoEntity> artworkInfoEntities )", "testcase": false, "constructor": false}, {"identifier": "defaultArtworks", "parameters": "()", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> defaultArtworks()", "full_signature": "private static Map<String, String> defaultArtworks()", "class_method_signature": "MediaItemEntityDataMapper.defaultArtworks()", "testcase": false, "constructor": false}], "file": "mythtv-player/src/main/java/org/mythtv/android/data/entity/mapper/MediaItemEntityDataMapper.java"}, "focal_method": {"identifier": "transform", "parameters": "( ProgramEntity programEntity )", "modifiers": "public static", "return": "MediaItemEntity", "body": "public static MediaItemEntity transform( ProgramEntity programEntity ) {\n        Log.i( TAG, \"transform : programEntity=\" + programEntity.toString() );\n\n        boolean dateValidationError = false, recordedIdValidationError = false;\n        List<ErrorEntity> errors = new ArrayList<>();\n\n        Log.i( TAG, \"transform : startTs=\" + programEntity.recording().startTs() + \", test=\" + ( null == programEntity.recording().startTs() ) );\n        if( null == programEntity.recording().startTs() ) {\n            Log.i( TAG, \"transform : added StartTs to errors\" );\n            errors.add( ErrorEntity.create( \"StartTs\", \"StartTs is not valid for \" + programEntity.title() + \" - \" + programEntity.subTitle(), -1 ) );\n            dateValidationError = true;\n        }\n\n        if( null == programEntity.recording().endTs() ) {\n            errors.add( ErrorEntity.create( \"EndTs\", \"EndTs is not valid for \" + programEntity.title() + \" - \" + programEntity.subTitle(), -1 ) );\n            dateValidationError = true;\n        }\n\n        if( programEntity.recording().status() != -1 && ( programEntity.recording().recordedId().equals( \"\" ) || programEntity.recording().recordedId().equals( \"0\" )  ) ) {\n            errors.add( ErrorEntity.create( \"RecordedId\", \"Recorded Id is not valid for \" + programEntity.title() + \" - \" + programEntity.subTitle(), -1 ) );\n            recordedIdValidationError = true;\n        }\n\n//        if( !recordedIdValidationError ) {\n//            mediaItem.setId( programEntity.recording().translateRecordedId() );\n//        }\n\n        Media media = null;\n        String url = null, contentType = null, previewUrl = null, recordingGroup = null, updateSavedBookmarkUrl = null;\n        int percentComplete = 0, liveStreamId = 0;\n        boolean watched = false, recording = false;\n        long bookmark = 0, duration = 0;\n        switch( programEntity.recording().status() ) {\n\n            case -3 :\n            case -2 :\n\n                url = \"/Content/GetFile?FileName=\" + programEntity.fileName();\n                if( null != programEntity.getLiveStreamInfoEntity() ) {\n\n                    url = programEntity.getLiveStreamInfoEntity().relativeUrl();\n                    percentComplete = programEntity.getLiveStreamInfoEntity().percentComplete();\n                    liveStreamId = programEntity.getLiveStreamInfoEntity().id();\n\n                }\n\n                media = Media.PROGRAM;\n                contentType = setContentType( url );\n                if( !recordedIdValidationError ) {\n                    previewUrl = \"/Content/GetPreviewImage?RecordedId=\" + programEntity.recording().recordedId();\n                }\n\n                watched = ( programEntity.programFlags() & 0x00000200 ) > 0;\n\n                recording = programEntity.recording().status() == -2;\n\n                recordingGroup = programEntity.recording().recGroup();\n\n                break;\n\n            case -1 :\n\n                media = Media.UPCOMING;\n\n                break;\n\n            default :\n\n                break;\n\n        }\n\n        if( !dateValidationError ) {\n            duration = calculateDuration( programEntity.recording().startTs(), programEntity.recording().endTs() );\n        }\n\n        Map<String, String> artworks = defaultArtworks();\n        if( null != programEntity.artwork() && null != programEntity.artwork().artworkInfos() && !programEntity.artwork().artworkInfos().isEmpty() ) {\n\n            artworks = addArtwork( programEntity.artwork().artworkInfos() );\n\n        }\n\n        if( null != programEntity.getLiveStreamInfoEntity() ) {\n\n            liveStreamId = programEntity.getLiveStreamInfoEntity().id();\n\n        }\n\n        List<String> castMembers = new ArrayList<>();\n        List<String> characters = new ArrayList<>();\n\n        if( null != programEntity.cast() && null != programEntity.cast().castMembers() && !programEntity.cast().castMembers().isEmpty() ) {\n\n            for( CastMemberEntity castMember : programEntity.cast().castMembers() ) {\n\n                if( !castMembers.contains( castMember.name() ) ) {\n                    castMembers.add( castMember.name() );\n                }\n\n                if( !characters.contains( castMember.characterName() ) ) {\n                    characters.add( castMember.characterName() );\n                }\n\n            }\n\n        }\n\n        String cast = \"\";\n        if( !castMembers.isEmpty() ) {\n\n            StringBuilder sb = new StringBuilder();\n            for( String name : castMembers ) {\n                sb.append( name ).append( ' ' );\n            }\n\n            cast = sb.toString().trim();\n\n        }\n\n        String characterNames = \"\";\n        if( !characters.isEmpty() ) {\n\n            StringBuilder sb = new StringBuilder();\n            for( String name : characters ) {\n                sb.append( name ).append( ' ' );\n            }\n\n            characterNames = sb.toString().trim();\n\n        }\n\n        if( !recordedIdValidationError ) {\n            updateSavedBookmarkUrl = String.format( \"/Dvr/SetSavedBookmark?RecordedId=%s1\", String.valueOf( programEntity.recording().recordedId() ) );\n        }\n        bookmark = programEntity.getBookmark();\n\n        Log.i( TAG, \"transform : exit\" );\n        return MediaItemEntity.create(\n                programEntity.recording().translateRecordedId(), media, programEntity.title(),\n                programEntity.subTitle(), programEntity.description(), programEntity.startTime(),\n                programEntity.programFlags(), programEntity.season(), programEntity.episode(),\n                programEntity.channel().callSign(), cast.trim(), characterNames, url, artworks.get( FANART_KEY ),\n                artworks.get( COVERART_KEY ), artworks.get( BANNER_KEY ), previewUrl, contentType, duration,\n                percentComplete, recording, liveStreamId,\n                watched, updateSavedBookmarkUrl, bookmark,\n                programEntity.inetref(), null, -1, recordingGroup, errors );\n    }", "signature": "MediaItemEntity transform( ProgramEntity programEntity )", "full_signature": "public static MediaItemEntity transform( ProgramEntity programEntity )", "class_method_signature": "MediaItemEntityDataMapper.transform( ProgramEntity programEntity )", "testcase": false, "constructor": false, "invocations": ["i", "toString", "i", "startTs", "recording", "startTs", "recording", "startTs", "recording", "i", "add", "create", "title", "subTitle", "endTs", "recording", "add", "create", "title", "subTitle", "status", "recording", "equals", "recordedId", "recording", "equals", "recordedId", "recording", "add", "create", "title", "subTitle", "status", "recording", "fileName", "getLiveStreamInfoEntity", "relativeUrl", "getLiveStreamInfoEntity", "percentComplete", "getLiveStreamInfoEntity", "id", "getLiveStreamInfoEntity", "setContentType", "recordedId", "recording", "programFlags", "status", "recording", "recGroup", "recording", "calculateDuration", "startTs", "recording", "endTs", "recording", "defaultArtworks", "artwork", "artworkInfos", "artwork", "isEmpty", "artworkInfos", "artwork", "addArtwork", "artworkInfos", "artwork", "getLiveStreamInfoEntity", "id", "getLiveStreamInfoEntity", "cast", "castMembers", "cast", "isEmpty", "castMembers", "cast", "castMembers", "cast", "contains", "name", "add", "name", "contains", "characterName", "add", "characterName", "isEmpty", "append", "append", "trim", "toString", "isEmpty", "append", "append", "trim", "toString", "format", "valueOf", "recordedId", "recording", "getBookmark", "i", "create", "translateRecordedId", "recording", "title", "subTitle", "description", "startTime", "programFlags", "season", "episode", "callSign", "channel", "trim", "get", "get", "get", "inetref"]}, "repository": {"repo_id": 27323134, "url": "https://github.com/MythTV-Clients/MythtvPlayerForAndroid", "stars": 17, "created": "11/30/2014 3:26:45 AM +00:00", "updates": "2019-12-31T22:13:00+00:00", "fork": "False", "license": "licensed"}}