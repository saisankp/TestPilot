{"test_class": {"identifier": "WeatherWebApiTest", "superclass": "", "interfaces": "", "fields": [], "file": "aula29-composing-monads/src/test/java/org/javasync/idioms/WeatherWebApiTest.java"}, "test_case": {"identifier": "testPastWeatherAsync", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testPastWeatherAsync() throws IOException {\n        CompletableFuture<List<WeatherInfo>> cf = WeatherWebApi\n            .pastWeather(37.017, -7.933, parse(\"2019-04-01\"), parse(\"2019-04-30\"));\n        cf\n            .thenAccept(wis -> wis.stream().findFirst().ifPresent(out::println))\n            .join();\n        cf\n            .thenApply(wis -> wis.stream().mapToInt(WeatherInfo::getTempC).max())\n            .thenAccept(temp -> temp.ifPresent(out::println))\n            .join();\n\n    }", "signature": "void testPastWeatherAsync()", "full_signature": "@Test public void testPastWeatherAsync()", "class_method_signature": "WeatherWebApiTest.testPastWeatherAsync()", "testcase": true, "constructor": false, "invocations": ["pastWeather", "parse", "parse", "join", "thenAccept", "ifPresent", "findFirst", "stream", "join", "thenAccept", "thenApply", "max", "mapToInt", "stream", "ifPresent"]}, "focal_class": {"identifier": "WeatherWebApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "final static String HOST = \"http://api.worldweatheronline.com/premium/v1/\";", "modifier": "final static", "type": "String", "declarator": "HOST = \"http://api.worldweatheronline.com/premium/v1/\"", "var_name": "HOST"}, {"original_string": "final static String PATH_PAST_WEATHER = \"past-weather.ashx?q=%s,%s&date=%s&enddate=%s&tp=24&format=json&key=%s\";", "modifier": "final static", "type": "String", "declarator": "PATH_PAST_WEATHER = \"past-weather.ashx?q=%s,%s&date=%s&enddate=%s&tp=24&format=json&key=%s\"", "var_name": "PATH_PAST_WEATHER"}, {"original_string": "final static String WEATHER_KEY = \"da5f2b8cc0a84eef8c6173655190905\";", "modifier": "final static", "type": "String", "declarator": "WEATHER_KEY = \"da5f2b8cc0a84eef8c6173655190905\"", "var_name": "WEATHER_KEY"}, {"original_string": "final static Gson gson = new Gson();", "modifier": "final static", "type": "Gson", "declarator": "gson = new Gson()", "var_name": "gson"}], "methods": [{"identifier": "pastWeather", "parameters": "(double lat, double log, LocalDate from, LocalDate to)", "modifiers": "public static", "return": "CompletableFuture<List<WeatherInfo>>", "signature": "CompletableFuture<List<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "full_signature": "public static CompletableFuture<List<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "class_method_signature": "WeatherWebApi.pastWeather(double lat, double log, LocalDate from, LocalDate to)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(AsyncHttpClient ahc)", "modifiers": "private static", "return": "void", "signature": "void close(AsyncHttpClient ahc)", "full_signature": "private static void close(AsyncHttpClient ahc)", "class_method_signature": "WeatherWebApi.close(AsyncHttpClient ahc)", "testcase": false, "constructor": false}, {"identifier": "fromDtoToWeatherInfo", "parameters": "(PastWeatherDto dto)", "modifiers": "private static", "return": "List<WeatherInfo>", "signature": "List<WeatherInfo> fromDtoToWeatherInfo(PastWeatherDto dto)", "full_signature": "private static List<WeatherInfo> fromDtoToWeatherInfo(PastWeatherDto dto)", "class_method_signature": "WeatherWebApi.fromDtoToWeatherInfo(PastWeatherDto dto)", "testcase": false, "constructor": false}], "file": "aula29-composing-monads/src/main/java/org/javasync/idioms/WeatherWebApi.java"}, "focal_method": {"identifier": "pastWeather", "parameters": "(double lat, double log, LocalDate from, LocalDate to)", "modifiers": "public static", "return": "CompletableFuture<List<WeatherInfo>>", "body": "public static CompletableFuture<List<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to) throws IOException {\n        String path = HOST + String.format(PATH_PAST_WEATHER, lat, log, from, to, WEATHER_KEY);\n        AsyncHttpClient ahc = Dsl.asyncHttpClient();\n        return ahc\n            .prepareGet(path)\n            .execute()\n            .toCompletableFuture()\n            .thenApply(Response::getResponseBody)\n            .whenComplete((body, err) -> close(ahc))\n            .thenApply(body -> {\n                PastWeatherDto dto = gson.fromJson(body, PastWeatherDto.class);\n                return fromDtoToWeatherInfo(dto);\n            });\n    }", "signature": "CompletableFuture<List<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "full_signature": "public static CompletableFuture<List<WeatherInfo>> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "class_method_signature": "WeatherWebApi.pastWeather(double lat, double log, LocalDate from, LocalDate to)", "testcase": false, "constructor": false, "invocations": ["format", "asyncHttpClient", "thenApply", "whenComplete", "thenApply", "toCompletableFuture", "execute", "prepareGet", "close", "fromJson", "fromDtoToWeatherInfo"]}, "repository": {"repo_id": 171326919, "url": "https://github.com/isel-leic-mpd/mpd-2019-i41n", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 13, "size": 404, "license": "licensed"}}