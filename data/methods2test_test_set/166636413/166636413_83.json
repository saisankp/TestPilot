{"test_class": {"identifier": "AuditConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "collect_app/src/test/java/org/odk/collect/android/logic/AuditConfigTest.java"}, "test_case": {"identifier": "logLocationCoordinatesOnlyIfAllParametersAreSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void logLocationCoordinatesOnlyIfAllParametersAreSet() {\n        AuditConfig auditConfig = new AuditConfig(\"high-accuracy\", \"10\", \"60\", false);\n        assertTrue(auditConfig.isLocationEnabled());\n        auditConfig = new AuditConfig(null, \"10\", \"60\", false);\n        assertFalse(auditConfig.isLocationEnabled());\n        auditConfig = new AuditConfig(null, null, \"60\", false);\n        assertFalse(auditConfig.isLocationEnabled());\n        auditConfig = new AuditConfig(null, null, null, false);\n        assertFalse(auditConfig.isLocationEnabled());\n        auditConfig = new AuditConfig(\"balanced\", null, null, false);\n        assertFalse(auditConfig.isLocationEnabled());\n        auditConfig = new AuditConfig(\"balanced\", \"10\", null, false);\n        assertFalse(auditConfig.isLocationEnabled());\n        auditConfig = new AuditConfig(\"balanced\", null, \"60\", false);\n        assertFalse(auditConfig.isLocationEnabled());\n        auditConfig = new AuditConfig(null, null, \"60\", false);\n        assertFalse(auditConfig.isLocationEnabled());\n    }", "signature": "void logLocationCoordinatesOnlyIfAllParametersAreSet()", "full_signature": "@Test public void logLocationCoordinatesOnlyIfAllParametersAreSet()", "class_method_signature": "AuditConfigTest.logLocationCoordinatesOnlyIfAllParametersAreSet()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isLocationEnabled", "assertFalse", "isLocationEnabled", "assertFalse", "isLocationEnabled", "assertFalse", "isLocationEnabled", "assertFalse", "isLocationEnabled", "assertFalse", "isLocationEnabled", "assertFalse", "isLocationEnabled", "assertFalse", "isLocationEnabled"]}, "focal_class": {"identifier": "AuditConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long MIN_ALLOWED_LOCATION_MIN_INTERVAL = 1000;", "modifier": "private static final", "type": "long", "declarator": "MIN_ALLOWED_LOCATION_MIN_INTERVAL = 1000", "var_name": "MIN_ALLOWED_LOCATION_MIN_INTERVAL"}, {"original_string": "private final LocationClient.Priority locationPriority;", "modifier": "private final", "type": "LocationClient.Priority", "declarator": "locationPriority", "var_name": "locationPriority"}, {"original_string": "private final Long locationMinInterval;", "modifier": "private final", "type": "Long", "declarator": "locationMinInterval", "var_name": "locationMinInterval"}, {"original_string": "private final Long locationMaxAge;", "modifier": "private final", "type": "Long", "declarator": "locationMaxAge", "var_name": "locationMaxAge"}, {"original_string": "private final boolean isTrackingChangesEnabled;", "modifier": "private final", "type": "boolean", "declarator": "isTrackingChangesEnabled", "var_name": "isTrackingChangesEnabled"}], "methods": [{"identifier": "AuditConfig", "parameters": "(String mode, String locationMinInterval, String locationMaxAge, boolean isTrackingChangesEnabled)", "modifiers": "public", "return": "", "signature": " AuditConfig(String mode, String locationMinInterval, String locationMaxAge, boolean isTrackingChangesEnabled)", "full_signature": "public  AuditConfig(String mode, String locationMinInterval, String locationMaxAge, boolean isTrackingChangesEnabled)", "class_method_signature": "AuditConfig.AuditConfig(String mode, String locationMinInterval, String locationMaxAge, boolean isTrackingChangesEnabled)", "testcase": false, "constructor": true}, {"identifier": "getMode", "parameters": "(@NonNull String mode)", "modifiers": "private", "return": "LocationClient.Priority", "signature": "LocationClient.Priority getMode(@NonNull String mode)", "full_signature": "private LocationClient.Priority getMode(@NonNull String mode)", "class_method_signature": "AuditConfig.getMode(@NonNull String mode)", "testcase": false, "constructor": false}, {"identifier": "getLocationPriority", "parameters": "()", "modifiers": "@Nullable public", "return": "LocationClient.Priority", "signature": "LocationClient.Priority getLocationPriority()", "full_signature": "@Nullable public LocationClient.Priority getLocationPriority()", "class_method_signature": "AuditConfig.getLocationPriority()", "testcase": false, "constructor": false}, {"identifier": "getLocationMinInterval", "parameters": "()", "modifiers": "@Nullable public", "return": "Long", "signature": "Long getLocationMinInterval()", "full_signature": "@Nullable public Long getLocationMinInterval()", "class_method_signature": "AuditConfig.getLocationMinInterval()", "testcase": false, "constructor": false}, {"identifier": "getLocationMaxAge", "parameters": "()", "modifiers": "@Nullable public", "return": "Long", "signature": "Long getLocationMaxAge()", "full_signature": "@Nullable public Long getLocationMaxAge()", "class_method_signature": "AuditConfig.getLocationMaxAge()", "testcase": false, "constructor": false}, {"identifier": "isLocationEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLocationEnabled()", "full_signature": "public boolean isLocationEnabled()", "class_method_signature": "AuditConfig.isLocationEnabled()", "testcase": false, "constructor": false}, {"identifier": "isTrackingChangesEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTrackingChangesEnabled()", "full_signature": "public boolean isTrackingChangesEnabled()", "class_method_signature": "AuditConfig.isTrackingChangesEnabled()", "testcase": false, "constructor": false}], "file": "collect_app/src/main/java/org/odk/collect/android/logic/AuditConfig.java"}, "focal_method": {"identifier": "isLocationEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isLocationEnabled() {\n        return locationPriority != null && locationMinInterval != null && locationMaxAge != null;\n    }", "signature": "boolean isLocationEnabled()", "full_signature": "public boolean isLocationEnabled()", "class_method_signature": "AuditConfig.isLocationEnabled()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 166636413, "url": "https://github.com/fieldsight/fieldsight-mobile", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 14, "size": 41030, "license": "licensed"}}