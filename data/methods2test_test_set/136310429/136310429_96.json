{"test_class": {"identifier": "WXListComponentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "WXListComponent component;", "modifier": "", "type": "WXListComponent", "declarator": "component", "var_name": "component"}], "file": "HybridAppDev/weex_sdk/src/test/java/com/taobao/weex/ui/component/list/WXListComponentTest.java"}, "test_case": {"identifier": "testAddChild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAddChild() throws Exception {\n    WXComponent child = WXDivTest.create(component);\n    ComponentTest.create(child);\n    component.addChild(child);\n\n    child = WXHeaderTest.create(component);\n    ComponentTest.create(child);\n    component.addChild(child);\n\n  }", "signature": "void testAddChild()", "full_signature": "@Test public void testAddChild()", "class_method_signature": "WXListComponentTest.testAddChild()", "testcase": true, "constructor": false, "invocations": ["create", "create", "addChild", "create", "create", "addChild"]}, "focal_class": {"identifier": "WXListComponent", "superclass": "extends BasicListComponent<BounceRecyclerView>", "interfaces": "", "fields": [{"original_string": "private String TAG = \"WXListComponent\";", "modifier": "private", "type": "String", "declarator": "TAG = \"WXListComponent\"", "var_name": "TAG"}, {"original_string": "private WXRecyclerDomObject mRecyclerDom;", "modifier": "private", "type": "WXRecyclerDomObject", "declarator": "mRecyclerDom", "var_name": "mRecyclerDom"}, {"original_string": "private float mPaddingLeft;", "modifier": "private", "type": "float", "declarator": "mPaddingLeft", "var_name": "mPaddingLeft"}, {"original_string": "private float mPaddingRight;", "modifier": "private", "type": "float", "declarator": "mPaddingRight", "var_name": "mPaddingRight"}], "methods": [{"identifier": "WXListComponent", "parameters": "(WXSDKInstance instance, WXDomObject dom, WXVContainer parent, String instanceId, boolean isLazy)", "modifiers": "@Deprecated public", "return": "", "signature": " WXListComponent(WXSDKInstance instance, WXDomObject dom, WXVContainer parent, String instanceId, boolean isLazy)", "full_signature": "@Deprecated public  WXListComponent(WXSDKInstance instance, WXDomObject dom, WXVContainer parent, String instanceId, boolean isLazy)", "class_method_signature": "WXListComponent.WXListComponent(WXSDKInstance instance, WXDomObject dom, WXVContainer parent, String instanceId, boolean isLazy)", "testcase": false, "constructor": true}, {"identifier": "WXListComponent", "parameters": "(WXSDKInstance instance, WXDomObject node, WXVContainer parent, boolean lazy)", "modifiers": "public", "return": "", "signature": " WXListComponent(WXSDKInstance instance, WXDomObject node, WXVContainer parent, boolean lazy)", "full_signature": "public  WXListComponent(WXSDKInstance instance, WXDomObject node, WXVContainer parent, boolean lazy)", "class_method_signature": "WXListComponent.WXListComponent(WXSDKInstance instance, WXDomObject node, WXVContainer parent, boolean lazy)", "testcase": false, "constructor": true}, {"identifier": "generateListView", "parameters": "(Context context, int orientation)", "modifiers": "@Override protected", "return": "BounceRecyclerView", "signature": "BounceRecyclerView generateListView(Context context, int orientation)", "full_signature": "@Override protected BounceRecyclerView generateListView(Context context, int orientation)", "class_method_signature": "WXListComponent.generateListView(Context context, int orientation)", "testcase": false, "constructor": false}, {"identifier": "addChild", "parameters": "(final WXComponent child, int index)", "modifiers": "@Override public", "return": "void", "signature": "void addChild(final WXComponent child, int index)", "full_signature": "@Override public void addChild(final WXComponent child, int index)", "class_method_signature": "WXListComponent.addChild(final WXComponent child, int index)", "testcase": false, "constructor": false}, {"identifier": "updateRecyclerAttr", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateRecyclerAttr()", "full_signature": "private void updateRecyclerAttr()", "class_method_signature": "WXListComponent.updateRecyclerAttr()", "testcase": false, "constructor": false}, {"identifier": "setColumnWidth", "parameters": "(int columnCount)", "modifiers": "@WXComponentProp(name = Constants.Name.COLUMN_WIDTH) public", "return": "void", "signature": "void setColumnWidth(int columnCount)", "full_signature": "@WXComponentProp(name = Constants.Name.COLUMN_WIDTH) public void setColumnWidth(int columnCount)", "class_method_signature": "WXListComponent.setColumnWidth(int columnCount)", "testcase": false, "constructor": false}, {"identifier": "setColumnCount", "parameters": "(int columnCount)", "modifiers": "@WXComponentProp(name = Constants.Name.COLUMN_COUNT) public", "return": "void", "signature": "void setColumnCount(int columnCount)", "full_signature": "@WXComponentProp(name = Constants.Name.COLUMN_COUNT) public void setColumnCount(int columnCount)", "class_method_signature": "WXListComponent.setColumnCount(int columnCount)", "testcase": false, "constructor": false}, {"identifier": "setColumnGap", "parameters": "(float columnGap)", "modifiers": "@WXComponentProp(name = Constants.Name.COLUMN_GAP) public", "return": "void", "signature": "void setColumnGap(float columnGap)", "full_signature": "@WXComponentProp(name = Constants.Name.COLUMN_GAP) public void setColumnGap(float columnGap)", "class_method_signature": "WXListComponent.setColumnGap(float columnGap)", "testcase": false, "constructor": false}, {"identifier": "setScrollable", "parameters": "(boolean scrollable)", "modifiers": "@WXComponentProp(name = Constants.Name.SCROLLABLE) public", "return": "void", "signature": "void setScrollable(boolean scrollable)", "full_signature": "@WXComponentProp(name = Constants.Name.SCROLLABLE) public void setScrollable(boolean scrollable)", "class_method_signature": "WXListComponent.setScrollable(boolean scrollable)", "testcase": false, "constructor": false}, {"identifier": "updateProperties", "parameters": "(Map<String, Object> props)", "modifiers": "@Override public", "return": "void", "signature": "void updateProperties(Map<String, Object> props)", "full_signature": "@Override public void updateProperties(Map<String, Object> props)", "class_method_signature": "WXListComponent.updateProperties(Map<String, Object> props)", "testcase": false, "constructor": false}, {"identifier": "createChildViewAt", "parameters": "(int index)", "modifiers": "@Override public", "return": "void", "signature": "void createChildViewAt(int index)", "full_signature": "@Override public void createChildViewAt(int index)", "class_method_signature": "WXListComponent.createChildViewAt(int index)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(WXComponent child, boolean destroy)", "modifiers": "public", "return": "void", "signature": "void remove(WXComponent child, boolean destroy)", "full_signature": "public void remove(WXComponent child, boolean destroy)", "class_method_signature": "WXListComponent.remove(WXComponent child, boolean destroy)", "testcase": false, "constructor": false}], "file": "HybridAppDev/weex_sdk/src/main/java/com/taobao/weex/ui/component/list/WXListComponent.java"}, "focal_method": {"identifier": "addChild", "parameters": "(final WXComponent child, int index)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void addChild(final WXComponent child, int index) {\n    super.addChild(child, index);\n    if (child == null || index < -1) {\n      return;\n    }\n\n    if (child instanceof WXRefresh && getHostView() != null) {\n        getHostView().setOnRefreshListener((WXRefresh) child);\n        getHostView().postDelayed(WXThread.secure(new Runnable() {\n        @Override\n        public void run() {\n          getHostView().setHeaderView(child);\n        }\n      }), 100);\n    }\n\n    if (child instanceof WXLoading && getHostView() != null) {\n        getHostView().setOnLoadingListener((WXLoading) child);\n        getHostView().postDelayed(WXThread.secure(new Runnable() {\n        @Override\n        public void run() {\n          getHostView().setFooterView(child);\n        }\n      }), 100);\n    }\n\n    // Synchronize DomObject's attr to Component and Native View\n    if(mRecyclerDom != null && getHostView() != null && (mColumnWidth != mRecyclerDom.getColumnWidth() ||\n            mColumnCount != mRecyclerDom.getColumnCount() ||\n            mColumnGap != mRecyclerDom.getColumnGap())) {\n      updateRecyclerAttr();\n      getHostView().getInnerView().initView(getContext(), mLayoutType,mColumnCount,mColumnGap,getOrientation());\n    }\n  }", "signature": "void addChild(final WXComponent child, int index)", "full_signature": "@Override public void addChild(final WXComponent child, int index)", "class_method_signature": "WXListComponent.addChild(final WXComponent child, int index)", "testcase": false, "constructor": false, "invocations": ["addChild", "getHostView", "setOnRefreshListener", "getHostView", "postDelayed", "getHostView", "secure", "setHeaderView", "getHostView", "getHostView", "setOnLoadingListener", "getHostView", "postDelayed", "getHostView", "secure", "setFooterView", "getHostView", "getHostView", "getColumnWidth", "getColumnCount", "getColumnGap", "updateRecyclerAttr", "initView", "getInnerView", "getHostView", "getContext", "getOrientation"]}, "repository": {"repo_id": 136310429, "url": "https://github.com/fangxiaopeng/HybridAppDev", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 6, "size": 8237, "license": "licensed"}}