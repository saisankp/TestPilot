{"test_class": {"identifier": "LittleEndianDataOutputStreamTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/util/src/test/java/hera/util/LittleEndianDataOutputStreamTest.java"}, "test_case": {"identifier": "testWriteChars", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n  public void testWriteChars() throws IOException {\n    final ByteArrayOutputStream byteOut = new ByteArrayOutputStream();\n    final LittleEndianDataOutputStream littleEndianOut = new LittleEndianDataOutputStream(byteOut);\n    littleEndianOut.writeChars(randomUUID().toString());\n    littleEndianOut.close();\n  }", "signature": "void testWriteChars()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testWriteChars()", "class_method_signature": "LittleEndianDataOutputStreamTest.testWriteChars()", "testcase": true, "constructor": false, "invocations": ["writeChars", "toString", "randomUUID", "close"]}, "focal_class": {"identifier": "LittleEndianDataOutputStream", "superclass": "extends FilterOutputStream", "interfaces": "implements DataOutput", "fields": [], "methods": [{"identifier": "LittleEndianDataOutputStream", "parameters": "(OutputStream out)", "modifiers": "public", "return": "", "signature": " LittleEndianDataOutputStream(OutputStream out)", "full_signature": "public  LittleEndianDataOutputStream(OutputStream out)", "class_method_signature": "LittleEndianDataOutputStream.LittleEndianDataOutputStream(OutputStream out)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b, int off, int len)", "full_signature": "@Override public void write(byte[] b, int off, int len)", "class_method_signature": "LittleEndianDataOutputStream.write(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "writeBoolean", "parameters": "(boolean v)", "modifiers": "@Override public", "return": "void", "signature": "void writeBoolean(boolean v)", "full_signature": "@Override public void writeBoolean(boolean v)", "class_method_signature": "LittleEndianDataOutputStream.writeBoolean(boolean v)", "testcase": false, "constructor": false}, {"identifier": "writeByte", "parameters": "(int v)", "modifiers": "@Override public", "return": "void", "signature": "void writeByte(int v)", "full_signature": "@Override public void writeByte(int v)", "class_method_signature": "LittleEndianDataOutputStream.writeByte(int v)", "testcase": false, "constructor": false}, {"identifier": "writeShort", "parameters": "(int v)", "modifiers": "@Override public", "return": "void", "signature": "void writeShort(int v)", "full_signature": "@Override public void writeShort(int v)", "class_method_signature": "LittleEndianDataOutputStream.writeShort(int v)", "testcase": false, "constructor": false}, {"identifier": "writeChar", "parameters": "(int v)", "modifiers": "@Override public", "return": "void", "signature": "void writeChar(int v)", "full_signature": "@Override public void writeChar(int v)", "class_method_signature": "LittleEndianDataOutputStream.writeChar(int v)", "testcase": false, "constructor": false}, {"identifier": "writeInt", "parameters": "(int v)", "modifiers": "@Override public", "return": "void", "signature": "void writeInt(int v)", "full_signature": "@Override public void writeInt(int v)", "class_method_signature": "LittleEndianDataOutputStream.writeInt(int v)", "testcase": false, "constructor": false}, {"identifier": "writeLong", "parameters": "(long v)", "modifiers": "@Override public", "return": "void", "signature": "void writeLong(long v)", "full_signature": "@Override public void writeLong(long v)", "class_method_signature": "LittleEndianDataOutputStream.writeLong(long v)", "testcase": false, "constructor": false}, {"identifier": "writeFloat", "parameters": "(float v)", "modifiers": "@Override public", "return": "void", "signature": "void writeFloat(float v)", "full_signature": "@Override public void writeFloat(float v)", "class_method_signature": "LittleEndianDataOutputStream.writeFloat(float v)", "testcase": false, "constructor": false}, {"identifier": "writeDouble", "parameters": "(double v)", "modifiers": "@Override public", "return": "void", "signature": "void writeDouble(double v)", "full_signature": "@Override public void writeDouble(double v)", "class_method_signature": "LittleEndianDataOutputStream.writeDouble(double v)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(String s)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(String s)", "full_signature": "@Override public void writeBytes(String s)", "class_method_signature": "LittleEndianDataOutputStream.writeBytes(String s)", "testcase": false, "constructor": false}, {"identifier": "writeChars", "parameters": "(String s)", "modifiers": "@Override public", "return": "void", "signature": "void writeChars(String s)", "full_signature": "@Override public void writeChars(String s)", "class_method_signature": "LittleEndianDataOutputStream.writeChars(String s)", "testcase": false, "constructor": false}, {"identifier": "writeUTF", "parameters": "(String str)", "modifiers": "@Override public", "return": "void", "signature": "void writeUTF(String str)", "full_signature": "@Override public void writeUTF(String str)", "class_method_signature": "LittleEndianDataOutputStream.writeUTF(String str)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "LittleEndianDataOutputStream.close()", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/hera/util/LittleEndianDataOutputStream.java"}, "focal_method": {"identifier": "writeChars", "parameters": "(String s)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void writeChars(String s) throws IOException {\n    throw new UnsupportedOperationException();\n  }", "signature": "void writeChars(String s)", "full_signature": "@Override public void writeChars(String s)", "class_method_signature": "LittleEndianDataOutputStream.writeChars(String s)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}