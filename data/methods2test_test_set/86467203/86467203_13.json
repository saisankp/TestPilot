{"test_class": {"identifier": "ImageRefTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/github/swissquote/carnotzet/core/docker/registry/ImageRefTest.java"}, "test_case": {"identifier": "remoteImageWithUserName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void remoteImageWithUserName() {\n\t\tImageRef ref = new ImageRef(\"docker.bank.swissquote.ch/djoaquim/image:3.3\");\n\t\tassertEquals(\"djoaquim/image\", ref.getImageName());\n\t}", "signature": "void remoteImageWithUserName()", "full_signature": "@Test public void remoteImageWithUserName()", "class_method_signature": "ImageRefTest.remoteImageWithUserName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getImageName"]}, "focal_class": {"identifier": "ImageRef", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_REGISTRY = \"docker.io\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_REGISTRY = \"docker.io\"", "var_name": "DEFAULT_REGISTRY"}, {"original_string": "private static final String DEFAULT_REGISTRY_URL = \"https://index.docker.io\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_REGISTRY_URL = \"https://index.docker.io\"", "var_name": "DEFAULT_REGISTRY_URL"}, {"original_string": "private static final String DEFAULT_TAG = \"latest\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_TAG = \"latest\"", "var_name": "DEFAULT_TAG"}, {"original_string": "private final String registryUrl;", "modifier": "private final", "type": "String", "declarator": "registryUrl", "var_name": "registryUrl"}, {"original_string": "private final String registry;", "modifier": "private final", "type": "String", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final String image;", "modifier": "private final", "type": "String", "declarator": "image", "var_name": "image"}, {"original_string": "private final String tag;", "modifier": "private final", "type": "String", "declarator": "tag", "var_name": "tag"}], "methods": [{"identifier": "ImageRef", "parameters": "(final String image)", "modifiers": "public", "return": "", "signature": " ImageRef(final String image)", "full_signature": "public  ImageRef(final String image)", "class_method_signature": "ImageRef.ImageRef(final String image)", "testcase": false, "constructor": true}, {"identifier": "isRegistry", "parameters": "(String part)", "modifiers": "private static", "return": "boolean", "signature": "boolean isRegistry(String part)", "full_signature": "private static boolean isRegistry(String part)", "class_method_signature": "ImageRef.isRegistry(String part)", "testcase": false, "constructor": false}, {"identifier": "getImage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getImage()", "full_signature": "public String getImage()", "class_method_signature": "ImageRef.getImage()", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTag()", "full_signature": "public String getTag()", "class_method_signature": "ImageRef.getTag()", "testcase": false, "constructor": false}, {"identifier": "getRegistryName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRegistryName()", "full_signature": "public String getRegistryName()", "class_method_signature": "ImageRef.getRegistryName()", "testcase": false, "constructor": false}, {"identifier": "getRegistryUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRegistryUrl()", "full_signature": "public String getRegistryUrl()", "class_method_signature": "ImageRef.getRegistryUrl()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImageRef.toString()", "testcase": false, "constructor": false}, {"identifier": "parseRegistryUrl", "parameters": "(final String url)", "modifiers": "@VisibleForTesting static", "return": "String", "signature": "String parseRegistryUrl(final String url)", "full_signature": "@VisibleForTesting static String parseRegistryUrl(final String url)", "class_method_signature": "ImageRef.parseRegistryUrl(final String url)", "testcase": false, "constructor": false}, {"identifier": "getImageName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getImageName()", "full_signature": "public String getImageName()", "class_method_signature": "ImageRef.getImageName()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/swissquote/carnotzet/core/docker/registry/ImageRef.java"}, "focal_method": {"identifier": "getImageName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getImageName() {\n\t\tString[] splitted = image.split(\"/\");\n\n\t\tStringJoiner joiner = new StringJoiner(\"/\");\n\t\tArrays.stream(splitted)\n\t\t\t\t.filter(token -> token.indexOf(\".\") < 0)\n\t\t\t\t.forEach(token -> joiner.add(token));\n\n\t\treturn joiner.toString();\n\t}", "signature": "String getImageName()", "full_signature": "public String getImageName()", "class_method_signature": "ImageRef.getImageName()", "testcase": false, "constructor": false, "invocations": ["split", "forEach", "filter", "stream", "indexOf", "add", "toString"]}, "repository": {"repo_id": 86467203, "url": "https://github.com/swissquote/carnotzet", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 36, "size": 803, "license": "licensed"}}