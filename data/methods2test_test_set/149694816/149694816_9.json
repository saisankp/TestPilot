{"test_class": {"identifier": "ProjectTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/build/res/ProjectTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToString() {\n    final String location = randomUUID().toString();\n    final Project project = new Project(location, new ProjectFile());\n    assertNotNull(project.toString());\n    assertTrue(0 < project.toString().length());\n  }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "ProjectTest.testToString()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "assertNotNull", "toString", "assertTrue", "length", "toString"]}, "focal_class": {"identifier": "Project", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Getter\n  @NonNull\n  protected final String location;", "modifier": "@Getter\n  @NonNull\n  protected final", "type": "String", "declarator": "location", "var_name": "location"}, {"original_string": "@Getter\n  @NonNull\n  protected final ProjectFile projectFile;", "modifier": "@Getter\n  @NonNull\n  protected final", "type": "ProjectFile", "declarator": "projectFile", "var_name": "projectFile"}], "methods": [{"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "Path", "signature": "Path getPath()", "full_signature": "public Path getPath()", "class_method_signature": "Project.getPath()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Project.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "Project.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Project.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/build/res/Project.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return getClass().getSimpleName() + \"[\" + location + \"]\";\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Project.toString()", "testcase": false, "constructor": false, "invocations": ["getSimpleName", "getClass"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}