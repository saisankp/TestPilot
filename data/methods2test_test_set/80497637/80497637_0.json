{"test_class": {"identifier": "DynectClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DynectClient client;", "modifier": "", "type": "DynectClient", "declarator": "client", "var_name": "client"}], "file": "mercator-dynect/src/test/java/org/lendingclub/mercator/dynect/DynectClientTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n\t@Ignore\n\tpublic void test() {\n\t\t\n\t\tclient = new DynectClient.DynBuilder().withProperties(\"Example\", \"mercator\", \"test\").build();\n\t\tclient.get(\"Zone\");\n\n\t}", "signature": "void test()", "full_signature": "@Test @Ignore public void test()", "class_method_signature": "DynectClientTest.test()", "testcase": true, "constructor": false, "invocations": ["build", "withProperties", "get"]}, "focal_class": {"identifier": "DynectClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ENDPOINT_URL = \"https://api2.dynect.net/\";", "modifier": "private static final", "type": "String", "declarator": "ENDPOINT_URL = \"https://api2.dynect.net/\"", "var_name": "ENDPOINT_URL"}, {"original_string": "private static Logger logger = LoggerFactory.getLogger(DynectClient.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DynectClient.class)", "var_name": "logger"}, {"original_string": "private OkRestTarget restTarget;", "modifier": "private", "type": "OkRestTarget", "declarator": "restTarget", "var_name": "restTarget"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private String customerName;", "modifier": "private", "type": "String", "declarator": "customerName", "var_name": "customerName"}, {"original_string": "private Token token;", "modifier": "private", "type": "Token", "declarator": "token", "var_name": "token"}, {"original_string": "private AtomicReference<Token> tokenRef = new AtomicReference<>();", "modifier": "private", "type": "AtomicReference<Token>", "declarator": "tokenRef = new AtomicReference<>()", "var_name": "tokenRef"}, {"original_string": "private TokenSupplier tokenSupplier = new TokenSupplier();", "modifier": "private", "type": "TokenSupplier", "declarator": "tokenSupplier = new TokenSupplier()", "var_name": "tokenSupplier"}], "methods": [{"identifier": "getToken", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getToken()", "full_signature": "public String getToken()", "class_method_signature": "DynectClient.getToken()", "testcase": false, "constructor": false}, {"identifier": "getRestTarget", "parameters": "()", "modifiers": "public", "return": "OkRestTarget", "signature": "OkRestTarget getRestTarget()", "full_signature": "public OkRestTarget getRestTarget()", "class_method_signature": "DynectClient.getRestTarget()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String path)", "modifiers": "public", "return": "ObjectNode", "signature": "ObjectNode get(String path)", "full_signature": "public ObjectNode get(String path)", "class_method_signature": "DynectClient.get(String path)", "testcase": false, "constructor": false}], "file": "mercator-dynect/src/main/java/org/lendingclub/mercator/dynect/DynectClient.java"}, "focal_method": {"identifier": "get", "parameters": "(String path)", "modifiers": "public", "return": "ObjectNode", "body": "public ObjectNode get(String path) { \n\t\tPreconditions.checkArgument(path != null || path != \"\",\n\t\t\t\t\"path can not be empty\");\n\t\tObjectNode response = getRestTarget().path(path).header(\"Auth-Token\", getToken()).addHeader(\"Content-Type\", \"application/json\").get().execute(ObjectNode.class);\n\t\treturn response;\n\t}", "signature": "ObjectNode get(String path)", "full_signature": "public ObjectNode get(String path)", "class_method_signature": "DynectClient.get(String path)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "execute", "get", "addHeader", "header", "path", "getRestTarget", "getToken"]}, "repository": {"repo_id": 80497637, "url": "https://github.com/LendingClub/mercator", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 64, "size": 646, "license": "licensed"}}