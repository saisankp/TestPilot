{"test_class": {"identifier": "PropertyReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Properties properties;", "modifier": "private", "type": "Properties", "declarator": "properties", "var_name": "properties"}, {"original_string": "private PropertyHolder propertyHolder;", "modifier": "private", "type": "PropertyHolder", "declarator": "propertyHolder", "var_name": "propertyHolder"}, {"original_string": "@InjectMocks\n    private PropertyReader underTest;", "modifier": "@InjectMocks\n    private", "type": "PropertyReader", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-message-search/modules/wilma-message-search-engine/src/test/java/com/epam/wilma/message/search/engine/properties/PropertyReaderTest.java"}, "test_case": {"identifier": "testSetPropertiesShouldPutPropertiesToPropertyHolder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetPropertiesShouldPutPropertiesToPropertyHolder() {\n        //GIVEN in setUp\n        properties.put(\"webapp.port\", \"1234\");\n        //WHEN\n        underTest.setProperties(properties);\n        //THEN\n        PropertyHolder actual = (PropertyHolder) Whitebox.getInternalState(underTest, \"propertyHolder\");\n        assertEquals(actual.getInt(\"webapp.port\"), Integer.valueOf(1234));\n    }", "signature": "void testSetPropertiesShouldPutPropertiesToPropertyHolder()", "full_signature": "@Test public void testSetPropertiesShouldPutPropertiesToPropertyHolder()", "class_method_signature": "PropertyReaderTest.testSetPropertiesShouldPutPropertiesToPropertyHolder()", "testcase": true, "constructor": false, "invocations": ["put", "setProperties", "getInternalState", "assertEquals", "getInt", "valueOf"]}, "focal_class": {"identifier": "PropertyReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PropertyReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PropertyReader.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private PropertyHolder propertyHolder;", "modifier": "@Autowired\n    private", "type": "PropertyHolder", "declarator": "propertyHolder", "var_name": "propertyHolder"}], "methods": [{"identifier": "setProperties", "parameters": "(final Properties properties)", "modifiers": "public", "return": "void", "signature": "void setProperties(final Properties properties)", "full_signature": "public void setProperties(final Properties properties)", "class_method_signature": "PropertyReader.setProperties(final Properties properties)", "testcase": false, "constructor": false}], "file": "wilma-message-search/modules/wilma-message-search-engine/src/main/java/com/epam/wilma/message/search/engine/properties/PropertyReader.java"}, "focal_method": {"identifier": "setProperties", "parameters": "(final Properties properties)", "modifiers": "public", "return": "void", "body": "public void setProperties(final Properties properties) {\n        Set<Object> keySet = properties.keySet();\n        for (Object key : keySet) {\n            String value = properties.getProperty(key.toString());\n            propertyHolder.addProperty(key.toString(), value);\n        }\n        LOGGER.debug(\"LOADED PROPERTY: \" + propertyHolder.get(\"webapp.port\"));\n        LOGGER.debug(\"LOADED PROPERTY: \" + propertyHolder.get(\"lucene.index.folder\"));\n    }", "signature": "void setProperties(final Properties properties)", "full_signature": "public void setProperties(final Properties properties)", "class_method_signature": "PropertyReader.setProperties(final Properties properties)", "testcase": false, "constructor": false, "invocations": ["keySet", "getProperty", "toString", "addProperty", "toString", "debug", "get", "debug", "get"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}