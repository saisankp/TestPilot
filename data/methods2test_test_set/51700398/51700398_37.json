{"test_class": {"identifier": "YahooLookupTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SEARCH_RESULT = readFile(\"/provider/lookup/yahoo/search_ubi.json\");", "modifier": "private static final", "type": "String", "declarator": "SEARCH_RESULT = readFile(\"/provider/lookup/yahoo/search_ubi.json\")", "var_name": "SEARCH_RESULT"}, {"original_string": "private static final String LATEST_UBI = readFile(\"/provider/rate/yahoo/latest_ubi.json\");", "modifier": "private static final", "type": "String", "declarator": "LATEST_UBI = readFile(\"/provider/rate/yahoo/latest_ubi.json\")", "var_name": "LATEST_UBI"}, {"original_string": "private YahooLookup yahooLookup = new YahooLookup();", "modifier": "private", "type": "YahooLookup", "declarator": "yahooLookup = new YahooLookup()", "var_name": "yahooLookup"}, {"original_string": "private MockRestServiceServer server;", "modifier": "private", "type": "MockRestServiceServer", "declarator": "server", "var_name": "server"}], "file": "trading-common/src/test/java/fr/ymanvieu/trading/common/provider/lookup/yahoo/YahooLookupTest.java"}, "test_case": {"identifier": "testParseSource", "parameters": "(String code, String expectedResult)", "modifiers": "@Test @Parameters public", "return": "void", "body": "@Test\n\t@Parameters\n\tpublic void testParseSource(String code, String expectedResult) {\n\t\tassertThat(YahooLookup.parseSource(code)).isEqualTo(expectedResult);\n\t}", "signature": "void testParseSource(String code, String expectedResult)", "full_signature": "@Test @Parameters public void testParseSource(String code, String expectedResult)", "class_method_signature": "YahooLookupTest.testParseSource(String code, String expectedResult)", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "parseSource"]}, "focal_class": {"identifier": "YahooLookup", "superclass": "", "interfaces": "implements LookupProvider", "fields": [{"original_string": "private static final Pattern EQUITY_PATTERN = Pattern.compile(\"([\\\\w_-]+)[\\\\.[\\\\w]*]*\");", "modifier": "private static final", "type": "Pattern", "declarator": "EQUITY_PATTERN = Pattern.compile(\"([\\\\w_-]+)[\\\\.[\\\\w]*]*\")", "var_name": "EQUITY_PATTERN"}, {"original_string": "private static final Pattern FOREX_PATTERN = Pattern.compile(\"(\\\\w{3})(\\\\w{3})?=X\");", "modifier": "private static final", "type": "Pattern", "declarator": "FOREX_PATTERN = Pattern.compile(\"(\\\\w{3})(\\\\w{3})?=X\")", "var_name": "FOREX_PATTERN"}, {"original_string": "private static final Pattern FUTURE_PATTERN = Pattern.compile(\"(\\\\w+=F)\");", "modifier": "private static final", "type": "Pattern", "declarator": "FUTURE_PATTERN = Pattern.compile(\"(\\\\w+=F)\")", "var_name": "FUTURE_PATTERN"}, {"original_string": "private static final Pattern CRYPTOCURRENCY_PATTERN = Pattern.compile(\"([\\\\w]{3,4})-([\\\\w]{3,4})\");", "modifier": "private static final", "type": "Pattern", "declarator": "CRYPTOCURRENCY_PATTERN = Pattern.compile(\"([\\\\w]{3,4})-([\\\\w]{3,4})\")", "var_name": "CRYPTOCURRENCY_PATTERN"}, {"original_string": "@Value(\"${provider.yahoo.url.lookup}\")\n\tprivate String url;", "modifier": "@Value(\"${provider.yahoo.url.lookup}\")\n\tprivate", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "@Value(\"${provider.yahoo.url.latest}\")\n\tprivate String urlLatest;", "modifier": "@Value(\"${provider.yahoo.url.latest}\")\n\tprivate", "type": "String", "declarator": "urlLatest", "var_name": "urlLatest"}, {"original_string": "private final RestTemplate rt = new RestTemplate();", "modifier": "private final", "type": "RestTemplate", "declarator": "rt = new RestTemplate()", "var_name": "rt"}], "methods": [{"identifier": "search", "parameters": "(String symbolOrName)", "modifiers": "@Override public", "return": "List<LookupInfo>", "signature": "List<LookupInfo> search(String symbolOrName)", "full_signature": "@Override public List<LookupInfo> search(String symbolOrName)", "class_method_signature": "YahooLookup.search(String symbolOrName)", "testcase": false, "constructor": false}, {"identifier": "getDetails", "parameters": "(String code)", "modifiers": "@Override public", "return": "LookupDetails", "signature": "LookupDetails getDetails(String code)", "full_signature": "@Override public LookupDetails getDetails(String code)", "class_method_signature": "YahooLookup.getDetails(String code)", "testcase": false, "constructor": false}, {"identifier": "parseSource", "parameters": "(String code)", "modifiers": "@VisibleForTesting protected static", "return": "String", "signature": "String parseSource(String code)", "full_signature": "@VisibleForTesting protected static String parseSource(String code)", "class_method_signature": "YahooLookup.parseSource(String code)", "testcase": false, "constructor": false}, {"identifier": "parseTarget", "parameters": "(String code)", "modifiers": "@VisibleForTesting protected static", "return": "String", "signature": "String parseTarget(String code)", "full_signature": "@VisibleForTesting protected static String parseTarget(String code)", "class_method_signature": "YahooLookup.parseTarget(String code)", "testcase": false, "constructor": false}, {"identifier": "getProviderCode", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getProviderCode()", "full_signature": "@Override public String getProviderCode()", "class_method_signature": "YahooLookup.getProviderCode()", "testcase": false, "constructor": false}], "file": "trading-common/src/main/java/fr/ymanvieu/trading/common/provider/lookup/yahoo/YahooLookup.java"}, "focal_method": {"identifier": "parseSource", "parameters": "(String code)", "modifiers": "@VisibleForTesting protected static", "return": "String", "body": "@VisibleForTesting\n\tprotected static String parseSource(String code) {\n\t\tMatcher forexMatcher = FOREX_PATTERN.matcher(code);\n\t\t\n\t\tif (forexMatcher.matches()) {\n\t\t\tString source = forexMatcher.group(1);\n\t\t\tString target = forexMatcher.group(2);\n\t\t\treturn (target != null) ? source : CurrencyUtils.USD;\n\t\t}\n\t\t\n\t\tMatcher cryptoMatcher = CRYPTOCURRENCY_PATTERN.matcher(code);\n\t\t\n\t\tif (cryptoMatcher.matches()) {\n\t\t\treturn cryptoMatcher.group(1);\n\t\t}\n\t\t\n\t\tMatcher stockMatcher = EQUITY_PATTERN.matcher(code);\n\n\t\tif (stockMatcher.matches()) {\n\t\t\treturn stockMatcher.group(1);\n\t\t}\n\t\t\n\t\tMatcher futureMatcher = FUTURE_PATTERN.matcher(code);\n\n\t\tif (futureMatcher.matches()) {\n\t\t\treturn futureMatcher.group(1);\n\t\t}\n\n\t\treturn null;\n\t}", "signature": "String parseSource(String code)", "full_signature": "@VisibleForTesting protected static String parseSource(String code)", "class_method_signature": "YahooLookup.parseSource(String code)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "group", "group", "matcher", "matches", "group", "matcher", "matches", "group", "matcher", "matches", "group"]}, "repository": {"repo_id": 51700398, "url": "https://github.com/ymanvieu/trading", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 988, "license": "licensed"}}