{"test_class": {"identifier": "ElasticSearchBulkServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ElasticSearchClient client;", "modifier": "private", "type": "ElasticSearchClient", "declarator": "client", "var_name": "client"}], "file": "kafka/src/test/java/com/expedia/adaptivealerting/kafka/visualizer/ElasticSearchBulkServiceTest.java"}, "test_case": {"identifier": "testRun", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRun() throws IOException {\n        AnomalyModel anomalyModel = AnomalyModel.newBuilder()\n                .key(\"key\")\n                .value(100)\n                .level(\"NORMAL\")\n                .uuid(\"test\")\n                .timestamp(\"date\")\n                .anomalyThresholds(null)\n                .tags(null)\n                .build();\n        anomalyModel = AnomalyModel.newBuilder(anomalyModel).build();\n        List<AnomalyModel> anomalyModels = new ArrayList<>();\n        anomalyModels.add(anomalyModel);\n        BulkResponse bulkResponse = buildBulkResponseHappy();\n\n        when(client.bulk(any(BulkRequest.class), any(RequestOptions.class))).thenReturn(bulkResponse);\n        when(client.close()).thenReturn(true);\n        ElasticSearchBulkService elasticSearchBulkService = new ElasticSearchBulkService(anomalyModels);\n        elasticSearchBulkService.setElasticSearchClient(client);\n        elasticSearchBulkService.run();\n        verify(elasticSearchBulkService.getElasticSearchClient(), times(1))\n                .bulk(any(BulkRequest.class), any(RequestOptions.class));\n\n    }", "signature": "void testRun()", "full_signature": "@Test public void testRun()", "class_method_signature": "ElasticSearchBulkServiceTest.testRun()", "testcase": true, "constructor": false, "invocations": ["build", "tags", "anomalyThresholds", "timestamp", "uuid", "level", "value", "key", "newBuilder", "build", "newBuilder", "add", "buildBulkResponseHappy", "thenReturn", "when", "bulk", "any", "any", "thenReturn", "when", "close", "setElasticSearchClient", "run", "bulk", "verify", "getElasticSearchClient", "times", "any", "any"]}, "focal_class": {"identifier": "ElasticSearchBulkService", "superclass": "", "interfaces": "implements Runnable", "fields": [{"original_string": "private static String INDEX = \"anomalies\";", "modifier": "private static", "type": "String", "declarator": "INDEX = \"anomalies\"", "var_name": "INDEX"}, {"original_string": "private static String TYPE = \"doc\";", "modifier": "private static", "type": "String", "declarator": "TYPE = \"doc\"", "var_name": "TYPE"}, {"original_string": "private List<AnomalyModel> anomalyModels;", "modifier": "private", "type": "List<AnomalyModel>", "declarator": "anomalyModels", "var_name": "anomalyModels"}, {"original_string": "private ElasticSearchClient elasticSearchClient;", "modifier": "private", "type": "ElasticSearchClient", "declarator": "elasticSearchClient", "var_name": "elasticSearchClient"}, {"original_string": "private BulkResponse bulkResponse;", "modifier": "private", "type": "BulkResponse", "declarator": "bulkResponse", "var_name": "bulkResponse"}], "methods": [{"identifier": "ElasticSearchBulkService", "parameters": "(List<AnomalyModel> anomalyModels)", "modifiers": "public", "return": "", "signature": " ElasticSearchBulkService(List<AnomalyModel> anomalyModels)", "full_signature": "public  ElasticSearchBulkService(List<AnomalyModel> anomalyModels)", "class_method_signature": "ElasticSearchBulkService.ElasticSearchBulkService(List<AnomalyModel> anomalyModels)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void execute()", "full_signature": "private void execute()", "class_method_signature": "ElasticSearchBulkService.execute()", "testcase": false, "constructor": false}, {"identifier": "buildBulkRequest", "parameters": "(List<AnomalyModel> anomalyModels)", "modifiers": "private", "return": "BulkRequest", "signature": "BulkRequest buildBulkRequest(List<AnomalyModel> anomalyModels)", "full_signature": "private BulkRequest buildBulkRequest(List<AnomalyModel> anomalyModels)", "class_method_signature": "ElasticSearchBulkService.buildBulkRequest(List<AnomalyModel> anomalyModels)", "testcase": false, "constructor": false}, {"identifier": "buildIndexRequest", "parameters": "(String json)", "modifiers": "private", "return": "IndexRequest", "signature": "IndexRequest buildIndexRequest(String json)", "full_signature": "private IndexRequest buildIndexRequest(String json)", "class_method_signature": "ElasticSearchBulkService.buildIndexRequest(String json)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "ElasticSearchBulkService.run()", "testcase": false, "constructor": false}, {"identifier": "setElasticSearchClient", "parameters": "(ElasticSearchClient elasticSearchClient)", "modifiers": "@VisibleForTesting public", "return": "void", "signature": "void setElasticSearchClient(ElasticSearchClient elasticSearchClient)", "full_signature": "@VisibleForTesting public void setElasticSearchClient(ElasticSearchClient elasticSearchClient)", "class_method_signature": "ElasticSearchBulkService.setElasticSearchClient(ElasticSearchClient elasticSearchClient)", "testcase": false, "constructor": false}, {"identifier": "getElasticSearchClient", "parameters": "()", "modifiers": "public", "return": "ElasticSearchClient", "signature": "ElasticSearchClient getElasticSearchClient()", "full_signature": "public ElasticSearchClient getElasticSearchClient()", "class_method_signature": "ElasticSearchBulkService.getElasticSearchClient()", "testcase": false, "constructor": false}], "file": "kafka/src/main/java/com/expedia/adaptivealerting/kafka/visualizer/ElasticSearchBulkService.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void run(){\n        execute();\n    }", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "ElasticSearchBulkService.run()", "testcase": false, "constructor": false, "invocations": ["execute"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}