{"test_class": {"identifier": "IpTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/com/cloud/utils/net/IpTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        new EqualsTester()\n                .addEqualityGroup(new Ip(\"0.0.0.1\"), new Ip(1L))\n                .addEqualityGroup(new Ip(\"0.0.0.0\"), new Ip(0L))\n                .testEquals();\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "IpTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["testEquals", "addEqualityGroup", "addEqualityGroup"]}, "focal_class": {"identifier": "Ip", "superclass": "", "interfaces": "implements Serializable, Comparable<Ip>", "fields": [{"original_string": "private static final long serialVersionUID = SerialVersionUID.Ip;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = SerialVersionUID.Ip", "var_name": "serialVersionUID"}, {"original_string": "long ip;", "modifier": "", "type": "long", "declarator": "ip", "var_name": "ip"}], "methods": [{"identifier": "Ip", "parameters": "(long ip)", "modifiers": "public", "return": "", "signature": " Ip(long ip)", "full_signature": "public  Ip(long ip)", "class_method_signature": "Ip.Ip(long ip)", "testcase": false, "constructor": true}, {"identifier": "Ip", "parameters": "(String ip)", "modifiers": "public", "return": "", "signature": " Ip(String ip)", "full_signature": "public  Ip(String ip)", "class_method_signature": "Ip.Ip(String ip)", "testcase": false, "constructor": true}, {"identifier": "Ip", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Ip()", "full_signature": "protected  Ip()", "class_method_signature": "Ip.Ip()", "testcase": false, "constructor": true}, {"identifier": "addr", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String addr()", "full_signature": "public String addr()", "class_method_signature": "Ip.addr()", "testcase": false, "constructor": false}, {"identifier": "longValue", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long longValue()", "full_signature": "public long longValue()", "class_method_signature": "Ip.longValue()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Ip.toString()", "testcase": false, "constructor": false}, {"identifier": "isIp4", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIp4()", "full_signature": "public boolean isIp4()", "class_method_signature": "Ip.isIp4()", "testcase": false, "constructor": false}, {"identifier": "isIp6", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIp6()", "full_signature": "public boolean isIp6()", "class_method_signature": "Ip.isIp6()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Ip.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Ip.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "isSameAddressAs", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean isSameAddressAs(Object obj)", "full_signature": "public boolean isSameAddressAs(Object obj)", "class_method_signature": "Ip.isSameAddressAs(Object obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Ip that)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Ip that)", "full_signature": "@Override public int compareTo(Ip that)", "class_method_signature": "Ip.compareTo(Ip that)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/com/cloud/utils/net/Ip.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object obj) {\n        if (obj instanceof Ip) {\n            return ip == ((Ip)obj).ip;\n        }\n        return false;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Ip.equals(Object obj)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}