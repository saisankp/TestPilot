{"test_class": {"identifier": "ShingleExtractorTest", "superclass": "", "interfaces": "", "fields": [], "file": "dexter-core/src/test/java/it/cnr/isti/hpc/dexter/shingle/ShingleExtractorTest.java"}, "test_case": {"identifier": "testCleaning2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCleaning2() {\n\t\tString text = \"NHL ICE HOCKEY- CANUCKS RW BURE SUSPENDED,FOR ONE GAME\";\n\t\tShingleExtractor shingler = new ShingleExtractor(text);\n\t\tshingler.setMaxShingleSize(3);\n\t\tSet<String> shingles = new HashSet<String>();\n\t\tfor (Shingle shingle : shingler) {\n\t\t\tshingles.add(shingle.getText());\n\t\t}\n\t\tassertTrue(shingles.contains(\"canucks\"));\n\t\tassertTrue(shingles.contains(\"bure suspended\"));\n\t\tassertTrue(shingles.contains(\"for one\"));\n\t\tassertTrue(shingles.contains(\"game\"));\n\t\tassertTrue(shingles.contains(\"hockey canucks\"));\n\t}", "signature": "void testCleaning2()", "full_signature": "@Test public void testCleaning2()", "class_method_signature": "ShingleExtractorTest.testCleaning2()", "testcase": true, "constructor": false, "invocations": ["setMaxShingleSize", "add", "getText", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "ShingleExtractor", "superclass": "", "interfaces": "implements Iterable<Shingle>", "fields": [{"original_string": "private int maxShingleSize;", "modifier": "private", "type": "int", "declarator": "maxShingleSize", "var_name": "maxShingleSize"}, {"original_string": "private static final int DEFAULT_MAX_SHINGLE_SIZE = 6;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MAX_SHINGLE_SIZE = 6", "var_name": "DEFAULT_MAX_SHINGLE_SIZE"}, {"original_string": "private final List<List<Token>> cleanedSentences;", "modifier": "private final", "type": "List<List<Token>>", "declarator": "cleanedSentences", "var_name": "cleanedSentences"}, {"original_string": "private final SpotManager sm;", "modifier": "private final", "type": "SpotManager", "declarator": "sm", "var_name": "sm"}, {"original_string": "private final TokenSegmenter ts;", "modifier": "private final", "type": "TokenSegmenter", "declarator": "ts", "var_name": "ts"}, {"original_string": "private final SentenceSegmenter ss;", "modifier": "private final", "type": "SentenceSegmenter", "declarator": "ss", "var_name": "ss"}], "methods": [{"identifier": "ShingleExtractor", "parameters": "()", "modifiers": "private", "return": "", "signature": " ShingleExtractor()", "full_signature": "private  ShingleExtractor()", "class_method_signature": "ShingleExtractor.ShingleExtractor()", "testcase": false, "constructor": true}, {"identifier": "ShingleExtractor", "parameters": "(Article a)", "modifiers": "public", "return": "", "signature": " ShingleExtractor(Article a)", "full_signature": "public  ShingleExtractor(Article a)", "class_method_signature": "ShingleExtractor.ShingleExtractor(Article a)", "testcase": false, "constructor": true}, {"identifier": "ShingleExtractor", "parameters": "(String text)", "modifiers": "public", "return": "", "signature": " ShingleExtractor(String text)", "full_signature": "public  ShingleExtractor(String text)", "class_method_signature": "ShingleExtractor.ShingleExtractor(String text)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void process(String text)", "full_signature": "public void process(String text)", "class_method_signature": "ShingleExtractor.process(String text)", "testcase": false, "constructor": false}, {"identifier": "addText", "parameters": "(String text)", "modifiers": "private", "return": "void", "signature": "void addText(String text)", "full_signature": "private void addText(String text)", "class_method_signature": "ShingleExtractor.addText(String text)", "testcase": false, "constructor": false}, {"identifier": "getMaxShingleSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxShingleSize()", "full_signature": "public int getMaxShingleSize()", "class_method_signature": "ShingleExtractor.getMaxShingleSize()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Shingle>", "signature": "Iterator<Shingle> iterator()", "full_signature": "@Override public Iterator<Shingle> iterator()", "class_method_signature": "ShingleExtractor.iterator()", "testcase": false, "constructor": false}, {"identifier": "setMaxShingleSize", "parameters": "(int maxShingleSize)", "modifiers": "public", "return": "void", "signature": "void setMaxShingleSize(int maxShingleSize)", "full_signature": "public void setMaxShingleSize(int maxShingleSize)", "class_method_signature": "ShingleExtractor.setMaxShingleSize(int maxShingleSize)", "testcase": false, "constructor": false}], "file": "dexter-core/src/main/java/it/cnr/isti/hpc/dexter/shingle/ShingleExtractor.java"}, "focal_method": {"identifier": "setMaxShingleSize", "parameters": "(int maxShingleSize)", "modifiers": "public", "return": "void", "body": "public void setMaxShingleSize(int maxShingleSize) {\n\t\tthis.maxShingleSize = maxShingleSize;\n\t}", "signature": "void setMaxShingleSize(int maxShingleSize)", "full_signature": "public void setMaxShingleSize(int maxShingleSize)", "class_method_signature": "ShingleExtractor.setMaxShingleSize(int maxShingleSize)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8091481, "url": "https://github.com/dexter/dexter", "language": "Java", "is_fork": false, "fork_count": 52, "stargazer_count": 196, "size": 17631, "license": "licensed"}}