{"test_class": {"identifier": "FileControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}], "file": "lzpeng-boot-server/src/test/java/com/lzpeng/framework/web/controller/FileControllerTest.java"}, "test_case": {"identifier": "uploadFile", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void uploadFile() throws Exception {\n        String result = mockMvc.perform(multipart(\"/framework/file\")\n                .file(new MockMultipartFile(\n                        \"file\", \"test.txt\",\n                        MediaType.MULTIPART_FORM_DATA_VALUE, \"Hello File\".getBytes()))\n                .contentType(MediaType.MULTIPART_FORM_DATA))\n                .andExpect(status().isOk())\n                .andReturn().getResponse().getContentAsString();\n        log.info(result);\n    }", "signature": "void uploadFile()", "full_signature": "@Test void uploadFile()", "class_method_signature": "FileControllerTest.uploadFile()", "testcase": true, "constructor": false, "invocations": ["getContentAsString", "getResponse", "andReturn", "andExpect", "perform", "contentType", "file", "multipart", "getBytes", "isOk", "status", "info"]}, "focal_class": {"identifier": "FileController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private FileInfoService fileInfoService;", "modifier": "@Autowired\n    private", "type": "FileInfoService", "declarator": "fileInfoService", "var_name": "fileInfoService"}], "methods": [{"identifier": "uploadFile", "parameters": "(MultipartFile file)", "modifiers": "@PostMapping @ApiOperation(\"\u4e0a\u4f20\u6587\u4ef6\") @PreAuthorize(\"isAuthenticated()\") public", "return": "Result<FileInfo>", "signature": "Result<FileInfo> uploadFile(MultipartFile file)", "full_signature": "@PostMapping @ApiOperation(\"\u4e0a\u4f20\u6587\u4ef6\") @PreAuthorize(\"isAuthenticated()\") public Result<FileInfo> uploadFile(MultipartFile file)", "class_method_signature": "FileController.uploadFile(MultipartFile file)", "testcase": false, "constructor": false}, {"identifier": "downloadFile", "parameters": "(@ApiParam(value = \"\u6587\u4ef6id\", required = true) @PathVariable String id, HttpServletResponse response) thr", "modifiers": "@GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u4e0b\u8f7d\u6587\u4ef6\") @PreAuthorize(\"isAuthenticated()\") public", "return": "void", "signature": "void downloadFile(@ApiParam(value = \"\u6587\u4ef6id\", required = true) @PathVariable String id, HttpServletResponse response) thr", "full_signature": "@GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u4e0b\u8f7d\u6587\u4ef6\") @PreAuthorize(\"isAuthenticated()\") public void downloadFile(@ApiParam(value = \"\u6587\u4ef6id\", required = true) @PathVariable String id, HttpServletResponse response) thr", "class_method_signature": "FileController.downloadFile(@ApiParam(value = \"\u6587\u4ef6id\", required = true) @PathVariable String id, HttpServletResponse response) thr", "testcase": false, "constructor": false}, {"identifier": "downloadLogFile", "parameters": "(HttpServletResponse response)", "modifiers": "@GetMapping(\"/log\") @ApiOperation(\"\u4e0b\u8f7d\u670d\u52a1\u5668\u65e5\u5fd7\") @PreAuthorize(\"hasAnyRole('ADMIN')\") public", "return": "void", "signature": "void downloadLogFile(HttpServletResponse response)", "full_signature": "@GetMapping(\"/log\") @ApiOperation(\"\u4e0b\u8f7d\u670d\u52a1\u5668\u65e5\u5fd7\") @PreAuthorize(\"hasAnyRole('ADMIN')\") public void downloadLogFile(HttpServletResponse response)", "class_method_signature": "FileController.downloadLogFile(HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "lzpeng-boot-server/src/main/java/com/lzpeng/framework/web/controller/FileController.java"}, "focal_method": {"identifier": "uploadFile", "parameters": "(MultipartFile file)", "modifiers": "@PostMapping @ApiOperation(\"\u4e0a\u4f20\u6587\u4ef6\") @PreAuthorize(\"isAuthenticated()\") public", "return": "Result<FileInfo>", "body": "@PostMapping\n    @ApiOperation(\"\u4e0a\u4f20\u6587\u4ef6\")\n    @PreAuthorize(\"isAuthenticated()\")\n    public Result<FileInfo> uploadFile(MultipartFile file) throws IOException {\n        FileInfo fileInfo = fileInfoService.uploadFile(file);\n        return ResultUtil.success(fileInfo);\n    }", "signature": "Result<FileInfo> uploadFile(MultipartFile file)", "full_signature": "@PostMapping @ApiOperation(\"\u4e0a\u4f20\u6587\u4ef6\") @PreAuthorize(\"isAuthenticated()\") public Result<FileInfo> uploadFile(MultipartFile file)", "class_method_signature": "FileController.uploadFile(MultipartFile file)", "testcase": false, "constructor": false, "invocations": ["uploadFile", "success"]}, "repository": {"repo_id": 257335962, "url": "https://github.com/lzpeng723/minimal-boot", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 25, "size": 2632, "license": "licensed"}}