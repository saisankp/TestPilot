{"test_class": {"identifier": "FlinkOutputFieldsDeclarerTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/api/FlinkOutputFieldsDeclarerTest.java"}, "test_case": {"identifier": "testGetGroupingFieldIndexes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetGroupingFieldIndexes() {\n\t\tfinal int numberOfAttributes = 5 + this.r.nextInt(20);\n\t\tfinal String[] attributes = new String[numberOfAttributes];\n\t\tfor (int i = 0; i < numberOfAttributes; ++i) {\n\t\t\tattributes[i] = \"a\" + i;\n\t\t}\n\n\t\tfinal FlinkOutputFieldsDeclarer declarer = new FlinkOutputFieldsDeclarer();\n\t\tdeclarer.declare(new Fields(attributes));\n\n\t\tfinal int numberOfKeys = 1 + this.r.nextInt(24);\n\t\tfinal LinkedList<String> groupingFields = new LinkedList<String>();\n\t\tfinal boolean[] indexes = new boolean[numberOfAttributes];\n\n\t\tfor (int i = 0; i < numberOfAttributes; ++i) {\n\t\t\tif (this.r.nextInt(25) < numberOfKeys) {\n\t\t\t\tgroupingFields.add(attributes[i]);\n\t\t\t\tindexes[i] = true;\n\t\t\t} else {\n\t\t\t\tindexes[i] = false;\n\t\t\t}\n\t\t}\n\n\t\tfinal int[] expectedResult = new int[groupingFields.size()];\n\t\tint j = 0;\n\t\tfor (int i = 0; i < numberOfAttributes; ++i) {\n\t\t\tif (indexes[i]) {\n\t\t\t\texpectedResult[j++] = i;\n\t\t\t}\n\t\t}\n\n\t\tfinal int[] result = declarer.getGroupingFieldIndexes(Utils.DEFAULT_STREAM_ID,\n\t\t\t\tgroupingFields);\n\n\t\tAssert.assertEquals(expectedResult.length, result.length);\n\t\tfor (int i = 0; i < expectedResult.length; ++i) {\n\t\t\tAssert.assertEquals(expectedResult[i], result[i]);\n\t\t}\n\t}", "signature": "void testGetGroupingFieldIndexes()", "full_signature": "@Test public void testGetGroupingFieldIndexes()", "class_method_signature": "FlinkOutputFieldsDeclarerTest.testGetGroupingFieldIndexes()", "testcase": true, "constructor": false, "invocations": ["nextInt", "declare", "nextInt", "nextInt", "add", "size", "getGroupingFieldIndexes", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "FlinkOutputFieldsDeclarer", "superclass": "", "interfaces": "implements OutputFieldsDeclarer", "fields": [{"original_string": "final HashMap<String, Fields> outputStreams = new HashMap<String, Fields>();", "modifier": "final", "type": "HashMap<String, Fields>", "declarator": "outputStreams = new HashMap<String, Fields>()", "var_name": "outputStreams"}], "methods": [{"identifier": "declare", "parameters": "(final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declare(final Fields fields)", "full_signature": "@Override public void declare(final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declare(final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declare", "parameters": "(final boolean direct, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declare(final boolean direct, final Fields fields)", "full_signature": "@Override public void declare(final boolean direct, final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declare(final boolean direct, final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declareStream", "parameters": "(final String streamId, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declareStream(final String streamId, final Fields fields)", "full_signature": "@Override public void declareStream(final String streamId, final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declareStream(final String streamId, final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declareStream", "parameters": "(final String streamId, final boolean direct, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declareStream(final String streamId, final boolean direct, final Fields fields)", "full_signature": "@Override public void declareStream(final String streamId, final boolean direct, final Fields fields)", "class_method_signature": "FlinkOutputFieldsDeclarer.declareStream(final String streamId, final boolean direct, final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "getOutputType", "parameters": "(final String streamId)", "modifiers": "", "return": "TypeInformation<Tuple>", "signature": "TypeInformation<Tuple> getOutputType(final String streamId)", "full_signature": " TypeInformation<Tuple> getOutputType(final String streamId)", "class_method_signature": "FlinkOutputFieldsDeclarer.getOutputType(final String streamId)", "testcase": false, "constructor": false}, {"identifier": "getGroupingFieldIndexes", "parameters": "(final String streamId, final List<String> groupingFields)", "modifiers": "", "return": "int[]", "signature": "int[] getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "full_signature": " int[] getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "class_method_signature": "FlinkOutputFieldsDeclarer.getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/api/FlinkOutputFieldsDeclarer.java"}, "focal_method": {"identifier": "getGroupingFieldIndexes", "parameters": "(final String streamId, final List<String> groupingFields)", "modifiers": "", "return": "int[]", "body": "int[] getGroupingFieldIndexes(final String streamId, final List<String> groupingFields) {\n\t\tfinal int[] fieldIndexes = new int[groupingFields.size()];\n\n\t\tfor (int i = 0; i < fieldIndexes.length; ++i) {\n\t\t\tfieldIndexes[i] = this.outputStreams.get(streamId).fieldIndex(groupingFields.get(i));\n\t\t}\n\n\t\treturn fieldIndexes;\n\t}", "signature": "int[] getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "full_signature": " int[] getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "class_method_signature": "FlinkOutputFieldsDeclarer.getGroupingFieldIndexes(final String streamId, final List<String> groupingFields)", "testcase": false, "constructor": false, "invocations": ["size", "fieldIndex", "get", "get"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}