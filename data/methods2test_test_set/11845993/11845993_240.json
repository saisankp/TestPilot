{"test_class": {"identifier": "StagemonitorCoreConfigurationSourceInitializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StagemonitorCoreConfigurationSourceInitializer initializer = new StagemonitorCoreConfigurationSourceInitializer();", "modifier": "private", "type": "StagemonitorCoreConfigurationSourceInitializer", "declarator": "initializer = new StagemonitorCoreConfigurationSourceInitializer()", "var_name": "initializer"}, {"original_string": "private final ConfigurationRegistry configuration = Mockito.mock(ConfigurationRegistry.class);", "modifier": "private final", "type": "ConfigurationRegistry", "declarator": "configuration = Mockito.mock(ConfigurationRegistry.class)", "var_name": "configuration"}, {"original_string": "private final CorePlugin corePlugin = Mockito.mock(CorePlugin.class);", "modifier": "private final", "type": "CorePlugin", "declarator": "corePlugin = Mockito.mock(CorePlugin.class)", "var_name": "corePlugin"}], "file": "stagemonitor-core/src/test/java/org/stagemonitor/core/StagemonitorCoreConfigurationSourceInitializerTest.java"}, "test_case": {"identifier": "testEsDown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEsDown() throws Exception {\n\t\tprepareESTest();\n\t\twhen(corePlugin.isDeactivateStagemonitorIfEsConfigSourceIsDown()).thenReturn(false);\n\n\t\tinitializer.onConfigurationInitialized(new StagemonitorConfigurationSourceInitializer.ConfigInitializedArguments(configuration));\n\n\t\tverify(configuration).addConfigurationSourceAfter(any(ElasticsearchConfigurationSource.class), eq(SimpleSource.class));\n\t}", "signature": "void testEsDown()", "full_signature": "@Test public void testEsDown()", "class_method_signature": "StagemonitorCoreConfigurationSourceInitializerTest.testEsDown()", "testcase": true, "constructor": false, "invocations": ["prepareESTest", "thenReturn", "when", "isDeactivateStagemonitorIfEsConfigSourceIsDown", "onConfigurationInitialized", "addConfigurationSourceAfter", "verify", "any", "eq"]}, "focal_class": {"identifier": "StagemonitorCoreConfigurationSourceInitializer", "superclass": "extends StagemonitorConfigurationSourceInitializer", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}], "methods": [{"identifier": "modifyConfigurationSources", "parameters": "(ModifyArguments modifyArguments)", "modifiers": "@Override public", "return": "void", "signature": "void modifyConfigurationSources(ModifyArguments modifyArguments)", "full_signature": "@Override public void modifyConfigurationSources(ModifyArguments modifyArguments)", "class_method_signature": "StagemonitorCoreConfigurationSourceInitializer.modifyConfigurationSources(ModifyArguments modifyArguments)", "testcase": false, "constructor": false}, {"identifier": "onConfigurationInitialized", "parameters": "(ConfigInitializedArguments configInitializedArguments)", "modifiers": "@Override public", "return": "void", "signature": "void onConfigurationInitialized(ConfigInitializedArguments configInitializedArguments)", "full_signature": "@Override public void onConfigurationInitialized(ConfigInitializedArguments configInitializedArguments)", "class_method_signature": "StagemonitorCoreConfigurationSourceInitializer.onConfigurationInitialized(ConfigInitializedArguments configInitializedArguments)", "testcase": false, "constructor": false}, {"identifier": "addElasticsearchConfigurationSources", "parameters": "(ConfigurationRegistry configuration, CorePlugin corePlugin, Collection<String> elasticsearchConfigurationSourceIds)", "modifiers": "private", "return": "void", "signature": "void addElasticsearchConfigurationSources(ConfigurationRegistry configuration, CorePlugin corePlugin, Collection<String> elasticsearchConfigurationSourceIds)", "full_signature": "private void addElasticsearchConfigurationSources(ConfigurationRegistry configuration, CorePlugin corePlugin, Collection<String> elasticsearchConfigurationSourceIds)", "class_method_signature": "StagemonitorCoreConfigurationSourceInitializer.addElasticsearchConfigurationSources(ConfigurationRegistry configuration, CorePlugin corePlugin, Collection<String> elasticsearchConfigurationSourceIds)", "testcase": false, "constructor": false}, {"identifier": "assertElasticsearchIsAvailable", "parameters": "(ElasticsearchClient elasticsearchClient, CorePlugin corePlugin)", "modifiers": "private", "return": "void", "signature": "void assertElasticsearchIsAvailable(ElasticsearchClient elasticsearchClient, CorePlugin corePlugin)", "full_signature": "private void assertElasticsearchIsAvailable(ElasticsearchClient elasticsearchClient, CorePlugin corePlugin)", "class_method_signature": "StagemonitorCoreConfigurationSourceInitializer.assertElasticsearchIsAvailable(ElasticsearchClient elasticsearchClient, CorePlugin corePlugin)", "testcase": false, "constructor": false}, {"identifier": "addRemotePropertiesConfigurationSources", "parameters": "(ConfigurationRegistry configuration, CorePlugin corePlugin)", "modifiers": "private", "return": "void", "signature": "void addRemotePropertiesConfigurationSources(ConfigurationRegistry configuration, CorePlugin corePlugin)", "full_signature": "private void addRemotePropertiesConfigurationSources(ConfigurationRegistry configuration, CorePlugin corePlugin)", "class_method_signature": "StagemonitorCoreConfigurationSourceInitializer.addRemotePropertiesConfigurationSources(ConfigurationRegistry configuration, CorePlugin corePlugin)", "testcase": false, "constructor": false}, {"identifier": "assertRemotePropertiesServerIsAvailable", "parameters": "(final URL configUrl)", "modifiers": "private", "return": "void", "signature": "void assertRemotePropertiesServerIsAvailable(final URL configUrl)", "full_signature": "private void assertRemotePropertiesServerIsAvailable(final URL configUrl)", "class_method_signature": "StagemonitorCoreConfigurationSourceInitializer.assertRemotePropertiesServerIsAvailable(final URL configUrl)", "testcase": false, "constructor": false}], "file": "stagemonitor-core/src/main/java/org/stagemonitor/core/StagemonitorCoreConfigurationSourceInitializer.java"}, "focal_method": {"identifier": "onConfigurationInitialized", "parameters": "(ConfigInitializedArguments configInitializedArguments)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void onConfigurationInitialized(ConfigInitializedArguments configInitializedArguments) throws IOException {\n\t\tfinal CorePlugin corePlugin = configInitializedArguments.getConfiguration().getConfig(CorePlugin.class);\n\t\tfinal Collection<String> elasticsearchConfigurationSourceIds = corePlugin.getElasticsearchConfigurationSourceProfiles();\n\t\tif (!elasticsearchConfigurationSourceIds.isEmpty()) {\n\t\t\taddElasticsearchConfigurationSources(configInitializedArguments.getConfiguration(), corePlugin, elasticsearchConfigurationSourceIds);\n\t\t}\n\n\t\tif (!corePlugin.getRemotePropertiesConfigUrls().isEmpty()) {\n\t\t\tlogger.debug(\"RemotePropertiesConfigurationSource is enabled\");\n\t\t\taddRemotePropertiesConfigurationSources(configInitializedArguments.getConfiguration(), corePlugin);\n\t\t}\n\t}", "signature": "void onConfigurationInitialized(ConfigInitializedArguments configInitializedArguments)", "full_signature": "@Override public void onConfigurationInitialized(ConfigInitializedArguments configInitializedArguments)", "class_method_signature": "StagemonitorCoreConfigurationSourceInitializer.onConfigurationInitialized(ConfigInitializedArguments configInitializedArguments)", "testcase": false, "constructor": false, "invocations": ["getConfig", "getConfiguration", "getElasticsearchConfigurationSourceProfiles", "isEmpty", "addElasticsearchConfigurationSources", "getConfiguration", "isEmpty", "getRemotePropertiesConfigUrls", "debug", "addRemotePropertiesConfigurationSources", "getConfiguration"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}