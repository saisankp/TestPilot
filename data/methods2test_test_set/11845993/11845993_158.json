{"test_class": {"identifier": "StagemonitorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ConfigurationRegistry originalConfiguration;", "modifier": "private static", "type": "ConfigurationRegistry", "declarator": "originalConfiguration", "var_name": "originalConfiguration"}, {"original_string": "private final HealthCheckRegistry healthCheckRegistry = Stagemonitor.getHealthCheckRegistry();", "modifier": "private final", "type": "HealthCheckRegistry", "declarator": "healthCheckRegistry = Stagemonitor.getHealthCheckRegistry()", "var_name": "healthCheckRegistry"}, {"original_string": "private ConfigurationRegistry configuration = mock(ConfigurationRegistry.class);", "modifier": "private", "type": "ConfigurationRegistry", "declarator": "configuration = mock(ConfigurationRegistry.class)", "var_name": "configuration"}, {"original_string": "private CorePlugin corePlugin = mock(CorePlugin.class);", "modifier": "private", "type": "CorePlugin", "declarator": "corePlugin = mock(CorePlugin.class)", "var_name": "corePlugin"}], "file": "stagemonitor-core/src/test/java/org/stagemonitor/core/StagemonitorTest.java"}, "test_case": {"identifier": "testInitPlugins_SimpleDependency", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testInitPlugins_SimpleDependency() {\n\t\tfinal PluginNoDependency pluginNoDependency = new PluginNoDependency();\n\t\tfinal PluginSimpleDependency pluginSimpleDependency = new PluginSimpleDependency();\n\t\tStagemonitor.initializePluginsInOrder(Collections.emptyList(), Arrays.asList(pluginNoDependency, pluginSimpleDependency));\n\t\tassertThat(pluginNoDependency.isInitialized()).isTrue();\n\t\tassertThat(pluginSimpleDependency.isInitialized()).isTrue();\n\t}", "signature": "void testInitPlugins_SimpleDependency()", "full_signature": "@Test public void testInitPlugins_SimpleDependency()", "class_method_signature": "StagemonitorTest.testInitPlugins_SimpleDependency()", "testcase": true, "constructor": false, "invocations": ["initializePluginsInOrder", "emptyList", "asList", "isTrue", "assertThat", "isInitialized", "isTrue", "assertThat", "isInitialized"]}, "focal_class": {"identifier": "Stagemonitor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger(Stagemonitor.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(Stagemonitor.class)", "var_name": "logger"}, {"original_string": "private static ConfigurationRegistry configuration;", "modifier": "private static", "type": "ConfigurationRegistry", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private static boolean initialized;", "modifier": "private static", "type": "boolean", "declarator": "initialized", "var_name": "initialized"}, {"original_string": "private static boolean started;", "modifier": "private static", "type": "boolean", "declarator": "started", "var_name": "started"}, {"original_string": "private static boolean disabled;", "modifier": "private static", "type": "boolean", "declarator": "disabled", "var_name": "disabled"}, {"original_string": "private static MeasurementSession measurementSession = new MeasurementSession(null, null, null);", "modifier": "private static", "type": "MeasurementSession", "declarator": "measurementSession = new MeasurementSession(null, null, null)", "var_name": "measurementSession"}, {"original_string": "private static List<String> pathsOfWidgetMetricTabPlugins = Collections.emptyList();", "modifier": "private static", "type": "List<String>", "declarator": "pathsOfWidgetMetricTabPlugins = Collections.emptyList()", "var_name": "pathsOfWidgetMetricTabPlugins"}, {"original_string": "private static List<String> pathsOfWidgetTabPlugins = Collections.emptyList();", "modifier": "private static", "type": "List<String>", "declarator": "pathsOfWidgetTabPlugins = Collections.emptyList()", "var_name": "pathsOfWidgetTabPlugins"}, {"original_string": "private static Iterable<StagemonitorPlugin> plugins;", "modifier": "private static", "type": "Iterable<StagemonitorPlugin>", "declarator": "plugins", "var_name": "plugins"}, {"original_string": "private static List<Runnable> onShutdownActions = new CopyOnWriteArrayList<Runnable>();", "modifier": "private static", "type": "List<Runnable>", "declarator": "onShutdownActions = new CopyOnWriteArrayList<Runnable>()", "var_name": "onShutdownActions"}, {"original_string": "private static Metric2Registry metric2Registry = new Metric2Registry(SharedMetricRegistries.getOrCreate(\"stagemonitor\"));", "modifier": "private static", "type": "Metric2Registry", "declarator": "metric2Registry = new Metric2Registry(SharedMetricRegistries.getOrCreate(\"stagemonitor\"))", "var_name": "metric2Registry"}, {"original_string": "private static HealthCheckRegistry healthCheckRegistry = new OverridableHealthCheckRegistry();", "modifier": "private static", "type": "HealthCheckRegistry", "declarator": "healthCheckRegistry = new OverridableHealthCheckRegistry()", "var_name": "healthCheckRegistry"}], "methods": [{"identifier": "Stagemonitor", "parameters": "()", "modifiers": "private", "return": "", "signature": " Stagemonitor()", "full_signature": "private  Stagemonitor()", "class_method_signature": "Stagemonitor.Stagemonitor()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void init()", "full_signature": "public static synchronized void init()", "class_method_signature": "Stagemonitor.init()", "testcase": false, "constructor": false}, {"identifier": "startMonitoring", "parameters": "(MeasurementSession measurementSession)", "modifiers": "private static", "return": "void", "signature": "void startMonitoring(MeasurementSession measurementSession)", "full_signature": "private static void startMonitoring(MeasurementSession measurementSession)", "class_method_signature": "Stagemonitor.startMonitoring(MeasurementSession measurementSession)", "testcase": false, "constructor": false}, {"identifier": "doStartMonitoring", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void doStartMonitoring()", "full_signature": "private static void doStartMonitoring()", "class_method_signature": "Stagemonitor.doStartMonitoring()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void start()", "full_signature": "private static void start()", "class_method_signature": "Stagemonitor.start()", "testcase": false, "constructor": false}, {"identifier": "logStatus", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void logStatus()", "full_signature": "private static void logStatus()", "class_method_signature": "Stagemonitor.logStatus()", "testcase": false, "constructor": false}, {"identifier": "getJvmAndOsVersionString", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String getJvmAndOsVersionString()", "full_signature": "private static String getJvmAndOsVersionString()", "class_method_signature": "Stagemonitor.getJvmAndOsVersionString()", "testcase": false, "constructor": false}, {"identifier": "initializePlugins", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void initializePlugins()", "full_signature": "private static void initializePlugins()", "class_method_signature": "Stagemonitor.initializePlugins()", "testcase": false, "constructor": false}, {"identifier": "initializePluginsInOrder", "parameters": "(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "modifiers": "static", "return": "void", "signature": "void initializePluginsInOrder(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "full_signature": "static void initializePluginsInOrder(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "class_method_signature": "Stagemonitor.initializePluginsInOrder(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "testcase": false, "constructor": false}, {"identifier": "getPluginsToInit", "parameters": "(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "modifiers": "private static", "return": "Set<StagemonitorPlugin>", "signature": "Set<StagemonitorPlugin> getPluginsToInit(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "full_signature": "private static Set<StagemonitorPlugin> getPluginsToInit(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "class_method_signature": "Stagemonitor.getPluginsToInit(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "testcase": false, "constructor": false}, {"identifier": "initializePlugin", "parameters": "(final StagemonitorPlugin stagemonitorPlugin)", "modifiers": "private static", "return": "void", "signature": "void initializePlugin(final StagemonitorPlugin stagemonitorPlugin)", "full_signature": "private static void initializePlugin(final StagemonitorPlugin stagemonitorPlugin)", "class_method_signature": "Stagemonitor.initializePlugin(final StagemonitorPlugin stagemonitorPlugin)", "testcase": false, "constructor": false}, {"identifier": "shutDown", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void shutDown()", "full_signature": "public static synchronized void shutDown()", "class_method_signature": "Stagemonitor.shutDown()", "testcase": false, "constructor": false}, {"identifier": "getMetricRegistry", "parameters": "()", "modifiers": "@Deprecated public static", "return": "MetricRegistry", "signature": "MetricRegistry getMetricRegistry()", "full_signature": "@Deprecated public static MetricRegistry getMetricRegistry()", "class_method_signature": "Stagemonitor.getMetricRegistry()", "testcase": false, "constructor": false}, {"identifier": "getMetric2Registry", "parameters": "()", "modifiers": "public static", "return": "Metric2Registry", "signature": "Metric2Registry getMetric2Registry()", "full_signature": "public static Metric2Registry getMetric2Registry()", "class_method_signature": "Stagemonitor.getMetric2Registry()", "testcase": false, "constructor": false}, {"identifier": "getHealthCheckRegistry", "parameters": "()", "modifiers": "public static", "return": "HealthCheckRegistry", "signature": "HealthCheckRegistry getHealthCheckRegistry()", "full_signature": "public static HealthCheckRegistry getHealthCheckRegistry()", "class_method_signature": "Stagemonitor.getHealthCheckRegistry()", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "public static", "return": "ConfigurationRegistry", "signature": "ConfigurationRegistry getConfiguration()", "full_signature": "public static ConfigurationRegistry getConfiguration()", "class_method_signature": "Stagemonitor.getConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getPlugin", "parameters": "(Class<T> plugin)", "modifiers": "public static", "return": "T", "signature": "T getPlugin(Class<T> plugin)", "full_signature": "public static T getPlugin(Class<T> plugin)", "class_method_signature": "Stagemonitor.getPlugin(Class<T> plugin)", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "(Class<T> plugin)", "modifiers": "@Deprecated public static", "return": "T", "signature": "T getConfiguration(Class<T> plugin)", "full_signature": "@Deprecated public static T getConfiguration(Class<T> plugin)", "class_method_signature": "Stagemonitor.getConfiguration(Class<T> plugin)", "testcase": false, "constructor": false}, {"identifier": "setConfiguration", "parameters": "(ConfigurationRegistry configuration)", "modifiers": "static", "return": "void", "signature": "void setConfiguration(ConfigurationRegistry configuration)", "full_signature": "static void setConfiguration(ConfigurationRegistry configuration)", "class_method_signature": "Stagemonitor.setConfiguration(ConfigurationRegistry configuration)", "testcase": false, "constructor": false}, {"identifier": "getMeasurementSession", "parameters": "()", "modifiers": "public static", "return": "MeasurementSession", "signature": "MeasurementSession getMeasurementSession()", "full_signature": "public static MeasurementSession getMeasurementSession()", "class_method_signature": "Stagemonitor.getMeasurementSession()", "testcase": false, "constructor": false}, {"identifier": "isStarted", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isStarted()", "full_signature": "public static boolean isStarted()", "class_method_signature": "Stagemonitor.isStarted()", "testcase": false, "constructor": false}, {"identifier": "isDisabled", "parameters": "()", "modifiers": "static", "return": "boolean", "signature": "boolean isDisabled()", "full_signature": "static boolean isDisabled()", "class_method_signature": "Stagemonitor.isDisabled()", "testcase": false, "constructor": false}, {"identifier": "setLogger", "parameters": "(Logger logger)", "modifiers": "static", "return": "void", "signature": "void setLogger(Logger logger)", "full_signature": "static void setLogger(Logger logger)", "class_method_signature": "Stagemonitor.setLogger(Logger logger)", "testcase": false, "constructor": false}, {"identifier": "getPathsOfWidgetTabPlugins", "parameters": "()", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getPathsOfWidgetTabPlugins()", "full_signature": "public static List<String> getPathsOfWidgetTabPlugins()", "class_method_signature": "Stagemonitor.getPathsOfWidgetTabPlugins()", "testcase": false, "constructor": false}, {"identifier": "getPathsOfWidgetMetricTabPlugins", "parameters": "()", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getPathsOfWidgetMetricTabPlugins()", "full_signature": "public static List<String> getPathsOfWidgetMetricTabPlugins()", "class_method_signature": "Stagemonitor.getPathsOfWidgetMetricTabPlugins()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Deprecated public static", "return": "void", "signature": "void reset()", "full_signature": "@Deprecated public static void reset()", "class_method_signature": "Stagemonitor.reset()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "(MeasurementSession measurementSession)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void reset(MeasurementSession measurementSession)", "full_signature": "@Deprecated public static void reset(MeasurementSession measurementSession)", "class_method_signature": "Stagemonitor.reset(MeasurementSession measurementSession)", "testcase": false, "constructor": false}, {"identifier": "reloadPluginsAndConfiguration", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void reloadPluginsAndConfiguration()", "full_signature": "private static void reloadPluginsAndConfiguration()", "class_method_signature": "Stagemonitor.reloadPluginsAndConfiguration()", "testcase": false, "constructor": false}], "file": "stagemonitor-core/src/main/java/org/stagemonitor/core/Stagemonitor.java"}, "focal_method": {"identifier": "initializePluginsInOrder", "parameters": "(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "modifiers": "static", "return": "void", "body": "static void initializePluginsInOrder(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins) {\n\t\tSet<Class<? extends StagemonitorPlugin>> alreadyInitialized = new HashSet<Class<? extends StagemonitorPlugin>>();\n\t\tSet<StagemonitorPlugin> notYetInitialized = getPluginsToInit(disabledPlugins, plugins);\n\t\twhile (!notYetInitialized.isEmpty()) {\n\t\t\tint countNotYetInitialized = notYetInitialized.size();\n\t\t\t// try to init plugins which are\n\t\t\tfor (Iterator<StagemonitorPlugin> iterator = notYetInitialized.iterator(); iterator.hasNext(); ) {\n\t\t\t\tStagemonitorPlugin stagemonitorPlugin = iterator.next();\n\t\t\t\t{\n\t\t\t\t\tfinal List<Class<? extends StagemonitorPlugin>> dependencies = stagemonitorPlugin.dependsOn();\n\t\t\t\t\tif (dependencies.isEmpty() || alreadyInitialized.containsAll(dependencies)) {\n\t\t\t\t\t\tinitializePlugin(stagemonitorPlugin);\n\t\t\t\t\t\titerator.remove();\n\t\t\t\t\t\talreadyInitialized.add(stagemonitorPlugin.getClass());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (countNotYetInitialized == notYetInitialized.size()) {\n\t\t\t\t// no plugins could be initialized in this try. this probably means there is a cyclic dependency\n\t\t\t\tthrow new IllegalStateException(\"Cyclic dependencies detected: \" + notYetInitialized);\n\t\t\t}\n\t\t}\n\t}", "signature": "void initializePluginsInOrder(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "full_signature": "static void initializePluginsInOrder(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "class_method_signature": "Stagemonitor.initializePluginsInOrder(Collection<String> disabledPlugins, Iterable<StagemonitorPlugin> plugins)", "testcase": false, "constructor": false, "invocations": ["getPluginsToInit", "isEmpty", "size", "iterator", "hasNext", "next", "dependsOn", "isEmpty", "containsAll", "initializePlugin", "remove", "add", "getClass", "size"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}