{"test_class": {"identifier": "ConfigParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LONG_TEST_VALUE = Long.toString(Long.MAX_VALUE);", "modifier": "private static final", "type": "String", "declarator": "LONG_TEST_VALUE = Long.toString(Long.MAX_VALUE)", "var_name": "LONG_TEST_VALUE"}, {"original_string": "private static final String INT_TEST_VALUE = Integer.toString(Integer.MAX_VALUE);", "modifier": "private static final", "type": "String", "declarator": "INT_TEST_VALUE = Integer.toString(Integer.MAX_VALUE)", "var_name": "INT_TEST_VALUE"}, {"original_string": "private static final String STRING_TEST_VALUE = \"String\";", "modifier": "private static final", "type": "String", "declarator": "STRING_TEST_VALUE = \"String\"", "var_name": "STRING_TEST_VALUE"}, {"original_string": "private static final String BOOLEAN_TEST_VALUE = \"true\";", "modifier": "private static final", "type": "String", "declarator": "BOOLEAN_TEST_VALUE = \"true\"", "var_name": "BOOLEAN_TEST_VALUE"}], "file": "ingester/src/test/java/com/amazonaws/services/dynamodbv2/json/demo/mars/util/ConfigParserTest.java"}, "test_case": {"identifier": "testParseLong", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParseLong() {\n        Properties properties;\n        final String param = \"param\";\n        final long defaultValue = Long.MAX_VALUE - 10;\n        // Test valid required param\n        try {\n            properties = new Properties();\n            properties.put(param, Long.toString(defaultValue));\n            final long l = ConfigParser.parseLong(properties, param);\n            assertEquals(defaultValue, l);\n        } catch (final ExitException e) {\n            fail(\"value is valid\");\n        }\n        // Test invalid required param\n        try {\n            properties = new Properties();\n            properties.put(param, \"invalid long\");\n            ConfigParser.parseLong(properties, param);\n        } catch (final ExitException e) {\n            ; // Correct behavior\n        }\n        // Test valid not required param\n        try {\n            properties = new Properties();\n            properties.put(param, Long.toString(defaultValue + 1));\n            final long l = ConfigParser.parseLong(properties, param, defaultValue);\n            assertEquals(defaultValue, l - 1);\n        } catch (final ExitException e) {\n            fail(\"value is valid\");\n        }\n        // Test invalid not required param\n        try {\n            properties = new Properties();\n            properties.put(param, \"invalid long\");\n            final long l = ConfigParser.parseLong(properties, param, defaultValue);\n            assertEquals(defaultValue, l);\n        } catch (final ExitException e) {\n            fail(\"default value is provided\");\n        }\n    }", "signature": "void testParseLong()", "full_signature": "@Test public void testParseLong()", "class_method_signature": "ConfigParserTest.testParseLong()", "testcase": true, "constructor": false, "invocations": ["put", "toString", "parseLong", "assertEquals", "fail", "put", "parseLong", "put", "toString", "parseLong", "assertEquals", "fail", "put", "parseLong", "assertEquals", "fail"]}, "focal_class": {"identifier": "ConfigParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(ConfigParser.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(ConfigParser.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "checkParamExists", "parameters": "(final Properties properties, final String param)", "modifiers": "public static", "return": "void", "signature": "void checkParamExists(final Properties properties, final String param)", "full_signature": "public static void checkParamExists(final Properties properties, final String param)", "class_method_signature": "ConfigParser.checkParamExists(final Properties properties, final String param)", "testcase": false, "constructor": false}, {"identifier": "parseBoolean", "parameters": "(final Properties properties, final String param)", "modifiers": "public static", "return": "boolean", "signature": "boolean parseBoolean(final Properties properties, final String param)", "full_signature": "public static boolean parseBoolean(final Properties properties, final String param)", "class_method_signature": "ConfigParser.parseBoolean(final Properties properties, final String param)", "testcase": false, "constructor": false}, {"identifier": "parseBoolean", "parameters": "(final Properties properties, final String param, final Boolean defaultValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean parseBoolean(final Properties properties, final String param, final Boolean defaultValue)", "full_signature": "public static boolean parseBoolean(final Properties properties, final String param, final Boolean defaultValue)", "class_method_signature": "ConfigParser.parseBoolean(final Properties properties, final String param, final Boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "parseInteger", "parameters": "(final Properties properties, final String param)", "modifiers": "public static", "return": "int", "signature": "int parseInteger(final Properties properties, final String param)", "full_signature": "public static int parseInteger(final Properties properties, final String param)", "class_method_signature": "ConfigParser.parseInteger(final Properties properties, final String param)", "testcase": false, "constructor": false}, {"identifier": "parseInteger", "parameters": "(final Properties properties, final String param, final Integer defaultValue)", "modifiers": "public static", "return": "int", "signature": "int parseInteger(final Properties properties, final String param, final Integer defaultValue)", "full_signature": "public static int parseInteger(final Properties properties, final String param, final Integer defaultValue)", "class_method_signature": "ConfigParser.parseInteger(final Properties properties, final String param, final Integer defaultValue)", "testcase": false, "constructor": false}, {"identifier": "parseLong", "parameters": "(final Properties properties, final String param)", "modifiers": "public static", "return": "long", "signature": "long parseLong(final Properties properties, final String param)", "full_signature": "public static long parseLong(final Properties properties, final String param)", "class_method_signature": "ConfigParser.parseLong(final Properties properties, final String param)", "testcase": false, "constructor": false}, {"identifier": "parseLong", "parameters": "(final Properties properties, final String param, final Long defaultValue)", "modifiers": "public static", "return": "long", "signature": "long parseLong(final Properties properties, final String param, final Long defaultValue)", "full_signature": "public static long parseLong(final Properties properties, final String param, final Long defaultValue)", "class_method_signature": "ConfigParser.parseLong(final Properties properties, final String param, final Long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "parseString", "parameters": "(final Properties properties, final String param)", "modifiers": "public static", "return": "String", "signature": "String parseString(final Properties properties, final String param)", "full_signature": "public static String parseString(final Properties properties, final String param)", "class_method_signature": "ConfigParser.parseString(final Properties properties, final String param)", "testcase": false, "constructor": false}, {"identifier": "parseString", "parameters": "(final Properties properties, final String param, final String defaultValue)", "modifiers": "public static", "return": "String", "signature": "String parseString(final Properties properties, final String param, final String defaultValue)", "full_signature": "public static String parseString(final Properties properties, final String param, final String defaultValue)", "class_method_signature": "ConfigParser.parseString(final Properties properties, final String param, final String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "validateBooleanParam", "parameters": "(final String val)", "modifiers": "public static", "return": "void", "signature": "void validateBooleanParam(final String val)", "full_signature": "public static void validateBooleanParam(final String val)", "class_method_signature": "ConfigParser.validateBooleanParam(final String val)", "testcase": false, "constructor": false}, {"identifier": "validateConfig", "parameters": "(final Properties config, final String[] requiredStrings,\n        final String[] requiredBooleans, final String[] requiredIntegers, final String[] requiredLongs)", "modifiers": "public static", "return": "void", "signature": "void validateConfig(final Properties config, final String[] requiredStrings,\n        final String[] requiredBooleans, final String[] requiredIntegers, final String[] requiredLongs)", "full_signature": "public static void validateConfig(final Properties config, final String[] requiredStrings,\n        final String[] requiredBooleans, final String[] requiredIntegers, final String[] requiredLongs)", "class_method_signature": "ConfigParser.validateConfig(final Properties config, final String[] requiredStrings,\n        final String[] requiredBooleans, final String[] requiredIntegers, final String[] requiredLongs)", "testcase": false, "constructor": false}, {"identifier": "validateIntegerParam", "parameters": "(final String val)", "modifiers": "public static", "return": "void", "signature": "void validateIntegerParam(final String val)", "full_signature": "public static void validateIntegerParam(final String val)", "class_method_signature": "ConfigParser.validateIntegerParam(final String val)", "testcase": false, "constructor": false}, {"identifier": "validateLongParam", "parameters": "(final String val)", "modifiers": "public static", "return": "void", "signature": "void validateLongParam(final String val)", "full_signature": "public static void validateLongParam(final String val)", "class_method_signature": "ConfigParser.validateLongParam(final String val)", "testcase": false, "constructor": false}, {"identifier": "ConfigParser", "parameters": "()", "modifiers": "private", "return": "", "signature": " ConfigParser()", "full_signature": "private  ConfigParser()", "class_method_signature": "ConfigParser.ConfigParser()", "testcase": false, "constructor": true}], "file": "ingester/src/main/java/com/amazonaws/services/dynamodbv2/json/demo/mars/util/ConfigParser.java"}, "focal_method": {"identifier": "parseLong", "parameters": "(final Properties properties, final String param)", "modifiers": "public static", "return": "long", "body": "public static long parseLong(final Properties properties, final String param) throws ExitException {\n        return parseLong(properties, param, null);\n    }", "signature": "long parseLong(final Properties properties, final String param)", "full_signature": "public static long parseLong(final Properties properties, final String param)", "class_method_signature": "ConfigParser.parseLong(final Properties properties, final String param)", "testcase": false, "constructor": false, "invocations": ["parseLong"]}, "repository": {"repo_id": 24917019, "url": "https://github.com/aws-samples/aws-dynamodb-mars-json-demo", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 48, "size": 1648, "license": "licensed"}}