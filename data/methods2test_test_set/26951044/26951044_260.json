{"test_class": {"identifier": "DefaultMetaDataProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultMetaDataProviderTest.java"}, "test_case": {"identifier": "setMeta", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setMeta() {\n        DefaultMetaDataProvider provider = new DefaultMetaDataProvider();\n        assertThat(provider).isEqualTo(provider.init(ConfigurationContext.EMPTY));\n        provider.setMeta(\"foo\", \"a\", \"b\");\n        assertThat(provider.getMetaData(\"foo\")).isNotNull().hasSize(1);\n    }", "signature": "void setMeta()", "full_signature": "@Test public void setMeta()", "class_method_signature": "DefaultMetaDataProviderTest.setMeta()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "init", "setMeta", "hasSize", "isNotNull", "assertThat", "getMetaData"]}, "focal_class": {"identifier": "DefaultMetaDataProvider", "superclass": "", "interfaces": "implements MetadataProvider", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(DefaultMetaDataProvider.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(DefaultMetaDataProvider.class.getName())", "var_name": "LOG"}, {"original_string": "private static final String META_PREFIX = \"[(META)\";", "modifier": "private static final", "type": "String", "declarator": "META_PREFIX = \"[(META)\"", "var_name": "META_PREFIX"}, {"original_string": "private ConfigurationContext context;", "modifier": "private", "type": "ConfigurationContext", "declarator": "context", "var_name": "context"}, {"original_string": "private Map<String, Map<String, String>> additionalProperties = new ConcurrentHashMap<>();", "modifier": "private", "type": "Map<String, Map<String, String>>", "declarator": "additionalProperties = new ConcurrentHashMap<>()", "var_name": "additionalProperties"}, {"original_string": "private AtomicLong lastHash = new AtomicLong();", "modifier": "private", "type": "AtomicLong", "declarator": "lastHash = new AtomicLong()", "var_name": "lastHash"}, {"original_string": "private Map<String, Map<String, String>> propertyCache = new HashMap<>();", "modifier": "private", "type": "Map<String, Map<String, String>>", "declarator": "propertyCache = new HashMap<>()", "var_name": "propertyCache"}], "methods": [{"identifier": "init", "parameters": "(ConfigurationContext context)", "modifiers": "@Override public", "return": "MetadataProvider", "signature": "MetadataProvider init(ConfigurationContext context)", "full_signature": "@Override public MetadataProvider init(ConfigurationContext context)", "class_method_signature": "DefaultMetaDataProvider.init(ConfigurationContext context)", "testcase": false, "constructor": false}, {"identifier": "getMetaData", "parameters": "(String property)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getMetaData(String property)", "full_signature": "@Override public Map<String, String> getMetaData(String property)", "class_method_signature": "DefaultMetaDataProvider.getMetaData(String property)", "testcase": false, "constructor": false}, {"identifier": "loadMetaProperties", "parameters": "()", "modifiers": "private", "return": "Map<String, Map<String, String> >", "signature": "Map<String, Map<String, String> > loadMetaProperties()", "full_signature": "private Map<String, Map<String, String> > loadMetaProperties()", "class_method_signature": "DefaultMetaDataProvider.loadMetaProperties()", "testcase": false, "constructor": false}, {"identifier": "loadExplicitMetadata", "parameters": "(PropertyValue value)", "modifiers": "private", "return": "void", "signature": "void loadExplicitMetadata(PropertyValue value)", "full_signature": "private void loadExplicitMetadata(PropertyValue value)", "class_method_signature": "DefaultMetaDataProvider.loadExplicitMetadata(PropertyValue value)", "testcase": false, "constructor": false}, {"identifier": "getMetaKeys", "parameters": "(String fullKey)", "modifiers": "private", "return": "String[]", "signature": "String[] getMetaKeys(String fullKey)", "full_signature": "private String[] getMetaKeys(String fullKey)", "class_method_signature": "DefaultMetaDataProvider.getMetaKeys(String fullKey)", "testcase": false, "constructor": false}, {"identifier": "setMeta", "parameters": "(String property, String key, String value)", "modifiers": "@Override public", "return": "MetadataProvider", "signature": "MetadataProvider setMeta(String property, String key, String value)", "full_signature": "@Override public MetadataProvider setMeta(String property, String key, String value)", "class_method_signature": "DefaultMetaDataProvider.setMeta(String property, String key, String value)", "testcase": false, "constructor": false}, {"identifier": "setMeta", "parameters": "(String property, Map<String, String> metaData)", "modifiers": "@Override public", "return": "MetadataProvider", "signature": "MetadataProvider setMeta(String property, Map<String, String> metaData)", "full_signature": "@Override public MetadataProvider setMeta(String property, Map<String, String> metaData)", "class_method_signature": "DefaultMetaDataProvider.setMeta(String property, Map<String, String> metaData)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "(String property)", "modifiers": "@Override public", "return": "MetadataProvider", "signature": "MetadataProvider reset(String property)", "full_signature": "@Override public MetadataProvider reset(String property)", "class_method_signature": "DefaultMetaDataProvider.reset(String property)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "MetadataProvider", "signature": "MetadataProvider reset()", "full_signature": "@Override public MetadataProvider reset()", "class_method_signature": "DefaultMetaDataProvider.reset()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultMetaDataProvider.toString()", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/DefaultMetaDataProvider.java"}, "focal_method": {"identifier": "setMeta", "parameters": "(String property, String key, String value)", "modifiers": "@Override public", "return": "MetadataProvider", "body": "@Override\n    public MetadataProvider setMeta(String property, String key, String value) {\n        Objects.requireNonNull(property, \"property null\");\n        Objects.requireNonNull(key, \"key null\");\n        Objects.requireNonNull(value, \"value null\");\n        additionalProperties.computeIfAbsent(property, p -> new HashMap<>())\n            .put(key, value);\n        return this;\n    }", "signature": "MetadataProvider setMeta(String property, String key, String value)", "full_signature": "@Override public MetadataProvider setMeta(String property, String key, String value)", "class_method_signature": "DefaultMetaDataProvider.setMeta(String property, String key, String value)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "requireNonNull", "put", "computeIfAbsent"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}