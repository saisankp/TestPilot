{"test_class": {"identifier": "TestDistCpUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(TestDistCpUtils.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(TestDistCpUtils.class)", "var_name": "LOG"}, {"original_string": "private static final Configuration config = new Configuration();", "modifier": "private static final", "type": "Configuration", "declarator": "config = new Configuration()", "var_name": "config"}, {"original_string": "private static MiniDFSCluster cluster;", "modifier": "private static", "type": "MiniDFSCluster", "declarator": "cluster", "var_name": "cluster"}, {"original_string": "private static Random rand = new Random();", "modifier": "private static", "type": "Random", "declarator": "rand = new Random()", "var_name": "rand"}], "file": "conduit-distcp/src/test/java/com/inmobi/conduit/distcp/tools/util/TestDistCpUtils.java"}, "test_case": {"identifier": "testPackAttributes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPackAttributes() {\n    EnumSet<FileAttribute> attributes = EnumSet.noneOf(FileAttribute.class);\n    Assert.assertEquals(DistCpUtils.packAttributes(attributes), \"\");\n\n    attributes.add(FileAttribute.REPLICATION);\n    Assert.assertEquals(DistCpUtils.packAttributes(attributes), \"R\");\n    Assert.assertEquals(attributes, DistCpUtils.unpackAttributes(\"R\"));\n\n    attributes.add(FileAttribute.BLOCKSIZE);\n    Assert.assertEquals(DistCpUtils.packAttributes(attributes), \"RB\");\n    Assert.assertEquals(attributes, DistCpUtils.unpackAttributes(\"RB\"));\n\n    attributes.add(FileAttribute.USER);\n    Assert.assertEquals(DistCpUtils.packAttributes(attributes), \"RBU\");\n    Assert.assertEquals(attributes, DistCpUtils.unpackAttributes(\"RBU\"));\n\n    attributes.add(FileAttribute.GROUP);\n    Assert.assertEquals(DistCpUtils.packAttributes(attributes), \"RBUG\");\n    Assert.assertEquals(attributes, DistCpUtils.unpackAttributes(\"RBUG\"));\n\n    attributes.add(FileAttribute.PERMISSION);\n    Assert.assertEquals(DistCpUtils.packAttributes(attributes), \"RBUGP\");\n    Assert.assertEquals(attributes, DistCpUtils.unpackAttributes(\"RBUGP\"));\n  }", "signature": "void testPackAttributes()", "full_signature": "@Test public void testPackAttributes()", "class_method_signature": "TestDistCpUtils.testPackAttributes()", "testcase": true, "constructor": false, "invocations": ["noneOf", "assertEquals", "packAttributes", "add", "assertEquals", "packAttributes", "assertEquals", "unpackAttributes", "add", "assertEquals", "packAttributes", "assertEquals", "unpackAttributes", "add", "assertEquals", "packAttributes", "assertEquals", "unpackAttributes", "add", "assertEquals", "packAttributes", "assertEquals", "unpackAttributes", "add", "assertEquals", "packAttributes", "assertEquals", "unpackAttributes"]}, "focal_class": {"identifier": "DistCpUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(DistCpUtils.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(DistCpUtils.class)", "var_name": "LOG"}, {"original_string": "private static ThreadLocal<DecimalFormat> FORMATTER\n                        = new ThreadLocal<DecimalFormat>() {\n    @Override\n    protected DecimalFormat initialValue() {\n      return new DecimalFormat(\"0.0\");\n    }\n  };", "modifier": "private static", "type": "ThreadLocal<DecimalFormat>", "declarator": "FORMATTER\n                        = new ThreadLocal<DecimalFormat>() {\n    @Override\n    protected DecimalFormat initialValue() {\n      return new DecimalFormat(\"0.0\");\n    }\n  }", "var_name": "FORMATTER"}], "methods": [{"identifier": "getFileSize", "parameters": "(Path path, Configuration configuration)", "modifiers": "public static", "return": "long", "signature": "long getFileSize(Path path, Configuration configuration)", "full_signature": "public static long getFileSize(Path path, Configuration configuration)", "class_method_signature": "DistCpUtils.getFileSize(Path path, Configuration configuration)", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(Configuration configuration,\n                                 String label, T value)", "modifiers": "public static", "return": "void", "signature": "void publish(Configuration configuration,\n                                 String label, T value)", "full_signature": "public static void publish(Configuration configuration,\n                                 String label, T value)", "class_method_signature": "DistCpUtils.publish(Configuration configuration,\n                                 String label, T value)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(Configuration configuration, String label)", "modifiers": "public static", "return": "int", "signature": "int getInt(Configuration configuration, String label)", "full_signature": "public static int getInt(Configuration configuration, String label)", "class_method_signature": "DistCpUtils.getInt(Configuration configuration, String label)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(Configuration configuration, String label)", "modifiers": "public static", "return": "long", "signature": "long getLong(Configuration configuration, String label)", "full_signature": "public static long getLong(Configuration configuration, String label)", "class_method_signature": "DistCpUtils.getLong(Configuration configuration, String label)", "testcase": false, "constructor": false}, {"identifier": "getStrategy", "parameters": "(Configuration conf,\n                                                                 DistCpOptions options)", "modifiers": "public static", "return": "Class<? extends InputFormat>", "signature": "Class<? extends InputFormat> getStrategy(Configuration conf,\n                                                                 DistCpOptions options)", "full_signature": "public static Class<? extends InputFormat> getStrategy(Configuration conf,\n                                                                 DistCpOptions options)", "class_method_signature": "DistCpUtils.getStrategy(Configuration conf,\n                                                                 DistCpOptions options)", "testcase": false, "constructor": false}, {"identifier": "getRelativePath", "parameters": "(Path sourceRootPath, Path childPath)", "modifiers": "public static", "return": "String", "signature": "String getRelativePath(Path sourceRootPath, Path childPath)", "full_signature": "public static String getRelativePath(Path sourceRootPath, Path childPath)", "class_method_signature": "DistCpUtils.getRelativePath(Path sourceRootPath, Path childPath)", "testcase": false, "constructor": false}, {"identifier": "packAttributes", "parameters": "(EnumSet<FileAttribute> attributes)", "modifiers": "public static", "return": "String", "signature": "String packAttributes(EnumSet<FileAttribute> attributes)", "full_signature": "public static String packAttributes(EnumSet<FileAttribute> attributes)", "class_method_signature": "DistCpUtils.packAttributes(EnumSet<FileAttribute> attributes)", "testcase": false, "constructor": false}, {"identifier": "unpackAttributes", "parameters": "(String attributes)", "modifiers": "public static", "return": "EnumSet<FileAttribute>", "signature": "EnumSet<FileAttribute> unpackAttributes(String attributes)", "full_signature": "public static EnumSet<FileAttribute> unpackAttributes(String attributes)", "class_method_signature": "DistCpUtils.unpackAttributes(String attributes)", "testcase": false, "constructor": false}, {"identifier": "preserve", "parameters": "(FileSystem targetFS, Path path,\n                              FileStatus srcFileStatus,\n                              EnumSet<FileAttribute> attributes)", "modifiers": "public static", "return": "void", "signature": "void preserve(FileSystem targetFS, Path path,\n                              FileStatus srcFileStatus,\n                              EnumSet<FileAttribute> attributes)", "full_signature": "public static void preserve(FileSystem targetFS, Path path,\n                              FileStatus srcFileStatus,\n                              EnumSet<FileAttribute> attributes)", "class_method_signature": "DistCpUtils.preserve(FileSystem targetFS, Path path,\n                              FileStatus srcFileStatus,\n                              EnumSet<FileAttribute> attributes)", "testcase": false, "constructor": false}, {"identifier": "sortListing", "parameters": "(FileSystem fs, Configuration conf, Path sourceListing)", "modifiers": "public static", "return": "Path", "signature": "Path sortListing(FileSystem fs, Configuration conf, Path sourceListing)", "full_signature": "public static Path sortListing(FileSystem fs, Configuration conf, Path sourceListing)", "class_method_signature": "DistCpUtils.sortListing(FileSystem fs, Configuration conf, Path sourceListing)", "testcase": false, "constructor": false}, {"identifier": "getFormatter", "parameters": "()", "modifiers": "public static", "return": "DecimalFormat", "signature": "DecimalFormat getFormatter()", "full_signature": "public static DecimalFormat getFormatter()", "class_method_signature": "DistCpUtils.getFormatter()", "testcase": false, "constructor": false}, {"identifier": "getStringDescriptionFor", "parameters": "(long nBytes)", "modifiers": "public static", "return": "String", "signature": "String getStringDescriptionFor(long nBytes)", "full_signature": "public static String getStringDescriptionFor(long nBytes)", "class_method_signature": "DistCpUtils.getStringDescriptionFor(long nBytes)", "testcase": false, "constructor": false}, {"identifier": "checksumsAreEqual", "parameters": "(FileSystem sourceFS, Path source,\n                                   FileSystem targetFS, Path target)", "modifiers": "public static", "return": "boolean", "signature": "boolean checksumsAreEqual(FileSystem sourceFS, Path source,\n                                   FileSystem targetFS, Path target)", "full_signature": "public static boolean checksumsAreEqual(FileSystem sourceFS, Path source,\n                                   FileSystem targetFS, Path target)", "class_method_signature": "DistCpUtils.checksumsAreEqual(FileSystem sourceFS, Path source,\n                                   FileSystem targetFS, Path target)", "testcase": false, "constructor": false}, {"identifier": "compareFs", "parameters": "(FileSystem srcFs, FileSystem destFs)", "modifiers": "public static", "return": "boolean", "signature": "boolean compareFs(FileSystem srcFs, FileSystem destFs)", "full_signature": "public static boolean compareFs(FileSystem srcFs, FileSystem destFs)", "class_method_signature": "DistCpUtils.compareFs(FileSystem srcFs, FileSystem destFs)", "testcase": false, "constructor": false}], "file": "conduit-distcp/src/main/java/com/inmobi/conduit/distcp/tools/util/DistCpUtils.java"}, "focal_method": {"identifier": "packAttributes", "parameters": "(EnumSet<FileAttribute> attributes)", "modifiers": "public static", "return": "String", "body": "public static String packAttributes(EnumSet<FileAttribute> attributes) {\n    StringBuffer buffer = new StringBuffer(5);\n    int len = 0;\n    for (FileAttribute attribute : attributes) {\n      buffer.append(attribute.name().charAt(0));\n      len++;\n    }\n    return buffer.substring(0, len);\n  }", "signature": "String packAttributes(EnumSet<FileAttribute> attributes)", "full_signature": "public static String packAttributes(EnumSet<FileAttribute> attributes)", "class_method_signature": "DistCpUtils.packAttributes(EnumSet<FileAttribute> attributes)", "testcase": false, "constructor": false, "invocations": ["append", "charAt", "name", "substring"]}, "repository": {"repo_id": 7218024, "url": "https://github.com/InMobi/conduit", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 49400, "license": "licensed"}}