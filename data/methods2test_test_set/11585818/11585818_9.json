{"test_class": {"identifier": "LogJobFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "telemetry-lib/src/test/java/com/yammer/telemetry/tracing/logging/LogJobFactoryTest.java"}, "test_case": {"identifier": "testCreateWithNullWriter", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void testCreateWithNullWriter() throws Exception {\n        LogJobFactory.withWriter(null);\n    }", "signature": "void testCreateWithNullWriter()", "full_signature": "@Test(expected = NullPointerException.class) public void testCreateWithNullWriter()", "class_method_signature": "LogJobFactoryTest.testCreateWithNullWriter()", "testcase": true, "constructor": false, "invocations": ["withWriter"]}, "focal_class": {"identifier": "LogJobFactory", "superclass": "", "interfaces": "implements AsynchronousSpanSink.JobFactory", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(LogJob.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(LogJob.class.getName())", "var_name": "LOG"}, {"original_string": "private final WriterProvider writerProvider;", "modifier": "private final", "type": "WriterProvider", "declarator": "writerProvider", "var_name": "writerProvider"}, {"original_string": "private ObjectMapper objectMapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}], "methods": [{"identifier": "LogJobFactory", "parameters": "(WriterProvider writerProvider)", "modifiers": "private", "return": "", "signature": " LogJobFactory(WriterProvider writerProvider)", "full_signature": "private  LogJobFactory(WriterProvider writerProvider)", "class_method_signature": "LogJobFactory.LogJobFactory(WriterProvider writerProvider)", "testcase": false, "constructor": true}, {"identifier": "withWriter", "parameters": "(final Writer writer)", "modifiers": "public static", "return": "LogJobFactory", "signature": "LogJobFactory withWriter(final Writer writer)", "full_signature": "public static LogJobFactory withWriter(final Writer writer)", "class_method_signature": "LogJobFactory.withWriter(final Writer writer)", "testcase": false, "constructor": false}, {"identifier": "withFile", "parameters": "(final String file)", "modifiers": "public static", "return": "LogJobFactory", "signature": "LogJobFactory withFile(final String file)", "full_signature": "public static LogJobFactory withFile(final String file)", "class_method_signature": "LogJobFactory.withFile(final String file)", "testcase": false, "constructor": false}, {"identifier": "createJob", "parameters": "(SpanData data)", "modifiers": "@Override public", "return": "Runnable", "signature": "Runnable createJob(SpanData data)", "full_signature": "@Override public Runnable createJob(SpanData data)", "class_method_signature": "LogJobFactory.createJob(SpanData data)", "testcase": false, "constructor": false}, {"identifier": "withWriterProvider", "parameters": "(WriterProvider writerProvider)", "modifiers": "private static", "return": "LogJobFactory", "signature": "LogJobFactory withWriterProvider(WriterProvider writerProvider)", "full_signature": "private static LogJobFactory withWriterProvider(WriterProvider writerProvider)", "class_method_signature": "LogJobFactory.withWriterProvider(WriterProvider writerProvider)", "testcase": false, "constructor": false}], "file": "telemetry-lib/src/main/java/com/yammer/telemetry/tracing/logging/LogJobFactory.java"}, "focal_method": {"identifier": "withWriter", "parameters": "(final Writer writer)", "modifiers": "public static", "return": "LogJobFactory", "body": "public static LogJobFactory withWriter(final Writer writer) {\n        if (writer == null) throw new NullPointerException(\"Writer must not be null\");\n        return withWriterProvider(new WriterProvider() {\n            @Override\n            public Writer getWriter() throws IOException {\n                return writer;\n            }\n        });\n    }", "signature": "LogJobFactory withWriter(final Writer writer)", "full_signature": "public static LogJobFactory withWriter(final Writer writer)", "class_method_signature": "LogJobFactory.withWriter(final Writer writer)", "testcase": false, "constructor": false, "invocations": ["withWriterProvider"]}, "repository": {"repo_id": 11585818, "url": "https://github.com/yammer/telemetry", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 20, "size": 990, "license": "licensed"}}