{"test_class": {"identifier": "NotificationUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final NotificationUtils NOTIFICATION_UTILS = new NotificationUtils();", "modifier": "public static final", "type": "NotificationUtils", "declarator": "NOTIFICATION_UTILS = new NotificationUtils()", "var_name": "NOTIFICATION_UTILS"}, {"original_string": "public static final String SECRET = \"0UyvT/YmMb9ed8FA6rsrYXqP\";", "modifier": "public static final", "type": "String", "declarator": "SECRET = \"0UyvT/YmMb9ed8FA6rsrYXqP\"", "var_name": "SECRET"}, {"original_string": "String string = \"p2p-incoming&818163584552108017&2.23&643&2012-12-17T17:49:52Z&410011608243693&false&0UyvT/YmMb9ed8FA6rsrYXqP&12625\";", "modifier": "", "type": "String", "declarator": "string = \"p2p-incoming&818163584552108017&2.23&643&2012-12-17T17:49:52Z&410011608243693&false&0UyvT/YmMb9ed8FA6rsrYXqP&12625\"", "var_name": "string"}], "file": "yamolib/src/test/java/ru/yandex/money/api/notifications/NotificationUtilsTest.java"}, "test_case": {"identifier": "testCheckHash", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckHash() throws Exception {\n        assertTrue(NOTIFICATION_UTILS.isHashValid(createParamsMap(), SECRET));\n    }", "signature": "void testCheckHash()", "full_signature": "@Test public void testCheckHash()", "class_method_signature": "NotificationUtilsTest.testCheckHash()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isHashValid", "createParamsMap"]}, "focal_class": {"identifier": "NotificationUtils", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(NotificationUtils.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(NotificationUtils.class)", "var_name": "LOG"}, {"original_string": "public static final String[] EXPECTED_PARAMS_ARRAY = new String[]{\n            \"notification_type\",\n            \"operation_id\",\n            \"amount\",\n            \"currency\",\n            \"datetime\",\n            \"sender\",\n            \"codepro\",\n            \"notification_secret\",\n            \"label\"};", "modifier": "public static final", "type": "String[]", "declarator": "EXPECTED_PARAMS_ARRAY = new String[]{\n            \"notification_type\",\n            \"operation_id\",\n            \"amount\",\n            \"currency\",\n            \"datetime\",\n            \"sender\",\n            \"codepro\",\n            \"notification_secret\",\n            \"label\"}", "var_name": "EXPECTED_PARAMS_ARRAY"}, {"original_string": "private static final String DELIMITER = \"&\";", "modifier": "private static final", "type": "String", "declarator": "DELIMITER = \"&\"", "var_name": "DELIMITER"}], "methods": [{"identifier": "isHashValid", "parameters": "(Map<String, String> parameterMap, String secret)", "modifiers": "public", "return": "boolean", "signature": "boolean isHashValid(Map<String, String> parameterMap, String secret)", "full_signature": "public boolean isHashValid(Map<String, String> parameterMap, String secret)", "class_method_signature": "NotificationUtils.isHashValid(Map<String, String> parameterMap, String secret)", "testcase": false, "constructor": false}, {"identifier": "checkAllParametersNotNull", "parameters": "(Map<String, String> map)", "modifiers": "private", "return": "void", "signature": "void checkAllParametersNotNull(Map<String, String> map)", "full_signature": "private void checkAllParametersNotNull(Map<String, String> map)", "class_method_signature": "NotificationUtils.checkAllParametersNotNull(Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "calculateHash", "parameters": "(Map<String, String> parameterMap, String secret)", "modifiers": "public", "return": "String", "signature": "String calculateHash(Map<String, String> parameterMap, String secret)", "full_signature": "public String calculateHash(Map<String, String> parameterMap, String secret)", "class_method_signature": "NotificationUtils.calculateHash(Map<String, String> parameterMap, String secret)", "testcase": false, "constructor": false}, {"identifier": "calculateHash", "parameters": "(Map<String, String> parameterMap)", "modifiers": "private", "return": "String", "signature": "String calculateHash(Map<String, String> parameterMap)", "full_signature": "private String calculateHash(Map<String, String> parameterMap)", "class_method_signature": "NotificationUtils.calculateHash(Map<String, String> parameterMap)", "testcase": false, "constructor": false}, {"identifier": "createStringForHash", "parameters": "(Map<String, String> parameterMap)", "modifiers": "", "return": "String", "signature": "String createStringForHash(Map<String, String> parameterMap)", "full_signature": " String createStringForHash(Map<String, String> parameterMap)", "class_method_signature": "NotificationUtils.createStringForHash(Map<String, String> parameterMap)", "testcase": false, "constructor": false}], "file": "yamolib/src/main/java/ru/yandex/money/api/notifications/NotificationUtils.java"}, "focal_method": {"identifier": "isHashValid", "parameters": "(Map<String, String> parameterMap, String secret)", "modifiers": "public", "return": "boolean", "body": "public boolean isHashValid(Map<String, String> parameterMap, String secret) {\n        Map<String, String> map = new HashMap<String, String>(parameterMap);\n        map.put(\"notification_secret\", secret);\n\n        checkAllParametersNotNull(map);\n\n        String realHash = calculateHash(map);\n        String sha1HashParam = map.get(\"sha1_hash\");\n\n        boolean equals = realHash.equalsIgnoreCase(sha1HashParam);\n        if (!equals) {\n            LOG.debug(\"the hashes are not equals. expected: \" + realHash + \", but received: \" + sha1HashParam);\n        }\n        return equals;\n    }", "signature": "boolean isHashValid(Map<String, String> parameterMap, String secret)", "full_signature": "public boolean isHashValid(Map<String, String> parameterMap, String secret)", "class_method_signature": "NotificationUtils.isHashValid(Map<String, String> parameterMap, String secret)", "testcase": false, "constructor": false, "invocations": ["put", "checkAllParametersNotNull", "calculateHash", "get", "equalsIgnoreCase", "debug"]}, "repository": {"repo_id": 2819986, "url": "https://github.com/melnikovdv/Java-Yandex.Money-API-SDK", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 15, "size": 2716, "license": "licensed"}}