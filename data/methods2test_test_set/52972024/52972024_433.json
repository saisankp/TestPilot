{"test_class": {"identifier": "PostgresConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Connection connection;", "modifier": "private", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private PostgresConnection testPostgresConnection;", "modifier": "private", "type": "PostgresConnection", "declarator": "testPostgresConnection", "var_name": "testPostgresConnection"}, {"original_string": "private PreparedStatement validateStatement;", "modifier": "private", "type": "PreparedStatement", "declarator": "validateStatement", "var_name": "validateStatement"}], "file": "CoreFeatures/Database-postgresql/PostgresConnection/src/test/java/info/smart_tools/smartactors/database_postgresql/postgres_connection/PostgresConnectionTest.java"}, "test_case": {"identifier": "MustInCorrectRollbackConnectionWhenRollbackThrowException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void MustInCorrectRollbackConnectionWhenRollbackThrowException() throws StorageException, SQLException {\n        doThrow(new SQLException()).when(connection).rollback();\n\n        try {\n            testPostgresConnection.rollback();\n        } catch (StorageException e) {\n            verify(connection).rollback();\n            return;\n        }\n        assertTrue(\"Must throw exception\", false);\n    }", "signature": "void MustInCorrectRollbackConnectionWhenRollbackThrowException()", "full_signature": "@Test public void MustInCorrectRollbackConnectionWhenRollbackThrowException()", "class_method_signature": "PostgresConnectionTest.MustInCorrectRollbackConnectionWhenRollbackThrowException()", "testcase": true, "constructor": false, "invocations": ["rollback", "when", "doThrow", "rollback", "rollback", "verify", "assertTrue"]}, "focal_class": {"identifier": "PostgresConnection", "superclass": "", "interfaces": "implements IStorageConnection", "fields": [{"original_string": "private static final String POSTGRESQL_JDBC_DRIVER_NAME = \"org.postgresql.Driver\";", "modifier": "private static final", "type": "String", "declarator": "POSTGRESQL_JDBC_DRIVER_NAME = \"org.postgresql.Driver\"", "var_name": "POSTGRESQL_JDBC_DRIVER_NAME"}, {"original_string": "private Connection connection;", "modifier": "private", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private PreparedStatement validationQueryStatement;", "modifier": "private", "type": "PreparedStatement", "declarator": "validationQueryStatement", "var_name": "validationQueryStatement"}], "methods": [{"identifier": "PostgresConnection", "parameters": "(final ConnectionOptions options)", "modifiers": "public", "return": "", "signature": " PostgresConnection(final ConnectionOptions options)", "full_signature": "public  PostgresConnection(final ConnectionOptions options)", "class_method_signature": "PostgresConnection.PostgresConnection(final ConnectionOptions options)", "testcase": false, "constructor": true}, {"identifier": "compileQuery", "parameters": "(final IPreparedQuery preparedQuery)", "modifiers": "public", "return": "ICompiledQuery", "signature": "ICompiledQuery compileQuery(final IPreparedQuery preparedQuery)", "full_signature": "public ICompiledQuery compileQuery(final IPreparedQuery preparedQuery)", "class_method_signature": "PostgresConnection.compileQuery(final IPreparedQuery preparedQuery)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean validate()", "full_signature": "public boolean validate()", "class_method_signature": "PostgresConnection.validate()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "PostgresConnection.close()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void commit()", "full_signature": "public void commit()", "class_method_signature": "PostgresConnection.commit()", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void rollback()", "full_signature": "public void rollback()", "class_method_signature": "PostgresConnection.rollback()", "testcase": false, "constructor": false}], "file": "CoreFeatures/Database-postgresql/PostgresConnection/src/main/java/info/smart_tools/smartactors/database_postgresql/postgres_connection/PostgresConnection.java"}, "focal_method": {"identifier": "rollback", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void rollback()\n            throws StorageException {\n        try {\n            connection.rollback();\n        } catch (SQLException e) {\n            throw new StorageException(\"Error rolling back SQL transaction: \", e);\n        }\n    }", "signature": "void rollback()", "full_signature": "public void rollback()", "class_method_signature": "PostgresConnection.rollback()", "testcase": false, "constructor": false, "invocations": ["rollback"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}