{"test_class": {"identifier": "TestOperationProcessingChain", "superclass": "extends BasicTestCase", "interfaces": "", "fields": [{"original_string": "static final int COUNT = 10;", "modifier": "static final", "type": "int", "declarator": "COUNT = 10", "var_name": "COUNT"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestOperationProcessingChain.java"}, "test_case": {"identifier": "testCounterServiceJumpOperationProcessingStage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCounterServiceJumpOperationProcessingStage() throws Throwable {\n        Service counterService = createCounterService();\n        OperationProcessingChain opProcessingChain = OperationProcessingChain.create(\n                new OperationLogger(),\n                new OperationNextFiltersBypasser(counterService),\n                new OperationPatchDropper());\n        counterService.setOperationProcessingChain(opProcessingChain);\n\n        for (int i = 0; i < COUNT; i++) {\n            incrementCounter(false);\n        }\n        int counter = getCounter();\n        assertEquals(COUNT, counter);\n    }", "signature": "void testCounterServiceJumpOperationProcessingStage()", "full_signature": "@Test public void testCounterServiceJumpOperationProcessingStage()", "class_method_signature": "TestOperationProcessingChain.testCounterServiceJumpOperationProcessingStage()", "testcase": true, "constructor": false, "invocations": ["createCounterService", "create", "setOperationProcessingChain", "incrementCounter", "getCounter", "assertEquals"]}, "focal_class": {"identifier": "OperationProcessingChain", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Level logLevel;", "modifier": "private", "type": "Level", "declarator": "logLevel", "var_name": "logLevel"}, {"original_string": "private boolean loggingEnabled;", "modifier": "private", "type": "boolean", "declarator": "loggingEnabled", "var_name": "loggingEnabled"}, {"original_string": "private Predicate<Operation> logFilter;", "modifier": "private", "type": "Predicate<Operation>", "declarator": "logFilter", "var_name": "logFilter"}, {"original_string": "private List<Filter> filters;", "modifier": "private", "type": "List<Filter>", "declarator": "filters", "var_name": "filters"}], "methods": [{"identifier": "createContext", "parameters": "(ServiceHost host)", "modifiers": "public", "return": "OperationProcessingContext", "signature": "OperationProcessingContext createContext(ServiceHost host)", "full_signature": "public OperationProcessingContext createContext(ServiceHost host)", "class_method_signature": "OperationProcessingChain.createContext(ServiceHost host)", "testcase": false, "constructor": false}, {"identifier": "setLogLevel", "parameters": "(Level logLevel)", "modifiers": "public", "return": "OperationProcessingChain", "signature": "OperationProcessingChain setLogLevel(Level logLevel)", "full_signature": "public OperationProcessingChain setLogLevel(Level logLevel)", "class_method_signature": "OperationProcessingChain.setLogLevel(Level logLevel)", "testcase": false, "constructor": false}, {"identifier": "toggleLogging", "parameters": "(boolean loggingEnabled)", "modifiers": "public", "return": "OperationProcessingChain", "signature": "OperationProcessingChain toggleLogging(boolean loggingEnabled)", "full_signature": "public OperationProcessingChain toggleLogging(boolean loggingEnabled)", "class_method_signature": "OperationProcessingChain.toggleLogging(boolean loggingEnabled)", "testcase": false, "constructor": false}, {"identifier": "setLogFilter", "parameters": "(Predicate<Operation> logFilter)", "modifiers": "public", "return": "OperationProcessingChain", "signature": "OperationProcessingChain setLogFilter(Predicate<Operation> logFilter)", "full_signature": "public OperationProcessingChain setLogFilter(Predicate<Operation> logFilter)", "class_method_signature": "OperationProcessingChain.setLogFilter(Predicate<Operation> logFilter)", "testcase": false, "constructor": false}, {"identifier": "OperationProcessingChain", "parameters": "()", "modifiers": "private", "return": "", "signature": " OperationProcessingChain()", "full_signature": "private  OperationProcessingChain()", "class_method_signature": "OperationProcessingChain.OperationProcessingChain()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Filter... filters)", "modifiers": "public static", "return": "OperationProcessingChain", "signature": "OperationProcessingChain create(Filter... filters)", "full_signature": "public static OperationProcessingChain create(Filter... filters)", "class_method_signature": "OperationProcessingChain.create(Filter... filters)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "OperationProcessingChain.close()", "testcase": false, "constructor": false}, {"identifier": "processRequest", "parameters": "(Operation op, OperationProcessingContext context,\n            Consumer<Operation> operationConsumer)", "modifiers": "public", "return": "void", "signature": "void processRequest(Operation op, OperationProcessingContext context,\n            Consumer<Operation> operationConsumer)", "full_signature": "public void processRequest(Operation op, OperationProcessingContext context,\n            Consumer<Operation> operationConsumer)", "class_method_signature": "OperationProcessingChain.processRequest(Operation op, OperationProcessingContext context,\n            Consumer<Operation> operationConsumer)", "testcase": false, "constructor": false}, {"identifier": "resumeProcessingRequest", "parameters": "(Operation op, OperationProcessingContext context,\n            FilterReturnCode filterReturnCode, Throwable e)", "modifiers": "public", "return": "void", "signature": "void resumeProcessingRequest(Operation op, OperationProcessingContext context,\n            FilterReturnCode filterReturnCode, Throwable e)", "full_signature": "public void resumeProcessingRequest(Operation op, OperationProcessingContext context,\n            FilterReturnCode filterReturnCode, Throwable e)", "class_method_signature": "OperationProcessingChain.resumeProcessingRequest(Operation op, OperationProcessingContext context,\n            FilterReturnCode filterReturnCode, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "findFilter", "parameters": "(Predicate<Filter> tester)", "modifiers": "public", "return": "Filter", "signature": "Filter findFilter(Predicate<Filter> tester)", "full_signature": "public Filter findFilter(Predicate<Filter> tester)", "class_method_signature": "OperationProcessingChain.findFilter(Predicate<Filter> tester)", "testcase": false, "constructor": false}, {"identifier": "processRequest", "parameters": "(Operation op, OperationProcessingContext context, int startIndex)", "modifiers": "private", "return": "FilterReturnCode", "signature": "FilterReturnCode processRequest(Operation op, OperationProcessingContext context, int startIndex)", "full_signature": "private FilterReturnCode processRequest(Operation op, OperationProcessingContext context, int startIndex)", "class_method_signature": "OperationProcessingChain.processRequest(Operation op, OperationProcessingContext context, int startIndex)", "testcase": false, "constructor": false}, {"identifier": "shouldLog", "parameters": "(Operation op)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldLog(Operation op)", "full_signature": "private boolean shouldLog(Operation op)", "class_method_signature": "OperationProcessingChain.shouldLog(Operation op)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Operation op, OperationProcessingContext context, String msg, Level logLevel)", "modifiers": "private", "return": "void", "signature": "void log(Operation op, OperationProcessingContext context, String msg, Level logLevel)", "full_signature": "private void log(Operation op, OperationProcessingContext context, String msg, Level logLevel)", "class_method_signature": "OperationProcessingChain.log(Operation op, OperationProcessingContext context, String msg, Level logLevel)", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/OperationProcessingChain.java"}, "focal_method": {"identifier": "create", "parameters": "(Filter... filters)", "modifiers": "public static", "return": "OperationProcessingChain", "body": "public static OperationProcessingChain create(Filter... filters) {\n        OperationProcessingChain opProcessingChain = new OperationProcessingChain();\n        for (Filter filter : filters) {\n            filter.init();\n            opProcessingChain.filters.add(filter);\n        }\n\n        return opProcessingChain;\n    }", "signature": "OperationProcessingChain create(Filter... filters)", "full_signature": "public static OperationProcessingChain create(Filter... filters)", "class_method_signature": "OperationProcessingChain.create(Filter... filters)", "testcase": false, "constructor": false, "invocations": ["init", "add"]}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}