{"test_class": {"identifier": "ServerLogServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ServerLogService serverLogService;", "modifier": "@Autowired\n    private", "type": "ServerLogService", "declarator": "serverLogService", "var_name": "serverLogService"}], "file": "lzpeng-boot-server/src/test/java/com/lzpeng/project/monitor/service/ServerLogServiceTest.java"}, "test_case": {"identifier": "findAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findAll() {\n        List<ServerLog> serverLogList = serverLogService.findAll(null);\n        log.info(\"{}\", serverLogList);\n    }", "signature": "void findAll()", "full_signature": "@Test public void findAll()", "class_method_signature": "ServerLogServiceTest.findAll()", "testcase": true, "constructor": false, "invocations": ["findAll", "info"]}, "focal_class": {"identifier": "ServerLogService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Value(\"${logging.file.name}\")\n    private String logFilePath;", "modifier": "@Value(\"${logging.file.name}\")\n    private", "type": "String", "declarator": "logFilePath", "var_name": "logFilePath"}, {"original_string": "private File logFileContent;", "modifier": "private", "type": "File", "declarator": "logFileContent", "var_name": "logFileContent"}, {"original_string": "@Autowired\n    private FileInfoService fileInfoService;", "modifier": "@Autowired\n    private", "type": "FileInfoService", "declarator": "fileInfoService", "var_name": "fileInfoService"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct private", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct private void init()", "class_method_signature": "ServerLogService.init()", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(ServerLog model)", "modifiers": "public", "return": "List<ServerLog>", "signature": "List<ServerLog> findAll(ServerLog model)", "full_signature": "public List<ServerLog> findAll(ServerLog model)", "class_method_signature": "ServerLogService.findAll(ServerLog model)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(int page, int size, ServerLog model)", "modifiers": "public", "return": "QueryResult<ServerLog>", "signature": "QueryResult<ServerLog> query(int page, int size, ServerLog model)", "full_signature": "public QueryResult<ServerLog> query(int page, int size, ServerLog model)", "class_method_signature": "ServerLogService.query(int page, int size, ServerLog model)", "testcase": false, "constructor": false}, {"identifier": "downloadLogFile", "parameters": "(String fileName, HttpServletResponse response)", "modifiers": "public", "return": "void", "signature": "void downloadLogFile(String fileName, HttpServletResponse response)", "full_signature": "public void downloadLogFile(String fileName, HttpServletResponse response)", "class_method_signature": "ServerLogService.downloadLogFile(String fileName, HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "lzpeng-boot-server/src/main/java/com/lzpeng/project/monitor/service/ServerLogService.java"}, "focal_method": {"identifier": "findAll", "parameters": "(ServerLog model)", "modifiers": "public", "return": "List<ServerLog>", "body": "public List<ServerLog> findAll(ServerLog model) {\n        File[] logFiles = logFileContent.listFiles(); // \u6240\u6709\u65e5\u5fd7\u6587\u4ef6\n        QueryResult<ServerLog> queryResult = query(1, logFiles.length, model);\n        List<ServerLog> serverLogList = queryResult.getList();\n        return serverLogList;\n    }", "signature": "List<ServerLog> findAll(ServerLog model)", "full_signature": "public List<ServerLog> findAll(ServerLog model)", "class_method_signature": "ServerLogService.findAll(ServerLog model)", "testcase": false, "constructor": false, "invocations": ["listFiles", "query", "getList"]}, "repository": {"repo_id": 257335962, "url": "https://github.com/lzpeng723/minimal-boot", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 25, "size": 2632, "license": "licensed"}}