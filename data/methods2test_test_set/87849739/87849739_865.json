{"test_class": {"identifier": "AudienceTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/jwt/src/test/java/org/eclipse/ditto/model/jwt/AudienceTest.java"}, "test_case": {"identifier": "empty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void empty() {\n        final Audience emptyAudience = Audience.empty();\n        assertThat(emptyAudience.getPrinciples()).isEmpty();\n    }", "signature": "void empty()", "full_signature": "@Test public void empty()", "class_method_signature": "AudienceTest.empty()", "testcase": true, "constructor": false, "invocations": ["empty", "isEmpty", "assertThat", "getPrinciples"]}, "focal_class": {"identifier": "Audience", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<String> principles;", "modifier": "private final", "type": "List<String>", "declarator": "principles", "var_name": "principles"}], "methods": [{"identifier": "Audience", "parameters": "(final List<String> principles)", "modifiers": "private", "return": "", "signature": " Audience(final List<String> principles)", "full_signature": "private  Audience(final List<String> principles)", "class_method_signature": "Audience.Audience(final List<String> principles)", "testcase": false, "constructor": true}, {"identifier": "fromJson", "parameters": "(final JsonValue audValue)", "modifiers": "static", "return": "Audience", "signature": "Audience fromJson(final JsonValue audValue)", "full_signature": "static Audience fromJson(final JsonValue audValue)", "class_method_signature": "Audience.fromJson(final JsonValue audValue)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "static", "return": "Audience", "signature": "Audience empty()", "full_signature": "static Audience empty()", "class_method_signature": "Audience.empty()", "testcase": false, "constructor": false}, {"identifier": "getSinglePrinciple", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getSinglePrinciple()", "full_signature": "public Optional<String> getSinglePrinciple()", "class_method_signature": "Audience.getSinglePrinciple()", "testcase": false, "constructor": false}, {"identifier": "getPrinciples", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getPrinciples()", "full_signature": "public List<String> getPrinciples()", "class_method_signature": "Audience.getPrinciples()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "Audience.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Audience.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Audience.toString()", "testcase": false, "constructor": false}], "file": "model/jwt/src/main/java/org/eclipse/ditto/model/jwt/Audience.java"}, "focal_method": {"identifier": "empty", "parameters": "()", "modifiers": "static", "return": "Audience", "body": "static Audience empty() {\n        return new Audience(Collections.emptyList());\n    }", "signature": "Audience empty()", "full_signature": "static Audience empty()", "class_method_signature": "Audience.empty()", "testcase": false, "constructor": false, "invocations": ["emptyList"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}