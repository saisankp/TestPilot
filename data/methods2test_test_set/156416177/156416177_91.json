{"test_class": {"identifier": "SvDebitCmdBuildTest", "superclass": "", "interfaces": "", "fields": [], "file": "java/component/keyple-calypso/src/test/java/org/eclipse/keyple/calypso/command/po/builder/storedvalue/SvDebitCmdBuildTest.java"}, "test_case": {"identifier": "svDebitCmdBuild_mode_rev3_2_overlimit_amount", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void svDebitCmdBuild_mode_rev3_2_overlimit_amount() {\n    /** @see Calypso Layer ID 8.02 (200108) */\n    SvDebitCmdBuild svDebitCmdBuild =\n        new SvDebitCmdBuild(\n            PoClass.ISO,\n            PoRevision.REV3_2,\n            /* amount */ 32768, /* KVC */\n            (byte) 0xAA, /* date */\n            ByteArrayUtil.fromHex(\"1122\"),\n            /* time */ ByteArrayUtil.fromHex(\"3344\"));\n    svDebitCmdBuild.finalizeBuilder(\n        /* SAM ID + prepare SV Debit data */ ByteArrayUtil.fromHex(\n            \"AABBCCDD5566771234561122334455\"));\n    String apdu = ByteArrayUtil.toHex(svDebitCmdBuild.getApduRequest().getBytes());\n  }", "signature": "void svDebitCmdBuild_mode_rev3_2_overlimit_amount()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void svDebitCmdBuild_mode_rev3_2_overlimit_amount()", "class_method_signature": "SvDebitCmdBuildTest.svDebitCmdBuild_mode_rev3_2_overlimit_amount()", "testcase": true, "constructor": false, "invocations": ["fromHex", "fromHex", "finalizeBuilder", "fromHex", "toHex", "getBytes", "getApduRequest"]}, "focal_class": {"identifier": "SvDebitCmdBuild", "superclass": "extends AbstractPoCommandBuilder<SvDebitRespPars>", "interfaces": "", "fields": [{"original_string": "private static final CalypsoPoCommand command = CalypsoPoCommand.SV_DEBIT;", "modifier": "private static final", "type": "CalypsoPoCommand", "declarator": "command = CalypsoPoCommand.SV_DEBIT", "var_name": "command"}, {"original_string": "private final PoClass poClass;", "modifier": "private final", "type": "PoClass", "declarator": "poClass", "var_name": "poClass"}, {"original_string": "private final PoRevision poRevision;", "modifier": "private final", "type": "PoRevision", "declarator": "poRevision", "var_name": "poRevision"}, {"original_string": "private final byte[] dataIn;", "modifier": "private final", "type": "byte[]", "declarator": "dataIn", "var_name": "dataIn"}], "methods": [{"identifier": "SvDebitCmdBuild", "parameters": "(\n      PoClass poClass, PoRevision poRevision, int amount, byte kvc, byte[] date, byte[] time)", "modifiers": "public", "return": "", "signature": " SvDebitCmdBuild(\n      PoClass poClass, PoRevision poRevision, int amount, byte kvc, byte[] date, byte[] time)", "full_signature": "public  SvDebitCmdBuild(\n      PoClass poClass, PoRevision poRevision, int amount, byte kvc, byte[] date, byte[] time)", "class_method_signature": "SvDebitCmdBuild.SvDebitCmdBuild(\n      PoClass poClass, PoRevision poRevision, int amount, byte kvc, byte[] date, byte[] time)", "testcase": false, "constructor": true}, {"identifier": "finalizeBuilder", "parameters": "(byte[] debitComplementaryData)", "modifiers": "public", "return": "void", "signature": "void finalizeBuilder(byte[] debitComplementaryData)", "full_signature": "public void finalizeBuilder(byte[] debitComplementaryData)", "class_method_signature": "SvDebitCmdBuild.finalizeBuilder(byte[] debitComplementaryData)", "testcase": false, "constructor": false}, {"identifier": "getSvDebitData", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getSvDebitData()", "full_signature": "public byte[] getSvDebitData()", "class_method_signature": "SvDebitCmdBuild.getSvDebitData()", "testcase": false, "constructor": false}, {"identifier": "createResponseParser", "parameters": "(ApduResponse apduResponse)", "modifiers": "@Override public", "return": "SvDebitRespPars", "signature": "SvDebitRespPars createResponseParser(ApduResponse apduResponse)", "full_signature": "@Override public SvDebitRespPars createResponseParser(ApduResponse apduResponse)", "class_method_signature": "SvDebitCmdBuild.createResponseParser(ApduResponse apduResponse)", "testcase": false, "constructor": false}, {"identifier": "isSessionBufferUsed", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSessionBufferUsed()", "full_signature": "@Override public boolean isSessionBufferUsed()", "class_method_signature": "SvDebitCmdBuild.isSessionBufferUsed()", "testcase": false, "constructor": false}], "file": "java/component/keyple-calypso/src/main/java/org/eclipse/keyple/calypso/command/po/builder/storedvalue/SvDebitCmdBuild.java"}, "focal_method": {"identifier": "finalizeBuilder", "parameters": "(byte[] debitComplementaryData)", "modifiers": "public", "return": "void", "body": "public void finalizeBuilder(byte[] debitComplementaryData) {\n    if ((poRevision == PoRevision.REV3_2 && debitComplementaryData.length != 20)\n        || (poRevision != PoRevision.REV3_2 && debitComplementaryData.length != 15)) {\n      throw new IllegalArgumentException(\"Bad SV prepare load data length.\");\n    }\n\n    byte p1 = debitComplementaryData[4];\n    byte p2 = debitComplementaryData[5];\n\n    dataIn[0] = debitComplementaryData[6];\n    System.arraycopy(debitComplementaryData, 0, dataIn, 8, 4);\n    System.arraycopy(debitComplementaryData, 7, dataIn, 12, 3);\n    System.arraycopy(debitComplementaryData, 10, dataIn, 15, debitComplementaryData.length - 10);\n\n    this.request = setApduRequest(poClass.getValue(), command, p1, p2, dataIn, null);\n  }", "signature": "void finalizeBuilder(byte[] debitComplementaryData)", "full_signature": "public void finalizeBuilder(byte[] debitComplementaryData)", "class_method_signature": "SvDebitCmdBuild.finalizeBuilder(byte[] debitComplementaryData)", "testcase": false, "constructor": false, "invocations": ["arraycopy", "arraycopy", "arraycopy", "setApduRequest", "getValue"]}, "repository": {"repo_id": 156416177, "url": "https://github.com/eclipse/keyple-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 10325, "license": "licensed"}}