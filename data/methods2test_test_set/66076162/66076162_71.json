{"test_class": {"identifier": "MessageJsonMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MessageJsonMapper messageJsonMapper;", "modifier": "private", "type": "MessageJsonMapper", "declarator": "messageJsonMapper", "var_name": "messageJsonMapper"}, {"original_string": "@Mock private JsonSerializer jsonSerializer;", "modifier": "@Mock private", "type": "JsonSerializer", "declarator": "jsonSerializer", "var_name": "jsonSerializer"}], "file": "infrastructure/src/test/java/com/remotecraft/app/infrastructure/protocol/mapper/MessageJsonMapperTest.java"}, "test_case": {"identifier": "shouldProperlySerializeMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldProperlySerializeMessage() throws Exception {\n    ErrorMessage errorMessage = new ErrorMessage.Builder().with(404).and(\"Not found!\").build();\n    String fakeSerializedJson = \"{status:fail, message:not found!}\";\n    when(jsonSerializer.toJson(errorMessage)).thenReturn(fakeSerializedJson);\n\n    String message = messageJsonMapper.transformMessage(errorMessage);\n\n    assertThat(message).isNotNull();\n    assertThat(message.length()).isEqualTo(fakeSerializedJson.length());\n  }", "signature": "void shouldProperlySerializeMessage()", "full_signature": "@Test public void shouldProperlySerializeMessage()", "class_method_signature": "MessageJsonMapperTest.shouldProperlySerializeMessage()", "testcase": true, "constructor": false, "invocations": ["build", "and", "with", "thenReturn", "when", "toJson", "transformMessage", "isNotNull", "assertThat", "isEqualTo", "assertThat", "length", "length"]}, "focal_class": {"identifier": "MessageJsonMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final JsonSerializer jsonSerializer;", "modifier": "private final", "type": "JsonSerializer", "declarator": "jsonSerializer", "var_name": "jsonSerializer"}], "methods": [{"identifier": "MessageJsonMapper", "parameters": "(JsonSerializer jsonSerializer)", "modifiers": "@Inject public", "return": "", "signature": " MessageJsonMapper(JsonSerializer jsonSerializer)", "full_signature": "@Inject public  MessageJsonMapper(JsonSerializer jsonSerializer)", "class_method_signature": "MessageJsonMapper.MessageJsonMapper(JsonSerializer jsonSerializer)", "testcase": false, "constructor": true}, {"identifier": "transformMessage", "parameters": "(String messageJsonResponse)", "modifiers": "public", "return": "Message", "signature": "Message transformMessage(String messageJsonResponse)", "full_signature": "public Message transformMessage(String messageJsonResponse)", "class_method_signature": "MessageJsonMapper.transformMessage(String messageJsonResponse)", "testcase": false, "constructor": false}, {"identifier": "transformMessage", "parameters": "(Message message)", "modifiers": "public", "return": "String", "signature": "String transformMessage(Message message)", "full_signature": "public String transformMessage(Message message)", "class_method_signature": "MessageJsonMapper.transformMessage(Message message)", "testcase": false, "constructor": false}], "file": "infrastructure/src/main/java/com/remotecraft/app/infrastructure/protocol/mapper/MessageJsonMapper.java"}, "focal_method": {"identifier": "transformMessage", "parameters": "(String messageJsonResponse)", "modifiers": "public", "return": "Message", "body": "public Message transformMessage(String messageJsonResponse) {\n    return jsonSerializer.fromJson(messageJsonResponse, Message.class);\n  }", "signature": "Message transformMessage(String messageJsonResponse)", "full_signature": "public Message transformMessage(String messageJsonResponse)", "class_method_signature": "MessageJsonMapper.transformMessage(String messageJsonResponse)", "testcase": false, "constructor": false, "invocations": ["fromJson"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}