{"test_class": {"identifier": "UtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/storm-flowmix/src/test/java/org/calrissian/flowmix/core/support/UtilsTest.java"}, "test_case": {"identifier": "test_buildKeyIndexForEvent_groupByMultiField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test_buildKeyIndexForEvent_groupByMultiField() {\n    String hash = buildKeyIndexForEvent(\"one\", buildTestEvent(), Arrays.asList(new String[]{\"key1\", \"key2\"}));\n    assertEquals(\"onekey1val1val5|key2val2|\", hash);\n  }", "signature": "void test_buildKeyIndexForEvent_groupByMultiField()", "full_signature": "@Test public void test_buildKeyIndexForEvent_groupByMultiField()", "class_method_signature": "UtilsTest.test_buildKeyIndexForEvent_groupByMultiField()", "testcase": true, "constructor": false, "invocations": ["buildKeyIndexForEvent", "buildTestEvent", "asList", "assertEquals"]}, "focal_class": {"identifier": "Utils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final TypeRegistry<String> registry = LEXI_TYPES;", "modifier": "private static final", "type": "TypeRegistry<String>", "declarator": "registry = LEXI_TYPES", "var_name": "registry"}], "methods": [{"identifier": "Utils", "parameters": "()", "modifiers": "private", "return": "", "signature": " Utils()", "full_signature": "private  Utils()", "class_method_signature": "Utils.Utils()", "testcase": false, "constructor": true}, {"identifier": "buildKeyIndexForEvent", "parameters": "(Event event, List<String> groupBy)", "modifiers": "public static", "return": "String", "signature": "String buildKeyIndexForEvent(Event event, List<String> groupBy)", "full_signature": "public static String buildKeyIndexForEvent(Event event, List<String> groupBy)", "class_method_signature": "Utils.buildKeyIndexForEvent(Event event, List<String> groupBy)", "testcase": false, "constructor": false}, {"identifier": "buildKeyIndexForEvent", "parameters": "(String flowId, Event event, List<String> groupBy)", "modifiers": "public static", "return": "String", "signature": "String buildKeyIndexForEvent(String flowId, Event event, List<String> groupBy)", "full_signature": "public static String buildKeyIndexForEvent(String flowId, Event event, List<String> groupBy)", "class_method_signature": "Utils.buildKeyIndexForEvent(String flowId, Event event, List<String> groupBy)", "testcase": false, "constructor": false}, {"identifier": "getNextStreamFromFlowInfo", "parameters": "(Flow flow, String streamName, int idx)", "modifiers": "public static", "return": "String", "signature": "String getNextStreamFromFlowInfo(Flow flow, String streamName, int idx)", "full_signature": "public static String getNextStreamFromFlowInfo(Flow flow, String streamName, int idx)", "class_method_signature": "Utils.getNextStreamFromFlowInfo(Flow flow, String streamName, int idx)", "testcase": false, "constructor": false}, {"identifier": "hasNextOutput", "parameters": "(Flow flow, String streamName, String nextStream)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasNextOutput(Flow flow, String streamName, String nextStream)", "full_signature": "public static boolean hasNextOutput(Flow flow, String streamName, String nextStream)", "class_method_signature": "Utils.hasNextOutput(Flow flow, String streamName, String nextStream)", "testcase": false, "constructor": false}, {"identifier": "exportsToOtherStreams", "parameters": "(Flow flow, String streamName, String nextStream)", "modifiers": "public static", "return": "boolean", "signature": "boolean exportsToOtherStreams(Flow flow, String streamName, String nextStream)", "full_signature": "public static boolean exportsToOtherStreams(Flow flow, String streamName, String nextStream)", "class_method_signature": "Utils.exportsToOtherStreams(Flow flow, String streamName, String nextStream)", "testcase": false, "constructor": false}, {"identifier": "getFlowOpFromStream", "parameters": "(Flow flow, String stream, int idx)", "modifiers": "public static", "return": "T", "signature": "T getFlowOpFromStream(Flow flow, String stream, int idx)", "full_signature": "public static T getFlowOpFromStream(Flow flow, String stream, int idx)", "class_method_signature": "Utils.getFlowOpFromStream(Flow flow, String stream, int idx)", "testcase": false, "constructor": false}, {"identifier": "getFlowOpFromStream", "parameters": "(Map<String, Flow> flows, String flowId, String stream, int idx)", "modifiers": "public static", "return": "T", "signature": "T getFlowOpFromStream(Map<String, Flow> flows, String flowId, String stream, int idx)", "full_signature": "public static T getFlowOpFromStream(Map<String, Flow> flows, String flowId, String stream, int idx)", "class_method_signature": "Utils.getFlowOpFromStream(Map<String, Flow> flows, String flowId, String stream, int idx)", "testcase": false, "constructor": false}, {"identifier": "flowsMap", "parameters": "(backtype.storm.tuple.Tuple tuple, Map<String,Flow> flows)", "modifiers": "public static", "return": "void", "signature": "void flowsMap(backtype.storm.tuple.Tuple tuple, Map<String,Flow> flows)", "full_signature": "public static void flowsMap(backtype.storm.tuple.Tuple tuple, Map<String,Flow> flows)", "class_method_signature": "Utils.flowsMap(backtype.storm.tuple.Tuple tuple, Map<String,Flow> flows)", "testcase": false, "constructor": false}], "file": "storm/storm-flowmix/src/main/java/org/calrissian/flowmix/core/support/Utils.java"}, "focal_method": {"identifier": "buildKeyIndexForEvent", "parameters": "(Event event, List<String> groupBy)", "modifiers": "public static", "return": "String", "body": "public static String buildKeyIndexForEvent(Event event, List<String> groupBy) {\n        StringBuffer stringBuffer = new StringBuffer();\n        if (groupBy == null || groupBy.size() == 0)\n            return stringBuffer.toString();  // default partition when no groupBy fields are specified.\n\n        //groupBy\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u5b57\u6bb5.\n        for (String groupField : groupBy) {\n            //\u4e00\u6761\u4e8b\u4ef6Event\u53ef\u4ee5\u6709\u591a\u4e2aTuples.\n            Collection<Tuple> tuples = event.getAll(groupField);\n            SortedSet<String> values = new TreeSet<String>();\n\n            if (tuples == null) {\n                values.add(\"\");\n            } else {\n                for (Tuple tuple : tuples)\n                    values.add(registry.encode(tuple.getValue()));\n            }\n            stringBuffer.append(groupField + join(values, \"\") + \"|\");\n        }\n        try {\n            return stringBuffer.toString();\n        } catch (Exception e) {\n            return null;\n        }\n    }", "signature": "String buildKeyIndexForEvent(Event event, List<String> groupBy)", "full_signature": "public static String buildKeyIndexForEvent(Event event, List<String> groupBy)", "class_method_signature": "Utils.buildKeyIndexForEvent(Event event, List<String> groupBy)", "testcase": false, "constructor": false, "invocations": ["size", "toString", "getAll", "add", "add", "encode", "getValue", "append", "join", "toString"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}