{"test_class": {"identifier": "OptionalServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/core/src/test/java/org/glowroot/agent/util/OptionalServiceTest.java"}, "test_case": {"identifier": "testUnavailable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUnavailable() {\n        // when\n        OptionalService<Object> optionalService = OptionalService.unavailable(\"abc\");\n        // then\n        assertThat(optionalService.getAvailability().getAvailable()).isFalse();\n        assertThat(optionalService.getAvailability().getReason()).isEqualTo(\"abc\");\n    }", "signature": "void testUnavailable()", "full_signature": "@Test public void testUnavailable()", "class_method_signature": "OptionalServiceTest.testUnavailable()", "testcase": true, "constructor": false, "invocations": ["unavailable", "isFalse", "assertThat", "getAvailable", "getAvailability", "isEqualTo", "assertThat", "getReason", "getAvailability"]}, "focal_class": {"identifier": "OptionalService", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "available", "parameters": "(T service)", "modifiers": "static", "return": "OptionalService<T>", "signature": "OptionalService<T> available(T service)", "full_signature": "static OptionalService<T> available(T service)", "class_method_signature": "OptionalService.available(T service)", "testcase": false, "constructor": false}, {"identifier": "unavailable", "parameters": "(String reason)", "modifiers": "static", "return": "OptionalService<T>", "signature": "OptionalService<T> unavailable(String reason)", "full_signature": "static OptionalService<T> unavailable(String reason)", "class_method_signature": "OptionalService.unavailable(String reason)", "testcase": false, "constructor": false}, {"identifier": "getAvailability", "parameters": "()", "modifiers": "public abstract", "return": "Availability", "signature": "Availability getAvailability()", "full_signature": "public abstract Availability getAvailability()", "class_method_signature": "OptionalService.getAvailability()", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "()", "modifiers": "public abstract @Nullable", "return": "T", "signature": "T getService()", "full_signature": "public abstract @Nullable T getService()", "class_method_signature": "OptionalService.getService()", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/glowroot/agent/util/OptionalService.java"}, "focal_method": {"identifier": "unavailable", "parameters": "(String reason)", "modifiers": "static", "return": "OptionalService<T>", "body": "static <T> OptionalService<T> unavailable(String reason) {\n        return new AbsentOptionalService<T>(reason);\n    }", "signature": "OptionalService<T> unavailable(String reason)", "full_signature": "static OptionalService<T> unavailable(String reason)", "class_method_signature": "OptionalService.unavailable(String reason)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}