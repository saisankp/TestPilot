{"test_class": {"identifier": "JobQuotaControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TestClock clock = Clocks.testWorldClock(\"PST\").jumpForwardTo(DayOfWeek.MONDAY).resetTime(9, 0, 0);", "modifier": "private final", "type": "TestClock", "declarator": "clock = Clocks.testWorldClock(\"PST\").jumpForwardTo(DayOfWeek.MONDAY).resetTime(9, 0, 0)", "var_name": "clock"}, {"original_string": "private final TitusRuntime titusRuntime = TitusRuntimes.test(clock);", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.test(clock)", "var_name": "titusRuntime"}, {"original_string": "private final JobComponentStub jobComponentStub = new JobComponentStub(titusRuntime);", "modifier": "private final", "type": "JobComponentStub", "declarator": "jobComponentStub = new JobComponentStub(titusRuntime)", "var_name": "jobComponentStub"}, {"original_string": "private final V3JobOperations jobOperations = jobComponentStub.getJobOperations();", "modifier": "private final", "type": "V3JobOperations", "declarator": "jobOperations = jobComponentStub.getJobOperations()", "var_name": "jobOperations"}, {"original_string": "private final ContainerHealthService containerHealthService = jobComponentStub.getContainerHealthService();", "modifier": "private final", "type": "ContainerHealthService", "declarator": "containerHealthService = jobComponentStub.getContainerHealthService()", "var_name": "containerHealthService"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/eviction/service/quota/job/JobQuotaControllerTest.java"}, "test_case": {"identifier": "testBuildQuotaTrackers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildQuotaTrackers() {\n        testBuildQuotaTrackers(\n                scheduleJob(\n                        newBatchJob(10, budget(percentageOfHealthyPolicy(80.0), hourlyRatePercentage(5), Collections.emptyList())),\n                        10\n                ),\n                SelfJobDisruptionBudgetResolver.getInstance(),\n                UnhealthyTasksLimitTracker.class\n        );\n\n        testBuildQuotaTrackers(\n                scheduleJob(\n                        newBatchJob(10, budget(percentageOfHealthyPolicy(80.0), hourlyRatePercentage(5), singletonList(officeHourTimeWindow()))),\n                        10\n                ),\n                SelfJobDisruptionBudgetResolver.getInstance(),\n                UnhealthyTasksLimitTracker.class, TimeWindowQuotaTracker.class\n        );\n\n        testBuildQuotaTrackers(\n                scheduleJob(\n                        newBatchJob(10, budget(numberOfHealthyPolicy(2), hourlyRatePercentage(5), singletonList(officeHourTimeWindow()))),\n                        10\n                ),\n                SelfJobDisruptionBudgetResolver.getInstance(),\n                UnhealthyTasksLimitTracker.class, TimeWindowQuotaTracker.class\n        );\n\n        testBuildQuotaTrackers(\n                scheduleJob(\n                        newBatchJob(10, budget(selfManagedPolicy(10_000), unlimitedRate(), Collections.emptyList())),\n                        10\n                ),\n                job -> budget(perTaskRelocationLimitPolicy(100), hourlyRatePercentage(5), singletonList(officeHourTimeWindow())),\n                TimeWindowQuotaTracker.class\n        );\n    }", "signature": "void testBuildQuotaTrackers()", "full_signature": "@Test public void testBuildQuotaTrackers()", "class_method_signature": "JobQuotaControllerTest.testBuildQuotaTrackers()", "testcase": true, "constructor": false, "invocations": ["testBuildQuotaTrackers", "scheduleJob", "newBatchJob", "budget", "percentageOfHealthyPolicy", "hourlyRatePercentage", "emptyList", "getInstance", "testBuildQuotaTrackers", "scheduleJob", "newBatchJob", "budget", "percentageOfHealthyPolicy", "hourlyRatePercentage", "singletonList", "officeHourTimeWindow", "getInstance", "testBuildQuotaTrackers", "scheduleJob", "newBatchJob", "budget", "numberOfHealthyPolicy", "hourlyRatePercentage", "singletonList", "officeHourTimeWindow", "getInstance", "testBuildQuotaTrackers", "scheduleJob", "newBatchJob", "budget", "selfManagedPolicy", "unlimitedRate", "emptyList", "budget", "perTaskRelocationLimitPolicy", "hourlyRatePercentage", "singletonList", "officeHourTimeWindow"]}, "focal_class": {"identifier": "JobQuotaController", "superclass": "", "interfaces": "implements QuotaController<Job<?>>", "fields": [{"original_string": "private static final ConsumptionResult LEGACY = ConsumptionResult.rejected(\"Legacy job\");", "modifier": "private static final", "type": "ConsumptionResult", "declarator": "LEGACY = ConsumptionResult.rejected(\"Legacy job\")", "var_name": "LEGACY"}, {"original_string": "private final Job<?> job;", "modifier": "private final", "type": "Job<?>", "declarator": "job", "var_name": "job"}, {"original_string": "private final V3JobOperations jobOperations;", "modifier": "private final", "type": "V3JobOperations", "declarator": "jobOperations", "var_name": "jobOperations"}, {"original_string": "private final EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver;", "modifier": "private final", "type": "EffectiveJobDisruptionBudgetResolver", "declarator": "effectiveDisruptionBudgetResolver", "var_name": "effectiveDisruptionBudgetResolver"}, {"original_string": "private final ContainerHealthService containerHealthService;", "modifier": "private final", "type": "ContainerHealthService", "declarator": "containerHealthService", "var_name": "containerHealthService"}, {"original_string": "private final TitusRuntime titusRuntime;", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime", "var_name": "titusRuntime"}, {"original_string": "private final List<QuotaTracker> quotaTrackers;", "modifier": "private final", "type": "List<QuotaTracker>", "declarator": "quotaTrackers", "var_name": "quotaTrackers"}, {"original_string": "private final List<QuotaController<Job<?>>> quotaControllers;", "modifier": "private final", "type": "List<QuotaController<Job<?>>>", "declarator": "quotaControllers", "var_name": "quotaControllers"}], "methods": [{"identifier": "JobQuotaController", "parameters": "(Job<?> job,\n                              V3JobOperations jobOperations,\n                              EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                              ContainerHealthService containerHealthService,\n                              TitusRuntime titusRuntime)", "modifiers": "public", "return": "", "signature": " JobQuotaController(Job<?> job,\n                              V3JobOperations jobOperations,\n                              EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                              ContainerHealthService containerHealthService,\n                              TitusRuntime titusRuntime)", "full_signature": "public  JobQuotaController(Job<?> job,\n                              V3JobOperations jobOperations,\n                              EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                              ContainerHealthService containerHealthService,\n                              TitusRuntime titusRuntime)", "class_method_signature": "JobQuotaController.JobQuotaController(Job<?> job,\n                              V3JobOperations jobOperations,\n                              EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                              ContainerHealthService containerHealthService,\n                              TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "JobQuotaController", "parameters": "(Job<?> newJob,\n                               V3JobOperations jobOperations,\n                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                               ContainerHealthService containerHealthService,\n                               JobQuotaController previousJobQuotaController,\n                               TitusRuntime titusRuntime)", "modifiers": "private", "return": "", "signature": " JobQuotaController(Job<?> newJob,\n                               V3JobOperations jobOperations,\n                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                               ContainerHealthService containerHealthService,\n                               JobQuotaController previousJobQuotaController,\n                               TitusRuntime titusRuntime)", "full_signature": "private  JobQuotaController(Job<?> newJob,\n                               V3JobOperations jobOperations,\n                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                               ContainerHealthService containerHealthService,\n                               JobQuotaController previousJobQuotaController,\n                               TitusRuntime titusRuntime)", "class_method_signature": "JobQuotaController.JobQuotaController(Job<?> newJob,\n                               V3JobOperations jobOperations,\n                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                               ContainerHealthService containerHealthService,\n                               JobQuotaController previousJobQuotaController,\n                               TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "getJob", "parameters": "()", "modifiers": "public", "return": "Job<?>", "signature": "Job<?> getJob()", "full_signature": "public Job<?> getJob()", "class_method_signature": "JobQuotaController.getJob()", "testcase": false, "constructor": false}, {"identifier": "getQuota", "parameters": "(Reference reference)", "modifiers": "@Override public", "return": "EvictionQuota", "signature": "EvictionQuota getQuota(Reference reference)", "full_signature": "@Override public EvictionQuota getQuota(Reference reference)", "class_method_signature": "JobQuotaController.getQuota(Reference reference)", "testcase": false, "constructor": false}, {"identifier": "consume", "parameters": "(String taskId)", "modifiers": "@Override public", "return": "ConsumptionResult", "signature": "ConsumptionResult consume(String taskId)", "full_signature": "@Override public ConsumptionResult consume(String taskId)", "class_method_signature": "JobQuotaController.consume(String taskId)", "testcase": false, "constructor": false}, {"identifier": "giveBackConsumedQuota", "parameters": "(String taskId)", "modifiers": "@Override public", "return": "void", "signature": "void giveBackConsumedQuota(String taskId)", "full_signature": "@Override public void giveBackConsumedQuota(String taskId)", "class_method_signature": "JobQuotaController.giveBackConsumedQuota(String taskId)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Job<?> updatedJob)", "modifiers": "@Override public", "return": "JobQuotaController", "signature": "JobQuotaController update(Job<?> updatedJob)", "full_signature": "@Override public JobQuotaController update(Job<?> updatedJob)", "class_method_signature": "JobQuotaController.update(Job<?> updatedJob)", "testcase": false, "constructor": false}, {"identifier": "isLegacy", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isLegacy()", "full_signature": "private boolean isLegacy()", "class_method_signature": "JobQuotaController.isLegacy()", "testcase": false, "constructor": false}, {"identifier": "getMinSubQuota", "parameters": "(Reference reference)", "modifiers": "private", "return": "EvictionQuota", "signature": "EvictionQuota getMinSubQuota(Reference reference)", "full_signature": "private EvictionQuota getMinSubQuota(Reference reference)", "class_method_signature": "JobQuotaController.getMinSubQuota(Reference reference)", "testcase": false, "constructor": false}, {"identifier": "getMinSubQuota", "parameters": "(List<? extends QuotaTracker> quotaTrackers, Reference reference)", "modifiers": "private", "return": "EvictionQuota", "signature": "EvictionQuota getMinSubQuota(List<? extends QuotaTracker> quotaTrackers, Reference reference)", "full_signature": "private EvictionQuota getMinSubQuota(List<? extends QuotaTracker> quotaTrackers, Reference reference)", "class_method_signature": "JobQuotaController.getMinSubQuota(List<? extends QuotaTracker> quotaTrackers, Reference reference)", "testcase": false, "constructor": false}, {"identifier": "buildQuotaTrackers", "parameters": "(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime)", "modifiers": "@VisibleForTesting static", "return": "List<QuotaTracker>", "signature": "List<QuotaTracker> buildQuotaTrackers(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime)", "full_signature": "@VisibleForTesting static List<QuotaTracker> buildQuotaTrackers(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime)", "class_method_signature": "JobQuotaController.buildQuotaTrackers(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime)", "testcase": false, "constructor": false}, {"identifier": "buildQuotaControllers", "parameters": "(Job<?> job,\n                                                               V3JobOperations jobOperations,\n                                                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                               TitusRuntime titusRuntime)", "modifiers": "@VisibleForTesting static", "return": "List<QuotaController<Job<?>>>", "signature": "List<QuotaController<Job<?>>> buildQuotaControllers(Job<?> job,\n                                                               V3JobOperations jobOperations,\n                                                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                               TitusRuntime titusRuntime)", "full_signature": "@VisibleForTesting static List<QuotaController<Job<?>>> buildQuotaControllers(Job<?> job,\n                                                               V3JobOperations jobOperations,\n                                                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                               TitusRuntime titusRuntime)", "class_method_signature": "JobQuotaController.buildQuotaControllers(Job<?> job,\n                                                               V3JobOperations jobOperations,\n                                                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                               TitusRuntime titusRuntime)", "testcase": false, "constructor": false}, {"identifier": "mergeQuotaControllers", "parameters": "(List<QuotaController<Job<?>>> previousControllers,\n                                                               Job<?> job,\n                                                               V3JobOperations jobOperations,\n                                                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                               TitusRuntime titusRuntime)", "modifiers": "@VisibleForTesting static", "return": "List<QuotaController<Job<?>>>", "signature": "List<QuotaController<Job<?>>> mergeQuotaControllers(List<QuotaController<Job<?>>> previousControllers,\n                                                               Job<?> job,\n                                                               V3JobOperations jobOperations,\n                                                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                               TitusRuntime titusRuntime)", "full_signature": "@VisibleForTesting static List<QuotaController<Job<?>>> mergeQuotaControllers(List<QuotaController<Job<?>>> previousControllers,\n                                                               Job<?> job,\n                                                               V3JobOperations jobOperations,\n                                                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                               TitusRuntime titusRuntime)", "class_method_signature": "JobQuotaController.mergeQuotaControllers(List<QuotaController<Job<?>>> previousControllers,\n                                                               Job<?> job,\n                                                               V3JobOperations jobOperations,\n                                                               EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                               TitusRuntime titusRuntime)", "testcase": false, "constructor": false}, {"identifier": "mergeQuotaController", "parameters": "(Job<?> job,\n                                                                List<QuotaController<Job<?>>> previousQuotaControllers,\n                                                                Class<? extends QuotaController<Job<?>>> type,\n                                                                Supplier<QuotaController<Job<?>>> quotaControllerFactory)", "modifiers": "private static", "return": "QuotaController<Job<?>>", "signature": "QuotaController<Job<?>> mergeQuotaController(Job<?> job,\n                                                                List<QuotaController<Job<?>>> previousQuotaControllers,\n                                                                Class<? extends QuotaController<Job<?>>> type,\n                                                                Supplier<QuotaController<Job<?>>> quotaControllerFactory)", "full_signature": "private static QuotaController<Job<?>> mergeQuotaController(Job<?> job,\n                                                                List<QuotaController<Job<?>>> previousQuotaControllers,\n                                                                Class<? extends QuotaController<Job<?>>> type,\n                                                                Supplier<QuotaController<Job<?>>> quotaControllerFactory)", "class_method_signature": "JobQuotaController.mergeQuotaController(Job<?> job,\n                                                                List<QuotaController<Job<?>>> previousQuotaControllers,\n                                                                Class<? extends QuotaController<Job<?>>> type,\n                                                                Supplier<QuotaController<Job<?>>> quotaControllerFactory)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/eviction/service/quota/job/JobQuotaController.java"}, "focal_method": {"identifier": "buildQuotaTrackers", "parameters": "(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime)", "modifiers": "@VisibleForTesting static", "return": "List<QuotaTracker>", "body": "@VisibleForTesting\n    static List<QuotaTracker> buildQuotaTrackers(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime) {\n        List<QuotaTracker> quotaTrackers = new ArrayList<>();\n\n        DisruptionBudget effectiveBudget = effectiveDisruptionBudgetResolver.resolve(job);\n        if (!effectiveBudget.getTimeWindows().isEmpty()) {\n            quotaTrackers.add(new TimeWindowQuotaTracker(effectiveBudget.getTimeWindows(), titusRuntime));\n        }\n\n        DisruptionBudgetPolicy policy = effectiveBudget.getDisruptionBudgetPolicy();\n        if (policy instanceof AvailabilityPercentageLimitDisruptionBudgetPolicy) {\n            quotaTrackers.add(UnhealthyTasksLimitTracker.percentageLimit(job, (AvailabilityPercentageLimitDisruptionBudgetPolicy) policy, jobOperations, containerHealthService));\n        } else if (policy instanceof UnhealthyTasksLimitDisruptionBudgetPolicy) {\n            quotaTrackers.add(UnhealthyTasksLimitTracker.absoluteLimit(job, (UnhealthyTasksLimitDisruptionBudgetPolicy) policy, jobOperations, containerHealthService));\n        }\n\n        return quotaTrackers;\n    }", "signature": "List<QuotaTracker> buildQuotaTrackers(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime)", "full_signature": "@VisibleForTesting static List<QuotaTracker> buildQuotaTrackers(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime)", "class_method_signature": "JobQuotaController.buildQuotaTrackers(Job<?> job,\n                                                 V3JobOperations jobOperations,\n                                                 EffectiveJobDisruptionBudgetResolver effectiveDisruptionBudgetResolver,\n                                                 ContainerHealthService containerHealthService,\n                                                 TitusRuntime titusRuntime)", "testcase": false, "constructor": false, "invocations": ["resolve", "isEmpty", "getTimeWindows", "add", "getTimeWindows", "getDisruptionBudgetPolicy", "add", "percentageLimit", "add", "absoluteLimit"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}