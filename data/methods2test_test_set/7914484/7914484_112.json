{"test_class": {"identifier": "SoapMethodArgumentResolverTest", "superclass": "extends AbstractMethodArgumentResolverTestCase", "interfaces": "", "fields": [{"original_string": "private SoapMethodArgumentResolver resolver;", "modifier": "private", "type": "SoapMethodArgumentResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private MethodParameter soapMessageParameter;", "modifier": "private", "type": "MethodParameter", "declarator": "soapMessageParameter", "var_name": "soapMessageParameter"}, {"original_string": "private MethodParameter soapEnvelopeParameter;", "modifier": "private", "type": "MethodParameter", "declarator": "soapEnvelopeParameter", "var_name": "soapEnvelopeParameter"}, {"original_string": "private MethodParameter soapBodyParameter;", "modifier": "private", "type": "MethodParameter", "declarator": "soapBodyParameter", "var_name": "soapBodyParameter"}, {"original_string": "private MethodParameter soapHeaderParameter;", "modifier": "private", "type": "MethodParameter", "declarator": "soapHeaderParameter", "var_name": "soapHeaderParameter"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/soap/server/endpoint/adapter/method/SoapMethodArgumentResolverTest.java"}, "test_case": {"identifier": "resolveSoapEnvelopeSaaj", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void resolveSoapEnvelopeSaaj() throws Exception {\n\t\tMessageContext messageContext = createSaajMessageContext();\n\n\t\tObject result = resolver.resolveArgument(messageContext, soapEnvelopeParameter);\n\n\t\tassertEquals(((SoapMessage) messageContext.getRequest()).getEnvelope(), result);\n\t}", "signature": "void resolveSoapEnvelopeSaaj()", "full_signature": "@Test public void resolveSoapEnvelopeSaaj()", "class_method_signature": "SoapMethodArgumentResolverTest.resolveSoapEnvelopeSaaj()", "testcase": true, "constructor": false, "invocations": ["createSaajMessageContext", "resolveArgument", "assertEquals", "getEnvelope", "getRequest"]}, "focal_class": {"identifier": "SoapMethodArgumentResolver", "superclass": "", "interfaces": "implements MethodArgumentResolver", "fields": [], "methods": [{"identifier": "supportsParameter", "parameters": "(MethodParameter parameter)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsParameter(MethodParameter parameter)", "full_signature": "@Override public boolean supportsParameter(MethodParameter parameter)", "class_method_signature": "SoapMethodArgumentResolver.supportsParameter(MethodParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "resolveArgument", "parameters": "(MessageContext messageContext, MethodParameter parameter)", "modifiers": "@Override public", "return": "Object", "signature": "Object resolveArgument(MessageContext messageContext, MethodParameter parameter)", "full_signature": "@Override public Object resolveArgument(MessageContext messageContext, MethodParameter parameter)", "class_method_signature": "SoapMethodArgumentResolver.resolveArgument(MessageContext messageContext, MethodParameter parameter)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/soap/server/endpoint/adapter/method/SoapMethodArgumentResolver.java"}, "focal_method": {"identifier": "resolveArgument", "parameters": "(MessageContext messageContext, MethodParameter parameter)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n\tpublic Object resolveArgument(MessageContext messageContext, MethodParameter parameter) {\n\t\tAssert.isInstanceOf(SoapMessage.class, messageContext.getRequest());\n\t\tSoapMessage request = (SoapMessage) messageContext.getRequest();\n\n\t\tClass<?> parameterType = parameter.getParameterType();\n\n\t\tif (SoapMessage.class.equals(parameterType)) {\n\t\t\treturn request;\n\t\t} else if (SoapBody.class.equals(parameterType)) {\n\t\t\treturn request.getSoapBody();\n\t\t} else if (SoapEnvelope.class.equals(parameterType)) {\n\t\t\treturn request.getEnvelope();\n\t\t} else if (SoapHeader.class.equals(parameterType)) {\n\t\t\treturn request.getSoapHeader();\n\t\t}\n\t\t// should not happen\n\t\tthrow new UnsupportedOperationException();\n\t}", "signature": "Object resolveArgument(MessageContext messageContext, MethodParameter parameter)", "full_signature": "@Override public Object resolveArgument(MessageContext messageContext, MethodParameter parameter)", "class_method_signature": "SoapMethodArgumentResolver.resolveArgument(MessageContext messageContext, MethodParameter parameter)", "testcase": false, "constructor": false, "invocations": ["isInstanceOf", "getRequest", "getRequest", "getParameterType", "equals", "equals", "getSoapBody", "equals", "getEnvelope", "equals", "getSoapHeader"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}