{"test_class": {"identifier": "ConfigReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "Plan/common/src/test/java/com/djrapitops/plan/settings/config/ConfigReaderTest.java"}, "test_case": {"identifier": "valueAfterAList2", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void valueAfterAList2() {\n        String read = \"Plugins:\\n\" +\n                \"  Factions:\\n\" +\n                \"    HideFactions:\\n\" +\n                \"      - ExampleFaction\\n\" +\n                \"  Towny:\\n\" +\n                \"    HideTowns:\\n\" +\n                \"      - ExampleTown\\n\" +\n                \"    Enabled: true\";\n\n        try (ConfigReader reader = new ConfigReader(new Scanner(read))) {\n            Config readConfig = reader.read();\n\n            assertTrue(readConfig.getNode(\"Plugins.Towny.HideTowns\").isPresent());\n            assertTrue(readConfig.getNode(\"Plugins.Towny.Enabled\").isPresent());\n            assertFalse(readConfig.getNode(\"Plugins.Towny.HideTowns.Enabled\").isPresent());\n        }\n    }", "signature": "void valueAfterAList2()", "full_signature": "@Test void valueAfterAList2()", "class_method_signature": "ConfigReaderTest.valueAfterAList2()", "testcase": true, "constructor": false, "invocations": ["read", "assertTrue", "isPresent", "getNode", "assertTrue", "isPresent", "getNode", "assertFalse", "isPresent", "getNode"]}, "focal_class": {"identifier": "ConfigReader", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private boolean closed;", "modifier": "private", "type": "boolean", "declarator": "closed", "var_name": "closed"}, {"original_string": "private final Scanner scanner;", "modifier": "private final", "type": "Scanner", "declarator": "scanner", "var_name": "scanner"}, {"original_string": "private ConfigNode previousNode;", "modifier": "private", "type": "ConfigNode", "declarator": "previousNode", "var_name": "previousNode"}, {"original_string": "private ConfigNode parent;", "modifier": "private", "type": "ConfigNode", "declarator": "parent", "var_name": "parent"}, {"original_string": "private int indentMode = 4;", "modifier": "private", "type": "int", "declarator": "indentMode = 4", "var_name": "indentMode"}, {"original_string": "private final List<String> unboundComment = new ArrayList<>();", "modifier": "private final", "type": "List<String>", "declarator": "unboundComment = new ArrayList<>()", "var_name": "unboundComment"}, {"original_string": "private int lastDepth = -1;", "modifier": "private", "type": "int", "declarator": "lastDepth = -1", "var_name": "lastDepth"}], "methods": [{"identifier": "ConfigReader", "parameters": "(Path filePath)", "modifiers": "public", "return": "", "signature": " ConfigReader(Path filePath)", "full_signature": "public  ConfigReader(Path filePath)", "class_method_signature": "ConfigReader.ConfigReader(Path filePath)", "testcase": false, "constructor": true}, {"identifier": "ConfigReader", "parameters": "(InputStream in)", "modifiers": "public", "return": "", "signature": " ConfigReader(InputStream in)", "full_signature": "public  ConfigReader(InputStream in)", "class_method_signature": "ConfigReader.ConfigReader(InputStream in)", "testcase": false, "constructor": true}, {"identifier": "ConfigReader", "parameters": "(BufferedReader bufferedReader)", "modifiers": "public", "return": "", "signature": " ConfigReader(BufferedReader bufferedReader)", "full_signature": "public  ConfigReader(BufferedReader bufferedReader)", "class_method_signature": "ConfigReader.ConfigReader(BufferedReader bufferedReader)", "testcase": false, "constructor": true}, {"identifier": "ConfigReader", "parameters": "(Scanner scanner)", "modifiers": "public", "return": "", "signature": " ConfigReader(Scanner scanner)", "full_signature": "public  ConfigReader(Scanner scanner)", "class_method_signature": "ConfigReader.ConfigReader(Scanner scanner)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "()", "modifiers": "public", "return": "Config", "signature": "Config read()", "full_signature": "public Config read()", "class_method_signature": "ConfigReader.read()", "testcase": false, "constructor": false}, {"identifier": "handleLine", "parameters": "(String line, String trimmed)", "modifiers": "private", "return": "void", "signature": "void handleLine(String line, String trimmed)", "full_signature": "private void handleLine(String line, String trimmed)", "class_method_signature": "ConfigReader.handleLine(String line, String trimmed)", "testcase": false, "constructor": false}, {"identifier": "readNewLine", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String readNewLine()", "full_signature": "private String readNewLine()", "class_method_signature": "ConfigReader.readNewLine()", "testcase": false, "constructor": false}, {"identifier": "parseNode", "parameters": "(String line)", "modifiers": "private", "return": "ConfigNode", "signature": "ConfigNode parseNode(String line)", "full_signature": "private ConfigNode parseNode(String line)", "class_method_signature": "ConfigReader.parseNode(String line)", "testcase": false, "constructor": false}, {"identifier": "handleMultiline", "parameters": "(String line)", "modifiers": "private", "return": "ConfigNode", "signature": "ConfigNode handleMultiline(String line)", "full_signature": "private ConfigNode handleMultiline(String line)", "class_method_signature": "ConfigReader.handleMultiline(String line)", "testcase": false, "constructor": false}, {"identifier": "handleCommentLine", "parameters": "(String line)", "modifiers": "private", "return": "void", "signature": "void handleCommentLine(String line)", "full_signature": "private void handleCommentLine(String line)", "class_method_signature": "ConfigReader.handleCommentLine(String line)", "testcase": false, "constructor": false}, {"identifier": "handleUnboundComments", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void handleUnboundComments()", "full_signature": "private void handleUnboundComments()", "class_method_signature": "ConfigReader.handleUnboundComments()", "testcase": false, "constructor": false}, {"identifier": "handleMultilineString", "parameters": "(String line)", "modifiers": "private", "return": "ConfigNode", "signature": "ConfigNode handleMultilineString(String line)", "full_signature": "private ConfigNode handleMultilineString(String line)", "class_method_signature": "ConfigReader.handleMultilineString(String line)", "testcase": false, "constructor": false}, {"identifier": "handleNewNode", "parameters": "(String key, String value)", "modifiers": "private", "return": "ConfigNode", "signature": "ConfigNode handleNewNode(String key, String value)", "full_signature": "private ConfigNode handleNewNode(String key, String value)", "class_method_signature": "ConfigReader.handleNewNode(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "handleListCase", "parameters": "(String line)", "modifiers": "private", "return": "ConfigNode", "signature": "ConfigNode handleListCase(String line)", "full_signature": "private ConfigNode handleListCase(String line)", "class_method_signature": "ConfigReader.handleListCase(String line)", "testcase": false, "constructor": false}, {"identifier": "findParent", "parameters": "(int previousDepth, int currentDepth)", "modifiers": "private", "return": "ConfigNode", "signature": "ConfigNode findParent(int previousDepth, int currentDepth)", "full_signature": "private ConfigNode findParent(int previousDepth, int currentDepth)", "class_method_signature": "ConfigReader.findParent(int previousDepth, int currentDepth)", "testcase": false, "constructor": false}, {"identifier": "findCurrentDepth", "parameters": "(String line)", "modifiers": "private", "return": "int", "signature": "int findCurrentDepth(String line)", "full_signature": "private int findCurrentDepth(String line)", "class_method_signature": "ConfigReader.findCurrentDepth(String line)", "testcase": false, "constructor": false}, {"identifier": "readIndent", "parameters": "(String line)", "modifiers": "private", "return": "int", "signature": "int readIndent(String line)", "full_signature": "private int readIndent(String line)", "class_method_signature": "ConfigReader.readIndent(String line)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ConfigReader.close()", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/settings/config/ConfigReader.java"}, "focal_method": {"identifier": "read", "parameters": "()", "modifiers": "public", "return": "Config", "body": "public Config read() {\n        Verify.isFalse(closed, () -> new IllegalStateException(\"ConfigReader has been closed.\"));\n\n        Config config = new Config();\n\n        previousNode = config;\n        parent = config;\n\n        while (scanner.hasNextLine()) {\n            String line = readNewLine();\n            String trimmed = line.trim();\n            handleLine(line, trimmed);\n        }\n\n        return config;\n    }", "signature": "Config read()", "full_signature": "public Config read()", "class_method_signature": "ConfigReader.read()", "testcase": false, "constructor": false, "invocations": ["isFalse", "hasNextLine", "readNewLine", "trim", "handleLine"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}