{"test_class": {"identifier": "OperationTest", "superclass": "", "interfaces": "", "fields": [], "file": "dmr/src/test/java/org/jboss/hal/dmr/OperationTest.java"}, "test_case": {"identifier": "runAs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void runAs() throws Exception {\n        ResourceAddress address = new ResourceAddress()\n                .add(\"subsystem\", \"datasources\")\n                .add(\"data-source\", \"foo\");\n\n        Operation operation = new Operation.Builder(address, ADD)\n                .param(JNDI_NAME, \"java:/bar\")\n                .header(\"header1\", \"value1\")\n                .build();\n\n        assertOperation(operation.runAs(Collections.singleton(\"Administrator\")), \"Administrator\");\n    }", "signature": "void runAs()", "full_signature": "@Test public void runAs()", "class_method_signature": "OperationTest.runAs()", "testcase": true, "constructor": false, "invocations": ["add", "add", "build", "header", "param", "assertOperation", "runAs", "singleton"]}, "focal_class": {"identifier": "Operation", "superclass": "extends ModelNode", "interfaces": "", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final ResourceAddress address;", "modifier": "private final", "type": "ResourceAddress", "declarator": "address", "var_name": "address"}, {"original_string": "private final ModelNode parameter;", "modifier": "private final", "type": "ModelNode", "declarator": "parameter", "var_name": "parameter"}, {"original_string": "private final ModelNode header;", "modifier": "private final", "type": "ModelNode", "declarator": "header", "var_name": "header"}, {"original_string": "private final Set<String> roles;", "modifier": "private final", "type": "Set<String>", "declarator": "roles", "var_name": "roles"}], "methods": [{"identifier": "Operation", "parameters": "(ModelNode modelNode)", "modifiers": "@JsIgnore public", "return": "", "signature": " Operation(ModelNode modelNode)", "full_signature": "@JsIgnore public  Operation(ModelNode modelNode)", "class_method_signature": "Operation.Operation(ModelNode modelNode)", "testcase": false, "constructor": true}, {"identifier": "Operation", "parameters": "(String name, ResourceAddress address, ModelNode parameter, ModelNode header, Set<String> roles)", "modifiers": "", "return": "", "signature": " Operation(String name, ResourceAddress address, ModelNode parameter, ModelNode header, Set<String> roles)", "full_signature": "  Operation(String name, ResourceAddress address, ModelNode parameter, ModelNode header, Set<String> roles)", "class_method_signature": "Operation.Operation(String name, ResourceAddress address, ModelNode parameter, ModelNode header, Set<String> roles)", "testcase": false, "constructor": true}, {"identifier": "addRolesAsHeaders", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void addRolesAsHeaders()", "full_signature": "private void addRolesAsHeaders()", "class_method_signature": "Operation.addRolesAsHeaders()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@JsProperty public", "return": "String", "signature": "String getName()", "full_signature": "@JsProperty public String getName()", "class_method_signature": "Operation.getName()", "testcase": false, "constructor": false}, {"identifier": "getAddress", "parameters": "()", "modifiers": "@JsProperty public", "return": "ResourceAddress", "signature": "ResourceAddress getAddress()", "full_signature": "@JsProperty public ResourceAddress getAddress()", "class_method_signature": "Operation.getAddress()", "testcase": false, "constructor": false}, {"identifier": "getParameter", "parameters": "()", "modifiers": "@JsProperty public", "return": "ModelNode", "signature": "ModelNode getParameter()", "full_signature": "@JsProperty public ModelNode getParameter()", "class_method_signature": "Operation.getParameter()", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "()", "modifiers": "@JsProperty public", "return": "ModelNode", "signature": "ModelNode getHeader()", "full_signature": "@JsProperty public ModelNode getHeader()", "class_method_signature": "Operation.getHeader()", "testcase": false, "constructor": false}, {"identifier": "hasParameter", "parameters": "()", "modifiers": "@JsIgnore public", "return": "boolean", "signature": "boolean hasParameter()", "full_signature": "@JsIgnore public boolean hasParameter()", "class_method_signature": "Operation.hasParameter()", "testcase": false, "constructor": false}, {"identifier": "getRoles", "parameters": "()", "modifiers": "@JsIgnore public", "return": "Set<String>", "signature": "Set<String> getRoles()", "full_signature": "@JsIgnore public Set<String> getRoles()", "class_method_signature": "Operation.getRoles()", "testcase": false, "constructor": false}, {"identifier": "runAs", "parameters": "(Set<String> runAs)", "modifiers": "@JsIgnore public", "return": "Operation", "signature": "Operation runAs(Set<String> runAs)", "full_signature": "@JsIgnore public Operation runAs(Set<String> runAs)", "class_method_signature": "Operation.runAs(Set<String> runAs)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Operation.toString()", "testcase": false, "constructor": false}, {"identifier": "asCli", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String asCli()", "full_signature": "public String asCli()", "class_method_signature": "Operation.asCli()", "testcase": false, "constructor": false}], "file": "dmr/src/main/java/org/jboss/hal/dmr/Operation.java"}, "focal_method": {"identifier": "runAs", "parameters": "(Set<String> runAs)", "modifiers": "@JsIgnore public", "return": "Operation", "body": "@JsIgnore\n    public Operation runAs(Set<String> runAs) {\n        return new Operation(name, address, parameter, header, newHashSet(runAs));\n    }", "signature": "Operation runAs(Set<String> runAs)", "full_signature": "@JsIgnore public Operation runAs(Set<String> runAs)", "class_method_signature": "Operation.runAs(Set<String> runAs)", "testcase": false, "constructor": false, "invocations": ["newHashSet"]}, "repository": {"repo_id": 38317187, "url": "https://github.com/hal/console", "stars": 34, "created": "6/30/2015 3:26:19 PM +00:00", "updates": "2020-01-26T16:25:43+00:00", "fork": "False", "license": "licensed"}}