{"test_class": {"identifier": "EmbeddedSensorHandleTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IChainStorage chainStorageMock;", "modifier": "private", "type": "IChainStorage", "declarator": "chainStorageMock", "var_name": "chainStorageMock"}, {"original_string": "private final Object modId = new Object();", "modifier": "private final", "type": "Object", "declarator": "modId = new Object()", "var_name": "modId"}, {"original_string": "private final Object chainId = new Object();", "modifier": "private final", "type": "Object", "declarator": "chainId = new Object()", "var_name": "chainId"}], "file": "CoreFeatures/Statistics/EmbeddedSensor/src/test/java/info/smart_tools/smartactors/statistics/sensors/embedded_sensor/EmbeddedSensorHandleTest.java"}, "test_case": {"identifier": "Should_wrapExceptionThrownByRollbackMethod", "parameters": "()", "modifiers": "@Test(expected = SensorShutdownException.class) public", "return": "void", "body": "@Test(expected = SensorShutdownException.class)\n    public void Should_wrapExceptionThrownByRollbackMethod()\n            throws Exception {\n        doThrow(ChainModificationException.class).when(chainStorageMock).rollback(chainId, modId);\n        new EmbeddedSensorHandle(chainStorageMock, chainId, modId).shutdown();\n    }", "signature": "void Should_wrapExceptionThrownByRollbackMethod()", "full_signature": "@Test(expected = SensorShutdownException.class) public void Should_wrapExceptionThrownByRollbackMethod()", "class_method_signature": "EmbeddedSensorHandleTest.Should_wrapExceptionThrownByRollbackMethod()", "testcase": true, "constructor": false, "invocations": ["rollback", "when", "doThrow", "shutdown"]}, "focal_class": {"identifier": "EmbeddedSensorHandle", "superclass": "", "interfaces": "implements ISensorHandle", "fields": [{"original_string": "private final IChainStorage chainStorage;", "modifier": "private final", "type": "IChainStorage", "declarator": "chainStorage", "var_name": "chainStorage"}, {"original_string": "private final Object chainId;", "modifier": "private final", "type": "Object", "declarator": "chainId", "var_name": "chainId"}, {"original_string": "private final Object chainModificationId;", "modifier": "private final", "type": "Object", "declarator": "chainModificationId", "var_name": "chainModificationId"}], "methods": [{"identifier": "EmbeddedSensorHandle", "parameters": "(final IChainStorage chainStorage, final Object chainId, final Object chainModificationId)", "modifiers": "public", "return": "", "signature": " EmbeddedSensorHandle(final IChainStorage chainStorage, final Object chainId, final Object chainModificationId)", "full_signature": "public  EmbeddedSensorHandle(final IChainStorage chainStorage, final Object chainId, final Object chainModificationId)", "class_method_signature": "EmbeddedSensorHandle.EmbeddedSensorHandle(final IChainStorage chainStorage, final Object chainId, final Object chainModificationId)", "testcase": false, "constructor": true}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "EmbeddedSensorHandle.shutdown()", "testcase": false, "constructor": false}], "file": "CoreFeatures/Statistics/EmbeddedSensor/src/main/java/info/smart_tools/smartactors/statistics/sensors/embedded_sensor/EmbeddedSensorHandle.java"}, "focal_method": {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void shutdown() throws SensorShutdownException {\n        try {\n            chainStorage.rollback(chainId, chainModificationId);\n        } catch (ChainModificationException | ChainNotFoundException e) {\n            throw new SensorShutdownException(e);\n        }\n    }", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "EmbeddedSensorHandle.shutdown()", "testcase": false, "constructor": false, "invocations": ["rollback"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}