{"test_class": {"identifier": "CopyYearEndPointsTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/satoolkit/x11/CopyYearEndPointsTest.java"}, "test_case": {"identifier": "testProcess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcess() {\n        int N = 100, FREQ = 12;\n        //int P=5;\n        DataBlock in = new DataBlock(N);\n        in.set(1);\n        in.cumul();\n        for (int P = 0; P < (N - FREQ) / 2; ++P) {\n            DataBlock out = in.deepClone();\n            CopyYearEndPoints cnp = new CopyYearEndPoints(P, FREQ);\n            cnp.process(in, out);\n            DataBlock beg = out.range(0, P + FREQ);\n            DataBlock end = out.range(N - P - FREQ, N);\n            for (int i = 0; i < P; ++i) {\n                assertTrue(beg.extract(i, -1, FREQ).isConstant());\n                assertTrue(end.extract(i, -1, FREQ).isConstant());\n            }\n        }\n    }", "signature": "void testProcess()", "full_signature": "@Test public void testProcess()", "class_method_signature": "CopyYearEndPointsTest.testProcess()", "testcase": true, "constructor": false, "invocations": ["set", "cumul", "deepClone", "process", "range", "range", "assertTrue", "isConstant", "extract", "assertTrue", "isConstant", "extract"]}, "focal_class": {"identifier": "CopyYearEndPoints", "superclass": "", "interfaces": "implements IEndPointsProcessor", "fields": [{"original_string": "private int npoints, frequency;", "modifier": "private", "type": "int", "declarator": "npoints", "var_name": "npoints"}], "methods": [{"identifier": "CopyYearEndPoints", "parameters": "(int npoints, int freq)", "modifiers": "public", "return": "", "signature": " CopyYearEndPoints(int npoints, int freq)", "full_signature": "public  CopyYearEndPoints(int npoints, int freq)", "class_method_signature": "CopyYearEndPoints.CopyYearEndPoints(int npoints, int freq)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(DataBlock in, DataBlock out)", "modifiers": "@Override public", "return": "void", "signature": "void process(DataBlock in, DataBlock out)", "full_signature": "@Override public void process(DataBlock in, DataBlock out)", "class_method_signature": "CopyYearEndPoints.process(DataBlock in, DataBlock out)", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/satoolkit/x11/CopyYearEndPoints.java"}, "focal_method": {"identifier": "process", "parameters": "(DataBlock in, DataBlock out)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(DataBlock in, DataBlock out) {\n\tfor (int i = npoints - 1, j = out.getLength() - npoints; i >= 0; --i, ++j) {\n\t    out.set(i, out.get(i + frequency));\n\t    out.set(j, out.get(j - frequency));\n\t}\n    }", "signature": "void process(DataBlock in, DataBlock out)", "full_signature": "@Override public void process(DataBlock in, DataBlock out)", "class_method_signature": "CopyYearEndPoints.process(DataBlock in, DataBlock out)", "testcase": false, "constructor": false, "invocations": ["getLength", "set", "get", "set", "get"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}