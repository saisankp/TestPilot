{"test_class": {"identifier": "PropertyBasedMessageMarkerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private PropertyBasedMessageMarker underTest;", "modifier": "@InjectMocks\n    private", "type": "PropertyBasedMessageMarker", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private MessageMarkerConfigurationAccess configurationAccess;", "modifier": "@Mock\n    private", "type": "MessageMarkerConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private MessageMarkerRequest messageMarkerRequest;", "modifier": "@Mock\n    private", "type": "MessageMarkerRequest", "declarator": "messageMarkerRequest", "var_name": "messageMarkerRequest"}], "file": "wilma-application/modules/wilma-message-marker/src/test/java/com/epam/wilma/messagemarker/PropertyBasedMessageMarkerTest.java"}, "test_case": {"identifier": "testDontMarkMessageHeaderWhenNotRequested", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDontMarkMessageHeaderWhenNotRequested() {\n        // GIVEN\n        given(configurationAccess.getProperties()).willReturn(messageMarkerRequest);\n        given(messageMarkerRequest.getNeedMessageMarker()).willReturn(false);\n        given(request.getWilmaMessageId()).willReturn(\"blah\");\n        // WHEN\n        underTest.markMessageHeader(request);\n        // THEN\n        verifyZeroInteractions(request);\n    }", "signature": "void testDontMarkMessageHeaderWhenNotRequested()", "full_signature": "@Test public void testDontMarkMessageHeaderWhenNotRequested()", "class_method_signature": "PropertyBasedMessageMarkerTest.testDontMarkMessageHeaderWhenNotRequested()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getProperties", "willReturn", "given", "getNeedMessageMarker", "willReturn", "given", "getWilmaMessageId", "markMessageHeader", "verifyZeroInteractions"]}, "focal_class": {"identifier": "PropertyBasedMessageMarker", "superclass": "", "interfaces": "implements MessageMarker", "fields": [{"original_string": "@Autowired\n    private MessageMarkerConfigurationAccess configurationAccess;", "modifier": "@Autowired\n    private", "type": "MessageMarkerConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}], "methods": [{"identifier": "markMessageHeader", "parameters": "(final WilmaHttpRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void markMessageHeader(final WilmaHttpRequest request)", "full_signature": "@Override public void markMessageHeader(final WilmaHttpRequest request)", "class_method_signature": "PropertyBasedMessageMarker.markMessageHeader(final WilmaHttpRequest request)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-message-marker/src/main/java/com/epam/wilma/messagemarker/PropertyBasedMessageMarker.java"}, "focal_method": {"identifier": "markMessageHeader", "parameters": "(final WilmaHttpRequest request)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void markMessageHeader(final WilmaHttpRequest request) {\n        MessageMarkerRequest messageMarkerRequest = configurationAccess.getProperties();\n        if (messageMarkerRequest.getNeedMessageMarker()) {\n            request.addHeaderUpdate(WilmaHttpEntity.WILMA_LOGGER_ID, request.getWilmaMessageId());\n        }\n    }", "signature": "void markMessageHeader(final WilmaHttpRequest request)", "full_signature": "@Override public void markMessageHeader(final WilmaHttpRequest request)", "class_method_signature": "PropertyBasedMessageMarker.markMessageHeader(final WilmaHttpRequest request)", "testcase": false, "constructor": false, "invocations": ["getProperties", "getNeedMessageMarker", "addHeaderUpdate", "getWilmaMessageId"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}