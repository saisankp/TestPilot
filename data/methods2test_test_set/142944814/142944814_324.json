{"test_class": {"identifier": "AbstractAccountTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/common/src/test/java/hera/api/model/internal/AbstractAccountTest.java"}, "test_case": {"identifier": "testBindState", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testBindState() {\n    final long nonce = 3;\n    final Aer balance = Aer.ONE;\n\n    final AbstractAccount account = spy(AbstractAccount.class);\n    final AccountState state = AccountState.newBuilder()\n        .address(AccountAddress.EMPTY)\n        .nonce(nonce)\n        .balance(balance)\n        .build();\n\n    account.bindState(state);\n    assertEquals(nonce, account.getRecentlyUsedNonce());\n  }", "signature": "void testBindState()", "full_signature": "@Test public void testBindState()", "class_method_signature": "AbstractAccountTest.testBindState()", "testcase": true, "constructor": false, "invocations": ["spy", "build", "balance", "nonce", "address", "newBuilder", "bindState", "assertEquals", "getRecentlyUsedNonce"]}, "focal_class": {"identifier": "AbstractAccount", "superclass": "", "interfaces": "implements Account", "fields": [{"original_string": "protected AtomicLong nonce = new AtomicLong(0);", "modifier": "protected", "type": "AtomicLong", "declarator": "nonce = new AtomicLong(0)", "var_name": "nonce"}], "methods": [{"identifier": "bindState", "parameters": "(final AccountState state)", "modifiers": "@Override public", "return": "void", "signature": "void bindState(final AccountState state)", "full_signature": "@Override public void bindState(final AccountState state)", "class_method_signature": "AbstractAccount.bindState(final AccountState state)", "testcase": false, "constructor": false}, {"identifier": "setNonce", "parameters": "(final long nonce)", "modifiers": "@Override public", "return": "void", "signature": "void setNonce(final long nonce)", "full_signature": "@Override public void setNonce(final long nonce)", "class_method_signature": "AbstractAccount.setNonce(final long nonce)", "testcase": false, "constructor": false}, {"identifier": "getRecentlyUsedNonce", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getRecentlyUsedNonce()", "full_signature": "@Override public long getRecentlyUsedNonce()", "class_method_signature": "AbstractAccount.getRecentlyUsedNonce()", "testcase": false, "constructor": false}, {"identifier": "incrementAndGetNonce", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long incrementAndGetNonce()", "full_signature": "@Override public long incrementAndGetNonce()", "class_method_signature": "AbstractAccount.incrementAndGetNonce()", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/hera/api/model/internal/AbstractAccount.java"}, "focal_method": {"identifier": "bindState", "parameters": "(final AccountState state)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void bindState(final AccountState state) {\n    setNonce(state.getNonce());\n  }", "signature": "void bindState(final AccountState state)", "full_signature": "@Override public void bindState(final AccountState state)", "class_method_signature": "AbstractAccount.bindState(final AccountState state)", "testcase": false, "constructor": false, "invocations": ["setNonce", "getNonce"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}