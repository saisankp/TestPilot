{"test_class": {"identifier": "CommandHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/util/CommandHelperTest.java"}, "test_case": {"identifier": "testGetAllCommandClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAllCommandClass() throws Exception {\n        List<Class<?>> classes = CommandHelper.getAllCommandClass();\n        assertThat(classes,\n                containsInAnyOrder(GreetingCommand.class, Help.class, Ls.class, Offline.class, Online.class, Quit.class,\n                        Ready.class, Version.class, PublishMetadata.class));\n    }", "signature": "void testGetAllCommandClass()", "full_signature": "@Test public void testGetAllCommandClass()", "class_method_signature": "CommandHelperTest.testGetAllCommandClass()", "testcase": true, "constructor": false, "invocations": ["getAllCommandClass", "assertThat", "containsInAnyOrder"]}, "focal_class": {"identifier": "CommandHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "CommandHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " CommandHelper()", "full_signature": "private  CommandHelper()", "class_method_signature": "CommandHelper.CommandHelper()", "testcase": false, "constructor": true}, {"identifier": "hasCommand", "parameters": "(String commandName)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasCommand(String commandName)", "full_signature": "public static boolean hasCommand(String commandName)", "class_method_signature": "CommandHelper.hasCommand(String commandName)", "testcase": false, "constructor": false}, {"identifier": "getAllCommandClass", "parameters": "()", "modifiers": "public static", "return": "List<Class<?>>", "signature": "List<Class<?>> getAllCommandClass()", "full_signature": "public static List<Class<?>> getAllCommandClass()", "class_method_signature": "CommandHelper.getAllCommandClass()", "testcase": false, "constructor": false}, {"identifier": "getCommandClass", "parameters": "(String commandName)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getCommandClass(String commandName)", "full_signature": "public static Class<?> getCommandClass(String commandName)", "class_method_signature": "CommandHelper.getCommandClass(String commandName)", "testcase": false, "constructor": false}], "file": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/command/util/CommandHelper.java"}, "focal_method": {"identifier": "getAllCommandClass", "parameters": "()", "modifiers": "public static", "return": "List<Class<?>>", "body": "public static List<Class<?>> getAllCommandClass() {\n        final Set<String> commandList = ExtensionLoader.getExtensionLoader(BaseCommand.class).getSupportedExtensions();\n        final List<Class<?>> classes = new ArrayList<Class<?>>();\n\n        for (String commandName : commandList) {\n            BaseCommand command = ExtensionLoader.getExtensionLoader(BaseCommand.class).getExtension(commandName);\n            classes.add(command.getClass());\n        }\n\n        return classes;\n    }", "signature": "List<Class<?>> getAllCommandClass()", "full_signature": "public static List<Class<?>> getAllCommandClass()", "class_method_signature": "CommandHelper.getAllCommandClass()", "testcase": false, "constructor": false, "invocations": ["getSupportedExtensions", "getExtensionLoader", "getExtension", "getExtensionLoader", "add", "getClass"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}