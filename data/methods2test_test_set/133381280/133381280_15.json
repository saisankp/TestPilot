{"test_class": {"identifier": "MonitorComponentConditionalTest", "superclass": "", "interfaces": "", "fields": [], "file": "gateway/core/src/test/java/com/alipay/sofa/lookout/gateway/core/common/MonitorComponentConditionalTest.java"}, "test_case": {"identifier": "testgetConfigurationPhase", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testgetConfigurationPhase() {\n        MonitorComponentConditional m = new MonitorComponentConditional();\n        Assert.assertEquals(ConfigurationCondition.ConfigurationPhase.PARSE_CONFIGURATION,\n            m.getConfigurationPhase());\n    }", "signature": "void testgetConfigurationPhase()", "full_signature": "@Test public void testgetConfigurationPhase()", "class_method_signature": "MonitorComponentConditionalTest.testgetConfigurationPhase()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getConfigurationPhase"]}, "focal_class": {"identifier": "MonitorComponentConditional", "superclass": "", "interfaces": "implements ConfigurationCondition", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MonitorComponentConditional.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MonitorComponentConditional.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "getConfigurationPhase", "parameters": "()", "modifiers": "@Override public", "return": "ConfigurationPhase", "signature": "ConfigurationPhase getConfigurationPhase()", "full_signature": "@Override public ConfigurationPhase getConfigurationPhase()", "class_method_signature": "MonitorComponentConditional.getConfigurationPhase()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(ConditionContext context, AnnotatedTypeMetadata metadata)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata)", "full_signature": "@Override public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata)", "class_method_signature": "MonitorComponentConditional.matches(ConditionContext context, AnnotatedTypeMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "isActiveByZoneInfo", "parameters": "(Environment env, String componentName)", "modifiers": "private", "return": "boolean", "signature": "boolean isActiveByZoneInfo(Environment env, String componentName)", "full_signature": "private boolean isActiveByZoneInfo(Environment env, String componentName)", "class_method_signature": "MonitorComponentConditional.isActiveByZoneInfo(Environment env, String componentName)", "testcase": false, "constructor": false}, {"identifier": "getComponents", "parameters": "(ConditionContext context)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getComponents(ConditionContext context)", "full_signature": "private List<String> getComponents(ConditionContext context)", "class_method_signature": "MonitorComponentConditional.getComponents(ConditionContext context)", "testcase": false, "constructor": false}], "file": "gateway/core/src/main/java/com/alipay/sofa/lookout/gateway/core/common/MonitorComponentConditional.java"}, "focal_method": {"identifier": "getConfigurationPhase", "parameters": "()", "modifiers": "@Override public", "return": "ConfigurationPhase", "body": "@Override\n    public ConfigurationPhase getConfigurationPhase() {\n        return ConfigurationPhase.PARSE_CONFIGURATION;\n    }", "signature": "ConfigurationPhase getConfigurationPhase()", "full_signature": "@Override public ConfigurationPhase getConfigurationPhase()", "class_method_signature": "MonitorComponentConditional.getConfigurationPhase()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}