{"test_class": {"identifier": "PMMLMiningModelEvaluatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static List<MULTIPLE_MODEL_METHOD> RAW_OBJECT_METHODS = Arrays.asList(MAJORITY_VOTE,\n                                                                                        SELECT_ALL,\n                                                                                        SELECT_FIRST);", "modifier": "private final static", "type": "List<MULTIPLE_MODEL_METHOD>", "declarator": "RAW_OBJECT_METHODS = Arrays.asList(MAJORITY_VOTE,\n                                                                                        SELECT_ALL,\n                                                                                        SELECT_FIRST)", "var_name": "RAW_OBJECT_METHODS"}, {"original_string": "private final static List<MULTIPLE_MODEL_METHOD> VALUE_WEIGHT_METHODS = Arrays.asList(MAX,\n                                                                                          SUM,\n                                                                                          MEDIAN,\n                                                                                          AVERAGE,\n                                                                                          WEIGHTED_SUM,\n                                                                                          WEIGHTED_MEDIAN,\n                                                                                          WEIGHTED_AVERAGE);", "modifier": "private final static", "type": "List<MULTIPLE_MODEL_METHOD>", "declarator": "VALUE_WEIGHT_METHODS = Arrays.asList(MAX,\n                                                                                          SUM,\n                                                                                          MEDIAN,\n                                                                                          AVERAGE,\n                                                                                          WEIGHTED_SUM,\n                                                                                          WEIGHTED_MEDIAN,\n                                                                                          WEIGHTED_AVERAGE)", "var_name": "VALUE_WEIGHT_METHODS"}, {"original_string": "private final static List<MULTIPLE_MODEL_METHOD> NOT_IMPLEMENTED_METHODS = Arrays.asList(MODEL_CHAIN,\n                                                                                             WEIGHTED_MAJORITY_VOTE);", "modifier": "private final static", "type": "List<MULTIPLE_MODEL_METHOD>", "declarator": "NOT_IMPLEMENTED_METHODS = Arrays.asList(MODEL_CHAIN,\n                                                                                             WEIGHTED_MAJORITY_VOTE)", "var_name": "NOT_IMPLEMENTED_METHODS"}, {"original_string": "private PMMLMiningModelEvaluator evaluator;", "modifier": "private", "type": "PMMLMiningModelEvaluator", "declarator": "evaluator", "var_name": "evaluator"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-evaluator/src/test/java/org/kie/pmml/models/mining/evaluator/PMMLMiningModelEvaluatorTest.java"}, "test_case": {"identifier": "getEventuallyWeightedResultRawObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getEventuallyWeightedResultRawObject() {\n        final Object rawObject = \"OBJ\";\n        RAW_OBJECT_METHODS.forEach(multipleModelMethod -> {\n            Object retrieved = evaluator.getEventuallyWeightedResult(rawObject, multipleModelMethod, 34.2);\n            assertNotNull(retrieved);\n            assertEquals(rawObject, retrieved);\n        });\n    }", "signature": "void getEventuallyWeightedResultRawObject()", "full_signature": "@Test public void getEventuallyWeightedResultRawObject()", "class_method_signature": "PMMLMiningModelEvaluatorTest.getEventuallyWeightedResultRawObject()", "testcase": true, "constructor": false, "invocations": ["forEach", "getEventuallyWeightedResult", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "PMMLMiningModelEvaluator", "superclass": "", "interfaces": "implements PMMLModelEvaluator<KiePMMLMiningModel>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(PMMLMiningModelEvaluator.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PMMLMiningModelEvaluator.class.getName())", "var_name": "logger"}, {"original_string": "private static final String EXPECTED_A_KIE_PMMLMINING_MODEL_RECEIVED = \"Expected a KiePMMLMiningModel, received %s\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_A_KIE_PMMLMINING_MODEL_RECEIVED = \"Expected a KiePMMLMiningModel, received %s\"", "var_name": "EXPECTED_A_KIE_PMMLMINING_MODEL_RECEIVED"}, {"original_string": "private static final String TARGET_FIELD_REQUIRED_RETRIEVED = \"TargetField required, retrieved %s\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_FIELD_REQUIRED_RETRIEVED = \"TargetField required, retrieved %s\"", "var_name": "TARGET_FIELD_REQUIRED_RETRIEVED"}, {"original_string": "private static final Map<String, InternalKnowledgeBase> MAPPED_KIEBASES = new HashMap<>();", "modifier": "private static final", "type": "Map<String, InternalKnowledgeBase>", "declarator": "MAPPED_KIEBASES = new HashMap<>()", "var_name": "MAPPED_KIEBASES"}], "methods": [{"identifier": "getPMMLModelType", "parameters": "()", "modifiers": "@Override public", "return": "PMML_MODEL", "signature": "PMML_MODEL getPMMLModelType()", "full_signature": "@Override public PMML_MODEL getPMMLModelType()", "class_method_signature": "PMMLMiningModelEvaluator.getPMMLModelType()", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(final KieBase knowledgeBase,\n                                final KiePMMLMiningModel model,\n                                final PMMLContext pmmlContext)", "modifiers": "@Override public", "return": "PMML4Result", "signature": "PMML4Result evaluate(final KieBase knowledgeBase,\n                                final KiePMMLMiningModel model,\n                                final PMMLContext pmmlContext)", "full_signature": "@Override public PMML4Result evaluate(final KieBase knowledgeBase,\n                                final KiePMMLMiningModel model,\n                                final PMMLContext pmmlContext)", "class_method_signature": "PMMLMiningModelEvaluator.evaluate(final KieBase knowledgeBase,\n                                final KiePMMLMiningModel model,\n                                final PMMLContext pmmlContext)", "testcase": false, "constructor": false}, {"identifier": "getPMML4Result", "parameters": "(final KiePMMLMiningModel toEvaluate,\n                    final LinkedHashMap<String, KiePMMLNameValue> inputData)", "modifiers": "", "return": "PMML4Result", "signature": "PMML4Result getPMML4Result(final KiePMMLMiningModel toEvaluate,\n                    final LinkedHashMap<String, KiePMMLNameValue> inputData)", "full_signature": " PMML4Result getPMML4Result(final KiePMMLMiningModel toEvaluate,\n                    final LinkedHashMap<String, KiePMMLNameValue> inputData)", "class_method_signature": "PMMLMiningModelEvaluator.getPMML4Result(final KiePMMLMiningModel toEvaluate,\n                    final LinkedHashMap<String, KiePMMLNameValue> inputData)", "testcase": false, "constructor": false}, {"identifier": "getPMMLRuntime", "parameters": "(final String kModulePackageName, final KieBase knowledgeBase,\n                                       final String containerModelName)", "modifiers": "", "return": "PMMLRuntime", "signature": "PMMLRuntime getPMMLRuntime(final String kModulePackageName, final KieBase knowledgeBase,\n                                       final String containerModelName)", "full_signature": " PMMLRuntime getPMMLRuntime(final String kModulePackageName, final KieBase knowledgeBase,\n                                       final String containerModelName)", "class_method_signature": "PMMLMiningModelEvaluator.getPMMLRuntime(final String kModulePackageName, final KieBase knowledgeBase,\n                                       final String containerModelName)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLNameValue", "parameters": "(PMML4Result result, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                                 double weight)", "modifiers": "", "return": "KiePMMLNameValue", "signature": "KiePMMLNameValue getKiePMMLNameValue(PMML4Result result, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                                 double weight)", "full_signature": " KiePMMLNameValue getKiePMMLNameValue(PMML4Result result, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                                 double weight)", "class_method_signature": "PMMLMiningModelEvaluator.getKiePMMLNameValue(PMML4Result result, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                                 double weight)", "testcase": false, "constructor": false}, {"identifier": "getEventuallyWeightedResult", "parameters": "(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight)", "modifiers": "", "return": "Object", "signature": "Object getEventuallyWeightedResult(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight)", "full_signature": " Object getEventuallyWeightedResult(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight)", "class_method_signature": "PMMLMiningModelEvaluator.getEventuallyWeightedResult(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final KiePMMLModel toValidate)", "modifiers": "", "return": "void", "signature": "void validate(final KiePMMLModel toValidate)", "full_signature": " void validate(final KiePMMLModel toValidate)", "class_method_signature": "PMMLMiningModelEvaluator.validate(final KiePMMLModel toValidate)", "testcase": false, "constructor": false}, {"identifier": "validateMining", "parameters": "(final KiePMMLMiningModel toValidate)", "modifiers": "", "return": "void", "signature": "void validateMining(final KiePMMLMiningModel toValidate)", "full_signature": " void validateMining(final KiePMMLMiningModel toValidate)", "class_method_signature": "PMMLMiningModelEvaluator.validateMining(final KiePMMLMiningModel toValidate)", "testcase": false, "constructor": false}, {"identifier": "evaluateMiningModel", "parameters": "(final KiePMMLMiningModel toEvaluate,\n                                            final PMMLContext pmmlContext,\n                                            final KieBase knowledgeBase)", "modifiers": "private", "return": "PMML4Result", "signature": "PMML4Result evaluateMiningModel(final KiePMMLMiningModel toEvaluate,\n                                            final PMMLContext pmmlContext,\n                                            final KieBase knowledgeBase)", "full_signature": "private PMML4Result evaluateMiningModel(final KiePMMLMiningModel toEvaluate,\n                                            final PMMLContext pmmlContext,\n                                            final KieBase knowledgeBase)", "class_method_signature": "PMMLMiningModelEvaluator.evaluateMiningModel(final KiePMMLMiningModel toEvaluate,\n                                            final PMMLContext pmmlContext,\n                                            final KieBase knowledgeBase)", "testcase": false, "constructor": false}, {"identifier": "evaluateSegment", "parameters": "(final KiePMMLSegment toEvaluate, final PMMLContext pmmlContext,\n                                                  final KieBase knowledgeBase, final String containerModelName)", "modifiers": "private", "return": "Optional<PMML4Result>", "signature": "Optional<PMML4Result> evaluateSegment(final KiePMMLSegment toEvaluate, final PMMLContext pmmlContext,\n                                                  final KieBase knowledgeBase, final String containerModelName)", "full_signature": "private Optional<PMML4Result> evaluateSegment(final KiePMMLSegment toEvaluate, final PMMLContext pmmlContext,\n                                                  final KieBase knowledgeBase, final String containerModelName)", "class_method_signature": "PMMLMiningModelEvaluator.evaluateSegment(final KiePMMLSegment toEvaluate, final PMMLContext pmmlContext,\n                                                  final KieBase knowledgeBase, final String containerModelName)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-evaluator/src/main/java/org/kie/pmml/models/mining/evaluator/PMMLMiningModelEvaluator.java"}, "focal_method": {"identifier": "getEventuallyWeightedResult", "parameters": "(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight)", "modifiers": "", "return": "Object", "body": "Object getEventuallyWeightedResult(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight) {\n        switch (multipleModelMethod) {\n            case MAJORITY_VOTE:\n            case SELECT_ALL:\n            case SELECT_FIRST:\n                return rawObject;\n            case MAX:\n            case SUM:\n            case MEDIAN:\n            case AVERAGE:\n            case WEIGHTED_SUM:\n            case WEIGHTED_MEDIAN:\n            case WEIGHTED_AVERAGE:\n                if (!(rawObject instanceof Number)) {\n                    throw new KiePMMLException(\"Expected a number, retrieved \" + rawObject.getClass().getName());\n                }\n                return new KiePMMLValueWeight(((Number) rawObject).doubleValue(), weight);\n            case MODEL_CHAIN:\n            case WEIGHTED_MAJORITY_VOTE:\n                throw new KiePMMLException(multipleModelMethod + \" not implemented, yet\");\n            default:\n                throw new KiePMMLException(\"Unrecognized MULTIPLE_MODEL_METHOD \" + multipleModelMethod);\n        }\n    }", "signature": "Object getEventuallyWeightedResult(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight)", "full_signature": " Object getEventuallyWeightedResult(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight)", "class_method_signature": "PMMLMiningModelEvaluator.getEventuallyWeightedResult(Object rawObject, MULTIPLE_MODEL_METHOD multipleModelMethod,\n                                               double weight)", "testcase": false, "constructor": false, "invocations": ["getName", "getClass", "doubleValue"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}