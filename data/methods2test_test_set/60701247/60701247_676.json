{"test_class": {"identifier": "MemoryObjectTreeNodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "profilers/testSrc/com/android/tools/profilers/memory/MemoryObjectTreeNodeTest.java"}, "test_case": {"identifier": "testGetAdapter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetAdapter() {\n    TestMemoryObject adapter = new TestMemoryObject();\n    MemoryObjectTreeNode<TestMemoryObject> node = new MemoryObjectTreeNode<>(adapter);\n    assertEquals(adapter, node.getAdapter());\n  }", "signature": "void testGetAdapter()", "full_signature": "@Test public void testGetAdapter()", "class_method_signature": "MemoryObjectTreeNodeTest.testGetAdapter()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getAdapter"]}, "focal_class": {"identifier": "MemoryObjectTreeNode", "superclass": "", "interfaces": "implements MutableTreeNode", "fields": [{"original_string": "@Nullable protected MemoryObjectTreeNode<T> myParent;", "modifier": "@Nullable protected", "type": "MemoryObjectTreeNode<T>", "declarator": "myParent", "var_name": "myParent"}, {"original_string": "@NotNull protected List<MemoryObjectTreeNode<T>> myChildren = new ArrayList<>();", "modifier": "@NotNull protected", "type": "List<MemoryObjectTreeNode<T>>", "declarator": "myChildren = new ArrayList<>()", "var_name": "myChildren"}, {"original_string": "@Nullable protected Comparator<MemoryObjectTreeNode<T>> myComparator = null;", "modifier": "@Nullable protected", "type": "Comparator<MemoryObjectTreeNode<T>>", "declarator": "myComparator = null", "var_name": "myComparator"}, {"original_string": "@NotNull private final T myAdapter;", "modifier": "@NotNull private final", "type": "T", "declarator": "myAdapter", "var_name": "myAdapter"}, {"original_string": "private boolean myChildrenChanged;", "modifier": "private", "type": "boolean", "declarator": "myChildrenChanged", "var_name": "myChildrenChanged"}, {"original_string": "private boolean myComparatorChanged;", "modifier": "private", "type": "boolean", "declarator": "myComparatorChanged", "var_name": "myComparatorChanged"}], "methods": [{"identifier": "MemoryObjectTreeNode", "parameters": "(@NotNull T adapter)", "modifiers": "public", "return": "", "signature": " MemoryObjectTreeNode(@NotNull T adapter)", "full_signature": "public  MemoryObjectTreeNode(@NotNull T adapter)", "class_method_signature": "MemoryObjectTreeNode.MemoryObjectTreeNode(@NotNull T adapter)", "testcase": false, "constructor": true}, {"identifier": "getChildAt", "parameters": "(int i)", "modifiers": "@Override public", "return": "TreeNode", "signature": "TreeNode getChildAt(int i)", "full_signature": "@Override public TreeNode getChildAt(int i)", "class_method_signature": "MemoryObjectTreeNode.getChildAt(int i)", "testcase": false, "constructor": false}, {"identifier": "getChildCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getChildCount()", "full_signature": "@Override public int getChildCount()", "class_method_signature": "MemoryObjectTreeNode.getChildCount()", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "@Override public", "return": "TreeNode", "signature": "TreeNode getParent()", "full_signature": "@Override public TreeNode getParent()", "class_method_signature": "MemoryObjectTreeNode.getParent()", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "(TreeNode treeNode)", "modifiers": "@Override public", "return": "int", "signature": "int getIndex(TreeNode treeNode)", "full_signature": "@Override public int getIndex(TreeNode treeNode)", "class_method_signature": "MemoryObjectTreeNode.getIndex(TreeNode treeNode)", "testcase": false, "constructor": false}, {"identifier": "isLeaf", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLeaf()", "full_signature": "@Override public boolean isLeaf()", "class_method_signature": "MemoryObjectTreeNode.isLeaf()", "testcase": false, "constructor": false}, {"identifier": "children", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration", "signature": "Enumeration children()", "full_signature": "@Override public Enumeration children()", "class_method_signature": "MemoryObjectTreeNode.children()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@NotNull public", "return": "ImmutableList<MemoryObjectTreeNode<T>>", "signature": "ImmutableList<MemoryObjectTreeNode<T>> getChildren()", "full_signature": "@NotNull public ImmutableList<MemoryObjectTreeNode<T>> getChildren()", "class_method_signature": "MemoryObjectTreeNode.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getAllowsChildren", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getAllowsChildren()", "full_signature": "@Override public boolean getAllowsChildren()", "class_method_signature": "MemoryObjectTreeNode.getAllowsChildren()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(@NotNull MemoryObjectTreeNode child)", "modifiers": "public", "return": "void", "signature": "void add(@NotNull MemoryObjectTreeNode child)", "full_signature": "public void add(@NotNull MemoryObjectTreeNode child)", "class_method_signature": "MemoryObjectTreeNode.add(@NotNull MemoryObjectTreeNode child)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(MutableTreeNode newChild, int childIndex)", "modifiers": "@Override public", "return": "void", "signature": "void insert(MutableTreeNode newChild, int childIndex)", "full_signature": "@Override public void insert(MutableTreeNode newChild, int childIndex)", "class_method_signature": "MemoryObjectTreeNode.insert(MutableTreeNode newChild, int childIndex)", "testcase": false, "constructor": false}, {"identifier": "setParent", "parameters": "(@Nullable MutableTreeNode newParent)", "modifiers": "@Override public", "return": "void", "signature": "void setParent(@Nullable MutableTreeNode newParent)", "full_signature": "@Override public void setParent(@Nullable MutableTreeNode newParent)", "class_method_signature": "MemoryObjectTreeNode.setParent(@Nullable MutableTreeNode newParent)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int childIndex)", "modifiers": "@Override public", "return": "void", "signature": "void remove(int childIndex)", "full_signature": "@Override public void remove(int childIndex)", "class_method_signature": "MemoryObjectTreeNode.remove(int childIndex)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(MutableTreeNode node)", "modifiers": "@Override public", "return": "void", "signature": "void remove(MutableTreeNode node)", "full_signature": "@Override public void remove(MutableTreeNode node)", "class_method_signature": "MemoryObjectTreeNode.remove(MutableTreeNode node)", "testcase": false, "constructor": false}, {"identifier": "removeFromParent", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeFromParent()", "full_signature": "@Override public void removeFromParent()", "class_method_signature": "MemoryObjectTreeNode.removeFromParent()", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAll()", "full_signature": "public void removeAll()", "class_method_signature": "MemoryObjectTreeNode.removeAll()", "testcase": false, "constructor": false}, {"identifier": "setUserObject", "parameters": "(Object object)", "modifiers": "@Override public", "return": "void", "signature": "void setUserObject(Object object)", "full_signature": "@Override public void setUserObject(Object object)", "class_method_signature": "MemoryObjectTreeNode.setUserObject(Object object)", "testcase": false, "constructor": false}, {"identifier": "getAdapter", "parameters": "()", "modifiers": "@NotNull public", "return": "T", "signature": "T getAdapter()", "full_signature": "@NotNull public T getAdapter()", "class_method_signature": "MemoryObjectTreeNode.getAdapter()", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "(@NotNull Comparator<MemoryObjectTreeNode<T>> comparator)", "modifiers": "public", "return": "void", "signature": "void sort(@NotNull Comparator<MemoryObjectTreeNode<T>> comparator)", "full_signature": "public void sort(@NotNull Comparator<MemoryObjectTreeNode<T>> comparator)", "class_method_signature": "MemoryObjectTreeNode.sort(@NotNull Comparator<MemoryObjectTreeNode<T>> comparator)", "testcase": false, "constructor": false}, {"identifier": "getComparator", "parameters": "()", "modifiers": "@Nullable public", "return": "Comparator<MemoryObjectTreeNode<T>>", "signature": "Comparator<MemoryObjectTreeNode<T>> getComparator()", "full_signature": "@Nullable public Comparator<MemoryObjectTreeNode<T>> getComparator()", "class_method_signature": "MemoryObjectTreeNode.getComparator()", "testcase": false, "constructor": false}, {"identifier": "getPathToRoot", "parameters": "()", "modifiers": "@NotNull public", "return": "List<MemoryObjectTreeNode<T>>", "signature": "List<MemoryObjectTreeNode<T>> getPathToRoot()", "full_signature": "@NotNull public List<MemoryObjectTreeNode<T>> getPathToRoot()", "class_method_signature": "MemoryObjectTreeNode.getPathToRoot()", "testcase": false, "constructor": false}, {"identifier": "ensureOrder", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void ensureOrder()", "full_signature": "protected void ensureOrder()", "class_method_signature": "MemoryObjectTreeNode.ensureOrder()", "testcase": false, "constructor": false}, {"identifier": "orderNeedsUpdating", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "boolean", "signature": "boolean orderNeedsUpdating()", "full_signature": "@VisibleForTesting boolean orderNeedsUpdating()", "class_method_signature": "MemoryObjectTreeNode.orderNeedsUpdating()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void select()", "full_signature": "public void select()", "class_method_signature": "MemoryObjectTreeNode.select()", "testcase": false, "constructor": false}], "file": "profilers/src/com/android/tools/profilers/memory/MemoryObjectTreeNode.java"}, "focal_method": {"identifier": "getAdapter", "parameters": "()", "modifiers": "@NotNull public", "return": "T", "body": "@NotNull\n  public T getAdapter() {\n    return myAdapter;\n  }", "signature": "T getAdapter()", "full_signature": "@NotNull public T getAdapter()", "class_method_signature": "MemoryObjectTreeNode.getAdapter()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}