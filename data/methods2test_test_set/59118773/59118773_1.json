{"test_class": {"identifier": "ReleaseExportFileTest", "superclass": "", "interfaces": "", "fields": [], "file": "persistence-mongodb/src/test/java/org/devgateway/ocds/persistence/mongo/excel/ReleaseExportFileTest.java"}, "test_case": {"identifier": "createWorkbook", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createWorkbook() throws Exception {\n        final ClassLoader classLoader = getClass().getClassLoader();\n        final File file = new File(classLoader.getResource(\"json/release-excel-export.json\").getFile());\n        final JsonToObject releasePackageJsonToObject = new ReleasePackageJsonToObject(file);\n\n        final ReleasePackage releasePackage = (ReleasePackage) releasePackageJsonToObject.toObject();\n\n        final ExcelFile releaseExcelFile = new ReleaseExportFile(new ArrayList<>(releasePackage.getReleases()));\n        final Workbook workbook = releaseExcelFile.createWorkbook();\n//         try (FileOutputStream outputStream = new FileOutputStream(\"/home/mihai/ocds-export.xlsx\")) {\n//             workbook.write(outputStream);\n//         }\n\n        Assert.assertEquals(\"Number of sheets\", 6, workbook.getNumberOfSheets());\n\n        Assert.assertNotNull(\"release sheet\", workbook.getSheet(\"release\"));\n        Assert.assertNotNull(\"tender sheet\", workbook.getSheet(\"tender\"));\n        Assert.assertNotNull(\"award sheet\", workbook.getSheet(\"award\"));\n        Assert.assertNotNull(\"item sheet\", workbook.getSheet(\"item\"));\n        Assert.assertNotNull(\"contract sheet\", workbook.getSheet(\"contract\"));\n\n        Assert.assertEquals(\"release id\", \"ocds-213czf-000-00001-01-planning\",\n                workbook.getSheet(\"release\").getRow(3).getCell(0).toString());\n        Assert.assertEquals(\"release id\", \"ocds-213czf-000-00001-06-implementation\",\n                workbook.getSheet(\"release\").getRow(5).getCell(0).toString());\n\n        Assert.assertEquals(\"tender parent\", \"release - ocds-213czf-000-00001\",\n                workbook.getSheet(\"tender\").getRow(1).getCell(0).toString());\n        Assert.assertEquals(\"tender id\", \"ocds-213czf-000-00001-01-planning\",\n                workbook.getSheet(\"tender\").getRow(1).getCell(1).toString());\n\n\n        Assert.assertEquals(\"award number of rows\", 4, workbook.getSheet(\"award\").getLastRowNum());\n\n        Assert.assertEquals(\"item number of rows\", 9, workbook.getSheet(\"item\").getLastRowNum());\n\n        Assert.assertEquals(\"contract flatten organization id\", \"E09000003 | E09000003\",\n                workbook.getSheet(\"contract\").getRow(2).getCell(17).toString());\n    }", "signature": "void createWorkbook()", "full_signature": "@Test public void createWorkbook()", "class_method_signature": "ReleaseExportFileTest.createWorkbook()", "testcase": true, "constructor": false, "invocations": ["getClassLoader", "getClass", "getFile", "getResource", "toObject", "getReleases", "createWorkbook", "assertEquals", "getNumberOfSheets", "assertNotNull", "getSheet", "assertNotNull", "getSheet", "assertNotNull", "getSheet", "assertNotNull", "getSheet", "assertNotNull", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet", "assertEquals", "getLastRowNum", "getSheet", "assertEquals", "getLastRowNum", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet"]}, "focal_class": {"identifier": "ReleaseExportFile", "superclass": "", "interfaces": "implements ExcelFile", "fields": [{"original_string": "private final List<Release> releases;", "modifier": "private final", "type": "List<Release>", "declarator": "releases", "var_name": "releases"}, {"original_string": "private final Workbook workbook;", "modifier": "private final", "type": "Workbook", "declarator": "workbook", "var_name": "workbook"}], "methods": [{"identifier": "ReleaseExportFile", "parameters": "(final List<Release> releases)", "modifiers": "public", "return": "", "signature": " ReleaseExportFile(final List<Release> releases)", "full_signature": "public  ReleaseExportFile(final List<Release> releases)", "class_method_signature": "ReleaseExportFile.ReleaseExportFile(final List<Release> releases)", "testcase": false, "constructor": true}, {"identifier": "createWorkbook", "parameters": "()", "modifiers": "@Override public", "return": "Workbook", "signature": "Workbook createWorkbook()", "full_signature": "@Override public Workbook createWorkbook()", "class_method_signature": "ReleaseExportFile.createWorkbook()", "testcase": false, "constructor": false}], "file": "persistence-mongodb/src/main/java/org/devgateway/ocds/persistence/mongo/excel/ReleaseExportFile.java"}, "focal_method": {"identifier": "createWorkbook", "parameters": "()", "modifiers": "@Override public", "return": "Workbook", "body": "@Override\n    public Workbook createWorkbook() {\n        ExcelSheet releaseSheet = new OCDSObjectExcelSheet(this.workbook, Release.class);\n\n        // don't do anything if the list of releases is empty, just display the error message\n        if (releases != null && !releases.isEmpty()) {\n            releaseSheet.writeSheet(new ArrayList<>(releases));\n        }\n\n        return workbook;\n    }", "signature": "Workbook createWorkbook()", "full_signature": "@Override public Workbook createWorkbook()", "class_method_signature": "ReleaseExportFile.createWorkbook()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "writeSheet"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}