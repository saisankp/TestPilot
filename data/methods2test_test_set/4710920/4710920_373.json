{"test_class": {"identifier": "SystemConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static SystemConfiguration sysConfig;", "modifier": "private static", "type": "SystemConfiguration", "declarator": "sysConfig", "var_name": "sysConfig"}, {"original_string": "private static final String MOCK_KEY = \"mockKey\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_KEY = \"mockKey\"", "var_name": "MOCK_KEY"}, {"original_string": "private static final String MOCK_STRING_VALUE = \"mockValue\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_STRING_VALUE = \"mockValue\"", "var_name": "MOCK_STRING_VALUE"}, {"original_string": "private static final Boolean MOCK_BOOL_VALUE = Boolean.FALSE;", "modifier": "private static final", "type": "Boolean", "declarator": "MOCK_BOOL_VALUE = Boolean.FALSE", "var_name": "MOCK_BOOL_VALUE"}, {"original_string": "private static final Integer MOCK_INT_VALUE = Integer.MAX_VALUE;", "modifier": "private static final", "type": "Integer", "declarator": "MOCK_INT_VALUE = Integer.MAX_VALUE", "var_name": "MOCK_INT_VALUE"}, {"original_string": "private static final Long MOCK_LONG_VALUE = Long.MIN_VALUE;", "modifier": "private static final", "type": "Long", "declarator": "MOCK_LONG_VALUE = Long.MIN_VALUE", "var_name": "MOCK_LONG_VALUE"}, {"original_string": "private static final Short MOCK_SHORT_VALUE = Short.MIN_VALUE;", "modifier": "private static final", "type": "Short", "declarator": "MOCK_SHORT_VALUE = Short.MIN_VALUE", "var_name": "MOCK_SHORT_VALUE"}, {"original_string": "private static final Float MOCK_FLOAT_VALUE = Float.MIN_VALUE;", "modifier": "private static final", "type": "Float", "declarator": "MOCK_FLOAT_VALUE = Float.MIN_VALUE", "var_name": "MOCK_FLOAT_VALUE"}, {"original_string": "private static final Double MOCK_DOUBLE_VALUE = Double.MIN_VALUE;", "modifier": "private static final", "type": "Double", "declarator": "MOCK_DOUBLE_VALUE = Double.MIN_VALUE", "var_name": "MOCK_DOUBLE_VALUE"}, {"original_string": "private static final Byte MOCK_BYTE_VALUE = Byte.MIN_VALUE;", "modifier": "private static final", "type": "Byte", "declarator": "MOCK_BYTE_VALUE = Byte.MIN_VALUE", "var_name": "MOCK_BYTE_VALUE"}, {"original_string": "private static final String NOT_EXIST_KEY = \"NOTEXIST\";", "modifier": "private static final", "type": "String", "declarator": "NOT_EXIST_KEY = \"NOTEXIST\"", "var_name": "NOT_EXIST_KEY"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/config/SystemConfigurationTest.java"}, "test_case": {"identifier": "testGetSysProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSysProperty() {\n        Assertions.assertNull(sysConfig.getInternalProperty(MOCK_KEY));\n        Assertions.assertFalse(sysConfig.containsKey(MOCK_KEY));\n        Assertions.assertNull(sysConfig.getString(MOCK_KEY));\n        Assertions.assertNull(sysConfig.getProperty(MOCK_KEY));\n        System.setProperty(MOCK_KEY, MOCK_STRING_VALUE);\n        Assertions.assertTrue(sysConfig.containsKey(MOCK_KEY));\n        Assertions.assertEquals(MOCK_STRING_VALUE, sysConfig.getInternalProperty(MOCK_KEY));\n        Assertions.assertEquals(MOCK_STRING_VALUE, sysConfig.getString(MOCK_KEY, MOCK_STRING_VALUE));\n        Assertions.assertEquals(MOCK_STRING_VALUE, sysConfig.getProperty(MOCK_KEY, MOCK_STRING_VALUE));\n    }", "signature": "void testGetSysProperty()", "full_signature": "@Test public void testGetSysProperty()", "class_method_signature": "SystemConfigurationTest.testGetSysProperty()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getInternalProperty", "assertFalse", "containsKey", "assertNull", "getString", "assertNull", "getProperty", "setProperty", "assertTrue", "containsKey", "assertEquals", "getInternalProperty", "assertEquals", "getString", "assertEquals", "getProperty"]}, "focal_class": {"identifier": "SystemConfiguration", "superclass": "", "interfaces": "implements Configuration", "fields": [], "methods": [{"identifier": "getInternalProperty", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "signature": "Object getInternalProperty(String key)", "full_signature": "@Override public Object getInternalProperty(String key)", "class_method_signature": "SystemConfiguration.getInternalProperty(String key)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/config/SystemConfiguration.java"}, "focal_method": {"identifier": "getInternalProperty", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object getInternalProperty(String key) {\n        return System.getProperty(key);\n    }", "signature": "Object getInternalProperty(String key)", "full_signature": "@Override public Object getInternalProperty(String key)", "class_method_signature": "SystemConfiguration.getInternalProperty(String key)", "testcase": false, "constructor": false, "invocations": ["getProperty"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}