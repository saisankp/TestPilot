{"test_class": {"identifier": "TextTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected final String expected = randomUUID().toString();", "modifier": "protected final", "type": "String", "declarator": "expected = randomUUID().toString()", "var_name": "expected"}, {"original_string": "protected final Text text = new Text(() -> new ByteArrayInputStream(expected.getBytes()));", "modifier": "protected final", "type": "Text", "declarator": "text = new Text(() -> new ByteArrayInputStream(expected.getBytes()))", "var_name": "text"}], "file": "core/src/test/java/ship/build/res/TextTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGet() throws Exception {\n    assertEquals(expected, text.get());\n  }", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "TextTest.testGet()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "get"]}, "focal_class": {"identifier": "Text", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final DangerousSupplier<InputStream> textSupplier;", "modifier": "protected final", "type": "DangerousSupplier<InputStream>", "declarator": "textSupplier", "var_name": "textSupplier"}], "methods": [{"identifier": "read", "parameters": "(final DangerousSupplier<OutputStream> supplier)", "modifiers": "public", "return": "void", "signature": "void read(final DangerousSupplier<OutputStream> supplier)", "full_signature": "public void read(final DangerousSupplier<OutputStream> supplier)", "class_method_signature": "Text.read(final DangerousSupplier<OutputStream> supplier)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(final DangerousConsumer<InputStream> consumer)", "modifiers": "public", "return": "void", "signature": "void read(final DangerousConsumer<InputStream> consumer)", "full_signature": "public void read(final DangerousConsumer<InputStream> consumer)", "class_method_signature": "Text.read(final DangerousConsumer<InputStream> consumer)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String get()", "full_signature": "public String get()", "class_method_signature": "Text.get()", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/build/res/Text.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String get() throws Exception {\n    final InputStream in = textSupplier.get();\n    try (final Reader reader = new InputStreamReader(in)) {\n      return IoUtils.from(reader);\n    }\n  }", "signature": "String get()", "full_signature": "public String get()", "class_method_signature": "Text.get()", "testcase": false, "constructor": false, "invocations": ["get", "from"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}