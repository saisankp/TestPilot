{"test_class": {"identifier": "MySqlUpdateParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RouteService routeService = new RouteService();", "modifier": "private", "type": "RouteService", "declarator": "routeService = new RouteService()", "var_name": "routeService"}, {"original_string": "MySqlUpdateParser parser = (MySqlUpdateParser) SqlParserFactory.getParser(SqlType.UPDATE);", "modifier": "", "type": "MySqlUpdateParser", "declarator": "parser = (MySqlUpdateParser) SqlParserFactory.getParser(SqlType.UPDATE)", "var_name": "parser"}], "file": "baymax-core/src/test/java/com/tongbanjie/baymax/parser/mysql/MySqlUpdateParserTest.java"}, "test_case": {"identifier": "testCheckUpdateColumn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckUpdateColumn() throws Exception {\n        testCheckUpdateColumn(UpdateTestSql.u1);\n        testCheckUpdateColumn(\"update table1 set a='1' where (a = 1 or b = 2) and c = 3\");\n    }", "signature": "void testCheckUpdateColumn()", "full_signature": "@Test public void testCheckUpdateColumn()", "class_method_signature": "MySqlUpdateParserTest.testCheckUpdateColumn()", "testcase": true, "constructor": false, "invocations": ["testCheckUpdateColumn", "testCheckUpdateColumn"]}, "focal_class": {"identifier": "MySqlUpdateParser", "superclass": "extends MySqlSqlParser", "interfaces": "", "fields": [], "methods": [{"identifier": "changeSql", "parameters": "(ParseResult result, ExecutePlan plan)", "modifiers": "@Override public", "return": "void", "signature": "void changeSql(ParseResult result, ExecutePlan plan)", "full_signature": "@Override public void changeSql(ParseResult result, ExecutePlan plan)", "class_method_signature": "MySqlUpdateParser.changeSql(ParseResult result, ExecutePlan plan)", "testcase": false, "constructor": false}, {"identifier": "checkUpdateColumn", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void checkUpdateColumn()", "full_signature": "protected void checkUpdateColumn()", "class_method_signature": "MySqlUpdateParser.checkUpdateColumn()", "testcase": false, "constructor": false}], "file": "baymax-core/src/main/java/com/tongbanjie/baymax/parser/mysql/MySqlUpdateParser.java"}, "focal_method": {"identifier": "checkUpdateColumn", "parameters": "()", "modifiers": "protected", "return": "void", "body": "protected void checkUpdateColumn(){\n        MySqlUpdateStatement update = (MySqlUpdateStatement)statement;\n        String tableName = StringUtil.removeBackquote(update.getTableName().getSimpleName());\n        List<SQLUpdateSetItem> updateSetItem = update.getItems();\n        String[] partitionColumns = BaymaxContext.getPartitionColumns(tableName);\n        if(partitionColumns != null && partitionColumns.length > 0 && updateSetItem != null && updateSetItem.size() > 0) {\n            for(SQLUpdateSetItem item : updateSetItem) {\n                String column = StringUtil.removeBackquote(item.getColumn().toString());\n                if (StringUtil.contains(partitionColumns, column)){\n                    throw new BayMaxException(\"\u5206\u533a\u8868\u7684\u5206\u533a\u952e\u4e0d\u80fd\u88ab\u66f4\u65b0:\" + tableName + \".\" + column);\n                }\n            }\n        }\n    }", "signature": "void checkUpdateColumn()", "full_signature": "protected void checkUpdateColumn()", "class_method_signature": "MySqlUpdateParser.checkUpdateColumn()", "testcase": false, "constructor": false, "invocations": ["removeBackquote", "getSimpleName", "getTableName", "getItems", "getPartitionColumns", "size", "removeBackquote", "toString", "getColumn", "contains"]}, "repository": {"repo_id": 59288941, "url": "https://github.com/tongbanjie/baymax", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 45, "size": 1578, "license": "licensed"}}