{"test_class": {"identifier": "PluginFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "kafka-webview-ui/src/test/java/org/sourcelab/kafka/webview/ui/manager/plugin/PluginFactoryTest.java"}, "test_case": {"identifier": "testLoadingDefaultDeserializer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadingDefaultDeserializer() throws LoaderException {\n        final String classPath = StringDeserializer.class.getName();\n\n        // Create factory\n        final PluginFactory<Deserializer> factory = new PluginFactory<>(\"/tmp\", Deserializer.class);\n\n        // Get class instance\n        final Class<? extends Deserializer> pluginFilterClass = factory.getPluginClass(classPath);\n\n        // Validate\n        assertNotNull(pluginFilterClass);\n        assertEquals(\"Has expected name\", classPath, pluginFilterClass.getName());\n    }", "signature": "void testLoadingDefaultDeserializer()", "full_signature": "@Test public void testLoadingDefaultDeserializer()", "class_method_signature": "PluginFactoryTest.testLoadingDefaultDeserializer()", "testcase": true, "constructor": false, "invocations": ["getName", "getPluginClass", "assertNotNull", "assertEquals", "getName"]}, "focal_class": {"identifier": "PluginFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String jarDirectory;", "modifier": "private final", "type": "String", "declarator": "jarDirectory", "var_name": "jarDirectory"}, {"original_string": "private final Class<T> typeParameterClass;", "modifier": "private final", "type": "Class<T>", "declarator": "typeParameterClass", "var_name": "typeParameterClass"}], "methods": [{"identifier": "PluginFactory", "parameters": "(final String jarDirectory, final Class<T> typeParameterClass)", "modifiers": "public", "return": "", "signature": " PluginFactory(final String jarDirectory, final Class<T> typeParameterClass)", "full_signature": "public  PluginFactory(final String jarDirectory, final Class<T> typeParameterClass)", "class_method_signature": "PluginFactory.PluginFactory(final String jarDirectory, final Class<T> typeParameterClass)", "testcase": false, "constructor": true}, {"identifier": "getPluginClass", "parameters": "(final String classpath)", "modifiers": "public", "return": "Class<? extends T>", "signature": "Class<? extends T> getPluginClass(final String classpath)", "full_signature": "public Class<? extends T> getPluginClass(final String classpath)", "class_method_signature": "PluginFactory.getPluginClass(final String classpath)", "testcase": false, "constructor": false}, {"identifier": "getPluginClass", "parameters": "(final String jarName, final String classpath)", "modifiers": "public", "return": "Class<? extends T>", "signature": "Class<? extends T> getPluginClass(final String jarName, final String classpath)", "full_signature": "public Class<? extends T> getPluginClass(final String jarName, final String classpath)", "class_method_signature": "PluginFactory.getPluginClass(final String jarName, final String classpath)", "testcase": false, "constructor": false}, {"identifier": "getPluginClass", "parameters": "(final ClassLoader classLoader, final String classpath)", "modifiers": "private", "return": "Class<? extends T>", "signature": "Class<? extends T> getPluginClass(final ClassLoader classLoader, final String classpath)", "full_signature": "private Class<? extends T> getPluginClass(final ClassLoader classLoader, final String classpath)", "class_method_signature": "PluginFactory.getPluginClass(final ClassLoader classLoader, final String classpath)", "testcase": false, "constructor": false}, {"identifier": "getPlugin", "parameters": "(final String jarName, final String classpath)", "modifiers": "public", "return": "T", "signature": "T getPlugin(final String jarName, final String classpath)", "full_signature": "public T getPlugin(final String jarName, final String classpath)", "class_method_signature": "PluginFactory.getPlugin(final String jarName, final String classpath)", "testcase": false, "constructor": false}, {"identifier": "checkPlugin", "parameters": "(final String jarName, final String classpath)", "modifiers": "public", "return": "boolean", "signature": "boolean checkPlugin(final String jarName, final String classpath)", "full_signature": "public boolean checkPlugin(final String jarName, final String classpath)", "class_method_signature": "PluginFactory.checkPlugin(final String jarName, final String classpath)", "testcase": false, "constructor": false}, {"identifier": "getPathForJar", "parameters": "(final String jarName)", "modifiers": "public", "return": "Path", "signature": "Path getPathForJar(final String jarName)", "full_signature": "public Path getPathForJar(final String jarName)", "class_method_signature": "PluginFactory.getPathForJar(final String jarName)", "testcase": false, "constructor": false}], "file": "kafka-webview-ui/src/main/java/org/sourcelab/kafka/webview/ui/manager/plugin/PluginFactory.java"}, "focal_method": {"identifier": "getPluginClass", "parameters": "(final String classpath)", "modifiers": "public", "return": "Class<? extends T>", "body": "public Class<? extends T> getPluginClass(final String classpath) throws LoaderException {\n        return getPluginClass(getClass().getClassLoader(), classpath);\n    }", "signature": "Class<? extends T> getPluginClass(final String classpath)", "full_signature": "public Class<? extends T> getPluginClass(final String classpath)", "class_method_signature": "PluginFactory.getPluginClass(final String classpath)", "testcase": false, "constructor": false, "invocations": ["getPluginClass", "getClassLoader", "getClass"]}, "repository": {"repo_id": 106082622, "url": "https://github.com/SourceLabOrg/kafka-webview", "stars": 256, "created": "10/7/2017 8:28:45 AM +00:00", "updates": "2020-01-25T06:02:44+00:00", "fork": "False", "license": "licensed"}}