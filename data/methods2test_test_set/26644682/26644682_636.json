{"test_class": {"identifier": "ChangeUserIdToTargetIdTest", "superclass": "extends Base_1_3_0_PE_Test", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ChangeUserIdToTargetId task;", "modifier": "@Autowired\n    private", "type": "ChangeUserIdToTargetId", "declarator": "task", "var_name": "task"}, {"original_string": "@Value(\"${upgrade.store.file.location}\")\n    private String storeLocation;", "modifier": "@Value(\"${upgrade.store.file.location}\")\n    private", "type": "String", "declarator": "storeLocation", "var_name": "storeLocation"}], "file": "dataprep-upgrade/src/test/java/org/talend/dataprep/upgrade/to_1_3_0_PE/ChangeUserIdToTargetIdTest.java"}, "test_case": {"identifier": "shouldRenameUpgradeUserFolders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldRenameUpgradeUserFolders() throws Exception {\n        // given\n        List<String> expected =\n                Arrays.asList(\"USER-chuck norris\", \"USER-mr anonymous\", \"USER-william from arcachon\", \"VERSION-1.3.0\");\n\n        // when\n        task.run();\n\n        // then\n        Path rootFolder = Paths.get(storeLocation);\n        List<String> actual = Arrays.asList(rootFolder.toFile().list());\n        assertTrue(actual.containsAll(expected) && expected.containsAll(actual));\n\n    }", "signature": "void shouldRenameUpgradeUserFolders()", "full_signature": "@Test public void shouldRenameUpgradeUserFolders()", "class_method_signature": "ChangeUserIdToTargetIdTest.shouldRenameUpgradeUserFolders()", "testcase": true, "constructor": false, "invocations": ["asList", "run", "get", "asList", "list", "toFile", "assertTrue", "containsAll", "containsAll"]}, "focal_class": {"identifier": "ChangeUserIdToTargetId", "superclass": "", "interfaces": "implements BaseUpgradeTaskTo_1_3_0_PE", "fields": [{"original_string": "private static final Logger LOG = getLogger(ChangeUserIdToTargetId.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = getLogger(ChangeUserIdToTargetId.class)", "var_name": "LOG"}, {"original_string": "@Value(\"${upgrade.store.file.location}\")\n    private String storeLocation;", "modifier": "@Value(\"${upgrade.store.file.location}\")\n    private", "type": "String", "declarator": "storeLocation", "var_name": "storeLocation"}], "methods": [{"identifier": "getOrder", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override public int getOrder()", "class_method_signature": "ChangeUserIdToTargetId.getOrder()", "testcase": false, "constructor": false}, {"identifier": "getTarget", "parameters": "()", "modifiers": "@Override public", "return": "target", "signature": "target getTarget()", "full_signature": "@Override public target getTarget()", "class_method_signature": "ChangeUserIdToTargetId.getTarget()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ChangeUserIdToTargetId.run()", "testcase": false, "constructor": false}], "file": "dataprep-upgrade/src/main/java/org/talend/dataprep/upgrade/to_1_3_0_PE/ChangeUserIdToTargetId.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run() {\n\n        Path rootFolder = Paths.get(storeLocation);\n        try {\n            Files.walkFileTree(rootFolder, emptySet(), 1, new RenameUserToTarget());\n        } catch (IOException e) {\n            throw new TDPException(CommonErrorCodes.UNEXPECTED_EXCEPTION, e);\n        }\n\n    }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ChangeUserIdToTargetId.run()", "testcase": false, "constructor": false, "invocations": ["get", "walkFileTree", "emptySet"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}