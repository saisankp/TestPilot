{"test_class": {"identifier": "MACAddressTest", "superclass": "", "interfaces": "", "fields": [], "file": "network-level/fl-ho-nl/src/test/java/net/floodlightcontroller/util/MACAddressTest.java"}, "test_case": {"identifier": "testIllegalFormat", "parameters": "()", "modifiers": "@Test(expected=NumberFormatException.class) public", "return": "void", "body": "@Test(expected=NumberFormatException.class)\n    public void testIllegalFormat() {\n        MACAddress.valueOf(\"0T:00:01:02:03:04\");\n    }", "signature": "void testIllegalFormat()", "full_signature": "@Test(expected=NumberFormatException.class) public void testIllegalFormat()", "class_method_signature": "MACAddressTest.testIllegalFormat()", "testcase": true, "constructor": false, "invocations": ["valueOf"]}, "focal_class": {"identifier": "MACAddress", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int MAC_ADDRESS_LENGTH = 6;", "modifier": "public static final", "type": "int", "declarator": "MAC_ADDRESS_LENGTH = 6", "var_name": "MAC_ADDRESS_LENGTH"}, {"original_string": "private byte[] address = new byte[MAC_ADDRESS_LENGTH];", "modifier": "private", "type": "byte[]", "declarator": "address = new byte[MAC_ADDRESS_LENGTH]", "var_name": "address"}], "methods": [{"identifier": "MACAddress", "parameters": "(byte[] address)", "modifiers": "public", "return": "", "signature": " MACAddress(byte[] address)", "full_signature": "public  MACAddress(byte[] address)", "class_method_signature": "MACAddress.MACAddress(byte[] address)", "testcase": false, "constructor": true}, {"identifier": "valueOf", "parameters": "(String address)", "modifiers": "public static", "return": "MACAddress", "signature": "MACAddress valueOf(String address)", "full_signature": "public static MACAddress valueOf(String address)", "class_method_signature": "MACAddress.valueOf(String address)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(byte[] address)", "modifiers": "public static", "return": "MACAddress", "signature": "MACAddress valueOf(byte[] address)", "full_signature": "public static MACAddress valueOf(byte[] address)", "class_method_signature": "MACAddress.valueOf(byte[] address)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(long address)", "modifiers": "public static", "return": "MACAddress", "signature": "MACAddress valueOf(long address)", "full_signature": "public static MACAddress valueOf(long address)", "class_method_signature": "MACAddress.valueOf(long address)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int length()", "full_signature": "public int length()", "class_method_signature": "MACAddress.length()", "testcase": false, "constructor": false}, {"identifier": "toBytes", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] toBytes()", "full_signature": "public byte[] toBytes()", "class_method_signature": "MACAddress.toBytes()", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long toLong()", "full_signature": "public long toLong()", "class_method_signature": "MACAddress.toLong()", "testcase": false, "constructor": false}, {"identifier": "isBroadcast", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBroadcast()", "full_signature": "public boolean isBroadcast()", "class_method_signature": "MACAddress.isBroadcast()", "testcase": false, "constructor": false}, {"identifier": "isMulticast", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMulticast()", "full_signature": "public boolean isMulticast()", "class_method_signature": "MACAddress.isMulticast()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "MACAddress.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MACAddress.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MACAddress.toString()", "testcase": false, "constructor": false}], "file": "network-level/fl-ho-nl/src/main/java/net/floodlightcontroller/util/MACAddress.java"}, "focal_method": {"identifier": "valueOf", "parameters": "(String address)", "modifiers": "public static", "return": "MACAddress", "body": "public static MACAddress valueOf(String address) {\n        String[] elements = address.split(\":\");\n        if (elements.length != MAC_ADDRESS_LENGTH) {\n            throw new IllegalArgumentException(\n                    \"Specified MAC Address must contain 12 hex digits\" +\n                    \" separated pairwise by :'s.\");\n        }\n\n        byte[] addressInBytes = new byte[MAC_ADDRESS_LENGTH];\n        for (int i = 0; i < MAC_ADDRESS_LENGTH; i++) {\n            String element = elements[i];\n            addressInBytes[i] = (byte)Integer.parseInt(element, 16);\n        }\n\n        return new MACAddress(addressInBytes);\n    }", "signature": "MACAddress valueOf(String address)", "full_signature": "public static MACAddress valueOf(String address)", "class_method_signature": "MACAddress.valueOf(String address)", "testcase": false, "constructor": false, "invocations": ["split", "parseInt"]}, "repository": {"repo_id": 10459637, "url": "https://github.com/rizard/geni-openflow-vertical-handover", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 33971, "license": "licensed"}}