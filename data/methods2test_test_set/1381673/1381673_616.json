{"test_class": {"identifier": "FinishedByFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FinishedByFunction finishedByFunction;", "modifier": "private", "type": "FinishedByFunction", "declarator": "finishedByFunction", "var_name": "finishedByFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/interval/FinishedByFunctionTest.java"}, "test_case": {"identifier": "invokeParamsCantBeCompared", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeParamsCantBeCompared() {\n        FunctionTestUtil.assertResultError( finishedByFunction.invoke(\n                new RangeImpl( Range.RangeBoundary.CLOSED, \"a\", \"f\", Range.RangeBoundary.CLOSED ),\n                new RangeImpl( Range.RangeBoundary.CLOSED,  1, 2, Range.RangeBoundary.CLOSED ) ), InvalidParametersEvent.class );\n    }", "signature": "void invokeParamsCantBeCompared()", "full_signature": "@Test public void invokeParamsCantBeCompared()", "class_method_signature": "FinishedByFunctionTest.invokeParamsCantBeCompared()", "testcase": true, "constructor": false, "invocations": ["assertResultError", "invoke"]}, "focal_class": {"identifier": "FinishedByFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [{"original_string": "public static final FinishedByFunction INSTANCE = new FinishedByFunction();", "modifier": "public static final", "type": "FinishedByFunction", "declarator": "INSTANCE = new FinishedByFunction()", "var_name": "INSTANCE"}], "methods": [{"identifier": "FinishedByFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " FinishedByFunction()", "full_signature": "public  FinishedByFunction()", "class_method_signature": "FinishedByFunction.FinishedByFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "signature": "FEELFnResult<Boolean> invoke(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value)", "class_method_signature": "FinishedByFunction.invoke(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(@ParameterName( \"range1\" ) Range range1, @ParameterName( \"range2\" ) Range range2)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "signature": "FEELFnResult<Boolean> invoke(@ParameterName( \"range1\" ) Range range1, @ParameterName( \"range2\" ) Range range2)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName( \"range1\" ) Range range1, @ParameterName( \"range2\" ) Range range2)", "class_method_signature": "FinishedByFunction.invoke(@ParameterName( \"range1\" ) Range range1, @ParameterName( \"range2\" ) Range range2)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/interval/FinishedByFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "body": "public FEELFnResult<Boolean> invoke(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value) {\n        if ( value == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"value\", \"cannot be null\"));\n        }\n        if ( range == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"range\", \"cannot be null\"));\n        }\n        try {\n            boolean result = ( range.getHighBoundary() == Range.RangeBoundary.CLOSED && value.compareTo( range.getHighEndPoint() ) == 0 );\n            return FEELFnResult.ofResult( result );\n        } catch( Exception e ) {\n            // values are not comparable\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"value\", \"cannot be compared to range\"));\n        }\n    }", "signature": "FEELFnResult<Boolean> invoke(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value)", "class_method_signature": "FinishedByFunction.invoke(@ParameterName( \"range\" ) Range range, @ParameterName( \"value\" ) Comparable value)", "testcase": false, "constructor": false, "invocations": ["ofError", "ofError", "getHighBoundary", "compareTo", "getHighEndPoint", "ofResult", "ofError"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}