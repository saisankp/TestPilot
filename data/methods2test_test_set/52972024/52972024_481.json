{"test_class": {"identifier": "ScopeGuardTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/Scope/ScopeGuard/src/test/java/info/smart_tools/smartactors/scope/scope_guard/ScopeGuardTest.java"}, "test_case": {"identifier": "checkGuard", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkGuard()\n            throws Exception {\n        Object key1 = ScopeProvider.createScope(null);\n        Object key2 = ScopeProvider.createScope(null);\n        IScope scope1 = ScopeProvider.getScope(key1);\n        IScope scope2 = ScopeProvider.getScope(key2);\n        assertNotSame(scope1, scope2);\n        ScopeProvider.setCurrentScope(scope1);\n        ScopeGuard guard = new ScopeGuard(key2);\n        assertEquals(scope2, ScopeProvider.getCurrentScope());\n        guard.close();\n        assertEquals(scope1, ScopeProvider.getCurrentScope());\n    }", "signature": "void checkGuard()", "full_signature": "@Test public void checkGuard()", "class_method_signature": "ScopeGuardTest.checkGuard()", "testcase": true, "constructor": false, "invocations": ["createScope", "createScope", "getScope", "getScope", "assertNotSame", "setCurrentScope", "assertEquals", "getCurrentScope", "close", "assertEquals", "getCurrentScope"]}, "focal_class": {"identifier": "ScopeGuard", "superclass": "", "interfaces": "implements IScopeGuard", "fields": [{"original_string": "private IScope previousScope;", "modifier": "private", "type": "IScope", "declarator": "previousScope", "var_name": "previousScope"}], "methods": [{"identifier": "ScopeGuard", "parameters": "(final Object key)", "modifiers": "public", "return": "", "signature": " ScopeGuard(final Object key)", "full_signature": "public  ScopeGuard(final Object key)", "class_method_signature": "ScopeGuard.ScopeGuard(final Object key)", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ScopeGuard.close()", "testcase": false, "constructor": false}], "file": "CoreFeatures/Scope/ScopeGuard/src/main/java/info/smart_tools/smartactors/scope/scope_guard/ScopeGuard.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void close() throws ScopeGuardException {\n        try {\n            if (previousScope != null) {\n                ScopeProvider.setCurrentScope(previousScope);\n            } else {\n                throw new Exception();\n            }\n        } catch (Exception e) {\n            throw new ScopeGuardException(\"ScopeGuard could not restore original state.\", e);\n        }\n    }", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ScopeGuard.close()", "testcase": false, "constructor": false, "invocations": ["setCurrentScope"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}