{"test_class": {"identifier": "DateTimesTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "base/lang/src/test/java/leap/lang/DateTimesTest.java"}, "test_case": {"identifier": "testParseLocalDateWithDefaultFormat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testParseLocalDateWithDefaultFormat() {\n\t\tLocalDate d = LocalDate.of(2014, 11, 01);\n\t\t\n\t\tassertEquals(d,DateTimes.tryParseLocalDate(\"2014-11-01\"));\n\t\tassertEquals(d,DateTimes.tryParseLocalDate(\"2014-11-01T10:01:01\"));\n\t\tassertEquals(d,DateTimes.tryParseLocalDate(\"2014-11-01 10:01:01\"));\n\t}", "signature": "void testParseLocalDateWithDefaultFormat()", "full_signature": "@Test public void testParseLocalDateWithDefaultFormat()", "class_method_signature": "DateTimesTest.testParseLocalDateWithDefaultFormat()", "testcase": true, "constructor": false, "invocations": ["of", "assertEquals", "tryParseLocalDate", "assertEquals", "tryParseLocalDate", "assertEquals", "tryParseLocalDate"]}, "focal_class": {"identifier": "DateTimes", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "tryParseLocalDate", "parameters": "(CharSequence text)", "modifiers": "public static", "return": "LocalDate", "signature": "LocalDate tryParseLocalDate(CharSequence text)", "full_signature": "public static LocalDate tryParseLocalDate(CharSequence text)", "class_method_signature": "DateTimes.tryParseLocalDate(CharSequence text)", "testcase": false, "constructor": false}, {"identifier": "tryParseLocalDate", "parameters": "(CharSequence text,DateTimeFormatter formatter)", "modifiers": "public static", "return": "LocalDate", "signature": "LocalDate tryParseLocalDate(CharSequence text,DateTimeFormatter formatter)", "full_signature": "public static LocalDate tryParseLocalDate(CharSequence text,DateTimeFormatter formatter)", "class_method_signature": "DateTimes.tryParseLocalDate(CharSequence text,DateTimeFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "tryParseLocalTime", "parameters": "(CharSequence text)", "modifiers": "public static", "return": "LocalTime", "signature": "LocalTime tryParseLocalTime(CharSequence text)", "full_signature": "public static LocalTime tryParseLocalTime(CharSequence text)", "class_method_signature": "DateTimes.tryParseLocalTime(CharSequence text)", "testcase": false, "constructor": false}, {"identifier": "tryParseLocalTime", "parameters": "(CharSequence text,DateTimeFormatter formatter)", "modifiers": "public static", "return": "LocalTime", "signature": "LocalTime tryParseLocalTime(CharSequence text,DateTimeFormatter formatter)", "full_signature": "public static LocalTime tryParseLocalTime(CharSequence text,DateTimeFormatter formatter)", "class_method_signature": "DateTimes.tryParseLocalTime(CharSequence text,DateTimeFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "tryParseLocalDateTime", "parameters": "(CharSequence text)", "modifiers": "public static", "return": "LocalDateTime", "signature": "LocalDateTime tryParseLocalDateTime(CharSequence text)", "full_signature": "public static LocalDateTime tryParseLocalDateTime(CharSequence text)", "class_method_signature": "DateTimes.tryParseLocalDateTime(CharSequence text)", "testcase": false, "constructor": false}, {"identifier": "tryParseLocalDateTime", "parameters": "(CharSequence text,DateTimeFormatter formatter)", "modifiers": "public static", "return": "LocalDateTime", "signature": "LocalDateTime tryParseLocalDateTime(CharSequence text,DateTimeFormatter formatter)", "full_signature": "public static LocalDateTime tryParseLocalDateTime(CharSequence text,DateTimeFormatter formatter)", "class_method_signature": "DateTimes.tryParseLocalDateTime(CharSequence text,DateTimeFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "tryParseInstant", "parameters": "(CharSequence text)", "modifiers": "public static", "return": "Instant", "signature": "Instant tryParseInstant(CharSequence text)", "full_signature": "public static Instant tryParseInstant(CharSequence text)", "class_method_signature": "DateTimes.tryParseInstant(CharSequence text)", "testcase": false, "constructor": false}, {"identifier": "toLocalDate", "parameters": "(Date d)", "modifiers": "public static", "return": "LocalDate", "signature": "LocalDate toLocalDate(Date d)", "full_signature": "public static LocalDate toLocalDate(Date d)", "class_method_signature": "DateTimes.toLocalDate(Date d)", "testcase": false, "constructor": false}, {"identifier": "toLocalDate", "parameters": "(Instant i)", "modifiers": "public static", "return": "LocalDate", "signature": "LocalDate toLocalDate(Instant i)", "full_signature": "public static LocalDate toLocalDate(Instant i)", "class_method_signature": "DateTimes.toLocalDate(Instant i)", "testcase": false, "constructor": false}, {"identifier": "toLocalTime", "parameters": "(Date d)", "modifiers": "public static", "return": "LocalTime", "signature": "LocalTime toLocalTime(Date d)", "full_signature": "public static LocalTime toLocalTime(Date d)", "class_method_signature": "DateTimes.toLocalTime(Date d)", "testcase": false, "constructor": false}, {"identifier": "toLocalTime", "parameters": "(Instant i)", "modifiers": "public static", "return": "LocalTime", "signature": "LocalTime toLocalTime(Instant i)", "full_signature": "public static LocalTime toLocalTime(Instant i)", "class_method_signature": "DateTimes.toLocalTime(Instant i)", "testcase": false, "constructor": false}, {"identifier": "toLocalDateTime", "parameters": "(Date d)", "modifiers": "public static", "return": "LocalDateTime", "signature": "LocalDateTime toLocalDateTime(Date d)", "full_signature": "public static LocalDateTime toLocalDateTime(Date d)", "class_method_signature": "DateTimes.toLocalDateTime(Date d)", "testcase": false, "constructor": false}, {"identifier": "toLocalDateTime", "parameters": "(Instant i)", "modifiers": "public static", "return": "LocalDateTime", "signature": "LocalDateTime toLocalDateTime(Instant i)", "full_signature": "public static LocalDateTime toLocalDateTime(Instant i)", "class_method_signature": "DateTimes.toLocalDateTime(Instant i)", "testcase": false, "constructor": false}, {"identifier": "DateTimes", "parameters": "()", "modifiers": "protected", "return": "", "signature": " DateTimes()", "full_signature": "protected  DateTimes()", "class_method_signature": "DateTimes.DateTimes()", "testcase": false, "constructor": true}], "file": "base/lang/src/main/java/leap/lang/DateTimes.java"}, "focal_method": {"identifier": "tryParseLocalDate", "parameters": "(CharSequence text)", "modifiers": "public static", "return": "LocalDate", "body": "public static LocalDate tryParseLocalDate(CharSequence text) {\n\t\tif(null == text || text.length() == 0){\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tLocalDate d = tryParseLocalDate(text,DateTimeFormatter.ISO_LOCAL_DATE);\n\t\tif(d == null) {\n\t\t\td = tryParseLocalDate(text, DateTimeFormatter.ISO_LOCAL_DATE_TIME);\n\t\t\tif(d == null) {\n\t\t\t\tDate ld = Dates.tryParse(text.toString(),DateFormats.DATETIME_FORMATTER);\n\t\t\t\tif(null != ld) {\n\t\t\t\t\treturn toLocalDate(ld);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn d;\n\t}", "signature": "LocalDate tryParseLocalDate(CharSequence text)", "full_signature": "public static LocalDate tryParseLocalDate(CharSequence text)", "class_method_signature": "DateTimes.tryParseLocalDate(CharSequence text)", "testcase": false, "constructor": false, "invocations": ["length", "tryParseLocalDate", "tryParseLocalDate", "tryParse", "toString", "toLocalDate"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}