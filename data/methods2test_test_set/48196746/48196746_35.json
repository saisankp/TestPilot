{"test_class": {"identifier": "AnalyzerConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "code-assert-core/src/test/java/guru/nidi/codeassert/config/AnalyzerConfigTest.java"}, "test_case": {"identifier": "mavenModuleRedefinition", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void mavenModuleRedefinition() {\n        assertThrows(IllegalStateException.class, () -> AnalyzerConfig.maven(\"code-assert-core\").modules(\"\").mainAndTest());\n    }", "signature": "void mavenModuleRedefinition()", "full_signature": "@Test void mavenModuleRedefinition()", "class_method_signature": "AnalyzerConfigTest.mavenModuleRedefinition()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "mainAndTest", "modules", "maven"]}, "focal_class": {"identifier": "AnalyzerConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final EnumSet<Language> languages;", "modifier": "private final", "type": "EnumSet<Language>", "declarator": "languages", "var_name": "languages"}, {"original_string": "private final List<Path> sources;", "modifier": "private final", "type": "List<Path>", "declarator": "sources", "var_name": "sources"}, {"original_string": "private final List<Path> classes;", "modifier": "private final", "type": "List<Path>", "declarator": "classes", "var_name": "classes"}], "methods": [{"identifier": "AnalyzerConfig", "parameters": "()", "modifiers": "public", "return": "", "signature": " AnalyzerConfig()", "full_signature": "public  AnalyzerConfig()", "class_method_signature": "AnalyzerConfig.AnalyzerConfig()", "testcase": false, "constructor": true}, {"identifier": "AnalyzerConfig", "parameters": "(AnalyzerConfig config)", "modifiers": "public", "return": "", "signature": " AnalyzerConfig(AnalyzerConfig config)", "full_signature": "public  AnalyzerConfig(AnalyzerConfig config)", "class_method_signature": "AnalyzerConfig.AnalyzerConfig(AnalyzerConfig config)", "testcase": false, "constructor": true}, {"identifier": "AnalyzerConfig", "parameters": "(EnumSet<Language> languages, List<Path> sources, List<Path> classes)", "modifiers": "protected", "return": "", "signature": " AnalyzerConfig(EnumSet<Language> languages, List<Path> sources, List<Path> classes)", "full_signature": "protected  AnalyzerConfig(EnumSet<Language> languages, List<Path> sources, List<Path> classes)", "class_method_signature": "AnalyzerConfig.AnalyzerConfig(EnumSet<Language> languages, List<Path> sources, List<Path> classes)", "testcase": false, "constructor": true}, {"identifier": "and", "parameters": "(AnalyzerConfig config)", "modifiers": "public", "return": "AnalyzerConfig", "signature": "AnalyzerConfig and(AnalyzerConfig config)", "full_signature": "public AnalyzerConfig and(AnalyzerConfig config)", "class_method_signature": "AnalyzerConfig.and(AnalyzerConfig config)", "testcase": false, "constructor": false}, {"identifier": "maven", "parameters": "(Language... languages)", "modifiers": "public static", "return": "Maven", "signature": "Maven maven(Language... languages)", "full_signature": "public static Maven maven(Language... languages)", "class_method_signature": "AnalyzerConfig.maven(Language... languages)", "testcase": false, "constructor": false}, {"identifier": "maven", "parameters": "(String module, Language... languages)", "modifiers": "public static", "return": "Maven", "signature": "Maven maven(String module, Language... languages)", "full_signature": "public static Maven maven(String module, Language... languages)", "class_method_signature": "AnalyzerConfig.maven(String module, Language... languages)", "testcase": false, "constructor": false}, {"identifier": "gradle", "parameters": "(Language... languages)", "modifiers": "public static", "return": "Gradle", "signature": "Gradle gradle(Language... languages)", "full_signature": "public static Gradle gradle(Language... languages)", "class_method_signature": "AnalyzerConfig.gradle(Language... languages)", "testcase": false, "constructor": false}, {"identifier": "gradle", "parameters": "(String module, Language... languages)", "modifiers": "public static", "return": "Gradle", "signature": "Gradle gradle(String module, Language... languages)", "full_signature": "public static Gradle gradle(String module, Language... languages)", "class_method_signature": "AnalyzerConfig.gradle(String module, Language... languages)", "testcase": false, "constructor": false}, {"identifier": "withSources", "parameters": "(File basedir, String... packages)", "modifiers": "public", "return": "AnalyzerConfig", "signature": "AnalyzerConfig withSources(File basedir, String... packages)", "full_signature": "public AnalyzerConfig withSources(File basedir, String... packages)", "class_method_signature": "AnalyzerConfig.withSources(File basedir, String... packages)", "testcase": false, "constructor": false}, {"identifier": "withClasses", "parameters": "(File basedir, String... packages)", "modifiers": "public", "return": "AnalyzerConfig", "signature": "AnalyzerConfig withClasses(File basedir, String... packages)", "full_signature": "public AnalyzerConfig withClasses(File basedir, String... packages)", "class_method_signature": "AnalyzerConfig.withClasses(File basedir, String... packages)", "testcase": false, "constructor": false}, {"identifier": "getSourcePaths", "parameters": "(Language... languages)", "modifiers": "public", "return": "List<Path>", "signature": "List<Path> getSourcePaths(Language... languages)", "full_signature": "public List<Path> getSourcePaths(Language... languages)", "class_method_signature": "AnalyzerConfig.getSourcePaths(Language... languages)", "testcase": false, "constructor": false}, {"identifier": "getClassPaths", "parameters": "(Language... languages)", "modifiers": "public", "return": "List<Path>", "signature": "List<Path> getClassPaths(Language... languages)", "full_signature": "public List<Path> getClassPaths(Language... languages)", "class_method_signature": "AnalyzerConfig.getClassPaths(Language... languages)", "testcase": false, "constructor": false}, {"identifier": "getSources", "parameters": "(Language... languages)", "modifiers": "public", "return": "List<File>", "signature": "List<File> getSources(Language... languages)", "full_signature": "public List<File> getSources(Language... languages)", "class_method_signature": "AnalyzerConfig.getSources(Language... languages)", "testcase": false, "constructor": false}, {"identifier": "getClasses", "parameters": "(Language... languages)", "modifiers": "public", "return": "List<File>", "signature": "List<File> getClasses(Language... languages)", "full_signature": "public List<File> getClasses(Language... languages)", "class_method_signature": "AnalyzerConfig.getClasses(Language... languages)", "testcase": false, "constructor": false}, {"identifier": "getPaths", "parameters": "(List<Path> paths, Language... languages)", "modifiers": "private", "return": "List<Path>", "signature": "List<Path> getPaths(List<Path> paths, Language... languages)", "full_signature": "private List<Path> getPaths(List<Path> paths, Language... languages)", "class_method_signature": "AnalyzerConfig.getPaths(List<Path> paths, Language... languages)", "testcase": false, "constructor": false}, {"identifier": "getFiles", "parameters": "(List<Path> paths, String suffix, Language... languages)", "modifiers": "private", "return": "List<File>", "signature": "List<File> getFiles(List<Path> paths, String suffix, Language... languages)", "full_signature": "private List<File> getFiles(List<Path> paths, String suffix, Language... languages)", "class_method_signature": "AnalyzerConfig.getFiles(List<Path> paths, String suffix, Language... languages)", "testcase": false, "constructor": false}, {"identifier": "calcLanguages", "parameters": "(Language... languages)", "modifiers": "private", "return": "EnumSet<Language>", "signature": "EnumSet<Language> calcLanguages(Language... languages)", "full_signature": "private EnumSet<Language> calcLanguages(Language... languages)", "class_method_signature": "AnalyzerConfig.calcLanguages(Language... languages)", "testcase": false, "constructor": false}, {"identifier": "crawlDir", "parameters": "(File base, List<String> suffices, List<File> res)", "modifiers": "private", "return": "void", "signature": "void crawlDir(File base, List<String> suffices, List<File> res)", "full_signature": "private void crawlDir(File base, List<String> suffices, List<File> res)", "class_method_signature": "AnalyzerConfig.crawlDir(File base, List<String> suffices, List<File> res)", "testcase": false, "constructor": false}, {"identifier": "hasAnySuffix", "parameters": "(String s, List<String> suffices)", "modifiers": "private", "return": "boolean", "signature": "boolean hasAnySuffix(String s, List<String> suffices)", "full_signature": "private boolean hasAnySuffix(String s, List<String> suffices)", "class_method_signature": "AnalyzerConfig.hasAnySuffix(String s, List<String> suffices)", "testcase": false, "constructor": false}], "file": "code-assert-core/src/main/java/guru/nidi/codeassert/config/AnalyzerConfig.java"}, "focal_method": {"identifier": "maven", "parameters": "(Language... languages)", "modifiers": "public static", "return": "Maven", "body": "public static Maven maven(Language... languages) {\n        return maven(null, languages);\n    }", "signature": "Maven maven(Language... languages)", "full_signature": "public static Maven maven(Language... languages)", "class_method_signature": "AnalyzerConfig.maven(Language... languages)", "testcase": false, "constructor": false, "invocations": ["maven"]}, "repository": {"repo_id": 48196746, "url": "https://github.com/nidi3/code-assert", "stars": 67, "created": "12/17/2015 8:30:58 PM +00:00", "updates": "2019-12-16T11:54:24+00:00", "fork": "False", "license": "licensed"}}