{"test_class": {"identifier": "PDDocumentAccessPermissionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PDDocumentAccessPermission victim;", "modifier": "private", "type": "PDDocumentAccessPermission", "declarator": "victim", "var_name": "victim"}, {"original_string": "private AccessPermission permission;", "modifier": "private", "type": "AccessPermission", "declarator": "permission", "var_name": "permission"}], "file": "sejda-sambox/src/test/java/org/sejda/impl/sambox/component/PDDocumentAccessPermissionTest.java"}, "test_case": {"identifier": "testNullPermission", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testNullPermission() throws TaskPermissionsException {\n        victim.ensurePermission(null);\n    }", "signature": "void testNullPermission()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testNullPermission()", "class_method_signature": "PDDocumentAccessPermissionTest.testNullPermission()", "testcase": true, "constructor": false, "invocations": ["ensurePermission"]}, "focal_class": {"identifier": "PDDocumentAccessPermission", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AccessPermission permissions;", "modifier": "private", "type": "AccessPermission", "declarator": "permissions", "var_name": "permissions"}], "methods": [{"identifier": "PDDocumentAccessPermission", "parameters": "(PDDocument document)", "modifiers": "", "return": "", "signature": " PDDocumentAccessPermission(PDDocument document)", "full_signature": "  PDDocumentAccessPermission(PDDocument document)", "class_method_signature": "PDDocumentAccessPermission.PDDocumentAccessPermission(PDDocument document)", "testcase": false, "constructor": true}, {"identifier": "ensureOwnerPermissions", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void ensureOwnerPermissions()", "full_signature": "public void ensureOwnerPermissions()", "class_method_signature": "PDDocumentAccessPermission.ensureOwnerPermissions()", "testcase": false, "constructor": false}, {"identifier": "ensurePermission", "parameters": "(PdfAccessPermission required)", "modifiers": "public", "return": "void", "signature": "void ensurePermission(PdfAccessPermission required)", "full_signature": "public void ensurePermission(PdfAccessPermission required)", "class_method_signature": "PDDocumentAccessPermission.ensurePermission(PdfAccessPermission required)", "testcase": false, "constructor": false}], "file": "sejda-sambox/src/main/java/org/sejda/impl/sambox/component/PDDocumentAccessPermission.java"}, "focal_method": {"identifier": "ensurePermission", "parameters": "(PdfAccessPermission required)", "modifiers": "public", "return": "void", "body": "public void ensurePermission(PdfAccessPermission required) throws TaskPermissionsException {\n        if (!Boolean.getBoolean(Sejda.UNETHICAL_READ_PROPERTY_NAME)\n                && !ForwardingPdfAccessPermission.valueFromPdfAccessPermission(required).isAllowed(permissions)) {\n            throw new TaskPermissionsException(String.format(\"Permission %s is not granted.\", required));\n        }\n    }", "signature": "void ensurePermission(PdfAccessPermission required)", "full_signature": "public void ensurePermission(PdfAccessPermission required)", "class_method_signature": "PDDocumentAccessPermission.ensurePermission(PdfAccessPermission required)", "testcase": false, "constructor": false, "invocations": ["getBoolean", "isAllowed", "valueFromPdfAccessPermission", "format"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}