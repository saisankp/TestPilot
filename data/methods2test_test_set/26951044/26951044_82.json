{"test_class": {"identifier": "FileConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ConversionContext context = new ConversionContext.Builder(TypeLiteral.of(File.class)).build();", "modifier": "", "type": "ConversionContext", "declarator": "context = new ConversionContext.Builder(TypeLiteral.of(File.class)).build()", "var_name": "context"}], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/converters/FileConverterTest.java"}, "test_case": {"identifier": "testConvert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvert() {\n        \n        FileConverter instance = new FileConverter();\n        File result;\n        \n        assertThat(instance.convert(null, context)).isNull();\n        \n        URL testfileUrl = getClass().getResource(\"/testfile.properties\");\n        System.out.println(testfileUrl.toString());\n\n        result = instance.convert(testfileUrl.toString(), context);\n\n\n        assertThat(result).isNotNull();\n        assertThat(context.getSupportedFormats()).contains(\"<File> (FileConverter)\");\n    }", "signature": "void testConvert()", "full_signature": "@Test public void testConvert()", "class_method_signature": "FileConverterTest.testConvert()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "convert", "getResource", "getClass", "println", "toString", "convert", "toString", "isNotNull", "assertThat", "contains", "assertThat", "getSupportedFormats"]}, "focal_class": {"identifier": "FileConverter", "superclass": "", "interfaces": "implements PropertyConverter<File>", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(FileConverter.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(FileConverter.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "File", "signature": "File convert(String value, ConversionContext ctx)", "full_signature": "@Override public File convert(String value, ConversionContext ctx)", "class_method_signature": "FileConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "FileConverter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FileConverter.hashCode()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/converters/FileConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "File", "body": "@Override\n    public File convert(String value, ConversionContext ctx) {\n        if(value==null || value.isEmpty()){\n            return null;\n        }\n        ctx.addSupportedFormats(getClass(),\"<File>\");\n        String trimmed = Objects.requireNonNull(value).trim();\n        try {\n            return new File(trimmed);\n        } catch (Exception e) {\n            LOG.log(Level.FINE, \"Unparseable File Name: \" + trimmed, e);\n        }\n        return null;\n    }", "signature": "File convert(String value, ConversionContext ctx)", "full_signature": "@Override public File convert(String value, ConversionContext ctx)", "class_method_signature": "FileConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "addSupportedFormats", "getClass", "trim", "requireNonNull", "log"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}