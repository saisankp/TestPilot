{"test_class": {"identifier": "DefaultAvailableCapacityServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int CRITICAL_INSTANCE_COUNT = 2;", "modifier": "private static final", "type": "int", "declarator": "CRITICAL_INSTANCE_COUNT = 2", "var_name": "CRITICAL_INSTANCE_COUNT"}, {"original_string": "private static final int FLEX_INSTANCE_COUNT = 4;", "modifier": "private static final", "type": "int", "declarator": "FLEX_INSTANCE_COUNT = 4", "var_name": "FLEX_INSTANCE_COUNT"}, {"original_string": "private final TestScheduler testScheduler = Schedulers.test();", "modifier": "private final", "type": "TestScheduler", "declarator": "testScheduler = Schedulers.test()", "var_name": "testScheduler"}, {"original_string": "private final CapacityManagementConfiguration configuration = mock(CapacityManagementConfiguration.class);", "modifier": "private final", "type": "CapacityManagementConfiguration", "declarator": "configuration = mock(CapacityManagementConfiguration.class)", "var_name": "configuration"}, {"original_string": "private final AgentManagementService agentManagementService = mock(AgentManagementService.class);", "modifier": "private final", "type": "AgentManagementService", "declarator": "agentManagementService = mock(AgentManagementService.class)", "var_name": "agentManagementService"}, {"original_string": "private final ServerInfoResolver serverInfoResolver = mock(ServerInfoResolver.class);", "modifier": "private final", "type": "ServerInfoResolver", "declarator": "serverInfoResolver = mock(ServerInfoResolver.class)", "var_name": "serverInfoResolver"}, {"original_string": "private final DefaultAvailableCapacityService availableCapacityService = new DefaultAvailableCapacityService(\n            configuration,\n            serverInfoResolver,\n            agentManagementService,\n            new DefaultRegistry(),\n            testScheduler\n    );", "modifier": "private final", "type": "DefaultAvailableCapacityService", "declarator": "availableCapacityService = new DefaultAvailableCapacityService(\n            configuration,\n            serverInfoResolver,\n            agentManagementService,\n            new DefaultRegistry(),\n            testScheduler\n    )", "var_name": "availableCapacityService"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/service/management/internal/DefaultAvailableCapacityServiceTest.java"}, "test_case": {"identifier": "testCapacityComputationCorrectness", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCapacityComputationCorrectness() {\n        testScheduler.triggerActions();\n\n        Optional<ResourceDimension> capacity = availableCapacityService.totalCapacityOf(Tier.Critical);\n        assertThat(capacity).isPresent();\n\n        ResourceDimension criticalExpected = dimensionOf(AwsInstanceType.M4_XLarge, CRITICAL_INSTANCE_COUNT);\n        assertThat(capacity).contains(criticalExpected);\n    }", "signature": "void testCapacityComputationCorrectness()", "full_signature": "@Test public void testCapacityComputationCorrectness()", "class_method_signature": "DefaultAvailableCapacityServiceTest.testCapacityComputationCorrectness()", "testcase": true, "constructor": false, "invocations": ["triggerActions", "totalCapacityOf", "isPresent", "assertThat", "dimensionOf", "contains", "assertThat"]}, "focal_class": {"identifier": "DefaultAvailableCapacityService", "superclass": "", "interfaces": "implements AvailableCapacityService", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DefaultAvailableCapacityService.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultAvailableCapacityService.class)", "var_name": "logger"}, {"original_string": "private static final String METRIC_AVAILABLE_CAPACITY_UPDATE = MetricConstants.METRIC_CAPACITY_MANAGEMENT + \"availableCapacityUpdate\";", "modifier": "private static final", "type": "String", "declarator": "METRIC_AVAILABLE_CAPACITY_UPDATE = MetricConstants.METRIC_CAPACITY_MANAGEMENT + \"availableCapacityUpdate\"", "var_name": "METRIC_AVAILABLE_CAPACITY_UPDATE"}, {"original_string": "private final CapacityManagementConfiguration configuration;", "modifier": "private final", "type": "CapacityManagementConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final ServerInfoResolver serverInfoResolver;", "modifier": "private final", "type": "ServerInfoResolver", "declarator": "serverInfoResolver", "var_name": "serverInfoResolver"}, {"original_string": "private final Scheduler.Worker worker;", "modifier": "private final", "type": "Scheduler.Worker", "declarator": "worker", "var_name": "worker"}, {"original_string": "private final ExecutionMetrics metrics;", "modifier": "private final", "type": "ExecutionMetrics", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private final AgentManagementService agentManagementService;", "modifier": "private final", "type": "AgentManagementService", "declarator": "agentManagementService", "var_name": "agentManagementService"}, {"original_string": "private volatile Map<Tier, ResourceDimension> availableCapacity = Collections.emptyMap();", "modifier": "private volatile", "type": "Map<Tier, ResourceDimension>", "declarator": "availableCapacity = Collections.emptyMap()", "var_name": "availableCapacity"}], "methods": [{"identifier": "DefaultAvailableCapacityService", "parameters": "(CapacityManagementConfiguration configuration,\n                                           ServerInfoResolver serverInfoResolver,\n                                           AgentManagementService agentManagementService,\n                                           Registry registry)", "modifiers": "@Inject public", "return": "", "signature": " DefaultAvailableCapacityService(CapacityManagementConfiguration configuration,\n                                           ServerInfoResolver serverInfoResolver,\n                                           AgentManagementService agentManagementService,\n                                           Registry registry)", "full_signature": "@Inject public  DefaultAvailableCapacityService(CapacityManagementConfiguration configuration,\n                                           ServerInfoResolver serverInfoResolver,\n                                           AgentManagementService agentManagementService,\n                                           Registry registry)", "class_method_signature": "DefaultAvailableCapacityService.DefaultAvailableCapacityService(CapacityManagementConfiguration configuration,\n                                           ServerInfoResolver serverInfoResolver,\n                                           AgentManagementService agentManagementService,\n                                           Registry registry)", "testcase": false, "constructor": true}, {"identifier": "DefaultAvailableCapacityService", "parameters": "(CapacityManagementConfiguration configuration,\n                                    ServerInfoResolver serverInfoResolver,\n                                    AgentManagementService agentManagementService,\n                                    Registry registry,\n                                    Scheduler scheduler)", "modifiers": "@VisibleForTesting", "return": "", "signature": " DefaultAvailableCapacityService(CapacityManagementConfiguration configuration,\n                                    ServerInfoResolver serverInfoResolver,\n                                    AgentManagementService agentManagementService,\n                                    Registry registry,\n                                    Scheduler scheduler)", "full_signature": "@VisibleForTesting  DefaultAvailableCapacityService(CapacityManagementConfiguration configuration,\n                                    ServerInfoResolver serverInfoResolver,\n                                    AgentManagementService agentManagementService,\n                                    Registry registry,\n                                    Scheduler scheduler)", "class_method_signature": "DefaultAvailableCapacityService.DefaultAvailableCapacityService(CapacityManagementConfiguration configuration,\n                                    ServerInfoResolver serverInfoResolver,\n                                    AgentManagementService agentManagementService,\n                                    Registry registry,\n                                    Scheduler scheduler)", "testcase": false, "constructor": true}, {"identifier": "enterActiveMode", "parameters": "()", "modifiers": "@Activator public", "return": "void", "signature": "void enterActiveMode()", "full_signature": "@Activator public void enterActiveMode()", "class_method_signature": "DefaultAvailableCapacityService.enterActiveMode()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void shutdown()", "full_signature": "@PreDestroy public void shutdown()", "class_method_signature": "DefaultAvailableCapacityService.shutdown()", "testcase": false, "constructor": false}, {"identifier": "totalCapacityOf", "parameters": "(Tier tier)", "modifiers": "@Override public", "return": "Optional<ResourceDimension>", "signature": "Optional<ResourceDimension> totalCapacityOf(Tier tier)", "full_signature": "@Override public Optional<ResourceDimension> totalCapacityOf(Tier tier)", "class_method_signature": "DefaultAvailableCapacityService.totalCapacityOf(Tier tier)", "testcase": false, "constructor": false}, {"identifier": "scheduleUpdate", "parameters": "(long delayMs)", "modifiers": "private", "return": "void", "signature": "void scheduleUpdate(long delayMs)", "full_signature": "private void scheduleUpdate(long delayMs)", "class_method_signature": "DefaultAvailableCapacityService.scheduleUpdate(long delayMs)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void update()", "full_signature": "private void update()", "class_method_signature": "DefaultAvailableCapacityService.update()", "testcase": false, "constructor": false}, {"identifier": "resolveCapacityOf", "parameters": "(Tier tier)", "modifiers": "private", "return": "ResourceDimension", "signature": "ResourceDimension resolveCapacityOf(Tier tier)", "full_signature": "private ResourceDimension resolveCapacityOf(Tier tier)", "class_method_signature": "DefaultAvailableCapacityService.resolveCapacityOf(Tier tier)", "testcase": false, "constructor": false}, {"identifier": "toResourceDimension", "parameters": "(ServerInfo serverInfo, long maxSize)", "modifiers": "private", "return": "ResourceDimension", "signature": "ResourceDimension toResourceDimension(ServerInfo serverInfo, long maxSize)", "full_signature": "private ResourceDimension toResourceDimension(ServerInfo serverInfo, long maxSize)", "class_method_signature": "DefaultAvailableCapacityService.toResourceDimension(ServerInfo serverInfo, long maxSize)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/service/management/internal/DefaultAvailableCapacityService.java"}, "focal_method": {"identifier": "totalCapacityOf", "parameters": "(Tier tier)", "modifiers": "@Override public", "return": "Optional<ResourceDimension>", "body": "@Override\n    public Optional<ResourceDimension> totalCapacityOf(Tier tier) {\n        return Optional.ofNullable(availableCapacity.get(tier));\n    }", "signature": "Optional<ResourceDimension> totalCapacityOf(Tier tier)", "full_signature": "@Override public Optional<ResourceDimension> totalCapacityOf(Tier tier)", "class_method_signature": "DefaultAvailableCapacityService.totalCapacityOf(Tier tier)", "testcase": false, "constructor": false, "invocations": ["ofNullable", "get"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}