{"test_class": {"identifier": "SetImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "sqlitebuilder/src/test/java/com/nhaarman/sqlitebuilder/impl/SetImplTest.java"}, "test_case": {"identifier": "prependTo_withSingleColumn_prependsProperSql", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void prependTo_withSingleColumn_prependsProperSql() {\n    /* Given */\n    SetImpl set = new SetImpl(new String[] {\"a\"}, mock(SqlPart.class));\n    RawSqlBuilder builder = new RawSqlBuilderImpl();\n\n    /* When */\n    set.prependTo(builder);\n\n    /* Then */\n    assertThat(builder.toString(), is(\"SET a=?\"));\n  }", "signature": "void prependTo_withSingleColumn_prependsProperSql()", "full_signature": "@Test public void prependTo_withSingleColumn_prependsProperSql()", "class_method_signature": "SetImplTest.prependTo_withSingleColumn_prependsProperSql()", "testcase": true, "constructor": false, "invocations": ["mock", "prependTo", "assertThat", "toString", "is"]}, "focal_class": {"identifier": "SetImpl", "superclass": "extends BaseFinishedSqlPart", "interfaces": "implements Set", "fields": [{"original_string": "@NotNull\n  private final String[] mColumnNames;", "modifier": "@NotNull\n  private final", "type": "String[]", "declarator": "mColumnNames", "var_name": "mColumnNames"}, {"original_string": "@NotNull\n  private final SqlPart mPrevious;", "modifier": "@NotNull\n  private final", "type": "SqlPart", "declarator": "mPrevious", "var_name": "mPrevious"}], "methods": [{"identifier": "SetImpl", "parameters": "(@NotNull final String[] columnNames, @NotNull final SqlPart previous)", "modifiers": "", "return": "", "signature": " SetImpl(@NotNull final String[] columnNames, @NotNull final SqlPart previous)", "full_signature": "  SetImpl(@NotNull final String[] columnNames, @NotNull final SqlPart previous)", "class_method_signature": "SetImpl.SetImpl(@NotNull final String[] columnNames, @NotNull final SqlPart previous)", "testcase": false, "constructor": true}, {"identifier": "values", "parameters": "(@NotNull final Object... values)", "modifiers": "@NotNull @Override public", "return": "UpdateValues", "signature": "UpdateValues values(@NotNull final Object... values)", "full_signature": "@NotNull @Override public UpdateValues values(@NotNull final Object... values)", "class_method_signature": "SetImpl.values(@NotNull final Object... values)", "testcase": false, "constructor": false}, {"identifier": "prependTo", "parameters": "(@NotNull final RawSqlBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void prependTo(@NotNull final RawSqlBuilder builder)", "full_signature": "@Override public void prependTo(@NotNull final RawSqlBuilder builder)", "class_method_signature": "SetImpl.prependTo(@NotNull final RawSqlBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "SqlPart", "signature": "SqlPart previous()", "full_signature": "@Nullable @Override public SqlPart previous()", "class_method_signature": "SetImpl.previous()", "testcase": false, "constructor": false}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColumnCount()", "full_signature": "public int getColumnCount()", "class_method_signature": "SetImpl.getColumnCount()", "testcase": false, "constructor": false}], "file": "sqlitebuilder/src/main/java/com/nhaarman/sqlitebuilder/impl/SetImpl.java"}, "focal_method": {"identifier": "prependTo", "parameters": "(@NotNull final RawSqlBuilder builder)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void prependTo(@NotNull final RawSqlBuilder builder) {\n    for (int i = mColumnNames.length - 1; i >= 0; i--) {\n      builder.prepend(\"=?\").prepend(mColumnNames[i]);\n\n      if (i > 0) {\n        builder.prepend(',');\n      }\n    }\n\n    builder.prepend(\"SET \");\n  }", "signature": "void prependTo(@NotNull final RawSqlBuilder builder)", "full_signature": "@Override public void prependTo(@NotNull final RawSqlBuilder builder)", "class_method_signature": "SetImpl.prependTo(@NotNull final RawSqlBuilder builder)", "testcase": false, "constructor": false, "invocations": ["prepend", "prepend", "prepend", "prepend"]}, "repository": {"repo_id": 35126599, "url": "https://github.com/nhaarman/SQLiteBuilder", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 69, "size": 1040, "license": "licensed"}}