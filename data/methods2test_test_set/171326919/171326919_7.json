{"test_class": {"identifier": "WeatherServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "aula17-spliterator/src/test/java/org/isel/mpd/weather/WeatherServiceTest.java"}, "test_case": {"identifier": "testCollapseTemperatures", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCollapseTemperatures() {\n        WeatherService service = new WeatherService(new WeatherRestfullApi());\n        Stream<Location> locals = service.search(\"oporto\");\n        Stream<Integer> temps = locals\n            .skip(1)\n            .findFirst()\n            .get()\n            .getPast30daysWeather()\n            .map(WeatherInfo::getTempC);\n\n        temps = StreamUtil.collapse(temps);\n\n        String res = temps\n            .map(Object::toString)\n            .collect(Collectors.joining(\",\"));\n\n        String expected = \"16,13,14,12,11,14,19,16,18,15,14,17,21,19,14,17,19,21,22,20,22,23,21,24,25,21,20,18\";\n        assertEquals(expected, res);\n    }", "signature": "void testCollapseTemperatures()", "full_signature": "@Test public void testCollapseTemperatures()", "class_method_signature": "WeatherServiceTest.testCollapseTemperatures()", "testcase": true, "constructor": false, "invocations": ["search", "map", "getPast30daysWeather", "get", "findFirst", "skip", "collapse", "collect", "map", "joining", "assertEquals"]}, "focal_class": {"identifier": "WeatherService", "superclass": "", "interfaces": "", "fields": [{"original_string": "final WeatherApi api;", "modifier": "final", "type": "WeatherApi", "declarator": "api", "var_name": "api"}], "methods": [{"identifier": "WeatherService", "parameters": "(WeatherApi api)", "modifiers": "public", "return": "", "signature": " WeatherService(WeatherApi api)", "full_signature": "public  WeatherService(WeatherApi api)", "class_method_signature": "WeatherService.WeatherService(WeatherApi api)", "testcase": false, "constructor": true}, {"identifier": "WeatherService", "parameters": "()", "modifiers": "public", "return": "", "signature": " WeatherService()", "full_signature": "public  WeatherService()", "class_method_signature": "WeatherService.WeatherService()", "testcase": false, "constructor": true}, {"identifier": "search", "parameters": "(String query)", "modifiers": "public", "return": "Stream<Location>", "signature": "Stream<Location> search(String query)", "full_signature": "public Stream<Location> search(String query)", "class_method_signature": "WeatherService.search(String query)", "testcase": false, "constructor": false}, {"identifier": "toLocation", "parameters": "(LocationInfo l)", "modifiers": "private", "return": "Location", "signature": "Location toLocation(LocationInfo l)", "full_signature": "private Location toLocation(LocationInfo l)", "class_method_signature": "WeatherService.toLocation(LocationInfo l)", "testcase": false, "constructor": false}], "file": "aula17-spliterator/src/main/java/org/isel/mpd/weather/WeatherService.java"}, "focal_method": {"identifier": "search", "parameters": "(String query)", "modifiers": "public", "return": "Stream<Location>", "body": "public Stream<Location> search(String query) {\n        Stream<LocationInfo> locals = api.search(query);\n        return locals.map(this::toLocation);\n    }", "signature": "Stream<Location> search(String query)", "full_signature": "public Stream<Location> search(String query)", "class_method_signature": "WeatherService.search(String query)", "testcase": false, "constructor": false, "invocations": ["search", "map"]}, "repository": {"repo_id": 171326919, "url": "https://github.com/isel-leic-mpd/mpd-2019-i41n", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 13, "size": 404, "license": "licensed"}}