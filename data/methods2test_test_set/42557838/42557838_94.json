{"test_class": {"identifier": "RangeHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RangeHelper rangeHelper = new RangeHelper();", "modifier": "private", "type": "RangeHelper", "declarator": "rangeHelper = new RangeHelper()", "var_name": "rangeHelper"}], "file": "http/src/test/java/ro/polak/http/servlet/helper/RangeHelperTest.java"}, "test_case": {"identifier": "shouldComputeLength", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldComputeLength() {\n        assertThat(rangeHelper.getRangeLength(new Range(0, 0)), is(1L));\n        assertThat(rangeHelper.getRangeLength(new Range(0, 10)), is(11L));\n        assertThat(rangeHelper.getRangeLength(new Range(2, 3)), is(2L));\n        assertThat(rangeHelper.getRangeLength(new Range(11, 12)), is(2L));\n    }", "signature": "void shouldComputeLength()", "full_signature": "@Test public void shouldComputeLength()", "class_method_signature": "RangeHelperTest.shouldComputeLength()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getRangeLength", "is", "assertThat", "getRangeLength", "is", "assertThat", "getRangeLength", "is", "assertThat", "getRangeLength", "is"]}, "focal_class": {"identifier": "RangeHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getRangeLength", "parameters": "(final Range range)", "modifiers": "public", "return": "long", "signature": "long getRangeLength(final Range range)", "full_signature": "public long getRangeLength(final Range range)", "class_method_signature": "RangeHelper.getRangeLength(final Range range)", "testcase": false, "constructor": false}, {"identifier": "isRangeValid", "parameters": "(final Range range)", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeValid(final Range range)", "full_signature": "public boolean isRangeValid(final Range range)", "class_method_signature": "RangeHelper.isRangeValid(final Range range)", "testcase": false, "constructor": false}, {"identifier": "getTotalLength", "parameters": "(final List<Range> ranges)", "modifiers": "public", "return": "long", "signature": "long getTotalLength(final List<Range> ranges)", "full_signature": "public long getTotalLength(final List<Range> ranges)", "class_method_signature": "RangeHelper.getTotalLength(final List<Range> ranges)", "testcase": false, "constructor": false}, {"identifier": "isSatisfiable", "parameters": "(final Iterable<Range> ranges, final long streamLength)", "modifiers": "public", "return": "boolean", "signature": "boolean isSatisfiable(final Iterable<Range> ranges, final long streamLength)", "full_signature": "public boolean isSatisfiable(final Iterable<Range> ranges, final long streamLength)", "class_method_signature": "RangeHelper.isSatisfiable(final Iterable<Range> ranges, final long streamLength)", "testcase": false, "constructor": false}], "file": "http/src/main/java/ro/polak/http/servlet/helper/RangeHelper.java"}, "focal_method": {"identifier": "getRangeLength", "parameters": "(final Range range)", "modifiers": "public", "return": "long", "body": "public long getRangeLength(final Range range) {\n        return range.getTo() - range.getFrom() + 1;\n    }", "signature": "long getRangeLength(final Range range)", "full_signature": "public long getRangeLength(final Range range)", "class_method_signature": "RangeHelper.getRangeLength(final Range range)", "testcase": false, "constructor": false, "invocations": ["getTo", "getFrom"]}, "repository": {"repo_id": 42557838, "url": "https://github.com/piotrpolak/android-http-server", "language": "Java", "is_fork": false, "fork_count": 41, "stargazer_count": 136, "size": 2000, "license": "licensed"}}