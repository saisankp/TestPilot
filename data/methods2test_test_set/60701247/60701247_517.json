{"test_class": {"identifier": "StringValuePropertyTest", "superclass": "", "interfaces": "", "fields": [], "file": "observable/testSrc/com/android/tools/idea/observable/core/StringValuePropertyTest.java"}, "test_case": {"identifier": "testClearValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testClearValue() {\n    StringValueProperty stringValue = new StringValueProperty(\"Dummy text\");\n    stringValue.clear();\n    assertThat(stringValue.get()).isEqualTo(\"\");\n  }", "signature": "void testClearValue()", "full_signature": "@Test public void testClearValue()", "class_method_signature": "StringValuePropertyTest.testClearValue()", "testcase": true, "constructor": false, "invocations": ["clear", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "StringValueProperty", "superclass": "extends StringProperty", "interfaces": "", "fields": [{"original_string": "private String myValue;", "modifier": "private", "type": "String", "declarator": "myValue", "var_name": "myValue"}], "methods": [{"identifier": "StringValueProperty", "parameters": "(@NotNull String value)", "modifiers": "public", "return": "", "signature": " StringValueProperty(@NotNull String value)", "full_signature": "public  StringValueProperty(@NotNull String value)", "class_method_signature": "StringValueProperty.StringValueProperty(@NotNull String value)", "testcase": false, "constructor": true}, {"identifier": "StringValueProperty", "parameters": "()", "modifiers": "public", "return": "", "signature": " StringValueProperty()", "full_signature": "public  StringValueProperty()", "class_method_signature": "StringValueProperty.StringValueProperty()", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "String", "signature": "String get()", "full_signature": "@NotNull @Override public String get()", "class_method_signature": "StringValueProperty.get()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "ObservableBool", "signature": "ObservableBool isEmpty()", "full_signature": "@NotNull @Override public ObservableBool isEmpty()", "class_method_signature": "StringValueProperty.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "trim", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "ObservableString", "signature": "ObservableString trim()", "full_signature": "@NotNull @Override public ObservableString trim()", "class_method_signature": "StringValueProperty.trim()", "testcase": false, "constructor": false}, {"identifier": "setDirectly", "parameters": "(@NotNull String value)", "modifiers": "@Override protected", "return": "void", "signature": "void setDirectly(@NotNull String value)", "full_signature": "@Override protected void setDirectly(@NotNull String value)", "class_method_signature": "StringValueProperty.setDirectly(@NotNull String value)", "testcase": false, "constructor": false}], "file": "observable/src/com/android/tools/idea/observable/core/StringValueProperty.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "String", "body": "@NotNull\n  @Override\n  public String get() {\n    return myValue;\n  }", "signature": "String get()", "full_signature": "@NotNull @Override public String get()", "class_method_signature": "StringValueProperty.get()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}