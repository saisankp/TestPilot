{"test_class": {"identifier": "ImmutableJsonFieldTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private JsonValue jsonValueMock;", "modifier": "@Mock\n    private", "type": "JsonValue", "declarator": "jsonValueMock", "var_name": "jsonValueMock"}, {"original_string": "@Mock\n    private JsonKey jsonKeyMock;", "modifier": "@Mock\n    private", "type": "JsonKey", "declarator": "jsonKeyMock", "var_name": "jsonKeyMock"}, {"original_string": "@Mock\n    private JsonFieldDefinition fieldDefinitionMock;", "modifier": "@Mock\n    private", "type": "JsonFieldDefinition", "declarator": "fieldDefinitionMock", "var_name": "fieldDefinitionMock"}, {"original_string": "@Mock\n    private JsonFieldMarker schemaVersionMarkerMock;", "modifier": "@Mock\n    private", "type": "JsonFieldMarker", "declarator": "schemaVersionMarkerMock", "var_name": "schemaVersionMarkerMock"}], "file": "json/src/test/java/org/eclipse/ditto/json/ImmutableJsonFieldTest.java"}, "test_case": {"identifier": "tryToCreateInstanceWithNullValue", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void tryToCreateInstanceWithNullValue() {\n        ImmutableJsonField.newInstance(jsonKeyMock, null);\n    }", "signature": "void tryToCreateInstanceWithNullValue()", "full_signature": "@Test(expected = NullPointerException.class) public void tryToCreateInstanceWithNullValue()", "class_method_signature": "ImmutableJsonFieldTest.tryToCreateInstanceWithNullValue()", "testcase": true, "constructor": false, "invocations": ["newInstance"]}, "focal_class": {"identifier": "ImmutableJsonField", "superclass": "", "interfaces": "implements JsonField", "fields": [{"original_string": "private final JsonKey key;", "modifier": "private final", "type": "JsonKey", "declarator": "key", "var_name": "key"}, {"original_string": "private final JsonValue value;", "modifier": "private final", "type": "JsonValue", "declarator": "value", "var_name": "value"}, {"original_string": "@Nullable private final JsonFieldDefinition definition;", "modifier": "@Nullable private final", "type": "JsonFieldDefinition", "declarator": "definition", "var_name": "definition"}, {"original_string": "@Nullable private String stringRepresentation;", "modifier": "@Nullable private", "type": "String", "declarator": "stringRepresentation", "var_name": "stringRepresentation"}], "methods": [{"identifier": "ImmutableJsonField", "parameters": "(final JsonKey theKey, final JsonValue theValue,\n            @Nullable final JsonFieldDefinition theDefinition)", "modifiers": "private", "return": "", "signature": " ImmutableJsonField(final JsonKey theKey, final JsonValue theValue,\n            @Nullable final JsonFieldDefinition theDefinition)", "full_signature": "private  ImmutableJsonField(final JsonKey theKey, final JsonValue theValue,\n            @Nullable final JsonFieldDefinition theDefinition)", "class_method_signature": "ImmutableJsonField.ImmutableJsonField(final JsonKey theKey, final JsonValue theValue,\n            @Nullable final JsonFieldDefinition theDefinition)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(final JsonKey key, final JsonValue value)", "modifiers": "public static", "return": "ImmutableJsonField", "signature": "ImmutableJsonField newInstance(final JsonKey key, final JsonValue value)", "full_signature": "public static ImmutableJsonField newInstance(final JsonKey key, final JsonValue value)", "class_method_signature": "ImmutableJsonField.newInstance(final JsonKey key, final JsonValue value)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(final JsonKey key, final JsonValue value,\n            @Nullable final JsonFieldDefinition definition)", "modifiers": "public static", "return": "ImmutableJsonField", "signature": "ImmutableJsonField newInstance(final JsonKey key, final JsonValue value,\n            @Nullable final JsonFieldDefinition definition)", "full_signature": "public static ImmutableJsonField newInstance(final JsonKey key, final JsonValue value,\n            @Nullable final JsonFieldDefinition definition)", "class_method_signature": "ImmutableJsonField.newInstance(final JsonKey key, final JsonValue value,\n            @Nullable final JsonFieldDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "getKeyName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKeyName()", "full_signature": "@Override public String getKeyName()", "class_method_signature": "ImmutableJsonField.getKeyName()", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "@Override public", "return": "JsonKey", "signature": "JsonKey getKey()", "full_signature": "@Override public JsonKey getKey()", "class_method_signature": "ImmutableJsonField.getKey()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "JsonValue", "signature": "JsonValue getValue()", "full_signature": "@Override public JsonValue getValue()", "class_method_signature": "ImmutableJsonField.getValue()", "testcase": false, "constructor": false}, {"identifier": "getDefinition", "parameters": "()", "modifiers": "@Override public", "return": "Optional<JsonFieldDefinition>", "signature": "Optional<JsonFieldDefinition> getDefinition()", "full_signature": "@Override public Optional<JsonFieldDefinition> getDefinition()", "class_method_signature": "ImmutableJsonField.getDefinition()", "testcase": false, "constructor": false}, {"identifier": "isMarkedAs", "parameters": "(final JsonFieldMarker fieldMarker, final JsonFieldMarker... furtherFieldMarkers)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isMarkedAs(final JsonFieldMarker fieldMarker, final JsonFieldMarker... furtherFieldMarkers)", "full_signature": "@Override public boolean isMarkedAs(final JsonFieldMarker fieldMarker, final JsonFieldMarker... furtherFieldMarkers)", "class_method_signature": "ImmutableJsonField.isMarkedAs(final JsonFieldMarker fieldMarker, final JsonFieldMarker... furtherFieldMarkers)", "testcase": false, "constructor": false}, {"identifier": "writeKeyAndValue", "parameters": "(final SerializationContext serializationContext)", "modifiers": "@Override public", "return": "void", "signature": "void writeKeyAndValue(final SerializationContext serializationContext)", "full_signature": "@Override public void writeKeyAndValue(final SerializationContext serializationContext)", "class_method_signature": "ImmutableJsonField.writeKeyAndValue(final SerializationContext serializationContext)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@SuppressWarnings({\"squid:MethodCyclomaticComplexity\", \"squid:S1067\"}) @Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@SuppressWarnings({\"squid:MethodCyclomaticComplexity\", \"squid:S1067\"}) @Override public boolean equals(final Object o)", "class_method_signature": "ImmutableJsonField.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableJsonField.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableJsonField.toString()", "testcase": false, "constructor": false}, {"identifier": "getEscapedKeyName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getEscapedKeyName()", "full_signature": "private String getEscapedKeyName()", "class_method_signature": "ImmutableJsonField.getEscapedKeyName()", "testcase": false, "constructor": false}], "file": "json/src/main/java/org/eclipse/ditto/json/ImmutableJsonField.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(final JsonKey key, final JsonValue value)", "modifiers": "public static", "return": "ImmutableJsonField", "body": "public static ImmutableJsonField newInstance(final JsonKey key, final JsonValue value) {\n        return newInstance(key, value, null);\n    }", "signature": "ImmutableJsonField newInstance(final JsonKey key, final JsonValue value)", "full_signature": "public static ImmutableJsonField newInstance(final JsonKey key, final JsonValue value)", "class_method_signature": "ImmutableJsonField.newInstance(final JsonKey key, final JsonValue value)", "testcase": false, "constructor": false, "invocations": ["newInstance"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}