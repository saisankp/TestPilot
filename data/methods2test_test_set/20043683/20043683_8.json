{"test_class": {"identifier": "JaxbLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final File TEST_XML = new File(\"src/test/resources/test.xml\");", "modifier": "private static final", "type": "File", "declarator": "TEST_XML = new File(\"src/test/resources/test.xml\")", "var_name": "TEST_XML"}], "file": "snomed-coder-common/src/test/java/org/t3as/metamap/JaxbLoaderTest.java"}, "test_case": {"identifier": "failToLoad", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void failToLoad() {\n        //noinspection OverlyBroadCatchBlock\n        try {\n            JaxbLoader.loadXml(new File(\"noSuchFile\"));\n            fail(\"We should have had an exception before now.\");\n        }\n        catch (final FileNotFoundException ignored) {\n            // do nothing\n        }\n        catch (final Throwable t) {\n            //noinspection CallToPrintStackTrace\n            t.printStackTrace();\n            fail(\"There should be no other throwables.\");\n        }\n    }", "signature": "void failToLoad()", "full_signature": "@Test public void failToLoad()", "class_method_signature": "JaxbLoaderTest.failToLoad()", "testcase": true, "constructor": false, "invocations": ["loadXml", "fail", "printStackTrace", "fail"]}, "focal_class": {"identifier": "JaxbLoader", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "loadXml", "parameters": "(final File xmlFile)", "modifiers": "public static", "return": "MMOs", "signature": "MMOs loadXml(final File xmlFile)", "full_signature": "public static MMOs loadXml(final File xmlFile)", "class_method_signature": "JaxbLoader.loadXml(final File xmlFile)", "testcase": false, "constructor": false}], "file": "snomed-coder-common/src/main/java/org/t3as/metamap/JaxbLoader.java"}, "focal_method": {"identifier": "loadXml", "parameters": "(final File xmlFile)", "modifiers": "public static", "return": "MMOs", "body": "public static MMOs loadXml(final File xmlFile)\n            throws JAXBException, SAXException, ParserConfigurationException, FileNotFoundException {\n        final JAXBContext jaxbContext = JAXBContext.newInstance(MMOs.class);\n        final Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();\n\n        // avoid getting the DTD (was mainly for when demoing without a network, but should maybe be kept?)\n        final SAXParserFactory spf = SAXParserFactory.newInstance();\n        spf.setFeature(\"http://apache.org/xml/features/validation/schema\", false);\n        spf.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);\n        final XMLReader xmlReader = spf.newSAXParser().getXMLReader();\n        final InputSource inputSource = new InputSource(new FileReader(xmlFile));\n        final SAXSource source = new SAXSource(xmlReader, inputSource);\n\n        return (MMOs) jaxbUnmarshaller.unmarshal(source);\n    }", "signature": "MMOs loadXml(final File xmlFile)", "full_signature": "public static MMOs loadXml(final File xmlFile)", "class_method_signature": "JaxbLoader.loadXml(final File xmlFile)", "testcase": false, "constructor": false, "invocations": ["newInstance", "createUnmarshaller", "newInstance", "setFeature", "setFeature", "getXMLReader", "newSAXParser", "unmarshal"]}, "repository": {"repo_id": 20043683, "url": "https://github.com/NICTA/t3as-snomedct-service", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 1240, "license": "licensed"}}