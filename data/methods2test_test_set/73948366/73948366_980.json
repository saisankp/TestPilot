{"test_class": {"identifier": "DataStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PrivateKey pkey;", "modifier": "private", "type": "PrivateKey", "declarator": "pkey", "var_name": "pkey"}, {"original_string": "private String userDomain;", "modifier": "private", "type": "String", "declarator": "userDomain", "var_name": "userDomain"}, {"original_string": "private static final String ZTS_DATA_STORE_PATH = \"/tmp/zts_server_unit_tests/zts_root\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_DATA_STORE_PATH = \"/tmp/zts_server_unit_tests/zts_root\"", "var_name": "ZTS_DATA_STORE_PATH"}, {"original_string": "private static final String ZTS_Y64_CERT0 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FDMXRHU1ZDQTh3bDVldzVZNzZXajJySkFVRApZYW5FSmZLbUFseDVjUS84a\"\n            + \"EtFVWZTU2dwWHIzQ3pkaDFhMjZkbGI3bW1LMjlxbVhKWGg2dW1XOUF5ZlRPS1ZvCis2QVNsb1ZVM2F2dnVmbE\"\n            + \"dVT0VnMmpzbWRha1IyNEtjTGpBdTZRclVlNDE3bEczdDhxU1BJR2pTNUMrQ3NKVXcKaDA0aEh4NWYrUEV3eFY\"\n            + \"0cmJRSURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_Y64_CERT0 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FDMXRHU1ZDQTh3bDVldzVZNzZXajJySkFVRApZYW5FSmZLbUFseDVjUS84a\"\n            + \"EtFVWZTU2dwWHIzQ3pkaDFhMjZkbGI3bW1LMjlxbVhKWGg2dW1XOUF5ZlRPS1ZvCis2QVNsb1ZVM2F2dnVmbE\"\n            + \"dVT0VnMmpzbWRha1IyNEtjTGpBdTZRclVlNDE3bEczdDhxU1BJR2pTNUMrQ3NKVXcKaDA0aEh4NWYrUEV3eFY\"\n            + \"0cmJRSURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "ZTS_Y64_CERT0"}, {"original_string": "private static final String ZTS_PEM_CERT0 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC1tGSVCA8wl5ew5Y76Wj2rJAUD\\n\"\n            + \"YanEJfKmAlx5cQ/8hKEUfSSgpXr3Czdh1a26dlb7mmK29qmXJXh6umW9AyfTOKVo\\n\"\n            + \"+6ASloVU3avvuflGUOEg2jsmdakR24KcLjAu6QrUe417lG3t8qSPIGjS5C+CsJUw\\n\"\n            + \"h04hHx5f+PEwxV4rbQIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PEM_CERT0 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC1tGSVCA8wl5ew5Y76Wj2rJAUD\\n\"\n            + \"YanEJfKmAlx5cQ/8hKEUfSSgpXr3Czdh1a26dlb7mmK29qmXJXh6umW9AyfTOKVo\\n\"\n            + \"+6ASloVU3avvuflGUOEg2jsmdakR24KcLjAu6QrUe417lG3t8qSPIGjS5C+CsJUw\\n\"\n            + \"h04hHx5f+PEwxV4rbQIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\"", "var_name": "ZTS_PEM_CERT0"}, {"original_string": "private static final String ZTS_Y64_CERT1 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FETUhWaFRNZldJQWdvTEdhbkx2QkNNRytRdAoySU9pcml2cGRLSFNPSkpsYX\"\n            + \"VKRUNlWlY1MTVmWG91SjhRb09IczA4UGlsdXdjeHF5dmhJSlduNWFrVEhGSWh5CkdDNkdtUTUzbG9WSEtTVE1WO\"\n            + \"DM1M0FjNkhydzYxbmJZMVQ2TnA2bjdxdXI4a1UwR2tmdk5hWFZrK09LNVBaankKbkxzZ251UjlCeFZndlM4ZjJR\"\n            + \"SURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_Y64_CERT1 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FETUhWaFRNZldJQWdvTEdhbkx2QkNNRytRdAoySU9pcml2cGRLSFNPSkpsYX\"\n            + \"VKRUNlWlY1MTVmWG91SjhRb09IczA4UGlsdXdjeHF5dmhJSlduNWFrVEhGSWh5CkdDNkdtUTUzbG9WSEtTVE1WO\"\n            + \"DM1M0FjNkhydzYxbmJZMVQ2TnA2bjdxdXI4a1UwR2tmdk5hWFZrK09LNVBaankKbkxzZ251UjlCeFZndlM4ZjJR\"\n            + \"SURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "ZTS_Y64_CERT1"}, {"original_string": "private static final String ZTS_PEM_CERT1 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMHVhTMfWIAgoLGanLvBCMG+Qt\\n\"\n            + \"2IOirivpdKHSOJJlauJECeZV515fXouJ8QoOHs08PiluwcxqyvhIJWn5akTHFIhy\\n\"\n            + \"GC6GmQ53loVHKSTMV8353Ac6Hrw61nbY1T6Np6n7qur8kU0GkfvNaXVk+OK5PZjy\\n\"\n            + \"nLsgnuR9BxVgvS8f2QIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PEM_CERT1 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMHVhTMfWIAgoLGanLvBCMG+Qt\\n\"\n            + \"2IOirivpdKHSOJJlauJECeZV515fXouJ8QoOHs08PiluwcxqyvhIJWn5akTHFIhy\\n\"\n            + \"GC6GmQ53loVHKSTMV8353Ac6Hrw61nbY1T6Np6n7qur8kU0GkfvNaXVk+OK5PZjy\\n\"\n            + \"nLsgnuR9BxVgvS8f2QIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\"", "var_name": "ZTS_PEM_CERT1"}, {"original_string": "private static final String ZTS_Y64_CERT2 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FEbmZsZVZ4d293aitRWStjQi8rbWs5YXZYZgpHUWVpTTdOMlMwby9LV3FWK2h\"\n            + \"GVWtDZkExMWxEYVJoZUY0alFhSzVaM2pPUE9nbklOZE5hd3VXQ081NUxKdVJRCmI1R0ZSbzhPNjNJNzA3M3ZDZ0V\"\n            + \"KdmNST09SdjJDYWhQbnBKbjc3bkhQdlV2Szl0M3JyRURhdi8vanA0UDN5REMKNEVNdHBScmduUXBXNmpJSWlRSUR\"\n            + \"BUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_Y64_CERT2 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FEbmZsZVZ4d293aitRWStjQi8rbWs5YXZYZgpHUWVpTTdOMlMwby9LV3FWK2h\"\n            + \"GVWtDZkExMWxEYVJoZUY0alFhSzVaM2pPUE9nbklOZE5hd3VXQ081NUxKdVJRCmI1R0ZSbzhPNjNJNzA3M3ZDZ0V\"\n            + \"KdmNST09SdjJDYWhQbnBKbjc3bkhQdlV2Szl0M3JyRURhdi8vanA0UDN5REMKNEVNdHBScmduUXBXNmpJSWlRSUR\"\n            + \"BUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "ZTS_Y64_CERT2"}, {"original_string": "private static final String ZTS_PEM_CERT2 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDnfleVxwowj+QY+cB/+mk9avXf\\n\"\n            + \"GQeiM7N2S0o/KWqV+hFUkCfA11lDaRheF4jQaK5Z3jOPOgnINdNawuWCO55LJuRQ\\n\"\n            + \"b5GFRo8O63I7073vCgEJvcROORv2CahPnpJn77nHPvUvK9t3rrEDav//jp4P3yDC\\n\"\n            + \"4EMtpRrgnQpW6jIIiQIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PEM_CERT2 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDnfleVxwowj+QY+cB/+mk9avXf\\n\"\n            + \"GQeiM7N2S0o/KWqV+hFUkCfA11lDaRheF4jQaK5Z3jOPOgnINdNawuWCO55LJuRQ\\n\"\n            + \"b5GFRo8O63I7073vCgEJvcROORv2CahPnpJn77nHPvUvK9t3rrEDav//jp4P3yDC\\n\"\n            + \"4EMtpRrgnQpW6jIIiQIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\"", "var_name": "ZTS_PEM_CERT2"}, {"original_string": "private static final String ZTS_Y64_CERT3 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FETWRqSmUwY01wSGR4ZEJKTDcvR2poNTNVUAp5WTdVQ2VlYnZUa2M2S1ZmR0\"\n            + \"RnVVlrMUhtaWJ5U21lbnZOYitkNkhXQ1YySGVicUptN1krL2VuaFNkcTR3QTJrCnFtdmFHY09rV1R2cUU2a2J1\"\n            + \"MG5LemdUK21jck1sOVpqTHdBQXZPS1hTRi82MTJxQ0tlSElRd3ZtWlB1RkJJTjEKUnFteWgwT0k1aHN5VS9nYj\"\n            + \"Z3SURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_Y64_CERT3 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FETWRqSmUwY01wSGR4ZEJKTDcvR2poNTNVUAp5WTdVQ2VlYnZUa2M2S1ZmR0\"\n            + \"RnVVlrMUhtaWJ5U21lbnZOYitkNkhXQ1YySGVicUptN1krL2VuaFNkcTR3QTJrCnFtdmFHY09rV1R2cUU2a2J1\"\n            + \"MG5LemdUK21jck1sOVpqTHdBQXZPS1hTRi82MTJxQ0tlSElRd3ZtWlB1RkJJTjEKUnFteWgwT0k1aHN5VS9nYj\"\n            + \"Z3SURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "ZTS_Y64_CERT3"}, {"original_string": "private static final String ZTS_PEM_CERT3 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMdjJe0cMpHdxdBJL7/Gjh53UP\\n\"\n            + \"yY7UCeebvTkc6KVfGDgUYk1HmibySmenvNb+d6HWCV2HebqJm7Y+/enhSdq4wA2k\\n\"\n            + \"qmvaGcOkWTvqE6kbu0nKzgT+mcrMl9ZjLwAAvOKXSF/612qCKeHIQwvmZPuFBIN1\\n\"\n            + \"Rqmyh0OI5hsyU/gb6wIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PEM_CERT3 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMdjJe0cMpHdxdBJL7/Gjh53UP\\n\"\n            + \"yY7UCeebvTkc6KVfGDgUYk1HmibySmenvNb+d6HWCV2HebqJm7Y+/enhSdq4wA2k\\n\"\n            + \"qmvaGcOkWTvqE6kbu0nKzgT+mcrMl9ZjLwAAvOKXSF/612qCKeHIQwvmZPuFBIN1\\n\"\n            + \"Rqmyh0OI5hsyU/gb6wIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\"", "var_name": "ZTS_PEM_CERT3"}, {"original_string": "private static final String ROLE_POSTFIX = \":role.\";", "modifier": "private static final", "type": "String", "declarator": "ROLE_POSTFIX = \":role.\"", "var_name": "ROLE_POSTFIX"}], "file": "servers/zts/src/test/java/com/yahoo/athenz/zts/store/DataStoreTest.java"}, "test_case": {"identifier": "testRemoveHostEntrieNullMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveHostEntrieNullMap() {\n        \n        ChangeLogStore clogStore = new MockZMSFileChangeLogStore(\"/tmp/zts_server_unit_tests/zts_root\",\n                pkey, \"0\");\n        DataStore store = new DataStore(clogStore, null);\n        List<String> services = new ArrayList<>();\n        services.add(\"coretech.storage\");\n        services.add(\"coretech.backup\");\n        store.hostCache.put(\"host1\", services);\n        \n        services = new ArrayList<>();\n        services.add(\"coretech.storage\");\n        services.add(\"coretech.backup\");\n        store.hostCache.put(\"host2\", services);\n        \n        store.removeHostEntries(null);\n        assertEquals(store.hostCache.size(), 2);\n        List<String> retServices = store.hostCache.get(\"host1\");\n        assertEquals(retServices.size(), 2);\n        assertTrue(retServices.contains(\"coretech.storage\"));\n        assertTrue(retServices.contains(\"coretech.backup\"));\n        \n        retServices = store.hostCache.get(\"host2\");\n        assertEquals(retServices.size(), 2);\n        assertTrue(retServices.contains(\"coretech.storage\"));\n        assertTrue(retServices.contains(\"coretech.backup\"));\n    }", "signature": "void testRemoveHostEntrieNullMap()", "full_signature": "@Test public void testRemoveHostEntrieNullMap()", "class_method_signature": "DataStoreTest.testRemoveHostEntrieNullMap()", "testcase": true, "constructor": false, "invocations": ["add", "add", "put", "add", "add", "put", "removeHostEntries", "assertEquals", "size", "get", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains", "get", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "DataStore", "superclass": "", "interfaces": "implements DataCacheProvider, RolesProvider", "fields": [{"original_string": "ChangeLogStore changeLogStore;", "modifier": "", "type": "ChangeLogStore", "declarator": "changeLogStore", "var_name": "changeLogStore"}, {"original_string": "private CloudStore cloudStore;", "modifier": "private", "type": "CloudStore", "declarator": "cloudStore", "var_name": "cloudStore"}, {"original_string": "private final Cache<String, DataCache> cacheStore;", "modifier": "private final", "type": "Cache<String, DataCache>", "declarator": "cacheStore", "var_name": "cacheStore"}, {"original_string": "final Cache<String, PublicKey> zmsPublicKeyCache;", "modifier": "final", "type": "Cache<String, PublicKey>", "declarator": "zmsPublicKeyCache", "var_name": "zmsPublicKeyCache"}, {"original_string": "final Cache<String, List<GroupMember>> groupMemberCache;", "modifier": "final", "type": "Cache<String, List<GroupMember>>", "declarator": "groupMemberCache", "var_name": "groupMemberCache"}, {"original_string": "final Cache<String, List<GroupMember>> principalGroupCache;", "modifier": "final", "type": "Cache<String, List<GroupMember>>", "declarator": "principalGroupCache", "var_name": "principalGroupCache"}, {"original_string": "final Map<String, List<String>> hostCache;", "modifier": "final", "type": "Map<String, List<String>>", "declarator": "hostCache", "var_name": "hostCache"}, {"original_string": "final Map<String, String> publicKeyCache;", "modifier": "final", "type": "Map<String, String>", "declarator": "publicKeyCache", "var_name": "publicKeyCache"}, {"original_string": "final JWKList ztsJWKList;", "modifier": "final", "type": "JWKList", "declarator": "ztsJWKList", "var_name": "ztsJWKList"}, {"original_string": "final JWKList ztsJWKListStrictRFC;", "modifier": "final", "type": "JWKList", "declarator": "ztsJWKListStrictRFC", "var_name": "ztsJWKListStrictRFC"}, {"original_string": "long updDomainRefreshTime;", "modifier": "", "type": "long", "declarator": "updDomainRefreshTime", "var_name": "updDomainRefreshTime"}, {"original_string": "long delDomainRefreshTime;", "modifier": "", "type": "long", "declarator": "delDomainRefreshTime", "var_name": "delDomainRefreshTime"}, {"original_string": "long checkDomainRefreshTime;", "modifier": "", "type": "long", "declarator": "checkDomainRefreshTime", "var_name": "checkDomainRefreshTime"}, {"original_string": "long lastDeleteRunTime;", "modifier": "", "type": "long", "declarator": "lastDeleteRunTime", "var_name": "lastDeleteRunTime"}, {"original_string": "long lastCheckRunTime;", "modifier": "", "type": "long", "declarator": "lastCheckRunTime", "var_name": "lastCheckRunTime"}, {"original_string": "private static final String ROLE_POSTFIX = \":role.\";", "modifier": "private static final", "type": "String", "declarator": "ROLE_POSTFIX = \":role.\"", "var_name": "ROLE_POSTFIX"}, {"original_string": "private final ReentrantReadWriteLock hostRWLock = new ReentrantReadWriteLock();", "modifier": "private final", "type": "ReentrantReadWriteLock", "declarator": "hostRWLock = new ReentrantReadWriteLock()", "var_name": "hostRWLock"}, {"original_string": "private final Lock hostRLock = hostRWLock.readLock();", "modifier": "private final", "type": "Lock", "declarator": "hostRLock = hostRWLock.readLock()", "var_name": "hostRLock"}, {"original_string": "private final Lock hostWLock = hostRWLock.writeLock();", "modifier": "private final", "type": "Lock", "declarator": "hostWLock = hostRWLock.writeLock()", "var_name": "hostWLock"}, {"original_string": "private final ReentrantReadWriteLock pkeyRWLock = new ReentrantReadWriteLock();", "modifier": "private final", "type": "ReentrantReadWriteLock", "declarator": "pkeyRWLock = new ReentrantReadWriteLock()", "var_name": "pkeyRWLock"}, {"original_string": "private final Lock pkeyRLock = pkeyRWLock.readLock();", "modifier": "private final", "type": "Lock", "declarator": "pkeyRLock = pkeyRWLock.readLock()", "var_name": "pkeyRLock"}, {"original_string": "private final Lock pkeyWLock = pkeyRWLock.writeLock();", "modifier": "private final", "type": "Lock", "declarator": "pkeyWLock = pkeyRWLock.writeLock()", "var_name": "pkeyWLock"}, {"original_string": "private static final String ZTS_PROP_DOMAIN_UPDATE_TIMEOUT = \"athenz.zts.zms_domain_update_timeout\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PROP_DOMAIN_UPDATE_TIMEOUT = \"athenz.zts.zms_domain_update_timeout\"", "var_name": "ZTS_PROP_DOMAIN_UPDATE_TIMEOUT"}, {"original_string": "private static final String ZTS_PROP_DOMAIN_DELETE_TIMEOUT = \"athenz.zts.zms_domain_delete_timeout\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PROP_DOMAIN_DELETE_TIMEOUT = \"athenz.zts.zms_domain_delete_timeout\"", "var_name": "ZTS_PROP_DOMAIN_DELETE_TIMEOUT"}, {"original_string": "private static final String ZTS_PROP_DOMAIN_CHECK_TIMEOUT = \"athenz.zts.zms_domain_check_timeout\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PROP_DOMAIN_CHECK_TIMEOUT = \"athenz.zts.zms_domain_check_timeout\"", "var_name": "ZTS_PROP_DOMAIN_CHECK_TIMEOUT"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DataStore.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DataStore.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "DataStore", "parameters": "(ChangeLogStore clogStore, CloudStore cloudStore)", "modifiers": "public", "return": "", "signature": " DataStore(ChangeLogStore clogStore, CloudStore cloudStore)", "full_signature": "public  DataStore(ChangeLogStore clogStore, CloudStore cloudStore)", "class_method_signature": "DataStore.DataStore(ChangeLogStore clogStore, CloudStore cloudStore)", "testcase": false, "constructor": true}, {"identifier": "generateServiceKeyName", "parameters": "(String domain, String service, String keyId)", "modifiers": "", "return": "String", "signature": "String generateServiceKeyName(String domain, String service, String keyId)", "full_signature": " String generateServiceKeyName(String domain, String service, String keyId)", "class_method_signature": "DataStore.generateServiceKeyName(String domain, String service, String keyId)", "testcase": false, "constructor": false}, {"identifier": "getZtsJWKList", "parameters": "(Boolean rfc)", "modifiers": "public", "return": "JWKList", "signature": "JWKList getZtsJWKList(Boolean rfc)", "full_signature": "public JWKList getZtsJWKList(Boolean rfc)", "class_method_signature": "DataStore.getZtsJWKList(Boolean rfc)", "testcase": false, "constructor": false}, {"identifier": "loadAthenzPublicKeys", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean loadAthenzPublicKeys()", "full_signature": " boolean loadAthenzPublicKeys()", "class_method_signature": "DataStore.loadAthenzPublicKeys()", "testcase": false, "constructor": false}, {"identifier": "getCurveName", "parameters": "(org.bouncycastle.jce.spec.ECParameterSpec ecParameterSpec, boolean rfc)", "modifiers": "@SuppressWarnings(\"rawtypes\")", "return": "String", "signature": "String getCurveName(org.bouncycastle.jce.spec.ECParameterSpec ecParameterSpec, boolean rfc)", "full_signature": "@SuppressWarnings(\"rawtypes\") String getCurveName(org.bouncycastle.jce.spec.ECParameterSpec ecParameterSpec, boolean rfc)", "class_method_signature": "DataStore.getCurveName(org.bouncycastle.jce.spec.ECParameterSpec ecParameterSpec, boolean rfc)", "testcase": false, "constructor": false}, {"identifier": "getJWK", "parameters": "(final String pemKey, final String keyId, boolean rfc)", "modifiers": "", "return": "JWK", "signature": "JWK getJWK(final String pemKey, final String keyId, boolean rfc)", "full_signature": " JWK getJWK(final String pemKey, final String keyId, boolean rfc)", "class_method_signature": "DataStore.getJWK(final String pemKey, final String keyId, boolean rfc)", "testcase": false, "constructor": false}, {"identifier": "toIntegerBytes", "parameters": "(final BigInteger bigInt, boolean rfc)", "modifiers": "", "return": "byte[]", "signature": "byte[] toIntegerBytes(final BigInteger bigInt, boolean rfc)", "full_signature": " byte[] toIntegerBytes(final BigInteger bigInt, boolean rfc)", "class_method_signature": "DataStore.toIntegerBytes(final BigInteger bigInt, boolean rfc)", "testcase": false, "constructor": false}, {"identifier": "rfcEllipticCurveName", "parameters": "(final String curveName)", "modifiers": "", "return": "String", "signature": "String rfcEllipticCurveName(final String curveName)", "full_signature": " String rfcEllipticCurveName(final String curveName)", "class_method_signature": "DataStore.rfcEllipticCurveName(final String curveName)", "testcase": false, "constructor": false}, {"identifier": "processLocalDomains", "parameters": "(List<String> localDomainList)", "modifiers": "", "return": "int", "signature": "int processLocalDomains(List<String> localDomainList)", "full_signature": " int processLocalDomains(List<String> localDomainList)", "class_method_signature": "DataStore.processLocalDomains(List<String> localDomainList)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "DataStore.init()", "testcase": false, "constructor": false}, {"identifier": "processLocalDomain", "parameters": "(String domainName)", "modifiers": "", "return": "boolean", "signature": "boolean processLocalDomain(String domainName)", "full_signature": " boolean processLocalDomain(String domainName)", "class_method_signature": "DataStore.processLocalDomain(String domainName)", "testcase": false, "constructor": false}, {"identifier": "validateSignedDomain", "parameters": "(SignedDomain signedDomain)", "modifiers": "", "return": "boolean", "signature": "boolean validateSignedDomain(SignedDomain signedDomain)", "full_signature": " boolean validateSignedDomain(SignedDomain signedDomain)", "class_method_signature": "DataStore.validateSignedDomain(SignedDomain signedDomain)", "testcase": false, "constructor": false}, {"identifier": "processDomainRoles", "parameters": "(DomainData domainData, DataCache domainCache)", "modifiers": "", "return": "void", "signature": "void processDomainRoles(DomainData domainData, DataCache domainCache)", "full_signature": " void processDomainRoles(DomainData domainData, DataCache domainCache)", "class_method_signature": "DataStore.processDomainRoles(DomainData domainData, DataCache domainCache)", "testcase": false, "constructor": false}, {"identifier": "processDomainGroups", "parameters": "(DomainData domainData)", "modifiers": "", "return": "void", "signature": "void processDomainGroups(DomainData domainData)", "full_signature": " void processDomainGroups(DomainData domainData)", "class_method_signature": "DataStore.processDomainGroups(DomainData domainData)", "testcase": false, "constructor": false}, {"identifier": "processGroup", "parameters": "(Group group)", "modifiers": "", "return": "void", "signature": "void processGroup(Group group)", "full_signature": " void processGroup(Group group)", "class_method_signature": "DataStore.processGroup(Group group)", "testcase": false, "constructor": false}, {"identifier": "processGroupDeletedMembers", "parameters": "(final String groupName, List<GroupMember> deletedMembers)", "modifiers": "", "return": "void", "signature": "void processGroupDeletedMembers(final String groupName, List<GroupMember> deletedMembers)", "full_signature": " void processGroupDeletedMembers(final String groupName, List<GroupMember> deletedMembers)", "class_method_signature": "DataStore.processGroupDeletedMembers(final String groupName, List<GroupMember> deletedMembers)", "testcase": false, "constructor": false}, {"identifier": "processGroupDelete", "parameters": "(Group group)", "modifiers": "", "return": "void", "signature": "void processGroupDelete(Group group)", "full_signature": " void processGroupDelete(Group group)", "class_method_signature": "DataStore.processGroupDelete(Group group)", "testcase": false, "constructor": false}, {"identifier": "processDomainPolicies", "parameters": "(DomainData domainData, DataCache domainCache)", "modifiers": "", "return": "void", "signature": "void processDomainPolicies(DomainData domainData, DataCache domainCache)", "full_signature": " void processDomainPolicies(DomainData domainData, DataCache domainCache)", "class_method_signature": "DataStore.processDomainPolicies(DomainData domainData, DataCache domainCache)", "testcase": false, "constructor": false}, {"identifier": "processDomainServiceIdentities", "parameters": "(DomainData domainData, DataCache domainCache)", "modifiers": "", "return": "void", "signature": "void processDomainServiceIdentities(DomainData domainData, DataCache domainCache)", "full_signature": " void processDomainServiceIdentities(DomainData domainData, DataCache domainCache)", "class_method_signature": "DataStore.processDomainServiceIdentities(DomainData domainData, DataCache domainCache)", "testcase": false, "constructor": false}, {"identifier": "processDomain", "parameters": "(SignedDomain signedDomain, boolean saveInStore)", "modifiers": "public", "return": "boolean", "signature": "boolean processDomain(SignedDomain signedDomain, boolean saveInStore)", "full_signature": "public boolean processDomain(SignedDomain signedDomain, boolean saveInStore)", "class_method_signature": "DataStore.processDomain(SignedDomain signedDomain, boolean saveInStore)", "testcase": false, "constructor": false}, {"identifier": "validDomainListResponse", "parameters": "(Set<String> zmsDomainList)", "modifiers": "", "return": "boolean", "signature": "boolean validDomainListResponse(Set<String> zmsDomainList)", "full_signature": " boolean validDomainListResponse(Set<String> zmsDomainList)", "class_method_signature": "DataStore.validDomainListResponse(Set<String> zmsDomainList)", "testcase": false, "constructor": false}, {"identifier": "processDomainDeletes", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean processDomainDeletes()", "full_signature": "public boolean processDomainDeletes()", "class_method_signature": "DataStore.processDomainDeletes()", "testcase": false, "constructor": false}, {"identifier": "processDomainChecks", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void processDomainChecks()", "full_signature": "public void processDomainChecks()", "class_method_signature": "DataStore.processDomainChecks()", "testcase": false, "constructor": false}, {"identifier": "deleteDomain", "parameters": "(final String domainName)", "modifiers": "", "return": "void", "signature": "void deleteDomain(final String domainName)", "full_signature": " void deleteDomain(final String domainName)", "class_method_signature": "DataStore.deleteDomain(final String domainName)", "testcase": false, "constructor": false}, {"identifier": "processDeleteDomainGroups", "parameters": "(final String domainName)", "modifiers": "", "return": "void", "signature": "void processDeleteDomainGroups(final String domainName)", "full_signature": " void processDeleteDomainGroups(final String domainName)", "class_method_signature": "DataStore.processDeleteDomainGroups(final String domainName)", "testcase": false, "constructor": false}, {"identifier": "processSignedDomains", "parameters": "(SignedDomains signedDomains)", "modifiers": "", "return": "boolean", "signature": "boolean processSignedDomains(SignedDomains signedDomains)", "full_signature": " boolean processSignedDomains(SignedDomains signedDomains)", "class_method_signature": "DataStore.processSignedDomains(SignedDomains signedDomains)", "testcase": false, "constructor": false}, {"identifier": "processDomainUpdates", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean processDomainUpdates()", "full_signature": "public boolean processDomainUpdates()", "class_method_signature": "DataStore.processDomainUpdates()", "testcase": false, "constructor": false}, {"identifier": "getDomainData", "parameters": "(String name)", "modifiers": "public", "return": "DomainData", "signature": "DomainData getDomainData(String name)", "full_signature": "public DomainData getDomainData(String name)", "class_method_signature": "DataStore.getDomainData(String name)", "testcase": false, "constructor": false}, {"identifier": "addHostEntries", "parameters": "(Map<String, Set<String>> hostMap)", "modifiers": "", "return": "void", "signature": "void addHostEntries(Map<String, Set<String>> hostMap)", "full_signature": " void addHostEntries(Map<String, Set<String>> hostMap)", "class_method_signature": "DataStore.addHostEntries(Map<String, Set<String>> hostMap)", "testcase": false, "constructor": false}, {"identifier": "removeHostEntries", "parameters": "(Map<String, Set<String>> hostMap)", "modifiers": "", "return": "void", "signature": "void removeHostEntries(Map<String, Set<String>> hostMap)", "full_signature": " void removeHostEntries(Map<String, Set<String>> hostMap)", "class_method_signature": "DataStore.removeHostEntries(Map<String, Set<String>> hostMap)", "testcase": false, "constructor": false}, {"identifier": "addPublicKeys", "parameters": "(Map<String, String> publicKeyMap)", "modifiers": "", "return": "void", "signature": "void addPublicKeys(Map<String, String> publicKeyMap)", "full_signature": " void addPublicKeys(Map<String, String> publicKeyMap)", "class_method_signature": "DataStore.addPublicKeys(Map<String, String> publicKeyMap)", "testcase": false, "constructor": false}, {"identifier": "removePublicKeys", "parameters": "(Map<String, String> publicKeyMap)", "modifiers": "", "return": "void", "signature": "void removePublicKeys(Map<String, String> publicKeyMap)", "full_signature": " void removePublicKeys(Map<String, String> publicKeyMap)", "class_method_signature": "DataStore.removePublicKeys(Map<String, String> publicKeyMap)", "testcase": false, "constructor": false}, {"identifier": "addDomainToCache", "parameters": "(String name, DataCache dataCache)", "modifiers": "public", "return": "void", "signature": "void addDomainToCache(String name, DataCache dataCache)", "full_signature": "public void addDomainToCache(String name, DataCache dataCache)", "class_method_signature": "DataStore.addDomainToCache(String name, DataCache dataCache)", "testcase": false, "constructor": false}, {"identifier": "deleteDomainFromCache", "parameters": "(String name)", "modifiers": "", "return": "void", "signature": "void deleteDomainFromCache(String name)", "full_signature": " void deleteDomainFromCache(String name)", "class_method_signature": "DataStore.deleteDomainFromCache(String name)", "testcase": false, "constructor": false}, {"identifier": "processStandardMembership", "parameters": "(Set<MemberRole> memberRoles, String rolePrefix,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "modifiers": "", "return": "void", "signature": "void processStandardMembership(Set<MemberRole> memberRoles, String rolePrefix,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "full_signature": " void processStandardMembership(Set<MemberRole> memberRoles, String rolePrefix,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "class_method_signature": "DataStore.processStandardMembership(Set<MemberRole> memberRoles, String rolePrefix,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "testcase": false, "constructor": false}, {"identifier": "processGroupMembership", "parameters": "(DataCache data, final String identity, final String rolePrefix,\n                                String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "modifiers": "", "return": "void", "signature": "void processGroupMembership(DataCache data, final String identity, final String rolePrefix,\n                                String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "full_signature": " void processGroupMembership(DataCache data, final String identity, final String rolePrefix,\n                                String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "class_method_signature": "DataStore.processGroupMembership(DataCache data, final String identity, final String rolePrefix,\n                                String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "testcase": false, "constructor": false}, {"identifier": "processTrustMembership", "parameters": "(DataCache data, String identity, String rolePrefix,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "modifiers": "", "return": "void", "signature": "void processTrustMembership(DataCache data, String identity, String rolePrefix,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "full_signature": " void processTrustMembership(DataCache data, String identity, String rolePrefix,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "class_method_signature": "DataStore.processTrustMembership(DataCache data, String identity, String rolePrefix,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "testcase": false, "constructor": false}, {"identifier": "getDataCache", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "DataCache", "signature": "DataCache getDataCache(String domainName)", "full_signature": "@Override public DataCache getDataCache(String domainName)", "class_method_signature": "DataStore.getDataCache(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getGroupMembers", "parameters": "(final String groupName)", "modifiers": "public", "return": "List<GroupMember>", "signature": "List<GroupMember> getGroupMembers(final String groupName)", "full_signature": "public List<GroupMember> getGroupMembers(final String groupName)", "class_method_signature": "DataStore.getGroupMembers(final String groupName)", "testcase": false, "constructor": false}, {"identifier": "getAccessibleRoles", "parameters": "(DataCache data, String domainName, String identity,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "modifiers": "public", "return": "void", "signature": "void getAccessibleRoles(DataCache data, String domainName, String identity,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "full_signature": "public void getAccessibleRoles(DataCache data, String domainName, String identity,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "class_method_signature": "DataStore.getAccessibleRoles(DataCache data, String domainName, String identity,\n            String[] requestedRoleList, Set<String> accessibleRoles, boolean keepFullName)", "testcase": false, "constructor": false}, {"identifier": "checkRoleSet", "parameters": "(String role, Set<String> checkSet)", "modifiers": "", "return": "boolean", "signature": "boolean checkRoleSet(String role, Set<String> checkSet)", "full_signature": " boolean checkRoleSet(String role, Set<String> checkSet)", "class_method_signature": "DataStore.checkRoleSet(String role, Set<String> checkSet)", "testcase": false, "constructor": false}, {"identifier": "addRoleToList", "parameters": "(String role, String rolePrefix, String[] requestedRoleList,\n            Set<String> accessibleRoles, boolean keepFullName)", "modifiers": "", "return": "void", "signature": "void addRoleToList(String role, String rolePrefix, String[] requestedRoleList,\n            Set<String> accessibleRoles, boolean keepFullName)", "full_signature": " void addRoleToList(String role, String rolePrefix, String[] requestedRoleList,\n            Set<String> accessibleRoles, boolean keepFullName)", "class_method_signature": "DataStore.addRoleToList(String role, String rolePrefix, String[] requestedRoleList,\n            Set<String> accessibleRoles, boolean keepFullName)", "testcase": false, "constructor": false}, {"identifier": "roleMatchInSet", "parameters": "(String role, Set<MemberRole> memberRoles)", "modifiers": "", "return": "boolean", "signature": "boolean roleMatchInSet(String role, Set<MemberRole> memberRoles)", "full_signature": " boolean roleMatchInSet(String role, Set<MemberRole> memberRoles)", "class_method_signature": "DataStore.roleMatchInSet(String role, Set<MemberRole> memberRoles)", "testcase": false, "constructor": false}, {"identifier": "processSingleTrustedDomainRole", "parameters": "(String roleName, String rolePrefix, String[] requestedRoleList,\n            Set<MemberRole> memberRoles, Set<String> accessibleRoles, boolean keepFullName)", "modifiers": "", "return": "void", "signature": "void processSingleTrustedDomainRole(String roleName, String rolePrefix, String[] requestedRoleList,\n            Set<MemberRole> memberRoles, Set<String> accessibleRoles, boolean keepFullName)", "full_signature": " void processSingleTrustedDomainRole(String roleName, String rolePrefix, String[] requestedRoleList,\n            Set<MemberRole> memberRoles, Set<String> accessibleRoles, boolean keepFullName)", "class_method_signature": "DataStore.processSingleTrustedDomainRole(String roleName, String rolePrefix, String[] requestedRoleList,\n            Set<MemberRole> memberRoles, Set<String> accessibleRoles, boolean keepFullName)", "testcase": false, "constructor": false}, {"identifier": "processTrustedDomain", "parameters": "(DataCache trustData, String identity, String rolePrefix,\n            String[] requestedRoleList, Set<String> trustedResources, Set<String> accessibleRoles,\n            boolean keepFullName)", "modifiers": "", "return": "void", "signature": "void processTrustedDomain(DataCache trustData, String identity, String rolePrefix,\n            String[] requestedRoleList, Set<String> trustedResources, Set<String> accessibleRoles,\n            boolean keepFullName)", "full_signature": " void processTrustedDomain(DataCache trustData, String identity, String rolePrefix,\n            String[] requestedRoleList, Set<String> trustedResources, Set<String> accessibleRoles,\n            boolean keepFullName)", "class_method_signature": "DataStore.processTrustedDomain(DataCache trustData, String identity, String rolePrefix,\n            String[] requestedRoleList, Set<String> trustedResources, Set<String> accessibleRoles,\n            boolean keepFullName)", "testcase": false, "constructor": false}, {"identifier": "getPublicKey", "parameters": "(String domain, String service, String keyId)", "modifiers": "public", "return": "String", "signature": "String getPublicKey(String domain, String service, String keyId)", "full_signature": "public String getPublicKey(String domain, String service, String keyId)", "class_method_signature": "DataStore.getPublicKey(String domain, String service, String keyId)", "testcase": false, "constructor": false}, {"identifier": "getHostServices", "parameters": "(String host)", "modifiers": "public", "return": "HostServices", "signature": "HostServices getHostServices(String host)", "full_signature": "public HostServices getHostServices(String host)", "class_method_signature": "DataStore.getHostServices(String host)", "testcase": false, "constructor": false}, {"identifier": "getCloudStore", "parameters": "()", "modifiers": "public", "return": "CloudStore", "signature": "CloudStore getCloudStore()", "full_signature": "public CloudStore getCloudStore()", "class_method_signature": "DataStore.getCloudStore()", "testcase": false, "constructor": false}, {"identifier": "setCloudStore", "parameters": "(CloudStore cloudStore)", "modifiers": "public", "return": "void", "signature": "void setCloudStore(CloudStore cloudStore)", "full_signature": "public void setCloudStore(CloudStore cloudStore)", "class_method_signature": "DataStore.setCloudStore(CloudStore cloudStore)", "testcase": false, "constructor": false}, {"identifier": "getCacheStore", "parameters": "()", "modifiers": "public", "return": "Cache<String, DataCache>", "signature": "Cache<String, DataCache> getCacheStore()", "full_signature": "public Cache<String, DataCache> getCacheStore()", "class_method_signature": "DataStore.getCacheStore()", "testcase": false, "constructor": false}, {"identifier": "getPublicKeyCache", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getPublicKeyCache()", "full_signature": "public Map<String, String> getPublicKeyCache()", "class_method_signature": "DataStore.getPublicKeyCache()", "testcase": false, "constructor": false}, {"identifier": "getRolesByDomain", "parameters": "(String domain)", "modifiers": "@Override public", "return": "List<Role>", "signature": "List<Role> getRolesByDomain(String domain)", "full_signature": "@Override public List<Role> getRolesByDomain(String domain)", "class_method_signature": "DataStore.getRolesByDomain(String domain)", "testcase": false, "constructor": false}], "file": "servers/zts/src/main/java/com/yahoo/athenz/zts/store/DataStore.java"}, "focal_method": {"identifier": "removeHostEntries", "parameters": "(Map<String, Set<String>> hostMap)", "modifiers": "", "return": "void", "body": "void removeHostEntries(Map<String, Set<String>> hostMap) {\n\n        if (hostMap == null || hostMap.isEmpty()) {\n            return;\n        }\n        \n        for (Map.Entry<String, Set<String>> entry : hostMap.entrySet()) {\n            List<String> services = hostCache.get(entry.getKey());\n            if (services != null) {\n                services.removeAll(entry.getValue());\n            }\n        }\n    }", "signature": "void removeHostEntries(Map<String, Set<String>> hostMap)", "full_signature": " void removeHostEntries(Map<String, Set<String>> hostMap)", "class_method_signature": "DataStore.removeHostEntries(Map<String, Set<String>> hostMap)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "entrySet", "get", "getKey", "removeAll", "getValue"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}