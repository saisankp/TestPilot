{"test_class": {"identifier": "PatternedStringBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "rice-middleware/client-contrib/src/test/java/org/kuali/rice/krad/util/PatternedStringBuilderTest.java"}, "test_case": {"identifier": "testSprintf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSprintf() {\n        double pi = Math.PI;\n        PatternedStringBuilder patterenedStringBuilder = new PatternedStringBuilder(\"pi = %5.3f\");\n        String expectedVal = patterenedStringBuilder.sprintf(pi);\n        assertEquals(\"pi = 3.142\", expectedVal);\n        patterenedStringBuilder.setPattern(\"%4$2s %3$2s %2$2s %1$2s\");\n        assertEquals(\" z  y  x  w\", patterenedStringBuilder.sprintf(\"w\", \"x\", \"y\", \"z\"));\n        patterenedStringBuilder.setPattern(\"\");\n        assertEquals(\"\", patterenedStringBuilder.sprintf(\"somethingElse\"));\n        // This basically replicates tests done via jdk to test java.util.Formatter.java\n    }", "signature": "void testSprintf()", "full_signature": "@Test public void testSprintf()", "class_method_signature": "PatternedStringBuilderTest.testSprintf()", "testcase": true, "constructor": false, "invocations": ["sprintf", "assertEquals", "setPattern", "assertEquals", "sprintf", "setPattern", "assertEquals", "sprintf"]}, "focal_class": {"identifier": "PatternedStringBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String _pattern;", "modifier": "private", "type": "String", "declarator": "_pattern", "var_name": "_pattern"}], "methods": [{"identifier": "PatternedStringBuilder", "parameters": "(String pattern)", "modifiers": "public", "return": "", "signature": " PatternedStringBuilder(String pattern)", "full_signature": "public  PatternedStringBuilder(String pattern)", "class_method_signature": "PatternedStringBuilder.PatternedStringBuilder(String pattern)", "testcase": false, "constructor": true}, {"identifier": "setPattern", "parameters": "(String pattern)", "modifiers": "public", "return": "void", "signature": "void setPattern(String pattern)", "full_signature": "public void setPattern(String pattern)", "class_method_signature": "PatternedStringBuilder.setPattern(String pattern)", "testcase": false, "constructor": false}, {"identifier": "getPattern", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPattern()", "full_signature": "public String getPattern()", "class_method_signature": "PatternedStringBuilder.getPattern()", "testcase": false, "constructor": false}, {"identifier": "sprintf", "parameters": "(Object... args)", "modifiers": "public", "return": "String", "signature": "String sprintf(Object... args)", "full_signature": "public String sprintf(Object... args)", "class_method_signature": "PatternedStringBuilder.sprintf(Object... args)", "testcase": false, "constructor": false}], "file": "rice-middleware/client-contrib/src/main/java/org/kuali/rice/krad/util/PatternedStringBuilder.java"}, "focal_method": {"identifier": "sprintf", "parameters": "(Object... args)", "modifiers": "public", "return": "String", "body": "public String sprintf(Object... args) {\n        ByteArrayOutputStream retval = new ByteArrayOutputStream();\n\n        new PrintStream(retval).printf(getPattern(), args);\n\n        return retval.toString();\n    }", "signature": "String sprintf(Object... args)", "full_signature": "public String sprintf(Object... args)", "class_method_signature": "PatternedStringBuilder.sprintf(Object... args)", "testcase": false, "constructor": false, "invocations": ["printf", "getPattern", "toString"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}