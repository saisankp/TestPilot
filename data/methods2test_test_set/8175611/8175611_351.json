{"test_class": {"identifier": "SingleArgConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@SuppressFBWarnings(value = \"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\", justification = \"Mockito rule needs no further configuration\")\n    @Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@SuppressFBWarnings(value = \"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\", justification = \"Mockito rule needs no further configuration\")\n    @Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@InjectMocks\n    private SingleArgConverter underTest;", "modifier": "@InjectMocks\n    private", "type": "SingleArgConverter", "declarator": "underTest", "var_name": "underTest"}], "file": "core/src/test/java/com/tngtech/junit/dataprovider/convert/SingleArgConverterTest.java"}, "test_case": {"identifier": "testConvertShouldWrapInputIntoArryAndReturnItIfPreconditionsMet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertShouldWrapInputIntoArryAndReturnItIfPreconditionsMet() {\n        // Given:\n        Object data = \"4\";\n        Class<?>[] parameterTypes = new Class<?>[] { String.class };\n\n        // When:\n        Object[] result = underTest.convert(data, false, parameterTypes);\n\n        // Then:\n        assertThat(result).containsExactly(\"4\");\n    }", "signature": "void testConvertShouldWrapInputIntoArryAndReturnItIfPreconditionsMet()", "full_signature": "@Test public void testConvertShouldWrapInputIntoArryAndReturnItIfPreconditionsMet()", "class_method_signature": "SingleArgConverterTest.testConvertShouldWrapInputIntoArryAndReturnItIfPreconditionsMet()", "testcase": true, "constructor": false, "invocations": ["convert", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "SingleArgConverter", "superclass": "extends AbstractObjectConverter<Object>", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(Object data, boolean isVarargs, Class<?>[] parameterTypes)", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] convert(Object data, boolean isVarargs, Class<?>[] parameterTypes)", "full_signature": "@Override public Object[] convert(Object data, boolean isVarargs, Class<?>[] parameterTypes)", "class_method_signature": "SingleArgConverter.convert(Object data, boolean isVarargs, Class<?>[] parameterTypes)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/tngtech/junit/dataprovider/convert/SingleArgConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(Object data, boolean isVarargs, Class<?>[] parameterTypes)", "modifiers": "@Override public", "return": "Object[]", "body": "@Override\n    public Object[] convert(Object data, boolean isVarargs, Class<?>[] parameterTypes) {\n        checkArgument(parameterTypes.length >= 1,\n                \"Object[] dataprovider must at least have a single argument for the dataprovider but found no parameters\");\n        checkArgument(!isVarargs, \"Object[] dataprovider does not support varargs\");\n\n        Object[] result = new Object[] { data };\n        checkIfArgumentsMatchParameterTypes(result, parameterTypes);\n        return result;\n    }", "signature": "Object[] convert(Object data, boolean isVarargs, Class<?>[] parameterTypes)", "full_signature": "@Override public Object[] convert(Object data, boolean isVarargs, Class<?>[] parameterTypes)", "class_method_signature": "SingleArgConverter.convert(Object data, boolean isVarargs, Class<?>[] parameterTypes)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "checkArgument", "checkIfArgumentsMatchParameterTypes"]}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}