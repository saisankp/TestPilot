{"test_class": {"identifier": "QualifiedRecommendationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] FILENAME1 = {'f', 'o', 'o'};", "modifier": "private static final", "type": "byte[]", "declarator": "FILENAME1 = {'f', 'o', 'o'}", "var_name": "FILENAME1"}, {"original_string": "private static final byte[] FILENAME2 = {'b', 'a', 'r'};", "modifier": "private static final", "type": "byte[]", "declarator": "FILENAME2 = {'b', 'a', 'r'}", "var_name": "FILENAME2"}, {"original_string": "private static final MinimalZipEntry ENTRY1 = new MinimalZipEntry(0, 1, 2, 3, FILENAME1, true, 0);", "modifier": "private static final", "type": "MinimalZipEntry", "declarator": "ENTRY1 = new MinimalZipEntry(0, 1, 2, 3, FILENAME1, true, 0)", "var_name": "ENTRY1"}, {"original_string": "private static final MinimalZipEntry ENTRY2 = new MinimalZipEntry(1, 2, 3, 4, FILENAME2, true, 0);", "modifier": "private static final", "type": "MinimalZipEntry", "declarator": "ENTRY2 = new MinimalZipEntry(1, 2, 3, 4, FILENAME2, true, 0)", "var_name": "ENTRY2"}, {"original_string": "private static final QualifiedRecommendation DEFAULT_QUALIFIED_RECOMMENDATION =\n      new QualifiedRecommendation(\n          ENTRY1,\n          ENTRY2,\n          Recommendation.UNCOMPRESS_BOTH,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED);", "modifier": "private static final", "type": "QualifiedRecommendation", "declarator": "DEFAULT_QUALIFIED_RECOMMENDATION =\n      new QualifiedRecommendation(\n          ENTRY1,\n          ENTRY2,\n          Recommendation.UNCOMPRESS_BOTH,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED)", "var_name": "DEFAULT_QUALIFIED_RECOMMENDATION"}, {"original_string": "private static final QualifiedRecommendation CLONED_DEFAULT_QUALIFIED_RECOMMENDATION =\n      new QualifiedRecommendation(\n          ENTRY1,\n          ENTRY2,\n          Recommendation.UNCOMPRESS_BOTH,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED);", "modifier": "private static final", "type": "QualifiedRecommendation", "declarator": "CLONED_DEFAULT_QUALIFIED_RECOMMENDATION =\n      new QualifiedRecommendation(\n          ENTRY1,\n          ENTRY2,\n          Recommendation.UNCOMPRESS_BOTH,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED)", "var_name": "CLONED_DEFAULT_QUALIFIED_RECOMMENDATION"}, {"original_string": "private static final QualifiedRecommendation ALTERED_ENTRY1 =\n      new QualifiedRecommendation(\n          ENTRY2,\n          ENTRY2,\n          Recommendation.UNCOMPRESS_BOTH,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED);", "modifier": "private static final", "type": "QualifiedRecommendation", "declarator": "ALTERED_ENTRY1 =\n      new QualifiedRecommendation(\n          ENTRY2,\n          ENTRY2,\n          Recommendation.UNCOMPRESS_BOTH,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED)", "var_name": "ALTERED_ENTRY1"}, {"original_string": "private static final QualifiedRecommendation ALTERED_ENTRY2 =\n      new QualifiedRecommendation(\n          ENTRY1,\n          ENTRY1,\n          Recommendation.UNCOMPRESS_BOTH,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED);", "modifier": "private static final", "type": "QualifiedRecommendation", "declarator": "ALTERED_ENTRY2 =\n      new QualifiedRecommendation(\n          ENTRY1,\n          ENTRY1,\n          Recommendation.UNCOMPRESS_BOTH,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED)", "var_name": "ALTERED_ENTRY2"}, {"original_string": "private static final QualifiedRecommendation ALTERED_RECOMMENDATION =\n      new QualifiedRecommendation(\n          ENTRY1,\n          ENTRY2,\n          Recommendation.UNCOMPRESS_NEITHER,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED);", "modifier": "private static final", "type": "QualifiedRecommendation", "declarator": "ALTERED_RECOMMENDATION =\n      new QualifiedRecommendation(\n          ENTRY1,\n          ENTRY2,\n          Recommendation.UNCOMPRESS_NEITHER,\n          RecommendationReason.COMPRESSED_BYTES_CHANGED)", "var_name": "ALTERED_RECOMMENDATION"}, {"original_string": "private static final QualifiedRecommendation ALTERED_REASON =\n      new QualifiedRecommendation(\n          ENTRY1, ENTRY2, Recommendation.UNCOMPRESS_BOTH, RecommendationReason.UNSUITABLE);", "modifier": "private static final", "type": "QualifiedRecommendation", "declarator": "ALTERED_REASON =\n      new QualifiedRecommendation(\n          ENTRY1, ENTRY2, Recommendation.UNCOMPRESS_BOTH, RecommendationReason.UNSUITABLE)", "var_name": "ALTERED_REASON"}, {"original_string": "private static final List<QualifiedRecommendation> ALL_MUTATIONS =\n      Collections.unmodifiableList(\n          Arrays.asList(ALTERED_ENTRY1, ALTERED_ENTRY2, ALTERED_RECOMMENDATION, ALTERED_REASON));", "modifier": "private static final", "type": "List<QualifiedRecommendation>", "declarator": "ALL_MUTATIONS =\n      Collections.unmodifiableList(\n          Arrays.asList(ALTERED_ENTRY1, ALTERED_ENTRY2, ALTERED_RECOMMENDATION, ALTERED_REASON))", "var_name": "ALL_MUTATIONS"}], "file": "feya/libraries/archive_diff/diff.generator/src/test/java/com/google/archivepatcher/generator/QualifiedRecommendationTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"EqualsIncompatibleType\") // For ErrorProne public", "return": "void", "body": "@Test\n  @SuppressWarnings(\"EqualsIncompatibleType\") // For ErrorProne\n  public void testEquals() {\n    Assert.assertEquals(DEFAULT_QUALIFIED_RECOMMENDATION, DEFAULT_QUALIFIED_RECOMMENDATION);\n    Assert.assertEquals(DEFAULT_QUALIFIED_RECOMMENDATION, CLONED_DEFAULT_QUALIFIED_RECOMMENDATION);\n    Assert.assertNotSame(DEFAULT_QUALIFIED_RECOMMENDATION, CLONED_DEFAULT_QUALIFIED_RECOMMENDATION);\n    for (QualifiedRecommendation mutation : ALL_MUTATIONS) {\n      Assert.assertNotEquals(DEFAULT_QUALIFIED_RECOMMENDATION, mutation);\n    }\n    Assert.assertFalse(DEFAULT_QUALIFIED_RECOMMENDATION.equals(null));\n    Assert.assertFalse(DEFAULT_QUALIFIED_RECOMMENDATION.equals(\"foo\"));\n  }", "signature": "void testEquals()", "full_signature": "@Test @SuppressWarnings(\"EqualsIncompatibleType\") // For ErrorProne public void testEquals()", "class_method_signature": "QualifiedRecommendationTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "assertNotSame", "assertNotEquals", "assertFalse", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "QualifiedRecommendation", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MinimalZipEntry oldEntry;", "modifier": "private final", "type": "MinimalZipEntry", "declarator": "oldEntry", "var_name": "oldEntry"}, {"original_string": "private final MinimalZipEntry newEntry;", "modifier": "private final", "type": "MinimalZipEntry", "declarator": "newEntry", "var_name": "newEntry"}, {"original_string": "private final Recommendation recommendation;", "modifier": "private final", "type": "Recommendation", "declarator": "recommendation", "var_name": "recommendation"}, {"original_string": "private final RecommendationReason reason;", "modifier": "private final", "type": "RecommendationReason", "declarator": "reason", "var_name": "reason"}], "methods": [{"identifier": "QualifiedRecommendation", "parameters": "(\n      MinimalZipEntry oldEntry,\n      MinimalZipEntry newEntry,\n      Recommendation recommendation,\n      RecommendationReason reason)", "modifiers": "public", "return": "", "signature": " QualifiedRecommendation(\n      MinimalZipEntry oldEntry,\n      MinimalZipEntry newEntry,\n      Recommendation recommendation,\n      RecommendationReason reason)", "full_signature": "public  QualifiedRecommendation(\n      MinimalZipEntry oldEntry,\n      MinimalZipEntry newEntry,\n      Recommendation recommendation,\n      RecommendationReason reason)", "class_method_signature": "QualifiedRecommendation.QualifiedRecommendation(\n      MinimalZipEntry oldEntry,\n      MinimalZipEntry newEntry,\n      Recommendation recommendation,\n      RecommendationReason reason)", "testcase": false, "constructor": true}, {"identifier": "getOldEntry", "parameters": "()", "modifiers": "public", "return": "MinimalZipEntry", "signature": "MinimalZipEntry getOldEntry()", "full_signature": "public MinimalZipEntry getOldEntry()", "class_method_signature": "QualifiedRecommendation.getOldEntry()", "testcase": false, "constructor": false}, {"identifier": "getNewEntry", "parameters": "()", "modifiers": "public", "return": "MinimalZipEntry", "signature": "MinimalZipEntry getNewEntry()", "full_signature": "public MinimalZipEntry getNewEntry()", "class_method_signature": "QualifiedRecommendation.getNewEntry()", "testcase": false, "constructor": false}, {"identifier": "getRecommendation", "parameters": "()", "modifiers": "public", "return": "Recommendation", "signature": "Recommendation getRecommendation()", "full_signature": "public Recommendation getRecommendation()", "class_method_signature": "QualifiedRecommendation.getRecommendation()", "testcase": false, "constructor": false}, {"identifier": "getReason", "parameters": "()", "modifiers": "public", "return": "RecommendationReason", "signature": "RecommendationReason getReason()", "full_signature": "public RecommendationReason getReason()", "class_method_signature": "QualifiedRecommendation.getReason()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "QualifiedRecommendation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "QualifiedRecommendation.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "QualifiedRecommendation.toString()", "testcase": false, "constructor": false}], "file": "feya/libraries/archive_diff/diff.generator/src/main/java/com/google/archivepatcher/generator/QualifiedRecommendation.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    QualifiedRecommendation other = (QualifiedRecommendation) obj;\n    if (newEntry == null) {\n      if (other.newEntry != null) {\n        return false;\n      }\n    } else if (!newEntry.equals(other.newEntry)) {\n      return false;\n    }\n    if (oldEntry == null) {\n      if (other.oldEntry != null) {\n        return false;\n      }\n    } else if (!oldEntry.equals(other.oldEntry)) {\n      return false;\n    }\n    if (reason != other.reason) {\n      return false;\n    }\n    if (recommendation != other.recommendation) {\n      return false;\n    }\n    return true;\n  }", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "QualifiedRecommendation.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals"]}, "repository": {"repo_id": 20126854, "url": "https://github.com/kaedea/Feya", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 12, "size": 7798, "license": "licensed"}}