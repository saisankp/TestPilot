{"test_class": {"identifier": "SvgDrawVisitorTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/depict/src/test/java/org/openscience/cdk/depict/SvgDrawVisitorTest.java"}, "test_case": {"identifier": "empty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void empty() {\n        String empty = new SvgDrawVisitor(50, 50, Depiction.UNITS_MM).toString();\n        assertThat(empty, is(\"<?xml version='1.0' encoding='UTF-8'?>\\n\"\n                             + \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\"\n                             + \"<svg version='1.2' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='50.0mm' height='50.0mm' viewBox='0 0 50.0 50.0'>\\n\"\n                             + \"  <desc>Generated by the Chemistry Development Kit (http://github.com/cdk)</desc>\\n\"\n                             + \"</svg>\\n\"));\n    }", "signature": "void empty()", "full_signature": "@Test public void empty()", "class_method_signature": "SvgDrawVisitorTest.empty()", "testcase": true, "constructor": false, "invocations": ["toString", "assertThat", "is"]}, "focal_class": {"identifier": "SvgDrawVisitor", "superclass": "", "interfaces": "implements IDrawVisitor", "fields": [{"original_string": "private final StringBuilder sb = new StringBuilder(5000);", "modifier": "private final", "type": "StringBuilder", "declarator": "sb = new StringBuilder(5000)", "var_name": "sb"}, {"original_string": "private int             indentLvl     = 0;", "modifier": "private", "type": "int", "declarator": "indentLvl     = 0", "var_name": "indentLvl"}, {"original_string": "private AffineTransform transform     = null;", "modifier": "private", "type": "AffineTransform", "declarator": "transform     = null", "var_name": "transform"}, {"original_string": "private RendererModel   model         = null;", "modifier": "private", "type": "RendererModel", "declarator": "model         = null", "var_name": "model"}, {"original_string": "private NumberFormat    decimalFormat = new DecimalFormat(\".##\", new DecimalFormatSymbols(Locale.ROOT));", "modifier": "private", "type": "NumberFormat", "declarator": "decimalFormat = new DecimalFormat(\".##\", new DecimalFormatSymbols(Locale.ROOT))", "var_name": "decimalFormat"}, {"original_string": "private boolean defaultsWritten    = false;", "modifier": "private", "type": "boolean", "declarator": "defaultsWritten    = false", "var_name": "defaultsWritten"}, {"original_string": "private Color   defaultStroke      = null;", "modifier": "private", "type": "Color", "declarator": "defaultStroke      = null", "var_name": "defaultStroke"}, {"original_string": "private Color   defaultFill        = null;", "modifier": "private", "type": "Color", "declarator": "defaultFill        = null", "var_name": "defaultFill"}, {"original_string": "private String  defaultStrokeWidth = null;", "modifier": "private", "type": "String", "declarator": "defaultStrokeWidth = null", "var_name": "defaultStrokeWidth"}], "methods": [{"identifier": "SvgDrawVisitor", "parameters": "(double w, double h, String units)", "modifiers": "", "return": "", "signature": " SvgDrawVisitor(double w, double h, String units)", "full_signature": "  SvgDrawVisitor(double w, double h, String units)", "class_method_signature": "SvgDrawVisitor.SvgDrawVisitor(double w, double h, String units)", "testcase": false, "constructor": true}, {"identifier": "writeHeader", "parameters": "(double w, double h, String units)", "modifiers": "private", "return": "void", "signature": "void writeHeader(double w, double h, String units)", "full_signature": "private void writeHeader(double w, double h, String units)", "class_method_signature": "SvgDrawVisitor.writeHeader(double w, double h, String units)", "testcase": false, "constructor": false}, {"identifier": "appendIdent", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void appendIdent()", "full_signature": "private void appendIdent()", "class_method_signature": "SvgDrawVisitor.appendIdent()", "testcase": false, "constructor": false}, {"identifier": "scaled", "parameters": "(double num)", "modifiers": "private", "return": "double", "signature": "double scaled(double num)", "full_signature": "private double scaled(double num)", "class_method_signature": "SvgDrawVisitor.scaled(double num)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(double[] points, int numPoints)", "modifiers": "private", "return": "void", "signature": "void transform(double[] points, int numPoints)", "full_signature": "private void transform(double[] points, int numPoints)", "class_method_signature": "SvgDrawVisitor.transform(double[] points, int numPoints)", "testcase": false, "constructor": false}, {"identifier": "toStr", "parameters": "(double num)", "modifiers": "private", "return": "String", "signature": "String toStr(double num)", "full_signature": "private String toStr(double num)", "class_method_signature": "SvgDrawVisitor.toStr(double num)", "testcase": false, "constructor": false}, {"identifier": "appendPoints", "parameters": "(StringBuilder sb, double[] points, int numPoints)", "modifiers": "private", "return": "void", "signature": "void appendPoints(StringBuilder sb, double[] points, int numPoints)", "full_signature": "private void appendPoints(StringBuilder sb, double[] points, int numPoints)", "class_method_signature": "SvgDrawVisitor.appendPoints(StringBuilder sb, double[] points, int numPoints)", "testcase": false, "constructor": false}, {"identifier": "appendRelativePoints", "parameters": "(StringBuilder sb, double[] points, double xBase, double yBase, int numPoints)", "modifiers": "private", "return": "void", "signature": "void appendRelativePoints(StringBuilder sb, double[] points, double xBase, double yBase, int numPoints)", "full_signature": "private void appendRelativePoints(StringBuilder sb, double[] points, double xBase, double yBase, int numPoints)", "class_method_signature": "SvgDrawVisitor.appendRelativePoints(StringBuilder sb, double[] points, double xBase, double yBase, int numPoints)", "testcase": false, "constructor": false}, {"identifier": "toStr", "parameters": "(Color col)", "modifiers": "", "return": "String", "signature": "String toStr(Color col)", "full_signature": " String toStr(Color col)", "class_method_signature": "SvgDrawVisitor.toStr(Color col)", "testcase": false, "constructor": false}, {"identifier": "setFontManager", "parameters": "(IFontManager fontManager)", "modifiers": "@Override public", "return": "void", "signature": "void setFontManager(IFontManager fontManager)", "full_signature": "@Override public void setFontManager(IFontManager fontManager)", "class_method_signature": "SvgDrawVisitor.setFontManager(IFontManager fontManager)", "testcase": false, "constructor": false}, {"identifier": "setRendererModel", "parameters": "(RendererModel model)", "modifiers": "@Override public", "return": "void", "signature": "void setRendererModel(RendererModel model)", "full_signature": "@Override public void setRendererModel(RendererModel model)", "class_method_signature": "SvgDrawVisitor.setRendererModel(RendererModel model)", "testcase": false, "constructor": false}, {"identifier": "previsit", "parameters": "(Collection<? extends IRenderingElement> elements)", "modifiers": "public", "return": "void", "signature": "void previsit(Collection<? extends IRenderingElement> elements)", "full_signature": "public void previsit(Collection<? extends IRenderingElement> elements)", "class_method_signature": "SvgDrawVisitor.previsit(Collection<? extends IRenderingElement> elements)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(GeneralPath elem)", "modifiers": "private", "return": "void", "signature": "void visit(GeneralPath elem)", "full_signature": "private void visit(GeneralPath elem)", "class_method_signature": "SvgDrawVisitor.visit(GeneralPath elem)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(String id, String cls, GeneralPath elem)", "modifiers": "private", "return": "void", "signature": "void visit(String id, String cls, GeneralPath elem)", "full_signature": "private void visit(String id, String cls, GeneralPath elem)", "class_method_signature": "SvgDrawVisitor.visit(String id, String cls, GeneralPath elem)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(LineElement elem)", "modifiers": "private", "return": "void", "signature": "void visit(LineElement elem)", "full_signature": "private void visit(LineElement elem)", "class_method_signature": "SvgDrawVisitor.visit(LineElement elem)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(String id, String cls, LineElement elem)", "modifiers": "private", "return": "void", "signature": "void visit(String id, String cls, LineElement elem)", "full_signature": "private void visit(String id, String cls, LineElement elem)", "class_method_signature": "SvgDrawVisitor.visit(String id, String cls, LineElement elem)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(MarkedElement elem)", "modifiers": "private", "return": "void", "signature": "void visit(MarkedElement elem)", "full_signature": "private void visit(MarkedElement elem)", "class_method_signature": "SvgDrawVisitor.visit(MarkedElement elem)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(RectangleElement elem)", "modifiers": "private", "return": "void", "signature": "void visit(RectangleElement elem)", "full_signature": "private void visit(RectangleElement elem)", "class_method_signature": "SvgDrawVisitor.visit(RectangleElement elem)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(OvalElement elem)", "modifiers": "private", "return": "void", "signature": "void visit(OvalElement elem)", "full_signature": "private void visit(OvalElement elem)", "class_method_signature": "SvgDrawVisitor.visit(OvalElement elem)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(TextElement elem)", "modifiers": "private", "return": "void", "signature": "void visit(TextElement elem)", "full_signature": "private void visit(TextElement elem)", "class_method_signature": "SvgDrawVisitor.visit(TextElement elem)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(final IRenderingElement root)", "modifiers": "@Override public", "return": "void", "signature": "void visit(final IRenderingElement root)", "full_signature": "@Override public void visit(final IRenderingElement root)", "class_method_signature": "SvgDrawVisitor.visit(final IRenderingElement root)", "testcase": false, "constructor": false}, {"identifier": "setTransform", "parameters": "(AffineTransform transform)", "modifiers": "@Override public", "return": "void", "signature": "void setTransform(AffineTransform transform)", "full_signature": "@Override public void setTransform(AffineTransform transform)", "class_method_signature": "SvgDrawVisitor.setTransform(AffineTransform transform)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SvgDrawVisitor.toString()", "testcase": false, "constructor": false}], "file": "app/depict/src/main/java/org/openscience/cdk/depict/SvgDrawVisitor.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        if (defaultsWritten)\n            return sb.toString() + \"  </g>\\n</svg>\\n\";\n        return sb.toString() + \"</svg>\\n\";\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SvgDrawVisitor.toString()", "testcase": false, "constructor": false, "invocations": ["toString", "toString"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}