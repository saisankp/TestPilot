{"test_class": {"identifier": "ConfigurationRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private PersistenceUnitDescriptor descriptor;", "modifier": "@Mock\n    private", "type": "PersistenceUnitDescriptor", "declarator": "descriptor", "var_name": "descriptor"}, {"original_string": "private ConfigurationRegistry registry;", "modifier": "private", "type": "ConfigurationRegistry", "declarator": "registry", "var_name": "registry"}], "file": "mongodb/src/test/java/eu/drus/jpa/unit/mongodb/ext/ConfigurationRegistryTest.java"}, "test_case": {"identifier": "testDataNucleusMongoDbConfigurationIsAvailable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDataNucleusMongoDbConfigurationIsAvailable() {\n        // GIVEN\n        final Map<String, Object> properties = new HashMap<>();\n        when(descriptor.getProperties()).thenReturn(properties);\n\n        properties.put(\"datanucleus.ConnectionURL\", \"mongodb:/foo\");\n\n        // WHEN\n        final boolean hasConfiguration = registry.hasConfiguration(descriptor);\n\n        // THEN\n        assertTrue(hasConfiguration);\n    }", "signature": "void testDataNucleusMongoDbConfigurationIsAvailable()", "full_signature": "@Test public void testDataNucleusMongoDbConfigurationIsAvailable()", "class_method_signature": "ConfigurationRegistryTest.testDataNucleusMongoDbConfigurationIsAvailable()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getProperties", "put", "hasConfiguration", "assertTrue"]}, "focal_class": {"identifier": "ConfigurationRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ServiceLoader<ConfigurationFactory> CONFIG_FACTORIES = ServiceLoader.load(ConfigurationFactory.class);", "modifier": "private static final", "type": "ServiceLoader<ConfigurationFactory>", "declarator": "CONFIG_FACTORIES = ServiceLoader.load(ConfigurationFactory.class)", "var_name": "CONFIG_FACTORIES"}], "methods": [{"identifier": "hasConfiguration", "parameters": "(final PersistenceUnitDescriptor descriptor)", "modifiers": "public", "return": "boolean", "signature": "boolean hasConfiguration(final PersistenceUnitDescriptor descriptor)", "full_signature": "public boolean hasConfiguration(final PersistenceUnitDescriptor descriptor)", "class_method_signature": "ConfigurationRegistry.hasConfiguration(final PersistenceUnitDescriptor descriptor)", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "(final PersistenceUnitDescriptor descriptor)", "modifiers": "public", "return": "Configuration", "signature": "Configuration getConfiguration(final PersistenceUnitDescriptor descriptor)", "full_signature": "public Configuration getConfiguration(final PersistenceUnitDescriptor descriptor)", "class_method_signature": "ConfigurationRegistry.getConfiguration(final PersistenceUnitDescriptor descriptor)", "testcase": false, "constructor": false}], "file": "mongodb/src/main/java/eu/drus/jpa/unit/mongodb/ext/ConfigurationRegistry.java"}, "focal_method": {"identifier": "hasConfiguration", "parameters": "(final PersistenceUnitDescriptor descriptor)", "modifiers": "public", "return": "boolean", "body": "public boolean hasConfiguration(final PersistenceUnitDescriptor descriptor) {\n        for (final ConfigurationFactory factory : CONFIG_FACTORIES) {\n            if (factory.isSupported(descriptor)) {\n                return true;\n            }\n        }\n        return false;\n    }", "signature": "boolean hasConfiguration(final PersistenceUnitDescriptor descriptor)", "full_signature": "public boolean hasConfiguration(final PersistenceUnitDescriptor descriptor)", "class_method_signature": "ConfigurationRegistry.hasConfiguration(final PersistenceUnitDescriptor descriptor)", "testcase": false, "constructor": false, "invocations": ["isSupported"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}