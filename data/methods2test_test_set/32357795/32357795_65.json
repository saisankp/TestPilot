{"test_class": {"identifier": "SubjectIdentityDeciderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected TopicMapIF        topicmap;", "modifier": "protected", "type": "TopicMapIF", "declarator": "topicmap", "var_name": "topicmap"}, {"original_string": "protected TopicMapBuilderIF builder;", "modifier": "protected", "type": "TopicMapBuilderIF", "declarator": "builder", "var_name": "builder"}], "file": "ontopia-engine/src/test/java/net/ontopia/topicmaps/utils/SubjectIdentityDeciderTest.java"}, "test_case": {"identifier": "testInstances", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testInstances() {\n    LocatorIF locC = makeLocator(\"C\");\n    LocatorIF locD = makeLocator(\"D\");\n    TopicIF topicA = getTopic(\"A\");\n    TopicIF topicB = getTopic(\"B\");\n\n    SubjectIdentityDecider decider = new SubjectIdentityDecider(locC);\n    Assert.assertTrue(\"Decider did not recognize instance of topic\",\n               decider.ok(topicA));\n               \n    Assert.assertTrue(\"Decider ok-d topic which was instance of topic with wrong identifier\",\n               !decider.ok(topicB));\n  }", "signature": "void testInstances()", "full_signature": "@Test public void testInstances()", "class_method_signature": "SubjectIdentityDeciderTest.testInstances()", "testcase": true, "constructor": false, "invocations": ["makeLocator", "makeLocator", "getTopic", "getTopic", "assertTrue", "ok", "assertTrue", "ok"]}, "focal_class": {"identifier": "SubjectIdentityDecider", "superclass": "", "interfaces": "implements DeciderIF<T>", "fields": [{"original_string": "protected LocatorIF subject_identifier;", "modifier": "protected", "type": "LocatorIF", "declarator": "subject_identifier", "var_name": "subject_identifier"}], "methods": [{"identifier": "SubjectIdentityDecider", "parameters": "(LocatorIF subject_identifier)", "modifiers": "public", "return": "", "signature": " SubjectIdentityDecider(LocatorIF subject_identifier)", "full_signature": "public  SubjectIdentityDecider(LocatorIF subject_identifier)", "class_method_signature": "SubjectIdentityDecider.SubjectIdentityDecider(LocatorIF subject_identifier)", "testcase": false, "constructor": true}, {"identifier": "ok", "parameters": "(T object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean ok(T object)", "full_signature": "@Override public boolean ok(T object)", "class_method_signature": "SubjectIdentityDecider.ok(T object)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/topicmaps/utils/SubjectIdentityDecider.java"}, "focal_method": {"identifier": "ok", "parameters": "(T object)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean ok(T object) {\n    if (object instanceof TopicIF) {\n      TopicIF topic = (TopicIF) object;\n      if (topic.getSubjectIdentifiers().contains(subject_identifier))\n        return true;\n    }\n      \n    if (object instanceof TypedIF) {\n      TopicIF topic = ((TypedIF) object).getType();\n      if (topic == null)\n        return false;\n      return topic.getSubjectIdentifiers().contains(subject_identifier);\n      \n    } else if (object instanceof TopicIF) {\n      Iterator<TopicIF> it = ((TopicIF) object).getTypes().iterator();\n      while (it.hasNext()) {\n        TopicIF topic = it.next();\n        if (topic.getSubjectIdentifiers().contains(subject_identifier))\n          return true;\n      }\n    } \n\n    return false;\n  }", "signature": "boolean ok(T object)", "full_signature": "@Override public boolean ok(T object)", "class_method_signature": "SubjectIdentityDecider.ok(T object)", "testcase": false, "constructor": false, "invocations": ["contains", "getSubjectIdentifiers", "getType", "contains", "getSubjectIdentifiers", "iterator", "getTypes", "hasNext", "next", "contains", "getSubjectIdentifiers"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}