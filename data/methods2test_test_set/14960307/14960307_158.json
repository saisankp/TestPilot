{"test_class": {"identifier": "E164CountryCodeUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(E164CountryCodeUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(E164CountryCodeUtilTest.class)", "var_name": "logger"}], "file": "ch-commons-locale/src/test/java/com/cloudhopper/commons/locale/E164CountryCodeUtilTest.java"}, "test_case": {"identifier": "lookup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void lookup() throws Exception {\n        E164CountryCode result0 = E164CountryCodeUtil.lookup(\"1\");\n        Assert.assertEquals(\"US\", result0.getIso());\n        result0 = E164CountryCodeUtil.lookup(\"1313\");\n        Assert.assertEquals(\"US\", result0.getIso());\n        result0 = E164CountryCodeUtil.lookup(\"\");\n        Assert.assertEquals(null, result0);\n        result0 = E164CountryCodeUtil.lookup(\"1416\");\n        Assert.assertEquals(\"CA\", result0.getIso());\n        result0 = E164CountryCodeUtil.lookup(\"18765551212\");\n        Assert.assertEquals(\"JM\", result0.getIso());\n        result0 = E164CountryCodeUtil.lookup(\"448765551212\");\n        Assert.assertEquals(\"GB\", result0.getIso());\n    }", "signature": "void lookup()", "full_signature": "@Test public void lookup()", "class_method_signature": "E164CountryCodeUtilTest.lookup()", "testcase": true, "constructor": false, "invocations": ["lookup", "assertEquals", "getIso", "lookup", "assertEquals", "getIso", "lookup", "assertEquals", "lookup", "assertEquals", "getIso", "lookup", "assertEquals", "getIso", "lookup", "assertEquals", "getIso"]}, "focal_class": {"identifier": "E164CountryCodeUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(E164CountryCodeUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(E164CountryCodeUtil.class)", "var_name": "logger"}, {"original_string": "private static HashMap<String,E164CountryCode> byPrefix;", "modifier": "private static", "type": "HashMap<String,E164CountryCode>", "declarator": "byPrefix", "var_name": "byPrefix"}, {"original_string": "private static int maxPrefixLength;", "modifier": "private static", "type": "int", "declarator": "maxPrefixLength", "var_name": "maxPrefixLength"}], "methods": [{"identifier": "E164CountryCodeUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " E164CountryCodeUtil()", "full_signature": "private  E164CountryCodeUtil()", "class_method_signature": "E164CountryCodeUtil.E164CountryCodeUtil()", "testcase": false, "constructor": true}, {"identifier": "lookup", "parameters": "(String address)", "modifiers": "public static", "return": "E164CountryCode", "signature": "E164CountryCode lookup(String address)", "full_signature": "public static E164CountryCode lookup(String address)", "class_method_signature": "E164CountryCodeUtil.lookup(String address)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(InputStream is)", "modifiers": "public static", "return": "HashMap<String,E164CountryCode>", "signature": "HashMap<String,E164CountryCode> parse(InputStream is)", "full_signature": "public static HashMap<String,E164CountryCode> parse(InputStream is)", "class_method_signature": "E164CountryCodeUtil.parse(InputStream is)", "testcase": false, "constructor": false}], "file": "ch-commons-locale/src/main/java/com/cloudhopper/commons/locale/E164CountryCodeUtil.java"}, "focal_method": {"identifier": "lookup", "parameters": "(String address)", "modifiers": "public static", "return": "E164CountryCode", "body": "public static E164CountryCode lookup(String address) {\n        // analyze just the first few chars -- max of 4 or length of address\n        int len = (address.length() > maxPrefixLength ? maxPrefixLength : address.length());\n        // search backwards first, return the first result\n        for (int i = len; i > 0; i--) {\n            String prefix = address.substring(0, i);\n            E164CountryCode entry = byPrefix.get(prefix);\n            if (entry != null) {\n                return entry;\n            }\n        }\n        // nothing found\n        return null;\n    }", "signature": "E164CountryCode lookup(String address)", "full_signature": "public static E164CountryCode lookup(String address)", "class_method_signature": "E164CountryCodeUtil.lookup(String address)", "testcase": false, "constructor": false, "invocations": ["length", "length", "substring", "get"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}