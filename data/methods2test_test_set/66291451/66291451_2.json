{"test_class": {"identifier": "MarkerBitmapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Bitmap srcWithoutPhoto = mock(Bitmap.class);", "modifier": "private", "type": "Bitmap", "declarator": "srcWithoutPhoto = mock(Bitmap.class)", "var_name": "srcWithoutPhoto"}, {"original_string": "private Bitmap srcWithPhoto = mock(Bitmap.class);", "modifier": "private", "type": "Bitmap", "declarator": "srcWithPhoto = mock(Bitmap.class)", "var_name": "srcWithPhoto"}, {"original_string": "private Bitmap srcOwnPhoto = mock(Bitmap.class);", "modifier": "private", "type": "Bitmap", "declarator": "srcOwnPhoto = mock(Bitmap.class)", "var_name": "srcOwnPhoto"}, {"original_string": "private Bitmap srcWithoutPhotoInactive = mock(Bitmap.class);", "modifier": "private", "type": "Bitmap", "declarator": "srcWithoutPhotoInactive = mock(Bitmap.class)", "var_name": "srcWithoutPhotoInactive"}, {"original_string": "private Bitmap srcWithPhotoInactive = mock(Bitmap.class);", "modifier": "private", "type": "Bitmap", "declarator": "srcWithPhotoInactive = mock(Bitmap.class)", "var_name": "srcWithPhotoInactive"}, {"original_string": "private Bitmap srcOwnPhotoInactive = mock(Bitmap.class);", "modifier": "private", "type": "Bitmap", "declarator": "srcOwnPhotoInactive = mock(Bitmap.class)", "var_name": "srcOwnPhotoInactive"}, {"original_string": "private MarkerBitmap markerBitmap = new MarkerBitmap(mock(Context.class),\n            srcWithoutPhoto, srcWithPhoto, srcOwnPhoto, srcWithoutPhotoInactive, srcWithPhotoInactive, srcOwnPhotoInactive,\n            mock(Point.class), 0, 0, mock(Paint.class));", "modifier": "private", "type": "MarkerBitmap", "declarator": "markerBitmap = new MarkerBitmap(mock(Context.class),\n            srcWithoutPhoto, srcWithPhoto, srcOwnPhoto, srcWithoutPhotoInactive, srcWithPhotoInactive, srcOwnPhotoInactive,\n            mock(Point.class), 0, 0, mock(Paint.class))", "var_name": "markerBitmap"}], "file": "app/src/test/java/de/bahnhoefe/deutschlands/bahnhofsfotos/mapsforge/MarkerBitmapTest.java"}, "test_case": {"identifier": "getBitmap_PhotoActive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getBitmap_PhotoActive() {\n        Bitmap bitmap = markerBitmap.getBitmap(true, false, true);\n        assertEquals(srcWithPhoto, bitmap);\n    }", "signature": "void getBitmap_PhotoActive()", "full_signature": "@Test public void getBitmap_PhotoActive()", "class_method_signature": "MarkerBitmapTest.getBitmap_PhotoActive()", "testcase": true, "constructor": false, "invocations": ["getBitmap", "assertEquals"]}, "focal_class": {"identifier": "MarkerBitmap", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<String, Bitmap> captionViews = new HashMap<>();", "modifier": "private static final", "type": "Map<String, Bitmap>", "declarator": "captionViews = new HashMap<>()", "var_name": "captionViews"}, {"original_string": "private static Context context;", "modifier": "private static", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private final Bitmap iconBmpWithoutPhoto;", "modifier": "private final", "type": "Bitmap", "declarator": "iconBmpWithoutPhoto", "var_name": "iconBmpWithoutPhoto"}, {"original_string": "private final Bitmap iconBmpWithPhoto;", "modifier": "private final", "type": "Bitmap", "declarator": "iconBmpWithPhoto", "var_name": "iconBmpWithPhoto"}, {"original_string": "private final Bitmap iconBmpOwnPhoto;", "modifier": "private final", "type": "Bitmap", "declarator": "iconBmpOwnPhoto", "var_name": "iconBmpOwnPhoto"}, {"original_string": "private final Bitmap iconBmpWithoutPhotoInactive;", "modifier": "private final", "type": "Bitmap", "declarator": "iconBmpWithoutPhotoInactive", "var_name": "iconBmpWithoutPhotoInactive"}, {"original_string": "private final Bitmap iconBmpWithPhotoInactive;", "modifier": "private final", "type": "Bitmap", "declarator": "iconBmpWithPhotoInactive", "var_name": "iconBmpWithPhotoInactive"}, {"original_string": "private final Bitmap iconBmpOwnPhotoInactive;", "modifier": "private final", "type": "Bitmap", "declarator": "iconBmpOwnPhotoInactive", "var_name": "iconBmpOwnPhotoInactive"}, {"original_string": "private final Paint paint;", "modifier": "private final", "type": "Paint", "declarator": "paint", "var_name": "paint"}, {"original_string": "private final Point iconOffset;", "modifier": "private final", "type": "Point", "declarator": "iconOffset", "var_name": "iconOffset"}, {"original_string": "private final int itemSizeMax;", "modifier": "private final", "type": "int", "declarator": "itemSizeMax", "var_name": "itemSizeMax"}, {"original_string": "private final float textSize;", "modifier": "private final", "type": "float", "declarator": "textSize", "var_name": "textSize"}], "methods": [{"identifier": "MarkerBitmap", "parameters": "(final Context context, final Bitmap srcWithoutPhoto, final Bitmap srcWithPhoto, final Bitmap srcOwnPhoto,\n                        final Bitmap srcWithoutPhotoInactive, final Bitmap srcWithPhotoInactive, final Bitmap srcOwnPhotoInactive,\n                        final Point grid, final float textSize, final int maxSize, final Paint paint)", "modifiers": "public", "return": "", "signature": " MarkerBitmap(final Context context, final Bitmap srcWithoutPhoto, final Bitmap srcWithPhoto, final Bitmap srcOwnPhoto,\n                        final Bitmap srcWithoutPhotoInactive, final Bitmap srcWithPhotoInactive, final Bitmap srcOwnPhotoInactive,\n                        final Point grid, final float textSize, final int maxSize, final Paint paint)", "full_signature": "public  MarkerBitmap(final Context context, final Bitmap srcWithoutPhoto, final Bitmap srcWithPhoto, final Bitmap srcOwnPhoto,\n                        final Bitmap srcWithoutPhotoInactive, final Bitmap srcWithPhotoInactive, final Bitmap srcOwnPhotoInactive,\n                        final Point grid, final float textSize, final int maxSize, final Paint paint)", "class_method_signature": "MarkerBitmap.MarkerBitmap(final Context context, final Bitmap srcWithoutPhoto, final Bitmap srcWithPhoto, final Bitmap srcOwnPhoto,\n                        final Bitmap srcWithoutPhotoInactive, final Bitmap srcWithPhotoInactive, final Bitmap srcOwnPhotoInactive,\n                        final Point grid, final float textSize, final int maxSize, final Paint paint)", "testcase": false, "constructor": true}, {"identifier": "MarkerBitmap", "parameters": "(final Context context, final Bitmap bitmap, final Point grid, final float textSize, final int maxSize, final Paint paint)", "modifiers": "public", "return": "", "signature": " MarkerBitmap(final Context context, final Bitmap bitmap, final Point grid, final float textSize, final int maxSize, final Paint paint)", "full_signature": "public  MarkerBitmap(final Context context, final Bitmap bitmap, final Point grid, final float textSize, final int maxSize, final Paint paint)", "class_method_signature": "MarkerBitmap.MarkerBitmap(final Context context, final Bitmap bitmap, final Point grid, final float textSize, final int maxSize, final Paint paint)", "testcase": false, "constructor": true}, {"identifier": "getBitmapFromTitle", "parameters": "(final String title, final Paint paint)", "modifiers": "public static", "return": "Bitmap", "signature": "Bitmap getBitmapFromTitle(final String title, final Paint paint)", "full_signature": "public static Bitmap getBitmapFromTitle(final String title, final Paint paint)", "class_method_signature": "MarkerBitmap.getBitmapFromTitle(final String title, final Paint paint)", "testcase": false, "constructor": false}, {"identifier": "clearCaptionBitmap", "parameters": "()", "modifiers": "protected static", "return": "void", "signature": "void clearCaptionBitmap()", "full_signature": "protected static void clearCaptionBitmap()", "class_method_signature": "MarkerBitmap.clearCaptionBitmap()", "testcase": false, "constructor": false}, {"identifier": "getBitmap", "parameters": "(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive)", "modifiers": "public final", "return": "Bitmap", "signature": "Bitmap getBitmap(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive)", "full_signature": "public final Bitmap getBitmap(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive)", "class_method_signature": "MarkerBitmap.getBitmap(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive)", "testcase": false, "constructor": false}, {"identifier": "getIconOffset", "parameters": "()", "modifiers": "public final", "return": "Point", "signature": "Point getIconOffset()", "full_signature": "public final Point getIconOffset()", "class_method_signature": "MarkerBitmap.getIconOffset()", "testcase": false, "constructor": false}, {"identifier": "getTextSize", "parameters": "()", "modifiers": "public final", "return": "float", "signature": "float getTextSize()", "full_signature": "public final float getTextSize()", "class_method_signature": "MarkerBitmap.getTextSize()", "testcase": false, "constructor": false}, {"identifier": "getItemMax", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getItemMax()", "full_signature": "public final int getItemMax()", "class_method_signature": "MarkerBitmap.getItemMax()", "testcase": false, "constructor": false}, {"identifier": "getPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getPaint()", "full_signature": "public Paint getPaint()", "class_method_signature": "MarkerBitmap.getPaint()", "testcase": false, "constructor": false}, {"identifier": "decrementRefCounters", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void decrementRefCounters()", "full_signature": "public void decrementRefCounters()", "class_method_signature": "MarkerBitmap.decrementRefCounters()", "testcase": false, "constructor": false}], "file": "app/src/main/java/de/bahnhoefe/deutschlands/bahnhofsfotos/mapsforge/MarkerBitmap.java"}, "focal_method": {"identifier": "getBitmap", "parameters": "(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive)", "modifiers": "public final", "return": "Bitmap", "body": "public final Bitmap getBitmap(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive) {\n        if (ownPhoto) {\n            if (stationActive) {\n                return iconBmpOwnPhoto;\n            }\n            return iconBmpOwnPhotoInactive;\n        } else if (hasPhoto) {\n            if (stationActive) {\n                return iconBmpWithPhoto;\n            }\n            return iconBmpWithPhotoInactive;\n        }\n        if (stationActive) {\n            return iconBmpWithoutPhoto;\n        }\n        return iconBmpWithoutPhotoInactive;\n    }", "signature": "Bitmap getBitmap(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive)", "full_signature": "public final Bitmap getBitmap(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive)", "class_method_signature": "MarkerBitmap.getBitmap(final boolean hasPhoto, final boolean ownPhoto, final boolean stationActive)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 66291451, "url": "https://github.com/RailwayStations/RSAndroidApp", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 12, "size": 4927, "license": "licensed"}}