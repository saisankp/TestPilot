{"test_class": {"identifier": "SqlDatabaseFunctionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SELECT_TABLE = \"SELECT * FROM test\";", "modifier": "private static final", "type": "String", "declarator": "SELECT_TABLE = \"SELECT * FROM test\"", "var_name": "SELECT_TABLE"}, {"original_string": "private static final String HAS_VALUE = \"SELECT * FROM test WHERE column='value'\";", "modifier": "private static final", "type": "String", "declarator": "HAS_VALUE = \"SELECT * FROM test WHERE column='value'\"", "var_name": "HAS_VALUE"}, {"original_string": "private static final String TABLE = \"test\";", "modifier": "private static final", "type": "String", "declarator": "TABLE = \"test\"", "var_name": "TABLE"}, {"original_string": "private static final String INVALID_TABLE = \"test invalid$\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_TABLE = \"test invalid$\"", "var_name": "INVALID_TABLE"}, {"original_string": "private static final String SQL_QUERY = \"SELECT * FROM test ORDER BY column\";", "modifier": "private static final", "type": "String", "declarator": "SQL_QUERY = \"SELECT * FROM test ORDER BY column\"", "var_name": "SQL_QUERY"}, {"original_string": "private static final String INVALID_QUERY = \"invalid query\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_QUERY = \"invalid query\"", "var_name": "INVALID_QUERY"}, {"original_string": "private static final String SQL_QUERY_FOR_ARGUMENT = \"SELECT * FROM test WHERE column=?\";", "modifier": "private static final", "type": "String", "declarator": "SQL_QUERY_FOR_ARGUMENT = \"SELECT * FROM test WHERE column=?\"", "var_name": "SQL_QUERY_FOR_ARGUMENT"}, {"original_string": "private static final String NON_MATCHING_SQL_QUERY =\n      \"SELECT * FROM test WHERE column='a' ORDER BY column\";", "modifier": "private static final", "type": "String", "declarator": "NON_MATCHING_SQL_QUERY =\n      \"SELECT * FROM test WHERE column='a' ORDER BY column\"", "var_name": "NON_MATCHING_SQL_QUERY"}, {"original_string": "private static final Supplier<Result<SQLiteDatabase>> FAILURE =\n      staticSupplier(Result.<SQLiteDatabase>failure(new Exception()));", "modifier": "private static final", "type": "Supplier<Result<SQLiteDatabase>>", "declarator": "FAILURE =\n      staticSupplier(Result.<SQLiteDatabase>failure(new Exception()))", "var_name": "FAILURE"}, {"original_string": "private static final CursorStringFunction CURSOR_STRING_FUNCTION = new CursorStringFunction();", "modifier": "private static final", "type": "CursorStringFunction", "declarator": "CURSOR_STRING_FUNCTION = new CursorStringFunction()", "var_name": "CURSOR_STRING_FUNCTION"}, {"original_string": "public static final String COLUMN = \"column\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN = \"column\"", "var_name": "COLUMN"}, {"original_string": "private SQLiteDatabase database;", "modifier": "private", "type": "SQLiteDatabase", "declarator": "database", "var_name": "database"}, {"original_string": "private Supplier<Result<SQLiteDatabase>> databaseSupplier;", "modifier": "private", "type": "Supplier<Result<SQLiteDatabase>>", "declarator": "databaseSupplier", "var_name": "databaseSupplier"}], "file": "extensions/database/src/test/java/com/google/android/agera/database/SqlDatabaseFunctionsTest.java"}, "test_case": {"identifier": "shouldPassArgumentsToDatabaseQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldPassArgumentsToDatabaseQuery() throws Throwable {\n    assertThat(databaseQueryFunction(databaseSupplier, CURSOR_STRING_FUNCTION)\n            .apply(sqlRequest()\n                .sql(SQL_QUERY_FOR_ARGUMENT)\n                .arguments(\"value2\").compile()).get(),\n        contains(\"value2\"));\n  }", "signature": "void shouldPassArgumentsToDatabaseQuery()", "full_signature": "@Test public void shouldPassArgumentsToDatabaseQuery()", "class_method_signature": "SqlDatabaseFunctionsTest.shouldPassArgumentsToDatabaseQuery()", "testcase": true, "constructor": false, "invocations": ["assertThat", "get", "apply", "databaseQueryFunction", "compile", "arguments", "sql", "sqlRequest", "contains"]}, "focal_class": {"identifier": "SqlDatabaseFunctions", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "databaseQueryFunction", "parameters": "(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap)", "modifiers": "@NonNull public static", "return": "Function<SqlRequest, Result<List<T>>>", "signature": "Function<SqlRequest, Result<List<T>>> databaseQueryFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap)", "full_signature": "@NonNull public static Function<SqlRequest, Result<List<T>>> databaseQueryFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap)", "class_method_signature": "SqlDatabaseFunctions.databaseQueryFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap)", "testcase": false, "constructor": false}, {"identifier": "databaseInsertFunction", "parameters": "(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "modifiers": "@NonNull public static", "return": "Function<SqlInsertRequest, Result<Long>>", "signature": "Function<SqlInsertRequest, Result<Long>> databaseInsertFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "full_signature": "@NonNull public static Function<SqlInsertRequest, Result<Long>> databaseInsertFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "class_method_signature": "SqlDatabaseFunctions.databaseInsertFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "testcase": false, "constructor": false}, {"identifier": "databaseUpdateFunction", "parameters": "(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "modifiers": "@NonNull public static", "return": "Function<SqlUpdateRequest, Result<Integer>>", "signature": "Function<SqlUpdateRequest, Result<Integer>> databaseUpdateFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "full_signature": "@NonNull public static Function<SqlUpdateRequest, Result<Integer>> databaseUpdateFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "class_method_signature": "SqlDatabaseFunctions.databaseUpdateFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "testcase": false, "constructor": false}, {"identifier": "databaseDeleteFunction", "parameters": "(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "modifiers": "@NonNull public static", "return": "Function<SqlDeleteRequest, Result<Integer>>", "signature": "Function<SqlDeleteRequest, Result<Integer>> databaseDeleteFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "full_signature": "@NonNull public static Function<SqlDeleteRequest, Result<Integer>> databaseDeleteFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "class_method_signature": "SqlDatabaseFunctions.databaseDeleteFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database)", "testcase": false, "constructor": false}, {"identifier": "SqlDatabaseFunctions", "parameters": "()", "modifiers": "private", "return": "", "signature": " SqlDatabaseFunctions()", "full_signature": "private  SqlDatabaseFunctions()", "class_method_signature": "SqlDatabaseFunctions.SqlDatabaseFunctions()", "testcase": false, "constructor": true}], "file": "extensions/database/src/main/java/com/google/android/agera/database/SqlDatabaseFunctions.java"}, "focal_method": {"identifier": "databaseQueryFunction", "parameters": "(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap)", "modifiers": "@NonNull public static", "return": "Function<SqlRequest, Result<List<T>>>", "body": "@NonNull\n  public static <T> Function<SqlRequest, Result<List<T>>> databaseQueryFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap) {\n    return new DatabaseFunction<>(database, new DatabaseQueryMerger<>(rowMap));\n  }", "signature": "Function<SqlRequest, Result<List<T>>> databaseQueryFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap)", "full_signature": "@NonNull public static Function<SqlRequest, Result<List<T>>> databaseQueryFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap)", "class_method_signature": "SqlDatabaseFunctions.databaseQueryFunction(\n      @NonNull final Supplier<Result<SQLiteDatabase>> database,\n      @NonNull Function<Cursor, T> rowMap)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48175620, "url": "https://github.com/google/agera", "language": "Java", "is_fork": false, "fork_count": 669, "stargazer_count": 7333, "size": 968, "license": "licensed"}}