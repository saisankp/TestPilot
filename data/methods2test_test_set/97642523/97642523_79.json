{"test_class": {"identifier": "CoffeeHouseTest", "superclass": "extends BaseAkkaTestCase", "interfaces": "", "fields": [], "file": "exercise_012_Custom_supervision/src/test/java/com/lightbend/training/coffeehouse/CoffeeHouseTest.java"}, "test_case": {"identifier": "onTerminationOfGuestCoffeeHouseShouldRemoveGuestFromBookkeeper", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onTerminationOfGuestCoffeeHouseShouldRemoveGuestFromBookkeeper() {\n        new JavaTestKit(system) {{\n            ActorRef coffeeHouse = system.actorOf(CoffeeHouse.props(1), \"guest-removed\");\n            coffeeHouse.tell(new CoffeeHouse.CreateGuest(new Coffee.Akkaccino(), Integer.MAX_VALUE), ActorRef.noSender());\n            ActorRef guest = expectActor(this, \"/user/guest-removed/$*\");\n            interceptDebugLogMessage(this, \".*[Rr]emoved.*\", 1, () -> {\n                coffeeHouse.tell(new CoffeeHouse.ApproveCoffee(new Coffee.Akkaccino(), guest), ActorRef.noSender());\n            });\n        }};\n    }", "signature": "void onTerminationOfGuestCoffeeHouseShouldRemoveGuestFromBookkeeper()", "full_signature": "@Test public void onTerminationOfGuestCoffeeHouseShouldRemoveGuestFromBookkeeper()", "class_method_signature": "CoffeeHouseTest.onTerminationOfGuestCoffeeHouseShouldRemoveGuestFromBookkeeper()", "testcase": true, "constructor": false, "invocations": ["actorOf", "props", "tell", "noSender", "expectActor", "interceptDebugLogMessage", "tell", "noSender"]}, "focal_class": {"identifier": "CoffeeHouse", "superclass": "extends AbstractLoggingActor", "interfaces": "", "fields": [{"original_string": "private final FiniteDuration baristaPrepareCoffeeDuration =\n            Duration.create(\n                    context().system().settings().config().getDuration(\n                            \"coffee-house.barista.prepare-coffee-duration\", MILLISECONDS), MILLISECONDS);", "modifier": "private final", "type": "FiniteDuration", "declarator": "baristaPrepareCoffeeDuration =\n            Duration.create(\n                    context().system().settings().config().getDuration(\n                            \"coffee-house.barista.prepare-coffee-duration\", MILLISECONDS), MILLISECONDS)", "var_name": "baristaPrepareCoffeeDuration"}, {"original_string": "private final FiniteDuration guestFinishCoffeeDuration =\n            Duration.create(\n                    context().system().settings().config().getDuration(\n                            \"coffee-house.guest.finish-coffee-duration\", MILLISECONDS), MILLISECONDS);", "modifier": "private final", "type": "FiniteDuration", "declarator": "guestFinishCoffeeDuration =\n            Duration.create(\n                    context().system().settings().config().getDuration(\n                            \"coffee-house.guest.finish-coffee-duration\", MILLISECONDS), MILLISECONDS)", "var_name": "guestFinishCoffeeDuration"}, {"original_string": "private final ActorRef barista =\n            createBarista();", "modifier": "private final", "type": "ActorRef", "declarator": "barista =\n            createBarista()", "var_name": "barista"}, {"original_string": "private final ActorRef waiter =\n            createWaiter();", "modifier": "private final", "type": "ActorRef", "declarator": "waiter =\n            createWaiter()", "var_name": "waiter"}, {"original_string": "private final Map<ActorRef, Integer> guestCaffeineBookkeeper = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<ActorRef, Integer>", "declarator": "guestCaffeineBookkeeper = new ConcurrentHashMap<>()", "var_name": "guestCaffeineBookkeeper"}, {"original_string": "private final int caffeineLimit;", "modifier": "private final", "type": "int", "declarator": "caffeineLimit", "var_name": "caffeineLimit"}], "methods": [{"identifier": "CoffeeHouse", "parameters": "(int caffeineLimit)", "modifiers": "public", "return": "", "signature": " CoffeeHouse(int caffeineLimit)", "full_signature": "public  CoffeeHouse(int caffeineLimit)", "class_method_signature": "CoffeeHouse.CoffeeHouse(int caffeineLimit)", "testcase": false, "constructor": true}, {"identifier": "createReceive", "parameters": "()", "modifiers": "@Override public", "return": "Receive", "signature": "Receive createReceive()", "full_signature": "@Override public Receive createReceive()", "class_method_signature": "CoffeeHouse.createReceive()", "testcase": false, "constructor": false}, {"identifier": "props", "parameters": "(int caffeineLimit)", "modifiers": "public static", "return": "Props", "signature": "Props props(int caffeineLimit)", "full_signature": "public static Props props(int caffeineLimit)", "class_method_signature": "CoffeeHouse.props(int caffeineLimit)", "testcase": false, "constructor": false}, {"identifier": "coffeeApproved", "parameters": "(ApproveCoffee approveCoffee)", "modifiers": "private", "return": "boolean", "signature": "boolean coffeeApproved(ApproveCoffee approveCoffee)", "full_signature": "private boolean coffeeApproved(ApproveCoffee approveCoffee)", "class_method_signature": "CoffeeHouse.coffeeApproved(ApproveCoffee approveCoffee)", "testcase": false, "constructor": false}, {"identifier": "addGuestToBookkeeper", "parameters": "(ActorRef guest)", "modifiers": "private", "return": "void", "signature": "void addGuestToBookkeeper(ActorRef guest)", "full_signature": "private void addGuestToBookkeeper(ActorRef guest)", "class_method_signature": "CoffeeHouse.addGuestToBookkeeper(ActorRef guest)", "testcase": false, "constructor": false}, {"identifier": "removeGuestFromBookkeeper", "parameters": "(ActorRef guest)", "modifiers": "private", "return": "void", "signature": "void removeGuestFromBookkeeper(ActorRef guest)", "full_signature": "private void removeGuestFromBookkeeper(ActorRef guest)", "class_method_signature": "CoffeeHouse.removeGuestFromBookkeeper(ActorRef guest)", "testcase": false, "constructor": false}, {"identifier": "createBarista", "parameters": "()", "modifiers": "protected", "return": "ActorRef", "signature": "ActorRef createBarista()", "full_signature": "protected ActorRef createBarista()", "class_method_signature": "CoffeeHouse.createBarista()", "testcase": false, "constructor": false}, {"identifier": "createWaiter", "parameters": "()", "modifiers": "protected", "return": "ActorRef", "signature": "ActorRef createWaiter()", "full_signature": "protected ActorRef createWaiter()", "class_method_signature": "CoffeeHouse.createWaiter()", "testcase": false, "constructor": false}, {"identifier": "createGuest", "parameters": "(Coffee favoriteCoffee, int caffeineLimit)", "modifiers": "protected", "return": "ActorRef", "signature": "ActorRef createGuest(Coffee favoriteCoffee, int caffeineLimit)", "full_signature": "protected ActorRef createGuest(Coffee favoriteCoffee, int caffeineLimit)", "class_method_signature": "CoffeeHouse.createGuest(Coffee favoriteCoffee, int caffeineLimit)", "testcase": false, "constructor": false}], "file": "exercise_012_Custom_supervision/src/main/java/com/lightbend/training/coffeehouse/CoffeeHouse.java"}, "focal_method": {"identifier": "props", "parameters": "(int caffeineLimit)", "modifiers": "public static", "return": "Props", "body": "public static Props props(int caffeineLimit) {\n        return Props.create(CoffeeHouse.class, () -> new CoffeeHouse(caffeineLimit));\n    }", "signature": "Props props(int caffeineLimit)", "full_signature": "public static Props props(int caffeineLimit)", "class_method_signature": "CoffeeHouse.props(int caffeineLimit)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 97642523, "url": "https://github.com/ironfish/oreilly-reactive-architecture-student", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 14, "size": 84, "license": "licensed"}}