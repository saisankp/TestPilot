{"test_class": {"identifier": "ListKeyIndexBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ListKeyIndexBuilder builder = new ListKeyIndexBuilder();", "modifier": "private final", "type": "ListKeyIndexBuilder", "declarator": "builder = new ListKeyIndexBuilder()", "var_name": "builder"}, {"original_string": "private AnnotationData data;", "modifier": "private", "type": "AnnotationData", "declarator": "data", "var_name": "data"}], "file": "simple-spring-memcached/src/test/java/com/google/code/ssm/aop/support/builder/ListKeyIndexBuilderTest.java"}, "test_case": {"identifier": "shouldPopulateListKeyIndexIfArrayList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldPopulateListKeyIndexIfArrayList() throws Exception {\n        final Class<? extends Annotation> expected = UpdateMultiCache.class;\n        final Method targetMethod = new Mirror().on(AnnotationDataDummy.class).reflect().method(\"populateListKey04\")\n                .withArgs(ArrayList.class);\n        data.setKeyIndexes(Collections.singleton(0));\n\n        builder.populate(data, null, expected, targetMethod);\n\n        assertEquals(0, data.getListIndexInKeys());\n        assertEquals(0, data.getListIndexInMethodArgs());\n    }", "signature": "void shouldPopulateListKeyIndexIfArrayList()", "full_signature": "@Test public void shouldPopulateListKeyIndexIfArrayList()", "class_method_signature": "ListKeyIndexBuilderTest.shouldPopulateListKeyIndexIfArrayList()", "testcase": true, "constructor": false, "invocations": ["withArgs", "method", "reflect", "on", "setKeyIndexes", "singleton", "populate", "assertEquals", "getListIndexInKeys", "assertEquals", "getListIndexInMethodArgs"]}, "focal_class": {"identifier": "ListKeyIndexBuilder", "superclass": "extends AbstractDataBuilder", "interfaces": "", "fields": [], "methods": [{"identifier": "build", "parameters": "(final AnnotationData data, final Annotation annotation, final Class<? extends Annotation> expectedAnnotationClass,\n            final Method targetMethod)", "modifiers": "@Override protected", "return": "void", "signature": "void build(final AnnotationData data, final Annotation annotation, final Class<? extends Annotation> expectedAnnotationClass,\n            final Method targetMethod)", "full_signature": "@Override protected void build(final AnnotationData data, final Annotation annotation, final Class<? extends Annotation> expectedAnnotationClass,\n            final Method targetMethod)", "class_method_signature": "ListKeyIndexBuilder.build(final AnnotationData data, final Annotation annotation, final Class<? extends Annotation> expectedAnnotationClass,\n            final Method targetMethod)", "testcase": false, "constructor": false}, {"identifier": "support", "parameters": "(Class<? extends Annotation> expectedAnnotationClass)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean support(Class<? extends Annotation> expectedAnnotationClass)", "full_signature": "@Override protected boolean support(Class<? extends Annotation> expectedAnnotationClass)", "class_method_signature": "ListKeyIndexBuilder.support(Class<? extends Annotation> expectedAnnotationClass)", "testcase": false, "constructor": false}, {"identifier": "getListIndexInKeys", "parameters": "(final Class<?>[] keyMethodParamTypes, final Method targetMethod)", "modifiers": "private", "return": "Integer", "signature": "Integer getListIndexInKeys(final Class<?>[] keyMethodParamTypes, final Method targetMethod)", "full_signature": "private Integer getListIndexInKeys(final Class<?>[] keyMethodParamTypes, final Method targetMethod)", "class_method_signature": "ListKeyIndexBuilder.getListIndexInKeys(final Class<?>[] keyMethodParamTypes, final Method targetMethod)", "testcase": false, "constructor": false}, {"identifier": "isList", "parameters": "(final Class<?> clazz)", "modifiers": "private", "return": "boolean", "signature": "boolean isList(final Class<?> clazz)", "full_signature": "private boolean isList(final Class<?> clazz)", "class_method_signature": "ListKeyIndexBuilder.isList(final Class<?> clazz)", "testcase": false, "constructor": false}], "file": "simple-spring-memcached/src/main/java/com/google/code/ssm/aop/support/builder/ListKeyIndexBuilder.java"}, "focal_method": {"identifier": "getListIndexInKeys", "parameters": "(final Class<?>[] keyMethodParamTypes, final Method targetMethod)", "modifiers": "private", "return": "Integer", "body": "private Integer getListIndexInKeys(final Class<?>[] keyMethodParamTypes, final Method targetMethod) {\n        Integer listIndexInKeys = null;\n        for (int i = 0; i < keyMethodParamTypes.length; i++) {\n            if (isList(keyMethodParamTypes[i])) {\n                if (listIndexInKeys != null) {\n                    throw new InvalidAnnotationException(\n                            \"There are more than one method's parameter annotated by @ParameterValueKeyProvider that is list \"\n                                    + targetMethod.toString());\n                }\n                listIndexInKeys = i;\n            }\n        }\n\n        return listIndexInKeys;\n    }", "signature": "Integer getListIndexInKeys(final Class<?>[] keyMethodParamTypes, final Method targetMethod)", "full_signature": "private Integer getListIndexInKeys(final Class<?>[] keyMethodParamTypes, final Method targetMethod)", "class_method_signature": "ListKeyIndexBuilder.getListIndexInKeys(final Class<?>[] keyMethodParamTypes, final Method targetMethod)", "testcase": false, "constructor": false, "invocations": ["isList", "toString"]}, "repository": {"repo_id": 16611556, "url": "https://github.com/ragnor/simple-spring-memcached", "language": "Java", "is_fork": false, "fork_count": 86, "stargazer_count": 181, "size": 3625, "license": "licensed"}}