{"test_class": {"identifier": "MaterializedLambdaConsequenceTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/util/lambdareplace/MaterializedLambdaConsequenceTest.java"}, "test_case": {"identifier": "createConsequenceWithDrools", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createConsequenceWithDrools() {\n        ArrayList<String> fields = new ArrayList<>();\n        fields.add(\"\\\"age\\\"\");\n        MaterializedLambda.BitMaskVariable bitMaskVariable = new MaterializedLambda.BitMaskVariableWithFields(\"DomainClassesMetadataA3B8DE4BEBF13D94572A10FD20BBE729.org_drools_modelcompiler_domain_Person_Metadata_INSTANCE\", fields, \"mask_$p\");\n\n        CreatedClass aClass = new MaterializedLambdaConsequence(\"defaultpkg\", \"defaultpkg.RulesA3B8DE4BEBF13D94572A10FD20BBE729\", Collections.singletonList(bitMaskVariable))\n                .create(\"(org.drools.model.Drools drools, org.drools.modelcompiler.domain.Person $p) -> {{($p).setAge($p.getAge() + 1); drools.update($p, mask_$p);}}\", new ArrayList<>(), new ArrayList<>());\n\n        //language=JAVA\n        String expectedResult = \"\" +\n                \"package defaultpkg.P52;\\n\" +\n                \"import static defaultpkg.RulesA3B8DE4BEBF13D94572A10FD20BBE729.*; \" +\n                \"import org.drools.modelcompiler.dsl.pattern.D; \" +\n                \"\\n\"+\n                \"@org.drools.compiler.kie.builder.MaterializedLambda() \" +\n                \"public enum LambdaConsequence526B250E5F70E575F0059D0E397318C6 implements org.drools.model.functions.Block2<org.drools.model.Drools, org.drools.modelcompiler.domain.Person>  {\\n\" +\n                \"        INSTANCE;\\n\" +\n                \"        public static final String EXPRESSION_HASH = \\\"1FE08C27A04F37AADD1A62E562519E8D\\\";\\n\" +\n                \"        private final org.drools.model.BitMask mask_$p = org.drools.model.BitMask.getPatternMask(DomainClassesMetadataA3B8DE4BEBF13D94572A10FD20BBE729.org_drools_modelcompiler_domain_Person_Metadata_INSTANCE, \\\"age\\\");\\n\" +\n                \"        @Override()\\n\" +\n                \"        public void execute(org.drools.model.Drools drools, org.drools.modelcompiler.domain.Person $p) throws java.lang.Exception {\\n\" +\n                \"            {\\n\" +\n                \"                ($p).setAge($p.getAge() + 1);\\n\" +\n                \"                drools.update($p, mask_$p);\\n\" +\n                \"            }\" +\n                \"        }\\n\" +\n                \"    }\\n\";\n\n        assertThat(aClass.getCompilationUnitAsString(), equalToIgnoringWhiteSpace(expectedResult));\n    }", "signature": "void createConsequenceWithDrools()", "full_signature": "@Test public void createConsequenceWithDrools()", "class_method_signature": "MaterializedLambdaConsequenceTest.createConsequenceWithDrools()", "testcase": true, "constructor": false, "invocations": ["add", "create", "singletonList", "assertThat", "getCompilationUnitAsString", "equalToIgnoringWhiteSpace"]}, "focal_class": {"identifier": "MaterializedLambdaConsequence", "superclass": "extends MaterializedLambda", "interfaces": "", "fields": [{"original_string": "private final static String CLASS_NAME_PREFIX = \"LambdaConsequence\";", "modifier": "private final static", "type": "String", "declarator": "CLASS_NAME_PREFIX = \"LambdaConsequence\"", "var_name": "CLASS_NAME_PREFIX"}, {"original_string": "private final List<BitMaskVariable> bitMaskVariables;", "modifier": "private final", "type": "List<BitMaskVariable>", "declarator": "bitMaskVariables", "var_name": "bitMaskVariables"}], "methods": [{"identifier": "MaterializedLambdaConsequence", "parameters": "(String packageName, String ruleClassName, List<BitMaskVariable> bitMaskVariables)", "modifiers": "", "return": "", "signature": " MaterializedLambdaConsequence(String packageName, String ruleClassName, List<BitMaskVariable> bitMaskVariables)", "full_signature": "  MaterializedLambdaConsequence(String packageName, String ruleClassName, List<BitMaskVariable> bitMaskVariables)", "class_method_signature": "MaterializedLambdaConsequence.MaterializedLambdaConsequence(String packageName, String ruleClassName, List<BitMaskVariable> bitMaskVariables)", "testcase": false, "constructor": true}, {"identifier": "createMethodDeclaration", "parameters": "(EnumDeclaration classDeclaration)", "modifiers": "@Override", "return": "void", "signature": "void createMethodDeclaration(EnumDeclaration classDeclaration)", "full_signature": "@Override void createMethodDeclaration(EnumDeclaration classDeclaration)", "class_method_signature": "MaterializedLambdaConsequence.createMethodDeclaration(EnumDeclaration classDeclaration)", "testcase": false, "constructor": false}, {"identifier": "getPrefix", "parameters": "()", "modifiers": "@Override", "return": "String", "signature": "String getPrefix()", "full_signature": "@Override String getPrefix()", "class_method_signature": "MaterializedLambdaConsequence.getPrefix()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(CompilationUnit compilationUnit)", "modifiers": "@Override protected", "return": "EnumDeclaration", "signature": "EnumDeclaration create(CompilationUnit compilationUnit)", "full_signature": "@Override protected EnumDeclaration create(CompilationUnit compilationUnit)", "class_method_signature": "MaterializedLambdaConsequence.create(CompilationUnit compilationUnit)", "testcase": false, "constructor": false}, {"identifier": "isDroolsParameter", "parameters": "(LambdaParameter p)", "modifiers": "private", "return": "boolean", "signature": "boolean isDroolsParameter(LambdaParameter p)", "full_signature": "private boolean isDroolsParameter(LambdaParameter p)", "class_method_signature": "MaterializedLambdaConsequence.isDroolsParameter(LambdaParameter p)", "testcase": false, "constructor": false}, {"identifier": "functionType", "parameters": "()", "modifiers": "@Override protected", "return": "ClassOrInterfaceType", "signature": "ClassOrInterfaceType functionType()", "full_signature": "@Override protected ClassOrInterfaceType functionType()", "class_method_signature": "MaterializedLambdaConsequence.functionType()", "testcase": false, "constructor": false}], "file": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/util/lambdareplace/MaterializedLambdaConsequence.java"}, "focal_method": {"identifier": "create", "parameters": "(CompilationUnit compilationUnit)", "modifiers": "@Override protected", "return": "EnumDeclaration", "body": "@Override\n    protected EnumDeclaration create(CompilationUnit compilationUnit) {\n        EnumDeclaration lambdaClass = super.create(compilationUnit);\n\n        boolean hasDroolsParameter = lambdaParameters.stream().anyMatch(this::isDroolsParameter);\n        if (hasDroolsParameter) {\n            bitMaskVariables.forEach(vd -> vd.generateBitMaskField(lambdaClass));\n        }\n        return lambdaClass;\n    }", "signature": "EnumDeclaration create(CompilationUnit compilationUnit)", "full_signature": "@Override protected EnumDeclaration create(CompilationUnit compilationUnit)", "class_method_signature": "MaterializedLambdaConsequence.create(CompilationUnit compilationUnit)", "testcase": false, "constructor": false, "invocations": ["create", "anyMatch", "stream", "forEach", "generateBitMaskField"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}