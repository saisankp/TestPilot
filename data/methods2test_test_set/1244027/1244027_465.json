{"test_class": {"identifier": "RelationalProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "persistence/modeshape-persistence-relational/src/test/java/org/modeshape/persistence/relational/RelationalProviderTest.java"}, "test_case": {"identifier": "shouldAllowCustomHikariPassthroughProperties", "parameters": "()", "modifiers": "@Test @FixFor(\"MODE-2674\") public", "return": "void", "body": "@Test\n    @FixFor(\"MODE-2674\")\n    public void shouldAllowCustomHikariPassthroughProperties() throws ParsingException {\n        RelationalDb db = Schematic.getDb(RelationalProviderTest.class.getClassLoader().getResourceAsStream(\"db-config-custom-props.json\"));\n        assertNotNull(db);\n        DataSourceManager dsManager = db.dsManager();\n        HikariDataSource dataSource = (HikariDataSource) dsManager.dataSource();\n        assertEquals(4, dataSource.getMinimumIdle());        \n        assertEquals(4000, dataSource.getLeakDetectionThreshold());        \n        assertEquals(5, dataSource.getMaximumPoolSize());        \n        assertFalse(dataSource.isReadOnly());        \n        assertEquals(\"testPool\", dataSource.getPoolName());        \n    }", "signature": "void shouldAllowCustomHikariPassthroughProperties()", "full_signature": "@Test @FixFor(\"MODE-2674\") public void shouldAllowCustomHikariPassthroughProperties()", "class_method_signature": "RelationalProviderTest.shouldAllowCustomHikariPassthroughProperties()", "testcase": true, "constructor": false, "invocations": ["getDb", "getResourceAsStream", "getClassLoader", "assertNotNull", "dsManager", "dataSource", "assertEquals", "getMinimumIdle", "assertEquals", "getLeakDetectionThreshold", "assertEquals", "getMaximumPoolSize", "assertFalse", "isReadOnly", "assertEquals", "getPoolName"]}, "focal_class": {"identifier": "RelationalProvider", "superclass": "", "interfaces": "implements SchematicDbProvider<RelationalDb>", "fields": [], "methods": [{"identifier": "getDB", "parameters": "(String type, Document configuration)", "modifiers": "@Override public", "return": "RelationalDb", "signature": "RelationalDb getDB(String type, Document configuration)", "full_signature": "@Override public RelationalDb getDB(String type, Document configuration)", "class_method_signature": "RelationalProvider.getDB(String type, Document configuration)", "testcase": false, "constructor": false}], "file": "persistence/modeshape-persistence-relational/src/main/java/org/modeshape/persistence/relational/RelationalProvider.java"}, "focal_method": {"identifier": "getDB", "parameters": "(String type, Document configuration)", "modifiers": "@Override public", "return": "RelationalDb", "body": "@Override\n    public RelationalDb getDB(String type, Document configuration) {\n        if (!RelationalDbConfig.ALIASES.contains(type.toLowerCase())) {\n            return null;\n        }\n        return new RelationalDb(configuration);\n    }", "signature": "RelationalDb getDB(String type, Document configuration)", "full_signature": "@Override public RelationalDb getDB(String type, Document configuration)", "class_method_signature": "RelationalProvider.getDB(String type, Document configuration)", "testcase": false, "constructor": false, "invocations": ["contains", "toLowerCase"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}