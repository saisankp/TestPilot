{"test_class": {"identifier": "DasDiagnoseTest", "superclass": "", "interfaces": "", "fields": [], "file": "das-client/src/test/java/com/ppdai/das/core/DasDiagnoseTest.java"}, "test_case": {"identifier": "TestDasDiagnose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void TestDasDiagnose() {\n        DasDiagnose dasDiagnose = new DasDiagnose(\"diagnose\", 0);\n        dasDiagnose.append(\"version\", \"1.15.1\");\n        dasDiagnose.append(\"entrance\", \"com.ppdai.das.client.DasDiagnoseTest.TestDasDiagnose()\");\n\n        dasDiagnose.append(\"totalShard\", \"2\");\n        for (int i = 0; i < 2; i++) {\n            String shardName = \"shard\" + i;\n            DasDiagnose shardDiagnose = dasDiagnose.spawn(shardName);\n            shardDiagnose.append(shardName + \".totalTask\", \"2\");\n\n            for (int j = 2; j > 0; j--) {\n                String taskName = \"task\" + j;\n                DasDiagnose taskDiagnose = shardDiagnose.spawn(taskName);\n                taskDiagnose.append(taskName + \".totalStatement\", \"3\");\n\n                for (int k = 0; k < 3; k++) {\n                    String statementName = \"statement\" + k;\n                    DasDiagnose statementDiagnose = taskDiagnose.spawn(statementName);\n\n                    statementDiagnose.append(statementName + \".dbConnectString\", \"mysql://localhost:3306\");\n                    statementDiagnose.append(statementName + \".sql\", \"select * from db\");\n                    statementDiagnose.append(statementName + \".startTime\", \"2018-08-06 01:57\");\n                    statementDiagnose.append(statementName + \".endTime\", \"2018-08-06 02:57\");\n                    statementDiagnose.append(statementName + \".isSuccess\", \"false\");\n                    statementDiagnose.append(statementName + \".exception\", new Exception(\"test\"));\n                    statementDiagnose.append(statementName + \".cost\", \"6000\");\n                }\n            }\n        }\n\n        String info = dasDiagnose.toString();\n        System.out.println(info);\n    }", "signature": "void TestDasDiagnose()", "full_signature": "@Test public void TestDasDiagnose()", "class_method_signature": "DasDiagnoseTest.TestDasDiagnose()", "testcase": true, "constructor": false, "invocations": ["append", "append", "append", "spawn", "append", "spawn", "append", "spawn", "append", "append", "append", "append", "append", "append", "append", "toString", "println"]}, "focal_class": {"identifier": "DasDiagnose", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private Integer spaceLevel;", "modifier": "private", "type": "Integer", "declarator": "spaceLevel", "var_name": "spaceLevel"}, {"original_string": "private DasDiagnose parentDiagnose = null;", "modifier": "private", "type": "DasDiagnose", "declarator": "parentDiagnose = null", "var_name": "parentDiagnose"}, {"original_string": "private List<DasDiagnose> childDiagnoses = new LinkedList<>();", "modifier": "private", "type": "List<DasDiagnose>", "declarator": "childDiagnoses = new LinkedList<>()", "var_name": "childDiagnoses"}, {"original_string": "private Map<String, Object> diagnoseInfoMap = new LinkedHashMap<>();", "modifier": "private", "type": "Map<String, Object>", "declarator": "diagnoseInfoMap = new LinkedHashMap<>()", "var_name": "diagnoseInfoMap"}], "methods": [{"identifier": "DasDiagnose", "parameters": "(String name, Integer spaceLevel)", "modifiers": "public", "return": "", "signature": " DasDiagnose(String name, Integer spaceLevel)", "full_signature": "public  DasDiagnose(String name, Integer spaceLevel)", "class_method_signature": "DasDiagnose.DasDiagnose(String name, Integer spaceLevel)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "DasDiagnose.getName()", "testcase": false, "constructor": false}, {"identifier": "getParentDiagnose", "parameters": "()", "modifiers": "public", "return": "DasDiagnose", "signature": "DasDiagnose getParentDiagnose()", "full_signature": "public DasDiagnose getParentDiagnose()", "class_method_signature": "DasDiagnose.getParentDiagnose()", "testcase": false, "constructor": false}, {"identifier": "setParentDiagnose", "parameters": "(DasDiagnose parentDiagnose)", "modifiers": "public", "return": "void", "signature": "void setParentDiagnose(DasDiagnose parentDiagnose)", "full_signature": "public void setParentDiagnose(DasDiagnose parentDiagnose)", "class_method_signature": "DasDiagnose.setParentDiagnose(DasDiagnose parentDiagnose)", "testcase": false, "constructor": false}, {"identifier": "spawn", "parameters": "(String name)", "modifiers": "public", "return": "DasDiagnose", "signature": "DasDiagnose spawn(String name)", "full_signature": "public DasDiagnose spawn(String name)", "class_method_signature": "DasDiagnose.spawn(String name)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(String key, Object info)", "modifiers": "public synchronized", "return": "void", "signature": "void append(String key, Object info)", "full_signature": "public synchronized void append(String key, Object info)", "class_method_signature": "DasDiagnose.append(String key, Object info)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DasDiagnose.toString()", "testcase": false, "constructor": false}, {"identifier": "getSpaceLevel", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getSpaceLevel()", "full_signature": "public Integer getSpaceLevel()", "class_method_signature": "DasDiagnose.getSpaceLevel()", "testcase": false, "constructor": false}, {"identifier": "getChildDiagnoses", "parameters": "()", "modifiers": "public", "return": "List<DasDiagnose>", "signature": "List<DasDiagnose> getChildDiagnoses()", "full_signature": "public List<DasDiagnose> getChildDiagnoses()", "class_method_signature": "DasDiagnose.getChildDiagnoses()", "testcase": false, "constructor": false}, {"identifier": "getDiagnoseInfoMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getDiagnoseInfoMap()", "full_signature": "public Map<String, Object> getDiagnoseInfoMap()", "class_method_signature": "DasDiagnose.getDiagnoseInfoMap()", "testcase": false, "constructor": false}], "file": "das-client/src/main/java/com/ppdai/das/core/DasDiagnose.java"}, "focal_method": {"identifier": "DasDiagnose", "parameters": "(String name, Integer spaceLevel)", "modifiers": "public", "return": "", "body": "public DasDiagnose(String name, Integer spaceLevel) {\n        if (spaceLevel < 0) {\n            spaceLevel = 0;\n        }\n\n        this.name = name;\n        this.spaceLevel = spaceLevel;\n    }", "signature": " DasDiagnose(String name, Integer spaceLevel)", "full_signature": "public  DasDiagnose(String name, Integer spaceLevel)", "class_method_signature": "DasDiagnose.DasDiagnose(String name, Integer spaceLevel)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}