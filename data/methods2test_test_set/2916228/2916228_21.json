{"test_class": {"identifier": "DeleteTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Repository repository;", "modifier": "private", "type": "Repository", "declarator": "repository", "var_name": "repository"}], "file": "propoid-db/src/test/java/propoid/db/operation/DeleteTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() throws Exception {\n\n\t\tFoo foo = repository.query(new Foo()).single();\n\t\trepository.delete(foo);\n\n\t\tassertEquals(0, repository.query(new Foo()).count());\n\t\tassertEquals(0, repository.query(new Bar()).count());\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "DeleteTest.test()", "testcase": true, "constructor": false, "invocations": ["single", "query", "delete", "assertEquals", "count", "query", "assertEquals", "count", "query"]}, "focal_class": {"identifier": "Delete", "superclass": "extends Operation", "interfaces": "", "fields": [], "methods": [{"identifier": "Delete", "parameters": "(Repository repository)", "modifiers": "public", "return": "", "signature": " Delete(Repository repository)", "full_signature": "public  Delete(Repository repository)", "class_method_signature": "Delete.Delete(Repository repository)", "testcase": false, "constructor": true}, {"identifier": "now", "parameters": "(Propoid propoid)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void now(Propoid propoid)", "full_signature": "@SuppressWarnings(\"unchecked\") public void now(Propoid propoid)", "class_method_signature": "Delete.now(Propoid propoid)", "testcase": false, "constructor": false}, {"identifier": "beforeBind", "parameters": "(Property<?> property, Mapper<?> mapper)", "modifiers": "@Override protected", "return": "void", "signature": "void beforeBind(Property<?> property, Mapper<?> mapper)", "full_signature": "@Override protected void beforeBind(Property<?> property, Mapper<?> mapper)", "class_method_signature": "Delete.beforeBind(Property<?> property, Mapper<?> mapper)", "testcase": false, "constructor": false}], "file": "propoid-db/src/main/java/propoid/db/operation/Delete.java"}, "focal_method": {"identifier": "Delete", "parameters": "(Repository repository)", "modifiers": "public", "return": "", "body": "public Delete(Repository repository) {\n\t\tsuper(repository);\n\t}", "signature": " Delete(Repository repository)", "full_signature": "public  Delete(Repository repository)", "class_method_signature": "Delete.Delete(Repository repository)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 2916228, "url": "https://github.com/svenmeier/propoid", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 475, "license": "licensed"}}