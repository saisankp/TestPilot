{"test_class": {"identifier": "HttpServletResponseWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "HttpServletRequest request = mock(HttpServletRequest.class);", "modifier": "", "type": "HttpServletRequest", "declarator": "request = mock(HttpServletRequest.class)", "var_name": "request"}, {"original_string": "HttpServletResponse response = mock(HttpServletResponse.class);", "modifier": "", "type": "HttpServletResponse", "declarator": "response = mock(HttpServletResponse.class)", "var_name": "response"}], "file": "instrumentation/servlet/src/test/java/brave/servlet/HttpServletResponseWrapperTest.java"}, "test_case": {"identifier": "statusCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void statusCode() {\n    when(response.getStatus()).thenReturn(200);\n\n    HttpServerResponse wrapper = HttpServletResponseWrapper.create(request, response, null);\n\n    assertThat(wrapper.statusCode()).isEqualTo(200);\n  }", "signature": "void statusCode()", "full_signature": "@Test public void statusCode()", "class_method_signature": "HttpServletResponseWrapperTest.statusCode()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getStatus", "create", "isEqualTo", "assertThat", "statusCode"]}, "focal_class": {"identifier": "HttpServletResponseWrapper", "superclass": "extends HttpServerResponse", "interfaces": "", "fields": [{"original_string": "@Nullable final HttpServletRequestWrapper request;", "modifier": "@Nullable final", "type": "HttpServletRequestWrapper", "declarator": "request", "var_name": "request"}, {"original_string": "final HttpServletResponse response;", "modifier": "final", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Nullable final Throwable caught;", "modifier": "@Nullable final", "type": "Throwable", "declarator": "caught", "var_name": "caught"}], "methods": [{"identifier": "create", "parameters": "(@Nullable HttpServletRequest request,\n    HttpServletResponse response, @Nullable Throwable caught)", "modifiers": "public static", "return": "HttpServerResponse", "signature": "HttpServerResponse create(@Nullable HttpServletRequest request,\n    HttpServletResponse response, @Nullable Throwable caught)", "full_signature": "public static HttpServerResponse create(@Nullable HttpServletRequest request,\n    HttpServletResponse response, @Nullable Throwable caught)", "class_method_signature": "HttpServletResponseWrapper.create(@Nullable HttpServletRequest request,\n    HttpServletResponse response, @Nullable Throwable caught)", "testcase": false, "constructor": false}, {"identifier": "HttpServletResponseWrapper", "parameters": "(@Nullable HttpServletRequest request, HttpServletResponse response,\n    @Nullable Throwable caught)", "modifiers": "", "return": "", "signature": " HttpServletResponseWrapper(@Nullable HttpServletRequest request, HttpServletResponse response,\n    @Nullable Throwable caught)", "full_signature": "  HttpServletResponseWrapper(@Nullable HttpServletRequest request, HttpServletResponse response,\n    @Nullable Throwable caught)", "class_method_signature": "HttpServletResponseWrapper.HttpServletResponseWrapper(@Nullable HttpServletRequest request, HttpServletResponse response,\n    @Nullable Throwable caught)", "testcase": false, "constructor": true}, {"identifier": "unwrap", "parameters": "()", "modifiers": "@Override public final", "return": "Object", "signature": "Object unwrap()", "full_signature": "@Override public final Object unwrap()", "class_method_signature": "HttpServletResponseWrapper.unwrap()", "testcase": false, "constructor": false}, {"identifier": "request", "parameters": "()", "modifiers": "@Override @Nullable public", "return": "HttpServletRequestWrapper", "signature": "HttpServletRequestWrapper request()", "full_signature": "@Override @Nullable public HttpServletRequestWrapper request()", "class_method_signature": "HttpServletResponseWrapper.request()", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "()", "modifiers": "@Override public", "return": "Throwable", "signature": "Throwable error()", "full_signature": "@Override public Throwable error()", "class_method_signature": "HttpServletResponseWrapper.error()", "testcase": false, "constructor": false}, {"identifier": "statusCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int statusCode()", "full_signature": "@Override public int statusCode()", "class_method_signature": "HttpServletResponseWrapper.statusCode()", "testcase": false, "constructor": false}], "file": "instrumentation/servlet/src/main/java/brave/servlet/HttpServletResponseWrapper.java"}, "focal_method": {"identifier": "statusCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override public int statusCode() {\n    int result = ServletRuntime.get().status(response);\n    if (caught != null && result == 200) { // We may have a potentially bad status due to defaults\n      // Servlet only seems to define one exception that has a built-in code. Logic in Jetty\n      // defaults the status to 500 otherwise.\n      if (caught instanceof UnavailableException) {\n        return ((UnavailableException) caught).isPermanent() ? 404 : 503;\n      }\n      return 500;\n    }\n    return result;\n  }", "signature": "int statusCode()", "full_signature": "@Override public int statusCode()", "class_method_signature": "HttpServletResponseWrapper.statusCode()", "testcase": false, "constructor": false, "invocations": ["status", "get", "isPermanent"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}