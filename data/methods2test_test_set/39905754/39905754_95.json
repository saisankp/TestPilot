{"test_class": {"identifier": "TreeParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "Beirut/2015/2015-10-21-Max-Path-Sum/src/test/java/TreeParserTest.java"}, "test_case": {"identifier": "it_builds_a_tree_from_a_file", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void\n   it_builds_a_tree_from_a_file() throws Exception{\n      Assertions.assertThat(\n        Tree.Builder.aTreeBuilder()\n          .withRow(Lists.newArrayList(3))\n          .withRow(Lists.newArrayList(7, 4))\n          .withRow(Lists.newArrayList(2, 4, 6))\n          .withRow(Lists.newArrayList(8, 5, 9, 3)).build()).isEqualTo(\n        TreeParser.parseTree(Paths.get(ClassLoader.getSystemResource(\"SmallTree.txt\").toURI())));\n   }", "signature": "void it_builds_a_tree_from_a_file()", "full_signature": "@Test public void it_builds_a_tree_from_a_file()", "class_method_signature": "TreeParserTest.it_builds_a_tree_from_a_file()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "build", "withRow", "withRow", "withRow", "withRow", "aTreeBuilder", "newArrayList", "newArrayList", "newArrayList", "newArrayList", "parseTree", "get", "toURI", "getSystemResource"]}, "focal_class": {"identifier": "TreeParser", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parseLine", "parameters": "(String line)", "modifiers": "private static", "return": "List<Integer>", "signature": "List<Integer> parseLine(String line)", "full_signature": "private static List<Integer> parseLine(String line)", "class_method_signature": "TreeParser.parseLine(String line)", "testcase": false, "constructor": false}, {"identifier": "parseTree", "parameters": "(Path path)", "modifiers": "public static", "return": "Tree", "signature": "Tree parseTree(Path path)", "full_signature": "public static Tree parseTree(Path path)", "class_method_signature": "TreeParser.parseTree(Path path)", "testcase": false, "constructor": false}], "file": "Beirut/2015/2015-10-21-Max-Path-Sum/src/main/java/TreeParser.java"}, "focal_method": {"identifier": "parseTree", "parameters": "(Path path)", "modifiers": "public static", "return": "Tree", "body": "public static Tree parseTree(Path path) throws IOException {\n      Tree.Builder builder = Tree.Builder.aTreeBuilder();\n\n      Files.lines(path)\n        .forEach(line -> builder.withRow(parseLine(line)));\n\n      return builder.build();\n\n   }", "signature": "Tree parseTree(Path path)", "full_signature": "public static Tree parseTree(Path path)", "class_method_signature": "TreeParser.parseTree(Path path)", "testcase": false, "constructor": false, "invocations": ["aTreeBuilder", "forEach", "lines", "withRow", "parseLine", "build"]}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}