{"test_class": {"identifier": "UtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "tools/java/runfiles/UtilTest.java"}, "test_case": {"identifier": "testCheckArgument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCheckArgument() throws Exception {\n    Util.checkArgument(true, null, null);\n\n    try {\n      Util.checkArgument(false, null, null);\n      fail(\"expected failure\");\n    } catch (IllegalArgumentException e) {\n      assertThat(e).hasMessageThat().isEqualTo(\"argument validation failed\");\n    }\n\n    try {\n      Util.checkArgument(false, \"foo-%s\", 42);\n      fail(\"expected failure\");\n    } catch (IllegalArgumentException e) {\n      assertThat(e).hasMessageThat().isEqualTo(\"foo-42\");\n    }\n  }", "signature": "void testCheckArgument()", "full_signature": "@Test public void testCheckArgument()", "class_method_signature": "UtilTest.testCheckArgument()", "testcase": true, "constructor": false, "invocations": ["checkArgument", "checkArgument", "fail", "isEqualTo", "hasMessageThat", "assertThat", "checkArgument", "fail", "isEqualTo", "hasMessageThat", "assertThat"]}, "focal_class": {"identifier": "Util", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Util", "parameters": "()", "modifiers": "private", "return": "", "signature": " Util()", "full_signature": "private  Util()", "class_method_signature": "Util.Util()", "testcase": false, "constructor": true}, {"identifier": "isNullOrEmpty", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNullOrEmpty(String s)", "full_signature": "public static boolean isNullOrEmpty(String s)", "class_method_signature": "Util.isNullOrEmpty(String s)", "testcase": false, "constructor": false}, {"identifier": "checkArgument", "parameters": "(boolean condition)", "modifiers": "public static", "return": "void", "signature": "void checkArgument(boolean condition)", "full_signature": "public static void checkArgument(boolean condition)", "class_method_signature": "Util.checkArgument(boolean condition)", "testcase": false, "constructor": false}, {"identifier": "checkArgument", "parameters": "(boolean condition, String error, Object arg1)", "modifiers": "public static", "return": "void", "signature": "void checkArgument(boolean condition, String error, Object arg1)", "full_signature": "public static void checkArgument(boolean condition, String error, Object arg1)", "class_method_signature": "Util.checkArgument(boolean condition, String error, Object arg1)", "testcase": false, "constructor": false}], "file": "tools/java/runfiles/Util.java"}, "focal_method": {"identifier": "checkArgument", "parameters": "(boolean condition)", "modifiers": "public static", "return": "void", "body": "public static void checkArgument(boolean condition) {\n    checkArgument(condition, null, null);\n  }", "signature": "void checkArgument(boolean condition)", "full_signature": "public static void checkArgument(boolean condition)", "class_method_signature": "Util.checkArgument(boolean condition)", "testcase": false, "constructor": false, "invocations": ["checkArgument"]}, "repository": {"repo_id": 165012876, "url": "https://github.com/FengRillian/bazel-0.21.0-dist", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 80487, "license": "licensed"}}