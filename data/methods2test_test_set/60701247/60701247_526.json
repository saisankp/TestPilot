{"test_class": {"identifier": "RangeTimeScrollBarTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double EPSILON = 1e-4;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 1e-4", "var_name": "EPSILON"}], "file": "adt-ui/src/test/java/com/android/tools/adtui/RangeTimeScrollBarTest.java"}, "test_case": {"identifier": "testRangeChanged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRangeChanged() {\n    Range global = new Range(secToUs(0), secToUs(10));\n    Range view = new Range(secToUs(2), secToUs(5));\n    RangeTimeScrollBar scrollBar = new RangeTimeScrollBar(global, view, TimeUnit.MICROSECONDS);\n\n    // view range changed\n    assertThat(scrollBar.getValue()).isEqualTo(secToMillis(2));\n    assertThat(scrollBar.getVisibleAmount()).isEqualTo(secToMillis(5 - 2));\n\n    view.set(secToUs(3), secToUs(8));\n\n    assertThat(scrollBar.getValue()).isEqualTo(secToMillis(3));\n    assertThat(scrollBar.getVisibleAmount()).isEqualTo(secToMillis(8 - 3));\n\n    // global range changed\n    assertThat(scrollBar.getMinimum()).isEqualTo(secToMillis(0));\n    assertThat(scrollBar.getMaximum()).isEqualTo(secToMillis(10));\n\n    global.set(secToUs(0), secToUs(15));\n\n    assertThat(scrollBar.getMinimum()).isEqualTo(secToMillis(0));\n    assertThat(scrollBar.getMaximum()).isEqualTo(secToMillis(15));\n  }", "signature": "void testRangeChanged()", "full_signature": "@Test public void testRangeChanged()", "class_method_signature": "RangeTimeScrollBarTest.testRangeChanged()", "testcase": true, "constructor": false, "invocations": ["secToUs", "secToUs", "secToUs", "secToUs", "isEqualTo", "assertThat", "getValue", "secToMillis", "isEqualTo", "assertThat", "getVisibleAmount", "secToMillis", "set", "secToUs", "secToUs", "isEqualTo", "assertThat", "getValue", "secToMillis", "isEqualTo", "assertThat", "getVisibleAmount", "secToMillis", "isEqualTo", "assertThat", "getMinimum", "secToMillis", "isEqualTo", "assertThat", "getMaximum", "secToMillis", "set", "secToUs", "secToUs", "isEqualTo", "assertThat", "getMinimum", "secToMillis", "isEqualTo", "assertThat", "getMaximum", "secToMillis"]}, "focal_class": {"identifier": "RangeTimeScrollBar", "superclass": "extends JBScrollBar", "interfaces": "", "fields": [{"original_string": "@NotNull\n  private final Range myGlobalRange;", "modifier": "@NotNull\n  private final", "type": "Range", "declarator": "myGlobalRange", "var_name": "myGlobalRange"}, {"original_string": "@NotNull\n  private final Range myViewRange;", "modifier": "@NotNull\n  private final", "type": "Range", "declarator": "myViewRange", "var_name": "myViewRange"}, {"original_string": "@NotNull\n  private final TimeUnit myUnit;", "modifier": "@NotNull\n  private final", "type": "TimeUnit", "declarator": "myUnit", "var_name": "myUnit"}, {"original_string": "@NotNull\n  private final AspectObserver myObserver;", "modifier": "@NotNull\n  private final", "type": "AspectObserver", "declarator": "myObserver", "var_name": "myObserver"}, {"original_string": "private boolean myUpdating;", "modifier": "private", "type": "boolean", "declarator": "myUpdating", "var_name": "myUpdating"}], "methods": [{"identifier": "RangeTimeScrollBar", "parameters": "(@NotNull Range globalRange, @NotNull Range viewRange, @NotNull TimeUnit unit)", "modifiers": "public", "return": "", "signature": " RangeTimeScrollBar(@NotNull Range globalRange, @NotNull Range viewRange, @NotNull TimeUnit unit)", "full_signature": "public  RangeTimeScrollBar(@NotNull Range globalRange, @NotNull Range viewRange, @NotNull TimeUnit unit)", "class_method_signature": "RangeTimeScrollBar.RangeTimeScrollBar(@NotNull Range globalRange, @NotNull Range viewRange, @NotNull TimeUnit unit)", "testcase": false, "constructor": true}, {"identifier": "rangeChanged", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void rangeChanged()", "full_signature": "private void rangeChanged()", "class_method_signature": "RangeTimeScrollBar.rangeChanged()", "testcase": false, "constructor": false}, {"identifier": "updateViewRange", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateViewRange()", "full_signature": "private void updateViewRange()", "class_method_signature": "RangeTimeScrollBar.updateViewRange()", "testcase": false, "constructor": false}, {"identifier": "unitToMs", "parameters": "(double duration)", "modifiers": "private", "return": "int", "signature": "int unitToMs(double duration)", "full_signature": "private int unitToMs(double duration)", "class_method_signature": "RangeTimeScrollBar.unitToMs(double duration)", "testcase": false, "constructor": false}, {"identifier": "msToUnit", "parameters": "(double duration)", "modifiers": "private", "return": "double", "signature": "double msToUnit(double duration)", "full_signature": "private double msToUnit(double duration)", "class_method_signature": "RangeTimeScrollBar.msToUnit(double duration)", "testcase": false, "constructor": false}], "file": "adt-ui/src/main/java/com/android/tools/adtui/RangeTimeScrollBar.java"}, "focal_method": {"identifier": "rangeChanged", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void rangeChanged() {\n    myUpdating = true;\n    // We convert the given time ranges to milliseconds to prevent from integer overflow,\n    // because JScrollBar API based on ints.\n    int globalLengthMs = unitToMs(myGlobalRange.getLength());\n\n    Range intersection = myGlobalRange.getIntersection(myViewRange);\n    if (!intersection.isEmpty()) {\n      int viewLengthMs = unitToMs(intersection.getLength());\n      int viewRelativeMinMs = unitToMs(intersection.getMin() - myGlobalRange.getMin());\n      setValues(viewRelativeMinMs, viewLengthMs, 0, globalLengthMs);\n    } else {\n      setValues(myViewRange.getMax() < myGlobalRange.getMin() ? 0 : globalLengthMs, 0, 0, globalLengthMs);\n    }\n\n    myUpdating = false;\n  }", "signature": "void rangeChanged()", "full_signature": "private void rangeChanged()", "class_method_signature": "RangeTimeScrollBar.rangeChanged()", "testcase": false, "constructor": false, "invocations": ["unitToMs", "getLength", "getIntersection", "isEmpty", "unitToMs", "getLength", "unitToMs", "getMin", "getMin", "setValues", "setValues", "getMax", "getMin"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}