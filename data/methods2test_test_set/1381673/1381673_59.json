{"test_class": {"identifier": "ScenarioJunitActivatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ScenarioSimulationXMLPersistence xmlReaderMock;", "modifier": "@Mock\n    private", "type": "ScenarioSimulationXMLPersistence", "declarator": "xmlReaderMock", "var_name": "xmlReaderMock"}, {"original_string": "@Mock\n    private KieContainer kieContainerMock;", "modifier": "@Mock\n    private", "type": "KieContainer", "declarator": "kieContainerMock", "var_name": "kieContainerMock"}, {"original_string": "@Mock\n    private AbstractScenarioRunner runnerMock;", "modifier": "@Mock\n    private", "type": "AbstractScenarioRunner", "declarator": "runnerMock", "var_name": "runnerMock"}, {"original_string": "@Mock\n    private ScenarioRunnerDTO scenarioRunnerDTOMock;", "modifier": "@Mock\n    private", "type": "ScenarioRunnerDTO", "declarator": "scenarioRunnerDTOMock", "var_name": "scenarioRunnerDTOMock"}, {"original_string": "@Mock\n    private ScenarioSimulationModel scenarioSimulationModelMock;", "modifier": "@Mock\n    private", "type": "ScenarioSimulationModel", "declarator": "scenarioSimulationModelMock", "var_name": "scenarioSimulationModelMock"}, {"original_string": "@Mock\n    private RunNotifier runNotifierMock;", "modifier": "@Mock\n    private", "type": "RunNotifier", "declarator": "runNotifierMock", "var_name": "runNotifierMock"}, {"original_string": "private Simulation simulationLocal;", "modifier": "private", "type": "Simulation", "declarator": "simulationLocal", "var_name": "simulationLocal"}, {"original_string": "private Settings settingsLocal;", "modifier": "private", "type": "Settings", "declarator": "settingsLocal", "var_name": "settingsLocal"}], "file": "drools-scenario-simulation/drools-scenario-simulation-backend/src/test/java/org/drools/scenariosimulation/backend/runner/ScenarioJunitActivatorTest.java"}, "test_case": {"identifier": "runChildTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void runChildTest() throws InitializationError {\n        getScenarioJunitActivator().runChild(scenarioRunnerDTOMock, runNotifierMock);\n        verify(runnerMock, times(1)).run(runNotifierMock);\n    }", "signature": "void runChildTest()", "full_signature": "@Test public void runChildTest()", "class_method_signature": "ScenarioJunitActivatorTest.runChildTest()", "testcase": true, "constructor": false, "invocations": ["runChild", "getScenarioJunitActivator", "run", "verify", "times"]}, "focal_class": {"identifier": "ScenarioJunitActivator", "superclass": "extends ParentRunner<ScenarioRunnerDTO>", "interfaces": "", "fields": [{"original_string": "public static final String ACTIVATOR_CLASS_NAME = \"ScenarioJunitActivatorTest\";", "modifier": "public static final", "type": "String", "declarator": "ACTIVATOR_CLASS_NAME = \"ScenarioJunitActivatorTest\"", "var_name": "ACTIVATOR_CLASS_NAME"}, {"original_string": "public static final Function<String, String> ACTIVATOR_CLASS_CODE = modulePackage ->\n            String.format(\"package %s;\\n/**\\n* Do not remove this file\\n*/\\n@%s(%s.class)\\npublic class %s {\\n}\",\n                          modulePackage,\n                          RunWith.class.getCanonicalName(),\n                          ScenarioJunitActivator.class.getCanonicalName(),\n                          ScenarioJunitActivator.ACTIVATOR_CLASS_NAME);", "modifier": "public static final", "type": "Function<String, String>", "declarator": "ACTIVATOR_CLASS_CODE = modulePackage ->\n            String.format(\"package %s;\\n/**\\n* Do not remove this file\\n*/\\n@%s(%s.class)\\npublic class %s {\\n}\",\n                          modulePackage,\n                          RunWith.class.getCanonicalName(),\n                          ScenarioJunitActivator.class.getCanonicalName(),\n                          ScenarioJunitActivator.ACTIVATOR_CLASS_NAME)", "var_name": "ACTIVATOR_CLASS_CODE"}], "methods": [{"identifier": "ScenarioJunitActivator", "parameters": "(Class<?> testClass)", "modifiers": "public", "return": "", "signature": " ScenarioJunitActivator(Class<?> testClass)", "full_signature": "public  ScenarioJunitActivator(Class<?> testClass)", "class_method_signature": "ScenarioJunitActivator.ScenarioJunitActivator(Class<?> testClass)", "testcase": false, "constructor": true}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override protected", "return": "List<ScenarioRunnerDTO>", "signature": "List<ScenarioRunnerDTO> getChildren()", "full_signature": "@Override protected List<ScenarioRunnerDTO> getChildren()", "class_method_signature": "ScenarioJunitActivator.getChildren()", "testcase": false, "constructor": false}, {"identifier": "describeChild", "parameters": "(ScenarioRunnerDTO child)", "modifiers": "@Override protected", "return": "Description", "signature": "Description describeChild(ScenarioRunnerDTO child)", "full_signature": "@Override protected Description describeChild(ScenarioRunnerDTO child)", "class_method_signature": "ScenarioJunitActivator.describeChild(ScenarioRunnerDTO child)", "testcase": false, "constructor": false}, {"identifier": "runChild", "parameters": "(ScenarioRunnerDTO child, RunNotifier notifier)", "modifiers": "@Override protected", "return": "void", "signature": "void runChild(ScenarioRunnerDTO child, RunNotifier notifier)", "full_signature": "@Override protected void runChild(ScenarioRunnerDTO child, RunNotifier notifier)", "class_method_signature": "ScenarioJunitActivator.runChild(ScenarioRunnerDTO child, RunNotifier notifier)", "testcase": false, "constructor": false}, {"identifier": "parseFile", "parameters": "(String path)", "modifiers": "protected", "return": "ScenarioRunnerDTO", "signature": "ScenarioRunnerDTO parseFile(String path)", "full_signature": "protected ScenarioRunnerDTO parseFile(String path)", "class_method_signature": "ScenarioJunitActivator.parseFile(String path)", "testcase": false, "constructor": false}, {"identifier": "isNotSkipFromBuild", "parameters": "(Settings settings)", "modifiers": "protected", "return": "boolean", "signature": "boolean isNotSkipFromBuild(Settings settings)", "full_signature": "protected boolean isNotSkipFromBuild(Settings settings)", "class_method_signature": "ScenarioJunitActivator.isNotSkipFromBuild(Settings settings)", "testcase": false, "constructor": false}, {"identifier": "getXmlReader", "parameters": "()", "modifiers": "", "return": "ScenarioSimulationXMLPersistence", "signature": "ScenarioSimulationXMLPersistence getXmlReader()", "full_signature": " ScenarioSimulationXMLPersistence getXmlReader()", "class_method_signature": "ScenarioJunitActivator.getXmlReader()", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "()", "modifiers": "", "return": "Stream<String>", "signature": "Stream<String> getResources()", "full_signature": " Stream<String> getResources()", "class_method_signature": "ScenarioJunitActivator.getResources()", "testcase": false, "constructor": false}, {"identifier": "getKieContainer", "parameters": "()", "modifiers": "", "return": "KieContainer", "signature": "KieContainer getKieContainer()", "full_signature": " KieContainer getKieContainer()", "class_method_signature": "ScenarioJunitActivator.getKieContainer()", "testcase": false, "constructor": false}, {"identifier": "newRunner", "parameters": "(KieContainer kieContainer, ScenarioRunnerDTO scenarioRunnerDTO)", "modifiers": "", "return": "AbstractScenarioRunner", "signature": "AbstractScenarioRunner newRunner(KieContainer kieContainer, ScenarioRunnerDTO scenarioRunnerDTO)", "full_signature": " AbstractScenarioRunner newRunner(KieContainer kieContainer, ScenarioRunnerDTO scenarioRunnerDTO)", "class_method_signature": "ScenarioJunitActivator.newRunner(KieContainer kieContainer, ScenarioRunnerDTO scenarioRunnerDTO)", "testcase": false, "constructor": false}], "file": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/runner/ScenarioJunitActivator.java"}, "focal_method": {"identifier": "runChild", "parameters": "(ScenarioRunnerDTO child, RunNotifier notifier)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void runChild(ScenarioRunnerDTO child, RunNotifier notifier) {\n        KieContainer kieClasspathContainer = getKieContainer();\n        AbstractScenarioRunner scenarioRunner = newRunner(kieClasspathContainer, child);\n        scenarioRunner.run(notifier);\n    }", "signature": "void runChild(ScenarioRunnerDTO child, RunNotifier notifier)", "full_signature": "@Override protected void runChild(ScenarioRunnerDTO child, RunNotifier notifier)", "class_method_signature": "ScenarioJunitActivator.runChild(ScenarioRunnerDTO child, RunNotifier notifier)", "testcase": false, "constructor": false, "invocations": ["getKieContainer", "newRunner", "run"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}