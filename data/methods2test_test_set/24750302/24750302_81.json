{"test_class": {"identifier": "NameValidationUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "alien4cloud-common/src/test/java/alien4cloud/utils/NameValidationUtilsTest.java"}, "test_case": {"identifier": "isValidTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isValidTest() {\n        Assert.assertTrue(NameValidationUtils.isValid(\"Compute\"));\n        Assert.assertTrue(NameValidationUtils.isValid(\"Compute_2\"));\n\n        Assert.assertFalse(NameValidationUtils.isValid(\"Comput\u00e9\"));\n        Assert.assertFalse(NameValidationUtils.isValid(\"Compute-2\"));\n        Assert.assertFalse(NameValidationUtils.isValid(\"Compute.unix\"));\n        Assert.assertFalse(NameValidationUtils.isValid(\"Compute 2\"));\n    }", "signature": "void isValidTest()", "full_signature": "@Test public void isValidTest()", "class_method_signature": "NameValidationUtilsTest.isValidTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isValid", "assertTrue", "isValid", "assertFalse", "isValid", "assertFalse", "isValid", "assertFalse", "isValid", "assertFalse", "isValid"]}, "focal_class": {"identifier": "NameValidationUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_NAME_REGEX = \"^\\\\w+$\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_NAME_REGEX = \"^\\\\w+$\"", "var_name": "DEFAULT_NAME_REGEX"}, {"original_string": "public static final Pattern DEFAULT_NAME_REPLACE_PATTERN = Pattern.compile(\"\\\\W\");", "modifier": "public static final", "type": "Pattern", "declarator": "DEFAULT_NAME_REPLACE_PATTERN = Pattern.compile(\"\\\\W\")", "var_name": "DEFAULT_NAME_REPLACE_PATTERN"}, {"original_string": "public static final String APPLICATION_NAME_REGEX = \"[^/\\\\\\\\]+\";", "modifier": "public static final", "type": "String", "declarator": "APPLICATION_NAME_REGEX = \"[^/\\\\\\\\]+\"", "var_name": "APPLICATION_NAME_REGEX"}, {"original_string": "public static final String NODE_NAME_REGEX = DEFAULT_NAME_REGEX;", "modifier": "public static final", "type": "String", "declarator": "NODE_NAME_REGEX = DEFAULT_NAME_REGEX", "var_name": "NODE_NAME_REGEX"}], "methods": [{"identifier": "isValid", "parameters": "(String name, String regex)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValid(String name, String regex)", "full_signature": "private static boolean isValid(String name, String regex)", "class_method_signature": "NameValidationUtils.isValid(String name, String regex)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValid(String name)", "full_signature": "public static boolean isValid(String name)", "class_method_signature": "NameValidationUtils.isValid(String name)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(String ownerKey, String name, String regex, String message)", "modifiers": "private static", "return": "void", "signature": "void validate(String ownerKey, String name, String regex, String message)", "full_signature": "private static void validate(String ownerKey, String name, String regex, String message)", "class_method_signature": "NameValidationUtils.validate(String ownerKey, String name, String regex, String message)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(String ownerKey, String name)", "modifiers": "public static", "return": "void", "signature": "void validate(String ownerKey, String name)", "full_signature": "public static void validate(String ownerKey, String name)", "class_method_signature": "NameValidationUtils.validate(String ownerKey, String name)", "testcase": false, "constructor": false}, {"identifier": "validateApplicationName", "parameters": "(String name)", "modifiers": "public static", "return": "void", "signature": "void validateApplicationName(String name)", "full_signature": "public static void validateApplicationName(String name)", "class_method_signature": "NameValidationUtils.validateApplicationName(String name)", "testcase": false, "constructor": false}, {"identifier": "validateApplicationId", "parameters": "(String id)", "modifiers": "public static", "return": "void", "signature": "void validateApplicationId(String id)", "full_signature": "public static void validateApplicationId(String id)", "class_method_signature": "NameValidationUtils.validateApplicationId(String id)", "testcase": false, "constructor": false}, {"identifier": "validateNodeName", "parameters": "(String name)", "modifiers": "public static", "return": "void", "signature": "void validateNodeName(String name)", "full_signature": "public static void validateNodeName(String name)", "class_method_signature": "NameValidationUtils.validateNodeName(String name)", "testcase": false, "constructor": false}], "file": "alien4cloud-common/src/main/java/alien4cloud/utils/NameValidationUtils.java"}, "focal_method": {"identifier": "isValid", "parameters": "(String name, String regex)", "modifiers": "private static", "return": "boolean", "body": "private static boolean isValid(String name, String regex) {\n        return Pattern.matches(regex, name);\n    }", "signature": "boolean isValid(String name, String regex)", "full_signature": "private static boolean isValid(String name, String regex)", "class_method_signature": "NameValidationUtils.isValid(String name, String regex)", "testcase": false, "constructor": false, "invocations": ["matches"]}, "repository": {"repo_id": 24750302, "url": "https://github.com/alien4cloud/alien4cloud", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 67, "size": 27647, "license": "licensed"}}