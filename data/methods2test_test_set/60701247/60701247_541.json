{"test_class": {"identifier": "WorkBenchManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private WorkBench myWorkBench1, myWorkBench2, myWorkBench3, myWorkBench4, myWorkBench5;", "modifier": "private", "type": "WorkBench", "declarator": "myWorkBench1", "var_name": "myWorkBench1"}, {"original_string": "private WorkBenchManager myManager;", "modifier": "private", "type": "WorkBenchManager", "declarator": "myManager", "var_name": "myManager"}], "file": "adt-ui/src/test/java/com/android/tools/adtui/workbench/WorkBenchManagerTest.java"}, "test_case": {"identifier": "testUpdateOtherWorkBenches", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testUpdateOtherWorkBenches() {\n    myManager.updateOtherWorkBenches(myWorkBench2);\n    verify(myWorkBench1).updateModel();\n    verify(myWorkBench2, never()).updateModel();\n    verify(myWorkBench3).updateModel();\n    verify(myWorkBench4, never()).updateModel();\n    verify(myWorkBench5, never()).updateModel();\n  }", "signature": "void testUpdateOtherWorkBenches()", "full_signature": "@Test public void testUpdateOtherWorkBenches()", "class_method_signature": "WorkBenchManagerTest.testUpdateOtherWorkBenches()", "testcase": true, "constructor": false, "invocations": ["updateOtherWorkBenches", "updateModel", "verify", "updateModel", "verify", "never", "updateModel", "verify", "updateModel", "verify", "never", "updateModel", "verify", "never"]}, "focal_class": {"identifier": "WorkBenchManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Multimap<String, WorkBench> myWorkBenches;", "modifier": "private", "type": "Multimap<String, WorkBench>", "declarator": "myWorkBenches", "var_name": "myWorkBenches"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "WorkBenchManager", "signature": "WorkBenchManager getInstance()", "full_signature": "public static WorkBenchManager getInstance()", "class_method_signature": "WorkBenchManager.getInstance()", "testcase": false, "constructor": false}, {"identifier": "WorkBenchManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " WorkBenchManager()", "full_signature": "public  WorkBenchManager()", "class_method_signature": "WorkBenchManager.WorkBenchManager()", "testcase": false, "constructor": true}, {"identifier": "register", "parameters": "(@NotNull WorkBench workBench)", "modifiers": "public", "return": "void", "signature": "void register(@NotNull WorkBench workBench)", "full_signature": "public void register(@NotNull WorkBench workBench)", "class_method_signature": "WorkBenchManager.register(@NotNull WorkBench workBench)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(@NotNull WorkBench workBench)", "modifiers": "public", "return": "void", "signature": "void unregister(@NotNull WorkBench workBench)", "full_signature": "public void unregister(@NotNull WorkBench workBench)", "class_method_signature": "WorkBenchManager.unregister(@NotNull WorkBench workBench)", "testcase": false, "constructor": false}, {"identifier": "storeDefaultLayout", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void storeDefaultLayout()", "full_signature": "public void storeDefaultLayout()", "class_method_signature": "WorkBenchManager.storeDefaultLayout()", "testcase": false, "constructor": false}, {"identifier": "restoreDefaultLayout", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void restoreDefaultLayout()", "full_signature": "public void restoreDefaultLayout()", "class_method_signature": "WorkBenchManager.restoreDefaultLayout()", "testcase": false, "constructor": false}, {"identifier": "updateOtherWorkBenches", "parameters": "(@NotNull WorkBench workBench)", "modifiers": "public", "return": "void", "signature": "void updateOtherWorkBenches(@NotNull WorkBench workBench)", "full_signature": "public void updateOtherWorkBenches(@NotNull WorkBench workBench)", "class_method_signature": "WorkBenchManager.updateOtherWorkBenches(@NotNull WorkBench workBench)", "testcase": false, "constructor": false}], "file": "adt-ui/src/main/java/com/android/tools/adtui/workbench/WorkBenchManager.java"}, "focal_method": {"identifier": "updateOtherWorkBenches", "parameters": "(@NotNull WorkBench workBench)", "modifiers": "public", "return": "void", "body": "public void updateOtherWorkBenches(@NotNull WorkBench workBench) {\n    Collection<WorkBench> workBenches = myWorkBenches.get(workBench.getName());\n    workBenches.stream().filter(bench -> bench != workBench).forEach(WorkBench::updateModel);\n  }", "signature": "void updateOtherWorkBenches(@NotNull WorkBench workBench)", "full_signature": "public void updateOtherWorkBenches(@NotNull WorkBench workBench)", "class_method_signature": "WorkBenchManager.updateOtherWorkBenches(@NotNull WorkBench workBench)", "testcase": false, "constructor": false, "invocations": ["get", "getName", "forEach", "filter", "stream"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}