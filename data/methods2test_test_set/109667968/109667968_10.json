{"test_class": {"identifier": "DataSourceConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/io/ona/kujaku/utils/config/DataSourceConfigTest.java"}, "test_case": {"identifier": "testIsValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsValid() throws InvalidMapBoxStyleException, JSONException {\n        DataSourceConfig config1 = new DataSourceConfig();\n        Assert.assertFalse(config1.isValid());\n\n        DataSourceConfig config2 = new DataSourceConfig(\"test\");\n        Assert.assertTrue(config2.isValid());\n\n        JSONObject object1 = new JSONObject();\n        object1.put(DataSourceConfig.KEY_NAME, \"test\");\n        DataSourceConfig config3 = new DataSourceConfig(object1);\n        Assert.assertTrue(config3.isValid());\n    }", "signature": "void testIsValid()", "full_signature": "@Test public void testIsValid()", "class_method_signature": "DataSourceConfigTest.testIsValid()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isValid", "assertTrue", "isValid", "put", "assertTrue", "isValid"]}, "focal_class": {"identifier": "DataSourceConfig", "superclass": "", "interfaces": "implements Config", "fields": [{"original_string": "public static final String KEY_NAME = \"name\";", "modifier": "public static final", "type": "String", "declarator": "KEY_NAME = \"name\"", "var_name": "KEY_NAME"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "DataSourceConfig", "parameters": "()", "modifiers": "public", "return": "", "signature": " DataSourceConfig()", "full_signature": "public  DataSourceConfig()", "class_method_signature": "DataSourceConfig.DataSourceConfig()", "testcase": false, "constructor": true}, {"identifier": "DataSourceConfig", "parameters": "(@NonNull String name)", "modifiers": "public", "return": "", "signature": " DataSourceConfig(@NonNull String name)", "full_signature": "public  DataSourceConfig(@NonNull String name)", "class_method_signature": "DataSourceConfig.DataSourceConfig(@NonNull String name)", "testcase": false, "constructor": true}, {"identifier": "DataSourceConfig", "parameters": "(JSONObject jsonObject)", "modifiers": "public", "return": "", "signature": " DataSourceConfig(JSONObject jsonObject)", "full_signature": "public  DataSourceConfig(JSONObject jsonObject)", "class_method_signature": "DataSourceConfig.DataSourceConfig(JSONObject jsonObject)", "testcase": false, "constructor": true}, {"identifier": "isValid", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "@Override public boolean isValid()", "class_method_signature": "DataSourceConfig.isValid()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "DataSourceConfig.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(@NonNull String name)", "modifiers": "public", "return": "void", "signature": "void setName(@NonNull String name)", "full_signature": "public void setName(@NonNull String name)", "class_method_signature": "DataSourceConfig.setName(@NonNull String name)", "testcase": false, "constructor": false}, {"identifier": "toJsonObject", "parameters": "()", "modifiers": "@Override public", "return": "JSONObject", "signature": "JSONObject toJsonObject()", "full_signature": "@Override public JSONObject toJsonObject()", "class_method_signature": "DataSourceConfig.toJsonObject()", "testcase": false, "constructor": false}, {"identifier": "extractDataSourceNames", "parameters": "(@NonNull ArrayList<DataSourceConfig> dataSourceConfigs)", "modifiers": "public static", "return": "String[]", "signature": "String[] extractDataSourceNames(@NonNull ArrayList<DataSourceConfig> dataSourceConfigs)", "full_signature": "public static String[] extractDataSourceNames(@NonNull ArrayList<DataSourceConfig> dataSourceConfigs)", "class_method_signature": "DataSourceConfig.extractDataSourceNames(@NonNull ArrayList<DataSourceConfig> dataSourceConfigs)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/io/ona/kujaku/utils/config/DataSourceConfig.java"}, "focal_method": {"identifier": "isValid", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isValid() {\n        return !TextUtils.isEmpty(name);\n    }", "signature": "boolean isValid()", "full_signature": "@Override public boolean isValid()", "class_method_signature": "DataSourceConfig.isValid()", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}