{"test_class": {"identifier": "MultipleOutputHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MultipleOutputHandler multiHandler;", "modifier": "private", "type": "MultipleOutputHandler", "declarator": "multiHandler", "var_name": "multiHandler"}, {"original_string": "@Mock\n    private MavenInvocationOutputHandler mockHandler;", "modifier": "@Mock\n    private", "type": "MavenInvocationOutputHandler", "declarator": "mockHandler", "var_name": "mockHandler"}], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/maven/MultipleOutputHandlerTest.java"}, "test_case": {"identifier": "throwsIfExecutionWasNeverStarted", "parameters": "()", "modifiers": "@Test(expectedExceptions = IllegalStateException.class) public", "return": "void", "body": "@Test(expectedExceptions = IllegalStateException.class)\n    public void throwsIfExecutionWasNeverStarted() {\n        multiHandler.getResult();\n    }", "signature": "void throwsIfExecutionWasNeverStarted()", "full_signature": "@Test(expectedExceptions = IllegalStateException.class) public void throwsIfExecutionWasNeverStarted()", "class_method_signature": "MultipleOutputHandlerTest.throwsIfExecutionWasNeverStarted()", "testcase": true, "constructor": false, "invocations": ["getResult"]}, "focal_class": {"identifier": "MultipleOutputHandler", "superclass": "", "interfaces": "implements MavenInvocationOutputHandler<MultipleOutputHandler, Map<Class<? extends MavenInvocationOutputHandler>, Object>>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MultipleOutputHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MultipleOutputHandler.class)", "var_name": "logger"}, {"original_string": "private final Set<MavenInvocationOutputHandler> handlers = new HashSet<>();", "modifier": "private final", "type": "Set<MavenInvocationOutputHandler>", "declarator": "handlers = new HashSet<>()", "var_name": "handlers"}, {"original_string": "private final Map<MavenInvocationOutputHandler, Exception> failedHandlers = new HashMap<>();", "modifier": "private final", "type": "Map<MavenInvocationOutputHandler, Exception>", "declarator": "failedHandlers = new HashMap<>()", "var_name": "failedHandlers"}, {"original_string": "private boolean executionStarted = false;", "modifier": "private", "type": "boolean", "declarator": "executionStarted = false", "var_name": "executionStarted"}], "methods": [{"identifier": "consumeLine", "parameters": "(String line)", "modifiers": "@Override public", "return": "void", "signature": "void consumeLine(String line)", "full_signature": "@Override public void consumeLine(String line)", "class_method_signature": "MultipleOutputHandler.consumeLine(String line)", "testcase": false, "constructor": false}, {"identifier": "getResult", "parameters": "()", "modifiers": "@Override public", "return": "Map<Class<? extends MavenInvocationOutputHandler>, Object>", "signature": "Map<Class<? extends MavenInvocationOutputHandler>, Object> getResult()", "full_signature": "@Override public Map<Class<? extends MavenInvocationOutputHandler>, Object> getResult()", "class_method_signature": "MultipleOutputHandler.getResult()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(MavenInvocationOutputHandler handler)", "modifiers": "", "return": "void", "signature": "void register(MavenInvocationOutputHandler handler)", "full_signature": " void register(MavenInvocationOutputHandler handler)", "class_method_signature": "MultipleOutputHandler.register(MavenInvocationOutputHandler handler)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "MultipleOutputHandler", "signature": "MultipleOutputHandler copy()", "full_signature": "@Override public MultipleOutputHandler copy()", "class_method_signature": "MultipleOutputHandler.copy()", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/maven/MultipleOutputHandler.java"}, "focal_method": {"identifier": "getResult", "parameters": "()", "modifiers": "@Override public", "return": "Map<Class<? extends MavenInvocationOutputHandler>, Object>", "body": "@Override\n    public Map<Class<? extends MavenInvocationOutputHandler>, Object> getResult() {\n        if (!executionStarted) {\n            throw new IllegalStateException(\"Execution has not started. No results to return.\");\n        }\n\n        Map<Class<? extends MavenInvocationOutputHandler>, Object> results = new HashMap<Class<? extends MavenInvocationOutputHandler>, Object>();\n\n        for (MavenInvocationOutputHandler handler : handlers) {\n            if (!failedHandlers.containsKey(handler)) {\n                results.put(handler.getClass(), handler.getResult());\n            } else {\n                results.put(handler.getClass(), failedHandlers.get(handler));\n            }\n        }\n\n        return results;\n    }", "signature": "Map<Class<? extends MavenInvocationOutputHandler>, Object> getResult()", "full_signature": "@Override public Map<Class<? extends MavenInvocationOutputHandler>, Object> getResult()", "class_method_signature": "MultipleOutputHandler.getResult()", "testcase": false, "constructor": false, "invocations": ["containsKey", "put", "getClass", "getResult", "put", "getClass", "get"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}