{"test_class": {"identifier": "BlockTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final NetworkParameters TESTNET = TestNet3Params.get();", "modifier": "private static final", "type": "NetworkParameters", "declarator": "TESTNET = TestNet3Params.get()", "var_name": "TESTNET"}, {"original_string": "private static final NetworkParameters UNITTEST = UnitTestParams.get();", "modifier": "private static final", "type": "NetworkParameters", "declarator": "UNITTEST = UnitTestParams.get()", "var_name": "UNITTEST"}, {"original_string": "private static final NetworkParameters MAINNET = MainNetParams.get();", "modifier": "private static final", "type": "NetworkParameters", "declarator": "MAINNET = MainNetParams.get()", "var_name": "MAINNET"}, {"original_string": "private byte[] block700000Bytes;", "modifier": "private", "type": "byte[]", "declarator": "block700000Bytes", "var_name": "block700000Bytes"}, {"original_string": "private Block block700000;", "modifier": "private", "type": "Block", "declarator": "block700000", "var_name": "block700000"}], "file": "core/src/test/java/org/ulordj/core/BlockTest.java"}, "test_case": {"identifier": "testDate", "parameters": "()", "modifiers": "@SuppressWarnings(\"deprecation\") @Test public", "return": "void", "body": "@SuppressWarnings(\"deprecation\")\n    @Test\n    public void testDate() throws Exception {\n        assertEquals(\"2016-02-13T22:59:39Z\", Utils.dateTimeFormat(block700000.getTime()));\n    }", "signature": "void testDate()", "full_signature": "@SuppressWarnings(\"deprecation\") @Test public void testDate()", "class_method_signature": "BlockTest.testDate()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "dateTimeFormat", "getTime"]}, "focal_class": {"identifier": "Block", "superclass": "extends Message", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(Block.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(Block.class)", "var_name": "log"}, {"original_string": "public static final int HEADER_SIZE = /*80*/140;", "modifier": "public static final", "type": "int", "declarator": "HEADER_SIZE = /*80*/140", "var_name": "HEADER_SIZE"}, {"original_string": "static final long ALLOWED_TIME_DRIFT = 2 * 60 * 60;", "modifier": "static final", "type": "long", "declarator": "ALLOWED_TIME_DRIFT = 2 * 60 * 60", "var_name": "ALLOWED_TIME_DRIFT"}, {"original_string": "public static final int MAX_BLOCK_SIZE = 1 * 1000 * 1000;", "modifier": "public static final", "type": "int", "declarator": "MAX_BLOCK_SIZE = 1 * 1000 * 1000", "var_name": "MAX_BLOCK_SIZE"}, {"original_string": "public static final int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE / 50;", "modifier": "public static final", "type": "int", "declarator": "MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE / 50", "var_name": "MAX_BLOCK_SIGOPS"}, {"original_string": "public static final long EASIEST_DIFFICULTY_TARGET = 1l;", "modifier": "public static final", "type": "long", "declarator": "EASIEST_DIFFICULTY_TARGET = 1l", "var_name": "EASIEST_DIFFICULTY_TARGET"}, {"original_string": "public static final int BLOCK_HEIGHT_UNKNOWN = -1;", "modifier": "public static final", "type": "int", "declarator": "BLOCK_HEIGHT_UNKNOWN = -1", "var_name": "BLOCK_HEIGHT_UNKNOWN"}, {"original_string": "public static final int BLOCK_HEIGHT_GENESIS = 0;", "modifier": "public static final", "type": "int", "declarator": "BLOCK_HEIGHT_GENESIS = 0", "var_name": "BLOCK_HEIGHT_GENESIS"}, {"original_string": "public static final long BLOCK_VERSION_GENESIS = 1;", "modifier": "public static final", "type": "long", "declarator": "BLOCK_VERSION_GENESIS = 1", "var_name": "BLOCK_VERSION_GENESIS"}, {"original_string": "public static final long BLOCK_VERSION_BIP34 = 2;", "modifier": "public static final", "type": "long", "declarator": "BLOCK_VERSION_BIP34 = 2", "var_name": "BLOCK_VERSION_BIP34"}, {"original_string": "public static final long BLOCK_VERSION_BIP66 = 3;", "modifier": "public static final", "type": "long", "declarator": "BLOCK_VERSION_BIP66 = 3", "var_name": "BLOCK_VERSION_BIP66"}, {"original_string": "public static final long BLOCK_VERSION_BIP65 = 4;", "modifier": "public static final", "type": "long", "declarator": "BLOCK_VERSION_BIP65 = 4", "var_name": "BLOCK_VERSION_BIP65"}, {"original_string": "private static final long CURRENT_VERSION = 1;", "modifier": "private static final", "type": "long", "declarator": "CURRENT_VERSION = 1", "var_name": "CURRENT_VERSION"}, {"original_string": "private long version;", "modifier": "private", "type": "long", "declarator": "version", "var_name": "version"}, {"original_string": "private Sha256Hash prevBlockHash;", "modifier": "private", "type": "Sha256Hash", "declarator": "prevBlockHash", "var_name": "prevBlockHash"}, {"original_string": "private Sha256Hash merkleRoot;", "modifier": "private", "type": "Sha256Hash", "declarator": "merkleRoot", "var_name": "merkleRoot"}, {"original_string": "private long time;", "modifier": "private", "type": "long", "declarator": "time", "var_name": "time"}, {"original_string": "private long difficultyTarget;", "modifier": "private", "type": "long", "declarator": "difficultyTarget", "var_name": "difficultyTarget"}, {"original_string": "private BigInteger nonce;", "modifier": "private", "type": "BigInteger", "declarator": "nonce", "var_name": "nonce"}, {"original_string": "private BigInteger hashClaimTrie;", "modifier": "private", "type": "BigInteger", "declarator": "hashClaimTrie", "var_name": "hashClaimTrie"}, {"original_string": "@Nullable List<Transaction> transactions;", "modifier": "@Nullable", "type": "List<Transaction>", "declarator": "transactions", "var_name": "transactions"}, {"original_string": "private Sha256Hash hash;", "modifier": "private", "type": "Sha256Hash", "declarator": "hash", "var_name": "hash"}, {"original_string": "protected boolean headerBytesValid;", "modifier": "protected", "type": "boolean", "declarator": "headerBytesValid", "var_name": "headerBytesValid"}, {"original_string": "protected boolean transactionBytesValid;", "modifier": "protected", "type": "boolean", "declarator": "transactionBytesValid", "var_name": "transactionBytesValid"}, {"original_string": "protected int optimalEncodingMessageSize;", "modifier": "protected", "type": "int", "declarator": "optimalEncodingMessageSize", "var_name": "optimalEncodingMessageSize"}, {"original_string": "private static BigInteger LARGEST_HASH = BigInteger.ONE.shiftLeft(256);", "modifier": "private static", "type": "BigInteger", "declarator": "LARGEST_HASH = BigInteger.ONE.shiftLeft(256)", "var_name": "LARGEST_HASH"}, {"original_string": "private static int txCounter;", "modifier": "private static", "type": "int", "declarator": "txCounter", "var_name": "txCounter"}, {"original_string": "static final byte[] EMPTY_BYTES = new byte[32];", "modifier": "static final", "type": "byte[]", "declarator": "EMPTY_BYTES = new byte[32]", "var_name": "EMPTY_BYTES"}, {"original_string": "private static final byte[] pubkeyForTesting = new ECKey().getPubKey();", "modifier": "private static final", "type": "byte[]", "declarator": "pubkeyForTesting = new ECKey().getPubKey()", "var_name": "pubkeyForTesting"}], "methods": [{"identifier": "Block", "parameters": "(NetworkParameters params, long setVersion)", "modifiers": "", "return": "", "signature": " Block(NetworkParameters params, long setVersion)", "full_signature": "  Block(NetworkParameters params, long setVersion)", "class_method_signature": "Block.Block(NetworkParameters params, long setVersion)", "testcase": false, "constructor": true}, {"identifier": "Block", "parameters": "(NetworkParameters params, byte[] payloadBytes)", "modifiers": "@Deprecated public", "return": "", "signature": " Block(NetworkParameters params, byte[] payloadBytes)", "full_signature": "@Deprecated public  Block(NetworkParameters params, byte[] payloadBytes)", "class_method_signature": "Block.Block(NetworkParameters params, byte[] payloadBytes)", "testcase": false, "constructor": true}, {"identifier": "Block", "parameters": "(NetworkParameters params, byte[] payloadBytes, MessageSerializer serializer, int length)", "modifiers": "public", "return": "", "signature": " Block(NetworkParameters params, byte[] payloadBytes, MessageSerializer serializer, int length)", "full_signature": "public  Block(NetworkParameters params, byte[] payloadBytes, MessageSerializer serializer, int length)", "class_method_signature": "Block.Block(NetworkParameters params, byte[] payloadBytes, MessageSerializer serializer, int length)", "testcase": false, "constructor": true}, {"identifier": "Block", "parameters": "(NetworkParameters params, byte[] payloadBytes, int offset, MessageSerializer serializer, int length)", "modifiers": "public", "return": "", "signature": " Block(NetworkParameters params, byte[] payloadBytes, int offset, MessageSerializer serializer, int length)", "full_signature": "public  Block(NetworkParameters params, byte[] payloadBytes, int offset, MessageSerializer serializer, int length)", "class_method_signature": "Block.Block(NetworkParameters params, byte[] payloadBytes, int offset, MessageSerializer serializer, int length)", "testcase": false, "constructor": true}, {"identifier": "Block", "parameters": "(NetworkParameters params, byte[] payloadBytes, int offset, @Nullable Message parent, MessageSerializer serializer, int length)", "modifiers": "public", "return": "", "signature": " Block(NetworkParameters params, byte[] payloadBytes, int offset, @Nullable Message parent, MessageSerializer serializer, int length)", "full_signature": "public  Block(NetworkParameters params, byte[] payloadBytes, int offset, @Nullable Message parent, MessageSerializer serializer, int length)", "class_method_signature": "Block.Block(NetworkParameters params, byte[] payloadBytes, int offset, @Nullable Message parent, MessageSerializer serializer, int length)", "testcase": false, "constructor": true}, {"identifier": "Block", "parameters": "(NetworkParameters params, long version, Sha256Hash prevBlockHash, Sha256Hash merkleRoot, long time,\n                 long difficultyTarget, BigInteger nonce, List<Transaction> transactions)", "modifiers": "public", "return": "", "signature": " Block(NetworkParameters params, long version, Sha256Hash prevBlockHash, Sha256Hash merkleRoot, long time,\n                 long difficultyTarget, BigInteger nonce, List<Transaction> transactions)", "full_signature": "public  Block(NetworkParameters params, long version, Sha256Hash prevBlockHash, Sha256Hash merkleRoot, long time,\n                 long difficultyTarget, BigInteger nonce, List<Transaction> transactions)", "class_method_signature": "Block.Block(NetworkParameters params, long version, Sha256Hash prevBlockHash, Sha256Hash merkleRoot, long time,\n                 long difficultyTarget, BigInteger nonce, List<Transaction> transactions)", "testcase": false, "constructor": true}, {"identifier": "getBlockInflation", "parameters": "(int height)", "modifiers": "public", "return": "Coin", "signature": "Coin getBlockInflation(int height)", "full_signature": "public Coin getBlockInflation(int height)", "class_method_signature": "Block.getBlockInflation(int height)", "testcase": false, "constructor": false}, {"identifier": "parseTransactions", "parameters": "(final int transactionsOffset)", "modifiers": "protected", "return": "void", "signature": "void parseTransactions(final int transactionsOffset)", "full_signature": "protected void parseTransactions(final int transactionsOffset)", "class_method_signature": "Block.parseTransactions(final int transactionsOffset)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void parse()", "full_signature": "@Override protected void parse()", "class_method_signature": "Block.parse()", "testcase": false, "constructor": false}, {"identifier": "getOptimalEncodingMessageSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOptimalEncodingMessageSize()", "full_signature": "public int getOptimalEncodingMessageSize()", "class_method_signature": "Block.getOptimalEncodingMessageSize()", "testcase": false, "constructor": false}, {"identifier": "writeHeader", "parameters": "(OutputStream stream)", "modifiers": "", "return": "void", "signature": "void writeHeader(OutputStream stream)", "full_signature": " void writeHeader(OutputStream stream)", "class_method_signature": "Block.writeHeader(OutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "writeTransactions", "parameters": "(OutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeTransactions(OutputStream stream)", "full_signature": "private void writeTransactions(OutputStream stream)", "class_method_signature": "Block.writeTransactions(OutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "bitcoinSerialize", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] bitcoinSerialize()", "full_signature": "@Override public byte[] bitcoinSerialize()", "class_method_signature": "Block.bitcoinSerialize()", "testcase": false, "constructor": false}, {"identifier": "bitcoinSerializeToStream", "parameters": "(OutputStream stream)", "modifiers": "@Override protected", "return": "void", "signature": "void bitcoinSerializeToStream(OutputStream stream)", "full_signature": "@Override protected void bitcoinSerializeToStream(OutputStream stream)", "class_method_signature": "Block.bitcoinSerializeToStream(OutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "guessTransactionsLength", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int guessTransactionsLength()", "full_signature": "private int guessTransactionsLength()", "class_method_signature": "Block.guessTransactionsLength()", "testcase": false, "constructor": false}, {"identifier": "unCache", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void unCache()", "full_signature": "@Override protected void unCache()", "class_method_signature": "Block.unCache()", "testcase": false, "constructor": false}, {"identifier": "unCacheHeader", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void unCacheHeader()", "full_signature": "private void unCacheHeader()", "class_method_signature": "Block.unCacheHeader()", "testcase": false, "constructor": false}, {"identifier": "unCacheTransactions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void unCacheTransactions()", "full_signature": "private void unCacheTransactions()", "class_method_signature": "Block.unCacheTransactions()", "testcase": false, "constructor": false}, {"identifier": "calculateHash", "parameters": "()", "modifiers": "private", "return": "Sha256Hash", "signature": "Sha256Hash calculateHash()", "full_signature": "private Sha256Hash calculateHash()", "class_method_signature": "Block.calculateHash()", "testcase": false, "constructor": false}, {"identifier": "getHashAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHashAsString()", "full_signature": "public String getHashAsString()", "class_method_signature": "Block.getHashAsString()", "testcase": false, "constructor": false}, {"identifier": "getHash", "parameters": "()", "modifiers": "@Override public", "return": "Sha256Hash", "signature": "Sha256Hash getHash()", "full_signature": "@Override public Sha256Hash getHash()", "class_method_signature": "Block.getHash()", "testcase": false, "constructor": false}, {"identifier": "getWork", "parameters": "()", "modifiers": "public", "return": "BigInteger", "signature": "BigInteger getWork()", "full_signature": "public BigInteger getWork()", "class_method_signature": "Block.getWork()", "testcase": false, "constructor": false}, {"identifier": "cloneAsHeader", "parameters": "()", "modifiers": "public", "return": "Block", "signature": "Block cloneAsHeader()", "full_signature": "public Block cloneAsHeader()", "class_method_signature": "Block.cloneAsHeader()", "testcase": false, "constructor": false}, {"identifier": "copyBitcoinHeaderTo", "parameters": "(final Block block)", "modifiers": "protected final", "return": "void", "signature": "void copyBitcoinHeaderTo(final Block block)", "full_signature": "protected final void copyBitcoinHeaderTo(final Block block)", "class_method_signature": "Block.copyBitcoinHeaderTo(final Block block)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Block.toString()", "testcase": false, "constructor": false}, {"identifier": "solve", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void solve()", "full_signature": "public void solve()", "class_method_signature": "Block.solve()", "testcase": false, "constructor": false}, {"identifier": "getDifficultyTargetAsInteger", "parameters": "()", "modifiers": "public", "return": "BigInteger", "signature": "BigInteger getDifficultyTargetAsInteger()", "full_signature": "public BigInteger getDifficultyTargetAsInteger()", "class_method_signature": "Block.getDifficultyTargetAsInteger()", "testcase": false, "constructor": false}, {"identifier": "checkProofOfWork", "parameters": "(boolean throwException)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkProofOfWork(boolean throwException)", "full_signature": "protected boolean checkProofOfWork(boolean throwException)", "class_method_signature": "Block.checkProofOfWork(boolean throwException)", "testcase": false, "constructor": false}, {"identifier": "checkTimestamp", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkTimestamp()", "full_signature": "private void checkTimestamp()", "class_method_signature": "Block.checkTimestamp()", "testcase": false, "constructor": false}, {"identifier": "checkSigOps", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkSigOps()", "full_signature": "private void checkSigOps()", "class_method_signature": "Block.checkSigOps()", "testcase": false, "constructor": false}, {"identifier": "checkMerkleRoot", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkMerkleRoot()", "full_signature": "private void checkMerkleRoot()", "class_method_signature": "Block.checkMerkleRoot()", "testcase": false, "constructor": false}, {"identifier": "calculateMerkleRoot", "parameters": "()", "modifiers": "private", "return": "Sha256Hash", "signature": "Sha256Hash calculateMerkleRoot()", "full_signature": "private Sha256Hash calculateMerkleRoot()", "class_method_signature": "Block.calculateMerkleRoot()", "testcase": false, "constructor": false}, {"identifier": "buildMerkleTree", "parameters": "()", "modifiers": "private", "return": "List<byte[]>", "signature": "List<byte[]> buildMerkleTree()", "full_signature": "private List<byte[]> buildMerkleTree()", "class_method_signature": "Block.buildMerkleTree()", "testcase": false, "constructor": false}, {"identifier": "checkTransactions", "parameters": "(final int height, final EnumSet<VerifyFlag> flags)", "modifiers": "private", "return": "void", "signature": "void checkTransactions(final int height, final EnumSet<VerifyFlag> flags)", "full_signature": "private void checkTransactions(final int height, final EnumSet<VerifyFlag> flags)", "class_method_signature": "Block.checkTransactions(final int height, final EnumSet<VerifyFlag> flags)", "testcase": false, "constructor": false}, {"identifier": "verifyHeader", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void verifyHeader()", "full_signature": "public void verifyHeader()", "class_method_signature": "Block.verifyHeader()", "testcase": false, "constructor": false}, {"identifier": "verifyTransactions", "parameters": "(final int height, final EnumSet<VerifyFlag> flags)", "modifiers": "public", "return": "void", "signature": "void verifyTransactions(final int height, final EnumSet<VerifyFlag> flags)", "full_signature": "public void verifyTransactions(final int height, final EnumSet<VerifyFlag> flags)", "class_method_signature": "Block.verifyTransactions(final int height, final EnumSet<VerifyFlag> flags)", "testcase": false, "constructor": false}, {"identifier": "verify", "parameters": "(final int height, final EnumSet<VerifyFlag> flags)", "modifiers": "public", "return": "void", "signature": "void verify(final int height, final EnumSet<VerifyFlag> flags)", "full_signature": "public void verify(final int height, final EnumSet<VerifyFlag> flags)", "class_method_signature": "Block.verify(final int height, final EnumSet<VerifyFlag> flags)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Block.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Block.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getMerkleRoot", "parameters": "()", "modifiers": "public", "return": "Sha256Hash", "signature": "Sha256Hash getMerkleRoot()", "full_signature": "public Sha256Hash getMerkleRoot()", "class_method_signature": "Block.getMerkleRoot()", "testcase": false, "constructor": false}, {"identifier": "setMerkleRoot", "parameters": "(Sha256Hash value)", "modifiers": "", "return": "void", "signature": "void setMerkleRoot(Sha256Hash value)", "full_signature": " void setMerkleRoot(Sha256Hash value)", "class_method_signature": "Block.setMerkleRoot(Sha256Hash value)", "testcase": false, "constructor": false}, {"identifier": "getHashClaimTrie", "parameters": "()", "modifiers": "public", "return": "BigInteger", "signature": "BigInteger getHashClaimTrie()", "full_signature": "public BigInteger getHashClaimTrie()", "class_method_signature": "Block.getHashClaimTrie()", "testcase": false, "constructor": false}, {"identifier": "addTransaction", "parameters": "(Transaction t)", "modifiers": "public", "return": "void", "signature": "void addTransaction(Transaction t)", "full_signature": "public void addTransaction(Transaction t)", "class_method_signature": "Block.addTransaction(Transaction t)", "testcase": false, "constructor": false}, {"identifier": "addTransaction", "parameters": "(Transaction t, boolean runSanityChecks)", "modifiers": "", "return": "void", "signature": "void addTransaction(Transaction t, boolean runSanityChecks)", "full_signature": " void addTransaction(Transaction t, boolean runSanityChecks)", "class_method_signature": "Block.addTransaction(Transaction t, boolean runSanityChecks)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getVersion()", "full_signature": "public long getVersion()", "class_method_signature": "Block.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getPrevBlockHash", "parameters": "()", "modifiers": "public", "return": "Sha256Hash", "signature": "Sha256Hash getPrevBlockHash()", "full_signature": "public Sha256Hash getPrevBlockHash()", "class_method_signature": "Block.getPrevBlockHash()", "testcase": false, "constructor": false}, {"identifier": "setPrevBlockHash", "parameters": "(Sha256Hash prevBlockHash)", "modifiers": "", "return": "void", "signature": "void setPrevBlockHash(Sha256Hash prevBlockHash)", "full_signature": " void setPrevBlockHash(Sha256Hash prevBlockHash)", "class_method_signature": "Block.setPrevBlockHash(Sha256Hash prevBlockHash)", "testcase": false, "constructor": false}, {"identifier": "getTimeSeconds", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTimeSeconds()", "full_signature": "public long getTimeSeconds()", "class_method_signature": "Block.getTimeSeconds()", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getTime()", "full_signature": "public Date getTime()", "class_method_signature": "Block.getTime()", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(long time)", "modifiers": "public", "return": "void", "signature": "void setTime(long time)", "full_signature": "public void setTime(long time)", "class_method_signature": "Block.setTime(long time)", "testcase": false, "constructor": false}, {"identifier": "getDifficultyTarget", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getDifficultyTarget()", "full_signature": "public long getDifficultyTarget()", "class_method_signature": "Block.getDifficultyTarget()", "testcase": false, "constructor": false}, {"identifier": "setDifficultyTarget", "parameters": "(long compactForm)", "modifiers": "public", "return": "void", "signature": "void setDifficultyTarget(long compactForm)", "full_signature": "public void setDifficultyTarget(long compactForm)", "class_method_signature": "Block.setDifficultyTarget(long compactForm)", "testcase": false, "constructor": false}, {"identifier": "getNonce", "parameters": "()", "modifiers": "public", "return": "BigInteger", "signature": "BigInteger getNonce()", "full_signature": "public BigInteger getNonce()", "class_method_signature": "Block.getNonce()", "testcase": false, "constructor": false}, {"identifier": "setNonce", "parameters": "(BigInteger nonce)", "modifiers": "public", "return": "void", "signature": "void setNonce(BigInteger nonce)", "full_signature": "public void setNonce(BigInteger nonce)", "class_method_signature": "Block.setNonce(BigInteger nonce)", "testcase": false, "constructor": false}, {"identifier": "getTransactions", "parameters": "()", "modifiers": "@Nullable public", "return": "List<Transaction>", "signature": "List<Transaction> getTransactions()", "full_signature": "@Nullable public List<Transaction> getTransactions()", "class_method_signature": "Block.getTransactions()", "testcase": false, "constructor": false}, {"identifier": "addCoinbaseTransaction", "parameters": "(byte[] pubKeyTo, Coin value, final int height)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void addCoinbaseTransaction(byte[] pubKeyTo, Coin value, final int height)", "full_signature": "@VisibleForTesting void addCoinbaseTransaction(byte[] pubKeyTo, Coin value, final int height)", "class_method_signature": "Block.addCoinbaseTransaction(byte[] pubKeyTo, Coin value, final int height)", "testcase": false, "constructor": false}, {"identifier": "createNextBlock", "parameters": "(Address to, long version, long time, int blockHeight)", "modifiers": "@VisibleForTesting public", "return": "Block", "signature": "Block createNextBlock(Address to, long version, long time, int blockHeight)", "full_signature": "@VisibleForTesting public Block createNextBlock(Address to, long version, long time, int blockHeight)", "class_method_signature": "Block.createNextBlock(Address to, long version, long time, int blockHeight)", "testcase": false, "constructor": false}, {"identifier": "createNextBlock", "parameters": "(@Nullable final Address to, final long version,\n                          @Nullable TransactionOutPoint prevOut, final long time,\n                          final byte[] pubKey, final Coin coinbaseValue,\n                          final int height)", "modifiers": "", "return": "Block", "signature": "Block createNextBlock(@Nullable final Address to, final long version,\n                          @Nullable TransactionOutPoint prevOut, final long time,\n                          final byte[] pubKey, final Coin coinbaseValue,\n                          final int height)", "full_signature": " Block createNextBlock(@Nullable final Address to, final long version,\n                          @Nullable TransactionOutPoint prevOut, final long time,\n                          final byte[] pubKey, final Coin coinbaseValue,\n                          final int height)", "class_method_signature": "Block.createNextBlock(@Nullable final Address to, final long version,\n                          @Nullable TransactionOutPoint prevOut, final long time,\n                          final byte[] pubKey, final Coin coinbaseValue,\n                          final int height)", "testcase": false, "constructor": false}, {"identifier": "createNextBlock", "parameters": "(@Nullable Address to, TransactionOutPoint prevOut)", "modifiers": "@VisibleForTesting public", "return": "Block", "signature": "Block createNextBlock(@Nullable Address to, TransactionOutPoint prevOut)", "full_signature": "@VisibleForTesting public Block createNextBlock(@Nullable Address to, TransactionOutPoint prevOut)", "class_method_signature": "Block.createNextBlock(@Nullable Address to, TransactionOutPoint prevOut)", "testcase": false, "constructor": false}, {"identifier": "createNextBlock", "parameters": "(@Nullable Address to, Coin value)", "modifiers": "@VisibleForTesting public", "return": "Block", "signature": "Block createNextBlock(@Nullable Address to, Coin value)", "full_signature": "@VisibleForTesting public Block createNextBlock(@Nullable Address to, Coin value)", "class_method_signature": "Block.createNextBlock(@Nullable Address to, Coin value)", "testcase": false, "constructor": false}, {"identifier": "createNextBlock", "parameters": "(@Nullable Address to)", "modifiers": "@VisibleForTesting public", "return": "Block", "signature": "Block createNextBlock(@Nullable Address to)", "full_signature": "@VisibleForTesting public Block createNextBlock(@Nullable Address to)", "class_method_signature": "Block.createNextBlock(@Nullable Address to)", "testcase": false, "constructor": false}, {"identifier": "createNextBlockWithCoinbase", "parameters": "(long version, byte[] pubKey, Coin coinbaseValue, final int height)", "modifiers": "@VisibleForTesting public", "return": "Block", "signature": "Block createNextBlockWithCoinbase(long version, byte[] pubKey, Coin coinbaseValue, final int height)", "full_signature": "@VisibleForTesting public Block createNextBlockWithCoinbase(long version, byte[] pubKey, Coin coinbaseValue, final int height)", "class_method_signature": "Block.createNextBlockWithCoinbase(long version, byte[] pubKey, Coin coinbaseValue, final int height)", "testcase": false, "constructor": false}, {"identifier": "createNextBlockWithCoinbase", "parameters": "(long version, byte[] pubKey, final int height)", "modifiers": "@VisibleForTesting", "return": "Block", "signature": "Block createNextBlockWithCoinbase(long version, byte[] pubKey, final int height)", "full_signature": "@VisibleForTesting Block createNextBlockWithCoinbase(long version, byte[] pubKey, final int height)", "class_method_signature": "Block.createNextBlockWithCoinbase(long version, byte[] pubKey, final int height)", "testcase": false, "constructor": false}, {"identifier": "isHeaderBytesValid", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "boolean", "signature": "boolean isHeaderBytesValid()", "full_signature": "@VisibleForTesting boolean isHeaderBytesValid()", "class_method_signature": "Block.isHeaderBytesValid()", "testcase": false, "constructor": false}, {"identifier": "isTransactionBytesValid", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "boolean", "signature": "boolean isTransactionBytesValid()", "full_signature": "@VisibleForTesting boolean isTransactionBytesValid()", "class_method_signature": "Block.isTransactionBytesValid()", "testcase": false, "constructor": false}, {"identifier": "hasTransactions", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasTransactions()", "full_signature": "public boolean hasTransactions()", "class_method_signature": "Block.hasTransactions()", "testcase": false, "constructor": false}, {"identifier": "isBIP34", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBIP34()", "full_signature": "public boolean isBIP34()", "class_method_signature": "Block.isBIP34()", "testcase": false, "constructor": false}, {"identifier": "isBIP66", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBIP66()", "full_signature": "public boolean isBIP66()", "class_method_signature": "Block.isBIP66()", "testcase": false, "constructor": false}, {"identifier": "isBIP65", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBIP65()", "full_signature": "public boolean isBIP65()", "class_method_signature": "Block.isBIP65()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ulordj/core/Block.java"}, "focal_method": {"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "Date", "body": "public Date getTime() {\n        return new Date(getTimeSeconds()*1000);\n    }", "signature": "Date getTime()", "full_signature": "public Date getTime()", "class_method_signature": "Block.getTime()", "testcase": false, "constructor": false, "invocations": ["getTimeSeconds"]}, "repository": {"repo_id": 133357466, "url": "https://github.com/UlordChain/ulordj", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 23, "size": 7129, "license": "licensed"}}