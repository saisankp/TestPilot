{"test_class": {"identifier": "DefaultAuthenticationFailureAggregatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DittoHeaders KNOWN_DITTO_HEADERS = DittoHeaders.empty();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "KNOWN_DITTO_HEADERS = DittoHeaders.empty()", "var_name": "KNOWN_DITTO_HEADERS"}, {"original_string": "private DefaultAuthenticationFailureAggregator underTest;", "modifier": "private", "type": "DefaultAuthenticationFailureAggregator", "declarator": "underTest", "var_name": "underTest"}], "file": "services/gateway/security/src/test/java/org/eclipse/ditto/services/gateway/security/authentication/DefaultAuthenticationFailureAggregatorTest.java"}, "test_case": {"identifier": "aggregateAuthenticationFailuresWitNestedDittoRuntimeException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void aggregateAuthenticationFailuresWitNestedDittoRuntimeException() {\n        final DittoRuntimeException expectedException =\n                DittoRuntimeException.newBuilder(\"test:my.error\", HttpStatusCode.UNAUTHORIZED)\n                        .description(\"foo\")\n                        .build();\n        final IllegalStateException reasonOfFailure = new IllegalStateException(\"Not a DRE\", expectedException);\n        final List<AuthenticationResult> authenticationResults =\n                Collections.singletonList(DefaultAuthenticationResult.failed(KNOWN_DITTO_HEADERS, reasonOfFailure));\n\n        final DittoRuntimeException dittoRuntimeException =\n                underTest.aggregateAuthenticationFailures(authenticationResults);\n\n        assertThat(dittoRuntimeException).isEqualTo(expectedException);\n    }", "signature": "void aggregateAuthenticationFailuresWitNestedDittoRuntimeException()", "full_signature": "@Test public void aggregateAuthenticationFailuresWitNestedDittoRuntimeException()", "class_method_signature": "DefaultAuthenticationFailureAggregatorTest.aggregateAuthenticationFailuresWitNestedDittoRuntimeException()", "testcase": true, "constructor": false, "invocations": ["build", "description", "newBuilder", "singletonList", "failed", "aggregateAuthenticationFailures", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DefaultAuthenticationFailureAggregator", "superclass": "", "interfaces": "implements AuthenticationFailureAggregator", "fields": [{"original_string": "private static final String AGGREGATED_AUTH_FAILURE_MESSAGE =\n            \"Multiple authentication mechanisms were applicable but none succeeded.\";", "modifier": "private static final", "type": "String", "declarator": "AGGREGATED_AUTH_FAILURE_MESSAGE =\n            \"Multiple authentication mechanisms were applicable but none succeeded.\"", "var_name": "AGGREGATED_AUTH_FAILURE_MESSAGE"}, {"original_string": "private static final String AGGREGATED_AUTH_FAILURE_DESCRIPTION_PREFIX =\n            \"For a successful authentication see the following suggestions: \";", "modifier": "private static final", "type": "String", "declarator": "AGGREGATED_AUTH_FAILURE_DESCRIPTION_PREFIX =\n            \"For a successful authentication see the following suggestions: \"", "var_name": "AGGREGATED_AUTH_FAILURE_DESCRIPTION_PREFIX"}, {"original_string": "private static final DefaultAuthenticationFailureAggregator INSTANCE = new DefaultAuthenticationFailureAggregator();", "modifier": "private static final", "type": "DefaultAuthenticationFailureAggregator", "declarator": "INSTANCE = new DefaultAuthenticationFailureAggregator()", "var_name": "INSTANCE"}], "methods": [{"identifier": "DefaultAuthenticationFailureAggregator", "parameters": "()", "modifiers": "private", "return": "", "signature": " DefaultAuthenticationFailureAggregator()", "full_signature": "private  DefaultAuthenticationFailureAggregator()", "class_method_signature": "DefaultAuthenticationFailureAggregator.DefaultAuthenticationFailureAggregator()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "static", "return": "DefaultAuthenticationFailureAggregator", "signature": "DefaultAuthenticationFailureAggregator getInstance()", "full_signature": "static DefaultAuthenticationFailureAggregator getInstance()", "class_method_signature": "DefaultAuthenticationFailureAggregator.getInstance()", "testcase": false, "constructor": false}, {"identifier": "aggregateAuthenticationFailures", "parameters": "(final List<AuthenticationResult> failedAuthResults)", "modifiers": "@Override public", "return": "DittoRuntimeException", "signature": "DittoRuntimeException aggregateAuthenticationFailures(final List<AuthenticationResult> failedAuthResults)", "full_signature": "@Override public DittoRuntimeException aggregateAuthenticationFailures(final List<AuthenticationResult> failedAuthResults)", "class_method_signature": "DefaultAuthenticationFailureAggregator.aggregateAuthenticationFailures(final List<AuthenticationResult> failedAuthResults)", "testcase": false, "constructor": false}, {"identifier": "getDittoRuntimeExceptionReasonsWithDescription", "parameters": "(\n            final Collection<AuthenticationResult> failedAuthenticationResults)", "modifiers": "private static", "return": "List<DittoRuntimeException>", "signature": "List<DittoRuntimeException> getDittoRuntimeExceptionReasonsWithDescription(\n            final Collection<AuthenticationResult> failedAuthenticationResults)", "full_signature": "private static List<DittoRuntimeException> getDittoRuntimeExceptionReasonsWithDescription(\n            final Collection<AuthenticationResult> failedAuthenticationResults)", "class_method_signature": "DefaultAuthenticationFailureAggregator.getDittoRuntimeExceptionReasonsWithDescription(\n            final Collection<AuthenticationResult> failedAuthenticationResults)", "testcase": false, "constructor": false}, {"identifier": "toDittoRuntimeException", "parameters": "(final Throwable throwable)", "modifiers": "@Nullable private static", "return": "DittoRuntimeException", "signature": "DittoRuntimeException toDittoRuntimeException(final Throwable throwable)", "full_signature": "@Nullable private static DittoRuntimeException toDittoRuntimeException(final Throwable throwable)", "class_method_signature": "DefaultAuthenticationFailureAggregator.toDittoRuntimeException(final Throwable throwable)", "testcase": false, "constructor": false}, {"identifier": "buildAggregatedDescriptionFromDittoRuntimeExceptions", "parameters": "(\n            final Collection<DittoRuntimeException> reasonsOfFailure)", "modifiers": "private static", "return": "String", "signature": "String buildAggregatedDescriptionFromDittoRuntimeExceptions(\n            final Collection<DittoRuntimeException> reasonsOfFailure)", "full_signature": "private static String buildAggregatedDescriptionFromDittoRuntimeExceptions(\n            final Collection<DittoRuntimeException> reasonsOfFailure)", "class_method_signature": "DefaultAuthenticationFailureAggregator.buildAggregatedDescriptionFromDittoRuntimeExceptions(\n            final Collection<DittoRuntimeException> reasonsOfFailure)", "testcase": false, "constructor": false}, {"identifier": "buildAggregatedHeaders", "parameters": "(final Iterable<DittoRuntimeException> reasonsOfFailure)", "modifiers": "private static", "return": "DittoHeaders", "signature": "DittoHeaders buildAggregatedHeaders(final Iterable<DittoRuntimeException> reasonsOfFailure)", "full_signature": "private static DittoHeaders buildAggregatedHeaders(final Iterable<DittoRuntimeException> reasonsOfFailure)", "class_method_signature": "DefaultAuthenticationFailureAggregator.buildAggregatedHeaders(final Iterable<DittoRuntimeException> reasonsOfFailure)", "testcase": false, "constructor": false}], "file": "services/gateway/security/src/main/java/org/eclipse/ditto/services/gateway/security/authentication/DefaultAuthenticationFailureAggregator.java"}, "focal_method": {"identifier": "aggregateAuthenticationFailures", "parameters": "(final List<AuthenticationResult> failedAuthResults)", "modifiers": "@Override public", "return": "DittoRuntimeException", "body": "@Override\n    public DittoRuntimeException aggregateAuthenticationFailures(final List<AuthenticationResult> failedAuthResults) {\n        final List<DittoRuntimeException> reasonsOfFailure = getDittoRuntimeExceptionReasonsWithDescription(failedAuthResults);\n\n        if (reasonsOfFailure.isEmpty()) {\n            final String msgPattern = \"The failed authentication results did not contain any failure reason of type \" +\n                    \"<{0}> containing a description!\";\n            final String message = MessageFormat.format(msgPattern, DittoRuntimeException.class.getSimpleName());\n            throw new IllegalArgumentException(message);\n        }\n\n        if (1 == reasonsOfFailure.size()) {\n            return reasonsOfFailure.get(0);\n        }\n\n        return reasonsOfFailure.stream()\n                .filter(reasonOfFailure -> !HttpStatusCode.UNAUTHORIZED.equals(reasonOfFailure.getStatusCode()))\n                .findFirst()\n                .orElseGet(() -> GatewayAuthenticationFailedException.newBuilder(AGGREGATED_AUTH_FAILURE_MESSAGE)\n                        .description(buildAggregatedDescriptionFromDittoRuntimeExceptions(reasonsOfFailure))\n                        .dittoHeaders(buildAggregatedHeaders(reasonsOfFailure))\n                        .build());\n    }", "signature": "DittoRuntimeException aggregateAuthenticationFailures(final List<AuthenticationResult> failedAuthResults)", "full_signature": "@Override public DittoRuntimeException aggregateAuthenticationFailures(final List<AuthenticationResult> failedAuthResults)", "class_method_signature": "DefaultAuthenticationFailureAggregator.aggregateAuthenticationFailures(final List<AuthenticationResult> failedAuthResults)", "testcase": false, "constructor": false, "invocations": ["getDittoRuntimeExceptionReasonsWithDescription", "isEmpty", "format", "getSimpleName", "size", "get", "orElseGet", "findFirst", "filter", "stream", "equals", "getStatusCode", "build", "dittoHeaders", "description", "newBuilder", "buildAggregatedDescriptionFromDittoRuntimeExceptions", "buildAggregatedHeaders"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}