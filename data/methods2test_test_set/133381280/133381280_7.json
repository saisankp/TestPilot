{"test_class": {"identifier": "MetricbeatMetricReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "gateway/metrics/importer/metricbeat/src/test/java/com/alipay/sofa/lookout/gateway/metrics/importer/metricbeat/MetricbeatMetricReaderTest.java"}, "test_case": {"identifier": "testRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRead() {\n        // TODO \u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u91cc\u7684 metricset beat \u90fd\u4f1a\u4f5c\u4e3atags, \u4f46name\u5b57\u6bb5\u51b2\u7a81\u4e86!\n\n        String str = \"{\\\"@timestamp\\\":\\\"2018-03-29T08:27:21.200Z\\\",\\\"metricset\\\":{\\\"name\\\":\\\"network\\\",\"\n                     + (\"\\\"module\\\":\\\"system\\\",\\\"rtt\\\":3487},\\\"system\\\":{\\\"network\\\":{\\\"in\\\":{\\\"errors\\\":0,\\\"dropped\\\":0,\"\n                        + \"\\\"bytes\\\":0,\\\"packets\\\":0},\\\"out\\\":{\\\"errors\\\":0,\\\"dropped\\\":0,\\\"packets\\\":0,\\\"bytes\\\":0},\"\n                        + \"\\\"name\\\":\\\"ip_vti0\\\"}},\\\"beat\\\":{\\\"name\\\":\\\"moby\\\",\\\"hostname\\\":\\\"moby\\\",\\\"version\\\":\\\"6.2.3\\\"}}\");\n        RawMetric rm = new RawMetric();\n        rm.setRawBody(str.getBytes(StandardCharsets.UTF_8));\n        List<Metric> list = new MetricbeatMetricReader().read(rm).collect(Collectors.toList());\n        StringBuilder sb = new StringBuilder();\n        for (Metric m : list) {\n            sb.append(m.toString());\n        }\n        System.out.println(sb);\n        Assert\n            .assertTrue(sb\n                .toString()\n                .contains(\n                    \"Metric{name='system.network.out.bytes', value=0.0, timestamp=1522312041200, info='null', tags={name=moby, hostname=moby, version=6.2.3, module=system}}\"));\n    }", "signature": "void testRead()", "full_signature": "@Test public void testRead()", "class_method_signature": "MetricbeatMetricReaderTest.testRead()", "testcase": true, "constructor": false, "invocations": ["setRawBody", "getBytes", "collect", "read", "toList", "append", "toString", "println", "assertTrue", "contains", "toString"]}, "focal_class": {"identifier": "MetricbeatMetricReader", "superclass": "extends AbstractReader<RawMetric, Metric>", "interfaces": "", "fields": [{"original_string": "private static final List<String> TAGS_KEYS = Arrays.asList(\"metricset\", \"beat\");", "modifier": "private static final", "type": "List<String>", "declarator": "TAGS_KEYS = Arrays.asList(\"metricset\", \"beat\")", "var_name": "TAGS_KEYS"}], "methods": [{"identifier": "read", "parameters": "(RawMetric rm)", "modifiers": "@Override public", "return": "Stream<Metric>", "signature": "Stream<Metric> read(RawMetric rm)", "full_signature": "@Override public Stream<Metric> read(RawMetric rm)", "class_method_signature": "MetricbeatMetricReader.read(RawMetric rm)", "testcase": false, "constructor": false}, {"identifier": "readline", "parameters": "(String inputSource)", "modifiers": "private", "return": "Stream<Metric>", "signature": "Stream<Metric> readline(String inputSource)", "full_signature": "private Stream<Metric> readline(String inputSource)", "class_method_signature": "MetricbeatMetricReader.readline(String inputSource)", "testcase": false, "constructor": false}, {"identifier": "dfs", "parameters": "(String prefix, List<Metric> base, JSONObject json)", "modifiers": "private", "return": "void", "signature": "void dfs(String prefix, List<Metric> base, JSONObject json)", "full_signature": "private void dfs(String prefix, List<Metric> base, JSONObject json)", "class_method_signature": "MetricbeatMetricReader.dfs(String prefix, List<Metric> base, JSONObject json)", "testcase": false, "constructor": false}], "file": "gateway/metrics/importer/metricbeat/src/main/java/com/alipay/sofa/lookout/gateway/metrics/importer/metricbeat/MetricbeatMetricReader.java"}, "focal_method": {"identifier": "read", "parameters": "(RawMetric rm)", "modifiers": "@Override public", "return": "Stream<Metric>", "body": "@Override\n    public Stream<Metric> read(RawMetric rm) {\n        // \u6309 \\n \u5206\u9694?\n        String str = readUTF8(rm.getRawBody());\n        return Arrays.stream(str.split(\"\\n\"))\n                .flatMap(this::readline)\n                .filter(Objects::nonNull);\n    }", "signature": "Stream<Metric> read(RawMetric rm)", "full_signature": "@Override public Stream<Metric> read(RawMetric rm)", "class_method_signature": "MetricbeatMetricReader.read(RawMetric rm)", "testcase": false, "constructor": false, "invocations": ["readUTF8", "getRawBody", "filter", "flatMap", "stream", "split"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}