{"test_class": {"identifier": "HttpServiceManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/org/apache/cxf/dosgi/common/httpservice/HttpServiceManagerTest.java"}, "test_case": {"identifier": "testGetAbsoluteAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAbsoluteAddress() {\n        HttpServiceManager manager = new HttpServiceManager();\n        manager.initFromConfig(null);\n\n        String address1 = manager.getAbsoluteAddress(null, \"/myservice\");\n        assertEquals(\"http://localhost:8181/cxf/myservice\", address1);\n\n        String address2 = manager.getAbsoluteAddress(\"/mycontext\", \"/myservice\");\n        assertEquals(\"http://localhost:8181/mycontext/myservice\", address2);\n    }", "signature": "void testGetAbsoluteAddress()", "full_signature": "@Test public void testGetAbsoluteAddress()", "class_method_signature": "HttpServiceManagerTest.testGetAbsoluteAddress()", "testcase": true, "constructor": false, "invocations": ["initFromConfig", "getAbsoluteAddress", "assertEquals", "getAbsoluteAddress", "assertEquals"]}, "focal_class": {"identifier": "HttpServiceManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String KEY_HTTP_BASE = \"httpBase\";", "modifier": "public static final", "type": "String", "declarator": "KEY_HTTP_BASE = \"httpBase\"", "var_name": "KEY_HTTP_BASE"}, {"original_string": "public static final String KEY_CXF_SERVLET_ALIAS = \"cxfServletAlias\";", "modifier": "public static final", "type": "String", "declarator": "KEY_CXF_SERVLET_ALIAS = \"cxfServletAlias\"", "var_name": "KEY_CXF_SERVLET_ALIAS"}, {"original_string": "public static final String DEFAULT_CXF_SERVLET_ALIAS = \"/cxf\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_CXF_SERVLET_ALIAS = \"/cxf\"", "var_name": "DEFAULT_CXF_SERVLET_ALIAS"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(HttpServiceManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(HttpServiceManager.class)", "var_name": "LOG"}, {"original_string": "private Map<Long, String> exportedAliases = Collections.synchronizedMap(new HashMap<Long, String>());", "modifier": "private", "type": "Map<Long, String>", "declarator": "exportedAliases = Collections.synchronizedMap(new HashMap<Long, String>())", "var_name": "exportedAliases"}, {"original_string": "private String httpBase;", "modifier": "private", "type": "String", "declarator": "httpBase", "var_name": "httpBase"}, {"original_string": "private String cxfServletAlias;", "modifier": "private", "type": "String", "declarator": "cxfServletAlias", "var_name": "cxfServletAlias"}, {"original_string": "private HttpService httpService;", "modifier": "private", "type": "HttpService", "declarator": "httpService", "var_name": "httpService"}, {"original_string": "private BundleContext context;", "modifier": "private", "type": "BundleContext", "declarator": "context", "var_name": "context"}], "methods": [{"identifier": "activate", "parameters": "(ComponentContext compContext)", "modifiers": "@Activate public", "return": "void", "signature": "void activate(ComponentContext compContext)", "full_signature": "@Activate public void activate(ComponentContext compContext)", "class_method_signature": "HttpServiceManager.activate(ComponentContext compContext)", "testcase": false, "constructor": false}, {"identifier": "initFromConfig", "parameters": "(Dictionary<String, Object> config)", "modifiers": "public", "return": "void", "signature": "void initFromConfig(Dictionary<String, Object> config)", "full_signature": "public void initFromConfig(Dictionary<String, Object> config)", "class_method_signature": "HttpServiceManager.initFromConfig(Dictionary<String, Object> config)", "testcase": false, "constructor": false}, {"identifier": "getWithDefault", "parameters": "(Object value, String defaultValue)", "modifiers": "private", "return": "String", "signature": "String getWithDefault(Object value, String defaultValue)", "full_signature": "private String getWithDefault(Object value, String defaultValue)", "class_method_signature": "HttpServiceManager.getWithDefault(Object value, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "registerServlet", "parameters": "(Bus bus, String contextRoot, BundleContext callingContext, Long sid)", "modifiers": "public", "return": "Bus", "signature": "Bus registerServlet(Bus bus, String contextRoot, BundleContext callingContext, Long sid)", "full_signature": "public Bus registerServlet(Bus bus, String contextRoot, BundleContext callingContext, Long sid)", "class_method_signature": "HttpServiceManager.registerServlet(Bus bus, String contextRoot, BundleContext callingContext, Long sid)", "testcase": false, "constructor": false}, {"identifier": "registerUnexportHook", "parameters": "(Long sid, String alias)", "modifiers": "private", "return": "void", "signature": "void registerUnexportHook(Long sid, String alias)", "full_signature": "private void registerUnexportHook(Long sid, String alias)", "class_method_signature": "HttpServiceManager.registerUnexportHook(Long sid, String alias)", "testcase": false, "constructor": false}, {"identifier": "getDefaultAddress", "parameters": "(Class<?> type)", "modifiers": "public", "return": "String", "signature": "String getDefaultAddress(Class<?> type)", "full_signature": "public String getDefaultAddress(Class<?> type)", "class_method_signature": "HttpServiceManager.getDefaultAddress(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "getAbsoluteAddress", "parameters": "(String contextRoot, String endpointAddress)", "modifiers": "public", "return": "String", "signature": "String getAbsoluteAddress(String contextRoot, String endpointAddress)", "full_signature": "public String getAbsoluteAddress(String contextRoot, String endpointAddress)", "class_method_signature": "HttpServiceManager.getAbsoluteAddress(String contextRoot, String endpointAddress)", "testcase": false, "constructor": false}, {"identifier": "setContext", "parameters": "(BundleContext context)", "modifiers": "public", "return": "void", "signature": "void setContext(BundleContext context)", "full_signature": "public void setContext(BundleContext context)", "class_method_signature": "HttpServiceManager.setContext(BundleContext context)", "testcase": false, "constructor": false}, {"identifier": "setHttpService", "parameters": "(HttpService httpService)", "modifiers": "@Reference public", "return": "void", "signature": "void setHttpService(HttpService httpService)", "full_signature": "@Reference public void setHttpService(HttpService httpService)", "class_method_signature": "HttpServiceManager.setHttpService(HttpService httpService)", "testcase": false, "constructor": false}], "file": "common/src/main/java/org/apache/cxf/dosgi/common/httpservice/HttpServiceManager.java"}, "focal_method": {"identifier": "getAbsoluteAddress", "parameters": "(String contextRoot, String endpointAddress)", "modifiers": "public", "return": "String", "body": "public String getAbsoluteAddress(String contextRoot, String endpointAddress) {\n        if (endpointAddress.startsWith(\"http\")) {\n            return endpointAddress;\n        }\n        String effContextRoot = contextRoot == null ? cxfServletAlias : contextRoot;\n        return this.httpBase + effContextRoot + endpointAddress;\n    }", "signature": "String getAbsoluteAddress(String contextRoot, String endpointAddress)", "full_signature": "public String getAbsoluteAddress(String contextRoot, String endpointAddress)", "class_method_signature": "HttpServiceManager.getAbsoluteAddress(String contextRoot, String endpointAddress)", "testcase": false, "constructor": false, "invocations": ["startsWith"]}, "repository": {"repo_id": 17537835, "url": "https://github.com/apache/cxf-dosgi", "language": "Java", "is_fork": false, "fork_count": 27, "stargazer_count": 26, "size": 3444, "license": "licensed"}}