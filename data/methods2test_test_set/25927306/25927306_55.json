{"test_class": {"identifier": "SearchResponseTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/SearchResponseTest.java"}, "test_case": {"identifier": "subResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void subResult()\n  {\n    final LdapEntry entry1 = LdapEntry.builder()\n      .dn(\"uid=1\").build();\n    final LdapEntry entry2 = LdapEntry.builder()\n      .dn(\"uid=2\").build();\n    final SearchResponse sr = new SearchResponse();\n    sr.addEntries(entry2, entry1);\n    Assert.assertEquals(sr.subResult(2, 2).entrySize(), 0);\n    Assert.assertEquals(sr.subResult(1, 2).entrySize(), 1);\n    Assert.assertEquals(sr.subResult(0, 2).entrySize(), 2);\n    try {\n      sr.subResult(-1, 1);\n      Assert.fail(\"Should have thrown IndexOutOfBoundsException\");\n    } catch (Exception e) {\n      Assert.assertEquals(e.getClass(), IndexOutOfBoundsException.class);\n    }\n    try {\n      sr.subResult(0, 3);\n      Assert.fail(\"Should have thrown IndexOutOfBoundsException\");\n    } catch (Exception e) {\n      Assert.assertEquals(e.getClass(), IndexOutOfBoundsException.class);\n    }\n    try {\n      sr.subResult(1, 0);\n      Assert.fail(\"Should have thrown IndexOutOfBoundsException\");\n    } catch (Exception e) {\n      Assert.assertEquals(e.getClass(), IndexOutOfBoundsException.class);\n    }\n  }", "signature": "void subResult()", "full_signature": "@Test public void subResult()", "class_method_signature": "SearchResponseTest.subResult()", "testcase": true, "constructor": false, "invocations": ["build", "dn", "builder", "build", "dn", "builder", "addEntries", "assertEquals", "entrySize", "subResult", "assertEquals", "entrySize", "subResult", "assertEquals", "entrySize", "subResult", "subResult", "fail", "assertEquals", "getClass", "subResult", "fail", "assertEquals", "getClass", "subResult", "fail", "assertEquals", "getClass"]}, "focal_class": {"identifier": "SearchResponse", "superclass": "extends AbstractResult", "interfaces": "", "fields": [{"original_string": "public static final int PROTOCOL_OP = 5;", "modifier": "public static final", "type": "int", "declarator": "PROTOCOL_OP = 5", "var_name": "PROTOCOL_OP"}, {"original_string": "private static final int HASH_CODE_SEED = 10301;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_SEED = 10301", "var_name": "HASH_CODE_SEED"}, {"original_string": "private static final DERPath RESULT_CODE_PATH = new DERPath(\"/SEQ/APP(5)/ENUM[0]\");", "modifier": "private static final", "type": "DERPath", "declarator": "RESULT_CODE_PATH = new DERPath(\"/SEQ/APP(5)/ENUM[0]\")", "var_name": "RESULT_CODE_PATH"}, {"original_string": "private static final DERPath MATCHED_DN_PATH = new DERPath(\"/SEQ/APP(5)/OCTSTR[1]\");", "modifier": "private static final", "type": "DERPath", "declarator": "MATCHED_DN_PATH = new DERPath(\"/SEQ/APP(5)/OCTSTR[1]\")", "var_name": "MATCHED_DN_PATH"}, {"original_string": "private static final DERPath DIAGNOSTIC_MESSAGE_PATH = new DERPath(\"/SEQ/APP(5)/OCTSTR[2]\");", "modifier": "private static final", "type": "DERPath", "declarator": "DIAGNOSTIC_MESSAGE_PATH = new DERPath(\"/SEQ/APP(5)/OCTSTR[2]\")", "var_name": "DIAGNOSTIC_MESSAGE_PATH"}, {"original_string": "private static final DERPath REFERRAL_PATH = new DERPath(\"/SEQ/APP(5)/CTX(3)/OCTSTR[0]\");", "modifier": "private static final", "type": "DERPath", "declarator": "REFERRAL_PATH = new DERPath(\"/SEQ/APP(5)/CTX(3)/OCTSTR[0]\")", "var_name": "REFERRAL_PATH"}, {"original_string": "private final Map<String, LdapEntry> resultEntries = new LinkedHashMap<>();", "modifier": "private final", "type": "Map<String, LdapEntry>", "declarator": "resultEntries = new LinkedHashMap<>()", "var_name": "resultEntries"}, {"original_string": "private final Set<SearchResultReference> resultReferences = new LinkedHashSet<>();", "modifier": "private final", "type": "Set<SearchResultReference>", "declarator": "resultReferences = new LinkedHashSet<>()", "var_name": "resultReferences"}], "methods": [{"identifier": "SearchResponse", "parameters": "()", "modifiers": "public", "return": "", "signature": " SearchResponse()", "full_signature": "public  SearchResponse()", "class_method_signature": "SearchResponse.SearchResponse()", "testcase": false, "constructor": true}, {"identifier": "SearchResponse", "parameters": "(final DERBuffer buffer)", "modifiers": "public", "return": "", "signature": " SearchResponse(final DERBuffer buffer)", "full_signature": "public  SearchResponse(final DERBuffer buffer)", "class_method_signature": "SearchResponse.SearchResponse(final DERBuffer buffer)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "(final SearchResponse result)", "modifiers": "public", "return": "void", "signature": "void initialize(final SearchResponse result)", "full_signature": "public void initialize(final SearchResponse result)", "class_method_signature": "SearchResponse.initialize(final SearchResponse result)", "testcase": false, "constructor": false}, {"identifier": "getEntries", "parameters": "()", "modifiers": "public", "return": "Collection<LdapEntry>", "signature": "Collection<LdapEntry> getEntries()", "full_signature": "public Collection<LdapEntry> getEntries()", "class_method_signature": "SearchResponse.getEntries()", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "()", "modifiers": "public", "return": "LdapEntry", "signature": "LdapEntry getEntry()", "full_signature": "public LdapEntry getEntry()", "class_method_signature": "SearchResponse.getEntry()", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "(final String dn)", "modifiers": "public", "return": "LdapEntry", "signature": "LdapEntry getEntry(final String dn)", "full_signature": "public LdapEntry getEntry(final String dn)", "class_method_signature": "SearchResponse.getEntry(final String dn)", "testcase": false, "constructor": false}, {"identifier": "getEntryDns", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getEntryDns()", "full_signature": "public Set<String> getEntryDns()", "class_method_signature": "SearchResponse.getEntryDns()", "testcase": false, "constructor": false}, {"identifier": "addEntries", "parameters": "(final LdapEntry... entry)", "modifiers": "public", "return": "void", "signature": "void addEntries(final LdapEntry... entry)", "full_signature": "public void addEntries(final LdapEntry... entry)", "class_method_signature": "SearchResponse.addEntries(final LdapEntry... entry)", "testcase": false, "constructor": false}, {"identifier": "addEntries", "parameters": "(final Collection<LdapEntry> entries)", "modifiers": "public", "return": "void", "signature": "void addEntries(final Collection<LdapEntry> entries)", "full_signature": "public void addEntries(final Collection<LdapEntry> entries)", "class_method_signature": "SearchResponse.addEntries(final Collection<LdapEntry> entries)", "testcase": false, "constructor": false}, {"identifier": "entrySize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int entrySize()", "full_signature": "public int entrySize()", "class_method_signature": "SearchResponse.entrySize()", "testcase": false, "constructor": false}, {"identifier": "getReferences", "parameters": "()", "modifiers": "public", "return": "Collection<SearchResultReference>", "signature": "Collection<SearchResultReference> getReferences()", "full_signature": "public Collection<SearchResultReference> getReferences()", "class_method_signature": "SearchResponse.getReferences()", "testcase": false, "constructor": false}, {"identifier": "getReference", "parameters": "()", "modifiers": "public", "return": "SearchResultReference", "signature": "SearchResultReference getReference()", "full_signature": "public SearchResultReference getReference()", "class_method_signature": "SearchResponse.getReference()", "testcase": false, "constructor": false}, {"identifier": "addReferences", "parameters": "(final SearchResultReference... reference)", "modifiers": "public", "return": "void", "signature": "void addReferences(final SearchResultReference... reference)", "full_signature": "public void addReferences(final SearchResultReference... reference)", "class_method_signature": "SearchResponse.addReferences(final SearchResultReference... reference)", "testcase": false, "constructor": false}, {"identifier": "addReferences", "parameters": "(final Collection<SearchResultReference> references)", "modifiers": "public", "return": "void", "signature": "void addReferences(final Collection<SearchResultReference> references)", "full_signature": "public void addReferences(final Collection<SearchResultReference> references)", "class_method_signature": "SearchResponse.addReferences(final Collection<SearchResultReference> references)", "testcase": false, "constructor": false}, {"identifier": "referenceSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int referenceSize()", "full_signature": "public int referenceSize()", "class_method_signature": "SearchResponse.referenceSize()", "testcase": false, "constructor": false}, {"identifier": "subResult", "parameters": "(final int fromIndex, final int toIndex)", "modifiers": "public", "return": "SearchResponse", "signature": "SearchResponse subResult(final int fromIndex, final int toIndex)", "full_signature": "public SearchResponse subResult(final int fromIndex, final int toIndex)", "class_method_signature": "SearchResponse.subResult(final int fromIndex, final int toIndex)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "SearchResponse.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SearchResponse.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SearchResponse.toString()", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "(final SearchResponse sr)", "modifiers": "public static", "return": "SearchResponse", "signature": "SearchResponse sort(final SearchResponse sr)", "full_signature": "public static SearchResponse sort(final SearchResponse sr)", "class_method_signature": "SearchResponse.sort(final SearchResponse sr)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(final SearchResponse result)", "modifiers": "public static", "return": "SearchResponse", "signature": "SearchResponse merge(final SearchResponse result)", "full_signature": "public static SearchResponse merge(final SearchResponse result)", "class_method_signature": "SearchResponse.merge(final SearchResponse result)", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "SearchResponse.builder()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/SearchResponse.java"}, "focal_method": {"identifier": "subResult", "parameters": "(final int fromIndex, final int toIndex)", "modifiers": "public", "return": "SearchResponse", "body": "public SearchResponse subResult(final int fromIndex, final int toIndex)\n  {\n    if (fromIndex < 0 || toIndex > resultEntries.size() || fromIndex > toIndex) {\n      throw new IndexOutOfBoundsException(\"Illegal index value\");\n    }\n\n    final SearchResponse result = new SearchResponse();\n    if (resultEntries.isEmpty() || fromIndex == toIndex) {\n      return result;\n    }\n\n    int i = 0;\n    for (Map.Entry<String, LdapEntry> e : resultEntries.entrySet()) {\n      if (i >= fromIndex && i < toIndex) {\n        result.addEntries(e.getValue());\n      }\n      i++;\n    }\n    return result;\n  }", "signature": "SearchResponse subResult(final int fromIndex, final int toIndex)", "full_signature": "public SearchResponse subResult(final int fromIndex, final int toIndex)", "class_method_signature": "SearchResponse.subResult(final int fromIndex, final int toIndex)", "testcase": false, "constructor": false, "invocations": ["size", "isEmpty", "entrySet", "addEntries", "getValue"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}