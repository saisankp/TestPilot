{"test_class": {"identifier": "MulticastNetworkerTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-remoting/dubbo-remoting-p2p/src/test/java/org/apache/dubbo/remoting/p2p/support/MulticastNetworkerTest.java"}, "test_case": {"identifier": "testJoin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testJoin() throws RemotingException, InterruptedException {\n        final String groupURL = \"multicast://224.5.6.7:1234\";\n        final String peerURL = \"exchange://0.0.0.0:\" + NetUtils.getAvailablePort() + \"?exchanger=header\";\n\n        final CountDownLatch countDownLatch = new CountDownLatch(1);\n        Peer peer1 = Networkers.join(groupURL, peerURL, new ChannelHandlerAdapter() {\n            @Override\n            public void received(Channel channel, Object message) {\n                countDownLatch.countDown();\n            }\n        });\n        Peer peer2 = Networkers.join(groupURL, \"exchange://0.0.0.0:\" + NetUtils.getAvailablePort() + \"?exchanger=header\",\n                mock(ChannelHandlerAdapter.class));\n\n        while (true) {\n            long count = countDownLatch.getCount();\n            if (count > 0) {\n                break;\n            }\n            for (Channel channel : peer1.getChannels()) {\n                channel.send(\"hello world!\");\n            }\n            TimeUnit.MILLISECONDS.sleep(50);\n        }\n\n        Group lookup = Networkers.lookup(groupURL);\n        assertThat(lookup, not(nullValue()));\n\n        peer2.close();\n        peer1.close();\n    }", "signature": "void testJoin()", "full_signature": "@Test public void testJoin()", "class_method_signature": "MulticastNetworkerTest.testJoin()", "testcase": true, "constructor": false, "invocations": ["getAvailablePort", "join", "countDown", "join", "getAvailablePort", "mock", "getCount", "getChannels", "send", "sleep", "lookup", "assertThat", "not", "nullValue", "close", "close"]}, "focal_class": {"identifier": "MulticastNetworker", "superclass": "", "interfaces": "implements Networker", "fields": [], "methods": [{"identifier": "lookup", "parameters": "(URL url)", "modifiers": "@Override public", "return": "Group", "signature": "Group lookup(URL url)", "full_signature": "@Override public Group lookup(URL url)", "class_method_signature": "MulticastNetworker.lookup(URL url)", "testcase": false, "constructor": false}], "file": "dubbo-remoting/dubbo-remoting-p2p/src/main/java/org/apache/dubbo/remoting/p2p/support/MulticastNetworker.java"}, "focal_method": {"identifier": "lookup", "parameters": "(URL url)", "modifiers": "@Override public", "return": "Group", "body": "@Override\n    public Group lookup(URL url) throws RemotingException {\n        return new MulticastGroup(url);\n    }", "signature": "Group lookup(URL url)", "full_signature": "@Override public Group lookup(URL url)", "class_method_signature": "MulticastNetworker.lookup(URL url)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}