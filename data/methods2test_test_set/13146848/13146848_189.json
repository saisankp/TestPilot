{"test_class": {"identifier": "DefaultSejdaContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SejdaContext victim;", "modifier": "private", "type": "SejdaContext", "declarator": "victim", "var_name": "victim"}], "file": "sejda-core/src/test/java/org/sejda/core/context/DefaultSejdaContextTest.java"}, "test_case": {"identifier": "testGetTaskNegative", "parameters": "()", "modifiers": "@Test(expected = TaskNotFoundException.class) public", "return": "void", "body": "@Test(expected = TaskNotFoundException.class)\n    public void testGetTaskNegative() throws TaskException {\n        Task<? extends TaskParameters> task = victim.getTask(mock(TaskParameters.class));\n        Assert.assertNotNull(task);\n    }", "signature": "void testGetTaskNegative()", "full_signature": "@Test(expected = TaskNotFoundException.class) public void testGetTaskNegative()", "class_method_signature": "DefaultSejdaContextTest.testGetTaskNegative()", "testcase": true, "constructor": false, "invocations": ["getTask", "mock", "assertNotNull"]}, "focal_class": {"identifier": "DefaultSejdaContext", "superclass": "", "interfaces": "implements SejdaContext", "fields": [{"original_string": "private static final String ERROR_INSTANTIATING_THE_TASK = \"Error instantiating the task\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_INSTANTIATING_THE_TASK = \"Error instantiating the task\"", "var_name": "ERROR_INSTANTIATING_THE_TASK"}], "methods": [{"identifier": "getNotificationStrategy", "parameters": "()", "modifiers": "@Override public final", "return": "Class<? extends NotificationStrategy>", "signature": "Class<? extends NotificationStrategy> getNotificationStrategy()", "full_signature": "@Override public final Class<? extends NotificationStrategy> getNotificationStrategy()", "class_method_signature": "DefaultSejdaContext.getNotificationStrategy()", "testcase": false, "constructor": false}, {"identifier": "isValidation", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValidation()", "full_signature": "@Override public boolean isValidation()", "class_method_signature": "DefaultSejdaContext.isValidation()", "testcase": false, "constructor": false}, {"identifier": "isIgnoreXmlConfiguration", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIgnoreXmlConfiguration()", "full_signature": "public boolean isIgnoreXmlConfiguration()", "class_method_signature": "DefaultSejdaContext.isIgnoreXmlConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getTask", "parameters": "(TaskParameters parameters)", "modifiers": "@Override @SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public", "return": "Task<? extends TaskParameters>", "signature": "Task<? extends TaskParameters> getTask(TaskParameters parameters)", "full_signature": "@Override @SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public Task<? extends TaskParameters> getTask(TaskParameters parameters)", "class_method_signature": "DefaultSejdaContext.getTask(TaskParameters parameters)", "testcase": false, "constructor": false}], "file": "sejda-core/src/main/java/org/sejda/core/context/DefaultSejdaContext.java"}, "focal_method": {"identifier": "getTask", "parameters": "(TaskParameters parameters)", "modifiers": "@Override @SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public", "return": "Task<? extends TaskParameters>", "body": "@Override\n    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n    public Task<? extends TaskParameters> getTask(TaskParameters parameters) throws TaskException {\n        Class<? extends TaskParameters> parametersClass = parameters.getClass();\n        Class<? extends Task> taskClass = GlobalConfiguration.getInstance().getTasksRegistry().getTask(parametersClass);\n        if (taskClass == null) {\n            throw new TaskNotFoundException(\n                    String.format(\"Unable to find a Task class able to execute %s\", parametersClass));\n        }\n        try {\n            Constructor<? extends Task> constructor = taskClass.getConstructor();\n            return constructor.newInstance();\n        } catch (InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException\n                | SecurityException e) {\n            throw new TaskException(ERROR_INSTANTIATING_THE_TASK, e);\n        } catch (NoSuchMethodException e) {\n            throw new TaskException(String.format(\"The task %s doesn't define a public no-args contructor.\", taskClass),\n                    e);\n        }\n    }", "signature": "Task<? extends TaskParameters> getTask(TaskParameters parameters)", "full_signature": "@Override @SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public Task<? extends TaskParameters> getTask(TaskParameters parameters)", "class_method_signature": "DefaultSejdaContext.getTask(TaskParameters parameters)", "testcase": false, "constructor": false, "invocations": ["getClass", "getTask", "getTasksRegistry", "getInstance", "format", "getConstructor", "newInstance", "format"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}