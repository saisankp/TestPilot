{"test_class": {"identifier": "BaseSetterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IdentityFilter identityFilter;", "modifier": "private", "type": "IdentityFilter", "declarator": "identityFilter", "var_name": "identityFilter"}], "file": "prism/src/test/java/com/stylingandroid/prism/setter/BaseSetterTest.java"}, "test_case": {"identifier": "givenANonTransientColourSetterTransientEventsAreNotHandled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void givenANonTransientColourSetterTransientEventsAreNotHandled() {\n        NonTransientSetter colourSetter = new NonTransientSetter(identityFilter);\n        colourSetter.setTransientColour(ColourUtils.TEST_COLOUR);\n        assertThat(colourSetter.onSetColourCalled).isFalse();\n    }", "signature": "void givenANonTransientColourSetterTransientEventsAreNotHandled()", "full_signature": "@Test public void givenANonTransientColourSetterTransientEventsAreNotHandled()", "class_method_signature": "BaseSetterTest.givenANonTransientColourSetterTransientEventsAreNotHandled()", "testcase": true, "constructor": false, "invocations": ["setTransientColour", "isFalse", "assertThat"]}, "focal_class": {"identifier": "BaseSetter", "superclass": "", "interfaces": "implements Setter", "fields": [{"original_string": "private final Filter filter;", "modifier": "private final", "type": "Filter", "declarator": "filter", "var_name": "filter"}, {"original_string": "private final boolean transientChanges;", "modifier": "private final", "type": "boolean", "declarator": "transientChanges", "var_name": "transientChanges"}, {"original_string": "private int lastColour = 0;", "modifier": "private", "type": "int", "declarator": "lastColour = 0", "var_name": "lastColour"}], "methods": [{"identifier": "BaseSetter", "parameters": "(Filter filter)", "modifiers": "protected", "return": "", "signature": " BaseSetter(Filter filter)", "full_signature": "protected  BaseSetter(Filter filter)", "class_method_signature": "BaseSetter.BaseSetter(Filter filter)", "testcase": false, "constructor": true}, {"identifier": "BaseSetter", "parameters": "(Filter filter, boolean transientChanges)", "modifiers": "protected", "return": "", "signature": " BaseSetter(Filter filter, boolean transientChanges)", "full_signature": "protected  BaseSetter(Filter filter, boolean transientChanges)", "class_method_signature": "BaseSetter.BaseSetter(Filter filter, boolean transientChanges)", "testcase": false, "constructor": true}, {"identifier": "setColour", "parameters": "(@ColorInt int colour)", "modifiers": "@Override public final", "return": "void", "signature": "void setColour(@ColorInt int colour)", "full_signature": "@Override public final void setColour(@ColorInt int colour)", "class_method_signature": "BaseSetter.setColour(@ColorInt int colour)", "testcase": false, "constructor": false}, {"identifier": "setTransientColour", "parameters": "(@ColorInt int colour)", "modifiers": "@Override public final", "return": "void", "signature": "void setTransientColour(@ColorInt int colour)", "full_signature": "@Override public final void setTransientColour(@ColorInt int colour)", "class_method_signature": "BaseSetter.setTransientColour(@ColorInt int colour)", "testcase": false, "constructor": false}, {"identifier": "onSetColour", "parameters": "(@ColorInt int colour)", "modifiers": "public abstract", "return": "void", "signature": "void onSetColour(@ColorInt int colour)", "full_signature": "public abstract void onSetColour(@ColorInt int colour)", "class_method_signature": "BaseSetter.onSetColour(@ColorInt int colour)", "testcase": false, "constructor": false}], "file": "prism/src/main/java/com/stylingandroid/prism/setter/BaseSetter.java"}, "focal_method": {"identifier": "setTransientColour", "parameters": "(@ColorInt int colour)", "modifiers": "@Override public final", "return": "void", "body": "@Override\n    public final void setTransientColour(@ColorInt int colour) {\n        if (transientChanges) {\n            setColour(colour);\n        }\n    }", "signature": "void setTransientColour(@ColorInt int colour)", "full_signature": "@Override public final void setTransientColour(@ColorInt int colour)", "class_method_signature": "BaseSetter.setTransientColour(@ColorInt int colour)", "testcase": false, "constructor": false, "invocations": ["setColour"]}, "repository": {"repo_id": 37817790, "url": "https://github.com/StylingAndroid/Prism", "language": "Java", "is_fork": false, "fork_count": 86, "stargazer_count": 669, "size": 470, "license": "licensed"}}