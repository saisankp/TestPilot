{"test_class": {"identifier": "ExternalInterfaceServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DISPLAY_NAME_FIELD_WITH_EXTRA_SPACES = DISPLAY_NAME_FIELD + \"    \";", "modifier": "private static final", "type": "String", "declarator": "DISPLAY_NAME_FIELD_WITH_EXTRA_SPACES = DISPLAY_NAME_FIELD + \"    \"", "var_name": "DISPLAY_NAME_FIELD_WITH_EXTRA_SPACES"}, {"original_string": "private static final String EXTERNAL_INTERFACE_NAME_WITH_EXTRA_SPACES = EXTERNAL_INTERFACE + \"    \";", "modifier": "private static final", "type": "String", "declarator": "EXTERNAL_INTERFACE_NAME_WITH_EXTRA_SPACES = EXTERNAL_INTERFACE + \"    \"", "var_name": "EXTERNAL_INTERFACE_NAME_WITH_EXTRA_SPACES"}, {"original_string": "private static final ExternalInterfaceKey EXTERNAL_INTERFACE_KEY = new ExternalInterfaceKey()\n    {{\n        setExternalInterfaceName(EXTERNAL_INTERFACE);\n    }};", "modifier": "private static final", "type": "ExternalInterfaceKey", "declarator": "EXTERNAL_INTERFACE_KEY = new ExternalInterfaceKey()\n    {{\n        setExternalInterfaceName(EXTERNAL_INTERFACE);\n    }}", "var_name": "EXTERNAL_INTERFACE_KEY"}, {"original_string": "private static final ExternalInterfaceKey EXTERNAL_INTERFACE_KEY_WITH_EXTRA_SPACES_IN_NAME = new ExternalInterfaceKey()\n    {{\n        setExternalInterfaceName(EXTERNAL_INTERFACE_NAME_WITH_EXTRA_SPACES);\n    }};", "modifier": "private static final", "type": "ExternalInterfaceKey", "declarator": "EXTERNAL_INTERFACE_KEY_WITH_EXTRA_SPACES_IN_NAME = new ExternalInterfaceKey()\n    {{\n        setExternalInterfaceName(EXTERNAL_INTERFACE_NAME_WITH_EXTRA_SPACES);\n    }}", "var_name": "EXTERNAL_INTERFACE_KEY_WITH_EXTRA_SPACES_IN_NAME"}, {"original_string": "private static final ExternalInterfaceCreateRequest EXTERNAL_INTERFACE_CREATE_REQUEST = new ExternalInterfaceCreateRequest()\n    {{\n        setExternalInterfaceKey(EXTERNAL_INTERFACE_KEY);\n        setDisplayName(DISPLAY_NAME_FIELD);\n    }};", "modifier": "private static final", "type": "ExternalInterfaceCreateRequest", "declarator": "EXTERNAL_INTERFACE_CREATE_REQUEST = new ExternalInterfaceCreateRequest()\n    {{\n        setExternalInterfaceKey(EXTERNAL_INTERFACE_KEY);\n        setDisplayName(DISPLAY_NAME_FIELD);\n    }}", "var_name": "EXTERNAL_INTERFACE_CREATE_REQUEST"}, {"original_string": "private static final ExternalInterfaceCreateRequest EXTERNAL_INTERFACE_CREATE_REQUEST_WITH_EXTRA_SPACES_IN_NAME = new ExternalInterfaceCreateRequest()\n    {{\n        setExternalInterfaceKey(EXTERNAL_INTERFACE_KEY_WITH_EXTRA_SPACES_IN_NAME);\n        setDisplayName(DISPLAY_NAME_FIELD);\n    }};", "modifier": "private static final", "type": "ExternalInterfaceCreateRequest", "declarator": "EXTERNAL_INTERFACE_CREATE_REQUEST_WITH_EXTRA_SPACES_IN_NAME = new ExternalInterfaceCreateRequest()\n    {{\n        setExternalInterfaceKey(EXTERNAL_INTERFACE_KEY_WITH_EXTRA_SPACES_IN_NAME);\n        setDisplayName(DISPLAY_NAME_FIELD);\n    }}", "var_name": "EXTERNAL_INTERFACE_CREATE_REQUEST_WITH_EXTRA_SPACES_IN_NAME"}, {"original_string": "private static final ExternalInterfaceUpdateRequest EXTERNAL_INTERFACE_UPDATE_REQUEST = new ExternalInterfaceUpdateRequest()\n    {{\n        setDisplayName(DISPLAY_NAME_FIELD);\n        setDescription(DESCRIPTION);\n    }};", "modifier": "private static final", "type": "ExternalInterfaceUpdateRequest", "declarator": "EXTERNAL_INTERFACE_UPDATE_REQUEST = new ExternalInterfaceUpdateRequest()\n    {{\n        setDisplayName(DISPLAY_NAME_FIELD);\n        setDescription(DESCRIPTION);\n    }}", "var_name": "EXTERNAL_INTERFACE_UPDATE_REQUEST"}, {"original_string": "private static final ExternalInterfaceUpdateRequest EXTERNAL_INTERFACE_UPDATE_REQUEST_WITH_EXTRA_SPACES_IN_DISPLAY_NAME =\n        new ExternalInterfaceUpdateRequest()\n        {{\n            setDisplayName(DISPLAY_NAME_FIELD_WITH_EXTRA_SPACES);\n            setDescription(DESCRIPTION);\n        }};", "modifier": "private static final", "type": "ExternalInterfaceUpdateRequest", "declarator": "EXTERNAL_INTERFACE_UPDATE_REQUEST_WITH_EXTRA_SPACES_IN_DISPLAY_NAME =\n        new ExternalInterfaceUpdateRequest()\n        {{\n            setDisplayName(DISPLAY_NAME_FIELD_WITH_EXTRA_SPACES);\n            setDescription(DESCRIPTION);\n        }}", "var_name": "EXTERNAL_INTERFACE_UPDATE_REQUEST_WITH_EXTRA_SPACES_IN_DISPLAY_NAME"}, {"original_string": "private static final ExternalInterfaceEntity EXTERNAL_INTERFACE_ENTITY = new ExternalInterfaceEntity()\n    {{\n        setCode(EXTERNAL_INTERFACE);\n        setCreatedBy(CREATED_BY);\n        setUpdatedBy(CREATED_BY);\n        setCreatedOn(new Timestamp(CREATED_ON.getMillisecond()));\n    }};", "modifier": "private static final", "type": "ExternalInterfaceEntity", "declarator": "EXTERNAL_INTERFACE_ENTITY = new ExternalInterfaceEntity()\n    {{\n        setCode(EXTERNAL_INTERFACE);\n        setCreatedBy(CREATED_BY);\n        setUpdatedBy(CREATED_BY);\n        setCreatedOn(new Timestamp(CREATED_ON.getMillisecond()));\n    }}", "var_name": "EXTERNAL_INTERFACE_ENTITY"}, {"original_string": "private static final List<String> ALL_EXTERNAL_INTERFACE_NAMES = Arrays.asList(EXTERNAL_INTERFACE, EXTERNAL_INTERFACE_2, EXTERNAL_INTERFACE_3);", "modifier": "private static final", "type": "List<String>", "declarator": "ALL_EXTERNAL_INTERFACE_NAMES = Arrays.asList(EXTERNAL_INTERFACE, EXTERNAL_INTERFACE_2, EXTERNAL_INTERFACE_3)", "var_name": "ALL_EXTERNAL_INTERFACE_NAMES"}, {"original_string": "@InjectMocks\n    private ExternalInterfaceServiceImpl externalInterfaceService;", "modifier": "@InjectMocks\n    private", "type": "ExternalInterfaceServiceImpl", "declarator": "externalInterfaceService", "var_name": "externalInterfaceService"}, {"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Mock\n    private ExternalInterfaceDao externalInterfaceDao;", "modifier": "@Mock\n    private", "type": "ExternalInterfaceDao", "declarator": "externalInterfaceDao", "var_name": "externalInterfaceDao"}, {"original_string": "@Mock\n    private ExternalInterfaceDaoHelper externalInterfaceDaoHelper;", "modifier": "@Mock\n    private", "type": "ExternalInterfaceDaoHelper", "declarator": "externalInterfaceDaoHelper", "var_name": "externalInterfaceDaoHelper"}, {"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/ExternalInterfaceServiceImplTest.java"}, "test_case": {"identifier": "testUpdateExternalInterface", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateExternalInterface()\n    {\n        when(alternateKeyHelper.validateStringParameter(anyString(), anyString(), anyString())).thenReturn(EXTERNAL_INTERFACE);\n        when(alternateKeyHelper.validateStringParameter(anyString(), anyString())).thenReturn(DISPLAY_NAME_FIELD);\n        when(externalInterfaceDaoHelper.getExternalInterfaceEntity(EXTERNAL_INTERFACE)).thenReturn(EXTERNAL_INTERFACE_ENTITY);\n        when(externalInterfaceDao.saveAndRefresh(any(ExternalInterfaceEntity.class))).thenReturn(EXTERNAL_INTERFACE_ENTITY);\n\n        ExternalInterface externalInterface = externalInterfaceService.updateExternalInterface(EXTERNAL_INTERFACE_KEY, EXTERNAL_INTERFACE_UPDATE_REQUEST);\n        assertEquals(DISPLAY_NAME_FIELD, externalInterface.getDisplayName());\n\n        verify(alternateKeyHelper).validateStringParameter(\"An\", \"external interface name\", EXTERNAL_INTERFACE_KEY.getExternalInterfaceName());\n        verify(alternateKeyHelper).validateStringParameter(\"display name\", DISPLAY_NAME_FIELD);\n        verify(externalInterfaceDaoHelper).getExternalInterfaceEntity(EXTERNAL_INTERFACE);\n        verify(externalInterfaceDao).saveAndRefresh(any(ExternalInterfaceEntity.class));\n\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testUpdateExternalInterface()", "full_signature": "@Test public void testUpdateExternalInterface()", "class_method_signature": "ExternalInterfaceServiceImplTest.testUpdateExternalInterface()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "validateStringParameter", "anyString", "anyString", "anyString", "thenReturn", "when", "validateStringParameter", "anyString", "anyString", "thenReturn", "when", "getExternalInterfaceEntity", "thenReturn", "when", "saveAndRefresh", "any", "updateExternalInterface", "assertEquals", "getDisplayName", "validateStringParameter", "verify", "getExternalInterfaceName", "validateStringParameter", "verify", "getExternalInterfaceEntity", "verify", "saveAndRefresh", "verify", "any", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "ExternalInterfaceServiceImpl", "superclass": "", "interfaces": "implements ExternalInterfaceService", "fields": [{"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private ExternalInterfaceDao externalInterfaceDao;", "modifier": "@Autowired\n    private", "type": "ExternalInterfaceDao", "declarator": "externalInterfaceDao", "var_name": "externalInterfaceDao"}, {"original_string": "@Autowired\n    private ExternalInterfaceDaoHelper externalInterfaceDaoHelper;", "modifier": "@Autowired\n    private", "type": "ExternalInterfaceDaoHelper", "declarator": "externalInterfaceDaoHelper", "var_name": "externalInterfaceDaoHelper"}], "methods": [{"identifier": "createExternalInterface", "parameters": "(ExternalInterfaceCreateRequest request)", "modifiers": "@Override public", "return": "ExternalInterface", "signature": "ExternalInterface createExternalInterface(ExternalInterfaceCreateRequest request)", "full_signature": "@Override public ExternalInterface createExternalInterface(ExternalInterfaceCreateRequest request)", "class_method_signature": "ExternalInterfaceServiceImpl.createExternalInterface(ExternalInterfaceCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "getExternalInterface", "parameters": "(ExternalInterfaceKey externalInterfaceKey)", "modifiers": "@Override public", "return": "ExternalInterface", "signature": "ExternalInterface getExternalInterface(ExternalInterfaceKey externalInterfaceKey)", "full_signature": "@Override public ExternalInterface getExternalInterface(ExternalInterfaceKey externalInterfaceKey)", "class_method_signature": "ExternalInterfaceServiceImpl.getExternalInterface(ExternalInterfaceKey externalInterfaceKey)", "testcase": false, "constructor": false}, {"identifier": "deleteExternalInterface", "parameters": "(ExternalInterfaceKey externalInterfaceKey)", "modifiers": "@Override public", "return": "ExternalInterface", "signature": "ExternalInterface deleteExternalInterface(ExternalInterfaceKey externalInterfaceKey)", "full_signature": "@Override public ExternalInterface deleteExternalInterface(ExternalInterfaceKey externalInterfaceKey)", "class_method_signature": "ExternalInterfaceServiceImpl.deleteExternalInterface(ExternalInterfaceKey externalInterfaceKey)", "testcase": false, "constructor": false}, {"identifier": "getExternalInterfaces", "parameters": "()", "modifiers": "@Override public", "return": "ExternalInterfaceKeys", "signature": "ExternalInterfaceKeys getExternalInterfaces()", "full_signature": "@Override public ExternalInterfaceKeys getExternalInterfaces()", "class_method_signature": "ExternalInterfaceServiceImpl.getExternalInterfaces()", "testcase": false, "constructor": false}, {"identifier": "updateExternalInterface", "parameters": "(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)", "modifiers": "@Override public", "return": "ExternalInterface", "signature": "ExternalInterface updateExternalInterface(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)", "full_signature": "@Override public ExternalInterface updateExternalInterface(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)", "class_method_signature": "ExternalInterfaceServiceImpl.updateExternalInterface(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)", "testcase": false, "constructor": false}, {"identifier": "validateExternalInterfaceCreateRequest", "parameters": "(ExternalInterfaceCreateRequest request)", "modifiers": "", "return": "void", "signature": "void validateExternalInterfaceCreateRequest(ExternalInterfaceCreateRequest request)", "full_signature": " void validateExternalInterfaceCreateRequest(ExternalInterfaceCreateRequest request)", "class_method_signature": "ExternalInterfaceServiceImpl.validateExternalInterfaceCreateRequest(ExternalInterfaceCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "validateExternalInterfaceUpdateRequest", "parameters": "(ExternalInterfaceUpdateRequest request)", "modifiers": "", "return": "void", "signature": "void validateExternalInterfaceUpdateRequest(ExternalInterfaceUpdateRequest request)", "full_signature": " void validateExternalInterfaceUpdateRequest(ExternalInterfaceUpdateRequest request)", "class_method_signature": "ExternalInterfaceServiceImpl.validateExternalInterfaceUpdateRequest(ExternalInterfaceUpdateRequest request)", "testcase": false, "constructor": false}, {"identifier": "validateAndTrimExternalInterfaceKey", "parameters": "(ExternalInterfaceKey externalInterfaceKey)", "modifiers": "", "return": "void", "signature": "void validateAndTrimExternalInterfaceKey(ExternalInterfaceKey externalInterfaceKey)", "full_signature": " void validateAndTrimExternalInterfaceKey(ExternalInterfaceKey externalInterfaceKey)", "class_method_signature": "ExternalInterfaceServiceImpl.validateAndTrimExternalInterfaceKey(ExternalInterfaceKey externalInterfaceKey)", "testcase": false, "constructor": false}, {"identifier": "createExternalInterfaceEntity", "parameters": "(ExternalInterfaceCreateRequest request)", "modifiers": "private", "return": "ExternalInterfaceEntity", "signature": "ExternalInterfaceEntity createExternalInterfaceEntity(ExternalInterfaceCreateRequest request)", "full_signature": "private ExternalInterfaceEntity createExternalInterfaceEntity(ExternalInterfaceCreateRequest request)", "class_method_signature": "ExternalInterfaceServiceImpl.createExternalInterfaceEntity(ExternalInterfaceCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "createExternalInterfaceFromEntity", "parameters": "(ExternalInterfaceEntity externalInterfaceEntity)", "modifiers": "private", "return": "ExternalInterface", "signature": "ExternalInterface createExternalInterfaceFromEntity(ExternalInterfaceEntity externalInterfaceEntity)", "full_signature": "private ExternalInterface createExternalInterfaceFromEntity(ExternalInterfaceEntity externalInterfaceEntity)", "class_method_signature": "ExternalInterfaceServiceImpl.createExternalInterfaceFromEntity(ExternalInterfaceEntity externalInterfaceEntity)", "testcase": false, "constructor": false}, {"identifier": "updateExternalInterfaceEntity", "parameters": "(ExternalInterfaceEntity externalInterfaceEntity, ExternalInterfaceUpdateRequest request)", "modifiers": "private", "return": "void", "signature": "void updateExternalInterfaceEntity(ExternalInterfaceEntity externalInterfaceEntity, ExternalInterfaceUpdateRequest request)", "full_signature": "private void updateExternalInterfaceEntity(ExternalInterfaceEntity externalInterfaceEntity, ExternalInterfaceUpdateRequest request)", "class_method_signature": "ExternalInterfaceServiceImpl.updateExternalInterfaceEntity(ExternalInterfaceEntity externalInterfaceEntity, ExternalInterfaceUpdateRequest request)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/ExternalInterfaceServiceImpl.java"}, "focal_method": {"identifier": "updateExternalInterface", "parameters": "(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)", "modifiers": "@Override public", "return": "ExternalInterface", "body": "@Override\n    public ExternalInterface updateExternalInterface(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)\n    {\n        // Perform validation and trim.\n        validateAndTrimExternalInterfaceKey(externalInterfaceKey);\n\n        // Perform the validation.\n        validateExternalInterfaceUpdateRequest(request);\n\n        // Ensure an external interface with the specified external interface name exists.\n        ExternalInterfaceEntity externalInterfaceEntity =\n            externalInterfaceDaoHelper.getExternalInterfaceEntity(externalInterfaceKey.getExternalInterfaceName());\n\n        // Update and persist the external interface entity.\n        updateExternalInterfaceEntity(externalInterfaceEntity, request);\n\n        // Create and return the external interface object from the persisted entity.\n        return createExternalInterfaceFromEntity(externalInterfaceEntity);\n    }", "signature": "ExternalInterface updateExternalInterface(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)", "full_signature": "@Override public ExternalInterface updateExternalInterface(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)", "class_method_signature": "ExternalInterfaceServiceImpl.updateExternalInterface(ExternalInterfaceKey externalInterfaceKey, ExternalInterfaceUpdateRequest request)", "testcase": false, "constructor": false, "invocations": ["validateAndTrimExternalInterfaceKey", "validateExternalInterfaceUpdateRequest", "getExternalInterfaceEntity", "getExternalInterfaceName", "updateExternalInterfaceEntity", "createExternalInterfaceFromEntity"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}