{"test_class": {"identifier": "MongoSchemaFileStoreTest", "superclass": "extends MongoSchemaStoreTest<MongoSchemaFileStore>", "interfaces": "", "fields": [{"original_string": "Map<MongoSchemaFileStore, File> directories = new HashMap<MongoSchemaFileStore, File>();", "modifier": "", "type": "Map<MongoSchemaFileStore, File>", "declarator": "directories = new HashMap<MongoSchemaFileStore, File>()", "var_name": "directories"}], "file": "modules/unsupported/mongodb/src/test/java/org/geotools/data/mongodb/MongoSchemaFileStoreTest.java"}, "test_case": {"identifier": "testTypeName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTypeName() {\n        assertThat(typeName(new File(\"testMe.json\")),\n                is(equalTo(\"testMe\")));\n        assertThat(typeName(new File(\"c:/testMe.json\")),\n                is(equalTo(\"testMe\")));\n        assertThat(typeName(new File(\"/opt/tomcat/webapps/data/mongodb-schemas/teststore/testMe.json\")),\n                is(equalTo(\"testMe\")));\n    }", "signature": "void testTypeName()", "full_signature": "@Test public void testTypeName()", "class_method_signature": "MongoSchemaFileStoreTest.testTypeName()", "testcase": true, "constructor": false, "invocations": ["assertThat", "typeName", "is", "equalTo", "assertThat", "typeName", "is", "equalTo", "assertThat", "typeName", "is", "equalTo"]}, "focal_class": {"identifier": "MongoSchemaFileStore", "superclass": "", "interfaces": "implements MongoSchemaStore", "fields": [{"original_string": "static final String SUFFIX_json = \".json\";", "modifier": "static final", "type": "String", "declarator": "SUFFIX_json = \".json\"", "var_name": "SUFFIX_json"}, {"original_string": "final File schemaStoreFile;", "modifier": "final", "type": "File", "declarator": "schemaStoreFile", "var_name": "schemaStoreFile"}], "methods": [{"identifier": "MongoSchemaFileStore", "parameters": "(String uri)", "modifiers": "public", "return": "", "signature": " MongoSchemaFileStore(String uri)", "full_signature": "public  MongoSchemaFileStore(String uri)", "class_method_signature": "MongoSchemaFileStore.MongoSchemaFileStore(String uri)", "testcase": false, "constructor": true}, {"identifier": "MongoSchemaFileStore", "parameters": "(URI uri)", "modifiers": "public", "return": "", "signature": " MongoSchemaFileStore(URI uri)", "full_signature": "public  MongoSchemaFileStore(URI uri)", "class_method_signature": "MongoSchemaFileStore.MongoSchemaFileStore(URI uri)", "testcase": false, "constructor": true}, {"identifier": "MongoSchemaFileStore", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " MongoSchemaFileStore(File file)", "full_signature": "public  MongoSchemaFileStore(File file)", "class_method_signature": "MongoSchemaFileStore.MongoSchemaFileStore(File file)", "testcase": false, "constructor": true}, {"identifier": "storeSchema", "parameters": "(SimpleFeatureType schema)", "modifiers": "@Override public", "return": "void", "signature": "void storeSchema(SimpleFeatureType schema)", "full_signature": "@Override public void storeSchema(SimpleFeatureType schema)", "class_method_signature": "MongoSchemaFileStore.storeSchema(SimpleFeatureType schema)", "testcase": false, "constructor": false}, {"identifier": "retrieveSchema", "parameters": "(Name name)", "modifiers": "@Override public", "return": "SimpleFeatureType", "signature": "SimpleFeatureType retrieveSchema(Name name)", "full_signature": "@Override public SimpleFeatureType retrieveSchema(Name name)", "class_method_signature": "MongoSchemaFileStore.retrieveSchema(Name name)", "testcase": false, "constructor": false}, {"identifier": "deleteSchema", "parameters": "(Name name)", "modifiers": "@Override public", "return": "void", "signature": "void deleteSchema(Name name)", "full_signature": "@Override public void deleteSchema(Name name)", "class_method_signature": "MongoSchemaFileStore.deleteSchema(Name name)", "testcase": false, "constructor": false}, {"identifier": "typeNames", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> typeNames()", "full_signature": "@Override public List<String> typeNames()", "class_method_signature": "MongoSchemaFileStore.typeNames()", "testcase": false, "constructor": false}, {"identifier": "typeName", "parameters": "(File schemaFile)", "modifiers": "static", "return": "String", "signature": "String typeName(File schemaFile)", "full_signature": "static String typeName(File schemaFile)", "class_method_signature": "MongoSchemaFileStore.typeName(File schemaFile)", "testcase": false, "constructor": false}, {"identifier": "schemaFile", "parameters": "(Name name)", "modifiers": "", "return": "File", "signature": "File schemaFile(Name name)", "full_signature": " File schemaFile(Name name)", "class_method_signature": "MongoSchemaFileStore.schemaFile(Name name)", "testcase": false, "constructor": false}, {"identifier": "schemaFile", "parameters": "(String typeName)", "modifiers": "", "return": "File", "signature": "File schemaFile(String typeName)", "full_signature": " File schemaFile(String typeName)", "class_method_signature": "MongoSchemaFileStore.schemaFile(String typeName)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MongoSchemaFileStore.close()", "testcase": false, "constructor": false}, {"identifier": "validateDirectory", "parameters": "(File file)", "modifiers": "static", "return": "void", "signature": "void validateDirectory(File file)", "full_signature": "static void validateDirectory(File file)", "class_method_signature": "MongoSchemaFileStore.validateDirectory(File file)", "testcase": false, "constructor": false}], "file": "modules/unsupported/mongodb/src/main/java/org/geotools/data/mongodb/MongoSchemaFileStore.java"}, "focal_method": {"identifier": "typeName", "parameters": "(File schemaFile)", "modifiers": "static", "return": "String", "body": "static String typeName(File schemaFile) {\n        String typeName = schemaFile.getName();\n        return typeName.substring(0, typeName.length() - SUFFIX_json.length());\n    }", "signature": "String typeName(File schemaFile)", "full_signature": "static String typeName(File schemaFile)", "class_method_signature": "MongoSchemaFileStore.typeName(File schemaFile)", "testcase": false, "constructor": false, "invocations": ["getName", "substring", "length", "length"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}