{"test_class": {"identifier": "OrganizationTest", "superclass": "extends AbstractIntegrationTest", "interfaces": "", "fields": [], "file": "dayatang-hrm-organisation/src/test/java/org/dayatang/hrm/organisation/domain/OrganizationTest.java"}, "test_case": {"identifier": "listChildDepartments", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void listChildDepartments() {\n        OrganisationUtils organisationUtils = new OrganisationUtils();\n        Date date = DateUtils.date(2012, 1, 3);\n        Company headquarter = organisationUtils.createCompany(\"\u603b\u516c\u53f8\", date);\n        headquarter.save();\n        Department financial = organisationUtils.createDepartment(\"\u8d22\u52a1\u90e8\", headquarter, date);\n        Company company1 = organisationUtils.createCompany(\"\u5206\u516c\u53f81\", headquarter, date);\n        Department dept1 = organisationUtils.createDepartment(\"\u6838\u7b97\u79d1\", financial, date);\n        Department dept2 = organisationUtils.createDepartment(\"\u8d22\u52a1\u90e82\", company1, date);\n\n        List<Department> departments = headquarter.listChildDepartments();\n\n        assertTrue(departments.contains(financial));\n        assertFalse(departments.contains(company1));\n        assertFalse(departments.contains(dept1));\n        assertFalse(departments.contains(dept2));\n    }", "signature": "void listChildDepartments()", "full_signature": "@Test public final void listChildDepartments()", "class_method_signature": "OrganizationTest.listChildDepartments()", "testcase": true, "constructor": false, "invocations": ["date", "createCompany", "save", "createDepartment", "createCompany", "createDepartment", "createDepartment", "listChildDepartments", "assertTrue", "contains", "assertFalse", "contains", "assertFalse", "contains", "assertFalse", "contains"]}, "focal_class": {"identifier": "Organization", "superclass": "extends Party", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -8953682430610195006L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8953682430610195006L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "Organization", "parameters": "()", "modifiers": "public", "return": "", "signature": " Organization()", "full_signature": "public  Organization()", "class_method_signature": "Organization.Organization()", "testcase": false, "constructor": true}, {"identifier": "Organization", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " Organization(String name)", "full_signature": "public  Organization(String name)", "class_method_signature": "Organization.Organization(String name)", "testcase": false, "constructor": true}, {"identifier": "getParent", "parameters": "(Date date)", "modifiers": "public", "return": "Organization", "signature": "Organization getParent(Date date)", "full_signature": "public Organization getParent(Date date)", "class_method_signature": "Organization.getParent(Date date)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "(Date date)", "modifiers": "public", "return": "List<Organization>", "signature": "List<Organization> getChildren(Date date)", "full_signature": "public List<Organization> getChildren(Date date)", "class_method_signature": "Organization.getChildren(Date date)", "testcase": false, "constructor": false}, {"identifier": "listChildCompanies", "parameters": "()", "modifiers": "public", "return": "List<Company>", "signature": "List<Company> listChildCompanies()", "full_signature": "public List<Company> listChildCompanies()", "class_method_signature": "Organization.listChildCompanies()", "testcase": false, "constructor": false}, {"identifier": "listChildDepartments", "parameters": "()", "modifiers": "public", "return": "List<Department>", "signature": "List<Department> listChildDepartments()", "full_signature": "public List<Department> listChildDepartments()", "class_method_signature": "Organization.listChildDepartments()", "testcase": false, "constructor": false}, {"identifier": "getPosts", "parameters": "(Date date)", "modifiers": "public", "return": "Set<Post>", "signature": "Set<Post> getPosts(Date date)", "full_signature": "public Set<Post> getPosts(Date date)", "class_method_signature": "Organization.getPosts(Date date)", "testcase": false, "constructor": false}, {"identifier": "terminate", "parameters": "(Date date)", "modifiers": "@Override public", "return": "void", "signature": "void terminate(Date date)", "full_signature": "@Override public void terminate(Date date)", "class_method_signature": "Organization.terminate(Date date)", "testcase": false, "constructor": false}, {"identifier": "hasEmployees", "parameters": "(Date date)", "modifiers": "private", "return": "boolean", "signature": "boolean hasEmployees(Date date)", "full_signature": "private boolean hasEmployees(Date date)", "class_method_signature": "Organization.hasEmployees(Date date)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Organization.toString()", "testcase": false, "constructor": false}], "file": "dayatang-hrm-organisation/src/main/java/org/dayatang/hrm/organisation/domain/Organization.java"}, "focal_method": {"identifier": "listChildDepartments", "parameters": "()", "modifiers": "public", "return": "List<Department>", "body": "public List<Department> listChildDepartments() {\n        String jpql = \"select c from OrgLineMgmt o join o.responsible c \" +\n                \"where o.commissioner = :commissioner and TYPE(c) = Department\";\n        return getRepository().createJpqlQuery(jpql).addParameter(\"commissioner\", this).list();\n    }", "signature": "List<Department> listChildDepartments()", "full_signature": "public List<Department> listChildDepartments()", "class_method_signature": "Organization.listChildDepartments()", "testcase": false, "constructor": false, "invocations": ["list", "addParameter", "createJpqlQuery", "getRepository"]}, "repository": {"repo_id": 12481904, "url": "https://github.com/dayatang/hrm-demo", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 80, "size": 853, "license": "licensed"}}