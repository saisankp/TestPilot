{"test_class": {"identifier": "LatLongEnhancerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LatLongEnhancer latLongEnhancer;", "modifier": "private", "type": "LatLongEnhancer", "declarator": "latLongEnhancer", "var_name": "latLongEnhancer"}, {"original_string": "private Map<String, Object> geocodingResult;", "modifier": "private", "type": "Map<String, Object>", "declarator": "geocodingResult", "var_name": "geocodingResult"}, {"original_string": "private String xCoord;", "modifier": "private", "type": "String", "declarator": "xCoord", "var_name": "xCoord"}, {"original_string": "private String yCoord;", "modifier": "private", "type": "String", "declarator": "yCoord", "var_name": "yCoord"}, {"original_string": "private double expectedLat;", "modifier": "private", "type": "double", "declarator": "expectedLat", "var_name": "expectedLat"}, {"original_string": "private double expectedLong;", "modifier": "private", "type": "double", "declarator": "expectedLong", "var_name": "expectedLong"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/invoker/LatLongEnhancerTest.java"}, "test_case": {"identifier": "testGetNyspPoint", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNyspPoint()\n    {\n        // Empty\n        MapPoint result = this.latLongEnhancer.getNyspPoint(geocodingResult, LatLongEnhancer.DEFAULT_LATLONG_CONFIG);\n        assertZeroXY(result);\n        // Only x available\n        this.geocodingResult.put(OutputParam.XCOORD, this.xCoord);\n        result = this.latLongEnhancer.getNyspPoint(geocodingResult, LatLongEnhancer.DEFAULT_LATLONG_CONFIG);\n        assertZeroXY(result);\n        // Only y available\n        this.geocodingResult.remove(OutputParam.XCOORD);\n        this.geocodingResult.put(OutputParam.YCOORD, this.yCoord);\n        result = this.latLongEnhancer.getNyspPoint(geocodingResult, LatLongEnhancer.DEFAULT_LATLONG_CONFIG);\n        assertZeroXY(result);\n        // Both available\n        this.geocodingResult.put(OutputParam.XCOORD, this.xCoord);\n        this.geocodingResult.put(OutputParam.YCOORD, this.yCoord);\n        result = this.latLongEnhancer.getNyspPoint(geocodingResult, LatLongEnhancer.DEFAULT_LATLONG_CONFIG);\n        assertEquals(Double.parseDouble(this.xCoord), result.getX());\n        assertEquals(Double.parseDouble(this.yCoord), result.getY());\n    }", "signature": "void testGetNyspPoint()", "full_signature": "@Test public void testGetNyspPoint()", "class_method_signature": "LatLongEnhancerTest.testGetNyspPoint()", "testcase": true, "constructor": false, "invocations": ["getNyspPoint", "assertZeroXY", "put", "getNyspPoint", "assertZeroXY", "remove", "put", "getNyspPoint", "assertZeroXY", "put", "put", "getNyspPoint", "assertEquals", "parseDouble", "getX", "assertEquals", "parseDouble", "getY"]}, "focal_class": {"identifier": "LatLongEnhancer", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final LatLongConfig DEFAULT_LATLONG_CONFIG = new LatLongConfig(\"latitude\", \"longitude\",OutputParam.XCOORD,OutputParam.YCOORD, defaultDoc(\"latitude\", OutputParam.YCOORD, Function.F1B, Function.F2), defaultDoc(\"longitude\", OutputParam.XCOORD, Function.F1B, Function.F2));", "modifier": "public static final", "type": "LatLongConfig", "declarator": "DEFAULT_LATLONG_CONFIG = new LatLongConfig(\"latitude\", \"longitude\",OutputParam.XCOORD,OutputParam.YCOORD, defaultDoc(\"latitude\", OutputParam.YCOORD, Function.F1B, Function.F2), defaultDoc(\"longitude\", OutputParam.XCOORD, Function.F1B, Function.F2))", "var_name": "DEFAULT_LATLONG_CONFIG"}, {"original_string": "public static final LatLongConfig DEFAULT_LATLONG_INTERNAL_LABEL_CONFIG = new LatLongConfig(\"latitudeInternalLabel\", \"longitudeInternalLabel\",OutputParam.XCOORD_INTERNAL_LABEL,OutputParam.YCOORD_INTERNAL_LABEL,defaultDoc(\"latitudeInternalLabel\", OutputParam.YCOORD_INTERNAL_LABEL, Function.F1B, Function.FBL, Function.FBN), defaultDoc(\"longitudeInternalLabel\", OutputParam.XCOORD_INTERNAL_LABEL, Function.F1B, Function.FBL, Function.FBN));", "modifier": "public static final", "type": "LatLongConfig", "declarator": "DEFAULT_LATLONG_INTERNAL_LABEL_CONFIG = new LatLongConfig(\"latitudeInternalLabel\", \"longitudeInternalLabel\",OutputParam.XCOORD_INTERNAL_LABEL,OutputParam.YCOORD_INTERNAL_LABEL,defaultDoc(\"latitudeInternalLabel\", OutputParam.YCOORD_INTERNAL_LABEL, Function.F1B, Function.FBL, Function.FBN), defaultDoc(\"longitudeInternalLabel\", OutputParam.XCOORD_INTERNAL_LABEL, Function.F1B, Function.FBL, Function.FBN))", "var_name": "DEFAULT_LATLONG_INTERNAL_LABEL_CONFIG"}, {"original_string": "public static final Transformer DEFAULT_TRANSFORMER = new TransformerFactory().nyspToLatLong();", "modifier": "public static final", "type": "Transformer", "declarator": "DEFAULT_TRANSFORMER = new TransformerFactory().nyspToLatLong()", "var_name": "DEFAULT_TRANSFORMER"}, {"original_string": "public static final List<LatLongConfig> DEFAULT_CONFIGS = new ArrayList<LatLongConfig>();", "modifier": "public static final", "type": "List<LatLongConfig>", "declarator": "DEFAULT_CONFIGS = new ArrayList<LatLongConfig>()", "var_name": "DEFAULT_CONFIGS"}, {"original_string": "private Transformer transformer = DEFAULT_TRANSFORMER;", "modifier": "private", "type": "Transformer", "declarator": "transformer = DEFAULT_TRANSFORMER", "var_name": "transformer"}, {"original_string": "private List<LatLongConfig> latLongConfigs = DEFAULT_CONFIGS;", "modifier": "private", "type": "List<LatLongConfig>", "declarator": "latLongConfigs = DEFAULT_CONFIGS", "var_name": "latLongConfigs"}], "methods": [{"identifier": "defaultDoc", "parameters": "(String id, String inputField,String...functionNames)", "modifiers": "private static", "return": "ItemDocumentation", "signature": "ItemDocumentation defaultDoc(String id, String inputField,String...functionNames)", "full_signature": "private static ItemDocumentation defaultDoc(String id, String inputField,String...functionNames)", "class_method_signature": "LatLongEnhancer.defaultDoc(String id, String inputField,String...functionNames)", "testcase": false, "constructor": false}, {"identifier": "addLatLong", "parameters": "(Map<String, Object> geocodingResult)", "modifiers": "public", "return": "void", "signature": "void addLatLong(Map<String, Object> geocodingResult)", "full_signature": "public void addLatLong(Map<String, Object> geocodingResult)", "class_method_signature": "LatLongEnhancer.addLatLong(Map<String, Object> geocodingResult)", "testcase": false, "constructor": false}, {"identifier": "getNyspPoint", "parameters": "(Map<String, Object> geocodingResult, LatLongConfig config)", "modifiers": "public", "return": "MapPoint", "signature": "MapPoint getNyspPoint(Map<String, Object> geocodingResult, LatLongConfig config)", "full_signature": "public MapPoint getNyspPoint(Map<String, Object> geocodingResult, LatLongConfig config)", "class_method_signature": "LatLongEnhancer.getNyspPoint(Map<String, Object> geocodingResult, LatLongConfig config)", "testcase": false, "constructor": false}, {"identifier": "getItemDocumentation", "parameters": "()", "modifiers": "public", "return": "List<ItemDocumentation>", "signature": "List<ItemDocumentation> getItemDocumentation()", "full_signature": "public List<ItemDocumentation> getItemDocumentation()", "class_method_signature": "LatLongEnhancer.getItemDocumentation()", "testcase": false, "constructor": false}, {"identifier": "getTransformer", "parameters": "()", "modifiers": "public", "return": "Transformer", "signature": "Transformer getTransformer()", "full_signature": "public Transformer getTransformer()", "class_method_signature": "LatLongEnhancer.getTransformer()", "testcase": false, "constructor": false}, {"identifier": "setTransformer", "parameters": "(Transformer transformer)", "modifiers": "public", "return": "void", "signature": "void setTransformer(Transformer transformer)", "full_signature": "public void setTransformer(Transformer transformer)", "class_method_signature": "LatLongEnhancer.setTransformer(Transformer transformer)", "testcase": false, "constructor": false}, {"identifier": "getLatLongConfigs", "parameters": "()", "modifiers": "public", "return": "List<LatLongConfig>", "signature": "List<LatLongConfig> getLatLongConfigs()", "full_signature": "public List<LatLongConfig> getLatLongConfigs()", "class_method_signature": "LatLongEnhancer.getLatLongConfigs()", "testcase": false, "constructor": false}, {"identifier": "setLatLongConfigs", "parameters": "(List<LatLongConfig> latLongConfigs)", "modifiers": "public", "return": "void", "signature": "void setLatLongConfigs(List<LatLongConfig> latLongConfigs)", "full_signature": "public void setLatLongConfigs(List<LatLongConfig> latLongConfigs)", "class_method_signature": "LatLongEnhancer.setLatLongConfigs(List<LatLongConfig> latLongConfigs)", "testcase": false, "constructor": false}, {"identifier": "doubleValueOf", "parameters": "(Object value)", "modifiers": "private", "return": "double", "signature": "double doubleValueOf(Object value)", "full_signature": "private double doubleValueOf(Object value)", "class_method_signature": "LatLongEnhancer.doubleValueOf(Object value)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/invoker/LatLongEnhancer.java"}, "focal_method": {"identifier": "getNyspPoint", "parameters": "(Map<String, Object> geocodingResult, LatLongConfig config)", "modifiers": "public", "return": "MapPoint", "body": "public MapPoint getNyspPoint(Map<String, Object> geocodingResult, LatLongConfig config)\n  {\n    MapPoint mapPoint = new MapPoint();\n    if (geocodingResult.containsKey(config.getXCoordInputName()) && geocodingResult.containsKey(config.getYCoordInputName()))\n    {\n      mapPoint.setX(doubleValueOf(geocodingResult.get(config.getXCoordInputName())));\n      mapPoint.setY(doubleValueOf(geocodingResult.get(config.getYCoordInputName())));\n    }\n    return mapPoint;\n  }", "signature": "MapPoint getNyspPoint(Map<String, Object> geocodingResult, LatLongConfig config)", "full_signature": "public MapPoint getNyspPoint(Map<String, Object> geocodingResult, LatLongConfig config)", "class_method_signature": "LatLongEnhancer.getNyspPoint(Map<String, Object> geocodingResult, LatLongConfig config)", "testcase": false, "constructor": false, "invocations": ["containsKey", "getXCoordInputName", "containsKey", "getYCoordInputName", "setX", "doubleValueOf", "get", "getXCoordInputName", "setY", "doubleValueOf", "get", "getYCoordInputName"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}