{"test_class": {"identifier": "SSMRaiderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private  SSMRaiderImpl ssmRaiderUnderTest;", "modifier": "@Autowired\n    private", "type": "SSMRaiderImpl", "declarator": "ssmRaiderUnderTest", "var_name": "ssmRaiderUnderTest"}, {"original_string": "@Autowired\n    private  SSMDelegator ssmDelegator;", "modifier": "@Autowired\n    private", "type": "SSMDelegator", "declarator": "ssmDelegator", "var_name": "ssmDelegator"}, {"original_string": "private  AWSSimpleSystemsManagement amazonSSM;", "modifier": "private", "type": "AWSSimpleSystemsManagement", "declarator": "amazonSSM", "var_name": "amazonSSM"}, {"original_string": "private  GetCommandInvocationResult getCommandInvocationResult;", "modifier": "private", "type": "GetCommandInvocationResult", "declarator": "getCommandInvocationResult", "var_name": "getCommandInvocationResult"}], "file": "cloudraider-core/src/test/java/com/intuit/cloudraider/core/impl/SSMRaiderImplTest.java"}, "test_case": {"identifier": "testExecuteShellCommandsFromFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecuteShellCommandsFromFile() throws Exception{\n\n        String commandId = ssmRaiderUnderTest.executeShellCommandsFromFile(createInstancesList(),\"test.sh\",\"java\" );\n        Assert.assertEquals(commandId, \"777\");\n    }", "signature": "void testExecuteShellCommandsFromFile()", "full_signature": "@Test public void testExecuteShellCommandsFromFile()", "class_method_signature": "SSMRaiderImplTest.testExecuteShellCommandsFromFile()", "testcase": true, "constructor": false, "invocations": ["executeShellCommandsFromFile", "createInstancesList", "assertEquals"]}, "focal_class": {"identifier": "SSMRaiderImpl", "superclass": "", "interfaces": "implements SSMRaider", "fields": [{"original_string": "Logger logger = LoggerFactory.getLogger(this.getClass());", "modifier": "", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(this.getClass())", "var_name": "logger"}, {"original_string": "@Autowired\n    private SSMDelegator ssmDelegator;", "modifier": "@Autowired\n    private", "type": "SSMDelegator", "declarator": "ssmDelegator", "var_name": "ssmDelegator"}], "methods": [{"identifier": "SSMRaiderImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " SSMRaiderImpl()", "full_signature": "public  SSMRaiderImpl()", "class_method_signature": "SSMRaiderImpl.SSMRaiderImpl()", "testcase": false, "constructor": true}, {"identifier": "executeShellCommands", "parameters": "(List<String> instances, List<String> commands)", "modifiers": "@Override public", "return": "String", "signature": "String executeShellCommands(List<String> instances, List<String> commands)", "full_signature": "@Override public String executeShellCommands(List<String> instances, List<String> commands)", "class_method_signature": "SSMRaiderImpl.executeShellCommands(List<String> instances, List<String> commands)", "testcase": false, "constructor": false}, {"identifier": "getCommandStatus", "parameters": "(String commandId, String instanceId)", "modifiers": "@Override public", "return": "String", "signature": "String getCommandStatus(String commandId, String instanceId)", "full_signature": "@Override public String getCommandStatus(String commandId, String instanceId)", "class_method_signature": "SSMRaiderImpl.getCommandStatus(String commandId, String instanceId)", "testcase": false, "constructor": false}, {"identifier": "getCommandStandardOutput", "parameters": "(String commandId, String instanceId)", "modifiers": "@Override public", "return": "String", "signature": "String getCommandStandardOutput(String commandId, String instanceId)", "full_signature": "@Override public String getCommandStandardOutput(String commandId, String instanceId)", "class_method_signature": "SSMRaiderImpl.getCommandStandardOutput(String commandId, String instanceId)", "testcase": false, "constructor": false}, {"identifier": "getCommandErrors", "parameters": "(String commandId, String instanceId)", "modifiers": "@Override public", "return": "String", "signature": "String getCommandErrors(String commandId, String instanceId)", "full_signature": "@Override public String getCommandErrors(String commandId, String instanceId)", "class_method_signature": "SSMRaiderImpl.getCommandErrors(String commandId, String instanceId)", "testcase": false, "constructor": false}, {"identifier": "getCommandInvocationResult", "parameters": "(String commandId, String instanceId)", "modifiers": "private", "return": "GetCommandInvocationResult", "signature": "GetCommandInvocationResult getCommandInvocationResult(String commandId, String instanceId)", "full_signature": "private GetCommandInvocationResult getCommandInvocationResult(String commandId, String instanceId)", "class_method_signature": "SSMRaiderImpl.getCommandInvocationResult(String commandId, String instanceId)", "testcase": false, "constructor": false}, {"identifier": "executeShellCommandsFromFile", "parameters": "(List<String> instances, String fileName, String... params)", "modifiers": "@Override public", "return": "String", "signature": "String executeShellCommandsFromFile(List<String> instances, String fileName, String... params)", "full_signature": "@Override public String executeShellCommandsFromFile(List<String> instances, String fileName, String... params)", "class_method_signature": "SSMRaiderImpl.executeShellCommandsFromFile(List<String> instances, String fileName, String... params)", "testcase": false, "constructor": false}, {"identifier": "executeShellCommand", "parameters": "(List<String> instances, Command command, String... params)", "modifiers": "@Override public", "return": "String", "signature": "String executeShellCommand(List<String> instances, Command command, String... params)", "full_signature": "@Override public String executeShellCommand(List<String> instances, Command command, String... params)", "class_method_signature": "SSMRaiderImpl.executeShellCommand(List<String> instances, Command command, String... params)", "testcase": false, "constructor": false}], "file": "cloudraider-core/src/main/java/com/intuit/cloudraider/core/impl/SSMRaiderImpl.java"}, "focal_method": {"identifier": "executeShellCommandsFromFile", "parameters": "(List<String> instances, String fileName, String... params)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String executeShellCommandsFromFile(List<String> instances, String fileName, String... params) {\n\n        List<String> commands = CommandUtility.getCommandsFromFile(fileName, params);\n\n        if (commands.isEmpty()) {\n            throw new InvalidInputDataException(\"No commands available to execute\");\n        }\n\n        return this.executeShellCommands(instances, commands);\n    }", "signature": "String executeShellCommandsFromFile(List<String> instances, String fileName, String... params)", "full_signature": "@Override public String executeShellCommandsFromFile(List<String> instances, String fileName, String... params)", "class_method_signature": "SSMRaiderImpl.executeShellCommandsFromFile(List<String> instances, String fileName, String... params)", "testcase": false, "constructor": false, "invocations": ["getCommandsFromFile", "isEmpty", "executeShellCommands"]}, "repository": {"repo_id": 189453445, "url": "https://github.com/intuit/CloudRaider", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 16, "size": 730, "license": "licensed"}}