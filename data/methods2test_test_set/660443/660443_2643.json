{"test_class": {"identifier": "DebugAtomContainerTest", "superclass": "extends AbstractAtomContainerTest", "interfaces": "", "fields": [], "file": "base/datadebug/src/test/java/org/openscience/cdk/debug/DebugAtomContainerTest.java"}, "test_case": {"identifier": "testDebugAtomContainer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDebugAtomContainer() {\n        // create an empty container with in the constructor defined array lengths\n        IAtomContainer container = new DebugAtomContainer();\n\n        Assert.assertEquals(0, container.getAtomCount());\n        Assert.assertEquals(0, container.getBondCount());\n\n        // test whether the ElectronContainer is correctly initialized\n        container.addBond(container.getBuilder().newInstance(IBond.class,\n                container.getBuilder().newInstance(IAtom.class, \"C\"),\n                container.getBuilder().newInstance(IAtom.class, \"C\"), IBond.Order.DOUBLE));\n        container.addLonePair(container.getBuilder().newInstance(ILonePair.class,\n                container.getBuilder().newInstance(IAtom.class, \"N\")));\n    }", "signature": "void testDebugAtomContainer()", "full_signature": "@Test public void testDebugAtomContainer()", "class_method_signature": "DebugAtomContainerTest.testDebugAtomContainer()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getAtomCount", "assertEquals", "getBondCount", "addBond", "newInstance", "getBuilder", "newInstance", "getBuilder", "newInstance", "getBuilder", "addLonePair", "newInstance", "getBuilder", "newInstance", "getBuilder"]}, "focal_class": {"identifier": "DebugAtomContainer", "superclass": "extends AtomContainer", "interfaces": "implements IAtomContainer", "fields": [{"original_string": "private static final long serialVersionUID = 7584711255625778345L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 7584711255625778345L", "var_name": "serialVersionUID"}, {"original_string": "ILoggingTool logger = LoggingToolFactory.createLoggingTool(DebugAtomContainer.class);", "modifier": "", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(DebugAtomContainer.class)", "var_name": "logger"}], "methods": [{"identifier": "DebugAtomContainer", "parameters": "()", "modifiers": "public", "return": "", "signature": " DebugAtomContainer()", "full_signature": "public  DebugAtomContainer()", "class_method_signature": "DebugAtomContainer.DebugAtomContainer()", "testcase": false, "constructor": true}, {"identifier": "DebugAtomContainer", "parameters": "(int atomCount, int bondCount, int lonePairCount,\n                              int singleElectronCount)", "modifiers": "public", "return": "", "signature": " DebugAtomContainer(int atomCount, int bondCount, int lonePairCount,\n                              int singleElectronCount)", "full_signature": "public  DebugAtomContainer(int atomCount, int bondCount, int lonePairCount,\n                              int singleElectronCount)", "class_method_signature": "DebugAtomContainer.DebugAtomContainer(int atomCount, int bondCount, int lonePairCount,\n                              int singleElectronCount)", "testcase": false, "constructor": true}, {"identifier": "DebugAtomContainer", "parameters": "(IAtomContainer container)", "modifiers": "public", "return": "", "signature": " DebugAtomContainer(IAtomContainer container)", "full_signature": "public  DebugAtomContainer(IAtomContainer container)", "class_method_signature": "DebugAtomContainer.DebugAtomContainer(IAtomContainer container)", "testcase": false, "constructor": true}, {"identifier": "addStereoElement", "parameters": "(IStereoElement parity)", "modifiers": "@Override public", "return": "void", "signature": "void addStereoElement(IStereoElement parity)", "full_signature": "@Override public void addStereoElement(IStereoElement parity)", "class_method_signature": "DebugAtomContainer.addStereoElement(IStereoElement parity)", "testcase": false, "constructor": false}, {"identifier": "setStereoElements", "parameters": "(List<IStereoElement> elements)", "modifiers": "@Override public", "return": "void", "signature": "void setStereoElements(List<IStereoElement> elements)", "full_signature": "@Override public void setStereoElements(List<IStereoElement> elements)", "class_method_signature": "DebugAtomContainer.setStereoElements(List<IStereoElement> elements)", "testcase": false, "constructor": false}, {"identifier": "stereoElements", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IStereoElement>", "signature": "Iterable<IStereoElement> stereoElements()", "full_signature": "@Override public Iterable<IStereoElement> stereoElements()", "class_method_signature": "DebugAtomContainer.stereoElements()", "testcase": false, "constructor": false}, {"identifier": "setAtoms", "parameters": "(IAtom[] atoms)", "modifiers": "@Override public", "return": "void", "signature": "void setAtoms(IAtom[] atoms)", "full_signature": "@Override public void setAtoms(IAtom[] atoms)", "class_method_signature": "DebugAtomContainer.setAtoms(IAtom[] atoms)", "testcase": false, "constructor": false}, {"identifier": "setAtom", "parameters": "(int number, IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void setAtom(int number, IAtom atom)", "full_signature": "@Override public void setAtom(int number, IAtom atom)", "class_method_signature": "DebugAtomContainer.setAtom(int number, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getAtom", "parameters": "(int idx)", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getAtom(int idx)", "full_signature": "@Override public IAtom getAtom(int idx)", "class_method_signature": "DebugAtomContainer.getAtom(int idx)", "testcase": false, "constructor": false}, {"identifier": "getBond", "parameters": "(int idx)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond getBond(int idx)", "full_signature": "@Override public IBond getBond(int idx)", "class_method_signature": "DebugAtomContainer.getBond(int idx)", "testcase": false, "constructor": false}, {"identifier": "getLonePair", "parameters": "(int idx)", "modifiers": "@Override public", "return": "ILonePair", "signature": "ILonePair getLonePair(int idx)", "full_signature": "@Override public ILonePair getLonePair(int idx)", "class_method_signature": "DebugAtomContainer.getLonePair(int idx)", "testcase": false, "constructor": false}, {"identifier": "getSingleElectron", "parameters": "(int idx)", "modifiers": "@Override public", "return": "ISingleElectron", "signature": "ISingleElectron getSingleElectron(int idx)", "full_signature": "@Override public ISingleElectron getSingleElectron(int idx)", "class_method_signature": "DebugAtomContainer.getSingleElectron(int idx)", "testcase": false, "constructor": false}, {"identifier": "atoms", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IAtom>", "signature": "Iterable<IAtom> atoms()", "full_signature": "@Override public Iterable<IAtom> atoms()", "class_method_signature": "DebugAtomContainer.atoms()", "testcase": false, "constructor": false}, {"identifier": "bonds", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IBond>", "signature": "Iterable<IBond> bonds()", "full_signature": "@Override public Iterable<IBond> bonds()", "class_method_signature": "DebugAtomContainer.bonds()", "testcase": false, "constructor": false}, {"identifier": "lonePairs", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<ILonePair>", "signature": "Iterable<ILonePair> lonePairs()", "full_signature": "@Override public Iterable<ILonePair> lonePairs()", "class_method_signature": "DebugAtomContainer.lonePairs()", "testcase": false, "constructor": false}, {"identifier": "singleElectrons", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<ISingleElectron>", "signature": "Iterable<ISingleElectron> singleElectrons()", "full_signature": "@Override public Iterable<ISingleElectron> singleElectrons()", "class_method_signature": "DebugAtomContainer.singleElectrons()", "testcase": false, "constructor": false}, {"identifier": "electronContainers", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IElectronContainer>", "signature": "Iterable<IElectronContainer> electronContainers()", "full_signature": "@Override public Iterable<IElectronContainer> electronContainers()", "class_method_signature": "DebugAtomContainer.electronContainers()", "testcase": false, "constructor": false}, {"identifier": "getFirstAtom", "parameters": "()", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getFirstAtom()", "full_signature": "@Override public IAtom getFirstAtom()", "class_method_signature": "DebugAtomContainer.getFirstAtom()", "testcase": false, "constructor": false}, {"identifier": "getLastAtom", "parameters": "()", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getLastAtom()", "full_signature": "@Override public IAtom getLastAtom()", "class_method_signature": "DebugAtomContainer.getLastAtom()", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(IAtom atom)", "full_signature": "@Override public int indexOf(IAtom atom)", "class_method_signature": "DebugAtomContainer.indexOf(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(IBond bond)", "full_signature": "@Override public int indexOf(IBond bond)", "class_method_signature": "DebugAtomContainer.indexOf(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(ISingleElectron electron)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(ISingleElectron electron)", "full_signature": "@Override public int indexOf(ISingleElectron electron)", "class_method_signature": "DebugAtomContainer.indexOf(ISingleElectron electron)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(ILonePair pair)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(ILonePair pair)", "full_signature": "@Override public int indexOf(ILonePair pair)", "class_method_signature": "DebugAtomContainer.indexOf(ILonePair pair)", "testcase": false, "constructor": false}, {"identifier": "getElectronContainer", "parameters": "(int number)", "modifiers": "@Override public", "return": "IElectronContainer", "signature": "IElectronContainer getElectronContainer(int number)", "full_signature": "@Override public IElectronContainer getElectronContainer(int number)", "class_method_signature": "DebugAtomContainer.getElectronContainer(int number)", "testcase": false, "constructor": false}, {"identifier": "getBond", "parameters": "(IAtom atom1, IAtom atom2)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond getBond(IAtom atom1, IAtom atom2)", "full_signature": "@Override public IBond getBond(IAtom atom1, IAtom atom2)", "class_method_signature": "DebugAtomContainer.getBond(IAtom atom1, IAtom atom2)", "testcase": false, "constructor": false}, {"identifier": "getAtomCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getAtomCount()", "full_signature": "@Override public int getAtomCount()", "class_method_signature": "DebugAtomContainer.getAtomCount()", "testcase": false, "constructor": false}, {"identifier": "getBondCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getBondCount()", "full_signature": "@Override public int getBondCount()", "class_method_signature": "DebugAtomContainer.getBondCount()", "testcase": false, "constructor": false}, {"identifier": "getLonePairCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLonePairCount()", "full_signature": "@Override public int getLonePairCount()", "class_method_signature": "DebugAtomContainer.getLonePairCount()", "testcase": false, "constructor": false}, {"identifier": "getSingleElectronCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSingleElectronCount()", "full_signature": "@Override public int getSingleElectronCount()", "class_method_signature": "DebugAtomContainer.getSingleElectronCount()", "testcase": false, "constructor": false}, {"identifier": "getElectronContainerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getElectronContainerCount()", "full_signature": "@Override public int getElectronContainerCount()", "class_method_signature": "DebugAtomContainer.getElectronContainerCount()", "testcase": false, "constructor": false}, {"identifier": "getConnectedAtomsList", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "List<IAtom>", "signature": "List<IAtom> getConnectedAtomsList(IAtom atom)", "full_signature": "@Override public List<IAtom> getConnectedAtomsList(IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedAtomsList(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedBondsList", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "List<IBond>", "signature": "List<IBond> getConnectedBondsList(IAtom atom)", "full_signature": "@Override public List<IBond> getConnectedBondsList(IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedBondsList(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedLonePairsList", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "List<ILonePair>", "signature": "List<ILonePair> getConnectedLonePairsList(IAtom atom)", "full_signature": "@Override public List<ILonePair> getConnectedLonePairsList(IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedLonePairsList(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedSingleElectronsList", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "List<ISingleElectron>", "signature": "List<ISingleElectron> getConnectedSingleElectronsList(IAtom atom)", "full_signature": "@Override public List<ISingleElectron> getConnectedSingleElectronsList(IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedSingleElectronsList(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedElectronContainersList", "parameters": "(\n        IAtom atom)", "modifiers": "@Override public", "return": "List<IElectronContainer>", "signature": "List<IElectronContainer> getConnectedElectronContainersList(\n        IAtom atom)", "full_signature": "@Override public List<IElectronContainer> getConnectedElectronContainersList(\n        IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedElectronContainersList(\n        IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedAtomsCount", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedAtomsCount(IAtom atom)", "full_signature": "@Override public int getConnectedAtomsCount(IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedAtomsCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedBondsCount", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedBondsCount(IAtom atom)", "full_signature": "@Override public int getConnectedBondsCount(IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedBondsCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedLonePairsCount", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedLonePairsCount(IAtom atom)", "full_signature": "@Override public int getConnectedLonePairsCount(IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedLonePairsCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getConnectedSingleElectronsCount", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "int", "signature": "int getConnectedSingleElectronsCount(IAtom atom)", "full_signature": "@Override public int getConnectedSingleElectronsCount(IAtom atom)", "class_method_signature": "DebugAtomContainer.getConnectedSingleElectronsCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getBondOrderSum", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "double", "signature": "double getBondOrderSum(IAtom atom)", "full_signature": "@Override public double getBondOrderSum(IAtom atom)", "class_method_signature": "DebugAtomContainer.getBondOrderSum(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getMaximumBondOrder", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "Order", "signature": "Order getMaximumBondOrder(IAtom atom)", "full_signature": "@Override public Order getMaximumBondOrder(IAtom atom)", "class_method_signature": "DebugAtomContainer.getMaximumBondOrder(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getMinimumBondOrder", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "Order", "signature": "Order getMinimumBondOrder(IAtom atom)", "full_signature": "@Override public Order getMinimumBondOrder(IAtom atom)", "class_method_signature": "DebugAtomContainer.getMinimumBondOrder(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "void", "signature": "void add(IAtomContainer atomContainer)", "full_signature": "@Override public void add(IAtomContainer atomContainer)", "class_method_signature": "DebugAtomContainer.add(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "addAtom", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void addAtom(IAtom atom)", "full_signature": "@Override public void addAtom(IAtom atom)", "class_method_signature": "DebugAtomContainer.addAtom(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "addBond", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "void", "signature": "void addBond(IBond bond)", "full_signature": "@Override public void addBond(IBond bond)", "class_method_signature": "DebugAtomContainer.addBond(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "addLonePair", "parameters": "(ILonePair ec)", "modifiers": "@Override public", "return": "void", "signature": "void addLonePair(ILonePair ec)", "full_signature": "@Override public void addLonePair(ILonePair ec)", "class_method_signature": "DebugAtomContainer.addLonePair(ILonePair ec)", "testcase": false, "constructor": false}, {"identifier": "addSingleElectron", "parameters": "(ISingleElectron ec)", "modifiers": "@Override public", "return": "void", "signature": "void addSingleElectron(ISingleElectron ec)", "full_signature": "@Override public void addSingleElectron(ISingleElectron ec)", "class_method_signature": "DebugAtomContainer.addSingleElectron(ISingleElectron ec)", "testcase": false, "constructor": false}, {"identifier": "addElectronContainer", "parameters": "(IElectronContainer electronContainer)", "modifiers": "@Override public", "return": "void", "signature": "void addElectronContainer(IElectronContainer electronContainer)", "full_signature": "@Override public void addElectronContainer(IElectronContainer electronContainer)", "class_method_signature": "DebugAtomContainer.addElectronContainer(IElectronContainer electronContainer)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "void", "signature": "void remove(IAtomContainer atomContainer)", "full_signature": "@Override public void remove(IAtomContainer atomContainer)", "class_method_signature": "DebugAtomContainer.remove(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "removeElectronContainer", "parameters": "(int position)", "modifiers": "@Override public", "return": "IElectronContainer", "signature": "IElectronContainer removeElectronContainer(int position)", "full_signature": "@Override public IElectronContainer removeElectronContainer(int position)", "class_method_signature": "DebugAtomContainer.removeElectronContainer(int position)", "testcase": false, "constructor": false}, {"identifier": "removeElectronContainer", "parameters": "(IElectronContainer electronContainer)", "modifiers": "@Override public", "return": "void", "signature": "void removeElectronContainer(IElectronContainer electronContainer)", "full_signature": "@Override public void removeElectronContainer(IElectronContainer electronContainer)", "class_method_signature": "DebugAtomContainer.removeElectronContainer(IElectronContainer electronContainer)", "testcase": false, "constructor": false}, {"identifier": "removeAtomOnly", "parameters": "(int position)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtomOnly(int position)", "full_signature": "@Override public void removeAtomOnly(int position)", "class_method_signature": "DebugAtomContainer.removeAtomOnly(int position)", "testcase": false, "constructor": false}, {"identifier": "removeAtomOnly", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtomOnly(IAtom atom)", "full_signature": "@Override public void removeAtomOnly(IAtom atom)", "class_method_signature": "DebugAtomContainer.removeAtomOnly(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "removeBond", "parameters": "(int pos)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond removeBond(int pos)", "full_signature": "@Override public IBond removeBond(int pos)", "class_method_signature": "DebugAtomContainer.removeBond(int pos)", "testcase": false, "constructor": false}, {"identifier": "removeBond", "parameters": "(IAtom atom1, IAtom atom2)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond removeBond(IAtom atom1, IAtom atom2)", "full_signature": "@Override public IBond removeBond(IAtom atom1, IAtom atom2)", "class_method_signature": "DebugAtomContainer.removeBond(IAtom atom1, IAtom atom2)", "testcase": false, "constructor": false}, {"identifier": "removeBond", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "void", "signature": "void removeBond(IBond bond)", "full_signature": "@Override public void removeBond(IBond bond)", "class_method_signature": "DebugAtomContainer.removeBond(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "removeLonePair", "parameters": "(int pos)", "modifiers": "@Override public", "return": "ILonePair", "signature": "ILonePair removeLonePair(int pos)", "full_signature": "@Override public ILonePair removeLonePair(int pos)", "class_method_signature": "DebugAtomContainer.removeLonePair(int pos)", "testcase": false, "constructor": false}, {"identifier": "removeLonePair", "parameters": "(ILonePair ec)", "modifiers": "@Override public", "return": "void", "signature": "void removeLonePair(ILonePair ec)", "full_signature": "@Override public void removeLonePair(ILonePair ec)", "class_method_signature": "DebugAtomContainer.removeLonePair(ILonePair ec)", "testcase": false, "constructor": false}, {"identifier": "removeSingleElectron", "parameters": "(int pos)", "modifiers": "@Override public", "return": "ISingleElectron", "signature": "ISingleElectron removeSingleElectron(int pos)", "full_signature": "@Override public ISingleElectron removeSingleElectron(int pos)", "class_method_signature": "DebugAtomContainer.removeSingleElectron(int pos)", "testcase": false, "constructor": false}, {"identifier": "removeSingleElectron", "parameters": "(ISingleElectron ec)", "modifiers": "@Override public", "return": "void", "signature": "void removeSingleElectron(ISingleElectron ec)", "full_signature": "@Override public void removeSingleElectron(ISingleElectron ec)", "class_method_signature": "DebugAtomContainer.removeSingleElectron(ISingleElectron ec)", "testcase": false, "constructor": false}, {"identifier": "removeAtom", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtom(IAtom atom)", "full_signature": "@Override public void removeAtom(IAtom atom)", "class_method_signature": "DebugAtomContainer.removeAtom(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "removeAllElements", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllElements()", "full_signature": "@Override public void removeAllElements()", "class_method_signature": "DebugAtomContainer.removeAllElements()", "testcase": false, "constructor": false}, {"identifier": "removeAllElectronContainers", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllElectronContainers()", "full_signature": "@Override public void removeAllElectronContainers()", "class_method_signature": "DebugAtomContainer.removeAllElectronContainers()", "testcase": false, "constructor": false}, {"identifier": "removeAllBonds", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllBonds()", "full_signature": "@Override public void removeAllBonds()", "class_method_signature": "DebugAtomContainer.removeAllBonds()", "testcase": false, "constructor": false}, {"identifier": "addBond", "parameters": "(int atom1, int atom2, IBond.Order order,\n                        IBond.Stereo stereo)", "modifiers": "@Override public", "return": "void", "signature": "void addBond(int atom1, int atom2, IBond.Order order,\n                        IBond.Stereo stereo)", "full_signature": "@Override public void addBond(int atom1, int atom2, IBond.Order order,\n                        IBond.Stereo stereo)", "class_method_signature": "DebugAtomContainer.addBond(int atom1, int atom2, IBond.Order order,\n                        IBond.Stereo stereo)", "testcase": false, "constructor": false}, {"identifier": "addBond", "parameters": "(int atom1, int atom2, IBond.Order order)", "modifiers": "@Override public", "return": "void", "signature": "void addBond(int atom1, int atom2, IBond.Order order)", "full_signature": "@Override public void addBond(int atom1, int atom2, IBond.Order order)", "class_method_signature": "DebugAtomContainer.addBond(int atom1, int atom2, IBond.Order order)", "testcase": false, "constructor": false}, {"identifier": "addLonePair", "parameters": "(int atomID)", "modifiers": "@Override public", "return": "void", "signature": "void addLonePair(int atomID)", "full_signature": "@Override public void addLonePair(int atomID)", "class_method_signature": "DebugAtomContainer.addLonePair(int atomID)", "testcase": false, "constructor": false}, {"identifier": "addSingleElectron", "parameters": "(int atomID)", "modifiers": "@Override public", "return": "void", "signature": "void addSingleElectron(int atomID)", "full_signature": "@Override public void addSingleElectron(int atomID)", "class_method_signature": "DebugAtomContainer.addSingleElectron(int atomID)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IAtom atom)", "full_signature": "@Override public boolean contains(IAtom atom)", "class_method_signature": "DebugAtomContainer.contains(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IBond bond)", "full_signature": "@Override public boolean contains(IBond bond)", "class_method_signature": "DebugAtomContainer.contains(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(ILonePair ec)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(ILonePair ec)", "full_signature": "@Override public boolean contains(ILonePair ec)", "class_method_signature": "DebugAtomContainer.contains(ILonePair ec)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(ISingleElectron ec)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(ISingleElectron ec)", "full_signature": "@Override public boolean contains(ISingleElectron ec)", "class_method_signature": "DebugAtomContainer.contains(ISingleElectron ec)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IElectronContainer electronContainer)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IElectronContainer electronContainer)", "full_signature": "@Override public boolean contains(IElectronContainer electronContainer)", "class_method_signature": "DebugAtomContainer.contains(IElectronContainer electronContainer)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(IChemObjectListener col)", "full_signature": "@Override public void addListener(IChemObjectListener col)", "class_method_signature": "DebugAtomContainer.addListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "getListenerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getListenerCount()", "full_signature": "@Override public int getListenerCount()", "class_method_signature": "DebugAtomContainer.getListenerCount()", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(IChemObjectListener col)", "full_signature": "@Override public void removeListener(IChemObjectListener col)", "class_method_signature": "DebugAtomContainer.removeListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged()", "full_signature": "@Override public void notifyChanged()", "class_method_signature": "DebugAtomContainer.notifyChanged()", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "(IChemObjectChangeEvent evt)", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged(IChemObjectChangeEvent evt)", "full_signature": "@Override public void notifyChanged(IChemObjectChangeEvent evt)", "class_method_signature": "DebugAtomContainer.notifyChanged(IChemObjectChangeEvent evt)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(Object description, Object property)", "modifiers": "@Override public", "return": "void", "signature": "void setProperty(Object description, Object property)", "full_signature": "@Override public void setProperty(Object description, Object property)", "class_method_signature": "DebugAtomContainer.setProperty(Object description, Object property)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "void", "signature": "void removeProperty(Object description)", "full_signature": "@Override public void removeProperty(Object description)", "class_method_signature": "DebugAtomContainer.removeProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description)", "full_signature": "@Override public T getProperty(Object description)", "class_method_signature": "DebugAtomContainer.getProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getProperties()", "full_signature": "@Override public Map<Object, Object> getProperties()", "class_method_signature": "DebugAtomContainer.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "DebugAtomContainer.getID()", "testcase": false, "constructor": false}, {"identifier": "setID", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void setID(String identifier)", "full_signature": "@Override public void setID(String identifier)", "class_method_signature": "DebugAtomContainer.setID(String identifier)", "testcase": false, "constructor": false}, {"identifier": "setFlag", "parameters": "(int flagType, boolean flagValue)", "modifiers": "@Override public", "return": "void", "signature": "void setFlag(int flagType, boolean flagValue)", "full_signature": "@Override public void setFlag(int flagType, boolean flagValue)", "class_method_signature": "DebugAtomContainer.setFlag(int flagType, boolean flagValue)", "testcase": false, "constructor": false}, {"identifier": "getFlag", "parameters": "(int flagType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFlag(int flagType)", "full_signature": "@Override public boolean getFlag(int flagType)", "class_method_signature": "DebugAtomContainer.getFlag(int flagType)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void addProperties(Map<Object, Object> properties)", "full_signature": "@Override public void addProperties(Map<Object, Object> properties)", "class_method_signature": "DebugAtomContainer.addProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "getFlags", "parameters": "()", "modifiers": "@Override public", "return": "boolean[]", "signature": "boolean[] getFlags()", "full_signature": "@Override public boolean[] getFlags()", "class_method_signature": "DebugAtomContainer.getFlags()", "testcase": false, "constructor": false}, {"identifier": "setFlags", "parameters": "(boolean[] flagsNew)", "modifiers": "@Override public", "return": "void", "signature": "void setFlags(boolean[] flagsNew)", "full_signature": "@Override public void setFlags(boolean[] flagsNew)", "class_method_signature": "DebugAtomContainer.setFlags(boolean[] flagsNew)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer clone()", "full_signature": "@Override public IAtomContainer clone()", "class_method_signature": "DebugAtomContainer.clone()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getBuilder()", "full_signature": "@Override public IChemObjectBuilder getBuilder()", "class_method_signature": "DebugAtomContainer.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "DebugAtomContainer.isEmpty()", "testcase": false, "constructor": false}], "file": "base/datadebug/src/main/java/org/openscience/cdk/debug/DebugAtomContainer.java"}, "focal_method": {"identifier": "DebugAtomContainer", "parameters": "()", "modifiers": "public", "return": "", "body": "public DebugAtomContainer() {\n        super();\n    }", "signature": " DebugAtomContainer()", "full_signature": "public  DebugAtomContainer()", "class_method_signature": "DebugAtomContainer.DebugAtomContainer()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}