{"test_class": {"identifier": "BlueTapeDslTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Context context;", "modifier": "@Mock", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n    View view;", "modifier": "@Mock", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    BindingFunction functionA;", "modifier": "@Mock", "type": "BindingFunction", "declarator": "functionA", "var_name": "functionA"}, {"original_string": "@Mock\n    BindingFunction functionB;", "modifier": "@Mock", "type": "BindingFunction", "declarator": "functionB", "var_name": "functionB"}], "file": "library/src/test/java/com/github/bluetape/BlueTapeDslTest.java"}, "test_case": {"identifier": "id", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void id() throws Exception {\n        // Given\n        int subViewId = 123;\n        View subView = mock(View.class);\n\n        //noinspection ResourceType\n        given(view.findViewById(subViewId))\n                .willReturn(subView);\n\n        // When\n        BlueTapeDsl\n                .id(subViewId,\n                        functionA,\n                        functionB\n                )\n                .bind(view);\n\n        // Then\n        InOrder inOrder = inOrder(functionA, functionB);\n\n        inOrder.verify(functionA).bind(subView);\n        inOrder.verify(functionB).bind(subView);\n    }", "signature": "void id()", "full_signature": "@Test public void id()", "class_method_signature": "BlueTapeDslTest.id()", "testcase": true, "constructor": false, "invocations": ["mock", "willReturn", "given", "findViewById", "bind", "id", "inOrder", "bind", "verify", "bind", "verify"]}, "focal_class": {"identifier": "BlueTapeDsl", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "composite", "parameters": "(@NonNull BindingFunction... functions)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction composite(@NonNull BindingFunction... functions)", "full_signature": "public static BindingFunction composite(@NonNull BindingFunction... functions)", "class_method_signature": "BlueTapeDsl.composite(@NonNull BindingFunction... functions)", "testcase": false, "constructor": false}, {"identifier": "id", "parameters": "(int id, @NonNull BindingFunction... functions)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction id(int id, @NonNull BindingFunction... functions)", "full_signature": "public static BindingFunction id(int id, @NonNull BindingFunction... functions)", "class_method_signature": "BlueTapeDsl.id(int id, @NonNull BindingFunction... functions)", "testcase": false, "constructor": false}, {"identifier": "text", "parameters": "(String text)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction text(String text)", "full_signature": "public static BindingFunction text(String text)", "class_method_signature": "BlueTapeDsl.text(String text)", "testcase": false, "constructor": false}, {"identifier": "textResource", "parameters": "(@StringRes int stringId)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction textResource(@StringRes int stringId)", "full_signature": "public static BindingFunction textResource(@StringRes int stringId)", "class_method_signature": "BlueTapeDsl.textResource(@StringRes int stringId)", "testcase": false, "constructor": false}, {"identifier": "textColor", "parameters": "(@ColorInt int color)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction textColor(@ColorInt int color)", "full_signature": "public static BindingFunction textColor(@ColorInt int color)", "class_method_signature": "BlueTapeDsl.textColor(@ColorInt int color)", "testcase": false, "constructor": false}, {"identifier": "visible", "parameters": "(boolean visible)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction visible(boolean visible)", "full_signature": "public static BindingFunction visible(boolean visible)", "class_method_signature": "BlueTapeDsl.visible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "visibility", "parameters": "(@Visibility int visibility)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction visibility(@Visibility int visibility)", "full_signature": "public static BindingFunction visibility(@Visibility int visibility)", "class_method_signature": "BlueTapeDsl.visibility(@Visibility int visibility)", "testcase": false, "constructor": false}, {"identifier": "enabled", "parameters": "(boolean enabled)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction enabled(boolean enabled)", "full_signature": "public static BindingFunction enabled(boolean enabled)", "class_method_signature": "BlueTapeDsl.enabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "checked", "parameters": "(boolean checked)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction checked(boolean checked)", "full_signature": "public static BindingFunction checked(boolean checked)", "class_method_signature": "BlueTapeDsl.checked(boolean checked)", "testcase": false, "constructor": false}, {"identifier": "imageDrawable", "parameters": "(@Nullable Drawable drawable)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction imageDrawable(@Nullable Drawable drawable)", "full_signature": "public static BindingFunction imageDrawable(@Nullable Drawable drawable)", "class_method_signature": "BlueTapeDsl.imageDrawable(@Nullable Drawable drawable)", "testcase": false, "constructor": false}, {"identifier": "imageResource", "parameters": "(@DrawableRes int drawableId)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction imageResource(@DrawableRes int drawableId)", "full_signature": "public static BindingFunction imageResource(@DrawableRes int drawableId)", "class_method_signature": "BlueTapeDsl.imageResource(@DrawableRes int drawableId)", "testcase": false, "constructor": false}, {"identifier": "imageBitmap", "parameters": "(@Nullable Bitmap bitmap)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction imageBitmap(@Nullable Bitmap bitmap)", "full_signature": "public static BindingFunction imageBitmap(@Nullable Bitmap bitmap)", "class_method_signature": "BlueTapeDsl.imageBitmap(@Nullable Bitmap bitmap)", "testcase": false, "constructor": false}, {"identifier": "backgroundDrawable", "parameters": "(@Nullable Drawable drawable)", "modifiers": "@SuppressWarnings(\"deprecation\") public static", "return": "BindingFunction", "signature": "BindingFunction backgroundDrawable(@Nullable Drawable drawable)", "full_signature": "@SuppressWarnings(\"deprecation\") public static BindingFunction backgroundDrawable(@Nullable Drawable drawable)", "class_method_signature": "BlueTapeDsl.backgroundDrawable(@Nullable Drawable drawable)", "testcase": false, "constructor": false}, {"identifier": "backgroundResource", "parameters": "(@DrawableRes int drawableId)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction backgroundResource(@DrawableRes int drawableId)", "full_signature": "public static BindingFunction backgroundResource(@DrawableRes int drawableId)", "class_method_signature": "BlueTapeDsl.backgroundResource(@DrawableRes int drawableId)", "testcase": false, "constructor": false}, {"identifier": "onClick", "parameters": "(@Nullable View.OnClickListener listener)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction onClick(@Nullable View.OnClickListener listener)", "full_signature": "public static BindingFunction onClick(@Nullable View.OnClickListener listener)", "class_method_signature": "BlueTapeDsl.onClick(@Nullable View.OnClickListener listener)", "testcase": false, "constructor": false}, {"identifier": "onClick", "parameters": "(@Nullable ShortenedOnClickListener listener)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction onClick(@Nullable ShortenedOnClickListener listener)", "full_signature": "public static BindingFunction onClick(@Nullable ShortenedOnClickListener listener)", "class_method_signature": "BlueTapeDsl.onClick(@Nullable ShortenedOnClickListener listener)", "testcase": false, "constructor": false}, {"identifier": "onLongClick", "parameters": "(@Nullable View.OnLongClickListener listener)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction onLongClick(@Nullable View.OnLongClickListener listener)", "full_signature": "public static BindingFunction onLongClick(@Nullable View.OnLongClickListener listener)", "class_method_signature": "BlueTapeDsl.onLongClick(@Nullable View.OnLongClickListener listener)", "testcase": false, "constructor": false}, {"identifier": "onTouch", "parameters": "(@Nullable View.OnTouchListener listener)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction onTouch(@Nullable View.OnTouchListener listener)", "full_signature": "public static BindingFunction onTouch(@Nullable View.OnTouchListener listener)", "class_method_signature": "BlueTapeDsl.onTouch(@Nullable View.OnTouchListener listener)", "testcase": false, "constructor": false}, {"identifier": "onToggle", "parameters": "(@Nullable CompoundButton.OnCheckedChangeListener listener)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction onToggle(@Nullable CompoundButton.OnCheckedChangeListener listener)", "full_signature": "public static BindingFunction onToggle(@Nullable CompoundButton.OnCheckedChangeListener listener)", "class_method_signature": "BlueTapeDsl.onToggle(@Nullable CompoundButton.OnCheckedChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "onTextChanged", "parameters": "(@Nullable OnTextChangedListener listener)", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction onTextChanged(@Nullable OnTextChangedListener listener)", "full_signature": "public static BindingFunction onTextChanged(@Nullable OnTextChangedListener listener)", "class_method_signature": "BlueTapeDsl.onTextChanged(@Nullable OnTextChangedListener listener)", "testcase": false, "constructor": false}, {"identifier": "pass", "parameters": "()", "modifiers": "public static", "return": "BindingFunction", "signature": "BindingFunction pass()", "full_signature": "public static BindingFunction pass()", "class_method_signature": "BlueTapeDsl.pass()", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/github/bluetape/BlueTapeDsl.java"}, "focal_method": {"identifier": "id", "parameters": "(int id, @NonNull BindingFunction... functions)", "modifiers": "public static", "return": "BindingFunction", "body": "public static BindingFunction id(int id, @NonNull BindingFunction... functions) {\n        return view -> {\n            View subView = view.findViewById(id);\n            if (subView == null) {\n                throw new ViewNotFoundException(\"View with id \" + id + \" cannot be found\");\n            }\n\n            composite(functions).bind(subView);\n        };\n    }", "signature": "BindingFunction id(int id, @NonNull BindingFunction... functions)", "full_signature": "public static BindingFunction id(int id, @NonNull BindingFunction... functions)", "class_method_signature": "BlueTapeDsl.id(int id, @NonNull BindingFunction... functions)", "testcase": false, "constructor": false, "invocations": ["findViewById", "bind", "composite"]}, "repository": {"repo_id": 83193705, "url": "https://github.com/dmitry-zaitsev/BlueTape", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 170, "license": "licensed"}}