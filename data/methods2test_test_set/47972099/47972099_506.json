{"test_class": {"identifier": "SetupOutputFieldsDeclarerTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/wrappers/SetupOutputFieldsDeclarerTest.java"}, "test_case": {"identifier": "testDeclare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDeclare() {\n\t\tfinal SetupOutputFieldsDeclarer declarer = new SetupOutputFieldsDeclarer();\n\n\t\tint numberOfAttributes = this.r.nextInt(26);\n\t\tdeclarer.declare(createSchema(numberOfAttributes));\n\t\tAssert.assertEquals(1, declarer.outputSchemas.size());\n\t\tAssert.assertEquals(numberOfAttributes, declarer.outputSchemas.get(Utils.DEFAULT_STREAM_ID)\n\t\t\t\t.intValue());\n\n\t\tfinal String sid = \"streamId\";\n\t\tnumberOfAttributes = this.r.nextInt(26);\n\t\tdeclarer.declareStream(sid, createSchema(numberOfAttributes));\n\t\tAssert.assertEquals(2, declarer.outputSchemas.size());\n\t\tAssert.assertEquals(numberOfAttributes, declarer.outputSchemas.get(sid).intValue());\n\t}", "signature": "void testDeclare()", "full_signature": "@Test public void testDeclare()", "class_method_signature": "SetupOutputFieldsDeclarerTest.testDeclare()", "testcase": true, "constructor": false, "invocations": ["nextInt", "declare", "createSchema", "assertEquals", "size", "assertEquals", "intValue", "get", "nextInt", "declareStream", "createSchema", "assertEquals", "size", "assertEquals", "intValue", "get"]}, "focal_class": {"identifier": "SetupOutputFieldsDeclarer", "superclass": "", "interfaces": "implements OutputFieldsDeclarer", "fields": [{"original_string": "HashMap<String, Fields> outputStreams = new HashMap<String, Fields>();", "modifier": "", "type": "HashMap<String, Fields>", "declarator": "outputStreams = new HashMap<String, Fields>()", "var_name": "outputStreams"}, {"original_string": "HashMap<String, Integer> outputSchemas = new HashMap<String, Integer>();", "modifier": "", "type": "HashMap<String, Integer>", "declarator": "outputSchemas = new HashMap<String, Integer>()", "var_name": "outputSchemas"}], "methods": [{"identifier": "declare", "parameters": "(final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declare(final Fields fields)", "full_signature": "@Override public void declare(final Fields fields)", "class_method_signature": "SetupOutputFieldsDeclarer.declare(final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declare", "parameters": "(final boolean direct, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declare(final boolean direct, final Fields fields)", "full_signature": "@Override public void declare(final boolean direct, final Fields fields)", "class_method_signature": "SetupOutputFieldsDeclarer.declare(final boolean direct, final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declareStream", "parameters": "(final String streamId, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declareStream(final String streamId, final Fields fields)", "full_signature": "@Override public void declareStream(final String streamId, final Fields fields)", "class_method_signature": "SetupOutputFieldsDeclarer.declareStream(final String streamId, final Fields fields)", "testcase": false, "constructor": false}, {"identifier": "declareStream", "parameters": "(final String streamId, final boolean direct, final Fields fields)", "modifiers": "@Override public", "return": "void", "signature": "void declareStream(final String streamId, final boolean direct, final Fields fields)", "full_signature": "@Override public void declareStream(final String streamId, final boolean direct, final Fields fields)", "class_method_signature": "SetupOutputFieldsDeclarer.declareStream(final String streamId, final boolean direct, final Fields fields)", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/wrappers/SetupOutputFieldsDeclarer.java"}, "focal_method": {"identifier": "declare", "parameters": "(final Fields fields)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void declare(final Fields fields) {\n\t\tthis.declareStream(Utils.DEFAULT_STREAM_ID, false, fields);\n\t}", "signature": "void declare(final Fields fields)", "full_signature": "@Override public void declare(final Fields fields)", "class_method_signature": "SetupOutputFieldsDeclarer.declare(final Fields fields)", "testcase": false, "constructor": false, "invocations": ["declareStream"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}