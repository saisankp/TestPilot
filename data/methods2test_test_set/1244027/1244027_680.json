{"test_class": {"identifier": "PathValueFactoryTest", "superclass": "extends BaseValueFactoryTest", "interfaces": "", "fields": [{"original_string": "public static final TextEncoder NO_OP_ENCODER = Path.NO_OP_ENCODER;", "modifier": "public static final", "type": "TextEncoder", "declarator": "NO_OP_ENCODER = Path.NO_OP_ENCODER", "var_name": "NO_OP_ENCODER"}, {"original_string": "private PathValueFactory factory;", "modifier": "private", "type": "PathValueFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private Path path;", "modifier": "private", "type": "Path", "declarator": "path", "var_name": "path"}, {"original_string": "private Path path2;", "modifier": "private", "type": "Path", "declarator": "path2", "var_name": "path2"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/value/basic/PathValueFactoryTest.java"}, "test_case": {"identifier": "shouldCreateFromStringWithRelativePathAndNoParentOrSelfReferences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCreateFromStringWithRelativePathAndNoParentOrSelfReferences() {\n        path = factory.create(\"a/b/c/d/dna:e/dna:f\");\n        assertThat(path, hasSegments(factory, \"a\", \"b\", \"c\", \"d\", \"dna:e\", \"dna:f\"));\n    }", "signature": "void shouldCreateFromStringWithRelativePathAndNoParentOrSelfReferences()", "full_signature": "@Test public void shouldCreateFromStringWithRelativePathAndNoParentOrSelfReferences()", "class_method_signature": "PathValueFactoryTest.shouldCreateFromStringWithRelativePathAndNoParentOrSelfReferences()", "testcase": true, "constructor": false, "invocations": ["create", "assertThat", "hasSegments"]}, "focal_class": {"identifier": "PathValueFactory", "superclass": "extends AbstractValueFactory<Path>", "interfaces": "implements PathFactory", "fields": [{"original_string": "protected static final Pattern DELIMITER_PATTERN = Pattern.compile(\"/\");", "modifier": "protected static final", "type": "Pattern", "declarator": "DELIMITER_PATTERN = Pattern.compile(\"/\")", "var_name": "DELIMITER_PATTERN"}, {"original_string": "protected static final Pattern SEGMENT_PATTERN = Pattern.compile(\"([^:/]+)(:([^/\\\\[\\\\]]+))?(\\\\[(\\\\d+)])?\");", "modifier": "protected static final", "type": "Pattern", "declarator": "SEGMENT_PATTERN = Pattern.compile(\"([^:/]+)(:([^/\\\\[\\\\]]+))?(\\\\[(\\\\d+)])?\")", "var_name": "SEGMENT_PATTERN"}], "methods": [{"identifier": "PathValueFactory", "parameters": "( TextDecoder decoder,\n                             ValueFactories factories )", "modifiers": "public", "return": "", "signature": " PathValueFactory( TextDecoder decoder,\n                             ValueFactories factories )", "full_signature": "public  PathValueFactory( TextDecoder decoder,\n                             ValueFactories factories )", "class_method_signature": "PathValueFactory.PathValueFactory( TextDecoder decoder,\n                             ValueFactories factories )", "testcase": false, "constructor": true}, {"identifier": "with", "parameters": "( ValueFactories valueFactories )", "modifiers": "@Override public", "return": "PathFactory", "signature": "PathFactory with( ValueFactories valueFactories )", "full_signature": "@Override public PathFactory with( ValueFactories valueFactories )", "class_method_signature": "PathValueFactory.with( ValueFactories valueFactories )", "testcase": false, "constructor": false}, {"identifier": "getNameValueFactory", "parameters": "()", "modifiers": "protected final", "return": "ValueFactory<Name>", "signature": "ValueFactory<Name> getNameValueFactory()", "full_signature": "protected final ValueFactory<Name> getNameValueFactory()", "class_method_signature": "PathValueFactory.getNameValueFactory()", "testcase": false, "constructor": false}, {"identifier": "createRootPath", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path createRootPath()", "full_signature": "@Override public Path createRootPath()", "class_method_signature": "PathValueFactory.createRootPath()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( String value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( String value )", "full_signature": "@Override public Path create( String value )", "class_method_signature": "PathValueFactory.create( String value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( final String value,\n                        TextDecoder decoder )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( final String value,\n                        TextDecoder decoder )", "full_signature": "@Override public Path create( final String value,\n                        TextDecoder decoder )", "class_method_signature": "PathValueFactory.create( final String value,\n                        TextDecoder decoder )", "testcase": false, "constructor": false}, {"identifier": "splitPath", "parameters": "( String rawPath )", "modifiers": "", "return": "String[]", "signature": "String[] splitPath( String rawPath )", "full_signature": " String[] splitPath( String rawPath )", "class_method_signature": "PathValueFactory.splitPath( String rawPath )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( int value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( int value )", "full_signature": "@Override public Path create( int value )", "class_method_signature": "PathValueFactory.create( int value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( long value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( long value )", "full_signature": "@Override public Path create( long value )", "class_method_signature": "PathValueFactory.create( long value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( boolean value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( boolean value )", "full_signature": "@Override public Path create( boolean value )", "class_method_signature": "PathValueFactory.create( boolean value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( float value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( float value )", "full_signature": "@Override public Path create( float value )", "class_method_signature": "PathValueFactory.create( float value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( double value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( double value )", "full_signature": "@Override public Path create( double value )", "class_method_signature": "PathValueFactory.create( double value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( BigDecimal value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( BigDecimal value )", "full_signature": "@Override public Path create( BigDecimal value )", "class_method_signature": "PathValueFactory.create( BigDecimal value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Calendar value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Calendar value )", "full_signature": "@Override public Path create( Calendar value )", "class_method_signature": "PathValueFactory.create( Calendar value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Date value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Date value )", "full_signature": "@Override public Path create( Date value )", "class_method_signature": "PathValueFactory.create( Date value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( DateTime value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( DateTime value )", "full_signature": "@Override public Path create( DateTime value )", "class_method_signature": "PathValueFactory.create( DateTime value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Name value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Name value )", "full_signature": "@Override public Path create( Name value )", "class_method_signature": "PathValueFactory.create( Name value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path value )", "full_signature": "@Override public Path create( Path value )", "class_method_signature": "PathValueFactory.create( Path value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path.Segment value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path.Segment value )", "full_signature": "@Override public Path create( Path.Segment value )", "class_method_signature": "PathValueFactory.create( Path.Segment value )", "testcase": false, "constructor": false}, {"identifier": "createAbsolutePath", "parameters": "( Name... segmentNames )", "modifiers": "@Override public", "return": "Path", "signature": "Path createAbsolutePath( Name... segmentNames )", "full_signature": "@Override public Path createAbsolutePath( Name... segmentNames )", "class_method_signature": "PathValueFactory.createAbsolutePath( Name... segmentNames )", "testcase": false, "constructor": false}, {"identifier": "createAbsolutePath", "parameters": "( Segment... segments )", "modifiers": "@Override public", "return": "Path", "signature": "Path createAbsolutePath( Segment... segments )", "full_signature": "@Override public Path createAbsolutePath( Segment... segments )", "class_method_signature": "PathValueFactory.createAbsolutePath( Segment... segments )", "testcase": false, "constructor": false}, {"identifier": "createAbsolutePath", "parameters": "( Iterable<Segment> segments )", "modifiers": "@Override public", "return": "Path", "signature": "Path createAbsolutePath( Iterable<Segment> segments )", "full_signature": "@Override public Path createAbsolutePath( Iterable<Segment> segments )", "class_method_signature": "PathValueFactory.createAbsolutePath( Iterable<Segment> segments )", "testcase": false, "constructor": false}, {"identifier": "createRelativePath", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path createRelativePath()", "full_signature": "@Override public Path createRelativePath()", "class_method_signature": "PathValueFactory.createRelativePath()", "testcase": false, "constructor": false}, {"identifier": "createRelativePath", "parameters": "( Name... segmentNames )", "modifiers": "@Override public", "return": "Path", "signature": "Path createRelativePath( Name... segmentNames )", "full_signature": "@Override public Path createRelativePath( Name... segmentNames )", "class_method_signature": "PathValueFactory.createRelativePath( Name... segmentNames )", "testcase": false, "constructor": false}, {"identifier": "createRelativePath", "parameters": "( Segment... segments )", "modifiers": "@Override public", "return": "Path", "signature": "Path createRelativePath( Segment... segments )", "full_signature": "@Override public Path createRelativePath( Segment... segments )", "class_method_signature": "PathValueFactory.createRelativePath( Segment... segments )", "testcase": false, "constructor": false}, {"identifier": "createRelativePath", "parameters": "( Iterable<Segment> segments )", "modifiers": "@Override public", "return": "Path", "signature": "Path createRelativePath( Iterable<Segment> segments )", "full_signature": "@Override public Path createRelativePath( Iterable<Segment> segments )", "class_method_signature": "PathValueFactory.createRelativePath( Iterable<Segment> segments )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path parentPath,\n                        Path childPath )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path parentPath,\n                        Path childPath )", "full_signature": "@Override public Path create( Path parentPath,\n                        Path childPath )", "class_method_signature": "PathValueFactory.create( Path parentPath,\n                        Path childPath )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path parentPath,\n                        Name segmentName,\n                        int index )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path parentPath,\n                        Name segmentName,\n                        int index )", "full_signature": "@Override public Path create( Path parentPath,\n                        Name segmentName,\n                        int index )", "class_method_signature": "PathValueFactory.create( Path parentPath,\n                        Name segmentName,\n                        int index )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path parentPath,\n                        String segmentName,\n                        int index )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path parentPath,\n                        String segmentName,\n                        int index )", "full_signature": "@Override public Path create( Path parentPath,\n                        String segmentName,\n                        int index )", "class_method_signature": "PathValueFactory.create( Path parentPath,\n                        String segmentName,\n                        int index )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path parentPath,\n                        Name... segmentNames )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path parentPath,\n                        Name... segmentNames )", "full_signature": "@Override public Path create( Path parentPath,\n                        Name... segmentNames )", "class_method_signature": "PathValueFactory.create( Path parentPath,\n                        Name... segmentNames )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path parentPath,\n                        Segment... segments )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path parentPath,\n                        Segment... segments )", "full_signature": "@Override public Path create( Path parentPath,\n                        Segment... segments )", "class_method_signature": "PathValueFactory.create( Path parentPath,\n                        Segment... segments )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path parentPath,\n                        Iterable<Segment> segments )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path parentPath,\n                        Iterable<Segment> segments )", "full_signature": "@Override public Path create( Path parentPath,\n                        Iterable<Segment> segments )", "class_method_signature": "PathValueFactory.create( Path parentPath,\n                        Iterable<Segment> segments )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path parentPath,\n                        String subpath )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Path parentPath,\n                        String subpath )", "full_signature": "@Override public Path create( Path parentPath,\n                        String subpath )", "class_method_signature": "PathValueFactory.create( Path parentPath,\n                        String subpath )", "testcase": false, "constructor": false}, {"identifier": "createSegment", "parameters": "( Name segmentName )", "modifiers": "@Override public", "return": "Segment", "signature": "Segment createSegment( Name segmentName )", "full_signature": "@Override public Segment createSegment( Name segmentName )", "class_method_signature": "PathValueFactory.createSegment( Name segmentName )", "testcase": false, "constructor": false}, {"identifier": "createSegment", "parameters": "( Name segmentName,\n                                  int index )", "modifiers": "@Override public", "return": "Segment", "signature": "Segment createSegment( Name segmentName,\n                                  int index )", "full_signature": "@Override public Segment createSegment( Name segmentName,\n                                  int index )", "class_method_signature": "PathValueFactory.createSegment( Name segmentName,\n                                  int index )", "testcase": false, "constructor": false}, {"identifier": "createSegment", "parameters": "( String segmentName )", "modifiers": "@Override public", "return": "Segment", "signature": "Segment createSegment( String segmentName )", "full_signature": "@Override public Segment createSegment( String segmentName )", "class_method_signature": "PathValueFactory.createSegment( String segmentName )", "testcase": false, "constructor": false}, {"identifier": "createSegment", "parameters": "( String segmentName,\n                                  TextDecoder decoder )", "modifiers": "@Override public", "return": "Segment", "signature": "Segment createSegment( String segmentName,\n                                  TextDecoder decoder )", "full_signature": "@Override public Segment createSegment( String segmentName,\n                                  TextDecoder decoder )", "class_method_signature": "PathValueFactory.createSegment( String segmentName,\n                                  TextDecoder decoder )", "testcase": false, "constructor": false}, {"identifier": "createSegment", "parameters": "( String segmentName,\n                                  int index )", "modifiers": "@Override public", "return": "Segment", "signature": "Segment createSegment( String segmentName,\n                                  int index )", "full_signature": "@Override public Segment createSegment( String segmentName,\n                                  int index )", "class_method_signature": "PathValueFactory.createSegment( String segmentName,\n                                  int index )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Reference value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( Reference value )", "full_signature": "@Override public Path create( Reference value )", "class_method_signature": "PathValueFactory.create( Reference value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( URI value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( URI value )", "full_signature": "@Override public Path create( URI value )", "class_method_signature": "PathValueFactory.create( URI value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( UUID value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( UUID value )", "full_signature": "@Override public Path create( UUID value )", "class_method_signature": "PathValueFactory.create( UUID value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( NodeKey value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( NodeKey value )", "full_signature": "@Override public Path create( NodeKey value )", "class_method_signature": "PathValueFactory.create( NodeKey value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( byte[] value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( byte[] value )", "full_signature": "@Override public Path create( byte[] value )", "class_method_signature": "PathValueFactory.create( byte[] value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( BinaryValue value )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( BinaryValue value )", "full_signature": "@Override public Path create( BinaryValue value )", "class_method_signature": "PathValueFactory.create( BinaryValue value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( InputStream stream )", "modifiers": "@Override public", "return": "Path", "signature": "Path create( InputStream stream )", "full_signature": "@Override public Path create( InputStream stream )", "class_method_signature": "PathValueFactory.create( InputStream stream )", "testcase": false, "constructor": false}, {"identifier": "createEmptyArray", "parameters": "( int length )", "modifiers": "@Override public", "return": "Path[]", "signature": "Path[] createEmptyArray( int length )", "full_signature": "@Override public Path[] createEmptyArray( int length )", "class_method_signature": "PathValueFactory.createEmptyArray( int length )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/value/basic/PathValueFactory.java"}, "focal_method": {"identifier": "create", "parameters": "( String value )", "modifiers": "@Override public", "return": "Path", "body": "@Override\n    public Path create( String value ) {\n        return create(value, getDecoder());\n    }", "signature": "Path create( String value )", "full_signature": "@Override public Path create( String value )", "class_method_signature": "PathValueFactory.create( String value )", "testcase": false, "constructor": false, "invocations": ["create", "getDecoder"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}