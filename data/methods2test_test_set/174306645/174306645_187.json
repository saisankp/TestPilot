{"test_class": {"identifier": "ApplicationGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PACKAGE_NAME = \"org.drools.test\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE_NAME = \"org.drools.test\"", "var_name": "PACKAGE_NAME"}, {"original_string": "private static final String EXPECTED_APPLICATION_NAME = PACKAGE_NAME + \".Application\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_APPLICATION_NAME = PACKAGE_NAME + \".Application\"", "var_name": "EXPECTED_APPLICATION_NAME"}], "file": "kogito-codegen/src/test/java/org/kie/kogito/codegen/ApplicationGeneratorTest.java"}, "test_case": {"identifier": "targetCanonicalName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void targetCanonicalName() {\n        final ApplicationGenerator appGenerator = new ApplicationGenerator(PACKAGE_NAME, new File(\"\"));\n        assertThat(appGenerator.targetCanonicalName()).isNotNull();\n        assertThat(appGenerator.targetCanonicalName()).isEqualTo(EXPECTED_APPLICATION_NAME);\n    }", "signature": "void targetCanonicalName()", "full_signature": "@Test public void targetCanonicalName()", "class_method_signature": "ApplicationGeneratorTest.targetCanonicalName()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "targetCanonicalName", "isEqualTo", "assertThat", "targetCanonicalName"]}, "focal_class": {"identifier": "ApplicationGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Logger logger = LoggerFactory.getLogger(ApplicationGenerator.class);", "modifier": "public static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ApplicationGenerator.class)", "var_name": "logger"}, {"original_string": "public static final String DEFAULT_GROUP_ID = \"org.kie.kogito\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_GROUP_ID = \"org.kie.kogito\"", "var_name": "DEFAULT_GROUP_ID"}, {"original_string": "public static final String DEFAULT_PACKAGE_NAME = \"org.kie.kogito.app\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_PACKAGE_NAME = \"org.kie.kogito.app\"", "var_name": "DEFAULT_PACKAGE_NAME"}, {"original_string": "public static final String APPLICATION_CLASS_NAME = \"Application\";", "modifier": "public static final", "type": "String", "declarator": "APPLICATION_CLASS_NAME = \"Application\"", "var_name": "APPLICATION_CLASS_NAME"}, {"original_string": "private final String packageName;", "modifier": "private final", "type": "String", "declarator": "packageName", "var_name": "packageName"}, {"original_string": "private final File targetDirectory;", "modifier": "private final", "type": "File", "declarator": "targetDirectory", "var_name": "targetDirectory"}, {"original_string": "private DependencyInjectionAnnotator annotator;", "modifier": "private", "type": "DependencyInjectionAnnotator", "declarator": "annotator", "var_name": "annotator"}, {"original_string": "private boolean hasRuleUnits;", "modifier": "private", "type": "boolean", "declarator": "hasRuleUnits", "var_name": "hasRuleUnits"}, {"original_string": "private final ApplicationContainerGenerator applicationMainGenerator;", "modifier": "private final", "type": "ApplicationContainerGenerator", "declarator": "applicationMainGenerator", "var_name": "applicationMainGenerator"}, {"original_string": "private ConfigGenerator configGenerator;", "modifier": "private", "type": "ConfigGenerator", "declarator": "configGenerator", "var_name": "configGenerator"}, {"original_string": "private List<Generator> generators = new ArrayList<>();", "modifier": "private", "type": "List<Generator>", "declarator": "generators = new ArrayList<>()", "var_name": "generators"}, {"original_string": "private Map<Class, Labeler> labelers = new HashMap<>();", "modifier": "private", "type": "Map<Class, Labeler>", "declarator": "labelers = new HashMap<>()", "var_name": "labelers"}, {"original_string": "private GeneratorContext context;", "modifier": "private", "type": "GeneratorContext", "declarator": "context", "var_name": "context"}, {"original_string": "private ClassLoader classLoader;", "modifier": "private", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}], "methods": [{"identifier": "ApplicationGenerator", "parameters": "(String packageName, File targetDirectory)", "modifiers": "public", "return": "", "signature": " ApplicationGenerator(String packageName, File targetDirectory)", "full_signature": "public  ApplicationGenerator(String packageName, File targetDirectory)", "class_method_signature": "ApplicationGenerator.ApplicationGenerator(String packageName, File targetDirectory)", "testcase": false, "constructor": true}, {"identifier": "targetCanonicalName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String targetCanonicalName()", "full_signature": "public String targetCanonicalName()", "class_method_signature": "ApplicationGenerator.targetCanonicalName()", "testcase": false, "constructor": false}, {"identifier": "getFilePath", "parameters": "(String className)", "modifiers": "private", "return": "String", "signature": "String getFilePath(String className)", "full_signature": "private String getFilePath(String className)", "class_method_signature": "ApplicationGenerator.getFilePath(String className)", "testcase": false, "constructor": false}, {"identifier": "withDependencyInjection", "parameters": "(DependencyInjectionAnnotator annotator)", "modifiers": "public", "return": "ApplicationGenerator", "signature": "ApplicationGenerator withDependencyInjection(DependencyInjectionAnnotator annotator)", "full_signature": "public ApplicationGenerator withDependencyInjection(DependencyInjectionAnnotator annotator)", "class_method_signature": "ApplicationGenerator.withDependencyInjection(DependencyInjectionAnnotator annotator)", "testcase": false, "constructor": false}, {"identifier": "withGeneratorContext", "parameters": "(GeneratorContext context)", "modifiers": "public", "return": "ApplicationGenerator", "signature": "ApplicationGenerator withGeneratorContext(GeneratorContext context)", "full_signature": "public ApplicationGenerator withGeneratorContext(GeneratorContext context)", "class_method_signature": "ApplicationGenerator.withGeneratorContext(GeneratorContext context)", "testcase": false, "constructor": false}, {"identifier": "withRuleUnits", "parameters": "(boolean hasRuleUnits)", "modifiers": "public", "return": "ApplicationGenerator", "signature": "ApplicationGenerator withRuleUnits(boolean hasRuleUnits)", "full_signature": "public ApplicationGenerator withRuleUnits(boolean hasRuleUnits)", "class_method_signature": "ApplicationGenerator.withRuleUnits(boolean hasRuleUnits)", "testcase": false, "constructor": false}, {"identifier": "withAddons", "parameters": "(AddonsConfig addonsConfig)", "modifiers": "public", "return": "ApplicationGenerator", "signature": "ApplicationGenerator withAddons(AddonsConfig addonsConfig)", "full_signature": "public ApplicationGenerator withAddons(AddonsConfig addonsConfig)", "class_method_signature": "ApplicationGenerator.withAddons(AddonsConfig addonsConfig)", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "Collection<GeneratedFile>", "signature": "Collection<GeneratedFile> generate()", "full_signature": "public Collection<GeneratedFile> generate()", "class_method_signature": "ApplicationGenerator.generate()", "testcase": false, "constructor": false}, {"identifier": "generateComponents", "parameters": "()", "modifiers": "public", "return": "List<GeneratedFile>", "signature": "List<GeneratedFile> generateComponents()", "full_signature": "public List<GeneratedFile> generateComponents()", "class_method_signature": "ApplicationGenerator.generateComponents()", "testcase": false, "constructor": false}, {"identifier": "generateApplicationDescriptor", "parameters": "()", "modifiers": "public", "return": "GeneratedFile", "signature": "GeneratedFile generateApplicationDescriptor()", "full_signature": "public GeneratedFile generateApplicationDescriptor()", "class_method_signature": "ApplicationGenerator.generateApplicationDescriptor()", "testcase": false, "constructor": false}, {"identifier": "generateApplicationSections", "parameters": "()", "modifiers": "private", "return": "List<GeneratedFile>", "signature": "List<GeneratedFile> generateApplicationSections()", "full_signature": "private List<GeneratedFile> generateApplicationSections()", "class_method_signature": "ApplicationGenerator.generateApplicationSections()", "testcase": false, "constructor": false}, {"identifier": "withGenerator", "parameters": "(G generator)", "modifiers": "public", "return": "G", "signature": "G withGenerator(G generator)", "full_signature": "public G withGenerator(G generator)", "class_method_signature": "ApplicationGenerator.withGenerator(G generator)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(String source)", "modifiers": "public static", "return": "String", "signature": "String log(String source)", "full_signature": "public static String log(String source)", "class_method_signature": "ApplicationGenerator.log(String source)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(byte[] source)", "modifiers": "public static", "return": "void", "signature": "void log(byte[] source)", "full_signature": "public static void log(byte[] source)", "class_method_signature": "ApplicationGenerator.log(byte[] source)", "testcase": false, "constructor": false}, {"identifier": "withClassLoader", "parameters": "(ClassLoader classLoader)", "modifiers": "public", "return": "ApplicationGenerator", "signature": "ApplicationGenerator withClassLoader(ClassLoader classLoader)", "full_signature": "public ApplicationGenerator withClassLoader(ClassLoader classLoader)", "class_method_signature": "ApplicationGenerator.withClassLoader(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "loadAddonList", "parameters": "()", "modifiers": "private", "return": "Collection<String>", "signature": "Collection<String> loadAddonList()", "full_signature": "private Collection<String> loadAddonList()", "class_method_signature": "ApplicationGenerator.loadAddonList()", "testcase": false, "constructor": false}], "file": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationGenerator.java"}, "focal_method": {"identifier": "targetCanonicalName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String targetCanonicalName() {\n        return this.packageName + \".\" + APPLICATION_CLASS_NAME;\n    }", "signature": "String targetCanonicalName()", "full_signature": "public String targetCanonicalName()", "class_method_signature": "ApplicationGenerator.targetCanonicalName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}