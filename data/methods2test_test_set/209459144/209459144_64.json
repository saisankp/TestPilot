{"test_class": {"identifier": "TensorFlowConfigEnvGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "submarine-server/server-submitter/submitter-yarnservice/src/test/java/org/apache/submarine/server/submitter/yarnservice/tensorflow/TensorFlowConfigEnvGeneratorTest.java"}, "test_case": {"identifier": "testSimpleDistributedTFConfigGeneratorWorker", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSimpleDistributedTFConfigGeneratorWorker() {\n    String json = TensorFlowConfigEnvGenerator.getTFConfigEnv(\"worker\", 5, 3,\n            \"wtan\", \"tf-job-001\", \"example.com\");\n    assertEquals(json, \"{\\\\\\\"cluster\\\\\\\":{\\\\\\\"master\\\\\\\":[\\\\\\\"master-0.wtan\" +\n        \".tf-job-001.example.com:8000\\\\\\\"],\\\\\\\"worker\\\\\\\":[\\\\\\\"worker-0.wtan\" +\n        \".tf-job-001.example.com:8000\\\\\\\",\\\\\\\"worker-1.wtan.tf-job-001\" +\n        \".example.com:8000\\\\\\\",\\\\\\\"worker-2.wtan.tf-job-001.example\" +\n        \".com:8000\\\\\\\",\\\\\\\"worker-3.wtan.tf-job-001.example.com:8000\\\\\\\"],\" +\n        \"\\\\\\\"ps\\\\\\\":[\\\\\\\"ps-0.wtan.tf-job-001.example.com:8000\\\\\\\",\\\\\\\"ps-1\" +\n        \".wtan.tf-job-001.example.com:8000\\\\\\\",\\\\\\\"ps-2.wtan.tf-job-001\" +\n        \".example.com:8000\\\\\\\"]},\\\\\\\"task\\\\\\\":{ \\\\\\\"type\\\\\\\":\\\\\\\"worker\\\\\\\", \" +\n        \"\\\\\\\"index\\\\\\\":$_TASK_INDEX},\\\\\\\"environment\\\\\\\":\\\\\\\"cloud\\\\\\\"}\");\n  }", "signature": "void testSimpleDistributedTFConfigGeneratorWorker()", "full_signature": "@Test public void testSimpleDistributedTFConfigGeneratorWorker()", "class_method_signature": "TensorFlowConfigEnvGeneratorTest.testSimpleDistributedTFConfigGeneratorWorker()", "testcase": true, "constructor": false, "invocations": ["getTFConfigEnv", "assertEquals"]}, "focal_class": {"identifier": "TensorFlowConfigEnvGenerator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getTFConfigEnv", "parameters": "(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain)", "modifiers": "public static", "return": "String", "signature": "String getTFConfigEnv(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain)", "full_signature": "public static String getTFConfigEnv(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain)", "class_method_signature": "TensorFlowConfigEnvGenerator.getTFConfigEnv(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain)", "testcase": false, "constructor": false}], "file": "submarine-server/server-submitter/submitter-yarnservice/src/main/java/org/apache/submarine/server/submitter/yarnservice/tensorflow/TensorFlowConfigEnvGenerator.java"}, "focal_method": {"identifier": "getTFConfigEnv", "parameters": "(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain)", "modifiers": "public static", "return": "String", "body": "public static String getTFConfigEnv(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain) {\n    String commonEndpointSuffix = YarnServiceUtils\n        .getDNSNameCommonSuffix(serviceName, userName, domain, 8000);\n\n    TFConfigEnv tfConfigEnv =\n        new TFConfigEnv(nWorkers, nPs, componentName, commonEndpointSuffix);\n    return tfConfigEnv.toJson();\n  }", "signature": "String getTFConfigEnv(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain)", "full_signature": "public static String getTFConfigEnv(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain)", "class_method_signature": "TensorFlowConfigEnvGenerator.getTFConfigEnv(String componentName, int nWorkers,\n      int nPs, String serviceName, String userName, String domain)", "testcase": false, "constructor": false, "invocations": ["getDNSNameCommonSuffix", "toJson"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}