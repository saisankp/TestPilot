{"test_class": {"identifier": "ThingAcknowledgementsFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private DittoHeaders dittoHeaders;", "modifier": "private", "type": "DittoHeaders", "declarator": "dittoHeaders", "var_name": "dittoHeaders"}, {"original_string": "private Acknowledgement knownAcknowledgement;", "modifier": "private", "type": "Acknowledgement", "declarator": "knownAcknowledgement", "var_name": "knownAcknowledgement"}, {"original_string": "private List<Acknowledgement> acknowledgementList;", "modifier": "private", "type": "List<Acknowledgement>", "declarator": "acknowledgementList", "var_name": "acknowledgementList"}], "file": "signals/acks/things/src/test/java/org/eclipse/ditto/signals/acks/things/ThingAcknowledgementsFactoryTest.java"}, "test_case": {"identifier": "newAcknowledgementsReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void newAcknowledgementsReturnsExpected() {\n        final Acknowledgements acknowledgements =\n                ThingAcknowledgementsFactory.newAcknowledgements(acknowledgementList, dittoHeaders);\n\n        try (final AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {\n            softly.assertThat(acknowledgements)\n                    .as(\"contains elements\")\n                    .containsOnlyElementsOf(acknowledgementList);\n            softly.assertThat((CharSequence) acknowledgements.getEntityId())\n                    .as(\"same entity ID\")\n                    .isEqualTo(knownAcknowledgement.getEntityId());\n            softly.assertThat(acknowledgements.getType())\n                    .as(\"same type\")\n                    .isEqualTo(Acknowledgements.getType(knownAcknowledgement.getEntityType()));\n            softly.assertThat(acknowledgements.getStatusCode())\n                    .as(\"same status code\")\n                    .isEqualTo(HttpStatusCode.FAILED_DEPENDENCY);\n            softly.assertThat(acknowledgements.getDittoHeaders())\n                    .as(\"same DittoHeaders\")\n                    .isEqualTo(dittoHeaders);\n        }\n    }", "signature": "void newAcknowledgementsReturnsExpected()", "full_signature": "@Test public void newAcknowledgementsReturnsExpected()", "class_method_signature": "ThingAcknowledgementsFactoryTest.newAcknowledgementsReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["newAcknowledgements", "containsOnlyElementsOf", "as", "assertThat", "isEqualTo", "as", "assertThat", "getEntityId", "getEntityId", "isEqualTo", "as", "assertThat", "getType", "getType", "getEntityType", "isEqualTo", "as", "assertThat", "getStatusCode", "isEqualTo", "as", "assertThat", "getDittoHeaders"]}, "focal_class": {"identifier": "ThingAcknowledgementsFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ThingAcknowledgementsFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " ThingAcknowledgementsFactory()", "full_signature": "private  ThingAcknowledgementsFactory()", "class_method_signature": "ThingAcknowledgementsFactory.ThingAcknowledgementsFactory()", "testcase": false, "constructor": true}, {"identifier": "newAcknowledgements", "parameters": "(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "Acknowledgements", "signature": "Acknowledgements newAcknowledgements(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static Acknowledgements newAcknowledgements(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "ThingAcknowledgementsFactory.newAcknowledgements(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "newAcknowledgements", "parameters": "(final EntityIdWithType entityId,\n            final Collection<? extends Acknowledgement> acknowledgements,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "Acknowledgements", "signature": "Acknowledgements newAcknowledgements(final EntityIdWithType entityId,\n            final Collection<? extends Acknowledgement> acknowledgements,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static Acknowledgements newAcknowledgements(final EntityIdWithType entityId,\n            final Collection<? extends Acknowledgement> acknowledgements,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "ThingAcknowledgementsFactory.newAcknowledgements(final EntityIdWithType entityId,\n            final Collection<? extends Acknowledgement> acknowledgements,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "Acknowledgements", "signature": "Acknowledgements fromJson(final JsonObject jsonObject)", "full_signature": "public static Acknowledgements fromJson(final JsonObject jsonObject)", "class_method_signature": "ThingAcknowledgementsFactory.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}], "file": "signals/acks/things/src/main/java/org/eclipse/ditto/signals/acks/things/ThingAcknowledgementsFactory.java"}, "focal_method": {"identifier": "newAcknowledgements", "parameters": "(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "Acknowledgements", "body": "public static Acknowledgements newAcknowledgements(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders) {\n\n        return Acknowledgements.of(acknowledgements, dittoHeaders);\n    }", "signature": "Acknowledgements newAcknowledgements(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static Acknowledgements newAcknowledgements(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "ThingAcknowledgementsFactory.newAcknowledgements(final Collection<Acknowledgement> acknowledgements,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}