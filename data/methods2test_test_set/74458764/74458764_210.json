{"test_class": {"identifier": "TestShutdownListener", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ShutdownListener listener;", "modifier": "private", "type": "ShutdownListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "private ServletContext context;", "modifier": "private", "type": "ServletContext", "declarator": "context", "var_name": "context"}, {"original_string": "private SessionManager manager;", "modifier": "private", "type": "SessionManager", "declarator": "manager", "var_name": "manager"}], "file": "session-replacement/src/test/java/com/amadeus/session/servlet/TestShutdownListener.java"}, "test_case": {"identifier": "testContextDestroyedWithSessionManager", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testContextDestroyedWithSessionManager() {\n    when(context.getAttribute(Attributes.SESSION_MANAGER)).thenReturn(manager);\n    ServletContextEvent event = new ServletContextEvent(context);\n    listener.contextDestroyed(event);\n    verify(manager).close();\n  }", "signature": "void testContextDestroyedWithSessionManager()", "full_signature": "@Test public void testContextDestroyedWithSessionManager()", "class_method_signature": "TestShutdownListener.testContextDestroyedWithSessionManager()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getAttribute", "contextDestroyed", "close", "verify"]}, "focal_class": {"identifier": "ShutdownListener", "superclass": "", "interfaces": "implements ServletContextListener", "fields": [], "methods": [{"identifier": "contextDestroyed", "parameters": "(ServletContextEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void contextDestroyed(ServletContextEvent event)", "full_signature": "@Override public void contextDestroyed(ServletContextEvent event)", "class_method_signature": "ShutdownListener.contextDestroyed(ServletContextEvent event)", "testcase": false, "constructor": false}, {"identifier": "contextInitialized", "parameters": "(ServletContextEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void contextInitialized(ServletContextEvent event)", "full_signature": "@Override public void contextInitialized(ServletContextEvent event)", "class_method_signature": "ShutdownListener.contextInitialized(ServletContextEvent event)", "testcase": false, "constructor": false}], "file": "session-replacement/src/main/java/com/amadeus/session/servlet/ShutdownListener.java"}, "focal_method": {"identifier": "contextDestroyed", "parameters": "(ServletContextEvent event)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void contextDestroyed(ServletContextEvent event) {\n    // If we have session manager we need to close it\n    SessionManager sessionManager = (SessionManager)event.getServletContext().getAttribute(Attributes.SESSION_MANAGER);\n    if (sessionManager != null) {\n      sessionManager.close();\n    }\n  }", "signature": "void contextDestroyed(ServletContextEvent event)", "full_signature": "@Override public void contextDestroyed(ServletContextEvent event)", "class_method_signature": "ShutdownListener.contextDestroyed(ServletContextEvent event)", "testcase": false, "constructor": false, "invocations": ["getAttribute", "getServletContext", "close"]}, "repository": {"repo_id": 74458764, "url": "https://github.com/AmadeusITGroup/HttpSessionReplacer", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 45, "size": 514, "license": "licensed"}}