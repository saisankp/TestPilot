{"test_class": {"identifier": "SubmarineResourceUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CUSTOM_RESOURCE_NAME = \"a-custom-resource\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_RESOURCE_NAME = \"a-custom-resource\"", "var_name": "CUSTOM_RESOURCE_NAME"}], "file": "submarine-server/server-submitter/submitter-yarnservice/src/test/java/org/apache/submarine/server/submitter/yarnservice/utils/SubmarineResourceUtilsTest.java"}, "test_case": {"identifier": "testConvertResourceWithCustomResource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConvertResourceWithCustomResource() {\n    initResourceTypes();\n    Resource res = Resource.newInstance(4096, 12,\n        ImmutableMap.of(CUSTOM_RESOURCE_NAME, 20L));\n\n    org.apache.hadoop.yarn.service.api.records.Resource serviceResource =\n        SubmarineResourceUtils.convertYarnResourceToServiceResource(res);\n\n    assertEquals(12, serviceResource.getCpus().intValue());\n    assertEquals(4096, (int) Integer.valueOf(serviceResource.getMemory()));\n    Map<String, ResourceInformation> additionalResources =\n        serviceResource.getAdditional();\n\n    // Additional resources also includes vcores and memory\n    assertEquals(3, additionalResources.size());\n    ResourceInformation customResourceRI =\n        additionalResources.get(CUSTOM_RESOURCE_NAME);\n    assertEquals(\"G\", customResourceRI.getUnit());\n    assertEquals(20L, (long) customResourceRI.getValue());\n  }", "signature": "void testConvertResourceWithCustomResource()", "full_signature": "@Test public void testConvertResourceWithCustomResource()", "class_method_signature": "SubmarineResourceUtilsTest.testConvertResourceWithCustomResource()", "testcase": true, "constructor": false, "invocations": ["initResourceTypes", "newInstance", "of", "convertYarnResourceToServiceResource", "assertEquals", "intValue", "getCpus", "assertEquals", "valueOf", "getMemory", "getAdditional", "assertEquals", "size", "get", "assertEquals", "getUnit", "assertEquals", "getValue"]}, "focal_class": {"identifier": "SubmarineResourceUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SubmarineResourceUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SubmarineResourceUtils()", "full_signature": "private  SubmarineResourceUtils()", "class_method_signature": "SubmarineResourceUtils.SubmarineResourceUtils()", "testcase": false, "constructor": true}, {"identifier": "convertYarnResourceToServiceResource", "parameters": "(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource)", "modifiers": "public static", "return": "Resource", "signature": "Resource convertYarnResourceToServiceResource(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource)", "full_signature": "public static Resource convertYarnResourceToServiceResource(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource)", "class_method_signature": "SubmarineResourceUtils.convertYarnResourceToServiceResource(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource)", "testcase": false, "constructor": false}], "file": "submarine-server/server-submitter/submitter-yarnservice/src/main/java/org/apache/submarine/server/submitter/yarnservice/utils/SubmarineResourceUtils.java"}, "focal_method": {"identifier": "convertYarnResourceToServiceResource", "parameters": "(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource)", "modifiers": "public static", "return": "Resource", "body": "public static Resource convertYarnResourceToServiceResource(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource) {\n    Resource serviceResource = new Resource();\n    serviceResource.setCpus(yarnResource.getVirtualCores());\n    serviceResource.setMemory(String.valueOf(yarnResource.getMemorySize()));\n\n    Map<String, ResourceInformation> riMap = new HashMap<>();\n    for (org.apache.hadoop.yarn.api.records.ResourceInformation ri :\n        yarnResource.getAllResourcesListCopy()) {\n      ResourceInformation serviceRi = new ResourceInformation();\n      serviceRi.setValue(ri.getValue());\n      serviceRi.setUnit(ri.getUnits());\n      riMap.put(ri.getName(), serviceRi);\n    }\n    serviceResource.setResourceInformations(riMap);\n\n    return serviceResource;\n  }", "signature": "Resource convertYarnResourceToServiceResource(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource)", "full_signature": "public static Resource convertYarnResourceToServiceResource(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource)", "class_method_signature": "SubmarineResourceUtils.convertYarnResourceToServiceResource(\n      org.apache.hadoop.yarn.api.records.Resource yarnResource)", "testcase": false, "constructor": false, "invocations": ["setCpus", "getVirtualCores", "setMemory", "valueOf", "getMemorySize", "getAllResourcesListCopy", "setValue", "getValue", "setUnit", "getUnits", "put", "getName", "setResourceInformations"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}