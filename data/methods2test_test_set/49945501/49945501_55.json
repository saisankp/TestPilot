{"test_class": {"identifier": "MethodArgumentNotValidExceptionHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final MockHttpServletRequest MOCK_REQUEST = new MockHttpServletRequest();", "modifier": "private static final", "type": "MockHttpServletRequest", "declarator": "MOCK_REQUEST = new MockHttpServletRequest()", "var_name": "MOCK_REQUEST"}, {"original_string": "private MethodArgumentNotValidExceptionHandler handler;", "modifier": "private", "type": "MethodArgumentNotValidExceptionHandler", "declarator": "handler", "var_name": "handler"}], "file": "neo-starter/src/test/java/eu/neoteric/starter/mvc/errorhandling/handlers/common/MethodArgumentNotValidExceptionHandlerTest.java"}, "test_case": {"identifier": "errorMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void errorMessage() throws Exception {\n        //TODO\n        BindingResult error = new BeanPropertyBindingResult(\"bean\", \"message\");\n        MethodArgumentNotValidException exception = new MethodArgumentNotValidException(null, error);\n        Object o = handler.errorMessage(exception, MOCK_REQUEST);\n    }", "signature": "void errorMessage()", "full_signature": "@Test public void errorMessage()", "class_method_signature": "MethodArgumentNotValidExceptionHandlerTest.errorMessage()", "testcase": true, "constructor": false, "invocations": ["errorMessage"]}, "focal_class": {"identifier": "MethodArgumentNotValidExceptionHandler", "superclass": "", "interfaces": "implements RestExceptionHandler<MethodArgumentNotValidException>", "fields": [{"original_string": "private static final String VIOLATIONS = \"violations\";", "modifier": "private static final", "type": "String", "declarator": "VIOLATIONS = \"violations\"", "var_name": "VIOLATIONS"}], "methods": [{"identifier": "errorMessage", "parameters": "(MethodArgumentNotValidException exception, HttpServletRequest request)", "modifiers": "@Override public", "return": "Object", "signature": "Object errorMessage(MethodArgumentNotValidException exception, HttpServletRequest request)", "full_signature": "@Override public Object errorMessage(MethodArgumentNotValidException exception, HttpServletRequest request)", "class_method_signature": "MethodArgumentNotValidExceptionHandler.errorMessage(MethodArgumentNotValidException exception, HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "additionalInfo", "parameters": "(MethodArgumentNotValidException exception, HttpServletRequest request)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> additionalInfo(MethodArgumentNotValidException exception, HttpServletRequest request)", "full_signature": "@Override public Map<String, Object> additionalInfo(MethodArgumentNotValidException exception, HttpServletRequest request)", "class_method_signature": "MethodArgumentNotValidExceptionHandler.additionalInfo(MethodArgumentNotValidException exception, HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(ObjectError objectError)", "modifiers": "private static", "return": "String", "signature": "String getType(ObjectError objectError)", "full_signature": "private static String getType(ObjectError objectError)", "class_method_signature": "MethodArgumentNotValidExceptionHandler.getType(ObjectError objectError)", "testcase": false, "constructor": false}], "file": "neo-starter/src/main/java/eu/neoteric/starter/mvc/errorhandling/handlers/common/MethodArgumentNotValidExceptionHandler.java"}, "focal_method": {"identifier": "errorMessage", "parameters": "(MethodArgumentNotValidException exception, HttpServletRequest request)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object errorMessage(MethodArgumentNotValidException exception, HttpServletRequest request) {\n        BindingResult bindingResult = exception.getBindingResult();\n        int errorCount = bindingResult.getErrorCount();\n\n        return String.join(\"\", bindingResult.getObjectName(), \" has \", String.valueOf(errorCount), \" validation error\",\n                errorCount > 1 ? \"s\" : \"\");\n    }", "signature": "Object errorMessage(MethodArgumentNotValidException exception, HttpServletRequest request)", "full_signature": "@Override public Object errorMessage(MethodArgumentNotValidException exception, HttpServletRequest request)", "class_method_signature": "MethodArgumentNotValidExceptionHandler.errorMessage(MethodArgumentNotValidException exception, HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["getBindingResult", "getErrorCount", "join", "getObjectName", "valueOf"]}, "repository": {"repo_id": 49945501, "url": "https://github.com/neoteric-eu/neo-starters", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 969, "license": "licensed"}}