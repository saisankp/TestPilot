{"test_class": {"identifier": "WorkspacesImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Workspaces workspaces;", "modifier": "", "type": "Workspaces", "declarator": "workspaces", "var_name": "workspaces"}, {"original_string": "AsyncHttpClient asyncHttpClient;", "modifier": "", "type": "AsyncHttpClient", "declarator": "asyncHttpClient", "var_name": "asyncHttpClient"}], "file": "janbanery-core/src/test/java/pl/project13/janbanery/core/dao/WorkspacesImplTest.java"}, "test_case": {"identifier": "shouldFindAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldFindAll() throws Exception {\n    // when\n    List<Workspace> all = workspaces.all();\n\n    // then\n    assertThat(all).isNotNull();\n    assertThat(all).isNotEmpty();\n    Workspace firstWorkspace = all.get(0);\n    assertThat(firstWorkspace.getId()).isPositive();\n    assertThat(firstWorkspace.getName()).isNotEmpty();\n  }", "signature": "void shouldFindAll()", "full_signature": "@Test public void shouldFindAll()", "class_method_signature": "WorkspacesImplTest.shouldFindAll()", "testcase": true, "constructor": false, "invocations": ["all", "isNotNull", "assertThat", "isNotEmpty", "assertThat", "get", "isPositive", "assertThat", "getId", "isNotEmpty", "assertThat", "getName"]}, "focal_class": {"identifier": "WorkspacesImpl", "superclass": "", "interfaces": "implements Workspaces", "fields": [{"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private RestClient restClient;", "modifier": "private", "type": "RestClient", "declarator": "restClient", "var_name": "restClient"}, {"original_string": "private Workspace currentWorkspace;", "modifier": "private", "type": "Workspace", "declarator": "currentWorkspace", "var_name": "currentWorkspace"}], "methods": [{"identifier": "WorkspacesImpl", "parameters": "(Configuration conf, RestClient restClient)", "modifiers": "public", "return": "", "signature": " WorkspacesImpl(Configuration conf, RestClient restClient)", "full_signature": "public  WorkspacesImpl(Configuration conf, RestClient restClient)", "class_method_signature": "WorkspacesImpl.WorkspacesImpl(Configuration conf, RestClient restClient)", "testcase": false, "constructor": true}, {"identifier": "all", "parameters": "()", "modifiers": "@Override public", "return": "List<Workspace>", "signature": "List<Workspace> all()", "full_signature": "@Override public List<Workspace> all()", "class_method_signature": "WorkspacesImpl.all()", "testcase": false, "constructor": false}, {"identifier": "byName", "parameters": "(String name)", "modifiers": "@Override public", "return": "Workspace", "signature": "Workspace byName(String name)", "full_signature": "@Override public Workspace byName(String name)", "class_method_signature": "WorkspacesImpl.byName(String name)", "testcase": false, "constructor": false}, {"identifier": "current", "parameters": "()", "modifiers": "@Override public", "return": "Workspace", "signature": "Workspace current()", "full_signature": "@Override public Workspace current()", "class_method_signature": "WorkspacesImpl.current()", "testcase": false, "constructor": false}, {"identifier": "using", "parameters": "(Workspace currentWorkspace)", "modifiers": "public", "return": "Workspaces", "signature": "Workspaces using(Workspace currentWorkspace)", "full_signature": "public Workspaces using(Workspace currentWorkspace)", "class_method_signature": "WorkspacesImpl.using(Workspace currentWorkspace)", "testcase": false, "constructor": false}], "file": "janbanery-core/src/main/java/pl/project13/janbanery/core/dao/WorkspacesImpl.java"}, "focal_method": {"identifier": "all", "parameters": "()", "modifiers": "@Override public", "return": "List<Workspace>", "body": "@Override\n  public List<Workspace> all() {\n    String url = conf.getApiUrl() + \"user/workspaces.json\";\n    return restClient.doGet(url, GsonTypeTokens.LIST_WORKSPACE);\n  }", "signature": "List<Workspace> all()", "full_signature": "@Override public List<Workspace> all()", "class_method_signature": "WorkspacesImpl.all()", "testcase": false, "constructor": false, "invocations": ["getApiUrl", "doGet"]}, "repository": {"repo_id": 1641128, "url": "https://github.com/ktoso/janbanery", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 2250, "license": "licensed"}}