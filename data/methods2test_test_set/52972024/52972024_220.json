{"test_class": {"identifier": "FieldNameTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/IObject/FieldName/src/test/java/info/smart_tools/smartactors/iobject/field_name/FieldNameTest.java"}, "test_case": {"identifier": "checkComparable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkComparable()\n            throws Exception {\n        assertEquals(new FieldName(\"asd\").compareTo(new FieldName(\"qwe\")), \"asd\".compareTo(\"qwe\"));\n    }", "signature": "void checkComparable()", "full_signature": "@Test public void checkComparable()", "class_method_signature": "FieldNameTest.checkComparable()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "compareTo", "compareTo"]}, "focal_class": {"identifier": "FieldName", "superclass": "", "interfaces": "implements IFieldName, Comparable<IFieldName>", "fields": [{"original_string": "private static final Pattern VALID_SYMBOLS = Pattern.compile(\"[\\\\w\u0430-\u044f\u0410-\u042f\u0451\u0401\\\\-\\\\+=\\\\|\u2116!@#\\\\$%\\\\^&\\\\*:/\\\\.,\u00ab\u00bb \\\\{\\\\}\\\\(\\\\)\\\\[\\\\]]+\");", "modifier": "private static final", "type": "Pattern", "declarator": "VALID_SYMBOLS = Pattern.compile(\"[\\\\w\u0430-\u044f\u0410-\u042f\u0451\u0401\\\\-\\\\+=\\\\|\u2116!@#\\\\$%\\\\^&\\\\*:/\\\\.,\u00ab\u00bb \\\\{\\\\}\\\\(\\\\)\\\\[\\\\]]+\");", "var_name": "VALID_SYMBOLS"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "FieldName", "parameters": "(final String name)", "modifiers": "public", "return": "", "signature": " FieldName(final String name)", "full_signature": "public  FieldName(final String name)", "class_method_signature": "FieldName.FieldName(final String name)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "FieldName.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FieldName.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FieldName.toString()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(final String nameValue)", "modifiers": "protected", "return": "void", "signature": "void initialize(final String nameValue)", "full_signature": "protected void initialize(final String nameValue)", "class_method_signature": "FieldName.initialize(final String nameValue)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(final IFieldName that)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(final IFieldName that)", "full_signature": "@Override public int compareTo(final IFieldName that)", "class_method_signature": "FieldName.compareTo(final IFieldName that)", "testcase": false, "constructor": false}], "file": "CoreFeatures/IObject/FieldName/src/main/java/info/smart_tools/smartactors/iobject/field_name/FieldName.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(final IFieldName that)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compareTo(final IFieldName that) {\n        return name.compareTo(that.toString());\n    }", "signature": "int compareTo(final IFieldName that)", "full_signature": "@Override public int compareTo(final IFieldName that)", "class_method_signature": "FieldName.compareTo(final IFieldName that)", "testcase": false, "constructor": false, "invocations": ["compareTo", "toString"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}