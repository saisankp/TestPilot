{"test_class": {"identifier": "ProblemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Problem error;", "modifier": "private", "type": "Problem", "declarator": "error", "var_name": "error"}, {"original_string": "private Problem warning;", "modifier": "private", "type": "Problem", "declarator": "warning", "var_name": "warning"}, {"original_string": "private Problem info;", "modifier": "private", "type": "Problem", "declarator": "info", "var_name": "info"}, {"original_string": "private I18n message;", "modifier": "private", "type": "I18n", "declarator": "message", "var_name": "message"}, {"original_string": "private Object[] messageParameters;", "modifier": "private", "type": "Object[]", "declarator": "messageParameters", "var_name": "messageParameters"}, {"original_string": "private Throwable throwable;", "modifier": "private", "type": "Throwable", "declarator": "throwable", "var_name": "throwable"}, {"original_string": "private String location;", "modifier": "private", "type": "String", "declarator": "location", "var_name": "location"}, {"original_string": "private String resource;", "modifier": "private", "type": "String", "declarator": "resource", "var_name": "resource"}], "file": "modeshape-common/src/test/java/org/modeshape/common/collection/ProblemTest.java"}, "test_case": {"identifier": "shouldHaveMessageString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldHaveMessageString() {\n        messageParameters = new Object[] {\"error msg\"};\n        error = new Problem(Status.ERROR, 1, message, messageParameters, resource, location, throwable);\n        messageParameters = new Object[] {\"warning msg\"};\n        warning = new Problem(Status.WARNING, 1, message, messageParameters, resource, location, throwable);\n        messageParameters = new Object[] {\"info msg\"};\n        info = new Problem(Status.INFO, 1, message, messageParameters, resource, location, throwable);\n        assertThat(error.getMessageString(), is(message.text(\"error msg\")));\n        assertThat(warning.getMessageString(), is(message.text(\"warning msg\")));\n        assertThat(info.getMessageString(), is(message.text(\"info msg\")));\n    }", "signature": "void shouldHaveMessageString()", "full_signature": "@Test public void shouldHaveMessageString()", "class_method_signature": "ProblemTest.shouldHaveMessageString()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getMessageString", "is", "text", "assertThat", "getMessageString", "is", "text", "assertThat", "getMessageString", "is", "text"]}, "focal_class": {"identifier": "Problem", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_CODE = 0;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_CODE = 0", "var_name": "DEFAULT_CODE"}, {"original_string": "private final Status status;", "modifier": "private final", "type": "Status", "declarator": "status", "var_name": "status"}, {"original_string": "private final I18n message;", "modifier": "private final", "type": "I18n", "declarator": "message", "var_name": "message"}, {"original_string": "private final Object[] parameters;", "modifier": "private final", "type": "Object[]", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private final Throwable throwable;", "modifier": "private final", "type": "Throwable", "declarator": "throwable", "var_name": "throwable"}, {"original_string": "private final int code;", "modifier": "private final", "type": "int", "declarator": "code", "var_name": "code"}, {"original_string": "private final String resource;", "modifier": "private final", "type": "String", "declarator": "resource", "var_name": "resource"}, {"original_string": "private final String location;", "modifier": "private final", "type": "String", "declarator": "location", "var_name": "location"}], "methods": [{"identifier": "Problem", "parameters": "( Status status,\n                    int code,\n                    I18n message,\n                    Object[] params,\n                    String resource,\n                    String location,\n                    Throwable throwable )", "modifiers": "public", "return": "", "signature": " Problem( Status status,\n                    int code,\n                    I18n message,\n                    Object[] params,\n                    String resource,\n                    String location,\n                    Throwable throwable )", "full_signature": "public  Problem( Status status,\n                    int code,\n                    I18n message,\n                    Object[] params,\n                    String resource,\n                    String location,\n                    Throwable throwable )", "class_method_signature": "Problem.Problem( Status status,\n                    int code,\n                    I18n message,\n                    Object[] params,\n                    String resource,\n                    String location,\n                    Throwable throwable )", "testcase": false, "constructor": true}, {"identifier": "getCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCode()", "full_signature": "public int getCode()", "class_method_signature": "Problem.getCode()", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLocation()", "full_signature": "public String getLocation()", "class_method_signature": "Problem.getLocation()", "testcase": false, "constructor": false}, {"identifier": "getMessageString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMessageString()", "full_signature": "public String getMessageString()", "class_method_signature": "Problem.getMessageString()", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "()", "modifiers": "public", "return": "I18n", "signature": "I18n getMessage()", "full_signature": "public I18n getMessage()", "class_method_signature": "Problem.getMessage()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "public Object[] getParameters()", "class_method_signature": "Problem.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getResource()", "full_signature": "public String getResource()", "class_method_signature": "Problem.getResource()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "Status", "signature": "Status getStatus()", "full_signature": "public Status getStatus()", "class_method_signature": "Problem.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getThrowable", "parameters": "()", "modifiers": "public", "return": "Throwable", "signature": "Throwable getThrowable()", "full_signature": "public Throwable getThrowable()", "class_method_signature": "Problem.getThrowable()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Problem.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object obj )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object obj )", "full_signature": "@Override public boolean equals( Object obj )", "class_method_signature": "Problem.equals( Object obj )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Problem.toString()", "testcase": false, "constructor": false}], "file": "modeshape-common/src/main/java/org/modeshape/common/collection/Problem.java"}, "focal_method": {"identifier": "getMessageString", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getMessageString() {\n        return this.message.text(this.parameters);\n    }", "signature": "String getMessageString()", "full_signature": "public String getMessageString()", "class_method_signature": "Problem.getMessageString()", "testcase": false, "constructor": false, "invocations": ["text"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}