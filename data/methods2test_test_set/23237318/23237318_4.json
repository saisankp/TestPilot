{"test_class": {"identifier": "HTTPBulkLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "samza-elasticsearch/src/test/java/com/quantiply/elasticsearch/HTTPBulkLoaderTest.java"}, "test_case": {"identifier": "testConvertToJestActionUpdate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConvertToJestActionUpdate() throws Exception {\n    HTTPBulkLoader loader = getBulkLoader();\n    ActionRequestKey key = ActionRequestKey.newBuilder()\n        .setAction(Action.UPDATE)\n        .setId(\"myId\")\n        .setVersion(123L)\n        .setVersionType(VersionType.EXTERNAL)\n        .build();\n    BulkableAction<DocumentResult> action = loader.convertToJestAction(new HTTPBulkLoader.ActionRequest(key, \"fakeindex\", \"faketype\", 100L, \"{}\"));\n    assertEquals(\"update\", action.getBulkMethodName());\n    assertEquals(\"myId\", action.getId());\n    assertEquals(\"fakeindex\", action.getIndex());\n    assertEquals(\"faketype\", action.getType());\n    assertEquals(\"external\", action.getParameter(Parameters.VERSION_TYPE).toArray()[0]);\n    assertEquals(123L, action.getParameter(Parameters.VERSION).toArray()[0]);\n    assertEquals(\"{}\", action.getData(new Gson()));\n  }", "signature": "void testConvertToJestActionUpdate()", "full_signature": "@Test public void testConvertToJestActionUpdate()", "class_method_signature": "HTTPBulkLoaderTest.testConvertToJestActionUpdate()", "testcase": true, "constructor": false, "invocations": ["getBulkLoader", "build", "setVersionType", "setVersion", "setId", "setAction", "newBuilder", "convertToJestAction", "assertEquals", "getBulkMethodName", "assertEquals", "getId", "assertEquals", "getIndex", "assertEquals", "getType", "assertEquals", "toArray", "getParameter", "assertEquals", "toArray", "getParameter", "assertEquals", "getData"]}, "focal_class": {"identifier": "HTTPBulkLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final int SHUTDOWN_WAIT_MS = 100;", "modifier": "protected static final", "type": "int", "declarator": "SHUTDOWN_WAIT_MS = 100", "var_name": "SHUTDOWN_WAIT_MS"}, {"original_string": "protected final Writer writer;", "modifier": "protected final", "type": "Writer", "declarator": "writer", "var_name": "writer"}, {"original_string": "protected final ArrayBlockingQueue<WriterCommand> writerCmdQueue;", "modifier": "protected final", "type": "ArrayBlockingQueue<WriterCommand>", "declarator": "writerCmdQueue", "var_name": "writerCmdQueue"}, {"original_string": "protected final ExecutorService writerExecSvc;", "modifier": "protected final", "type": "ExecutorService", "declarator": "writerExecSvc", "var_name": "writerExecSvc"}, {"original_string": "protected Future<Void> writerFuture = null;", "modifier": "protected", "type": "Future<Void>", "declarator": "writerFuture = null", "var_name": "writerFuture"}, {"original_string": "protected Logger logger = LoggerFactory.getLogger(new Object() {}.getClass().getEnclosingClass());", "modifier": "protected", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(new Object() {}.getClass().getEnclosingClass())", "var_name": "logger"}], "methods": [{"identifier": "HTTPBulkLoader", "parameters": "(Config config, JestClient client, Optional<Consumer<BulkReport>> onFlushOpt)", "modifiers": "public", "return": "", "signature": " HTTPBulkLoader(Config config, JestClient client, Optional<Consumer<BulkReport>> onFlushOpt)", "full_signature": "public  HTTPBulkLoader(Config config, JestClient client, Optional<Consumer<BulkReport>> onFlushOpt)", "class_method_signature": "HTTPBulkLoader.HTTPBulkLoader(Config config, JestClient client, Optional<Consumer<BulkReport>> onFlushOpt)", "testcase": false, "constructor": true}, {"identifier": "addAction", "parameters": "(String source, ActionRequest req)", "modifiers": "public", "return": "void", "signature": "void addAction(String source, ActionRequest req)", "full_signature": "public void addAction(String source, ActionRequest req)", "class_method_signature": "HTTPBulkLoader.addAction(String source, ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flush()", "full_signature": "public void flush()", "class_method_signature": "HTTPBulkLoader.flush()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "HTTPBulkLoader.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "HTTPBulkLoader.stop()", "testcase": false, "constructor": false}, {"identifier": "convertToJestAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> convertToJestAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> convertToJestAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.convertToJestAction(ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "getAction", "parameters": "(ActionRequest req,\n                                                   Consumer<String> id,\n                                                   Consumer<String> index,\n                                                   Consumer<String> type,\n                                                   BiConsumer<String,Object> setParameter,\n                                                   Supplier<BulkableAction<DocumentResult>> build)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> getAction(ActionRequest req,\n                                                   Consumer<String> id,\n                                                   Consumer<String> index,\n                                                   Consumer<String> type,\n                                                   BiConsumer<String,Object> setParameter,\n                                                   Supplier<BulkableAction<DocumentResult>> build)", "full_signature": "protected BulkableAction<DocumentResult> getAction(ActionRequest req,\n                                                   Consumer<String> id,\n                                                   Consumer<String> index,\n                                                   Consumer<String> type,\n                                                   BiConsumer<String,Object> setParameter,\n                                                   Supplier<BulkableAction<DocumentResult>> build)", "class_method_signature": "HTTPBulkLoader.getAction(ActionRequest req,\n                                                   Consumer<String> id,\n                                                   Consumer<String> index,\n                                                   Consumer<String> type,\n                                                   BiConsumer<String,Object> setParameter,\n                                                   Supplier<BulkableAction<DocumentResult>> build)", "testcase": false, "constructor": false}, {"identifier": "getIndexAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> getIndexAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> getIndexAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.getIndexAction(ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "getUpdateAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> getUpdateAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> getUpdateAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.getUpdateAction(ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "getDeleteAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> getDeleteAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> getDeleteAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.getDeleteAction(ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "checkWriter", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void checkWriter()", "full_signature": "protected void checkWriter()", "class_method_signature": "HTTPBulkLoader.checkWriter()", "testcase": false, "constructor": false}, {"identifier": "sendCmd", "parameters": "(WriterCommand cmd)", "modifiers": "protected", "return": "void", "signature": "void sendCmd(WriterCommand cmd)", "full_signature": "protected void sendCmd(WriterCommand cmd)", "class_method_signature": "HTTPBulkLoader.sendCmd(WriterCommand cmd)", "testcase": false, "constructor": false}], "file": "samza-elasticsearch/src/main/java/com/quantiply/elasticsearch/HTTPBulkLoader.java"}, "focal_method": {"identifier": "convertToJestAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "body": "protected BulkableAction<DocumentResult> convertToJestAction(ActionRequest req) {\n    BulkableAction<DocumentResult> action;\n    switch (req.key.getAction()) {\n      case INDEX:\n        action = getIndexAction(req);\n        break;\n      case UPDATE:\n        action = getUpdateAction(req);\n        break;\n      case DELETE:\n        action = getDeleteAction(req);\n        break;\n      default:\n        throw new IllegalStateException(\"Unknown action: \" + req.key.getAction());\n    }\n    return action;\n  }", "signature": "BulkableAction<DocumentResult> convertToJestAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> convertToJestAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.convertToJestAction(ActionRequest req)", "testcase": false, "constructor": false, "invocations": ["getAction", "getIndexAction", "getUpdateAction", "getDeleteAction", "getAction"]}, "repository": {"repo_id": 23237318, "url": "https://github.com/quantiply/rico", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 5128, "license": "licensed"}}