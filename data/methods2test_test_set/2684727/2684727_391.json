{"test_class": {"identifier": "ImportInfoTooltipManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ImportInfoTooltipManager manager;", "modifier": "private", "type": "ImportInfoTooltipManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "@Mock\n    IntentImportProcessor intentImportProcessor;", "modifier": "@Mock", "type": "IntentImportProcessor", "declarator": "intentImportProcessor", "var_name": "intentImportProcessor"}, {"original_string": "@Mock\n    IntentImportProvider intentImportProvider;", "modifier": "@Mock", "type": "IntentImportProvider", "declarator": "intentImportProvider", "var_name": "intentImportProvider"}, {"original_string": "private Uri fakeUri;", "modifier": "private", "type": "Uri", "declarator": "fakeUri", "var_name": "fakeUri"}], "file": "app/src/test/java/co/smartreceipts/android/widget/tooltip/report/intent/ImportInfoTooltipManagerTest.java"}, "test_case": {"identifier": "showImportInfoForImage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void showImportInfoForImage() {\n        when(intentImportProcessor.getLastResult()).thenReturn(Observable.just(Optional.of(new IntentImportResult(fakeUri, FileType.Image))));\n\n        manager.needToShowImportInfo()\n                .test()\n                .assertComplete()\n                .assertNoErrors()\n                .assertValueCount(1)\n                .assertValue(true);\n    }", "signature": "void showImportInfoForImage()", "full_signature": "@Test public void showImportInfoForImage()", "class_method_signature": "ImportInfoTooltipManagerTest.showImportInfoForImage()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getLastResult", "just", "of", "assertValue", "assertValueCount", "assertNoErrors", "assertComplete", "test", "needToShowImportInfo"]}, "focal_class": {"identifier": "ImportInfoTooltipManager", "superclass": "", "interfaces": "implements TooltipManager", "fields": [{"original_string": "private final IntentImportProcessor intentImportProcessor;", "modifier": "private final", "type": "IntentImportProcessor", "declarator": "intentImportProcessor", "var_name": "intentImportProcessor"}, {"original_string": "private final IntentImportProvider intentImportProvider;", "modifier": "private final", "type": "IntentImportProvider", "declarator": "intentImportProvider", "var_name": "intentImportProvider"}], "methods": [{"identifier": "ImportInfoTooltipManager", "parameters": "(@NonNull IntentImportProcessor intentImportProcessor, @NonNull IntentImportProvider intentImportProvider)", "modifiers": "@Inject public", "return": "", "signature": " ImportInfoTooltipManager(@NonNull IntentImportProcessor intentImportProcessor, @NonNull IntentImportProvider intentImportProvider)", "full_signature": "@Inject public  ImportInfoTooltipManager(@NonNull IntentImportProcessor intentImportProcessor, @NonNull IntentImportProvider intentImportProvider)", "class_method_signature": "ImportInfoTooltipManager.ImportInfoTooltipManager(@NonNull IntentImportProcessor intentImportProcessor, @NonNull IntentImportProvider intentImportProvider)", "testcase": false, "constructor": true}, {"identifier": "needToShowImportInfo", "parameters": "()", "modifiers": "public", "return": "Observable<Boolean>", "signature": "Observable<Boolean> needToShowImportInfo()", "full_signature": "public Observable<Boolean> needToShowImportInfo()", "class_method_signature": "ImportInfoTooltipManager.needToShowImportInfo()", "testcase": false, "constructor": false}, {"identifier": "tooltipWasDismissed", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tooltipWasDismissed()", "full_signature": "@Override public void tooltipWasDismissed()", "class_method_signature": "ImportInfoTooltipManager.tooltipWasDismissed()", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/widget/tooltip/report/intent/ImportInfoTooltipManager.java"}, "focal_method": {"identifier": "needToShowImportInfo", "parameters": "()", "modifiers": "public", "return": "Observable<Boolean>", "body": "public Observable<Boolean> needToShowImportInfo() {\n        return intentImportProcessor.getLastResult()\n                .map(intentImportResultOptional -> {\n                    if (intentImportResultOptional.isPresent()) {\n                        final FileType fileType = intentImportResultOptional.get().getFileType();\n                        return fileType == FileType.Image || fileType == FileType.Pdf;\n                    } else {\n                        return false;\n                    }\n                });\n    }", "signature": "Observable<Boolean> needToShowImportInfo()", "full_signature": "public Observable<Boolean> needToShowImportInfo()", "class_method_signature": "ImportInfoTooltipManager.needToShowImportInfo()", "testcase": false, "constructor": false, "invocations": ["map", "getLastResult", "isPresent", "getFileType", "get"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}