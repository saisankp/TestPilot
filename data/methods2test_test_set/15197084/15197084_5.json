{"test_class": {"identifier": "SuspendableYesTest", "superclass": "", "interfaces": "", "fields": [], "file": "reactfx/src/test/java/org/reactfx/SuspendableYesTest.java"}, "test_case": {"identifier": "recursionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void recursionTest() {\n        SuspendableYes sy = new SuspendableYes();\n\n        // first listener immediately suspends after resumed\n        sy.addListener((ind, oldVal, newVal) -> {\n            if(!newVal) {\n                sy.suspend();\n            }\n        });\n\n        // record changes observed by the second listener\n        List<Tuple2<Boolean, Boolean>> changes = new ArrayList<>();\n        EventStreams.changesOf(sy)\n                .subscribe(ch -> changes.add(t(ch.getOldValue(), ch.getNewValue())));\n\n        sy.suspend().close();\n\n        for(Tuple2<Boolean, Boolean> ch: changes) {\n            assertNotEquals(ch._1, ch._2);\n        }\n\n        for(int i = 0; i < changes.size() - 1; ++i) {\n            assertEquals(\n                    \"changes[\" + i + \"] = \" + changes.get(i) + \" and changes[\" + (i+1) + \"] = \" + changes.get(i+1) + \" are not compatible\",\n                    changes.get(i)._2, changes.get(i+1)._1);\n        }\n    }", "signature": "void recursionTest()", "full_signature": "@Test public void recursionTest()", "class_method_signature": "SuspendableYesTest.recursionTest()", "testcase": true, "constructor": false, "invocations": ["addListener", "suspend", "subscribe", "changesOf", "add", "t", "getOldValue", "getNewValue", "close", "suspend", "assertNotEquals", "size", "assertEquals", "get", "get", "get", "get"]}, "focal_class": {"identifier": "SuspendableYes", "superclass": "extends SuspendableBoolean", "interfaces": "", "fields": [], "methods": [{"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean get()", "full_signature": "@Override public boolean get()", "class_method_signature": "SuspendableYes.get()", "testcase": false, "constructor": false}], "file": "reactfx/src/main/java/org/reactfx/SuspendableYes.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean get() {\n        return !isSuspended();\n    }", "signature": "boolean get()", "full_signature": "@Override public boolean get()", "class_method_signature": "SuspendableYes.get()", "testcase": false, "constructor": false, "invocations": ["isSuspended"]}, "repository": {"repo_id": 15197084, "url": "https://github.com/TomasMikula/ReactFX", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 326, "size": 891, "license": "licensed"}}