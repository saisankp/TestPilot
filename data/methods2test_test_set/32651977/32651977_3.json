{"test_class": {"identifier": "UserTypeValidationPostProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UserTypeValidationPostProcessor processor;", "modifier": "private", "type": "UserTypeValidationPostProcessor", "declarator": "processor", "var_name": "processor"}], "file": "protostuff-parser/src/test/java/io/protostuff/compiler/parser/UserTypeValidationPostProcessorTest.java"}, "test_case": {"identifier": "isValidTagValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isValidTagValue() throws Exception {\n        assertFalse(processor.isValidTagValue(-1));\n        assertFalse(processor.isValidTagValue(0));\n        assertFalse(processor.isValidTagValue(19000));\n        assertFalse(processor.isValidTagValue(19999));\n        assertFalse(processor.isValidTagValue(Field.MAX_TAG_VALUE+1));\n        assertTrue(processor.isValidTagValue(1));\n        assertTrue(processor.isValidTagValue(100));\n        assertTrue(processor.isValidTagValue(18999));\n        assertTrue(processor.isValidTagValue(20000));\n        assertTrue(processor.isValidTagValue(Field.MAX_TAG_VALUE-1));\n        assertTrue(processor.isValidTagValue(Field.MAX_TAG_VALUE));\n    }", "signature": "void isValidTagValue()", "full_signature": "@Test public void isValidTagValue()", "class_method_signature": "UserTypeValidationPostProcessorTest.isValidTagValue()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isValidTagValue", "assertFalse", "isValidTagValue", "assertFalse", "isValidTagValue", "assertFalse", "isValidTagValue", "assertFalse", "isValidTagValue", "assertTrue", "isValidTagValue", "assertTrue", "isValidTagValue", "assertTrue", "isValidTagValue", "assertTrue", "isValidTagValue", "assertTrue", "isValidTagValue", "assertTrue", "isValidTagValue"]}, "focal_class": {"identifier": "UserTypeValidationPostProcessor", "superclass": "", "interfaces": "implements ProtoContextPostProcessor", "fields": [{"original_string": "private static final String ALLOW_ALIAS = \"allow_alias\";", "modifier": "private static final", "type": "String", "declarator": "ALLOW_ALIAS = \"allow_alias\"", "var_name": "ALLOW_ALIAS"}, {"original_string": "private static final int MIN_TAG = 1;", "modifier": "private static final", "type": "int", "declarator": "MIN_TAG = 1", "var_name": "MIN_TAG"}, {"original_string": "private static final int MAX_TAG = Field.MAX_TAG_VALUE;", "modifier": "private static final", "type": "int", "declarator": "MAX_TAG = Field.MAX_TAG_VALUE", "var_name": "MAX_TAG"}, {"original_string": "private static final int SYS_RESERVED_START = 19000;", "modifier": "private static final", "type": "int", "declarator": "SYS_RESERVED_START = 19000", "var_name": "SYS_RESERVED_START"}, {"original_string": "private static final int SYS_RESERVED_END = 19999;", "modifier": "private static final", "type": "int", "declarator": "SYS_RESERVED_END = 19999", "var_name": "SYS_RESERVED_END"}], "methods": [{"identifier": "process", "parameters": "(ProtoContext context)", "modifiers": "@Override public", "return": "void", "signature": "void process(ProtoContext context)", "full_signature": "@Override public void process(ProtoContext context)", "class_method_signature": "UserTypeValidationPostProcessor.process(ProtoContext context)", "testcase": false, "constructor": false}, {"identifier": "processService", "parameters": "(Service service)", "modifiers": "private", "return": "void", "signature": "void processService(Service service)", "full_signature": "private void processService(Service service)", "class_method_signature": "UserTypeValidationPostProcessor.processService(Service service)", "testcase": false, "constructor": false}, {"identifier": "checkDuplicateServiceMethodNames", "parameters": "(List<ServiceMethod> methods)", "modifiers": "private", "return": "void", "signature": "void checkDuplicateServiceMethodNames(List<ServiceMethod> methods)", "full_signature": "private void checkDuplicateServiceMethodNames(List<ServiceMethod> methods)", "class_method_signature": "UserTypeValidationPostProcessor.checkDuplicateServiceMethodNames(List<ServiceMethod> methods)", "testcase": false, "constructor": false}, {"identifier": "processEnum", "parameters": "(Enum anEnum)", "modifiers": "private", "return": "void", "signature": "void processEnum(Enum anEnum)", "full_signature": "private void processEnum(Enum anEnum)", "class_method_signature": "UserTypeValidationPostProcessor.processEnum(Enum anEnum)", "testcase": false, "constructor": false}, {"identifier": "checkReservedEnumNames", "parameters": "(Enum anEnum, List<EnumConstant> constants)", "modifiers": "private", "return": "void", "signature": "void checkReservedEnumNames(Enum anEnum, List<EnumConstant> constants)", "full_signature": "private void checkReservedEnumNames(Enum anEnum, List<EnumConstant> constants)", "class_method_signature": "UserTypeValidationPostProcessor.checkReservedEnumNames(Enum anEnum, List<EnumConstant> constants)", "testcase": false, "constructor": false}, {"identifier": "checkReservedEnumTags", "parameters": "(Enum anEnum, List<EnumConstant> constants)", "modifiers": "private", "return": "void", "signature": "void checkReservedEnumTags(Enum anEnum, List<EnumConstant> constants)", "full_signature": "private void checkReservedEnumTags(Enum anEnum, List<EnumConstant> constants)", "class_method_signature": "UserTypeValidationPostProcessor.checkReservedEnumTags(Enum anEnum, List<EnumConstant> constants)", "testcase": false, "constructor": false}, {"identifier": "checkDuplicateEnumConstantValues", "parameters": "(Enum anEnum, List<EnumConstant> constants)", "modifiers": "private", "return": "void", "signature": "void checkDuplicateEnumConstantValues(Enum anEnum, List<EnumConstant> constants)", "full_signature": "private void checkDuplicateEnumConstantValues(Enum anEnum, List<EnumConstant> constants)", "class_method_signature": "UserTypeValidationPostProcessor.checkDuplicateEnumConstantValues(Enum anEnum, List<EnumConstant> constants)", "testcase": false, "constructor": false}, {"identifier": "checkDuplicateEnumConstantNames", "parameters": "(List<EnumConstant> constants)", "modifiers": "private", "return": "void", "signature": "void checkDuplicateEnumConstantNames(List<EnumConstant> constants)", "full_signature": "private void checkDuplicateEnumConstantNames(List<EnumConstant> constants)", "class_method_signature": "UserTypeValidationPostProcessor.checkDuplicateEnumConstantNames(List<EnumConstant> constants)", "testcase": false, "constructor": false}, {"identifier": "processMessage", "parameters": "(Message message)", "modifiers": "private", "return": "void", "signature": "void processMessage(Message message)", "full_signature": "private void processMessage(Message message)", "class_method_signature": "UserTypeValidationPostProcessor.processMessage(Message message)", "testcase": false, "constructor": false}, {"identifier": "checkFieldModifier", "parameters": "(Message message, List<Field> fields)", "modifiers": "private", "return": "void", "signature": "void checkFieldModifier(Message message, List<Field> fields)", "full_signature": "private void checkFieldModifier(Message message, List<Field> fields)", "class_method_signature": "UserTypeValidationPostProcessor.checkFieldModifier(Message message, List<Field> fields)", "testcase": false, "constructor": false}, {"identifier": "checkReservedFieldTags", "parameters": "(Message message, List<Field> fields)", "modifiers": "private", "return": "void", "signature": "void checkReservedFieldTags(Message message, List<Field> fields)", "full_signature": "private void checkReservedFieldTags(Message message, List<Field> fields)", "class_method_signature": "UserTypeValidationPostProcessor.checkReservedFieldTags(Message message, List<Field> fields)", "testcase": false, "constructor": false}, {"identifier": "checkReservedFieldNames", "parameters": "(Message message, List<Field> fields)", "modifiers": "private", "return": "void", "signature": "void checkReservedFieldNames(Message message, List<Field> fields)", "full_signature": "private void checkReservedFieldNames(Message message, List<Field> fields)", "class_method_signature": "UserTypeValidationPostProcessor.checkReservedFieldNames(Message message, List<Field> fields)", "testcase": false, "constructor": false}, {"identifier": "checkInvalidFieldTags", "parameters": "(List<Field> fields)", "modifiers": "private", "return": "void", "signature": "void checkInvalidFieldTags(List<Field> fields)", "full_signature": "private void checkInvalidFieldTags(List<Field> fields)", "class_method_signature": "UserTypeValidationPostProcessor.checkInvalidFieldTags(List<Field> fields)", "testcase": false, "constructor": false}, {"identifier": "isValidTagValue", "parameters": "(int tag)", "modifiers": "@VisibleForTesting", "return": "boolean", "signature": "boolean isValidTagValue(int tag)", "full_signature": "@VisibleForTesting boolean isValidTagValue(int tag)", "class_method_signature": "UserTypeValidationPostProcessor.isValidTagValue(int tag)", "testcase": false, "constructor": false}, {"identifier": "checkDuplicateFieldTags", "parameters": "(List<Field> fields)", "modifiers": "private", "return": "void", "signature": "void checkDuplicateFieldTags(List<Field> fields)", "full_signature": "private void checkDuplicateFieldTags(List<Field> fields)", "class_method_signature": "UserTypeValidationPostProcessor.checkDuplicateFieldTags(List<Field> fields)", "testcase": false, "constructor": false}, {"identifier": "checkDuplicateFieldNames", "parameters": "(List<Field> fields)", "modifiers": "private", "return": "void", "signature": "void checkDuplicateFieldNames(List<Field> fields)", "full_signature": "private void checkDuplicateFieldNames(List<Field> fields)", "class_method_signature": "UserTypeValidationPostProcessor.checkDuplicateFieldNames(List<Field> fields)", "testcase": false, "constructor": false}], "file": "protostuff-parser/src/main/java/io/protostuff/compiler/parser/UserTypeValidationPostProcessor.java"}, "focal_method": {"identifier": "isValidTagValue", "parameters": "(int tag)", "modifiers": "@VisibleForTesting", "return": "boolean", "body": "@VisibleForTesting\n    boolean isValidTagValue(int tag) {\n        return tag >= MIN_TAG && tag <= MAX_TAG\n                && !(tag >= SYS_RESERVED_START && tag <= SYS_RESERVED_END);\n    }", "signature": "boolean isValidTagValue(int tag)", "full_signature": "@VisibleForTesting boolean isValidTagValue(int tag)", "class_method_signature": "UserTypeValidationPostProcessor.isValidTagValue(int tag)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 32651977, "url": "https://github.com/protostuff/protostuff-compiler", "language": "Java", "is_fork": false, "fork_count": 20, "stargazer_count": 30, "size": 1539, "license": "licensed"}}