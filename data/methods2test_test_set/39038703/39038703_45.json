{"test_class": {"identifier": "ProviderStackTest", "superclass": "", "interfaces": "", "fields": [], "file": "dspace-services/src/test/java/org/dspace/utils/servicemanager/ProviderStackTest.java"}, "test_case": {"identifier": "testRefresh", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRefresh() {\n        Provider p1 = new OrderedProvider(\"aaa\", 2);\n        Provider p2 = new UnorderedProvider(\"ccc\");\n        ProviderStack<Provider> providers = new ProviderStack<Provider>(new Provider[] {\n                p2,\n                new UnorderedProvider(\"ddd\"),\n                new OrderedProvider(\"bbb\", 5),\n                p1\n        });\n\n        assertNotNull(providers.hashCode());\n        assertNotNull(providers.toString());\n        assertEquals(4, providers.size());\n\n        providers.refresh();\n        assertEquals(4, providers.size());\n\n        System.gc(); // should wipe the 2 without a reference\n        providers.refresh();\n        assertEquals(2, providers.size());\n        assertEquals(p1, providers.getProvider(0));\n        assertEquals(p2, providers.getProvider(1));\n\n        p1 = null;\n        System.gc(); // should wipe the p1\n        providers.refresh();\n        assertEquals(1, providers.size());\n        assertEquals(p2, providers.getProvider(0));\n\n        p2 = null;\n        providers.clear();\n        providers = null;\n    }", "signature": "void testRefresh()", "full_signature": "@Test public void testRefresh()", "class_method_signature": "ProviderStackTest.testRefresh()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "hashCode", "assertNotNull", "toString", "assertEquals", "size", "refresh", "assertEquals", "size", "gc", "refresh", "assertEquals", "size", "assertEquals", "getProvider", "assertEquals", "getProvider", "gc", "refresh", "assertEquals", "size", "assertEquals", "getProvider", "clear"]}, "focal_class": {"identifier": "ProviderStack", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final List<ProviderHolder<T>> providers;", "modifier": "protected final", "type": "List<ProviderHolder<T>>", "declarator": "providers", "var_name": "providers"}], "methods": [{"identifier": "ProviderStack", "parameters": "()", "modifiers": "public", "return": "", "signature": " ProviderStack()", "full_signature": "public  ProviderStack()", "class_method_signature": "ProviderStack.ProviderStack()", "testcase": false, "constructor": true}, {"identifier": "ProviderStack", "parameters": "(ServiceManager serviceManager, Class<T> providerType)", "modifiers": "public", "return": "", "signature": " ProviderStack(ServiceManager serviceManager, Class<T> providerType)", "full_signature": "public  ProviderStack(ServiceManager serviceManager, Class<T> providerType)", "class_method_signature": "ProviderStack.ProviderStack(ServiceManager serviceManager, Class<T> providerType)", "testcase": false, "constructor": true}, {"identifier": "ProviderStack", "parameters": "(T[] currentProviders)", "modifiers": "public", "return": "", "signature": " ProviderStack(T[] currentProviders)", "full_signature": "public  ProviderStack(T[] currentProviders)", "class_method_signature": "ProviderStack.ProviderStack(T[] currentProviders)", "testcase": false, "constructor": true}, {"identifier": "addProvider", "parameters": "(T provider)", "modifiers": "public", "return": "int", "signature": "int addProvider(T provider)", "full_signature": "public int addProvider(T provider)", "class_method_signature": "ProviderStack.addProvider(T provider)", "testcase": false, "constructor": false}, {"identifier": "removeProvider", "parameters": "(final int position)", "modifiers": "public", "return": "boolean", "signature": "boolean removeProvider(final int position)", "full_signature": "public boolean removeProvider(final int position)", "class_method_signature": "ProviderStack.removeProvider(final int position)", "testcase": false, "constructor": false}, {"identifier": "removeProvider", "parameters": "(T provider)", "modifiers": "public", "return": "boolean", "signature": "boolean removeProvider(T provider)", "full_signature": "public boolean removeProvider(T provider)", "class_method_signature": "ProviderStack.removeProvider(T provider)", "testcase": false, "constructor": false}, {"identifier": "getProviders", "parameters": "()", "modifiers": "public", "return": "List<T>", "signature": "List<T> getProviders()", "full_signature": "public List<T> getProviders()", "class_method_signature": "ProviderStack.getProviders()", "testcase": false, "constructor": false}, {"identifier": "getProviderHolders", "parameters": "()", "modifiers": "public", "return": "List<ProviderHolder<T>>", "signature": "List<ProviderHolder<T>> getProviderHolders()", "full_signature": "public List<ProviderHolder<T>> getProviderHolders()", "class_method_signature": "ProviderStack.getProviderHolders()", "testcase": false, "constructor": false}, {"identifier": "getIterator", "parameters": "()", "modifiers": "public", "return": "Iterator<T>", "signature": "Iterator<T> getIterator()", "full_signature": "public Iterator<T> getIterator()", "class_method_signature": "ProviderStack.getIterator()", "testcase": false, "constructor": false}, {"identifier": "getProvider", "parameters": "(final int position)", "modifiers": "public", "return": "T", "signature": "T getProvider(final int position)", "full_signature": "public T getProvider(final int position)", "class_method_signature": "ProviderStack.getProvider(final int position)", "testcase": false, "constructor": false}, {"identifier": "getProviderHolder", "parameters": "(final int position)", "modifiers": "public", "return": "ProviderHolder<T>", "signature": "ProviderHolder<T> getProviderHolder(final int position)", "full_signature": "public ProviderHolder<T> getProviderHolder(final int position)", "class_method_signature": "ProviderStack.getProviderHolder(final int position)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "ProviderStack.size()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "ProviderStack.clear()", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "protected", "return": "List<T>", "signature": "List<T> refresh()", "full_signature": "protected List<T> refresh()", "class_method_signature": "ProviderStack.refresh()", "testcase": false, "constructor": false}], "file": "dspace-services/src/main/java/org/dspace/utils/servicemanager/ProviderStack.java"}, "focal_method": {"identifier": "refresh", "parameters": "()", "modifiers": "protected", "return": "List<T>", "body": "protected List<T> refresh() {\n        ArrayList<T> l = new ArrayList<T>();\n        for (Iterator<ProviderHolder<T>> iterator = providers.iterator(); iterator.hasNext();) {\n            ProviderHolder<T> holder = iterator.next();\n            T provider = holder.getProvider();\n            if (provider == null) {\n                iterator.remove();\n            } else {\n                l.add(provider);\n            }\n        }\n        return l;\n    }", "signature": "List<T> refresh()", "full_signature": "protected List<T> refresh()", "class_method_signature": "ProviderStack.refresh()", "testcase": false, "constructor": false, "invocations": ["iterator", "hasNext", "next", "getProvider", "remove", "add"]}, "repository": {"repo_id": 39038703, "url": "https://github.com/VTUL/vtechworks", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 112021, "license": "licensed"}}