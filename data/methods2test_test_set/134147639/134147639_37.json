{"test_class": {"identifier": "SignatureUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-util/src/test/java/com/webauthn4j/util/SignatureUtilTest.java"}, "test_case": {"identifier": "createSignature_test_with_null", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void createSignature_test_with_null() {\n        Throwable t = assertThrows(IllegalArgumentException.class,\n                () -> SignatureUtil.createSignature(null)\n        );\n        assertThat(t).hasMessage(\"algorithm is required; it must not be null\");\n    }", "signature": "void createSignature_test_with_null()", "full_signature": "@Test void createSignature_test_with_null()", "class_method_signature": "SignatureUtilTest.createSignature_test_with_null()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "createSignature", "hasMessage", "assertThat"]}, "focal_class": {"identifier": "SignatureUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SignatureUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " SignatureUtil()", "full_signature": "private  SignatureUtil()", "class_method_signature": "SignatureUtil.SignatureUtil()", "testcase": false, "constructor": true}, {"identifier": "getRS256", "parameters": "()", "modifiers": "@Deprecated public static", "return": "Signature", "signature": "Signature getRS256()", "full_signature": "@Deprecated public static Signature getRS256()", "class_method_signature": "SignatureUtil.getRS256()", "testcase": false, "constructor": false}, {"identifier": "getES256", "parameters": "()", "modifiers": "@Deprecated public static", "return": "Signature", "signature": "Signature getES256()", "full_signature": "@Deprecated public static Signature getES256()", "class_method_signature": "SignatureUtil.getES256()", "testcase": false, "constructor": false}, {"identifier": "createRS256", "parameters": "()", "modifiers": "public static", "return": "Signature", "signature": "Signature createRS256()", "full_signature": "public static Signature createRS256()", "class_method_signature": "SignatureUtil.createRS256()", "testcase": false, "constructor": false}, {"identifier": "createES256", "parameters": "()", "modifiers": "public static", "return": "Signature", "signature": "Signature createES256()", "full_signature": "public static Signature createES256()", "class_method_signature": "SignatureUtil.createES256()", "testcase": false, "constructor": false}, {"identifier": "createSignature", "parameters": "(String algorithm)", "modifiers": "public static", "return": "Signature", "signature": "Signature createSignature(String algorithm)", "full_signature": "public static Signature createSignature(String algorithm)", "class_method_signature": "SignatureUtil.createSignature(String algorithm)", "testcase": false, "constructor": false}], "file": "webauthn4j-util/src/main/java/com/webauthn4j/util/SignatureUtil.java"}, "focal_method": {"identifier": "createSignature", "parameters": "(String algorithm)", "modifiers": "public static", "return": "Signature", "body": "public static Signature createSignature(String algorithm) {\n        AssertUtil.notNull(algorithm, \"algorithm is required; it must not be null\");\n        try {\n            return Signature.getInstance(algorithm);\n        } catch (NoSuchAlgorithmException e) {\n            throw new IllegalArgumentException(e);\n        }\n    }", "signature": "Signature createSignature(String algorithm)", "full_signature": "public static Signature createSignature(String algorithm)", "class_method_signature": "SignatureUtil.createSignature(String algorithm)", "testcase": false, "constructor": false, "invocations": ["notNull", "getInstance"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}