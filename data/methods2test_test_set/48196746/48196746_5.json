{"test_class": {"identifier": "ListUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "code-assert-core/src/test/java/guru/nidi/codeassert/util/ListUtilsTest.java"}, "test_case": {"identifier": "notStringArray", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void notStringArray() {\n        assertEquals(\"1,2\", join(\",\", new Integer[]{1, 2}));\n    }", "signature": "void notStringArray()", "full_signature": "@Test void notStringArray()", "class_method_signature": "ListUtilsTest.notStringArray()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "join"]}, "focal_class": {"identifier": "ListUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ListUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ListUtils()", "full_signature": "private  ListUtils()", "class_method_signature": "ListUtils.ListUtils()", "testcase": false, "constructor": true}, {"identifier": "andJoin", "parameters": "(Object first, Object[] os)", "modifiers": "public static", "return": "String", "signature": "String andJoin(Object first, Object[] os)", "full_signature": "public static String andJoin(Object first, Object[] os)", "class_method_signature": "ListUtils.andJoin(Object first, Object[] os)", "testcase": false, "constructor": false}, {"identifier": "andJoin", "parameters": "(Object first, List<?> os)", "modifiers": "public static", "return": "String", "signature": "String andJoin(Object first, List<?> os)", "full_signature": "public static String andJoin(Object first, List<?> os)", "class_method_signature": "ListUtils.andJoin(Object first, List<?> os)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String sep, Object[] os)", "modifiers": "public static", "return": "String", "signature": "String join(String sep, Object[] os)", "full_signature": "public static String join(String sep, Object[] os)", "class_method_signature": "ListUtils.join(String sep, Object[] os)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String sep, List<?> os)", "modifiers": "public static", "return": "String", "signature": "String join(String sep, List<?> os)", "full_signature": "public static String join(String sep, List<?> os)", "class_method_signature": "ListUtils.join(String sep, List<?> os)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(List<T> a, List<T> b)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> concat(List<T> a, List<T> b)", "full_signature": "public static List<T> concat(List<T> a, List<T> b)", "class_method_signature": "ListUtils.concat(List<T> a, List<T> b)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(EnumSet<T> a, EnumSet<T> b)", "modifiers": "public static", "return": "EnumSet<T>", "signature": "EnumSet<T> concat(EnumSet<T> a, EnumSet<T> b)", "full_signature": "public static EnumSet<T> concat(EnumSet<T> a, EnumSet<T> b)", "class_method_signature": "ListUtils.concat(EnumSet<T> a, EnumSet<T> b)", "testcase": false, "constructor": false}], "file": "code-assert-core/src/main/java/guru/nidi/codeassert/util/ListUtils.java"}, "focal_method": {"identifier": "join", "parameters": "(String sep, Object[] os)", "modifiers": "public static", "return": "String", "body": "public static String join(String sep, Object[] os) {\n        return join(sep, asList(os));\n    }", "signature": "String join(String sep, Object[] os)", "full_signature": "public static String join(String sep, Object[] os)", "class_method_signature": "ListUtils.join(String sep, Object[] os)", "testcase": false, "constructor": false, "invocations": ["join", "asList"]}, "repository": {"repo_id": 48196746, "url": "https://github.com/nidi3/code-assert", "stars": 67, "created": "12/17/2015 8:30:58 PM +00:00", "updates": "2019-12-16T11:54:24+00:00", "fork": "False", "license": "licensed"}}