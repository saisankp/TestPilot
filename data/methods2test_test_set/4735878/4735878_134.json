{"test_class": {"identifier": "ColorHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/core-map/src/test/java/org/orbisgis/coremap/renderer/se/parameter/color/ColorHelperTest.java"}, "test_case": {"identifier": "testColorSpace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testColorSpace() throws IOException{\n        BufferedImage colorSpace = ColorHelper.getColorSpaceImage();\n            File file = new File(\"/tmp/colorSpace.png\");\n            ImageIO.write(colorSpace, \"png\", file);\n    }", "signature": "void testColorSpace()", "full_signature": "@Test public void testColorSpace()", "class_method_signature": "ColorHelperTest.testColorSpace()", "testcase": true, "constructor": false, "invocations": ["getColorSpaceImage", "write"]}, "focal_class": {"identifier": "ColorHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int MAX_RGB_VALUE = 255;", "modifier": "public static final", "type": "int", "declarator": "MAX_RGB_VALUE = 255", "var_name": "MAX_RGB_VALUE"}, {"original_string": "private static final float INTERVAL_SIZE = 60.0f;", "modifier": "private static final", "type": "float", "declarator": "INTERVAL_SIZE = 60.0f", "var_name": "INTERVAL_SIZE"}, {"original_string": "private static final float DEGREES = 360.0f;", "modifier": "private static final", "type": "float", "declarator": "DEGREES = 360.0f", "var_name": "DEGREES"}], "methods": [{"identifier": "ColorHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " ColorHelper()", "full_signature": "private  ColorHelper()", "class_method_signature": "ColorHelper.ColorHelper()", "testcase": false, "constructor": true}, {"identifier": "getColorWithAlpha", "parameters": "(Color c, double alpha)", "modifiers": "public static", "return": "Color", "signature": "Color getColorWithAlpha(Color c, double alpha)", "full_signature": "public static Color getColorWithAlpha(Color c, double alpha)", "class_method_signature": "ColorHelper.getColorWithAlpha(Color c, double alpha)", "testcase": false, "constructor": false}, {"identifier": "invert", "parameters": "(Color c)", "modifiers": "public static", "return": "Color", "signature": "Color invert(Color c)", "full_signature": "public static Color invert(Color c)", "class_method_signature": "ColorHelper.invert(Color c)", "testcase": false, "constructor": false}, {"identifier": "getColorFromHSL", "parameters": "(double h, double s, double l)", "modifiers": "public static", "return": "Color", "signature": "Color getColorFromHSL(double h, double s, double l)", "full_signature": "public static Color getColorFromHSL(double h, double s, double l)", "class_method_signature": "ColorHelper.getColorFromHSL(double h, double s, double l)", "testcase": false, "constructor": false}, {"identifier": "getColorSpaceImage", "parameters": "()", "modifiers": "public static", "return": "BufferedImage", "signature": "BufferedImage getColorSpaceImage()", "full_signature": "public static BufferedImage getColorSpaceImage()", "class_method_signature": "ColorHelper.getColorSpaceImage()", "testcase": false, "constructor": false}, {"identifier": "getHue", "parameters": "(Color color)", "modifiers": "public static", "return": "float", "signature": "float getHue(Color color)", "full_signature": "public static float getHue(Color color)", "class_method_signature": "ColorHelper.getHue(Color color)", "testcase": false, "constructor": false}, {"identifier": "getLightness", "parameters": "(Color color)", "modifiers": "public static", "return": "float", "signature": "float getLightness(Color color)", "full_signature": "public static float getLightness(Color color)", "class_method_signature": "ColorHelper.getLightness(Color color)", "testcase": false, "constructor": false}], "file": "bundles/core-map/src/main/java/org/orbisgis/coremap/renderer/se/parameter/color/ColorHelper.java"}, "focal_method": {"identifier": "getColorSpaceImage", "parameters": "()", "modifiers": "public static", "return": "BufferedImage", "body": "public static BufferedImage getColorSpaceImage(){\n        BufferedImage colorSpace = new BufferedImage(150,250, BufferedImage.TYPE_INT_RGB);\n        Graphics g2 = colorSpace.getGraphics();\n\n        double dh = (double) DEGREES / (colorSpace.getHeight() - 1);\n        double dl = 1.0 / (colorSpace.getWidth() - 1);\n\n        g2.setColor(Color.red);\n        g2.fillRect(0, 0, colorSpace.getWidth(), colorSpace.getHeight());\n        int x, y;\n        double h, s, l;\n        s = 0.5f;\n        for (x = 0; x < colorSpace.getWidth(); x++) {\n            l = (x * dl);\n            for (y = 0; y < colorSpace.getHeight(); y++) {\n                h = dh*y;\n                Color hslColor = ColorHelper.getColorFromHSL(h, s, l);\n                g2.setColor(hslColor);\n                g2.fillRect(x, y, 1, 1);\n            }\n        }\n\n        return colorSpace;\n    }", "signature": "BufferedImage getColorSpaceImage()", "full_signature": "public static BufferedImage getColorSpaceImage()", "class_method_signature": "ColorHelper.getColorSpaceImage()", "testcase": false, "constructor": false, "invocations": ["getGraphics", "getHeight", "getWidth", "setColor", "fillRect", "getWidth", "getHeight", "getWidth", "getHeight", "getColorFromHSL", "setColor", "fillRect"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}