{"test_class": {"identifier": "CrescentCollectionHandlerTest", "superclass": "extends CrescentTestCaseUtil", "interfaces": "", "fields": [], "file": "crescent_core_web/src/test/java/com/tistory/devyongsik/crescent/config/CrescentCollectionHandlerTest.java"}, "test_case": {"identifier": "writeToXML", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void writeToXML() {\n\t\tCrescentCollectionHandler collectionHandler \n\t\t\t= SpringApplicationContext.getBean(\"crescentCollectionHandler\", CrescentCollectionHandler.class);\n\t\t\n\t\tCrescentCollections collections = collectionHandler.getCrescentCollections();\n\t\t\n\t\tSystem.out.println(collections);\n\t\t\n\t\tAssert.assertNotNull(collections);\n\t\t\n\t\tcollectionHandler.writeToXML();\n\t\tcollectionHandler.reloadCollectionsXML();\n\t\t\n\t\tCrescentCollections collections2 = collectionHandler.getCrescentCollections();\n\t\t\n\t\tSystem.out.println(collections2);\n\t}", "signature": "void writeToXML()", "full_signature": "@Test public void writeToXML()", "class_method_signature": "CrescentCollectionHandlerTest.writeToXML()", "testcase": true, "constructor": false, "invocations": ["getBean", "getCrescentCollections", "println", "assertNotNull", "writeToXML", "reloadCollectionsXML", "getCrescentCollections", "println"]}, "focal_class": {"identifier": "CrescentCollectionHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private  Logger logger = LoggerFactory.getLogger(CrescentCollectionHandler.class);", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CrescentCollectionHandler.class)", "var_name": "logger"}, {"original_string": "@Value(\"#{systemProperties['runningMode'] == null ? 'real' : systemProperties['runningMode']}\")\n\tprivate String mode = null;", "modifier": "@Value(\"#{systemProperties['runningMode'] == null ? 'real' : systemProperties['runningMode']}\")\n\tprivate", "type": "String", "declarator": "mode = null", "var_name": "mode"}, {"original_string": "@Value(\"#{systemProperties['crescentHome'] == null ? 'default' : systemProperties['crescentHome']}\")\n\tprivate String crescentHomeLocation = null;", "modifier": "@Value(\"#{systemProperties['crescentHome'] == null ? 'default' : systemProperties['crescentHome']}\")\n\tprivate", "type": "String", "declarator": "crescentHomeLocation = null", "var_name": "crescentHomeLocation"}, {"original_string": "private CrescentCollections crescentCollections = null;", "modifier": "private", "type": "CrescentCollections", "declarator": "crescentCollections = null", "var_name": "crescentCollections"}, {"original_string": "private String collectionsXmlLocation = null;", "modifier": "private", "type": "String", "declarator": "collectionsXmlLocation = null", "var_name": "collectionsXmlLocation"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct private", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct private void init()", "class_method_signature": "CrescentCollectionHandler.init()", "testcase": false, "constructor": false}, {"identifier": "loadFromXML", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadFromXML()", "full_signature": "private void loadFromXML()", "class_method_signature": "CrescentCollectionHandler.loadFromXML()", "testcase": false, "constructor": false}, {"identifier": "getCrescentCollections", "parameters": "()", "modifiers": "public", "return": "CrescentCollections", "signature": "CrescentCollections getCrescentCollections()", "full_signature": "public CrescentCollections getCrescentCollections()", "class_method_signature": "CrescentCollectionHandler.getCrescentCollections()", "testcase": false, "constructor": false}, {"identifier": "writeToXML", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeToXML()", "full_signature": "public void writeToXML()", "class_method_signature": "CrescentCollectionHandler.writeToXML()", "testcase": false, "constructor": false}, {"identifier": "makeFieldsMap", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void makeFieldsMap()", "full_signature": "private void makeFieldsMap()", "class_method_signature": "CrescentCollectionHandler.makeFieldsMap()", "testcase": false, "constructor": false}, {"identifier": "makeAddtionalFields", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void makeAddtionalFields()", "full_signature": "private void makeAddtionalFields()", "class_method_signature": "CrescentCollectionHandler.makeAddtionalFields()", "testcase": false, "constructor": false}, {"identifier": "reloadCollectionsXML", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reloadCollectionsXML()", "full_signature": "public void reloadCollectionsXML()", "class_method_signature": "CrescentCollectionHandler.reloadCollectionsXML()", "testcase": false, "constructor": false}], "file": "crescent_core_web/src/main/java/com/tistory/devyongsik/crescent/config/CrescentCollectionHandler.java"}, "focal_method": {"identifier": "writeToXML", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void writeToXML() {\n\t\t\n\t\tResourceLoader resourceLoader = new ResourceLoader(collectionsXmlLocation);\n\t\tURL collectionXmlUrl = resourceLoader.getURL();\n\t\t\n\t\tXStream stream = new XStream();\n\t\tstream.processAnnotations(CrescentCollections.class);\n\t\t\n\t\tlogger.debug(\"collectionXmlUrl : {}\", collectionXmlUrl);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tFile collectionsXmlFile = new File(collectionXmlUrl.toURI());\n\t\t\t\n\t\t\tlogger.debug(\"collectionXmlUrl to URI: {}\", collectionXmlUrl.toURI());\n\t\t\tlogger.debug(\"collectionsXmlFile : {}\", collectionsXmlFile);\n\t\t\t\n\t\t\tFileOutputStream fos = new FileOutputStream(collectionsXmlFile, false);\n\t\t\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos, Charset.forName(\"utf-8\")));\n\t\t\t\n\t\t\tstream.toXML(this.crescentCollections, bw);\n\t\t\t\n\t\t\tbw.close();\n\t\t\tfos.close();\n\t\t\n\t\t} catch (URISyntaxException e) {\n\t\t\te.printStackTrace();\n\t\t\tlogger.error(\"error : \", e);\n\t\t\t\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t\tlogger.error(\"error : \", e);\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t\tlogger.error(\"error : \", e);\n\t\t\t\n\t\t}\t\n\t}", "signature": "void writeToXML()", "full_signature": "public void writeToXML()", "class_method_signature": "CrescentCollectionHandler.writeToXML()", "testcase": false, "constructor": false, "invocations": ["getURL", "processAnnotations", "debug", "toURI", "debug", "toURI", "debug", "forName", "toXML", "close", "close", "printStackTrace", "error", "printStackTrace", "error", "printStackTrace", "error"]}, "repository": {"repo_id": 5426789, "url": "https://github.com/need4spd/crescent", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 15, "size": 50982, "license": "licensed"}}