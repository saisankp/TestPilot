{"test_class": {"identifier": "RetryActionInterceptorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ATTR_NAME = \"test.retry\";", "modifier": "private static final", "type": "String", "declarator": "ATTR_NAME = \"test.retry\"", "var_name": "ATTR_NAME"}, {"original_string": "private static final long INITIAL_DELAY_MS = 100;", "modifier": "private static final", "type": "long", "declarator": "INITIAL_DELAY_MS = 100", "var_name": "INITIAL_DELAY_MS"}, {"original_string": "private static final long MAX_DELAY_MS = 1000;", "modifier": "private static final", "type": "long", "declarator": "MAX_DELAY_MS = 1000", "var_name": "MAX_DELAY_MS"}, {"original_string": "private static final int RETRY_LIMIT = 3;", "modifier": "private static final", "type": "int", "declarator": "RETRY_LIMIT = 3", "var_name": "RETRY_LIMIT"}, {"original_string": "private static final Retryer RETRY_POLICY = Retryers.exponentialBackoff(INITIAL_DELAY_MS, MAX_DELAY_MS, TimeUnit.MILLISECONDS, RETRY_LIMIT);", "modifier": "private static final", "type": "Retryer", "declarator": "RETRY_POLICY = Retryers.exponentialBackoff(INITIAL_DELAY_MS, MAX_DELAY_MS, TimeUnit.MILLISECONDS, RETRY_LIMIT)", "var_name": "RETRY_POLICY"}, {"original_string": "private TestScheduler testScheduler = Schedulers.test();", "modifier": "private", "type": "TestScheduler", "declarator": "testScheduler = Schedulers.test()", "var_name": "testScheduler"}, {"original_string": "private final RetryActionInterceptor retryInterceptor = new RetryActionInterceptor(ATTR_NAME, RETRY_POLICY, testScheduler);", "modifier": "private final", "type": "RetryActionInterceptor", "declarator": "retryInterceptor = new RetryActionInterceptor(ATTR_NAME, RETRY_POLICY, testScheduler)", "var_name": "retryInterceptor"}, {"original_string": "private final ExtTestSubscriber<List<ModelActionHolder>> testSubscriber = new ExtTestSubscriber<>();", "modifier": "private final", "type": "ExtTestSubscriber<List<ModelActionHolder>>", "declarator": "testSubscriber = new ExtTestSubscriber<>()", "var_name": "testSubscriber"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/jobmanager/service/common/interceptor/RetryActionInterceptorTest.java"}, "test_case": {"identifier": "testSuccessfulActionsPassThrough", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSuccessfulActionsPassThrough() throws Exception {\n        retryInterceptor.apply(SampleTitusChangeActions.successfulJob()).apply().subscribe(testSubscriber);\n\n        List<ModelActionHolder> updateAction = testSubscriber.takeNext();\n        assertThat(updateAction.get(0).getAction()).isInstanceOf(RetryActionInterceptor.RemoveRetryRecord.class);\n\n        testSubscriber.assertOnCompleted();\n    }", "signature": "void testSuccessfulActionsPassThrough()", "full_signature": "@Test public void testSuccessfulActionsPassThrough()", "class_method_signature": "RetryActionInterceptorTest.testSuccessfulActionsPassThrough()", "testcase": true, "constructor": false, "invocations": ["subscribe", "apply", "apply", "successfulJob", "takeNext", "isInstanceOf", "assertThat", "getAction", "get", "assertOnCompleted"]}, "focal_class": {"identifier": "RetryActionInterceptor", "superclass": "", "interfaces": "implements TitusChangeActionInterceptor<Boolean>", "fields": [{"original_string": "private static final String ATTR_RETRY_RECORD_PREFIX = \"interceptor.retry.record.\";", "modifier": "private static final", "type": "String", "declarator": "ATTR_RETRY_RECORD_PREFIX = \"interceptor.retry.record.\"", "var_name": "ATTR_RETRY_RECORD_PREFIX"}, {"original_string": "private final String attrName;", "modifier": "private final", "type": "String", "declarator": "attrName", "var_name": "attrName"}, {"original_string": "private final Retryer initialRetryPolicy;", "modifier": "private final", "type": "Retryer", "declarator": "initialRetryPolicy", "var_name": "initialRetryPolicy"}, {"original_string": "private final Scheduler scheduler;", "modifier": "private final", "type": "Scheduler", "declarator": "scheduler", "var_name": "scheduler"}], "methods": [{"identifier": "RetryActionInterceptor", "parameters": "(String name,\n                                  Retryer initialRetryPolicy,\n                                  Scheduler scheduler)", "modifiers": "public", "return": "", "signature": " RetryActionInterceptor(String name,\n                                  Retryer initialRetryPolicy,\n                                  Scheduler scheduler)", "full_signature": "public  RetryActionInterceptor(String name,\n                                  Retryer initialRetryPolicy,\n                                  Scheduler scheduler)", "class_method_signature": "RetryActionInterceptor.RetryActionInterceptor(String name,\n                                  Retryer initialRetryPolicy,\n                                  Scheduler scheduler)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(TitusChangeAction changeAction)", "modifiers": "@Override public", "return": "TitusChangeAction", "signature": "TitusChangeAction apply(TitusChangeAction changeAction)", "full_signature": "@Override public TitusChangeAction apply(TitusChangeAction changeAction)", "class_method_signature": "RetryActionInterceptor.apply(TitusChangeAction changeAction)", "testcase": false, "constructor": false}, {"identifier": "executionLimits", "parameters": "(EntityHolder rootHolder)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean executionLimits(EntityHolder rootHolder)", "full_signature": "@Override public Boolean executionLimits(EntityHolder rootHolder)", "class_method_signature": "RetryActionInterceptor.executionLimits(EntityHolder rootHolder)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/common/interceptor/RetryActionInterceptor.java"}, "focal_method": {"identifier": "apply", "parameters": "(TitusChangeAction changeAction)", "modifiers": "@Override public", "return": "TitusChangeAction", "body": "@Override\n    public TitusChangeAction apply(TitusChangeAction changeAction) {\n        return new RetryChangeAction(changeAction);\n    }", "signature": "TitusChangeAction apply(TitusChangeAction changeAction)", "full_signature": "@Override public TitusChangeAction apply(TitusChangeAction changeAction)", "class_method_signature": "RetryActionInterceptor.apply(TitusChangeAction changeAction)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}