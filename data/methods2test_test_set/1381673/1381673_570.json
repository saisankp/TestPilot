{"test_class": {"identifier": "RemoveFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RemoveFunction removeFunction;", "modifier": "private", "type": "RemoveFunction", "declarator": "removeFunction", "var_name": "removeFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/RemoveFunctionTest.java"}, "test_case": {"identifier": "invokeNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeNull() {\n        FunctionTestUtil.assertResultError(removeFunction.invoke((List) null, null), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(removeFunction.invoke(null, BigDecimal.ONE), InvalidParametersEvent.class);\n        FunctionTestUtil.assertResultError(removeFunction.invoke(Collections.emptyList(), null), InvalidParametersEvent.class);\n    }", "signature": "void invokeNull()", "full_signature": "@Test public void invokeNull()", "class_method_signature": "RemoveFunctionTest.invokeNull()", "testcase": true, "constructor": false, "invocations": ["assertResultError", "invoke", "assertResultError", "invoke", "assertResultError", "invoke", "emptyList"]}, "focal_class": {"identifier": "RemoveFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "RemoveFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " RemoveFunction()", "full_signature": "public  RemoveFunction()", "class_method_signature": "RemoveFunction.RemoveFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position)", "modifiers": "public", "return": "FEELFnResult<List<Object>>", "signature": "FEELFnResult<List<Object>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position)", "full_signature": "public FEELFnResult<List<Object>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position)", "class_method_signature": "RemoveFunction.invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/RemoveFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position)", "modifiers": "public", "return": "FEELFnResult<List<Object>>", "body": "public FEELFnResult<List<Object>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position) {\n        if ( list == null ) { \n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"list\", \"cannot be null\"));\n        }\n        if ( position == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"position\", \"cannot be null\"));\n        }\n        if ( position.intValue() == 0 ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"position\", \"cannot be zero (parameter 'position' is 1-based)\"));\n        }\n        if ( position.abs().intValue() > list.size() ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"position\", \"inconsistent with 'list' size\"));\n        }\n        // spec requires us to return a new list\n        List<Object> result = new ArrayList<Object>( list );\n        if( position.intValue() > 0 ) {\n            result.remove( position.intValue()-1 );\n        } else {\n            result.remove( list.size()+position.intValue() );\n        }\n        return FEELFnResult.ofResult( result );\n    }", "signature": "FEELFnResult<List<Object>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position)", "full_signature": "public FEELFnResult<List<Object>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position)", "class_method_signature": "RemoveFunction.invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"position\" ) BigDecimal position)", "testcase": false, "constructor": false, "invocations": ["ofError", "ofError", "intValue", "ofError", "intValue", "abs", "size", "ofError", "intValue", "remove", "intValue", "remove", "size", "intValue", "ofResult"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}