{"test_class": {"identifier": "BearerAuthenticationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "BearerAuthentication auth = new BearerAuthentication(\n        new DefaultCredentialsProvider(),\n        mock(LoginClient.class)\n    );", "modifier": "", "type": "BearerAuthentication", "declarator": "auth = new BearerAuthentication(\n        new DefaultCredentialsProvider(),\n        mock(LoginClient.class)\n    )", "var_name": "auth"}], "file": "sdk/src/test/java/com/centurylink/cloud/sdk/core/auth/services/BearerAuthenticationTest.java"}, "test_case": {"identifier": "testBearerTokenFilter", "parameters": "()", "modifiers": "@Test(groups = INTEGRATION) public", "return": "void", "body": "@Test(groups = INTEGRATION)\n    public void testBearerTokenFilter() throws Exception {\n        mockLogin();\n        ClientRequestContext context = stubRequestContext();\n\n        auth.filter(context);\n\n        assert context.getHeaders().get(\"Authorization\") != null;\n    }", "signature": "void testBearerTokenFilter()", "full_signature": "@Test(groups = INTEGRATION) public void testBearerTokenFilter()", "class_method_signature": "BearerAuthenticationTest.testBearerTokenFilter()", "testcase": true, "constructor": false, "invocations": ["mockLogin", "stubRequestContext", "filter", "get", "getHeaders"]}, "focal_class": {"identifier": "BearerAuthentication", "superclass": "", "interfaces": "implements ClientRequestFilter", "fields": [{"original_string": "private final CredentialsProvider credentialsProvider;", "modifier": "private final", "type": "CredentialsProvider", "declarator": "credentialsProvider", "var_name": "credentialsProvider"}, {"original_string": "private final LoginClient client;", "modifier": "private final", "type": "LoginClient", "declarator": "client", "var_name": "client"}, {"original_string": "private volatile SessionCredentials session;", "modifier": "private volatile", "type": "SessionCredentials", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "BearerAuthentication", "parameters": "(CredentialsProvider credentialsProvider, LoginClient client)", "modifiers": "public", "return": "", "signature": " BearerAuthentication(CredentialsProvider credentialsProvider, LoginClient client)", "full_signature": "public  BearerAuthentication(CredentialsProvider credentialsProvider, LoginClient client)", "class_method_signature": "BearerAuthentication.BearerAuthentication(CredentialsProvider credentialsProvider, LoginClient client)", "testcase": false, "constructor": true}, {"identifier": "getLoginClient", "parameters": "()", "modifiers": "public", "return": "LoginClient", "signature": "LoginClient getLoginClient()", "full_signature": "public LoginClient getLoginClient()", "class_method_signature": "BearerAuthentication.getLoginClient()", "testcase": false, "constructor": false}, {"identifier": "requestSessionCredentialsIfNeeded", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void requestSessionCredentialsIfNeeded()", "full_signature": "private void requestSessionCredentialsIfNeeded()", "class_method_signature": "BearerAuthentication.requestSessionCredentialsIfNeeded()", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(ClientRequestContext requestContext)", "modifiers": "@Override public", "return": "void", "signature": "void filter(ClientRequestContext requestContext)", "full_signature": "@Override public void filter(ClientRequestContext requestContext)", "class_method_signature": "BearerAuthentication.filter(ClientRequestContext requestContext)", "testcase": false, "constructor": false}, {"identifier": "requestNewSessionCredentials", "parameters": "()", "modifiers": "private", "return": "SessionCredentials", "signature": "SessionCredentials requestNewSessionCredentials()", "full_signature": "private SessionCredentials requestNewSessionCredentials()", "class_method_signature": "BearerAuthentication.requestNewSessionCredentials()", "testcase": false, "constructor": false}, {"identifier": "curCredentials", "parameters": "()", "modifiers": "private", "return": "Credentials", "signature": "Credentials curCredentials()", "full_signature": "private Credentials curCredentials()", "class_method_signature": "BearerAuthentication.curCredentials()", "testcase": false, "constructor": false}, {"identifier": "getAccountAlias", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAccountAlias()", "full_signature": "public String getAccountAlias()", "class_method_signature": "BearerAuthentication.getAccountAlias()", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/centurylink/cloud/sdk/core/auth/services/BearerAuthentication.java"}, "focal_method": {"identifier": "filter", "parameters": "(ClientRequestContext requestContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void filter(ClientRequestContext requestContext) throws IOException {\n        requestSessionCredentialsIfNeeded();\n\n        requestContext\n            .getHeaders()\n            .putSingle(AUTHORIZATION, session.getToken().toHeaderString());\n    }", "signature": "void filter(ClientRequestContext requestContext)", "full_signature": "@Override public void filter(ClientRequestContext requestContext)", "class_method_signature": "BearerAuthentication.filter(ClientRequestContext requestContext)", "testcase": false, "constructor": false, "invocations": ["requestSessionCredentialsIfNeeded", "putSingle", "getHeaders", "toHeaderString", "getToken"]}, "repository": {"repo_id": 31234709, "url": "https://github.com/CenturyLinkCloud/clc-java-sdk", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 5036, "license": "licensed"}}