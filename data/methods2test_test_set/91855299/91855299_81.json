{"test_class": {"identifier": "SerializationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] fooBarBytes = new byte[]{\n      0, 0, 0, 2,                // array length\n      0, 0, 0, 3, 'f', 'o', 'o', // \"foo\", encoded with length\n      0, 0, 0, 3, 'b', 'a', 'r'  // \"bar\", encoded with length\n  };", "modifier": "private static final", "type": "byte[]", "declarator": "fooBarBytes = new byte[]{\n      0, 0, 0, 2,                // array length\n      0, 0, 0, 3, 'f', 'o', 'o', // \"foo\", encoded with length\n      0, 0, 0, 3, 'b', 'a', 'r'  // \"bar\", encoded with length\n  }", "var_name": "fooBarBytes"}, {"original_string": "private static final String grinningEmoji = \"\ud83d\ude01\";", "modifier": "private static final", "type": "String", "declarator": "grinningEmoji = \"\ud83d\ude01\";", "var_name": "grinningEmoji"}], "file": "api/src/test/java/edu/wpi/first/shuffleboard/api/sources/recording/SerializationTest.java"}, "test_case": {"identifier": "testIntToBytes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testIntToBytes() {\n    final int val = 0x007F10FF;\n    byte[] bytes = Serialization.toByteArray(val);\n    assertArrayEquals(new byte[]{0x00, 0x7F, 0x10, (byte) 0xFF}, bytes);\n  }", "signature": "void testIntToBytes()", "full_signature": "@Test public void testIntToBytes()", "class_method_signature": "SerializationTest.testIntToBytes()", "testcase": true, "constructor": false, "invocations": ["toByteArray", "assertArrayEquals"]}, "focal_class": {"identifier": "Serialization", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(Serialization.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(Serialization.class.getName())", "var_name": "log"}, {"original_string": "public static final int MAGIC_NUMBER = 0xBEEF_FACE;", "modifier": "public static final", "type": "int", "declarator": "MAGIC_NUMBER = 0xBEEF_FACE", "var_name": "MAGIC_NUMBER"}, {"original_string": "public static final int VERSION = 4;", "modifier": "public static final", "type": "int", "declarator": "VERSION = 4", "var_name": "VERSION"}, {"original_string": "public static final int SIZE_OF_BYTE = 1;", "modifier": "public static final", "type": "int", "declarator": "SIZE_OF_BYTE = 1", "var_name": "SIZE_OF_BYTE"}, {"original_string": "public static final int SIZE_OF_BOOL = 1;", "modifier": "public static final", "type": "int", "declarator": "SIZE_OF_BOOL = 1", "var_name": "SIZE_OF_BOOL"}, {"original_string": "public static final int SIZE_OF_SHORT = 2;", "modifier": "public static final", "type": "int", "declarator": "SIZE_OF_SHORT = 2", "var_name": "SIZE_OF_SHORT"}, {"original_string": "public static final int SIZE_OF_INT = 4;", "modifier": "public static final", "type": "int", "declarator": "SIZE_OF_INT = 4", "var_name": "SIZE_OF_INT"}, {"original_string": "public static final int SIZE_OF_LONG = 8;", "modifier": "public static final", "type": "int", "declarator": "SIZE_OF_LONG = 8", "var_name": "SIZE_OF_LONG"}, {"original_string": "public static final int SIZE_OF_DOUBLE = 8;", "modifier": "public static final", "type": "int", "declarator": "SIZE_OF_DOUBLE = 8", "var_name": "SIZE_OF_DOUBLE"}], "methods": [{"identifier": "Serialization", "parameters": "()", "modifiers": "private", "return": "", "signature": " Serialization()", "full_signature": "private  Serialization()", "class_method_signature": "Serialization.Serialization()", "testcase": false, "constructor": true}, {"identifier": "saveRecording", "parameters": "(Recording recording, Path file)", "modifiers": "public static", "return": "void", "signature": "void saveRecording(Recording recording, Path file)", "full_signature": "public static void saveRecording(Recording recording, Path file)", "class_method_signature": "Serialization.saveRecording(Recording recording, Path file)", "testcase": false, "constructor": false}, {"identifier": "updateRecordingSave", "parameters": "(Recording recording, Path file)", "modifiers": "@SuppressWarnings(\"PMD.ExcessiveMethodLength\") public static", "return": "void", "signature": "void updateRecordingSave(Recording recording, Path file)", "full_signature": "@SuppressWarnings(\"PMD.ExcessiveMethodLength\") public static void updateRecordingSave(Recording recording, Path file)", "class_method_signature": "Serialization.updateRecordingSave(Recording recording, Path file)", "testcase": false, "constructor": false}, {"identifier": "insertDataIntoFile", "parameters": "(Path path, long pos, byte[] data)", "modifiers": "private static", "return": "void", "signature": "void insertDataIntoFile(Path path, long pos, byte[] data)", "full_signature": "private static void insertDataIntoFile(Path path, long pos, byte[] data)", "class_method_signature": "Serialization.insertDataIntoFile(Path path, long pos, byte[] data)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(T value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encode(T value)", "full_signature": "public static byte[] encode(T value)", "class_method_signature": "Serialization.encode(T value)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(T value, DataType<T> type)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encode(T value, DataType<T> type)", "full_signature": "public static byte[] encode(T value, DataType<T> type)", "class_method_signature": "Serialization.encode(T value, DataType<T> type)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(byte[] buffer, int bufferPosition, DataType<T> type)", "modifiers": "public static", "return": "T", "signature": "T decode(byte[] buffer, int bufferPosition, DataType<T> type)", "full_signature": "public static T decode(byte[] buffer, int bufferPosition, DataType<T> type)", "class_method_signature": "Serialization.decode(byte[] buffer, int bufferPosition, DataType<T> type)", "testcase": false, "constructor": false}, {"identifier": "loadRecording", "parameters": "(Path file)", "modifiers": "public static", "return": "Recording", "signature": "Recording loadRecording(Path file)", "full_signature": "public static Recording loadRecording(Path file)", "class_method_signature": "Serialization.loadRecording(Path file)", "testcase": false, "constructor": false}, {"identifier": "sizeOfStringArray", "parameters": "(String[] array)", "modifiers": "public static", "return": "int", "signature": "int sizeOfStringArray(String[] array)", "full_signature": "public static int sizeOfStringArray(String[] array)", "class_method_signature": "Serialization.sizeOfStringArray(String[] array)", "testcase": false, "constructor": false}, {"identifier": "header", "parameters": "(List<TimestampedData> data)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] header(List<TimestampedData> data)", "full_signature": "public static byte[] header(List<TimestampedData> data)", "class_method_signature": "Serialization.header(List<TimestampedData> data)", "testcase": false, "constructor": false}, {"identifier": "generateConstantPool", "parameters": "(List<TimestampedData> data)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> generateConstantPool(List<TimestampedData> data)", "full_signature": "private static List<String> generateConstantPool(List<TimestampedData> data)", "class_method_signature": "Serialization.generateConstantPool(List<TimestampedData> data)", "testcase": false, "constructor": false}, {"identifier": "getAllSourceNames", "parameters": "(List<TimestampedData> data)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getAllSourceNames(List<TimestampedData> data)", "full_signature": "public static List<String> getAllSourceNames(List<TimestampedData> data)", "class_method_signature": "Serialization.getAllSourceNames(List<TimestampedData> data)", "testcase": false, "constructor": false}, {"identifier": "getAllDataTypeNames", "parameters": "(List<TimestampedData> data)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> getAllDataTypeNames(List<TimestampedData> data)", "full_signature": "private static List<String> getAllDataTypeNames(List<TimestampedData> data)", "class_method_signature": "Serialization.getAllDataTypeNames(List<TimestampedData> data)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(boolean val)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(boolean val)", "full_signature": "public static byte[] toByteArray(boolean val)", "class_method_signature": "Serialization.toByteArray(boolean val)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(byte val)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(byte val)", "full_signature": "public static byte[] toByteArray(byte val)", "class_method_signature": "Serialization.toByteArray(byte val)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(short val)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(short val)", "full_signature": "public static byte[] toByteArray(short val)", "class_method_signature": "Serialization.toByteArray(short val)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(int val)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(int val)", "full_signature": "public static byte[] toByteArray(int val)", "class_method_signature": "Serialization.toByteArray(int val)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(long val)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(long val)", "full_signature": "public static byte[] toByteArray(long val)", "class_method_signature": "Serialization.toByteArray(long val)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(double val)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(double val)", "full_signature": "public static byte[] toByteArray(double val)", "class_method_signature": "Serialization.toByteArray(double val)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(String string)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(String string)", "full_signature": "public static byte[] toByteArray(String string)", "class_method_signature": "Serialization.toByteArray(String string)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(String[] array)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(String[] array)", "full_signature": "public static byte[] toByteArray(String[] array)", "class_method_signature": "Serialization.toByteArray(String[] array)", "testcase": false, "constructor": false}, {"identifier": "subArray", "parameters": "(byte[] raw, int start, int end)", "modifiers": "@Deprecated public static", "return": "byte[]", "signature": "byte[] subArray(byte[] raw, int start, int end)", "full_signature": "@Deprecated public static byte[] subArray(byte[] raw, int start, int end)", "class_method_signature": "Serialization.subArray(byte[] raw, int start, int end)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(byte[] dst, byte[] src, int pos)", "modifiers": "public static", "return": "void", "signature": "void put(byte[] dst, byte[] src, int pos)", "full_signature": "public static void put(byte[] dst, byte[] src, int pos)", "class_method_signature": "Serialization.put(byte[] dst, byte[] src, int pos)", "testcase": false, "constructor": false}, {"identifier": "readBoolean", "parameters": "(byte[] array)", "modifiers": "public static", "return": "boolean", "signature": "boolean readBoolean(byte[] array)", "full_signature": "public static boolean readBoolean(byte[] array)", "class_method_signature": "Serialization.readBoolean(byte[] array)", "testcase": false, "constructor": false}, {"identifier": "readBoolean", "parameters": "(byte[] array, int pos)", "modifiers": "public static", "return": "boolean", "signature": "boolean readBoolean(byte[] array, int pos)", "full_signature": "public static boolean readBoolean(byte[] array, int pos)", "class_method_signature": "Serialization.readBoolean(byte[] array, int pos)", "testcase": false, "constructor": false}, {"identifier": "readShort", "parameters": "(byte[] array)", "modifiers": "public static", "return": "short", "signature": "short readShort(byte[] array)", "full_signature": "public static short readShort(byte[] array)", "class_method_signature": "Serialization.readShort(byte[] array)", "testcase": false, "constructor": false}, {"identifier": "readShort", "parameters": "(byte[] array, int pos)", "modifiers": "public static", "return": "short", "signature": "short readShort(byte[] array, int pos)", "full_signature": "public static short readShort(byte[] array, int pos)", "class_method_signature": "Serialization.readShort(byte[] array, int pos)", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "(byte[] array)", "modifiers": "public static", "return": "int", "signature": "int readInt(byte[] array)", "full_signature": "public static int readInt(byte[] array)", "class_method_signature": "Serialization.readInt(byte[] array)", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "(byte[] array, int pos)", "modifiers": "public static", "return": "int", "signature": "int readInt(byte[] array, int pos)", "full_signature": "public static int readInt(byte[] array, int pos)", "class_method_signature": "Serialization.readInt(byte[] array, int pos)", "testcase": false, "constructor": false}, {"identifier": "readLong", "parameters": "(byte[] array)", "modifiers": "public static", "return": "long", "signature": "long readLong(byte[] array)", "full_signature": "public static long readLong(byte[] array)", "class_method_signature": "Serialization.readLong(byte[] array)", "testcase": false, "constructor": false}, {"identifier": "readLong", "parameters": "(byte[] array, int pos)", "modifiers": "public static", "return": "long", "signature": "long readLong(byte[] array, int pos)", "full_signature": "public static long readLong(byte[] array, int pos)", "class_method_signature": "Serialization.readLong(byte[] array, int pos)", "testcase": false, "constructor": false}, {"identifier": "readDouble", "parameters": "(byte[] array, int pos)", "modifiers": "public static", "return": "double", "signature": "double readDouble(byte[] array, int pos)", "full_signature": "public static double readDouble(byte[] array, int pos)", "class_method_signature": "Serialization.readDouble(byte[] array, int pos)", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "(byte[] array, int pos)", "modifiers": "public static", "return": "String", "signature": "String readString(byte[] array, int pos)", "full_signature": "public static String readString(byte[] array, int pos)", "class_method_signature": "Serialization.readString(byte[] array, int pos)", "testcase": false, "constructor": false}, {"identifier": "readStringArray", "parameters": "(byte[] array, int pos)", "modifiers": "public static", "return": "String[]", "signature": "String[] readStringArray(byte[] array, int pos)", "full_signature": "public static String[] readStringArray(byte[] array, int pos)", "class_method_signature": "Serialization.readStringArray(byte[] array, int pos)", "testcase": false, "constructor": false}], "file": "api/src/main/java/edu/wpi/first/shuffleboard/api/sources/recording/Serialization.java"}, "focal_method": {"identifier": "toByteArray", "parameters": "(boolean val)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] toByteArray(boolean val) {\n    return new byte[]{(byte) (val ? 1 : 0)};\n  }", "signature": "byte[] toByteArray(boolean val)", "full_signature": "public static byte[] toByteArray(boolean val)", "class_method_signature": "Serialization.toByteArray(boolean val)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}