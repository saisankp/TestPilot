{"test_class": {"identifier": "DynamicCompositeByteBufTest", "superclass": "", "interfaces": "", "fields": [], "file": "brpc-java-communication/src/test/java/com/baidu/brpc/buffer/DynamicCompositeByteBufTest.java"}, "test_case": {"identifier": "testReadRetainedSlice", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReadRetainedSlice() {\n        DynamicCompositeByteBuf compositeByteBuf = new DynamicCompositeByteBuf();\n        ByteBuf buf = Unpooled.buffer(8);\n        buf.writeInt(1);\n        buf.writeInt(2);\n        compositeByteBuf.addBuffer(buf);\n        ByteBuf compositeByteBuf2 = compositeByteBuf.readRetainedSlice(4);\n        Assert.assertTrue(compositeByteBuf.readableBytes() == 4);\n        Assert.assertTrue(compositeByteBuf.readInt() == 2);\n        Assert.assertTrue(compositeByteBuf2.readableBytes() == 4);\n        Assert.assertTrue(compositeByteBuf2.readInt() == 1);\n        compositeByteBuf2.release();\n        Assert.assertTrue(buf.refCnt() == 0);\n    }", "signature": "void testReadRetainedSlice()", "full_signature": "@Test public void testReadRetainedSlice()", "class_method_signature": "DynamicCompositeByteBufTest.testReadRetainedSlice()", "testcase": true, "constructor": false, "invocations": ["buffer", "writeInt", "writeInt", "addBuffer", "readRetainedSlice", "assertTrue", "readableBytes", "assertTrue", "readInt", "assertTrue", "readableBytes", "assertTrue", "readInt", "release", "assertTrue", "refCnt"]}, "focal_class": {"identifier": "DynamicCompositeByteBuf", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ArrayDeque<ByteBuf> buffers;", "modifier": "private", "type": "ArrayDeque<ByteBuf>", "declarator": "buffers", "var_name": "buffers"}, {"original_string": "private int readableBytes;", "modifier": "private", "type": "int", "declarator": "readableBytes", "var_name": "readableBytes"}], "methods": [{"identifier": "DynamicCompositeByteBuf", "parameters": "()", "modifiers": "public", "return": "", "signature": " DynamicCompositeByteBuf()", "full_signature": "public  DynamicCompositeByteBuf()", "class_method_signature": "DynamicCompositeByteBuf.DynamicCompositeByteBuf()", "testcase": false, "constructor": true}, {"identifier": "DynamicCompositeByteBuf", "parameters": "(int capacity)", "modifiers": "public", "return": "", "signature": " DynamicCompositeByteBuf(int capacity)", "full_signature": "public  DynamicCompositeByteBuf(int capacity)", "class_method_signature": "DynamicCompositeByteBuf.DynamicCompositeByteBuf(int capacity)", "testcase": false, "constructor": true}, {"identifier": "DynamicCompositeByteBuf", "parameters": "(ByteBuf buf)", "modifiers": "public", "return": "", "signature": " DynamicCompositeByteBuf(ByteBuf buf)", "full_signature": "public  DynamicCompositeByteBuf(ByteBuf buf)", "class_method_signature": "DynamicCompositeByteBuf.DynamicCompositeByteBuf(ByteBuf buf)", "testcase": false, "constructor": true}, {"identifier": "DynamicCompositeByteBuf", "parameters": "(ByteBuf[] bufs, int offset, int len)", "modifiers": "public", "return": "", "signature": " DynamicCompositeByteBuf(ByteBuf[] bufs, int offset, int len)", "full_signature": "public  DynamicCompositeByteBuf(ByteBuf[] bufs, int offset, int len)", "class_method_signature": "DynamicCompositeByteBuf.DynamicCompositeByteBuf(ByteBuf[] bufs, int offset, int len)", "testcase": false, "constructor": true}, {"identifier": "readableBytes", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readableBytes()", "full_signature": "public int readableBytes()", "class_method_signature": "DynamicCompositeByteBuf.readableBytes()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "DynamicCompositeByteBuf.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "hasArray", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasArray()", "full_signature": "public boolean hasArray()", "class_method_signature": "DynamicCompositeByteBuf.hasArray()", "testcase": false, "constructor": false}, {"identifier": "array", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] array()", "full_signature": "public byte[] array()", "class_method_signature": "DynamicCompositeByteBuf.array()", "testcase": false, "constructor": false}, {"identifier": "arrayOffset", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int arrayOffset()", "full_signature": "public int arrayOffset()", "class_method_signature": "DynamicCompositeByteBuf.arrayOffset()", "testcase": false, "constructor": false}, {"identifier": "readerIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readerIndex()", "full_signature": "public int readerIndex()", "class_method_signature": "DynamicCompositeByteBuf.readerIndex()", "testcase": false, "constructor": false}, {"identifier": "isReadable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReadable()", "full_signature": "public boolean isReadable()", "class_method_signature": "DynamicCompositeByteBuf.isReadable()", "testcase": false, "constructor": false}, {"identifier": "nettyByteBuf", "parameters": "()", "modifiers": "public", "return": "ByteBuf", "signature": "ByteBuf nettyByteBuf()", "full_signature": "public ByteBuf nettyByteBuf()", "class_method_signature": "DynamicCompositeByteBuf.nettyByteBuf()", "testcase": false, "constructor": false}, {"identifier": "addBuffer", "parameters": "(ByteBuf buffer)", "modifiers": "public", "return": "void", "signature": "void addBuffer(ByteBuf buffer)", "full_signature": "public void addBuffer(ByteBuf buffer)", "class_method_signature": "DynamicCompositeByteBuf.addBuffer(ByteBuf buffer)", "testcase": false, "constructor": false}, {"identifier": "readRetainedSlice", "parameters": "(int length)", "modifiers": "public", "return": "ByteBuf", "signature": "ByteBuf readRetainedSlice(int length)", "full_signature": "public ByteBuf readRetainedSlice(int length)", "class_method_signature": "DynamicCompositeByteBuf.readRetainedSlice(int length)", "testcase": false, "constructor": false}, {"identifier": "retainedSlice", "parameters": "(int length)", "modifiers": "public", "return": "ByteBuf", "signature": "ByteBuf retainedSlice(int length)", "full_signature": "public ByteBuf retainedSlice(int length)", "class_method_signature": "DynamicCompositeByteBuf.retainedSlice(int length)", "testcase": false, "constructor": false}, {"identifier": "skipBytes", "parameters": "(int length)", "modifiers": "public", "return": "void", "signature": "void skipBytes(int length)", "full_signature": "public void skipBytes(int length)", "class_method_signature": "DynamicCompositeByteBuf.skipBytes(int length)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(byte[] dst)", "modifiers": "public", "return": "DynamicCompositeByteBuf", "signature": "DynamicCompositeByteBuf readBytes(byte[] dst)", "full_signature": "public DynamicCompositeByteBuf readBytes(byte[] dst)", "class_method_signature": "DynamicCompositeByteBuf.readBytes(byte[] dst)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(byte[] dst, int dstIndex, int length)", "modifiers": "public", "return": "DynamicCompositeByteBuf", "signature": "DynamicCompositeByteBuf readBytes(byte[] dst, int dstIndex, int length)", "full_signature": "public DynamicCompositeByteBuf readBytes(byte[] dst, int dstIndex, int length)", "class_method_signature": "DynamicCompositeByteBuf.readBytes(byte[] dst, int dstIndex, int length)", "testcase": false, "constructor": false}, {"identifier": "readByte", "parameters": "()", "modifiers": "public", "return": "byte", "signature": "byte readByte()", "full_signature": "public byte readByte()", "class_method_signature": "DynamicCompositeByteBuf.readByte()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedByte", "parameters": "()", "modifiers": "public", "return": "short", "signature": "short readUnsignedByte()", "full_signature": "public short readUnsignedByte()", "class_method_signature": "DynamicCompositeByteBuf.readUnsignedByte()", "testcase": false, "constructor": false}, {"identifier": "readShort", "parameters": "()", "modifiers": "public", "return": "short", "signature": "short readShort()", "full_signature": "public short readShort()", "class_method_signature": "DynamicCompositeByteBuf.readShort()", "testcase": false, "constructor": false}, {"identifier": "readShortLE", "parameters": "()", "modifiers": "public", "return": "short", "signature": "short readShortLE()", "full_signature": "public short readShortLE()", "class_method_signature": "DynamicCompositeByteBuf.readShortLE()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedShort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readUnsignedShort()", "full_signature": "public int readUnsignedShort()", "class_method_signature": "DynamicCompositeByteBuf.readUnsignedShort()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedShortLE", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readUnsignedShortLE()", "full_signature": "public int readUnsignedShortLE()", "class_method_signature": "DynamicCompositeByteBuf.readUnsignedShortLE()", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readInt()", "full_signature": "public int readInt()", "class_method_signature": "DynamicCompositeByteBuf.readInt()", "testcase": false, "constructor": false}, {"identifier": "readIntLE", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readIntLE()", "full_signature": "public int readIntLE()", "class_method_signature": "DynamicCompositeByteBuf.readIntLE()", "testcase": false, "constructor": false}, {"identifier": "readLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long readLong()", "full_signature": "public long readLong()", "class_method_signature": "DynamicCompositeByteBuf.readLong()", "testcase": false, "constructor": false}, {"identifier": "readLongLE", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long readLongLE()", "full_signature": "public long readLongLE()", "class_method_signature": "DynamicCompositeByteBuf.readLongLE()", "testcase": false, "constructor": false}, {"identifier": "readChar", "parameters": "()", "modifiers": "public", "return": "char", "signature": "char readChar()", "full_signature": "public char readChar()", "class_method_signature": "DynamicCompositeByteBuf.readChar()", "testcase": false, "constructor": false}, {"identifier": "readFloat", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float readFloat()", "full_signature": "public float readFloat()", "class_method_signature": "DynamicCompositeByteBuf.readFloat()", "testcase": false, "constructor": false}, {"identifier": "readFloatLE", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float readFloatLE()", "full_signature": "public float readFloatLE()", "class_method_signature": "DynamicCompositeByteBuf.readFloatLE()", "testcase": false, "constructor": false}, {"identifier": "readDouble", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double readDouble()", "full_signature": "public double readDouble()", "class_method_signature": "DynamicCompositeByteBuf.readDouble()", "testcase": false, "constructor": false}, {"identifier": "readDoubleLE", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double readDoubleLE()", "full_signature": "public double readDoubleLE()", "class_method_signature": "DynamicCompositeByteBuf.readDoubleLE()", "testcase": false, "constructor": false}, {"identifier": "order", "parameters": "()", "modifiers": "public", "return": "ByteOrder", "signature": "ByteOrder order()", "full_signature": "public ByteOrder order()", "class_method_signature": "DynamicCompositeByteBuf.order()", "testcase": false, "constructor": false}, {"identifier": "checkReadableBytes0", "parameters": "(int length)", "modifiers": "private", "return": "void", "signature": "void checkReadableBytes0(int length)", "full_signature": "private void checkReadableBytes0(int length)", "class_method_signature": "DynamicCompositeByteBuf.checkReadableBytes0(int length)", "testcase": false, "constructor": false}, {"identifier": "advanceBufferIfNecessary", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void advanceBufferIfNecessary()", "full_signature": "private void advanceBufferIfNecessary()", "class_method_signature": "DynamicCompositeByteBuf.advanceBufferIfNecessary()", "testcase": false, "constructor": false}, {"identifier": "release", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void release()", "full_signature": "public void release()", "class_method_signature": "DynamicCompositeByteBuf.release()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DynamicCompositeByteBuf.toString()", "testcase": false, "constructor": false}], "file": "brpc-java-communication/src/main/java/com/baidu/brpc/buffer/DynamicCompositeByteBuf.java"}, "focal_method": {"identifier": "readRetainedSlice", "parameters": "(int length)", "modifiers": "public", "return": "ByteBuf", "body": "public ByteBuf readRetainedSlice(int length) {\n        if (length > readableBytes) {\n            throw new IndexOutOfBoundsException(\"length > readableBytes\");\n        }\n        if (length <= 0) {\n            return Unpooled.buffer(0);\n        }\n\n        ByteBuf first = buffers.peek();\n        int firstLen = first.readableBytes();\n        if (length == firstLen) {\n            readableBytes -= length;\n            return buffers.removeFirst();\n        } else if (length < firstLen) {\n            ByteBuf newBuf = first.readRetainedSlice(length);\n            readableBytes -= length;\n            return newBuf;\n        } else {\n            int capacity = 2;\n            ByteBuf[] byteBufs = new ByteBuf[capacity];\n            int i = 0;\n            while (length > 0 && readableBytes > 0) {\n                ByteBuf newBuf;\n                if (firstLen > length) {\n                    newBuf = first.readRetainedSlice(length);\n                    readableBytes -= length;\n                    length = 0;\n                } else {\n                    newBuf = first;\n                    readableBytes -= firstLen;\n                    length -= firstLen;\n                    buffers.pop();\n                }\n                if (i == capacity) {\n                    int newCapacity = capacity * 2;\n                    ByteBuf[] newByteBufs = new ByteBuf[newCapacity];\n                    System.arraycopy(byteBufs, 0, newByteBufs, 0, capacity);\n                    byteBufs = newByteBufs;\n                    capacity = newCapacity;\n                }\n                byteBufs[i++] = newBuf;\n                first = buffers.peek();\n                if (first == null) {\n                    break;\n                }\n                firstLen = first.readableBytes();\n            }\n            if (i == capacity) {\n                int maxComponentNum = (i > 2) ? i : 2;\n                return new CompositeByteBuf(UnpooledByteBufAllocator.DEFAULT, true, maxComponentNum, byteBufs);\n            } else {\n                ByteBuf[] outBufs = new ByteBuf[i];\n                System.arraycopy(byteBufs, 0, outBufs, 0, i);\n                int maxComponentNum = (i > 2) ? i : 2;\n                return new CompositeByteBuf(UnpooledByteBufAllocator.DEFAULT, true, maxComponentNum, outBufs);\n            }\n        }\n    }", "signature": "ByteBuf readRetainedSlice(int length)", "full_signature": "public ByteBuf readRetainedSlice(int length)", "class_method_signature": "DynamicCompositeByteBuf.readRetainedSlice(int length)", "testcase": false, "constructor": false, "invocations": ["buffer", "peek", "readableBytes", "removeFirst", "readRetainedSlice", "readRetainedSlice", "pop", "arraycopy", "peek", "readableBytes", "arraycopy"]}, "repository": {"repo_id": 162548942, "url": "https://github.com/baidu/brpc-java", "language": "Java", "is_fork": false, "fork_count": 175, "stargazer_count": 551, "size": 3271, "license": "licensed"}}