{"test_class": {"identifier": "ComposedResourceDescriptionProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/de/lise/terradoc/core/customization/modification/ComposedResourceDescriptionProviderTest.java"}, "test_case": {"identifier": "getResourceDescriptionShouldReturnOnFirstResultWithoutInvokingTheFollowinProviders", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getResourceDescriptionShouldReturnOnFirstResultWithoutInvokingTheFollowinProviders() {\n        // Arrange\n        ResourceDescriptionProvider p1 = mock(ResourceDescriptionProvider.class);\n        ResourceDescriptionProvider p2 = mock(ResourceDescriptionProvider.class);\n\n        String testDescription = \"some description\";\n\n        when(p1.getAsciidocDescription(any())).thenReturn(Optional.of(testDescription));\n        when(p2.getAsciidocDescription(any())).thenReturn(Optional.empty());\n\n        List<ResourceDescriptionProvider> providers = Arrays.asList(p1, p2);\n        ResourceDescriptionProvider resourceDescriptionProvider = new ComposedResourceDescriptionProvider(providers);\n\n        // Act\n        Optional<String> resourceDescription = resourceDescriptionProvider.getAsciidocDescription(\"some_resource\");\n\n        // Assert\n        assertThat(resourceDescription).isNotEmpty().get().isEqualTo(testDescription);\n        verify(p1, times(1)).getAsciidocDescription(\"some_resource\");\n        verify(p2, never()).getAsciidocDescription(\"some_resource\");\n    }", "signature": "void getResourceDescriptionShouldReturnOnFirstResultWithoutInvokingTheFollowinProviders()", "full_signature": "@Test void getResourceDescriptionShouldReturnOnFirstResultWithoutInvokingTheFollowinProviders()", "class_method_signature": "ComposedResourceDescriptionProviderTest.getResourceDescriptionShouldReturnOnFirstResultWithoutInvokingTheFollowinProviders()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getAsciidocDescription", "any", "of", "thenReturn", "when", "getAsciidocDescription", "any", "empty", "asList", "getAsciidocDescription", "isEqualTo", "get", "isNotEmpty", "assertThat", "getAsciidocDescription", "verify", "times", "getAsciidocDescription", "verify", "never"]}, "focal_class": {"identifier": "ComposedResourceDescriptionProvider", "superclass": "", "interfaces": "implements ResourceDescriptionProvider", "fields": [{"original_string": "private final Iterable<ResourceDescriptionProvider> providers;", "modifier": "private final", "type": "Iterable<ResourceDescriptionProvider>", "declarator": "providers", "var_name": "providers"}], "methods": [{"identifier": "ComposedResourceDescriptionProvider", "parameters": "(Iterable<ResourceDescriptionProvider> providers)", "modifiers": "public", "return": "", "signature": " ComposedResourceDescriptionProvider(Iterable<ResourceDescriptionProvider> providers)", "full_signature": "public  ComposedResourceDescriptionProvider(Iterable<ResourceDescriptionProvider> providers)", "class_method_signature": "ComposedResourceDescriptionProvider.ComposedResourceDescriptionProvider(Iterable<ResourceDescriptionProvider> providers)", "testcase": false, "constructor": true}, {"identifier": "getAsciidocDescription", "parameters": "(String fullQualifiedTerraformAddress)", "modifiers": "@Override public", "return": "Optional<String>", "signature": "Optional<String> getAsciidocDescription(String fullQualifiedTerraformAddress)", "full_signature": "@Override public Optional<String> getAsciidocDescription(String fullQualifiedTerraformAddress)", "class_method_signature": "ComposedResourceDescriptionProvider.getAsciidocDescription(String fullQualifiedTerraformAddress)", "testcase": false, "constructor": false}], "file": "core/src/main/java/de/lise/terradoc/core/customization/modification/ComposedResourceDescriptionProvider.java"}, "focal_method": {"identifier": "getAsciidocDescription", "parameters": "(String fullQualifiedTerraformAddress)", "modifiers": "@Override public", "return": "Optional<String>", "body": "@Override\n    public Optional<String> getAsciidocDescription(String fullQualifiedTerraformAddress) {\n        Optional<String> result;\n        for (ResourceDescriptionProvider provider : providers) {\n            result = provider.getAsciidocDescription(fullQualifiedTerraformAddress);\n            if (result.isPresent()) {\n                return result;\n            }\n        }\n        return Optional.empty();\n    }", "signature": "Optional<String> getAsciidocDescription(String fullQualifiedTerraformAddress)", "full_signature": "@Override public Optional<String> getAsciidocDescription(String fullQualifiedTerraformAddress)", "class_method_signature": "ComposedResourceDescriptionProvider.getAsciidocDescription(String fullQualifiedTerraformAddress)", "testcase": false, "constructor": false, "invocations": ["getAsciidocDescription", "isPresent", "empty"]}, "repository": {"repo_id": 209830490, "url": "https://github.com/lisegmbh/terradoc", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 117, "license": "licensed"}}