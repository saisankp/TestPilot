{"test_class": {"identifier": "VClockTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "VClock testClock;", "modifier": "", "type": "VClock", "declarator": "testClock", "var_name": "testClock"}], "file": "jvec/org/github/com/jvec/vclock/VClockTest.java"}, "test_case": {"identifier": "copy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void copy() throws Exception {\n        testClock.set(\"Proc1\", 50);\n        VClock nc = testClock.copy();\n        long clockTicks = testClock.findTicks(\"Proc1\");\n        long clockTicksCopy = nc.findTicks(\"Proc1\");\n        assertEquals(\"Copy failed! The clock values do not match.\", clockTicks, clockTicksCopy);\n    }", "signature": "void copy()", "full_signature": "@Test public void copy()", "class_method_signature": "VClockTest.copy()", "testcase": true, "constructor": false, "invocations": ["set", "copy", "findTicks", "findTicks", "assertEquals"]}, "focal_class": {"identifier": "VClock", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final TreeMap<String, Long> vc;", "modifier": "protected final", "type": "TreeMap<String, Long>", "declarator": "vc", "var_name": "vc"}], "methods": [{"identifier": "VClock", "parameters": "()", "modifiers": "public", "return": "", "signature": " VClock()", "full_signature": "public  VClock()", "class_method_signature": "VClock.VClock()", "testcase": false, "constructor": true}, {"identifier": "clockInit", "parameters": "()", "modifiers": "private", "return": "TreeMap<String, Long>", "signature": "TreeMap<String, Long> clockInit()", "full_signature": "private TreeMap<String, Long> clockInit()", "class_method_signature": "VClock.clockInit()", "testcase": false, "constructor": false}, {"identifier": "tick", "parameters": "(String pid)", "modifiers": "public", "return": "void", "signature": "void tick(String pid)", "full_signature": "public void tick(String pid)", "class_method_signature": "VClock.tick(String pid)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String pid, long ticks)", "modifiers": "public", "return": "void", "signature": "void set(String pid, long ticks)", "full_signature": "public void set(String pid, long ticks)", "class_method_signature": "VClock.set(String pid, long ticks)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "public", "return": "VClock", "signature": "VClock copy()", "full_signature": "public VClock copy()", "class_method_signature": "VClock.copy()", "testcase": false, "constructor": false}, {"identifier": "findTicks", "parameters": "(String pid)", "modifiers": "public", "return": "long", "signature": "long findTicks(String pid)", "full_signature": "public long findTicks(String pid)", "class_method_signature": "VClock.findTicks(String pid)", "testcase": false, "constructor": false}, {"identifier": "lastUpdate", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long lastUpdate()", "full_signature": "public long lastUpdate()", "class_method_signature": "VClock.lastUpdate()", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(VClock other)", "modifiers": "public", "return": "void", "signature": "void merge(VClock other)", "full_signature": "public void merge(VClock other)", "class_method_signature": "VClock.merge(VClock other)", "testcase": false, "constructor": false}, {"identifier": "returnVCString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String returnVCString()", "full_signature": "public String returnVCString()", "class_method_signature": "VClock.returnVCString()", "testcase": false, "constructor": false}, {"identifier": "printVC", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void printVC()", "full_signature": "public void printVC()", "class_method_signature": "VClock.printVC()", "testcase": false, "constructor": false}, {"identifier": "getClockMap", "parameters": "()", "modifiers": "public", "return": "TreeMap<String, Long>", "signature": "TreeMap<String, Long> getClockMap()", "full_signature": "public TreeMap<String, Long> getClockMap()", "class_method_signature": "VClock.getClockMap()", "testcase": false, "constructor": false}], "file": "jvec/org/github/com/jvec/vclock/VClock.java"}, "focal_method": {"identifier": "copy", "parameters": "()", "modifiers": "public", "return": "VClock", "body": "public VClock copy() {\n        VClock clock = new VClock();\n        clock.vc.putAll(this.vc);\n        return clock;\n    }", "signature": "VClock copy()", "full_signature": "public VClock copy()", "class_method_signature": "VClock.copy()", "testcase": false, "constructor": false, "invocations": ["putAll"]}, "repository": {"repo_id": 99149191, "url": "https://github.com/DistributedClocks/JVector", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 1455, "license": "licensed"}}