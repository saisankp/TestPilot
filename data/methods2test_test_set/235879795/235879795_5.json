{"test_class": {"identifier": "DartAnalyzerReportIssueTest", "superclass": "", "interfaces": "", "fields": [], "file": "dart-lang/src/test/java/fr/insideapp/sonarqube/dart/lang/issues/dartanalyzer/DartAnalyzerReportIssueTest.java"}, "test_case": {"identifier": "equals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void equals() {\n        DartAnalyzerReportIssue issue1 = new DartAnalyzerReportIssue(\"1\", \"msg\", \"/test/path\", 20);\n        DartAnalyzerReportIssue issue2 = new DartAnalyzerReportIssue(\"1\", \"msg\", \"/test/path\", 20);\n\n        assertThat(issue1).isEqualTo(issue2);\n    }", "signature": "void equals()", "full_signature": "@Test public void equals()", "class_method_signature": "DartAnalyzerReportIssueTest.equals()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DartAnalyzerReportIssue", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String ruleId;", "modifier": "private final", "type": "String", "declarator": "ruleId", "var_name": "ruleId"}, {"original_string": "private final String message;", "modifier": "private final", "type": "String", "declarator": "message", "var_name": "message"}, {"original_string": "private final String filePath;", "modifier": "private final", "type": "String", "declarator": "filePath", "var_name": "filePath"}, {"original_string": "private final int lineNumber;", "modifier": "private final", "type": "int", "declarator": "lineNumber", "var_name": "lineNumber"}], "methods": [{"identifier": "DartAnalyzerReportIssue", "parameters": "(String ruleId, String message, String filePath, int lineNumber)", "modifiers": "public", "return": "", "signature": " DartAnalyzerReportIssue(String ruleId, String message, String filePath, int lineNumber)", "full_signature": "public  DartAnalyzerReportIssue(String ruleId, String message, String filePath, int lineNumber)", "class_method_signature": "DartAnalyzerReportIssue.DartAnalyzerReportIssue(String ruleId, String message, String filePath, int lineNumber)", "testcase": false, "constructor": true}, {"identifier": "getRuleId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRuleId()", "full_signature": "public String getRuleId()", "class_method_signature": "DartAnalyzerReportIssue.getRuleId()", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMessage()", "full_signature": "public String getMessage()", "class_method_signature": "DartAnalyzerReportIssue.getMessage()", "testcase": false, "constructor": false}, {"identifier": "getFilePath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFilePath()", "full_signature": "public String getFilePath()", "class_method_signature": "DartAnalyzerReportIssue.getFilePath()", "testcase": false, "constructor": false}, {"identifier": "getLineNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLineNumber()", "full_signature": "public int getLineNumber()", "class_method_signature": "DartAnalyzerReportIssue.getLineNumber()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DartAnalyzerReportIssue.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DartAnalyzerReportIssue.hashCode()", "testcase": false, "constructor": false}], "file": "dart-lang/src/main/java/fr/insideapp/sonarqube/dart/lang/issues/dartanalyzer/DartAnalyzerReportIssue.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        DartAnalyzerReportIssue that = (DartAnalyzerReportIssue) o;\n        return lineNumber == that.lineNumber &&\n                Objects.equals(ruleId, that.ruleId) &&\n                Objects.equals(message, that.message) &&\n                Objects.equals(filePath, that.filePath);\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DartAnalyzerReportIssue.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals", "equals"]}, "repository": {"repo_id": 235879795, "url": "https://github.com/insideapp-oss/sonar-flutter", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 70, "size": 799, "license": "licensed"}}