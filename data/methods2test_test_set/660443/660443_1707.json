{"test_class": {"identifier": "EStateFingerprinterTest", "superclass": "extends AbstractFixedLengthFingerprinterTest", "interfaces": "", "fields": [{"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(EStateFingerprinterTest.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(EStateFingerprinterTest.class)", "var_name": "logger"}], "file": "descriptor/fingerprint/src/test/java/org/openscience/cdk/fingerprint/EStateFingerprinterTest.java"}, "test_case": {"identifier": "testGetSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSize() throws Exception {\n        IFingerprinter printer = new EStateFingerprinter();\n        Assert.assertEquals(79, printer.getSize());\n    }", "signature": "void testGetSize()", "full_signature": "@Test public void testGetSize()", "class_method_signature": "EStateFingerprinterTest.testGetSize()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSize"]}, "focal_class": {"identifier": "EStateFingerprinter", "superclass": "extends AbstractFingerprinter", "interfaces": "implements IFingerprinter", "fields": [{"original_string": "private static final SmartsPattern[] PATTERNS = EStateFragments.getPatterns();", "modifier": "private static final", "type": "SmartsPattern[]", "declarator": "PATTERNS = EStateFragments.getPatterns()", "var_name": "PATTERNS"}], "methods": [{"identifier": "EStateFingerprinter", "parameters": "()", "modifiers": "public", "return": "", "signature": " EStateFingerprinter()", "full_signature": "public  EStateFingerprinter()", "class_method_signature": "EStateFingerprinter.EStateFingerprinter()", "testcase": false, "constructor": true}, {"identifier": "getBitFingerprint", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "IBitFingerprint", "signature": "IBitFingerprint getBitFingerprint(IAtomContainer atomContainer)", "full_signature": "@Override public IBitFingerprint getBitFingerprint(IAtomContainer atomContainer)", "class_method_signature": "EStateFingerprinter.getBitFingerprint(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "getRawFingerprint", "parameters": "(IAtomContainer iAtomContainer)", "modifiers": "@Override public", "return": "Map<String, Integer>", "signature": "Map<String, Integer> getRawFingerprint(IAtomContainer iAtomContainer)", "full_signature": "@Override public Map<String, Integer> getRawFingerprint(IAtomContainer iAtomContainer)", "class_method_signature": "EStateFingerprinter.getRawFingerprint(IAtomContainer iAtomContainer)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "EStateFingerprinter.getSize()", "testcase": false, "constructor": false}, {"identifier": "getCountFingerprint", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "ICountFingerprint", "signature": "ICountFingerprint getCountFingerprint(IAtomContainer container)", "full_signature": "@Override public ICountFingerprint getCountFingerprint(IAtomContainer container)", "class_method_signature": "EStateFingerprinter.getCountFingerprint(IAtomContainer container)", "testcase": false, "constructor": false}], "file": "descriptor/fingerprint/src/main/java/org/openscience/cdk/fingerprint/EStateFingerprinter.java"}, "focal_method": {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getSize() {\n        return PATTERNS.length;\n    }", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "EStateFingerprinter.getSize()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}