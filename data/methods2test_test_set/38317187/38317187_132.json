{"test_class": {"identifier": "AbstractFormItemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Appearance<String> readOnlyAppearance;", "modifier": "private", "type": "Appearance<String>", "declarator": "readOnlyAppearance", "var_name": "readOnlyAppearance"}, {"original_string": "private Appearance<String> editingAppearance;", "modifier": "private", "type": "Appearance<String>", "declarator": "editingAppearance", "var_name": "editingAppearance"}], "file": "ballroom/src/test/java/org/jboss/hal/ballroom/form/AbstractFormItemTest.java"}, "test_case": {"identifier": "setName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setName() {\n        AbstractFormItem<String> formItem = formItem(false);\n        formItem.setName(\"foo\");\n        verify(readOnlyAppearance).setName(\"foo\");\n        verify(editingAppearance).setName(\"foo\");\n    }", "signature": "void setName()", "full_signature": "@Test public void setName()", "class_method_signature": "AbstractFormItemTest.setName()", "testcase": true, "constructor": false, "invocations": ["formItem", "setName", "setName", "verify", "setName", "verify"]}, "focal_class": {"identifier": "AbstractFormItem", "superclass": "", "interfaces": "implements FormItem<T>", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final String label;", "modifier": "private final", "type": "String", "declarator": "label", "var_name": "label"}, {"original_string": "private final String hint;", "modifier": "private final", "type": "String", "declarator": "hint", "var_name": "hint"}, {"original_string": "private T value;", "modifier": "private", "type": "T", "declarator": "value", "var_name": "value"}, {"original_string": "private T defaultValue;", "modifier": "private", "type": "T", "declarator": "defaultValue", "var_name": "defaultValue"}, {"original_string": "private String expressionValue;", "modifier": "private", "type": "String", "declarator": "expressionValue", "var_name": "expressionValue"}, {"original_string": "private boolean required;", "modifier": "private", "type": "boolean", "declarator": "required", "var_name": "required"}, {"original_string": "private boolean modified;", "modifier": "private", "type": "boolean", "declarator": "modified", "var_name": "modified"}, {"original_string": "private boolean undefined;", "modifier": "private", "type": "boolean", "declarator": "undefined", "var_name": "undefined"}, {"original_string": "private boolean restricted;", "modifier": "private", "type": "boolean", "declarator": "restricted", "var_name": "restricted"}, {"original_string": "private boolean enabled;", "modifier": "private", "type": "boolean", "declarator": "enabled", "var_name": "enabled"}, {"original_string": "private boolean expressionAllowed;", "modifier": "private", "type": "boolean", "declarator": "expressionAllowed", "var_name": "expressionAllowed"}, {"original_string": "private Deprecation deprecation;", "modifier": "private", "type": "Deprecation", "declarator": "deprecation", "var_name": "deprecation"}, {"original_string": "private Form form;", "modifier": "private", "type": "Form", "declarator": "form", "var_name": "form"}, {"original_string": "private SuggestHandler suggestHandler;", "modifier": "private", "type": "SuggestHandler", "declarator": "suggestHandler", "var_name": "suggestHandler"}, {"original_string": "private final EventBus eventBus;", "modifier": "private final", "type": "EventBus", "declarator": "eventBus", "var_name": "eventBus"}, {"original_string": "private final Map<State, Appearance<T>> appearances;", "modifier": "private final", "type": "Map<State, Appearance<T>>", "declarator": "appearances", "var_name": "appearances"}, {"original_string": "private final List<FormItemValidation<T>> validationHandlers;", "modifier": "private final", "type": "List<FormItemValidation<T>>", "declarator": "validationHandlers", "var_name": "validationHandlers"}, {"original_string": "private final List<ResolveExpressionHandler> resolveExpressionHandlers;", "modifier": "private final", "type": "List<ResolveExpressionHandler>", "declarator": "resolveExpressionHandlers", "var_name": "resolveExpressionHandlers"}, {"original_string": "private final List<com.google.web.bindery.event.shared.HandlerRegistration> handlers;", "modifier": "private final", "type": "List<com.google.web.bindery.event.shared.HandlerRegistration>", "declarator": "handlers", "var_name": "handlers"}], "methods": [{"identifier": "AbstractFormItem", "parameters": "(String name, String label, String hint)", "modifiers": "", "return": "", "signature": " AbstractFormItem(String name, String label, String hint)", "full_signature": "  AbstractFormItem(String name, String label, String hint)", "class_method_signature": "AbstractFormItem.AbstractFormItem(String name, String label, String hint)", "testcase": false, "constructor": true}, {"identifier": "addAppearance", "parameters": "(State state, Appearance<T> appearance)", "modifiers": "protected", "return": "void", "signature": "void addAppearance(State state, Appearance<T> appearance)", "full_signature": "protected void addAppearance(State state, Appearance<T> appearance)", "class_method_signature": "AbstractFormItem.addAppearance(State state, Appearance<T> appearance)", "testcase": false, "constructor": false}, {"identifier": "remember", "parameters": "(com.google.web.bindery.event.shared.HandlerRegistration handler)", "modifiers": "protected", "return": "void", "signature": "void remember(com.google.web.bindery.event.shared.HandlerRegistration handler)", "full_signature": "protected void remember(com.google.web.bindery.event.shared.HandlerRegistration handler)", "class_method_signature": "AbstractFormItem.remember(com.google.web.bindery.event.shared.HandlerRegistration handler)", "testcase": false, "constructor": false}, {"identifier": "element", "parameters": "(State state)", "modifiers": "@Override public", "return": "HTMLElement", "signature": "HTMLElement element(State state)", "full_signature": "@Override public HTMLElement element(State state)", "class_method_signature": "AbstractFormItem.element(State state)", "testcase": false, "constructor": false}, {"identifier": "attach", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void attach()", "full_signature": "@Override public void attach()", "class_method_signature": "AbstractFormItem.attach()", "testcase": false, "constructor": false}, {"identifier": "detach", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void detach()", "full_signature": "@Override public void detach()", "class_method_signature": "AbstractFormItem.detach()", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(Decoration decoration)", "modifiers": "private", "return": "void", "signature": "void apply(Decoration decoration)", "full_signature": "private void apply(Decoration decoration)", "class_method_signature": "AbstractFormItem.apply(Decoration decoration)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(Decoration decoration, C context)", "modifiers": "private", "return": "void", "signature": "void apply(Decoration decoration, C context)", "full_signature": "private void apply(Decoration decoration, C context)", "class_method_signature": "AbstractFormItem.apply(Decoration decoration, C context)", "testcase": false, "constructor": false}, {"identifier": "unapply", "parameters": "(Decoration decoration)", "modifiers": "private", "return": "void", "signature": "void unapply(Decoration decoration)", "full_signature": "private void unapply(Decoration decoration)", "class_method_signature": "AbstractFormItem.unapply(Decoration decoration)", "testcase": false, "constructor": false}, {"identifier": "appearance", "parameters": "(State state)", "modifiers": "", "return": "Appearance<T>", "signature": "Appearance<T> appearance(State state)", "full_signature": " Appearance<T> appearance(State state)", "class_method_signature": "AbstractFormItem.appearance(State state)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "(State state)", "modifiers": "@Override public", "return": "String", "signature": "String getId(State state)", "full_signature": "@Override public String getId(State state)", "class_method_signature": "AbstractFormItem.getId(State state)", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "@Override public", "return": "void", "signature": "void setId(String id)", "full_signature": "@Override public void setId(String id)", "class_method_signature": "AbstractFormItem.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T getValue()", "full_signature": "@Override public T getValue()", "class_method_signature": "AbstractFormItem.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(T value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(T value)", "full_signature": "@Override public void setValue(T value)", "class_method_signature": "AbstractFormItem.setValue(T value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(T value, boolean fireEvent)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(T value, boolean fireEvent)", "full_signature": "@Override public void setValue(T value, boolean fireEvent)", "class_method_signature": "AbstractFormItem.setValue(T value, boolean fireEvent)", "testcase": false, "constructor": false}, {"identifier": "modifyValue", "parameters": "(T newValue)", "modifiers": "protected", "return": "void", "signature": "void modifyValue(T newValue)", "full_signature": "protected void modifyValue(T newValue)", "class_method_signature": "AbstractFormItem.modifyValue(T newValue)", "testcase": false, "constructor": false}, {"identifier": "clearValue", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearValue()", "full_signature": "@Override public void clearValue()", "class_method_signature": "AbstractFormItem.clearValue()", "testcase": false, "constructor": false}, {"identifier": "assignDefaultValue", "parameters": "(T defaultValue)", "modifiers": "@Override public", "return": "void", "signature": "void assignDefaultValue(T defaultValue)", "full_signature": "@Override public void assignDefaultValue(T defaultValue)", "class_method_signature": "AbstractFormItem.assignDefaultValue(T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "markDefaultValue", "parameters": "(boolean on)", "modifiers": "private", "return": "void", "signature": "void markDefaultValue(boolean on)", "full_signature": "private void markDefaultValue(boolean on)", "class_method_signature": "AbstractFormItem.markDefaultValue(boolean on)", "testcase": false, "constructor": false}, {"identifier": "mask", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void mask()", "full_signature": "@Override public void mask()", "class_method_signature": "AbstractFormItem.mask()", "testcase": false, "constructor": false}, {"identifier": "unmask", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void unmask()", "full_signature": "@Override public void unmask()", "class_method_signature": "AbstractFormItem.unmask()", "testcase": false, "constructor": false}, {"identifier": "signalChange", "parameters": "(T value)", "modifiers": "private", "return": "void", "signature": "void signalChange(T value)", "full_signature": "private void signalChange(T value)", "class_method_signature": "AbstractFormItem.signalChange(T value)", "testcase": false, "constructor": false}, {"identifier": "fireEvent", "parameters": "(GwtEvent<?> gwtEvent)", "modifiers": "@Override public", "return": "void", "signature": "void fireEvent(GwtEvent<?> gwtEvent)", "full_signature": "@Override public void fireEvent(GwtEvent<?> gwtEvent)", "class_method_signature": "AbstractFormItem.fireEvent(GwtEvent<?> gwtEvent)", "testcase": false, "constructor": false}, {"identifier": "addValueChangeHandler", "parameters": "(ValueChangeHandler<T> valueChangeHandler)", "modifiers": "@Override public", "return": "HandlerRegistration", "signature": "HandlerRegistration addValueChangeHandler(ValueChangeHandler<T> valueChangeHandler)", "full_signature": "@Override public HandlerRegistration addValueChangeHandler(ValueChangeHandler<T> valueChangeHandler)", "class_method_signature": "AbstractFormItem.addValueChangeHandler(ValueChangeHandler<T> valueChangeHandler)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "AbstractFormItem.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void setName(String name)", "full_signature": "@Override public void setName(String name)", "class_method_signature": "AbstractFormItem.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "defaultValidationHandlers", "parameters": "()", "modifiers": "", "return": "List<FormItemValidation<T>>", "signature": "List<FormItemValidation<T>> defaultValidationHandlers()", "full_signature": " List<FormItemValidation<T>> defaultValidationHandlers()", "class_method_signature": "AbstractFormItem.defaultValidationHandlers()", "testcase": false, "constructor": false}, {"identifier": "requiresValidation", "parameters": "()", "modifiers": "@SuppressWarnings({\"SimplifiableIfStatement\", \"WeakerAccess\"})", "return": "boolean", "signature": "boolean requiresValidation()", "full_signature": "@SuppressWarnings({\"SimplifiableIfStatement\", \"WeakerAccess\"}) boolean requiresValidation()", "class_method_signature": "AbstractFormItem.requiresValidation()", "testcase": false, "constructor": false}, {"identifier": "addValidationHandler", "parameters": "(FormItemValidation<T> validationHandler)", "modifiers": "@Override public", "return": "void", "signature": "void addValidationHandler(FormItemValidation<T> validationHandler)", "full_signature": "@Override public void addValidationHandler(FormItemValidation<T> validationHandler)", "class_method_signature": "AbstractFormItem.addValidationHandler(FormItemValidation<T> validationHandler)", "testcase": false, "constructor": false}, {"identifier": "removeValidationHandler", "parameters": "(FormItemValidation<T> validationHandler)", "modifiers": "", "return": "void", "signature": "void removeValidationHandler(FormItemValidation<T> validationHandler)", "full_signature": " void removeValidationHandler(FormItemValidation<T> validationHandler)", "class_method_signature": "AbstractFormItem.removeValidationHandler(FormItemValidation<T> validationHandler)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean validate()", "full_signature": "@Override public boolean validate()", "class_method_signature": "AbstractFormItem.validate()", "testcase": false, "constructor": false}, {"identifier": "clearError", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearError()", "full_signature": "@Override public void clearError()", "class_method_signature": "AbstractFormItem.clearError()", "testcase": false, "constructor": false}, {"identifier": "showError", "parameters": "(String message)", "modifiers": "@Override public", "return": "void", "signature": "void showError(String message)", "full_signature": "@Override public void showError(String message)", "class_method_signature": "AbstractFormItem.showError(String message)", "testcase": false, "constructor": false}, {"identifier": "isExpressionAllowed", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isExpressionAllowed()", "full_signature": "@Override public boolean isExpressionAllowed()", "class_method_signature": "AbstractFormItem.isExpressionAllowed()", "testcase": false, "constructor": false}, {"identifier": "setExpressionAllowed", "parameters": "(boolean expressionAllowed)", "modifiers": "@Override public", "return": "void", "signature": "void setExpressionAllowed(boolean expressionAllowed)", "full_signature": "@Override public void setExpressionAllowed(boolean expressionAllowed)", "class_method_signature": "AbstractFormItem.setExpressionAllowed(boolean expressionAllowed)", "testcase": false, "constructor": false}, {"identifier": "isExpressionValue", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isExpressionValue()", "full_signature": "@Override public boolean isExpressionValue()", "class_method_signature": "AbstractFormItem.isExpressionValue()", "testcase": false, "constructor": false}, {"identifier": "getExpressionValue", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getExpressionValue()", "full_signature": "@Override public String getExpressionValue()", "class_method_signature": "AbstractFormItem.getExpressionValue()", "testcase": false, "constructor": false}, {"identifier": "setExpressionValue", "parameters": "(String expressionValue)", "modifiers": "@Override public", "return": "void", "signature": "void setExpressionValue(String expressionValue)", "full_signature": "@Override public void setExpressionValue(String expressionValue)", "class_method_signature": "AbstractFormItem.setExpressionValue(String expressionValue)", "testcase": false, "constructor": false}, {"identifier": "modifyExpressionValue", "parameters": "(String newExpressionValue)", "modifiers": "protected", "return": "void", "signature": "void modifyExpressionValue(String newExpressionValue)", "full_signature": "protected void modifyExpressionValue(String newExpressionValue)", "class_method_signature": "AbstractFormItem.modifyExpressionValue(String newExpressionValue)", "testcase": false, "constructor": false}, {"identifier": "addResolveExpressionHandler", "parameters": "(ResolveExpressionHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void addResolveExpressionHandler(ResolveExpressionHandler handler)", "full_signature": "@Override public void addResolveExpressionHandler(ResolveExpressionHandler handler)", "class_method_signature": "AbstractFormItem.addResolveExpressionHandler(ResolveExpressionHandler handler)", "testcase": false, "constructor": false}, {"identifier": "toggleExpressionSupport", "parameters": "(String expressionValue)", "modifiers": "", "return": "void", "signature": "void toggleExpressionSupport(String expressionValue)", "full_signature": " void toggleExpressionSupport(String expressionValue)", "class_method_signature": "AbstractFormItem.toggleExpressionSupport(String expressionValue)", "testcase": false, "constructor": false}, {"identifier": "applyExpressionValue", "parameters": "(String expressionValue)", "modifiers": "", "return": "void", "signature": "void applyExpressionValue(String expressionValue)", "full_signature": " void applyExpressionValue(String expressionValue)", "class_method_signature": "AbstractFormItem.applyExpressionValue(String expressionValue)", "testcase": false, "constructor": false}, {"identifier": "hasExpressionScheme", "parameters": "(String value)", "modifiers": "", "return": "boolean", "signature": "boolean hasExpressionScheme(String value)", "full_signature": " boolean hasExpressionScheme(String value)", "class_method_signature": "AbstractFormItem.hasExpressionScheme(String value)", "testcase": false, "constructor": false}, {"identifier": "isModal", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isModal()", "full_signature": " boolean isModal()", "class_method_signature": "AbstractFormItem.isModal()", "testcase": false, "constructor": false}, {"identifier": "registerSuggestHandler", "parameters": "(SuggestHandler suggestHandler)", "modifiers": "@Override public", "return": "void", "signature": "void registerSuggestHandler(SuggestHandler suggestHandler)", "full_signature": "@Override public void registerSuggestHandler(SuggestHandler suggestHandler)", "class_method_signature": "AbstractFormItem.registerSuggestHandler(SuggestHandler suggestHandler)", "testcase": false, "constructor": false}, {"identifier": "onSuggest", "parameters": "(String suggestion)", "modifiers": "public", "return": "void", "signature": "void onSuggest(String suggestion)", "full_signature": "public void onSuggest(String suggestion)", "class_method_signature": "AbstractFormItem.onSuggest(String suggestion)", "testcase": false, "constructor": false}, {"identifier": "isRestricted", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRestricted()", "full_signature": "@Override public boolean isRestricted()", "class_method_signature": "AbstractFormItem.isRestricted()", "testcase": false, "constructor": false}, {"identifier": "setRestricted", "parameters": "(boolean restricted)", "modifiers": "@Override public", "return": "void", "signature": "void setRestricted(boolean restricted)", "full_signature": "@Override public void setRestricted(boolean restricted)", "class_method_signature": "AbstractFormItem.setRestricted(boolean restricted)", "testcase": false, "constructor": false}, {"identifier": "isEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEnabled()", "full_signature": "@Override public boolean isEnabled()", "class_method_signature": "AbstractFormItem.isEnabled()", "testcase": false, "constructor": false}, {"identifier": "setEnabled", "parameters": "(boolean enabled)", "modifiers": "@Override public", "return": "void", "signature": "void setEnabled(boolean enabled)", "full_signature": "@Override public void setEnabled(boolean enabled)", "class_method_signature": "AbstractFormItem.setEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "getTabIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getTabIndex()", "full_signature": "@Override public int getTabIndex()", "class_method_signature": "AbstractFormItem.getTabIndex()", "testcase": false, "constructor": false}, {"identifier": "setTabIndex", "parameters": "(int index)", "modifiers": "@Override public", "return": "void", "signature": "void setTabIndex(int index)", "full_signature": "@Override public void setTabIndex(int index)", "class_method_signature": "AbstractFormItem.setTabIndex(int index)", "testcase": false, "constructor": false}, {"identifier": "setAccessKey", "parameters": "(char accessKey)", "modifiers": "@Override public", "return": "void", "signature": "void setAccessKey(char accessKey)", "full_signature": "@Override public void setAccessKey(char accessKey)", "class_method_signature": "AbstractFormItem.setAccessKey(char accessKey)", "testcase": false, "constructor": false}, {"identifier": "setFocus", "parameters": "(boolean focus)", "modifiers": "@Override public", "return": "void", "signature": "void setFocus(boolean focus)", "full_signature": "@Override public void setFocus(boolean focus)", "class_method_signature": "AbstractFormItem.setFocus(boolean focus)", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLabel()", "full_signature": "@Override public String getLabel()", "class_method_signature": "AbstractFormItem.getLabel()", "testcase": false, "constructor": false}, {"identifier": "setLabel", "parameters": "(String label)", "modifiers": "@Override public", "return": "void", "signature": "void setLabel(String label)", "full_signature": "@Override public void setLabel(String label)", "class_method_signature": "AbstractFormItem.setLabel(String label)", "testcase": false, "constructor": false}, {"identifier": "isRequired", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRequired()", "full_signature": "@Override public boolean isRequired()", "class_method_signature": "AbstractFormItem.isRequired()", "testcase": false, "constructor": false}, {"identifier": "setRequired", "parameters": "(boolean required)", "modifiers": "@Override public", "return": "void", "signature": "void setRequired(boolean required)", "full_signature": "@Override public void setRequired(boolean required)", "class_method_signature": "AbstractFormItem.setRequired(boolean required)", "testcase": false, "constructor": false}, {"identifier": "isModified", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isModified()", "full_signature": "@Override public final boolean isModified()", "class_method_signature": "AbstractFormItem.isModified()", "testcase": false, "constructor": false}, {"identifier": "setModified", "parameters": "(boolean modified)", "modifiers": "@Override public", "return": "void", "signature": "void setModified(boolean modified)", "full_signature": "@Override public void setModified(boolean modified)", "class_method_signature": "AbstractFormItem.setModified(boolean modified)", "testcase": false, "constructor": false}, {"identifier": "isUndefined", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isUndefined()", "full_signature": "@Override public final boolean isUndefined()", "class_method_signature": "AbstractFormItem.isUndefined()", "testcase": false, "constructor": false}, {"identifier": "setUndefined", "parameters": "(boolean undefined)", "modifiers": "@Override public", "return": "void", "signature": "void setUndefined(boolean undefined)", "full_signature": "@Override public void setUndefined(boolean undefined)", "class_method_signature": "AbstractFormItem.setUndefined(boolean undefined)", "testcase": false, "constructor": false}, {"identifier": "isDeprecated", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDeprecated()", "full_signature": "@Override public boolean isDeprecated()", "class_method_signature": "AbstractFormItem.isDeprecated()", "testcase": false, "constructor": false}, {"identifier": "setDeprecated", "parameters": "(Deprecation deprecation)", "modifiers": "@Override public", "return": "void", "signature": "void setDeprecated(Deprecation deprecation)", "full_signature": "@Override public void setDeprecated(Deprecation deprecation)", "class_method_signature": "AbstractFormItem.setDeprecated(Deprecation deprecation)", "testcase": false, "constructor": false}, {"identifier": "setForm", "parameters": "(Form form)", "modifiers": "", "return": "void", "signature": "void setForm(Form form)", "full_signature": " void setForm(Form form)", "class_method_signature": "AbstractFormItem.setForm(Form form)", "testcase": false, "constructor": false}], "file": "ballroom/src/main/java/org/jboss/hal/ballroom/form/AbstractFormItem.java"}, "focal_method": {"identifier": "setName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setName(String name) {\n        this.name = name;\n        appearances.values().forEach(a -> a.setName(name));\n    }", "signature": "void setName(String name)", "full_signature": "@Override public void setName(String name)", "class_method_signature": "AbstractFormItem.setName(String name)", "testcase": false, "constructor": false, "invocations": ["forEach", "values", "setName"]}, "repository": {"repo_id": 38317187, "url": "https://github.com/hal/console", "stars": 34, "created": "6/30/2015 3:26:19 PM +00:00", "updates": "2020-01-26T16:25:43+00:00", "fork": "False", "license": "licensed"}}