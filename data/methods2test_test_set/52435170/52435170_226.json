{"test_class": {"identifier": "MetadataExtractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MetadataExtractor metadataExtractor = new MetadataExtractor(MetadataExtractorTest.class);", "modifier": "private", "type": "MetadataExtractor", "declarator": "metadataExtractor = new MetadataExtractor(MetadataExtractorTest.class)", "var_name": "metadataExtractor"}], "file": "core/src/test/java/eu/drus/jpa/unit/core/metadata/MetadataExtractorTest.java"}, "test_case": {"identifier": "testPersistenceContext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPersistenceContext() {\n\n        // WHEN\n        final AnnotationInspector<PersistenceContext> ai = metadataExtractor.persistenceContext();\n\n        // THEN\n        assertThat(ai, notNullValue());\n    }", "signature": "void testPersistenceContext()", "full_signature": "@Test public void testPersistenceContext()", "class_method_signature": "MetadataExtractorTest.testPersistenceContext()", "testcase": true, "constructor": false, "invocations": ["persistenceContext", "assertThat", "notNullValue"]}, "focal_class": {"identifier": "MetadataExtractor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Class<?> testClass;", "modifier": "private final", "type": "Class<?>", "declarator": "testClass", "var_name": "testClass"}, {"original_string": "private final Map<Class<?>, AnnotationInspector<?>> inspectors = new HashMap<>();", "modifier": "private final", "type": "Map<Class<?>, AnnotationInspector<?>>", "declarator": "inspectors = new HashMap<>()", "var_name": "inspectors"}], "methods": [{"identifier": "MetadataExtractor", "parameters": "(final Class<?> testClass)", "modifiers": "public", "return": "", "signature": " MetadataExtractor(final Class<?> testClass)", "full_signature": "public  MetadataExtractor(final Class<?> testClass)", "class_method_signature": "MetadataExtractor.MetadataExtractor(final Class<?> testClass)", "testcase": false, "constructor": true}, {"identifier": "register", "parameters": "(final Class<?> testClass, final Class<K> annotation)", "modifiers": "private", "return": "void", "signature": "void register(final Class<?> testClass, final Class<K> annotation)", "full_signature": "private void register(final Class<?> testClass, final Class<K> annotation)", "class_method_signature": "MetadataExtractor.register(final Class<?> testClass, final Class<K> annotation)", "testcase": false, "constructor": false}, {"identifier": "using", "parameters": "(final Class<K> annotation)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "AnnotationInspector<K>", "signature": "AnnotationInspector<K> using(final Class<K> annotation)", "full_signature": "@SuppressWarnings(\"unchecked\") private AnnotationInspector<K> using(final Class<K> annotation)", "class_method_signature": "MetadataExtractor.using(final Class<K> annotation)", "testcase": false, "constructor": false}, {"identifier": "transactional", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<Transactional>", "signature": "AnnotationInspector<Transactional> transactional()", "full_signature": "public AnnotationInspector<Transactional> transactional()", "class_method_signature": "MetadataExtractor.transactional()", "testcase": false, "constructor": false}, {"identifier": "initialDataSets", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<InitialDataSets>", "signature": "AnnotationInspector<InitialDataSets> initialDataSets()", "full_signature": "public AnnotationInspector<InitialDataSets> initialDataSets()", "class_method_signature": "MetadataExtractor.initialDataSets()", "testcase": false, "constructor": false}, {"identifier": "expectedDataSets", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<ExpectedDataSets>", "signature": "AnnotationInspector<ExpectedDataSets> expectedDataSets()", "full_signature": "public AnnotationInspector<ExpectedDataSets> expectedDataSets()", "class_method_signature": "MetadataExtractor.expectedDataSets()", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<Cleanup>", "signature": "AnnotationInspector<Cleanup> cleanup()", "full_signature": "public AnnotationInspector<Cleanup> cleanup()", "class_method_signature": "MetadataExtractor.cleanup()", "testcase": false, "constructor": false}, {"identifier": "cleanupUsingScripts", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<CleanupUsingScripts>", "signature": "AnnotationInspector<CleanupUsingScripts> cleanupUsingScripts()", "full_signature": "public AnnotationInspector<CleanupUsingScripts> cleanupUsingScripts()", "class_method_signature": "MetadataExtractor.cleanupUsingScripts()", "testcase": false, "constructor": false}, {"identifier": "persistenceContext", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<PersistenceContext>", "signature": "AnnotationInspector<PersistenceContext> persistenceContext()", "full_signature": "public AnnotationInspector<PersistenceContext> persistenceContext()", "class_method_signature": "MetadataExtractor.persistenceContext()", "testcase": false, "constructor": false}, {"identifier": "persistenceUnit", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<PersistenceUnit>", "signature": "AnnotationInspector<PersistenceUnit> persistenceUnit()", "full_signature": "public AnnotationInspector<PersistenceUnit> persistenceUnit()", "class_method_signature": "MetadataExtractor.persistenceUnit()", "testcase": false, "constructor": false}, {"identifier": "applyScriptsBefore", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<ApplyScriptsBefore>", "signature": "AnnotationInspector<ApplyScriptsBefore> applyScriptsBefore()", "full_signature": "public AnnotationInspector<ApplyScriptsBefore> applyScriptsBefore()", "class_method_signature": "MetadataExtractor.applyScriptsBefore()", "testcase": false, "constructor": false}, {"identifier": "applyScriptsAfter", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<ApplyScriptsAfter>", "signature": "AnnotationInspector<ApplyScriptsAfter> applyScriptsAfter()", "full_signature": "public AnnotationInspector<ApplyScriptsAfter> applyScriptsAfter()", "class_method_signature": "MetadataExtractor.applyScriptsAfter()", "testcase": false, "constructor": false}, {"identifier": "cleanupCache", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<CleanupCache>", "signature": "AnnotationInspector<CleanupCache> cleanupCache()", "full_signature": "public AnnotationInspector<CleanupCache> cleanupCache()", "class_method_signature": "MetadataExtractor.cleanupCache()", "testcase": false, "constructor": false}, {"identifier": "bootstrapping", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<Bootstrapping>", "signature": "AnnotationInspector<Bootstrapping> bootstrapping()", "full_signature": "public AnnotationInspector<Bootstrapping> bootstrapping()", "class_method_signature": "MetadataExtractor.bootstrapping()", "testcase": false, "constructor": false}], "file": "core/src/main/java/eu/drus/jpa/unit/core/metadata/MetadataExtractor.java"}, "focal_method": {"identifier": "persistenceContext", "parameters": "()", "modifiers": "public", "return": "AnnotationInspector<PersistenceContext>", "body": "public AnnotationInspector<PersistenceContext> persistenceContext() {\n        return using(PersistenceContext.class);\n    }", "signature": "AnnotationInspector<PersistenceContext> persistenceContext()", "full_signature": "public AnnotationInspector<PersistenceContext> persistenceContext()", "class_method_signature": "MetadataExtractor.persistenceContext()", "testcase": false, "constructor": false, "invocations": ["using"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}