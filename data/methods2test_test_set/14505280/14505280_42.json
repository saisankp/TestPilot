{"test_class": {"identifier": "RenderedImageIconTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin/rasterizing/rasterizing/src/test/java/org/geomajas/plugin/rasterizing/legend/RenderedImageIconTest.java"}, "test_case": {"identifier": "testPaint", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testPaint() throws IOException {\n\t\tBufferedImage img = ImageIO.read(getClass().getResourceAsStream(\n\t\t\t\t\"/org/geomajas/plugin/rasterizing/images/testIcon.png\"));\n\t\tRenderedImageIcon icon = new RenderedImageIcon(img, 24, 24);\n\n\t\tBufferedImage copy = new BufferedImage(24, 24, BufferedImage.TYPE_4BYTE_ABGR);\n\t\ticon.paintIcon(null, copy.getGraphics(), 0, 0);\n\t\tcopy.getGraphics().dispose();\n\n\t\t//ImageIO.write(copy, \"png\", new FileOutputStream(\"my.png\"));\n\t\t\n\t\tRaster r1 = img.getData();\n\t\tRaster r2 = copy.getData();\n\t\tfor (int i = 0; i < 24; i++) {\n\t\t\tfor (int j = 0; j < 24; j++) {\n\t\t\t\tint[] p1 = r1.getPixel(i, j, (int[]) null);\n\t\t\t\tint[] p2 = r2.getPixel(i, j, (int[]) null);\n\t\t\t\tAssert.assertArrayEquals(p2, p1);\n\t\t\t}\n\t\t}\n\n\t}", "signature": "void testPaint()", "full_signature": "@Test public void testPaint()", "class_method_signature": "RenderedImageIconTest.testPaint()", "testcase": true, "constructor": false, "invocations": ["read", "getResourceAsStream", "getClass", "paintIcon", "getGraphics", "dispose", "getGraphics", "getData", "getData", "getPixel", "getPixel", "assertArrayEquals"]}, "focal_class": {"identifier": "RenderedImageIcon", "superclass": "", "interfaces": "implements Icon", "fields": [{"original_string": "private RenderedImage renderedImage;", "modifier": "private", "type": "RenderedImage", "declarator": "renderedImage", "var_name": "renderedImage"}, {"original_string": "private int width;", "modifier": "private", "type": "int", "declarator": "width", "var_name": "width"}, {"original_string": "private int height;", "modifier": "private", "type": "int", "declarator": "height", "var_name": "height"}], "methods": [{"identifier": "RenderedImageIcon", "parameters": "(RenderedImage renderedImage, int width, int height)", "modifiers": "public", "return": "", "signature": " RenderedImageIcon(RenderedImage renderedImage, int width, int height)", "full_signature": "public  RenderedImageIcon(RenderedImage renderedImage, int width, int height)", "class_method_signature": "RenderedImageIcon.RenderedImageIcon(RenderedImage renderedImage, int width, int height)", "testcase": false, "constructor": true}, {"identifier": "paintIcon", "parameters": "(Component c, Graphics g, int x, int y)", "modifiers": "public", "return": "void", "signature": "void paintIcon(Component c, Graphics g, int x, int y)", "full_signature": "public void paintIcon(Component c, Graphics g, int x, int y)", "class_method_signature": "RenderedImageIcon.paintIcon(Component c, Graphics g, int x, int y)", "testcase": false, "constructor": false}, {"identifier": "getIconWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getIconWidth()", "full_signature": "public int getIconWidth()", "class_method_signature": "RenderedImageIcon.getIconWidth()", "testcase": false, "constructor": false}, {"identifier": "getIconHeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getIconHeight()", "full_signature": "public int getIconHeight()", "class_method_signature": "RenderedImageIcon.getIconHeight()", "testcase": false, "constructor": false}], "file": "plugin/rasterizing/rasterizing/src/main/java/org/geomajas/plugin/rasterizing/legend/RenderedImageIcon.java"}, "focal_method": {"identifier": "paintIcon", "parameters": "(Component c, Graphics g, int x, int y)", "modifiers": "public", "return": "void", "body": "public void paintIcon(Component c, Graphics g, int x, int y) {\n\t\tif (!(g instanceof Graphics2D)) {\n\t\t\tthrow new IllegalStateException(\"paintIcon() only works on Graphics2D.\");\n\t\t}\n\t\tGraphics2D g2d = (Graphics2D) g;\n\t\tAffineTransform scale = AffineTransform.getScaleInstance((double) (width) / renderedImage.getWidth(),\n\t\t\t\t(double) (height) / renderedImage.getHeight());\n\t\tAffineTransform translate = AffineTransform.getTranslateInstance(x, y);\n\t\ttranslate.concatenate(scale);\n\t\tg2d.drawRenderedImage(renderedImage, translate);\n\t}", "signature": "void paintIcon(Component c, Graphics g, int x, int y)", "full_signature": "public void paintIcon(Component c, Graphics g, int x, int y)", "class_method_signature": "RenderedImageIcon.paintIcon(Component c, Graphics g, int x, int y)", "testcase": false, "constructor": false, "invocations": ["getScaleInstance", "getWidth", "getHeight", "getTranslateInstance", "concatenate", "drawRenderedImage"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}