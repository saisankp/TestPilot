{"test_class": {"identifier": "TestHttpJob", "superclass": "", "interfaces": "", "fields": [], "file": "http/src/test/java/com/ning/metrics/eventtracker/TestHttpJob.java"}, "test_case": {"identifier": "testSubmitRequest", "parameters": "()", "modifiers": "@Test(groups = \"fast\") public", "return": "void", "body": "@Test(groups = \"fast\")\n    public void testSubmitRequest() throws Exception\n    {\n        final ThreadSafeAsyncHttpClient client = Mockito.mock(ThreadSafeAsyncHttpClient.class);\n        final File file = Mockito.mock(File.class);\n        final AsyncCompletionHandler<Response> completionHandler = Mockito.mock(AsyncResponseCompletionHandler.class);\n        final HttpJob job = new HttpJob(client, file, completionHandler);\n\n        Mockito.verify(client, Mockito.times(0)).executeRequest(file, completionHandler);\n\n        job.submitRequest();\n\n        Mockito.verify(client, Mockito.times(1)).executeRequest(file, completionHandler);\n    }", "signature": "void testSubmitRequest()", "full_signature": "@Test(groups = \"fast\") public void testSubmitRequest()", "class_method_signature": "TestHttpJob.testSubmitRequest()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "executeRequest", "verify", "times", "submitRequest", "executeRequest", "verify", "times"]}, "focal_class": {"identifier": "HttpJob", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ThreadSafeAsyncHttpClient client;", "modifier": "private final", "type": "ThreadSafeAsyncHttpClient", "declarator": "client", "var_name": "client"}, {"original_string": "private final File file;", "modifier": "private final", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private final AsyncCompletionHandler<Response> completionHandler;", "modifier": "private final", "type": "AsyncCompletionHandler<Response>", "declarator": "completionHandler", "var_name": "completionHandler"}], "methods": [{"identifier": "HttpJob", "parameters": "(final ThreadSafeAsyncHttpClient client, final File file, final AsyncCompletionHandler<Response> completionHandler)", "modifiers": "public", "return": "", "signature": " HttpJob(final ThreadSafeAsyncHttpClient client, final File file, final AsyncCompletionHandler<Response> completionHandler)", "full_signature": "public  HttpJob(final ThreadSafeAsyncHttpClient client, final File file, final AsyncCompletionHandler<Response> completionHandler)", "class_method_signature": "HttpJob.HttpJob(final ThreadSafeAsyncHttpClient client, final File file, final AsyncCompletionHandler<Response> completionHandler)", "testcase": false, "constructor": true}, {"identifier": "submitRequest", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void submitRequest()", "full_signature": "public void submitRequest()", "class_method_signature": "HttpJob.submitRequest()", "testcase": false, "constructor": false}], "file": "http/src/main/java/com/ning/metrics/eventtracker/HttpJob.java"}, "focal_method": {"identifier": "submitRequest", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void submitRequest()\n    {\n        client.executeRequest(file, completionHandler);\n    }", "signature": "void submitRequest()", "full_signature": "public void submitRequest()", "class_method_signature": "HttpJob.submitRequest()", "testcase": false, "constructor": false, "invocations": ["executeRequest"]}, "repository": {"repo_id": 1027501, "url": "https://github.com/pierre/eventtracker", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 10, "size": 509, "license": "licensed"}}