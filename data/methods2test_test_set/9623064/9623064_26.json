{"test_class": {"identifier": "ModelPageProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PageMocker pageMocker = new PageMocker();", "modifier": "private", "type": "PageMocker", "declarator": "pageMocker = new PageMocker()", "var_name": "pageMocker"}], "file": "webmagic-extension/src/test/java/us/codecraft/webmagic/model/ModelPageProcessorTest.java"}, "test_case": {"identifier": "testExtractLinks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExtractLinks() throws Exception {\n        ModelPageProcessor modelPageProcessor = ModelPageProcessor.create(null, MockModel.class);\n        Page page = pageMocker.getMockPage();\n        modelPageProcessor.process(page);\n        assertThat(page.getTargetRequests()).containsExactly(new Request(\"http://webmagic.io/bar/3\"), new Request(\"http://webmagic.io/bar/4\"), new Request(\"http://webmagic.io/foo/3\"), new Request(\"http://webmagic.io/foo/4\"));\n    }", "signature": "void testExtractLinks()", "full_signature": "@Test public void testExtractLinks()", "class_method_signature": "ModelPageProcessorTest.testExtractLinks()", "testcase": true, "constructor": false, "invocations": ["create", "getMockPage", "process", "containsExactly", "assertThat", "getTargetRequests"]}, "focal_class": {"identifier": "ModelPageProcessor", "superclass": "", "interfaces": "implements PageProcessor", "fields": [{"original_string": "private List<PageModelExtractor> pageModelExtractorList = new ArrayList<PageModelExtractor>();", "modifier": "private", "type": "List<PageModelExtractor>", "declarator": "pageModelExtractorList = new ArrayList<PageModelExtractor>()", "var_name": "pageModelExtractorList"}, {"original_string": "private Site site;", "modifier": "private", "type": "Site", "declarator": "site", "var_name": "site"}, {"original_string": "private boolean extractLinks = true;", "modifier": "private", "type": "boolean", "declarator": "extractLinks = true", "var_name": "extractLinks"}], "methods": [{"identifier": "create", "parameters": "(Site site, Class... clazzs)", "modifiers": "public static", "return": "ModelPageProcessor", "signature": "ModelPageProcessor create(Site site, Class... clazzs)", "full_signature": "public static ModelPageProcessor create(Site site, Class... clazzs)", "class_method_signature": "ModelPageProcessor.create(Site site, Class... clazzs)", "testcase": false, "constructor": false}, {"identifier": "addPageModel", "parameters": "(Class clazz)", "modifiers": "public", "return": "ModelPageProcessor", "signature": "ModelPageProcessor addPageModel(Class clazz)", "full_signature": "public ModelPageProcessor addPageModel(Class clazz)", "class_method_signature": "ModelPageProcessor.addPageModel(Class clazz)", "testcase": false, "constructor": false}, {"identifier": "ModelPageProcessor", "parameters": "(Site site)", "modifiers": "private", "return": "", "signature": " ModelPageProcessor(Site site)", "full_signature": "private  ModelPageProcessor(Site site)", "class_method_signature": "ModelPageProcessor.ModelPageProcessor(Site site)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(Page page)", "modifiers": "@Override public", "return": "void", "signature": "void process(Page page)", "full_signature": "@Override public void process(Page page)", "class_method_signature": "ModelPageProcessor.process(Page page)", "testcase": false, "constructor": false}, {"identifier": "extractLinks", "parameters": "(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns)", "modifiers": "private", "return": "void", "signature": "void extractLinks(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns)", "full_signature": "private void extractLinks(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns)", "class_method_signature": "ModelPageProcessor.extractLinks(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns)", "testcase": false, "constructor": false}, {"identifier": "postProcessPageModel", "parameters": "(Class clazz, Object object)", "modifiers": "protected", "return": "void", "signature": "void postProcessPageModel(Class clazz, Object object)", "full_signature": "protected void postProcessPageModel(Class clazz, Object object)", "class_method_signature": "ModelPageProcessor.postProcessPageModel(Class clazz, Object object)", "testcase": false, "constructor": false}, {"identifier": "getSite", "parameters": "()", "modifiers": "@Override public", "return": "Site", "signature": "Site getSite()", "full_signature": "@Override public Site getSite()", "class_method_signature": "ModelPageProcessor.getSite()", "testcase": false, "constructor": false}, {"identifier": "isExtractLinks", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isExtractLinks()", "full_signature": "public boolean isExtractLinks()", "class_method_signature": "ModelPageProcessor.isExtractLinks()", "testcase": false, "constructor": false}, {"identifier": "setExtractLinks", "parameters": "(boolean extractLinks)", "modifiers": "public", "return": "void", "signature": "void setExtractLinks(boolean extractLinks)", "full_signature": "public void setExtractLinks(boolean extractLinks)", "class_method_signature": "ModelPageProcessor.setExtractLinks(boolean extractLinks)", "testcase": false, "constructor": false}], "file": "webmagic-extension/src/main/java/us/codecraft/webmagic/model/ModelPageProcessor.java"}, "focal_method": {"identifier": "extractLinks", "parameters": "(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns)", "modifiers": "private", "return": "void", "body": "private void extractLinks(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns) {\n        List<String> links;\n        if (urlRegionSelector == null) {\n            links = page.getHtml().links().all();\n        } else {\n            links = page.getHtml().selectList(urlRegionSelector).links().all();\n        }\n        for (String link : links) {\n            for (Pattern targetUrlPattern : urlPatterns) {\n                Matcher matcher = targetUrlPattern.matcher(link);\n                if (matcher.find()) {\n                    page.addTargetRequest(new Request(matcher.group(0)));\n                }\n            }\n        }\n    }", "signature": "void extractLinks(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns)", "full_signature": "private void extractLinks(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns)", "class_method_signature": "ModelPageProcessor.extractLinks(Page page, Selector urlRegionSelector, List<Pattern> urlPatterns)", "testcase": false, "constructor": false, "invocations": ["all", "links", "getHtml", "all", "links", "selectList", "getHtml", "matcher", "find", "addTargetRequest", "group"]}, "repository": {"repo_id": 9623064, "url": "https://github.com/code4craft/webmagic", "language": "Java", "is_fork": false, "fork_count": 3804, "stargazer_count": 9136, "size": 17041, "license": "licensed"}}