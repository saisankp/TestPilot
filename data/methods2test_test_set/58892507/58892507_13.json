{"test_class": {"identifier": "WaiterTest", "superclass": "extends BaseAkkaTestCase", "interfaces": "", "fields": [], "file": "exercise_three/src/test/java/com/typesafe/training/coffeehouse/WaiterTest.java"}, "test_case": {"identifier": "shouldThrowFrustratedExceptionWhenMaxComplaintReached", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldThrowFrustratedExceptionWhenMaxComplaintReached() {\n    new JavaTestKit(system) {{\n      ActorRef waiter = system.actorOf(Waiter.props(system.deadLetters(), system.deadLetters(), 0));\n      eventFilter(this, Waiter.FrustratedException.class, \"\", 1, () -> {\n        waiter.tell(new Waiter.Complaint(new Coffee.Akkaccino()), ActorRef.noSender());\n      });\n    }};\n  }", "signature": "void shouldThrowFrustratedExceptionWhenMaxComplaintReached()", "full_signature": "@Test public void shouldThrowFrustratedExceptionWhenMaxComplaintReached()", "class_method_signature": "WaiterTest.shouldThrowFrustratedExceptionWhenMaxComplaintReached()", "testcase": true, "constructor": false, "invocations": ["actorOf", "props", "deadLetters", "deadLetters", "eventFilter", "tell", "noSender"]}, "focal_class": {"identifier": "Waiter", "superclass": "extends AbstractLoggingActor", "interfaces": "", "fields": [{"original_string": "private ActorRef coffeeHouse;", "modifier": "private", "type": "ActorRef", "declarator": "coffeeHouse", "var_name": "coffeeHouse"}, {"original_string": "private ActorRef barista;", "modifier": "private", "type": "ActorRef", "declarator": "barista", "var_name": "barista"}, {"original_string": "private int maxComplaintCount;", "modifier": "private", "type": "int", "declarator": "maxComplaintCount", "var_name": "maxComplaintCount"}, {"original_string": "private int complaintCount;", "modifier": "private", "type": "int", "declarator": "complaintCount", "var_name": "complaintCount"}], "methods": [{"identifier": "Waiter", "parameters": "(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "modifiers": "public", "return": "", "signature": " Waiter(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "full_signature": "public  Waiter(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "class_method_signature": "Waiter.Waiter(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "testcase": false, "constructor": true}, {"identifier": "props", "parameters": "(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "modifiers": "public static", "return": "Props", "signature": "Props props(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "full_signature": "public static Props props(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "class_method_signature": "Waiter.props(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "testcase": false, "constructor": false}], "file": "exercise_three/src/main/java/com/typesafe/training/coffeehouse/Waiter.java"}, "focal_method": {"identifier": "props", "parameters": "(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "modifiers": "public static", "return": "Props", "body": "public static Props props(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount){\n        return Props.create(Waiter.class, () -> new Waiter(coffeeHouse, barista, maxComplaintCount));\n    }", "signature": "Props props(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "full_signature": "public static Props props(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "class_method_signature": "Waiter.props(ActorRef coffeeHouse, ActorRef barista, int maxComplaintCount)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 58892507, "url": "https://github.com/ironfish/reactive-system-design", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 11, "size": 3822, "license": "licensed"}}