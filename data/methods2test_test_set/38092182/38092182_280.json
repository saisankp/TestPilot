{"test_class": {"identifier": "ViewGestureDetectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Activity context;", "modifier": "private", "type": "Activity", "declarator": "context", "var_name": "context"}, {"original_string": "private ViewGestureDetector subject;", "modifier": "private", "type": "ViewGestureDetector", "declarator": "subject", "var_name": "subject"}, {"original_string": "private AdAlertGestureListener adAlertGestureListener;", "modifier": "private", "type": "AdAlertGestureListener", "declarator": "adAlertGestureListener", "var_name": "adAlertGestureListener"}, {"original_string": "private View view;", "modifier": "private", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "private AdConfiguration adConfiguration;", "modifier": "private", "type": "AdConfiguration", "declarator": "adConfiguration", "var_name": "adConfiguration"}], "file": "MoPubAd/mopub-sdk/src/test/java/com/mopub/mobileads/ViewGestureDetectorTest.java"}, "test_case": {"identifier": "onTouchEvent_whenActionDown_shouldForwardOnTouchEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onTouchEvent_whenActionDown_shouldForwardOnTouchEvent() throws Exception {\n        MotionEvent expectedMotionEvent = createMotionEvent(MotionEvent.ACTION_DOWN);\n\n        subject.sendTouchEvent(expectedMotionEvent);\n\n        MotionEvent actualMotionEvent = shadowOf(subject).getOnTouchEventMotionEvent();\n\n        assertThat(actualMotionEvent).isEqualTo(expectedMotionEvent);\n    }", "signature": "void onTouchEvent_whenActionDown_shouldForwardOnTouchEvent()", "full_signature": "@Test public void onTouchEvent_whenActionDown_shouldForwardOnTouchEvent()", "class_method_signature": "ViewGestureDetectorTest.onTouchEvent_whenActionDown_shouldForwardOnTouchEvent()", "testcase": true, "constructor": false, "invocations": ["createMotionEvent", "sendTouchEvent", "getOnTouchEventMotionEvent", "shadowOf", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ViewGestureDetector", "superclass": "extends GestureDetector", "interfaces": "", "fields": [{"original_string": "private final View mView;", "modifier": "private final", "type": "View", "declarator": "mView", "var_name": "mView"}, {"original_string": "private AdAlertGestureListener mAdAlertGestureListener;", "modifier": "private", "type": "AdAlertGestureListener", "declarator": "mAdAlertGestureListener", "var_name": "mAdAlertGestureListener"}, {"original_string": "private UserClickListener mUserClickListener;", "modifier": "private", "type": "UserClickListener", "declarator": "mUserClickListener", "var_name": "mUserClickListener"}], "methods": [{"identifier": "ViewGestureDetector", "parameters": "(Context context, View view, AdConfiguration adConfiguration)", "modifiers": "public", "return": "", "signature": " ViewGestureDetector(Context context, View view, AdConfiguration adConfiguration)", "full_signature": "public  ViewGestureDetector(Context context, View view, AdConfiguration adConfiguration)", "class_method_signature": "ViewGestureDetector.ViewGestureDetector(Context context, View view, AdConfiguration adConfiguration)", "testcase": false, "constructor": true}, {"identifier": "ViewGestureDetector", "parameters": "(Context context, View view, AdAlertGestureListener adAlertGestureListener)", "modifiers": "private", "return": "", "signature": " ViewGestureDetector(Context context, View view, AdAlertGestureListener adAlertGestureListener)", "full_signature": "private  ViewGestureDetector(Context context, View view, AdAlertGestureListener adAlertGestureListener)", "class_method_signature": "ViewGestureDetector.ViewGestureDetector(Context context, View view, AdAlertGestureListener adAlertGestureListener)", "testcase": false, "constructor": true}, {"identifier": "sendTouchEvent", "parameters": "(MotionEvent motionEvent)", "modifiers": "public", "return": "void", "signature": "void sendTouchEvent(MotionEvent motionEvent)", "full_signature": "public void sendTouchEvent(MotionEvent motionEvent)", "class_method_signature": "ViewGestureDetector.sendTouchEvent(MotionEvent motionEvent)", "testcase": false, "constructor": false}, {"identifier": "setUserClickListener", "parameters": "(UserClickListener listener)", "modifiers": "public", "return": "void", "signature": "void setUserClickListener(UserClickListener listener)", "full_signature": "public void setUserClickListener(UserClickListener listener)", "class_method_signature": "ViewGestureDetector.setUserClickListener(UserClickListener listener)", "testcase": false, "constructor": false}, {"identifier": "resetAdFlaggingGesture", "parameters": "()", "modifiers": "", "return": "void", "signature": "void resetAdFlaggingGesture()", "full_signature": " void resetAdFlaggingGesture()", "class_method_signature": "ViewGestureDetector.resetAdFlaggingGesture()", "testcase": false, "constructor": false}, {"identifier": "isMotionEventInView", "parameters": "(MotionEvent motionEvent, View view)", "modifiers": "private", "return": "boolean", "signature": "boolean isMotionEventInView(MotionEvent motionEvent, View view)", "full_signature": "private boolean isMotionEventInView(MotionEvent motionEvent, View view)", "class_method_signature": "ViewGestureDetector.isMotionEventInView(MotionEvent motionEvent, View view)", "testcase": false, "constructor": false}, {"identifier": "setAdAlertGestureListener", "parameters": "(AdAlertGestureListener adAlertGestureListener)", "modifiers": "@Deprecated", "return": "void", "signature": "void setAdAlertGestureListener(AdAlertGestureListener adAlertGestureListener)", "full_signature": "@Deprecated void setAdAlertGestureListener(AdAlertGestureListener adAlertGestureListener)", "class_method_signature": "ViewGestureDetector.setAdAlertGestureListener(AdAlertGestureListener adAlertGestureListener)", "testcase": false, "constructor": false}], "file": "MoPubAd/mopub-sdk/src/main/java/com/mopub/mobileads/ViewGestureDetector.java"}, "focal_method": {"identifier": "sendTouchEvent", "parameters": "(MotionEvent motionEvent)", "modifiers": "public", "return": "void", "body": "public void sendTouchEvent(MotionEvent motionEvent) {\n        switch (motionEvent.getAction()) {\n            case MotionEvent.ACTION_UP:\n                if (mUserClickListener != null) {\n                    mUserClickListener.onUserClick();\n                } else {\n                    MoPubLog.d(\"View's onUserClick() is not registered.\");\n                }\n                mAdAlertGestureListener.finishGestureDetection();\n                break;\n\n            case MotionEvent.ACTION_DOWN:\n                onTouchEvent(motionEvent);\n                break;\n\n            case MotionEvent.ACTION_MOVE:\n                if (isMotionEventInView(motionEvent, mView)) {\n                    onTouchEvent(motionEvent);\n                } else {\n                    resetAdFlaggingGesture();\n                }\n                break;\n\n            default:\n                break;\n        }\n    }", "signature": "void sendTouchEvent(MotionEvent motionEvent)", "full_signature": "public void sendTouchEvent(MotionEvent motionEvent)", "class_method_signature": "ViewGestureDetector.sendTouchEvent(MotionEvent motionEvent)", "testcase": false, "constructor": false, "invocations": ["getAction", "onUserClick", "d", "finishGestureDetection", "onTouchEvent", "isMotionEventInView", "onTouchEvent", "resetAdFlaggingGesture"]}, "repository": {"repo_id": 38092182, "url": "https://github.com/harshalbenake/hbworkspace2-100", "language": "Java", "is_fork": false, "fork_count": 160, "stargazer_count": 191, "size": 307516, "license": "licensed"}}