{"test_class": {"identifier": "MapUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "agorava-core-impl/src/test/java/org/agorava/utils/MapUtilsTest.java"}, "test_case": {"identifier": "shouldPrettyPrintMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldPrettyPrintMap() {\n        Map<Integer, String> map = new HashMap<Integer, String>();\n        map.put(1, \"one\");\n        map.put(2, \"two\");\n        map.put(3, \"three\");\n        map.put(4, \"four\");\n        Assert.assertEquals(\"{ 1 -> one , 2 -> two , 3 -> three , 4 -> four }\", MapUtils.toString(map));\n    }", "signature": "void shouldPrettyPrintMap()", "full_signature": "@Test public void shouldPrettyPrintMap()", "class_method_signature": "MapUtilsTest.shouldPrettyPrintMap()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "assertEquals", "toString"]}, "focal_class": {"identifier": "MapUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MapUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MapUtils()", "full_signature": "private  MapUtils()", "class_method_signature": "MapUtils.MapUtils()", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "(Map<K, V> map)", "modifiers": "public static", "return": "String", "signature": "String toString(Map<K, V> map)", "full_signature": "public static String toString(Map<K, V> map)", "class_method_signature": "MapUtils.toString(Map<K, V> map)", "testcase": false, "constructor": false}], "file": "agorava-core-impl/src/main/java/org/agorava/utils/MapUtils.java"}, "focal_method": {"identifier": "toString", "parameters": "(Map<K, V> map)", "modifiers": "public static", "return": "String", "body": "public static <K, V> String toString(Map<K, V> map) {\n        if (map == null) return \"\";\n        if (map.isEmpty()) return \"{}\";\n\n        StringBuilder result = new StringBuilder();\n        for (Map.Entry<K, V> entry : map.entrySet()) {\n            result.append(String.format(\", %s -> %s \", entry.getKey().toString(), entry.getValue().toString()));\n        }\n        return \"{\" + result.substring(1) + \"}\";\n    }", "signature": "String toString(Map<K, V> map)", "full_signature": "public static String toString(Map<K, V> map)", "class_method_signature": "MapUtils.toString(Map<K, V> map)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "entrySet", "append", "format", "toString", "getKey", "toString", "getValue", "substring"]}, "repository": {"repo_id": 4263930, "url": "https://github.com/agorava/agorava-core", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 51, "size": 862, "license": "licensed"}}