{"test_class": {"identifier": "JTMTopicMapWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TopicMapBuilderIF builder;", "modifier": "private", "type": "TopicMapBuilderIF", "declarator": "builder", "var_name": "builder"}, {"original_string": "private TopicMapIF tm;", "modifier": "private", "type": "TopicMapIF", "declarator": "tm", "var_name": "tm"}], "file": "ontopia-engine/src/test/java/net/ontopia/topicmaps/utils/jtm/JTMTopicMapWriterTest.java"}, "test_case": {"identifier": "testWriteToOutputStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testWriteToOutputStream() throws IOException {\n    builder.makeTopic();\n    File file = TestFileUtils.getTestOutputFile(\"jtm\", \"io-o.jtm\");\n    new JTMTopicMapWriter(new FileOutputStream(file)).write(tm);\n    Assert.assertTrue(Files.size(file.toPath()) > 0);\n  }", "signature": "void testWriteToOutputStream()", "full_signature": "@Test public void testWriteToOutputStream()", "class_method_signature": "JTMTopicMapWriterTest.testWriteToOutputStream()", "testcase": true, "constructor": false, "invocations": ["makeTopic", "getTestOutputFile", "write", "assertTrue", "size", "toPath"]}, "focal_class": {"identifier": "JTMTopicMapWriter", "superclass": "", "interfaces": "implements TopicMapWriterIF", "fields": [{"original_string": "private static final Logger log = LoggerFactory\n      .getLogger(JTMTopicMapWriter.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory\n      .getLogger(JTMTopicMapWriter.class.getName())", "var_name": "log"}, {"original_string": "private static final String TYPE = \"type\";", "modifier": "private static final", "type": "String", "declarator": "TYPE = \"type\"", "var_name": "TYPE"}, {"original_string": "private static final String SI = \"si:\";", "modifier": "private static final", "type": "String", "declarator": "SI = \"si:\"", "var_name": "SI"}, {"original_string": "private final static String VERSION = \"1.0\";", "modifier": "private final static", "type": "String", "declarator": "VERSION = \"1.0\"", "var_name": "VERSION"}, {"original_string": "private JSONWriter writer;", "modifier": "private", "type": "JSONWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private LocatorIF baseLoc;", "modifier": "private", "type": "LocatorIF", "declarator": "baseLoc", "var_name": "baseLoc"}], "methods": [{"identifier": "JTMTopicMapWriter", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " JTMTopicMapWriter(File file)", "full_signature": "public  JTMTopicMapWriter(File file)", "class_method_signature": "JTMTopicMapWriter.JTMTopicMapWriter(File file)", "testcase": false, "constructor": true}, {"identifier": "JTMTopicMapWriter", "parameters": "(File file, String encoding)", "modifiers": "public", "return": "", "signature": " JTMTopicMapWriter(File file, String encoding)", "full_signature": "public  JTMTopicMapWriter(File file, String encoding)", "class_method_signature": "JTMTopicMapWriter.JTMTopicMapWriter(File file, String encoding)", "testcase": false, "constructor": true}, {"identifier": "JTMTopicMapWriter", "parameters": "(OutputStream stream)", "modifiers": "public", "return": "", "signature": " JTMTopicMapWriter(OutputStream stream)", "full_signature": "public  JTMTopicMapWriter(OutputStream stream)", "class_method_signature": "JTMTopicMapWriter.JTMTopicMapWriter(OutputStream stream)", "testcase": false, "constructor": true}, {"identifier": "JTMTopicMapWriter", "parameters": "(OutputStream stream, String encoding)", "modifiers": "public", "return": "", "signature": " JTMTopicMapWriter(OutputStream stream, String encoding)", "full_signature": "public  JTMTopicMapWriter(OutputStream stream, String encoding)", "class_method_signature": "JTMTopicMapWriter.JTMTopicMapWriter(OutputStream stream, String encoding)", "testcase": false, "constructor": true}, {"identifier": "JTMTopicMapWriter", "parameters": "(Writer out)", "modifiers": "public", "return": "", "signature": " JTMTopicMapWriter(Writer out)", "full_signature": "public  JTMTopicMapWriter(Writer out)", "class_method_signature": "JTMTopicMapWriter.JTMTopicMapWriter(Writer out)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(TopicMapIF tm)", "modifiers": "@Override public", "return": "void", "signature": "void write(TopicMapIF tm)", "full_signature": "@Override public void write(TopicMapIF tm)", "class_method_signature": "JTMTopicMapWriter.write(TopicMapIF tm)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(TMObjectIF object)", "modifiers": "public", "return": "void", "signature": "void write(TMObjectIF object)", "full_signature": "public void write(TMObjectIF object)", "class_method_signature": "JTMTopicMapWriter.write(TMObjectIF object)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Collection<TopicIF> topics,\n                    Collection<AssociationIF> assocs)", "modifiers": "public", "return": "void", "signature": "void write(Collection<TopicIF> topics,\n                    Collection<AssociationIF> assocs)", "full_signature": "public void write(Collection<TopicIF> topics,\n                    Collection<AssociationIF> assocs)", "class_method_signature": "JTMTopicMapWriter.write(Collection<TopicIF> topics,\n                    Collection<AssociationIF> assocs)", "testcase": false, "constructor": false}, {"identifier": "serializeTopicMap", "parameters": "(TopicMapIF tm)", "modifiers": "private", "return": "void", "signature": "void serializeTopicMap(TopicMapIF tm)", "full_signature": "private void serializeTopicMap(TopicMapIF tm)", "class_method_signature": "JTMTopicMapWriter.serializeTopicMap(TopicMapIF tm)", "testcase": false, "constructor": false}, {"identifier": "serializeTopic", "parameters": "(TopicIF topic, boolean topLevel)", "modifiers": "private", "return": "void", "signature": "void serializeTopic(TopicIF topic, boolean topLevel)", "full_signature": "private void serializeTopic(TopicIF topic, boolean topLevel)", "class_method_signature": "JTMTopicMapWriter.serializeTopic(TopicIF topic, boolean topLevel)", "testcase": false, "constructor": false}, {"identifier": "serializeAssociation", "parameters": "(AssociationIF association, boolean topLevel)", "modifiers": "private", "return": "void", "signature": "void serializeAssociation(AssociationIF association, boolean topLevel)", "full_signature": "private void serializeAssociation(AssociationIF association, boolean topLevel)", "class_method_signature": "JTMTopicMapWriter.serializeAssociation(AssociationIF association, boolean topLevel)", "testcase": false, "constructor": false}, {"identifier": "serializeRole", "parameters": "(AssociationRoleIF role, boolean topLevel)", "modifiers": "private", "return": "void", "signature": "void serializeRole(AssociationRoleIF role, boolean topLevel)", "full_signature": "private void serializeRole(AssociationRoleIF role, boolean topLevel)", "class_method_signature": "JTMTopicMapWriter.serializeRole(AssociationRoleIF role, boolean topLevel)", "testcase": false, "constructor": false}, {"identifier": "serializeTypeInstanceAssociation", "parameters": "(TopicIF type, TopicIF instance)", "modifiers": "private", "return": "void", "signature": "void serializeTypeInstanceAssociation(TopicIF type, TopicIF instance)", "full_signature": "private void serializeTypeInstanceAssociation(TopicIF type, TopicIF instance)", "class_method_signature": "JTMTopicMapWriter.serializeTypeInstanceAssociation(TopicIF type, TopicIF instance)", "testcase": false, "constructor": false}, {"identifier": "serializeName", "parameters": "(TopicNameIF name, boolean topLevel)", "modifiers": "private", "return": "void", "signature": "void serializeName(TopicNameIF name, boolean topLevel)", "full_signature": "private void serializeName(TopicNameIF name, boolean topLevel)", "class_method_signature": "JTMTopicMapWriter.serializeName(TopicNameIF name, boolean topLevel)", "testcase": false, "constructor": false}, {"identifier": "serializeVariant", "parameters": "(VariantNameIF variant, boolean topLevel)", "modifiers": "private", "return": "void", "signature": "void serializeVariant(VariantNameIF variant, boolean topLevel)", "full_signature": "private void serializeVariant(VariantNameIF variant, boolean topLevel)", "class_method_signature": "JTMTopicMapWriter.serializeVariant(VariantNameIF variant, boolean topLevel)", "testcase": false, "constructor": false}, {"identifier": "serializeOccurrence", "parameters": "(OccurrenceIF occurrence, boolean topLevel)", "modifiers": "private", "return": "void", "signature": "void serializeOccurrence(OccurrenceIF occurrence, boolean topLevel)", "full_signature": "private void serializeOccurrence(OccurrenceIF occurrence, boolean topLevel)", "class_method_signature": "JTMTopicMapWriter.serializeOccurrence(OccurrenceIF occurrence, boolean topLevel)", "testcase": false, "constructor": false}, {"identifier": "serializeParent", "parameters": "(TopicIF parent)", "modifiers": "private", "return": "void", "signature": "void serializeParent(TopicIF parent)", "full_signature": "private void serializeParent(TopicIF parent)", "class_method_signature": "JTMTopicMapWriter.serializeParent(TopicIF parent)", "testcase": false, "constructor": false}, {"identifier": "serializeItemIdentifiers", "parameters": "(TMObjectIF obj)", "modifiers": "private", "return": "void", "signature": "void serializeItemIdentifiers(TMObjectIF obj)", "full_signature": "private void serializeItemIdentifiers(TMObjectIF obj)", "class_method_signature": "JTMTopicMapWriter.serializeItemIdentifiers(TMObjectIF obj)", "testcase": false, "constructor": false}, {"identifier": "serializeSubjectIdentifiers", "parameters": "(TopicIF topic)", "modifiers": "private", "return": "void", "signature": "void serializeSubjectIdentifiers(TopicIF topic)", "full_signature": "private void serializeSubjectIdentifiers(TopicIF topic)", "class_method_signature": "JTMTopicMapWriter.serializeSubjectIdentifiers(TopicIF topic)", "testcase": false, "constructor": false}, {"identifier": "serializeSubjectLocators", "parameters": "(TopicIF topic)", "modifiers": "private", "return": "void", "signature": "void serializeSubjectLocators(TopicIF topic)", "full_signature": "private void serializeSubjectLocators(TopicIF topic)", "class_method_signature": "JTMTopicMapWriter.serializeSubjectLocators(TopicIF topic)", "testcase": false, "constructor": false}, {"identifier": "serializeIdentifiers", "parameters": "(String key, Collection<LocatorIF> ids)", "modifiers": "private", "return": "void", "signature": "void serializeIdentifiers(String key, Collection<LocatorIF> ids)", "full_signature": "private void serializeIdentifiers(String key, Collection<LocatorIF> ids)", "class_method_signature": "JTMTopicMapWriter.serializeIdentifiers(String key, Collection<LocatorIF> ids)", "testcase": false, "constructor": false}, {"identifier": "serializeScope", "parameters": "(ScopedIF obj)", "modifiers": "private", "return": "void", "signature": "void serializeScope(ScopedIF obj)", "full_signature": "private void serializeScope(ScopedIF obj)", "class_method_signature": "JTMTopicMapWriter.serializeScope(ScopedIF obj)", "testcase": false, "constructor": false}, {"identifier": "serializeType", "parameters": "(TypedIF obj)", "modifiers": "private", "return": "void", "signature": "void serializeType(TypedIF obj)", "full_signature": "private void serializeType(TypedIF obj)", "class_method_signature": "JTMTopicMapWriter.serializeType(TypedIF obj)", "testcase": false, "constructor": false}, {"identifier": "serializeDataType", "parameters": "(LocatorIF type)", "modifiers": "private", "return": "void", "signature": "void serializeDataType(LocatorIF type)", "full_signature": "private void serializeDataType(LocatorIF type)", "class_method_signature": "JTMTopicMapWriter.serializeDataType(LocatorIF type)", "testcase": false, "constructor": false}, {"identifier": "serializeValue", "parameters": "(LocatorIF loc, String value)", "modifiers": "private", "return": "void", "signature": "void serializeValue(LocatorIF loc, String value)", "full_signature": "private void serializeValue(LocatorIF loc, String value)", "class_method_signature": "JTMTopicMapWriter.serializeValue(LocatorIF loc, String value)", "testcase": false, "constructor": false}, {"identifier": "serializeReifier", "parameters": "(ReifiableIF obj)", "modifiers": "private", "return": "void", "signature": "void serializeReifier(ReifiableIF obj)", "full_signature": "private void serializeReifier(ReifiableIF obj)", "class_method_signature": "JTMTopicMapWriter.serializeReifier(ReifiableIF obj)", "testcase": false, "constructor": false}, {"identifier": "normaliseLocatorReference", "parameters": "(LocatorIF loc)", "modifiers": "private", "return": "String", "signature": "String normaliseLocatorReference(LocatorIF loc)", "full_signature": "private String normaliseLocatorReference(LocatorIF loc)", "class_method_signature": "JTMTopicMapWriter.normaliseLocatorReference(LocatorIF loc)", "testcase": false, "constructor": false}, {"identifier": "longestCommonPath", "parameters": "(String source1, String source2)", "modifiers": "private", "return": "String", "signature": "String longestCommonPath(String source1, String source2)", "full_signature": "private String longestCommonPath(String source1, String source2)", "class_method_signature": "JTMTopicMapWriter.longestCommonPath(String source1, String source2)", "testcase": false, "constructor": false}, {"identifier": "getTopicRef", "parameters": "(TopicIF ref)", "modifiers": "private", "return": "String", "signature": "String getTopicRef(TopicIF ref)", "full_signature": "private String getTopicRef(TopicIF ref)", "class_method_signature": "JTMTopicMapWriter.getTopicRef(TopicIF ref)", "testcase": false, "constructor": false}, {"identifier": "getJTMTopicRef", "parameters": "(LOCATOR_TYPE type, LocatorIF loc)", "modifiers": "private", "return": "String", "signature": "String getJTMTopicRef(LOCATOR_TYPE type, LocatorIF loc)", "full_signature": "private String getJTMTopicRef(LOCATOR_TYPE type, LocatorIF loc)", "class_method_signature": "JTMTopicMapWriter.getJTMTopicRef(LOCATOR_TYPE type, LocatorIF loc)", "testcase": false, "constructor": false}, {"identifier": "setAdditionalProperties", "parameters": "(Map<String, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void setAdditionalProperties(Map<String, Object> properties)", "full_signature": "@Override public void setAdditionalProperties(Map<String, Object> properties)", "class_method_signature": "JTMTopicMapWriter.setAdditionalProperties(Map<String, Object> properties)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/topicmaps/utils/jtm/JTMTopicMapWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(TopicMapIF tm)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void write(TopicMapIF tm) throws IOException {\n    write((TMObjectIF) tm);\n  }", "signature": "void write(TopicMapIF tm)", "full_signature": "@Override public void write(TopicMapIF tm)", "class_method_signature": "JTMTopicMapWriter.write(TopicMapIF tm)", "testcase": false, "constructor": false, "invocations": ["write"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}