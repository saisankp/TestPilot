{"test_class": {"identifier": "TSFHiveInputFormatTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TSFInputSplit inputSplit;", "modifier": "private", "type": "TSFInputSplit", "declarator": "inputSplit", "var_name": "inputSplit"}, {"original_string": "private TSFHiveInputFormat inputFormat;", "modifier": "private", "type": "TSFHiveInputFormat", "declarator": "inputFormat", "var_name": "inputFormat"}, {"original_string": "private JobConf job;", "modifier": "private", "type": "JobConf", "declarator": "job", "var_name": "job"}, {"original_string": "private String filePath = TestConstant.BASE_OUTPUT_PATH.concat(\"test.tsfile\");", "modifier": "private", "type": "String", "declarator": "filePath = TestConstant.BASE_OUTPUT_PATH.concat(\"test.tsfile\")", "var_name": "filePath"}], "file": "hive-connector/src/test/java/org/apache/iotdb/hive/TSFHiveInputFormatTest.java"}, "test_case": {"identifier": "testGetSplits", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetSplits() {\n    try {\n      InputSplit[] inputSplits = inputFormat.getSplits(job, 0);\n      assertEquals(1, inputSplits.length);\n      assertTrue(inputSplits[0] instanceof TSFInputSplit);\n      TSFInputSplit inputSplit = (TSFInputSplit) inputSplits[0];\n    } catch (IOException e) {\n      e.printStackTrace();\n      fail();\n    }\n  }", "signature": "void testGetSplits()", "full_signature": "@Test public void testGetSplits()", "class_method_signature": "TSFHiveInputFormatTest.testGetSplits()", "testcase": true, "constructor": false, "invocations": ["getSplits", "assertEquals", "assertTrue", "printStackTrace", "fail"]}, "focal_class": {"identifier": "TSFHiveInputFormat", "superclass": "extends FileInputFormat<NullWritable, MapWritable>", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(TSFHiveInputFormat.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TSFHiveInputFormat.class)", "var_name": "logger"}], "methods": [{"identifier": "getRecordReader", "parameters": "(InputSplit split, JobConf job,\n      Reporter reporter)", "modifiers": "@Override public", "return": "RecordReader<NullWritable, MapWritable>", "signature": "RecordReader<NullWritable, MapWritable> getRecordReader(InputSplit split, JobConf job,\n      Reporter reporter)", "full_signature": "@Override public RecordReader<NullWritable, MapWritable> getRecordReader(InputSplit split, JobConf job,\n      Reporter reporter)", "class_method_signature": "TSFHiveInputFormat.getRecordReader(InputSplit split, JobConf job,\n      Reporter reporter)", "testcase": false, "constructor": false}, {"identifier": "getSplits", "parameters": "(JobConf job, int numSplits)", "modifiers": "@Override public", "return": "InputSplit[]", "signature": "InputSplit[] getSplits(JobConf job, int numSplits)", "full_signature": "@Override public InputSplit[] getSplits(JobConf job, int numSplits)", "class_method_signature": "TSFHiveInputFormat.getSplits(JobConf job, int numSplits)", "testcase": false, "constructor": false}], "file": "hive-connector/src/main/java/org/apache/iotdb/hive/TSFHiveInputFormat.java"}, "focal_method": {"identifier": "getSplits", "parameters": "(JobConf job, int numSplits)", "modifiers": "@Override public", "return": "InputSplit[]", "body": "@Override\n  public InputSplit[] getSplits(JobConf job, int numSplits) throws IOException {\n    job.setBoolean(INPUT_DIR_RECURSIVE, true);\n    return TSFInputFormat.getTSFInputSplit(job, Arrays.asList(super.listStatus(job)), logger)\n        .toArray(new InputSplit[0]);\n  }", "signature": "InputSplit[] getSplits(JobConf job, int numSplits)", "full_signature": "@Override public InputSplit[] getSplits(JobConf job, int numSplits)", "class_method_signature": "TSFHiveInputFormat.getSplits(JobConf job, int numSplits)", "testcase": false, "constructor": false, "invocations": ["setBoolean", "toArray", "getTSFInputSplit", "asList", "listStatus"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}