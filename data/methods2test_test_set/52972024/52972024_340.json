{"test_class": {"identifier": "ConstantChainChoiceStrategyTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IResolveDependencyStrategy chainIdStrategy;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "chainIdStrategy", "var_name": "chainIdStrategy"}, {"original_string": "private IMessageProcessor messageProcessorMock;", "modifier": "private", "type": "IMessageProcessor", "declarator": "messageProcessorMock", "var_name": "messageProcessorMock"}, {"original_string": "private Object id = new Object();", "modifier": "private", "type": "Object", "declarator": "id = new Object()", "var_name": "id"}], "file": "CoreFeatures/MessageProcessing/ConstantChainChoiceStrategy/src/test/java/info/smart_tools/smartactors/message_processing/constant_chain_choice_strategy/ConstantChainChoiceStrategyTest.java"}, "test_case": {"identifier": "Should_chooseChainUsingIdentifierInCurrentStepArguments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_chooseChainUsingIdentifierInCurrentStepArguments()\n            throws Exception {\n        IChainChoiceStrategy strategy = new ConstantChainChoiceStrategy();\n\n        assertSame(id, strategy.chooseChain(messageProcessorMock));\n    }", "signature": "void Should_chooseChainUsingIdentifierInCurrentStepArguments()", "full_signature": "@Test public void Should_chooseChainUsingIdentifierInCurrentStepArguments()", "class_method_signature": "ConstantChainChoiceStrategyTest.Should_chooseChainUsingIdentifierInCurrentStepArguments()", "testcase": true, "constructor": false, "invocations": ["assertSame", "chooseChain"]}, "focal_class": {"identifier": "ConstantChainChoiceStrategy", "superclass": "", "interfaces": "implements IChainChoiceStrategy", "fields": [{"original_string": "private final IFieldName chainIdFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "chainIdFieldName", "var_name": "chainIdFieldName"}], "methods": [{"identifier": "ConstantChainChoiceStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " ConstantChainChoiceStrategy()", "full_signature": "public  ConstantChainChoiceStrategy()", "class_method_signature": "ConstantChainChoiceStrategy.ConstantChainChoiceStrategy()", "testcase": false, "constructor": true}, {"identifier": "chooseChain", "parameters": "(IMessageProcessor messageProcessor)", "modifiers": "@Override public", "return": "Object", "signature": "Object chooseChain(IMessageProcessor messageProcessor)", "full_signature": "@Override public Object chooseChain(IMessageProcessor messageProcessor)", "class_method_signature": "ConstantChainChoiceStrategy.chooseChain(IMessageProcessor messageProcessor)", "testcase": false, "constructor": false}], "file": "CoreFeatures/MessageProcessing/ConstantChainChoiceStrategy/src/main/java/info/smart_tools/smartactors/message_processing/constant_chain_choice_strategy/ConstantChainChoiceStrategy.java"}, "focal_method": {"identifier": "chooseChain", "parameters": "(IMessageProcessor messageProcessor)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object chooseChain(IMessageProcessor messageProcessor) throws ChainChoiceException {\n        try {\n            Object name = messageProcessor.getSequence().getCurrentReceiverArguments().getValue(chainIdFieldName);\n            return IOC.resolve(Keys.getOrAdd(\"chain_id_from_map_name\"), name);\n        } catch (Exception e) {\n            throw new ChainChoiceException(\"Exception occurred reading chain id for current step.\", e);\n        }\n    }", "signature": "Object chooseChain(IMessageProcessor messageProcessor)", "full_signature": "@Override public Object chooseChain(IMessageProcessor messageProcessor)", "class_method_signature": "ConstantChainChoiceStrategy.chooseChain(IMessageProcessor messageProcessor)", "testcase": false, "constructor": false, "invocations": ["getValue", "getCurrentReceiverArguments", "getSequence", "resolve", "getOrAdd"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}