{"test_class": {"identifier": "ResponseMessageRouterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private DeviceDomainService deviceDomainService;", "modifier": "@Mock\n    private", "type": "DeviceDomainService", "declarator": "deviceDomainService", "var_name": "deviceDomainService"}, {"original_string": "@Mock\n    private WebServiceResponseMessageSender webServiceResponseMessageSender;", "modifier": "@Mock\n    private", "type": "WebServiceResponseMessageSender", "declarator": "webServiceResponseMessageSender", "var_name": "webServiceResponseMessageSender"}, {"original_string": "@Mock\n    private KafkaResponseMessageSender kafkaResponseMessageSender;", "modifier": "@Mock\n    private", "type": "KafkaResponseMessageSender", "declarator": "kafkaResponseMessageSender", "var_name": "kafkaResponseMessageSender"}, {"original_string": "@InjectMocks\n    private ResponseMessageRouter responseMessageRouter;", "modifier": "@InjectMocks\n    private", "type": "ResponseMessageRouter", "declarator": "responseMessageRouter", "var_name": "responseMessageRouter"}, {"original_string": "private static final String MESSAGE_TYPE = DeviceFunction.GET_DATA.toString();", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_TYPE = DeviceFunction.GET_DATA.toString()", "var_name": "MESSAGE_TYPE"}, {"original_string": "private static final String DEVICE_ID = \"TST-01\";", "modifier": "private static final", "type": "String", "declarator": "DEVICE_ID = \"TST-01\"", "var_name": "DEVICE_ID"}, {"original_string": "private static final ResponseMessage MESSAGE = ResponseMessage.newResponseMessageBuilder()\n            .withDeviceIdentification(DEVICE_ID)\n            .build();", "modifier": "private static final", "type": "ResponseMessage", "declarator": "MESSAGE = ResponseMessage.newResponseMessageBuilder()\n            .withDeviceIdentification(DEVICE_ID)\n            .build()", "var_name": "MESSAGE"}], "file": "osgp/platform/osgp-adapter-domain-distributionautomation/src/test/java/org/opensmartgridplatform/adapter/domain/da/application/routing/ResponseMessageRouterTest.java"}, "test_case": {"identifier": "testSendWebservice", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testSendWebservice() throws FunctionalException {\n\n        // Arrange\n        final Device device = this.createDevice(IntegrationType.WEB_SERVICE);\n        when(this.deviceDomainService.searchDevice(anyString())).thenReturn(device);\n\n        // Act\n        this.responseMessageRouter.send(MESSAGE, MESSAGE_TYPE);\n\n        // Assert\n        verify(this.webServiceResponseMessageSender).send(any(ResponseMessage.class), anyString());\n    }", "signature": "void testSendWebservice()", "full_signature": "@Test void testSendWebservice()", "class_method_signature": "ResponseMessageRouterTest.testSendWebservice()", "testcase": true, "constructor": false, "invocations": ["createDevice", "thenReturn", "when", "searchDevice", "anyString", "send", "send", "verify", "any", "anyString"]}, "focal_class": {"identifier": "ResponseMessageRouter", "superclass": "", "interfaces": "implements NotificationResponseMessageSender", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ResponseMessageRouter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ResponseMessageRouter.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private DeviceDomainService deviceDomainService;", "modifier": "@Autowired\n    private", "type": "DeviceDomainService", "declarator": "deviceDomainService", "var_name": "deviceDomainService"}, {"original_string": "@Autowired\n    @Qualifier(value = \"domainDistributionAutomationOutboundWebServiceResponsesMessageSender\")\n    private WebServiceResponseMessageSender webServiceResponseMessageSender;", "modifier": "@Autowired\n    @Qualifier(value = \"domainDistributionAutomationOutboundWebServiceResponsesMessageSender\")\n    private", "type": "WebServiceResponseMessageSender", "declarator": "webServiceResponseMessageSender", "var_name": "webServiceResponseMessageSender"}, {"original_string": "@Autowired\n    @Qualifier(value = \"domainDistributionAutomationOutboundKafkaResponsesMessageSender\")\n    private KafkaResponseMessageSender kafkaResponseMessageSender;", "modifier": "@Autowired\n    @Qualifier(value = \"domainDistributionAutomationOutboundKafkaResponsesMessageSender\")\n    private", "type": "KafkaResponseMessageSender", "declarator": "kafkaResponseMessageSender", "var_name": "kafkaResponseMessageSender"}], "methods": [{"identifier": "send", "parameters": "(final ResponseMessage responseMessage, final String messageType)", "modifiers": "@Override public", "return": "void", "signature": "void send(final ResponseMessage responseMessage, final String messageType)", "full_signature": "@Override public void send(final ResponseMessage responseMessage, final String messageType)", "class_method_signature": "ResponseMessageRouter.send(final ResponseMessage responseMessage, final String messageType)", "testcase": false, "constructor": false}, {"identifier": "getIntegrationType", "parameters": "(final String deviceIdentification)", "modifiers": "private", "return": "IntegrationType", "signature": "IntegrationType getIntegrationType(final String deviceIdentification)", "full_signature": "private IntegrationType getIntegrationType(final String deviceIdentification)", "class_method_signature": "ResponseMessageRouter.getIntegrationType(final String deviceIdentification)", "testcase": false, "constructor": false}], "file": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/routing/ResponseMessageRouter.java"}, "focal_method": {"identifier": "send", "parameters": "(final ResponseMessage responseMessage, final String messageType)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void send(final ResponseMessage responseMessage, final String messageType) {\n\n        final IntegrationType integrationType = this.getIntegrationType(responseMessage.getDeviceIdentification());\n\n        switch (integrationType) {\n        case BOTH:\n            this.kafkaResponseMessageSender.send(responseMessage, messageType);\n            this.webServiceResponseMessageSender.send(responseMessage, messageType);\n            break;\n        case KAFKA:\n            this.kafkaResponseMessageSender.send(responseMessage, messageType);\n            break;\n        default:\n            this.webServiceResponseMessageSender.send(responseMessage, messageType);\n        }\n    }", "signature": "void send(final ResponseMessage responseMessage, final String messageType)", "full_signature": "@Override public void send(final ResponseMessage responseMessage, final String messageType)", "class_method_signature": "ResponseMessageRouter.send(final ResponseMessage responseMessage, final String messageType)", "testcase": false, "constructor": false, "invocations": ["getIntegrationType", "getDeviceIdentification", "send", "send", "send", "send"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}