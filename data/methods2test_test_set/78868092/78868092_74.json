{"test_class": {"identifier": "CerebroControllerTest", "superclass": "extends AbstractControllerTest", "interfaces": "", "fields": [{"original_string": "private MockMvc mockMvc;", "modifier": "private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "@Mock\n    private AlarmService alarmService;", "modifier": "@Mock\n    private", "type": "AlarmService", "declarator": "alarmService", "var_name": "alarmService"}, {"original_string": "@Mock\n    private SubscriptionService subscriptionService;", "modifier": "@Mock\n    private", "type": "SubscriptionService", "declarator": "subscriptionService", "var_name": "subscriptionService"}, {"original_string": "@Mock\n    private AlertService alertService;", "modifier": "@Mock\n    private", "type": "AlertService", "declarator": "alertService", "var_name": "alertService"}, {"original_string": "@Mock\n    private GraphiteSources graphiteSources;", "modifier": "@Mock\n    private", "type": "GraphiteSources", "declarator": "graphiteSources", "var_name": "graphiteSources"}, {"original_string": "@Mock\n    private AlarmMapper alarmMapper;", "modifier": "@Mock\n    private", "type": "AlarmMapper", "declarator": "alarmMapper", "var_name": "alarmMapper"}, {"original_string": "@Mock\n    private SubscriptionMapper subscriptionMapper;", "modifier": "@Mock\n    private", "type": "SubscriptionMapper", "declarator": "subscriptionMapper", "var_name": "subscriptionMapper"}, {"original_string": "@InjectMocks\n    private CerebroController cerebroController;", "modifier": "@InjectMocks\n    private", "type": "CerebroController", "declarator": "cerebroController", "var_name": "cerebroController"}], "file": "services/src/test/java/com/vsct/supervision/notification/controller/CerebroControllerTest.java"}, "test_case": {"identifier": "test_getAlerts_with_start_param_and_nbItem_param", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_getAlerts_with_start_param_and_nbItem_param() throws Exception{\n\n        Collection<Alert> values = Arrays.asList(getAlert(\"alert1\"),getAlert(\"alert2\"));\n        Alert.Alerts alerts = new Alert.Alerts();\n        alerts.setValues(values);\n        when(alertService.getAlerts(anyInt(), anyInt())).thenReturn(alerts);\n\n        mockMvc.perform(get(\"/alerts\")\n            .param(\"start\",\"1\")\n            .param(\"nbItem\",\"2\")\n        ).andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$\", hasSize(2)))\n            .andExpect(jsonPath(\"$[0].id\", is(\"alert1\")))\n            .andExpect(jsonPath(\"$[1].id\", is(\"alert2\")))\n        ;\n    }", "signature": "void test_getAlerts_with_start_param_and_nbItem_param()", "full_signature": "@Test public void test_getAlerts_with_start_param_and_nbItem_param()", "class_method_signature": "CerebroControllerTest.test_getAlerts_with_start_param_and_nbItem_param()", "testcase": true, "constructor": false, "invocations": ["asList", "getAlert", "getAlert", "setValues", "thenReturn", "when", "getAlerts", "anyInt", "anyInt", "andExpect", "andExpect", "andExpect", "andExpect", "andExpect", "perform", "param", "param", "get", "isOk", "status", "contentType", "content", "jsonPath", "hasSize", "jsonPath", "is", "jsonPath", "is"]}, "focal_class": {"identifier": "CerebroController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(CerebroController.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(CerebroController.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private AlarmService alarmService;", "modifier": "@Autowired\n    private", "type": "AlarmService", "declarator": "alarmService", "var_name": "alarmService"}, {"original_string": "@Autowired\n    private SubscriptionService subscriptionService;", "modifier": "@Autowired\n    private", "type": "SubscriptionService", "declarator": "subscriptionService", "var_name": "subscriptionService"}, {"original_string": "@Autowired\n    private AlertService alertService;", "modifier": "@Autowired\n    private", "type": "AlertService", "declarator": "alertService", "var_name": "alertService"}, {"original_string": "@Autowired\n    private GraphiteSources graphiteSources;", "modifier": "@Autowired\n    private", "type": "GraphiteSources", "declarator": "graphiteSources", "var_name": "graphiteSources"}, {"original_string": "@Autowired\n    private AlarmMapper alarmMapper;", "modifier": "@Autowired\n    private", "type": "AlarmMapper", "declarator": "alarmMapper", "var_name": "alarmMapper"}, {"original_string": "@Autowired\n    private SubscriptionMapper subscriptionMapper;", "modifier": "@Autowired\n    private", "type": "SubscriptionMapper", "declarator": "subscriptionMapper", "var_name": "subscriptionMapper"}], "methods": [{"identifier": "sources", "parameters": "()", "modifiers": "@RequestMapping(value=\"/datasources/locations\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the datasource backend location(s)\")}) public", "return": "Collection<URI>", "signature": "Collection<URI> sources()", "full_signature": "@RequestMapping(value=\"/datasources/locations\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the datasource backend location(s)\")}) public Collection<URI> sources()", "class_method_signature": "CerebroController.sources()", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "(@ApiParam(name=\"subscriptionTarget\", value=\"a subscriber's email\") @RequestParam(name = \"subscriptionTarget\", required = false) final String subTarget)", "modifiers": "@RequestMapping(value=\"/alarms\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the subscriber's alarms, or all alarms if no email is provided\")}) public", "return": "Collection<Alarm>", "signature": "Collection<Alarm> all(@ApiParam(name=\"subscriptionTarget\", value=\"a subscriber's email\") @RequestParam(name = \"subscriptionTarget\", required = false) final String subTarget)", "full_signature": "@RequestMapping(value=\"/alarms\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the subscriber's alarms, or all alarms if no email is provided\")}) public Collection<Alarm> all(@ApiParam(name=\"subscriptionTarget\", value=\"a subscriber's email\") @RequestParam(name = \"subscriptionTarget\", required = false) final String subTarget)", "class_method_signature": "CerebroController.all(@ApiParam(name=\"subscriptionTarget\", value=\"a subscriber's email\") @RequestParam(name = \"subscriptionTarget\", required = false) final String subTarget)", "testcase": false, "constructor": false}, {"identifier": "getAlarm", "parameters": "(@ApiParam(name=\"id\", value=\"an alarm Id\", required = true) @PathVariable(\"id\") final String id)", "modifiers": "@RequestMapping(value=\"/alarms/{id}\", method = RequestMethod.GET) public", "return": "CerebroAlarm", "signature": "CerebroAlarm getAlarm(@ApiParam(name=\"id\", value=\"an alarm Id\", required = true) @PathVariable(\"id\") final String id)", "full_signature": "@RequestMapping(value=\"/alarms/{id}\", method = RequestMethod.GET) public CerebroAlarm getAlarm(@ApiParam(name=\"id\", value=\"an alarm Id\", required = true) @PathVariable(\"id\") final String id)", "class_method_signature": "CerebroController.getAlarm(@ApiParam(name=\"id\", value=\"an alarm Id\", required = true) @PathVariable(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "addAlarm", "parameters": "(@ApiParam(name=\"alarm\", value=\"an alarm to add\", required = true) @RequestBody final Alarm alarm)", "modifiers": "@RequestMapping(value = \"/alarms\", method = RequestMethod.POST) @ApiResponses(value={@ApiResponse(code=200, message = \"Creates a new alarm and returns its Id\")}) public", "return": "String", "signature": "String addAlarm(@ApiParam(name=\"alarm\", value=\"an alarm to add\", required = true) @RequestBody final Alarm alarm)", "full_signature": "@RequestMapping(value = \"/alarms\", method = RequestMethod.POST) @ApiResponses(value={@ApiResponse(code=200, message = \"Creates a new alarm and returns its Id\")}) public String addAlarm(@ApiParam(name=\"alarm\", value=\"an alarm to add\", required = true) @RequestBody final Alarm alarm)", "class_method_signature": "CerebroController.addAlarm(@ApiParam(name=\"alarm\", value=\"an alarm to add\", required = true) @RequestBody final Alarm alarm)", "testcase": false, "constructor": false}, {"identifier": "getSubscription", "parameters": "(@ApiParam(name=\"alarmId\", value=\"an alarm Id\") @PathVariable(\"alarmId\") final String alarmId,\n        @ApiParam(name = \"subscriptionId\", value = \"a subscription Id\") @PathVariable(\"subscriptionId\") final String subscriptionId)", "modifiers": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions/{subscriptionId}\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the subscription with the given alarm and subscription Ids\")}) public", "return": "Subscription", "signature": "Subscription getSubscription(@ApiParam(name=\"alarmId\", value=\"an alarm Id\") @PathVariable(\"alarmId\") final String alarmId,\n        @ApiParam(name = \"subscriptionId\", value = \"a subscription Id\") @PathVariable(\"subscriptionId\") final String subscriptionId)", "full_signature": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions/{subscriptionId}\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the subscription with the given alarm and subscription Ids\")}) public Subscription getSubscription(@ApiParam(name=\"alarmId\", value=\"an alarm Id\") @PathVariable(\"alarmId\") final String alarmId,\n        @ApiParam(name = \"subscriptionId\", value = \"a subscription Id\") @PathVariable(\"subscriptionId\") final String subscriptionId)", "class_method_signature": "CerebroController.getSubscription(@ApiParam(name=\"alarmId\", value=\"an alarm Id\") @PathVariable(\"alarmId\") final String alarmId,\n        @ApiParam(name = \"subscriptionId\", value = \"a subscription Id\") @PathVariable(\"subscriptionId\") final String subscriptionId)", "testcase": false, "constructor": false}, {"identifier": "searchAlarm", "parameters": "(@ApiParam(name=\"alarm\", value=\"the alarm to search\") @RequestBody final Alarm alarm)", "modifiers": "@RequestMapping(value = \"/alarms/search\", method = RequestMethod.POST) @ApiResponses(value={@ApiResponse(code=200, message = \"search for an alarm\")}) public", "return": "Alarm", "signature": "Alarm searchAlarm(@ApiParam(name=\"alarm\", value=\"the alarm to search\") @RequestBody final Alarm alarm)", "full_signature": "@RequestMapping(value = \"/alarms/search\", method = RequestMethod.POST) @ApiResponses(value={@ApiResponse(code=200, message = \"search for an alarm\")}) public Alarm searchAlarm(@ApiParam(name=\"alarm\", value=\"the alarm to search\") @RequestBody final Alarm alarm)", "class_method_signature": "CerebroController.searchAlarm(@ApiParam(name=\"alarm\", value=\"the alarm to search\") @RequestBody final Alarm alarm)", "testcase": false, "constructor": false}, {"identifier": "updateAlarm", "parameters": "(@ApiParam(name=\"alarm\", value=\"an updated alarm\", required = true) @RequestBody final Alarm alarm)", "modifiers": "@RequestMapping(value = \"/alarms\", method = RequestMethod.PUT) @ApiResponses(value={@ApiResponse(code=200, message = \"Updates the alarm and returns its Id\")}) public", "return": "String", "signature": "String updateAlarm(@ApiParam(name=\"alarm\", value=\"an updated alarm\", required = true) @RequestBody final Alarm alarm)", "full_signature": "@RequestMapping(value = \"/alarms\", method = RequestMethod.PUT) @ApiResponses(value={@ApiResponse(code=200, message = \"Updates the alarm and returns its Id\")}) public String updateAlarm(@ApiParam(name=\"alarm\", value=\"an updated alarm\", required = true) @RequestBody final Alarm alarm)", "class_method_signature": "CerebroController.updateAlarm(@ApiParam(name=\"alarm\", value=\"an updated alarm\", required = true) @RequestBody final Alarm alarm)", "testcase": false, "constructor": false}, {"identifier": "addSubscription", "parameters": "(@ApiParam(name=\"subscription\", value=\"a subscription to add\") @RequestBody final Subscription subscription,\n                                @ApiParam(name=\"alarmId\", value=\"the Id of the alarm\") @PathVariable final String alarmId)", "modifiers": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions\", method = RequestMethod.POST) @ApiResponses(value={@ApiResponse(code=200, message = \"Adds a subscription to an alarm\")}) public", "return": "void", "signature": "void addSubscription(@ApiParam(name=\"subscription\", value=\"a subscription to add\") @RequestBody final Subscription subscription,\n                                @ApiParam(name=\"alarmId\", value=\"the Id of the alarm\") @PathVariable final String alarmId)", "full_signature": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions\", method = RequestMethod.POST) @ApiResponses(value={@ApiResponse(code=200, message = \"Adds a subscription to an alarm\")}) public void addSubscription(@ApiParam(name=\"subscription\", value=\"a subscription to add\") @RequestBody final Subscription subscription,\n                                @ApiParam(name=\"alarmId\", value=\"the Id of the alarm\") @PathVariable final String alarmId)", "class_method_signature": "CerebroController.addSubscription(@ApiParam(name=\"subscription\", value=\"a subscription to add\") @RequestBody final Subscription subscription,\n                                @ApiParam(name=\"alarmId\", value=\"the Id of the alarm\") @PathVariable final String alarmId)", "testcase": false, "constructor": false}, {"identifier": "deleteSubscription", "parameters": "(@ApiParam(name=\"alarmId\", value=\"an alarm Id\") @PathVariable(\"alarmId\") final String alarmId,\n        @ApiParam(name = \"subscriptionId\", value = \"a subscription Id\") @PathVariable(\"subscriptionId\") final String subscriptionId)", "modifiers": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions/{subscriptionId}\", method = RequestMethod.DELETE) @ApiResponses(value={@ApiResponse(code=200, message = \"Deletes the subscription with the given alarm and subscription Ids\")}) public", "return": "String", "signature": "String deleteSubscription(@ApiParam(name=\"alarmId\", value=\"an alarm Id\") @PathVariable(\"alarmId\") final String alarmId,\n        @ApiParam(name = \"subscriptionId\", value = \"a subscription Id\") @PathVariable(\"subscriptionId\") final String subscriptionId)", "full_signature": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions/{subscriptionId}\", method = RequestMethod.DELETE) @ApiResponses(value={@ApiResponse(code=200, message = \"Deletes the subscription with the given alarm and subscription Ids\")}) public String deleteSubscription(@ApiParam(name=\"alarmId\", value=\"an alarm Id\") @PathVariable(\"alarmId\") final String alarmId,\n        @ApiParam(name = \"subscriptionId\", value = \"a subscription Id\") @PathVariable(\"subscriptionId\") final String subscriptionId)", "class_method_signature": "CerebroController.deleteSubscription(@ApiParam(name=\"alarmId\", value=\"an alarm Id\") @PathVariable(\"alarmId\") final String alarmId,\n        @ApiParam(name = \"subscriptionId\", value = \"a subscription Id\") @PathVariable(\"subscriptionId\") final String subscriptionId)", "testcase": false, "constructor": false}, {"identifier": "searchSubscription", "parameters": "(@ApiParam(name=\"subscription\", value=\"the subscription to search for\") @RequestBody final Subscription subscription,\n                                           @ApiParam(name=\"alarmId\") @PathVariable final String alarmId)", "modifiers": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions/search\", method = RequestMethod.POST) @ApiResponses(value={@ApiResponse(code=200, message = \"Search for a subscription\")}) public", "return": "Subscription", "signature": "Subscription searchSubscription(@ApiParam(name=\"subscription\", value=\"the subscription to search for\") @RequestBody final Subscription subscription,\n                                           @ApiParam(name=\"alarmId\") @PathVariable final String alarmId)", "full_signature": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions/search\", method = RequestMethod.POST) @ApiResponses(value={@ApiResponse(code=200, message = \"Search for a subscription\")}) public Subscription searchSubscription(@ApiParam(name=\"subscription\", value=\"the subscription to search for\") @RequestBody final Subscription subscription,\n                                           @ApiParam(name=\"alarmId\") @PathVariable final String alarmId)", "class_method_signature": "CerebroController.searchSubscription(@ApiParam(name=\"subscription\", value=\"the subscription to search for\") @RequestBody final Subscription subscription,\n                                           @ApiParam(name=\"alarmId\") @PathVariable final String alarmId)", "testcase": false, "constructor": false}, {"identifier": "updateSubscription", "parameters": "(@ApiParam(name=\"subscription\", value=\"the updated subscription\") @RequestBody final Subscription subscription,\n                                   @ApiParam(name=\"alarmId\", value=\"the Id of the alarm to which the subscription is linked\") @PathVariable(\"alarmId\") final String alarmId)", "modifiers": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions/{subscriptionId}\", method = RequestMethod.PUT) @ApiResponses(value={@ApiResponse(code=200, message = \"Updates a subscription\")}) public", "return": "void", "signature": "void updateSubscription(@ApiParam(name=\"subscription\", value=\"the updated subscription\") @RequestBody final Subscription subscription,\n                                   @ApiParam(name=\"alarmId\", value=\"the Id of the alarm to which the subscription is linked\") @PathVariable(\"alarmId\") final String alarmId)", "full_signature": "@RequestMapping(value = \"/alarms/{alarmId}/subscriptions/{subscriptionId}\", method = RequestMethod.PUT) @ApiResponses(value={@ApiResponse(code=200, message = \"Updates a subscription\")}) public void updateSubscription(@ApiParam(name=\"subscription\", value=\"the updated subscription\") @RequestBody final Subscription subscription,\n                                   @ApiParam(name=\"alarmId\", value=\"the Id of the alarm to which the subscription is linked\") @PathVariable(\"alarmId\") final String alarmId)", "class_method_signature": "CerebroController.updateSubscription(@ApiParam(name=\"subscription\", value=\"the updated subscription\") @RequestBody final Subscription subscription,\n                                   @ApiParam(name=\"alarmId\", value=\"the Id of the alarm to which the subscription is linked\") @PathVariable(\"alarmId\") final String alarmId)", "testcase": false, "constructor": false}, {"identifier": "getAlerts", "parameters": "(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from)", "modifiers": "@RequestMapping(value=\"/alerts\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the latest alarm alerts\")}) public", "return": "Collection<Alert>", "signature": "Collection<Alert> getAlerts(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from)", "full_signature": "@RequestMapping(value=\"/alerts\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the latest alarm alerts\")}) public Collection<Alert> getAlerts(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from)", "class_method_signature": "CerebroController.getAlerts(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from)", "testcase": false, "constructor": false}, {"identifier": "getAlertStatNoTypeChange", "parameters": "(@ApiParam(name=\"from\", value=\"beginning date\") @RequestParam(\"from\") final String from)", "modifiers": "@RequestMapping(value=\"/alerts/stats/nochanges\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns stats (number of occurrence,current status) about all alerts without status change from \\\"from\\\" to now\")}) public", "return": "List<Stat>", "signature": "List<Stat> getAlertStatNoTypeChange(@ApiParam(name=\"from\", value=\"beginning date\") @RequestParam(\"from\") final String from)", "full_signature": "@RequestMapping(value=\"/alerts/stats/nochanges\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns stats (number of occurrence,current status) about all alerts without status change from \\\"from\\\" to now\")}) public List<Stat> getAlertStatNoTypeChange(@ApiParam(name=\"from\", value=\"beginning date\") @RequestParam(\"from\") final String from)", "class_method_signature": "CerebroController.getAlertStatNoTypeChange(@ApiParam(name=\"from\", value=\"beginning date\") @RequestParam(\"from\") final String from)", "testcase": false, "constructor": false}, {"identifier": "getAlertStatTypeChange", "parameters": "(@RequestParam(\"from\") final String from)", "modifiers": "@RequestMapping(\"/alerts/stats/changes\") @ApiResponses(value={@ApiResponse(code=200, message = \"Returns stats (number of occurrence, current status) about all alerts with status change from \\\"from\\\" to now\")}) public", "return": "List<Stat>", "signature": "List<Stat> getAlertStatTypeChange(@RequestParam(\"from\") final String from)", "full_signature": "@RequestMapping(\"/alerts/stats/changes\") @ApiResponses(value={@ApiResponse(code=200, message = \"Returns stats (number of occurrence, current status) about all alerts with status change from \\\"from\\\" to now\")}) public List<Stat> getAlertStatTypeChange(@RequestParam(\"from\") final String from)", "class_method_signature": "CerebroController.getAlertStatTypeChange(@RequestParam(\"from\") final String from)", "testcase": false, "constructor": false}, {"identifier": "getAlarmAlerts", "parameters": "(@ApiParam(name=\"id\", value=\"an alarm Id\") @PathVariable(\"id\") final String id)", "modifiers": "@RequestMapping(value=\"/alarms/{id}/alerts\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns all alerts for a given alarm\")}) public", "return": "Collection<Alert>", "signature": "Collection<Alert> getAlarmAlerts(@ApiParam(name=\"id\", value=\"an alarm Id\") @PathVariable(\"id\") final String id)", "full_signature": "@RequestMapping(value=\"/alarms/{id}/alerts\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns all alerts for a given alarm\")}) public Collection<Alert> getAlarmAlerts(@ApiParam(name=\"id\", value=\"an alarm Id\") @PathVariable(\"id\") final String id)", "class_method_signature": "CerebroController.getAlarmAlerts(@ApiParam(name=\"id\", value=\"an alarm Id\") @PathVariable(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "getErrorCode", "parameters": "(final CerebroException exception)", "modifiers": "@ExceptionHandler(CerebroException.class) @ResponseStatus(value = HttpStatus.INTERNAL_SERVER_ERROR) public", "return": "String", "signature": "String getErrorCode(final CerebroException exception)", "full_signature": "@ExceptionHandler(CerebroException.class) @ResponseStatus(value = HttpStatus.INTERNAL_SERVER_ERROR) public String getErrorCode(final CerebroException exception)", "class_method_signature": "CerebroController.getErrorCode(final CerebroException exception)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/vsct/supervision/notification/controller/CerebroController.java"}, "focal_method": {"identifier": "getAlerts", "parameters": "(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from)", "modifiers": "@RequestMapping(value=\"/alerts\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the latest alarm alerts\")}) public", "return": "Collection<Alert>", "body": "@RequestMapping(value=\"/alerts\", method = RequestMethod.GET)\n    @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the latest alarm alerts\")})\n    public Collection<Alert> getAlerts(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from) {\n        \n        Collection<Alert> alerts;\n        if (from != null) {\n            alerts = alertService.getAlerts(from);\n        } else {\n            alerts = alertService.getAlerts(nbItem, start).getValues();\n        }\n\n        return alerts;\n    }", "signature": "Collection<Alert> getAlerts(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from)", "full_signature": "@RequestMapping(value=\"/alerts\", method = RequestMethod.GET) @ApiResponses(value={@ApiResponse(code=200, message = \"Returns the latest alarm alerts\")}) public Collection<Alert> getAlerts(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from)", "class_method_signature": "CerebroController.getAlerts(@ApiParam(name=\"nbItem\", value=\"number of alerts to return\") @RequestParam(value = \"items\", required = false, defaultValue = \"20\") final int nbItem,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"start\", value=\"starting date\") @RequestParam(value = \"start\", required = false, defaultValue = \"0\") final int start,\n        \t\t\t\t\t\t\t   @ApiParam(name=\"from\") @RequestParam(value = \"from\", required = false) final String from)", "testcase": false, "constructor": false, "invocations": ["getAlerts", "getValues", "getAlerts"]}, "repository": {"repo_id": 78868092, "url": "https://github.com/voyages-sncf-technologies/cerebro", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 98, "size": 660, "license": "licensed"}}