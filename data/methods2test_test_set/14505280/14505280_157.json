{"test_class": {"identifier": "GetVectorTileCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LAYER_ID = \"countries\";", "modifier": "private static final", "type": "String", "declarator": "LAYER_ID = \"countries\"", "var_name": "LAYER_ID"}, {"original_string": "private static final String CRS = \"EPSG:4326\";", "modifier": "private static final", "type": "String", "declarator": "CRS = \"EPSG:4326\"", "var_name": "CRS"}, {"original_string": "@Autowired\n\tprivate CommandDispatcher dispatcher;", "modifier": "@Autowired\n\tprivate", "type": "CommandDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}], "file": "command/src/test/java/org/geomajas/command/render/GetVectorTileCommandTest.java"}, "test_case": {"identifier": "testGetVectorTile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetVectorTile() throws Exception {\n\t\tGetVectorTileRequest request = new GetVectorTileRequest();\n\t\trequest.setCrs(CRS);\n\t\trequest.setLayerId(LAYER_ID);\n\t\trequest.setCode(new TileCode(0, 0, 0));\n\t\trequest.setPanOrigin(new Coordinate(0, 0));\n\t\trequest.setRenderer(GetVectorTileRequest.PARAM_SVG_RENDERER);\n\t\trequest.setScale(1.0);\n\t\tGetVectorTileResponse response = (GetVectorTileResponse) dispatcher.execute(\n\t\t\t\tGetVectorTileRequest.COMMAND, request, null, \"en\");\n\t\tif (response.isError()) {\n\t\t\tresponse.getErrors().get(0).printStackTrace();\n\t\t}\n\t\tAssert.assertFalse(response.isError());\n\t\tVectorTile tile = response.getTile();\n\t\tAssert.assertNotNull(tile);\n\t\tAssert.assertNotNull(tile.getFeatureContent());\n\t\tAssert.assertEquals(\n\t\t\t\t\"<g id=\\\"countries.features.0-0-0\\\">\" +\n\t\t\t\t\t\t\"<g style=\\\"fill:#995500;fill-opacity:0.6;stroke:#995500;stroke-opacity:0.3;stroke-width:1px;\\\" \" +\n\t\t\t\t\t\t\"id=\\\"countries.features.0-0-0.0\\\">\" +\n\t\t\t\t\t\t\"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 1l1 0 0 -1 -1 0 0 1 Z\\\" id=\\\"4\\\">\" +\n\t\t\t\t\t\t\"</path><path fill-rule=\\\"evenodd\\\" d=\\\"M-1 0l1 0 0 -1 -1 0 0 1 Z\\\" id=\\\"3\\\">\" +\n\t\t\t\t\t\t\"</path><path fill-rule=\\\"evenodd\\\" d=\\\"M-1 1l1 0 0 -1 -1 0 0 1 Z\\\" id=\\\"2\\\">\" +\n\t\t\t\t\t\t\"</path><path fill-rule=\\\"evenodd\\\" d=\\\"M0 0l1 0 0 -1 -1 0 0 1 Z\\\" id=\\\"1\\\"/></g></g>\",\n\t\t\t\ttile.getFeatureContent());\n\t\tAssert.assertEquals(171, tile.getScreenHeight());\n\t\tAssert.assertEquals(171, tile.getScreenWidth());\n\t}", "signature": "void testGetVectorTile()", "full_signature": "@Test public void testGetVectorTile()", "class_method_signature": "GetVectorTileCommandTest.testGetVectorTile()", "testcase": true, "constructor": false, "invocations": ["setCrs", "setLayerId", "setCode", "setPanOrigin", "setRenderer", "setScale", "execute", "isError", "printStackTrace", "get", "getErrors", "assertFalse", "isError", "getTile", "assertNotNull", "assertNotNull", "getFeatureContent", "assertEquals", "getFeatureContent", "assertEquals", "getScreenHeight", "assertEquals", "getScreenWidth"]}, "focal_class": {"identifier": "GetVectorTileCommand", "superclass": "", "interfaces": "implements CommandHasRequest<GetVectorTileRequest, GetVectorTileResponse>", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(GetVectorTileCommand.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(GetVectorTileCommand.class)", "var_name": "log"}, {"original_string": "@Autowired\n\tprivate DtoConverterService converter;", "modifier": "@Autowired\n\tprivate", "type": "DtoConverterService", "declarator": "converter", "var_name": "converter"}, {"original_string": "@Autowired\n\tprivate VectorLayerService layerService;", "modifier": "@Autowired\n\tprivate", "type": "VectorLayerService", "declarator": "layerService", "var_name": "layerService"}], "methods": [{"identifier": "getEmptyCommandRequest", "parameters": "()", "modifiers": "@Override public", "return": "GetVectorTileRequest", "signature": "GetVectorTileRequest getEmptyCommandRequest()", "full_signature": "@Override public GetVectorTileRequest getEmptyCommandRequest()", "class_method_signature": "GetVectorTileCommand.getEmptyCommandRequest()", "testcase": false, "constructor": false}, {"identifier": "getEmptyCommandResponse", "parameters": "()", "modifiers": "@Override public", "return": "GetVectorTileResponse", "signature": "GetVectorTileResponse getEmptyCommandResponse()", "full_signature": "@Override public GetVectorTileResponse getEmptyCommandResponse()", "class_method_signature": "GetVectorTileCommand.getEmptyCommandResponse()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(GetVectorTileRequest request, GetVectorTileResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void execute(GetVectorTileRequest request, GetVectorTileResponse response)", "full_signature": "@Override public void execute(GetVectorTileRequest request, GetVectorTileResponse response)", "class_method_signature": "GetVectorTileCommand.execute(GetVectorTileRequest request, GetVectorTileResponse response)", "testcase": false, "constructor": false}], "file": "command/src/main/java/org/geomajas/command/render/GetVectorTileCommand.java"}, "focal_method": {"identifier": "execute", "parameters": "(GetVectorTileRequest request, GetVectorTileResponse response)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void execute(GetVectorTileRequest request, GetVectorTileResponse response) throws Exception {\n\t\tString layerId = request.getLayerId();\n\t\tlog.debug(\"request start layer {}, crs {}\", layerId, request.getCrs());\n\t\tif (null == layerId) {\n\t\t\tthrow new GeomajasException(ExceptionCode.PARAMETER_MISSING, \"layer\");\n\t\t}\n\t\tif (null == request.getCrs()) {\n\t\t\tthrow new GeomajasException(ExceptionCode.PARAMETER_MISSING, \"crs\");\n\t\t}\n\n\t\tresponse.setTile(converter.toDto(layerService.getTile(request)));\n\t}", "signature": "void execute(GetVectorTileRequest request, GetVectorTileResponse response)", "full_signature": "@Override public void execute(GetVectorTileRequest request, GetVectorTileResponse response)", "class_method_signature": "GetVectorTileCommand.execute(GetVectorTileRequest request, GetVectorTileResponse response)", "testcase": false, "constructor": false, "invocations": ["getLayerId", "debug", "getCrs", "getCrs", "setTile", "toDto", "getTile"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}