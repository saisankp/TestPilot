{"test_class": {"identifier": "CollectionTest", "superclass": "extends AbstractDSpaceObjectTest", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(CollectionTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(CollectionTest.class)", "var_name": "log"}, {"original_string": "private LicenseService licenseService = CoreServiceFactory.getInstance().getLicenseService();", "modifier": "private", "type": "LicenseService", "declarator": "licenseService = CoreServiceFactory.getInstance().getLicenseService()", "var_name": "licenseService"}, {"original_string": "private Collection collection;", "modifier": "private", "type": "Collection", "declarator": "collection", "var_name": "collection"}, {"original_string": "private Community owningCommunity;", "modifier": "private", "type": "Community", "declarator": "owningCommunity", "var_name": "owningCommunity"}], "file": "dspace-api/src/test/java/org/dspace/content/CollectionTest.java"}, "test_case": {"identifier": "testGetLogo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLogo()\n    {\n        //by default is empty\n        assertThat(\"testGetLogo 0\",collection.getLogo(), nullValue());\n    }", "signature": "void testGetLogo()", "full_signature": "@Test public void testGetLogo()", "class_method_signature": "CollectionTest.testGetLogo()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getLogo", "nullValue"]}, "focal_class": {"identifier": "Collection", "superclass": "extends DSpaceObject", "interfaces": "implements DSpaceObjectLegacySupport", "fields": [{"original_string": "@Column(name=\"collection_id\", insertable = false, updatable = false)\n    private Integer legacyId;", "modifier": "@Column(name=\"collection_id\", insertable = false, updatable = false)\n    private", "type": "Integer", "declarator": "legacyId", "var_name": "legacyId"}, {"original_string": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"logo_bitstream_id\")\n    private Bitstream logo;", "modifier": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"logo_bitstream_id\")\n    private", "type": "Bitstream", "declarator": "logo", "var_name": "logo"}, {"original_string": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"template_item_id\")\n    private Item template;", "modifier": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"template_item_id\")\n    private", "type": "Item", "declarator": "template", "var_name": "template"}, {"original_string": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"workflow_step_1\")\n    private Group workflowStep1;", "modifier": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"workflow_step_1\")\n    private", "type": "Group", "declarator": "workflowStep1", "var_name": "workflowStep1"}, {"original_string": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"workflow_step_2\")\n    private Group workflowStep2;", "modifier": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"workflow_step_2\")\n    private", "type": "Group", "declarator": "workflowStep2", "var_name": "workflowStep2"}, {"original_string": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"workflow_step_3\")\n    private Group workflowStep3;", "modifier": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"workflow_step_3\")\n    private", "type": "Group", "declarator": "workflowStep3", "var_name": "workflowStep3"}, {"original_string": "@OneToOne\n    @JoinColumn(name = \"submitter\")\n    /** The default group of administrators */\n    private Group submitters;", "modifier": "@OneToOne\n    @JoinColumn(name = \"submitter\")\n    /** The default group of administrators */\n    private", "type": "Group", "declarator": "submitters", "var_name": "submitters"}, {"original_string": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"admin\")\n    /** The default group of administrators */\n    private Group admins;", "modifier": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"admin\")\n    /** The default group of administrators */\n    private", "type": "Group", "declarator": "admins", "var_name": "admins"}, {"original_string": "@ManyToMany(fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST})\n    @JoinTable(\n            name = \"community2collection\",\n            joinColumns = {@JoinColumn(name = \"collection_id\") },\n            inverseJoinColumns = {@JoinColumn(name = \"community_id\") }\n    )\n    private Set<Community> communities = new HashSet<>();", "modifier": "@ManyToMany(fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST})\n    @JoinTable(\n            name = \"community2collection\",\n            joinColumns = {@JoinColumn(name = \"collection_id\") },\n            inverseJoinColumns = {@JoinColumn(name = \"community_id\") }\n    )\n    private", "type": "Set<Community>", "declarator": "communities = new HashSet<>()", "var_name": "communities"}, {"original_string": "@Transient\n    private transient CollectionService collectionService;", "modifier": "@Transient\n    private transient", "type": "CollectionService", "declarator": "collectionService", "var_name": "collectionService"}, {"original_string": "@Transient\n    public static final String COPYRIGHT_TEXT = \"copyright_text\";", "modifier": "@Transient\n    public static final", "type": "String", "declarator": "COPYRIGHT_TEXT = \"copyright_text\"", "var_name": "COPYRIGHT_TEXT"}, {"original_string": "@Transient\n    public static final String INTRODUCTORY_TEXT = \"introductory_text\";", "modifier": "@Transient\n    public static final", "type": "String", "declarator": "INTRODUCTORY_TEXT = \"introductory_text\"", "var_name": "INTRODUCTORY_TEXT"}, {"original_string": "@Transient\n    public static final String SHORT_DESCRIPTION = \"short_description\";", "modifier": "@Transient\n    public static final", "type": "String", "declarator": "SHORT_DESCRIPTION = \"short_description\"", "var_name": "SHORT_DESCRIPTION"}, {"original_string": "@Transient\n    public static final String SIDEBAR_TEXT = \"side_bar_text\";", "modifier": "@Transient\n    public static final", "type": "String", "declarator": "SIDEBAR_TEXT = \"side_bar_text\"", "var_name": "SIDEBAR_TEXT"}, {"original_string": "@Transient\n    public static final String PROVENANCE_TEXT = \"provenance_description\";", "modifier": "@Transient\n    public static final", "type": "String", "declarator": "PROVENANCE_TEXT = \"provenance_description\"", "var_name": "PROVENANCE_TEXT"}], "methods": [{"identifier": "Collection", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Collection()", "full_signature": "protected  Collection()", "class_method_signature": "Collection.Collection()", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "Collection.getName()", "testcase": false, "constructor": false}, {"identifier": "getLogo", "parameters": "()", "modifiers": "public", "return": "Bitstream", "signature": "Bitstream getLogo()", "full_signature": "public Bitstream getLogo()", "class_method_signature": "Collection.getLogo()", "testcase": false, "constructor": false}, {"identifier": "setLogo", "parameters": "(Bitstream logo)", "modifiers": "protected", "return": "void", "signature": "void setLogo(Bitstream logo)", "full_signature": "protected void setLogo(Bitstream logo)", "class_method_signature": "Collection.setLogo(Bitstream logo)", "testcase": false, "constructor": false}, {"identifier": "getSubmitters", "parameters": "()", "modifiers": "public", "return": "Group", "signature": "Group getSubmitters()", "full_signature": "public Group getSubmitters()", "class_method_signature": "Collection.getSubmitters()", "testcase": false, "constructor": false}, {"identifier": "setSubmitters", "parameters": "(Group submitters)", "modifiers": "", "return": "void", "signature": "void setSubmitters(Group submitters)", "full_signature": " void setSubmitters(Group submitters)", "class_method_signature": "Collection.setSubmitters(Group submitters)", "testcase": false, "constructor": false}, {"identifier": "getAdministrators", "parameters": "()", "modifiers": "public", "return": "Group", "signature": "Group getAdministrators()", "full_signature": "public Group getAdministrators()", "class_method_signature": "Collection.getAdministrators()", "testcase": false, "constructor": false}, {"identifier": "setAdmins", "parameters": "(Group admins)", "modifiers": "", "return": "void", "signature": "void setAdmins(Group admins)", "full_signature": " void setAdmins(Group admins)", "class_method_signature": "Collection.setAdmins(Group admins)", "testcase": false, "constructor": false}, {"identifier": "getWorkflowStep1", "parameters": "()", "modifiers": "public", "return": "Group", "signature": "Group getWorkflowStep1()", "full_signature": "public Group getWorkflowStep1()", "class_method_signature": "Collection.getWorkflowStep1()", "testcase": false, "constructor": false}, {"identifier": "getWorkflowStep2", "parameters": "()", "modifiers": "public", "return": "Group", "signature": "Group getWorkflowStep2()", "full_signature": "public Group getWorkflowStep2()", "class_method_signature": "Collection.getWorkflowStep2()", "testcase": false, "constructor": false}, {"identifier": "getWorkflowStep3", "parameters": "()", "modifiers": "public", "return": "Group", "signature": "Group getWorkflowStep3()", "full_signature": "public Group getWorkflowStep3()", "class_method_signature": "Collection.getWorkflowStep3()", "testcase": false, "constructor": false}, {"identifier": "setWorkflowStep1", "parameters": "(Group workflowStep1)", "modifiers": "", "return": "void", "signature": "void setWorkflowStep1(Group workflowStep1)", "full_signature": " void setWorkflowStep1(Group workflowStep1)", "class_method_signature": "Collection.setWorkflowStep1(Group workflowStep1)", "testcase": false, "constructor": false}, {"identifier": "setWorkflowStep2", "parameters": "(Group workflowStep2)", "modifiers": "", "return": "void", "signature": "void setWorkflowStep2(Group workflowStep2)", "full_signature": " void setWorkflowStep2(Group workflowStep2)", "class_method_signature": "Collection.setWorkflowStep2(Group workflowStep2)", "testcase": false, "constructor": false}, {"identifier": "setWorkflowStep3", "parameters": "(Group workflowStep3)", "modifiers": "", "return": "void", "signature": "void setWorkflowStep3(Group workflowStep3)", "full_signature": " void setWorkflowStep3(Group workflowStep3)", "class_method_signature": "Collection.setWorkflowStep3(Group workflowStep3)", "testcase": false, "constructor": false}, {"identifier": "getLicenseCollection", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLicenseCollection()", "full_signature": "public String getLicenseCollection()", "class_method_signature": "Collection.getLicenseCollection()", "testcase": false, "constructor": false}, {"identifier": "setLicense", "parameters": "(Context context, String license)", "modifiers": "public", "return": "void", "signature": "void setLicense(Context context, String license)", "full_signature": "public void setLicense(Context context, String license)", "class_method_signature": "Collection.setLicense(Context context, String license)", "testcase": false, "constructor": false}, {"identifier": "getTemplateItem", "parameters": "()", "modifiers": "public", "return": "Item", "signature": "Item getTemplateItem()", "full_signature": "public Item getTemplateItem()", "class_method_signature": "Collection.getTemplateItem()", "testcase": false, "constructor": false}, {"identifier": "setTemplateItem", "parameters": "(Item template)", "modifiers": "", "return": "void", "signature": "void setTemplateItem(Item template)", "full_signature": " void setTemplateItem(Item template)", "class_method_signature": "Collection.setTemplateItem(Item template)", "testcase": false, "constructor": false}, {"identifier": "getCommunities", "parameters": "()", "modifiers": "public", "return": "List<Community>", "signature": "List<Community> getCommunities()", "full_signature": "public List<Community> getCommunities()", "class_method_signature": "Collection.getCommunities()", "testcase": false, "constructor": false}, {"identifier": "addCommunity", "parameters": "(Community community)", "modifiers": "", "return": "void", "signature": "void addCommunity(Community community)", "full_signature": " void addCommunity(Community community)", "class_method_signature": "Collection.addCommunity(Community community)", "testcase": false, "constructor": false}, {"identifier": "removeCommunity", "parameters": "(Community community)", "modifiers": "", "return": "void", "signature": "void removeCommunity(Community community)", "full_signature": " void removeCommunity(Community community)", "class_method_signature": "Collection.removeCommunity(Community community)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Collection.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Collection.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getType()", "full_signature": "@Override public int getType()", "class_method_signature": "Collection.getType()", "testcase": false, "constructor": false}, {"identifier": "setWorkflowGroup", "parameters": "(Context context, int step, Group g)", "modifiers": "public", "return": "void", "signature": "void setWorkflowGroup(Context context, int step, Group g)", "full_signature": "public void setWorkflowGroup(Context context, int step, Group g)", "class_method_signature": "Collection.setWorkflowGroup(Context context, int step, Group g)", "testcase": false, "constructor": false}, {"identifier": "getLegacyId", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getLegacyId()", "full_signature": "@Override public Integer getLegacyId()", "class_method_signature": "Collection.getLegacyId()", "testcase": false, "constructor": false}, {"identifier": "getCollectionService", "parameters": "()", "modifiers": "private", "return": "CollectionService", "signature": "CollectionService getCollectionService()", "full_signature": "private CollectionService getCollectionService()", "class_method_signature": "Collection.getCollectionService()", "testcase": false, "constructor": false}], "file": "dspace-api/src/main/java/org/dspace/content/Collection.java"}, "focal_method": {"identifier": "getLogo", "parameters": "()", "modifiers": "public", "return": "Bitstream", "body": "public Bitstream getLogo()\n    {\n        return logo;\n    }", "signature": "Bitstream getLogo()", "full_signature": "public Bitstream getLogo()", "class_method_signature": "Collection.getLogo()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 39038703, "url": "https://github.com/VTUL/vtechworks", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 112021, "license": "licensed"}}