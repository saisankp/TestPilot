{"test_class": {"identifier": "DocumentCollectionVariableIndexerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String VARIABLE_NAME = \"dox\";", "modifier": "private static final", "type": "String", "declarator": "VARIABLE_NAME = \"dox\"", "var_name": "VARIABLE_NAME"}, {"original_string": "private static final String DOC_1 = \"doc_1\";", "modifier": "private static final", "type": "String", "declarator": "DOC_1 = \"doc_1\"", "var_name": "DOC_1"}, {"original_string": "private static final String DOC_2 = \"doc_2\";", "modifier": "private static final", "type": "String", "declarator": "DOC_2 = \"doc_2\"", "var_name": "DOC_2"}, {"original_string": "private static final String DOC_3 = \"doc_3\";", "modifier": "private static final", "type": "String", "declarator": "DOC_3 = \"doc_3\"", "var_name": "DOC_3"}, {"original_string": "private DocumentCollectionVariableIndexer indexer = new DocumentCollectionVariableIndexer();", "modifier": "private", "type": "DocumentCollectionVariableIndexer", "declarator": "indexer = new DocumentCollectionVariableIndexer()", "var_name": "indexer"}], "file": "jbpm-document/src/test/java/org/jbpm/document/audit/DocumentCollectionVariableIndexerTest.java"}, "test_case": {"identifier": "testAccept", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccept() {\n        assertFalse(indexer.accept(\"A String\"));\n        assertFalse(indexer.accept(57));\n        assertFalse(indexer.accept(Boolean.FALSE));\n        assertFalse(indexer.accept(null));\n\n        assertTrue(indexer.accept(new Documents()));\n    }", "signature": "void testAccept()", "full_signature": "@Test public void testAccept()", "class_method_signature": "DocumentCollectionVariableIndexerTest.testAccept()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "accept", "assertFalse", "accept", "assertFalse", "accept", "assertFalse", "accept", "assertTrue", "accept"]}, "focal_class": {"identifier": "DocumentCollectionVariableIndexer", "superclass": "", "interfaces": "implements ProcessVariableIndexer", "fields": [{"original_string": "private static final String PATTERN = \"{0} ({1}/{2})\";", "modifier": "private static final", "type": "String", "declarator": "PATTERN = \"{0} ({1}/{2})\"", "var_name": "PATTERN"}], "methods": [{"identifier": "accept", "parameters": "(Object variable)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accept(Object variable)", "full_signature": "@Override public boolean accept(Object variable)", "class_method_signature": "DocumentCollectionVariableIndexer.accept(Object variable)", "testcase": false, "constructor": false}, {"identifier": "index", "parameters": "(String name, Object variable)", "modifiers": "@Override public", "return": "List<VariableInstanceLog>", "signature": "List<VariableInstanceLog> index(String name, Object variable)", "full_signature": "@Override public List<VariableInstanceLog> index(String name, Object variable)", "class_method_signature": "DocumentCollectionVariableIndexer.index(String name, Object variable)", "testcase": false, "constructor": false}, {"identifier": "toVariableLog", "parameters": "(String name, int index, int max, Document document)", "modifiers": "private", "return": "VariableInstanceLog", "signature": "VariableInstanceLog toVariableLog(String name, int index, int max, Document document)", "full_signature": "private VariableInstanceLog toVariableLog(String name, int index, int max, Document document)", "class_method_signature": "DocumentCollectionVariableIndexer.toVariableLog(String name, int index, int max, Document document)", "testcase": false, "constructor": false}], "file": "jbpm-document/src/main/java/org/jbpm/document/audit/DocumentCollectionVariableIndexer.java"}, "focal_method": {"identifier": "accept", "parameters": "(Object variable)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accept(Object variable) {\n        return variable instanceof DocumentCollection;\n    }", "signature": "boolean accept(Object variable)", "full_signature": "@Override public boolean accept(Object variable)", "class_method_signature": "DocumentCollectionVariableIndexer.accept(Object variable)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}