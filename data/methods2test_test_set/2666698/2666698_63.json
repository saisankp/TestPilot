{"test_class": {"identifier": "StandardExecutionEnvironmentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StandardExecutionEnvironment javaSE16Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSE16Environment", "var_name": "javaSE16Environment"}, {"original_string": "private StandardExecutionEnvironment javaSE15Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSE15Environment", "var_name": "javaSE15Environment"}, {"original_string": "private StandardExecutionEnvironment javaSE14Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSE14Environment", "var_name": "javaSE14Environment"}, {"original_string": "private StandardExecutionEnvironment javaSE11Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSE11Environment", "var_name": "javaSE11Environment"}, {"original_string": "private StandardExecutionEnvironment javaSE9Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSE9Environment", "var_name": "javaSE9Environment"}, {"original_string": "private StandardExecutionEnvironment javaSE8Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSE8Environment", "var_name": "javaSE8Environment"}, {"original_string": "private StandardExecutionEnvironment javaSE7Enviroment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSE7Enviroment", "var_name": "javaSE7Enviroment"}, {"original_string": "private StandardExecutionEnvironment javaSE6Enviroment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSE6Enviroment", "var_name": "javaSE6Enviroment"}, {"original_string": "private StandardExecutionEnvironment j2SE5Enviroment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "j2SE5Enviroment", "var_name": "j2SE5Enviroment"}, {"original_string": "private StandardExecutionEnvironment j2SE14Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "j2SE14Environment", "var_name": "j2SE14Environment"}, {"original_string": "private StandardExecutionEnvironment j2SE13Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "j2SE13Environment", "var_name": "j2SE13Environment"}, {"original_string": "private StandardExecutionEnvironment j2SE12Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "j2SE12Environment", "var_name": "j2SE12Environment"}, {"original_string": "private StandardExecutionEnvironment jre11Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "jre11Environment", "var_name": "jre11Environment"}, {"original_string": "private StandardExecutionEnvironment cdc11Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "cdc11Environment", "var_name": "cdc11Environment"}, {"original_string": "private StandardExecutionEnvironment cdc10Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "cdc10Environment", "var_name": "cdc10Environment"}, {"original_string": "private StandardExecutionEnvironment osgiMin10Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "osgiMin10Environment", "var_name": "osgiMin10Environment"}, {"original_string": "private StandardExecutionEnvironment osgiMin11Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "osgiMin11Environment", "var_name": "osgiMin11Environment"}, {"original_string": "private StandardExecutionEnvironment osgiMin12Environment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "osgiMin12Environment", "var_name": "osgiMin12Environment"}, {"original_string": "private StandardExecutionEnvironment javaSECompact1Enviroment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSECompact1Enviroment", "var_name": "javaSECompact1Enviroment"}, {"original_string": "private StandardExecutionEnvironment javaSECompact2Enviroment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSECompact2Enviroment", "var_name": "javaSECompact2Enviroment"}, {"original_string": "private StandardExecutionEnvironment javaSECompact3Enviroment;", "modifier": "private", "type": "StandardExecutionEnvironment", "declarator": "javaSECompact3Enviroment", "var_name": "javaSECompact3Enviroment"}], "file": "tycho-core/src/test/java/org/eclipse/tycho/core/ee/StandardExecutionEnvironmentTest.java"}, "test_case": {"identifier": "testCompilerTargetCompatibility", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompilerTargetCompatibility() throws Exception {\n        assertTrue(j2SE14Environment.isCompatibleCompilerTargetLevel(\"1.1\"));\n        assertTrue(j2SE14Environment.isCompatibleCompilerTargetLevel(\"1.2\"));\n        assertFalse(j2SE14Environment.isCompatibleCompilerTargetLevel(\"1.3\"));\n\n        // version aliases\n        assertTrue(j2SE5Enviroment.isCompatibleCompilerTargetLevel(\"5\"));\n        assertTrue(j2SE5Enviroment.isCompatibleCompilerTargetLevel(\"5.0\"));\n        assertTrue(javaSE6Enviroment.isCompatibleCompilerTargetLevel(\"6\"));\n        assertTrue(javaSE6Enviroment.isCompatibleCompilerTargetLevel(\"6.0\"));\n        assertTrue(javaSE7Enviroment.isCompatibleCompilerTargetLevel(\"7\"));\n        assertTrue(javaSE7Enviroment.isCompatibleCompilerTargetLevel(\"7.0\"));\n        assertTrue(javaSE8Environment.isCompatibleCompilerTargetLevel(\"8\"));\n        assertTrue(javaSE8Environment.isCompatibleCompilerTargetLevel(\"8.0\"));\n        assertTrue(javaSE9Environment.isCompatibleCompilerTargetLevel(\"9\"));\n        assertTrue(javaSE9Environment.isCompatibleCompilerTargetLevel(\"9.0\"));\n        assertTrue(javaSE11Environment.isCompatibleCompilerTargetLevel(\"11.0\"));\n        assertTrue(javaSE14Environment.isCompatibleCompilerTargetLevel(\"14.0\"));\n        assertTrue(javaSE15Environment.isCompatibleCompilerTargetLevel(\"15.0\"));\n        assertTrue(javaSE16Environment.isCompatibleCompilerTargetLevel(\"16.0\"));\n    }", "signature": "void testCompilerTargetCompatibility()", "full_signature": "@Test public void testCompilerTargetCompatibility()", "class_method_signature": "StandardExecutionEnvironmentTest.testCompilerTargetCompatibility()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertFalse", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel", "assertTrue", "isCompatibleCompilerTargetLevel"]}, "focal_class": {"identifier": "StandardExecutionEnvironment", "superclass": "", "interfaces": "implements Comparable<StandardExecutionEnvironment>, ExecutionEnvironment", "fields": [{"original_string": "private static final Map<String, String> TARGET_ALIASES;", "modifier": "private static final", "type": "Map<String, String>", "declarator": "TARGET_ALIASES", "var_name": "TARGET_ALIASES"}, {"original_string": "private final String profileName;", "modifier": "private final", "type": "String", "declarator": "profileName", "var_name": "profileName"}, {"original_string": "private final String compilerSourceLevel;", "modifier": "private final", "type": "String", "declarator": "compilerSourceLevel", "var_name": "compilerSourceLevel"}, {"original_string": "private final String compilerTargetLevel;", "modifier": "private final", "type": "String", "declarator": "compilerTargetLevel", "var_name": "compilerTargetLevel"}, {"original_string": "private List<SystemPackageEntry> systemPackages;", "modifier": "private", "type": "List<SystemPackageEntry>", "declarator": "systemPackages", "var_name": "systemPackages"}, {"original_string": "private final EEVersion eeVersion;", "modifier": "private final", "type": "EEVersion", "declarator": "eeVersion", "var_name": "eeVersion"}, {"original_string": "private final Properties profileProperties;", "modifier": "private final", "type": "Properties", "declarator": "profileProperties", "var_name": "profileProperties"}, {"original_string": "private final Toolchain toolchain;", "modifier": "private final", "type": "Toolchain", "declarator": "toolchain", "var_name": "toolchain"}, {"original_string": "private Logger logger;", "modifier": "private", "type": "Logger", "declarator": "logger", "var_name": "logger"}], "methods": [{"identifier": "StandardExecutionEnvironment", "parameters": "(@Nonnull Properties profileProperties)", "modifiers": "@Deprecated", "return": "", "signature": " StandardExecutionEnvironment(@Nonnull Properties profileProperties)", "full_signature": "@Deprecated  StandardExecutionEnvironment(@Nonnull Properties profileProperties)", "class_method_signature": "StandardExecutionEnvironment.StandardExecutionEnvironment(@Nonnull Properties profileProperties)", "testcase": false, "constructor": true}, {"identifier": "StandardExecutionEnvironment", "parameters": "(@Nonnull Properties profileProperties, @Nullable Toolchain toolchain,\n            @Nullable Logger logger)", "modifiers": "", "return": "", "signature": " StandardExecutionEnvironment(@Nonnull Properties profileProperties, @Nullable Toolchain toolchain,\n            @Nullable Logger logger)", "full_signature": "  StandardExecutionEnvironment(@Nonnull Properties profileProperties, @Nullable Toolchain toolchain,\n            @Nullable Logger logger)", "class_method_signature": "StandardExecutionEnvironment.StandardExecutionEnvironment(@Nonnull Properties profileProperties, @Nullable Toolchain toolchain,\n            @Nullable Logger logger)", "testcase": false, "constructor": true}, {"identifier": "readFromToolchains", "parameters": "(Toolchain toolchain)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> readFromToolchains(Toolchain toolchain)", "full_signature": "private Set<String> readFromToolchains(Toolchain toolchain)", "class_method_signature": "StandardExecutionEnvironment.readFromToolchains(Toolchain toolchain)", "testcase": false, "constructor": false}, {"identifier": "getSystemPackagesCompanionJar", "parameters": "()", "modifiers": "static", "return": "File", "signature": "File getSystemPackagesCompanionJar()", "full_signature": "static File getSystemPackagesCompanionJar()", "class_method_signature": "StandardExecutionEnvironment.getSystemPackagesCompanionJar()", "testcase": false, "constructor": false}, {"identifier": "parseEEVersion", "parameters": "(String systemCaps)", "modifiers": "private static", "return": "EEVersion", "signature": "EEVersion parseEEVersion(String systemCaps)", "full_signature": "private static EEVersion parseEEVersion(String systemCaps)", "class_method_signature": "StandardExecutionEnvironment.parseEEVersion(String systemCaps)", "testcase": false, "constructor": false}, {"identifier": "getProfileName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getProfileName()", "full_signature": "@Override public String getProfileName()", "class_method_signature": "StandardExecutionEnvironment.getProfileName()", "testcase": false, "constructor": false}, {"identifier": "getCompilerSourceLevelDefault", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCompilerSourceLevelDefault()", "full_signature": "@Override public String getCompilerSourceLevelDefault()", "class_method_signature": "StandardExecutionEnvironment.getCompilerSourceLevelDefault()", "testcase": false, "constructor": false}, {"identifier": "getCompilerTargetLevelDefault", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCompilerTargetLevelDefault()", "full_signature": "@Override public String getCompilerTargetLevelDefault()", "class_method_signature": "StandardExecutionEnvironment.getCompilerTargetLevelDefault()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StandardExecutionEnvironment.toString()", "testcase": false, "constructor": false}, {"identifier": "getSystemPackages", "parameters": "()", "modifiers": "@Override public", "return": "Collection<SystemPackageEntry>", "signature": "Collection<SystemPackageEntry> getSystemPackages()", "full_signature": "@Override public Collection<SystemPackageEntry> getSystemPackages()", "class_method_signature": "StandardExecutionEnvironment.getSystemPackages()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(StandardExecutionEnvironment otherEnv)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(StandardExecutionEnvironment otherEnv)", "full_signature": "@Override public int compareTo(StandardExecutionEnvironment otherEnv)", "class_method_signature": "StandardExecutionEnvironment.compareTo(StandardExecutionEnvironment otherEnv)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "StandardExecutionEnvironment.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "StandardExecutionEnvironment.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "getProfileProperties", "parameters": "()", "modifiers": "@Override public", "return": "Properties", "signature": "Properties getProfileProperties()", "full_signature": "@Override public Properties getProfileProperties()", "class_method_signature": "StandardExecutionEnvironment.getProfileProperties()", "testcase": false, "constructor": false}, {"identifier": "isCompatibleCompilerTargetLevel", "parameters": "(String target)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCompatibleCompilerTargetLevel(String target)", "full_signature": "@Override public boolean isCompatibleCompilerTargetLevel(String target)", "class_method_signature": "StandardExecutionEnvironment.isCompatibleCompilerTargetLevel(String target)", "testcase": false, "constructor": false}, {"identifier": "toTargetVersion", "parameters": "(String target)", "modifiers": "private static", "return": "Version", "signature": "Version toTargetVersion(String target)", "full_signature": "private static Version toTargetVersion(String target)", "class_method_signature": "StandardExecutionEnvironment.toTargetVersion(String target)", "testcase": false, "constructor": false}], "file": "tycho-core/src/main/java/org/eclipse/tycho/core/ee/StandardExecutionEnvironment.java"}, "focal_method": {"identifier": "isCompatibleCompilerTargetLevel", "parameters": "(String target)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isCompatibleCompilerTargetLevel(String target) {\n        if (target == null) {\n            throw new IllegalArgumentException();\n        }\n        if (compilerTargetLevel == null) {\n            return true;\n        }\n\n        try {\n            Version thisTargetVersion = toTargetVersion(compilerTargetLevel);\n            Version targetVersion = toTargetVersion(target);\n            return thisTargetVersion.compareTo(targetVersion) >= 0;\n        } catch (IllegalArgumentException e) {\n            // we could not parse one or both of the provided target level, assume they are incompatible \n            return false;\n        }\n    }", "signature": "boolean isCompatibleCompilerTargetLevel(String target)", "full_signature": "@Override public boolean isCompatibleCompilerTargetLevel(String target)", "class_method_signature": "StandardExecutionEnvironment.isCompatibleCompilerTargetLevel(String target)", "testcase": false, "constructor": false, "invocations": ["toTargetVersion", "toTargetVersion", "compareTo"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}