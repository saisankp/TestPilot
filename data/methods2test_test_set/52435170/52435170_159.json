{"test_class": {"identifier": "SqlDbConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n\tprivate PersistenceUnitDescriptor descriptor;", "modifier": "@Mock\n\tprivate", "type": "PersistenceUnitDescriptor", "declarator": "descriptor", "var_name": "descriptor"}], "file": "rdbms/src/test/java/eu/drus/jpa/unit/sql/SqlDbConfigurationTest.java"}, "test_case": {"identifier": "testCreateDataSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCreateDataSource() {\n\t\t// GIVEN\n\t\twhen(descriptor.getProperties()).thenReturn(ImmutableMap.<String, Object>builder()\n\t\t\t.put(\"javax.persistence.jdbc.driver\", \"some.Driver\")\n\t\t\t.put(\"javax.persistence.jdbc.url\", \"some://url\")\n\t\t\t.put(\"javax.persistence.jdbc.user\", \"someUser\")\n\t\t\t.put(\"javax.persistence.jdbc.password\", \"somePassword\")\n\t\t\t.build());\n\n\t\tSqlDbConfiguration config = new SqlDbConfiguration(descriptor);\n\t\t\n\t\t\n\t\t// WHEN\n\t\tBasicDataSource dataSource = (BasicDataSource) config.createDataSource();\n\t\t\n\t\t// THEN\n\t\tassertNotNull(dataSource);\n\t\tassertThat(dataSource.getDriverClassName(),equalTo(\"some.Driver\"));\n\t\tassertThat(dataSource.getUrl(),equalTo(\"some://url\"));\n\t\tassertThat(dataSource.getUsername(),equalTo(\"someUser\"));\n\t\tassertThat(dataSource.getPassword(),equalTo(\"somePassword\"));\n\t\tassertThat(dataSource.getMinIdle(),equalTo(1));\n\t\tassertThat(dataSource.getMaxIdle(),equalTo(2));\n\t}", "signature": "void testCreateDataSource()", "full_signature": "@Test public void testCreateDataSource()", "class_method_signature": "SqlDbConfigurationTest.testCreateDataSource()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getProperties", "build", "put", "put", "put", "put", "builder", "createDataSource", "assertNotNull", "assertThat", "getDriverClassName", "equalTo", "assertThat", "getUrl", "equalTo", "assertThat", "getUsername", "equalTo", "assertThat", "getPassword", "equalTo", "assertThat", "getMinIdle", "equalTo", "assertThat", "getMaxIdle", "equalTo"]}, "focal_class": {"identifier": "SqlDbConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String, Object> dbConfig;", "modifier": "private", "type": "Map<String, Object>", "declarator": "dbConfig", "var_name": "dbConfig"}], "methods": [{"identifier": "SqlDbConfiguration", "parameters": "(final PersistenceUnitDescriptor descriptor)", "modifiers": "public", "return": "", "signature": " SqlDbConfiguration(final PersistenceUnitDescriptor descriptor)", "full_signature": "public  SqlDbConfiguration(final PersistenceUnitDescriptor descriptor)", "class_method_signature": "SqlDbConfiguration.SqlDbConfiguration(final PersistenceUnitDescriptor descriptor)", "testcase": false, "constructor": true}, {"identifier": "isSupported", "parameters": "(final PersistenceUnitDescriptor descriptor)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSupported(final PersistenceUnitDescriptor descriptor)", "full_signature": "public static boolean isSupported(final PersistenceUnitDescriptor descriptor)", "class_method_signature": "SqlDbConfiguration.isSupported(final PersistenceUnitDescriptor descriptor)", "testcase": false, "constructor": false}, {"identifier": "createDataSource", "parameters": "()", "modifiers": "public", "return": "DataSource", "signature": "DataSource createDataSource()", "full_signature": "public DataSource createDataSource()", "class_method_signature": "SqlDbConfiguration.createDataSource()", "testcase": false, "constructor": false}], "file": "rdbms/src/main/java/eu/drus/jpa/unit/sql/SqlDbConfiguration.java"}, "focal_method": {"identifier": "createDataSource", "parameters": "()", "modifiers": "public", "return": "DataSource", "body": "public DataSource createDataSource() {\n        final String driverClass = (String) dbConfig.get(\"javax.persistence.jdbc.driver\");\n        final String connectionUrl = (String) dbConfig.get(\"javax.persistence.jdbc.url\");\n        final String username = (String) dbConfig.get(\"javax.persistence.jdbc.user\");\n        final String password = (String) dbConfig.get(\"javax.persistence.jdbc.password\");\n\n        final BasicDataSource ds = new BasicDataSource();\n        ds.setDriverClassName(driverClass);\n        ds.setUsername(username);\n        ds.setPassword(password);\n        ds.setUrl(connectionUrl);\n        ds.setMinIdle(1);\n        ds.setMaxIdle(2);\n\n        return ds;\n    }", "signature": "DataSource createDataSource()", "full_signature": "public DataSource createDataSource()", "class_method_signature": "SqlDbConfiguration.createDataSource()", "testcase": false, "constructor": false, "invocations": ["get", "get", "get", "get", "setDriverClassName", "setUsername", "setPassword", "setUrl", "setMinIdle", "setMaxIdle"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}