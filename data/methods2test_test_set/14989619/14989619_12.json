{"test_class": {"identifier": "JsonApiResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Dummy dummyObj = new Dummy(\"id_01\");", "modifier": "private final", "type": "Dummy", "declarator": "dummyObj = new Dummy(\"id_01\")", "var_name": "dummyObj"}, {"original_string": "private final Dummy dummy02 = new Dummy(\"id_02\");", "modifier": "private final", "type": "Dummy", "declarator": "dummy02 = new Dummy(\"id_02\")", "var_name": "dummy02"}, {"original_string": "private final Dummy dummy03 = new Dummy(\"id_03\");", "modifier": "private final", "type": "Dummy", "declarator": "dummy03 = new Dummy(\"id_03\")", "var_name": "dummy03"}, {"original_string": "private final AnotherDummyClass anotherDummyClass = new AnotherDummyClass(\"id_02\");", "modifier": "private final", "type": "AnotherDummyClass", "declarator": "anotherDummyClass = new AnotherDummyClass(\"id_02\")", "var_name": "anotherDummyClass"}, {"original_string": "private final URI uri = URI.create(\"http://test.com\");", "modifier": "private final", "type": "URI", "declarator": "uri = URI.create(\"http://test.com\")", "var_name": "uri"}, {"original_string": "private final URI anotherUri = URI.create(\"http://test.org\");", "modifier": "private final", "type": "URI", "declarator": "anotherUri = URI.create(\"http://test.org\")", "var_name": "anotherUri"}], "file": "server/src/test/java/org/jvalue/ods/rest/v2/jsonapi/response/JsonApiResourceTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        JsonApiResource result1 = new JsonApiResource(dummyObj,uri);\n        JsonApiResource result2 = new JsonApiResource(dummyObj,uri);\n        JsonApiResource resultOther = new JsonApiResource(new Dummy(\"x\"), uri);\n\n        Assert.assertEquals(result1, result2);\n        Assert.assertNotEquals(resultOther, result1);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "JsonApiResourceTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertNotEquals"]}, "focal_class": {"identifier": "JsonApiResource", "superclass": "extends JsonApiResourceIdentifier", "interfaces": "implements JsonLinks, JsonApiData", "fields": [{"original_string": "private final URI uri;", "modifier": "private final", "type": "URI", "declarator": "uri", "var_name": "uri"}, {"original_string": "private final JsonApiIdentifiable entity;", "modifier": "private final", "type": "JsonApiIdentifiable", "declarator": "entity", "var_name": "entity"}, {"original_string": "private final Map<String, URI> links = new HashMap<>();", "modifier": "private final", "type": "Map<String, URI>", "declarator": "links = new HashMap<>()", "var_name": "links"}, {"original_string": "private final Map<String, JsonApiRelationship> relationships = new HashMap<>();", "modifier": "private final", "type": "Map<String, JsonApiRelationship>", "declarator": "relationships = new HashMap<>()", "var_name": "relationships"}], "methods": [{"identifier": "JsonApiResource", "parameters": "(JsonApiIdentifiable entity, URI uri)", "modifiers": "", "return": "", "signature": " JsonApiResource(JsonApiIdentifiable entity, URI uri)", "full_signature": "  JsonApiResource(JsonApiIdentifiable entity, URI uri)", "class_method_signature": "JsonApiResource.JsonApiResource(JsonApiIdentifiable entity, URI uri)", "testcase": false, "constructor": true}, {"identifier": "getEntity", "parameters": "()", "modifiers": "@JsonIgnoreProperties(value = {\"id\", \"type\"}) @JsonProperty(\"attributes\") public", "return": "Object", "signature": "Object getEntity()", "full_signature": "@JsonIgnoreProperties(value = {\"id\", \"type\"}) @JsonProperty(\"attributes\") public Object getEntity()", "class_method_signature": "JsonApiResource.getEntity()", "testcase": false, "constructor": false}, {"identifier": "getRelationships", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_EMPTY) public", "return": "Map<String, JsonApiRelationship>", "signature": "Map<String, JsonApiRelationship> getRelationships()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_EMPTY) public Map<String, JsonApiRelationship> getRelationships()", "class_method_signature": "JsonApiResource.getRelationships()", "testcase": false, "constructor": false}, {"identifier": "getLinks", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, URI>", "signature": "Map<String, URI> getLinks()", "full_signature": "@Override public Map<String, URI> getLinks()", "class_method_signature": "JsonApiResource.getLinks()", "testcase": false, "constructor": false}, {"identifier": "addLink", "parameters": "(String name, URI ref)", "modifiers": "@Override public", "return": "void", "signature": "void addLink(String name, URI ref)", "full_signature": "@Override public void addLink(String name, URI ref)", "class_method_signature": "JsonApiResource.addLink(String name, URI ref)", "testcase": false, "constructor": false}, {"identifier": "getURI", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getURI()", "full_signature": "@Override public URI getURI()", "class_method_signature": "JsonApiResource.getURI()", "testcase": false, "constructor": false}, {"identifier": "hasRelationshipTo", "parameters": "(JsonApiIdentifiable related)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasRelationshipTo(JsonApiIdentifiable related)", "full_signature": "@Override public boolean hasRelationshipTo(JsonApiIdentifiable related)", "class_method_signature": "JsonApiResource.hasRelationshipTo(JsonApiIdentifiable related)", "testcase": false, "constructor": false}, {"identifier": "setResourceCollectionURI", "parameters": "(URI collectionURI)", "modifiers": "@Override public", "return": "void", "signature": "void setResourceCollectionURI(URI collectionURI)", "full_signature": "@Override public void setResourceCollectionURI(URI collectionURI)", "class_method_signature": "JsonApiResource.setResourceCollectionURI(URI collectionURI)", "testcase": false, "constructor": false}, {"identifier": "asSingleResource", "parameters": "()", "modifiers": "@Override public", "return": "JsonApiResource", "signature": "JsonApiResource asSingleResource()", "full_signature": "@Override public JsonApiResource asSingleResource()", "class_method_signature": "JsonApiResource.asSingleResource()", "testcase": false, "constructor": false}, {"identifier": "asResourceCollection", "parameters": "()", "modifiers": "@Override public", "return": "JsonApiResourceCollection", "signature": "JsonApiResourceCollection asResourceCollection()", "full_signature": "@Override public JsonApiResourceCollection asResourceCollection()", "class_method_signature": "JsonApiResource.asResourceCollection()", "testcase": false, "constructor": false}, {"identifier": "getRelationshipUri", "parameters": "(JsonApiIdentifiable related)", "modifiers": "@Override public", "return": "URI", "signature": "URI getRelationshipUri(JsonApiIdentifiable related)", "full_signature": "@Override public URI getRelationshipUri(JsonApiIdentifiable related)", "class_method_signature": "JsonApiResource.getRelationshipUri(JsonApiIdentifiable related)", "testcase": false, "constructor": false}, {"identifier": "addRelationship", "parameters": "(String name, JsonApiIdentifiable related, URI location)", "modifiers": "@Override public", "return": "JsonApiResource", "signature": "JsonApiResource addRelationship(String name, JsonApiIdentifiable related, URI location)", "full_signature": "@Override public JsonApiResource addRelationship(String name, JsonApiIdentifiable related, URI location)", "class_method_signature": "JsonApiResource.addRelationship(String name, JsonApiIdentifiable related, URI location)", "testcase": false, "constructor": false}, {"identifier": "addRelationship", "parameters": "(String name, Collection<? extends JsonApiIdentifiable> relatedCollection, URI location)", "modifiers": "@Override public", "return": "JsonApiResource", "signature": "JsonApiResource addRelationship(String name, Collection<? extends JsonApiIdentifiable> relatedCollection, URI location)", "full_signature": "@Override public JsonApiResource addRelationship(String name, Collection<? extends JsonApiIdentifiable> relatedCollection, URI location)", "class_method_signature": "JsonApiResource.addRelationship(String name, Collection<? extends JsonApiIdentifiable> relatedCollection, URI location)", "testcase": false, "constructor": false}, {"identifier": "restrictTo", "parameters": "(String attribute)", "modifiers": "@Override public", "return": "JsonApiResource", "signature": "JsonApiResource restrictTo(String attribute)", "full_signature": "@Override public JsonApiResource restrictTo(String attribute)", "class_method_signature": "JsonApiResource.restrictTo(String attribute)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "JsonApiResource.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "JsonApiResource.hashCode()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/rest/v2/jsonapi/response/JsonApiResource.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (o == null || getClass() != o.getClass()) return false;\n\t\tif (!super.equals(o)) return false;\n\t\tJsonApiResource that = (JsonApiResource) o;\n\t\treturn Objects.equals(uri, that.uri) &&\n\t\t\tObjects.equals(entity, that.entity);\n\t}", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "JsonApiResource.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals", "equals"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}