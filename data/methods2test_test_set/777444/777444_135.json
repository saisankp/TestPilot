{"test_class": {"identifier": "MulticastUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/core/src/test/java/org/jolokia/discovery/MulticastUtilTest.java"}, "test_case": {"identifier": "createSocketNoAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createSocketNoAddress() throws IOException {\n        InetAddress address = Inet6Address.getByName(\"fe80::e2f8:47ff:fe42:d872\");\n        String multicastGroup = ConfigKey.MULTICAST_GROUP.getDefaultValue();\n        int multicastPort = Integer.valueOf(ConfigKey.MULTICAST_PORT.getDefaultValue());\n        if (NetworkUtil.isMulticastSupported()) {\n            MulticastUtil.newMulticastSocket(address, multicastGroup, multicastPort, new QuietLogHandler());\n        } else {\n            try {\n                MulticastUtil.newMulticastSocket(address, multicastGroup, multicastPort, new QuietLogHandler());\n                fail();\n            } catch (IOException exp) {\n                // Expected since no multicast socket is available\n            }\n        }\n    }", "signature": "void createSocketNoAddress()", "full_signature": "@Test public void createSocketNoAddress()", "class_method_signature": "MulticastUtilTest.createSocketNoAddress()", "testcase": true, "constructor": false, "invocations": ["getByName", "getDefaultValue", "valueOf", "getDefaultValue", "isMulticastSupported", "newMulticastSocket", "newMulticastSocket", "fail"]}, "focal_class": {"identifier": "MulticastUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MulticastUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " MulticastUtil()", "full_signature": "private  MulticastUtil()", "class_method_signature": "MulticastUtil.MulticastUtil()", "testcase": false, "constructor": true}, {"identifier": "newMulticastSocket", "parameters": "(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler)", "modifiers": "static", "return": "MulticastSocket", "signature": "MulticastSocket newMulticastSocket(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler)", "full_signature": "static MulticastSocket newMulticastSocket(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler)", "class_method_signature": "MulticastUtil.newMulticastSocket(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler)", "testcase": false, "constructor": false}, {"identifier": "sendQueryAndCollectAnswers", "parameters": "(DiscoveryOutgoingMessage pOutMsg, int pTimeout, String pMulticastGroup, int pMulticastPort)", "modifiers": "public static", "return": "List<DiscoveryIncomingMessage>", "signature": "List<DiscoveryIncomingMessage> sendQueryAndCollectAnswers(DiscoveryOutgoingMessage pOutMsg, int pTimeout, String pMulticastGroup, int pMulticastPort)", "full_signature": "public static List<DiscoveryIncomingMessage> sendQueryAndCollectAnswers(DiscoveryOutgoingMessage pOutMsg, int pTimeout, String pMulticastGroup, int pMulticastPort)", "class_method_signature": "MulticastUtil.sendQueryAndCollectAnswers(DiscoveryOutgoingMessage pOutMsg, int pTimeout, String pMulticastGroup, int pMulticastPort)", "testcase": false, "constructor": false}, {"identifier": "sendQueryAndCollectAnswers", "parameters": "(DiscoveryOutgoingMessage pOutMsg,\n                                                                            int pTimeout,\n                                                                            String pMulticastGroup,\n                                                                            int pMulticastPort,\n                                                                            LogHandler pLogHandler)", "modifiers": "public static", "return": "List<DiscoveryIncomingMessage>", "signature": "List<DiscoveryIncomingMessage> sendQueryAndCollectAnswers(DiscoveryOutgoingMessage pOutMsg,\n                                                                            int pTimeout,\n                                                                            String pMulticastGroup,\n                                                                            int pMulticastPort,\n                                                                            LogHandler pLogHandler)", "full_signature": "public static List<DiscoveryIncomingMessage> sendQueryAndCollectAnswers(DiscoveryOutgoingMessage pOutMsg,\n                                                                            int pTimeout,\n                                                                            String pMulticastGroup,\n                                                                            int pMulticastPort,\n                                                                            LogHandler pLogHandler)", "class_method_signature": "MulticastUtil.sendQueryAndCollectAnswers(DiscoveryOutgoingMessage pOutMsg,\n                                                                            int pTimeout,\n                                                                            String pMulticastGroup,\n                                                                            int pMulticastPort,\n                                                                            LogHandler pLogHandler)", "testcase": false, "constructor": false}, {"identifier": "sendDiscoveryRequests", "parameters": "(DiscoveryOutgoingMessage pOutMsg,\n                                                                                      int pTimeout,\n                                                                                      String pMulticastGroup,\n                                                                                      int pMulticastPort,\n                                                                                      LogHandler pLogHandler)", "modifiers": "private static", "return": "List<Future<List<DiscoveryIncomingMessage>>>", "signature": "List<Future<List<DiscoveryIncomingMessage>>> sendDiscoveryRequests(DiscoveryOutgoingMessage pOutMsg,\n                                                                                      int pTimeout,\n                                                                                      String pMulticastGroup,\n                                                                                      int pMulticastPort,\n                                                                                      LogHandler pLogHandler)", "full_signature": "private static List<Future<List<DiscoveryIncomingMessage>>> sendDiscoveryRequests(DiscoveryOutgoingMessage pOutMsg,\n                                                                                      int pTimeout,\n                                                                                      String pMulticastGroup,\n                                                                                      int pMulticastPort,\n                                                                                      LogHandler pLogHandler)", "class_method_signature": "MulticastUtil.sendDiscoveryRequests(DiscoveryOutgoingMessage pOutMsg,\n                                                                                      int pTimeout,\n                                                                                      String pMulticastGroup,\n                                                                                      int pMulticastPort,\n                                                                                      LogHandler pLogHandler)", "testcase": false, "constructor": false}, {"identifier": "getMulticastAddresses", "parameters": "()", "modifiers": "private static", "return": "List<InetAddress>", "signature": "List<InetAddress> getMulticastAddresses()", "full_signature": "private static List<InetAddress> getMulticastAddresses()", "class_method_signature": "MulticastUtil.getMulticastAddresses()", "testcase": false, "constructor": false}, {"identifier": "collectIncomingMessages", "parameters": "(int pTimeout, List<Future<List<DiscoveryIncomingMessage>>> pFutures, LogHandler pLogHandler)", "modifiers": "private static", "return": "List<DiscoveryIncomingMessage>", "signature": "List<DiscoveryIncomingMessage> collectIncomingMessages(int pTimeout, List<Future<List<DiscoveryIncomingMessage>>> pFutures, LogHandler pLogHandler)", "full_signature": "private static List<DiscoveryIncomingMessage> collectIncomingMessages(int pTimeout, List<Future<List<DiscoveryIncomingMessage>>> pFutures, LogHandler pLogHandler)", "class_method_signature": "MulticastUtil.collectIncomingMessages(int pTimeout, List<Future<List<DiscoveryIncomingMessage>>> pFutures, LogHandler pLogHandler)", "testcase": false, "constructor": false}, {"identifier": "joinMcGroupsOnAllNetworkInterfaces", "parameters": "(MulticastSocket pSocket, InetSocketAddress pSocketAddress, LogHandler pLogHandler)", "modifiers": "private static", "return": "int", "signature": "int joinMcGroupsOnAllNetworkInterfaces(MulticastSocket pSocket, InetSocketAddress pSocketAddress, LogHandler pLogHandler)", "full_signature": "private static int joinMcGroupsOnAllNetworkInterfaces(MulticastSocket pSocket, InetSocketAddress pSocketAddress, LogHandler pLogHandler)", "class_method_signature": "MulticastUtil.joinMcGroupsOnAllNetworkInterfaces(MulticastSocket pSocket, InetSocketAddress pSocketAddress, LogHandler pLogHandler)", "testcase": false, "constructor": false}, {"identifier": "setOutgoingInterfaceForMulticastRequest", "parameters": "(InetAddress pAddress, MulticastSocket pSocket)", "modifiers": "private static", "return": "void", "signature": "void setOutgoingInterfaceForMulticastRequest(InetAddress pAddress, MulticastSocket pSocket)", "full_signature": "private static void setOutgoingInterfaceForMulticastRequest(InetAddress pAddress, MulticastSocket pSocket)", "class_method_signature": "MulticastUtil.setOutgoingInterfaceForMulticastRequest(InetAddress pAddress, MulticastSocket pSocket)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/discovery/MulticastUtil.java"}, "focal_method": {"identifier": "newMulticastSocket", "parameters": "(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler)", "modifiers": "static", "return": "MulticastSocket", "body": "static MulticastSocket newMulticastSocket(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler) throws IOException {\n        // TODO: IpV6 (not supported yet)\n        InetSocketAddress socketAddress =\n                new InetSocketAddress(pMulticastGroup, pMulticastPort);\n\n        MulticastSocket socket = new MulticastSocket(pMulticastPort);\n        socket.setReuseAddress(true);\n        setOutgoingInterfaceForMulticastRequest(pAddress, socket);\n        socket.setTimeToLive(255);\n        if (joinMcGroupsOnAllNetworkInterfaces(socket, socketAddress, pLogHandler) == 0) {\n            throw new IOException(\"Couldn't join multicast group \" + socketAddress + \" on any network interfaces\");\n        }\n        return socket;\n    }", "signature": "MulticastSocket newMulticastSocket(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler)", "full_signature": "static MulticastSocket newMulticastSocket(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler)", "class_method_signature": "MulticastUtil.newMulticastSocket(InetAddress pAddress, String pMulticastGroup, int pMulticastPort, LogHandler pLogHandler)", "testcase": false, "constructor": false, "invocations": ["setReuseAddress", "setOutgoingInterfaceForMulticastRequest", "setTimeToLive", "joinMcGroupsOnAllNetworkInterfaces"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}