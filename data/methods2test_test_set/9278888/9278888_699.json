{"test_class": {"identifier": "B3SingleFormatTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "String traceIdHigh = \"1234567890123459\";", "modifier": "", "type": "String", "declarator": "traceIdHigh = \"1234567890123459\"", "var_name": "traceIdHigh"}, {"original_string": "String traceId = \"1234567890123451\";", "modifier": "", "type": "String", "declarator": "traceId = \"1234567890123451\"", "var_name": "traceId"}, {"original_string": "String parentId = \"1234567890123452\";", "modifier": "", "type": "String", "declarator": "parentId = \"1234567890123452\"", "var_name": "parentId"}, {"original_string": "String spanId = \"1234567890123453\";", "modifier": "", "type": "String", "declarator": "spanId = \"1234567890123453\"", "var_name": "spanId"}, {"original_string": "Platform platform = mock(Platform.class);", "modifier": "", "type": "Platform", "declarator": "platform = mock(Platform.class)", "var_name": "platform"}], "file": "brave/src/test/java/brave/propagation/B3SingleFormatTest.java"}, "test_case": {"identifier": "parseB3SingleFormat_middleOfString_debugOnly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void parseB3SingleFormat_middleOfString_debugOnly() {\n    String input = \"b2=foo,b3=d,b4=bar\";\n    assertThat(parseB3SingleFormat(input, 10, 11).samplingFlags())\n      .isSameAs(SamplingFlags.DEBUG);\n  }", "signature": "void parseB3SingleFormat_middleOfString_debugOnly()", "full_signature": "@Test public void parseB3SingleFormat_middleOfString_debugOnly()", "class_method_signature": "B3SingleFormatTest.parseB3SingleFormat_middleOfString_debugOnly()", "testcase": true, "constructor": false, "invocations": ["isSameAs", "assertThat", "samplingFlags", "parseB3SingleFormat"]}, "focal_class": {"identifier": "B3SingleFormat", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final int FORMAT_MAX_LENGTH = 32 + 1 + 16 + 3 + 16;", "modifier": "static final", "type": "int", "declarator": "FORMAT_MAX_LENGTH = 32 + 1 + 16 + 3 + 16", "var_name": "FORMAT_MAX_LENGTH"}, {"original_string": "static final int // instead of enum for smaller bytecode\n    FIELD_TRACE_ID_HIGH = 1,\n    FIELD_TRACE_ID = 2,\n    FIELD_SPAN_ID = 3,\n    FIELD_SAMPLED = 4,\n    FIELD_PARENT_SPAN_ID = 5;", "modifier": "static final", "type": "int", "declarator": "FIELD_TRACE_ID_HIGH = 1", "var_name": "FIELD_TRACE_ID_HIGH"}], "methods": [{"identifier": "writeB3SingleFormatWithoutParentId", "parameters": "(TraceContext context)", "modifiers": "public static", "return": "String", "signature": "String writeB3SingleFormatWithoutParentId(TraceContext context)", "full_signature": "public static String writeB3SingleFormatWithoutParentId(TraceContext context)", "class_method_signature": "B3SingleFormat.writeB3SingleFormatWithoutParentId(TraceContext context)", "testcase": false, "constructor": false}, {"identifier": "writeB3SingleFormatWithoutParentIdAsBytes", "parameters": "(TraceContext context)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] writeB3SingleFormatWithoutParentIdAsBytes(TraceContext context)", "full_signature": "public static byte[] writeB3SingleFormatWithoutParentIdAsBytes(TraceContext context)", "class_method_signature": "B3SingleFormat.writeB3SingleFormatWithoutParentIdAsBytes(TraceContext context)", "testcase": false, "constructor": false}, {"identifier": "writeB3SingleFormat", "parameters": "(TraceContext context)", "modifiers": "public static", "return": "String", "signature": "String writeB3SingleFormat(TraceContext context)", "full_signature": "public static String writeB3SingleFormat(TraceContext context)", "class_method_signature": "B3SingleFormat.writeB3SingleFormat(TraceContext context)", "testcase": false, "constructor": false}, {"identifier": "writeB3SingleFormatAsBytes", "parameters": "(TraceContext context)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] writeB3SingleFormatAsBytes(TraceContext context)", "full_signature": "public static byte[] writeB3SingleFormatAsBytes(TraceContext context)", "class_method_signature": "B3SingleFormat.writeB3SingleFormatAsBytes(TraceContext context)", "testcase": false, "constructor": false}, {"identifier": "writeB3SingleFormat", "parameters": "(TraceContext context, long parentId, char[] result)", "modifiers": "static", "return": "int", "signature": "int writeB3SingleFormat(TraceContext context, long parentId, char[] result)", "full_signature": "static int writeB3SingleFormat(TraceContext context, long parentId, char[] result)", "class_method_signature": "B3SingleFormat.writeB3SingleFormat(TraceContext context, long parentId, char[] result)", "testcase": false, "constructor": false}, {"identifier": "parseB3SingleFormat", "parameters": "(CharSequence b3)", "modifiers": "@Nullable public static", "return": "TraceContextOrSamplingFlags", "signature": "TraceContextOrSamplingFlags parseB3SingleFormat(CharSequence b3)", "full_signature": "@Nullable public static TraceContextOrSamplingFlags parseB3SingleFormat(CharSequence b3)", "class_method_signature": "B3SingleFormat.parseB3SingleFormat(CharSequence b3)", "testcase": false, "constructor": false}, {"identifier": "parseB3SingleFormat", "parameters": "(CharSequence value, int beginIndex,\n    int endIndex)", "modifiers": "@Nullable public static", "return": "TraceContextOrSamplingFlags", "signature": "TraceContextOrSamplingFlags parseB3SingleFormat(CharSequence value, int beginIndex,\n    int endIndex)", "full_signature": "@Nullable public static TraceContextOrSamplingFlags parseB3SingleFormat(CharSequence value, int beginIndex,\n    int endIndex)", "class_method_signature": "B3SingleFormat.parseB3SingleFormat(CharSequence value, int beginIndex,\n    int endIndex)", "testcase": false, "constructor": false}, {"identifier": "tryParseSamplingFlags", "parameters": "(char sampledChar)", "modifiers": "@Nullable static", "return": "SamplingFlags", "signature": "SamplingFlags tryParseSamplingFlags(char sampledChar)", "full_signature": "@Nullable static SamplingFlags tryParseSamplingFlags(char sampledChar)", "class_method_signature": "B3SingleFormat.tryParseSamplingFlags(char sampledChar)", "testcase": false, "constructor": false}, {"identifier": "validateFieldLength", "parameters": "(int field, int length)", "modifiers": "static", "return": "boolean", "signature": "boolean validateFieldLength(int field, int length)", "full_signature": "static boolean validateFieldLength(int field, int length)", "class_method_signature": "B3SingleFormat.validateFieldLength(int field, int length)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(int fieldCode, String s)", "modifiers": "static", "return": "void", "signature": "void log(int fieldCode, String s)", "full_signature": "static void log(int fieldCode, String s)", "class_method_signature": "B3SingleFormat.log(int fieldCode, String s)", "testcase": false, "constructor": false}, {"identifier": "asciiToNewByteArray", "parameters": "(char[] buffer, int length)", "modifiers": "static", "return": "byte[]", "signature": "byte[] asciiToNewByteArray(char[] buffer, int length)", "full_signature": "static byte[] asciiToNewByteArray(char[] buffer, int length)", "class_method_signature": "B3SingleFormat.asciiToNewByteArray(char[] buffer, int length)", "testcase": false, "constructor": false}, {"identifier": "B3SingleFormat", "parameters": "()", "modifiers": "", "return": "", "signature": " B3SingleFormat()", "full_signature": "  B3SingleFormat()", "class_method_signature": "B3SingleFormat.B3SingleFormat()", "testcase": false, "constructor": true}], "file": "brave/src/main/java/brave/propagation/B3SingleFormat.java"}, "focal_method": {"identifier": "parseB3SingleFormat", "parameters": "(CharSequence b3)", "modifiers": "@Nullable public static", "return": "TraceContextOrSamplingFlags", "body": "@Nullable\n  public static TraceContextOrSamplingFlags parseB3SingleFormat(CharSequence b3) {\n    return parseB3SingleFormat(b3, 0, b3.length());\n  }", "signature": "TraceContextOrSamplingFlags parseB3SingleFormat(CharSequence b3)", "full_signature": "@Nullable public static TraceContextOrSamplingFlags parseB3SingleFormat(CharSequence b3)", "class_method_signature": "B3SingleFormat.parseB3SingleFormat(CharSequence b3)", "testcase": false, "constructor": false, "invocations": ["parseB3SingleFormat", "length"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}