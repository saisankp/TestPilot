{"test_class": {"identifier": "PortPatternTest", "superclass": "", "interfaces": "", "fields": [], "file": "de.prob2.kernel/src/test/java/de/prob/cli/PortPatternTest.java"}, "test_case": {"identifier": "testSuccess2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSuccess2() {\n\t\tString line = \" s \\t  Port: 3422\";\n\t\tPortPattern pattern = new PortPattern();\n\t\tboolean matches = pattern.matchesLine(line);\n\t\tassertTrue(\"Pattern does not match\", matches);\n\t\tassertEquals(Integer.valueOf(3422), pattern.getValue());\n\t}", "signature": "void testSuccess2()", "full_signature": "@Test public void testSuccess2()", "class_method_signature": "PortPatternTest.testSuccess2()", "testcase": true, "constructor": false, "invocations": ["matchesLine", "assertTrue", "assertEquals", "valueOf", "getValue"]}, "focal_class": {"identifier": "PortPattern", "superclass": "extends AbstractCliPattern<Integer>", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(PortPattern.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PortPattern.class)", "var_name": "logger"}, {"original_string": "private int port;", "modifier": "private", "type": "int", "declarator": "port", "var_name": "port"}], "methods": [{"identifier": "PortPattern", "parameters": "()", "modifiers": "", "return": "", "signature": " PortPattern()", "full_signature": "  PortPattern()", "class_method_signature": "PortPattern.PortPattern()", "testcase": false, "constructor": true}, {"identifier": "setValue", "parameters": "(final Matcher matcher)", "modifiers": "@Override protected", "return": "void", "signature": "void setValue(final Matcher matcher)", "full_signature": "@Override protected void setValue(final Matcher matcher)", "class_method_signature": "PortPattern.setValue(final Matcher matcher)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getValue()", "full_signature": "@Override public Integer getValue()", "class_method_signature": "PortPattern.getValue()", "testcase": false, "constructor": false}, {"identifier": "notifyNotFound", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void notifyNotFound()", "full_signature": "@Override public void notifyNotFound()", "class_method_signature": "PortPattern.notifyNotFound()", "testcase": false, "constructor": false}, {"identifier": "notFoundIsFatal", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean notFoundIsFatal()", "full_signature": "@Override public boolean notFoundIsFatal()", "class_method_signature": "PortPattern.notFoundIsFatal()", "testcase": false, "constructor": false}], "file": "de.prob2.kernel/src/main/java/de/prob/cli/PortPattern.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "body": "@Override\n\tpublic Integer getValue() {\n\t\treturn port;\n\t}", "signature": "Integer getValue()", "full_signature": "@Override public Integer getValue()", "class_method_signature": "PortPattern.getValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 5495723, "url": "https://github.com/bendisposto/prob2", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 11, "size": 32880, "license": "licensed"}}