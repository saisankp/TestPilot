{"test_class": {"identifier": "HexStringTest", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "network-level/fl-ho-nl/src/test/java/org/openflow/util/HexStringTest.java"}, "test_case": {"identifier": "testToStringBytes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToStringBytes() {\n        byte[] dpid = { 0, 0, 0, 0, 0, 0, 0, -1 };\n        String valid = \"00:00:00:00:00:00:00:ff\";\n        String testString = HexString.toHexString(dpid);\n        TestCase.assertEquals(valid, testString);\n    }", "signature": "void testToStringBytes()", "full_signature": "@Test public void testToStringBytes()", "class_method_signature": "HexStringTest.testToStringBytes()", "testcase": true, "constructor": false, "invocations": ["toHexString", "assertEquals"]}, "focal_class": {"identifier": "HexString", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toHexString", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String toHexString(byte[] bytes)", "full_signature": "public static String toHexString(byte[] bytes)", "class_method_signature": "HexString.toHexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(long val, int padTo)", "modifiers": "public static", "return": "String", "signature": "String toHexString(long val, int padTo)", "full_signature": "public static String toHexString(long val, int padTo)", "class_method_signature": "HexString.toHexString(long val, int padTo)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(long val)", "modifiers": "public static", "return": "String", "signature": "String toHexString(long val)", "full_signature": "public static String toHexString(long val)", "class_method_signature": "HexString.toHexString(long val)", "testcase": false, "constructor": false}, {"identifier": "fromHexString", "parameters": "(String values)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] fromHexString(String values)", "full_signature": "public static byte[] fromHexString(String values)", "class_method_signature": "HexString.fromHexString(String values)", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "(String values)", "modifiers": "public static", "return": "long", "signature": "long toLong(String values)", "full_signature": "public static long toLong(String values)", "class_method_signature": "HexString.toLong(String values)", "testcase": false, "constructor": false}], "file": "network-level/fl-ho-nl/src/main/java/org/openflow/util/HexString.java"}, "focal_method": {"identifier": "toHexString", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "body": "public static String toHexString(byte[] bytes) {\n        int i;\n        String ret = \"\";\n        String tmp;\n        for(i=0; i< bytes.length; i++) {\n            if(i> 0)\n                ret += \":\";\n            tmp = Integer.toHexString(U8.f(bytes[i]));\n            if (tmp.length() == 1)\n                ret += \"0\";\n            ret += tmp; \n        }\n        return ret;\n    }", "signature": "String toHexString(byte[] bytes)", "full_signature": "public static String toHexString(byte[] bytes)", "class_method_signature": "HexString.toHexString(byte[] bytes)", "testcase": false, "constructor": false, "invocations": ["toHexString", "f", "length"]}, "repository": {"repo_id": 10459637, "url": "https://github.com/rizard/geni-openflow-vertical-handover", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 33971, "license": "licensed"}}