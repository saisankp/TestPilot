{"test_class": {"identifier": "ImmutableJsonWebTokenTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/jwt/src/test/java/org/eclipse/ditto/model/jwt/ImmutableJsonWebTokenTest.java"}, "test_case": {"identifier": "checkTokenExpiration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkTokenExpiration() {\n        final String header = \"{\\\"header\\\":\\\"value\\\"}\";\n        final String payload = String.format(\"{\\\"exp\\\":%d}\", Instant.now().getEpochSecond());\n        final String signature = \"{\\\"signature\\\":\\\"foo\\\"}\";\n\n        final String authorizationHeader = \"Bearer \" + base64(header) + \".\" + base64(payload) + \".\" + base64(signature);\n\n        final JsonWebToken expiredJsonWebToken = ImmutableJsonWebToken.fromAuthorization(authorizationHeader);\n\n        assertThat(expiredJsonWebToken.isExpired()).isEqualTo(true);\n    }", "signature": "void checkTokenExpiration()", "full_signature": "@Test public void checkTokenExpiration()", "class_method_signature": "ImmutableJsonWebTokenTest.checkTokenExpiration()", "testcase": true, "constructor": false, "invocations": ["format", "getEpochSecond", "now", "base64", "base64", "base64", "fromAuthorization", "isEqualTo", "assertThat", "isExpired"]}, "focal_class": {"identifier": "ImmutableJsonWebToken", "superclass": "extends AbstractJsonWebToken", "interfaces": "", "fields": [{"original_string": "private final List<String> authorizationSubjects;", "modifier": "private final", "type": "List<String>", "declarator": "authorizationSubjects", "var_name": "authorizationSubjects"}], "methods": [{"identifier": "ImmutableJsonWebToken", "parameters": "(final String token)", "modifiers": "private", "return": "", "signature": " ImmutableJsonWebToken(final String token)", "full_signature": "private  ImmutableJsonWebToken(final String token)", "class_method_signature": "ImmutableJsonWebToken.ImmutableJsonWebToken(final String token)", "testcase": false, "constructor": true}, {"identifier": "fromAuthorization", "parameters": "(final String authorization)", "modifiers": "public static", "return": "JsonWebToken", "signature": "JsonWebToken fromAuthorization(final String authorization)", "full_signature": "public static JsonWebToken fromAuthorization(final String authorization)", "class_method_signature": "ImmutableJsonWebToken.fromAuthorization(final String authorization)", "testcase": false, "constructor": false}, {"identifier": "getTokenFromAuthorizationString", "parameters": "(final String authorizationString)", "modifiers": "private static", "return": "String", "signature": "String getTokenFromAuthorizationString(final String authorizationString)", "full_signature": "private static String getTokenFromAuthorizationString(final String authorizationString)", "class_method_signature": "ImmutableJsonWebToken.getTokenFromAuthorizationString(final String authorizationString)", "testcase": false, "constructor": false}, {"identifier": "fromToken", "parameters": "(final String token)", "modifiers": "public static", "return": "JsonWebToken", "signature": "JsonWebToken fromToken(final String token)", "full_signature": "public static JsonWebToken fromToken(final String token)", "class_method_signature": "ImmutableJsonWebToken.fromToken(final String token)", "testcase": false, "constructor": false}, {"identifier": "getSubjects", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSubjects()", "full_signature": "@Override public List<String> getSubjects()", "class_method_signature": "ImmutableJsonWebToken.getSubjects()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "ImmutableJsonWebToken.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableJsonWebToken.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableJsonWebToken.toString()", "testcase": false, "constructor": false}], "file": "model/jwt/src/main/java/org/eclipse/ditto/model/jwt/ImmutableJsonWebToken.java"}, "focal_method": {"identifier": "fromAuthorization", "parameters": "(final String authorization)", "modifiers": "public static", "return": "JsonWebToken", "body": "public static JsonWebToken fromAuthorization(final String authorization) {\n        final String token = getTokenFromAuthorizationString(authorization);\n        return fromToken(token);\n    }", "signature": "JsonWebToken fromAuthorization(final String authorization)", "full_signature": "public static JsonWebToken fromAuthorization(final String authorization)", "class_method_signature": "ImmutableJsonWebToken.fromAuthorization(final String authorization)", "testcase": false, "constructor": false, "invocations": ["getTokenFromAuthorizationString", "fromToken"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}