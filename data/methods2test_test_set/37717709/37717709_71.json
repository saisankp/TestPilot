{"test_class": {"identifier": "TestJvoiceXmlSsmlParsingStrategyFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private VoiceXmlInterpreterContext context;", "modifier": "private", "type": "VoiceXmlInterpreterContext", "declarator": "context", "var_name": "context"}, {"original_string": "private DataModel model;", "modifier": "private", "type": "DataModel", "declarator": "model", "var_name": "model"}], "file": "org.jvoicexml.profile.vxml21/src/test/java/org/jvoicexml/profile/vxml21/tagstrategy/TestJvoiceXmlSsmlParsingStrategyFactory.java"}, "test_case": {"identifier": "testGetParsingStrategy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetParsingStrategy() throws Exception, JVoiceXMLEvent {\n        final String testVar = \"testvalue\";\n        final VoiceXmlDocument document = new VoiceXmlDocument();\n        final Vxml vxml = document.getVxml();\n        final Form form = vxml.appendChild(Form.class);\n        final Block block = form.appendChild(Block.class);\n        final Prompt prompt = block.appendChild(Prompt.class);\n        prompt.addText(\"This is a test\");\n        final Value value = prompt.appendChild(Value.class);\n        value.setExpr(testVar);\n        SsmlParsingStrategyFactory factory = new JvoiceXmlSsmlParsingStrategyFactory();\n        SsmlParsingStrategy strategy = factory.getParsingStrategy(value);\n        Assert.assertNotNull(strategy);\n        SsmlParsingStrategy promptStrategy = factory.getParsingStrategy(prompt);\n        Assert.assertNull(promptStrategy);\n    }", "signature": "void testGetParsingStrategy()", "full_signature": "@Test public void testGetParsingStrategy()", "class_method_signature": "TestJvoiceXmlSsmlParsingStrategyFactory.testGetParsingStrategy()", "testcase": true, "constructor": false, "invocations": ["getVxml", "appendChild", "appendChild", "appendChild", "addText", "appendChild", "setExpr", "getParsingStrategy", "assertNotNull", "getParsingStrategy", "assertNull"]}, "focal_class": {"identifier": "JvoiceXmlSsmlParsingStrategyFactory", "superclass": "", "interfaces": "implements SsmlParsingStrategyFactory", "fields": [{"original_string": "private static final Logger LOGGER =\n            LogManager.getLogger(JvoiceXmlSsmlParsingStrategyFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n            LogManager.getLogger(JvoiceXmlSsmlParsingStrategyFactory.class)", "var_name": "LOGGER"}, {"original_string": "private static final Map<String, SsmlParsingStrategy> STRATEGIES;", "modifier": "private static final", "type": "Map<String, SsmlParsingStrategy>", "declarator": "STRATEGIES", "var_name": "STRATEGIES"}], "methods": [{"identifier": "JvoiceXmlSsmlParsingStrategyFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " JvoiceXmlSsmlParsingStrategyFactory()", "full_signature": "public  JvoiceXmlSsmlParsingStrategyFactory()", "class_method_signature": "JvoiceXmlSsmlParsingStrategyFactory.JvoiceXmlSsmlParsingStrategyFactory()", "testcase": false, "constructor": true}, {"identifier": "getParsingStrategy", "parameters": "(final VoiceXmlNode node)", "modifiers": "public", "return": "SsmlParsingStrategy", "signature": "SsmlParsingStrategy getParsingStrategy(final VoiceXmlNode node)", "full_signature": "public SsmlParsingStrategy getParsingStrategy(final VoiceXmlNode node)", "class_method_signature": "JvoiceXmlSsmlParsingStrategyFactory.getParsingStrategy(final VoiceXmlNode node)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.profile.vxml21/src/main/java/org/jvoicexml/profile/vxml21/tagstrategy/JvoiceXmlSsmlParsingStrategyFactory.java"}, "focal_method": {"identifier": "getParsingStrategy", "parameters": "(final VoiceXmlNode node)", "modifiers": "public", "return": "SsmlParsingStrategy", "body": "public SsmlParsingStrategy getParsingStrategy(final VoiceXmlNode node) {\n        if (node == null) {\n            LOGGER.warn(\"cannot get strategy for null\");\n\n            return null;\n        }\n\n        final String tag = node.getTagName();\n\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"getting strategy for tag: '\" + tag + \"'\");\n        }\n\n        final SsmlParsingStrategy strategy = STRATEGIES.get(tag);\n        if (strategy == null) {\n            LOGGER.warn(\"no suitable strategy for tag: '\" + tag + \"'\");\n\n            return null;\n        }\n\n        return (SsmlParsingStrategy) strategy.clone();\n    }", "signature": "SsmlParsingStrategy getParsingStrategy(final VoiceXmlNode node)", "full_signature": "public SsmlParsingStrategy getParsingStrategy(final VoiceXmlNode node)", "class_method_signature": "JvoiceXmlSsmlParsingStrategyFactory.getParsingStrategy(final VoiceXmlNode node)", "testcase": false, "constructor": false, "invocations": ["warn", "getTagName", "isDebugEnabled", "debug", "get", "warn", "clone"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}