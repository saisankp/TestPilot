{"test_class": {"identifier": "UriTemplateUtilTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "feilong-spring-web/src/test/java/com/feilong/spring/web/util/UriTemplateUtilTest.java"}, "test_case": {"identifier": "testExpandWithVariable2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExpandWithVariable2(){\n        String matchingPatternPath = \"/s/c{categoryCode}-m{material}-c{color}-s{size}-k{kind}-s{style}-o{order}.htm\";\n        String variableName = \"color\";\n        String value = \"100\";\n        LOGGER.debug(UriTemplateUtil.expandWithVariable(matchingPatternPath, variableName, value));\n    }", "signature": "void testExpandWithVariable2()", "full_signature": "@Test public void testExpandWithVariable2()", "class_method_signature": "UriTemplateUtilTest.testExpandWithVariable2()", "testcase": true, "constructor": false, "invocations": ["debug", "expandWithVariable"]}, "focal_class": {"identifier": "UriTemplateUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(UriTemplateUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(UriTemplateUtil.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "UriTemplateUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " UriTemplateUtil()", "full_signature": "private  UriTemplateUtil()", "class_method_signature": "UriTemplateUtil.UriTemplateUtil()", "testcase": false, "constructor": true}, {"identifier": "getUriTemplateVariableValue", "parameters": "(HttpServletRequest request,String pathVarName)", "modifiers": "public static", "return": "String", "signature": "String getUriTemplateVariableValue(HttpServletRequest request,String pathVarName)", "full_signature": "public static String getUriTemplateVariableValue(HttpServletRequest request,String pathVarName)", "class_method_signature": "UriTemplateUtil.getUriTemplateVariableValue(HttpServletRequest request,String pathVarName)", "testcase": false, "constructor": false}, {"identifier": "hasPathVarName", "parameters": "(HttpServletRequest request,String pathVarName)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasPathVarName(HttpServletRequest request,String pathVarName)", "full_signature": "public static boolean hasPathVarName(HttpServletRequest request,String pathVarName)", "class_method_signature": "UriTemplateUtil.hasPathVarName(HttpServletRequest request,String pathVarName)", "testcase": false, "constructor": false}, {"identifier": "getUriTemplateVariables", "parameters": "(HttpServletRequest request)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getUriTemplateVariables(HttpServletRequest request)", "full_signature": "public static Map<String, String> getUriTemplateVariables(HttpServletRequest request)", "class_method_signature": "UriTemplateUtil.getUriTemplateVariables(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getBestMatchingPattern", "parameters": "(HttpServletRequest request)", "modifiers": "public static", "return": "String", "signature": "String getBestMatchingPattern(HttpServletRequest request)", "full_signature": "public static String getBestMatchingPattern(HttpServletRequest request)", "class_method_signature": "UriTemplateUtil.getBestMatchingPattern(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "expandBestMatchingPattern", "parameters": "(HttpServletRequest request,String variableName,String value)", "modifiers": "public static", "return": "String", "signature": "String expandBestMatchingPattern(HttpServletRequest request,String variableName,String value)", "full_signature": "public static String expandBestMatchingPattern(HttpServletRequest request,String variableName,String value)", "class_method_signature": "UriTemplateUtil.expandBestMatchingPattern(HttpServletRequest request,String variableName,String value)", "testcase": false, "constructor": false}, {"identifier": "expandWithVariable", "parameters": "(String requestPath,String matchingPatternPath,String variableName,String value)", "modifiers": "public static", "return": "String", "signature": "String expandWithVariable(String requestPath,String matchingPatternPath,String variableName,String value)", "full_signature": "public static String expandWithVariable(String requestPath,String matchingPatternPath,String variableName,String value)", "class_method_signature": "UriTemplateUtil.expandWithVariable(String requestPath,String matchingPatternPath,String variableName,String value)", "testcase": false, "constructor": false}, {"identifier": "extractUriTemplateVariables", "parameters": "(String requestPath,String matchingPatternPath)", "modifiers": "static", "return": "Map<String, String>", "signature": "Map<String, String> extractUriTemplateVariables(String requestPath,String matchingPatternPath)", "full_signature": "static Map<String, String> extractUriTemplateVariables(String requestPath,String matchingPatternPath)", "class_method_signature": "UriTemplateUtil.extractUriTemplateVariables(String requestPath,String matchingPatternPath)", "testcase": false, "constructor": false}, {"identifier": "expandWithVariable", "parameters": "(String matchingPatternPath,String variableName,String value)", "modifiers": "public static", "return": "String", "signature": "String expandWithVariable(String matchingPatternPath,String variableName,String value)", "full_signature": "public static String expandWithVariable(String matchingPatternPath,String variableName,String value)", "class_method_signature": "UriTemplateUtil.expandWithVariable(String matchingPatternPath,String variableName,String value)", "testcase": false, "constructor": false}, {"identifier": "clearVariablesValue", "parameters": "(String requestPath,String matchingPatternPath,String[] variableNames)", "modifiers": "public static", "return": "String", "signature": "String clearVariablesValue(String requestPath,String matchingPatternPath,String[] variableNames)", "full_signature": "public static String clearVariablesValue(String requestPath,String matchingPatternPath,String[] variableNames)", "class_method_signature": "UriTemplateUtil.clearVariablesValue(String requestPath,String matchingPatternPath,String[] variableNames)", "testcase": false, "constructor": false}, {"identifier": "retainVariablesValue", "parameters": "(String requestPath,String matchingPatternPath,String[] variableNames)", "modifiers": "public static", "return": "String", "signature": "String retainVariablesValue(String requestPath,String matchingPatternPath,String[] variableNames)", "full_signature": "public static String retainVariablesValue(String requestPath,String matchingPatternPath,String[] variableNames)", "class_method_signature": "UriTemplateUtil.retainVariablesValue(String requestPath,String matchingPatternPath,String[] variableNames)", "testcase": false, "constructor": false}, {"identifier": "expand", "parameters": "(String uriTemplatePath,Map<String, String> map)", "modifiers": "public static", "return": "String", "signature": "String expand(String uriTemplatePath,Map<String, String> map)", "full_signature": "public static String expand(String uriTemplatePath,Map<String, String> map)", "class_method_signature": "UriTemplateUtil.expand(String uriTemplatePath,Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "getVariableNames", "parameters": "(String uriTemplatePath)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getVariableNames(String uriTemplatePath)", "full_signature": "public static List<String> getVariableNames(String uriTemplatePath)", "class_method_signature": "UriTemplateUtil.getVariableNames(String uriTemplatePath)", "testcase": false, "constructor": false}], "file": "feilong-spring-web/src/main/java/com/feilong/spring/web/util/UriTemplateUtil.java"}, "focal_method": {"identifier": "expandWithVariable", "parameters": "(String requestPath,String matchingPatternPath,String variableName,String value)", "modifiers": "public static", "return": "String", "body": "public static String expandWithVariable(String requestPath,String matchingPatternPath,String variableName,String value){\n        Map<String, String> map = extractUriTemplateVariables(requestPath, matchingPatternPath);\n        map.put(variableName, value);\n        return expand(matchingPatternPath, map);\n    }", "signature": "String expandWithVariable(String requestPath,String matchingPatternPath,String variableName,String value)", "full_signature": "public static String expandWithVariable(String requestPath,String matchingPatternPath,String variableName,String value)", "class_method_signature": "UriTemplateUtil.expandWithVariable(String requestPath,String matchingPatternPath,String variableName,String value)", "testcase": false, "constructor": false, "invocations": ["extractUriTemplateVariables", "put", "expand"]}, "repository": {"repo_id": 36185854, "url": "https://github.com/ifeilong/feilong-spring", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 5, "size": 2088, "license": "licensed"}}