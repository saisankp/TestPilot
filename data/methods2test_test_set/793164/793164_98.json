{"test_class": {"identifier": "PidValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final PidValidator validator = new PidValidator();", "modifier": "private static final", "type": "PidValidator", "declarator": "validator = new PidValidator()", "var_name": "validator"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/validate/PidValidatorTest.java"}, "test_case": {"identifier": "testValidateGoodCases", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateGoodCases() throws XDSMetaDataException {\n        validator.validate(\"PID-3|\");\n        validator.validate(\"PID-3|something\");\n        validator.validate(\"PID-44|something\");\n    }", "signature": "void testValidateGoodCases()", "full_signature": "@Test public void testValidateGoodCases()", "class_method_signature": "PidValidatorTest.testValidateGoodCases()", "testcase": true, "constructor": false, "invocations": ["validate", "validate", "validate"]}, "focal_class": {"identifier": "PidValidator", "superclass": "", "interfaces": "implements ValueValidator", "fields": [{"original_string": "private static final Pattern PID_PATTERN = Pattern.compile(\"\\\\s*PID-([1-9][0-9]*)\\\\|(.*)\\\\s*\");", "modifier": "private static final", "type": "Pattern", "declarator": "PID_PATTERN = Pattern.compile(\"\\\\s*PID-([1-9][0-9]*)\\\\|(.*)\\\\s*\")", "var_name": "PID_PATTERN"}], "methods": [{"identifier": "validate", "parameters": "(String value)", "modifiers": "@Override public", "return": "void", "signature": "void validate(String value)", "full_signature": "@Override public void validate(String value)", "class_method_signature": "PidValidator.validate(String value)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/validate/PidValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(String value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(String value) throws XDSMetaDataException {\n        notNull(value, \"value cannot be null\");\n        \n        Matcher matcher = PID_PATTERN.matcher(value);\n        metaDataAssert(matcher.matches(), INVALID_PID, value);\n                \n        int number = Integer.parseInt(matcher.group(1));\n        metaDataAssert(number != 2 && number != 4 && number != 12 && number != 19,\n                UNSUPPORTED_PID, value);\n    }", "signature": "void validate(String value)", "full_signature": "@Override public void validate(String value)", "class_method_signature": "PidValidator.validate(String value)", "testcase": false, "constructor": false, "invocations": ["notNull", "matcher", "metaDataAssert", "matches", "parseInt", "group", "metaDataAssert"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}