{"test_class": {"identifier": "HudsonFinderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "HudsonUrlBuilder hudsonUrlBuilder;", "modifier": "", "type": "HudsonUrlBuilder", "declarator": "hudsonUrlBuilder", "var_name": "hudsonUrlBuilder"}, {"original_string": "TestResultBuilder testResultBuilder;", "modifier": "", "type": "TestResultBuilder", "declarator": "testResultBuilder", "var_name": "testResultBuilder"}, {"original_string": "GenericSoftwareClient client;", "modifier": "", "type": "GenericSoftwareClient", "declarator": "client", "var_name": "client"}, {"original_string": "HudsonBuildBuilder hudsonBuildBuilder;", "modifier": "", "type": "HudsonBuildBuilder", "declarator": "hudsonBuildBuilder", "var_name": "hudsonBuildBuilder"}, {"original_string": "HudsonFinder hudsonFinder;", "modifier": "", "type": "HudsonFinder", "declarator": "hudsonFinder", "var_name": "hudsonFinder"}], "file": "component/core/src/test/java/fr/norad/visuwall/providers/hudson/HudsonFinderTest.java"}, "test_case": {"identifier": "should_return_all_projects_of_a_view", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_all_projects_of_a_view() throws Exception {\n        ListView viewResource = (ListView) load(\"hudson/view.xml\", ListView.class);\n        when(client.resource(anyString(), any(Class.class))).thenReturn(viewResource);\n        List<String> projectNames = hudsonFinder.findJobNamesByView(\"android\");\n        assertEquals(4, projectNames.size());\n        List<String> expectedProjects = Arrays.asList(\"android-1.11\", \"android-1.11-daily\", \"android-trunk\",\n                \"android-trunk-daily\");\n        for (String expectedProject : expectedProjects) {\n            assertTrue(projectNames.contains(expectedProject));\n        }\n    }", "signature": "void should_return_all_projects_of_a_view()", "full_signature": "@Test public void should_return_all_projects_of_a_view()", "class_method_signature": "HudsonFinderTest.should_return_all_projects_of_a_view()", "testcase": true, "constructor": false, "invocations": ["load", "thenReturn", "when", "resource", "anyString", "any", "findJobNamesByView", "assertEquals", "size", "asList", "assertTrue", "contains"]}, "focal_class": {"identifier": "HudsonFinder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(HudsonFinder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(HudsonFinder.class)", "var_name": "LOG"}, {"original_string": "private HudsonUrlBuilder hudsonUrlBuilder;", "modifier": "private", "type": "HudsonUrlBuilder", "declarator": "hudsonUrlBuilder", "var_name": "hudsonUrlBuilder"}, {"original_string": "@VisibleForTesting\n    GenericSoftwareClient client;", "modifier": "@VisibleForTesting", "type": "GenericSoftwareClient", "declarator": "client", "var_name": "client"}, {"original_string": "@VisibleForTesting\n    HudsonBuildBuilder hudsonBuildBuilder;", "modifier": "@VisibleForTesting", "type": "HudsonBuildBuilder", "declarator": "hudsonBuildBuilder", "var_name": "hudsonBuildBuilder"}, {"original_string": "@VisibleForTesting\n    TestResultBuilder testResultBuilder;", "modifier": "@VisibleForTesting", "type": "TestResultBuilder", "declarator": "testResultBuilder", "var_name": "testResultBuilder"}], "methods": [{"identifier": "HudsonFinder", "parameters": "(HudsonUrlBuilder hudsonUrlBuilder)", "modifiers": "", "return": "", "signature": " HudsonFinder(HudsonUrlBuilder hudsonUrlBuilder)", "full_signature": "  HudsonFinder(HudsonUrlBuilder hudsonUrlBuilder)", "class_method_signature": "HudsonFinder.HudsonFinder(HudsonUrlBuilder hudsonUrlBuilder)", "testcase": false, "constructor": true}, {"identifier": "HudsonFinder", "parameters": "(HudsonUrlBuilder hudsonUrlBuilder, String login, String password)", "modifiers": "public", "return": "", "signature": " HudsonFinder(HudsonUrlBuilder hudsonUrlBuilder, String login, String password)", "full_signature": "public  HudsonFinder(HudsonUrlBuilder hudsonUrlBuilder, String login, String password)", "class_method_signature": "HudsonFinder.HudsonFinder(HudsonUrlBuilder hudsonUrlBuilder, String login, String password)", "testcase": false, "constructor": true}, {"identifier": "find", "parameters": "(String jobName, int buildNumber)", "modifiers": "", "return": "HudsonBuild", "signature": "HudsonBuild find(String jobName, int buildNumber)", "full_signature": " HudsonBuild find(String jobName, int buildNumber)", "class_method_signature": "HudsonFinder.find(String jobName, int buildNumber)", "testcase": false, "constructor": false}, {"identifier": "findSurefireReport", "parameters": "(String jobName, Build build)", "modifiers": "", "return": "SurefireAggregatedReport", "signature": "SurefireAggregatedReport findSurefireReport(String jobName, Build build)", "full_signature": " SurefireAggregatedReport findSurefireReport(String jobName, Build build)", "class_method_signature": "HudsonFinder.findSurefireReport(String jobName, Build build)", "testcase": false, "constructor": false}, {"identifier": "findBuildByJobNameAndBuildNumber", "parameters": "(String jobName, int buildNumber)", "modifiers": "@VisibleForTesting", "return": "Build", "signature": "Build findBuildByJobNameAndBuildNumber(String jobName, int buildNumber)", "full_signature": "@VisibleForTesting Build findBuildByJobNameAndBuildNumber(String jobName, int buildNumber)", "class_method_signature": "HudsonFinder.findBuildByJobNameAndBuildNumber(String jobName, int buildNumber)", "testcase": false, "constructor": false}, {"identifier": "findJobNames", "parameters": "()", "modifiers": "", "return": "List<String>", "signature": "List<String> findJobNames()", "full_signature": " List<String> findJobNames()", "class_method_signature": "HudsonFinder.findJobNames()", "testcase": false, "constructor": false}, {"identifier": "findJobNamesByView", "parameters": "(String viewName)", "modifiers": "", "return": "List<String>", "signature": "List<String> findJobNamesByView(String viewName)", "full_signature": " List<String> findJobNamesByView(String viewName)", "class_method_signature": "HudsonFinder.findJobNamesByView(String viewName)", "testcase": false, "constructor": false}, {"identifier": "findViews", "parameters": "()", "modifiers": "", "return": "List<String>", "signature": "List<String> findViews()", "full_signature": " List<String> findViews()", "class_method_signature": "HudsonFinder.findViews()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(String jobName)", "modifiers": "", "return": "String", "signature": "String getDescription(String jobName)", "full_signature": " String getDescription(String jobName)", "class_method_signature": "HudsonFinder.getDescription(String jobName)", "testcase": false, "constructor": false}, {"identifier": "findJob", "parameters": "(String projectName)", "modifiers": "", "return": "HudsonJob", "signature": "HudsonJob findJob(String projectName)", "full_signature": " HudsonJob findJob(String projectName)", "class_method_signature": "HudsonFinder.findJob(String projectName)", "testcase": false, "constructor": false}, {"identifier": "getLastBuildNumber", "parameters": "(String projectName)", "modifiers": "", "return": "int", "signature": "int getLastBuildNumber(String projectName)", "full_signature": " int getLastBuildNumber(String projectName)", "class_method_signature": "HudsonFinder.getLastBuildNumber(String projectName)", "testcase": false, "constructor": false}, {"identifier": "findCommiters", "parameters": "(String[] commiterNames)", "modifiers": "", "return": "Set<HudsonCommiter>", "signature": "Set<HudsonCommiter> findCommiters(String[] commiterNames)", "full_signature": " Set<HudsonCommiter> findCommiters(String[] commiterNames)", "class_method_signature": "HudsonFinder.findCommiters(String[] commiterNames)", "testcase": false, "constructor": false}, {"identifier": "getStateOf", "parameters": "(String jobName, int buildNumber)", "modifiers": "", "return": "String", "signature": "String getStateOf(String jobName, int buildNumber)", "full_signature": " String getStateOf(String jobName, int buildNumber)", "class_method_signature": "HudsonFinder.getStateOf(String jobName, int buildNumber)", "testcase": false, "constructor": false}, {"identifier": "findJobByName", "parameters": "(String jobName)", "modifiers": "private", "return": "Project", "signature": "Project findJobByName(String jobName)", "full_signature": "private Project findJobByName(String jobName)", "class_method_signature": "HudsonFinder.findJobByName(String jobName)", "testcase": false, "constructor": false}, {"identifier": "findProjectByName", "parameters": "(String jobName, String jobUrl)", "modifiers": "private", "return": "Project", "signature": "Project findProjectByName(String jobName, String jobUrl)", "full_signature": "private Project findProjectByName(String jobName, String jobUrl)", "class_method_signature": "HudsonFinder.findProjectByName(String jobName, String jobUrl)", "testcase": false, "constructor": false}, {"identifier": "createHudsonProjectFrom", "parameters": "(Project project)", "modifiers": "private", "return": "HudsonJob", "signature": "HudsonJob createHudsonProjectFrom(Project project)", "full_signature": "private HudsonJob createHudsonProjectFrom(Project project)", "class_method_signature": "HudsonFinder.createHudsonProjectFrom(Project project)", "testcase": false, "constructor": false}, {"identifier": "getBuildNumbers", "parameters": "(String jobName)", "modifiers": "", "return": "List<Integer>", "signature": "List<Integer> getBuildNumbers(String jobName)", "full_signature": " List<Integer> getBuildNumbers(String jobName)", "class_method_signature": "HudsonFinder.getBuildNumbers(String jobName)", "testcase": false, "constructor": false}, {"identifier": "getCompletedBuild", "parameters": "(String jobName)", "modifiers": "", "return": "HudsonBuild", "signature": "HudsonBuild getCompletedBuild(String jobName)", "full_signature": " HudsonBuild getCompletedBuild(String jobName)", "class_method_signature": "HudsonFinder.getCompletedBuild(String jobName)", "testcase": false, "constructor": false}, {"identifier": "getCurrentBuild", "parameters": "(String jobName)", "modifiers": "", "return": "HudsonBuild", "signature": "HudsonBuild getCurrentBuild(String jobName)", "full_signature": " HudsonBuild getCurrentBuild(String jobName)", "class_method_signature": "HudsonFinder.getCurrentBuild(String jobName)", "testcase": false, "constructor": false}, {"identifier": "getIsBuilding", "parameters": "(Project modelJob)", "modifiers": "private", "return": "boolean", "signature": "boolean getIsBuilding(Project modelJob)", "full_signature": "private boolean getIsBuilding(Project modelJob)", "class_method_signature": "HudsonFinder.getIsBuilding(Project modelJob)", "testcase": false, "constructor": false}, {"identifier": "findUnitTestResult", "parameters": "(String jobName, int buildNumber)", "modifiers": "public", "return": "HudsonTestResult", "signature": "HudsonTestResult findUnitTestResult(String jobName, int buildNumber)", "full_signature": "public HudsonTestResult findUnitTestResult(String jobName, int buildNumber)", "class_method_signature": "HudsonFinder.findUnitTestResult(String jobName, int buildNumber)", "testcase": false, "constructor": false}, {"identifier": "findIntegrationTestResult", "parameters": "(String jobName, int buildNumber)", "modifiers": "public", "return": "HudsonTestResult", "signature": "HudsonTestResult findIntegrationTestResult(String jobName, int buildNumber)", "full_signature": "public HudsonTestResult findIntegrationTestResult(String jobName, int buildNumber)", "class_method_signature": "HudsonFinder.findIntegrationTestResult(String jobName, int buildNumber)", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/providers/hudson/HudsonFinder.java"}, "focal_method": {"identifier": "findJobNamesByView", "parameters": "(String viewName)", "modifiers": "", "return": "List<String>", "body": "List<String> findJobNamesByView(String viewName) throws HudsonViewNotFoundException {\n        try {\n            List<String> jobNames = new ArrayList<String>();\n            String viewUrl = hudsonUrlBuilder.getViewUrl(viewName);\n            ListView view = client.resource(viewUrl, ListView.class);\n            for (Job job : view.getJobs()) {\n                jobNames.add(job.getName());\n            }\n            return jobNames;\n        } catch (ResourceNotFoundException e) {\n            throw new HudsonViewNotFoundException(e.getMessage(), e);\n        }\n    }", "signature": "List<String> findJobNamesByView(String viewName)", "full_signature": " List<String> findJobNamesByView(String viewName)", "class_method_signature": "HudsonFinder.findJobNamesByView(String viewName)", "testcase": false, "constructor": false, "invocations": ["getViewUrl", "resource", "getJobs", "add", "getName", "getMessage"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}