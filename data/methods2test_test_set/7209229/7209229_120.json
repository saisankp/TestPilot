{"test_class": {"identifier": "TestTrailFilePositionSetter", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String MODULE = TestTrailFilePositionSetter.class.getName();", "modifier": "public static final", "type": "String", "declarator": "MODULE = TestTrailFilePositionSetter.class.getName()", "var_name": "MODULE"}, {"original_string": "public static final Logger LOG = Logger.getLogger(MODULE);", "modifier": "public static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(MODULE)", "var_name": "LOG"}, {"original_string": "private static final String TRAIL_FILENAME_PREFIX = \"x3\";", "modifier": "private static final", "type": "String", "declarator": "TRAIL_FILENAME_PREFIX = \"x3\"", "var_name": "TRAIL_FILENAME_PREFIX"}, {"original_string": "private static final String[] _txnPattern =\n    {\n      \"<transaction timestamp=\\\"2013-03-09:02:54:34.000000\\\">\",\n      \" <dbupdate table=\\\"TASKMGR.TASKCTL_JOBS_1\\\" type=\\\"update\\\">\",\n      \"   <columns>\",\n      \"     <column name=\\\"JOB_ID\\\" key=\\\"true\\\">1621745</column>\",\n      \"     <column name=\\\"GG_MODI_TS\\\">2013-03-09:02:54:33.996072000</column>\",\n      \"     <column name=\\\"GG_STATUS\\\">o</column>\",\n      \"   </columns>\",\n      \"   <tokens>\",\n      \"     <token name=\\\"TK-XID\\\">42.8.2681282</token>\",\n      \"     <token name=\\\"TK-CSN\\\">${SCN}</token>\",\n      \"   </tokens>\",\n      \" </dbupdate>\",\n      \" <dbupdate table=\\\"TASKMGR.TASKCTL_JOBS_2\\\" type=\\\"update\\\">\",\n      \"   <columns>\",\n      \"     <column name=\\\"JOB_ID\\\" key=\\\"true\\\">1621745</column>\",\n      \"     <column name=\\\"GG_MODI_TS\\\">2013-03-09:02:54:33.996072000</column>\",\n      \"     <column name=\\\"GG_STATUS\\\">o</column>\",\n      \"   </columns>\",\n      \"   <tokens>\",\n      \"     <token name=\\\"TK-XID\\\">42.8.2681283</token>\",\n      \"     <token name=\\\"TK-CSN\\\">${SCN}</token>\",\n      \"   </tokens>\",\n      \" </dbupdate>\",\n      \"</transaction>\"\n   };", "modifier": "private static final", "type": "String[]", "declarator": "_txnPattern =\n    {\n      \"<transaction timestamp=\\\"2013-03-09:02:54:34.000000\\\">\",\n      \" <dbupdate table=\\\"TASKMGR.TASKCTL_JOBS_1\\\" type=\\\"update\\\">\",\n      \"   <columns>\",\n      \"     <column name=\\\"JOB_ID\\\" key=\\\"true\\\">1621745</column>\",\n      \"     <column name=\\\"GG_MODI_TS\\\">2013-03-09:02:54:33.996072000</column>\",\n      \"     <column name=\\\"GG_STATUS\\\">o</column>\",\n      \"   </columns>\",\n      \"   <tokens>\",\n      \"     <token name=\\\"TK-XID\\\">42.8.2681282</token>\",\n      \"     <token name=\\\"TK-CSN\\\">${SCN}</token>\",\n      \"   </tokens>\",\n      \" </dbupdate>\",\n      \" <dbupdate table=\\\"TASKMGR.TASKCTL_JOBS_2\\\" type=\\\"update\\\">\",\n      \"   <columns>\",\n      \"     <column name=\\\"JOB_ID\\\" key=\\\"true\\\">1621745</column>\",\n      \"     <column name=\\\"GG_MODI_TS\\\">2013-03-09:02:54:33.996072000</column>\",\n      \"     <column name=\\\"GG_STATUS\\\">o</column>\",\n      \"   </columns>\",\n      \"   <tokens>\",\n      \"     <token name=\\\"TK-XID\\\">42.8.2681283</token>\",\n      \"     <token name=\\\"TK-CSN\\\">${SCN}</token>\",\n      \"   </tokens>\",\n      \" </dbupdate>\",\n      \"</transaction>\"\n   }", "var_name": "_txnPattern"}, {"original_string": "private static final String DONE_STRING =\n      \"done\\n----------------------------------------------------------------------------\\n\";", "modifier": "private static final", "type": "String", "declarator": "DONE_STRING =\n      \"done\\n----------------------------------------------------------------------------\\n\"", "var_name": "DONE_STRING"}, {"original_string": "private ArrayList<File> _dirsToDelete = new ArrayList<File>(100);", "modifier": "private", "type": "ArrayList<File>", "declarator": "_dirsToDelete = new ArrayList<File>(100)", "var_name": "_dirsToDelete"}], "file": "databus2-relay/databus2-relay-impl/src/test/java/com/linkedin/databus/core/TestTrailFilePositionSetter.java"}, "test_case": {"identifier": "testDeletedDirectory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDeletedDirectory()\n    throws Exception\n  {\n    final Logger log = Logger.getLogger(\"TestTrailFilePositionSetter.testDeletedDirectory\");\n    log.info(\"starting\");\n\n    File dir = createTempDir();\n\n    TrailFilePositionSetter posSetter = new TrailFilePositionSetter(dir.getAbsolutePath(), TRAIL_FILENAME_PREFIX);\n    GGXMLTrailTransactionFinder finder = new GGXMLTrailTransactionFinder();\n\n    // Now delete the directory to make the locateFilePosition() see null for listFiles() call.\n    boolean deleted = dir.delete();\n    Assert.assertTrue(deleted, \"Deleted the trail directory successfully\");\n\n    FilePositionResult res = posSetter.locateFilePosition(100,finder);\n    Assert.assertEquals(res.getStatus(), Status.NO_TXNS_FOUND, \"File Position Result Status\");\n\n    log.info(DONE_STRING);\n  }", "signature": "void testDeletedDirectory()", "full_signature": "@Test public void testDeletedDirectory()", "class_method_signature": "TestTrailFilePositionSetter.testDeletedDirectory()", "testcase": true, "constructor": false, "invocations": ["getLogger", "info", "createTempDir", "getAbsolutePath", "delete", "assertTrue", "locateFilePosition", "assertEquals", "getStatus", "info"]}, "focal_class": {"identifier": "TrailFilePositionSetter", "superclass": "", "interfaces": "", "fields": [{"original_string": "public Logger _log;", "modifier": "public", "type": "Logger", "declarator": "_log", "var_name": "_log"}, {"original_string": "public static final long USE_LATEST_SCN  = -1;", "modifier": "public static final", "type": "long", "declarator": "USE_LATEST_SCN  = -1", "var_name": "USE_LATEST_SCN"}, {"original_string": "public static final long USE_EARLIEST_SCN = -2;", "modifier": "public static final", "type": "long", "declarator": "USE_EARLIEST_SCN = -2", "var_name": "USE_EARLIEST_SCN"}, {"original_string": "private final File _dir;", "modifier": "private final", "type": "File", "declarator": "_dir", "var_name": "_dir"}, {"original_string": "private final String _filePrefix;", "modifier": "private final", "type": "String", "declarator": "_filePrefix", "var_name": "_filePrefix"}, {"original_string": "private final FileFilter _filter;", "modifier": "private final", "type": "FileFilter", "declarator": "_filter", "var_name": "_filter"}, {"original_string": "private String _phySourceName;", "modifier": "private", "type": "String", "declarator": "_phySourceName", "var_name": "_phySourceName"}, {"original_string": "public static final String NEW_LINE_PATTERN_STR = \"\\r?\\n|\\r\";", "modifier": "public static final", "type": "String", "declarator": "NEW_LINE_PATTERN_STR = \"\\r?\\n|\\r\"", "var_name": "NEW_LINE_PATTERN_STR"}, {"original_string": "public static final String DOUBLE_CHAR_NEWLINE = \"\\r\\n\";", "modifier": "public static final", "type": "String", "declarator": "DOUBLE_CHAR_NEWLINE = \"\\r\\n\"", "var_name": "DOUBLE_CHAR_NEWLINE"}, {"original_string": "public static final int NO_NEWLINE_LEN = -1;", "modifier": "public static final", "type": "int", "declarator": "NO_NEWLINE_LEN = -1", "var_name": "NO_NEWLINE_LEN"}], "methods": [{"identifier": "TrailFilePositionSetter", "parameters": "(String dir, String filePrefix)", "modifiers": "public", "return": "", "signature": " TrailFilePositionSetter(String dir, String filePrefix)", "full_signature": "public  TrailFilePositionSetter(String dir, String filePrefix)", "class_method_signature": "TrailFilePositionSetter.TrailFilePositionSetter(String dir, String filePrefix)", "testcase": false, "constructor": true}, {"identifier": "TrailFilePositionSetter", "parameters": "(String dir, String filePrefix, String phySourceName)", "modifiers": "public", "return": "", "signature": " TrailFilePositionSetter(String dir, String filePrefix, String phySourceName)", "full_signature": "public  TrailFilePositionSetter(String dir, String filePrefix, String phySourceName)", "class_method_signature": "TrailFilePositionSetter.TrailFilePositionSetter(String dir, String filePrefix, String phySourceName)", "testcase": false, "constructor": true}, {"identifier": "validateDir", "parameters": "(String dir)", "modifiers": "private static", "return": "void", "signature": "void validateDir(String dir)", "full_signature": "private static void validateDir(String dir)", "class_method_signature": "TrailFilePositionSetter.validateDir(String dir)", "testcase": false, "constructor": false}, {"identifier": "locateFilePosition", "parameters": "(long scn, TransactionSCNFinderCallback callback)", "modifiers": "public synchronized", "return": "FilePositionResult", "signature": "FilePositionResult locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "full_signature": "public synchronized FilePositionResult locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "class_method_signature": "TrailFilePositionSetter.locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getFilePosition", "parameters": "(long scn, TransactionSCNFinderCallback callback)", "modifiers": "protected synchronized", "return": "FilePositionResult", "signature": "FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback)", "full_signature": "protected synchronized FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback)", "class_method_signature": "TrailFilePositionSetter.getFilePosition(long scn, TransactionSCNFinderCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getFilePosition", "parameters": "(long scn, TransactionSCNFinderCallback callback, String startFile)", "modifiers": "protected synchronized", "return": "FilePositionResult", "signature": "FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback, String startFile)", "full_signature": "protected synchronized FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback, String startFile)", "class_method_signature": "TrailFilePositionSetter.getFilePosition(long scn, TransactionSCNFinderCallback callback, String startFile)", "testcase": false, "constructor": false}, {"identifier": "findTxnScn", "parameters": "(ConcurrentAppendableCompositeFileInputStream stream,\n          long expScn,\n          TransactionSCNFinderCallback callback)", "modifiers": "private", "return": "FilePositionResult", "signature": "FilePositionResult findTxnScn(ConcurrentAppendableCompositeFileInputStream stream,\n          long expScn,\n          TransactionSCNFinderCallback callback)", "full_signature": "private FilePositionResult findTxnScn(ConcurrentAppendableCompositeFileInputStream stream,\n          long expScn,\n          TransactionSCNFinderCallback callback)", "class_method_signature": "TrailFilePositionSetter.findTxnScn(ConcurrentAppendableCompositeFileInputStream stream,\n          long expScn,\n          TransactionSCNFinderCallback callback)", "testcase": false, "constructor": false}, {"identifier": "splitBytesByNewLines", "parameters": "(byte[] buf,\n                                               int numBytes,\n                                               boolean spanFile,\n                                               int endOffset,\n                                               String prevLine,\n                                               List<String> lines,\n                                               List<Integer> lineEndPos)", "modifiers": "protected static", "return": "String", "signature": "String splitBytesByNewLines(byte[] buf,\n                                               int numBytes,\n                                               boolean spanFile,\n                                               int endOffset,\n                                               String prevLine,\n                                               List<String> lines,\n                                               List<Integer> lineEndPos)", "full_signature": "protected static String splitBytesByNewLines(byte[] buf,\n                                               int numBytes,\n                                               boolean spanFile,\n                                               int endOffset,\n                                               String prevLine,\n                                               List<String> lines,\n                                               List<Integer> lineEndPos)", "class_method_signature": "TrailFilePositionSetter.splitBytesByNewLines(byte[] buf,\n                                               int numBytes,\n                                               boolean spanFile,\n                                               int endOffset,\n                                               String prevLine,\n                                               List<String> lines,\n                                               List<Integer> lineEndPos)", "testcase": false, "constructor": false}], "file": "databus2-relay/databus2-relay-impl/src/main/java/com/linkedin/databus/core/TrailFilePositionSetter.java"}, "focal_method": {"identifier": "locateFilePosition", "parameters": "(long scn, TransactionSCNFinderCallback callback)", "modifiers": "public synchronized", "return": "FilePositionResult", "body": "public synchronized FilePositionResult locateFilePosition(long scn, TransactionSCNFinderCallback callback)\n      throws IOException\n  {\n    TrailFileNotifier notifier = new TrailFileNotifier(_dir, _filter, null, 0, null);\n    List<File> orderedTrailFiles = notifier.getCandidateTrailFiles();\n\n    _log.info(\"Initial set of Trail Files :\" + orderedTrailFiles);\n\n    if ( (null == orderedTrailFiles) || orderedTrailFiles.isEmpty())\n    {\n      return FilePositionResult.createNoTxnsFoundResult();\n    }\n\n    FilePositionResult res = null;\n\n    if ( scn == USE_EARLIEST_SCN)\n    {\n      res = getFilePosition(scn, callback);\n    } else {\n      for (int i = orderedTrailFiles.size() - 1; i >= 0; i--)\n      {\n        callback.reset();\n\n        File startFile = orderedTrailFiles.get(i);\n        _log.info(\"Locating the SCN (\" + scn + \") starting from the trail file :\" + startFile);\n        res = getFilePosition(scn, callback,startFile.getName());\n\n        _log.info(\"Result of the location operation for SCN (\" + scn + \") starting from trail file (\" + startFile + \") is : \" + res);\n\n        // If this is the first txn scanned, we need to go to previous file\n        if (((res.getStatus() == Status.EXACT_SCN_NOT_FOUND) || (res.getStatus() == Status.FOUND))\n            && (res.getTxnPos().getTxnRank() > 0)) // TxnRank will be 0 if this is the\n                                                   // first txn scanned\n        {\n          break;\n        }\n\n        if ((0 == i) && (res != null))\n        {\n          ScnTxnPos scnTxnPos = res.getTxnPos();\n          if ( (scnTxnPos != null) && (scnTxnPos.getTxnRank() <= 0))\n          {\n            return FilePositionResult.createErrorResult(new DatabusException(\"A transaction with scn less than requested SCN was not found. \"\n              + \"Without this txn, we cannot identify if all transactions for requested SCN \"\n              + \"have been located. Requested SinceSCN is :\" + scn));\n          }\n        }\n      }\n    }\n    return res;\n  }", "signature": "FilePositionResult locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "full_signature": "public synchronized FilePositionResult locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "class_method_signature": "TrailFilePositionSetter.locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "testcase": false, "constructor": false, "invocations": ["getCandidateTrailFiles", "info", "isEmpty", "createNoTxnsFoundResult", "getFilePosition", "size", "reset", "get", "info", "getFilePosition", "getName", "info", "getStatus", "getStatus", "getTxnRank", "getTxnPos", "getTxnPos", "getTxnRank", "createErrorResult"]}, "repository": {"repo_id": 7209229, "url": "https://github.com/linkedin/databus", "language": "Java", "is_fork": false, "fork_count": 653, "stargazer_count": 2899, "size": 51191, "license": "licensed"}}