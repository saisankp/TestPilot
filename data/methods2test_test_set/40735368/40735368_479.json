{"test_class": {"identifier": "WFSClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "WFSConfig config;", "modifier": "", "type": "WFSConfig", "declarator": "config", "var_name": "config"}], "file": "modules/unsupported/wfs-ng/src/test/java/org/geotools/data/wfs/internal/WFSClientTest.java"}, "test_case": {"identifier": "testGetInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInfo() throws Exception {\n        WFSClient client = newClient(\"GeoServer_1.7.x/1.1.0/GetCapabilities.xml\");\n        WFSServiceInfo info = client.getInfo();\n        assertEquals(\"My GeoServer WFS\", info.getTitle());\n        assertEquals(\"1.1.0\", info.getVersion());\n        assertEquals(3, info.getKeywords().size());\n        assertTrue(info.getKeywords().contains(\"GEOSERVER\"));\n        assertTrue(info.getKeywords().contains(\"WFS\"));\n        assertTrue(info.getKeywords().contains(\"WMS\"));\n        assertEquals(\"http://schemas.opengis.net/wfs/1.0.0/WFS-transaction.xsd\", info.getSchema().toString());\n        assertEquals(\"http://localhost:8080/geoserver/wfs?\", info.getSource().toString());\n        assertEquals(\"\\n\\t\\t\\tThis is a description of your Web Feature Server.\" +\n                \"\\n\\n\\t\\t\\tThe GeoServer is a full transactional Web Feature Server, you may wish to limit GeoServer to a Basic service\" +\n        \t\"\\n\\t\\t\\tlevel to prevent modificaiton of your geographic data.\" +\n                \"\\n\\t\\t\", info.getDescription());\n    }", "signature": "void testGetInfo()", "full_signature": "@Test public void testGetInfo()", "class_method_signature": "WFSClientTest.testGetInfo()", "testcase": true, "constructor": false, "invocations": ["newClient", "getInfo", "assertEquals", "getTitle", "assertEquals", "getVersion", "assertEquals", "size", "getKeywords", "assertTrue", "contains", "getKeywords", "assertTrue", "contains", "getKeywords", "assertTrue", "contains", "getKeywords", "assertEquals", "toString", "getSchema", "assertEquals", "toString", "getSource", "assertEquals", "getDescription"]}, "focal_class": {"identifier": "WFSClient", "superclass": "extends AbstractOpenWebService<WFSGetCapabilities, QName>", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logging.getLogger(WFSClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logging.getLogger(WFSClient.class)", "var_name": "LOGGER"}, {"original_string": "protected final WFSConfig config;", "modifier": "protected final", "type": "WFSConfig", "declarator": "config", "var_name": "config"}], "methods": [{"identifier": "WFSClient", "parameters": "(URL capabilitiesURL, HTTPClient httpClient, WFSConfig config)", "modifiers": "public", "return": "", "signature": " WFSClient(URL capabilitiesURL, HTTPClient httpClient, WFSConfig config)", "full_signature": "public  WFSClient(URL capabilitiesURL, HTTPClient httpClient, WFSConfig config)", "class_method_signature": "WFSClient.WFSClient(URL capabilitiesURL, HTTPClient httpClient, WFSConfig config)", "testcase": false, "constructor": true}, {"identifier": "WFSClient", "parameters": "(URL capabilitiesURL, HTTPClient httpClient, WFSConfig config,\n            WFSGetCapabilities capabilities)", "modifiers": "public", "return": "", "signature": " WFSClient(URL capabilitiesURL, HTTPClient httpClient, WFSConfig config,\n            WFSGetCapabilities capabilities)", "full_signature": "public  WFSClient(URL capabilitiesURL, HTTPClient httpClient, WFSConfig config,\n            WFSGetCapabilities capabilities)", "class_method_signature": "WFSClient.WFSClient(URL capabilitiesURL, HTTPClient httpClient, WFSConfig config,\n            WFSGetCapabilities capabilities)", "testcase": false, "constructor": true}, {"identifier": "getStrategy", "parameters": "()", "modifiers": "protected", "return": "WFSStrategy", "signature": "WFSStrategy getStrategy()", "full_signature": "protected WFSStrategy getStrategy()", "class_method_signature": "WFSClient.getStrategy()", "testcase": false, "constructor": false}, {"identifier": "getCapabilities", "parameters": "()", "modifiers": "@Override public", "return": "WFSGetCapabilities", "signature": "WFSGetCapabilities getCapabilities()", "full_signature": "@Override public WFSGetCapabilities getCapabilities()", "class_method_signature": "WFSClient.getCapabilities()", "testcase": false, "constructor": false}, {"identifier": "getInfo", "parameters": "()", "modifiers": "@Override public", "return": "WFSServiceInfo", "signature": "WFSServiceInfo getInfo()", "full_signature": "@Override public WFSServiceInfo getInfo()", "class_method_signature": "WFSClient.getInfo()", "testcase": false, "constructor": false}, {"identifier": "createInfo", "parameters": "()", "modifiers": "@Override protected", "return": "WFSServiceInfo", "signature": "WFSServiceInfo createInfo()", "full_signature": "@Override protected WFSServiceInfo createInfo()", "class_method_signature": "WFSClient.createInfo()", "testcase": false, "constructor": false}, {"identifier": "createInfo", "parameters": "(QName typeName)", "modifiers": "@Override protected", "return": "FeatureTypeInfo", "signature": "FeatureTypeInfo createInfo(QName typeName)", "full_signature": "@Override protected FeatureTypeInfo createInfo(QName typeName)", "class_method_signature": "WFSClient.createInfo(QName typeName)", "testcase": false, "constructor": false}, {"identifier": "setupSpecifications", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void setupSpecifications()", "full_signature": "@Override protected void setupSpecifications()", "class_method_signature": "WFSClient.setupSpecifications()", "testcase": false, "constructor": false}, {"identifier": "determineCorrectStrategy", "parameters": "()", "modifiers": "private", "return": "WFSStrategy", "signature": "WFSStrategy determineCorrectStrategy()", "full_signature": "private WFSStrategy determineCorrectStrategy()", "class_method_signature": "WFSClient.determineCorrectStrategy()", "testcase": false, "constructor": false}, {"identifier": "getRemoteTypeNames", "parameters": "()", "modifiers": "public", "return": "Set<QName>", "signature": "Set<QName> getRemoteTypeNames()", "full_signature": "public Set<QName> getRemoteTypeNames()", "class_method_signature": "WFSClient.getRemoteTypeNames()", "testcase": false, "constructor": false}, {"identifier": "supportsTransaction", "parameters": "(QName typeName)", "modifiers": "public", "return": "boolean", "signature": "boolean supportsTransaction(QName typeName)", "full_signature": "public boolean supportsTransaction(QName typeName)", "class_method_signature": "WFSClient.supportsTransaction(QName typeName)", "testcase": false, "constructor": false}, {"identifier": "canLimit", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canLimit()", "full_signature": "public boolean canLimit()", "class_method_signature": "WFSClient.canLimit()", "testcase": false, "constructor": false}, {"identifier": "canFilter", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canFilter()", "full_signature": "public boolean canFilter()", "class_method_signature": "WFSClient.canFilter()", "testcase": false, "constructor": false}, {"identifier": "canRetype", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canRetype()", "full_signature": "public boolean canRetype()", "class_method_signature": "WFSClient.canRetype()", "testcase": false, "constructor": false}, {"identifier": "canSort", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canSort()", "full_signature": "public boolean canSort()", "class_method_signature": "WFSClient.canSort()", "testcase": false, "constructor": false}, {"identifier": "supportsStoredQueries", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean supportsStoredQueries()", "full_signature": "public boolean supportsStoredQueries()", "class_method_signature": "WFSClient.supportsStoredQueries()", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "(QName typeName, CoordinateReferenceSystem targetCrs)", "modifiers": "public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getBounds(QName typeName, CoordinateReferenceSystem targetCrs)", "full_signature": "public ReferencedEnvelope getBounds(QName typeName, CoordinateReferenceSystem targetCrs)", "class_method_signature": "WFSClient.getBounds(QName typeName, CoordinateReferenceSystem targetCrs)", "testcase": false, "constructor": false}, {"identifier": "canCount", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canCount()", "full_signature": "public boolean canCount()", "class_method_signature": "WFSClient.canCount()", "testcase": false, "constructor": false}, {"identifier": "createGetFeatureRequest", "parameters": "()", "modifiers": "public", "return": "GetFeatureRequest", "signature": "GetFeatureRequest createGetFeatureRequest()", "full_signature": "public GetFeatureRequest createGetFeatureRequest()", "class_method_signature": "WFSClient.createGetFeatureRequest()", "testcase": false, "constructor": false}, {"identifier": "internalIssueRequest", "parameters": "(Request request)", "modifiers": "@Override protected", "return": "Response", "signature": "Response internalIssueRequest(Request request)", "full_signature": "@Override protected Response internalIssueRequest(Request request)", "class_method_signature": "WFSClient.internalIssueRequest(Request request)", "testcase": false, "constructor": false}, {"identifier": "issueRequest", "parameters": "(GetCapabilitiesRequest request)", "modifiers": "@Override public", "return": "GetCapabilitiesResponse", "signature": "GetCapabilitiesResponse issueRequest(GetCapabilitiesRequest request)", "full_signature": "@Override public GetCapabilitiesResponse issueRequest(GetCapabilitiesRequest request)", "class_method_signature": "WFSClient.issueRequest(GetCapabilitiesRequest request)", "testcase": false, "constructor": false}, {"identifier": "issueRequest", "parameters": "(ListStoredQueriesRequest request)", "modifiers": "public", "return": "ListStoredQueriesResponse", "signature": "ListStoredQueriesResponse issueRequest(ListStoredQueriesRequest request)", "full_signature": "public ListStoredQueriesResponse issueRequest(ListStoredQueriesRequest request)", "class_method_signature": "WFSClient.issueRequest(ListStoredQueriesRequest request)", "testcase": false, "constructor": false}, {"identifier": "issueRequest", "parameters": "(DescribeStoredQueriesRequest request)", "modifiers": "public", "return": "DescribeStoredQueriesResponse", "signature": "DescribeStoredQueriesResponse issueRequest(DescribeStoredQueriesRequest request)", "full_signature": "public DescribeStoredQueriesResponse issueRequest(DescribeStoredQueriesRequest request)", "class_method_signature": "WFSClient.issueRequest(DescribeStoredQueriesRequest request)", "testcase": false, "constructor": false}, {"identifier": "createTransaction", "parameters": "()", "modifiers": "public", "return": "TransactionRequest", "signature": "TransactionRequest createTransaction()", "full_signature": "public TransactionRequest createTransaction()", "class_method_signature": "WFSClient.createTransaction()", "testcase": false, "constructor": false}, {"identifier": "issueTransaction", "parameters": "(TransactionRequest request)", "modifiers": "public", "return": "TransactionResponse", "signature": "TransactionResponse issueTransaction(TransactionRequest request)", "full_signature": "public TransactionResponse issueTransaction(TransactionRequest request)", "class_method_signature": "WFSClient.issueTransaction(TransactionRequest request)", "testcase": false, "constructor": false}, {"identifier": "issueRequest", "parameters": "(GetFeatureRequest request)", "modifiers": "public", "return": "GetFeatureResponse", "signature": "GetFeatureResponse issueRequest(GetFeatureRequest request)", "full_signature": "public GetFeatureResponse issueRequest(GetFeatureRequest request)", "class_method_signature": "WFSClient.issueRequest(GetFeatureRequest request)", "testcase": false, "constructor": false}, {"identifier": "createDescribeFeatureTypeRequest", "parameters": "()", "modifiers": "public", "return": "DescribeFeatureTypeRequest", "signature": "DescribeFeatureTypeRequest createDescribeFeatureTypeRequest()", "full_signature": "public DescribeFeatureTypeRequest createDescribeFeatureTypeRequest()", "class_method_signature": "WFSClient.createDescribeFeatureTypeRequest()", "testcase": false, "constructor": false}, {"identifier": "createListStoredQueriesRequest", "parameters": "()", "modifiers": "public", "return": "ListStoredQueriesRequest", "signature": "ListStoredQueriesRequest createListStoredQueriesRequest()", "full_signature": "public ListStoredQueriesRequest createListStoredQueriesRequest()", "class_method_signature": "WFSClient.createListStoredQueriesRequest()", "testcase": false, "constructor": false}, {"identifier": "createDescribeStoredQueriesRequest", "parameters": "()", "modifiers": "public", "return": "DescribeStoredQueriesRequest", "signature": "DescribeStoredQueriesRequest createDescribeStoredQueriesRequest()", "full_signature": "public DescribeStoredQueriesRequest createDescribeStoredQueriesRequest()", "class_method_signature": "WFSClient.createDescribeStoredQueriesRequest()", "testcase": false, "constructor": false}, {"identifier": "issueRequest", "parameters": "(DescribeFeatureTypeRequest request)", "modifiers": "public", "return": "DescribeFeatureTypeResponse", "signature": "DescribeFeatureTypeResponse issueRequest(DescribeFeatureTypeRequest request)", "full_signature": "public DescribeFeatureTypeResponse issueRequest(DescribeFeatureTypeRequest request)", "class_method_signature": "WFSClient.issueRequest(DescribeFeatureTypeRequest request)", "testcase": false, "constructor": false}, {"identifier": "splitFilters", "parameters": "(QName typeName, Filter filter)", "modifiers": "public", "return": "Filter[]", "signature": "Filter[] splitFilters(QName typeName, Filter filter)", "full_signature": "public Filter[] splitFilters(QName typeName, Filter filter)", "class_method_signature": "WFSClient.splitFilters(QName typeName, Filter filter)", "testcase": false, "constructor": false}, {"identifier": "getDefaultCRS", "parameters": "(QName typeName)", "modifiers": "public", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getDefaultCRS(QName typeName)", "full_signature": "public CoordinateReferenceSystem getDefaultCRS(QName typeName)", "class_method_signature": "WFSClient.getDefaultCRS(QName typeName)", "testcase": false, "constructor": false}, {"identifier": "getAxisOrderFilter", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAxisOrderFilter()", "full_signature": "public String getAxisOrderFilter()", "class_method_signature": "WFSClient.getAxisOrderFilter()", "testcase": false, "constructor": false}], "file": "modules/unsupported/wfs-ng/src/main/java/org/geotools/data/wfs/internal/WFSClient.java"}, "focal_method": {"identifier": "getInfo", "parameters": "()", "modifiers": "@Override public", "return": "WFSServiceInfo", "body": "@Override\n    public WFSServiceInfo getInfo() {\n        return (WFSServiceInfo) super.getInfo();\n    }", "signature": "WFSServiceInfo getInfo()", "full_signature": "@Override public WFSServiceInfo getInfo()", "class_method_signature": "WFSClient.getInfo()", "testcase": false, "constructor": false, "invocations": ["getInfo"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}