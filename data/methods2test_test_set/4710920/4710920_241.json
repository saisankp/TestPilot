{"test_class": {"identifier": "SpringCloudMetadataServiceURLBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SpringCloudMetadataServiceURLBuilder builder = new SpringCloudMetadataServiceURLBuilder();", "modifier": "private", "type": "SpringCloudMetadataServiceURLBuilder", "declarator": "builder = new SpringCloudMetadataServiceURLBuilder()", "var_name": "builder"}], "file": "dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/metadata/SpringCloudMetadataServiceURLBuilderTest.java"}, "test_case": {"identifier": "testBuild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuild() {\n        List<URL> urls = builder.build(new DefaultServiceInstance(\"127.0.0.1\", \"test\", 8080));\n        assertEquals(0, urls.size());\n\n        urls = builder.build(serviceInstance);\n        assertEquals(1, urls.size());\n        URL url = urls.get(0);\n        assertEquals(\"192.168.0.102\", url.getHost());\n        assertEquals(20881, url.getPort());\n        assertEquals(\"com.alibaba.cloud.dubbo.service.DubboMetadataService\", url.getServiceInterface());\n    }", "signature": "void testBuild()", "full_signature": "@Test public void testBuild()", "class_method_signature": "SpringCloudMetadataServiceURLBuilderTest.testBuild()", "testcase": true, "constructor": false, "invocations": ["build", "assertEquals", "size", "build", "assertEquals", "size", "get", "assertEquals", "getHost", "assertEquals", "getPort", "assertEquals", "getServiceInterface"]}, "focal_class": {"identifier": "SpringCloudMetadataServiceURLBuilder", "superclass": "", "interfaces": "implements MetadataServiceURLBuilder", "fields": [{"original_string": "public static final String NAME = \"spring-cloud\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"spring-cloud\"", "var_name": "NAME"}], "methods": [{"identifier": "build", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public", "return": "List<URL>", "signature": "List<URL> build(ServiceInstance serviceInstance)", "full_signature": "@Override public List<URL> build(ServiceInstance serviceInstance)", "class_method_signature": "SpringCloudMetadataServiceURLBuilder.build(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}], "file": "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/client/metadata/SpringCloudMetadataServiceURLBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public", "return": "List<URL>", "body": "@Override\n    public List<URL> build(ServiceInstance serviceInstance) {\n        Map<String, String> metadata = serviceInstance.getMetadata();\n        String dubboURLsJSON = metadata.get(METADATA_SERVICE_URLS_PROPERTY_NAME);\n        if (StringUtils.isBlank(dubboURLsJSON)) {\n            return Collections.emptyList();\n        }\n        List<String> urlStrings = JSON.parseArray(dubboURLsJSON, String.class);\n        return urlStrings.stream().map(URL::valueOf).collect(Collectors.toList());\n    }", "signature": "List<URL> build(ServiceInstance serviceInstance)", "full_signature": "@Override public List<URL> build(ServiceInstance serviceInstance)", "class_method_signature": "SpringCloudMetadataServiceURLBuilder.build(ServiceInstance serviceInstance)", "testcase": false, "constructor": false, "invocations": ["getMetadata", "get", "isBlank", "emptyList", "parseArray", "collect", "map", "stream", "toList"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}