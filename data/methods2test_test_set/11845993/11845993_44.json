{"test_class": {"identifier": "ElasticsearchIncidentRepositoryTest", "superclass": "extends AbstractElasticsearchTest", "interfaces": "", "fields": [{"original_string": "private ElasticsearchIncidentRepository elasticsearchIncidentRepository;", "modifier": "private", "type": "ElasticsearchIncidentRepository", "declarator": "elasticsearchIncidentRepository", "var_name": "elasticsearchIncidentRepository"}], "file": "stagemonitor-alerting/src/test/java/org/stagemonitor/alerting/incident/ElasticsearchIncidentRepositoryTest.java"}, "test_case": {"identifier": "testGetNonExistingIncindent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetNonExistingIncindent() throws Exception {\n\t\tassertThat(elasticsearchIncidentRepository.getIncidentByCheckId(\"test 1\")).isNull();\n\t}", "signature": "void testGetNonExistingIncindent()", "full_signature": "@Test public void testGetNonExistingIncindent()", "class_method_signature": "ElasticsearchIncidentRepositoryTest.testGetNonExistingIncindent()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "getIncidentByCheckId"]}, "focal_class": {"identifier": "ElasticsearchIncidentRepository", "superclass": "", "interfaces": "implements IncidentRepository", "fields": [{"original_string": "public static final String BASE_URL = \"/stagemonitor/incidents\";", "modifier": "public static final", "type": "String", "declarator": "BASE_URL = \"/stagemonitor/incidents\"", "var_name": "BASE_URL"}, {"original_string": "private ElasticsearchClient elasticsearchClient;", "modifier": "private", "type": "ElasticsearchClient", "declarator": "elasticsearchClient", "var_name": "elasticsearchClient"}], "methods": [{"identifier": "ElasticsearchIncidentRepository", "parameters": "(ElasticsearchClient elasticsearchClient)", "modifiers": "public", "return": "", "signature": " ElasticsearchIncidentRepository(ElasticsearchClient elasticsearchClient)", "full_signature": "public  ElasticsearchIncidentRepository(ElasticsearchClient elasticsearchClient)", "class_method_signature": "ElasticsearchIncidentRepository.ElasticsearchIncidentRepository(ElasticsearchClient elasticsearchClient)", "testcase": false, "constructor": true}, {"identifier": "getAllIncidents", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Incident>", "signature": "Collection<Incident> getAllIncidents()", "full_signature": "@Override public Collection<Incident> getAllIncidents()", "class_method_signature": "ElasticsearchIncidentRepository.getAllIncidents()", "testcase": false, "constructor": false}, {"identifier": "getIncidentByCheckId", "parameters": "(String checkId)", "modifiers": "@Override public", "return": "Incident", "signature": "Incident getIncidentByCheckId(String checkId)", "full_signature": "@Override public Incident getIncidentByCheckId(String checkId)", "class_method_signature": "ElasticsearchIncidentRepository.getIncidentByCheckId(String checkId)", "testcase": false, "constructor": false}, {"identifier": "deleteIncident", "parameters": "(Incident incident)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteIncident(Incident incident)", "full_signature": "@Override public boolean deleteIncident(Incident incident)", "class_method_signature": "ElasticsearchIncidentRepository.deleteIncident(Incident incident)", "testcase": false, "constructor": false}, {"identifier": "getEsId", "parameters": "(Incident incident)", "modifiers": "private", "return": "String", "signature": "String getEsId(Incident incident)", "full_signature": "private String getEsId(Incident incident)", "class_method_signature": "ElasticsearchIncidentRepository.getEsId(Incident incident)", "testcase": false, "constructor": false}, {"identifier": "getEsId", "parameters": "(String checkId)", "modifiers": "private", "return": "String", "signature": "String getEsId(String checkId)", "full_signature": "private String getEsId(String checkId)", "class_method_signature": "ElasticsearchIncidentRepository.getEsId(String checkId)", "testcase": false, "constructor": false}, {"identifier": "createIncident", "parameters": "(Incident incident)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean createIncident(Incident incident)", "full_signature": "@Override public boolean createIncident(Incident incident)", "class_method_signature": "ElasticsearchIncidentRepository.createIncident(Incident incident)", "testcase": false, "constructor": false}, {"identifier": "updateIncident", "parameters": "(Incident incident)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateIncident(Incident incident)", "full_signature": "@Override public boolean updateIncident(Incident incident)", "class_method_signature": "ElasticsearchIncidentRepository.updateIncident(Incident incident)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "ElasticsearchIncidentRepository.clear()", "testcase": false, "constructor": false}, {"identifier": "getVersionParameter", "parameters": "(Incident incident)", "modifiers": "private", "return": "String", "signature": "String getVersionParameter(Incident incident)", "full_signature": "private String getVersionParameter(Incident incident)", "class_method_signature": "ElasticsearchIncidentRepository.getVersionParameter(Incident incident)", "testcase": false, "constructor": false}, {"identifier": "hasNoConflict", "parameters": "(int statusCode)", "modifiers": "private", "return": "boolean", "signature": "boolean hasNoConflict(int statusCode)", "full_signature": "private boolean hasNoConflict(int statusCode)", "class_method_signature": "ElasticsearchIncidentRepository.hasNoConflict(int statusCode)", "testcase": false, "constructor": false}, {"identifier": "setElasticsearchClient", "parameters": "(ElasticsearchClient elasticsearchClient)", "modifiers": "", "return": "void", "signature": "void setElasticsearchClient(ElasticsearchClient elasticsearchClient)", "full_signature": " void setElasticsearchClient(ElasticsearchClient elasticsearchClient)", "class_method_signature": "ElasticsearchIncidentRepository.setElasticsearchClient(ElasticsearchClient elasticsearchClient)", "testcase": false, "constructor": false}], "file": "stagemonitor-alerting/src/main/java/org/stagemonitor/alerting/incident/ElasticsearchIncidentRepository.java"}, "focal_method": {"identifier": "getIncidentByCheckId", "parameters": "(String checkId)", "modifiers": "@Override public", "return": "Incident", "body": "@Override\n\tpublic Incident getIncidentByCheckId(String checkId) {\n\t\treturn elasticsearchClient.getObject(BASE_URL + \"/\" + getEsId(checkId), Incident.class);\n\t}", "signature": "Incident getIncidentByCheckId(String checkId)", "full_signature": "@Override public Incident getIncidentByCheckId(String checkId)", "class_method_signature": "ElasticsearchIncidentRepository.getIncidentByCheckId(String checkId)", "testcase": false, "constructor": false, "invocations": ["getObject", "getEsId"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}