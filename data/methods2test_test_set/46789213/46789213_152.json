{"test_class": {"identifier": "TestByteAndBitConverter", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/framework/util/TestByteAndBitConverter.java"}, "test_case": {"identifier": "testIntToBitSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testIntToBitSet() {\n    BitSet x = ByteAndBitConverter.intToBitSet(5);\n    BitSet expectedX = new BitSet(Integer.SIZE);\n    expectedX.set(0);\n    expectedX.set(2);\n    Assert.assertEquals(expectedX, x);\n    BitSet y = ByteAndBitConverter.intToBitSet(0);\n    BitSet expectedY = new BitSet(Integer.SIZE);\n    Assert.assertEquals(expectedY, y);\n    BitSet z = ByteAndBitConverter.intToBitSet(-9);\n    BitSet expectedZ = new BitSet(Integer.SIZE);\n    expectedZ.set(3);\n    expectedZ.flip(0, Integer.SIZE);\n    Assert.assertEquals(expectedZ, z);\n  }", "signature": "void testIntToBitSet()", "full_signature": "@Test public void testIntToBitSet()", "class_method_signature": "TestByteAndBitConverter.testIntToBitSet()", "testcase": true, "constructor": false, "invocations": ["intToBitSet", "set", "set", "assertEquals", "intToBitSet", "assertEquals", "intToBitSet", "set", "flip", "assertEquals"]}, "focal_class": {"identifier": "ByteAndBitConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ByteAndBitConverter", "parameters": "()", "modifiers": "private", "return": "", "signature": " ByteAndBitConverter()", "full_signature": "private  ByteAndBitConverter()", "class_method_signature": "ByteAndBitConverter.ByteAndBitConverter()", "testcase": false, "constructor": true}, {"identifier": "toByteArray", "parameters": "(long value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(long value)", "full_signature": "public static byte[] toByteArray(long value)", "class_method_signature": "ByteAndBitConverter.toByteArray(long value)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(int value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(int value)", "full_signature": "public static byte[] toByteArray(int value)", "class_method_signature": "ByteAndBitConverter.toByteArray(int value)", "testcase": false, "constructor": false}, {"identifier": "intToBitSet", "parameters": "(int i)", "modifiers": "public static", "return": "BitSet", "signature": "BitSet intToBitSet(int i)", "full_signature": "public static BitSet intToBitSet(int i)", "class_method_signature": "ByteAndBitConverter.intToBitSet(int i)", "testcase": false, "constructor": false}, {"identifier": "toBoolean", "parameters": "(String hex)", "modifiers": "public static", "return": "Boolean[]", "signature": "Boolean[] toBoolean(String hex)", "full_signature": "public static Boolean[] toBoolean(String hex)", "class_method_signature": "ByteAndBitConverter.toBoolean(String hex)", "testcase": false, "constructor": false}, {"identifier": "toHex", "parameters": "(boolean[] bits)", "modifiers": "public static", "return": "String", "signature": "String toHex(boolean[] bits)", "full_signature": "public static String toHex(boolean[] bits)", "class_method_signature": "ByteAndBitConverter.toHex(boolean[] bits)", "testcase": false, "constructor": false}, {"identifier": "toHex", "parameters": "(List<Boolean> bits)", "modifiers": "public static", "return": "String", "signature": "String toHex(List<Boolean> bits)", "full_signature": "public static String toHex(List<Boolean> bits)", "class_method_signature": "ByteAndBitConverter.toHex(List<Boolean> bits)", "testcase": false, "constructor": false}, {"identifier": "convertArray", "parameters": "(Boolean[] in)", "modifiers": "private static", "return": "boolean[]", "signature": "boolean[] convertArray(Boolean[] in)", "full_signature": "private static boolean[] convertArray(Boolean[] in)", "class_method_signature": "ByteAndBitConverter.convertArray(Boolean[] in)", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/framework/util/ByteAndBitConverter.java"}, "focal_method": {"identifier": "intToBitSet", "parameters": "(int i)", "modifiers": "public static", "return": "BitSet", "body": "public static BitSet intToBitSet(int i) {\n    BitSet bs = new BitSet(Integer.SIZE);\n    for (int k = 0; k < Integer.SIZE; k++) {\n      if ((i & (1 << k)) != 0) {\n        bs.set(k);\n      }\n    }\n    return bs;\n  }", "signature": "BitSet intToBitSet(int i)", "full_signature": "public static BitSet intToBitSet(int i)", "class_method_signature": "ByteAndBitConverter.intToBitSet(int i)", "testcase": false, "constructor": false, "invocations": ["set"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}