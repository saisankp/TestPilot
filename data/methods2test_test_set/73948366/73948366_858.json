{"test_class": {"identifier": "SelfCertSignerTest", "superclass": "", "interfaces": "", "fields": [], "file": "servers/zts/src/test/java/com/yahoo/athenz/zts/cert/impl/SelfCertSignerTest.java"}, "test_case": {"identifier": "testSelfCertSignerFactory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSelfCertSignerFactory() {\n        SelfCertSignerFactory certFactory = new SelfCertSignerFactory();\n        assertNotNull(certFactory);\n\n        CertSigner certSigner = certFactory.create();\n        assertNotNull(certSigner);\n\n        certSigner.close();\n    }", "signature": "void testSelfCertSignerFactory()", "full_signature": "@Test public void testSelfCertSignerFactory()", "class_method_signature": "SelfCertSignerTest.testSelfCertSignerFactory()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "create", "assertNotNull", "close"]}, "focal_class": {"identifier": "SelfCertSigner", "superclass": "", "interfaces": "implements CertSigner", "fields": [{"original_string": "private X509Certificate caCertificate;", "modifier": "private", "type": "X509Certificate", "declarator": "caCertificate", "var_name": "caCertificate"}, {"original_string": "private PrivateKey caPrivateKey;", "modifier": "private", "type": "PrivateKey", "declarator": "caPrivateKey", "var_name": "caPrivateKey"}, {"original_string": "private int maxCertExpiryTimeMins;", "modifier": "private", "type": "int", "declarator": "maxCertExpiryTimeMins", "var_name": "maxCertExpiryTimeMins"}], "methods": [{"identifier": "SelfCertSigner", "parameters": "(PrivateKey caPrivateKey, X509Certificate caCertificate)", "modifiers": "public", "return": "", "signature": " SelfCertSigner(PrivateKey caPrivateKey, X509Certificate caCertificate)", "full_signature": "public  SelfCertSigner(PrivateKey caPrivateKey, X509Certificate caCertificate)", "class_method_signature": "SelfCertSigner.SelfCertSigner(PrivateKey caPrivateKey, X509Certificate caCertificate)", "testcase": false, "constructor": true}, {"identifier": "generateX509Certificate", "parameters": "(String csr, String keyUsage, int expiryTime)", "modifiers": "@Override public", "return": "String", "signature": "String generateX509Certificate(String csr, String keyUsage, int expiryTime)", "full_signature": "@Override public String generateX509Certificate(String csr, String keyUsage, int expiryTime)", "class_method_signature": "SelfCertSigner.generateX509Certificate(String csr, String keyUsage, int expiryTime)", "testcase": false, "constructor": false}, {"identifier": "getCACertificate", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCACertificate()", "full_signature": "@Override public String getCACertificate()", "class_method_signature": "SelfCertSigner.getCACertificate()", "testcase": false, "constructor": false}, {"identifier": "getMaxCertExpiryTimeMins", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxCertExpiryTimeMins()", "full_signature": "@Override public int getMaxCertExpiryTimeMins()", "class_method_signature": "SelfCertSigner.getMaxCertExpiryTimeMins()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "SelfCertSigner.close()", "testcase": false, "constructor": false}], "file": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/SelfCertSigner.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void close() {\n    }", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "SelfCertSigner.close()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}