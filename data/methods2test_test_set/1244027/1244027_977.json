{"test_class": {"identifier": "FullTextSearchParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FullTextSearchParser parser;", "modifier": "private", "type": "FullTextSearchParser", "declarator": "parser", "var_name": "parser"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/query/parse/FullTextSearchParserTest.java"}, "test_case": {"identifier": "shouldParseStringWithSqlStyleWildcardCharactersInSingleQuotedTerm", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldParseStringWithSqlStyleWildcardCharactersInSingleQuotedTerm() {\n        Term result = parser.parse(\"'term% term_ %term_'\");\n        assertSimpleTerm(result, \"term% term_ %term_\", false, true);\n    }", "signature": "void shouldParseStringWithSqlStyleWildcardCharactersInSingleQuotedTerm()", "full_signature": "@Test public void shouldParseStringWithSqlStyleWildcardCharactersInSingleQuotedTerm()", "class_method_signature": "FullTextSearchParserTest.shouldParseStringWithSqlStyleWildcardCharactersInSingleQuotedTerm()", "testcase": true, "constructor": false, "invocations": ["parse", "assertSimpleTerm"]}, "focal_class": {"identifier": "FullTextSearchParser", "superclass": "", "interfaces": "implements QueryParser", "fields": [{"original_string": "public static final String LANGUAGE = Query.FULL_TEXT_SEARCH;", "modifier": "public static final", "type": "String", "declarator": "LANGUAGE = Query.FULL_TEXT_SEARCH", "var_name": "LANGUAGE"}, {"original_string": "private static Selector FULL_TEXT_SOURCE = new AllNodes();", "modifier": "private static", "type": "Selector", "declarator": "FULL_TEXT_SOURCE = new AllNodes()", "var_name": "FULL_TEXT_SOURCE"}, {"original_string": "private static SelectorName FULL_TEXT_SELECTOR_NAME = FULL_TEXT_SOURCE.name();", "modifier": "private static", "type": "SelectorName", "declarator": "FULL_TEXT_SELECTOR_NAME = FULL_TEXT_SOURCE.name()", "var_name": "FULL_TEXT_SELECTOR_NAME"}, {"original_string": "private static String SCORE_COLUMN_NAME = \"jcr:score\";", "modifier": "private static", "type": "String", "declarator": "SCORE_COLUMN_NAME = \"jcr:score\"", "var_name": "SCORE_COLUMN_NAME"}, {"original_string": "protected static List<? extends Column> FULL_TEXT_COLUMNS = Collections.singletonList(new Column(FULL_TEXT_SELECTOR_NAME,\n                                                                                                     SCORE_COLUMN_NAME,\n                                                                                                     SCORE_COLUMN_NAME));", "modifier": "protected static", "type": "List<? extends Column>", "declarator": "FULL_TEXT_COLUMNS = Collections.singletonList(new Column(FULL_TEXT_SELECTOR_NAME,\n                                                                                                     SCORE_COLUMN_NAME,\n                                                                                                     SCORE_COLUMN_NAME))", "var_name": "FULL_TEXT_COLUMNS"}, {"original_string": "private static List<? extends Ordering> FULL_TEXT_ORDERING = Collections.singletonList(new Ordering(\n                                                                                                        new PropertyValue(\n                                                                                                                          FULL_TEXT_SELECTOR_NAME,\n                                                                                                                          SCORE_COLUMN_NAME),\n                                                                                                        Order.DESCENDING,\n                                                                                                        NullOrder.NULLS_LAST));", "modifier": "private static", "type": "List<? extends Ordering>", "declarator": "FULL_TEXT_ORDERING = Collections.singletonList(new Ordering(\n                                                                                                        new PropertyValue(\n                                                                                                                          FULL_TEXT_SELECTOR_NAME,\n                                                                                                                          SCORE_COLUMN_NAME),\n                                                                                                        Order.DESCENDING,\n                                                                                                        NullOrder.NULLS_LAST))", "var_name": "FULL_TEXT_ORDERING"}, {"original_string": "private static boolean FULL_TEXT_DISTINCT = false;", "modifier": "private static", "type": "boolean", "declarator": "FULL_TEXT_DISTINCT = false", "var_name": "FULL_TEXT_DISTINCT"}, {"original_string": "private static FullTextSearchParser PARSER = new FullTextSearchParser();", "modifier": "private static", "type": "FullTextSearchParser", "declarator": "PARSER = new FullTextSearchParser()", "var_name": "PARSER"}], "methods": [{"identifier": "getLanguage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLanguage()", "full_signature": "@Override public String getLanguage()", "class_method_signature": "FullTextSearchParser.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "parseQuery", "parameters": "( String query,\n                                    TypeSystem typeSystem )", "modifiers": "@Override public", "return": "QueryCommand", "signature": "QueryCommand parseQuery( String query,\n                                    TypeSystem typeSystem )", "full_signature": "@Override public QueryCommand parseQuery( String query,\n                                    TypeSystem typeSystem )", "class_method_signature": "FullTextSearchParser.parseQuery( String query,\n                                    TypeSystem typeSystem )", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "( String fullTextSearchExpression )", "modifiers": "public", "return": "Term", "signature": "Term parse( String fullTextSearchExpression )", "full_signature": "public Term parse( String fullTextSearchExpression )", "class_method_signature": "FullTextSearchParser.parse( String fullTextSearchExpression )", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "( TokenStream tokens )", "modifiers": "public", "return": "Term", "signature": "Term parse( TokenStream tokens )", "full_signature": "public Term parse( TokenStream tokens )", "class_method_signature": "FullTextSearchParser.parse( TokenStream tokens )", "testcase": false, "constructor": false}, {"identifier": "parseDisjunctedTerms", "parameters": "( TokenStream tokens )", "modifiers": "protected", "return": "Term", "signature": "Term parseDisjunctedTerms( TokenStream tokens )", "full_signature": "protected Term parseDisjunctedTerms( TokenStream tokens )", "class_method_signature": "FullTextSearchParser.parseDisjunctedTerms( TokenStream tokens )", "testcase": false, "constructor": false}, {"identifier": "parseTerm", "parameters": "( TokenStream tokens )", "modifiers": "protected", "return": "Term", "signature": "Term parseTerm( TokenStream tokens )", "full_signature": "protected Term parseTerm( TokenStream tokens )", "class_method_signature": "FullTextSearchParser.parseTerm( TokenStream tokens )", "testcase": false, "constructor": false}, {"identifier": "removeQuotes", "parameters": "( String text )", "modifiers": "protected", "return": "String", "signature": "String removeQuotes( String text )", "full_signature": "protected String removeQuotes( String text )", "class_method_signature": "FullTextSearchParser.removeQuotes( String text )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/query/parse/FullTextSearchParser.java"}, "focal_method": {"identifier": "parse", "parameters": "( String fullTextSearchExpression )", "modifiers": "public", "return": "Term", "body": "public Term parse( String fullTextSearchExpression ) {\n        CheckArg.isNotNull(fullTextSearchExpression, \"fullTextSearchExpression\");\n        Tokenizer tokenizer = new TermTokenizer();\n        TokenStream stream = new TokenStream(fullTextSearchExpression, tokenizer, false);\n        return parse(stream.start());\n    }", "signature": "Term parse( String fullTextSearchExpression )", "full_signature": "public Term parse( String fullTextSearchExpression )", "class_method_signature": "FullTextSearchParser.parse( String fullTextSearchExpression )", "testcase": false, "constructor": false, "invocations": ["isNotNull", "parse", "start"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}