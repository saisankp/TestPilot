{"test_class": {"identifier": "TestSuperclassMatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static ClassPool pool = ClassPool.getDefault();", "modifier": "private final static", "type": "ClassPool", "declarator": "pool = ClassPool.getDefault()", "var_name": "pool"}], "file": "com.gzoltar.core/src/test/java/com/gzoltar/core/instr/matchers/TestSuperclassMatcher.java"}, "test_case": {"identifier": "testSuperclassMatcher", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSuperclassMatcher() throws Exception {\n    SuperclassMatcher superclassMatcher = new SuperclassMatcher(\"org.gzoltar.*.Abstract*\");\n    CtClass ctClass = pool.get(PublicModifiers.class.getCanonicalName());\n    assertTrue(superclassMatcher.matches(ctClass));\n  }", "signature": "void testSuperclassMatcher()", "full_signature": "@Test public void testSuperclassMatcher()", "class_method_signature": "TestSuperclassMatcher.testSuperclassMatcher()", "testcase": true, "constructor": false, "invocations": ["get", "getCanonicalName", "assertTrue", "matches"]}, "focal_class": {"identifier": "SuperclassMatcher", "superclass": "extends AbstractWildcardMatcher", "interfaces": "", "fields": [], "methods": [{"identifier": "SuperclassMatcher", "parameters": "(final String expression)", "modifiers": "public", "return": "", "signature": " SuperclassMatcher(final String expression)", "full_signature": "public  SuperclassMatcher(final String expression)", "class_method_signature": "SuperclassMatcher.SuperclassMatcher(final String expression)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(final CtClass ctClass)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(final CtClass ctClass)", "full_signature": "@Override public boolean matches(final CtClass ctClass)", "class_method_signature": "SuperclassMatcher.matches(final CtClass ctClass)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(final CtBehavior ctBehavior)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(final CtBehavior ctBehavior)", "full_signature": "@Override public boolean matches(final CtBehavior ctBehavior)", "class_method_signature": "SuperclassMatcher.matches(final CtBehavior ctBehavior)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(final CtField ctField)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(final CtField ctField)", "full_signature": "@Override public boolean matches(final CtField ctField)", "class_method_signature": "SuperclassMatcher.matches(final CtField ctField)", "testcase": false, "constructor": false}], "file": "com.gzoltar.core/src/main/java/com/gzoltar/core/instr/matchers/SuperclassMatcher.java"}, "focal_method": {"identifier": "SuperclassMatcher", "parameters": "(final String expression)", "modifiers": "public", "return": "", "body": "public SuperclassMatcher(final String expression) {\n    super(expression);\n  }", "signature": " SuperclassMatcher(final String expression)", "full_signature": "public  SuperclassMatcher(final String expression)", "class_method_signature": "SuperclassMatcher.SuperclassMatcher(final String expression)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 139729058, "url": "https://github.com/GZoltar/gzoltar", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 30, "size": 2454, "license": "licensed"}}