{"test_class": {"identifier": "StringListStreamConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "ingestion/src/test/java/feast/ingestion/options/StringListStreamConverterTest.java"}, "test_case": {"identifier": "shouldReadStreamAsNewlineSeparatedStrings", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReadStreamAsNewlineSeparatedStrings() throws IOException {\n    StringListStreamConverter converter = new StringListStreamConverter();\n    String originalString = \"abc\\ndef\";\n    InputStream stringStream = new ByteArrayInputStream(originalString.getBytes());\n    assertEquals(Arrays.asList(\"abc\", \"def\"), converter.readStream(stringStream));\n  }", "signature": "void shouldReadStreamAsNewlineSeparatedStrings()", "full_signature": "@Test public void shouldReadStreamAsNewlineSeparatedStrings()", "class_method_signature": "StringListStreamConverterTest.shouldReadStreamAsNewlineSeparatedStrings()", "testcase": true, "constructor": false, "invocations": ["getBytes", "assertEquals", "asList", "readStream"]}, "focal_class": {"identifier": "StringListStreamConverter", "superclass": "", "interfaces": "implements InputStreamConverter<List<String>>", "fields": [], "methods": [{"identifier": "readStream", "parameters": "(InputStream inputStream)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> readStream(InputStream inputStream)", "full_signature": "@Override public List<String> readStream(InputStream inputStream)", "class_method_signature": "StringListStreamConverter.readStream(InputStream inputStream)", "testcase": false, "constructor": false}], "file": "ingestion/src/main/java/feast/ingestion/options/StringListStreamConverter.java"}, "focal_method": {"identifier": "readStream", "parameters": "(InputStream inputStream)", "modifiers": "@Override public", "return": "List<String>", "body": "@Override\n  public List<String> readStream(InputStream inputStream) throws IOException {\n    BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));\n    List<String> stringList = reader.lines().collect(Collectors.toList());\n    reader.close();\n    return stringList;\n  }", "signature": "List<String> readStream(InputStream inputStream)", "full_signature": "@Override public List<String> readStream(InputStream inputStream)", "class_method_signature": "StringListStreamConverter.readStream(InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["collect", "lines", "toList", "close"]}, "repository": {"repo_id": 161133770, "url": "https://github.com/gojek/feast", "stars": 633, "created": "12/10/2018 7:20:15 AM +00:00", "updates": "2020-01-27T12:39:33+00:00", "fork": "False", "license": "licensed"}}