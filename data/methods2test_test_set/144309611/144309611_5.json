{"test_class": {"identifier": "PaillierKeyGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "pross-common/src/test/java/com/ibm/pross/common/util/crypto/paillier/PaillierKeyGeneratorTest.java"}, "test_case": {"identifier": "testGenerate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGenerate() {\n\t\tfail(\"Not yet implemented\");\n\t}", "signature": "void testGenerate()", "full_signature": "@Test public void testGenerate()", "class_method_signature": "PaillierKeyGeneratorTest.testGenerate()", "testcase": true, "constructor": false, "invocations": ["fail"]}, "focal_class": {"identifier": "PaillierKeyGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_KEY_LEN = 2048;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_KEY_LEN = 2048", "var_name": "DEFAULT_KEY_LEN"}, {"original_string": "private final int keyLength;", "modifier": "private final", "type": "int", "declarator": "keyLength", "var_name": "keyLength"}], "methods": [{"identifier": "PaillierKeyGenerator", "parameters": "()", "modifiers": "public", "return": "", "signature": " PaillierKeyGenerator()", "full_signature": "public  PaillierKeyGenerator()", "class_method_signature": "PaillierKeyGenerator.PaillierKeyGenerator()", "testcase": false, "constructor": true}, {"identifier": "PaillierKeyGenerator", "parameters": "(final int keyLength)", "modifiers": "public", "return": "", "signature": " PaillierKeyGenerator(final int keyLength)", "full_signature": "public  PaillierKeyGenerator(final int keyLength)", "class_method_signature": "PaillierKeyGenerator.PaillierKeyGenerator(final int keyLength)", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "PaillierKeyPair", "signature": "PaillierKeyPair generate()", "full_signature": "public PaillierKeyPair generate()", "class_method_signature": "PaillierKeyGenerator.generate()", "testcase": false, "constructor": false}], "file": "pross-common/src/main/java/com/ibm/pross/common/util/crypto/paillier/PaillierKeyGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "PaillierKeyPair", "body": "public PaillierKeyPair generate() {\n\t\tfinal SecureRandom random = new SecureRandom();\n\n\t\tfinal BigInteger p = BigInteger.probablePrime(this.keyLength / 2, random); // random prime\n\t\tfinal BigInteger q = BigInteger.probablePrime(this.keyLength / 2, random); // random prime\n\n\t\tfinal BigInteger n = p.multiply(q); // p*q\n\t\tfinal BigInteger nSquared = n.multiply(n); // n^2\n\n\t\tfinal BigInteger pMinusOne = p.subtract(BigInteger.ONE); // p - 1\n\t\tfinal BigInteger qMinusOne = q.subtract(BigInteger.ONE); // q - 1\n\n\t\tfinal BigInteger lambda = pMinusOne.multiply(qMinusOne); // totient(n)\n\t\tfinal BigInteger g = n.add(BigInteger.ONE); // n + 1\n\t\tfinal BigInteger mu = lambda.modInverse(n); // lambda^-1 % n\n\n\t\tfinal PaillierPublicKey publicKey = new PaillierPublicKey(n, g, nSquared);\n\t\tfinal PaillierPrivateKey privateKey = new PaillierPrivateKey(lambda, mu, n, nSquared);\n\t\t\n\t\treturn new PaillierKeyPair(publicKey, privateKey);\n\t}", "signature": "PaillierKeyPair generate()", "full_signature": "public PaillierKeyPair generate()", "class_method_signature": "PaillierKeyGenerator.generate()", "testcase": false, "constructor": false, "invocations": ["probablePrime", "probablePrime", "multiply", "multiply", "subtract", "subtract", "multiply", "add", "modInverse"]}, "repository": {"repo_id": 144309611, "url": "https://github.com/jasonkresch/protect", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 38, "size": 1932, "license": "licensed"}}