{"test_class": {"identifier": "TimestampedEventTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final long FIXED_TIME_MILLIS = 123456789L;", "modifier": "static final", "type": "long", "declarator": "FIXED_TIME_MILLIS = 123456789L", "var_name": "FIXED_TIME_MILLIS"}], "file": "flume-ng-sinks/flume-ng-elasticsearch-sink/src/test/java/org/apache/flume/sink/elasticsearch/TimestampedEventTest.java"}, "test_case": {"identifier": "shouldUseExistingAtTimestampHeaderInTimestampedEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldUseExistingAtTimestampHeaderInTimestampedEvent() {\n    SimpleEvent base = new SimpleEvent();\n    Map<String, String> headersWithTimestamp = Maps.newHashMap();\n    headersWithTimestamp.put(\"@timestamp\", \"-999\");\n    base.setHeaders(headersWithTimestamp );\n\n    TimestampedEvent timestampedEvent = new TimestampedEvent(base);\n    assertEquals(-999L, timestampedEvent.getTimestamp());\n    assertEquals(\"-999\", timestampedEvent.getHeaders().get(\"@timestamp\"));\n    assertNull(timestampedEvent.getHeaders().get(\"timestamp\"));\n  }", "signature": "void shouldUseExistingAtTimestampHeaderInTimestampedEvent()", "full_signature": "@Test public void shouldUseExistingAtTimestampHeaderInTimestampedEvent()", "class_method_signature": "TimestampedEventTest.shouldUseExistingAtTimestampHeaderInTimestampedEvent()", "testcase": true, "constructor": false, "invocations": ["newHashMap", "put", "setHeaders", "assertEquals", "getTimestamp", "assertEquals", "get", "getHeaders", "assertNull", "get", "getHeaders"]}, "focal_class": {"identifier": "TimestampedEvent", "superclass": "extends SimpleEvent", "interfaces": "", "fields": [{"original_string": "private final long timestamp;", "modifier": "private final", "type": "long", "declarator": "timestamp", "var_name": "timestamp"}], "methods": [{"identifier": "TimestampedEvent", "parameters": "(Event base)", "modifiers": "", "return": "", "signature": " TimestampedEvent(Event base)", "full_signature": "  TimestampedEvent(Event base)", "class_method_signature": "TimestampedEvent.TimestampedEvent(Event base)", "testcase": false, "constructor": true}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getTimestamp()", "full_signature": " long getTimestamp()", "class_method_signature": "TimestampedEvent.getTimestamp()", "testcase": false, "constructor": false}], "file": "flume-ng-sinks/flume-ng-elasticsearch-sink/src/main/java/org/apache/flume/sink/elasticsearch/TimestampedEvent.java"}, "focal_method": {"identifier": "getTimestamp", "parameters": "()", "modifiers": "", "return": "long", "body": "long getTimestamp() {\n    return timestamp;\n  }", "signature": "long getTimestamp()", "full_signature": " long getTimestamp()", "class_method_signature": "TimestampedEvent.getTimestamp()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}