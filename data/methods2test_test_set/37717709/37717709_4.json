{"test_class": {"identifier": "TestJsapi20SpokenInput", "superclass": "", "interfaces": "implements SpokenInputListener", "fields": [{"original_string": "private Jsapi20SpokenInput input;", "modifier": "private", "type": "Jsapi20SpokenInput", "declarator": "input", "var_name": "input"}, {"original_string": "private final Object monitor = new Object();", "modifier": "private final", "type": "Object", "declarator": "monitor = new Object()", "var_name": "monitor"}], "file": "org.jvoicexml.implementation.jsapi20/src/test/java/org/jvoicexml/implementation/jsapi20/TestJsapi20SpokenInput.java"}, "test_case": {"identifier": "testActivateGrammars", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testActivateGrammars() throws Exception, JVoiceXMLEvent {\n        final SrgsXmlDocument document = new SrgsXmlDocument();\n        final Grammar grammar = document.getGrammar();\n        grammar.setXmlLang(Locale.US);\n        final Rule rule = grammar.appendChild(Rule.class);\n        rule.setScope(\"public\");\n        rule.setId(\"root\");\n        grammar.setRoot(rule);\n        rule.addText(\"This is a test\");\n        final String xml = document.toString();\n        final File file = File.createTempFile(\"jvxmltest\", \"srgs\");\n        final URI uri = writeToFile(file, xml);\n        final GrammarImplementation<?> impl =\n            input.loadGrammar(uri, GrammarType.SRGS_XML);\n        final Collection<GrammarImplementation<?>> implementations =\n            new java.util.ArrayList<GrammarImplementation<?>>();\n        implementations.add(impl);\n        input.activateGrammars(implementations);\n    }", "signature": "void testActivateGrammars()", "full_signature": "@Test public void testActivateGrammars()", "class_method_signature": "TestJsapi20SpokenInput.testActivateGrammars()", "testcase": true, "constructor": false, "invocations": ["getGrammar", "setXmlLang", "appendChild", "setScope", "setId", "setRoot", "addText", "toString", "createTempFile", "writeToFile", "loadGrammar", "add", "activateGrammars"]}, "focal_class": {"identifier": "Jsapi20SpokenInput", "superclass": "", "interfaces": "implements SpokenInput, RecognizerListener", "fields": [{"original_string": "private static final Logger LOGGER = LogManager\n            .getLogger(Jsapi20SpokenInput.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager\n            .getLogger(Jsapi20SpokenInput.class)", "var_name": "LOGGER"}, {"original_string": "private Recognizer recognizer;", "modifier": "private", "type": "Recognizer", "declarator": "recognizer", "var_name": "recognizer"}, {"original_string": "private final Collection<SpokenInputListener> listeners;", "modifier": "private final", "type": "Collection<SpokenInputListener>", "declarator": "listeners", "var_name": "listeners"}, {"original_string": "private final RecognizerMode mode;", "modifier": "private final", "type": "RecognizerMode", "declarator": "mode", "var_name": "mode"}, {"original_string": "private JVoiceXMLResultListener currentResultListener;", "modifier": "private", "type": "JVoiceXMLResultListener", "declarator": "currentResultListener", "var_name": "currentResultListener"}, {"original_string": "private String mediaLocator;", "modifier": "private", "type": "String", "declarator": "mediaLocator", "var_name": "mediaLocator"}, {"original_string": "private final InputMediaLocatorFactory locatorFactory;", "modifier": "private final", "type": "InputMediaLocatorFactory", "declarator": "locatorFactory", "var_name": "locatorFactory"}, {"original_string": "private String type;", "modifier": "private", "type": "String", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "Jsapi20SpokenInput", "parameters": "(final RecognizerMode defaultDescriptor,\n            final InputMediaLocatorFactory mediaLocatorFactory)", "modifiers": "public", "return": "", "signature": " Jsapi20SpokenInput(final RecognizerMode defaultDescriptor,\n            final InputMediaLocatorFactory mediaLocatorFactory)", "full_signature": "public  Jsapi20SpokenInput(final RecognizerMode defaultDescriptor,\n            final InputMediaLocatorFactory mediaLocatorFactory)", "class_method_signature": "Jsapi20SpokenInput.Jsapi20SpokenInput(final RecognizerMode defaultDescriptor,\n            final InputMediaLocatorFactory mediaLocatorFactory)", "testcase": false, "constructor": true}, {"identifier": "setMediaLocator", "parameters": "(final URI locator)", "modifiers": "public", "return": "void", "signature": "void setMediaLocator(final URI locator)", "full_signature": "public void setMediaLocator(final URI locator)", "class_method_signature": "Jsapi20SpokenInput.setMediaLocator(final URI locator)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void open()", "full_signature": "@Override public void open()", "class_method_signature": "Jsapi20SpokenInput.open()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Jsapi20SpokenInput.close()", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(final SpokenInputListener inputListener)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(final SpokenInputListener inputListener)", "full_signature": "@Override public void addListener(final SpokenInputListener inputListener)", "class_method_signature": "Jsapi20SpokenInput.addListener(final SpokenInputListener inputListener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(final SpokenInputListener inputListener)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(final SpokenInputListener inputListener)", "full_signature": "@Override public void removeListener(final SpokenInputListener inputListener)", "class_method_signature": "Jsapi20SpokenInput.removeListener(final SpokenInputListener inputListener)", "testcase": false, "constructor": false}, {"identifier": "getSupportedBargeInTypes", "parameters": "()", "modifiers": "@Override public", "return": "Collection<BargeInType>", "signature": "Collection<BargeInType> getSupportedBargeInTypes()", "full_signature": "@Override public Collection<BargeInType> getSupportedBargeInTypes()", "class_method_signature": "Jsapi20SpokenInput.getSupportedBargeInTypes()", "testcase": false, "constructor": false}, {"identifier": "loadGrammar", "parameters": "(final URI uri,\n            final GrammarType grammarType)", "modifiers": "@Override public", "return": "GrammarImplementation<RuleGrammar>", "signature": "GrammarImplementation<RuleGrammar> loadGrammar(final URI uri,\n            final GrammarType grammarType)", "full_signature": "@Override public GrammarImplementation<RuleGrammar> loadGrammar(final URI uri,\n            final GrammarType grammarType)", "class_method_signature": "Jsapi20SpokenInput.loadGrammar(final URI uri,\n            final GrammarType grammarType)", "testcase": false, "constructor": false}, {"identifier": "activateGrammar", "parameters": "(final String name, final boolean activate)", "modifiers": "private", "return": "boolean", "signature": "boolean activateGrammar(final String name, final boolean activate)", "full_signature": "private boolean activateGrammar(final String name, final boolean activate)", "class_method_signature": "Jsapi20SpokenInput.activateGrammar(final String name, final boolean activate)", "testcase": false, "constructor": false}, {"identifier": "activateGrammars", "parameters": "(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "modifiers": "@Override public", "return": "void", "signature": "void activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "full_signature": "@Override public void activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "class_method_signature": "Jsapi20SpokenInput.activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "testcase": false, "constructor": false}, {"identifier": "deactivateGrammars", "parameters": "(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "modifiers": "@Override public", "return": "void", "signature": "void deactivateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "full_signature": "@Override public void deactivateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "class_method_signature": "Jsapi20SpokenInput.deactivateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "testcase": false, "constructor": false}, {"identifier": "startRecognition", "parameters": "(\n            final DataModel model,\n            final SpeechRecognizerProperties speech,\n            final DtmfRecognizerProperties dtmf)", "modifiers": "@Override public", "return": "void", "signature": "void startRecognition(\n            final DataModel model,\n            final SpeechRecognizerProperties speech,\n            final DtmfRecognizerProperties dtmf)", "full_signature": "@Override public void startRecognition(\n            final DataModel model,\n            final SpeechRecognizerProperties speech,\n            final DtmfRecognizerProperties dtmf)", "class_method_signature": "Jsapi20SpokenInput.startRecognition(\n            final DataModel model,\n            final SpeechRecognizerProperties speech,\n            final DtmfRecognizerProperties dtmf)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(final float value, final int min, final int max)", "modifiers": "private", "return": "int", "signature": "int scale(final float value, final int min, final int max)", "full_signature": "private int scale(final float value, final int min, final int max)", "class_method_signature": "Jsapi20SpokenInput.scale(final float value, final int min, final int max)", "testcase": false, "constructor": false}, {"identifier": "stopRecognition", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stopRecognition()", "full_signature": "@Override public void stopRecognition()", "class_method_signature": "Jsapi20SpokenInput.stopRecognition()", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void activate()", "full_signature": "@Override public void activate()", "class_method_signature": "Jsapi20SpokenInput.activate()", "testcase": false, "constructor": false}, {"identifier": "passivate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void passivate()", "full_signature": "@Override public void passivate()", "class_method_signature": "Jsapi20SpokenInput.passivate()", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(final ConnectionInformation info)", "modifiers": "@Override public", "return": "void", "signature": "void connect(final ConnectionInformation info)", "full_signature": "@Override public void connect(final ConnectionInformation info)", "class_method_signature": "Jsapi20SpokenInput.connect(final ConnectionInformation info)", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "(final ConnectionInformation info)", "modifiers": "@Override public", "return": "void", "signature": "void disconnect(final ConnectionInformation info)", "full_signature": "@Override public void disconnect(final ConnectionInformation info)", "class_method_signature": "Jsapi20SpokenInput.disconnect(final ConnectionInformation info)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getType()", "full_signature": "@Override public String getType()", "class_method_signature": "Jsapi20SpokenInput.getType()", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(final String resourceType)", "modifiers": "public", "return": "void", "signature": "void setType(final String resourceType)", "full_signature": "public void setType(final String resourceType)", "class_method_signature": "Jsapi20SpokenInput.setType(final String resourceType)", "testcase": false, "constructor": false}, {"identifier": "getSupportedGrammarTypes", "parameters": "()", "modifiers": "@Override public", "return": "Collection<GrammarType>", "signature": "Collection<GrammarType> getSupportedGrammarTypes()", "full_signature": "@Override public Collection<GrammarType> getSupportedGrammarTypes()", "class_method_signature": "Jsapi20SpokenInput.getSupportedGrammarTypes()", "testcase": false, "constructor": false}, {"identifier": "isBusy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isBusy()", "full_signature": "@Override public boolean isBusy()", "class_method_signature": "Jsapi20SpokenInput.isBusy()", "testcase": false, "constructor": false}, {"identifier": "recognizerUpdate", "parameters": "(final RecognizerEvent recognizerEvent)", "modifiers": "@Override public", "return": "void", "signature": "void recognizerUpdate(final RecognizerEvent recognizerEvent)", "full_signature": "@Override public void recognizerUpdate(final RecognizerEvent recognizerEvent)", "class_method_signature": "Jsapi20SpokenInput.recognizerUpdate(final RecognizerEvent recognizerEvent)", "testcase": false, "constructor": false}, {"identifier": "fireInputEvent", "parameters": "(final SpokenInputEvent event)", "modifiers": "", "return": "void", "signature": "void fireInputEvent(final SpokenInputEvent event)", "full_signature": " void fireInputEvent(final SpokenInputEvent event)", "class_method_signature": "Jsapi20SpokenInput.fireInputEvent(final SpokenInputEvent event)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.implementation.jsapi20/src/main/java/org/jvoicexml/implementation/jsapi20/Jsapi20SpokenInput.java"}, "focal_method": {"identifier": "activateGrammars", "parameters": "(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)\n            throws BadFetchError, UnsupportedLanguageError, NoresourceError {\n        if (recognizer == null) {\n            throw new NoresourceError(\"recognizer not available\");\n        }\n\n        for (GrammarImplementation<? extends Object> current : grammars) {\n            if (current instanceof RuleGrammarImplementation) {\n                final RuleGrammarImplementation ruleGrammar =\n                        (RuleGrammarImplementation) current;\n                final String name = ruleGrammar.getName();\n                if (LOGGER.isDebugEnabled()) {\n                    LOGGER.debug(\"activating grammar '\" + name + \"'...\");\n                }\n                activateGrammar(name, true);\n            }\n        }\n    }", "signature": "void activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "full_signature": "@Override public void activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "class_method_signature": "Jsapi20SpokenInput.activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "testcase": false, "constructor": false, "invocations": ["getName", "isDebugEnabled", "debug", "activateGrammar"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}