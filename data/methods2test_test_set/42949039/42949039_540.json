{"test_class": {"identifier": "BusinessObjectDataStorageUnitServiceImplTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private BusinessObjectDataDaoHelper businessObjectDataDaoHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataDaoHelper", "declarator": "businessObjectDataDaoHelper", "var_name": "businessObjectDataDaoHelper"}, {"original_string": "@Mock\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@InjectMocks\n    private BusinessObjectDataStorageUnitServiceImpl businessObjectDataStorageUnitServiceImpl;", "modifier": "@InjectMocks\n    private", "type": "BusinessObjectDataStorageUnitServiceImpl", "declarator": "businessObjectDataStorageUnitServiceImpl", "var_name": "businessObjectDataStorageUnitServiceImpl"}, {"original_string": "@Mock\n    private StorageDaoHelper storageDaoHelper;", "modifier": "@Mock\n    private", "type": "StorageDaoHelper", "declarator": "storageDaoHelper", "var_name": "storageDaoHelper"}, {"original_string": "@Mock\n    private StorageFileHelper storageFileHelper;", "modifier": "@Mock\n    private", "type": "StorageFileHelper", "declarator": "storageFileHelper", "var_name": "storageFileHelper"}, {"original_string": "@Mock\n    private StorageUnitDao storageUnitDao;", "modifier": "@Mock\n    private", "type": "StorageUnitDao", "declarator": "storageUnitDao", "var_name": "storageUnitDao"}, {"original_string": "@Mock\n    private StorageUnitHelper storageUnitHelper;", "modifier": "@Mock\n    private", "type": "StorageUnitHelper", "declarator": "storageUnitHelper", "var_name": "storageUnitHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/BusinessObjectDataStorageUnitServiceImplTest.java"}, "test_case": {"identifier": "testValidateBusinessObjectDataStorageUnitCreateRequestDirectoryOnlyRegistration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateBusinessObjectDataStorageUnitCreateRequestDirectoryOnlyRegistration()\n    {\n        // Create a business object data storage unit key.\n        BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey =\n            new BusinessObjectDataStorageUnitKey(BDEF_NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION, PARTITION_VALUE,\n                SUBPARTITION_VALUES, DATA_VERSION, STORAGE_NAME);\n\n        // Call the method under test.\n        businessObjectDataStorageUnitServiceImpl.validateBusinessObjectDataStorageUnitCreateRequest(\n            new BusinessObjectDataStorageUnitCreateRequest(businessObjectDataStorageUnitKey, new StorageDirectory(STORAGE_DIRECTORY_PATH), NO_STORAGE_FILES,\n                DISCOVER_STORAGE_FILES));\n\n        // Verify the external calls.\n        verify(storageUnitHelper).validateBusinessObjectDataStorageUnitKey(businessObjectDataStorageUnitKey);\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testValidateBusinessObjectDataStorageUnitCreateRequestDirectoryOnlyRegistration()", "full_signature": "@Test public void testValidateBusinessObjectDataStorageUnitCreateRequestDirectoryOnlyRegistration()", "class_method_signature": "BusinessObjectDataStorageUnitServiceImplTest.testValidateBusinessObjectDataStorageUnitCreateRequestDirectoryOnlyRegistration()", "testcase": true, "constructor": false, "invocations": ["validateBusinessObjectDataStorageUnitCreateRequest", "validateBusinessObjectDataStorageUnitKey", "verify", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "BusinessObjectDataStorageUnitServiceImpl", "superclass": "", "interfaces": "implements BusinessObjectDataStorageUnitService", "fields": [{"original_string": "@Autowired\n    private BusinessObjectDataDaoHelper businessObjectDataDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataDaoHelper", "declarator": "businessObjectDataDaoHelper", "var_name": "businessObjectDataDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private StorageDaoHelper storageDaoHelper;", "modifier": "@Autowired\n    private", "type": "StorageDaoHelper", "declarator": "storageDaoHelper", "var_name": "storageDaoHelper"}, {"original_string": "@Autowired\n    private StorageFileHelper storageFileHelper;", "modifier": "@Autowired\n    private", "type": "StorageFileHelper", "declarator": "storageFileHelper", "var_name": "storageFileHelper"}, {"original_string": "@Autowired\n    private StorageUnitDao storageUnitDao;", "modifier": "@Autowired\n    private", "type": "StorageUnitDao", "declarator": "storageUnitDao", "var_name": "storageUnitDao"}, {"original_string": "@Autowired\n    private StorageUnitHelper storageUnitHelper;", "modifier": "@Autowired\n    private", "type": "StorageUnitHelper", "declarator": "storageUnitHelper", "var_name": "storageUnitHelper"}], "methods": [{"identifier": "createBusinessObjectDataStorageUnit", "parameters": "(BusinessObjectDataStorageUnitCreateRequest request)", "modifiers": "@PublishNotificationMessages @NamespacePermission(fields = \"#request.businessObjectDataStorageUnitKey.namespace\", permissions = NamespacePermissionEnum.WRITE) @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "BusinessObjectDataStorageUnitCreateResponse", "signature": "BusinessObjectDataStorageUnitCreateResponse createBusinessObjectDataStorageUnit(BusinessObjectDataStorageUnitCreateRequest request)", "full_signature": "@PublishNotificationMessages @NamespacePermission(fields = \"#request.businessObjectDataStorageUnitKey.namespace\", permissions = NamespacePermissionEnum.WRITE) @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public BusinessObjectDataStorageUnitCreateResponse createBusinessObjectDataStorageUnit(BusinessObjectDataStorageUnitCreateRequest request)", "class_method_signature": "BusinessObjectDataStorageUnitServiceImpl.createBusinessObjectDataStorageUnit(BusinessObjectDataStorageUnitCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "createBusinessObjectDataStorageUnitCreateResponse", "parameters": "(StorageUnitEntity storageUnitEntity)", "modifiers": "protected", "return": "BusinessObjectDataStorageUnitCreateResponse", "signature": "BusinessObjectDataStorageUnitCreateResponse createBusinessObjectDataStorageUnitCreateResponse(StorageUnitEntity storageUnitEntity)", "full_signature": "protected BusinessObjectDataStorageUnitCreateResponse createBusinessObjectDataStorageUnitCreateResponse(StorageUnitEntity storageUnitEntity)", "class_method_signature": "BusinessObjectDataStorageUnitServiceImpl.createBusinessObjectDataStorageUnitCreateResponse(StorageUnitEntity storageUnitEntity)", "testcase": false, "constructor": false}, {"identifier": "createBusinessObjectDataStorageUnitImpl", "parameters": "(BusinessObjectDataStorageUnitCreateRequest request)", "modifiers": "protected", "return": "BusinessObjectDataStorageUnitCreateResponse", "signature": "BusinessObjectDataStorageUnitCreateResponse createBusinessObjectDataStorageUnitImpl(BusinessObjectDataStorageUnitCreateRequest request)", "full_signature": "protected BusinessObjectDataStorageUnitCreateResponse createBusinessObjectDataStorageUnitImpl(BusinessObjectDataStorageUnitCreateRequest request)", "class_method_signature": "BusinessObjectDataStorageUnitServiceImpl.createBusinessObjectDataStorageUnitImpl(BusinessObjectDataStorageUnitCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "validateBusinessObjectDataStorageUnitCreateRequest", "parameters": "(BusinessObjectDataStorageUnitCreateRequest request)", "modifiers": "protected", "return": "void", "signature": "void validateBusinessObjectDataStorageUnitCreateRequest(BusinessObjectDataStorageUnitCreateRequest request)", "full_signature": "protected void validateBusinessObjectDataStorageUnitCreateRequest(BusinessObjectDataStorageUnitCreateRequest request)", "class_method_signature": "BusinessObjectDataStorageUnitServiceImpl.validateBusinessObjectDataStorageUnitCreateRequest(BusinessObjectDataStorageUnitCreateRequest request)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/BusinessObjectDataStorageUnitServiceImpl.java"}, "focal_method": {"identifier": "validateBusinessObjectDataStorageUnitCreateRequest", "parameters": "(BusinessObjectDataStorageUnitCreateRequest request)", "modifiers": "protected", "return": "void", "body": "protected void validateBusinessObjectDataStorageUnitCreateRequest(BusinessObjectDataStorageUnitCreateRequest request)\n    {\n        Assert.notNull(request, \"A business object data storage unit create request must be specified.\");\n\n        storageUnitHelper.validateBusinessObjectDataStorageUnitKey(request.getBusinessObjectDataStorageUnitKey());\n\n        if (BooleanUtils.isTrue(request.isDiscoverStorageFiles()))\n        {\n            // The auto-discovery of storage files is enabled, thus a storage directory is required and storage files cannot be specified.\n            Assert.isTrue(request.getStorageDirectory() != null, \"A storage directory must be specified when discovery of storage files is enabled.\");\n            Assert.isTrue(CollectionUtils.isEmpty(request.getStorageFiles()), \"Storage files cannot be specified when discovery of storage files is enabled.\");\n        }\n        else\n        {\n            // Since auto-discovery is disabled, a storage directory or at least one storage file are required for each storage unit.\n            Assert.isTrue(request.getStorageDirectory() != null || CollectionUtils.isNotEmpty(request.getStorageFiles()),\n                \"A storage directory or at least one storage file must be specified when discovery of storage files is not enabled.\");\n        }\n\n        // If storageDirectory element is present in the request, we require it to contain a non-empty directoryPath element.\n        if (request.getStorageDirectory() != null)\n        {\n            Assert.hasText(request.getStorageDirectory().getDirectoryPath(), \"A storage directory path must be specified.\");\n            request.getStorageDirectory().setDirectoryPath(request.getStorageDirectory().getDirectoryPath().trim());\n        }\n\n        // Validate a list of storage files, if specified.\n        if (CollectionUtils.isNotEmpty(request.getStorageFiles()))\n        {\n            storageFileHelper.validateCreateRequestStorageFiles(request.getStorageFiles());\n        }\n    }", "signature": "void validateBusinessObjectDataStorageUnitCreateRequest(BusinessObjectDataStorageUnitCreateRequest request)", "full_signature": "protected void validateBusinessObjectDataStorageUnitCreateRequest(BusinessObjectDataStorageUnitCreateRequest request)", "class_method_signature": "BusinessObjectDataStorageUnitServiceImpl.validateBusinessObjectDataStorageUnitCreateRequest(BusinessObjectDataStorageUnitCreateRequest request)", "testcase": false, "constructor": false, "invocations": ["notNull", "validateBusinessObjectDataStorageUnitKey", "getBusinessObjectDataStorageUnitKey", "isTrue", "isDiscoverStorageFiles", "isTrue", "getStorageDirectory", "isTrue", "isEmpty", "getStorageFiles", "isTrue", "getStorageDirectory", "isNotEmpty", "getStorageFiles", "getStorageDirectory", "hasText", "getDirectoryPath", "getStorageDirectory", "setDirectoryPath", "getStorageDirectory", "trim", "getDirectoryPath", "getStorageDirectory", "isNotEmpty", "getStorageFiles", "validateCreateRequestStorageFiles", "getStorageFiles"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}