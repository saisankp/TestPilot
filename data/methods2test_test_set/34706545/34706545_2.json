{"test_class": {"identifier": "CommitmentTest", "superclass": "", "interfaces": "", "fields": [], "file": "crypto/src/test/java/org/coniks/crypto/CommitmentTest.java"}, "test_case": {"identifier": "testCommitment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCommitment()\n        throws NoSuchAlgorithmException {\n\n        byte[] msg = \"message\".getBytes();\n\n        Commitment comm = new Commitment(msg);\n\n        if(comm.getValue().length != Digest.HASH_SIZE_BYTES) {\n            fail(\"Computation of commitment failed - wrong length.\");\n        }\n\n        assertNotNull(\"Computation of commitment failed - null\",\n                      comm.getValue());\n\n        assertTrue(\"Invalid commitment\", comm.verify(msg));\n\n    }", "signature": "void testCommitment()", "full_signature": "@Test public void testCommitment()", "class_method_signature": "CommitmentTest.testCommitment()", "testcase": true, "constructor": false, "invocations": ["getBytes", "getValue", "fail", "assertNotNull", "getValue", "assertTrue", "verify"]}, "focal_class": {"identifier": "Commitment", "superclass": "", "interfaces": "", "fields": [{"original_string": "private byte[] salt;", "modifier": "private", "type": "byte[]", "declarator": "salt", "var_name": "salt"}, {"original_string": "private byte[] value;", "modifier": "private", "type": "byte[]", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "Commitment", "parameters": "(byte[] data)", "modifiers": "public", "return": "", "signature": " Commitment(byte[] data)", "full_signature": "public  Commitment(byte[] data)", "class_method_signature": "Commitment.Commitment(byte[] data)", "testcase": false, "constructor": true}, {"identifier": "getSalt", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getSalt()", "full_signature": "public byte[] getSalt()", "class_method_signature": "Commitment.getSalt()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getValue()", "full_signature": "public byte[] getValue()", "class_method_signature": "Commitment.getValue()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(byte[] data)", "modifiers": "private", "return": "byte[]", "signature": "byte[] serialize(byte[] data)", "full_signature": "private byte[] serialize(byte[] data)", "class_method_signature": "Commitment.serialize(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "verify", "parameters": "(byte[] opening)", "modifiers": "public", "return": "boolean", "signature": "boolean verify(byte[] opening)", "full_signature": "public boolean verify(byte[] opening)", "class_method_signature": "Commitment.verify(byte[] opening)", "testcase": false, "constructor": false}], "file": "crypto/src/main/java/org/coniks/crypto/Commitment.java"}, "focal_method": {"identifier": "Commitment", "parameters": "(byte[] data)", "modifiers": "public", "return": "", "body": "public Commitment(byte[] data)\n        throws NoSuchAlgorithmException {\n\n        this.salt = Digest.makeRand();\n\n        byte[] d = serialize(data);\n        this.value = Digest.digest(d);\n    }", "signature": " Commitment(byte[] data)", "full_signature": "public  Commitment(byte[] data)", "class_method_signature": "Commitment.Commitment(byte[] data)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 34706545, "url": "https://github.com/coniks-sys/coniks-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 60, "size": 2990, "license": "licensed"}}