{"test_class": {"identifier": "RestUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "BeanToMapConvertor beanToMapConvertor = ApiClientMethod.getBeanToMapConvertor();", "modifier": "", "type": "BeanToMapConvertor", "declarator": "beanToMapConvertor = ApiClientMethod.getBeanToMapConvertor()", "var_name": "beanToMapConvertor"}], "file": "core/modules/spring/src/test/java/org/onetwo/common/spring/rest/RestUtilsTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test(){\n\t\tUserEntity user = new UserEntity();\n\t\tuser.setId(11L);\n\t\tuser.setUserName(\"testUserName\");\n\t\t\n\t\tRoleEntity role = new RoleEntity();\n\t\trole.setId(20L);\n\t\trole.setName(\"testRoleName\");\n\n\t\tRoleEntity role1 = new RoleEntity();\n\t\trole1.setId(21L);\n\t\trole1.setName(\"testRoleName1\");\n\t\t\n\t\tuser.setRoles(Arrays.asList(role, role1));\n\t\t\n\t\tMultiValueMap<String, Object> mmap = RestUtils.toMultiValueMap(user);\n\t\tSystem.out.println(\"mmap:\"+mmap);\n\t\tString paramString = ParamUtils.comparableKeyMapToParamString(mmap);\n\t\tSystem.out.println(\"paramString:\"+paramString);\n\t\tAssert.assertEquals(\"age=0&height=0.0&id=11&roles[0].id=20&roles[0].name=testRoleName&roles[0].version=0&roles[1].id=21&roles[1].name=testRoleName1&roles[1].version=0&userName=testUserName\", \n\t\t\t\tparamString);\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "RestUtilsTest.test()", "testcase": true, "constructor": false, "invocations": ["setId", "setUserName", "setId", "setName", "setId", "setName", "setRoles", "asList", "toMultiValueMap", "println", "comparableKeyMapToParamString", "println", "assertEquals"]}, "focal_class": {"identifier": "RestUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Collection<RequestMethod> BODY_SUPPORT_METHODS = Sets.newHashSet(RequestMethod.POST, RequestMethod.PATCH, RequestMethod.PUT);", "modifier": "private static", "type": "Collection<RequestMethod>", "declarator": "BODY_SUPPORT_METHODS = Sets.newHashSet(RequestMethod.POST, RequestMethod.PATCH, RequestMethod.PUT)", "var_name": "BODY_SUPPORT_METHODS"}, {"original_string": "public static final String CLASS_OK_HTTP_CLIENT = \"okhttp3.OkHttpClient\";", "modifier": "public static final", "type": "String", "declarator": "CLASS_OK_HTTP_CLIENT = \"okhttp3.OkHttpClient\"", "var_name": "CLASS_OK_HTTP_CLIENT"}, {"original_string": "public static final String LIST_LEFT = \"[\";", "modifier": "public static final", "type": "String", "declarator": "LIST_LEFT = \"[\"", "var_name": "LIST_LEFT"}, {"original_string": "public static final String LIST_RIGHT = \"]\";", "modifier": "public static final", "type": "String", "declarator": "LIST_RIGHT = \"]\"", "var_name": "LIST_RIGHT"}, {"original_string": "public static final String DOT_ACCESOR = \".\";", "modifier": "public static final", "type": "String", "declarator": "DOT_ACCESOR = \".\"", "var_name": "DOT_ACCESOR"}, {"original_string": "public static final String ACCEPT_CHARSET = \"Accept-Charset\";", "modifier": "public static final", "type": "String", "declarator": "ACCEPT_CHARSET = \"Accept-Charset\"", "var_name": "ACCEPT_CHARSET"}, {"original_string": "public static final HttpHeaders FORM_HEADER;", "modifier": "public static final", "type": "HttpHeaders", "declarator": "FORM_HEADER", "var_name": "FORM_HEADER"}, {"original_string": "public static final HttpHeaders XML_HEADER;", "modifier": "public static final", "type": "HttpHeaders", "declarator": "XML_HEADER", "var_name": "XML_HEADER"}, {"original_string": "public static final HttpHeaders JSON_HEADER;", "modifier": "public static final", "type": "HttpHeaders", "declarator": "JSON_HEADER", "var_name": "JSON_HEADER"}, {"original_string": "public static final HttpHeaders TEXT_HEADER;", "modifier": "public static final", "type": "HttpHeaders", "declarator": "TEXT_HEADER", "var_name": "TEXT_HEADER"}, {"original_string": "private static final BeanToMapConvertor BEAN_TO_MAP_CONVERTOR = EnhanceBeanToMapBuilder.enhanceBuilder()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.enableJsonPropertyAnnotation()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.enableFieldNameAnnotation()\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.enableUnderLineStyle()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.propertyAcceptor((p, v)->v!=null)\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.valueConvertor((p, v)->v.toString())\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build();", "modifier": "private static final", "type": "BeanToMapConvertor", "declarator": "BEAN_TO_MAP_CONVERTOR = EnhanceBeanToMapBuilder.enhanceBuilder()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.enableJsonPropertyAnnotation()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.enableFieldNameAnnotation()\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.enableUnderLineStyle()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.propertyAcceptor((p, v)->v!=null)\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.valueConvertor((p, v)->v.toString())\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build()", "var_name": "BEAN_TO_MAP_CONVERTOR"}], "methods": [{"identifier": "getBeanToMapConvertor", "parameters": "()", "modifiers": "public static", "return": "BeanToMapConvertor", "signature": "BeanToMapConvertor getBeanToMapConvertor()", "full_signature": "public static BeanToMapConvertor getBeanToMapConvertor()", "class_method_signature": "RestUtils.getBeanToMapConvertor()", "testcase": false, "constructor": false}, {"identifier": "isRequestBodySupportedMethod", "parameters": "(HttpMethod method)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRequestBodySupportedMethod(HttpMethod method)", "full_signature": "public static boolean isRequestBodySupportedMethod(HttpMethod method)", "class_method_signature": "RestUtils.isRequestBodySupportedMethod(HttpMethod method)", "testcase": false, "constructor": false}, {"identifier": "isRequestBodySupportedMethod", "parameters": "(RequestMethod method)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRequestBodySupportedMethod(RequestMethod method)", "full_signature": "public static boolean isRequestBodySupportedMethod(RequestMethod method)", "class_method_signature": "RestUtils.isRequestBodySupportedMethod(RequestMethod method)", "testcase": false, "constructor": false}, {"identifier": "isOkHttp3Present", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isOkHttp3Present()", "full_signature": "public static boolean isOkHttp3Present()", "class_method_signature": "RestUtils.isOkHttp3Present()", "testcase": false, "constructor": false}, {"identifier": "createFormEntity", "parameters": "(final Object obj)", "modifiers": "public static", "return": "HttpEntity<?>", "signature": "HttpEntity<?> createFormEntity(final Object obj)", "full_signature": "public static HttpEntity<?> createFormEntity(final Object obj)", "class_method_signature": "RestUtils.createFormEntity(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "createFormEntity", "parameters": "(final Object obj, BeanToMapConvertor convertor)", "modifiers": "public static", "return": "HttpEntity<?>", "signature": "HttpEntity<?> createFormEntity(final Object obj, BeanToMapConvertor convertor)", "full_signature": "public static HttpEntity<?> createFormEntity(final Object obj, BeanToMapConvertor convertor)", "class_method_signature": "RestUtils.createFormEntity(final Object obj, BeanToMapConvertor convertor)", "testcase": false, "constructor": false}, {"identifier": "toMultiValueMap", "parameters": "(final Object obj)", "modifiers": "public static", "return": "MultiValueMap<String, Object>", "signature": "MultiValueMap<String, Object> toMultiValueMap(final Object obj)", "full_signature": "public static MultiValueMap<String, Object> toMultiValueMap(final Object obj)", "class_method_signature": "RestUtils.toMultiValueMap(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "toMultiValueStringMap", "parameters": "(final Object obj)", "modifiers": "public static", "return": "MultiValueMap<String, String>", "signature": "MultiValueMap<String, String> toMultiValueStringMap(final Object obj)", "full_signature": "public static MultiValueMap<String, String> toMultiValueStringMap(final Object obj)", "class_method_signature": "RestUtils.toMultiValueStringMap(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "toMultiValueMap", "parameters": "(final Object obj, BeanToMapConvertor convertor)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "MultiValueMap<String, V>", "signature": "MultiValueMap<String, V> toMultiValueMap(final Object obj, BeanToMapConvertor convertor)", "full_signature": "@SuppressWarnings(\"unchecked\") public static MultiValueMap<String, V> toMultiValueMap(final Object obj, BeanToMapConvertor convertor)", "class_method_signature": "RestUtils.toMultiValueMap(final Object obj, BeanToMapConvertor convertor)", "testcase": false, "constructor": false}, {"identifier": "propertiesToParamString", "parameters": "(Object request)", "modifiers": "public static", "return": "String", "signature": "String propertiesToParamString(Object request)", "full_signature": "public static String propertiesToParamString(Object request)", "class_method_signature": "RestUtils.propertiesToParamString(Object request)", "testcase": false, "constructor": false}, {"identifier": "keysToParamString", "parameters": "(Map params)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static", "return": "String", "signature": "String keysToParamString(Map params)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static String keysToParamString(Map params)", "class_method_signature": "RestUtils.keysToParamString(Map params)", "testcase": false, "constructor": false}, {"identifier": "createHeader", "parameters": "(MediaType mediaType)", "modifiers": "public static", "return": "HttpHeaders", "signature": "HttpHeaders createHeader(MediaType mediaType)", "full_signature": "public static HttpHeaders createHeader(MediaType mediaType)", "class_method_signature": "RestUtils.createHeader(MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "createHttpEntity", "parameters": "(T obj, MediaType mediaType)", "modifiers": "public static", "return": "HttpEntity<T>", "signature": "HttpEntity<T> createHttpEntity(T obj, MediaType mediaType)", "full_signature": "public static HttpEntity<T> createHttpEntity(T obj, MediaType mediaType)", "class_method_signature": "RestUtils.createHttpEntity(T obj, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "createHttpEntity", "parameters": "(T obj, HttpHeaders headers)", "modifiers": "public static", "return": "HttpEntity<T>", "signature": "HttpEntity<T> createHttpEntity(T obj, HttpHeaders headers)", "full_signature": "public static HttpEntity<T> createHttpEntity(T obj, HttpHeaders headers)", "class_method_signature": "RestUtils.createHttpEntity(T obj, HttpHeaders headers)", "testcase": false, "constructor": false}, {"identifier": "RestUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " RestUtils()", "full_signature": "private  RestUtils()", "class_method_signature": "RestUtils.RestUtils()", "testcase": false, "constructor": true}], "file": "core/modules/spring/src/main/java/org/onetwo/common/spring/rest/RestUtils.java"}, "focal_method": {"identifier": "toMultiValueMap", "parameters": "(final Object obj)", "modifiers": "public static", "return": "MultiValueMap<String, Object>", "body": "public static MultiValueMap<String, Object> toMultiValueMap(final Object obj){\n\t\treturn toMultiValueMap(obj, BEAN_TO_MAP_CONVERTOR);\n\t}", "signature": "MultiValueMap<String, Object> toMultiValueMap(final Object obj)", "full_signature": "public static MultiValueMap<String, Object> toMultiValueMap(final Object obj)", "class_method_signature": "RestUtils.toMultiValueMap(final Object obj)", "testcase": false, "constructor": false, "invocations": ["toMultiValueMap"]}, "repository": {"repo_id": 47802308, "url": "https://github.com/wayshall/onetwo", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 16, "size": 57582, "license": "licensed"}}