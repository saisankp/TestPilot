{"test_class": {"identifier": "EventBaseCheckTest", "superclass": "extends BaseValidationTest", "interfaces": "", "fields": [{"original_string": "private EventBaseCheck rule;", "modifier": "private", "type": "EventBaseCheck", "declarator": "rule", "var_name": "rule"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/events/importer/shared/validation/EventBaseCheckTest.java"}, "test_case": {"identifier": "verifyErrorOnInvalidEventDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyErrorOnInvalidEventDate()\n    {\n        event.setEvent( event.getUid() );\n        event.setEventDate( \"111-12-122\" );\n        ImportSummary importSummary = rule.check( new ImmutableEvent( event ), workContext );\n        assertHasError( importSummary, event, null );\n        assertHasConflict( importSummary, event, \"Invalid event date: \" + event.getEventDate() );\n\n    }", "signature": "void verifyErrorOnInvalidEventDate()", "full_signature": "@Test public void verifyErrorOnInvalidEventDate()", "class_method_signature": "EventBaseCheckTest.verifyErrorOnInvalidEventDate()", "testcase": true, "constructor": false, "invocations": ["setEvent", "getUid", "setEventDate", "check", "assertHasError", "assertHasConflict", "getEventDate"]}, "focal_class": {"identifier": "EventBaseCheck", "superclass": "", "interfaces": "implements Checker", "fields": [], "methods": [{"identifier": "check", "parameters": "( ImmutableEvent event, WorkContext ctx )", "modifiers": "@Override public", "return": "ImportSummary", "signature": "ImportSummary check( ImmutableEvent event, WorkContext ctx )", "full_signature": "@Override public ImportSummary check( ImmutableEvent event, WorkContext ctx )", "class_method_signature": "EventBaseCheck.check( ImmutableEvent event, WorkContext ctx )", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "( ImmutableEvent event, WorkContext ctx )", "modifiers": "private", "return": "List<String>", "signature": "List<String> validate( ImmutableEvent event, WorkContext ctx )", "full_signature": "private List<String> validate( ImmutableEvent event, WorkContext ctx )", "class_method_signature": "EventBaseCheck.validate( ImmutableEvent event, WorkContext ctx )", "testcase": false, "constructor": false}, {"identifier": "validateDates", "parameters": "( ImmutableEvent event, List<String> errors )", "modifiers": "private", "return": "void", "signature": "void validateDates( ImmutableEvent event, List<String> errors )", "full_signature": "private void validateDates( ImmutableEvent event, List<String> errors )", "class_method_signature": "EventBaseCheck.validateDates( ImmutableEvent event, List<String> errors )", "testcase": false, "constructor": false}, {"identifier": "validateProgramInstance", "parameters": "( ImmutableEvent event, WorkContext ctx, List<String> errors )", "modifiers": "private", "return": "void", "signature": "void validateProgramInstance( ImmutableEvent event, WorkContext ctx, List<String> errors )", "full_signature": "private void validateProgramInstance( ImmutableEvent event, WorkContext ctx, List<String> errors )", "class_method_signature": "EventBaseCheck.validateProgramInstance( ImmutableEvent event, WorkContext ctx, List<String> errors )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/shared/validation/EventBaseCheck.java"}, "focal_method": {"identifier": "check", "parameters": "( ImmutableEvent event, WorkContext ctx )", "modifiers": "@Override public", "return": "ImportSummary", "body": "@Override\n    public ImportSummary check( ImmutableEvent event, WorkContext ctx )\n    {\n        ImportSummary importSummary = new ImportSummary();\n        List<String> errors = validate( event, ctx );\n\n        if ( !errors.isEmpty() )\n        {\n            importSummary.setStatus( ERROR );\n            importSummary.setReference( event.getEvent() );\n            importSummary.getConflicts()\n                .addAll( errors.stream().map( s -> new ImportConflict( \"Event\", s ) ).collect( Collectors.toList() ) );\n            importSummary.incrementIgnored();\n\n        }\n        return importSummary;\n    }", "signature": "ImportSummary check( ImmutableEvent event, WorkContext ctx )", "full_signature": "@Override public ImportSummary check( ImmutableEvent event, WorkContext ctx )", "class_method_signature": "EventBaseCheck.check( ImmutableEvent event, WorkContext ctx )", "testcase": false, "constructor": false, "invocations": ["validate", "isEmpty", "setStatus", "setReference", "getEvent", "addAll", "getConflicts", "collect", "map", "stream", "toList", "incrementIgnored"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}