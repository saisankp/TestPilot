{"test_class": {"identifier": "GoogleCloudStorageWriteChannelTest", "superclass": "", "interfaces": "", "fields": [], "file": "gcsio/src/test/java/com/google/cloud/hadoop/gcsio/GoogleCloudStorageWriteChannelTest.java"}, "test_case": {"identifier": "createRequest_shouldSetKmsKeyName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void createRequest_shouldSetKmsKeyName() throws IOException {\n    String kmsKeyName = \"testKmsKey\";\n\n    GoogleCloudStorageWriteChannel writeChannel =\n        new GoogleCloudStorageWriteChannel(\n            new Storage(HTTP_TRANSPORT, JSON_FACTORY, r -> {}),\n            new ClientRequestHelper<>(),\n            newDirectExecutorService(),\n            AsyncWriteChannelOptions.DEFAULT,\n            new StorageResourceId(BUCKET_NAME, OBJECT_NAME),\n            CreateObjectOptions.DEFAULT_NO_OVERWRITE.toBuilder().setKmsKeyName(kmsKeyName).build(),\n            ObjectWriteConditions.NONE);\n\n    Storage.Objects.Insert request =\n        writeChannel.createRequest(\n            new InputStreamContent(\"plain/text\", new ByteArrayInputStream(new byte[0])));\n\n    assertThat(request.getKmsKeyName()).isEqualTo(kmsKeyName);\n  }", "signature": "void createRequest_shouldSetKmsKeyName()", "full_signature": "@Test public void createRequest_shouldSetKmsKeyName()", "class_method_signature": "GoogleCloudStorageWriteChannelTest.createRequest_shouldSetKmsKeyName()", "testcase": true, "constructor": false, "invocations": ["newDirectExecutorService", "build", "setKmsKeyName", "toBuilder", "createRequest", "isEqualTo", "assertThat", "getKmsKeyName"]}, "focal_class": {"identifier": "GoogleCloudStorageWriteChannel", "superclass": "extends AbstractGoogleAsyncWriteChannel<Insert, StorageObject>", "interfaces": "implements GoogleCloudStorageItemInfo.Provider", "fields": [{"original_string": "private static final long MIN_LOGGING_INTERVAL_MS = 60000L;", "modifier": "private static final", "type": "long", "declarator": "MIN_LOGGING_INTERVAL_MS = 60000L", "var_name": "MIN_LOGGING_INTERVAL_MS"}, {"original_string": "private final Storage gcs;", "modifier": "private final", "type": "Storage", "declarator": "gcs", "var_name": "gcs"}, {"original_string": "private final StorageResourceId resourceId;", "modifier": "private final", "type": "StorageResourceId", "declarator": "resourceId", "var_name": "resourceId"}, {"original_string": "private final CreateObjectOptions createOptions;", "modifier": "private final", "type": "CreateObjectOptions", "declarator": "createOptions", "var_name": "createOptions"}, {"original_string": "private final ObjectWriteConditions writeConditions;", "modifier": "private final", "type": "ObjectWriteConditions", "declarator": "writeConditions", "var_name": "writeConditions"}, {"original_string": "private GoogleCloudStorageItemInfo completedItemInfo = null;", "modifier": "private", "type": "GoogleCloudStorageItemInfo", "declarator": "completedItemInfo = null", "var_name": "completedItemInfo"}], "methods": [{"identifier": "GoogleCloudStorageWriteChannel", "parameters": "(\n      Storage gcs,\n      ClientRequestHelper<StorageObject> requestHelper,\n      ExecutorService uploadThreadPool,\n      AsyncWriteChannelOptions channelOptions,\n      StorageResourceId resourceId,\n      CreateObjectOptions createOptions,\n      ObjectWriteConditions writeConditions)", "modifiers": "public", "return": "", "signature": " GoogleCloudStorageWriteChannel(\n      Storage gcs,\n      ClientRequestHelper<StorageObject> requestHelper,\n      ExecutorService uploadThreadPool,\n      AsyncWriteChannelOptions channelOptions,\n      StorageResourceId resourceId,\n      CreateObjectOptions createOptions,\n      ObjectWriteConditions writeConditions)", "full_signature": "public  GoogleCloudStorageWriteChannel(\n      Storage gcs,\n      ClientRequestHelper<StorageObject> requestHelper,\n      ExecutorService uploadThreadPool,\n      AsyncWriteChannelOptions channelOptions,\n      StorageResourceId resourceId,\n      CreateObjectOptions createOptions,\n      ObjectWriteConditions writeConditions)", "class_method_signature": "GoogleCloudStorageWriteChannel.GoogleCloudStorageWriteChannel(\n      Storage gcs,\n      ClientRequestHelper<StorageObject> requestHelper,\n      ExecutorService uploadThreadPool,\n      AsyncWriteChannelOptions channelOptions,\n      StorageResourceId resourceId,\n      CreateObjectOptions createOptions,\n      ObjectWriteConditions writeConditions)", "testcase": false, "constructor": true}, {"identifier": "createRequest", "parameters": "(InputStreamContent inputStream)", "modifiers": "@Override public", "return": "Insert", "signature": "Insert createRequest(InputStreamContent inputStream)", "full_signature": "@Override public Insert createRequest(InputStreamContent inputStream)", "class_method_signature": "GoogleCloudStorageWriteChannel.createRequest(InputStreamContent inputStream)", "testcase": false, "constructor": false}, {"identifier": "handleResponse", "parameters": "(StorageObject response)", "modifiers": "@Override public", "return": "void", "signature": "void handleResponse(StorageObject response)", "full_signature": "@Override public void handleResponse(StorageObject response)", "class_method_signature": "GoogleCloudStorageWriteChannel.handleResponse(StorageObject response)", "testcase": false, "constructor": false}, {"identifier": "createResponseFromException", "parameters": "(IOException e)", "modifiers": "@Override public", "return": "StorageObject", "signature": "StorageObject createResponseFromException(IOException e)", "full_signature": "@Override public StorageObject createResponseFromException(IOException e)", "class_method_signature": "GoogleCloudStorageWriteChannel.createResponseFromException(IOException e)", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getContentType()", "full_signature": "@Override protected String getContentType()", "class_method_signature": "GoogleCloudStorageWriteChannel.getContentType()", "testcase": false, "constructor": false}, {"identifier": "getResourceString", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getResourceString()", "full_signature": "@Override protected String getResourceString()", "class_method_signature": "GoogleCloudStorageWriteChannel.getResourceString()", "testcase": false, "constructor": false}, {"identifier": "getItemInfo", "parameters": "()", "modifiers": "@Override public", "return": "GoogleCloudStorageItemInfo", "signature": "GoogleCloudStorageItemInfo getItemInfo()", "full_signature": "@Override public GoogleCloudStorageItemInfo getItemInfo()", "class_method_signature": "GoogleCloudStorageWriteChannel.getItemInfo()", "testcase": false, "constructor": false}], "file": "gcsio/src/main/java/com/google/cloud/hadoop/gcsio/GoogleCloudStorageWriteChannel.java"}, "focal_method": {"identifier": "createRequest", "parameters": "(InputStreamContent inputStream)", "modifiers": "@Override public", "return": "Insert", "body": "@Override\n  public Insert createRequest(InputStreamContent inputStream) throws IOException {\n    // Create object with the given name and metadata.\n    StorageObject object =\n        new StorageObject()\n            .setContentEncoding(createOptions.getContentEncoding())\n            .setMetadata(encodeMetadata(createOptions.getMetadata()))\n            .setName(resourceId.getObjectName());\n\n    Insert insert =\n        gcs.objects()\n            .insert(resourceId.getBucketName(), object, inputStream)\n            .setName(resourceId.getObjectName())\n            .setKmsKeyName(createOptions.getKmsKeyName());\n    writeConditions.apply(insert);\n    if (insert.getMediaHttpUploader() != null) {\n      insert\n          .getMediaHttpUploader()\n          .setDirectUploadEnabled(isDirectUploadEnabled())\n          .setProgressListener(\n              new LoggingMediaHttpUploaderProgressListener(\n                  resourceId.getObjectName(), MIN_LOGGING_INTERVAL_MS));\n    }\n    return insert;\n  }", "signature": "Insert createRequest(InputStreamContent inputStream)", "full_signature": "@Override public Insert createRequest(InputStreamContent inputStream)", "class_method_signature": "GoogleCloudStorageWriteChannel.createRequest(InputStreamContent inputStream)", "testcase": false, "constructor": false, "invocations": ["setName", "setMetadata", "setContentEncoding", "getContentEncoding", "encodeMetadata", "getMetadata", "getObjectName", "setKmsKeyName", "setName", "insert", "objects", "getBucketName", "getObjectName", "getKmsKeyName", "apply", "getMediaHttpUploader", "setProgressListener", "setDirectUploadEnabled", "getMediaHttpUploader", "isDirectUploadEnabled", "getObjectName"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}