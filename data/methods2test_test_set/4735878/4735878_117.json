{"test_class": {"identifier": "PointSymbolizerTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/core-map/src/test/java/org/orbisgis/coremap/renderer/se/PointSymbolizerTest.java"}, "test_case": {"identifier": "testDefaultSymbolizer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n        public void testDefaultSymbolizer() throws ParameterException {\n                PointSymbolizer ps = new PointSymbolizer();\n                MarkGraphic mg = (MarkGraphic) ps.getGraphicCollection().getGraphic(0);\n                assertTrue(mg.getWkn().getValue(null, 0).equalsIgnoreCase(\"circle\"));\n                assertTrue(mg.getViewBox().getWidth().getValue(null, 0) == 3.0);\n                assertTrue(mg.getUom() == Uom.MM);\n                //We're dealing with the default symbolizer, so we obtain a MarKgraphic\n                //where the UOM has been set to MM. Consequently, even if not\n                //set from here, the own Uom of the MarkGraphic is not null.\n                assertNotNull(mg.getOwnUom());\n        }", "signature": "void testDefaultSymbolizer()", "full_signature": "@Test public void testDefaultSymbolizer()", "class_method_signature": "PointSymbolizerTest.testDefaultSymbolizer()", "testcase": true, "constructor": false, "invocations": ["getGraphic", "getGraphicCollection", "assertTrue", "equalsIgnoreCase", "getValue", "getWkn", "assertTrue", "getValue", "getWidth", "getViewBox", "assertTrue", "getUom", "assertNotNull", "getOwnUom"]}, "focal_class": {"identifier": "PointSymbolizer", "superclass": "extends VectorSymbolizer", "interfaces": "implements GraphicNode", "fields": [{"original_string": "private static final I18n I18N = I18nFactory.getI18n(PointSymbolizer.class);", "modifier": "private static final", "type": "I18n", "declarator": "I18N = I18nFactory.getI18n(PointSymbolizer.class)", "var_name": "I18N"}, {"original_string": "private static final String MODE_VERTEX = \"vertex\";", "modifier": "private static final", "type": "String", "declarator": "MODE_VERTEX = \"vertex\"", "var_name": "MODE_VERTEX"}, {"original_string": "private GraphicCollection graphic;", "modifier": "private", "type": "GraphicCollection", "declarator": "graphic", "var_name": "graphic"}, {"original_string": "private boolean onVertex;", "modifier": "private", "type": "boolean", "declarator": "onVertex", "var_name": "onVertex"}], "methods": [{"identifier": "PointSymbolizer", "parameters": "()", "modifiers": "public", "return": "", "signature": " PointSymbolizer()", "full_signature": "public  PointSymbolizer()", "class_method_signature": "PointSymbolizer.PointSymbolizer()", "testcase": false, "constructor": true}, {"identifier": "PointSymbolizer", "parameters": "(JAXBElement<PointSymbolizerType> st)", "modifiers": "public", "return": "", "signature": " PointSymbolizer(JAXBElement<PointSymbolizerType> st)", "full_signature": "public  PointSymbolizer(JAXBElement<PointSymbolizerType> st)", "class_method_signature": "PointSymbolizer.PointSymbolizer(JAXBElement<PointSymbolizerType> st)", "testcase": false, "constructor": true}, {"identifier": "getGraphicCollection", "parameters": "()", "modifiers": "@Override public", "return": "GraphicCollection", "signature": "GraphicCollection getGraphicCollection()", "full_signature": "@Override public GraphicCollection getGraphicCollection()", "class_method_signature": "PointSymbolizer.getGraphicCollection()", "testcase": false, "constructor": false}, {"identifier": "setGraphicCollection", "parameters": "(GraphicCollection graphic)", "modifiers": "@Override public", "return": "void", "signature": "void setGraphicCollection(GraphicCollection graphic)", "full_signature": "@Override public void setGraphicCollection(GraphicCollection graphic)", "class_method_signature": "PointSymbolizer.setGraphicCollection(GraphicCollection graphic)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, ResultSet rs, long fid,\n            boolean selected, MapTransform mt, Geometry the_geom)", "modifiers": "@Override public", "return": "void", "signature": "void draw(Graphics2D g2, ResultSet rs, long fid,\n            boolean selected, MapTransform mt, Geometry the_geom)", "full_signature": "@Override public void draw(Graphics2D g2, ResultSet rs, long fid,\n            boolean selected, MapTransform mt, Geometry the_geom)", "class_method_signature": "PointSymbolizer.draw(Graphics2D g2, ResultSet rs, long fid,\n            boolean selected, MapTransform mt, Geometry the_geom)", "testcase": false, "constructor": false}, {"identifier": "getJAXBElement", "parameters": "()", "modifiers": "@Override public", "return": "JAXBElement<PointSymbolizerType>", "signature": "JAXBElement<PointSymbolizerType> getJAXBElement()", "full_signature": "@Override public JAXBElement<PointSymbolizerType> getJAXBElement()", "class_method_signature": "PointSymbolizer.getJAXBElement()", "testcase": false, "constructor": false}, {"identifier": "isOnVertex", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOnVertex()", "full_signature": "public boolean isOnVertex()", "class_method_signature": "PointSymbolizer.isOnVertex()", "testcase": false, "constructor": false}, {"identifier": "setOnVertex", "parameters": "(boolean onVertex)", "modifiers": "public", "return": "void", "signature": "void setOnVertex(boolean onVertex)", "full_signature": "public void setOnVertex(boolean onVertex)", "class_method_signature": "PointSymbolizer.setOnVertex(boolean onVertex)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<SymbolizerNode>", "signature": "List<SymbolizerNode> getChildren()", "full_signature": "@Override public List<SymbolizerNode> getChildren()", "class_method_signature": "PointSymbolizer.getChildren()", "testcase": false, "constructor": false}], "file": "bundles/core-map/src/main/java/org/orbisgis/coremap/renderer/se/PointSymbolizer.java"}, "focal_method": {"identifier": "getGraphicCollection", "parameters": "()", "modifiers": "@Override public", "return": "GraphicCollection", "body": "@Override\n    public GraphicCollection getGraphicCollection() {\n        return graphic;\n    }", "signature": "GraphicCollection getGraphicCollection()", "full_signature": "@Override public GraphicCollection getGraphicCollection()", "class_method_signature": "PointSymbolizer.getGraphicCollection()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}