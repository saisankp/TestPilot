{"test_class": {"identifier": "TranslationTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TranslationTable translationTable;", "modifier": "private", "type": "TranslationTable", "declarator": "translationTable", "var_name": "translationTable"}, {"original_string": "private List<GlyphPair> testHomoglyphPairs;", "modifier": "private", "type": "List<GlyphPair>", "declarator": "testHomoglyphPairs", "var_name": "testHomoglyphPairs"}], "file": "extra-analysis-homoglyph/src/test/java/org/wikimedia/search/extra/analysis/homoglyph/TranslationTableTest.java"}, "test_case": {"identifier": "testSortOrderScriptOneToScriptTwo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSortOrderScriptOneToScriptTwo() {\n        List<GlyphPair> actual = translationTable.scriptOneToScriptTwoList(testHomoglyphPairs);\n        List<GlyphPair> expected = asList(\n                new GlyphPair(\"ab\", \"cd\"),\n                new GlyphPair(\"hi\", \"j\"),\n                new GlyphPair(\"e\", \"fg\"),\n                new GlyphPair(\"k\", \"l\")\n        );\n        assertEquals(expected.toString(), actual.toString());\n    }", "signature": "void testSortOrderScriptOneToScriptTwo()", "full_signature": "@Test public void testSortOrderScriptOneToScriptTwo()", "class_method_signature": "TranslationTableTest.testSortOrderScriptOneToScriptTwo()", "testcase": true, "constructor": false, "invocations": ["scriptOneToScriptTwoList", "asList", "assertEquals", "toString", "toString"]}, "focal_class": {"identifier": "TranslationTable", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Comparator<GlyphPair> sortByLength = Comparator.comparingInt(gp -> gp.getOriginal().length());", "modifier": "private static final", "type": "Comparator<GlyphPair>", "declarator": "sortByLength = Comparator.comparingInt(gp -> gp.getOriginal().length())", "var_name": "sortByLength"}, {"original_string": "private static final Comparator<GlyphPair> sortByNaturalOrder = Comparator.comparing(GlyphPair::getOriginal);", "modifier": "private static final", "type": "Comparator<GlyphPair>", "declarator": "sortByNaturalOrder = Comparator.comparing(GlyphPair::getOriginal)", "var_name": "sortByNaturalOrder"}, {"original_string": "private final List<GlyphPair> scriptOneToScriptTwo;", "modifier": "private final", "type": "List<GlyphPair>", "declarator": "scriptOneToScriptTwo", "var_name": "scriptOneToScriptTwo"}, {"original_string": "private final List<GlyphPair> scriptTwoToScriptOne;", "modifier": "private final", "type": "List<GlyphPair>", "declarator": "scriptTwoToScriptOne", "var_name": "scriptTwoToScriptOne"}, {"original_string": "private final Pattern script1Reg;", "modifier": "private final", "type": "Pattern", "declarator": "script1Reg", "var_name": "script1Reg"}, {"original_string": "private final Pattern script2Reg;", "modifier": "private final", "type": "Pattern", "declarator": "script2Reg", "var_name": "script2Reg"}], "methods": [{"identifier": "TranslationTable", "parameters": "(Pattern script1Reg, Pattern script2Reg, List<GlyphPair> homoglyphPairs)", "modifiers": "public", "return": "", "signature": " TranslationTable(Pattern script1Reg, Pattern script2Reg, List<GlyphPair> homoglyphPairs)", "full_signature": "public  TranslationTable(Pattern script1Reg, Pattern script2Reg, List<GlyphPair> homoglyphPairs)", "class_method_signature": "TranslationTable.TranslationTable(Pattern script1Reg, Pattern script2Reg, List<GlyphPair> homoglyphPairs)", "testcase": false, "constructor": true}, {"identifier": "scriptOneToScriptTwoList", "parameters": "(List<GlyphPair> homoglyphPairs)", "modifiers": "@VisibleForTesting @SuppressFBWarnings(value = \"OCP_OVERLY_CONCRETE_PARAMETER\", justification = \"glyph order is semantically important\") public final", "return": "List<GlyphPair>", "signature": "List<GlyphPair> scriptOneToScriptTwoList(List<GlyphPair> homoglyphPairs)", "full_signature": "@VisibleForTesting @SuppressFBWarnings(value = \"OCP_OVERLY_CONCRETE_PARAMETER\", justification = \"glyph order is semantically important\") public final List<GlyphPair> scriptOneToScriptTwoList(List<GlyphPair> homoglyphPairs)", "class_method_signature": "TranslationTable.scriptOneToScriptTwoList(List<GlyphPair> homoglyphPairs)", "testcase": false, "constructor": false}, {"identifier": "scriptTwoToScriptOneList", "parameters": "(List<GlyphPair> homoglyphPairs)", "modifiers": "@VisibleForTesting @SuppressFBWarnings(value = \"OCP_OVERLY_CONCRETE_PARAMETER\", justification = \"glyph order is semantically important\") public final", "return": "List<GlyphPair>", "signature": "List<GlyphPair> scriptTwoToScriptOneList(List<GlyphPair> homoglyphPairs)", "full_signature": "@VisibleForTesting @SuppressFBWarnings(value = \"OCP_OVERLY_CONCRETE_PARAMETER\", justification = \"glyph order is semantically important\") public final List<GlyphPair> scriptTwoToScriptOneList(List<GlyphPair> homoglyphPairs)", "class_method_signature": "TranslationTable.scriptTwoToScriptOneList(List<GlyphPair> homoglyphPairs)", "testcase": false, "constructor": false}, {"identifier": "replaceScriptOne", "parameters": "(StringBuilder scriptOne)", "modifiers": "public", "return": "void", "signature": "void replaceScriptOne(StringBuilder scriptOne)", "full_signature": "public void replaceScriptOne(StringBuilder scriptOne)", "class_method_signature": "TranslationTable.replaceScriptOne(StringBuilder scriptOne)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(StringBuilder scriptToTranslate, List<GlyphPair> scriptList)", "modifiers": "private", "return": "void", "signature": "void translate(StringBuilder scriptToTranslate, List<GlyphPair> scriptList)", "full_signature": "private void translate(StringBuilder scriptToTranslate, List<GlyphPair> scriptList)", "class_method_signature": "TranslationTable.translate(StringBuilder scriptToTranslate, List<GlyphPair> scriptList)", "testcase": false, "constructor": false}, {"identifier": "replaceScriptTwo", "parameters": "(StringBuilder scriptTwo)", "modifiers": "public", "return": "void", "signature": "void replaceScriptTwo(StringBuilder scriptTwo)", "full_signature": "public void replaceScriptTwo(StringBuilder scriptTwo)", "class_method_signature": "TranslationTable.replaceScriptTwo(StringBuilder scriptTwo)", "testcase": false, "constructor": false}, {"identifier": "getScript1Reg", "parameters": "()", "modifiers": "public", "return": "Pattern", "signature": "Pattern getScript1Reg()", "full_signature": "public Pattern getScript1Reg()", "class_method_signature": "TranslationTable.getScript1Reg()", "testcase": false, "constructor": false}, {"identifier": "getScript2Reg", "parameters": "()", "modifiers": "public", "return": "Pattern", "signature": "Pattern getScript2Reg()", "full_signature": "public Pattern getScript2Reg()", "class_method_signature": "TranslationTable.getScript2Reg()", "testcase": false, "constructor": false}], "file": "extra-analysis-homoglyph/src/main/java/org/wikimedia/search/extra/analysis/homoglyph/TranslationTable.java"}, "focal_method": {"identifier": "scriptOneToScriptTwoList", "parameters": "(List<GlyphPair> homoglyphPairs)", "modifiers": "@VisibleForTesting @SuppressFBWarnings(value = \"OCP_OVERLY_CONCRETE_PARAMETER\", justification = \"glyph order is semantically important\") public final", "return": "List<GlyphPair>", "body": "@VisibleForTesting\n    @SuppressFBWarnings(value = \"OCP_OVERLY_CONCRETE_PARAMETER\", justification = \"glyph order is semantically important\")\n    public final List<GlyphPair> scriptOneToScriptTwoList(List<GlyphPair> homoglyphPairs) {\n        return homoglyphPairs.stream()\n                .sorted(sortByLength.reversed().thenComparing(sortByNaturalOrder))\n                .collect(toList());\n    }", "signature": "List<GlyphPair> scriptOneToScriptTwoList(List<GlyphPair> homoglyphPairs)", "full_signature": "@VisibleForTesting @SuppressFBWarnings(value = \"OCP_OVERLY_CONCRETE_PARAMETER\", justification = \"glyph order is semantically important\") public final List<GlyphPair> scriptOneToScriptTwoList(List<GlyphPair> homoglyphPairs)", "class_method_signature": "TranslationTable.scriptOneToScriptTwoList(List<GlyphPair> homoglyphPairs)", "testcase": false, "constructor": false, "invocations": ["collect", "sorted", "stream", "thenComparing", "reversed", "toList"]}, "repository": {"repo_id": 24474053, "url": "https://github.com/wikimedia/search-extra", "stars": 37, "created": "9/25/2014 8:26:03 PM +00:00", "updates": "2019-12-06T15:10:34+00:00", "fork": "False", "license": "licensed"}}