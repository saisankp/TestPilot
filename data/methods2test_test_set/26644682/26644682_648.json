{"test_class": {"identifier": "SetStepRowMetadataTest", "superclass": "extends Base_2_1_0_PE_Test", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private SetStepRowMetadata task;", "modifier": "@InjectMocks\n    private", "type": "SetStepRowMetadata", "declarator": "task", "var_name": "task"}, {"original_string": "@Mock\n    private PreparationRepository repository;", "modifier": "@Mock\n    private", "type": "PreparationRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Mock\n    private TransformationService service;", "modifier": "@Mock\n    private", "type": "TransformationService", "declarator": "service", "var_name": "service"}, {"original_string": "@Mock\n    private FolderRepository folderRepository;", "modifier": "@Mock\n    private", "type": "FolderRepository", "declarator": "folderRepository", "var_name": "folderRepository"}, {"original_string": "private List<PersistentPreparation> preparations;", "modifier": "private", "type": "List<PersistentPreparation>", "declarator": "preparations", "var_name": "preparations"}], "file": "dataprep-upgrade/src/test/java/org/talend/dataprep/upgrade/to_2_1_0_PE/SetStepRowMetadataTest.java"}, "test_case": {"identifier": "shouldUpdateStepRowMetadataForEachPersistentPreparation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUpdateStepRowMetadataForEachPersistentPreparation() throws Exception {\n        // given\n        when(folderRepository.locateEntry(any(), any())).thenReturn(mock(Folder.class));\n        when(service.execute(any(ExportParameters.class))).thenReturn(mock(StreamingResponseBody.class));\n\n        // when\n        task.run();\n\n        // then\n        verify(service, times(preparations.size())).execute(any());\n    }", "signature": "void shouldUpdateStepRowMetadataForEachPersistentPreparation()", "full_signature": "@Test public void shouldUpdateStepRowMetadataForEachPersistentPreparation()", "class_method_signature": "SetStepRowMetadataTest.shouldUpdateStepRowMetadataForEachPersistentPreparation()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "locateEntry", "any", "any", "mock", "thenReturn", "when", "execute", "any", "mock", "run", "execute", "verify", "times", "size", "any"]}, "focal_class": {"identifier": "SetStepRowMetadata", "superclass": "", "interfaces": "implements BaseUpgradeTaskTo_2_1_0_PE", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SetStepRowMetadata.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SetStepRowMetadata.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private PreparationRepository repository;", "modifier": "@Autowired\n    private", "type": "PreparationRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Autowired\n    private TransformationService service;", "modifier": "@Autowired\n    private", "type": "TransformationService", "declarator": "service", "var_name": "service"}, {"original_string": "@Autowired\n    private FolderRepository folderRepository;", "modifier": "@Autowired\n    private", "type": "FolderRepository", "declarator": "folderRepository", "var_name": "folderRepository"}], "methods": [{"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "SetStepRowMetadata.run()", "testcase": false, "constructor": false}, {"identifier": "setStepRowMetadata", "parameters": "(PersistentPreparation preparation, AtomicLong currentProcessingNumber, long total)", "modifiers": "private", "return": "void", "signature": "void setStepRowMetadata(PersistentPreparation preparation, AtomicLong currentProcessingNumber, long total)", "full_signature": "private void setStepRowMetadata(PersistentPreparation preparation, AtomicLong currentProcessingNumber, long total)", "class_method_signature": "SetStepRowMetadata.setStepRowMetadata(PersistentPreparation preparation, AtomicLong currentProcessingNumber, long total)", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override public int getOrder()", "class_method_signature": "SetStepRowMetadata.getOrder()", "testcase": false, "constructor": false}, {"identifier": "getTarget", "parameters": "()", "modifiers": "@Override public", "return": "UpgradeTask.target", "signature": "UpgradeTask.target getTarget()", "full_signature": "@Override public UpgradeTask.target getTarget()", "class_method_signature": "SetStepRowMetadata.getTarget()", "testcase": false, "constructor": false}], "file": "dataprep-upgrade/src/main/java/org/talend/dataprep/upgrade/to_2_1_0_PE/SetStepRowMetadata.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run() {\n\n        final AtomicLong current = new AtomicLong(0);\n        final long count = repository.list(PersistentPreparation.class).count();\n        LOGGER.info(\"Starting a potentially long migration task, there are {} preparations to process\", count);\n        repository.list(PersistentPreparation.class).forEach(p -> setStepRowMetadata(p, current, count));\n        LOGGER.info(\"Finished setting up row metadata in preparation steps\");\n    }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "SetStepRowMetadata.run()", "testcase": false, "constructor": false, "invocations": ["count", "list", "info", "forEach", "list", "setStepRowMetadata", "info"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}