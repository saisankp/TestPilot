{"test_class": {"identifier": "MetadataTest", "superclass": "", "interfaces": "", "fields": [], "file": "kb-importer/src/test/java/org/eclipse/steady/kb/util/MetadataTest.java"}, "test_case": {"identifier": "testGetCommitMetadata", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetCommitMetadata() throws JsonSyntaxException, IOException {\n    ClassLoader classLoader = getClass().getClassLoader();\n    String path = classLoader.getResource(\"commitDir1\").getPath();\n    Commit commit = Metadata.getCommitMetadata(path);\n    assertEquals(\"master\", commit.getBranch());\n    assertEquals(\"b2b8f4adc557e4ef1ee2fe5e0ab46866c06ec55b\", commit.getCommitId());\n    assertEquals(\"1447974481000\", commit.getTimestamp());\n    assertEquals(\"https://github.com/apache/commons-collections\", commit.getRepoUrl());\n    assertEquals(path, commit.getDirectory());\n  }", "signature": "void testGetCommitMetadata()", "full_signature": "@Test public void testGetCommitMetadata()", "class_method_signature": "MetadataTest.testGetCommitMetadata()", "testcase": true, "constructor": false, "invocations": ["getClassLoader", "getClass", "getPath", "getResource", "getCommitMetadata", "assertEquals", "getBranch", "assertEquals", "getCommitId", "assertEquals", "getTimestamp", "assertEquals", "getRepoUrl", "assertEquals", "getDirectory"]}, "focal_class": {"identifier": "Metadata", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String META_PROPERTIES_FILE = \"metadata.json\";", "modifier": "private static final", "type": "String", "declarator": "META_PROPERTIES_FILE = \"metadata.json\"", "var_name": "META_PROPERTIES_FILE"}, {"original_string": "private static final Logger log = org.apache.logging.log4j.LogManager.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = org.apache.logging.log4j.LogManager.getLogger()", "var_name": "log"}], "methods": [{"identifier": "getCommitMetadata", "parameters": "(String commitDir)", "modifiers": "public static", "return": "Commit", "signature": "Commit getCommitMetadata(String commitDir)", "full_signature": "public static Commit getCommitMetadata(String commitDir)", "class_method_signature": "Metadata.getCommitMetadata(String commitDir)", "testcase": false, "constructor": false}, {"identifier": "getVulnerabilityMetadata", "parameters": "(String rootDir)", "modifiers": "public static", "return": "Vulnerability", "signature": "Vulnerability getVulnerabilityMetadata(String rootDir)", "full_signature": "public static Vulnerability getVulnerabilityMetadata(String rootDir)", "class_method_signature": "Metadata.getVulnerabilityMetadata(String rootDir)", "testcase": false, "constructor": false}], "file": "kb-importer/src/main/java/org/eclipse/steady/kb/util/Metadata.java"}, "focal_method": {"identifier": "getCommitMetadata", "parameters": "(String commitDir)", "modifiers": "public static", "return": "Commit", "body": "public static Commit getCommitMetadata(String commitDir) throws JsonSyntaxException, IOException {\n    String filePath = commitDir + File.separator + META_PROPERTIES_FILE;\n    if (!FileUtil.isAccessibleFile(filePath)) {\n      log.error(\n          \"The commit folder {} or the meta file is missing {} in commit folder\",\n          commitDir,\n          filePath);\n      return null;\n    }\n\n    Gson gson = new Gson();\n    Commit metadata = null;\n    metadata = gson.fromJson(FileUtil.readFile(filePath), Commit.class);\n    metadata.setDirectory(commitDir);\n    return metadata;\n  }", "signature": "Commit getCommitMetadata(String commitDir)", "full_signature": "public static Commit getCommitMetadata(String commitDir)", "class_method_signature": "Metadata.getCommitMetadata(String commitDir)", "testcase": false, "constructor": false, "invocations": ["isAccessibleFile", "error", "fromJson", "readFile", "setDirectory"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}