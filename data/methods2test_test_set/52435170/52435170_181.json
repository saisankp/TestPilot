{"test_class": {"identifier": "JpaUnitTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private TestClassDecorator firstClassDecorator;", "modifier": "@Mock\n    private", "type": "TestClassDecorator", "declarator": "firstClassDecorator", "var_name": "firstClassDecorator"}, {"original_string": "@Mock\n    private TestClassDecorator secondClassDecorator;", "modifier": "@Mock\n    private", "type": "TestClassDecorator", "declarator": "secondClassDecorator", "var_name": "secondClassDecorator"}, {"original_string": "@Mock\n    private TestMethodDecorator firstMethodDecorator;", "modifier": "@Mock\n    private", "type": "TestMethodDecorator", "declarator": "firstMethodDecorator", "var_name": "firstMethodDecorator"}, {"original_string": "@Mock\n    private TestMethodDecorator secondMethodDecorator;", "modifier": "@Mock\n    private", "type": "TestMethodDecorator", "declarator": "secondMethodDecorator", "var_name": "secondMethodDecorator"}, {"original_string": "@Mock\n    private ExtensionContext context;", "modifier": "@Mock\n    private", "type": "ExtensionContext", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n    private JpaUnitContext jpaUnitContext;", "modifier": "@Mock\n    private", "type": "JpaUnitContext", "declarator": "jpaUnitContext", "var_name": "jpaUnitContext"}, {"original_string": "private final Class<?> testClass = getClass();", "modifier": "private final", "type": "Class<?>", "declarator": "testClass = getClass()", "var_name": "testClass"}], "file": "junit5-extension/src/test/java/eu/drus/jpa/unit/api/JpaUnitTest.java"}, "test_case": {"identifier": "testBeforeEachTestDecoratorExecutionOrder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBeforeEachTestDecoratorExecutionOrder() throws Exception {\n        // GIVEN\n        final JpaUnit unit = new JpaUnit();\n\n        // WHEN\n        unit.beforeEach(context);\n\n        // THEN\n        final InOrder order = inOrder(firstMethodDecorator, secondMethodDecorator);\n        order.verify(firstMethodDecorator).beforeTest(notNull(TestInvocation.class));\n        order.verify(secondMethodDecorator).beforeTest(notNull(TestInvocation.class));\n        verifyZeroInteractions(firstClassDecorator, secondClassDecorator);\n    }", "signature": "void testBeforeEachTestDecoratorExecutionOrder()", "full_signature": "@Test public void testBeforeEachTestDecoratorExecutionOrder()", "class_method_signature": "JpaUnitTest.testBeforeEachTestDecoratorExecutionOrder()", "testcase": true, "constructor": false, "invocations": ["beforeEach", "inOrder", "beforeTest", "verify", "notNull", "beforeTest", "verify", "notNull", "verifyZeroInteractions"]}, "focal_class": {"identifier": "JpaUnit", "superclass": "", "interfaces": "implements BeforeAllCallback, AfterAllCallback, BeforeEachCallback, AfterEachCallback", "fields": [{"original_string": "private final DecoratorExecutor executor = new DecoratorExecutor();", "modifier": "private final", "type": "DecoratorExecutor", "declarator": "executor = new DecoratorExecutor()", "var_name": "executor"}], "methods": [{"identifier": "beforeAll", "parameters": "(final ExtensionContext context)", "modifiers": "@Override public", "return": "void", "signature": "void beforeAll(final ExtensionContext context)", "full_signature": "@Override public void beforeAll(final ExtensionContext context)", "class_method_signature": "JpaUnit.beforeAll(final ExtensionContext context)", "testcase": false, "constructor": false}, {"identifier": "afterAll", "parameters": "(final ExtensionContext context)", "modifiers": "@Override public", "return": "void", "signature": "void afterAll(final ExtensionContext context)", "full_signature": "@Override public void afterAll(final ExtensionContext context)", "class_method_signature": "JpaUnit.afterAll(final ExtensionContext context)", "testcase": false, "constructor": false}, {"identifier": "beforeEach", "parameters": "(final ExtensionContext context)", "modifiers": "@Override public", "return": "void", "signature": "void beforeEach(final ExtensionContext context)", "full_signature": "@Override public void beforeEach(final ExtensionContext context)", "class_method_signature": "JpaUnit.beforeEach(final ExtensionContext context)", "testcase": false, "constructor": false}, {"identifier": "afterEach", "parameters": "(final ExtensionContext context)", "modifiers": "@Override public", "return": "void", "signature": "void afterEach(final ExtensionContext context)", "full_signature": "@Override public void afterEach(final ExtensionContext context)", "class_method_signature": "JpaUnit.afterEach(final ExtensionContext context)", "testcase": false, "constructor": false}, {"identifier": "createTestMethodInvocation", "parameters": "(final ExtensionContext context, final boolean considerExceptions)", "modifiers": "private", "return": "TestInvocation", "signature": "TestInvocation createTestMethodInvocation(final ExtensionContext context, final boolean considerExceptions)", "full_signature": "private TestInvocation createTestMethodInvocation(final ExtensionContext context, final boolean considerExceptions)", "class_method_signature": "JpaUnit.createTestMethodInvocation(final ExtensionContext context, final boolean considerExceptions)", "testcase": false, "constructor": false}], "file": "junit5-extension/src/main/java/eu/drus/jpa/unit/api/JpaUnit.java"}, "focal_method": {"identifier": "beforeEach", "parameters": "(final ExtensionContext context)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void beforeEach(final ExtensionContext context) throws Exception {\n        executor.processBefore(createTestMethodInvocation(context, true));\n    }", "signature": "void beforeEach(final ExtensionContext context)", "full_signature": "@Override public void beforeEach(final ExtensionContext context)", "class_method_signature": "JpaUnit.beforeEach(final ExtensionContext context)", "testcase": false, "constructor": false, "invocations": ["processBefore", "createTestMethodInvocation"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}