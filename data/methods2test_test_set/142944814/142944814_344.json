{"test_class": {"identifier": "CreateNamePayloadConverterTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/common/src/test/java/hera/api/transaction/CreateNamePayloadConverterTest.java"}, "test_case": {"identifier": "testConvertToPayload", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConvertToPayload() {\n    final PayloadConverter<CreateName> converter = new CreateNamePayloadConverter();\n    final CreateName createName = CreateName.newBuilder()\n        .name(Name.of(randomUUID().toString()))\n        .build();\n    final BytesValue payload = converter.convertToPayload(createName);\n    assertNotNull(payload);\n  }", "signature": "void testConvertToPayload()", "full_signature": "@Test public void testConvertToPayload()", "class_method_signature": "CreateNamePayloadConverterTest.testConvertToPayload()", "testcase": true, "constructor": false, "invocations": ["build", "name", "newBuilder", "of", "toString", "randomUUID", "convertToPayload", "assertNotNull"]}, "focal_class": {"identifier": "CreateNamePayloadConverter", "superclass": "", "interfaces": "implements PayloadConverter<CreateName>", "fields": [{"original_string": "protected final Logger logger = getLogger(getClass());", "modifier": "protected final", "type": "Logger", "declarator": "logger = getLogger(getClass())", "var_name": "logger"}, {"original_string": "protected final JsonMapper mapper = new AergoJsonMapper();", "modifier": "protected final", "type": "JsonMapper", "declarator": "mapper = new AergoJsonMapper()", "var_name": "mapper"}], "methods": [{"identifier": "convertToPayload", "parameters": "(final CreateName createName)", "modifiers": "@Override public", "return": "BytesValue", "signature": "BytesValue convertToPayload(final CreateName createName)", "full_signature": "@Override public BytesValue convertToPayload(final CreateName createName)", "class_method_signature": "CreateNamePayloadConverter.convertToPayload(final CreateName createName)", "testcase": false, "constructor": false}, {"identifier": "parseToModel", "parameters": "(final BytesValue payload)", "modifiers": "@Override public", "return": "CreateName", "signature": "CreateName parseToModel(final BytesValue payload)", "full_signature": "@Override public CreateName parseToModel(final BytesValue payload)", "class_method_signature": "CreateNamePayloadConverter.parseToModel(final BytesValue payload)", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/hera/api/transaction/CreateNamePayloadConverter.java"}, "focal_method": {"identifier": "convertToPayload", "parameters": "(final CreateName createName)", "modifiers": "@Override public", "return": "BytesValue", "body": "@Override\n  public BytesValue convertToPayload(final CreateName createName) {\n    logger.debug(\"Convert to payload from {}\", createName);\n    final List<Object> args = new ArrayList<>();\n    args.add(createName.getName().getValue());\n    final Map<String, Object> map = new HashMap<>();\n    map.put(\"Name\", createName.getOperationName());\n    map.put(\"Args\", args);\n    return mapper.marshal(map);\n  }", "signature": "BytesValue convertToPayload(final CreateName createName)", "full_signature": "@Override public BytesValue convertToPayload(final CreateName createName)", "class_method_signature": "CreateNamePayloadConverter.convertToPayload(final CreateName createName)", "testcase": false, "constructor": false, "invocations": ["debug", "add", "getValue", "getName", "put", "getOperationName", "put", "marshal"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}