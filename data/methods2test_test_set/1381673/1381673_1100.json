{"test_class": {"identifier": "KiePMMLSimpleSetPredicateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String SIMPLE_SET_PREDICATE_NAME = \"SIMPLESETPREDICATENAME\";", "modifier": "private final", "type": "String", "declarator": "SIMPLE_SET_PREDICATE_NAME = \"SIMPLESETPREDICATENAME\"", "var_name": "SIMPLE_SET_PREDICATE_NAME"}], "file": "kie-pmml-trusty/kie-pmml-commons/src/test/java/org/kie/pmml/commons/model/predicates/KiePMMLSimpleSetPredicateTest.java"}, "test_case": {"identifier": "evaluationIntIn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void evaluationIntIn() {\n        ARRAY_TYPE arrayType = ARRAY_TYPE.INT;\n        List<Object> values = getObjects(arrayType, 1);\n        KiePMMLSimpleSetPredicate kiePMMLSimpleSetPredicate = getKiePMMLSimpleSetPredicate(values, arrayType,\n                                                                                           IN_NOTIN.IN);\n        assertFalse(kiePMMLSimpleSetPredicate.evaluation(\"234\"));\n        assertTrue(kiePMMLSimpleSetPredicate.evaluation(values.get(0)));\n    }", "signature": "void evaluationIntIn()", "full_signature": "@Test public void evaluationIntIn()", "class_method_signature": "KiePMMLSimpleSetPredicateTest.evaluationIntIn()", "testcase": true, "constructor": false, "invocations": ["getObjects", "getKiePMMLSimpleSetPredicate", "assertFalse", "evaluation", "assertTrue", "evaluation", "get"]}, "focal_class": {"identifier": "KiePMMLSimpleSetPredicate", "superclass": "extends KiePMMLPredicate", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(KiePMMLSimpleSetPredicate.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KiePMMLSimpleSetPredicate.class)", "var_name": "logger"}, {"original_string": "private final ARRAY_TYPE arrayType;", "modifier": "private final", "type": "ARRAY_TYPE", "declarator": "arrayType", "var_name": "arrayType"}, {"original_string": "private final IN_NOTIN inNotIn;", "modifier": "private final", "type": "IN_NOTIN", "declarator": "inNotIn", "var_name": "inNotIn"}, {"original_string": "protected List<Object> values;", "modifier": "protected", "type": "List<Object>", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "KiePMMLSimpleSetPredicate", "parameters": "(final String name, final List<KiePMMLExtension> extensions, final ARRAY_TYPE arrayType, final IN_NOTIN inNotIn)", "modifiers": "protected", "return": "", "signature": " KiePMMLSimpleSetPredicate(final String name, final List<KiePMMLExtension> extensions, final ARRAY_TYPE arrayType, final IN_NOTIN inNotIn)", "full_signature": "protected  KiePMMLSimpleSetPredicate(final String name, final List<KiePMMLExtension> extensions, final ARRAY_TYPE arrayType, final IN_NOTIN inNotIn)", "class_method_signature": "KiePMMLSimpleSetPredicate.KiePMMLSimpleSetPredicate(final String name, final List<KiePMMLExtension> extensions, final ARRAY_TYPE arrayType, final IN_NOTIN inNotIn)", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "(final String name, final List<KiePMMLExtension> extensions, final ARRAY_TYPE arrayType, final IN_NOTIN inNotIn)", "modifiers": "public static", "return": "Builder", "signature": "Builder builder(final String name, final List<KiePMMLExtension> extensions, final ARRAY_TYPE arrayType, final IN_NOTIN inNotIn)", "full_signature": "public static Builder builder(final String name, final List<KiePMMLExtension> extensions, final ARRAY_TYPE arrayType, final IN_NOTIN inNotIn)", "class_method_signature": "KiePMMLSimpleSetPredicate.builder(final String name, final List<KiePMMLExtension> extensions, final ARRAY_TYPE arrayType, final IN_NOTIN inNotIn)", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(Map<String, Object> values)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean evaluate(Map<String, Object> values)", "full_signature": "@Override public boolean evaluate(Map<String, Object> values)", "class_method_signature": "KiePMMLSimpleSetPredicate.evaluate(Map<String, Object> values)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "KiePMMLSimpleSetPredicate.getName()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> getValues()", "full_signature": "public List<Object> getValues()", "class_method_signature": "KiePMMLSimpleSetPredicate.getValues()", "testcase": false, "constructor": false}, {"identifier": "getArrayType", "parameters": "()", "modifiers": "public", "return": "ARRAY_TYPE", "signature": "ARRAY_TYPE getArrayType()", "full_signature": "public ARRAY_TYPE getArrayType()", "class_method_signature": "KiePMMLSimpleSetPredicate.getArrayType()", "testcase": false, "constructor": false}, {"identifier": "getInNotIn", "parameters": "()", "modifiers": "public", "return": "IN_NOTIN", "signature": "IN_NOTIN getInNotIn()", "full_signature": "public IN_NOTIN getInNotIn()", "class_method_signature": "KiePMMLSimpleSetPredicate.getInNotIn()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "KiePMMLSimpleSetPredicate.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "KiePMMLSimpleSetPredicate.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "KiePMMLSimpleSetPredicate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "evaluation", "parameters": "(Object rawValue)", "modifiers": "protected", "return": "boolean", "signature": "boolean evaluation(Object rawValue)", "full_signature": "protected boolean evaluation(Object rawValue)", "class_method_signature": "KiePMMLSimpleSetPredicate.evaluation(Object rawValue)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-commons/src/main/java/org/kie/pmml/commons/model/predicates/KiePMMLSimpleSetPredicate.java"}, "focal_method": {"identifier": "evaluation", "parameters": "(Object rawValue)", "modifiers": "protected", "return": "boolean", "body": "protected boolean evaluation(Object rawValue) {\n        String stringValue = (String) ConverterTypeUtil.convert(String.class, rawValue);\n        Object convertedValue = arrayType.getValue(stringValue);\n        switch (inNotIn) {\n            case IN:\n                return values.contains(convertedValue);\n            case NOT_IN:\n                return !values.contains(convertedValue);\n            default:\n                throw new KiePMMLException(\"Unknown IN_NOTIN\" + inNotIn);\n        }\n    }", "signature": "boolean evaluation(Object rawValue)", "full_signature": "protected boolean evaluation(Object rawValue)", "class_method_signature": "KiePMMLSimpleSetPredicate.evaluation(Object rawValue)", "testcase": false, "constructor": false, "invocations": ["convert", "getValue", "contains", "contains"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}