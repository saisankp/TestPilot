{"test_class": {"identifier": "ArtifactHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/core/ArtifactHandlerTest.java"}, "test_case": {"identifier": "getTheOrganizationOfAnArtifactWhichIsInAModuleThatDoesNotHaveOrganization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getTheOrganizationOfAnArtifactWhichIsInAModuleThatDoesNotHaveOrganization(){\n        final DbArtifact artifact = new DbArtifact();\n        artifact.setArtifactId(\"test\");\n        artifact.setVersion(\"1.0.0-SNAPSHOT\");\n\n        final RepositoryHandler repositoryHandler = mock(RepositoryHandler.class);\n        when(repositoryHandler.getRootModuleOf(artifact.getGavc())).thenReturn(new DbModule());\n        final ArtifactHandler handler = new ArtifactHandler(repositoryHandler, mock(LicenseMatcher.class));\n\n        final DbOrganization organization = handler.getOrganization(artifact);\n\n        assertNull(organization);\n    }", "signature": "void getTheOrganizationOfAnArtifactWhichIsInAModuleThatDoesNotHaveOrganization()", "full_signature": "@Test public void getTheOrganizationOfAnArtifactWhichIsInAModuleThatDoesNotHaveOrganization()", "class_method_signature": "ArtifactHandlerTest.getTheOrganizationOfAnArtifactWhichIsInAModuleThatDoesNotHaveOrganization()", "testcase": true, "constructor": false, "invocations": ["setArtifactId", "setVersion", "mock", "thenReturn", "when", "getRootModuleOf", "getGavc", "mock", "getOrganization", "assertNull"]}, "focal_class": {"identifier": "ArtifactHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ArtifactHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ArtifactHandler.class)", "var_name": "LOG"}, {"original_string": "private final RepositoryHandler repositoryHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}, {"original_string": "private final LicenseMatcher licenseMatcher;", "modifier": "private final", "type": "LicenseMatcher", "declarator": "licenseMatcher", "var_name": "licenseMatcher"}], "methods": [{"identifier": "ArtifactHandler", "parameters": "(final RepositoryHandler repositoryHandler,\n                           final LicenseMatcher matcher)", "modifiers": "public", "return": "", "signature": " ArtifactHandler(final RepositoryHandler repositoryHandler,\n                           final LicenseMatcher matcher)", "full_signature": "public  ArtifactHandler(final RepositoryHandler repositoryHandler,\n                           final LicenseMatcher matcher)", "class_method_signature": "ArtifactHandler.ArtifactHandler(final RepositoryHandler repositoryHandler,\n                           final LicenseMatcher matcher)", "testcase": false, "constructor": true}, {"identifier": "store", "parameters": "(final DbArtifact dbArtifact)", "modifiers": "public", "return": "void", "signature": "void store(final DbArtifact dbArtifact)", "full_signature": "public void store(final DbArtifact dbArtifact)", "class_method_signature": "ArtifactHandler.store(final DbArtifact dbArtifact)", "testcase": false, "constructor": false}, {"identifier": "storeIfNew", "parameters": "(final DbArtifact fromClient)", "modifiers": "public", "return": "void", "signature": "void storeIfNew(final DbArtifact fromClient)", "full_signature": "public void storeIfNew(final DbArtifact fromClient)", "class_method_signature": "ArtifactHandler.storeIfNew(final DbArtifact fromClient)", "testcase": false, "constructor": false}, {"identifier": "addLicense", "parameters": "(final String gavc, final String licenseId)", "modifiers": "public", "return": "void", "signature": "void addLicense(final String gavc, final String licenseId)", "full_signature": "public void addLicense(final String gavc, final String licenseId)", "class_method_signature": "ArtifactHandler.addLicense(final String gavc, final String licenseId)", "testcase": false, "constructor": false}, {"identifier": "getArtifactGavcs", "parameters": "(final FiltersHolder filters)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getArtifactGavcs(final FiltersHolder filters)", "full_signature": "public List<String> getArtifactGavcs(final FiltersHolder filters)", "class_method_signature": "ArtifactHandler.getArtifactGavcs(final FiltersHolder filters)", "testcase": false, "constructor": false}, {"identifier": "getArtifactGroupIds", "parameters": "(final FiltersHolder filters)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getArtifactGroupIds(final FiltersHolder filters)", "full_signature": "public List<String> getArtifactGroupIds(final FiltersHolder filters)", "class_method_signature": "ArtifactHandler.getArtifactGroupIds(final FiltersHolder filters)", "testcase": false, "constructor": false}, {"identifier": "getArtifactVersions", "parameters": "(final String gavc)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getArtifactVersions(final String gavc)", "full_signature": "public List<String> getArtifactVersions(final String gavc)", "class_method_signature": "ArtifactHandler.getArtifactVersions(final String gavc)", "testcase": false, "constructor": false}, {"identifier": "getArtifactLastVersion", "parameters": "(final String gavc)", "modifiers": "public", "return": "String", "signature": "String getArtifactLastVersion(final String gavc)", "full_signature": "public String getArtifactLastVersion(final String gavc)", "class_method_signature": "ArtifactHandler.getArtifactLastVersion(final String gavc)", "testcase": false, "constructor": false}, {"identifier": "getArtifact", "parameters": "(final String gavc)", "modifiers": "public", "return": "DbArtifact", "signature": "DbArtifact getArtifact(final String gavc)", "full_signature": "public DbArtifact getArtifact(final String gavc)", "class_method_signature": "ArtifactHandler.getArtifact(final String gavc)", "testcase": false, "constructor": false}, {"identifier": "getArtifactUsingSHA256", "parameters": "(final String sha256)", "modifiers": "public", "return": "DbArtifact", "signature": "DbArtifact getArtifactUsingSHA256(final String sha256)", "full_signature": "public DbArtifact getArtifactUsingSHA256(final String sha256)", "class_method_signature": "ArtifactHandler.getArtifactUsingSHA256(final String sha256)", "testcase": false, "constructor": false}, {"identifier": "getModule", "parameters": "(final DbArtifact dbArtifact)", "modifiers": "public", "return": "DbModule", "signature": "DbModule getModule(final DbArtifact dbArtifact)", "full_signature": "public DbModule getModule(final DbArtifact dbArtifact)", "class_method_signature": "ArtifactHandler.getModule(final DbArtifact dbArtifact)", "testcase": false, "constructor": false}, {"identifier": "getOrganization", "parameters": "(final DbArtifact dbArtifact)", "modifiers": "public", "return": "DbOrganization", "signature": "DbOrganization getOrganization(final DbArtifact dbArtifact)", "full_signature": "public DbOrganization getOrganization(final DbArtifact dbArtifact)", "class_method_signature": "ArtifactHandler.getOrganization(final DbArtifact dbArtifact)", "testcase": false, "constructor": false}, {"identifier": "updateDownLoadUrl", "parameters": "(final String gavc, final String downLoadUrl)", "modifiers": "public", "return": "void", "signature": "void updateDownLoadUrl(final String gavc, final String downLoadUrl)", "full_signature": "public void updateDownLoadUrl(final String gavc, final String downLoadUrl)", "class_method_signature": "ArtifactHandler.updateDownLoadUrl(final String gavc, final String downLoadUrl)", "testcase": false, "constructor": false}, {"identifier": "updateProvider", "parameters": "(final String gavc, final String provider)", "modifiers": "public", "return": "void", "signature": "void updateProvider(final String gavc, final String provider)", "full_signature": "public void updateProvider(final String gavc, final String provider)", "class_method_signature": "ArtifactHandler.updateProvider(final String gavc, final String provider)", "testcase": false, "constructor": false}, {"identifier": "deleteArtifact", "parameters": "(final String gavc)", "modifiers": "public", "return": "void", "signature": "void deleteArtifact(final String gavc)", "full_signature": "public void deleteArtifact(final String gavc)", "class_method_signature": "ArtifactHandler.deleteArtifact(final String gavc)", "testcase": false, "constructor": false}, {"identifier": "updateDoNotUse", "parameters": "(final String gavc, final Boolean doNotUse)", "modifiers": "public", "return": "void", "signature": "void updateDoNotUse(final String gavc, final Boolean doNotUse)", "full_signature": "public void updateDoNotUse(final String gavc, final Boolean doNotUse)", "class_method_signature": "ArtifactHandler.updateDoNotUse(final String gavc, final Boolean doNotUse)", "testcase": false, "constructor": false}, {"identifier": "getAncestors", "parameters": "(final String gavc, final FiltersHolder filters)", "modifiers": "public", "return": "List<DbModule>", "signature": "List<DbModule> getAncestors(final String gavc, final FiltersHolder filters)", "full_signature": "public List<DbModule> getAncestors(final String gavc, final FiltersHolder filters)", "class_method_signature": "ArtifactHandler.getAncestors(final String gavc, final FiltersHolder filters)", "testcase": false, "constructor": false}, {"identifier": "getArtifactLicenses", "parameters": "(final String gavc, final FiltersHolder filters)", "modifiers": "public", "return": "List<DbLicense>", "signature": "List<DbLicense> getArtifactLicenses(final String gavc, final FiltersHolder filters)", "full_signature": "public List<DbLicense> getArtifactLicenses(final String gavc, final FiltersHolder filters)", "class_method_signature": "ArtifactHandler.getArtifactLicenses(final String gavc, final FiltersHolder filters)", "testcase": false, "constructor": false}, {"identifier": "addLicenseToArtifact", "parameters": "(final String gavc, final String licenseId)", "modifiers": "public", "return": "void", "signature": "void addLicenseToArtifact(final String gavc, final String licenseId)", "full_signature": "public void addLicenseToArtifact(final String gavc, final String licenseId)", "class_method_signature": "ArtifactHandler.addLicenseToArtifact(final String gavc, final String licenseId)", "testcase": false, "constructor": false}, {"identifier": "removeLicenseFromArtifact", "parameters": "(final String gavc, final String licenseId)", "modifiers": "public", "return": "void", "signature": "void removeLicenseFromArtifact(final String gavc, final String licenseId)", "full_signature": "public void removeLicenseFromArtifact(final String gavc, final String licenseId)", "class_method_signature": "ArtifactHandler.removeLicenseFromArtifact(final String gavc, final String licenseId)", "testcase": false, "constructor": false}, {"identifier": "getArtifacts", "parameters": "(final FiltersHolder filters)", "modifiers": "public", "return": "List<DbArtifact>", "signature": "List<DbArtifact> getArtifacts(final FiltersHolder filters)", "full_signature": "public List<DbArtifact> getArtifacts(final FiltersHolder filters)", "class_method_signature": "ArtifactHandler.getArtifacts(final FiltersHolder filters)", "testcase": false, "constructor": false}, {"identifier": "getModuleJenkinsJobInfo", "parameters": "(final DbArtifact dbArtifact)", "modifiers": "public", "return": "String", "signature": "String getModuleJenkinsJobInfo(final DbArtifact dbArtifact)", "full_signature": "public String getModuleJenkinsJobInfo(final DbArtifact dbArtifact)", "class_method_signature": "ArtifactHandler.getModuleJenkinsJobInfo(final DbArtifact dbArtifact)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/core/ArtifactHandler.java"}, "focal_method": {"identifier": "getOrganization", "parameters": "(final DbArtifact dbArtifact)", "modifiers": "public", "return": "DbOrganization", "body": "public DbOrganization getOrganization(final DbArtifact dbArtifact) {\n        final DbModule module = getModule(dbArtifact);\n\n        if(module == null || module.getOrganization() == null){\n            return null;\n        }\n\n        return repositoryHandler.getOrganization(module.getOrganization());\n    }", "signature": "DbOrganization getOrganization(final DbArtifact dbArtifact)", "full_signature": "public DbOrganization getOrganization(final DbArtifact dbArtifact)", "class_method_signature": "ArtifactHandler.getOrganization(final DbArtifact dbArtifact)", "testcase": false, "constructor": false, "invocations": ["getModule", "getOrganization", "getOrganization", "getOrganization"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}