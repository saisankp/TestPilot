{"test_class": {"identifier": "FlowPartInfoTest", "superclass": "", "interfaces": "", "fields": [], "file": "commons/flow/src/test/java/org/openehealth/ipf/commons/flow/transfer/FlowPartInfoTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        // TODO: implement\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "FlowPartInfoTest.testToString()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "FlowPartInfo", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -1524880457609230104L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1524880457609230104L", "var_name": "serialVersionUID"}, {"original_string": "@XmlElement\n    private String status;", "modifier": "@XmlElement\n    private", "type": "String", "declarator": "status", "var_name": "status"}, {"original_string": "@XmlElement\n    private String path;", "modifier": "@XmlElement\n    private", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "@XmlElement(type=Long.class)\n    private long pathDuration;", "modifier": "@XmlElement(type=Long.class)\n    private", "type": "long", "declarator": "pathDuration", "var_name": "pathDuration"}, {"original_string": "@XmlElement\n    private Date contributionTime;", "modifier": "@XmlElement\n    private", "type": "Date", "declarator": "contributionTime", "var_name": "contributionTime"}, {"original_string": "@XmlElement(type=Integer.class)\n    private int contributionCount;", "modifier": "@XmlElement(type=Integer.class)\n    private", "type": "int", "declarator": "contributionCount", "var_name": "contributionCount"}, {"original_string": "@XmlElement\n    private Date filterTime;", "modifier": "@XmlElement\n    private", "type": "Date", "declarator": "filterTime", "var_name": "filterTime"}, {"original_string": "@XmlElement(type=Integer.class)\n    private int filterCount;", "modifier": "@XmlElement(type=Integer.class)\n    private", "type": "int", "declarator": "filterCount", "var_name": "filterCount"}, {"original_string": "@XmlElement\n    private String text;", "modifier": "@XmlElement\n    private", "type": "String", "declarator": "text", "var_name": "text"}], "methods": [{"identifier": "getContributionCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getContributionCount()", "full_signature": "public int getContributionCount()", "class_method_signature": "FlowPartInfo.getContributionCount()", "testcase": false, "constructor": false}, {"identifier": "setContributionCount", "parameters": "(int contributionCount)", "modifiers": "public", "return": "void", "signature": "void setContributionCount(int contributionCount)", "full_signature": "public void setContributionCount(int contributionCount)", "class_method_signature": "FlowPartInfo.setContributionCount(int contributionCount)", "testcase": false, "constructor": false}, {"identifier": "getContributionTime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getContributionTime()", "full_signature": "public Date getContributionTime()", "class_method_signature": "FlowPartInfo.getContributionTime()", "testcase": false, "constructor": false}, {"identifier": "setContributionTime", "parameters": "(Date contributionTime)", "modifiers": "public", "return": "void", "signature": "void setContributionTime(Date contributionTime)", "full_signature": "public void setContributionTime(Date contributionTime)", "class_method_signature": "FlowPartInfo.setContributionTime(Date contributionTime)", "testcase": false, "constructor": false}, {"identifier": "getFilterCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFilterCount()", "full_signature": "public int getFilterCount()", "class_method_signature": "FlowPartInfo.getFilterCount()", "testcase": false, "constructor": false}, {"identifier": "setFilterCount", "parameters": "(int filterCount)", "modifiers": "public", "return": "void", "signature": "void setFilterCount(int filterCount)", "full_signature": "public void setFilterCount(int filterCount)", "class_method_signature": "FlowPartInfo.setFilterCount(int filterCount)", "testcase": false, "constructor": false}, {"identifier": "getFilterTime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getFilterTime()", "full_signature": "public Date getFilterTime()", "class_method_signature": "FlowPartInfo.getFilterTime()", "testcase": false, "constructor": false}, {"identifier": "setFilterTime", "parameters": "(Date filterTime)", "modifiers": "public", "return": "void", "signature": "void setFilterTime(Date filterTime)", "full_signature": "public void setFilterTime(Date filterTime)", "class_method_signature": "FlowPartInfo.setFilterTime(Date filterTime)", "testcase": false, "constructor": false}, {"identifier": "getPathDuration", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getPathDuration()", "full_signature": "public long getPathDuration()", "class_method_signature": "FlowPartInfo.getPathDuration()", "testcase": false, "constructor": false}, {"identifier": "setPathDuration", "parameters": "(long partDuration)", "modifiers": "public", "return": "void", "signature": "void setPathDuration(long partDuration)", "full_signature": "public void setPathDuration(long partDuration)", "class_method_signature": "FlowPartInfo.setPathDuration(long partDuration)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPath()", "full_signature": "public String getPath()", "class_method_signature": "FlowPartInfo.getPath()", "testcase": false, "constructor": false}, {"identifier": "setPath", "parameters": "(String path)", "modifiers": "public", "return": "void", "signature": "void setPath(String path)", "full_signature": "public void setPath(String path)", "class_method_signature": "FlowPartInfo.setPath(String path)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatus()", "full_signature": "public String getStatus()", "class_method_signature": "FlowPartInfo.getStatus()", "testcase": false, "constructor": false}, {"identifier": "setStatus", "parameters": "(String status)", "modifiers": "public", "return": "void", "signature": "void setStatus(String status)", "full_signature": "public void setStatus(String status)", "class_method_signature": "FlowPartInfo.setStatus(String status)", "testcase": false, "constructor": false}, {"identifier": "getText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getText()", "full_signature": "public String getText()", "class_method_signature": "FlowPartInfo.getText()", "testcase": false, "constructor": false}, {"identifier": "setText", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void setText(String text)", "full_signature": "public void setText(String text)", "class_method_signature": "FlowPartInfo.setText(String text)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FlowPartInfo.toString()", "testcase": false, "constructor": false}], "file": "commons/flow/src/main/java/org/openehealth/ipf/commons/flow/transfer/FlowPartInfo.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuffer buf = new StringBuffer();\n        buf.append(\"Flow part (path = \").append(path).append(\")\").append(NEWLINE);\n        buf.append(\"- status             = \").append(status).append(NEWLINE);\n        buf.append(\"- flow duration (ms) = \").append(durationString(pathDuration)).append(NEWLINE);\n        buf.append(\"- contribution time  = \").append(dateString(contributionTime)).append(NEWLINE);\n        buf.append(\"- filter time        = \").append(dateString(filterTime)).append(NEWLINE);\n        buf.append(\"- contribution count = \").append(contributionCount).append(NEWLINE);\n        buf.append(\"- filter count       = \").append(filterCount).append(NEWLINE);\n        buf.append(\"- text               = \").append(textString(text)).append(NEWLINE);\n        return buf.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FlowPartInfo.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "durationString", "append", "append", "append", "dateString", "append", "append", "append", "dateString", "append", "append", "append", "append", "append", "append", "append", "append", "append", "textString", "toString"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}