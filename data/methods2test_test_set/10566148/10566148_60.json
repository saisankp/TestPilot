{"test_class": {"identifier": "SagaMessageStreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TimeoutManager timeoutManager;", "modifier": "private", "type": "TimeoutManager", "declarator": "timeoutManager", "var_name": "timeoutManager"}, {"original_string": "private StateStorage storage;", "modifier": "private", "type": "StateStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private SagaMessageStream sut;", "modifier": "private", "type": "SagaMessageStream", "declarator": "sut", "var_name": "sut"}, {"original_string": "private InstanceResolver instanceResolver;", "modifier": "private", "type": "InstanceResolver", "declarator": "instanceResolver", "var_name": "instanceResolver"}, {"original_string": "private HandlerInvoker invoker;", "modifier": "private", "type": "HandlerInvoker", "declarator": "invoker", "var_name": "invoker"}, {"original_string": "private ExecutorService executorService;", "modifier": "private", "type": "ExecutorService", "declarator": "executorService", "var_name": "executorService"}], "file": "saga-lib/src/test/java/com/codebullets/sagalib/processing/SagaMessageStreamTest.java"}, "test_case": {"identifier": "handle_always_invokesSagaRightAway", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void handle_always_invokesSagaRightAway() throws InvocationTargetException, IllegalAccessException {\n        // given\n        String message = \"theMessage\";\n\n        // when\n        sut.handle(message);\n\n        // then\n        ArgumentCaptor<InvocationContext> captor = ArgumentCaptor.forClass(InvocationContext.class);\n        verify(invoker).invoke(captor.capture());\n\n        assertThat(\"Expected saga instance to be set.\", captor.getValue().saga(), instanceOf(Saga.class));\n        assertThat(\"Expected message on invoker context.\", captor.getValue().message(), equalTo(message));\n    }", "signature": "void handle_always_invokesSagaRightAway()", "full_signature": "@Test public void handle_always_invokesSagaRightAway()", "class_method_signature": "SagaMessageStreamTest.handle_always_invokesSagaRightAway()", "testcase": true, "constructor": false, "invocations": ["handle", "forClass", "invoke", "verify", "capture", "assertThat", "saga", "getValue", "instanceOf", "assertThat", "message", "getValue", "equalTo"]}, "focal_class": {"identifier": "SagaMessageStream", "superclass": "", "interfaces": "implements MessageStream", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SagaMessageStream.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SagaMessageStream.class)", "var_name": "LOG"}, {"original_string": "private static final Map<HeaderName<?>, Object> EMPTY_HEADERS = Collections.emptyMap();", "modifier": "private static final", "type": "Map<HeaderName<?>, Object>", "declarator": "EMPTY_HEADERS = Collections.emptyMap()", "var_name": "EMPTY_HEADERS"}, {"original_string": "private final SagaEnvironment environment;", "modifier": "private final", "type": "SagaEnvironment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private final HandlerInvoker invoker;", "modifier": "private final", "type": "HandlerInvoker", "declarator": "invoker", "var_name": "invoker"}, {"original_string": "private final Executor executor;", "modifier": "private final", "type": "Executor", "declarator": "executor", "var_name": "executor"}], "methods": [{"identifier": "SagaMessageStream", "parameters": "(\n            final HandlerInvoker invoker,\n            final SagaEnvironment environment,\n            final Executor executor)", "modifiers": "@Inject public", "return": "", "signature": " SagaMessageStream(\n            final HandlerInvoker invoker,\n            final SagaEnvironment environment,\n            final Executor executor)", "full_signature": "@Inject public  SagaMessageStream(\n            final HandlerInvoker invoker,\n            final SagaEnvironment environment,\n            final Executor executor)", "class_method_signature": "SagaMessageStream.SagaMessageStream(\n            final HandlerInvoker invoker,\n            final SagaEnvironment environment,\n            final Executor executor)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(@Nonnull final Object message)", "modifiers": "@Override public", "return": "void", "signature": "void add(@Nonnull final Object message)", "full_signature": "@Override public void add(@Nonnull final Object message)", "class_method_signature": "SagaMessageStream.add(@Nonnull final Object message)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(@Nonnull final Object message, @Nullable final Map<String, Object> headers)", "modifiers": "@Override public", "return": "void", "signature": "void add(@Nonnull final Object message, @Nullable final Map<String, Object> headers)", "full_signature": "@Override public void add(@Nonnull final Object message, @Nullable final Map<String, Object> headers)", "class_method_signature": "SagaMessageStream.add(@Nonnull final Object message, @Nullable final Map<String, Object> headers)", "testcase": false, "constructor": false}, {"identifier": "addMessage", "parameters": "(@Nonnull final Object message, @Nullable final Map<HeaderName<?>, Object> headers)", "modifiers": "@Override public", "return": "void", "signature": "void addMessage(@Nonnull final Object message, @Nullable final Map<HeaderName<?>, Object> headers)", "full_signature": "@Override public void addMessage(@Nonnull final Object message, @Nullable final Map<HeaderName<?>, Object> headers)", "class_method_signature": "SagaMessageStream.addMessage(@Nonnull final Object message, @Nullable final Map<HeaderName<?>, Object> headers)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(@Nonnull final Object message)", "modifiers": "@Override public", "return": "void", "signature": "void handle(@Nonnull final Object message)", "full_signature": "@Override public void handle(@Nonnull final Object message)", "class_method_signature": "SagaMessageStream.handle(@Nonnull final Object message)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(@Nonnull final Object message, @Nullable final ExecutionContext parentContext)", "modifiers": "@Override public", "return": "void", "signature": "void handle(@Nonnull final Object message, @Nullable final ExecutionContext parentContext)", "full_signature": "@Override public void handle(@Nonnull final Object message, @Nullable final ExecutionContext parentContext)", "class_method_signature": "SagaMessageStream.handle(@Nonnull final Object message, @Nullable final ExecutionContext parentContext)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(@Nonnull final Object message, @Nullable final Map<String, Object> headers)", "modifiers": "@Override public", "return": "void", "signature": "void handle(@Nonnull final Object message, @Nullable final Map<String, Object> headers)", "full_signature": "@Override public void handle(@Nonnull final Object message, @Nullable final Map<String, Object> headers)", "class_method_signature": "SagaMessageStream.handle(@Nonnull final Object message, @Nullable final Map<String, Object> headers)", "testcase": false, "constructor": false}, {"identifier": "handleMessage", "parameters": "(@Nonnull final Object message, @Nullable final Map<HeaderName<?>, Object> headers)", "modifiers": "@Override public", "return": "void", "signature": "void handleMessage(@Nonnull final Object message, @Nullable final Map<HeaderName<?>, Object> headers)", "full_signature": "@Override public void handleMessage(@Nonnull final Object message, @Nullable final Map<HeaderName<?>, Object> headers)", "class_method_signature": "SagaMessageStream.handleMessage(@Nonnull final Object message, @Nullable final Map<HeaderName<?>, Object> headers)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(@Nonnull final Object message, @Nullable final Map<String, Object> headers, @Nullable final ExecutionContext parentContext)", "modifiers": "@Override public", "return": "void", "signature": "void handle(@Nonnull final Object message, @Nullable final Map<String, Object> headers, @Nullable final ExecutionContext parentContext)", "full_signature": "@Override public void handle(@Nonnull final Object message, @Nullable final Map<String, Object> headers, @Nullable final ExecutionContext parentContext)", "class_method_signature": "SagaMessageStream.handle(@Nonnull final Object message, @Nullable final Map<String, Object> headers, @Nullable final ExecutionContext parentContext)", "testcase": false, "constructor": false}, {"identifier": "handleMessage", "parameters": "(\n            @Nonnull final Object message,\n            @Nullable final Map<HeaderName<?>, Object> headers,\n            @Nullable final ExecutionContext parentContext)", "modifiers": "@Override public", "return": "void", "signature": "void handleMessage(\n            @Nonnull final Object message,\n            @Nullable final Map<HeaderName<?>, Object> headers,\n            @Nullable final ExecutionContext parentContext)", "full_signature": "@Override public void handleMessage(\n            @Nonnull final Object message,\n            @Nullable final Map<HeaderName<?>, Object> headers,\n            @Nullable final ExecutionContext parentContext)", "class_method_signature": "SagaMessageStream.handleMessage(\n            @Nonnull final Object message,\n            @Nullable final Map<HeaderName<?>, Object> headers,\n            @Nullable final ExecutionContext parentContext)", "testcase": false, "constructor": false}, {"identifier": "timeoutHasExpired", "parameters": "(final Timeout timeout, final TimeoutExpirationContext context)", "modifiers": "private", "return": "void", "signature": "void timeoutHasExpired(final Timeout timeout, final TimeoutExpirationContext context)", "full_signature": "private void timeoutHasExpired(final Timeout timeout, final TimeoutExpirationContext context)", "class_method_signature": "SagaMessageStream.timeoutHasExpired(final Timeout timeout, final TimeoutExpirationContext context)", "testcase": false, "constructor": false}, {"identifier": "createTaskToExecute", "parameters": "(\n            final Object message,\n            @Nullable final Map<HeaderName<?>, Object> headers,\n            @Nullable final ExecutionContext parentContext)", "modifiers": "private", "return": "SagaExecutionTask", "signature": "SagaExecutionTask createTaskToExecute(\n            final Object message,\n            @Nullable final Map<HeaderName<?>, Object> headers,\n            @Nullable final ExecutionContext parentContext)", "full_signature": "private SagaExecutionTask createTaskToExecute(\n            final Object message,\n            @Nullable final Map<HeaderName<?>, Object> headers,\n            @Nullable final ExecutionContext parentContext)", "class_method_signature": "SagaMessageStream.createTaskToExecute(\n            final Object message,\n            @Nullable final Map<HeaderName<?>, Object> headers,\n            @Nullable final ExecutionContext parentContext)", "testcase": false, "constructor": false}, {"identifier": "mergeHeaders", "parameters": "(\n            final @Nullable Map<HeaderName<?>, Object> headers,\n            final @Nullable ExecutionContext parentContext)", "modifiers": "private", "return": "Map<HeaderName<?>, Object>", "signature": "Map<HeaderName<?>, Object> mergeHeaders(\n            final @Nullable Map<HeaderName<?>, Object> headers,\n            final @Nullable ExecutionContext parentContext)", "full_signature": "private Map<HeaderName<?>, Object> mergeHeaders(\n            final @Nullable Map<HeaderName<?>, Object> headers,\n            final @Nullable ExecutionContext parentContext)", "class_method_signature": "SagaMessageStream.mergeHeaders(\n            final @Nullable Map<HeaderName<?>, Object> headers,\n            final @Nullable ExecutionContext parentContext)", "testcase": false, "constructor": false}, {"identifier": "toTypedHeaders", "parameters": "(@Nullable final Map<String, Object> untypedHeaders)", "modifiers": "private", "return": "Map<HeaderName<?>, Object>", "signature": "Map<HeaderName<?>, Object> toTypedHeaders(@Nullable final Map<String, Object> untypedHeaders)", "full_signature": "private Map<HeaderName<?>, Object> toTypedHeaders(@Nullable final Map<String, Object> untypedHeaders)", "class_method_signature": "SagaMessageStream.toTypedHeaders(@Nullable final Map<String, Object> untypedHeaders)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "SagaMessageStream.close()", "testcase": false, "constructor": false}, {"identifier": "shutDownExecutor", "parameters": "(final ExecutorService executorService)", "modifiers": "private", "return": "void", "signature": "void shutDownExecutor(final ExecutorService executorService)", "full_signature": "private void shutDownExecutor(final ExecutorService executorService)", "class_method_signature": "SagaMessageStream.shutDownExecutor(final ExecutorService executorService)", "testcase": false, "constructor": false}], "file": "saga-lib/src/main/java/com/codebullets/sagalib/processing/SagaMessageStream.java"}, "focal_method": {"identifier": "handle", "parameters": "(@Nonnull final Object message)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handle(@Nonnull final Object message) throws InvocationTargetException, IllegalAccessException {\n        checkNotNull(message, \"Message to handle must not be null.\");\n        handle(message, null, null);\n    }", "signature": "void handle(@Nonnull final Object message)", "full_signature": "@Override public void handle(@Nonnull final Object message)", "class_method_signature": "SagaMessageStream.handle(@Nonnull final Object message)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "handle"]}, "repository": {"repo_id": 10566148, "url": "https://github.com/Domo42/saga-lib", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 32, "size": 545, "license": "licensed"}}