{"test_class": {"identifier": "FeignTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n  public final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "@Rule\n  public final MockWebServer server = new MockWebServer();", "modifier": "@Rule\n  public final", "type": "MockWebServer", "declarator": "server = new MockWebServer()", "var_name": "server"}], "file": "core/src/test/java/feign/FeignTest.java"}, "test_case": {"identifier": "equalsHashCodeAndToStringWork", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void equalsHashCodeAndToStringWork() {\n    Target<TestInterface> t1 =\n        new HardCodedTarget<TestInterface>(TestInterface.class, \"http://localhost:8080\");\n    Target<TestInterface> t2 =\n        new HardCodedTarget<TestInterface>(TestInterface.class, \"http://localhost:8888\");\n    Target<OtherTestInterface> t3 =\n        new HardCodedTarget<OtherTestInterface>(OtherTestInterface.class, \"http://localhost:8080\");\n    TestInterface i1 = Feign.builder().target(t1);\n    TestInterface i2 = Feign.builder().target(t1);\n    TestInterface i3 = Feign.builder().target(t2);\n    OtherTestInterface i4 = Feign.builder().target(t3);\n\n    assertThat(i1)\n        .isEqualTo(i2)\n        .isNotEqualTo(i3)\n        .isNotEqualTo(i4);\n\n    assertThat(i1.hashCode())\n        .isEqualTo(i2.hashCode())\n        .isNotEqualTo(i3.hashCode())\n        .isNotEqualTo(i4.hashCode());\n\n    assertThat(i1.toString())\n        .isEqualTo(i2.toString())\n        .isNotEqualTo(i3.toString())\n        .isNotEqualTo(i4.toString());\n\n    assertThat(t1)\n        .isNotEqualTo(i1);\n\n    assertThat(t1.hashCode())\n        .isEqualTo(i1.hashCode());\n\n    assertThat(t1.toString())\n        .isEqualTo(i1.toString());\n  }", "signature": "void equalsHashCodeAndToStringWork()", "full_signature": "@Test public void equalsHashCodeAndToStringWork()", "class_method_signature": "FeignTest.equalsHashCodeAndToStringWork()", "testcase": true, "constructor": false, "invocations": ["target", "builder", "target", "builder", "target", "builder", "target", "builder", "isNotEqualTo", "isNotEqualTo", "isEqualTo", "assertThat", "isNotEqualTo", "isNotEqualTo", "isEqualTo", "assertThat", "hashCode", "hashCode", "hashCode", "hashCode", "isNotEqualTo", "isNotEqualTo", "isEqualTo", "assertThat", "toString", "toString", "toString", "toString", "isNotEqualTo", "assertThat", "isEqualTo", "assertThat", "hashCode", "hashCode", "isEqualTo", "assertThat", "toString", "toString"]}, "focal_class": {"identifier": "Feign", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "Feign.builder()", "testcase": false, "constructor": false}, {"identifier": "configKey", "parameters": "(Class targetType, Method method)", "modifiers": "public static", "return": "String", "signature": "String configKey(Class targetType, Method method)", "full_signature": "public static String configKey(Class targetType, Method method)", "class_method_signature": "Feign.configKey(Class targetType, Method method)", "testcase": false, "constructor": false}, {"identifier": "configKey", "parameters": "(Method method)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String configKey(Method method)", "full_signature": "@Deprecated public static String configKey(Method method)", "class_method_signature": "Feign.configKey(Method method)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Target<T> target)", "modifiers": "public abstract", "return": "T", "signature": "T newInstance(Target<T> target)", "full_signature": "public abstract T newInstance(Target<T> target)", "class_method_signature": "Feign.newInstance(Target<T> target)", "testcase": false, "constructor": false}], "file": "core/src/main/java/feign/Feign.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder builder() {\n    return new Builder();\n  }", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "Feign.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10981994, "url": "https://github.com/OpenFeign/feign", "stars": 5385, "created": "6/26/2013 11:28:16 PM +00:00", "updates": "2020-01-27T14:44:13+00:00", "fork": "False", "license": "licensed"}}