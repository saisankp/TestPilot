{"test_class": {"identifier": "ImportersTest", "superclass": "extends AbstractConvertersTest", "interfaces": "", "fields": [{"original_string": "private static final String WORK_DIR = \"/work/\";", "modifier": "private static final", "type": "String", "declarator": "WORK_DIR = \"/work/\"", "var_name": "WORK_DIR"}, {"original_string": "private static final String FOO_TST = \"foo.tst\";", "modifier": "private static final", "type": "String", "declarator": "FOO_TST = \"foo.tst\"", "var_name": "FOO_TST"}, {"original_string": "private final Importer testImporter = new TestImporter();", "modifier": "private final", "type": "Importer", "declarator": "testImporter = new TestImporter()", "var_name": "testImporter"}, {"original_string": "private final ImportPostProcessor testImportPostProcessor = new TestImportPostProcessor();", "modifier": "private final", "type": "ImportPostProcessor", "declarator": "testImportPostProcessor = new TestImportPostProcessor()", "var_name": "testImportPostProcessor"}, {"original_string": "private final ImportersLoader loader = new ImportersLoaderList(Collections.singletonList(testImporter),\n            Collections.singletonList(testImportPostProcessor));", "modifier": "private final", "type": "ImportersLoader", "declarator": "loader = new ImportersLoaderList(Collections.singletonList(testImporter),\n            Collections.singletonList(testImportPostProcessor))", "var_name": "loader"}, {"original_string": "private final ComputationManager computationManager = Mockito.mock(ComputationManager.class);", "modifier": "private final", "type": "ComputationManager", "declarator": "computationManager = Mockito.mock(ComputationManager.class)", "var_name": "computationManager"}, {"original_string": "private final ImportConfig importConfigMock = Mockito.mock(ImportConfig.class);", "modifier": "private final", "type": "ImportConfig", "declarator": "importConfigMock = Mockito.mock(ImportConfig.class)", "var_name": "importConfigMock"}, {"original_string": "private final ImportConfig importConfigWithPostProcessor = new ImportConfig(\"test\");", "modifier": "private final", "type": "ImportConfig", "declarator": "importConfigWithPostProcessor = new ImportConfig(\"test\")", "var_name": "importConfigWithPostProcessor"}], "file": "iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/import_/ImportersTest.java"}, "test_case": {"identifier": "importBadData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void importBadData() {\n        expected.expect(PowsyblException.class);\n        expected.expectMessage(\"Import format \" + UNSUPPORTED_FORMAT + \" not supported\");\n        Importers.importData(loader, UNSUPPORTED_FORMAT, null, null, computationManager, importConfigMock);\n    }", "signature": "void importBadData()", "full_signature": "@Test public void importBadData()", "class_method_signature": "ImportersTest.importBadData()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "importData"]}, "focal_class": {"identifier": "Importers", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Importers.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Importers.class)", "var_name": "LOGGER"}, {"original_string": "private static final Supplier<ImportersLoader> LOADER = Suppliers.memoize(ImportersServiceLoader::new);", "modifier": "private static final", "type": "Supplier<ImportersLoader>", "declarator": "LOADER = Suppliers.memoize(ImportersServiceLoader::new)", "var_name": "LOADER"}, {"original_string": "private static final Supplier<ImportConfig> CONFIG = Suppliers.memoize(ImportConfig::load);", "modifier": "private static final", "type": "Supplier<ImportConfig>", "declarator": "CONFIG = Suppliers.memoize(ImportConfig::load)", "var_name": "CONFIG"}], "methods": [{"identifier": "Importers", "parameters": "()", "modifiers": "private", "return": "", "signature": " Importers()", "full_signature": "private  Importers()", "class_method_signature": "Importers.Importers()", "testcase": false, "constructor": true}, {"identifier": "getFormats", "parameters": "(ImportersLoader loader)", "modifiers": "public static", "return": "Collection<String>", "signature": "Collection<String> getFormats(ImportersLoader loader)", "full_signature": "public static Collection<String> getFormats(ImportersLoader loader)", "class_method_signature": "Importers.getFormats(ImportersLoader loader)", "testcase": false, "constructor": false}, {"identifier": "getFormats", "parameters": "()", "modifiers": "public static", "return": "Collection<String>", "signature": "Collection<String> getFormats()", "full_signature": "public static Collection<String> getFormats()", "class_method_signature": "Importers.getFormats()", "testcase": false, "constructor": false}, {"identifier": "wrapImporter", "parameters": "(ImportersLoader loader, Importer importer, ComputationManager computationManager, ImportConfig config)", "modifiers": "private static", "return": "Importer", "signature": "Importer wrapImporter(ImportersLoader loader, Importer importer, ComputationManager computationManager, ImportConfig config)", "full_signature": "private static Importer wrapImporter(ImportersLoader loader, Importer importer, ComputationManager computationManager, ImportConfig config)", "class_method_signature": "Importers.wrapImporter(ImportersLoader loader, Importer importer, ComputationManager computationManager, ImportConfig config)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(ImportersLoader loader, ComputationManager computationManager, ImportConfig config)", "modifiers": "public static", "return": "Collection<Importer>", "signature": "Collection<Importer> list(ImportersLoader loader, ComputationManager computationManager, ImportConfig config)", "full_signature": "public static Collection<Importer> list(ImportersLoader loader, ComputationManager computationManager, ImportConfig config)", "class_method_signature": "Importers.list(ImportersLoader loader, ComputationManager computationManager, ImportConfig config)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(ComputationManager computationManager, ImportConfig config)", "modifiers": "public static", "return": "Collection<Importer>", "signature": "Collection<Importer> list(ComputationManager computationManager, ImportConfig config)", "full_signature": "public static Collection<Importer> list(ComputationManager computationManager, ImportConfig config)", "class_method_signature": "Importers.list(ComputationManager computationManager, ImportConfig config)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "()", "modifiers": "public static", "return": "Collection<Importer>", "signature": "Collection<Importer> list()", "full_signature": "public static Collection<Importer> list()", "class_method_signature": "Importers.list()", "testcase": false, "constructor": false}, {"identifier": "getImporter", "parameters": "(ImportersLoader loader, String format, @Nullable ComputationManager computationManager, ImportConfig config)", "modifiers": "public static", "return": "Importer", "signature": "Importer getImporter(ImportersLoader loader, String format, @Nullable ComputationManager computationManager, ImportConfig config)", "full_signature": "public static Importer getImporter(ImportersLoader loader, String format, @Nullable ComputationManager computationManager, ImportConfig config)", "class_method_signature": "Importers.getImporter(ImportersLoader loader, String format, @Nullable ComputationManager computationManager, ImportConfig config)", "testcase": false, "constructor": false}, {"identifier": "getImporter", "parameters": "(String format, @Nullable ComputationManager computationManager, ImportConfig config)", "modifiers": "public static", "return": "Importer", "signature": "Importer getImporter(String format, @Nullable ComputationManager computationManager, ImportConfig config)", "full_signature": "public static Importer getImporter(String format, @Nullable ComputationManager computationManager, ImportConfig config)", "class_method_signature": "Importers.getImporter(String format, @Nullable ComputationManager computationManager, ImportConfig config)", "testcase": false, "constructor": false}, {"identifier": "getImporter", "parameters": "(String format, @Nullable ComputationManager computationManager)", "modifiers": "public static", "return": "Importer", "signature": "Importer getImporter(String format, @Nullable ComputationManager computationManager)", "full_signature": "public static Importer getImporter(String format, @Nullable ComputationManager computationManager)", "class_method_signature": "Importers.getImporter(String format, @Nullable ComputationManager computationManager)", "testcase": false, "constructor": false}, {"identifier": "getImporter", "parameters": "(String format)", "modifiers": "public static", "return": "Importer", "signature": "Importer getImporter(String format)", "full_signature": "public static Importer getImporter(String format)", "class_method_signature": "Importers.getImporter(String format)", "testcase": false, "constructor": false}, {"identifier": "getPostProcessorNames", "parameters": "(ImportersLoader loader)", "modifiers": "public static", "return": "Collection<String>", "signature": "Collection<String> getPostProcessorNames(ImportersLoader loader)", "full_signature": "public static Collection<String> getPostProcessorNames(ImportersLoader loader)", "class_method_signature": "Importers.getPostProcessorNames(ImportersLoader loader)", "testcase": false, "constructor": false}, {"identifier": "getPostProcessorNames", "parameters": "()", "modifiers": "public static", "return": "Collection<String>", "signature": "Collection<String> getPostProcessorNames()", "full_signature": "public static Collection<String> getPostProcessorNames()", "class_method_signature": "Importers.getPostProcessorNames()", "testcase": false, "constructor": false}, {"identifier": "addPostProcessors", "parameters": "(ImportersLoader loader, Importer importer, ComputationManager computationManager, String... names)", "modifiers": "public static", "return": "Importer", "signature": "Importer addPostProcessors(ImportersLoader loader, Importer importer, ComputationManager computationManager, String... names)", "full_signature": "public static Importer addPostProcessors(ImportersLoader loader, Importer importer, ComputationManager computationManager, String... names)", "class_method_signature": "Importers.addPostProcessors(ImportersLoader loader, Importer importer, ComputationManager computationManager, String... names)", "testcase": false, "constructor": false}, {"identifier": "addPostProcessors", "parameters": "(Importer importer, ComputationManager computationManager, String... names)", "modifiers": "public static", "return": "Importer", "signature": "Importer addPostProcessors(Importer importer, ComputationManager computationManager, String... names)", "full_signature": "public static Importer addPostProcessors(Importer importer, ComputationManager computationManager, String... names)", "class_method_signature": "Importers.addPostProcessors(Importer importer, ComputationManager computationManager, String... names)", "testcase": false, "constructor": false}, {"identifier": "addPostProcessors", "parameters": "(Importer importer, String... names)", "modifiers": "public static", "return": "Importer", "signature": "Importer addPostProcessors(Importer importer, String... names)", "full_signature": "public static Importer addPostProcessors(Importer importer, String... names)", "class_method_signature": "Importers.addPostProcessors(Importer importer, String... names)", "testcase": false, "constructor": false}, {"identifier": "setPostProcessors", "parameters": "(ImportersLoader loader, Importer importer, ComputationManager computationManager, String... names)", "modifiers": "public static", "return": "Importer", "signature": "Importer setPostProcessors(ImportersLoader loader, Importer importer, ComputationManager computationManager, String... names)", "full_signature": "public static Importer setPostProcessors(ImportersLoader loader, Importer importer, ComputationManager computationManager, String... names)", "class_method_signature": "Importers.setPostProcessors(ImportersLoader loader, Importer importer, ComputationManager computationManager, String... names)", "testcase": false, "constructor": false}, {"identifier": "setPostProcessors", "parameters": "(Importer importer, ComputationManager computationManager, String... names)", "modifiers": "public static", "return": "Importer", "signature": "Importer setPostProcessors(Importer importer, ComputationManager computationManager, String... names)", "full_signature": "public static Importer setPostProcessors(Importer importer, ComputationManager computationManager, String... names)", "class_method_signature": "Importers.setPostProcessors(Importer importer, ComputationManager computationManager, String... names)", "testcase": false, "constructor": false}, {"identifier": "setPostProcessors", "parameters": "(Importer importer, String... names)", "modifiers": "public static", "return": "Importer", "signature": "Importer setPostProcessors(Importer importer, String... names)", "full_signature": "public static Importer setPostProcessors(Importer importer, String... names)", "class_method_signature": "Importers.setPostProcessors(Importer importer, String... names)", "testcase": false, "constructor": false}, {"identifier": "removePostProcessors", "parameters": "(Importer importer)", "modifiers": "public static", "return": "Importer", "signature": "Importer removePostProcessors(Importer importer)", "full_signature": "public static Importer removePostProcessors(Importer importer)", "class_method_signature": "Importers.removePostProcessors(Importer importer)", "testcase": false, "constructor": false}, {"identifier": "importData", "parameters": "(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config)", "modifiers": "public static", "return": "Network", "signature": "Network importData(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config)", "full_signature": "public static Network importData(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config)", "class_method_signature": "Importers.importData(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config)", "testcase": false, "constructor": false}, {"identifier": "importData", "parameters": "(String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager)", "modifiers": "public static", "return": "Network", "signature": "Network importData(String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager)", "full_signature": "public static Network importData(String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager)", "class_method_signature": "Importers.importData(String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager)", "testcase": false, "constructor": false}, {"identifier": "importData", "parameters": "(String format, ReadOnlyDataSource dataSource, Properties parameters)", "modifiers": "public static", "return": "Network", "signature": "Network importData(String format, ReadOnlyDataSource dataSource, Properties parameters)", "full_signature": "public static Network importData(String format, ReadOnlyDataSource dataSource, Properties parameters)", "class_method_signature": "Importers.importData(String format, ReadOnlyDataSource dataSource, Properties parameters)", "testcase": false, "constructor": false}, {"identifier": "importData", "parameters": "(String format, String directory, String baseName, Properties parameters)", "modifiers": "public static", "return": "Network", "signature": "Network importData(String format, String directory, String baseName, Properties parameters)", "full_signature": "public static Network importData(String format, String directory, String baseName, Properties parameters)", "class_method_signature": "Importers.importData(String format, String directory, String baseName, Properties parameters)", "testcase": false, "constructor": false}, {"identifier": "doImport", "parameters": "(ReadOnlyDataSource dataSource, Importer importer, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "modifiers": "private static", "return": "void", "signature": "void doImport(ReadOnlyDataSource dataSource, Importer importer, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "full_signature": "private static void doImport(ReadOnlyDataSource dataSource, Importer importer, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "class_method_signature": "Importers.doImport(ReadOnlyDataSource dataSource, Importer importer, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "testcase": false, "constructor": false}, {"identifier": "addDataSource", "parameters": "(Path dir, Path file, Importer importer, List<ReadOnlyDataSource> dataSources)", "modifiers": "private static", "return": "void", "signature": "void addDataSource(Path dir, Path file, Importer importer, List<ReadOnlyDataSource> dataSources)", "full_signature": "private static void addDataSource(Path dir, Path file, Importer importer, List<ReadOnlyDataSource> dataSources)", "class_method_signature": "Importers.addDataSource(Path dir, Path file, Importer importer, List<ReadOnlyDataSource> dataSources)", "testcase": false, "constructor": false}, {"identifier": "importAll", "parameters": "(Path parent, Importer importer, List<ReadOnlyDataSource> dataSources)", "modifiers": "private static", "return": "void", "signature": "void importAll(Path parent, Importer importer, List<ReadOnlyDataSource> dataSources)", "full_signature": "private static void importAll(Path parent, Importer importer, List<ReadOnlyDataSource> dataSources)", "class_method_signature": "Importers.importAll(Path parent, Importer importer, List<ReadOnlyDataSource> dataSources)", "testcase": false, "constructor": false}, {"identifier": "importAll", "parameters": "(Path dir, Importer importer, boolean parallel, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "modifiers": "public static", "return": "void", "signature": "void importAll(Path dir, Importer importer, boolean parallel, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "full_signature": "public static void importAll(Path dir, Importer importer, boolean parallel, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "class_method_signature": "Importers.importAll(Path dir, Importer importer, boolean parallel, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "testcase": false, "constructor": false}, {"identifier": "importAll", "parameters": "(Path dir, Importer importer, boolean parallel, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "modifiers": "public static", "return": "void", "signature": "void importAll(Path dir, Importer importer, boolean parallel, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "full_signature": "public static void importAll(Path dir, Importer importer, boolean parallel, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "class_method_signature": "Importers.importAll(Path dir, Importer importer, boolean parallel, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "testcase": false, "constructor": false}, {"identifier": "importAll", "parameters": "(Path dir, Importer importer, boolean parallel, Consumer<Network> consumer)", "modifiers": "public static", "return": "void", "signature": "void importAll(Path dir, Importer importer, boolean parallel, Consumer<Network> consumer)", "full_signature": "public static void importAll(Path dir, Importer importer, boolean parallel, Consumer<Network> consumer)", "class_method_signature": "Importers.importAll(Path dir, Importer importer, boolean parallel, Consumer<Network> consumer)", "testcase": false, "constructor": false}, {"identifier": "readParameter", "parameters": "(String format, Properties parameters, Parameter configuredParameter)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object readParameter(String format, Properties parameters, Parameter configuredParameter)", "full_signature": "@Deprecated public static Object readParameter(String format, Properties parameters, Parameter configuredParameter)", "class_method_signature": "Importers.readParameter(String format, Properties parameters, Parameter configuredParameter)", "testcase": false, "constructor": false}, {"identifier": "readParameter", "parameters": "(String format, Properties parameters, Parameter configuredParameter, ParameterDefaultValueConfig defaultValueConfig)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object readParameter(String format, Properties parameters, Parameter configuredParameter, ParameterDefaultValueConfig defaultValueConfig)", "full_signature": "@Deprecated public static Object readParameter(String format, Properties parameters, Parameter configuredParameter, ParameterDefaultValueConfig defaultValueConfig)", "class_method_signature": "Importers.readParameter(String format, Properties parameters, Parameter configuredParameter, ParameterDefaultValueConfig defaultValueConfig)", "testcase": false, "constructor": false}, {"identifier": "createDataSource", "parameters": "(Path file)", "modifiers": "public static", "return": "DataSource", "signature": "DataSource createDataSource(Path file)", "full_signature": "public static DataSource createDataSource(Path file)", "class_method_signature": "Importers.createDataSource(Path file)", "testcase": false, "constructor": false}, {"identifier": "createDataSource", "parameters": "(Path directory, String fileNameOrBaseName)", "modifiers": "public static", "return": "DataSource", "signature": "DataSource createDataSource(Path directory, String fileNameOrBaseName)", "full_signature": "public static DataSource createDataSource(Path directory, String fileNameOrBaseName)", "class_method_signature": "Importers.createDataSource(Path directory, String fileNameOrBaseName)", "testcase": false, "constructor": false}, {"identifier": "findImporter", "parameters": "(ReadOnlyDataSource dataSource, ImportersLoader loader, ComputationManager computationManager, ImportConfig config)", "modifiers": "public static", "return": "Importer", "signature": "Importer findImporter(ReadOnlyDataSource dataSource, ImportersLoader loader, ComputationManager computationManager, ImportConfig config)", "full_signature": "public static Importer findImporter(ReadOnlyDataSource dataSource, ImportersLoader loader, ComputationManager computationManager, ImportConfig config)", "class_method_signature": "Importers.findImporter(ReadOnlyDataSource dataSource, ImportersLoader loader, ComputationManager computationManager, ImportConfig config)", "testcase": false, "constructor": false}, {"identifier": "findImporter", "parameters": "(ReadOnlyDataSource dataSource, ComputationManager computationManager)", "modifiers": "public static", "return": "Importer", "signature": "Importer findImporter(ReadOnlyDataSource dataSource, ComputationManager computationManager)", "full_signature": "public static Importer findImporter(ReadOnlyDataSource dataSource, ComputationManager computationManager)", "class_method_signature": "Importers.findImporter(ReadOnlyDataSource dataSource, ComputationManager computationManager)", "testcase": false, "constructor": false}, {"identifier": "loadNetwork", "parameters": "(Path file, ComputationManager computationManager, ImportConfig config, Properties parameters, ImportersLoader loader)", "modifiers": "public static", "return": "Network", "signature": "Network loadNetwork(Path file, ComputationManager computationManager, ImportConfig config, Properties parameters, ImportersLoader loader)", "full_signature": "public static Network loadNetwork(Path file, ComputationManager computationManager, ImportConfig config, Properties parameters, ImportersLoader loader)", "class_method_signature": "Importers.loadNetwork(Path file, ComputationManager computationManager, ImportConfig config, Properties parameters, ImportersLoader loader)", "testcase": false, "constructor": false}, {"identifier": "loadNetwork", "parameters": "(Path file, ComputationManager computationManager, ImportConfig config, Properties parameters)", "modifiers": "public static", "return": "Network", "signature": "Network loadNetwork(Path file, ComputationManager computationManager, ImportConfig config, Properties parameters)", "full_signature": "public static Network loadNetwork(Path file, ComputationManager computationManager, ImportConfig config, Properties parameters)", "class_method_signature": "Importers.loadNetwork(Path file, ComputationManager computationManager, ImportConfig config, Properties parameters)", "testcase": false, "constructor": false}, {"identifier": "loadNetwork", "parameters": "(Path file)", "modifiers": "public static", "return": "Network", "signature": "Network loadNetwork(Path file)", "full_signature": "public static Network loadNetwork(Path file)", "class_method_signature": "Importers.loadNetwork(Path file)", "testcase": false, "constructor": false}, {"identifier": "loadNetwork", "parameters": "(String file)", "modifiers": "public static", "return": "Network", "signature": "Network loadNetwork(String file)", "full_signature": "public static Network loadNetwork(String file)", "class_method_signature": "Importers.loadNetwork(String file)", "testcase": false, "constructor": false}, {"identifier": "loadNetwork", "parameters": "(String filename, InputStream data, ComputationManager computationManager, ImportConfig config, Properties parameters, ImportersLoader loader)", "modifiers": "public static", "return": "Network", "signature": "Network loadNetwork(String filename, InputStream data, ComputationManager computationManager, ImportConfig config, Properties parameters, ImportersLoader loader)", "full_signature": "public static Network loadNetwork(String filename, InputStream data, ComputationManager computationManager, ImportConfig config, Properties parameters, ImportersLoader loader)", "class_method_signature": "Importers.loadNetwork(String filename, InputStream data, ComputationManager computationManager, ImportConfig config, Properties parameters, ImportersLoader loader)", "testcase": false, "constructor": false}, {"identifier": "loadNetwork", "parameters": "(String filename, InputStream data, ComputationManager computationManager, ImportConfig config, Properties parameters)", "modifiers": "public static", "return": "Network", "signature": "Network loadNetwork(String filename, InputStream data, ComputationManager computationManager, ImportConfig config, Properties parameters)", "full_signature": "public static Network loadNetwork(String filename, InputStream data, ComputationManager computationManager, ImportConfig config, Properties parameters)", "class_method_signature": "Importers.loadNetwork(String filename, InputStream data, ComputationManager computationManager, ImportConfig config, Properties parameters)", "testcase": false, "constructor": false}, {"identifier": "loadNetwork", "parameters": "(String filename, InputStream data, ComputationManager computationManager)", "modifiers": "public static", "return": "Network", "signature": "Network loadNetwork(String filename, InputStream data, ComputationManager computationManager)", "full_signature": "public static Network loadNetwork(String filename, InputStream data, ComputationManager computationManager)", "class_method_signature": "Importers.loadNetwork(String filename, InputStream data, ComputationManager computationManager)", "testcase": false, "constructor": false}, {"identifier": "loadNetwork", "parameters": "(String filename, InputStream data)", "modifiers": "public static", "return": "Network", "signature": "Network loadNetwork(String filename, InputStream data)", "full_signature": "public static Network loadNetwork(String filename, InputStream data)", "class_method_signature": "Importers.loadNetwork(String filename, InputStream data)", "testcase": false, "constructor": false}, {"identifier": "loadNetworks", "parameters": "(Path dir, boolean parallel, ImportersLoader loader, ComputationManager computationManager, ImportConfig config, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "modifiers": "public static", "return": "void", "signature": "void loadNetworks(Path dir, boolean parallel, ImportersLoader loader, ComputationManager computationManager, ImportConfig config, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "full_signature": "public static void loadNetworks(Path dir, boolean parallel, ImportersLoader loader, ComputationManager computationManager, ImportConfig config, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "class_method_signature": "Importers.loadNetworks(Path dir, boolean parallel, ImportersLoader loader, ComputationManager computationManager, ImportConfig config, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "testcase": false, "constructor": false}, {"identifier": "loadNetworks", "parameters": "(Path dir, boolean parallel, ImportersLoader loader, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "modifiers": "public static", "return": "void", "signature": "void loadNetworks(Path dir, boolean parallel, ImportersLoader loader, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "full_signature": "public static void loadNetworks(Path dir, boolean parallel, ImportersLoader loader, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "class_method_signature": "Importers.loadNetworks(Path dir, boolean parallel, ImportersLoader loader, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "testcase": false, "constructor": false}, {"identifier": "loadNetworks", "parameters": "(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "modifiers": "public static", "return": "void", "signature": "void loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "full_signature": "public static void loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "class_method_signature": "Importers.loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Properties parameters, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "testcase": false, "constructor": false}, {"identifier": "loadNetworks", "parameters": "(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "modifiers": "public static", "return": "void", "signature": "void loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "full_signature": "public static void loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "class_method_signature": "Importers.loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "testcase": false, "constructor": false}, {"identifier": "loadNetworks", "parameters": "(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer)", "modifiers": "public static", "return": "void", "signature": "void loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer)", "full_signature": "public static void loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer)", "class_method_signature": "Importers.loadNetworks(Path dir, boolean parallel, ComputationManager computationManager, ImportConfig config, Consumer<Network> consumer)", "testcase": false, "constructor": false}, {"identifier": "loadNetworks", "parameters": "(Path dir, boolean parallel, Consumer<Network> consumer)", "modifiers": "public static", "return": "void", "signature": "void loadNetworks(Path dir, boolean parallel, Consumer<Network> consumer)", "full_signature": "public static void loadNetworks(Path dir, boolean parallel, Consumer<Network> consumer)", "class_method_signature": "Importers.loadNetworks(Path dir, boolean parallel, Consumer<Network> consumer)", "testcase": false, "constructor": false}, {"identifier": "loadNetworks", "parameters": "(Path dir, boolean parallel, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "modifiers": "public static", "return": "void", "signature": "void loadNetworks(Path dir, boolean parallel, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "full_signature": "public static void loadNetworks(Path dir, boolean parallel, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "class_method_signature": "Importers.loadNetworks(Path dir, boolean parallel, Consumer<Network> consumer, Consumer<ReadOnlyDataSource> listener)", "testcase": false, "constructor": false}, {"identifier": "loadNetworks", "parameters": "(Path dir, Consumer<Network> consumer)", "modifiers": "public static", "return": "void", "signature": "void loadNetworks(Path dir, Consumer<Network> consumer)", "full_signature": "public static void loadNetworks(Path dir, Consumer<Network> consumer)", "class_method_signature": "Importers.loadNetworks(Path dir, Consumer<Network> consumer)", "testcase": false, "constructor": false}], "file": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/import_/Importers.java"}, "focal_method": {"identifier": "importData", "parameters": "(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config)", "modifiers": "public static", "return": "Network", "body": "public static Network importData(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config) {\n        Importer importer = getImporter(loader, format, computationManager, config);\n        if (importer == null) {\n            throw new PowsyblException(\"Import format \" + format + \" not supported\");\n        }\n        return importer.importData(dataSource, parameters);\n    }", "signature": "Network importData(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config)", "full_signature": "public static Network importData(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config)", "class_method_signature": "Importers.importData(ImportersLoader loader, String format, ReadOnlyDataSource dataSource, Properties parameters, ComputationManager computationManager, ImportConfig config)", "testcase": false, "constructor": false, "invocations": ["getImporter", "importData"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}