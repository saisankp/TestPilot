{"test_class": {"identifier": "RangePartHeaderSerializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RangePartHeaderSerializer rangePartHeaderSerializer = new RangePartHeaderSerializer();", "modifier": "private final", "type": "RangePartHeaderSerializer", "declarator": "rangePartHeaderSerializer = new RangePartHeaderSerializer()", "var_name": "rangePartHeaderSerializer"}], "file": "http/src/test/java/ro/polak/http/protocol/serializer/impl/RangePartHeaderSerializerTest.java"}, "test_case": {"identifier": "shouldReturnLengthForASingeRange", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnLengthForASingeRange() {\n        Range range = new Range(333L, 1234L);\n        String boundary = \"BBBOOUUNNNDDAARRYY\";\n        String contentType = \"application/pdf\";\n        long totalLength = 12345L;\n        long computedLength = rangePartHeaderSerializer\n                .getPartHeadersLength(Collections.singletonList(range), boundary, contentType, totalLength);\n\n        assertThat(computedLength, is(0L));\n    }", "signature": "void shouldReturnLengthForASingeRange()", "full_signature": "@Test public void shouldReturnLengthForASingeRange()", "class_method_signature": "RangePartHeaderSerializerTest.shouldReturnLengthForASingeRange()", "testcase": true, "constructor": false, "invocations": ["getPartHeadersLength", "singletonList", "assertThat", "is"]}, "focal_class": {"identifier": "RangePartHeaderSerializer", "superclass": "", "interfaces": "implements Serializer<RangePartHeader>", "fields": [{"original_string": "private static final String NEW_LINE = \"\\r\\n\";", "modifier": "private static final", "type": "String", "declarator": "NEW_LINE = \"\\r\\n\"", "var_name": "NEW_LINE"}, {"original_string": "private static final String DASH_DASH = \"--\";", "modifier": "private static final", "type": "String", "declarator": "DASH_DASH = \"--\"", "var_name": "DASH_DASH"}, {"original_string": "private static final int RANGE_DIGITS_LENGTH = 3;", "modifier": "private static final", "type": "int", "declarator": "RANGE_DIGITS_LENGTH = 3", "var_name": "RANGE_DIGITS_LENGTH"}], "methods": [{"identifier": "serialize", "parameters": "(final RangePartHeader input)", "modifiers": "@Override public", "return": "String", "signature": "String serialize(final RangePartHeader input)", "full_signature": "@Override public String serialize(final RangePartHeader input)", "class_method_signature": "RangePartHeaderSerializer.serialize(final RangePartHeader input)", "testcase": false, "constructor": false}, {"identifier": "serializeLastBoundaryDeliminator", "parameters": "(final String boundary)", "modifiers": "public", "return": "String", "signature": "String serializeLastBoundaryDeliminator(final String boundary)", "full_signature": "public String serializeLastBoundaryDeliminator(final String boundary)", "class_method_signature": "RangePartHeaderSerializer.serializeLastBoundaryDeliminator(final String boundary)", "testcase": false, "constructor": false}, {"identifier": "getPartHeadersLength", "parameters": "(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength)", "modifiers": "public", "return": "long", "signature": "long getPartHeadersLength(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength)", "full_signature": "public long getPartHeadersLength(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength)", "class_method_signature": "RangePartHeaderSerializer.getPartHeadersLength(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength)", "testcase": false, "constructor": false}], "file": "http/src/main/java/ro/polak/http/protocol/serializer/impl/RangePartHeaderSerializer.java"}, "focal_method": {"identifier": "getPartHeadersLength", "parameters": "(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength)", "modifiers": "public", "return": "long", "body": "public long getPartHeadersLength(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength) {\n        if (ranges.size() < 2) {\n            return 0;\n        }\n\n        String partHeader = serialize(new RangePartHeader(new Range(0L, 0L), boundary, contentType, 0L));\n        int partHeaderWithoutDigits = partHeader.length() - RANGE_DIGITS_LENGTH;\n\n        long partHeadersLength = 0;\n\n        // Initial new line\n        partHeadersLength += NEW_LINE.length();\n\n        for (Range range : ranges) {\n            partHeadersLength += NEW_LINE.length()\n                    + partHeaderWithoutDigits\n                    + Long.toString(range.getFrom()).length()\n                    + Long.toString(range.getTo()).length()\n                    + Long.toString(totalLength).length();\n        }\n\n        partHeadersLength += serializeLastBoundaryDeliminator(boundary).length();\n\n        return partHeadersLength;\n    }", "signature": "long getPartHeadersLength(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength)", "full_signature": "public long getPartHeadersLength(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength)", "class_method_signature": "RangePartHeaderSerializer.getPartHeadersLength(final List<Range> ranges,\n                                     final String boundary,\n                                     final String contentType,\n                                     final long totalLength)", "testcase": false, "constructor": false, "invocations": ["size", "serialize", "length", "length", "length", "length", "toString", "getFrom", "length", "toString", "getTo", "length", "toString", "length", "serializeLastBoundaryDeliminator"]}, "repository": {"repo_id": 42557838, "url": "https://github.com/piotrpolak/android-http-server", "language": "Java", "is_fork": false, "fork_count": 41, "stargazer_count": 136, "size": 2000, "license": "licensed"}}