{"test_class": {"identifier": "TestIteratorUtils", "superclass": "extends AbstractTemplateTest", "interfaces": "", "fields": [], "file": "stencil/src/test/java/net/stencilproject/template/TestIteratorUtils.java"}, "test_case": {"identifier": "testConcurrentModification", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testConcurrentModification() {\n\t\tHashMap<String, String> map = Maps.newHashMap();\n\t\tmap.put(\"a\", \"a\");\n\t\tmap.put(\"b\", \"b\");\n\t\tIterator<?> iterator = IteratorUtils.toIterator(map);\n\n\t\tassertTrue(iterator.hasNext());\n\t\titerator.next();\n\t\tassertTrue(iterator.hasNext());\n\t\tmap.clear();\n\t\tassertTrue(iterator.hasNext());\n\t\ttry {\n\t\t\titerator.next();\n\t\t\tfail();\n\t\t} catch (ConcurrentModificationException e) {\n\t\t\t// Success\n\t\t}\n\t}", "signature": "void testConcurrentModification()", "full_signature": "@Test public void testConcurrentModification()", "class_method_signature": "TestIteratorUtils.testConcurrentModification()", "testcase": true, "constructor": false, "invocations": ["newHashMap", "put", "put", "toIterator", "assertTrue", "hasNext", "next", "assertTrue", "hasNext", "clear", "assertTrue", "hasNext", "next", "fail"]}, "focal_class": {"identifier": "IteratorUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Iterator<Object> NULL_ITERATOR = new Iterator<Object>() {\n\t\t@Override\n\t\tpublic boolean hasNext() {\n\t\t\treturn false;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object next() {\n\t\t\treturn null;\n\t\t}\n\n\t\t@Override\n\t\tpublic void remove() {\n\t\t}\n\t};", "modifier": "public static final", "type": "Iterator<Object>", "declarator": "NULL_ITERATOR = new Iterator<Object>() {\n\t\t@Override\n\t\tpublic boolean hasNext() {\n\t\t\treturn false;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object next() {\n\t\t\treturn null;\n\t\t}\n\n\t\t@Override\n\t\tpublic void remove() {\n\t\t}\n\t}", "var_name": "NULL_ITERATOR"}], "methods": [{"identifier": "limitIterator", "parameters": "(final Iterator<T> it, final long limit)", "modifiers": "public static", "return": "Iterator<T>", "signature": "Iterator<T> limitIterator(final Iterator<T> it, final long limit)", "full_signature": "public static Iterator<T> limitIterator(final Iterator<T> it, final long limit)", "class_method_signature": "IteratorUtils.limitIterator(final Iterator<T> it, final long limit)", "testcase": false, "constructor": false}, {"identifier": "toIterator", "parameters": "(final String value)", "modifiers": "public static", "return": "Iterator<Character>", "signature": "Iterator<Character> toIterator(final String value)", "full_signature": "public static Iterator<Character> toIterator(final String value)", "class_method_signature": "IteratorUtils.toIterator(final String value)", "testcase": false, "constructor": false}, {"identifier": "toIteratorArray", "parameters": "(final Object array)", "modifiers": "public static", "return": "Iterator<Object>", "signature": "Iterator<Object> toIteratorArray(final Object array)", "full_signature": "public static Iterator<Object> toIteratorArray(final Object array)", "class_method_signature": "IteratorUtils.toIteratorArray(final Object array)", "testcase": false, "constructor": false}, {"identifier": "toIterator", "parameters": "(Map<?, ?> o)", "modifiers": "public static", "return": "Iterator<?>", "signature": "Iterator<?> toIterator(Map<?, ?> o)", "full_signature": "public static Iterator<?> toIterator(Map<?, ?> o)", "class_method_signature": "IteratorUtils.toIterator(Map<?, ?> o)", "testcase": false, "constructor": false}], "file": "stencil/src/main/java/net/stencilproject/template/IteratorUtils.java"}, "focal_method": {"identifier": "toIterator", "parameters": "(final String value)", "modifiers": "public static", "return": "Iterator<Character>", "body": "public static Iterator<Character> toIterator(final String value) {\n\t\treturn new Iterator<Character>() {\n\t\t\tint index = 0;\n\n\t\t\t@Override\n\t\t\tpublic boolean hasNext() {\n\t\t\t\treturn index < value.length();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic Character next() {\n\t\t\t\treturn value.charAt(index++);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void remove() {\n\t\t\t}\n\t\t};\n\t}", "signature": "Iterator<Character> toIterator(final String value)", "full_signature": "public static Iterator<Character> toIterator(final String value)", "class_method_signature": "IteratorUtils.toIterator(final String value)", "testcase": false, "constructor": false, "invocations": ["length", "charAt"]}, "repository": {"repo_id": 1144623, "url": "https://github.com/mmastrac/Stencil", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 4680, "license": "licensed"}}