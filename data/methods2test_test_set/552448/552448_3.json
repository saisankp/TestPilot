{"test_class": {"identifier": "TestAcceptor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Acceptor acceptor;", "modifier": "private", "type": "Acceptor", "declarator": "acceptor", "var_name": "acceptor"}, {"original_string": "private final String nomChamps = \"jetonActif\";", "modifier": "private final", "type": "String", "declarator": "nomChamps = \"jetonActif\"", "var_name": "nomChamps"}], "file": "GTDServer/JBoss/src/test/java/fr/alma/gtd/reactor/TestAcceptor.java"}, "test_case": {"identifier": "testEncode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEncode() {\n\t\tfinal String id = \"abcdef\";\n\t\tfinal String result = this.acceptor.encode(id);\n\t\tassertTrue(\"L'encodage SHA-512 a echoue\",\n\t\t\t\t\"e32ef19623e8ed9d267f657a81944b3d07adbb768518068e88435745564e8d4150a0a703be2a7d88b61e3d390c2bb97e2d4c311fdc69d6b1267f05f59aa920e7\".equals(result));\n\t\tSystem.out.println(\"Resultat : \" + result);\n\t}", "signature": "void testEncode()", "full_signature": "@Test public void testEncode()", "class_method_signature": "TestAcceptor.testEncode()", "testcase": true, "constructor": false, "invocations": ["encode", "assertTrue", "equals", "println"]}, "focal_class": {"identifier": "Acceptor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Acceptor instance = new Acceptor();", "modifier": "private static", "type": "Acceptor", "declarator": "instance = new Acceptor()", "var_name": "instance"}, {"original_string": "private Map<String, String> jetonActif;", "modifier": "private", "type": "Map<String, String>", "declarator": "jetonActif", "var_name": "jetonActif"}], "methods": [{"identifier": "Acceptor", "parameters": "()", "modifiers": "private", "return": "", "signature": " Acceptor()", "full_signature": "private  Acceptor()", "class_method_signature": "Acceptor.Acceptor()", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "(final String jeton)", "modifiers": "public", "return": "String", "signature": "String decode(final String jeton)", "full_signature": "public String decode(final String jeton)", "class_method_signature": "Acceptor.decode(final String jeton)", "testcase": false, "constructor": false}, {"identifier": "enregistre", "parameters": "(final String jeton)", "modifiers": "public", "return": "boolean", "signature": "boolean enregistre(final String jeton)", "full_signature": "public boolean enregistre(final String jeton)", "class_method_signature": "Acceptor.enregistre(final String jeton)", "testcase": false, "constructor": false}, {"identifier": "retire", "parameters": "(final String jeton)", "modifiers": "public", "return": "boolean", "signature": "boolean retire(final String jeton)", "full_signature": "public boolean retire(final String jeton)", "class_method_signature": "Acceptor.retire(final String jeton)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(final String jeton)", "modifiers": "public", "return": "boolean", "signature": "boolean accept(final String jeton)", "full_signature": "public boolean accept(final String jeton)", "class_method_signature": "Acceptor.accept(final String jeton)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "Acceptor", "signature": "Acceptor getInstance()", "full_signature": "public static Acceptor getInstance()", "class_method_signature": "Acceptor.getInstance()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(final String str)", "modifiers": "public", "return": "String", "signature": "String encode(final String str)", "full_signature": "public String encode(final String str)", "class_method_signature": "Acceptor.encode(final String str)", "testcase": false, "constructor": false}], "file": "GTDServer/JBoss/src/main/java/fr/alma/gtd/reactor/Acceptor.java"}, "focal_method": {"identifier": "encode", "parameters": "(final String str)", "modifiers": "public", "return": "String", "body": "public String encode(final String str) {\n\t\tString hash = \"hash SHA-512 invalide\";\n\t\t\n\t\tMessageDigest digest = null;\n\t\t\n\t\ttry {\n\t\t\tdigest = MessageDigest.getInstance(\"SHA-512\");\n\t\t} catch (NoSuchAlgorithmException e1) {\n\t\t\tSystem.out.println(\">>Algorithme SHA-512 inconnu\");\n\t\t\te1.printStackTrace();\n\t\t}\n\t\t\n\t\tInputStream is = null;\n\t\t\n\t\ttry {\n            is = new ByteArrayInputStream(str.getBytes(\"UTF-8\"));\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n\t\t\n\t\tfinal byte[] buffer = new byte[8192];\n\t\tint read = 0;\n\t\ttry {\n\t\t\twhile ((read = is.read(buffer)) > 0) {\n\t\t\t\tdigest.update(buffer, 0, read);\n\t\t\t}\t\t\n\t\t\tfinal byte[] shasum = digest.digest();\n\t\t\tfinal BigInteger bigInt = new BigInteger(1, shasum);\n\t\t\thash = bigInt.toString(16);\n\t\t}\n\t\tcatch (IOException e) {\n\t\t\tthrow new RuntimeException(\">>Impossible d'appliquer l'algorithme SHA-512\", e);\n\t\t}\n\t\tfinally {\n\t\t\ttry {\n\t\t\t\tis.close();\n\t\t\t}\n\t\t\tcatch (IOException e) {\n\t\t\t\tthrow new RuntimeException(\">>Impossible de fermer le flux d'entree pour le calcul SHA-512\", e);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn hash;\n\t}", "signature": "String encode(final String str)", "full_signature": "public String encode(final String str)", "class_method_signature": "Acceptor.encode(final String str)", "testcase": false, "constructor": false, "invocations": ["getInstance", "println", "printStackTrace", "getBytes", "printStackTrace", "read", "update", "digest", "toString", "close"]}, "repository": {"repo_id": 552448, "url": "https://github.com/sunye/AlmaGTD", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 27723, "license": "licensed"}}