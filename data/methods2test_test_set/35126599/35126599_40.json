{"test_class": {"identifier": "SelectWhereImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "sqlitebuilder/src/test/java/com/nhaarman/sqlitebuilder/impl/SelectWhereImplTest.java"}, "test_case": {"identifier": "limit_returnsNotNullValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void limit_returnsNotNullValue() {\n    /* Given */\n    SelectWhereImpl where = new SelectWhereImpl(\"a=?\", new Object[] {1}, mock(SqlPart.class));\n\n    /* When */\n    Limit result = where.limit(5);\n\n    /* Then */\n    assertThat(result, is(notNullValue()));\n  }", "signature": "void limit_returnsNotNullValue()", "full_signature": "@Test public void limit_returnsNotNullValue()", "class_method_signature": "SelectWhereImplTest.limit_returnsNotNullValue()", "testcase": true, "constructor": false, "invocations": ["mock", "limit", "assertThat", "is", "notNullValue"]}, "focal_class": {"identifier": "SelectWhereImpl", "superclass": "extends BaseFinishedSelectStatement", "interfaces": "implements SelectWhere", "fields": [{"original_string": "@NotNull\n  private final String mExpression;", "modifier": "@NotNull\n  private final", "type": "String", "declarator": "mExpression", "var_name": "mExpression"}, {"original_string": "@NotNull\n  private final Object[] mArguments;", "modifier": "@NotNull\n  private final", "type": "Object[]", "declarator": "mArguments", "var_name": "mArguments"}, {"original_string": "@NotNull\n  private final SqlPart mPrevious;", "modifier": "@NotNull\n  private final", "type": "SqlPart", "declarator": "mPrevious", "var_name": "mPrevious"}], "methods": [{"identifier": "SelectWhereImpl", "parameters": "(@NotNull final String expression, @NotNull final Object[] arguments, @NotNull final SqlPart previous)", "modifiers": "", "return": "", "signature": " SelectWhereImpl(@NotNull final String expression, @NotNull final Object[] arguments, @NotNull final SqlPart previous)", "full_signature": "  SelectWhereImpl(@NotNull final String expression, @NotNull final Object[] arguments, @NotNull final SqlPart previous)", "class_method_signature": "SelectWhereImpl.SelectWhereImpl(@NotNull final String expression, @NotNull final Object[] arguments, @NotNull final SqlPart previous)", "testcase": false, "constructor": true}, {"identifier": "groupBy", "parameters": "(@NotNull final String expression)", "modifiers": "@NotNull @Override public", "return": "GroupBy", "signature": "GroupBy groupBy(@NotNull final String expression)", "full_signature": "@NotNull @Override public GroupBy groupBy(@NotNull final String expression)", "class_method_signature": "SelectWhereImpl.groupBy(@NotNull final String expression)", "testcase": false, "constructor": false}, {"identifier": "orderBy", "parameters": "(@NotNull final String... terms)", "modifiers": "@NotNull @Override public", "return": "OrderBy", "signature": "OrderBy orderBy(@NotNull final String... terms)", "full_signature": "@NotNull @Override public OrderBy orderBy(@NotNull final String... terms)", "class_method_signature": "SelectWhereImpl.orderBy(@NotNull final String... terms)", "testcase": false, "constructor": false}, {"identifier": "limit", "parameters": "(final long limit)", "modifiers": "@NotNull @Override public", "return": "Limit", "signature": "Limit limit(final long limit)", "full_signature": "@NotNull @Override public Limit limit(final long limit)", "class_method_signature": "SelectWhereImpl.limit(final long limit)", "testcase": false, "constructor": false}, {"identifier": "prependTo", "parameters": "(@NotNull final RawSqlBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void prependTo(@NotNull final RawSqlBuilder builder)", "full_signature": "@Override public void prependTo(@NotNull final RawSqlBuilder builder)", "class_method_signature": "SelectWhereImpl.prependTo(@NotNull final RawSqlBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "getArguments", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "Object[]", "signature": "Object[] getArguments()", "full_signature": "@Nullable @Override public Object[] getArguments()", "class_method_signature": "SelectWhereImpl.getArguments()", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "SqlPart", "signature": "SqlPart previous()", "full_signature": "@Nullable @Override public SqlPart previous()", "class_method_signature": "SelectWhereImpl.previous()", "testcase": false, "constructor": false}], "file": "sqlitebuilder/src/main/java/com/nhaarman/sqlitebuilder/impl/SelectWhereImpl.java"}, "focal_method": {"identifier": "limit", "parameters": "(final long limit)", "modifiers": "@NotNull @Override public", "return": "Limit", "body": "@NotNull\n  @Override\n  public Limit limit(final long limit) {\n    return new LimitImpl(limit, this);\n  }", "signature": "Limit limit(final long limit)", "full_signature": "@NotNull @Override public Limit limit(final long limit)", "class_method_signature": "SelectWhereImpl.limit(final long limit)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 35126599, "url": "https://github.com/nhaarman/SQLiteBuilder", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 69, "size": 1040, "license": "licensed"}}