{"test_class": {"identifier": "urn_perun_facility_attribute_def_def_homeMountPointsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static urn_perun_facility_attribute_def_def_homeMountPoints classInstance;", "modifier": "private static", "type": "urn_perun_facility_attribute_def_def_homeMountPoints", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private static PerunSessionImpl session;", "modifier": "private static", "type": "PerunSessionImpl", "declarator": "session", "var_name": "session"}, {"original_string": "private static Attribute attribute;", "modifier": "private static", "type": "Attribute", "declarator": "attribute", "var_name": "attribute"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_def_homeMountPointsTest.java"}, "test_case": {"identifier": "testCheckAttributeSyntaxCorrect", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCheckAttributeSyntaxCorrect() throws Exception {\n\t\tSystem.out.println(\"testCheckAttributeSyntaxCorrect()\");\n\n\t\tArrayList<String> homeMountPts= new ArrayList<>();\n\t\thomeMountPts.add(\"/mnt/mymountpoint1\");\n\t\thomeMountPts.add(\"/mnt/mymountpoint2\");\n\t\tattribute.setValue(homeMountPts);\n\n\t\tclassInstance.checkAttributeSyntax(session, new Facility(), attribute);\n\n\t}", "signature": "void testCheckAttributeSyntaxCorrect()", "full_signature": "@Test public void testCheckAttributeSyntaxCorrect()", "class_method_signature": "urn_perun_facility_attribute_def_def_homeMountPointsTest.testCheckAttributeSyntaxCorrect()", "testcase": true, "constructor": false, "invocations": ["println", "add", "add", "setValue", "checkAttributeSyntax"]}, "focal_class": {"identifier": "urn_perun_facility_attribute_def_def_homeMountPoints", "superclass": "extends FacilityAttributesModuleAbstract", "interfaces": "implements FacilityAttributesModuleImplApi", "fields": [{"original_string": "private static final Pattern pattern = Pattern.compile(\"^/[-a-zA-Z.0-9_/]*$\");", "modifier": "private static final", "type": "Pattern", "declarator": "pattern = Pattern.compile(\"^/[-a-zA-Z.0-9_/]*$\")", "var_name": "pattern"}], "methods": [{"identifier": "checkAttributeSyntax", "parameters": "(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSyntax(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSyntax(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_facility_attribute_def_def_homeMountPoints.checkAttributeSyntax(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSemantics(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_facility_attribute_def_def_homeMountPoints.checkAttributeSemantics(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "fillAttribute", "parameters": "(PerunSessionImpl session, Facility facility, AttributeDefinition attribute)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute fillAttribute(PerunSessionImpl session, Facility facility, AttributeDefinition attribute)", "full_signature": "@Override public Attribute fillAttribute(PerunSessionImpl session, Facility facility, AttributeDefinition attribute)", "class_method_signature": "urn_perun_facility_attribute_def_def_homeMountPoints.fillAttribute(PerunSessionImpl session, Facility facility, AttributeDefinition attribute)", "testcase": false, "constructor": false}, {"identifier": "getAttributeDefinition", "parameters": "()", "modifiers": "@Override public", "return": "AttributeDefinition", "signature": "AttributeDefinition getAttributeDefinition()", "full_signature": "@Override public AttributeDefinition getAttributeDefinition()", "class_method_signature": "urn_perun_facility_attribute_def_def_homeMountPoints.getAttributeDefinition()", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_def_homeMountPoints.java"}, "focal_method": {"identifier": "checkAttributeSyntax", "parameters": "(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void checkAttributeSyntax(PerunSessionImpl perunSession, Facility facility, Attribute attribute) throws WrongAttributeValueException {\n\n\t\tif(attribute.getValue() == null) return;\n\n\t\tList<String> homeMountPoints = attribute.valueAsList();\n\t\tfor (String st : homeMountPoints) {\n\t\t\tMatcher match = pattern.matcher(st);\n\t\t\tif (!match.matches()) throw new WrongAttributeValueException(attribute, \"Bad homeMountPoints attribute format \" + st);\n\t\t}\n\t}", "signature": "void checkAttributeSyntax(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSyntax(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_facility_attribute_def_def_homeMountPoints.checkAttributeSyntax(PerunSessionImpl perunSession, Facility facility, Attribute attribute)", "testcase": false, "constructor": false, "invocations": ["getValue", "valueAsList", "matcher", "matches"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}