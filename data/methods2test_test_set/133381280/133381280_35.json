{"test_class": {"identifier": "DefaultCounterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ManualClock clock = new ManualClock();", "modifier": "private final", "type": "ManualClock", "declarator": "clock = new ManualClock()", "var_name": "clock"}], "file": "client/lookout-core/src/test/java/com/alipay/lookout/core/DefaultCounterTest.java"}, "test_case": {"identifier": "testinc", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testinc() {\n        Counter c = new DefaultCounter(clock, NoopId.INSTANCE);\n        c.inc();\n        Assert.assertEquals(c.count(), 1L);\n        c.inc();\n        c.inc();\n        Assert.assertEquals(c.count(), 3L);\n    }", "signature": "void testinc()", "full_signature": "@Test public void testinc()", "class_method_signature": "DefaultCounterTest.testinc()", "testcase": true, "constructor": false, "invocations": ["inc", "assertEquals", "count", "inc", "inc", "assertEquals", "count"]}, "focal_class": {"identifier": "DefaultCounter", "superclass": "", "interfaces": "implements Counter", "fields": [{"original_string": "private final Clock      clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private final Id         id;", "modifier": "private final", "type": "Id", "declarator": "id", "var_name": "id"}, {"original_string": "private final AtomicLong count;", "modifier": "private final", "type": "AtomicLong", "declarator": "count", "var_name": "count"}], "methods": [{"identifier": "DefaultCounter", "parameters": "(Clock clock, Id id)", "modifiers": "", "return": "", "signature": " DefaultCounter(Clock clock, Id id)", "full_signature": "  DefaultCounter(Clock clock, Id id)", "class_method_signature": "DefaultCounter.DefaultCounter(Clock clock, Id id)", "testcase": false, "constructor": true}, {"identifier": "id", "parameters": "()", "modifiers": "@Override public", "return": "Id", "signature": "Id id()", "full_signature": "@Override public Id id()", "class_method_signature": "DefaultCounter.id()", "testcase": false, "constructor": false}, {"identifier": "measure", "parameters": "()", "modifiers": "@Override public", "return": "Indicator<Long>", "signature": "Indicator<Long> measure()", "full_signature": "@Override public Indicator<Long> measure()", "class_method_signature": "DefaultCounter.measure()", "testcase": false, "constructor": false}, {"identifier": "inc", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void inc()", "full_signature": "@Override public void inc()", "class_method_signature": "DefaultCounter.inc()", "testcase": false, "constructor": false}, {"identifier": "inc", "parameters": "(long amount)", "modifiers": "@Override public", "return": "void", "signature": "void inc(long amount)", "full_signature": "@Override public void inc(long amount)", "class_method_signature": "DefaultCounter.inc(long amount)", "testcase": false, "constructor": false}, {"identifier": "dec", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dec()", "full_signature": "@Override public void dec()", "class_method_signature": "DefaultCounter.dec()", "testcase": false, "constructor": false}, {"identifier": "dec", "parameters": "(long n)", "modifiers": "@Override public", "return": "void", "signature": "void dec(long n)", "full_signature": "@Override public void dec(long n)", "class_method_signature": "DefaultCounter.dec(long n)", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long count()", "full_signature": "@Override public long count()", "class_method_signature": "DefaultCounter.count()", "testcase": false, "constructor": false}], "file": "client/lookout-core/src/main/java/com/alipay/lookout/core/DefaultCounter.java"}, "focal_method": {"identifier": "inc", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void inc() {\n        count.incrementAndGet();\n    }", "signature": "void inc()", "full_signature": "@Override public void inc()", "class_method_signature": "DefaultCounter.inc()", "testcase": false, "constructor": false, "invocations": ["incrementAndGet"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}