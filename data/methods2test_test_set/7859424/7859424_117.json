{"test_class": {"identifier": "SuperKoTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SuperKoTable table;", "modifier": "private", "type": "SuperKoTable", "declarator": "table", "var_name": "table"}], "file": "src/edu/lclark/orego/core/SuperKoTableTest.java"}, "test_case": {"identifier": "testCopyDataFrom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCopyDataFrom() {\n\t\tSuperKoTable table2 = new SuperKoTable(CoordinateSystem.forWidth(19));\n\t\ttable.add(-3);\n\t\ttable2.copyDataFrom(table);\n\t\tassertTrue(table2.contains(-3));\n\t}", "signature": "void testCopyDataFrom()", "full_signature": "@Test public void testCopyDataFrom()", "class_method_signature": "SuperKoTableTest.testCopyDataFrom()", "testcase": true, "constructor": false, "invocations": ["forWidth", "add", "copyDataFrom", "assertTrue", "contains"]}, "focal_class": {"identifier": "SuperKoTable", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "public static final long EMPTY = 0L;", "modifier": "public static final", "type": "long", "declarator": "EMPTY = 0L", "var_name": "EMPTY"}, {"original_string": "public static final int IGNORE_SIGN_BIT = 0x7fffffff;", "modifier": "public static final", "type": "int", "declarator": "IGNORE_SIGN_BIT = 0x7fffffff", "var_name": "IGNORE_SIGN_BIT"}, {"original_string": "private final long[] data;", "modifier": "private final", "type": "long[]", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "SuperKoTable", "parameters": "(CoordinateSystem coords)", "modifiers": "public", "return": "", "signature": " SuperKoTable(CoordinateSystem coords)", "full_signature": "public  SuperKoTable(CoordinateSystem coords)", "class_method_signature": "SuperKoTable.SuperKoTable(CoordinateSystem coords)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(long key)", "modifiers": "public", "return": "void", "signature": "void add(long key)", "full_signature": "public void add(long key)", "class_method_signature": "SuperKoTable.add(long key)", "testcase": false, "constructor": false}, {"identifier": "capacity", "parameters": "()", "modifiers": "", "return": "int", "signature": "int capacity()", "full_signature": " int capacity()", "class_method_signature": "SuperKoTable.capacity()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "SuperKoTable.clear()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(long key)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(long key)", "full_signature": "public boolean contains(long key)", "class_method_signature": "SuperKoTable.contains(long key)", "testcase": false, "constructor": false}, {"identifier": "copyDataFrom", "parameters": "(SuperKoTable that)", "modifiers": "public", "return": "void", "signature": "void copyDataFrom(SuperKoTable that)", "full_signature": "public void copyDataFrom(SuperKoTable that)", "class_method_signature": "SuperKoTable.copyDataFrom(SuperKoTable that)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/core/SuperKoTable.java"}, "focal_method": {"identifier": "copyDataFrom", "parameters": "(SuperKoTable that)", "modifiers": "public", "return": "void", "body": "public void copyDataFrom(SuperKoTable that) {\n\t\tSystem.arraycopy(that.data, 0, data, 0, data.length);\n\t}", "signature": "void copyDataFrom(SuperKoTable that)", "full_signature": "public void copyDataFrom(SuperKoTable that)", "class_method_signature": "SuperKoTable.copyDataFrom(SuperKoTable that)", "testcase": false, "constructor": false, "invocations": ["arraycopy"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}