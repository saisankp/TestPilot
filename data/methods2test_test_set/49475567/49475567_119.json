{"test_class": {"identifier": "MappingContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CatMapper catMapper;", "modifier": "private", "type": "CatMapper", "declarator": "catMapper", "var_name": "catMapper"}, {"original_string": "private DogMapper dogMapper;", "modifier": "private", "type": "DogMapper", "declarator": "dogMapper", "var_name": "dogMapper"}, {"original_string": "private List<Mapper<?>> listOfMappers;", "modifier": "private", "type": "List<Mapper<?>>", "declarator": "listOfMappers", "var_name": "listOfMappers"}, {"original_string": "private MappingContext ctx;", "modifier": "private", "type": "MappingContext", "declarator": "ctx", "var_name": "ctx"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/mapper/MappingContextTest.java"}, "test_case": {"identifier": "testConstructor_listOfMappers", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testConstructor_listOfMappers() {\n        assertSame(catMapper, ctx.getMapper(CatMapper.class));\n        assertSame(dogMapper, ctx.getMapper(DogMapper.class));\n    }", "signature": "void testConstructor_listOfMappers()", "full_signature": "@Test void testConstructor_listOfMappers()", "class_method_signature": "MappingContextTest.testConstructor_listOfMappers()", "testcase": true, "constructor": false, "invocations": ["assertSame", "getMapper", "assertSame", "getMapper"]}, "focal_class": {"identifier": "MappingContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ConcurrentMap<Class<?>, Mapper<?>> mappers = new ConcurrentHashMap<Class<?>, Mapper<?>>();", "modifier": "private final", "type": "ConcurrentMap<Class<?>, Mapper<?>>", "declarator": "mappers = new ConcurrentHashMap<Class<?>, Mapper<?>>()", "var_name": "mappers"}], "methods": [{"identifier": "MappingContext", "parameters": "()", "modifiers": "public", "return": "", "signature": " MappingContext()", "full_signature": "public  MappingContext()", "class_method_signature": "MappingContext.MappingContext()", "testcase": false, "constructor": true}, {"identifier": "MappingContext", "parameters": "(List<Mapper<?>> mappers)", "modifiers": "public", "return": "", "signature": " MappingContext(List<Mapper<?>> mappers)", "full_signature": "public  MappingContext(List<Mapper<?>> mappers)", "class_method_signature": "MappingContext.MappingContext(List<Mapper<?>> mappers)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(Mapper<?> mapper)", "modifiers": "public", "return": "Mapper<?>", "signature": "Mapper<?> add(Mapper<?> mapper)", "full_signature": "public Mapper<?> add(Mapper<?> mapper)", "class_method_signature": "MappingContext.add(Mapper<?> mapper)", "testcase": false, "constructor": false}, {"identifier": "containsMapper", "parameters": "(Class<?> mapperClass)", "modifiers": "public", "return": "boolean", "signature": "boolean containsMapper(Class<?> mapperClass)", "full_signature": "public boolean containsMapper(Class<?> mapperClass)", "class_method_signature": "MappingContext.containsMapper(Class<?> mapperClass)", "testcase": false, "constructor": false}, {"identifier": "getMapper", "parameters": "(Class<?> clazz)", "modifiers": "public", "return": "Mapper<?>", "signature": "Mapper<?> getMapper(Class<?> clazz)", "full_signature": "public Mapper<?> getMapper(Class<?> clazz)", "class_method_signature": "MappingContext.getMapper(Class<?> clazz)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/mapper/MappingContext.java"}, "focal_method": {"identifier": "getMapper", "parameters": "(Class<?> clazz)", "modifiers": "public", "return": "Mapper<?>", "body": "public Mapper<?> getMapper(Class<?> clazz) {\n        if (this.mappers.containsKey(clazz)) {\n            return this.mappers.get(clazz);\n        }\n        throw new IllegalArgumentException(\n                String.format(\"No Mapper configured for Class<%s>\", clazz.getCanonicalName()));\n    }", "signature": "Mapper<?> getMapper(Class<?> clazz)", "full_signature": "public Mapper<?> getMapper(Class<?> clazz)", "class_method_signature": "MappingContext.getMapper(Class<?> clazz)", "testcase": false, "constructor": false, "invocations": ["containsKey", "get", "format", "getCanonicalName"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}