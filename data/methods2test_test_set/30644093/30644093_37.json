{"test_class": {"identifier": "DefinitionDocumentNameResolverTest", "superclass": "", "interfaces": "", "fields": [], "file": "swagger2markup/src/test/java/io/github/swagger2markup/internal/resolver/DefinitionDocumentNameResolverTest.java"}, "test_case": {"identifier": "testWithInterDocumentCrossReferencesAndMarkdown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithInterDocumentCrossReferencesAndMarkdown() {\n        Swagger2MarkupConfig config = (Swagger2MarkupConfig) new Swagger2MarkupConfigBuilder()\n                .withInterDocumentCrossReferences()\n                .withMarkupLanguage(MarkupLanguage.MARKDOWN)\n                .build();\n        Swagger2MarkupConverter.SwaggerContext context = createContext(config);\n        context.setOutputPath(Paths.get(\"/tmp\"));\n\n        assertThat(new DefinitionDocumentNameResolver(context).apply(\"DefinitionName\"))\n                .isEqualTo(\"definitions.md\");\n    }", "signature": "void testWithInterDocumentCrossReferencesAndMarkdown()", "full_signature": "@Test public void testWithInterDocumentCrossReferencesAndMarkdown()", "class_method_signature": "DefinitionDocumentNameResolverTest.testWithInterDocumentCrossReferencesAndMarkdown()", "testcase": true, "constructor": false, "invocations": ["build", "withMarkupLanguage", "withInterDocumentCrossReferences", "createContext", "setOutputPath", "get", "isEqualTo", "assertThat", "apply"]}, "focal_class": {"identifier": "DefinitionDocumentNameResolver", "superclass": "extends DocumentResolver", "interfaces": "", "fields": [], "methods": [{"identifier": "DefinitionDocumentNameResolver", "parameters": "(Swagger2MarkupConverter.SwaggerContext context)", "modifiers": "public", "return": "", "signature": " DefinitionDocumentNameResolver(Swagger2MarkupConverter.SwaggerContext context)", "full_signature": "public  DefinitionDocumentNameResolver(Swagger2MarkupConverter.SwaggerContext context)", "class_method_signature": "DefinitionDocumentNameResolver.DefinitionDocumentNameResolver(Swagger2MarkupConverter.SwaggerContext context)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(String definitionName)", "modifiers": "public", "return": "String", "signature": "String apply(String definitionName)", "full_signature": "public String apply(String definitionName)", "class_method_signature": "DefinitionDocumentNameResolver.apply(String definitionName)", "testcase": false, "constructor": false}], "file": "swagger2markup/src/main/java/io/github/swagger2markup/internal/resolver/DefinitionDocumentNameResolver.java"}, "focal_method": {"identifier": "apply", "parameters": "(String definitionName)", "modifiers": "public", "return": "String", "body": "public String apply(String definitionName) {\n        if (config.isSeparatedDefinitionsEnabled())\n            return new File(config.getSeparatedDefinitionsFolder(), markupDocBuilder.addFileExtension(normalizeName(definitionName))).getPath();\n        else\n            return markupDocBuilder.addFileExtension(config.getDefinitionsDocument());\n    }", "signature": "String apply(String definitionName)", "full_signature": "public String apply(String definitionName)", "class_method_signature": "DefinitionDocumentNameResolver.apply(String definitionName)", "testcase": false, "constructor": false, "invocations": ["isSeparatedDefinitionsEnabled", "getPath", "getSeparatedDefinitionsFolder", "addFileExtension", "normalizeName", "addFileExtension", "getDefinitionsDocument"]}, "repository": {"repo_id": 30644093, "url": "https://github.com/Swagger2Markup/swagger2markup", "language": "Java", "is_fork": false, "fork_count": 340, "stargazer_count": 2130, "size": 5225, "license": "licensed"}}