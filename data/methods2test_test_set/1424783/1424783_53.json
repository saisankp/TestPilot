{"test_class": {"identifier": "RectRegionTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [], "file": "androidplot-core/src/test/java/com/androidplot/xy/RectRegionTest.java"}, "test_case": {"identifier": "testTransform", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTransform() throws Exception {\n        RectRegion r1 = new RectRegion(1, 2, 0, 10);\n        RectRegion r2 = new RectRegion(2, 4, 10, 20);\n\n        final XYCoords trans1 = r1.transform(new XYCoords(1.5, 5), r2);\n        assertEquals(3.0, trans1.x);\n        assertEquals(15.0, trans1.y);\n\n        // try a screen transform:\n        RectF screen = new RectF(0, 0, 100, 100);\n        PointF result = r1.transform(2, 10, screen, false, true);\n        assertEquals(100f, result.x);\n        assertEquals(0f, result.y);\n\n        // now transform back to real:\n        RectRegion screenRegion = new RectRegion(screen);\n        XYCoords result2 = screenRegion.transform(result.x, result.y, r1, false, true);\n        assertEquals(2d, result2.x);\n        assertEquals(10d, result2.y);\n    }", "signature": "void testTransform()", "full_signature": "@Test public void testTransform()", "class_method_signature": "RectRegionTest.testTransform()", "testcase": true, "constructor": false, "invocations": ["transform", "assertEquals", "assertEquals", "transform", "assertEquals", "assertEquals", "transform", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "RectRegion", "superclass": "", "interfaces": "", "fields": [{"original_string": "Region xRegion;", "modifier": "", "type": "Region", "declarator": "xRegion", "var_name": "xRegion"}, {"original_string": "Region yRegion;", "modifier": "", "type": "Region", "declarator": "yRegion", "var_name": "yRegion"}, {"original_string": "private String label;", "modifier": "private", "type": "String", "declarator": "label", "var_name": "label"}], "methods": [{"identifier": "RectRegion", "parameters": "()", "modifiers": "public", "return": "", "signature": " RectRegion()", "full_signature": "public  RectRegion()", "class_method_signature": "RectRegion.RectRegion()", "testcase": false, "constructor": true}, {"identifier": "withDefaults", "parameters": "(RectRegion defaults)", "modifiers": "public static", "return": "RectRegion", "signature": "RectRegion withDefaults(RectRegion defaults)", "full_signature": "public static RectRegion withDefaults(RectRegion defaults)", "class_method_signature": "RectRegion.withDefaults(RectRegion defaults)", "testcase": false, "constructor": false}, {"identifier": "RectRegion", "parameters": "(XYCoords min, XYCoords max)", "modifiers": "public", "return": "", "signature": " RectRegion(XYCoords min, XYCoords max)", "full_signature": "public  RectRegion(XYCoords min, XYCoords max)", "class_method_signature": "RectRegion.RectRegion(XYCoords min, XYCoords max)", "testcase": false, "constructor": true}, {"identifier": "RectRegion", "parameters": "(Number minX, Number maxX, Number minY, Number maxY, String label)", "modifiers": "public", "return": "", "signature": " RectRegion(Number minX, Number maxX, Number minY, Number maxY, String label)", "full_signature": "public  RectRegion(Number minX, Number maxX, Number minY, Number maxY, String label)", "class_method_signature": "RectRegion.RectRegion(Number minX, Number maxX, Number minY, Number maxY, String label)", "testcase": false, "constructor": true}, {"identifier": "RectRegion", "parameters": "(RectF rect)", "modifiers": "public", "return": "", "signature": " RectRegion(RectF rect)", "full_signature": "public  RectRegion(RectF rect)", "class_method_signature": "RectRegion.RectRegion(RectF rect)", "testcase": false, "constructor": true}, {"identifier": "RectRegion", "parameters": "(Number minX, Number maxX, Number minY, Number maxY)", "modifiers": "@SuppressWarnings(\"SameParameterValue\") public", "return": "", "signature": " RectRegion(Number minX, Number maxX, Number minY, Number maxY)", "full_signature": "@SuppressWarnings(\"SameParameterValue\") public  RectRegion(Number minX, Number maxX, Number minY, Number maxY)", "class_method_signature": "RectRegion.RectRegion(Number minX, Number maxX, Number minY, Number maxY)", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY)", "modifiers": "public", "return": "XYCoords", "signature": "XYCoords transform(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY)", "full_signature": "public XYCoords transform(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY)", "class_method_signature": "RectRegion.transform(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(Number x, Number y, RectRegion region2)", "modifiers": "public", "return": "XYCoords", "signature": "XYCoords transform(Number x, Number y, RectRegion region2)", "full_signature": "public XYCoords transform(Number x, Number y, RectRegion region2)", "class_method_signature": "RectRegion.transform(Number x, Number y, RectRegion region2)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(XYCoords value, RectRegion region2)", "modifiers": "public", "return": "XYCoords", "signature": "XYCoords transform(XYCoords value, RectRegion region2)", "full_signature": "public XYCoords transform(XYCoords value, RectRegion region2)", "class_method_signature": "RectRegion.transform(XYCoords value, RectRegion region2)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(RectRegion r, RectRegion r2, boolean flipX, boolean flipY)", "modifiers": "public", "return": "RectRegion", "signature": "RectRegion transform(RectRegion r, RectRegion r2, boolean flipX, boolean flipY)", "full_signature": "public RectRegion transform(RectRegion r, RectRegion r2, boolean flipX, boolean flipY)", "class_method_signature": "RectRegion.transform(RectRegion r, RectRegion r2, boolean flipX, boolean flipY)", "testcase": false, "constructor": false}, {"identifier": "transformScreen", "parameters": "(Number x, Number y, RectF region2)", "modifiers": "public", "return": "PointF", "signature": "PointF transformScreen(Number x, Number y, RectF region2)", "full_signature": "public PointF transformScreen(Number x, Number y, RectF region2)", "class_method_signature": "RectRegion.transformScreen(Number x, Number y, RectF region2)", "testcase": false, "constructor": false}, {"identifier": "transformScreen", "parameters": "(PointF result, Number x, Number y, RectF region2)", "modifiers": "public", "return": "void", "signature": "void transformScreen(PointF result, Number x, Number y, RectF region2)", "full_signature": "public void transformScreen(PointF result, Number x, Number y, RectF region2)", "class_method_signature": "RectRegion.transformScreen(PointF result, Number x, Number y, RectF region2)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(PointF result, Number x, Number y, RectF region2, boolean flipX, boolean flipY)", "modifiers": "public", "return": "void", "signature": "void transform(PointF result, Number x, Number y, RectF region2, boolean flipX, boolean flipY)", "full_signature": "public void transform(PointF result, Number x, Number y, RectF region2, boolean flipX, boolean flipY)", "class_method_signature": "RectRegion.transform(PointF result, Number x, Number y, RectF region2, boolean flipX, boolean flipY)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(Number x, Number y, RectF region2, boolean flipX, boolean flipY)", "modifiers": "public", "return": "PointF", "signature": "PointF transform(Number x, Number y, RectF region2, boolean flipX, boolean flipY)", "full_signature": "public PointF transform(Number x, Number y, RectF region2, boolean flipX, boolean flipY)", "class_method_signature": "RectRegion.transform(Number x, Number y, RectF region2, boolean flipX, boolean flipY)", "testcase": false, "constructor": false}, {"identifier": "transformScreen", "parameters": "(XYCoords value, RectF region2)", "modifiers": "public", "return": "PointF", "signature": "PointF transformScreen(XYCoords value, RectF region2)", "full_signature": "public PointF transformScreen(XYCoords value, RectF region2)", "class_method_signature": "RectRegion.transformScreen(XYCoords value, RectF region2)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(XYCoords value, RectF region2, boolean flipX, boolean flipY)", "modifiers": "public", "return": "PointF", "signature": "PointF transform(XYCoords value, RectF region2, boolean flipX, boolean flipY)", "full_signature": "public PointF transform(XYCoords value, RectF region2, boolean flipX, boolean flipY)", "class_method_signature": "RectRegion.transform(XYCoords value, RectF region2, boolean flipX, boolean flipY)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(Number x, Number y)", "modifiers": "public", "return": "void", "signature": "void union(Number x, Number y)", "full_signature": "public void union(Number x, Number y)", "class_method_signature": "RectRegion.union(Number x, Number y)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(RectRegion input)", "modifiers": "public", "return": "void", "signature": "void union(RectRegion input)", "full_signature": "public void union(RectRegion input)", "class_method_signature": "RectRegion.union(RectRegion input)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(RectRegion region)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(RectRegion region)", "full_signature": "public boolean intersects(RectRegion region)", "class_method_signature": "RectRegion.intersects(RectRegion region)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(Number minX, Number maxX, Number minY, Number maxY)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(Number minX, Number maxX, Number minY, Number maxY)", "full_signature": "public boolean intersects(Number minX, Number maxX, Number minY, Number maxY)", "class_method_signature": "RectRegion.intersects(Number minX, Number maxX, Number minY, Number maxY)", "testcase": false, "constructor": false}, {"identifier": "asRectF", "parameters": "()", "modifiers": "public", "return": "RectF", "signature": "RectF asRectF()", "full_signature": "public RectF asRectF()", "class_method_signature": "RectRegion.asRectF()", "testcase": false, "constructor": false}, {"identifier": "intersect", "parameters": "(RectRegion clippingBounds)", "modifiers": "public", "return": "void", "signature": "void intersect(RectRegion clippingBounds)", "full_signature": "public void intersect(RectRegion clippingBounds)", "class_method_signature": "RectRegion.intersect(RectRegion clippingBounds)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(List<RectRegion> regions)", "modifiers": "public", "return": "List<RectRegion>", "signature": "List<RectRegion> intersects(List<RectRegion> regions)", "full_signature": "public List<RectRegion> intersects(List<RectRegion> regions)", "class_method_signature": "RectRegion.intersects(List<RectRegion> regions)", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "Number", "signature": "Number getWidth()", "full_signature": "public Number getWidth()", "class_method_signature": "RectRegion.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "()", "modifiers": "public", "return": "Number", "signature": "Number getHeight()", "full_signature": "public Number getHeight()", "class_method_signature": "RectRegion.getHeight()", "testcase": false, "constructor": false}, {"identifier": "distanceBetween", "parameters": "(Number x, Number y)", "modifiers": "private static", "return": "Number", "signature": "Number distanceBetween(Number x, Number y)", "full_signature": "private static Number distanceBetween(Number x, Number y)", "class_method_signature": "RectRegion.distanceBetween(Number x, Number y)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(Number minX, Number maxX, Number minY, Number maxY)", "modifiers": "public", "return": "void", "signature": "void set(Number minX, Number maxX, Number minY, Number maxY)", "full_signature": "public void set(Number minX, Number maxX, Number minY, Number maxY)", "class_method_signature": "RectRegion.set(Number minX, Number maxX, Number minY, Number maxY)", "testcase": false, "constructor": false}, {"identifier": "isMinXSet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMinXSet()", "full_signature": "public boolean isMinXSet()", "class_method_signature": "RectRegion.isMinXSet()", "testcase": false, "constructor": false}, {"identifier": "getMinX", "parameters": "()", "modifiers": "public", "return": "Number", "signature": "Number getMinX()", "full_signature": "public Number getMinX()", "class_method_signature": "RectRegion.getMinX()", "testcase": false, "constructor": false}, {"identifier": "setMinX", "parameters": "(Number minX)", "modifiers": "public", "return": "void", "signature": "void setMinX(Number minX)", "full_signature": "public void setMinX(Number minX)", "class_method_signature": "RectRegion.setMinX(Number minX)", "testcase": false, "constructor": false}, {"identifier": "isMaxXSet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMaxXSet()", "full_signature": "public boolean isMaxXSet()", "class_method_signature": "RectRegion.isMaxXSet()", "testcase": false, "constructor": false}, {"identifier": "getMaxX", "parameters": "()", "modifiers": "public", "return": "Number", "signature": "Number getMaxX()", "full_signature": "public Number getMaxX()", "class_method_signature": "RectRegion.getMaxX()", "testcase": false, "constructor": false}, {"identifier": "setMaxX", "parameters": "(Number maxX)", "modifiers": "public", "return": "void", "signature": "void setMaxX(Number maxX)", "full_signature": "public void setMaxX(Number maxX)", "class_method_signature": "RectRegion.setMaxX(Number maxX)", "testcase": false, "constructor": false}, {"identifier": "isMinYSet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMinYSet()", "full_signature": "public boolean isMinYSet()", "class_method_signature": "RectRegion.isMinYSet()", "testcase": false, "constructor": false}, {"identifier": "getMinY", "parameters": "()", "modifiers": "public", "return": "Number", "signature": "Number getMinY()", "full_signature": "public Number getMinY()", "class_method_signature": "RectRegion.getMinY()", "testcase": false, "constructor": false}, {"identifier": "setMinY", "parameters": "(Number minY)", "modifiers": "public", "return": "void", "signature": "void setMinY(Number minY)", "full_signature": "public void setMinY(Number minY)", "class_method_signature": "RectRegion.setMinY(Number minY)", "testcase": false, "constructor": false}, {"identifier": "isMaxYSet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMaxYSet()", "full_signature": "public boolean isMaxYSet()", "class_method_signature": "RectRegion.isMaxYSet()", "testcase": false, "constructor": false}, {"identifier": "getMaxY", "parameters": "()", "modifiers": "public", "return": "Number", "signature": "Number getMaxY()", "full_signature": "public Number getMaxY()", "class_method_signature": "RectRegion.getMaxY()", "testcase": false, "constructor": false}, {"identifier": "setMaxY", "parameters": "(Number maxY)", "modifiers": "public", "return": "void", "signature": "void setMaxY(Number maxY)", "full_signature": "public void setMaxY(Number maxY)", "class_method_signature": "RectRegion.setMaxY(Number maxY)", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLabel()", "full_signature": "public String getLabel()", "class_method_signature": "RectRegion.getLabel()", "testcase": false, "constructor": false}, {"identifier": "setLabel", "parameters": "(String label)", "modifiers": "public", "return": "void", "signature": "void setLabel(String label)", "full_signature": "public void setLabel(String label)", "class_method_signature": "RectRegion.setLabel(String label)", "testcase": false, "constructor": false}, {"identifier": "getxRegion", "parameters": "()", "modifiers": "public", "return": "Region", "signature": "Region getxRegion()", "full_signature": "public Region getxRegion()", "class_method_signature": "RectRegion.getxRegion()", "testcase": false, "constructor": false}, {"identifier": "setxRegion", "parameters": "(Region xRegion)", "modifiers": "public", "return": "void", "signature": "void setxRegion(Region xRegion)", "full_signature": "public void setxRegion(Region xRegion)", "class_method_signature": "RectRegion.setxRegion(Region xRegion)", "testcase": false, "constructor": false}, {"identifier": "getyRegion", "parameters": "()", "modifiers": "public", "return": "Region", "signature": "Region getyRegion()", "full_signature": "public Region getyRegion()", "class_method_signature": "RectRegion.getyRegion()", "testcase": false, "constructor": false}, {"identifier": "setyRegion", "parameters": "(Region yRegion)", "modifiers": "public", "return": "void", "signature": "void setyRegion(Region yRegion)", "full_signature": "public void setyRegion(Region yRegion)", "class_method_signature": "RectRegion.setyRegion(Region yRegion)", "testcase": false, "constructor": false}, {"identifier": "isFullyDefined", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFullyDefined()", "full_signature": "public boolean isFullyDefined()", "class_method_signature": "RectRegion.isFullyDefined()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Number x, Number y)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Number x, Number y)", "full_signature": "public boolean contains(Number x, Number y)", "class_method_signature": "RectRegion.contains(Number x, Number y)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RectRegion.toString()", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/xy/RectRegion.java"}, "focal_method": {"identifier": "transform", "parameters": "(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY)", "modifiers": "public", "return": "XYCoords", "body": "public XYCoords transform(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY) {\n        Number xx = xRegion.transform(x.doubleValue(), region2.xRegion, flipX);\n        Number yy = yRegion.transform(y.doubleValue(), region2.yRegion, flipY);\n        return new XYCoords(xx, yy);\n    }", "signature": "XYCoords transform(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY)", "full_signature": "public XYCoords transform(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY)", "class_method_signature": "RectRegion.transform(Number x, Number y, RectRegion region2, boolean flipX, boolean flipY)", "testcase": false, "constructor": false, "invocations": ["transform", "doubleValue", "transform", "doubleValue"]}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}