{"test_class": {"identifier": "Base64Test", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ICodec base64 = Base64.create();", "modifier": "private final", "type": "ICodec", "declarator": "base64 = Base64.create()", "var_name": "base64"}, {"original_string": "private final byte[] SOURCE_MSG = (\"Hello my young friend. \" +\n            \"You can see how it's is a nice text will converted to some shit, \" +\n            \"but to see it, you should debug this text. Here are the things here.\").getBytes();", "modifier": "private final", "type": "byte[]", "declarator": "SOURCE_MSG = (\"Hello my young friend. \" +\n            \"You can see how it's is a nice text will converted to some shit, \" +\n            \"but to see it, you should debug this text. Here are the things here.\").getBytes()", "var_name": "SOURCE_MSG"}, {"original_string": "private final byte[] BASE64_MSG = (\"SGVsbG8gbXkgeW91bmcgZnJpZW5kLi\" +\n            \"BZb3UgY2FuIHNlZSBob3cgaXQncyBpcyBhIG5pY2UgdGV4\" +\n            \"dCB3aWxsIGNvbnZlcnRlZCB0byBzb21lIHNoaXQsIGJ1dC\" +\n            \"B0byBzZWUgaXQsIHlvdSBzaG91bGQgZGVidWcgdGhpcyB0\" +\n            \"ZXh0LiBIZXJlIGFyZSB0aGUgdGhpbmdzIGhlcmUu\").getBytes();", "modifier": "private final", "type": "byte[]", "declarator": "BASE64_MSG = (\"SGVsbG8gbXkgeW91bmcgZnJpZW5kLi\" +\n            \"BZb3UgY2FuIHNlZSBob3cgaXQncyBpcyBhIG5pY2UgdGV4\" +\n            \"dCB3aWxsIGNvbnZlcnRlZCB0byBzb21lIHNoaXQsIGJ1dC\" +\n            \"B0byBzZWUgaXQsIHlvdSBzaG91bGQgZGVidWcgdGhpcyB0\" +\n            \"ZXh0LiBIZXJlIGFyZSB0aGUgdGhpbmdzIGhlcmUu\").getBytes()", "var_name": "BASE64_MSG"}], "file": "CoreFeatures/Security/Codec/src/test/java/info/smart_tools/smartactors/security/encoding/codec/Base64Test.java"}, "test_case": {"identifier": "decodeBase64Test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void decodeBase64Test() throws DecodingException {\n        byte[] base64DecodeResult = base64.decode(BASE64_MSG);\n        assertTrue(Arrays.equals(base64DecodeResult, SOURCE_MSG));\n    }", "signature": "void decodeBase64Test()", "full_signature": "@Test public void decodeBase64Test()", "class_method_signature": "Base64Test.decodeBase64Test()", "testcase": true, "constructor": false, "invocations": ["decode", "assertTrue", "equals"]}, "focal_class": {"identifier": "Base64", "superclass": "", "interfaces": "implements ICodec", "fields": [{"original_string": "private final java.util.Base64.Encoder base64Encoder;", "modifier": "private final", "type": "java.util.Base64.Encoder", "declarator": "base64Encoder", "var_name": "base64Encoder"}, {"original_string": "private final java.util.Base64.Decoder base64Decoder;", "modifier": "private final", "type": "java.util.Base64.Decoder", "declarator": "base64Decoder", "var_name": "base64Decoder"}], "methods": [{"identifier": "Base64", "parameters": "()", "modifiers": "private", "return": "", "signature": " Base64()", "full_signature": "private  Base64()", "class_method_signature": "Base64.Base64()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "Base64", "signature": "Base64 create()", "full_signature": "public static Base64 create()", "class_method_signature": "Base64.create()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(@Nonnull final byte[] message)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] encode(@Nonnull final byte[] message)", "full_signature": "@Override public byte[] encode(@Nonnull final byte[] message)", "class_method_signature": "Base64.encode(@Nonnull final byte[] message)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(@Nonnull final byte[] message)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] decode(@Nonnull final byte[] message)", "full_signature": "@Override public byte[] decode(@Nonnull final byte[] message)", "class_method_signature": "Base64.decode(@Nonnull final byte[] message)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Security/Codec/src/main/java/info/smart_tools/smartactors/security/encoding/codec/Base64.java"}, "focal_method": {"identifier": "decode", "parameters": "(@Nonnull final byte[] message)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] decode(@Nonnull final byte[] message) throws DecodingException {\n        try {\n            return base64Decoder.decode(message);\n        } catch (Exception e) {\n            throw new DecodingException(\"Base64 decoding has been failed because: \" + e.getMessage(), e);\n        }\n    }", "signature": "byte[] decode(@Nonnull final byte[] message)", "full_signature": "@Override public byte[] decode(@Nonnull final byte[] message)", "class_method_signature": "Base64.decode(@Nonnull final byte[] message)", "testcase": false, "constructor": false, "invocations": ["decode", "getMessage"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}