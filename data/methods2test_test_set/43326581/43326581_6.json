{"test_class": {"identifier": "UserHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String dbName = DatabaseSettings.COUCH_DB_USERS;", "modifier": "private static final", "type": "String", "declarator": "dbName = DatabaseSettings.COUCH_DB_USERS", "var_name": "dbName"}, {"original_string": "private static final String DUMMY_EMAIL_ADDRESS_1 = \"dummy.user1@dummy.domain.tld\";", "modifier": "private static final", "type": "String", "declarator": "DUMMY_EMAIL_ADDRESS_1 = \"dummy.user1@dummy.domain.tld\"", "var_name": "DUMMY_EMAIL_ADDRESS_1"}, {"original_string": "private static final String DUMMY_EMAIL_ADDRESS_2 = \"dummy.user2@dummy.domain.tld\";", "modifier": "private static final", "type": "String", "declarator": "DUMMY_EMAIL_ADDRESS_2 = \"dummy.user2@dummy.domain.tld\"", "var_name": "DUMMY_EMAIL_ADDRESS_2"}, {"original_string": "private static final String DUMMY_COMMENT = \"Lorem ipsum\";", "modifier": "private static final", "type": "String", "declarator": "DUMMY_COMMENT = \"Lorem ipsum\"", "var_name": "DUMMY_COMMENT"}, {"original_string": "private static final String DUMMY_DEPARTMENT = \"DummyDepartment\";", "modifier": "private static final", "type": "String", "declarator": "DUMMY_DEPARTMENT = \"DummyDepartment\"", "var_name": "DUMMY_DEPARTMENT"}, {"original_string": "UserHandler handler;", "modifier": "", "type": "UserHandler", "declarator": "handler", "var_name": "handler"}], "file": "backend/src/src-users/src/test/java/org/eclipse/sw360/users/UserHandlerTest.java"}, "test_case": {"identifier": "testUpdateUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateUser() throws Exception {\n        User userWithoutComment = new User().setEmail(DUMMY_EMAIL_ADDRESS_2);\n\n        handler.addUser(userWithoutComment); // does not contain a comment\n\n        // update `userWithoutComment` with some stuff\n        userWithoutComment.setDepartment(DUMMY_DEPARTMENT);\n        userWithoutComment.setCommentMadeDuringModerationRequest(DUMMY_COMMENT);\n        handler.updateUser(userWithoutComment); // now contains a comment\n\n        User userFromDatabase = handler.getByEmail(DUMMY_EMAIL_ADDRESS_2);\n        assertEquals(DUMMY_EMAIL_ADDRESS_2, userFromDatabase.getEmail());\n        assertEquals(DUMMY_DEPARTMENT, userFromDatabase.getDepartment());\n        assertFalse(userFromDatabase.isSetCommentMadeDuringModerationRequest());\n    }", "signature": "void testUpdateUser()", "full_signature": "@Test public void testUpdateUser()", "class_method_signature": "UserHandlerTest.testUpdateUser()", "testcase": true, "constructor": false, "invocations": ["setEmail", "addUser", "setDepartment", "setCommentMadeDuringModerationRequest", "updateUser", "getByEmail", "assertEquals", "getEmail", "assertEquals", "getDepartment", "assertFalse", "isSetCommentMadeDuringModerationRequest"]}, "focal_class": {"identifier": "UserHandler", "superclass": "", "interfaces": "implements UserService.Iface", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(UserHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(UserHandler.class)", "var_name": "log"}, {"original_string": "UserDatabaseHandler db;", "modifier": "", "type": "UserDatabaseHandler", "declarator": "db", "var_name": "db"}], "methods": [{"identifier": "UserHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " UserHandler()", "full_signature": "public  UserHandler()", "class_method_signature": "UserHandler.UserHandler()", "testcase": false, "constructor": true}, {"identifier": "getByEmail", "parameters": "(String email)", "modifiers": "@Override public", "return": "User", "signature": "User getByEmail(String email)", "full_signature": "@Override public User getByEmail(String email)", "class_method_signature": "UserHandler.getByEmail(String email)", "testcase": false, "constructor": false}, {"identifier": "searchUsers", "parameters": "(String searchText)", "modifiers": "@Override public", "return": "List<User>", "signature": "List<User> searchUsers(String searchText)", "full_signature": "@Override public List<User> searchUsers(String searchText)", "class_method_signature": "UserHandler.searchUsers(String searchText)", "testcase": false, "constructor": false}, {"identifier": "getAllUsers", "parameters": "()", "modifiers": "@Override public", "return": "List<User>", "signature": "List<User> getAllUsers()", "full_signature": "@Override public List<User> getAllUsers()", "class_method_signature": "UserHandler.getAllUsers()", "testcase": false, "constructor": false}, {"identifier": "addUser", "parameters": "(User user)", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus addUser(User user)", "full_signature": "@Override public RequestStatus addUser(User user)", "class_method_signature": "UserHandler.addUser(User user)", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "(User user)", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus updateUser(User user)", "full_signature": "@Override public RequestStatus updateUser(User user)", "class_method_signature": "UserHandler.updateUser(User user)", "testcase": false, "constructor": false}, {"identifier": "deleteUser", "parameters": "(User user, User adminUser)", "modifiers": "@Override public", "return": "RequestStatus", "signature": "RequestStatus deleteUser(User user, User adminUser)", "full_signature": "@Override public RequestStatus deleteUser(User user, User adminUser)", "class_method_signature": "UserHandler.deleteUser(User user, User adminUser)", "testcase": false, "constructor": false}, {"identifier": "getDepartmentByEmail", "parameters": "(String email)", "modifiers": "@Override public", "return": "String", "signature": "String getDepartmentByEmail(String email)", "full_signature": "@Override public String getDepartmentByEmail(String email)", "class_method_signature": "UserHandler.getDepartmentByEmail(String email)", "testcase": false, "constructor": false}], "file": "backend/src/src-users/src/main/java/org/eclipse/sw360/users/UserHandler.java"}, "focal_method": {"identifier": "updateUser", "parameters": "(User user)", "modifiers": "@Override public", "return": "RequestStatus", "body": "@Override\n    public RequestStatus updateUser(User user) throws TException {\n        assertNotNull(user);\n        assertNotNull(user.getEmail());\n        return db.updateUser(user);\n    }", "signature": "RequestStatus updateUser(User user)", "full_signature": "@Override public RequestStatus updateUser(User user)", "class_method_signature": "UserHandler.updateUser(User user)", "testcase": false, "constructor": false, "invocations": ["assertNotNull", "assertNotNull", "getEmail", "updateUser"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}