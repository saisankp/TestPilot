{"test_class": {"identifier": "AbstractServiceConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-api/src/test/java/com/alibaba/dubbo/config/AbstractServiceConfigTest.java"}, "test_case": {"identifier": "testFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFilter() throws Exception {\n        ServiceConfig serviceConfig = new ServiceConfig();\n        serviceConfig.setFilter(\"mockfilter\");\n        assertThat(serviceConfig.getFilter(), equalTo(\"mockfilter\"));\n        Map<String, String> parameters = new HashMap<String, String>();\n        parameters.put(Constants.SERVICE_FILTER_KEY, \"prefilter\");\n        AbstractServiceConfig.appendParameters(parameters, serviceConfig);\n        assertThat(parameters, hasEntry(Constants.SERVICE_FILTER_KEY, \"prefilter,mockfilter\"));\n    }", "signature": "void testFilter()", "full_signature": "@Test public void testFilter()", "class_method_signature": "AbstractServiceConfigTest.testFilter()", "testcase": true, "constructor": false, "invocations": ["setFilter", "assertThat", "getFilter", "equalTo", "put", "appendParameters", "assertThat", "hasEntry"]}, "focal_class": {"identifier": "AbstractServiceConfig", "superclass": "extends AbstractInterfaceConfig", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "protected String version;", "modifier": "protected", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "protected String group;", "modifier": "protected", "type": "String", "declarator": "group", "var_name": "group"}, {"original_string": "protected Boolean deprecated;", "modifier": "protected", "type": "Boolean", "declarator": "deprecated", "var_name": "deprecated"}, {"original_string": "protected Integer delay;", "modifier": "protected", "type": "Integer", "declarator": "delay", "var_name": "delay"}, {"original_string": "protected Boolean export;", "modifier": "protected", "type": "Boolean", "declarator": "export", "var_name": "export"}, {"original_string": "protected Integer weight;", "modifier": "protected", "type": "Integer", "declarator": "weight", "var_name": "weight"}, {"original_string": "protected String document;", "modifier": "protected", "type": "String", "declarator": "document", "var_name": "document"}, {"original_string": "protected Boolean dynamic;", "modifier": "protected", "type": "Boolean", "declarator": "dynamic", "var_name": "dynamic"}, {"original_string": "protected String token;", "modifier": "protected", "type": "String", "declarator": "token", "var_name": "token"}, {"original_string": "protected String accesslog;", "modifier": "protected", "type": "String", "declarator": "accesslog", "var_name": "accesslog"}, {"original_string": "protected List<ProtocolConfig> protocols;", "modifier": "protected", "type": "List<ProtocolConfig>", "declarator": "protocols", "var_name": "protocols"}, {"original_string": "private Integer executes;", "modifier": "private", "type": "Integer", "declarator": "executes", "var_name": "executes"}, {"original_string": "private Boolean register;", "modifier": "private", "type": "Boolean", "declarator": "register", "var_name": "register"}, {"original_string": "private Integer warmup;", "modifier": "private", "type": "Integer", "declarator": "warmup", "var_name": "warmup"}, {"original_string": "private String serialization;", "modifier": "private", "type": "String", "declarator": "serialization", "var_name": "serialization"}, {"original_string": "protected String tag;", "modifier": "protected", "type": "String", "declarator": "tag", "var_name": "tag"}], "methods": [{"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "AbstractServiceConfig.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "void", "signature": "void setVersion(String version)", "full_signature": "public void setVersion(String version)", "class_method_signature": "AbstractServiceConfig.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGroup()", "full_signature": "public String getGroup()", "class_method_signature": "AbstractServiceConfig.getGroup()", "testcase": false, "constructor": false}, {"identifier": "setGroup", "parameters": "(String group)", "modifiers": "public", "return": "void", "signature": "void setGroup(String group)", "full_signature": "public void setGroup(String group)", "class_method_signature": "AbstractServiceConfig.setGroup(String group)", "testcase": false, "constructor": false}, {"identifier": "getDelay", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getDelay()", "full_signature": "public Integer getDelay()", "class_method_signature": "AbstractServiceConfig.getDelay()", "testcase": false, "constructor": false}, {"identifier": "setDelay", "parameters": "(Integer delay)", "modifiers": "public", "return": "void", "signature": "void setDelay(Integer delay)", "full_signature": "public void setDelay(Integer delay)", "class_method_signature": "AbstractServiceConfig.setDelay(Integer delay)", "testcase": false, "constructor": false}, {"identifier": "getExport", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean getExport()", "full_signature": "public Boolean getExport()", "class_method_signature": "AbstractServiceConfig.getExport()", "testcase": false, "constructor": false}, {"identifier": "setExport", "parameters": "(Boolean export)", "modifiers": "public", "return": "void", "signature": "void setExport(Boolean export)", "full_signature": "public void setExport(Boolean export)", "class_method_signature": "AbstractServiceConfig.setExport(Boolean export)", "testcase": false, "constructor": false}, {"identifier": "getWeight", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getWeight()", "full_signature": "public Integer getWeight()", "class_method_signature": "AbstractServiceConfig.getWeight()", "testcase": false, "constructor": false}, {"identifier": "setWeight", "parameters": "(Integer weight)", "modifiers": "public", "return": "void", "signature": "void setWeight(Integer weight)", "full_signature": "public void setWeight(Integer weight)", "class_method_signature": "AbstractServiceConfig.setWeight(Integer weight)", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "()", "modifiers": "@Parameter(escaped = true) public", "return": "String", "signature": "String getDocument()", "full_signature": "@Parameter(escaped = true) public String getDocument()", "class_method_signature": "AbstractServiceConfig.getDocument()", "testcase": false, "constructor": false}, {"identifier": "setDocument", "parameters": "(String document)", "modifiers": "public", "return": "void", "signature": "void setDocument(String document)", "full_signature": "public void setDocument(String document)", "class_method_signature": "AbstractServiceConfig.setDocument(String document)", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getToken()", "full_signature": "public String getToken()", "class_method_signature": "AbstractServiceConfig.getToken()", "testcase": false, "constructor": false}, {"identifier": "setToken", "parameters": "(String token)", "modifiers": "public", "return": "void", "signature": "void setToken(String token)", "full_signature": "public void setToken(String token)", "class_method_signature": "AbstractServiceConfig.setToken(String token)", "testcase": false, "constructor": false}, {"identifier": "setToken", "parameters": "(Boolean token)", "modifiers": "public", "return": "void", "signature": "void setToken(Boolean token)", "full_signature": "public void setToken(Boolean token)", "class_method_signature": "AbstractServiceConfig.setToken(Boolean token)", "testcase": false, "constructor": false}, {"identifier": "isDeprecated", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isDeprecated()", "full_signature": "public Boolean isDeprecated()", "class_method_signature": "AbstractServiceConfig.isDeprecated()", "testcase": false, "constructor": false}, {"identifier": "setDeprecated", "parameters": "(Boolean deprecated)", "modifiers": "public", "return": "void", "signature": "void setDeprecated(Boolean deprecated)", "full_signature": "public void setDeprecated(Boolean deprecated)", "class_method_signature": "AbstractServiceConfig.setDeprecated(Boolean deprecated)", "testcase": false, "constructor": false}, {"identifier": "isDynamic", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isDynamic()", "full_signature": "public Boolean isDynamic()", "class_method_signature": "AbstractServiceConfig.isDynamic()", "testcase": false, "constructor": false}, {"identifier": "setDynamic", "parameters": "(Boolean dynamic)", "modifiers": "public", "return": "void", "signature": "void setDynamic(Boolean dynamic)", "full_signature": "public void setDynamic(Boolean dynamic)", "class_method_signature": "AbstractServiceConfig.setDynamic(Boolean dynamic)", "testcase": false, "constructor": false}, {"identifier": "getProtocols", "parameters": "()", "modifiers": "public", "return": "List<ProtocolConfig>", "signature": "List<ProtocolConfig> getProtocols()", "full_signature": "public List<ProtocolConfig> getProtocols()", "class_method_signature": "AbstractServiceConfig.getProtocols()", "testcase": false, "constructor": false}, {"identifier": "setProtocols", "parameters": "(List<? extends ProtocolConfig> protocols)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void setProtocols(List<? extends ProtocolConfig> protocols)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void setProtocols(List<? extends ProtocolConfig> protocols)", "class_method_signature": "AbstractServiceConfig.setProtocols(List<? extends ProtocolConfig> protocols)", "testcase": false, "constructor": false}, {"identifier": "getProtocol", "parameters": "()", "modifiers": "public", "return": "ProtocolConfig", "signature": "ProtocolConfig getProtocol()", "full_signature": "public ProtocolConfig getProtocol()", "class_method_signature": "AbstractServiceConfig.getProtocol()", "testcase": false, "constructor": false}, {"identifier": "setProtocol", "parameters": "(ProtocolConfig protocol)", "modifiers": "public", "return": "void", "signature": "void setProtocol(ProtocolConfig protocol)", "full_signature": "public void setProtocol(ProtocolConfig protocol)", "class_method_signature": "AbstractServiceConfig.setProtocol(ProtocolConfig protocol)", "testcase": false, "constructor": false}, {"identifier": "getAccesslog", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAccesslog()", "full_signature": "public String getAccesslog()", "class_method_signature": "AbstractServiceConfig.getAccesslog()", "testcase": false, "constructor": false}, {"identifier": "setAccesslog", "parameters": "(String accesslog)", "modifiers": "public", "return": "void", "signature": "void setAccesslog(String accesslog)", "full_signature": "public void setAccesslog(String accesslog)", "class_method_signature": "AbstractServiceConfig.setAccesslog(String accesslog)", "testcase": false, "constructor": false}, {"identifier": "setAccesslog", "parameters": "(Boolean accesslog)", "modifiers": "public", "return": "void", "signature": "void setAccesslog(Boolean accesslog)", "full_signature": "public void setAccesslog(Boolean accesslog)", "class_method_signature": "AbstractServiceConfig.setAccesslog(Boolean accesslog)", "testcase": false, "constructor": false}, {"identifier": "getExecutes", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getExecutes()", "full_signature": "public Integer getExecutes()", "class_method_signature": "AbstractServiceConfig.getExecutes()", "testcase": false, "constructor": false}, {"identifier": "setExecutes", "parameters": "(Integer executes)", "modifiers": "public", "return": "void", "signature": "void setExecutes(Integer executes)", "full_signature": "public void setExecutes(Integer executes)", "class_method_signature": "AbstractServiceConfig.setExecutes(Integer executes)", "testcase": false, "constructor": false}, {"identifier": "getFilter", "parameters": "()", "modifiers": "@Override @Parameter(key = Constants.SERVICE_FILTER_KEY, append = true) public", "return": "String", "signature": "String getFilter()", "full_signature": "@Override @Parameter(key = Constants.SERVICE_FILTER_KEY, append = true) public String getFilter()", "class_method_signature": "AbstractServiceConfig.getFilter()", "testcase": false, "constructor": false}, {"identifier": "getListener", "parameters": "()", "modifiers": "@Override @Parameter(key = Constants.EXPORTER_LISTENER_KEY, append = true) public", "return": "String", "signature": "String getListener()", "full_signature": "@Override @Parameter(key = Constants.EXPORTER_LISTENER_KEY, append = true) public String getListener()", "class_method_signature": "AbstractServiceConfig.getListener()", "testcase": false, "constructor": false}, {"identifier": "setListener", "parameters": "(String listener)", "modifiers": "@Override public", "return": "void", "signature": "void setListener(String listener)", "full_signature": "@Override public void setListener(String listener)", "class_method_signature": "AbstractServiceConfig.setListener(String listener)", "testcase": false, "constructor": false}, {"identifier": "isRegister", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isRegister()", "full_signature": "public Boolean isRegister()", "class_method_signature": "AbstractServiceConfig.isRegister()", "testcase": false, "constructor": false}, {"identifier": "setRegister", "parameters": "(Boolean register)", "modifiers": "public", "return": "void", "signature": "void setRegister(Boolean register)", "full_signature": "public void setRegister(Boolean register)", "class_method_signature": "AbstractServiceConfig.setRegister(Boolean register)", "testcase": false, "constructor": false}, {"identifier": "getWarmup", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getWarmup()", "full_signature": "public Integer getWarmup()", "class_method_signature": "AbstractServiceConfig.getWarmup()", "testcase": false, "constructor": false}, {"identifier": "setWarmup", "parameters": "(Integer warmup)", "modifiers": "public", "return": "void", "signature": "void setWarmup(Integer warmup)", "full_signature": "public void setWarmup(Integer warmup)", "class_method_signature": "AbstractServiceConfig.setWarmup(Integer warmup)", "testcase": false, "constructor": false}, {"identifier": "getSerialization", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSerialization()", "full_signature": "public String getSerialization()", "class_method_signature": "AbstractServiceConfig.getSerialization()", "testcase": false, "constructor": false}, {"identifier": "setSerialization", "parameters": "(String serialization)", "modifiers": "public", "return": "void", "signature": "void setSerialization(String serialization)", "full_signature": "public void setSerialization(String serialization)", "class_method_signature": "AbstractServiceConfig.setSerialization(String serialization)", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "()", "modifiers": "@Parameter(key = \"dubbo.tag\") public", "return": "String", "signature": "String getTag()", "full_signature": "@Parameter(key = \"dubbo.tag\") public String getTag()", "class_method_signature": "AbstractServiceConfig.getTag()", "testcase": false, "constructor": false}, {"identifier": "setTag", "parameters": "(String tag)", "modifiers": "public", "return": "void", "signature": "void setTag(String tag)", "full_signature": "public void setTag(String tag)", "class_method_signature": "AbstractServiceConfig.setTag(String tag)", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/AbstractServiceConfig.java"}, "focal_method": {"identifier": "getFilter", "parameters": "()", "modifiers": "@Override @Parameter(key = Constants.SERVICE_FILTER_KEY, append = true) public", "return": "String", "body": "@Override\n    @Parameter(key = Constants.SERVICE_FILTER_KEY, append = true)\n    public String getFilter() {\n        return super.getFilter();\n    }", "signature": "String getFilter()", "full_signature": "@Override @Parameter(key = Constants.SERVICE_FILTER_KEY, append = true) public String getFilter()", "class_method_signature": "AbstractServiceConfig.getFilter()", "testcase": false, "constructor": false, "invocations": ["getFilter"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}