{"test_class": {"identifier": "DataSearchLogDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    DataSearchLogDao dataSearchLogDao;", "modifier": "@Autowired", "type": "DataSearchLogDao", "declarator": "dataSearchLogDao", "var_name": "dataSearchLogDao"}, {"original_string": "DataSearchLog dataSearchLog;", "modifier": "", "type": "DataSearchLog", "declarator": "dataSearchLog", "var_name": "dataSearchLog"}, {"original_string": "DataSearchLogView dataSearchLogModel;", "modifier": "", "type": "DataSearchLogView", "declarator": "dataSearchLogModel", "var_name": "dataSearchLogModel"}, {"original_string": "Paging<DataSearchLogView> paging;", "modifier": "", "type": "Paging<DataSearchLogView>", "declarator": "paging", "var_name": "paging"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/DataSearchLogDaoTest.java"}, "test_case": {"identifier": "findLogPageList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findLogPageList() throws Exception {\n        List<DataSearchLogView> list = dataSearchLogDao.findLogPageList(paging);\n        System.out.println(\"findLogPageList :-------> \" + list);\n        Assert.assertTrue(list.size() > 0);\n    }", "signature": "void findLogPageList()", "full_signature": "@Test public void findLogPageList()", "class_method_signature": "DataSearchLogDaoTest.findLogPageList()", "testcase": true, "constructor": false, "invocations": ["findLogPageList", "println", "assertTrue", "size"]}, "focal_class": {"identifier": "DataSearchLogDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "insertDataSearchLog", "parameters": "(DataSearchLog dataSearchLog)", "modifiers": "public", "return": "Long", "signature": "Long insertDataSearchLog(DataSearchLog dataSearchLog)", "full_signature": "public Long insertDataSearchLog(DataSearchLog dataSearchLog)", "class_method_signature": "DataSearchLogDao.insertDataSearchLog(DataSearchLog dataSearchLog)", "testcase": false, "constructor": false}, {"identifier": "getTotalCount", "parameters": "(Paging<DataSearchLogView> paging)", "modifiers": "public", "return": "Long", "signature": "Long getTotalCount(Paging<DataSearchLogView> paging)", "full_signature": "public Long getTotalCount(Paging<DataSearchLogView> paging)", "class_method_signature": "DataSearchLogDao.getTotalCount(Paging<DataSearchLogView> paging)", "testcase": false, "constructor": false}, {"identifier": "findLogPageList", "parameters": "(Paging<DataSearchLogView> paging)", "modifiers": "public", "return": "List<DataSearchLogView>", "signature": "List<DataSearchLogView> findLogPageList(Paging<DataSearchLogView> paging)", "full_signature": "public List<DataSearchLogView> findLogPageList(Paging<DataSearchLogView> paging)", "class_method_signature": "DataSearchLogDao.findLogPageList(Paging<DataSearchLogView> paging)", "testcase": false, "constructor": false}, {"identifier": "appenWhere", "parameters": "(Paging<DataSearchLogView> paging)", "modifiers": "private", "return": "String", "signature": "String appenWhere(Paging<DataSearchLogView> paging)", "full_signature": "private String appenWhere(Paging<DataSearchLogView> paging)", "class_method_signature": "DataSearchLogDao.appenWhere(Paging<DataSearchLogView> paging)", "testcase": false, "constructor": false}, {"identifier": "appenCondition", "parameters": "(Paging<DataSearchLogView> paging)", "modifiers": "private", "return": "String", "signature": "String appenCondition(Paging<DataSearchLogView> paging)", "full_signature": "private String appenCondition(Paging<DataSearchLogView> paging)", "class_method_signature": "DataSearchLogDao.appenCondition(Paging<DataSearchLogView> paging)", "testcase": false, "constructor": false}, {"identifier": "findDataSearchLogList", "parameters": "(Integer limit)", "modifiers": "public", "return": "List<DataSearchLog>", "signature": "List<DataSearchLog> findDataSearchLogList(Integer limit)", "full_signature": "public List<DataSearchLog> findDataSearchLogList(Integer limit)", "class_method_signature": "DataSearchLogDao.findDataSearchLogList(Integer limit)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/DataSearchLogDao.java"}, "focal_method": {"identifier": "findLogPageList", "parameters": "(Paging<DataSearchLogView> paging)", "modifiers": "public", "return": "List<DataSearchLogView>", "body": "public List<DataSearchLogView> findLogPageList(Paging<DataSearchLogView> paging) throws SQLException {\n        String sql = \"select t1.id, t1.ip, t1.user_no, t1.request_type, t1.request, t1.success, t1.result, t1.inserttime, t2.user_real_name \" +\n                \"from data_search_log t1 \" +\n                \"left join login_users t2 on t1.user_no = t2.user_no \" + appenCondition(paging);\n        return this.queryBySql(sql, DataSearchLogView.class);\n    }", "signature": "List<DataSearchLogView> findLogPageList(Paging<DataSearchLogView> paging)", "full_signature": "public List<DataSearchLogView> findLogPageList(Paging<DataSearchLogView> paging)", "class_method_signature": "DataSearchLogDao.findLogPageList(Paging<DataSearchLogView> paging)", "testcase": false, "constructor": false, "invocations": ["appenCondition", "queryBySql"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}