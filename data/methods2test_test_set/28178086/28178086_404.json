{"test_class": {"identifier": "TsVariableWindowTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/tstoolkit/timeseries/regression/TsVariableWindowTest.java"}, "test_case": {"identifier": "testTD", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTD() {\n        Matrix M1 = new Matrix(251, 6);\n        Matrix M2 = new Matrix(251, 6);\n        TsDomain all = new TsDomain(TsFrequency.Monthly, 1975, 7, 251);\n        GregorianCalendarVariables var = GregorianCalendarVariables.getDefault(TradingDaysType.TradingDays);\n        var.data(all, M1.columnList());\n//        System.out.println(\"all\");\n//        System.out.println(M1);\n        TsVariableWindow wnd1 = new TsVariableWindow(var, new Day(1970, Month.January, 0), new Day(1982, Month.April, 29));\n        TsVariableWindow wnd2 = new TsVariableWindow(var, new Day(1982, Month.May, 0), Day.toDay());\n        wnd1.data(all, M2.columnList());\n        assertTrue(M1.distance(M2) > 1e-9);\n//        System.out.println(\"wnd1\");\n//        System.out.println(M2);\n        wnd2.data(all, M2.columnList());\n//        System.out.println(\"wnd2\");\n//        System.out.println(M2);\n        assertTrue(M1.distance(M2) < 1e-9);\n    }", "signature": "void testTD()", "full_signature": "@Test public void testTD()", "class_method_signature": "TsVariableWindowTest.testTD()", "testcase": true, "constructor": false, "invocations": ["getDefault", "data", "columnList", "toDay", "data", "columnList", "assertTrue", "distance", "data", "columnList", "assertTrue", "distance"]}, "focal_class": {"identifier": "TsVariableWindow", "superclass": "extends AbstractTsModifier", "interfaces": "", "fields": [{"original_string": "private final Day start, end;", "modifier": "private final", "type": "Day", "declarator": "start", "var_name": "start"}], "methods": [{"identifier": "TsVariableWindow", "parameters": "(final ITsVariable var, final Day start, final Day end)", "modifiers": "public", "return": "", "signature": " TsVariableWindow(final ITsVariable var, final Day start, final Day end)", "full_signature": "public  TsVariableWindow(final ITsVariable var, final Day start, final Day end)", "class_method_signature": "TsVariableWindow.TsVariableWindow(final ITsVariable var, final Day start, final Day end)", "testcase": false, "constructor": true}, {"identifier": "data", "parameters": "(TsDomain domain, List<DataBlock> data)", "modifiers": "@Override public", "return": "void", "signature": "void data(TsDomain domain, List<DataBlock> data)", "full_signature": "@Override public void data(TsDomain domain, List<DataBlock> data)", "class_method_signature": "TsVariableWindow.data(TsDomain domain, List<DataBlock> data)", "testcase": false, "constructor": false}, {"identifier": "description", "parameters": "(String desc)", "modifiers": "private", "return": "String", "signature": "String description(String desc)", "full_signature": "private String description(String desc)", "class_method_signature": "TsVariableWindow.description(String desc)", "testcase": false, "constructor": false}, {"identifier": "getStart", "parameters": "()", "modifiers": "public", "return": "Day", "signature": "Day getStart()", "full_signature": "public Day getStart()", "class_method_signature": "TsVariableWindow.getStart()", "testcase": false, "constructor": false}, {"identifier": "getEnd", "parameters": "()", "modifiers": "public", "return": "Day", "signature": "Day getEnd()", "full_signature": "public Day getEnd()", "class_method_signature": "TsVariableWindow.getEnd()", "testcase": false, "constructor": false}, {"identifier": "getDefinitionDomain", "parameters": "()", "modifiers": "@Override public", "return": "TsDomain", "signature": "TsDomain getDefinitionDomain()", "full_signature": "@Override public TsDomain getDefinitionDomain()", "class_method_signature": "TsVariableWindow.getDefinitionDomain()", "testcase": false, "constructor": false}, {"identifier": "getDefinitionFrequency", "parameters": "()", "modifiers": "@Override public", "return": "TsFrequency", "signature": "TsFrequency getDefinitionFrequency()", "full_signature": "@Override public TsFrequency getDefinitionFrequency()", "class_method_signature": "TsVariableWindow.getDefinitionFrequency()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(TsFrequency context)", "modifiers": "@Override public", "return": "String", "signature": "String getDescription(TsFrequency context)", "full_signature": "@Override public String getDescription(TsFrequency context)", "class_method_signature": "TsVariableWindow.getDescription(TsFrequency context)", "testcase": false, "constructor": false}, {"identifier": "getDim", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDim()", "full_signature": "@Override public int getDim()", "class_method_signature": "TsVariableWindow.getDim()", "testcase": false, "constructor": false}, {"identifier": "getItemDescription", "parameters": "(int idx, TsFrequency context)", "modifiers": "@Override public", "return": "String", "signature": "String getItemDescription(int idx, TsFrequency context)", "full_signature": "@Override public String getItemDescription(int idx, TsFrequency context)", "class_method_signature": "TsVariableWindow.getItemDescription(int idx, TsFrequency context)", "testcase": false, "constructor": false}, {"identifier": "getVariable", "parameters": "()", "modifiers": "@Override public", "return": "ITsVariable", "signature": "ITsVariable getVariable()", "full_signature": "@Override public ITsVariable getVariable()", "class_method_signature": "TsVariableWindow.getVariable()", "testcase": false, "constructor": false}, {"identifier": "isSignificant", "parameters": "(TsDomain domain)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSignificant(TsDomain domain)", "full_signature": "@Override public boolean isSignificant(TsDomain domain)", "class_method_signature": "TsVariableWindow.isSignificant(TsDomain domain)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "TsVariableWindow.getName()", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/timeseries/regression/TsVariableWindow.java"}, "focal_method": {"identifier": "data", "parameters": "(TsDomain domain, List<DataBlock> data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void data(TsDomain domain, List<DataBlock> data) {\n        TsPeriodSelector sel=new TsPeriodSelector();\n        sel.between(start, end);\n        TsDomain sdom = domain.select(sel);\n        int nbeg=sdom.getStart().minus(domain.getStart());\n        int n=sdom.getLength();\n        if (n == 0)\n            return;\n        ArrayList<DataBlock> tmp=new ArrayList<>();\n        for (DataBlock bl : data){\n            tmp.add(bl.extract(nbeg, n));\n        }\n        var.data(sdom, tmp);\n    }", "signature": "void data(TsDomain domain, List<DataBlock> data)", "full_signature": "@Override public void data(TsDomain domain, List<DataBlock> data)", "class_method_signature": "TsVariableWindow.data(TsDomain domain, List<DataBlock> data)", "testcase": false, "constructor": false, "invocations": ["between", "select", "minus", "getStart", "getStart", "getLength", "add", "extract", "data"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}