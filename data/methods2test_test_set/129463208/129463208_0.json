{"test_class": {"identifier": "LoadingProceduresTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public Neo4jRule neo4j = new Neo4jRule()\n            .withProcedure(LoadingProcedures.class)\n            .withFunction(Json.class)\n            .withProcedure(Create.class);", "modifier": "@Rule\n    public", "type": "Neo4jRule", "declarator": "neo4j = new Neo4jRule()\n            .withProcedure(LoadingProcedures.class)\n            .withFunction(Json.class)\n            .withProcedure(Create.class)", "var_name": "neo4j"}], "file": "neuprint-load-procedures/src/test/java/org/janelia/flyem/neuprintloadprocedures/procedures/LoadingProceduresTest.java"}, "test_case": {"identifier": "shouldAddSynapseToRoiInfoWithHP", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldAddSynapseToRoiInfoWithHP() {\n        RoiInfoWithHighPrecisionCounts roiInfo = new RoiInfoWithHighPrecisionCounts();\n        roiInfo.incrementPreForRoi(\"roiA\");\n        roiInfo.incrementPreHPForRoi(\"roiA\");\n        roiInfo.incrementPostForRoi(\"roiA\");\n\n        String initialRoiInfoString = roiInfo.getAsJsonString();\n\n        String newRoiInfoString = addSynapseToRoiInfoWithHP(initialRoiInfoString, \"roiB\", \"post\", 0.5, .9, .4);\n\n        Assert.assertEquals(\"{\\\"roiA\\\":{\\\"preHP\\\":1,\\\"postHP\\\":0,\\\"pre\\\":1,\\\"post\\\":1},\\\"roiB\\\":{\\\"preHP\\\":0,\\\"postHP\\\":1,\\\"pre\\\":0,\\\"post\\\":1}}\",newRoiInfoString);\n\n        String newRoiInfoString2 = addSynapseToRoiInfoWithHP(newRoiInfoString, \"roiB\", \"pre\", 0.98, .9, .4);\n\n        Assert.assertEquals(\"{\\\"roiA\\\":{\\\"preHP\\\":1,\\\"postHP\\\":0,\\\"pre\\\":1,\\\"post\\\":1},\\\"roiB\\\":{\\\"preHP\\\":1,\\\"postHP\\\":1,\\\"pre\\\":1,\\\"post\\\":1}}\",newRoiInfoString2);\n\n    }", "signature": "void shouldAddSynapseToRoiInfoWithHP()", "full_signature": "@Test public void shouldAddSynapseToRoiInfoWithHP()", "class_method_signature": "LoadingProceduresTest.shouldAddSynapseToRoiInfoWithHP()", "testcase": true, "constructor": false, "invocations": ["incrementPreForRoi", "incrementPreHPForRoi", "incrementPostForRoi", "getAsJsonString", "addSynapseToRoiInfoWithHP", "assertEquals", "addSynapseToRoiInfoWithHP", "assertEquals"]}, "focal_class": {"identifier": "LoadingProcedures", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Context\n    public GraphDatabaseService dbService;", "modifier": "@Context\n    public", "type": "GraphDatabaseService", "declarator": "dbService", "var_name": "dbService"}, {"original_string": "@Context\n    public Log log;", "modifier": "@Context\n    public", "type": "Log", "declarator": "log", "var_name": "log"}], "methods": [{"identifier": "setConnectionSetRoiInfoAndWeightHP", "parameters": "(@Name(\"preBodyId\") final Long preBodyId,\n                                                   @Name(\"postBodyId\") final Long postBodyId,\n                                                   @Name(\"datasetLabel\") final String datasetLabel,\n                                                   @Name(\"preHPThreshold\") final Double preHPThreshold,\n                                                   @Name(\"postHPThreshold\") final Double postHPThreshold)", "modifiers": "@Procedure(value = \"loader.setConnectionSetRoiInfoAndWeightHP\", mode = Mode.WRITE) @Description(\"loader.setConnectionSetRoiInfoAndWeightHP : Add roiInfo property to ConnectionSet node.\") public", "return": "void", "signature": "void setConnectionSetRoiInfoAndWeightHP(@Name(\"preBodyId\") final Long preBodyId,\n                                                   @Name(\"postBodyId\") final Long postBodyId,\n                                                   @Name(\"datasetLabel\") final String datasetLabel,\n                                                   @Name(\"preHPThreshold\") final Double preHPThreshold,\n                                                   @Name(\"postHPThreshold\") final Double postHPThreshold)", "full_signature": "@Procedure(value = \"loader.setConnectionSetRoiInfoAndWeightHP\", mode = Mode.WRITE) @Description(\"loader.setConnectionSetRoiInfoAndWeightHP : Add roiInfo property to ConnectionSet node.\") public void setConnectionSetRoiInfoAndWeightHP(@Name(\"preBodyId\") final Long preBodyId,\n                                                   @Name(\"postBodyId\") final Long postBodyId,\n                                                   @Name(\"datasetLabel\") final String datasetLabel,\n                                                   @Name(\"preHPThreshold\") final Double preHPThreshold,\n                                                   @Name(\"postHPThreshold\") final Double postHPThreshold)", "class_method_signature": "LoadingProcedures.setConnectionSetRoiInfoAndWeightHP(@Name(\"preBodyId\") final Long preBodyId,\n                                                   @Name(\"postBodyId\") final Long postBodyId,\n                                                   @Name(\"datasetLabel\") final String datasetLabel,\n                                                   @Name(\"preHPThreshold\") final Double preHPThreshold,\n                                                   @Name(\"postHPThreshold\") final Double postHPThreshold)", "testcase": false, "constructor": false}, {"identifier": "addPropsAndConnectionInfoToSegment", "parameters": "(@Name(\"segment\") final Node segment,\n                                                   @Name(\"synapseSet\") final Node synapseSet,\n                                                   @Name(\"dataset\") final String dataset,\n                                                   @Name(\"preHPThreshold\") final Double preHPThreshold,\n                                                   @Name(\"postHPThreshold\") final Double postHPThreshold,\n                                                   @Name(\"neuronThreshold\") final Long neuronThreshold,\n                                                   @Name(\"addCSRoiInfoAndWeightHP\") final boolean addCSRoiInfoAndWeightHP)", "modifiers": "@Procedure(value = \"loader.addPropsAndConnectionInfoToSegment\", mode = Mode.WRITE) @Description(\"loader.addPropsAndConnectionInfoToSegment(segmentNode, synapseSetNode, dataset, preHPThreshold, postHPThreshold, neuronThreshold, addCSRoiInfoAndWeightHP)\") public", "return": "void", "signature": "void addPropsAndConnectionInfoToSegment(@Name(\"segment\") final Node segment,\n                                                   @Name(\"synapseSet\") final Node synapseSet,\n                                                   @Name(\"dataset\") final String dataset,\n                                                   @Name(\"preHPThreshold\") final Double preHPThreshold,\n                                                   @Name(\"postHPThreshold\") final Double postHPThreshold,\n                                                   @Name(\"neuronThreshold\") final Long neuronThreshold,\n                                                   @Name(\"addCSRoiInfoAndWeightHP\") final boolean addCSRoiInfoAndWeightHP)", "full_signature": "@Procedure(value = \"loader.addPropsAndConnectionInfoToSegment\", mode = Mode.WRITE) @Description(\"loader.addPropsAndConnectionInfoToSegment(segmentNode, synapseSetNode, dataset, preHPThreshold, postHPThreshold, neuronThreshold, addCSRoiInfoAndWeightHP)\") public void addPropsAndConnectionInfoToSegment(@Name(\"segment\") final Node segment,\n                                                   @Name(\"synapseSet\") final Node synapseSet,\n                                                   @Name(\"dataset\") final String dataset,\n                                                   @Name(\"preHPThreshold\") final Double preHPThreshold,\n                                                   @Name(\"postHPThreshold\") final Double postHPThreshold,\n                                                   @Name(\"neuronThreshold\") final Long neuronThreshold,\n                                                   @Name(\"addCSRoiInfoAndWeightHP\") final boolean addCSRoiInfoAndWeightHP)", "class_method_signature": "LoadingProcedures.addPropsAndConnectionInfoToSegment(@Name(\"segment\") final Node segment,\n                                                   @Name(\"synapseSet\") final Node synapseSet,\n                                                   @Name(\"dataset\") final String dataset,\n                                                   @Name(\"preHPThreshold\") final Double preHPThreshold,\n                                                   @Name(\"postHPThreshold\") final Double postHPThreshold,\n                                                   @Name(\"neuronThreshold\") final Long neuronThreshold,\n                                                   @Name(\"addCSRoiInfoAndWeightHP\") final boolean addCSRoiInfoAndWeightHP)", "testcase": false, "constructor": false}, {"identifier": "getMetaNodeRoiSet", "parameters": "(final Node metaNode)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getMetaNodeRoiSet(final Node metaNode)", "full_signature": "public static Set<String> getMetaNodeRoiSet(final Node metaNode)", "class_method_signature": "LoadingProcedures.getMetaNodeRoiSet(final Node metaNode)", "testcase": false, "constructor": false}, {"identifier": "incrementSegmentPreCount", "parameters": "(Node segment)", "modifiers": "public static", "return": "void", "signature": "void incrementSegmentPreCount(Node segment)", "full_signature": "public static void incrementSegmentPreCount(Node segment)", "class_method_signature": "LoadingProcedures.incrementSegmentPreCount(Node segment)", "testcase": false, "constructor": false}, {"identifier": "incrementSegmentPostCount", "parameters": "(Node segment)", "modifiers": "public static", "return": "void", "signature": "void incrementSegmentPostCount(Node segment)", "full_signature": "public static void incrementSegmentPostCount(Node segment)", "class_method_signature": "LoadingProcedures.incrementSegmentPostCount(Node segment)", "testcase": false, "constructor": false}, {"identifier": "addSynapseToRoiInfo", "parameters": "(String roiInfoString, String roiName, String synapseType)", "modifiers": "public static", "return": "String", "signature": "String addSynapseToRoiInfo(String roiInfoString, String roiName, String synapseType)", "full_signature": "public static String addSynapseToRoiInfo(String roiInfoString, String roiName, String synapseType)", "class_method_signature": "LoadingProcedures.addSynapseToRoiInfo(String roiInfoString, String roiName, String synapseType)", "testcase": false, "constructor": false}, {"identifier": "getRoiInfoAsMap", "parameters": "(String roiInfoString)", "modifiers": "public static", "return": "Map<String, SynapseCounter>", "signature": "Map<String, SynapseCounter> getRoiInfoAsMap(String roiInfoString)", "full_signature": "public static Map<String, SynapseCounter> getRoiInfoAsMap(String roiInfoString)", "class_method_signature": "LoadingProcedures.getRoiInfoAsMap(String roiInfoString)", "testcase": false, "constructor": false}, {"identifier": "recomputeSegmentPropertiesFollowingSynapsesAddition", "parameters": "(Long preCount, Long postCount, RoiInfo roiInfo, Node containingSegment, Node metaNode, String dataset, Long neuronThreshold)", "modifiers": "private", "return": "void", "signature": "void recomputeSegmentPropertiesFollowingSynapsesAddition(Long preCount, Long postCount, RoiInfo roiInfo, Node containingSegment, Node metaNode, String dataset, Long neuronThreshold)", "full_signature": "private void recomputeSegmentPropertiesFollowingSynapsesAddition(Long preCount, Long postCount, RoiInfo roiInfo, Node containingSegment, Node metaNode, String dataset, Long neuronThreshold)", "class_method_signature": "LoadingProcedures.recomputeSegmentPropertiesFollowingSynapsesAddition(Long preCount, Long postCount, RoiInfo roiInfo, Node containingSegment, Node metaNode, String dataset, Long neuronThreshold)", "testcase": false, "constructor": false}, {"identifier": "shouldBeLabeledNeuron", "parameters": "(Node neuronNode, Long neuronThreshold)", "modifiers": "private static", "return": "boolean", "signature": "boolean shouldBeLabeledNeuron(Node neuronNode, Long neuronThreshold)", "full_signature": "private static boolean shouldBeLabeledNeuron(Node neuronNode, Long neuronThreshold)", "class_method_signature": "LoadingProcedures.shouldBeLabeledNeuron(Node neuronNode, Long neuronThreshold)", "testcase": false, "constructor": false}, {"identifier": "convertSegmentToNeuron", "parameters": "(final Node segment, final String datasetLabel, final Node metaNode)", "modifiers": "public static", "return": "void", "signature": "void convertSegmentToNeuron(final Node segment, final String datasetLabel, final Node metaNode)", "full_signature": "public static void convertSegmentToNeuron(final Node segment, final String datasetLabel, final Node metaNode)", "class_method_signature": "LoadingProcedures.convertSegmentToNeuron(final Node segment, final String datasetLabel, final Node metaNode)", "testcase": false, "constructor": false}, {"identifier": "generateClusterName", "parameters": "(RoiInfo roiInfo, long totalPre, long totalPost, double threshold, Set<String> includedRois)", "modifiers": "public static", "return": "String", "signature": "String generateClusterName(RoiInfo roiInfo, long totalPre, long totalPost, double threshold, Set<String> includedRois)", "full_signature": "public static String generateClusterName(RoiInfo roiInfo, long totalPre, long totalPost, double threshold, Set<String> includedRois)", "class_method_signature": "LoadingProcedures.generateClusterName(RoiInfo roiInfo, long totalPre, long totalPost, double threshold, Set<String> includedRois)", "testcase": false, "constructor": false}, {"identifier": "addWeightAndWeightHPToConnectsTo", "parameters": "(Node connectionSet, int weight, int weightHP)", "modifiers": "public static", "return": "void", "signature": "void addWeightAndWeightHPToConnectsTo(Node connectionSet, int weight, int weightHP)", "full_signature": "public static void addWeightAndWeightHPToConnectsTo(Node connectionSet, int weight, int weightHP)", "class_method_signature": "LoadingProcedures.addWeightAndWeightHPToConnectsTo(Node connectionSet, int weight, int weightHP)", "testcase": false, "constructor": false}, {"identifier": "addWeightToConnectsTo", "parameters": "(Set<Node> synapsesForConnectionSet, Node connectionSet, Set<String> metaNodeRoiSet)", "modifiers": "public static", "return": "void", "signature": "void addWeightToConnectsTo(Set<Node> synapsesForConnectionSet, Node connectionSet, Set<String> metaNodeRoiSet)", "full_signature": "public static void addWeightToConnectsTo(Set<Node> synapsesForConnectionSet, Node connectionSet, Set<String> metaNodeRoiSet)", "class_method_signature": "LoadingProcedures.addWeightToConnectsTo(Set<Node> synapsesForConnectionSet, Node connectionSet, Set<String> metaNodeRoiSet)", "testcase": false, "constructor": false}, {"identifier": "setConnectionSetRoiInfoAndGetWeightAndWeightHP", "parameters": "(Set<Node> synapsesForConnectionSet, Node connectionSet, Double preHPThreshold, Double postHPThreshold, Set<String> metaNodeRoiSet)", "modifiers": "public static", "return": "int[]", "signature": "int[] setConnectionSetRoiInfoAndGetWeightAndWeightHP(Set<Node> synapsesForConnectionSet, Node connectionSet, Double preHPThreshold, Double postHPThreshold, Set<String> metaNodeRoiSet)", "full_signature": "public static int[] setConnectionSetRoiInfoAndGetWeightAndWeightHP(Set<Node> synapsesForConnectionSet, Node connectionSet, Double preHPThreshold, Double postHPThreshold, Set<String> metaNodeRoiSet)", "class_method_signature": "LoadingProcedures.setConnectionSetRoiInfoAndGetWeightAndWeightHP(Set<Node> synapsesForConnectionSet, Node connectionSet, Double preHPThreshold, Double postHPThreshold, Set<String> metaNodeRoiSet)", "testcase": false, "constructor": false}, {"identifier": "setConnectionSetRoiInfoWeightAndWeightHP", "parameters": "(Set<Node> synapsesForConnectionSet, Node connectionSetNode, double preHPThreshold, double postHPThreshold, Set<String> metaNodeRoiSet)", "modifiers": "public static", "return": "int[]", "signature": "int[] setConnectionSetRoiInfoWeightAndWeightHP(Set<Node> synapsesForConnectionSet, Node connectionSetNode, double preHPThreshold, double postHPThreshold, Set<String> metaNodeRoiSet)", "full_signature": "public static int[] setConnectionSetRoiInfoWeightAndWeightHP(Set<Node> synapsesForConnectionSet, Node connectionSetNode, double preHPThreshold, double postHPThreshold, Set<String> metaNodeRoiSet)", "class_method_signature": "LoadingProcedures.setConnectionSetRoiInfoWeightAndWeightHP(Set<Node> synapsesForConnectionSet, Node connectionSetNode, double preHPThreshold, double postHPThreshold, Set<String> metaNodeRoiSet)", "testcase": false, "constructor": false}, {"identifier": "getRoiInfoForConnectionSet", "parameters": "(Set<Node> synapsesForConnectionSet, Double preHPThreshold, Double postHPThreshold, Set<String> metaNodeRoiSet)", "modifiers": "private static", "return": "Object[]", "signature": "Object[] getRoiInfoForConnectionSet(Set<Node> synapsesForConnectionSet, Double preHPThreshold, Double postHPThreshold, Set<String> metaNodeRoiSet)", "full_signature": "private static Object[] getRoiInfoForConnectionSet(Set<Node> synapsesForConnectionSet, Double preHPThreshold, Double postHPThreshold, Set<String> metaNodeRoiSet)", "class_method_signature": "LoadingProcedures.getRoiInfoForConnectionSet(Set<Node> synapsesForConnectionSet, Double preHPThreshold, Double postHPThreshold, Set<String> metaNodeRoiSet)", "testcase": false, "constructor": false}, {"identifier": "addSynapseToRoiInfoWithHP", "parameters": "(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "modifiers": "public static", "return": "String", "signature": "String addSynapseToRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "full_signature": "public static String addSynapseToRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "class_method_signature": "LoadingProcedures.addSynapseToRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "testcase": false, "constructor": false}, {"identifier": "removeSynapseFromRoiInfoWithHP", "parameters": "(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "modifiers": "public static", "return": "String", "signature": "String removeSynapseFromRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "full_signature": "public static String removeSynapseFromRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "class_method_signature": "LoadingProcedures.removeSynapseFromRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "testcase": false, "constructor": false}, {"identifier": "getConnectionSetOrCreateConnectionSetAndConnectsToRelFromSynapses", "parameters": "(Long preBodyId, Long postBodyId, Node preBody, Node postBody, Node preSynapse, Node postSynapse, String dataset, LocalDateTime timeStamp)", "modifiers": "private", "return": "Node", "signature": "Node getConnectionSetOrCreateConnectionSetAndConnectsToRelFromSynapses(Long preBodyId, Long postBodyId, Node preBody, Node postBody, Node preSynapse, Node postSynapse, String dataset, LocalDateTime timeStamp)", "full_signature": "private Node getConnectionSetOrCreateConnectionSetAndConnectsToRelFromSynapses(Long preBodyId, Long postBodyId, Node preBody, Node postBody, Node preSynapse, Node postSynapse, String dataset, LocalDateTime timeStamp)", "class_method_signature": "LoadingProcedures.getConnectionSetOrCreateConnectionSetAndConnectsToRelFromSynapses(Long preBodyId, Long postBodyId, Node preBody, Node postBody, Node preSynapse, Node postSynapse, String dataset, LocalDateTime timeStamp)", "testcase": false, "constructor": false}, {"identifier": "createConnectionSetNode", "parameters": "(String datasetLabel, Node startSegment, Node endSegment, LocalDateTime timeStamp)", "modifiers": "private", "return": "Node", "signature": "Node createConnectionSetNode(String datasetLabel, Node startSegment, Node endSegment, LocalDateTime timeStamp)", "full_signature": "private Node createConnectionSetNode(String datasetLabel, Node startSegment, Node endSegment, LocalDateTime timeStamp)", "class_method_signature": "LoadingProcedures.createConnectionSetNode(String datasetLabel, Node startSegment, Node endSegment, LocalDateTime timeStamp)", "testcase": false, "constructor": false}, {"identifier": "addConnectsToRelationship", "parameters": "(Node startNode, Node endNode, long weight)", "modifiers": "public static", "return": "Relationship", "signature": "Relationship addConnectsToRelationship(Node startNode, Node endNode, long weight)", "full_signature": "public static Relationship addConnectsToRelationship(Node startNode, Node endNode, long weight)", "class_method_signature": "LoadingProcedures.addConnectsToRelationship(Node startNode, Node endNode, long weight)", "testcase": false, "constructor": false}, {"identifier": "addSynapseToSynapseSet", "parameters": "(final Node synapseSet, final Node synapse)", "modifiers": "public static", "return": "void", "signature": "void addSynapseToSynapseSet(final Node synapseSet, final Node synapse)", "full_signature": "public static void addSynapseToSynapseSet(final Node synapseSet, final Node synapse)", "class_method_signature": "LoadingProcedures.addSynapseToSynapseSet(final Node synapseSet, final Node synapse)", "testcase": false, "constructor": false}, {"identifier": "getPreAndPostHPThresholdFromMetaNode", "parameters": "(Node metaNode)", "modifiers": "public static", "return": "Map<String, Double>", "signature": "Map<String, Double> getPreAndPostHPThresholdFromMetaNode(Node metaNode)", "full_signature": "public static Map<String, Double> getPreAndPostHPThresholdFromMetaNode(Node metaNode)", "class_method_signature": "LoadingProcedures.getPreAndPostHPThresholdFromMetaNode(Node metaNode)", "testcase": false, "constructor": false}, {"identifier": "acquireWriteLockForSegmentSubgraph", "parameters": "(Node segment)", "modifiers": "private", "return": "void", "signature": "void acquireWriteLockForSegmentSubgraph(Node segment)", "full_signature": "private void acquireWriteLockForSegmentSubgraph(Node segment)", "class_method_signature": "LoadingProcedures.acquireWriteLockForSegmentSubgraph(Node segment)", "testcase": false, "constructor": false}, {"identifier": "acquireWriteLockForNode", "parameters": "(Node node)", "modifiers": "private", "return": "void", "signature": "void acquireWriteLockForNode(Node node)", "full_signature": "private void acquireWriteLockForNode(Node node)", "class_method_signature": "LoadingProcedures.acquireWriteLockForNode(Node node)", "testcase": false, "constructor": false}, {"identifier": "acquireWriteLockForRelationship", "parameters": "(Relationship relationship)", "modifiers": "private", "return": "void", "signature": "void acquireWriteLockForRelationship(Relationship relationship)", "full_signature": "private void acquireWriteLockForRelationship(Relationship relationship)", "class_method_signature": "LoadingProcedures.acquireWriteLockForRelationship(Relationship relationship)", "testcase": false, "constructor": false}], "file": "neuprint-load-procedures/src/main/java/org/janelia/flyem/neuprintloadprocedures/procedures/LoadingProcedures.java"}, "focal_method": {"identifier": "addSynapseToRoiInfoWithHP", "parameters": "(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "modifiers": "public static", "return": "String", "body": "public static String addSynapseToRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold) {\n        RoiInfoWithHighPrecisionCounts roiInfo = getRoiInfoHPFromString(roiInfoString);\n\n        if (synapseType.equals(PRE) && synapseConfidence != null && synapseConfidence > preHPThreshold) {\n            roiInfo.incrementPreForRoi(roi);\n            roiInfo.incrementPreHPForRoi(roi);\n        } else if (synapseType.equals(PRE)) {\n            roiInfo.incrementPreForRoi(roi);\n        } else if (synapseType.equals(POST) && synapseConfidence != null && synapseConfidence > postHPThreshold) {\n            roiInfo.incrementPostForRoi(roi);\n            roiInfo.incrementPostHPForRoi(roi);\n        } else if (synapseType.equals(POST)) {\n            roiInfo.incrementPostForRoi(roi);\n        }\n\n        return roiInfo.getAsJsonString();\n\n    }", "signature": "String addSynapseToRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "full_signature": "public static String addSynapseToRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "class_method_signature": "LoadingProcedures.addSynapseToRoiInfoWithHP(String roiInfoString, String roi, String synapseType, Double synapseConfidence, Double preHPThreshold, Double postHPThreshold)", "testcase": false, "constructor": false, "invocations": ["getRoiInfoHPFromString", "equals", "incrementPreForRoi", "incrementPreHPForRoi", "equals", "incrementPreForRoi", "equals", "incrementPostForRoi", "incrementPostHPForRoi", "equals", "incrementPostForRoi", "getAsJsonString"]}, "repository": {"repo_id": 129463208, "url": "https://github.com/connectome-neuprint/neuPrint", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 16, "size": 203145, "license": "licensed"}}