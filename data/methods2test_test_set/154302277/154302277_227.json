{"test_class": {"identifier": "FindMatchingChannelHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final String deviceIdentification = \"G00XX561204926013\";", "modifier": "final", "type": "String", "declarator": "deviceIdentification = \"G00XX561204926013\"", "var_name": "deviceIdentification"}, {"original_string": "final short channel = 1;", "modifier": "final", "type": "short", "declarator": "channel = 1", "var_name": "channel"}, {"original_string": "final short primaryAddress = 1;", "modifier": "final", "type": "short", "declarator": "primaryAddress = 1", "var_name": "primaryAddress"}, {"original_string": "final String identificationNumber = \"12049260\";", "modifier": "final", "type": "String", "declarator": "identificationNumber = \"12049260\"", "var_name": "identificationNumber"}, {"original_string": "final String manufacturerIdentification = \"LGB\";", "modifier": "final", "type": "String", "declarator": "manufacturerIdentification = \"LGB\"", "var_name": "manufacturerIdentification"}, {"original_string": "final short version = 66;", "modifier": "final", "type": "short", "declarator": "version = 66", "var_name": "version"}, {"original_string": "final short deviceTypeIdentification = 3;", "modifier": "final", "type": "short", "declarator": "deviceTypeIdentification = 3", "var_name": "deviceTypeIdentification"}, {"original_string": "final short noPrimaryAddress = 0;", "modifier": "final", "type": "short", "declarator": "noPrimaryAddress = 0", "var_name": "noPrimaryAddress"}, {"original_string": "final String noIdentificationNumber = null;", "modifier": "final", "type": "String", "declarator": "noIdentificationNumber = null", "var_name": "noIdentificationNumber"}, {"original_string": "final String noManufacturerIdentification = null;", "modifier": "final", "type": "String", "declarator": "noManufacturerIdentification = null", "var_name": "noManufacturerIdentification"}, {"original_string": "final short noVersion = 0;", "modifier": "final", "type": "short", "declarator": "noVersion = 0", "var_name": "noVersion"}, {"original_string": "final short noDeviceTypeIdentification = 0;", "modifier": "final", "type": "short", "declarator": "noDeviceTypeIdentification = 0", "var_name": "noDeviceTypeIdentification"}, {"original_string": "final String otherDeviceIdentification = \"G00XX561204926113\";", "modifier": "final", "type": "String", "declarator": "otherDeviceIdentification = \"G00XX561204926113\"", "var_name": "otherDeviceIdentification"}, {"original_string": "final short otherChannel = 2;", "modifier": "final", "type": "short", "declarator": "otherChannel = 2", "var_name": "otherChannel"}, {"original_string": "final short otherPrimaryAddress = 2;", "modifier": "final", "type": "short", "declarator": "otherPrimaryAddress = 2", "var_name": "otherPrimaryAddress"}, {"original_string": "final String otherIdentificationNumber = \"12049261\";", "modifier": "final", "type": "String", "declarator": "otherIdentificationNumber = \"12049261\"", "var_name": "otherIdentificationNumber"}, {"original_string": "final String otherManufacturerIdentification = \"LGB\";", "modifier": "final", "type": "String", "declarator": "otherManufacturerIdentification = \"LGB\"", "var_name": "otherManufacturerIdentification"}, {"original_string": "final short otherVersion = 66;", "modifier": "final", "type": "short", "declarator": "otherVersion = 66", "var_name": "otherVersion"}, {"original_string": "final short otherDeviceTypeIdentification = 3;", "modifier": "final", "type": "short", "declarator": "otherDeviceTypeIdentification = 3", "var_name": "otherDeviceTypeIdentification"}], "file": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/utils/FindMatchingChannelHelperTest.java"}, "test_case": {"identifier": "testAllFilled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAllFilled() {\n\n        /*\n         * All attributes for requestData and channelValues are defined and\n         * matching.\n         */\n\n        final MbusChannelElementsDto requestData = new MbusChannelElementsDto(this.primaryAddress,\n                this.deviceIdentification, this.identificationNumber, this.manufacturerIdentification, this.version,\n                this.deviceTypeIdentification);\n\n        final ChannelElementValuesDto channelValues = new ChannelElementValuesDto(this.channel, this.primaryAddress,\n                this.identificationNumber, this.manufacturerIdentification, this.version,\n                this.deviceTypeIdentification);\n\n        assertThat(FindMatchingChannelHelper.matches(requestData, channelValues))\n                .withFailMessage(requestData + \" should match \" + channelValues)\n                .isTrue();\n    }", "signature": "void testAllFilled()", "full_signature": "@Test public void testAllFilled()", "class_method_signature": "FindMatchingChannelHelperTest.testAllFilled()", "testcase": true, "constructor": false, "invocations": ["isTrue", "withFailMessage", "assertThat", "matches"]}, "focal_class": {"identifier": "FindMatchingChannelHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "FindMatchingChannelHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " FindMatchingChannelHelper()", "full_signature": "private  FindMatchingChannelHelper()", "class_method_signature": "FindMatchingChannelHelper.FindMatchingChannelHelper()", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "public static", "return": "boolean", "signature": "boolean matches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "public static boolean matches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.matches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "mbusShortIdMatches", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean mbusShortIdMatches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean mbusShortIdMatches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.mbusShortIdMatches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "hasMbusChannelElementMatch", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasMbusChannelElementMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean hasMbusChannelElementMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.hasMbusChannelElementMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "hasMbusDeviceInfo", "parameters": "(final MbusChannelElementsDto mbusChannelElements)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasMbusDeviceInfo(final MbusChannelElementsDto mbusChannelElements)", "full_signature": "private static boolean hasMbusDeviceInfo(final MbusChannelElementsDto mbusChannelElements)", "class_method_signature": "FindMatchingChannelHelper.hasMbusDeviceInfo(final MbusChannelElementsDto mbusChannelElements)", "testcase": false, "constructor": false}, {"identifier": "wiredMbusMatches", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean wiredMbusMatches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean wiredMbusMatches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.wiredMbusMatches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "validateMbusDeviceInfoMatch", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean validateMbusDeviceInfoMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean validateMbusDeviceInfoMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.validateMbusDeviceInfoMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "hasValidMbusAttributes", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasValidMbusAttributes(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean hasValidMbusAttributes(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.hasValidMbusAttributes(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "failMatchOnMbusIdentificationNumber", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean failMatchOnMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean failMatchOnMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.failMatchOnMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "failMatchOnMbusManufacturerIdentification", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean failMatchOnMbusManufacturerIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean failMatchOnMbusManufacturerIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.failMatchOnMbusManufacturerIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "failMatchOnMbusVersion", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean failMatchOnMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean failMatchOnMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.failMatchOnMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "failMatchOnMbusDeviceTypeIdentification", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean failMatchOnMbusDeviceTypeIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean failMatchOnMbusDeviceTypeIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.failMatchOnMbusDeviceTypeIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "matchesPartially", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchesPartially(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "public static boolean matchesPartially(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.matchesPartially(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "validateMbusDeviceInfoPartialMatch", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean validateMbusDeviceInfoPartialMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean validateMbusDeviceInfoPartialMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.validateMbusDeviceInfoPartialMatch(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "failPartialMatchOnMbusIdentificationNumber", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean failPartialMatchOnMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean failPartialMatchOnMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.failPartialMatchOnMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "failPartialMatchOnMbusManufacturerIdentification", "parameters": "(\n            final MbusChannelElementsDto mbusChannelElements, final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean failPartialMatchOnMbusManufacturerIdentification(\n            final MbusChannelElementsDto mbusChannelElements, final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean failPartialMatchOnMbusManufacturerIdentification(\n            final MbusChannelElementsDto mbusChannelElements, final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.failPartialMatchOnMbusManufacturerIdentification(\n            final MbusChannelElementsDto mbusChannelElements, final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "failPartialMatchOnMbusVersion", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean failPartialMatchOnMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean failPartialMatchOnMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.failPartialMatchOnMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "failPartialMatchOnMbusDeviceTypeIdentification", "parameters": "(\n            final MbusChannelElementsDto mbusChannelElements, final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "boolean", "signature": "boolean failPartialMatchOnMbusDeviceTypeIdentification(\n            final MbusChannelElementsDto mbusChannelElements, final ChannelElementValuesDto channelElementValues)", "full_signature": "private static boolean failPartialMatchOnMbusDeviceTypeIdentification(\n            final MbusChannelElementsDto mbusChannelElements, final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.failPartialMatchOnMbusDeviceTypeIdentification(\n            final MbusChannelElementsDto mbusChannelElements, final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "bestMatch", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final List<ChannelElementValuesDto> channelElementValuesList)", "modifiers": "public static", "return": "ChannelElementValuesDto", "signature": "ChannelElementValuesDto bestMatch(final MbusChannelElementsDto mbusChannelElements,\n            final List<ChannelElementValuesDto> channelElementValuesList)", "full_signature": "public static ChannelElementValuesDto bestMatch(final MbusChannelElementsDto mbusChannelElements,\n            final List<ChannelElementValuesDto> channelElementValuesList)", "class_method_signature": "FindMatchingChannelHelper.bestMatch(final MbusChannelElementsDto mbusChannelElements,\n            final List<ChannelElementValuesDto> channelElementValuesList)", "testcase": false, "constructor": false}, {"identifier": "score", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "private static", "return": "int", "signature": "int score(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "private static int score(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.score(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false}, {"identifier": "scoreForMbusIdentificationNumber", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "modifiers": "private static", "return": "int", "signature": "int scoreForMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "full_signature": "private static int scoreForMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "class_method_signature": "FindMatchingChannelHelper.scoreForMbusIdentificationNumber(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "testcase": false, "constructor": false}, {"identifier": "scoreForMbusManufacturerIdentification", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "modifiers": "private static", "return": "int", "signature": "int scoreForMbusManufacturerIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "full_signature": "private static int scoreForMbusManufacturerIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "class_method_signature": "FindMatchingChannelHelper.scoreForMbusManufacturerIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "testcase": false, "constructor": false}, {"identifier": "scoreForMbusDeviceTypeIdentification", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "modifiers": "private static", "return": "int", "signature": "int scoreForMbusDeviceTypeIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "full_signature": "private static int scoreForMbusDeviceTypeIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "class_method_signature": "FindMatchingChannelHelper.scoreForMbusDeviceTypeIdentification(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "testcase": false, "constructor": false}, {"identifier": "scoreForMbusVersion", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "modifiers": "private static", "return": "int", "signature": "int scoreForMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "full_signature": "private static int scoreForMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "class_method_signature": "FindMatchingChannelHelper.scoreForMbusVersion(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues, final int attributeScore)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/utils/FindMatchingChannelHelper.java"}, "focal_method": {"identifier": "matches", "parameters": "(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "modifiers": "public static", "return": "boolean", "body": "public static boolean matches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues) {\n\n        if (mbusChannelElements.hasPrimaryAddress() && mbusChannelElements.getPrimaryAddress() > 0) {\n            return wiredMbusMatches(mbusChannelElements, channelElementValues);\n        }\n\n        /*\n         * If the M-Bus ShortID matches, assume the M-Bus device is configured on the\n         * channel. For wireless devices this means a full match, since the primary\n         * address would always be 0.\n         */\n        return mbusShortIdMatches(mbusChannelElements, channelElementValues);\n    }", "signature": "boolean matches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "full_signature": "public static boolean matches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "class_method_signature": "FindMatchingChannelHelper.matches(final MbusChannelElementsDto mbusChannelElements,\n            final ChannelElementValuesDto channelElementValues)", "testcase": false, "constructor": false, "invocations": ["hasPrimaryAddress", "getPrimaryAddress", "wiredMbusMatches", "mbusShortIdMatches"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}