{"test_class": {"identifier": "JcrInterceptorTest", "superclass": "", "interfaces": "", "fields": [], "file": "se-jcr-commons/src/test/java/org/springframework/extensions/jcr/JcrInterceptorTest.java"}, "test_case": {"identifier": "testInterceptor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInterceptor() throws RepositoryException {\n\n        SessionFactory sessionFactory = createMock(SessionFactory.class);\n        Session session = createMock(Session.class);\n        expect(sessionFactory.getSession()).andReturn(session);\n        session.logout();\n        expectLastCall().once();\n        expect(sessionFactory.getSessionHolder(session)).andReturn(new SessionHolder(session));\n\n        replay(sessionFactory, session);\n\n        JcrInterceptor interceptor = new JcrInterceptor();\n        interceptor.setSessionFactory(sessionFactory);\n        interceptor.afterPropertiesSet();\n        try {\n            interceptor.invoke(new TestInvocation(sessionFactory));\n        } catch (Throwable t) {\n            fail(\"Should not have thrown Throwable: \" + t);\n        }\n\n        verify(sessionFactory, session);\n    }", "signature": "void testInterceptor()", "full_signature": "@Test public void testInterceptor()", "class_method_signature": "JcrInterceptorTest.testInterceptor()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "andReturn", "expect", "getSession", "logout", "once", "expectLastCall", "andReturn", "expect", "getSessionHolder", "replay", "setSessionFactory", "afterPropertiesSet", "invoke", "fail", "verify"]}, "focal_class": {"identifier": "JcrInterceptor", "superclass": "extends JcrAccessor", "interfaces": "implements MethodInterceptor", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(JcrInterceptor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(JcrInterceptor.class)", "var_name": "LOG"}], "methods": [{"identifier": "invoke", "parameters": "(MethodInvocation methodInvocation)", "modifiers": "public", "return": "Object", "signature": "Object invoke(MethodInvocation methodInvocation)", "full_signature": "public Object invoke(MethodInvocation methodInvocation)", "class_method_signature": "JcrInterceptor.invoke(MethodInvocation methodInvocation)", "testcase": false, "constructor": false}], "file": "se-jcr-commons/src/main/java/org/springframework/extensions/jcr/JcrInterceptor.java"}, "focal_method": {"identifier": "invoke", "parameters": "(MethodInvocation methodInvocation)", "modifiers": "public", "return": "Object", "body": "public Object invoke(MethodInvocation methodInvocation) throws Throwable {\n        boolean existingTransaction = false;\n        Session session = SessionFactoryUtils.getSession(getSessionFactory(), true);\n        if (TransactionSynchronizationManager.hasResource(getSessionFactory())) {\n            LOG.debug(\"Found thread-bound Session for JCR interceptor\");\n            existingTransaction = true;\n        } else {\n            LOG.debug(\"Using new Session for JCR interceptor\");\n            TransactionSynchronizationManager.bindResource(getSessionFactory(), getSessionFactory().getSessionHolder(session));\n        }\n        try {\n            Object retVal = methodInvocation.proceed();\n            // flushIfNecessary(session, existingTransaction);\n            return retVal;\n        } finally {\n            if (existingTransaction) {\n                LOG.debug(\"Not closing pre-bound JCR Session after interceptor\");\n            } else {\n                TransactionSynchronizationManager.unbindResource(getSessionFactory());\n                SessionFactoryUtils.releaseSession(session, getSessionFactory());\n            }\n        }\n    }", "signature": "Object invoke(MethodInvocation methodInvocation)", "full_signature": "public Object invoke(MethodInvocation methodInvocation)", "class_method_signature": "JcrInterceptor.invoke(MethodInvocation methodInvocation)", "testcase": false, "constructor": false, "invocations": ["getSession", "getSessionFactory", "hasResource", "getSessionFactory", "debug", "debug", "bindResource", "getSessionFactory", "getSessionHolder", "getSessionFactory", "proceed", "debug", "unbindResource", "getSessionFactory", "releaseSession", "getSessionFactory"]}, "repository": {"repo_id": 3415463, "url": "https://github.com/jbellmann/jcr-springextension", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 14, "size": 634, "license": "licensed"}}