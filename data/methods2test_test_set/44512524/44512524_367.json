{"test_class": {"identifier": "TextInstanceCreatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/trident-ml/src/test/java/com/github/pmerienne/trident/ml/preprocessing/TextInstanceCreatorTest.java"}, "test_case": {"identifier": "testExtractTokens", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testExtractTokens() {\n\t\t// Given\n\t\tTextInstanceCreator<Boolean> instanceCreator = new TextInstanceCreator<Boolean>(false);\n\n\t\t// When\n\t\tList<String> actualWords = instanceCreator.extractTokens(\"I can't argue with some arguments on argus with argues\");\n\n\t\t// Then\n\t\tList<String> expectedWords = Arrays.asList(\"i\", \"can't\", \"argu\", \"some\", \"argument\", \"argu\", \"argu\");\n\t\tassertEquals(expectedWords, actualWords);\n\t}", "signature": "void testExtractTokens()", "full_signature": "@Test public void testExtractTokens()", "class_method_signature": "TextInstanceCreatorTest.testExtractTokens()", "testcase": true, "constructor": false, "invocations": ["extractTokens", "asList", "assertEquals"]}, "focal_class": {"identifier": "TextInstanceCreator", "superclass": "extends BaseFunction", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 3312351524410720639L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 3312351524410720639L", "var_name": "serialVersionUID"}, {"original_string": "private boolean withLabel = true;", "modifier": "private", "type": "boolean", "declarator": "withLabel = true", "var_name": "withLabel"}, {"original_string": "private TextTokenizer textAnalyser = new EnglishTokenizer();", "modifier": "private", "type": "TextTokenizer", "declarator": "textAnalyser = new EnglishTokenizer()", "var_name": "textAnalyser"}], "methods": [{"identifier": "TextInstanceCreator", "parameters": "()", "modifiers": "public", "return": "", "signature": " TextInstanceCreator()", "full_signature": "public  TextInstanceCreator()", "class_method_signature": "TextInstanceCreator.TextInstanceCreator()", "testcase": false, "constructor": true}, {"identifier": "TextInstanceCreator", "parameters": "(boolean withLabel)", "modifiers": "public", "return": "", "signature": " TextInstanceCreator(boolean withLabel)", "full_signature": "public  TextInstanceCreator(boolean withLabel)", "class_method_signature": "TextInstanceCreator.TextInstanceCreator(boolean withLabel)", "testcase": false, "constructor": true}, {"identifier": "TextInstanceCreator", "parameters": "(boolean withLabel, TextTokenizer textAnalyser)", "modifiers": "public", "return": "", "signature": " TextInstanceCreator(boolean withLabel, TextTokenizer textAnalyser)", "full_signature": "public  TextInstanceCreator(boolean withLabel, TextTokenizer textAnalyser)", "class_method_signature": "TextInstanceCreator.TextInstanceCreator(boolean withLabel, TextTokenizer textAnalyser)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(TridentTuple tuple, TridentCollector collector)", "modifiers": "@Override public", "return": "void", "signature": "void execute(TridentTuple tuple, TridentCollector collector)", "full_signature": "@Override public void execute(TridentTuple tuple, TridentCollector collector)", "class_method_signature": "TextInstanceCreator.execute(TridentTuple tuple, TridentCollector collector)", "testcase": false, "constructor": false}, {"identifier": "createInstance", "parameters": "(TridentTuple tuple)", "modifiers": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" }) protected", "return": "TextInstance<L>", "signature": "TextInstance<L> createInstance(TridentTuple tuple)", "full_signature": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" }) protected TextInstance<L> createInstance(TridentTuple tuple)", "class_method_signature": "TextInstanceCreator.createInstance(TridentTuple tuple)", "testcase": false, "constructor": false}, {"identifier": "extractTokens", "parameters": "(String text)", "modifiers": "protected", "return": "List<String>", "signature": "List<String> extractTokens(String text)", "full_signature": "protected List<String> extractTokens(String text)", "class_method_signature": "TextInstanceCreator.extractTokens(String text)", "testcase": false, "constructor": false}, {"identifier": "isWithLabel", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWithLabel()", "full_signature": "public boolean isWithLabel()", "class_method_signature": "TextInstanceCreator.isWithLabel()", "testcase": false, "constructor": false}, {"identifier": "setWithLabel", "parameters": "(boolean withLabel)", "modifiers": "public", "return": "void", "signature": "void setWithLabel(boolean withLabel)", "full_signature": "public void setWithLabel(boolean withLabel)", "class_method_signature": "TextInstanceCreator.setWithLabel(boolean withLabel)", "testcase": false, "constructor": false}, {"identifier": "getTextAnalyser", "parameters": "()", "modifiers": "public", "return": "TextTokenizer", "signature": "TextTokenizer getTextAnalyser()", "full_signature": "public TextTokenizer getTextAnalyser()", "class_method_signature": "TextInstanceCreator.getTextAnalyser()", "testcase": false, "constructor": false}, {"identifier": "setTextAnalyser", "parameters": "(TextTokenizer textAnalyser)", "modifiers": "public", "return": "void", "signature": "void setTextAnalyser(TextTokenizer textAnalyser)", "full_signature": "public void setTextAnalyser(TextTokenizer textAnalyser)", "class_method_signature": "TextInstanceCreator.setTextAnalyser(TextTokenizer textAnalyser)", "testcase": false, "constructor": false}], "file": "storm/trident-ml/src/main/java/com/github/pmerienne/trident/ml/preprocessing/TextInstanceCreator.java"}, "focal_method": {"identifier": "extractTokens", "parameters": "(String text)", "modifiers": "protected", "return": "List<String>", "body": "protected List<String> extractTokens(String text) {\n\t\tList<String> tokens = this.textAnalyser.tokenize(text);\n\t\treturn tokens;\n\t}", "signature": "List<String> extractTokens(String text)", "full_signature": "protected List<String> extractTokens(String text)", "class_method_signature": "TextInstanceCreator.extractTokens(String text)", "testcase": false, "constructor": false, "invocations": ["tokenize"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}