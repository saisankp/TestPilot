{"test_class": {"identifier": "VectorDrawableTransformerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ORIGINAL = \"\" +\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n      \"<vector xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n      \"    xmlns:aapt=\\\"http://schemas.android.com/aapt\\\"\\n\" +\n      \"    android:width=\\\"24dp\\\"\\n\" +\n      \"    android:height=\\\"24dp\\\"\\n\" +\n      \"    android:viewportHeight=\\\"108.0\\\"\\n\" +\n      \"    android:viewportWidth=\\\"108.0\\\"\\n\" +\n      \"    android:autoMirrored=\\\"true\\\">\\n\" +\n      \"  <!-- This is a shadow -->\\n\" +\n      \"  <path\\n\" +\n      \"      android:fillType=\\\"evenOdd\\\"\\n\" +\n      \"      android:pathData=\\\"M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z\\\"\\n\" +\n      \"      android:strokeColor=\\\"#00000000\\\"\\n\" +\n      \"      android:strokeWidth=\\\"1\\\">\\n\" +\n      \"    <aapt:attr name=\\\"android:fillColor\\\">\\n\" +\n      \"      <gradient\\n\" +\n      \"          android:endX=\\\"78.58851490098495\\\"\\n\" +\n      \"          android:endY=\\\"90.91591973616056\\\"\\n\" +\n      \"          android:startX=\\\"48.765298831584175\\\"\\n\" +\n      \"          android:startY=\\\"61.092703666759796\\\"\\n\" +\n      \"          android:type=\\\"linear\\\">\\n\" +\n      \"        <item\\n\" +\n      \"            android:color=\\\"#26000000\\\"\\n\" +\n      \"            android:offset=\\\"0.0\\\" />\\n\" +\n      \"        <item\\n\" +\n      \"            android:color=\\\"#05000000\\\"\\n\" +\n      \"            android:offset=\\\"0.52042806\\\" />\\n\" +\n      \"        <item\\n\" +\n      \"            android:color=\\\"#00000000\\\"\\n\" +\n      \"            android:offset=\\\"1.0\\\" />\\n\" +\n      \"      </gradient>\\n\" +\n      \"    </aapt:attr>\\n\" +\n      \"  </path>\\n\" +\n      \"  <!-- This is an Android's head -->\\n\" +\n      \"  <path\\n\" +\n      \"      android:fillColor=\\\"#78C257\\\"\\n\" +\n      \"      android:fillType=\\\"nonZero\\\"\\n\" +\n      \"      android:pathData=\\\"M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z\\\"\\n\" +\n      \"      android:strokeColor=\\\"#00000000\\\"\\n\" +\n      \"      android:strokeWidth=\\\"1\\\" />\\n\" +\n      \"</vector>\\n\";", "modifier": "private static final", "type": "String", "declarator": "ORIGINAL = \"\" +\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n      \"<vector xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n      \"    xmlns:aapt=\\\"http://schemas.android.com/aapt\\\"\\n\" +\n      \"    android:width=\\\"24dp\\\"\\n\" +\n      \"    android:height=\\\"24dp\\\"\\n\" +\n      \"    android:viewportHeight=\\\"108.0\\\"\\n\" +\n      \"    android:viewportWidth=\\\"108.0\\\"\\n\" +\n      \"    android:autoMirrored=\\\"true\\\">\\n\" +\n      \"  <!-- This is a shadow -->\\n\" +\n      \"  <path\\n\" +\n      \"      android:fillType=\\\"evenOdd\\\"\\n\" +\n      \"      android:pathData=\\\"M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z\\\"\\n\" +\n      \"      android:strokeColor=\\\"#00000000\\\"\\n\" +\n      \"      android:strokeWidth=\\\"1\\\">\\n\" +\n      \"    <aapt:attr name=\\\"android:fillColor\\\">\\n\" +\n      \"      <gradient\\n\" +\n      \"          android:endX=\\\"78.58851490098495\\\"\\n\" +\n      \"          android:endY=\\\"90.91591973616056\\\"\\n\" +\n      \"          android:startX=\\\"48.765298831584175\\\"\\n\" +\n      \"          android:startY=\\\"61.092703666759796\\\"\\n\" +\n      \"          android:type=\\\"linear\\\">\\n\" +\n      \"        <item\\n\" +\n      \"            android:color=\\\"#26000000\\\"\\n\" +\n      \"            android:offset=\\\"0.0\\\" />\\n\" +\n      \"        <item\\n\" +\n      \"            android:color=\\\"#05000000\\\"\\n\" +\n      \"            android:offset=\\\"0.52042806\\\" />\\n\" +\n      \"        <item\\n\" +\n      \"            android:color=\\\"#00000000\\\"\\n\" +\n      \"            android:offset=\\\"1.0\\\" />\\n\" +\n      \"      </gradient>\\n\" +\n      \"    </aapt:attr>\\n\" +\n      \"  </path>\\n\" +\n      \"  <!-- This is an Android's head -->\\n\" +\n      \"  <path\\n\" +\n      \"      android:fillColor=\\\"#78C257\\\"\\n\" +\n      \"      android:fillType=\\\"nonZero\\\"\\n\" +\n      \"      android:pathData=\\\"M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z\\\"\\n\" +\n      \"      android:strokeColor=\\\"#00000000\\\"\\n\" +\n      \"      android:strokeWidth=\\\"1\\\" />\\n\" +\n      \"</vector>\\n\"", "var_name": "ORIGINAL"}], "file": "android/testSrc/com/android/tools/idea/npw/assetstudio/VectorDrawableTransformerTest.java"}, "test_case": {"identifier": "testScalingWithGroups", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testScalingWithGroups() throws Exception {\n    String original = \"\" +\n                      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                      \"<vector xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n                      \"    android:width=\\\"94dp\\\"\\n\" +\n                      \"    android:height=\\\"337.5dp\\\"\\n\" +\n                      \"    android:viewportWidth=\\\"94\\\"\\n\" +\n                      \"    android:viewportHeight=\\\"337.5\\\">\\n\" +\n                      \"  <group android:translateY=\\\"133.59375\\\">\\n\" +\n                      \"    <path android:pathData=\\\"M68.41406,-26.71875L25.523438,-26.71875L15.890625,0L1.96875,0L41.0625,-102.375L52.875,-102.375L92.03906,0L78.1875,0ZM29.601562,-37.828125L64.40625,-37.828125L46.96875,-85.71094Z\\\"\\n\" +\n                      \"        android:fillColor=\\\"#000000\\\"/>\\n\" +\n                      \"  </group>\\n\" +\n                      \"  <group android:translateY=\\\"302.34375\\\">\\n\" +\n                      \"    <path android:pathData=\\\"M68.41406,-26.71875L25.523438,-26.71875L15.890625,0L1.96875,0L41.0625,-102.375L52.875,-102.375L92.03906,0L78.1875,0ZM29.601562,-37.828125L64.40625,-37.828125L46.96875,-85.71094Z\\\"\\n\" +\n                      \"        android:fillColor=\\\"#000000\\\"/>\\n\" +\n                      \"  </group>\\n\" +\n                      \"</vector>\\n\";\n    String expected = \"\" +\n                      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                      \"<vector xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n                      \"    android:width=\\\"100dp\\\"\\n\" +\n                      \"    android:height=\\\"100dp\\\"\\n\" +\n                      \"    android:viewportWidth=\\\"100\\\"\\n\" +\n                      \"    android:viewportHeight=\\\"100\\\">\\n\" +\n                      \"  <group android:scaleX=\\\"0.7407407\\\"\\n\" +\n                      \"      android:scaleY=\\\"0.7407407\\\"\\n\" +\n                      \"      android:translateX=\\\"15.185185\\\"\\n\" +\n                      \"      android:translateY=\\\"-75\\\">\\n\" +\n                      \"    <group android:translateY=\\\"133.59375\\\">\\n\" +\n                      \"      <path android:pathData=\\\"M68.41406,-26.71875L25.523438,-26.71875L15.890625,0L1.96875,0L41.0625,-102.375L52.875,-102.375L92.03906,0L78.1875,0ZM29.601562,-37.828125L64.40625,-37.828125L46.96875,-85.71094Z\\\"\\n\" +\n                      \"          android:fillColor=\\\"#000000\\\"/>\\n\" +\n                      \"    </group>\\n\" +\n                      \"    <group android:translateY=\\\"302.34375\\\">\\n\" +\n                      \"      <path android:pathData=\\\"M68.41406,-26.71875L25.523438,-26.71875L15.890625,0L1.96875,0L41.0625,-102.375L52.875,-102.375L92.03906,0L78.1875,0ZM29.601562,-37.828125L64.40625,-37.828125L46.96875,-85.71094Z\\\"\\n\" +\n                      \"          android:fillColor=\\\"#000000\\\"/>\\n\" +\n                      \"    </group>\\n\" +\n                      \"  </group>\\n\" +\n                      \"</vector>\\n\";\n    String result = VectorDrawableTransformer.transform(original, new Dimension(100, 100), Gravity.CENTER, 2.5, null, null, null, 1);\n    assertEquals(expected, result);\n  }", "signature": "void testScalingWithGroups()", "full_signature": "@Test public void testScalingWithGroups()", "class_method_signature": "VectorDrawableTransformerTest.testScalingWithGroups()", "testcase": true, "constructor": false, "invocations": ["transform", "assertEquals"]}, "focal_class": {"identifier": "VectorDrawableTransformer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ImmutableSet<String> NAMES_OF_HANDLED_ATTRIBUTES =\n      ImmutableSet.of(\"width\", \"height\", \"viewportWidth\", \"viewportHeight\", \"tint\", \"alpha\");", "modifier": "private static final", "type": "ImmutableSet<String>", "declarator": "NAMES_OF_HANDLED_ATTRIBUTES =\n      ImmutableSet.of(\"width\", \"height\", \"viewportWidth\", \"viewportHeight\", \"tint\", \"alpha\")", "var_name": "NAMES_OF_HANDLED_ATTRIBUTES"}, {"original_string": "private static final String INDENT = \"  \";", "modifier": "private static final", "type": "String", "declarator": "INDENT = \"  \"", "var_name": "INDENT"}, {"original_string": "private static final String DOUBLE_INDENT = INDENT + INDENT;", "modifier": "private static final", "type": "String", "declarator": "DOUBLE_INDENT = INDENT + INDENT", "var_name": "DOUBLE_INDENT"}], "methods": [{"identifier": "VectorDrawableTransformer", "parameters": "()", "modifiers": "private", "return": "", "signature": " VectorDrawableTransformer()", "full_signature": "private  VectorDrawableTransformer()", "class_method_signature": "VectorDrawableTransformer.VectorDrawableTransformer()", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "(@NotNull String originalDrawable, @NotNull Dimension targetSize)", "modifiers": "@NotNull public static", "return": "String", "signature": "String transform(@NotNull String originalDrawable, @NotNull Dimension targetSize)", "full_signature": "@NotNull public static String transform(@NotNull String originalDrawable, @NotNull Dimension targetSize)", "class_method_signature": "VectorDrawableTransformer.transform(@NotNull String originalDrawable, @NotNull Dimension targetSize)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(@NotNull String originalDrawable,\n                                 @NotNull Dimension targetSize,\n                                 @NotNull Gravity gravity,\n                                 double scaleFactor,\n                                 @Nullable Rectangle2D clipRectangle,\n                                 @Nullable Point2D shift,\n                                 @Nullable Color tint,\n                                 double opacity)", "modifiers": "@NotNull public static", "return": "String", "signature": "String transform(@NotNull String originalDrawable,\n                                 @NotNull Dimension targetSize,\n                                 @NotNull Gravity gravity,\n                                 double scaleFactor,\n                                 @Nullable Rectangle2D clipRectangle,\n                                 @Nullable Point2D shift,\n                                 @Nullable Color tint,\n                                 double opacity)", "full_signature": "@NotNull public static String transform(@NotNull String originalDrawable,\n                                 @NotNull Dimension targetSize,\n                                 @NotNull Gravity gravity,\n                                 double scaleFactor,\n                                 @Nullable Rectangle2D clipRectangle,\n                                 @Nullable Point2D shift,\n                                 @Nullable Color tint,\n                                 double opacity)", "class_method_signature": "VectorDrawableTransformer.transform(@NotNull String originalDrawable,\n                                 @NotNull Dimension targetSize,\n                                 @NotNull Gravity gravity,\n                                 double scaleFactor,\n                                 @Nullable Rectangle2D clipRectangle,\n                                 @Nullable Point2D shift,\n                                 @Nullable Color tint,\n                                 double opacity)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(@NotNull String drawable1, @NotNull String drawable2)", "modifiers": "public static", "return": "String", "signature": "String merge(@NotNull String drawable1, @NotNull String drawable2)", "full_signature": "public static String merge(@NotNull String drawable1, @NotNull String drawable2)", "class_method_signature": "VectorDrawableTransformer.merge(@NotNull String drawable1, @NotNull String drawable2)", "testcase": false, "constructor": false}, {"identifier": "getViewportSize", "parameters": "(@NotNull String drawable)", "modifiers": "@Nullable public static", "return": "Point2D", "signature": "Point2D getViewportSize(@NotNull String drawable)", "full_signature": "@Nullable public static Point2D getViewportSize(@NotNull String drawable)", "class_method_signature": "VectorDrawableTransformer.getViewportSize(@NotNull String drawable)", "testcase": false, "constructor": false}, {"identifier": "getSizeDp", "parameters": "(@NotNull String drawable)", "modifiers": "@Nullable public static", "return": "Dimension", "signature": "Dimension getSizeDp(@NotNull String drawable)", "full_signature": "@Nullable public static Dimension getSizeDp(@NotNull String drawable)", "class_method_signature": "VectorDrawableTransformer.getSizeDp(@NotNull String drawable)", "testcase": false, "constructor": false}, {"identifier": "detectLineSeparator", "parameters": "(@NotNull CharSequence str)", "modifiers": "private static", "return": "String", "signature": "String detectLineSeparator(@NotNull CharSequence str)", "full_signature": "private static String detectLineSeparator(@NotNull CharSequence str)", "class_method_signature": "VectorDrawableTransformer.detectLineSeparator(@NotNull CharSequence str)", "testcase": false, "constructor": false}, {"identifier": "getDoubleAttributeValue", "parameters": "(@NotNull KXmlParser parser, @NotNull String namespaceUri, @NotNull String attributeName,\n                                                @NotNull String expectedSuffix)", "modifiers": "@SuppressWarnings(\"SameParameterValue\") private static", "return": "double", "signature": "double getDoubleAttributeValue(@NotNull KXmlParser parser, @NotNull String namespaceUri, @NotNull String attributeName,\n                                                @NotNull String expectedSuffix)", "full_signature": "@SuppressWarnings(\"SameParameterValue\") private static double getDoubleAttributeValue(@NotNull KXmlParser parser, @NotNull String namespaceUri, @NotNull String attributeName,\n                                                @NotNull String expectedSuffix)", "class_method_signature": "VectorDrawableTransformer.getDoubleAttributeValue(@NotNull KXmlParser parser, @NotNull String namespaceUri, @NotNull String attributeName,\n                                                @NotNull String expectedSuffix)", "testcase": false, "constructor": false}, {"identifier": "parseDoubleValue", "parameters": "(String value, @NotNull String expectedSuffix)", "modifiers": "private static", "return": "double", "signature": "double parseDoubleValue(String value, @NotNull String expectedSuffix)", "full_signature": "private static double parseDoubleValue(String value, @NotNull String expectedSuffix)", "class_method_signature": "VectorDrawableTransformer.parseDoubleValue(String value, @NotNull String expectedSuffix)", "testcase": false, "constructor": false}, {"identifier": "getSuffix", "parameters": "(@NotNull String value)", "modifiers": "@NotNull private static", "return": "String", "signature": "String getSuffix(@NotNull String value)", "full_signature": "@NotNull private static String getSuffix(@NotNull String value)", "class_method_signature": "VectorDrawableTransformer.getSuffix(@NotNull String value)", "testcase": false, "constructor": false}, {"identifier": "isSignificantlyDifferentFromZero", "parameters": "(double value)", "modifiers": "private static", "return": "boolean", "signature": "boolean isSignificantlyDifferentFromZero(double value)", "full_signature": "private static boolean isSignificantlyDifferentFromZero(double value)", "class_method_signature": "VectorDrawableTransformer.isSignificantlyDifferentFromZero(double value)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/npw/assetstudio/VectorDrawableTransformer.java"}, "focal_method": {"identifier": "transform", "parameters": "(@NotNull String originalDrawable, @NotNull Dimension targetSize)", "modifiers": "@NotNull public static", "return": "String", "body": "@NotNull\n  public static String transform(@NotNull String originalDrawable, @NotNull Dimension targetSize) {\n    return transform(originalDrawable, targetSize, Gravity.CENTER, 1, null, null, null, 1);\n  }", "signature": "String transform(@NotNull String originalDrawable, @NotNull Dimension targetSize)", "full_signature": "@NotNull public static String transform(@NotNull String originalDrawable, @NotNull Dimension targetSize)", "class_method_signature": "VectorDrawableTransformer.transform(@NotNull String originalDrawable, @NotNull Dimension targetSize)", "testcase": false, "constructor": false, "invocations": ["transform"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}