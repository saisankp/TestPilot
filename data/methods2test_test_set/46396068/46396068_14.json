{"test_class": {"identifier": "AlertSenderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ALERT_SCRIPT = \"echo \";", "modifier": "public static final", "type": "String", "declarator": "ALERT_SCRIPT = \"echo \"", "var_name": "ALERT_SCRIPT"}], "file": "hbase0.98/hbase-common-0.98/src/test/java/com/kakao/hbase/common/util/AlertSenderTest.java"}, "test_case": {"identifier": "testSend", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSend() throws Exception {\n        int sendCountBefore = AlertSender.getSendCount();\n        AlertSender.send(ALERT_SCRIPT, \"snapshot test\");\n        Assert.assertEquals(sendCountBefore + 1, AlertSender.getSendCount());\n    }", "signature": "void testSend()", "full_signature": "@Test public void testSend()", "class_method_signature": "AlertSenderTest.testSend()", "testcase": true, "constructor": false, "invocations": ["getSendCount", "send", "assertEquals", "getSendCount"]}, "focal_class": {"identifier": "AlertSender", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static AtomicInteger sendCounter = new AtomicInteger();", "modifier": "private static", "type": "AtomicInteger", "declarator": "sendCounter = new AtomicInteger()", "var_name": "sendCounter"}], "methods": [{"identifier": "AlertSender", "parameters": "()", "modifiers": "private", "return": "", "signature": " AlertSender()", "full_signature": "private  AlertSender()", "class_method_signature": "AlertSender.AlertSender()", "testcase": false, "constructor": true}, {"identifier": "send", "parameters": "(String alertScript, String message)", "modifiers": "public static", "return": "void", "signature": "void send(String alertScript, String message)", "full_signature": "public static void send(String alertScript, String message)", "class_method_signature": "AlertSender.send(String alertScript, String message)", "testcase": false, "constructor": false}, {"identifier": "getSendCount", "parameters": "()", "modifiers": "@VisibleForTesting public static", "return": "int", "signature": "int getSendCount()", "full_signature": "@VisibleForTesting public static int getSendCount()", "class_method_signature": "AlertSender.getSendCount()", "testcase": false, "constructor": false}], "file": "hbase0.98/hbase-common-0.98/src/main/java/com/kakao/hbase/common/util/AlertSender.java"}, "focal_method": {"identifier": "send", "parameters": "(String alertScript, String message)", "modifiers": "public static", "return": "void", "body": "public static void send(String alertScript, String message) {\n        try {\n            Process alert = Runtime.getRuntime().exec(alertScript + \" \\\"\" + message + \"\\\"\");\n            alert.waitFor();\n\n            try (BufferedReader reader = new BufferedReader(new InputStreamReader(alert.getInputStream()))) {\n                StringBuilder sb = new StringBuilder();\n                String line;\n                while ((line = reader.readLine()) != null) {\n                    sb.append(line).append(\"\\n\");\n                }\n\n                int exitValue = alert.exitValue();\n                if (exitValue != 0) {\n                    System.out.println(\"Exit Code:\" + exitValue);\n                    System.out.println(\"Message: \" + sb.toString());\n                }\n            }\n        } catch (IOException | InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        sendCounter.incrementAndGet();\n    }", "signature": "void send(String alertScript, String message)", "full_signature": "public static void send(String alertScript, String message)", "class_method_signature": "AlertSender.send(String alertScript, String message)", "testcase": false, "constructor": false, "invocations": ["exec", "getRuntime", "waitFor", "getInputStream", "readLine", "append", "append", "exitValue", "println", "println", "toString", "printStackTrace", "incrementAndGet"]}, "repository": {"repo_id": 46396068, "url": "https://github.com/kakao/hbase-tools", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 49, "size": 1758, "license": "licensed"}}