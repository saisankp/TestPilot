{"test_class": {"identifier": "FstObjectInputTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FstObjectInput fstObjectInput;", "modifier": "private", "type": "FstObjectInput", "declarator": "fstObjectInput", "var_name": "fstObjectInput"}], "file": "dubbo-serialization/dubbo-serialization-fst/src/test/java/com/alibaba/dubbo/common/serialize/fst/FstObjectInputTest.java"}, "test_case": {"identifier": "testEmptyByteArrayForEmptyInput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmptyByteArrayForEmptyInput() throws IOException {\n        this.fstObjectInput = new FstObjectInput(new ByteArrayInputStream(\"\".getBytes()));\n\n        byte[] bytes = fstObjectInput.readBytes();\n        assertThat(bytes.length, is(0));\n    }", "signature": "void testEmptyByteArrayForEmptyInput()", "full_signature": "@Test public void testEmptyByteArrayForEmptyInput()", "class_method_signature": "FstObjectInputTest.testEmptyByteArrayForEmptyInput()", "testcase": true, "constructor": false, "invocations": ["getBytes", "readBytes", "assertThat", "is"]}, "focal_class": {"identifier": "FstObjectInput", "superclass": "", "interfaces": "implements ObjectInput", "fields": [{"original_string": "private FSTObjectInput input;", "modifier": "private", "type": "FSTObjectInput", "declarator": "input", "var_name": "input"}], "methods": [{"identifier": "FstObjectInput", "parameters": "(InputStream inputStream)", "modifiers": "public", "return": "", "signature": " FstObjectInput(InputStream inputStream)", "full_signature": "public  FstObjectInput(InputStream inputStream)", "class_method_signature": "FstObjectInput.FstObjectInput(InputStream inputStream)", "testcase": false, "constructor": true}, {"identifier": "readBool", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean readBool()", "full_signature": "@Override public boolean readBool()", "class_method_signature": "FstObjectInput.readBool()", "testcase": false, "constructor": false}, {"identifier": "readByte", "parameters": "()", "modifiers": "@Override public", "return": "byte", "signature": "byte readByte()", "full_signature": "@Override public byte readByte()", "class_method_signature": "FstObjectInput.readByte()", "testcase": false, "constructor": false}, {"identifier": "readShort", "parameters": "()", "modifiers": "@Override public", "return": "short", "signature": "short readShort()", "full_signature": "@Override public short readShort()", "class_method_signature": "FstObjectInput.readShort()", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int readInt()", "full_signature": "@Override public int readInt()", "class_method_signature": "FstObjectInput.readInt()", "testcase": false, "constructor": false}, {"identifier": "readLong", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long readLong()", "full_signature": "@Override public long readLong()", "class_method_signature": "FstObjectInput.readLong()", "testcase": false, "constructor": false}, {"identifier": "readFloat", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float readFloat()", "full_signature": "@Override public float readFloat()", "class_method_signature": "FstObjectInput.readFloat()", "testcase": false, "constructor": false}, {"identifier": "readDouble", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double readDouble()", "full_signature": "@Override public double readDouble()", "class_method_signature": "FstObjectInput.readDouble()", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] readBytes()", "full_signature": "@Override public byte[] readBytes()", "class_method_signature": "FstObjectInput.readBytes()", "testcase": false, "constructor": false}, {"identifier": "readUTF", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String readUTF()", "full_signature": "@Override public String readUTF()", "class_method_signature": "FstObjectInput.readUTF()", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object readObject()", "full_signature": "@Override public Object readObject()", "class_method_signature": "FstObjectInput.readObject()", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(Class<T> clazz)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T readObject(Class<T> clazz)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public T readObject(Class<T> clazz)", "class_method_signature": "FstObjectInput.readObject(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(Class<T> clazz, Type type)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T readObject(Class<T> clazz, Type type)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public T readObject(Class<T> clazz, Type type)", "class_method_signature": "FstObjectInput.readObject(Class<T> clazz, Type type)", "testcase": false, "constructor": false}], "file": "dubbo-serialization/dubbo-serialization-fst/src/main/java/com/alibaba/dubbo/common/serialize/fst/FstObjectInput.java"}, "focal_method": {"identifier": "readBytes", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] readBytes() throws IOException {\n        int len = input.readInt();\n        if (len < 0) {\n            return null;\n        } else if (len == 0) {\n            return new byte[]{};\n        } else {\n            byte[] b = new byte[len];\n            input.readFully(b);\n            return b;\n        }\n    }", "signature": "byte[] readBytes()", "full_signature": "@Override public byte[] readBytes()", "class_method_signature": "FstObjectInput.readBytes()", "testcase": false, "constructor": false, "invocations": ["readInt", "readFully"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}