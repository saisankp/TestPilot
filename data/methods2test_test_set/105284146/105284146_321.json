{"test_class": {"identifier": "InjectionIncreaseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String VARIABLE_ID = \"Variable ID\";", "modifier": "private static final", "type": "String", "declarator": "VARIABLE_ID = \"Variable ID\"", "var_name": "VARIABLE_ID"}, {"original_string": "private static final String VARIABLE_NAME = \"Variable name\";", "modifier": "private static final", "type": "String", "declarator": "VARIABLE_NAME = \"Variable name\"", "var_name": "VARIABLE_NAME"}, {"original_string": "private static final String INJECTION_ID = \"Injection ID\";", "modifier": "private static final", "type": "String", "declarator": "INJECTION_ID = \"Injection ID\"", "var_name": "INJECTION_ID"}, {"original_string": "@Rule\n    public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}], "file": "sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/variables/InjectionIncreaseTest.java"}, "test_case": {"identifier": "getLine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLine() {\n        InjectionIncrease branchIntensity = new InjectionIncrease(VARIABLE_ID, VARIABLE_NAME, INJECTION_ID);\n        assertEquals(INJECTION_ID, branchIntensity.getInjectionId());\n    }", "signature": "void getLine()", "full_signature": "@Test public void getLine()", "class_method_signature": "InjectionIncreaseTest.getLine()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getInjectionId"]}, "focal_class": {"identifier": "InjectionIncrease", "superclass": "extends SensitivityVariable", "interfaces": "", "fields": [{"original_string": "@JsonProperty(\"injectionId\")\n    private final String injectionId;", "modifier": "@JsonProperty(\"injectionId\")\n    private final", "type": "String", "declarator": "injectionId", "var_name": "injectionId"}], "methods": [{"identifier": "InjectionIncrease", "parameters": "(@JsonProperty(\"id\") String id,\n                             @JsonProperty(\"name\") String name,\n                             @JsonProperty(\"injectionId\") String injectionId)", "modifiers": "@JsonCreator public", "return": "", "signature": " InjectionIncrease(@JsonProperty(\"id\") String id,\n                             @JsonProperty(\"name\") String name,\n                             @JsonProperty(\"injectionId\") String injectionId)", "full_signature": "@JsonCreator public  InjectionIncrease(@JsonProperty(\"id\") String id,\n                             @JsonProperty(\"name\") String name,\n                             @JsonProperty(\"injectionId\") String injectionId)", "class_method_signature": "InjectionIncrease.InjectionIncrease(@JsonProperty(\"id\") String id,\n                             @JsonProperty(\"name\") String name,\n                             @JsonProperty(\"injectionId\") String injectionId)", "testcase": false, "constructor": true}, {"identifier": "getInjectionId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInjectionId()", "full_signature": "public String getInjectionId()", "class_method_signature": "InjectionIncrease.getInjectionId()", "testcase": false, "constructor": false}], "file": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/variables/InjectionIncrease.java"}, "focal_method": {"identifier": "getInjectionId", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getInjectionId() {\n        return injectionId;\n    }", "signature": "String getInjectionId()", "full_signature": "public String getInjectionId()", "class_method_signature": "InjectionIncrease.getInjectionId()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}