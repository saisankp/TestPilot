{"test_class": {"identifier": "SimpleMenuItemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SimpleMenuItem item;", "modifier": "private", "type": "SimpleMenuItem", "declarator": "item", "var_name": "item"}], "file": "tiles-compat/src/test/java/org/apache/tiles/beans/SimpleMenuItemTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        item.setIcon(\"icon\");\n        item.setLink(\"link\");\n        item.setTooltip(\"tooltip\");\n        item.setValue(\"value\");\n        assertEquals(\n                \"SimpleMenuItem[value=value, link=link, tooltip=tooltip, icon=icon, ]\",\n                item.toString());\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "SimpleMenuItemTest.testToString()", "testcase": true, "constructor": false, "invocations": ["setIcon", "setLink", "setTooltip", "setValue", "assertEquals", "toString"]}, "focal_class": {"identifier": "SimpleMenuItem", "superclass": "", "interfaces": "implements MenuItem, Serializable", "fields": [{"original_string": "private String value = null;", "modifier": "private", "type": "String", "declarator": "value = null", "var_name": "value"}, {"original_string": "private String link = null;", "modifier": "private", "type": "String", "declarator": "link = null", "var_name": "link"}, {"original_string": "private String icon = null;", "modifier": "private", "type": "String", "declarator": "icon = null", "var_name": "icon"}, {"original_string": "private String tooltip = null;", "modifier": "private", "type": "String", "declarator": "tooltip = null", "var_name": "tooltip"}], "methods": [{"identifier": "SimpleMenuItem", "parameters": "()", "modifiers": "public", "return": "", "signature": " SimpleMenuItem()", "full_signature": "public  SimpleMenuItem()", "class_method_signature": "SimpleMenuItem.SimpleMenuItem()", "testcase": false, "constructor": true}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setValue(String value)", "full_signature": "public void setValue(String value)", "class_method_signature": "SimpleMenuItem.setValue(String value)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "SimpleMenuItem.getValue()", "testcase": false, "constructor": false}, {"identifier": "setLink", "parameters": "(String link)", "modifiers": "public", "return": "void", "signature": "void setLink(String link)", "full_signature": "public void setLink(String link)", "class_method_signature": "SimpleMenuItem.setLink(String link)", "testcase": false, "constructor": false}, {"identifier": "getLink", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLink()", "full_signature": "public String getLink()", "class_method_signature": "SimpleMenuItem.getLink()", "testcase": false, "constructor": false}, {"identifier": "setIcon", "parameters": "(String icon)", "modifiers": "public", "return": "void", "signature": "void setIcon(String icon)", "full_signature": "public void setIcon(String icon)", "class_method_signature": "SimpleMenuItem.setIcon(String icon)", "testcase": false, "constructor": false}, {"identifier": "getIcon", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIcon()", "full_signature": "public String getIcon()", "class_method_signature": "SimpleMenuItem.getIcon()", "testcase": false, "constructor": false}, {"identifier": "setTooltip", "parameters": "(String tooltip)", "modifiers": "public", "return": "void", "signature": "void setTooltip(String tooltip)", "full_signature": "public void setTooltip(String tooltip)", "class_method_signature": "SimpleMenuItem.setTooltip(String tooltip)", "testcase": false, "constructor": false}, {"identifier": "getTooltip", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTooltip()", "full_signature": "public String getTooltip()", "class_method_signature": "SimpleMenuItem.getTooltip()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SimpleMenuItem.toString()", "testcase": false, "constructor": false}], "file": "tiles-compat/src/main/java/org/apache/tiles/beans/SimpleMenuItem.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuilder buff = new StringBuilder(\"SimpleMenuItem[\");\n\n        if (getValue() != null) {\n            buff.append(\"value=\").append(getValue()).append(\", \");\n        }\n\n        if (getLink() != null) {\n            buff.append(\"link=\").append(getLink()).append(\", \");\n        }\n\n        if (getTooltip() != null) {\n            buff.append(\"tooltip=\").append(getTooltip()).append(\", \");\n        }\n\n        if (getIcon() != null) {\n            buff.append(\"icon=\").append(getIcon()).append(\", \");\n        }\n\n        buff.append(\"]\");\n        return buff.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SimpleMenuItem.toString()", "testcase": false, "constructor": false, "invocations": ["getValue", "append", "append", "append", "getValue", "getLink", "append", "append", "append", "getLink", "getTooltip", "append", "append", "append", "getTooltip", "getIcon", "append", "append", "append", "getIcon", "append", "toString"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}