{"test_class": {"identifier": "XmlExtensionNotificationDataConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml.callmanager.mmi/src/test/java/org/jvoicexml/callmanager/mmi/xml/XmlExtensionNotificationDataConverterTest.java"}, "test_case": {"identifier": "testConvertApplicationLastResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertApplicationLastResult() throws Exception {\n        final XmlExtensionNotificationDataConverter converter = new XmlExtensionNotificationDataConverter();\n        final List<LastResult> list = new java.util.ArrayList<LastResult>();\n        final LastResult result = new LastResult(\"yes\", .75f, \"voice\", null);\n        list.add(result);\n        final Element element = (Element) converter.convertApplicationLastResult(list);\n        System.out.println(toString(element));\n    }", "signature": "void testConvertApplicationLastResult()", "full_signature": "@Test public void testConvertApplicationLastResult()", "class_method_signature": "XmlExtensionNotificationDataConverterTest.testConvertApplicationLastResult()", "testcase": true, "constructor": false, "invocations": ["add", "convertApplicationLastResult", "println", "toString"]}, "focal_class": {"identifier": "XmlExtensionNotificationDataConverter", "superclass": "", "interfaces": "implements ExtensionNotificationDataConverter", "fields": [{"original_string": "public static final String JVXML_MMI_NAMESPACE = \"http://www.nowhere.org/jvxmlmmi\";", "modifier": "public static final", "type": "String", "declarator": "JVXML_MMI_NAMESPACE = \"http://www.nowhere.org/jvxmlmmi\"", "var_name": "JVXML_MMI_NAMESPACE"}, {"original_string": "private static final String EMMA_NAMESPACE = \"http://www.w3.org/2003/04/emma\";", "modifier": "private static final", "type": "String", "declarator": "EMMA_NAMESPACE = \"http://www.w3.org/2003/04/emma\"", "var_name": "EMMA_NAMESPACE"}], "methods": [{"identifier": "convertApplicationLastResult", "parameters": "(\n            final List<LastResult> lastresults)", "modifiers": "@Override public", "return": "Object", "signature": "Object convertApplicationLastResult(\n            final List<LastResult> lastresults)", "full_signature": "@Override public Object convertApplicationLastResult(\n            final List<LastResult> lastresults)", "class_method_signature": "XmlExtensionNotificationDataConverter.convertApplicationLastResult(\n            final List<LastResult> lastresults)", "testcase": false, "constructor": false}, {"identifier": "createEmma", "parameters": "(final String id, final String utterance,\n            final String mode, final float confidence,\n            final Object semanticInterpretation)", "modifiers": "private", "return": "Element", "signature": "Element createEmma(final String id, final String utterance,\n            final String mode, final float confidence,\n            final Object semanticInterpretation)", "full_signature": "private Element createEmma(final String id, final String utterance,\n            final String mode, final float confidence,\n            final Object semanticInterpretation)", "class_method_signature": "XmlExtensionNotificationDataConverter.createEmma(final String id, final String utterance,\n            final String mode, final float confidence,\n            final Object semanticInterpretation)", "testcase": false, "constructor": false}, {"identifier": "addSemanticInterpretation", "parameters": "(final Document document,\n            final Element parent, final Object object)", "modifiers": "private", "return": "void", "signature": "void addSemanticInterpretation(final Document document,\n            final Element parent, final Object object)", "full_signature": "private void addSemanticInterpretation(final Document document,\n            final Element parent, final Object object)", "class_method_signature": "XmlExtensionNotificationDataConverter.addSemanticInterpretation(final Document document,\n            final Element parent, final Object object)", "testcase": false, "constructor": false}, {"identifier": "addSemanticInterpretation", "parameters": "(final Document document,\n            final Element parent, final ScriptableObject object)", "modifiers": "private", "return": "void", "signature": "void addSemanticInterpretation(final Document document,\n            final Element parent, final ScriptableObject object)", "full_signature": "private void addSemanticInterpretation(final Document document,\n            final Element parent, final ScriptableObject object)", "class_method_signature": "XmlExtensionNotificationDataConverter.addSemanticInterpretation(final Document document,\n            final Element parent, final ScriptableObject object)", "testcase": false, "constructor": false}, {"identifier": "convertSynthesizedOutputEvent", "parameters": "(SynthesizedOutputEvent output)", "modifiers": "@Override public", "return": "Object", "signature": "Object convertSynthesizedOutputEvent(SynthesizedOutputEvent output)", "full_signature": "@Override public Object convertSynthesizedOutputEvent(SynthesizedOutputEvent output)", "class_method_signature": "XmlExtensionNotificationDataConverter.convertSynthesizedOutputEvent(SynthesizedOutputEvent output)", "testcase": false, "constructor": false}, {"identifier": "getSpeakable", "parameters": "(final SynthesizedOutputEvent output)", "modifiers": "private", "return": "SpeakableText", "signature": "SpeakableText getSpeakable(final SynthesizedOutputEvent output)", "full_signature": "private SpeakableText getSpeakable(final SynthesizedOutputEvent output)", "class_method_signature": "XmlExtensionNotificationDataConverter.getSpeakable(final SynthesizedOutputEvent output)", "testcase": false, "constructor": false}, {"identifier": "toDocument", "parameters": "(final SpeakableText speakable)", "modifiers": "private", "return": "Document", "signature": "Document toDocument(final SpeakableText speakable)", "full_signature": "private Document toDocument(final SpeakableText speakable)", "class_method_signature": "XmlExtensionNotificationDataConverter.toDocument(final SpeakableText speakable)", "testcase": false, "constructor": false}, {"identifier": "convertSpokenInputEvent", "parameters": "(final SpokenInputEvent input)", "modifiers": "@Override public", "return": "Object", "signature": "Object convertSpokenInputEvent(final SpokenInputEvent input)", "full_signature": "@Override public Object convertSpokenInputEvent(final SpokenInputEvent input)", "class_method_signature": "XmlExtensionNotificationDataConverter.convertSpokenInputEvent(final SpokenInputEvent input)", "testcase": false, "constructor": false}, {"identifier": "convertRecognitionEvent", "parameters": "(final DataModel model,\n            final RecognitionEvent event)", "modifiers": "@Override public", "return": "Object", "signature": "Object convertRecognitionEvent(final DataModel model,\n            final RecognitionEvent event)", "full_signature": "@Override public Object convertRecognitionEvent(final DataModel model,\n            final RecognitionEvent event)", "class_method_signature": "XmlExtensionNotificationDataConverter.convertRecognitionEvent(final DataModel model,\n            final RecognitionEvent event)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.callmanager.mmi/src/main/java/org/jvoicexml/callmanager/mmi/xml/XmlExtensionNotificationDataConverter.java"}, "focal_method": {"identifier": "convertApplicationLastResult", "parameters": "(\n            final List<LastResult> lastresults)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object convertApplicationLastResult(\n            final List<LastResult> lastresults) throws ConversionException {\n        if (lastresults == null || lastresults.isEmpty()) {\n            return null;\n        }\n        final LastResult lastresult = lastresults.get(0);\n        final String utterance = lastresult.getUtterance();\n        final String mode = lastresult.getInputmode();\n        final float confidence = lastresult.getConfidence();\n        final Object interpretation = lastresult.getInterpretation();\n        try {\n            return createEmma(\"lastresult\", utterance, mode, confidence,\n                    interpretation);\n        } catch (ParserConfigurationException e) {\n            throw new ConversionException(e.getMessage(), e);\n        }\n    }", "signature": "Object convertApplicationLastResult(\n            final List<LastResult> lastresults)", "full_signature": "@Override public Object convertApplicationLastResult(\n            final List<LastResult> lastresults)", "class_method_signature": "XmlExtensionNotificationDataConverter.convertApplicationLastResult(\n            final List<LastResult> lastresults)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "get", "getUtterance", "getInputmode", "getConfidence", "getInterpretation", "createEmma", "getMessage"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}