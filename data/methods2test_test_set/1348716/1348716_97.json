{"test_class": {"identifier": "TableTagParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "application/src/test/java/org/mifos/framework/components/customTableTag/TableTagParserTest.java"}, "test_case": {"identifier": "testParser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParser() throws Exception {\n        Table table = TableTagParser.getInstance().parser(\"org/mifos/framework/util/resources/customTableTag/example.xml\");\n        Assert.assertNotNull(table);\n        HeaderDetails details = table.getHeaderDetails();\n       Assert.assertEquals(\"drawtablerowbold\", details.getHeaderStyle());\n        StringBuilder builder = new StringBuilder();\n        details.getHeaderInfo(builder);\n        assertContains(\"drawtablerowbold\", builder.toString());\n        Row row = table.getRow();\n       Assert.assertEquals(\"true\", row.getBottomLineRequired());\n       Assert.assertEquals(\"100\", row.getTotWidth());\n        Column[] columns = row.getColumn();\n        for (int i = 0; i < columns.length; i++) {\n            if (i == 0) {\n               Assert.assertEquals(\"text\", columns[i].getColumnType());\n               Assert.assertEquals(\"Name\", columns[i].getLabel());\n               Assert.assertEquals(\"Name\", columns[i].getValue());\n               Assert.assertEquals(\"method\", columns[i].getValueType());\n                StringBuilder builder2 = new StringBuilder();\n                Locale locale = new Locale(\"en\", \"GB\");\n                OfficeDetailsDto officeDetailsDto = new OfficeDetailsDto(Short.valueOf(\"1\"), \"abcd\", Short.valueOf(\"1\"), \"branch\",\n                        Integer.valueOf(\"1\"));\n\n                ColumnDetails columnDetails = new ColumnDetails();\n                columnDetails.setRowStyle(\"drawtablerowbold\");\n                columnDetails.setAlign(\"Down\");\n                columns[i].setColumnDetials(columnDetails);\n                columns[i].generateTableColumn(builder2, officeDetailsDto, locale, locale, 0);\n               Assert.assertEquals(\"<td class=\\\"drawtablerowbold\\\"   align=\\\"Down\\\" > </td>\", builder2.toString());\n\n            }\n        }\n\n    }", "signature": "void testParser()", "full_signature": "@Test public void testParser()", "class_method_signature": "TableTagParserTest.testParser()", "testcase": true, "constructor": false, "invocations": ["parser", "getInstance", "assertNotNull", "getHeaderDetails", "assertEquals", "getHeaderStyle", "getHeaderInfo", "assertContains", "toString", "getRow", "assertEquals", "getBottomLineRequired", "assertEquals", "getTotWidth", "getColumn", "assertEquals", "getColumnType", "assertEquals", "getLabel", "assertEquals", "getValue", "assertEquals", "getValueType", "valueOf", "valueOf", "valueOf", "setRowStyle", "setAlign", "setColumnDetials", "generateTableColumn", "assertEquals", "toString"]}, "focal_class": {"identifier": "TableTagParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static TableTagParser instance = new TableTagParser();", "modifier": "private static", "type": "TableTagParser", "declarator": "instance = new TableTagParser()", "var_name": "instance"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "TableTagParser", "signature": "TableTagParser getInstance()", "full_signature": "public static TableTagParser getInstance()", "class_method_signature": "TableTagParser.getInstance()", "testcase": false, "constructor": false}, {"identifier": "parser", "parameters": "(String file)", "modifiers": "public", "return": "Table", "signature": "Table parser(String file)", "full_signature": "public Table parser(String file)", "class_method_signature": "TableTagParser.parser(String file)", "testcase": false, "constructor": false}, {"identifier": "createTable", "parameters": "(Document document)", "modifiers": "protected", "return": "Table", "signature": "Table createTable(Document document)", "full_signature": "protected Table createTable(Document document)", "class_method_signature": "TableTagParser.createTable(Document document)", "testcase": false, "constructor": false}, {"identifier": "createHeaderDetails", "parameters": "(Node table)", "modifiers": "protected", "return": "HeaderDetails", "signature": "HeaderDetails createHeaderDetails(Node table)", "full_signature": "protected HeaderDetails createHeaderDetails(Node table)", "class_method_signature": "TableTagParser.createHeaderDetails(Node table)", "testcase": false, "constructor": false}, {"identifier": "createRow", "parameters": "(Node table)", "modifiers": "protected", "return": "Row", "signature": "Row createRow(Node table)", "full_signature": "protected Row createRow(Node table)", "class_method_signature": "TableTagParser.createRow(Node table)", "testcase": false, "constructor": false}, {"identifier": "createColumn", "parameters": "(Node row)", "modifiers": "protected", "return": "Column[]", "signature": "Column[] createColumn(Node row)", "full_signature": "protected Column[] createColumn(Node row)", "class_method_signature": "TableTagParser.createColumn(Node row)", "testcase": false, "constructor": false}, {"identifier": "setColumnAttributes", "parameters": "(Column column, NamedNodeMap map)", "modifiers": "protected", "return": "void", "signature": "void setColumnAttributes(Column column, NamedNodeMap map)", "full_signature": "protected void setColumnAttributes(Column column, NamedNodeMap map)", "class_method_signature": "TableTagParser.setColumnAttributes(Column column, NamedNodeMap map)", "testcase": false, "constructor": false}, {"identifier": "createColumnDetails", "parameters": "(Node column)", "modifiers": "protected", "return": "ColumnDetails", "signature": "ColumnDetails createColumnDetails(Node column)", "full_signature": "protected ColumnDetails createColumnDetails(Node column)", "class_method_signature": "TableTagParser.createColumnDetails(Node column)", "testcase": false, "constructor": false}, {"identifier": "createLinkDetails", "parameters": "(Node column)", "modifiers": "protected", "return": "LinkDetails", "signature": "LinkDetails createLinkDetails(Node column)", "full_signature": "protected LinkDetails createLinkDetails(Node column)", "class_method_signature": "TableTagParser.createLinkDetails(Node column)", "testcase": false, "constructor": false}, {"identifier": "createActionParams", "parameters": "(Node linkDetail)", "modifiers": "protected", "return": "ActionParam[]", "signature": "ActionParam[] createActionParams(Node linkDetail)", "full_signature": "protected ActionParam[] createActionParams(Node linkDetail)", "class_method_signature": "TableTagParser.createActionParams(Node linkDetail)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/mifos/framework/components/customTableTag/TableTagParser.java"}, "focal_method": {"identifier": "parser", "parameters": "(String file)", "modifiers": "public", "return": "Table", "body": "public Table parser(String file) throws TableTagParseException {\n        Table table = null;\n        try {\n            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\n            SchemaFactory schfactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n            schfactory.setErrorHandler(null);\n            Schema schema = schfactory.newSchema(new StreamSource(MifosResourceUtil.getClassPathResourceAsURIString(FilePaths.CUSTOMTABLETAGXSD)));\n            factory.setNamespaceAware(false);\n            factory.setValidating(false);\n            factory.setSchema(schema);\n\n            DocumentBuilder builder = factory.newDocumentBuilder();\n            builder.setErrorHandler(null);\n            Document document = builder.parse(MifosResourceUtil.getClassPathResourceAsURIString(file));\n\n            table = createTable(document);\n\n        } catch (Exception e) {\n            throw new TableTagParseException(e);\n        }\n        return table;\n    }", "signature": "Table parser(String file)", "full_signature": "public Table parser(String file)", "class_method_signature": "TableTagParser.parser(String file)", "testcase": false, "constructor": false, "invocations": ["newInstance", "newInstance", "setErrorHandler", "newSchema", "getClassPathResourceAsURIString", "setNamespaceAware", "setValidating", "setSchema", "newDocumentBuilder", "setErrorHandler", "parse", "getClassPathResourceAsURIString", "createTable"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}