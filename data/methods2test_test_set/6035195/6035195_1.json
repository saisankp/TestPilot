{"test_class": {"identifier": "PublishListOfMachinesTest", "superclass": "", "interfaces": "", "fields": [], "file": "providers/amazon/src/test/java/com/axemblr/provisionr/amazon/activities/PublishListOfMachinesTest.java"}, "test_case": {"identifier": "testPublishListOfMachines", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPublishListOfMachines() throws Exception {\n        AmazonEC2 client = mock(AmazonEC2.class);\n\n        ProviderClientCache clientCache = mock(ProviderClientCache.class);\n        when(clientCache.get(Matchers.<Provider>any())).thenReturn(client);\n\n        DelegateExecution execution = mock(DelegateExecution.class);\n        List<String> instanceIds = Lists.newArrayList(\"i-123\", \"i-456\");\n        when(execution.getVariable(ProcessVariables.INSTANCE_IDS)).thenReturn(instanceIds);\n\n        when(client.describeInstances(Matchers.<DescribeInstancesRequest>any()))\n            .thenReturn(new DescribeInstancesResult()\n                .withReservations(new Reservation().withInstances(\n                    new Instance().withInstanceId(\"i-123\").withPublicDnsName(\"i1.amazonaws.com\")\n                        .withPublicIpAddress(\"1.2.3.4\").withPrivateDnsName(\"i1.internal\").withPrivateIpAddress(\"10.1.2.3\"),\n                    new Instance().withInstanceId(\"i-456\").withPublicDnsName(\"i2.amazonaws.com\")\n                        .withPublicIpAddress(\"5.6.7.8\").withPrivateDnsName(\"i2.internal\").withPrivateIpAddress(\"10.4.5.6\")\n                )));\n\n        ProcessVariablesCollector collector = new ProcessVariablesCollector();\n        collector.install(execution);\n\n        AmazonActivity activity = new PublishListOfMachines(clientCache);\n        activity.execute(client, null /* not used */, execution);\n\n        @SuppressWarnings(\"unchecked\")\n        List<Machine> machines = (List<Machine>) collector.getVariable(CoreProcessVariables.MACHINES);\n\n        assertThat(machines).hasSize(2);\n        assertThat(machines.get(0).getPublicDnsName()).isEqualTo(\"i1.amazonaws.com\");\n    }", "signature": "void testPublishListOfMachines()", "full_signature": "@Test public void testPublishListOfMachines()", "class_method_signature": "PublishListOfMachinesTest.testPublishListOfMachines()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "get", "any", "mock", "newArrayList", "thenReturn", "when", "getVariable", "thenReturn", "when", "describeInstances", "any", "withReservations", "withInstances", "withPrivateIpAddress", "withPrivateDnsName", "withPublicIpAddress", "withPublicDnsName", "withInstanceId", "withPrivateIpAddress", "withPrivateDnsName", "withPublicIpAddress", "withPublicDnsName", "withInstanceId", "install", "execute", "getVariable", "hasSize", "assertThat", "isEqualTo", "assertThat", "getPublicDnsName", "get"]}, "focal_class": {"identifier": "PublishListOfMachines", "superclass": "extends AmazonActivity", "interfaces": "", "fields": [{"original_string": "public static final Logger LOG = LoggerFactory.getLogger(PublishListOfMachines.class);", "modifier": "public static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(PublishListOfMachines.class)", "var_name": "LOG"}], "methods": [{"identifier": "PublishListOfMachines", "parameters": "(ProviderClientCache providerClientCache)", "modifiers": "public", "return": "", "signature": " PublishListOfMachines(ProviderClientCache providerClientCache)", "full_signature": "public  PublishListOfMachines(ProviderClientCache providerClientCache)", "class_method_signature": "PublishListOfMachines.PublishListOfMachines(ProviderClientCache providerClientCache)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(AmazonEC2 client, Pool pool, DelegateExecution execution)", "modifiers": "@Override public", "return": "void", "signature": "void execute(AmazonEC2 client, Pool pool, DelegateExecution execution)", "full_signature": "@Override public void execute(AmazonEC2 client, Pool pool, DelegateExecution execution)", "class_method_signature": "PublishListOfMachines.execute(AmazonEC2 client, Pool pool, DelegateExecution execution)", "testcase": false, "constructor": false}], "file": "providers/amazon/src/main/java/com/axemblr/provisionr/amazon/activities/PublishListOfMachines.java"}, "focal_method": {"identifier": "PublishListOfMachines", "parameters": "(ProviderClientCache providerClientCache)", "modifiers": "public", "return": "", "body": "public PublishListOfMachines(ProviderClientCache providerClientCache) {\n        super(providerClientCache);\n    }", "signature": " PublishListOfMachines(ProviderClientCache providerClientCache)", "full_signature": "public  PublishListOfMachines(ProviderClientCache providerClientCache)", "class_method_signature": "PublishListOfMachines.PublishListOfMachines(ProviderClientCache providerClientCache)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}