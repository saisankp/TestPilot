{"test_class": {"identifier": "ProjectDbsetRelationServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ProjectDbsetRelationService projectDbsetRelationService;", "modifier": "@Mock\n    private", "type": "ProjectDbsetRelationService", "declarator": "projectDbsetRelationService", "var_name": "projectDbsetRelationService"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/service/ProjectDbsetRelationServiceTest.java"}, "test_case": {"identifier": "isNotExistByNameTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isNotExistByNameTest() throws SQLException {\n        ProjectDbsetRelation projectDbsetRelation = ProjectDbsetRelation.builder().dbsetId(1L).build();\n        Assert.assertTrue(projectDbsetRelationService.isNotExistByName(projectDbsetRelation));\n    }", "signature": "void isNotExistByNameTest()", "full_signature": "@Test public void isNotExistByNameTest()", "class_method_signature": "ProjectDbsetRelationServiceTest.isNotExistByNameTest()", "testcase": true, "constructor": false, "invocations": ["build", "dbsetId", "builder", "assertTrue", "isNotExistByName"]}, "focal_class": {"identifier": "ProjectDbsetRelationService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ProjectDbsetRelationDao projectDbsetRelationDao;", "modifier": "@Autowired\n    private", "type": "ProjectDbsetRelationDao", "declarator": "projectDbsetRelationDao", "var_name": "projectDbsetRelationDao"}], "methods": [{"identifier": "validatePermision", "parameters": "(LoginUser user, ProjectDbsetRelation projectDbsetRelation, Errors errors)", "modifiers": "public", "return": "ValidatorChain", "signature": "ValidatorChain validatePermision(LoginUser user, ProjectDbsetRelation projectDbsetRelation, Errors errors)", "full_signature": "public ValidatorChain validatePermision(LoginUser user, ProjectDbsetRelation projectDbsetRelation, Errors errors)", "class_method_signature": "ProjectDbsetRelationService.validatePermision(LoginUser user, ProjectDbsetRelation projectDbsetRelation, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validatePermision", "parameters": "(Long userId, Long groupId, Errors errors)", "modifiers": "private", "return": "ValidatorChain", "signature": "ValidatorChain validatePermision(Long userId, Long groupId, Errors errors)", "full_signature": "private ValidatorChain validatePermision(Long userId, Long groupId, Errors errors)", "class_method_signature": "ProjectDbsetRelationService.validatePermision(Long userId, Long groupId, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "isNotExistByName", "parameters": "(ProjectDbsetRelation projectDbsetRelation)", "modifiers": "public", "return": "boolean", "signature": "boolean isNotExistByName(ProjectDbsetRelation projectDbsetRelation)", "full_signature": "public boolean isNotExistByName(ProjectDbsetRelation projectDbsetRelation)", "class_method_signature": "ProjectDbsetRelationService.isNotExistByName(ProjectDbsetRelation projectDbsetRelation)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/service/ProjectDbsetRelationService.java"}, "focal_method": {"identifier": "isNotExistByName", "parameters": "(ProjectDbsetRelation projectDbsetRelation)", "modifiers": "public", "return": "boolean", "body": "public boolean isNotExistByName(ProjectDbsetRelation projectDbsetRelation) throws SQLException {\n        Long n = projectDbsetRelationDao.getCountByRelation(projectDbsetRelation.getDbsetId(), projectDbsetRelation.getProjectId());\n        if (n == 0) {\n            return true;\n        }\n        return false;\n    }", "signature": "boolean isNotExistByName(ProjectDbsetRelation projectDbsetRelation)", "full_signature": "public boolean isNotExistByName(ProjectDbsetRelation projectDbsetRelation)", "class_method_signature": "ProjectDbsetRelationService.isNotExistByName(ProjectDbsetRelation projectDbsetRelation)", "testcase": false, "constructor": false, "invocations": ["getCountByRelation", "getDbsetId", "getProjectId"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}