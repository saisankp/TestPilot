{"test_class": {"identifier": "HttpServletRequestWrapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "servlet/api/src/test/java/javax/servlet/http/HttpServletRequestWrapperTest.java"}, "test_case": {"identifier": "testAuthenticate", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testAuthenticate() throws Exception {\n        HttpServletRequestWrapper wrapper = new TestHttpServletRequest(null);\n        HttpServletResponseWrapper response = new HttpServletResponseWrapper(null);\n        assertFalse(wrapper.authenticate(response));\n    }", "signature": "void testAuthenticate()", "full_signature": "@Test void testAuthenticate()", "class_method_signature": "HttpServletRequestWrapperTest.testAuthenticate()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "authenticate"]}, "focal_class": {"identifier": "HttpServletRequestWrapper", "superclass": "extends ServletRequestWrapper", "interfaces": "implements HttpServletRequest", "fields": [], "methods": [{"identifier": "HttpServletRequestWrapper", "parameters": "(HttpServletRequest request)", "modifiers": "public", "return": "", "signature": " HttpServletRequestWrapper(HttpServletRequest request)", "full_signature": "public  HttpServletRequestWrapper(HttpServletRequest request)", "class_method_signature": "HttpServletRequestWrapper.HttpServletRequestWrapper(HttpServletRequest request)", "testcase": false, "constructor": true}, {"identifier": "authenticate", "parameters": "(HttpServletResponse response)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(HttpServletResponse response)", "full_signature": "@Override public boolean authenticate(HttpServletResponse response)", "class_method_signature": "HttpServletRequestWrapper.authenticate(HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "changeSessionId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String changeSessionId()", "full_signature": "@Override public String changeSessionId()", "class_method_signature": "HttpServletRequestWrapper.changeSessionId()", "testcase": false, "constructor": false}, {"identifier": "getAuthType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAuthType()", "full_signature": "@Override public String getAuthType()", "class_method_signature": "HttpServletRequestWrapper.getAuthType()", "testcase": false, "constructor": false}, {"identifier": "getContextPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getContextPath()", "full_signature": "@Override public String getContextPath()", "class_method_signature": "HttpServletRequestWrapper.getContextPath()", "testcase": false, "constructor": false}, {"identifier": "getCookies", "parameters": "()", "modifiers": "@Override public", "return": "Cookie[]", "signature": "Cookie[] getCookies()", "full_signature": "@Override public Cookie[] getCookies()", "class_method_signature": "HttpServletRequestWrapper.getCookies()", "testcase": false, "constructor": false}, {"identifier": "getDateHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "long", "signature": "long getDateHeader(String name)", "full_signature": "@Override public long getDateHeader(String name)", "class_method_signature": "HttpServletRequestWrapper.getDateHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getHeader(String name)", "full_signature": "@Override public String getHeader(String name)", "class_method_signature": "HttpServletRequestWrapper.getHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaderNames", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getHeaderNames()", "full_signature": "@Override public Enumeration<String> getHeaderNames()", "class_method_signature": "HttpServletRequestWrapper.getHeaderNames()", "testcase": false, "constructor": false}, {"identifier": "getHeaders", "parameters": "(String name)", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getHeaders(String name)", "full_signature": "@Override public Enumeration<String> getHeaders(String name)", "class_method_signature": "HttpServletRequestWrapper.getHeaders(String name)", "testcase": false, "constructor": false}, {"identifier": "getIntHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "int", "signature": "int getIntHeader(String name)", "full_signature": "@Override public int getIntHeader(String name)", "class_method_signature": "HttpServletRequestWrapper.getIntHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getMethod", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMethod()", "full_signature": "@Override public String getMethod()", "class_method_signature": "HttpServletRequestWrapper.getMethod()", "testcase": false, "constructor": false}, {"identifier": "getPart", "parameters": "(String name)", "modifiers": "@Override public", "return": "Part", "signature": "Part getPart(String name)", "full_signature": "@Override public Part getPart(String name)", "class_method_signature": "HttpServletRequestWrapper.getPart(String name)", "testcase": false, "constructor": false}, {"identifier": "getParts", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Part>", "signature": "Collection<Part> getParts()", "full_signature": "@Override public Collection<Part> getParts()", "class_method_signature": "HttpServletRequestWrapper.getParts()", "testcase": false, "constructor": false}, {"identifier": "getPathInfo", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPathInfo()", "full_signature": "@Override public String getPathInfo()", "class_method_signature": "HttpServletRequestWrapper.getPathInfo()", "testcase": false, "constructor": false}, {"identifier": "getPathTranslated", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPathTranslated()", "full_signature": "@Override public String getPathTranslated()", "class_method_signature": "HttpServletRequestWrapper.getPathTranslated()", "testcase": false, "constructor": false}, {"identifier": "getQueryString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getQueryString()", "full_signature": "@Override public String getQueryString()", "class_method_signature": "HttpServletRequestWrapper.getQueryString()", "testcase": false, "constructor": false}, {"identifier": "getRemoteUser", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRemoteUser()", "full_signature": "@Override public String getRemoteUser()", "class_method_signature": "HttpServletRequestWrapper.getRemoteUser()", "testcase": false, "constructor": false}, {"identifier": "getRequestURI", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRequestURI()", "full_signature": "@Override public String getRequestURI()", "class_method_signature": "HttpServletRequestWrapper.getRequestURI()", "testcase": false, "constructor": false}, {"identifier": "getRequestURL", "parameters": "()", "modifiers": "@Override public", "return": "StringBuffer", "signature": "StringBuffer getRequestURL()", "full_signature": "@Override public StringBuffer getRequestURL()", "class_method_signature": "HttpServletRequestWrapper.getRequestURL()", "testcase": false, "constructor": false}, {"identifier": "getRequestedSessionId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRequestedSessionId()", "full_signature": "@Override public String getRequestedSessionId()", "class_method_signature": "HttpServletRequestWrapper.getRequestedSessionId()", "testcase": false, "constructor": false}, {"identifier": "getServletPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getServletPath()", "full_signature": "@Override public String getServletPath()", "class_method_signature": "HttpServletRequestWrapper.getServletPath()", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "()", "modifiers": "@Override public", "return": "HttpSession", "signature": "HttpSession getSession()", "full_signature": "@Override public HttpSession getSession()", "class_method_signature": "HttpServletRequestWrapper.getSession()", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "(boolean create)", "modifiers": "@Override public", "return": "HttpSession", "signature": "HttpSession getSession(boolean create)", "full_signature": "@Override public HttpSession getSession(boolean create)", "class_method_signature": "HttpServletRequestWrapper.getSession(boolean create)", "testcase": false, "constructor": false}, {"identifier": "getUserPrincipal", "parameters": "()", "modifiers": "@Override public", "return": "Principal", "signature": "Principal getUserPrincipal()", "full_signature": "@Override public Principal getUserPrincipal()", "class_method_signature": "HttpServletRequestWrapper.getUserPrincipal()", "testcase": false, "constructor": false}, {"identifier": "getWrapped", "parameters": "()", "modifiers": "private", "return": "HttpServletRequest", "signature": "HttpServletRequest getWrapped()", "full_signature": "private HttpServletRequest getWrapped()", "class_method_signature": "HttpServletRequestWrapper.getWrapped()", "testcase": false, "constructor": false}, {"identifier": "isRequestedSessionIdFromCookie", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRequestedSessionIdFromCookie()", "full_signature": "@Override public boolean isRequestedSessionIdFromCookie()", "class_method_signature": "HttpServletRequestWrapper.isRequestedSessionIdFromCookie()", "testcase": false, "constructor": false}, {"identifier": "isRequestedSessionIdFromURL", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRequestedSessionIdFromURL()", "full_signature": "@Override public boolean isRequestedSessionIdFromURL()", "class_method_signature": "HttpServletRequestWrapper.isRequestedSessionIdFromURL()", "testcase": false, "constructor": false}, {"identifier": "isRequestedSessionIdFromUrl", "parameters": "()", "modifiers": "@Deprecated @Override public", "return": "boolean", "signature": "boolean isRequestedSessionIdFromUrl()", "full_signature": "@Deprecated @Override public boolean isRequestedSessionIdFromUrl()", "class_method_signature": "HttpServletRequestWrapper.isRequestedSessionIdFromUrl()", "testcase": false, "constructor": false}, {"identifier": "isRequestedSessionIdValid", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRequestedSessionIdValid()", "full_signature": "@Override public boolean isRequestedSessionIdValid()", "class_method_signature": "HttpServletRequestWrapper.isRequestedSessionIdValid()", "testcase": false, "constructor": false}, {"identifier": "isUserInRole", "parameters": "(String role)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isUserInRole(String role)", "full_signature": "@Override public boolean isUserInRole(String role)", "class_method_signature": "HttpServletRequestWrapper.isUserInRole(String role)", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "(String username, String password)", "modifiers": "@Override public", "return": "void", "signature": "void login(String username, String password)", "full_signature": "@Override public void login(String username, String password)", "class_method_signature": "HttpServletRequestWrapper.login(String username, String password)", "testcase": false, "constructor": false}, {"identifier": "logout", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void logout()", "full_signature": "@Override public void logout()", "class_method_signature": "HttpServletRequestWrapper.logout()", "testcase": false, "constructor": false}, {"identifier": "upgrade", "parameters": "(Class<T> handlerClass)", "modifiers": "@Override public", "return": "T", "signature": "T upgrade(Class<T> handlerClass)", "full_signature": "@Override public T upgrade(Class<T> handlerClass)", "class_method_signature": "HttpServletRequestWrapper.upgrade(Class<T> handlerClass)", "testcase": false, "constructor": false}], "file": "servlet/api/src/main/java/javax/servlet/http/HttpServletRequestWrapper.java"}, "focal_method": {"identifier": "authenticate", "parameters": "(HttpServletResponse response)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean authenticate(HttpServletResponse response) throws IOException, ServletException {\n        return getWrapped().authenticate(response);\n    }", "signature": "boolean authenticate(HttpServletResponse response)", "full_signature": "@Override public boolean authenticate(HttpServletResponse response)", "class_method_signature": "HttpServletRequestWrapper.authenticate(HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["authenticate", "getWrapped"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}