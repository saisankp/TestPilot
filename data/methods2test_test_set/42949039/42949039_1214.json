{"test_class": {"identifier": "PartitionKeyGroupRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private PartitionKeyGroupRestController partitionKeyGroupRestController;", "modifier": "@InjectMocks\n    private", "type": "PartitionKeyGroupRestController", "declarator": "partitionKeyGroupRestController", "var_name": "partitionKeyGroupRestController"}, {"original_string": "@Mock\n    private PartitionKeyGroupService partitionKeyGroupService;", "modifier": "@Mock\n    private", "type": "PartitionKeyGroupService", "declarator": "partitionKeyGroupService", "var_name": "partitionKeyGroupService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/PartitionKeyGroupRestControllerTest.java"}, "test_case": {"identifier": "testGetPartitionKeyGroups", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPartitionKeyGroups()\n    {\n        PartitionKeyGroupKeys partitionKeyGroupKeys =\n            new PartitionKeyGroupKeys(Arrays.asList(new PartitionKeyGroupKey(PARTITION_KEY_GROUP), new PartitionKeyGroupKey(PARTITION_KEY_GROUP_2)));\n        when(partitionKeyGroupService.getPartitionKeyGroups()).thenReturn(partitionKeyGroupKeys);\n        // Get the list of partition key groups.\n        PartitionKeyGroupKeys resultPartitionKeyGroupKeys = partitionKeyGroupRestController.getPartitionKeyGroups();\n\n        // Validate the returned object.\n        assertTrue(resultPartitionKeyGroupKeys.getPartitionKeyGroupKeys().size() >= 2);\n        assertTrue(resultPartitionKeyGroupKeys.getPartitionKeyGroupKeys()\n            .contains(partitionKeyGroupServiceTestHelper.createPartitionKeyGroupKey(PARTITION_KEY_GROUP)));\n        assertTrue(resultPartitionKeyGroupKeys.getPartitionKeyGroupKeys()\n            .contains(partitionKeyGroupServiceTestHelper.createPartitionKeyGroupKey(PARTITION_KEY_GROUP_2)));\n\n        // Verify the external calls.\n        verify(partitionKeyGroupService).getPartitionKeyGroups();\n        verifyNoMoreInteractions(partitionKeyGroupService);\n        // Validate the returned object.\n        assertEquals(partitionKeyGroupKeys, resultPartitionKeyGroupKeys);\n    }", "signature": "void testGetPartitionKeyGroups()", "full_signature": "@Test public void testGetPartitionKeyGroups()", "class_method_signature": "PartitionKeyGroupRestControllerTest.testGetPartitionKeyGroups()", "testcase": true, "constructor": false, "invocations": ["asList", "thenReturn", "when", "getPartitionKeyGroups", "getPartitionKeyGroups", "assertTrue", "size", "getPartitionKeyGroupKeys", "assertTrue", "contains", "getPartitionKeyGroupKeys", "createPartitionKeyGroupKey", "assertTrue", "contains", "getPartitionKeyGroupKeys", "createPartitionKeyGroupKey", "getPartitionKeyGroups", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "PartitionKeyGroupRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "public static final String PARTITION_KEY_GROUPS_URI_PREFIX = \"/partitionKeyGroups\";", "modifier": "public static final", "type": "String", "declarator": "PARTITION_KEY_GROUPS_URI_PREFIX = \"/partitionKeyGroups\"", "var_name": "PARTITION_KEY_GROUPS_URI_PREFIX"}, {"original_string": "@Autowired\n    private PartitionKeyGroupService partitionKeyGroupService;", "modifier": "@Autowired\n    private", "type": "PartitionKeyGroupService", "declarator": "partitionKeyGroupService", "var_name": "partitionKeyGroupService"}], "methods": [{"identifier": "createPartitionKeyGroup", "parameters": "(@RequestBody PartitionKeyGroupCreateRequest request)", "modifiers": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_POST) public", "return": "PartitionKeyGroup", "signature": "PartitionKeyGroup createPartitionKeyGroup(@RequestBody PartitionKeyGroupCreateRequest request)", "full_signature": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_POST) public PartitionKeyGroup createPartitionKeyGroup(@RequestBody PartitionKeyGroupCreateRequest request)", "class_method_signature": "PartitionKeyGroupRestController.createPartitionKeyGroup(@RequestBody PartitionKeyGroupCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "getPartitionKeyGroup", "parameters": "(@PathVariable(\"partitionKeyGroupName\") String partitionKeyGroupName)", "modifiers": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX + \"/{partitionKeyGroupName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_GET) public", "return": "PartitionKeyGroup", "signature": "PartitionKeyGroup getPartitionKeyGroup(@PathVariable(\"partitionKeyGroupName\") String partitionKeyGroupName)", "full_signature": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX + \"/{partitionKeyGroupName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_GET) public PartitionKeyGroup getPartitionKeyGroup(@PathVariable(\"partitionKeyGroupName\") String partitionKeyGroupName)", "class_method_signature": "PartitionKeyGroupRestController.getPartitionKeyGroup(@PathVariable(\"partitionKeyGroupName\") String partitionKeyGroupName)", "testcase": false, "constructor": false}, {"identifier": "deletePartitionKeyGroup", "parameters": "(@PathVariable(\"partitionKeyGroupName\") String partitionKeyGroupName)", "modifiers": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX + \"/{partitionKeyGroupName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_DELETE) public", "return": "PartitionKeyGroup", "signature": "PartitionKeyGroup deletePartitionKeyGroup(@PathVariable(\"partitionKeyGroupName\") String partitionKeyGroupName)", "full_signature": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX + \"/{partitionKeyGroupName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_DELETE) public PartitionKeyGroup deletePartitionKeyGroup(@PathVariable(\"partitionKeyGroupName\") String partitionKeyGroupName)", "class_method_signature": "PartitionKeyGroupRestController.deletePartitionKeyGroup(@PathVariable(\"partitionKeyGroupName\") String partitionKeyGroupName)", "testcase": false, "constructor": false}, {"identifier": "getPartitionKeyGroups", "parameters": "()", "modifiers": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_ALL_GET) public", "return": "PartitionKeyGroupKeys", "signature": "PartitionKeyGroupKeys getPartitionKeyGroups()", "full_signature": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_ALL_GET) public PartitionKeyGroupKeys getPartitionKeyGroups()", "class_method_signature": "PartitionKeyGroupRestController.getPartitionKeyGroups()", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/PartitionKeyGroupRestController.java"}, "focal_method": {"identifier": "getPartitionKeyGroups", "parameters": "()", "modifiers": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_ALL_GET) public", "return": "PartitionKeyGroupKeys", "body": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX, method = RequestMethod.GET)\n    @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_ALL_GET)\n    public PartitionKeyGroupKeys getPartitionKeyGroups()\n    {\n        return partitionKeyGroupService.getPartitionKeyGroups();\n    }", "signature": "PartitionKeyGroupKeys getPartitionKeyGroups()", "full_signature": "@RequestMapping(value = PARTITION_KEY_GROUPS_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_PARTITION_KEY_GROUPS_ALL_GET) public PartitionKeyGroupKeys getPartitionKeyGroups()", "class_method_signature": "PartitionKeyGroupRestController.getPartitionKeyGroups()", "testcase": false, "constructor": false, "invocations": ["getPartitionKeyGroups"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}