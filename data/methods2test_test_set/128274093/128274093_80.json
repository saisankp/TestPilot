{"test_class": {"identifier": "SafeSubscriberTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Subscription THROWING_DISPOSABLE = new Subscription() {\n\n        @Override\n        public void cancel() {\n            // break contract by throwing exception\n            throw new SafeSubscriberTestException(\"failure from unsubscribe\");\n        }\n\n        @Override\n        public void request(long n) {\n            // ignored\n        }\n    };", "modifier": "static final", "type": "Subscription", "declarator": "THROWING_DISPOSABLE = new Subscription() {\n\n        @Override\n        public void cancel() {\n            // break contract by throwing exception\n            throw new SafeSubscriberTestException(\"failure from unsubscribe\");\n        }\n\n        @Override\n        public void request(long n) {\n            // ignored\n        }\n    }", "var_name": "THROWING_DISPOSABLE"}], "file": "rxjava/src/test/java/io/reactivex/subscribers/SafeSubscriberTest.java"}, "test_case": {"identifier": "onCompleteteNoSubscribeCrash", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onCompleteteNoSubscribeCrash() {\n        List<Throwable> list = TestHelper.trackPluginErrors();\n\n        try {\n            CrashDummy cd = new CrashDummy(true, 1, false, true, false, false);\n            SafeSubscriber<Object> so = cd.toSafe();\n\n            so.onComplete();\n\n            TestHelper.assertError(list, 0, CompositeException.class);\n            List<Throwable> ce = TestHelper.compositeList(list.get(0));\n            TestHelper.assertError(ce, 0, NullPointerException.class, \"Subscription not set!\");\n            TestHelper.assertError(ce, 1, TestException.class, \"onSubscribe()\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }", "signature": "void onCompleteteNoSubscribeCrash()", "full_signature": "@Test public void onCompleteteNoSubscribeCrash()", "class_method_signature": "SafeSubscriberTest.onCompleteteNoSubscribeCrash()", "testcase": true, "constructor": false, "invocations": ["trackPluginErrors", "toSafe", "onComplete", "assertError", "compositeList", "get", "assertError", "assertError", "reset"]}, "focal_class": {"identifier": "SafeSubscriber", "superclass": "", "interfaces": "implements FlowableSubscriber<T>, Subscription", "fields": [{"original_string": "final Subscriber<? super T> actual;", "modifier": "final", "type": "Subscriber<? super T>", "declarator": "actual", "var_name": "actual"}, {"original_string": "Subscription s;", "modifier": "", "type": "Subscription", "declarator": "s", "var_name": "s"}, {"original_string": "boolean done;", "modifier": "", "type": "boolean", "declarator": "done", "var_name": "done"}], "methods": [{"identifier": "SafeSubscriber", "parameters": "(Subscriber<? super T> actual)", "modifiers": "public", "return": "", "signature": " SafeSubscriber(Subscriber<? super T> actual)", "full_signature": "public  SafeSubscriber(Subscriber<? super T> actual)", "class_method_signature": "SafeSubscriber.SafeSubscriber(Subscriber<? super T> actual)", "testcase": false, "constructor": true}, {"identifier": "onSubscribe", "parameters": "(Subscription s)", "modifiers": "@Override public", "return": "void", "signature": "void onSubscribe(Subscription s)", "full_signature": "@Override public void onSubscribe(Subscription s)", "class_method_signature": "SafeSubscriber.onSubscribe(Subscription s)", "testcase": false, "constructor": false}, {"identifier": "onNext", "parameters": "(T t)", "modifiers": "@Override public", "return": "void", "signature": "void onNext(T t)", "full_signature": "@Override public void onNext(T t)", "class_method_signature": "SafeSubscriber.onNext(T t)", "testcase": false, "constructor": false}, {"identifier": "onNextNoSubscription", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onNextNoSubscription()", "full_signature": " void onNextNoSubscription()", "class_method_signature": "SafeSubscriber.onNextNoSubscription()", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable t)", "full_signature": "@Override public void onError(Throwable t)", "class_method_signature": "SafeSubscriber.onError(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "SafeSubscriber.onComplete()", "testcase": false, "constructor": false}, {"identifier": "onCompleteNoSubscription", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onCompleteNoSubscription()", "full_signature": " void onCompleteNoSubscription()", "class_method_signature": "SafeSubscriber.onCompleteNoSubscription()", "testcase": false, "constructor": false}, {"identifier": "request", "parameters": "(long n)", "modifiers": "@Override public", "return": "void", "signature": "void request(long n)", "full_signature": "@Override public void request(long n)", "class_method_signature": "SafeSubscriber.request(long n)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "SafeSubscriber.cancel()", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/subscribers/SafeSubscriber.java"}, "focal_method": {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onComplete() {\n        if (done) {\n            return;\n        }\n        done = true;\n\n        if (s == null) {\n            onCompleteNoSubscription();\n            return;\n        }\n\n\n        try {\n            actual.onComplete();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            RxJavaPlugins.onError(e);\n        }\n    }", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "SafeSubscriber.onComplete()", "testcase": false, "constructor": false, "invocations": ["onCompleteNoSubscription", "onComplete", "throwIfFatal", "onError"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}