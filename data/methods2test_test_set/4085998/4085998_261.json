{"test_class": {"identifier": "urn_perun_user_facility_attribute_def_virt_defaultUnixGIDTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static urn_perun_user_facility_attribute_def_virt_defaultUnixGID classInstance;", "modifier": "private static", "type": "urn_perun_user_facility_attribute_def_virt_defaultUnixGID", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private static PerunSessionImpl session;", "modifier": "private static", "type": "PerunSessionImpl", "declarator": "session", "var_name": "session"}, {"original_string": "private static String gidNamespace;", "modifier": "private static", "type": "String", "declarator": "gidNamespace", "var_name": "gidNamespace"}, {"original_string": "private static String groupNameNamespace;", "modifier": "private static", "type": "String", "declarator": "groupNameNamespace", "var_name": "groupNameNamespace"}, {"original_string": "private static Attribute dDefaultUnixGid;", "modifier": "private static", "type": "Attribute", "declarator": "dDefaultUnixGid", "var_name": "dDefaultUnixGid"}, {"original_string": "private static Attribute prefferedUnixGroupName;", "modifier": "private static", "type": "Attribute", "declarator": "prefferedUnixGroupName", "var_name": "prefferedUnixGroupName"}, {"original_string": "private static List<Resource> allowedResource;", "modifier": "private static", "type": "List<Resource>", "declarator": "allowedResource", "var_name": "allowedResource"}, {"original_string": "private static String resourceGroupName;", "modifier": "private static", "type": "String", "declarator": "resourceGroupName", "var_name": "resourceGroupName"}, {"original_string": "private static List<Member> memberByUser;", "modifier": "private static", "type": "List<Member>", "declarator": "memberByUser", "var_name": "memberByUser"}, {"original_string": "private static List<Group> assignedGroupsToResource;", "modifier": "private static", "type": "List<Group>", "declarator": "assignedGroupsToResource", "var_name": "assignedGroupsToResource"}, {"original_string": "private static List<Member> groupMembers;", "modifier": "private static", "type": "List<Member>", "declarator": "groupMembers", "var_name": "groupMembers"}, {"original_string": "private static String groupGroupName;", "modifier": "private static", "type": "String", "declarator": "groupGroupName", "var_name": "groupGroupName"}, {"original_string": "private static Integer resourceUnixGID;", "modifier": "private static", "type": "Integer", "declarator": "resourceUnixGID", "var_name": "resourceUnixGID"}, {"original_string": "private static Integer groupUnixGID;", "modifier": "private static", "type": "Integer", "declarator": "groupUnixGID", "var_name": "groupUnixGID"}, {"original_string": "private static Attribute basicDefaultGID;", "modifier": "private static", "type": "Attribute", "declarator": "basicDefaultGID", "var_name": "basicDefaultGID"}, {"original_string": "private static Facility facility;", "modifier": "private static", "type": "Facility", "declarator": "facility", "var_name": "facility"}, {"original_string": "private static User user;", "modifier": "private static", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private static AttributeDefinition attrDef;", "modifier": "private static", "type": "AttributeDefinition", "declarator": "attrDef", "var_name": "attrDef"}, {"original_string": "private static Attribute prefferedUnixGroupNameSelectedValueGID;", "modifier": "private static", "type": "Attribute", "declarator": "prefferedUnixGroupNameSelectedValueGID", "var_name": "prefferedUnixGroupNameSelectedValueGID"}, {"original_string": "private static Resource resource;", "modifier": "private static", "type": "Resource", "declarator": "resource", "var_name": "resource"}, {"original_string": "private static Member member;", "modifier": "private static", "type": "Member", "declarator": "member", "var_name": "member"}, {"original_string": "private static Group group;", "modifier": "private static", "type": "Group", "declarator": "group", "var_name": "group"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_facility_attribute_def_virt_defaultUnixGIDTest.java"}, "test_case": {"identifier": "testSemanticsCorrect", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSemanticsCorrect() throws Exception {\n\t\tSystem.out.println(\"testSemanticsCorrect()\");\n\t\tAttribute attributeToCheck = new Attribute();\n\t\tattributeToCheck.setValue(5);\n\n\t\tclassInstance.checkAttributeSemantics(session, user, facility, attributeToCheck);\n\t}", "signature": "void testSemanticsCorrect()", "full_signature": "@Test public void testSemanticsCorrect()", "class_method_signature": "urn_perun_user_facility_attribute_def_virt_defaultUnixGIDTest.testSemanticsCorrect()", "testcase": true, "constructor": false, "invocations": ["println", "setValue", "checkAttributeSemantics"]}, "focal_class": {"identifier": "urn_perun_user_facility_attribute_def_virt_defaultUnixGID", "superclass": "extends UserFacilityVirtualAttributesModuleAbstract", "interfaces": "implements UserFacilityVirtualAttributesModuleImplApi", "fields": [], "methods": [{"identifier": "getAttributeValue", "parameters": "(PerunSessionImpl sess, User user, Facility facility, AttributeDefinition attributeDefinition)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute getAttributeValue(PerunSessionImpl sess, User user, Facility facility, AttributeDefinition attributeDefinition)", "full_signature": "@Override public Attribute getAttributeValue(PerunSessionImpl sess, User user, Facility facility, AttributeDefinition attributeDefinition)", "class_method_signature": "urn_perun_user_facility_attribute_def_virt_defaultUnixGID.getAttributeValue(PerunSessionImpl sess, User user, Facility facility, AttributeDefinition attributeDefinition)", "testcase": false, "constructor": false}, {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSemantics(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_user_facility_attribute_def_virt_defaultUnixGID.checkAttributeSemantics(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "setAttributeValue", "parameters": "(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setAttributeValue(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "full_signature": "@Override public boolean setAttributeValue(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_user_facility_attribute_def_virt_defaultUnixGID.setAttributeValue(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "getStrongDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getStrongDependencies()", "full_signature": "@Override public List<String> getStrongDependencies()", "class_method_signature": "urn_perun_user_facility_attribute_def_virt_defaultUnixGID.getStrongDependencies()", "testcase": false, "constructor": false}, {"identifier": "getAttributeDefinition", "parameters": "()", "modifiers": "@Override public", "return": "AttributeDefinition", "signature": "AttributeDefinition getAttributeDefinition()", "full_signature": "@Override public AttributeDefinition getAttributeDefinition()", "class_method_signature": "urn_perun_user_facility_attribute_def_virt_defaultUnixGID.getAttributeDefinition()", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_facility_attribute_def_virt_defaultUnixGID.java"}, "focal_method": {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void checkAttributeSemantics(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n\t\tif(attribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, null, user, facility, \"Attribute can't be null.\");\n\t\ttry {\n\t\t\tAttribute defaultUnixGID = perunSession.getPerunBl().getAttributesManagerBl().getAttribute(perunSession, facility, user, AttributesManager.NS_USER_FACILITY_ATTR_DEF + \":defaultUnixGID\");\n\t\t\tdefaultUnixGID.setValue(attribute.getValue());\n\t\t\tperunSession.getPerunBl().getAttributesManagerBl().checkAttributeSemantics(perunSession, facility, user, defaultUnixGID);\n\t\t} catch (AttributeNotExistsException ex) {\n\t\t\tthrow new ConsistencyErrorException(ex);\n\t\t}\n\t}", "signature": "void checkAttributeSemantics(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_user_facility_attribute_def_virt_defaultUnixGID.checkAttributeSemantics(PerunSessionImpl perunSession, User user, Facility facility, Attribute attribute)", "testcase": false, "constructor": false, "invocations": ["getValue", "getAttribute", "getAttributesManagerBl", "getPerunBl", "setValue", "getValue", "checkAttributeSemantics", "getAttributesManagerBl", "getPerunBl"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}