{"test_class": {"identifier": "ClassBasedTransformerTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics-influxdb/src/test/java/com/izettle/metrics/influxdb/tags/ClassBasedTransformerTest.java"}, "test_case": {"identifier": "shouldFindClassNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldFindClassNames() {\n\n        assertThat(new ClassBasedTransformer().getTags(\"com.izettle.metrics.influxdb.tags.ClassBasedTransformer.count\"))\n            .containsEntry(\"package\", \"com.izettle.metrics.influxdb.tags\")\n            .containsEntry(\"className\", \"ClassBasedTransformer\")\n            .containsEntry(\"method\", \"count\");\n\n        assertThat(new ClassBasedTransformer().getTags(\"com.izettle.metrics.influxdb.tags.ClassBasedTransformer\"))\n            .containsEntry(\"package\", \"com.izettle.metrics.influxdb.tags\")\n            .containsEntry(\"className\", \"ClassBasedTransformer\")\n            .doesNotContainKeys(\"method\");\n\n        assertThat(new ClassBasedTransformer().getTags(\"metric.without.class\"))\n            .containsEntry(\"metricName\", \"metric.without.class\")\n            .doesNotContainKeys(\"package\")\n            .doesNotContainKeys(\"className\")\n            .doesNotContainKeys(\"method\");\n    }", "signature": "void shouldFindClassNames()", "full_signature": "@Test public void shouldFindClassNames()", "class_method_signature": "ClassBasedTransformerTest.shouldFindClassNames()", "testcase": true, "constructor": false, "invocations": ["containsEntry", "containsEntry", "containsEntry", "assertThat", "getTags", "doesNotContainKeys", "containsEntry", "containsEntry", "assertThat", "getTags", "doesNotContainKeys", "doesNotContainKeys", "doesNotContainKeys", "containsEntry", "assertThat", "getTags"]}, "focal_class": {"identifier": "ClassBasedTransformer", "superclass": "", "interfaces": "implements Transformer", "fields": [{"original_string": "private static final Pattern PACKAGE = Pattern.compile(\"(.*)\\\\.[A-Z].*\");", "modifier": "private static final", "type": "Pattern", "declarator": "PACKAGE = Pattern.compile(\"(.*)\\\\.[A-Z].*\")", "var_name": "PACKAGE"}, {"original_string": "private static final Pattern CLASS_NAME = Pattern.compile(\".*\\\\.([A-Z][^\\\\.]*).*\");", "modifier": "private static final", "type": "Pattern", "declarator": "CLASS_NAME = Pattern.compile(\".*\\\\.([A-Z][^\\\\.]*).*\")", "var_name": "CLASS_NAME"}, {"original_string": "private static final Pattern METHOD = Pattern.compile(\".*\\\\.[A-Z][^\\\\.]*\\\\.(.*)\");", "modifier": "private static final", "type": "Pattern", "declarator": "METHOD = Pattern.compile(\".*\\\\.[A-Z][^\\\\.]*\\\\.(.*)\")", "var_name": "METHOD"}], "methods": [{"identifier": "getTags", "parameters": "(String metricsName)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getTags(String metricsName)", "full_signature": "@Override public Map<String, String> getTags(String metricsName)", "class_method_signature": "ClassBasedTransformer.getTags(String metricsName)", "testcase": false, "constructor": false}], "file": "metrics-influxdb/src/main/java/com/izettle/metrics/influxdb/tags/ClassBasedTransformer.java"}, "focal_method": {"identifier": "getTags", "parameters": "(String metricsName)", "modifiers": "@Override public", "return": "Map<String, String>", "body": "@Override\n    public Map<String, String> getTags(String metricsName) {\n        Map<String, String> tags = new HashMap<String, String>();\n        tags.put(\"metricName\", metricsName);\n\n        Matcher packageMatcher = PACKAGE.matcher(metricsName);\n        if(packageMatcher.find()) {\n            tags.put(\"package\", packageMatcher.group(1));\n        }\n        Matcher classMatcher = CLASS_NAME.matcher(metricsName);\n        if(classMatcher.find()) {\n            tags.put(\"className\", classMatcher.group(1));\n        }\n        Matcher methodMatcher = METHOD.matcher(metricsName);\n        if(methodMatcher.find()) {\n            tags.put(\"method\", methodMatcher.group(1));\n        }\n        return tags;\n    }", "signature": "Map<String, String> getTags(String metricsName)", "full_signature": "@Override public Map<String, String> getTags(String metricsName)", "class_method_signature": "ClassBasedTransformer.getTags(String metricsName)", "testcase": false, "constructor": false, "invocations": ["put", "matcher", "find", "put", "group", "matcher", "find", "put", "group", "matcher", "find", "put", "group"]}, "repository": {"repo_id": 43748389, "url": "https://github.com/iZettle/dropwizard-metrics-influxdb", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 82, "size": 272, "license": "licensed"}}