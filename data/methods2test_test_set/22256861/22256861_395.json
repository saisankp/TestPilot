{"test_class": {"identifier": "MphChlMerisOpTest", "superclass": "", "interfaces": "", "fields": [], "file": "s3tbx-mphchl/src/test/java/org/esa/s3tbx/mphchl/MphChlMerisOpTest.java"}, "test_case": {"identifier": "testConfigureSourceSample", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConfigureSourceSample() {\n        final TestSourceSampleConfigurer sampleConfigurer = new TestSourceSampleConfigurer();\n        MphChlMerisOp mphChlOp = new MphChlMerisOp();\n        mphChlOp.configureSourceSamples(sampleConfigurer);\n\n        final HashMap<Integer, String> sampleMap = sampleConfigurer.getSampleMap();\n        assertEquals(\"rBRR_06\", sampleMap.get(0));\n        assertEquals(\"rBRR_07\", sampleMap.get(1));\n        assertEquals(\"rBRR_08\", sampleMap.get(2));\n        assertEquals(\"rBRR_09\", sampleMap.get(3));\n        assertEquals(\"rBRR_10\", sampleMap.get(4));\n        assertEquals(\"rBRR_14\", sampleMap.get(5));\n    }", "signature": "void testConfigureSourceSample()", "full_signature": "@Test public void testConfigureSourceSample()", "class_method_signature": "MphChlMerisOpTest.testConfigureSourceSample()", "testcase": true, "constructor": false, "invocations": ["configureSourceSamples", "getSampleMap", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "MphChlMerisOp", "superclass": "extends MphChlBasisOp", "interfaces": "", "fields": [{"original_string": "private static final int REFL_6_IDX = 0;", "modifier": "private static final", "type": "int", "declarator": "REFL_6_IDX = 0", "var_name": "REFL_6_IDX"}, {"original_string": "private static final int REFL_7_IDX = 1;", "modifier": "private static final", "type": "int", "declarator": "REFL_7_IDX = 1", "var_name": "REFL_7_IDX"}, {"original_string": "private static final int REFL_8_IDX = 2;", "modifier": "private static final", "type": "int", "declarator": "REFL_8_IDX = 2", "var_name": "REFL_8_IDX"}, {"original_string": "private static final int REFL_9_IDX = 3;", "modifier": "private static final", "type": "int", "declarator": "REFL_9_IDX = 3", "var_name": "REFL_9_IDX"}, {"original_string": "private static final int REFL_10_IDX = 4;", "modifier": "private static final", "type": "int", "declarator": "REFL_10_IDX = 4", "var_name": "REFL_10_IDX"}, {"original_string": "private static final int REFL_14_IDX = 5;", "modifier": "private static final", "type": "int", "declarator": "REFL_14_IDX = 5", "var_name": "REFL_14_IDX"}], "methods": [{"identifier": "computePixel", "parameters": "(int x, int y, Sample[] sourceSamples, WritableSample[] targetSamples)", "modifiers": "@Override protected", "return": "void", "signature": "void computePixel(int x, int y, Sample[] sourceSamples, WritableSample[] targetSamples)", "full_signature": "@Override protected void computePixel(int x, int y, Sample[] sourceSamples, WritableSample[] targetSamples)", "class_method_signature": "MphChlMerisOp.computePixel(int x, int y, Sample[] sourceSamples, WritableSample[] targetSamples)", "testcase": false, "constructor": false}, {"identifier": "configureSourceSamples", "parameters": "(SourceSampleConfigurer sampleConfigurer)", "modifiers": "@Override protected", "return": "void", "signature": "void configureSourceSamples(SourceSampleConfigurer sampleConfigurer)", "full_signature": "@Override protected void configureSourceSamples(SourceSampleConfigurer sampleConfigurer)", "class_method_signature": "MphChlMerisOp.configureSourceSamples(SourceSampleConfigurer sampleConfigurer)", "testcase": false, "constructor": false}, {"identifier": "prepareInputs", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void prepareInputs()", "full_signature": "@Override protected void prepareInputs()", "class_method_signature": "MphChlMerisOp.prepareInputs()", "testcase": false, "constructor": false}], "file": "s3tbx-mphchl/src/main/java/org/esa/s3tbx/mphchl/MphChlMerisOp.java"}, "focal_method": {"identifier": "configureSourceSamples", "parameters": "(SourceSampleConfigurer sampleConfigurer)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void configureSourceSamples(SourceSampleConfigurer sampleConfigurer) throws OperatorException {\n        sampleConfigurer.defineSample(0, \"rBRR_06\");\n        sampleConfigurer.defineSample(1, \"rBRR_07\");\n        sampleConfigurer.defineSample(2, \"rBRR_08\");\n        sampleConfigurer.defineSample(3, \"rBRR_09\");\n        sampleConfigurer.defineSample(4, \"rBRR_10\");\n        sampleConfigurer.defineSample(5, \"rBRR_14\");\n    }", "signature": "void configureSourceSamples(SourceSampleConfigurer sampleConfigurer)", "full_signature": "@Override protected void configureSourceSamples(SourceSampleConfigurer sampleConfigurer)", "class_method_signature": "MphChlMerisOp.configureSourceSamples(SourceSampleConfigurer sampleConfigurer)", "testcase": false, "constructor": false, "invocations": ["defineSample", "defineSample", "defineSample", "defineSample", "defineSample", "defineSample"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}