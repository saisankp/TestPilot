{"test_class": {"identifier": "PermissionDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    PermissionDao permissionDao;", "modifier": "@Autowired", "type": "PermissionDao", "declarator": "permissionDao", "var_name": "permissionDao"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/PermissionDaoTest.java"}, "test_case": {"identifier": "isGroupManagerById", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isGroupManagerById() throws Exception {\n        Boolean b = permissionDao.isGroupManagerById(1L, 1L);\n        System.out.println(\"isGroupManagerById :-------> \" + b);\n        Assert.assertTrue(b);\n    }", "signature": "void isGroupManagerById()", "full_signature": "@Test public void isGroupManagerById()", "class_method_signature": "PermissionDaoTest.isGroupManagerById()", "testcase": true, "constructor": false, "invocations": ["isGroupManagerById", "println", "assertTrue"]}, "focal_class": {"identifier": "PermissionDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [{"original_string": "private final Long SUPER_GROUP_ID = 1L;", "modifier": "private final", "type": "Long", "declarator": "SUPER_GROUP_ID = 1L", "var_name": "SUPER_GROUP_ID"}], "methods": [{"identifier": "isNormalSuperManagerById", "parameters": "(Long userId)", "modifiers": "public", "return": "boolean", "signature": "boolean isNormalSuperManagerById(Long userId)", "full_signature": "public boolean isNormalSuperManagerById(Long userId)", "class_method_signature": "PermissionDao.isNormalSuperManagerById(Long userId)", "testcase": false, "constructor": false}, {"identifier": "isGroupManagerById", "parameters": "(Long groupId, Long userId)", "modifiers": "public", "return": "boolean", "signature": "boolean isGroupManagerById(Long groupId, Long userId)", "full_signature": "public boolean isGroupManagerById(Long groupId, Long userId)", "class_method_signature": "PermissionDao.isGroupManagerById(Long groupId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "isNormalManagerById", "parameters": "(Long groupId, Long userId)", "modifiers": "public", "return": "boolean", "signature": "boolean isNormalManagerById(Long groupId, Long userId)", "full_signature": "public boolean isNormalManagerById(Long groupId, Long userId)", "class_method_signature": "PermissionDao.isNormalManagerById(Long groupId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "isExistByUserId", "parameters": "(Integer roleType, Long groupId, Long userId)", "modifiers": "public", "return": "boolean", "signature": "boolean isExistByUserId(Integer roleType, Long groupId, Long userId)", "full_signature": "public boolean isExistByUserId(Integer roleType, Long groupId, Long userId)", "class_method_signature": "PermissionDao.isExistByUserId(Integer roleType, Long groupId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "isProjectPermission", "parameters": "(Long projectId, Long userId)", "modifiers": "public", "return": "boolean", "signature": "boolean isProjectPermission(Long projectId, Long userId)", "full_signature": "public boolean isProjectPermission(Long projectId, Long userId)", "class_method_signature": "PermissionDao.isProjectPermission(Long projectId, Long userId)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/PermissionDao.java"}, "focal_method": {"identifier": "isGroupManagerById", "parameters": "(Long groupId, Long userId)", "modifiers": "public", "return": "boolean", "body": "public boolean isGroupManagerById(Long groupId, Long userId) throws SQLException {\n        return isExistByUserId(RoleTypeEnum.Admin.getType(), groupId, userId);\n    }", "signature": "boolean isGroupManagerById(Long groupId, Long userId)", "full_signature": "public boolean isGroupManagerById(Long groupId, Long userId)", "class_method_signature": "PermissionDao.isGroupManagerById(Long groupId, Long userId)", "testcase": false, "constructor": false, "invocations": ["isExistByUserId", "getType"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}