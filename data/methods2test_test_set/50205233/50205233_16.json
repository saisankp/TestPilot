{"test_class": {"identifier": "GtidSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String UUID1 = \"24bc7850-2c16-11e6-a073-0242ac110002\";", "modifier": "private static final", "type": "String", "declarator": "UUID1 = \"24bc7850-2c16-11e6-a073-0242ac110002\"", "var_name": "UUID1"}, {"original_string": "private GtidSet gtids;", "modifier": "private", "type": "GtidSet", "declarator": "gtids", "var_name": "gtids"}], "file": "debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/GtidSetTest.java"}, "test_case": {"identifier": "shouldCorrectlyDetermineIfComplexGtidSetWithVariousLineSeparatorsIsContainedWithinAnother", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCorrectlyDetermineIfComplexGtidSetWithVariousLineSeparatorsIsContainedWithinAnother() {\n        GtidSet connector = new GtidSet(\"036d85a9-64e5-11e6-9b48-42010af0000c:1-2,\"\n                + \"7145bf69-d1ca-11e5-a588-0242ac110004:1-3200,\"\n                + \"7c1de3f2-3fd2-11e6-9cdc-42010af000bc:1-41\");\n        Arrays.stream(new String[]{ \"\\r\\n\", \"\\n\", \"\\r\" })\n                .forEach(separator -> {\n                    GtidSet server = new GtidSet(\"036d85a9-64e5-11e6-9b48-42010af0000c:1-2,\" + separator +\n                            \"7145bf69-d1ca-11e5-a588-0242ac110004:1-3202,\" + separator +\n                            \"7c1de3f2-3fd2-11e6-9cdc-42010af000bc:1-41\");\n                    assertThat(connector.isContainedWithin(server)).isTrue();\n                });\n    }", "signature": "void shouldCorrectlyDetermineIfComplexGtidSetWithVariousLineSeparatorsIsContainedWithinAnother()", "full_signature": "@Test public void shouldCorrectlyDetermineIfComplexGtidSetWithVariousLineSeparatorsIsContainedWithinAnother()", "class_method_signature": "GtidSetTest.shouldCorrectlyDetermineIfComplexGtidSetWithVariousLineSeparatorsIsContainedWithinAnother()", "testcase": true, "constructor": false, "invocations": ["forEach", "stream", "isTrue", "assertThat", "isContainedWithin"]}, "focal_class": {"identifier": "GtidSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<String, UUIDSet> uuidSetsByServerId = new TreeMap<>();", "modifier": "private final", "type": "Map<String, UUIDSet>", "declarator": "uuidSetsByServerId = new TreeMap<>()", "var_name": "uuidSetsByServerId"}], "methods": [{"identifier": "GtidSet", "parameters": "(Map<String, UUIDSet> uuidSetsByServerId)", "modifiers": "protected", "return": "", "signature": " GtidSet(Map<String, UUIDSet> uuidSetsByServerId)", "full_signature": "protected  GtidSet(Map<String, UUIDSet> uuidSetsByServerId)", "class_method_signature": "GtidSet.GtidSet(Map<String, UUIDSet> uuidSetsByServerId)", "testcase": false, "constructor": true}, {"identifier": "GtidSet", "parameters": "(String gtids)", "modifiers": "public", "return": "", "signature": " GtidSet(String gtids)", "full_signature": "public  GtidSet(String gtids)", "class_method_signature": "GtidSet.GtidSet(String gtids)", "testcase": false, "constructor": true}, {"identifier": "retainAll", "parameters": "(Predicate<String> sourceFilter)", "modifiers": "public", "return": "GtidSet", "signature": "GtidSet retainAll(Predicate<String> sourceFilter)", "full_signature": "public GtidSet retainAll(Predicate<String> sourceFilter)", "class_method_signature": "GtidSet.retainAll(Predicate<String> sourceFilter)", "testcase": false, "constructor": false}, {"identifier": "getUUIDSets", "parameters": "()", "modifiers": "public", "return": "Collection<UUIDSet>", "signature": "Collection<UUIDSet> getUUIDSets()", "full_signature": "public Collection<UUIDSet> getUUIDSets()", "class_method_signature": "GtidSet.getUUIDSets()", "testcase": false, "constructor": false}, {"identifier": "forServerWithId", "parameters": "(String uuid)", "modifiers": "public", "return": "UUIDSet", "signature": "UUIDSet forServerWithId(String uuid)", "full_signature": "public UUIDSet forServerWithId(String uuid)", "class_method_signature": "GtidSet.forServerWithId(String uuid)", "testcase": false, "constructor": false}, {"identifier": "isContainedWithin", "parameters": "(GtidSet other)", "modifiers": "public", "return": "boolean", "signature": "boolean isContainedWithin(GtidSet other)", "full_signature": "public boolean isContainedWithin(GtidSet other)", "class_method_signature": "GtidSet.isContainedWithin(GtidSet other)", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "(GtidSet other)", "modifiers": "public", "return": "GtidSet", "signature": "GtidSet with(GtidSet other)", "full_signature": "public GtidSet with(GtidSet other)", "class_method_signature": "GtidSet.with(GtidSet other)", "testcase": false, "constructor": false}, {"identifier": "getGtidSetBeginning", "parameters": "()", "modifiers": "public", "return": "GtidSet", "signature": "GtidSet getGtidSetBeginning()", "full_signature": "public GtidSet getGtidSetBeginning()", "class_method_signature": "GtidSet.getGtidSetBeginning()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "GtidSet.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "GtidSet.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GtidSet.toString()", "testcase": false, "constructor": false}], "file": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/GtidSet.java"}, "focal_method": {"identifier": "isContainedWithin", "parameters": "(GtidSet other)", "modifiers": "public", "return": "boolean", "body": "public boolean isContainedWithin(GtidSet other) {\n        if (other == null) {\n            return false;\n        }\n        if (this.equals(other)) {\n            return true;\n        }\n        for (UUIDSet uuidSet : uuidSetsByServerId.values()) {\n            UUIDSet thatSet = other.forServerWithId(uuidSet.getUUID());\n            if (!uuidSet.isContainedWithin(thatSet)) {\n                return false;\n            }\n        }\n        return true;\n    }", "signature": "boolean isContainedWithin(GtidSet other)", "full_signature": "public boolean isContainedWithin(GtidSet other)", "class_method_signature": "GtidSet.isContainedWithin(GtidSet other)", "testcase": false, "constructor": false, "invocations": ["equals", "values", "forServerWithId", "getUUID", "isContainedWithin"]}, "repository": {"repo_id": 50205233, "url": "https://github.com/debezium/debezium", "stars": 2686, "created": "1/22/2016 8:17:05 PM +00:00", "updates": "2020-01-27T20:48:54+00:00", "fork": "False", "license": "licensed"}}