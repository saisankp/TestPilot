{"test_class": {"identifier": "ColumnFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-templates/src/test/java/org/drools/template/parser/ColumnFactoryTest.java"}, "test_case": {"identifier": "testGetColumn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetColumn() {\n        ColumnFactory f = new ColumnFactory();\n        Column column = f.getColumn(\"column\");\n        assertTrue(column instanceof StringColumn);\n        assertEquals(\"column\", column.getName());\n    }", "signature": "void testGetColumn()", "full_signature": "@Test public void testGetColumn()", "class_method_signature": "ColumnFactoryTest.testGetColumn()", "testcase": true, "constructor": false, "invocations": ["getColumn", "assertTrue", "assertEquals", "getName"]}, "focal_class": {"identifier": "ColumnFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Pattern PATTERN = Pattern.compile(\"((\\\\$)*([a-zA-Z0-9_]*))(\\\\[\\\\])?(:\\\\s*([a-zA-Z]*)(\\\\[\\\\])?)?\");", "modifier": "private final static", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(\"((\\\\$)*([a-zA-Z0-9_]*))(\\\\[\\\\])?(:\\\\s*([a-zA-Z]*)(\\\\[\\\\])?)?\")", "var_name": "PATTERN"}], "methods": [{"identifier": "getColumn", "parameters": "(String value)", "modifiers": "public", "return": "Column", "signature": "Column getColumn(String value)", "full_signature": "public Column getColumn(String value)", "class_method_signature": "ColumnFactory.getColumn(String value)", "testcase": false, "constructor": false}, {"identifier": "createColumn", "parameters": "(String name,\n                                String type)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Column", "signature": "Column createColumn(String name,\n                                String type)", "full_signature": "@SuppressWarnings(\"unchecked\") private Column createColumn(String name,\n                                String type)", "class_method_signature": "ColumnFactory.createColumn(String name,\n                                String type)", "testcase": false, "constructor": false}], "file": "drools-templates/src/main/java/org/drools/template/parser/ColumnFactory.java"}, "focal_method": {"identifier": "getColumn", "parameters": "(String value)", "modifiers": "public", "return": "Column", "body": "public Column getColumn(String value) {\n        Matcher m = PATTERN.matcher(value);\n        if (!m.matches()) {\n            throw new IllegalArgumentException(\"value \" + value + \" is not a valid column definition\");\n        }\n\n        String name = m.group(1);\n        String type = m.group(6);\n        type = type == null ? \"String\" : type;\n        boolean array = (m.group(4) != null) || (m.group(7) != null);\n        if (array) {\n            return new ArrayColumn(name,\n                                   createColumn(name,\n                                                type));\n        }\n        return createColumn(name,\n                            type);\n    }", "signature": "Column getColumn(String value)", "full_signature": "public Column getColumn(String value)", "class_method_signature": "ColumnFactory.getColumn(String value)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "group", "group", "group", "group", "createColumn", "createColumn"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}