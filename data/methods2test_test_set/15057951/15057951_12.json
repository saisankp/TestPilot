{"test_class": {"identifier": "CsvParameterEntryBatchLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DefaultSerializationConfig config = new DefaultSerializationConfig();", "modifier": "private final", "type": "DefaultSerializationConfig", "declarator": "config = new DefaultSerializationConfig()", "var_name": "config"}], "file": "smartparam-serializer/src/test/java/org/smartparam/serializer/entries/CsvParameterEntryBatchLoaderTest.java"}, "test_case": {"identifier": "shouldReturnLessThanRequestedBatchSizeIfNothingMoreToRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnLessThanRequestedBatchSizeIfNothingMoreToRead() throws Exception {\n        // given\n        StringReader reader = csvEntriesReader(10).usingDelimiter(\";\").withEntries(10, \"entry_%d\", \"column1\", \"column2\").build();\n        CsvListReader csvReader = new CsvListReader(reader, csvPreference(config));\n        CsvParameterEntryBatchLoader batchLoader = new CsvParameterEntryBatchLoader(csvReader);\n\n        // when\n        List<ParameterEntry> entries = new ArrayList<ParameterEntry>();\n        entries.addAll(batchLoader.nextBatch(15));\n\n        // then\n        assertThat(entries).hasSize(10);\n    }", "signature": "void shouldReturnLessThanRequestedBatchSizeIfNothingMoreToRead()", "full_signature": "@Test public void shouldReturnLessThanRequestedBatchSizeIfNothingMoreToRead()", "class_method_signature": "CsvParameterEntryBatchLoaderTest.shouldReturnLessThanRequestedBatchSizeIfNothingMoreToRead()", "testcase": true, "constructor": false, "invocations": ["build", "withEntries", "usingDelimiter", "csvEntriesReader", "csvPreference", "addAll", "nextBatch", "hasSize", "assertThat"]}, "focal_class": {"identifier": "CsvParameterEntryBatchLoader", "superclass": "", "interfaces": "implements ParameterEntryBatchLoader", "fields": [{"original_string": "private final CsvListReader reader;", "modifier": "private final", "type": "CsvListReader", "declarator": "reader", "var_name": "reader"}, {"original_string": "private boolean hasMore = true;", "modifier": "private", "type": "boolean", "declarator": "hasMore = true", "var_name": "hasMore"}], "methods": [{"identifier": "CsvParameterEntryBatchLoader", "parameters": "(CsvListReader reader)", "modifiers": "public", "return": "", "signature": " CsvParameterEntryBatchLoader(CsvListReader reader)", "full_signature": "public  CsvParameterEntryBatchLoader(CsvListReader reader)", "class_method_signature": "CsvParameterEntryBatchLoader.CsvParameterEntryBatchLoader(CsvListReader reader)", "testcase": false, "constructor": true}, {"identifier": "hasMore", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasMore()", "full_signature": "@Override public boolean hasMore()", "class_method_signature": "CsvParameterEntryBatchLoader.hasMore()", "testcase": false, "constructor": false}, {"identifier": "nextBatch", "parameters": "(int batchSize)", "modifiers": "@Override public", "return": "Collection<ParameterEntry>", "signature": "Collection<ParameterEntry> nextBatch(int batchSize)", "full_signature": "@Override public Collection<ParameterEntry> nextBatch(int batchSize)", "class_method_signature": "CsvParameterEntryBatchLoader.nextBatch(int batchSize)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "CsvParameterEntryBatchLoader.close()", "testcase": false, "constructor": false}], "file": "smartparam-serializer/src/main/java/org/smartparam/serializer/entries/CsvParameterEntryBatchLoader.java"}, "focal_method": {"identifier": "nextBatch", "parameters": "(int batchSize)", "modifiers": "@Override public", "return": "Collection<ParameterEntry>", "body": "@Override\n    public Collection<ParameterEntry> nextBatch(int batchSize) {\n        List<ParameterEntry> entries = new ArrayList<ParameterEntry>(batchSize);\n\n        try {\n            List<String> line;\n            int entriesRead;\n            for (entriesRead = 0; entriesRead < batchSize; ++entriesRead) {\n                line = reader.read();\n                if (line == null) {\n                    break;\n                }\n                entries.add(new DeserializedParameterEntry(line));\n            }\n\n            if (entriesRead < batchSize) {\n                hasMore = false;\n            }\n        } catch (IOException exception) {\n            throw new ParamBatchLoadingException(\"deserialization error\", exception);\n        }\n\n        return entries;\n    }", "signature": "Collection<ParameterEntry> nextBatch(int batchSize)", "full_signature": "@Override public Collection<ParameterEntry> nextBatch(int batchSize)", "class_method_signature": "CsvParameterEntryBatchLoader.nextBatch(int batchSize)", "testcase": false, "constructor": false, "invocations": ["read", "add"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}