{"test_class": {"identifier": "TestTeamTagMap", "superclass": "", "interfaces": "", "fields": [], "file": "Processor/src/test/java/org/ulyssis/ipp/snapshot/TestTeamTagMap.java"}, "test_case": {"identifier": "testLoadFromJackson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadFromJackson() throws Exception {\n        String myJson = \"{\\\"2\\\":[\\\"ABCDEF\\\"],\\\"4\\\":[\\\"FEDCEB\\\"]}\";\n        TeamTagMap result = Serialization.getJsonMapper().readValue(myJson, TeamTagMap.class);\n        assertThat(result.tagToTeam(new TagId(\"ABCDEF\")), equalTo(Optional.of(2)));\n        assertThat(result.tagToTeam(new TagId(\"FEDCEB\")), equalTo(Optional.of(4)));\n    }", "signature": "void testLoadFromJackson()", "full_signature": "@Test public void testLoadFromJackson()", "class_method_signature": "TestTeamTagMap.testLoadFromJackson()", "testcase": true, "constructor": false, "invocations": ["readValue", "getJsonMapper", "assertThat", "tagToTeam", "equalTo", "of", "assertThat", "tagToTeam", "equalTo", "of"]}, "focal_class": {"identifier": "TeamTagMap", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LogManager.getLogger(Processor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LogManager.getLogger(Processor.class)", "var_name": "LOG"}, {"original_string": "private final ImmutableMap<TagId,Integer> tagToTeam;", "modifier": "private final", "type": "ImmutableMap<TagId,Integer>", "declarator": "tagToTeam", "var_name": "tagToTeam"}], "methods": [{"identifier": "TeamTagMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " TeamTagMap()", "full_signature": "public  TeamTagMap()", "class_method_signature": "TeamTagMap.TeamTagMap()", "testcase": false, "constructor": true}, {"identifier": "TeamTagMap", "parameters": "(ImmutableMap<TagId,Integer> tagToTeam)", "modifiers": "private", "return": "", "signature": " TeamTagMap(ImmutableMap<TagId,Integer> tagToTeam)", "full_signature": "private  TeamTagMap(ImmutableMap<TagId,Integer> tagToTeam)", "class_method_signature": "TeamTagMap.TeamTagMap(ImmutableMap<TagId,Integer> tagToTeam)", "testcase": false, "constructor": true}, {"identifier": "addTagToTeam", "parameters": "(String tag, int team)", "modifiers": "public", "return": "TeamTagMap", "signature": "TeamTagMap addTagToTeam(String tag, int team)", "full_signature": "public TeamTagMap addTagToTeam(String tag, int team)", "class_method_signature": "TeamTagMap.addTagToTeam(String tag, int team)", "testcase": false, "constructor": false}, {"identifier": "addTagToTeam", "parameters": "(TagId tag, int team)", "modifiers": "public", "return": "TeamTagMap", "signature": "TeamTagMap addTagToTeam(TagId tag, int team)", "full_signature": "public TeamTagMap addTagToTeam(TagId tag, int team)", "class_method_signature": "TeamTagMap.addTagToTeam(TagId tag, int team)", "testcase": false, "constructor": false}, {"identifier": "removeTag", "parameters": "(String tag)", "modifiers": "public", "return": "TeamTagMap", "signature": "TeamTagMap removeTag(String tag)", "full_signature": "public TeamTagMap removeTag(String tag)", "class_method_signature": "TeamTagMap.removeTag(String tag)", "testcase": false, "constructor": false}, {"identifier": "removeTag", "parameters": "(TagId tag)", "modifiers": "public", "return": "TeamTagMap", "signature": "TeamTagMap removeTag(TagId tag)", "full_signature": "public TeamTagMap removeTag(TagId tag)", "class_method_signature": "TeamTagMap.removeTag(TagId tag)", "testcase": false, "constructor": false}, {"identifier": "tagToTeam", "parameters": "(String tag)", "modifiers": "public", "return": "Optional<Integer>", "signature": "Optional<Integer> tagToTeam(String tag)", "full_signature": "public Optional<Integer> tagToTeam(String tag)", "class_method_signature": "TeamTagMap.tagToTeam(String tag)", "testcase": false, "constructor": false}, {"identifier": "tagToTeam", "parameters": "(TagId tag)", "modifiers": "public", "return": "Optional<Integer>", "signature": "Optional<Integer> tagToTeam(TagId tag)", "full_signature": "public Optional<Integer> tagToTeam(TagId tag)", "class_method_signature": "TeamTagMap.tagToTeam(TagId tag)", "testcase": false, "constructor": false}, {"identifier": "getTagToTeam", "parameters": "()", "modifiers": "public", "return": "Map<TagId, Integer>", "signature": "Map<TagId, Integer> getTagToTeam()", "full_signature": "public Map<TagId, Integer> getTagToTeam()", "class_method_signature": "TeamTagMap.getTagToTeam()", "testcase": false, "constructor": false}], "file": "Processor/src/main/java/org/ulyssis/ipp/snapshot/TeamTagMap.java"}, "focal_method": {"identifier": "tagToTeam", "parameters": "(String tag)", "modifiers": "public", "return": "Optional<Integer>", "body": "public Optional<Integer> tagToTeam(String tag) throws DecodingException {\n        return tagToTeam(new TagId(tag));\n    }", "signature": "Optional<Integer> tagToTeam(String tag)", "full_signature": "public Optional<Integer> tagToTeam(String tag)", "class_method_signature": "TeamTagMap.tagToTeam(String tag)", "testcase": false, "constructor": false, "invocations": ["tagToTeam"]}, "repository": {"repo_id": 32177955, "url": "https://github.com/ULYSSIS-KUL/ipp", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 11, "size": 4814, "license": "licensed"}}