{"test_class": {"identifier": "LocationInfowindowControllerTest", "superclass": "extends AbstractEndPointControllerTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private LocationInfowindowController locationInfowindowController;", "modifier": "@Autowired\n    private", "type": "LocationInfowindowController", "declarator": "locationInfowindowController", "var_name": "locationInfowindowController"}], "file": "web/src/test/java/org/devgateway/ocds/web/rest/controller/LocationInfowindowControllerTest.java"}, "test_case": {"identifier": "tendersByLocation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tendersByLocation() throws Exception {\n        final List<Document> tendersByLocation = locationInfowindowController.tendersByLocation(\n                new YearFilterPagingRequest());\n        Assert.assertEquals(1, tendersByLocation.size());\n        final Document first = tendersByLocation.get(0);\n    }", "signature": "void tendersByLocation()", "full_signature": "@Test public void tendersByLocation()", "class_method_signature": "LocationInfowindowControllerTest.tendersByLocation()", "testcase": true, "constructor": false, "invocations": ["tendersByLocation", "assertEquals", "size", "get"]}, "focal_class": {"identifier": "LocationInfowindowController", "superclass": "extends GenericOCDSController", "interfaces": "", "fields": [], "methods": [{"identifier": "tendersByLocation", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Displays the tenders filtered by location. See the location filter \" + \"for the options to filter by\") @RequestMapping(value = \"/api/tendersByLocation\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") @JsonView(Views.Public.class) public", "return": "List<Document>", "signature": "List<Document> tendersByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Displays the tenders filtered by location. See the location filter \" + \"for the options to filter by\") @RequestMapping(value = \"/api/tendersByLocation\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") @JsonView(Views.Public.class) public List<Document> tendersByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "LocationInfowindowController.tendersByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "planningByLocation", "parameters": "(\n            @ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Displays the planning items, filtered by location. See the location filter \" + \"for the options to filter by\") @RequestMapping(value = \"/api/planningByLocation\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") @JsonView(Views.Public.class) public", "return": "List<Document>", "signature": "List<Document> planningByLocation(\n            @ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Displays the planning items, filtered by location. See the location filter \" + \"for the options to filter by\") @RequestMapping(value = \"/api/planningByLocation\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") @JsonView(Views.Public.class) public List<Document> planningByLocation(\n            @ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "class_method_signature": "LocationInfowindowController.planningByLocation(\n            @ModelAttribute @Valid final DefaultFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "awardsByLocation", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Displays the awards, filtered by location. See the location filter \" + \"for the options to filter by\") @RequestMapping(value = \"/api/awardsByLocation\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") @JsonView(Views.Public.class) public", "return": "List<Document>", "signature": "List<Document> awardsByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Displays the awards, filtered by location. See the location filter \" + \"for the options to filter by\") @RequestMapping(value = \"/api/awardsByLocation\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") @JsonView(Views.Public.class) public List<Document> awardsByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "LocationInfowindowController.awardsByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}], "file": "web/src/main/java/org/devgateway/ocds/web/rest/controller/LocationInfowindowController.java"}, "focal_method": {"identifier": "tendersByLocation", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Displays the tenders filtered by location. See the location filter \" + \"for the options to filter by\") @RequestMapping(value = \"/api/tendersByLocation\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") @JsonView(Views.Public.class) public", "return": "List<Document>", "body": "@ApiOperation(value = \"Displays the tenders filtered by location. See the location filter \"\n            + \"for the options to filter by\")\n    @RequestMapping(value = \"/api/tendersByLocation\", method = {RequestMethod.POST,\n            RequestMethod.GET}, produces = \"application/json\")\n    @JsonView(Views.Public.class)\n    public List<Document> tendersByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter) {\n\n        Aggregation agg = newAggregation(\n                match(where(\"tender\").exists(true).orOperator(\n                        where(\"tender.items.deliveryLocation._id\").exists(true)\n                )\n                        .andOperator(getYearDefaultFilterCriteria(\n                                filter,\n                                MongoConstants.FieldNames.TENDER_PERIOD_START_DATE\n                        ))),\n                project(\"tender\").andExclude(Fields.UNDERSCORE_ID),\n                skip(filter.getSkip()), limit(filter.getPageSize())\n        );\n\n        return releaseAgg(agg);\n    }", "signature": "List<Document> tendersByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Displays the tenders filtered by location. See the location filter \" + \"for the options to filter by\") @RequestMapping(value = \"/api/tendersByLocation\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") @JsonView(Views.Public.class) public List<Document> tendersByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "LocationInfowindowController.tendersByLocation(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false, "invocations": ["newAggregation", "match", "andOperator", "orOperator", "exists", "where", "exists", "where", "getYearDefaultFilterCriteria", "andExclude", "project", "skip", "getSkip", "limit", "getPageSize", "releaseAgg"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}