{"test_class": {"identifier": "BlobsServiceImplTest", "superclass": "extends GaeTestBase", "interfaces": "", "fields": [{"original_string": "@Inject\n    BlobsService blobsService;", "modifier": "@Inject", "type": "BlobsService", "declarator": "blobsService", "var_name": "blobsService"}, {"original_string": "@Inject\n    BlobGenerator blobGenerator;", "modifier": "@Inject", "type": "BlobGenerator", "declarator": "blobGenerator", "var_name": "blobGenerator"}], "file": "gae-studio/gae-studio-server/src/test/java/com/arcbees/gaestudio/server/service/visualizer/BlobsServiceImplTest.java"}, "test_case": {"identifier": "extractEntitiesFromBlob", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void extractEntitiesFromBlob() throws Exception {\n        // given\n        BlobKey blobKey = createCarBlob();\n\n        // when\n        List<Entity> entities = blobsService.extractEntitiesFromBlob(blobKey);\n\n        // then\n        assertEquals(1, entities.size());\n    }", "signature": "void extractEntitiesFromBlob()", "full_signature": "@Test public void extractEntitiesFromBlob()", "class_method_signature": "BlobsServiceImplTest.extractEntitiesFromBlob()", "testcase": true, "constructor": false, "invocations": ["createCarBlob", "extractEntitiesFromBlob", "assertEquals", "size"]}, "focal_class": {"identifier": "BlobsServiceImpl", "superclass": "", "interfaces": "implements BlobsService", "fields": [{"original_string": "private final BlobInfoFactory blobInfoFactory;", "modifier": "private final", "type": "BlobInfoFactory", "declarator": "blobInfoFactory", "var_name": "blobInfoFactory"}, {"original_string": "private final JsonBlobReaderFactory jsonBlobReaderFactory;", "modifier": "private final", "type": "JsonBlobReaderFactory", "declarator": "jsonBlobReaderFactory", "var_name": "jsonBlobReaderFactory"}, {"original_string": "private final Gson gson;", "modifier": "private final", "type": "Gson", "declarator": "gson", "var_name": "gson"}], "methods": [{"identifier": "BlobsServiceImpl", "parameters": "(\n            BlobInfoFactory blobInfoFactory,\n            JsonBlobReaderFactory jsonBlobReaderFactory,\n            Gson gson)", "modifiers": "@Inject", "return": "", "signature": " BlobsServiceImpl(\n            BlobInfoFactory blobInfoFactory,\n            JsonBlobReaderFactory jsonBlobReaderFactory,\n            Gson gson)", "full_signature": "@Inject  BlobsServiceImpl(\n            BlobInfoFactory blobInfoFactory,\n            JsonBlobReaderFactory jsonBlobReaderFactory,\n            Gson gson)", "class_method_signature": "BlobsServiceImpl.BlobsServiceImpl(\n            BlobInfoFactory blobInfoFactory,\n            JsonBlobReaderFactory jsonBlobReaderFactory,\n            Gson gson)", "testcase": false, "constructor": true}, {"identifier": "getAllBlobInfos", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<BlobInfo>", "signature": "Iterator<BlobInfo> getAllBlobInfos()", "full_signature": "@Override public Iterator<BlobInfo> getAllBlobInfos()", "class_method_signature": "BlobsServiceImpl.getAllBlobInfos()", "testcase": false, "constructor": false}, {"identifier": "extractEntitiesFromBlob", "parameters": "(BlobKey blobKey)", "modifiers": "@Override public", "return": "List<Entity>", "signature": "List<Entity> extractEntitiesFromBlob(BlobKey blobKey)", "full_signature": "@Override public List<Entity> extractEntitiesFromBlob(BlobKey blobKey)", "class_method_signature": "BlobsServiceImpl.extractEntitiesFromBlob(BlobKey blobKey)", "testcase": false, "constructor": false}], "file": "gae-studio/gae-studio-server/src/main/java/com/arcbees/gaestudio/server/service/visualizer/BlobsServiceImpl.java"}, "focal_method": {"identifier": "extractEntitiesFromBlob", "parameters": "(BlobKey blobKey)", "modifiers": "@Override public", "return": "List<Entity>", "body": "@Override\n    public List<Entity> extractEntitiesFromBlob(BlobKey blobKey) {\n        JsonReader jsonReader = jsonBlobReaderFactory.create(blobKey);\n\n        return gson.fromJson(jsonReader, new TypeToken<List<Entity>>() {\n        }.getType());\n    }", "signature": "List<Entity> extractEntitiesFromBlob(BlobKey blobKey)", "full_signature": "@Override public List<Entity> extractEntitiesFromBlob(BlobKey blobKey)", "class_method_signature": "BlobsServiceImpl.extractEntitiesFromBlob(BlobKey blobKey)", "testcase": false, "constructor": false, "invocations": ["create", "fromJson", "getType"]}, "repository": {"repo_id": 29952888, "url": "https://github.com/ArcBees/gae-studio", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 21, "size": 11408, "license": "licensed"}}