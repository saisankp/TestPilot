{"test_class": {"identifier": "FDBIndexRowTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Schema schema;", "modifier": "", "type": "Schema", "declarator": "schema", "var_name": "schema"}, {"original_string": "AkibanInformationSchema ais;", "modifier": "", "type": "AkibanInformationSchema", "declarator": "ais", "var_name": "ais"}, {"original_string": "KeyCreator testCreator;", "modifier": "", "type": "KeyCreator", "declarator": "testCreator", "var_name": "testCreator"}, {"original_string": "IndexRowType customerPK;", "modifier": "", "type": "IndexRowType", "declarator": "customerPK", "var_name": "customerPK"}, {"original_string": "IndexRowType itemPK;", "modifier": "", "type": "IndexRowType", "declarator": "itemPK", "var_name": "itemPK"}], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/qp/storeadapter/indexrow/FDBIndexRowTest.java"}, "test_case": {"identifier": "testCreation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreation () {\n        FDBIndexRow row = new FDBIndexRow (testCreator, customerPK);\n        assertNotNull (row);\n        assertEquals(row.rowType(), customerPK);\n    }", "signature": "void testCreation()", "full_signature": "@Test public void testCreation()", "class_method_signature": "FDBIndexRowTest.testCreation()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "assertEquals", "rowType"]}, "focal_class": {"identifier": "FDBIndexRow", "superclass": "extends IndexRow", "interfaces": "", "fields": [{"original_string": "private Index index;", "modifier": "private", "type": "Index", "declarator": "index", "var_name": "index"}, {"original_string": "private Key iKey;", "modifier": "private", "type": "Key", "declarator": "iKey", "var_name": "iKey"}, {"original_string": "private Value iValue;", "modifier": "private", "type": "Value", "declarator": "iValue", "var_name": "iValue"}, {"original_string": "private final IndexRowType indexRowType;", "modifier": "private final", "type": "IndexRowType", "declarator": "indexRowType", "var_name": "indexRowType"}, {"original_string": "private long tableBitmap;", "modifier": "private", "type": "long", "declarator": "tableBitmap", "var_name": "tableBitmap"}, {"original_string": "private SortKeyTarget pKeyTarget;", "modifier": "private", "type": "SortKeyTarget", "declarator": "pKeyTarget", "var_name": "pKeyTarget"}, {"original_string": "private int pKeyFields;", "modifier": "private", "type": "int", "declarator": "pKeyFields", "var_name": "pKeyFields"}, {"original_string": "private final SortKeyAdapter<ValueSource, TPreparedExpression> SORT_KEY_ADAPTER = ValueSortKeyAdapter.INSTANCE;", "modifier": "private final", "type": "SortKeyAdapter<ValueSource, TPreparedExpression>", "declarator": "SORT_KEY_ADAPTER = ValueSortKeyAdapter.INSTANCE", "var_name": "SORT_KEY_ADAPTER"}, {"original_string": "private final TInstance[] types;", "modifier": "private final", "type": "TInstance[]", "declarator": "types", "var_name": "types"}, {"original_string": "private final KeyCreator keyCreator;", "modifier": "private final", "type": "KeyCreator", "declarator": "keyCreator", "var_name": "keyCreator"}, {"original_string": "private HKey leafTableHKey;", "modifier": "private", "type": "HKey", "declarator": "leafTableHKey", "var_name": "leafTableHKey"}, {"original_string": "private int zPosition;", "modifier": "private", "type": "int", "declarator": "zPosition", "var_name": "zPosition"}], "methods": [{"identifier": "rowType", "parameters": "()", "modifiers": "@Override public", "return": "IndexRowType", "signature": "IndexRowType rowType()", "full_signature": "@Override public IndexRowType rowType()", "class_method_signature": "FDBIndexRow.rowType()", "testcase": false, "constructor": false}, {"identifier": "uncheckedValue", "parameters": "(int i)", "modifiers": "@Override protected", "return": "ValueSource", "signature": "ValueSource uncheckedValue(int i)", "full_signature": "@Override protected ValueSource uncheckedValue(int i)", "class_method_signature": "FDBIndexRow.uncheckedValue(int i)", "testcase": false, "constructor": false}, {"identifier": "hKey", "parameters": "()", "modifiers": "@Override public", "return": "HKey", "signature": "HKey hKey()", "full_signature": "@Override public HKey hKey()", "class_method_signature": "FDBIndexRow.hKey()", "testcase": false, "constructor": false}, {"identifier": "ancestorHKey", "parameters": "(Table table)", "modifiers": "@Override public", "return": "HKey", "signature": "HKey ancestorHKey(Table table)", "full_signature": "@Override public HKey ancestorHKey(Table table)", "class_method_signature": "FDBIndexRow.ancestorHKey(Table table)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(S source, TInstance type)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "void", "signature": "void append(S source, TInstance type)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public void append(S source, TInstance type)", "class_method_signature": "FDBIndexRow.append(S source, TInstance type)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(EdgeValue value)", "modifiers": "@Override public", "return": "void", "signature": "void append(EdgeValue value)", "full_signature": "@Override public void append(EdgeValue value)", "class_method_signature": "FDBIndexRow.append(EdgeValue value)", "testcase": false, "constructor": false}, {"identifier": "resetForRead", "parameters": "(Index index, Key key, Value value)", "modifiers": "@Override public", "return": "void", "signature": "void resetForRead(Index index, Key key, Value value)", "full_signature": "@Override public void resetForRead(Index index, Key key, Value value)", "class_method_signature": "FDBIndexRow.resetForRead(Index index, Key key, Value value)", "testcase": false, "constructor": false}, {"identifier": "resetForWrite", "parameters": "(Index index, Key key)", "modifiers": "@Override public", "return": "void", "signature": "void resetForWrite(Index index, Key key)", "full_signature": "@Override public void resetForWrite(Index index, Key key)", "class_method_signature": "FDBIndexRow.resetForWrite(Index index, Key key)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(IndexRow thatKey, int startBoundColumns)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(IndexRow thatKey, int startBoundColumns)", "full_signature": "@Override public int compareTo(IndexRow thatKey, int startBoundColumns)", "class_method_signature": "FDBIndexRow.compareTo(IndexRow thatKey, int startBoundColumns)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(IndexRow thatKey, int fieldCount, boolean[] ascending)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(IndexRow thatKey, int fieldCount, boolean[] ascending)", "full_signature": "@Override public int compareTo(IndexRow thatKey, int fieldCount, boolean[] ascending)", "class_method_signature": "FDBIndexRow.compareTo(IndexRow thatKey, int fieldCount, boolean[] ascending)", "testcase": false, "constructor": false}, {"identifier": "isSet", "parameters": "(boolean[] values, int idx, int tVal, int fVal)", "modifiers": "private static", "return": "int", "signature": "int isSet(boolean[] values, int idx, int tVal, int fVal)", "full_signature": "private static int isSet(boolean[] values, int idx, int tVal, int fVal)", "class_method_signature": "FDBIndexRow.isSet(boolean[] values, int idx, int tVal, int fVal)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "FDBIndexRow.reset()", "testcase": false, "constructor": false}, {"identifier": "copyPersistitKeyTo", "parameters": "(Key key)", "modifiers": "@Override public", "return": "void", "signature": "void copyPersistitKeyTo(Key key)", "full_signature": "@Override public void copyPersistitKeyTo(Key key)", "class_method_signature": "FDBIndexRow.copyPersistitKeyTo(Key key)", "testcase": false, "constructor": false}, {"identifier": "appendFieldTo", "parameters": "(int position, Key target)", "modifiers": "@Override public", "return": "void", "signature": "void appendFieldTo(int position, Key target)", "full_signature": "@Override public void appendFieldTo(int position, Key target)", "class_method_signature": "FDBIndexRow.appendFieldTo(int position, Key target)", "testcase": false, "constructor": false}, {"identifier": "copyFrom", "parameters": "(Key key, Value value)", "modifiers": "@Override public", "return": "void", "signature": "void copyFrom(Key key, Value value)", "full_signature": "@Override public void copyFrom(Key key, Value value)", "class_method_signature": "FDBIndexRow.copyFrom(Key key, Value value)", "testcase": false, "constructor": false}, {"identifier": "keyEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean keyEmpty()", "full_signature": "@Override public boolean keyEmpty()", "class_method_signature": "FDBIndexRow.keyEmpty()", "testcase": false, "constructor": false}, {"identifier": "tableBitmap", "parameters": "(long bitmap)", "modifiers": "@Override public", "return": "void", "signature": "void tableBitmap(long bitmap)", "full_signature": "@Override public void tableBitmap(long bitmap)", "class_method_signature": "FDBIndexRow.tableBitmap(long bitmap)", "testcase": false, "constructor": false}, {"identifier": "tableBitmap", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long tableBitmap()", "full_signature": "@Override public long tableBitmap()", "class_method_signature": "FDBIndexRow.tableBitmap()", "testcase": false, "constructor": false}, {"identifier": "zPosition", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int zPosition()", "full_signature": "@Override protected int zPosition()", "class_method_signature": "FDBIndexRow.zPosition()", "testcase": false, "constructor": false}, {"identifier": "FDBIndexRow", "parameters": "(KeyCreator keyCreator)", "modifiers": "public", "return": "", "signature": " FDBIndexRow(KeyCreator keyCreator)", "full_signature": "public  FDBIndexRow(KeyCreator keyCreator)", "class_method_signature": "FDBIndexRow.FDBIndexRow(KeyCreator keyCreator)", "testcase": false, "constructor": true}, {"identifier": "FDBIndexRow", "parameters": "(KeyCreator adapter, IndexRowType indexRowType)", "modifiers": "public", "return": "", "signature": " FDBIndexRow(KeyCreator adapter, IndexRowType indexRowType)", "full_signature": "public  FDBIndexRow(KeyCreator adapter, IndexRowType indexRowType)", "class_method_signature": "FDBIndexRow.FDBIndexRow(KeyCreator adapter, IndexRowType indexRowType)", "testcase": false, "constructor": true}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/qp/storeadapter/indexrow/FDBIndexRow.java"}, "focal_method": {"identifier": "rowType", "parameters": "()", "modifiers": "@Override public", "return": "IndexRowType", "body": "@Override\n    public IndexRowType rowType()\n    {\n        return indexRowType;\n    }", "signature": "IndexRowType rowType()", "full_signature": "@Override public IndexRowType rowType()", "class_method_signature": "FDBIndexRow.rowType()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}