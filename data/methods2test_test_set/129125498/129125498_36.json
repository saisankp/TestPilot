{"test_class": {"identifier": "ElasticSearchDataCleanerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ElasticSearchClient client;", "modifier": "private", "type": "ElasticSearchClient", "declarator": "client", "var_name": "client"}], "file": "kafka/src/test/java/com/expedia/adaptivealerting/kafka/visualizer/ElasticSearchDataCleanerTest.java"}, "test_case": {"identifier": "testDelete", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDelete() throws Exception {\n        BulkByScrollResponse expected = buildBulkResponse();\n        when(client.deleteByQuery(any(DeleteByQueryRequest.class), any()))\n                .thenReturn(expected);\n        ElasticSearchDataCleaner elasticSearchDataCleaner = new ElasticSearchDataCleaner();\n        BulkByScrollResponse actual = elasticSearchDataCleaner.deleteData(client);\n        assertEquals(actual,expected);\n    }", "signature": "void testDelete()", "full_signature": "@Test public void testDelete()", "class_method_signature": "ElasticSearchDataCleanerTest.testDelete()", "testcase": true, "constructor": false, "invocations": ["buildBulkResponse", "thenReturn", "when", "deleteByQuery", "any", "any", "deleteData", "assertEquals"]}, "focal_class": {"identifier": "ElasticSearchDataCleaner", "superclass": "", "interfaces": "implements Runnable", "fields": [{"original_string": "private static String INDEX = \"anomalies\";", "modifier": "private static", "type": "String", "declarator": "INDEX = \"anomalies\"", "var_name": "INDEX"}, {"original_string": "private static String FIELD = \"timestamp\";", "modifier": "private static", "type": "String", "declarator": "FIELD = \"timestamp\"", "var_name": "FIELD"}, {"original_string": "private static String RETENTION_PERIOD_DAYS = \"7\";", "modifier": "private static", "type": "String", "declarator": "RETENTION_PERIOD_DAYS = \"7\"", "var_name": "RETENTION_PERIOD_DAYS"}], "methods": [{"identifier": "ElasticSearchDataCleaner", "parameters": "()", "modifiers": "public", "return": "", "signature": " ElasticSearchDataCleaner()", "full_signature": "public  ElasticSearchDataCleaner()", "class_method_signature": "ElasticSearchDataCleaner.ElasticSearchDataCleaner()", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ElasticSearchDataCleaner.run()", "testcase": false, "constructor": false}, {"identifier": "deleteData", "parameters": "(ElasticSearchClient elasticSearchClient)", "modifiers": "public", "return": "BulkByScrollResponse", "signature": "BulkByScrollResponse deleteData(ElasticSearchClient elasticSearchClient)", "full_signature": "public BulkByScrollResponse deleteData(ElasticSearchClient elasticSearchClient)", "class_method_signature": "ElasticSearchDataCleaner.deleteData(ElasticSearchClient elasticSearchClient)", "testcase": false, "constructor": false}], "file": "kafka/src/main/java/com/expedia/adaptivealerting/kafka/visualizer/ElasticSearchDataCleaner.java"}, "focal_method": {"identifier": "deleteData", "parameters": "(ElasticSearchClient elasticSearchClient)", "modifiers": "public", "return": "BulkByScrollResponse", "body": "public BulkByScrollResponse deleteData(ElasticSearchClient elasticSearchClient) {\n        log.info(\"deleting old data\");\n        BulkByScrollResponse bulkByScrollResponse = null;\n        DeleteByQueryRequest deleteByQueryRequest = new DeleteByQueryRequest(INDEX);\n        RangeQueryBuilder rangeQueryBuilder = new RangeQueryBuilder(FIELD).lt(\"now-\" + RETENTION_PERIOD_DAYS + \"d/d\");\n        deleteByQueryRequest.setQuery(rangeQueryBuilder);\n        try {\n            bulkByScrollResponse = elasticSearchClient\n                    .deleteByQuery(deleteByQueryRequest, RequestOptions.DEFAULT);\n            log.info(bulkByScrollResponse.toString());\n        } catch (IOException e) {\n            log.error(e.getLocalizedMessage(),e);\n        } catch (Exception e) {\n            log.error(e.getLocalizedMessage(),e);\n        }\n        finally {\n            elasticSearchClient.close();\n        }\n        return bulkByScrollResponse;\n    }", "signature": "BulkByScrollResponse deleteData(ElasticSearchClient elasticSearchClient)", "full_signature": "public BulkByScrollResponse deleteData(ElasticSearchClient elasticSearchClient)", "class_method_signature": "ElasticSearchDataCleaner.deleteData(ElasticSearchClient elasticSearchClient)", "testcase": false, "constructor": false, "invocations": ["info", "lt", "setQuery", "deleteByQuery", "info", "toString", "error", "getLocalizedMessage", "error", "getLocalizedMessage", "close"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}