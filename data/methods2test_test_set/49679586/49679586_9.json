{"test_class": {"identifier": "TagXMLWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String TEST_BASE_OUTPUT_FILE = \"test-base.xml\";", "modifier": "public static final", "type": "String", "declarator": "TEST_BASE_OUTPUT_FILE = \"test-base.xml\"", "var_name": "TEST_BASE_OUTPUT_FILE"}, {"original_string": "public static final String TEST_BASE_TARGET_RESOURCE = \"/test-base.xml\";", "modifier": "public static final", "type": "String", "declarator": "TEST_BASE_TARGET_RESOURCE = \"/test-base.xml\"", "var_name": "TEST_BASE_TARGET_RESOURCE"}, {"original_string": "private static HKXFile file;", "modifier": "private static", "type": "HKXFile", "declarator": "file", "var_name": "file"}], "file": "core/src/test/java/com/dexesttp/hkxpack/tagwriter/TagXMLWriterTest.java"}, "test_case": {"identifier": "testWriteDefaultFileToPhysicalFile", "parameters": "()", "modifiers": "@Test /** * Tests if the TagXMLWriter output file is equals to the target file. */ public", "return": "void", "body": "@Test\n\t/**\n\t * Tests if the TagXMLWriter output file is equals to the target file. \n\t */\n\tpublic void testWriteDefaultFileToPhysicalFile() throws Exception {\n\t\tFile outputFile = File.createTempFile(TEST_BASE_OUTPUT_FILE, \"\");\n\t\tTagXMLWriter writer = new TagXMLWriter(outputFile);\n\t\twriter.write(file);\n\t\tassertArrayEquals(\n\t\t\t\tFiles.toByteArray(outputFile),\n\t\t\t\tFileUtils.resourceToByteArray(TEST_BASE_TARGET_RESOURCE));\n\t}", "signature": "void testWriteDefaultFileToPhysicalFile()", "full_signature": "@Test /** * Tests if the TagXMLWriter output file is equals to the target file. */ public void testWriteDefaultFileToPhysicalFile()", "class_method_signature": "TagXMLWriterTest.testWriteDefaultFileToPhysicalFile()", "testcase": true, "constructor": false, "invocations": ["createTempFile", "write", "assertArrayEquals", "toByteArray", "resourceToByteArray"]}, "focal_class": {"identifier": "TagXMLWriter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final transient File outFile;", "modifier": "private final transient", "type": "File", "declarator": "outFile", "var_name": "outFile"}], "methods": [{"identifier": "TagXMLWriter", "parameters": "(final File outputFile)", "modifiers": "public", "return": "", "signature": " TagXMLWriter(final File outputFile)", "full_signature": "public  TagXMLWriter(final File outputFile)", "class_method_signature": "TagXMLWriter.TagXMLWriter(final File outputFile)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(final HKXFile hkxFile)", "modifiers": "public", "return": "void", "signature": "void write(final HKXFile hkxFile)", "full_signature": "public void write(final HKXFile hkxFile)", "class_method_signature": "TagXMLWriter.write(final HKXFile hkxFile)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/dexesttp/hkxpack/tagwriter/TagXMLWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(final HKXFile hkxFile)", "modifiers": "public", "return": "void", "body": "public void write(final HKXFile hkxFile) throws IOException, TransformerException, ParserConfigurationException {\n\t\tTagXMLHandler handler = new TagXMLHandler();\n\t\t// Create the new Document\n\t\tDocument document = handler.createDOM(hkxFile.getContentsVersion(), hkxFile.getClassVersion());\n\t\t\n\t\t// Create the \"__data__\" section in the document.\n\t\tElement root = handler.createSection(document, \"__data__\");\n\t\t\n\t\tTagXMLDataCreator creator = new TagXMLDataCreator(document);\n\t\t\n\t\tfor(HKXObject content : hkxFile.getContentCollection()) {\n\t\t\tNode contentXML = creator.create(content);\n\t\t\troot.appendChild(contentXML);\n\t\t}\n\t\thandler.writeToFile(document, outFile);\n\t}", "signature": "void write(final HKXFile hkxFile)", "full_signature": "public void write(final HKXFile hkxFile)", "class_method_signature": "TagXMLWriter.write(final HKXFile hkxFile)", "testcase": false, "constructor": false, "invocations": ["createDOM", "getContentsVersion", "getClassVersion", "createSection", "getContentCollection", "create", "appendChild", "writeToFile"]}, "repository": {"repo_id": 49679586, "url": "https://github.com/Dexesttp/hkxpack", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 31, "size": 1129, "license": "licensed"}}