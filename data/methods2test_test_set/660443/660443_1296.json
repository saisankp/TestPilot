{"test_class": {"identifier": "GeometricCumulativeDoubleBondFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "tool/hash/src/test/java/org/openscience/cdk/hash/stereo/GeometricCumulativeDoubleBondFactoryTest.java"}, "test_case": {"identifier": "testElevation_Atom_Up", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testElevation_Atom_Up() throws Exception {\n        IAtom a1 = mock(IAtom.class);\n        IAtom a2 = mock(IAtom.class);\n        IBond bond = mock(IBond.class);\n        when(bond.getStereo()).thenReturn(IBond.Stereo.UP);\n        when(bond.getBegin()).thenReturn(a1);\n        when(bond.getEnd()).thenReturn(a2);\n        assertThat(GeometricCumulativeDoubleBondFactory.elevation(bond, a1), is(+1));\n        assertThat(GeometricCumulativeDoubleBondFactory.elevation(bond, a2), is(-1));\n    }", "signature": "void testElevation_Atom_Up()", "full_signature": "@Test public void testElevation_Atom_Up()", "class_method_signature": "GeometricCumulativeDoubleBondFactoryTest.testElevation_Atom_Up()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "thenReturn", "when", "getStereo", "thenReturn", "when", "getBegin", "thenReturn", "when", "getEnd", "assertThat", "elevation", "is", "assertThat", "elevation", "is"]}, "focal_class": {"identifier": "GeometricCumulativeDoubleBondFactory", "superclass": "", "interfaces": "implements StereoEncoderFactory", "fields": [], "methods": [{"identifier": "create", "parameters": "(IAtomContainer container, int[][] graph)", "modifiers": "@Override public", "return": "StereoEncoder", "signature": "StereoEncoder create(IAtomContainer container, int[][] graph)", "full_signature": "@Override public StereoEncoder create(IAtomContainer container, int[][] graph)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.create(IAtomContainer container, int[][] graph)", "testcase": false, "constructor": false}, {"identifier": "axialEncoder", "parameters": "(IAtomContainer container, IAtom start, IAtom end)", "modifiers": "static", "return": "StereoEncoder", "signature": "StereoEncoder axialEncoder(IAtomContainer container, IAtom start, IAtom end)", "full_signature": "static StereoEncoder axialEncoder(IAtomContainer container, IAtom start, IAtom end)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.axialEncoder(IAtomContainer container, IAtom start, IAtom end)", "testcase": false, "constructor": false}, {"identifier": "axial2DEncoder", "parameters": "(IAtomContainer container, IAtom start, List<IBond> startBonds,\n            IAtom end, List<IBond> endBonds)", "modifiers": "private static", "return": "StereoEncoder", "signature": "StereoEncoder axial2DEncoder(IAtomContainer container, IAtom start, List<IBond> startBonds,\n            IAtom end, List<IBond> endBonds)", "full_signature": "private static StereoEncoder axial2DEncoder(IAtomContainer container, IAtom start, List<IBond> startBonds,\n            IAtom end, List<IBond> endBonds)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.axial2DEncoder(IAtomContainer container, IAtom start, List<IBond> startBonds,\n            IAtom end, List<IBond> endBonds)", "testcase": false, "constructor": false}, {"identifier": "axial3DEncoder", "parameters": "(IAtomContainer container, IAtom start, List<IBond> startBonds,\n            IAtom end, List<IBond> endBonds)", "modifiers": "private static", "return": "StereoEncoder", "signature": "StereoEncoder axial3DEncoder(IAtomContainer container, IAtom start, List<IBond> startBonds,\n            IAtom end, List<IBond> endBonds)", "full_signature": "private static StereoEncoder axial3DEncoder(IAtomContainer container, IAtom start, List<IBond> startBonds,\n            IAtom end, List<IBond> endBonds)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.axial3DEncoder(IAtomContainer container, IAtom start, List<IBond> startBonds,\n            IAtom end, List<IBond> endBonds)", "testcase": false, "constructor": false}, {"identifier": "fill2DCoordinates", "parameters": "(IAtomContainer container, IAtom a, List<IBond> connected,\n            Point2d[] coordinates, int[] elevations, int offset)", "modifiers": "private static", "return": "PermutationParity", "signature": "PermutationParity fill2DCoordinates(IAtomContainer container, IAtom a, List<IBond> connected,\n            Point2d[] coordinates, int[] elevations, int offset)", "full_signature": "private static PermutationParity fill2DCoordinates(IAtomContainer container, IAtom a, List<IBond> connected,\n            Point2d[] coordinates, int[] elevations, int offset)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.fill2DCoordinates(IAtomContainer container, IAtom a, List<IBond> connected,\n            Point2d[] coordinates, int[] elevations, int offset)", "testcase": false, "constructor": false}, {"identifier": "fill3DCoordinates", "parameters": "(IAtomContainer container, IAtom a, List<IBond> connected,\n            Point3d[] coordinates, int offset)", "modifiers": "private static", "return": "PermutationParity", "signature": "PermutationParity fill3DCoordinates(IAtomContainer container, IAtom a, List<IBond> connected,\n            Point3d[] coordinates, int offset)", "full_signature": "private static PermutationParity fill3DCoordinates(IAtomContainer container, IAtom a, List<IBond> connected,\n            Point3d[] coordinates, int offset)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.fill3DCoordinates(IAtomContainer container, IAtom a, List<IBond> connected,\n            Point3d[] coordinates, int offset)", "testcase": false, "constructor": false}, {"identifier": "has2DCoordinates", "parameters": "(List<IBond> bonds)", "modifiers": "private static", "return": "boolean", "signature": "boolean has2DCoordinates(List<IBond> bonds)", "full_signature": "private static boolean has2DCoordinates(List<IBond> bonds)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.has2DCoordinates(List<IBond> bonds)", "testcase": false, "constructor": false}, {"identifier": "has3DCoordinates", "parameters": "(List<IBond> bonds)", "modifiers": "private static", "return": "boolean", "signature": "boolean has3DCoordinates(List<IBond> bonds)", "full_signature": "private static boolean has3DCoordinates(List<IBond> bonds)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.has3DCoordinates(List<IBond> bonds)", "testcase": false, "constructor": false}, {"identifier": "elevation", "parameters": "(IBond bond, IAtom a)", "modifiers": "static", "return": "int", "signature": "int elevation(IBond bond, IAtom a)", "full_signature": "static int elevation(IBond bond, IAtom a)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.elevation(IBond bond, IAtom a)", "testcase": false, "constructor": false}, {"identifier": "elevation", "parameters": "(IBond bond)", "modifiers": "static", "return": "int", "signature": "int elevation(IBond bond)", "full_signature": "static int elevation(IBond bond)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.elevation(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "isOdd", "parameters": "(int x)", "modifiers": "private static", "return": "boolean", "signature": "boolean isOdd(int x)", "full_signature": "private static boolean isOdd(int x)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.isOdd(int x)", "testcase": false, "constructor": false}, {"identifier": "isDoubleBond", "parameters": "(IBond bond)", "modifiers": "private static", "return": "boolean", "signature": "boolean isDoubleBond(IBond bond)", "full_signature": "private static boolean isDoubleBond(IBond bond)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.isDoubleBond(IBond bond)", "testcase": false, "constructor": false}], "file": "tool/hash/src/main/java/org/openscience/cdk/hash/stereo/GeometricCumulativeDoubleBondFactory.java"}, "focal_method": {"identifier": "elevation", "parameters": "(IBond bond, IAtom a)", "modifiers": "static", "return": "int", "body": "static int elevation(IBond bond, IAtom a) {\n        return bond.getBegin().equals(a) ? elevation(bond) : elevation(bond) * -1;\n    }", "signature": "int elevation(IBond bond, IAtom a)", "full_signature": "static int elevation(IBond bond, IAtom a)", "class_method_signature": "GeometricCumulativeDoubleBondFactory.elevation(IBond bond, IAtom a)", "testcase": false, "constructor": false, "invocations": ["equals", "getBegin", "elevation", "elevation"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}