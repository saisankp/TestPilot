{"test_class": {"identifier": "KiePMMLRegressionTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TARGET_FIELD = \"TARGET_FIELD\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_FIELD = \"TARGET_FIELD\"", "var_name": "TARGET_FIELD"}, {"original_string": "private static final String FIRST_NUMERIC_INPUT = \"FIRST_NUMERIC_INPUT\";", "modifier": "private static final", "type": "String", "declarator": "FIRST_NUMERIC_INPUT = \"FIRST_NUMERIC_INPUT\"", "var_name": "FIRST_NUMERIC_INPUT"}, {"original_string": "private static final String SECOND_NUMERIC_INPUT = \"SECOND_NUMERIC_INPUT\";", "modifier": "private static final", "type": "String", "declarator": "SECOND_NUMERIC_INPUT = \"SECOND_NUMERIC_INPUT\"", "var_name": "SECOND_NUMERIC_INPUT"}, {"original_string": "private static final String FIRST_CATEGORICAL_INPUT = \"FIRST_CATEGORICAL_INPUT\";", "modifier": "private static final", "type": "String", "declarator": "FIRST_CATEGORICAL_INPUT = \"FIRST_CATEGORICAL_INPUT\"", "var_name": "FIRST_CATEGORICAL_INPUT"}, {"original_string": "private static final String SECOND_CATEGORICAL_INPUT = \"SECOND_CATEGORICAL_INPUT\";", "modifier": "private static final", "type": "String", "declarator": "SECOND_CATEGORICAL_INPUT = \"SECOND_CATEGORICAL_INPUT\"", "var_name": "SECOND_CATEGORICAL_INPUT"}, {"original_string": "private static final Function<Double, Double> FIRST_NUMERIC_FUNCTION = aDouble -> 1 / aDouble;", "modifier": "private static final", "type": "Function<Double, Double>", "declarator": "FIRST_NUMERIC_FUNCTION = aDouble -> 1 / aDouble", "var_name": "FIRST_NUMERIC_FUNCTION"}, {"original_string": "private static final Function<Double, Double> SECOND_NUMERIC_FUNCTION = aDouble -> 1 - aDouble;", "modifier": "private static final", "type": "Function<Double, Double>", "declarator": "SECOND_NUMERIC_FUNCTION = aDouble -> 1 - aDouble", "var_name": "SECOND_NUMERIC_FUNCTION"}, {"original_string": "private final KiePMMLRegressionTable regressionTable;", "modifier": "private final", "type": "KiePMMLRegressionTable", "declarator": "regressionTable", "var_name": "regressionTable"}, {"original_string": "private final Function<Object, Double> firstCategoricalFunction;", "modifier": "private final", "type": "Function<Object, Double>", "declarator": "firstCategoricalFunction", "var_name": "firstCategoricalFunction"}, {"original_string": "private final Function<Object, Double> secondCategoricalFunction;", "modifier": "private final", "type": "Function<Object, Double>", "declarator": "secondCategoricalFunction", "var_name": "secondCategoricalFunction"}, {"original_string": "private final double firstNumericalInput;", "modifier": "private final", "type": "double", "declarator": "firstNumericalInput", "var_name": "firstNumericalInput"}, {"original_string": "private final double secondNumericalInput;", "modifier": "private final", "type": "double", "declarator": "secondNumericalInput", "var_name": "secondNumericalInput"}, {"original_string": "private final double expectedResult;", "modifier": "private final", "type": "double", "declarator": "expectedResult", "var_name": "expectedResult"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/src/test/java/org/kie/pmml/models/regression/model/KiePMMLRegressionTableTest.java"}, "test_case": {"identifier": "evaluateRegression", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void evaluateRegression() {\n        Map<String, Object> input = new HashMap<>();\n        input.put(FIRST_NUMERIC_INPUT, firstNumericalInput);\n        input.put(SECOND_NUMERIC_INPUT, secondNumericalInput);\n        input.put(FIRST_CATEGORICAL_INPUT, \"unused\");\n        input.put(SECOND_CATEGORICAL_INPUT, \"unused\");\n        Object retrieved = regressionTable.evaluateRegression(input);\n        assertEquals(expectedResult, retrieved);\n        final Map<String, Object> outputFieldsMap = regressionTable.getOutputFieldsMap();\n        assertTrue(outputFieldsMap.containsKey(TARGET_FIELD));\n        assertEquals(expectedResult, outputFieldsMap.get(TARGET_FIELD));\n    }", "signature": "void evaluateRegression()", "full_signature": "@Test public void evaluateRegression()", "class_method_signature": "KiePMMLRegressionTableTest.evaluateRegression()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "evaluateRegression", "assertEquals", "getOutputFieldsMap", "assertTrue", "containsKey", "assertEquals", "get"]}, "focal_class": {"identifier": "KiePMMLRegressionTable", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Map<String, Function<Double, Double>> numericFunctionMap = new HashMap<>();", "modifier": "protected", "type": "Map<String, Function<Double, Double>>", "declarator": "numericFunctionMap = new HashMap<>()", "var_name": "numericFunctionMap"}, {"original_string": "protected Map<String, Function<Object, Double>> categoricalFunctionMap = new HashMap<>();", "modifier": "protected", "type": "Map<String, Function<Object, Double>>", "declarator": "categoricalFunctionMap = new HashMap<>()", "var_name": "categoricalFunctionMap"}, {"original_string": "protected Map<String, Object> outputFieldsMap = new HashMap<>();", "modifier": "protected", "type": "Map<String, Object>", "declarator": "outputFieldsMap = new HashMap<>()", "var_name": "outputFieldsMap"}, {"original_string": "protected Map<String, Function<Map<String, Object>, Double>> predictorTermsFunctionMap = new HashMap<>();", "modifier": "protected", "type": "Map<String, Function<Map<String, Object>, Double>>", "declarator": "predictorTermsFunctionMap = new HashMap<>()", "var_name": "predictorTermsFunctionMap"}, {"original_string": "protected double intercept;", "modifier": "protected", "type": "double", "declarator": "intercept", "var_name": "intercept"}, {"original_string": "protected String targetField;", "modifier": "protected", "type": "String", "declarator": "targetField", "var_name": "targetField"}], "methods": [{"identifier": "getTargetCategory", "parameters": "()", "modifiers": "public abstract", "return": "Object", "signature": "Object getTargetCategory()", "full_signature": "public abstract Object getTargetCategory()", "class_method_signature": "KiePMMLRegressionTable.getTargetCategory()", "testcase": false, "constructor": false}, {"identifier": "evaluateRegression", "parameters": "(Map<String, Object> input)", "modifiers": "public", "return": "Object", "signature": "Object evaluateRegression(Map<String, Object> input)", "full_signature": "public Object evaluateRegression(Map<String, Object> input)", "class_method_signature": "KiePMMLRegressionTable.evaluateRegression(Map<String, Object> input)", "testcase": false, "constructor": false}, {"identifier": "getOutputFieldsMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getOutputFieldsMap()", "full_signature": "public Map<String, Object> getOutputFieldsMap()", "class_method_signature": "KiePMMLRegressionTable.getOutputFieldsMap()", "testcase": false, "constructor": false}, {"identifier": "getTargetField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTargetField()", "full_signature": "public String getTargetField()", "class_method_signature": "KiePMMLRegressionTable.getTargetField()", "testcase": false, "constructor": false}, {"identifier": "getNumericFunctionMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Function<Double, Double>>", "signature": "Map<String, Function<Double, Double>> getNumericFunctionMap()", "full_signature": "public Map<String, Function<Double, Double>> getNumericFunctionMap()", "class_method_signature": "KiePMMLRegressionTable.getNumericFunctionMap()", "testcase": false, "constructor": false}, {"identifier": "getCategoricalFunctionMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Function<Object, Double>>", "signature": "Map<String, Function<Object, Double>> getCategoricalFunctionMap()", "full_signature": "public Map<String, Function<Object, Double>> getCategoricalFunctionMap()", "class_method_signature": "KiePMMLRegressionTable.getCategoricalFunctionMap()", "testcase": false, "constructor": false}, {"identifier": "getPredictorTermsFunctionMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Function<Map<String, Object>, Double>>", "signature": "Map<String, Function<Map<String, Object>, Double>> getPredictorTermsFunctionMap()", "full_signature": "public Map<String, Function<Map<String, Object>, Double>> getPredictorTermsFunctionMap()", "class_method_signature": "KiePMMLRegressionTable.getPredictorTermsFunctionMap()", "testcase": false, "constructor": false}, {"identifier": "getIntercept", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getIntercept()", "full_signature": "public double getIntercept()", "class_method_signature": "KiePMMLRegressionTable.getIntercept()", "testcase": false, "constructor": false}, {"identifier": "updateResult", "parameters": "(final AtomicReference<Double> toUpdate)", "modifiers": "protected abstract", "return": "void", "signature": "void updateResult(final AtomicReference<Double> toUpdate)", "full_signature": "protected abstract void updateResult(final AtomicReference<Double> toUpdate)", "class_method_signature": "KiePMMLRegressionTable.updateResult(final AtomicReference<Double> toUpdate)", "testcase": false, "constructor": false}, {"identifier": "populateOutputFieldsMapWithResult", "parameters": "(final Object result)", "modifiers": "protected abstract", "return": "void", "signature": "void populateOutputFieldsMapWithResult(final Object result)", "full_signature": "protected abstract void populateOutputFieldsMapWithResult(final Object result)", "class_method_signature": "KiePMMLRegressionTable.populateOutputFieldsMapWithResult(final Object result)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/src/main/java/org/kie/pmml/models/regression/model/KiePMMLRegressionTable.java"}, "focal_method": {"identifier": "evaluateRegression", "parameters": "(Map<String, Object> input)", "modifiers": "public", "return": "Object", "body": "public Object evaluateRegression(Map<String, Object> input) {\n        final AtomicReference<Double> result = new AtomicReference<>(intercept);\n        final Map<String, Double> resultMap = new HashMap<>();\n        for (Map.Entry<String, Function<Double, Double>> entry : numericFunctionMap.entrySet()) {\n            String key = entry.getKey();\n            if (input.containsKey(key)) {\n                resultMap.put(key, entry.getValue().apply(((Number) input.get(key)).doubleValue()));\n            }\n        }\n        for (Map.Entry<String, Function<Object, Double>> entry : categoricalFunctionMap.entrySet()) {\n            String key = entry.getKey();\n            if (input.containsKey(key)) {\n                resultMap.put(key, entry.getValue().apply(input.get(key)));\n            }\n        }\n        for (Map.Entry<String, Function<Map<String, Object>, Double>> entry : predictorTermsFunctionMap.entrySet()) {\n            resultMap.put(entry.getKey(), entry.getValue().apply(input));\n        }\n        resultMap.values().forEach(value -> result.accumulateAndGet(value, Double::sum));\n        updateResult(result);\n        Object toReturn = result.get();\n        populateOutputFieldsMapWithResult(toReturn);\n        return toReturn;\n    }", "signature": "Object evaluateRegression(Map<String, Object> input)", "full_signature": "public Object evaluateRegression(Map<String, Object> input)", "class_method_signature": "KiePMMLRegressionTable.evaluateRegression(Map<String, Object> input)", "testcase": false, "constructor": false, "invocations": ["entrySet", "getKey", "containsKey", "put", "apply", "getValue", "doubleValue", "get", "entrySet", "getKey", "containsKey", "put", "apply", "getValue", "get", "entrySet", "put", "getKey", "apply", "getValue", "forEach", "values", "accumulateAndGet", "updateResult", "get", "populateOutputFieldsMapWithResult"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}