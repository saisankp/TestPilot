{"test_class": {"identifier": "EntityClassUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "lzpeng-boot-server/src/test/java/com/lzpeng/project/tool/utils/EntityClassUtilTest.java"}, "test_case": {"identifier": "getModuleName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getModuleName() {\n        log.info(\"moduleName: {}\", EntityClassUtil.getModuleName(Job.class));\n    }", "signature": "void getModuleName()", "full_signature": "@Test public void getModuleName()", "class_method_signature": "EntityClassUtilTest.getModuleName()", "testcase": true, "constructor": false, "invocations": ["info", "getModuleName"]}, "focal_class": {"identifier": "EntityClassUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ENTITY_CLASS_SUFFIX = \"Entity\";", "modifier": "private static final", "type": "String", "declarator": "ENTITY_CLASS_SUFFIX = \"Entity\"", "var_name": "ENTITY_CLASS_SUFFIX"}, {"original_string": "private static final Pattern PATTERN = Pattern.compile(ENTITY_NAME_PATTERN);", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(ENTITY_NAME_PATTERN)", "var_name": "PATTERN"}], "methods": [{"identifier": "getFullClassName", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "String", "signature": "String getFullClassName(Class<?> clazz)", "full_signature": "public static String getFullClassName(Class<?> clazz)", "class_method_signature": "EntityClassUtil.getFullClassName(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getSimpleClassName", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "String", "signature": "String getSimpleClassName(Class<?> clazz)", "full_signature": "public static String getSimpleClassName(Class<?> clazz)", "class_method_signature": "EntityClassUtil.getSimpleClassName(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getSuperSimpleClassName", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "String", "signature": "String getSuperSimpleClassName(Class<?> clazz)", "full_signature": "public static String getSuperSimpleClassName(Class<?> clazz)", "class_method_signature": "EntityClassUtil.getSuperSimpleClassName(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getEntityType", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "String", "signature": "String getEntityType(Class<?> clazz)", "full_signature": "public static String getEntityType(Class<?> clazz)", "class_method_signature": "EntityClassUtil.getEntityType(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getModuleName", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "String", "signature": "String getModuleName(Class<?> clazz)", "full_signature": "public static String getModuleName(Class<?> clazz)", "class_method_signature": "EntityClassUtil.getModuleName(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getChineseClassName", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "String", "signature": "String getChineseClassName(Class<?> clazz)", "full_signature": "public static String getChineseClassName(Class<?> clazz)", "class_method_signature": "EntityClassUtil.getChineseClassName(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getFieldType", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getFieldType(Field field)", "full_signature": "public static String getFieldType(Field field)", "class_method_signature": "EntityClassUtil.getFieldType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getFieldName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getFieldName(Field field)", "full_signature": "public static String getFieldName(Field field)", "class_method_signature": "EntityClassUtil.getFieldName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getChineseFieldName", "parameters": "(ApiModelProperty apiModelProperty)", "modifiers": "public static", "return": "String", "signature": "String getChineseFieldName(ApiModelProperty apiModelProperty)", "full_signature": "public static String getChineseFieldName(ApiModelProperty apiModelProperty)", "class_method_signature": "EntityClassUtil.getChineseFieldName(ApiModelProperty apiModelProperty)", "testcase": false, "constructor": false}, {"identifier": "getApiModelProperty", "parameters": "(ApiModelProperty apiModelProperty)", "modifiers": "public static", "return": "String", "signature": "String getApiModelProperty(ApiModelProperty apiModelProperty)", "full_signature": "public static String getApiModelProperty(ApiModelProperty apiModelProperty)", "class_method_signature": "EntityClassUtil.getApiModelProperty(ApiModelProperty apiModelProperty)", "testcase": false, "constructor": false}, {"identifier": "getEditPageType", "parameters": "(Class<T> clazz)", "modifiers": "public static", "return": "String", "signature": "String getEditPageType(Class<T> clazz)", "full_signature": "public static String getEditPageType(Class<T> clazz)", "class_method_signature": "EntityClassUtil.getEditPageType(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "getLeftTreeType", "parameters": "(Class<T> clazz)", "modifiers": "public static", "return": "Class<? extends TreeEntity>", "signature": "Class<? extends TreeEntity> getLeftTreeType(Class<T> clazz)", "full_signature": "public static Class<? extends TreeEntity> getLeftTreeType(Class<T> clazz)", "class_method_signature": "EntityClassUtil.getLeftTreeType(Class<T> clazz)", "testcase": false, "constructor": false}], "file": "lzpeng-boot-server/src/main/java/com/lzpeng/project/tool/utils/EntityClassUtil.java"}, "focal_method": {"identifier": "getModuleName", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "String", "body": "public static String getModuleName(Class<?> clazz){\n        Matcher matcher = PATTERN.matcher(clazz.getName());\n        matcher.matches();\n        return matcher.group(1);\n    }", "signature": "String getModuleName(Class<?> clazz)", "full_signature": "public static String getModuleName(Class<?> clazz)", "class_method_signature": "EntityClassUtil.getModuleName(Class<?> clazz)", "testcase": false, "constructor": false, "invocations": ["matcher", "getName", "matches", "group"]}, "repository": {"repo_id": 257335962, "url": "https://github.com/lzpeng723/minimal-boot", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 25, "size": 2632, "license": "licensed"}}