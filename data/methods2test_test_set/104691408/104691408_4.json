{"test_class": {"identifier": "UiThreadPosterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Handler mUiHandlerMock;", "modifier": "private", "type": "Handler", "declarator": "mUiHandlerMock", "var_name": "mUiHandlerMock"}, {"original_string": "private UiThreadPoster SUT;", "modifier": "private", "type": "UiThreadPoster", "declarator": "SUT", "var_name": "SUT"}], "file": "threadposter/src/test/java/com/techyourchance/threadposter/UiThreadPosterTest.java"}, "test_case": {"identifier": "execute_delegatesToUiHandler", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void execute_delegatesToUiHandler() throws Exception {\n        // Arrange\n        Runnable runnable = new Runnable() {\n            @Override\n            public void run() {\n                // no-op\n            }\n        };\n        ArgumentCaptor<Runnable> ac = ArgumentCaptor.forClass(Runnable.class);\n        // Act\n        SUT.post(runnable);\n        // Assert\n        verify(mUiHandlerMock, times(1)).post(ac.capture());\n        assertThat(ac.getValue(), is(runnable));\n    }", "signature": "void execute_delegatesToUiHandler()", "full_signature": "@Test public void execute_delegatesToUiHandler()", "class_method_signature": "UiThreadPosterTest.execute_delegatesToUiHandler()", "testcase": true, "constructor": false, "invocations": ["forClass", "post", "post", "verify", "times", "capture", "assertThat", "getValue", "is"]}, "focal_class": {"identifier": "UiThreadPoster", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Handler mUiHandler;", "modifier": "private final", "type": "Handler", "declarator": "mUiHandler", "var_name": "mUiHandler"}], "methods": [{"identifier": "UiThreadPoster", "parameters": "()", "modifiers": "public", "return": "", "signature": " UiThreadPoster()", "full_signature": "public  UiThreadPoster()", "class_method_signature": "UiThreadPoster.UiThreadPoster()", "testcase": false, "constructor": true}, {"identifier": "post", "parameters": "(Runnable runnable)", "modifiers": "public", "return": "void", "signature": "void post(Runnable runnable)", "full_signature": "public void post(Runnable runnable)", "class_method_signature": "UiThreadPoster.post(Runnable runnable)", "testcase": false, "constructor": false}, {"identifier": "getMainHandler", "parameters": "()", "modifiers": "protected", "return": "Handler", "signature": "Handler getMainHandler()", "full_signature": "protected Handler getMainHandler()", "class_method_signature": "UiThreadPoster.getMainHandler()", "testcase": false, "constructor": false}], "file": "threadposter/src/main/java/com/techyourchance/threadposter/UiThreadPoster.java"}, "focal_method": {"identifier": "post", "parameters": "(Runnable runnable)", "modifiers": "public", "return": "void", "body": "public void post(Runnable runnable) {\n        mUiHandler.post(runnable);\n    }", "signature": "void post(Runnable runnable)", "full_signature": "public void post(Runnable runnable)", "class_method_signature": "UiThreadPoster.post(Runnable runnable)", "testcase": false, "constructor": false, "invocations": ["post"]}, "repository": {"repo_id": 104691408, "url": "https://github.com/techyourchance/thread-poster", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 74, "size": 189, "license": "licensed"}}