{"test_class": {"identifier": "CopyDirectoryTest", "superclass": "extends TransformationUtilityTestHelper", "interfaces": "", "fields": [], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/operations/file/CopyDirectoryTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n        File fromDir = new File(transformedAppFolder, \"blah\");\n        File toDir = new File(transformedAppFolder, \"/src/main/resources/blah\");\n\n        assertTrue(fromDir.exists());\n        assertTrue(fromDir.isDirectory());\n        assertFalse(toDir.exists());\n\n        CopyDirectory copyDirectory = new CopyDirectory().relative(\"blah\").setToRelative(\"src/main/resources/blah\");\n        TOExecutionResult executionResult = copyDirectory.execution(transformedAppFolder, transformationContext);\n        assertEquals(executionResult.getType(), TOExecutionResult.Type.SUCCESS);\n        assertEquals(copyDirectory.getDescription(), \"Copy directory content from blah to src/main/resources/blah\");\n        assertEquals(executionResult.getDetails(), \"Files from '/blah' have been copied to '/src/main/resources/blah'\");\n\n        // Since the actual copy operation is delegated to Apache Commons FileUtils.copyDirectory, the actual copy\n        // operation won't be tested too extensively here\n\n        assertTrue(fromDir.exists());\n        assertTrue(fromDir.isDirectory());\n        assertTrue(toDir.exists());\n        assertTrue(toDir.isDirectory());\n        assertEquals(fromDir.listFiles().length, toDir.listFiles().length);\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "CopyDirectoryTest.test()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "exists", "assertTrue", "isDirectory", "assertFalse", "exists", "setToRelative", "relative", "execution", "assertEquals", "getType", "assertEquals", "getDescription", "assertEquals", "getDetails", "assertTrue", "exists", "assertTrue", "isDirectory", "assertTrue", "exists", "assertTrue", "isDirectory", "assertEquals", "listFiles", "listFiles"]}, "focal_class": {"identifier": "CopyDirectory", "superclass": "extends AbstractToOperation<CopyDirectory>", "interfaces": "", "fields": [{"original_string": "private static final String DESCRIPTION = \"Copy directory content from %s to %s\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"Copy directory content from %s to %s\"", "var_name": "DESCRIPTION"}], "methods": [{"identifier": "CopyDirectory", "parameters": "()", "modifiers": "public", "return": "", "signature": " CopyDirectory()", "full_signature": "public  CopyDirectory()", "class_method_signature": "CopyDirectory.CopyDirectory()", "testcase": false, "constructor": true}, {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TOExecutionResult", "signature": "TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "CopyDirectory.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/operations/file/CopyDirectory.java"}, "focal_method": {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TOExecutionResult", "body": "@Override\n    protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext) {\n        // TODO Validation must be done here!!!\n        File filesFrom = getAbsoluteFile(transformedAppFolder, transformationContext);\n        File fileTo = getFileTo(transformedAppFolder, transformationContext);\n        TOExecutionResult result = null;\n\n        try {\n            FileUtils.copyDirectory(filesFrom, fileTo);\n            String details = String.format(\"Files from '%s' have been copied to '%s'\", getRelativePath(transformedAppFolder, filesFrom), getRelativePath(transformedAppFolder, fileTo));\n            result = TOExecutionResult.success(this, details);\n        } catch (IOException e) {\n            result = TOExecutionResult.error(this, new TransformationOperationException(\"Directory could not be copied\", e));\n        }\n\n        return result;\n    }", "signature": "TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "CopyDirectory.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false, "invocations": ["getAbsoluteFile", "getFileTo", "copyDirectory", "format", "getRelativePath", "getRelativePath", "success", "error"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}