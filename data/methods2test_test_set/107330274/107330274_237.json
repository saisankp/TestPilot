{"test_class": {"identifier": "ApplicationSlaManagementResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ParameterizedTypeReference<List<ApplicationSlaRepresentation>> APPLICATION_SLA_REP_LIST_TR =\n            new ParameterizedTypeReference<List<ApplicationSlaRepresentation>>() {\n            };", "modifier": "private static final", "type": "ParameterizedTypeReference<List<ApplicationSlaRepresentation>>", "declarator": "APPLICATION_SLA_REP_LIST_TR =\n            new ParameterizedTypeReference<List<ApplicationSlaRepresentation>>() {\n            }", "var_name": "APPLICATION_SLA_REP_LIST_TR"}, {"original_string": "private static final ParameterizedTypeReference<List<ApplicationSlaRepresentation>> APPLICATION_SLA_KUBE_SCHEDULER_REP_LIST_TR =\n            new ParameterizedTypeReference<List<ApplicationSlaRepresentation>>() {\n            };", "modifier": "private static final", "type": "ParameterizedTypeReference<List<ApplicationSlaRepresentation>>", "declarator": "APPLICATION_SLA_KUBE_SCHEDULER_REP_LIST_TR =\n            new ParameterizedTypeReference<List<ApplicationSlaRepresentation>>() {\n            }", "var_name": "APPLICATION_SLA_KUBE_SCHEDULER_REP_LIST_TR"}, {"original_string": "private static final ApplicationSLA SAMPLE_SLA = ApplicationSlaSample.CriticalSmall.build();", "modifier": "private static final", "type": "ApplicationSLA", "declarator": "SAMPLE_SLA = ApplicationSlaSample.CriticalSmall.build()", "var_name": "SAMPLE_SLA"}, {"original_string": "private static final ApplicationSLA SAMPLE_SLA_MANAGED_BY_KUBESCHEDULER = ApplicationSlaSample.CriticalSmallKubeScheduler.build();", "modifier": "private static final", "type": "ApplicationSLA", "declarator": "SAMPLE_SLA_MANAGED_BY_KUBESCHEDULER = ApplicationSlaSample.CriticalSmallKubeScheduler.build()", "var_name": "SAMPLE_SLA_MANAGED_BY_KUBESCHEDULER"}, {"original_string": "private static final ApplicationSlaRepresentation SAMPLE_SLA_REPRESENTATION = Representation2ModelConvertions.asRepresentation(SAMPLE_SLA);", "modifier": "private static final", "type": "ApplicationSlaRepresentation", "declarator": "SAMPLE_SLA_REPRESENTATION = Representation2ModelConvertions.asRepresentation(SAMPLE_SLA)", "var_name": "SAMPLE_SLA_REPRESENTATION"}, {"original_string": "private static final ApplicationSlaManagementService capacityManagementService = mock(ApplicationSlaManagementService.class);", "modifier": "private static final", "type": "ApplicationSlaManagementService", "declarator": "capacityManagementService = mock(ApplicationSlaManagementService.class)", "var_name": "capacityManagementService"}, {"original_string": "private static ReadOnlyJobOperations jobOperations = mock(ReadOnlyJobOperations.class);", "modifier": "private static", "type": "ReadOnlyJobOperations", "declarator": "jobOperations = mock(ReadOnlyJobOperations.class)", "var_name": "jobOperations"}, {"original_string": "private static final ApplicationSlaManagementResource restService = new ApplicationSlaManagementResource(\n            Archaius2Ext.newConfiguration(MasterConfiguration.class),\n            capacityManagementService,\n            new ReservationUsageCalculator(jobOperations, capacityManagementService)\n    );", "modifier": "private static final", "type": "ApplicationSlaManagementResource", "declarator": "restService = new ApplicationSlaManagementResource(\n            Archaius2Ext.newConfiguration(MasterConfiguration.class),\n            capacityManagementService,\n            new ReservationUsageCalculator(jobOperations, capacityManagementService)\n    )", "var_name": "restService"}, {"original_string": "@ClassRule\n    public static final JaxRsServerResource<ApplicationSlaManagementResource> jaxRsServer = JaxRsServerResource.newBuilder(restService)\n            .withProviders(new JsonMessageReaderWriter(), new TitusExceptionMapper())\n            .build();", "modifier": "@ClassRule\n    public static final", "type": "JaxRsServerResource<ApplicationSlaManagementResource>", "declarator": "jaxRsServer = JaxRsServerResource.newBuilder(restService)\n            .withProviders(new JsonMessageReaderWriter(), new TitusExceptionMapper())\n            .build()", "var_name": "jaxRsServer"}, {"original_string": "private static String baseURI;", "modifier": "private static", "type": "String", "declarator": "baseURI", "var_name": "baseURI"}, {"original_string": "private static WebTestClient testClient;", "modifier": "private static", "type": "WebTestClient", "declarator": "testClient", "var_name": "testClient"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/endpoint/v2/rest/ApplicationSlaManagementResourceTest.java"}, "test_case": {"identifier": "getNonExistingApplicationByNameFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getNonExistingApplicationByNameFails() {\n        String myMissingApp = \"myMissingApp\";\n        when(capacityManagementService.getApplicationSLA(any())).thenReturn(null);\n\n        testClient.get().uri(myMissingApp).exchange()\n                .expectStatus().isNotFound();\n\n        verify(capacityManagementService, times(1)).getApplicationSLA(myMissingApp);\n    }", "signature": "void getNonExistingApplicationByNameFails()", "full_signature": "@Test public void getNonExistingApplicationByNameFails()", "class_method_signature": "ApplicationSlaManagementResourceTest.getNonExistingApplicationByNameFails()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getApplicationSLA", "any", "isNotFound", "expectStatus", "exchange", "uri", "get", "getApplicationSLA", "verify", "times"]}, "focal_class": {"identifier": "ApplicationSlaManagementResource", "superclass": "", "interfaces": "implements ApplicationSlaManagementEndpoint", "fields": [{"original_string": "private final MasterConfiguration configuration;", "modifier": "private final", "type": "MasterConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final ApplicationSlaManagementService applicationSlaManagementService;", "modifier": "private final", "type": "ApplicationSlaManagementService", "declarator": "applicationSlaManagementService", "var_name": "applicationSlaManagementService"}, {"original_string": "private final ReservationUsageCalculator reservationUsageCalculator;", "modifier": "private final", "type": "ReservationUsageCalculator", "declarator": "reservationUsageCalculator", "var_name": "reservationUsageCalculator"}, {"original_string": "@Context\n    private HttpServletRequest httpServletRequest;", "modifier": "@Context\n    private", "type": "HttpServletRequest", "declarator": "httpServletRequest", "var_name": "httpServletRequest"}], "methods": [{"identifier": "ApplicationSlaManagementResource", "parameters": "(MasterConfiguration configuration,\n                                            ApplicationSlaManagementService applicationSlaManagementService,\n                                            ReservationUsageCalculator reservationUsageCalculator)", "modifiers": "@Inject public", "return": "", "signature": " ApplicationSlaManagementResource(MasterConfiguration configuration,\n                                            ApplicationSlaManagementService applicationSlaManagementService,\n                                            ReservationUsageCalculator reservationUsageCalculator)", "full_signature": "@Inject public  ApplicationSlaManagementResource(MasterConfiguration configuration,\n                                            ApplicationSlaManagementService applicationSlaManagementService,\n                                            ReservationUsageCalculator reservationUsageCalculator)", "class_method_signature": "ApplicationSlaManagementResource.ApplicationSlaManagementResource(MasterConfiguration configuration,\n                                            ApplicationSlaManagementService applicationSlaManagementService,\n                                            ReservationUsageCalculator reservationUsageCalculator)", "testcase": false, "constructor": true}, {"identifier": "getApplicationSLAs", "parameters": "(@QueryParam(\"extended\") boolean extended, @QueryParam(\"schedulerName\") String schedulerName)", "modifiers": "@GET @Override public", "return": "List<ApplicationSlaRepresentation>", "signature": "List<ApplicationSlaRepresentation> getApplicationSLAs(@QueryParam(\"extended\") boolean extended, @QueryParam(\"schedulerName\") String schedulerName)", "full_signature": "@GET @Override public List<ApplicationSlaRepresentation> getApplicationSLAs(@QueryParam(\"extended\") boolean extended, @QueryParam(\"schedulerName\") String schedulerName)", "class_method_signature": "ApplicationSlaManagementResource.getApplicationSLAs(@QueryParam(\"extended\") boolean extended, @QueryParam(\"schedulerName\") String schedulerName)", "testcase": false, "constructor": false}, {"identifier": "getApplicationSLA", "parameters": "(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "modifiers": "@GET @Path(\"/{applicationName}\") @Override public", "return": "ApplicationSlaRepresentation", "signature": "ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "full_signature": "@GET @Path(\"/{applicationName}\") @Override public ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "class_method_signature": "ApplicationSlaManagementResource.getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "testcase": false, "constructor": false}, {"identifier": "addApplicationSLA", "parameters": "(ApplicationSlaRepresentation applicationSLA)", "modifiers": "@POST @Override public", "return": "Response", "signature": "Response addApplicationSLA(ApplicationSlaRepresentation applicationSLA)", "full_signature": "@POST @Override public Response addApplicationSLA(ApplicationSlaRepresentation applicationSLA)", "class_method_signature": "ApplicationSlaManagementResource.addApplicationSLA(ApplicationSlaRepresentation applicationSLA)", "testcase": false, "constructor": false}, {"identifier": "updateApplicationSLA", "parameters": "(@PathParam(\"applicationName\") String applicationName,\n                                         ApplicationSlaRepresentation applicationSLA)", "modifiers": "@PUT @Path(\"/{applicationName}\") @Override public", "return": "Response", "signature": "Response updateApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                         ApplicationSlaRepresentation applicationSLA)", "full_signature": "@PUT @Path(\"/{applicationName}\") @Override public Response updateApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                         ApplicationSlaRepresentation applicationSLA)", "class_method_signature": "ApplicationSlaManagementResource.updateApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                         ApplicationSlaRepresentation applicationSLA)", "testcase": false, "constructor": false}, {"identifier": "removeApplicationSLA", "parameters": "(@PathParam(\"applicationName\") String applicationName)", "modifiers": "@DELETE @Path(\"/{applicationName}\") @Override public", "return": "Response", "signature": "Response removeApplicationSLA(@PathParam(\"applicationName\") String applicationName)", "full_signature": "@DELETE @Path(\"/{applicationName}\") @Override public Response removeApplicationSLA(@PathParam(\"applicationName\") String applicationName)", "class_method_signature": "ApplicationSlaManagementResource.removeApplicationSLA(@PathParam(\"applicationName\") String applicationName)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/endpoint/v2/rest/ApplicationSlaManagementResource.java"}, "focal_method": {"identifier": "getApplicationSLA", "parameters": "(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "modifiers": "@GET @Path(\"/{applicationName}\") @Override public", "return": "ApplicationSlaRepresentation", "body": "@GET\n    @Path(\"/{applicationName}\")\n    @Override\n    public ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended) {\n        ApplicationSLA applicationSLA = applicationSlaManagementService.getApplicationSLA(applicationName);\n        if (applicationSLA == null) {\n            throw new WebApplicationException(new IllegalArgumentException(\"SLA not defined for \" + applicationName), Status.NOT_FOUND);\n        }\n\n        String cellId = extended ? configuration.getCellName() : null;\n        ReservationUsage reservationUsage = extended ? reservationUsageCalculator.buildCapacityGroupUsage(applicationName) : null;\n\n        return asRepresentation(applicationSLA, cellId, reservationUsage);\n    }", "signature": "ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "full_signature": "@GET @Path(\"/{applicationName}\") @Override public ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "class_method_signature": "ApplicationSlaManagementResource.getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "testcase": false, "constructor": false, "invocations": ["getApplicationSLA", "getCellName", "buildCapacityGroupUsage", "asRepresentation"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}