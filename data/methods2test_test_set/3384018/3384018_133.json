{"test_class": {"identifier": "TestRfc3492Idn", "superclass": "", "interfaces": "", "fields": [], "file": "external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/client/utils/TestRfc3492Idn.java"}, "test_case": {"identifier": "testToUnicode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToUnicode() throws Exception {\n        Rfc3492Idn idn = new Rfc3492Idn();\n        // (A) Arabic\n        Assert.assertEquals(\"\\u0644\\u064A\\u0647\\u0645\\u0627\\u0628\\u062A\\u0643\\u0644\" +\n                     \"\\u0645\\u0648\\u0634\\u0639\\u0631\\u0628\\u064A\\u061F\",\n                     idn.toUnicode(\"xn--egbpdaj6bu4bxfgehfvwxn\"));\n\n        // some real-world domains\n        Assert.assertEquals(\"www.z\\u00fcrich.ch\",\n                     idn.toUnicode(\"www.xn--zrich-kva.ch\"));\n\n        Assert.assertEquals(\"www.g\\u00e4ggelig\\u00e4\\u00e4l.ch\",\n                     idn.toUnicode(\"www.xn--gggeligl-0zaga.ch\"));\n    }", "signature": "void testToUnicode()", "full_signature": "@Test public void testToUnicode()", "class_method_signature": "TestRfc3492Idn.testToUnicode()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toUnicode", "assertEquals", "toUnicode", "assertEquals", "toUnicode"]}, "focal_class": {"identifier": "Rfc3492Idn", "superclass": "", "interfaces": "implements Idn", "fields": [{"original_string": "private static final int base = 36;", "modifier": "private static final", "type": "int", "declarator": "base = 36", "var_name": "base"}, {"original_string": "private static final int tmin = 1;", "modifier": "private static final", "type": "int", "declarator": "tmin = 1", "var_name": "tmin"}, {"original_string": "private static final int tmax = 26;", "modifier": "private static final", "type": "int", "declarator": "tmax = 26", "var_name": "tmax"}, {"original_string": "private static final int skew = 38;", "modifier": "private static final", "type": "int", "declarator": "skew = 38", "var_name": "skew"}, {"original_string": "private static final int damp = 700;", "modifier": "private static final", "type": "int", "declarator": "damp = 700", "var_name": "damp"}, {"original_string": "private static final int initial_bias = 72;", "modifier": "private static final", "type": "int", "declarator": "initial_bias = 72", "var_name": "initial_bias"}, {"original_string": "private static final int initial_n = 128;", "modifier": "private static final", "type": "int", "declarator": "initial_n = 128", "var_name": "initial_n"}, {"original_string": "private static final char delimiter = '-';", "modifier": "private static final", "type": "char", "declarator": "delimiter = '-'", "var_name": "delimiter"}, {"original_string": "private static final String ACE_PREFIX = \"xn--\";", "modifier": "private static final", "type": "String", "declarator": "ACE_PREFIX = \"xn--\"", "var_name": "ACE_PREFIX"}], "methods": [{"identifier": "adapt", "parameters": "(int delta, int numpoints, boolean firsttime)", "modifiers": "private", "return": "int", "signature": "int adapt(int delta, int numpoints, boolean firsttime)", "full_signature": "private int adapt(int delta, int numpoints, boolean firsttime)", "class_method_signature": "Rfc3492Idn.adapt(int delta, int numpoints, boolean firsttime)", "testcase": false, "constructor": false}, {"identifier": "digit", "parameters": "(char c)", "modifiers": "private", "return": "int", "signature": "int digit(char c)", "full_signature": "private int digit(char c)", "class_method_signature": "Rfc3492Idn.digit(char c)", "testcase": false, "constructor": false}, {"identifier": "toUnicode", "parameters": "(String punycode)", "modifiers": "public", "return": "String", "signature": "String toUnicode(String punycode)", "full_signature": "public String toUnicode(String punycode)", "class_method_signature": "Rfc3492Idn.toUnicode(String punycode)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(String input)", "modifiers": "protected", "return": "String", "signature": "String decode(String input)", "full_signature": "protected String decode(String input)", "class_method_signature": "Rfc3492Idn.decode(String input)", "testcase": false, "constructor": false}], "file": "external_sources/httpclient-4.1.1/httpclient/src/main/java/org/apache/ogt/http/client/utils/Rfc3492Idn.java"}, "focal_method": {"identifier": "toUnicode", "parameters": "(String punycode)", "modifiers": "public", "return": "String", "body": "public String toUnicode(String punycode) {\n        StringBuilder unicode = new StringBuilder(punycode.length());\n        StringTokenizer tok = new StringTokenizer(punycode, \".\");\n        while (tok.hasMoreTokens()) {\n            String t = tok.nextToken();\n            if (unicode.length() > 0) unicode.append('.');\n            if (t.startsWith(ACE_PREFIX)) t = decode(t.substring(4));\n            unicode.append(t);\n        }\n        return unicode.toString();\n    }", "signature": "String toUnicode(String punycode)", "full_signature": "public String toUnicode(String punycode)", "class_method_signature": "Rfc3492Idn.toUnicode(String punycode)", "testcase": false, "constructor": false, "invocations": ["length", "hasMoreTokens", "nextToken", "length", "append", "startsWith", "decode", "substring", "append", "toString"]}, "repository": {"repo_id": 3384018, "url": "https://github.com/f8full/open-bixi-gpstracker", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2028, "license": "licensed"}}