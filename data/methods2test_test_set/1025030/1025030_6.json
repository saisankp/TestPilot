{"test_class": {"identifier": "PdfBoxMigrationTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final String wsdlLoc =\n                         \"/pserv-pa-pdfbox/PDFBoxMigrate?wsdl\";", "modifier": "private static final", "type": "String", "declarator": "wsdlLoc =\n                         \"/pserv-pa-pdfbox/PDFBoxMigrate?wsdl\"", "var_name": "wsdlLoc"}, {"original_string": "private Migrate dom = null;", "modifier": "private", "type": "Migrate", "declarator": "dom = null", "var_name": "dom"}, {"original_string": "private final File texttestpdf =\n        new File(\"PA/pdfbox/test/resources/text_test.pdf\");", "modifier": "private final", "type": "File", "declarator": "texttestpdf =\n        new File(\"PA/pdfbox/test/resources/text_test.pdf\")", "var_name": "texttestpdf"}, {"original_string": "private final File htmltestpdf =\n        new File(\"PA/pdfbox/test/resources/html_test.pdf\");", "modifier": "private final", "type": "File", "declarator": "htmltestpdf =\n        new File(\"PA/pdfbox/test/resources/html_test.pdf\")", "var_name": "htmltestpdf"}], "file": "services/pdfbox/src/test/java/eu/planets_project/services/migration/pdfbox/PdfBoxMigrationTest.java"}, "test_case": {"identifier": "testDescribe", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testDescribe() {\n        final ServiceDescription desc = dom.describe();\n        System.out.println(\"Recieved service description: \"\n            + desc.toXmlFormatted());\n        assertNotNull(\"The ServiceDescription should not be NULL.\", desc);\n    }", "signature": "void testDescribe()", "full_signature": "@Test public final void testDescribe()", "class_method_signature": "PdfBoxMigrationTest.testDescribe()", "testcase": true, "constructor": false, "invocations": ["describe", "println", "toXmlFormatted", "assertNotNull"]}, "focal_class": {"identifier": "PdfBoxMigration", "superclass": "", "interfaces": "implements Migrate, Serializable", "fields": [{"original_string": "private static Logger log = Logger.getLogger(PdfBoxMigration.class.getName());", "modifier": "private static", "type": "Logger", "declarator": "log = Logger.getLogger(PdfBoxMigration.class.getName())", "var_name": "log"}, {"original_string": "private static final long serialVersionUID = -1639737711901176613L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1639737711901176613L", "var_name": "serialVersionUID"}, {"original_string": "public static final String NAME = \"PdfBoxMigration\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"PdfBoxMigration\"", "var_name": "NAME"}, {"original_string": "private static URI outputformatHtml = URI.create(\"info:pronom/fmt/99\");", "modifier": "private static", "type": "URI", "declarator": "outputformatHtml = URI.create(\"info:pronom/fmt/99\")", "var_name": "outputformatHtml"}, {"original_string": "private static URI outputformatUnicode = URI.create(\"info:pronom/x-fmt/16\");", "modifier": "private static", "type": "URI", "declarator": "outputformatUnicode = URI.create(\"info:pronom/x-fmt/16\")", "var_name": "outputformatUnicode"}], "methods": [{"identifier": "migrate", "parameters": "(final DigitalObject digitalObject,\n                                       final URI inputFormat, final URI outputFormat,\n                                       final List<Parameter> parameters)", "modifiers": "public final", "return": "MigrateResult", "signature": "MigrateResult migrate(final DigitalObject digitalObject,\n                                       final URI inputFormat, final URI outputFormat,\n                                       final List<Parameter> parameters)", "full_signature": "public final MigrateResult migrate(final DigitalObject digitalObject,\n                                       final URI inputFormat, final URI outputFormat,\n                                       final List<Parameter> parameters)", "class_method_signature": "PdfBoxMigration.migrate(final DigitalObject digitalObject,\n                                       final URI inputFormat, final URI outputFormat,\n                                       final List<Parameter> parameters)", "testcase": false, "constructor": false}, {"identifier": "textMigration", "parameters": "(\n            final DigitalObject digitalObject, final ServiceReport report)", "modifiers": "private", "return": "MigrateResult", "signature": "MigrateResult textMigration(\n            final DigitalObject digitalObject, final ServiceReport report)", "full_signature": "private MigrateResult textMigration(\n            final DigitalObject digitalObject, final ServiceReport report)", "class_method_signature": "PdfBoxMigration.textMigration(\n            final DigitalObject digitalObject, final ServiceReport report)", "testcase": false, "constructor": false}, {"identifier": "htmlMigration", "parameters": "(\n            final DigitalObject digitalObject, final ServiceReport report)", "modifiers": "private", "return": "MigrateResult", "signature": "MigrateResult htmlMigration(\n            final DigitalObject digitalObject, final ServiceReport report)", "full_signature": "private MigrateResult htmlMigration(\n            final DigitalObject digitalObject, final ServiceReport report)", "class_method_signature": "PdfBoxMigration.htmlMigration(\n            final DigitalObject digitalObject, final ServiceReport report)", "testcase": false, "constructor": false}, {"identifier": "checkMigrateArgs", "parameters": "(final DigitalObject digitalObject,\n                                  final URI inputFormat, final URI outputFormat,\n                                  final ServiceReport report)", "modifiers": "private", "return": "ServiceReport", "signature": "ServiceReport checkMigrateArgs(final DigitalObject digitalObject,\n                                  final URI inputFormat, final URI outputFormat,\n                                  final ServiceReport report)", "full_signature": "private ServiceReport checkMigrateArgs(final DigitalObject digitalObject,\n                                  final URI inputFormat, final URI outputFormat,\n                                  final ServiceReport report)", "class_method_signature": "PdfBoxMigration.checkMigrateArgs(final DigitalObject digitalObject,\n                                  final URI inputFormat, final URI outputFormat,\n                                  final ServiceReport report)", "testcase": false, "constructor": false}, {"identifier": "describe", "parameters": "()", "modifiers": "public final", "return": "ServiceDescription", "signature": "ServiceDescription describe()", "full_signature": "public final ServiceDescription describe()", "class_method_signature": "PdfBoxMigration.describe()", "testcase": false, "constructor": false}, {"identifier": "fail", "parameters": "(final ServiceReport report)", "modifiers": "private", "return": "MigrateResult", "signature": "MigrateResult fail(final ServiceReport report)", "full_signature": "private MigrateResult fail(final ServiceReport report)", "class_method_signature": "PdfBoxMigration.fail(final ServiceReport report)", "testcase": false, "constructor": false}], "file": "services/pdfbox/src/main/java/eu/planets_project/services/migration/pdfbox/PdfBoxMigration.java"}, "focal_method": {"identifier": "describe", "parameters": "()", "modifiers": "public final", "return": "ServiceDescription", "body": "public final ServiceDescription describe() {\n        ServiceDescription.Builder builder =\n                new ServiceDescription.Builder(NAME, Migrate.class.getName());\n        builder.author(\"Claus Jensen <cjen@kb.dk>\");\n        builder.classname(this.getClass().getCanonicalName());\n        builder.description(\"Extracts the textual \"\n                + \"contents of pdf files and migrate it \"\n                + \"to HTML 4.0 or UTF-16 text\");\n\n        Set<URI> outputformats = new HashSet<URI>();\n        outputformats.add(outputformatUnicode);\n        outputformats.add(outputformatHtml);\n\n        FormatRegistry fm = FormatRegistryFactory.getFormatRegistry();\n        List<MigrationPath> paths =\n                MigrationPath.constructPaths(fm.getUrisForExtension(\"pdf\"),\n                        outputformats);\n\n        builder.paths(paths.toArray(new MigrationPath[]{}));\n        builder.version(\"0.1\");\n\n        return builder.build();\n    }", "signature": "ServiceDescription describe()", "full_signature": "public final ServiceDescription describe()", "class_method_signature": "PdfBoxMigration.describe()", "testcase": false, "constructor": false, "invocations": ["getName", "author", "classname", "getCanonicalName", "getClass", "description", "add", "add", "getFormatRegistry", "constructPaths", "getUrisForExtension", "paths", "toArray", "version", "build"]}, "repository": {"repo_id": 1025030, "url": "https://github.com/opf-labs/planets-suite", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 9, "size": 198462, "license": "licensed"}}