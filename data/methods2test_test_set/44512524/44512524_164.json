{"test_class": {"identifier": "LastFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper objectMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}], "file": "real-time/foxtrot/foxtrot-common/src/test/java/com/flipkart/foxtrot/common/query/datetime/LastFilterTest.java"}, "test_case": {"identifier": "testGetWindow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetWindow() throws Exception {\n        final String json = \"{\\n\" +\n                \"  \\\"operator\\\" : \\\"last\\\",\\n\" +\n                \"  \\\"duration\\\" : \\\"1h\\\"\\n\" +\n                \"}\";\n        LastFilter lastFilter = objectMapper.readValue(json, LastFilter.class);\n        TimeWindow timeWindow = lastFilter.getWindow();\n        Assert.assertTrue((timeWindow.getEndTime() - timeWindow.getStartTime()) == 3600000);\n    }", "signature": "void testGetWindow()", "full_signature": "@Test public void testGetWindow()", "class_method_signature": "LastFilterTest.testGetWindow()", "testcase": true, "constructor": false, "invocations": ["readValue", "getWindow", "assertTrue", "getEndTime", "getStartTime"]}, "focal_class": {"identifier": "LastFilter", "superclass": "extends Filter", "interfaces": "", "fields": [{"original_string": "private long currentTime;", "modifier": "private", "type": "long", "declarator": "currentTime", "var_name": "currentTime"}, {"original_string": "@NotNull\n    private Duration duration;", "modifier": "@NotNull\n    private", "type": "Duration", "declarator": "duration", "var_name": "duration"}], "methods": [{"identifier": "LastFilter", "parameters": "()", "modifiers": "public", "return": "", "signature": " LastFilter()", "full_signature": "public  LastFilter()", "class_method_signature": "LastFilter.LastFilter()", "testcase": false, "constructor": true}, {"identifier": "accept", "parameters": "(FilterVisitor visitor)", "modifiers": "@Override public", "return": "void", "signature": "void accept(FilterVisitor visitor)", "full_signature": "@Override public void accept(FilterVisitor visitor)", "class_method_signature": "LastFilter.accept(FilterVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "getCurrentTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCurrentTime()", "full_signature": "public long getCurrentTime()", "class_method_signature": "LastFilter.getCurrentTime()", "testcase": false, "constructor": false}, {"identifier": "setCurrentTime", "parameters": "(long currentTime)", "modifiers": "public", "return": "void", "signature": "void setCurrentTime(long currentTime)", "full_signature": "public void setCurrentTime(long currentTime)", "class_method_signature": "LastFilter.setCurrentTime(long currentTime)", "testcase": false, "constructor": false}, {"identifier": "getDuration", "parameters": "()", "modifiers": "public", "return": "Duration", "signature": "Duration getDuration()", "full_signature": "public Duration getDuration()", "class_method_signature": "LastFilter.getDuration()", "testcase": false, "constructor": false}, {"identifier": "setDuration", "parameters": "(Duration duration)", "modifiers": "public", "return": "void", "signature": "void setDuration(Duration duration)", "full_signature": "public void setDuration(Duration duration)", "class_method_signature": "LastFilter.setDuration(Duration duration)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object rhs)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object rhs)", "full_signature": "@Override public boolean equals(Object rhs)", "class_method_signature": "LastFilter.equals(Object rhs)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "LastFilter.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getWindow", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "TimeWindow", "signature": "TimeWindow getWindow()", "full_signature": "@JsonIgnore public TimeWindow getWindow()", "class_method_signature": "LastFilter.getWindow()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LastFilter.toString()", "testcase": false, "constructor": false}, {"identifier": "isTemporal", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isTemporal()", "full_signature": "@Override public boolean isTemporal()", "class_method_signature": "LastFilter.isTemporal()", "testcase": false, "constructor": false}], "file": "real-time/foxtrot/foxtrot-common/src/main/java/com/flipkart/foxtrot/common/query/datetime/LastFilter.java"}, "focal_method": {"identifier": "getWindow", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "TimeWindow", "body": "@JsonIgnore\n    public TimeWindow getWindow() {\n        return WindowUtil.calculate(currentTime, duration);\n    }", "signature": "TimeWindow getWindow()", "full_signature": "@JsonIgnore public TimeWindow getWindow()", "class_method_signature": "LastFilter.getWindow()", "testcase": false, "constructor": false, "invocations": ["calculate"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}