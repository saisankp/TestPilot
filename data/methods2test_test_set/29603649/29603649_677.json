{"test_class": {"identifier": "CacheCleanerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private StubConfigPathProvider pathProvider;", "modifier": "@Mock\n    private", "type": "StubConfigPathProvider", "declarator": "pathProvider", "var_name": "pathProvider"}, {"original_string": "@Mock\n    private StubConfigurationAccess configurationAccess;", "modifier": "@Mock\n    private", "type": "StubConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Mock\n    private StubResourcePathProvider stubResourcePathProvider;", "modifier": "@Mock\n    private", "type": "StubResourcePathProvider", "declarator": "stubResourcePathProvider", "var_name": "stubResourcePathProvider"}, {"original_string": "@Mock\n    private File file;", "modifier": "@Mock\n    private", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "@Mock\n    private FileFactory fileFactory;", "modifier": "@Mock\n    private", "type": "FileFactory", "declarator": "fileFactory", "var_name": "fileFactory"}, {"original_string": "@InjectMocks\n    private CacheCleaner underTest;", "modifier": "@InjectMocks\n    private", "type": "CacheCleaner", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/cache/cleaner/CacheCleanerTest.java"}, "test_case": {"identifier": "testCleanCache", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCleanCache() {\n        //GIVEN\n        List<String> filePaths = new ArrayList<>();\n        filePaths.add(\"first\");\n        filePaths.add(\"second\");\n\n        given(pathProvider.getConfigPathsFromCache(\"test/path\")).willReturn(filePaths);\n        given(fileFactory.createFile(\"first\")).willReturn(file);\n        given(fileFactory.createFile(\"second\")).willReturn(file);\n        //WHEN\n        underTest.cleanCache();\n        //THEN\n        verify(configurationAccess).setProperties();\n        verify(fileFactory).createFile(\"first\");\n        verify(fileFactory).createFile(\"second\");\n    }", "signature": "void testCleanCache()", "full_signature": "@Test public void testCleanCache()", "class_method_signature": "CacheCleanerTest.testCleanCache()", "testcase": true, "constructor": false, "invocations": ["add", "add", "willReturn", "given", "getConfigPathsFromCache", "willReturn", "given", "createFile", "willReturn", "given", "createFile", "cleanCache", "setProperties", "verify", "createFile", "verify", "createFile", "verify"]}, "focal_class": {"identifier": "CacheCleaner", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private StubConfigurationAccess configurationAccess;", "modifier": "@Autowired\n    private", "type": "StubConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Autowired\n    private StubResourcePathProvider stubResourcePathProvider;", "modifier": "@Autowired\n    private", "type": "StubResourcePathProvider", "declarator": "stubResourcePathProvider", "var_name": "stubResourcePathProvider"}, {"original_string": "@Autowired\n    private StubConfigPathProvider pathProvider;", "modifier": "@Autowired\n    private", "type": "StubConfigPathProvider", "declarator": "pathProvider", "var_name": "pathProvider"}, {"original_string": "@Autowired\n    private FileFactory fileFactory;", "modifier": "@Autowired\n    private", "type": "FileFactory", "declarator": "fileFactory", "var_name": "fileFactory"}, {"original_string": "private String cacheFolderPath;", "modifier": "private", "type": "String", "declarator": "cacheFolderPath", "var_name": "cacheFolderPath"}], "methods": [{"identifier": "cleanCache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanCache()", "full_signature": "public void cleanCache()", "class_method_signature": "CacheCleaner.cleanCache()", "testcase": false, "constructor": false}, {"identifier": "getCacheFolderPath", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void getCacheFolderPath()", "full_signature": "private void getCacheFolderPath()", "class_method_signature": "CacheCleaner.getCacheFolderPath()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/cache/cleaner/CacheCleaner.java"}, "focal_method": {"identifier": "cleanCache", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void cleanCache() {\n        getCacheFolderPath();\n        List<String> filePaths = pathProvider.getConfigPathsFromCache(cacheFolderPath);\n        for (String filePath : filePaths) {\n            File actualFile = fileFactory.createFile(filePath);\n            actualFile.delete();\n        }\n    }", "signature": "void cleanCache()", "full_signature": "public void cleanCache()", "class_method_signature": "CacheCleaner.cleanCache()", "testcase": false, "constructor": false, "invocations": ["getCacheFolderPath", "getConfigPathsFromCache", "createFile", "delete"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}