{"test_class": {"identifier": "SchemaBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NAME = \"name\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"name\"", "var_name": "NAME"}, {"original_string": "private static final Integer VERSION = 2;", "modifier": "private static final", "type": "Integer", "declarator": "VERSION = 2", "var_name": "VERSION"}, {"original_string": "private static final String DOC = \"doc\";", "modifier": "private static final", "type": "String", "declarator": "DOC = \"doc\"", "var_name": "DOC"}, {"original_string": "private static final Map<String, String> NO_PARAMS = null;", "modifier": "private static final", "type": "Map<String, String>", "declarator": "NO_PARAMS = null", "var_name": "NO_PARAMS"}], "file": "connect/api/src/test/java/org/apache/kafka/connect/data/SchemaBuilderTest.java"}, "test_case": {"identifier": "testParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParameters() {\n        Map<String, String> expectedParameters = new HashMap<>();\n        expectedParameters.put(\"foo\", \"val\");\n        expectedParameters.put(\"bar\", \"baz\");\n\n        Schema schema = SchemaBuilder.string().parameter(\"foo\", \"val\").parameter(\"bar\", \"baz\").build();\n        assertTypeAndDefault(schema, Schema.Type.STRING, false, null);\n        assertMetadata(schema, null, null, null, expectedParameters);\n\n        schema = SchemaBuilder.string().parameters(expectedParameters).build();\n        assertTypeAndDefault(schema, Schema.Type.STRING, false, null);\n        assertMetadata(schema, null, null, null, expectedParameters);\n    }", "signature": "void testParameters()", "full_signature": "@Test public void testParameters()", "class_method_signature": "SchemaBuilderTest.testParameters()", "testcase": true, "constructor": false, "invocations": ["put", "put", "build", "parameter", "parameter", "string", "assertTypeAndDefault", "assertMetadata", "build", "parameters", "string", "assertTypeAndDefault", "assertMetadata"]}, "focal_class": {"identifier": "SchemaBuilder", "superclass": "", "interfaces": "implements Schema", "fields": [{"original_string": "private static final String TYPE_FIELD = \"type\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_FIELD = \"type\"", "var_name": "TYPE_FIELD"}, {"original_string": "private static final String OPTIONAL_FIELD = \"optional\";", "modifier": "private static final", "type": "String", "declarator": "OPTIONAL_FIELD = \"optional\"", "var_name": "OPTIONAL_FIELD"}, {"original_string": "private static final String DEFAULT_FIELD = \"default\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_FIELD = \"default\"", "var_name": "DEFAULT_FIELD"}, {"original_string": "private static final String NAME_FIELD = \"name\";", "modifier": "private static final", "type": "String", "declarator": "NAME_FIELD = \"name\"", "var_name": "NAME_FIELD"}, {"original_string": "private static final String VERSION_FIELD = \"version\";", "modifier": "private static final", "type": "String", "declarator": "VERSION_FIELD = \"version\"", "var_name": "VERSION_FIELD"}, {"original_string": "private static final String DOC_FIELD = \"doc\";", "modifier": "private static final", "type": "String", "declarator": "DOC_FIELD = \"doc\"", "var_name": "DOC_FIELD"}, {"original_string": "private final Type type;", "modifier": "private final", "type": "Type", "declarator": "type", "var_name": "type"}, {"original_string": "private Boolean optional = null;", "modifier": "private", "type": "Boolean", "declarator": "optional = null", "var_name": "optional"}, {"original_string": "private Object defaultValue = null;", "modifier": "private", "type": "Object", "declarator": "defaultValue = null", "var_name": "defaultValue"}, {"original_string": "private List<Field> fields = null;", "modifier": "private", "type": "List<Field>", "declarator": "fields = null", "var_name": "fields"}, {"original_string": "private Schema keySchema = null;", "modifier": "private", "type": "Schema", "declarator": "keySchema = null", "var_name": "keySchema"}, {"original_string": "private Schema valueSchema = null;", "modifier": "private", "type": "Schema", "declarator": "valueSchema = null", "var_name": "valueSchema"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private Integer version;", "modifier": "private", "type": "Integer", "declarator": "version", "var_name": "version"}, {"original_string": "private String doc;", "modifier": "private", "type": "String", "declarator": "doc", "var_name": "doc"}, {"original_string": "private Map<String, String> parameters;", "modifier": "private", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}], "methods": [{"identifier": "SchemaBuilder", "parameters": "(Type type)", "modifiers": "private", "return": "", "signature": " SchemaBuilder(Type type)", "full_signature": "private  SchemaBuilder(Type type)", "class_method_signature": "SchemaBuilder.SchemaBuilder(Type type)", "testcase": false, "constructor": true}, {"identifier": "isOptional", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isOptional()", "full_signature": "@Override public boolean isOptional()", "class_method_signature": "SchemaBuilder.isOptional()", "testcase": false, "constructor": false}, {"identifier": "optional", "parameters": "()", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder optional()", "full_signature": "public SchemaBuilder optional()", "class_method_signature": "SchemaBuilder.optional()", "testcase": false, "constructor": false}, {"identifier": "required", "parameters": "()", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder required()", "full_signature": "public SchemaBuilder required()", "class_method_signature": "SchemaBuilder.required()", "testcase": false, "constructor": false}, {"identifier": "defaultValue", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object defaultValue()", "full_signature": "@Override public Object defaultValue()", "class_method_signature": "SchemaBuilder.defaultValue()", "testcase": false, "constructor": false}, {"identifier": "defaultValue", "parameters": "(Object value)", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder defaultValue(Object value)", "full_signature": "public SchemaBuilder defaultValue(Object value)", "class_method_signature": "SchemaBuilder.defaultValue(Object value)", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String name()", "full_signature": "@Override public String name()", "class_method_signature": "SchemaBuilder.name()", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "(String name)", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder name(String name)", "full_signature": "public SchemaBuilder name(String name)", "class_method_signature": "SchemaBuilder.name(String name)", "testcase": false, "constructor": false}, {"identifier": "version", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer version()", "full_signature": "@Override public Integer version()", "class_method_signature": "SchemaBuilder.version()", "testcase": false, "constructor": false}, {"identifier": "version", "parameters": "(Integer version)", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder version(Integer version)", "full_signature": "public SchemaBuilder version(Integer version)", "class_method_signature": "SchemaBuilder.version(Integer version)", "testcase": false, "constructor": false}, {"identifier": "doc", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String doc()", "full_signature": "@Override public String doc()", "class_method_signature": "SchemaBuilder.doc()", "testcase": false, "constructor": false}, {"identifier": "doc", "parameters": "(String doc)", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder doc(String doc)", "full_signature": "public SchemaBuilder doc(String doc)", "class_method_signature": "SchemaBuilder.doc(String doc)", "testcase": false, "constructor": false}, {"identifier": "parameters", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> parameters()", "full_signature": "@Override public Map<String, String> parameters()", "class_method_signature": "SchemaBuilder.parameters()", "testcase": false, "constructor": false}, {"identifier": "parameter", "parameters": "(String propertyName, String propertyValue)", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder parameter(String propertyName, String propertyValue)", "full_signature": "public SchemaBuilder parameter(String propertyName, String propertyValue)", "class_method_signature": "SchemaBuilder.parameter(String propertyName, String propertyValue)", "testcase": false, "constructor": false}, {"identifier": "parameters", "parameters": "(Map<String, String> props)", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder parameters(Map<String, String> props)", "full_signature": "public SchemaBuilder parameters(Map<String, String> props)", "class_method_signature": "SchemaBuilder.parameters(Map<String, String> props)", "testcase": false, "constructor": false}, {"identifier": "type", "parameters": "()", "modifiers": "@Override public", "return": "Type", "signature": "Type type()", "full_signature": "@Override public Type type()", "class_method_signature": "SchemaBuilder.type()", "testcase": false, "constructor": false}, {"identifier": "type", "parameters": "(Type type)", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder type(Type type)", "full_signature": "public static SchemaBuilder type(Type type)", "class_method_signature": "SchemaBuilder.type(Type type)", "testcase": false, "constructor": false}, {"identifier": "int8", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder int8()", "full_signature": "public static SchemaBuilder int8()", "class_method_signature": "SchemaBuilder.int8()", "testcase": false, "constructor": false}, {"identifier": "int16", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder int16()", "full_signature": "public static SchemaBuilder int16()", "class_method_signature": "SchemaBuilder.int16()", "testcase": false, "constructor": false}, {"identifier": "int32", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder int32()", "full_signature": "public static SchemaBuilder int32()", "class_method_signature": "SchemaBuilder.int32()", "testcase": false, "constructor": false}, {"identifier": "int64", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder int64()", "full_signature": "public static SchemaBuilder int64()", "class_method_signature": "SchemaBuilder.int64()", "testcase": false, "constructor": false}, {"identifier": "float32", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder float32()", "full_signature": "public static SchemaBuilder float32()", "class_method_signature": "SchemaBuilder.float32()", "testcase": false, "constructor": false}, {"identifier": "float64", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder float64()", "full_signature": "public static SchemaBuilder float64()", "class_method_signature": "SchemaBuilder.float64()", "testcase": false, "constructor": false}, {"identifier": "bool", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder bool()", "full_signature": "public static SchemaBuilder bool()", "class_method_signature": "SchemaBuilder.bool()", "testcase": false, "constructor": false}, {"identifier": "string", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder string()", "full_signature": "public static SchemaBuilder string()", "class_method_signature": "SchemaBuilder.string()", "testcase": false, "constructor": false}, {"identifier": "bytes", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder bytes()", "full_signature": "public static SchemaBuilder bytes()", "class_method_signature": "SchemaBuilder.bytes()", "testcase": false, "constructor": false}, {"identifier": "struct", "parameters": "()", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder struct()", "full_signature": "public static SchemaBuilder struct()", "class_method_signature": "SchemaBuilder.struct()", "testcase": false, "constructor": false}, {"identifier": "field", "parameters": "(String fieldName, Schema fieldSchema)", "modifiers": "public", "return": "SchemaBuilder", "signature": "SchemaBuilder field(String fieldName, Schema fieldSchema)", "full_signature": "public SchemaBuilder field(String fieldName, Schema fieldSchema)", "class_method_signature": "SchemaBuilder.field(String fieldName, Schema fieldSchema)", "testcase": false, "constructor": false}, {"identifier": "fields", "parameters": "()", "modifiers": "public", "return": "List<Field>", "signature": "List<Field> fields()", "full_signature": "public List<Field> fields()", "class_method_signature": "SchemaBuilder.fields()", "testcase": false, "constructor": false}, {"identifier": "field", "parameters": "(String fieldName)", "modifiers": "public", "return": "Field", "signature": "Field field(String fieldName)", "full_signature": "public Field field(String fieldName)", "class_method_signature": "SchemaBuilder.field(String fieldName)", "testcase": false, "constructor": false}, {"identifier": "array", "parameters": "(Schema valueSchema)", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder array(Schema valueSchema)", "full_signature": "public static SchemaBuilder array(Schema valueSchema)", "class_method_signature": "SchemaBuilder.array(Schema valueSchema)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(Schema keySchema, Schema valueSchema)", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder map(Schema keySchema, Schema valueSchema)", "full_signature": "public static SchemaBuilder map(Schema keySchema, Schema valueSchema)", "class_method_signature": "SchemaBuilder.map(Schema keySchema, Schema valueSchema)", "testcase": false, "constructor": false}, {"identifier": "keySchema", "parameters": "()", "modifiers": "@Override public", "return": "Schema", "signature": "Schema keySchema()", "full_signature": "@Override public Schema keySchema()", "class_method_signature": "SchemaBuilder.keySchema()", "testcase": false, "constructor": false}, {"identifier": "valueSchema", "parameters": "()", "modifiers": "@Override public", "return": "Schema", "signature": "Schema valueSchema()", "full_signature": "@Override public Schema valueSchema()", "class_method_signature": "SchemaBuilder.valueSchema()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "Schema", "signature": "Schema build()", "full_signature": "public Schema build()", "class_method_signature": "SchemaBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "schema", "parameters": "()", "modifiers": "@Override public", "return": "Schema", "signature": "Schema schema()", "full_signature": "@Override public Schema schema()", "class_method_signature": "SchemaBuilder.schema()", "testcase": false, "constructor": false}, {"identifier": "checkNull", "parameters": "(String fieldName, Object val)", "modifiers": "private static", "return": "void", "signature": "void checkNull(String fieldName, Object val)", "full_signature": "private static void checkNull(String fieldName, Object val)", "class_method_signature": "SchemaBuilder.checkNull(String fieldName, Object val)", "testcase": false, "constructor": false}, {"identifier": "checkNotNull", "parameters": "(String fieldName, Object val, String fieldToSet)", "modifiers": "private static", "return": "void", "signature": "void checkNotNull(String fieldName, Object val, String fieldToSet)", "full_signature": "private static void checkNotNull(String fieldName, Object val, String fieldToSet)", "class_method_signature": "SchemaBuilder.checkNotNull(String fieldName, Object val, String fieldToSet)", "testcase": false, "constructor": false}], "file": "connect/api/src/main/java/org/apache/kafka/connect/data/SchemaBuilder.java"}, "focal_method": {"identifier": "parameters", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "body": "@Override\n    public Map<String, String> parameters() {\n        return parameters == null ? null : Collections.unmodifiableMap(parameters);\n    }", "signature": "Map<String, String> parameters()", "full_signature": "@Override public Map<String, String> parameters()", "class_method_signature": "SchemaBuilder.parameters()", "testcase": false, "constructor": false, "invocations": ["unmodifiableMap"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}