{"test_class": {"identifier": "ReceiveServiceTest", "superclass": "extends BaseSpringJunitUtil", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate ReceiveService receiveService;", "modifier": "@Autowired\n\tprivate", "type": "ReceiveService", "declarator": "receiveService", "var_name": "receiveService"}], "file": "xa-receive/src/test/java/com/xinnet/xa/receive/service/ReceiveServiceTest.java"}, "test_case": {"identifier": "testSendMessageToMQ", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSendMessageToMQ() {\n\t\tMap<String, Object> paraMap = Maps.newHashMap();\n\t\tint i = 0;\n\t\twhile(true) {\n\t\t\tUserGoodsOrderDetailVo u = new  UserGoodsOrderDetailVo();\n\t\t\tu.setGoodsName(\"\u4e91\u4e3b\u673a\"+i);\n\t\t\tu.setGoodsBuyLong(\"1.00\");\n\t\t\tu.setGoodsMoney(\"2000.00\");\n\t\t\tu.setAddShopCartDateTime(new Date().toString());\n\t\t\tparaMap.put(\"goodsBuyQueue\", u);\n\t\t\treceiveService.sendMessageToMQ(paraMap);\n\t\t\tparaMap.clear();\n\t\t\ti++;\n\t\t\ttry {\n\t\t\t\tThread.sleep(1000*2);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}", "signature": "void testSendMessageToMQ()", "full_signature": "@Test public void testSendMessageToMQ()", "class_method_signature": "ReceiveServiceTest.testSendMessageToMQ()", "testcase": true, "constructor": false, "invocations": ["newHashMap", "setGoodsName", "setGoodsBuyLong", "setGoodsMoney", "setAddShopCartDateTime", "toString", "put", "sendMessageToMQ", "clear", "sleep", "printStackTrace"]}, "focal_class": {"identifier": "ReceiveService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger logger = Logger.getLogger(ReceiveService.class);", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.getLogger(ReceiveService.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\tprivate ThreadPoolTaskExecutor reciveExecutor;", "modifier": "@Autowired\n\tprivate", "type": "ThreadPoolTaskExecutor", "declarator": "reciveExecutor", "var_name": "reciveExecutor"}, {"original_string": "@Autowired\n\tprivate MessageService messageService;", "modifier": "@Autowired\n\tprivate", "type": "MessageService", "declarator": "messageService", "var_name": "messageService"}], "methods": [{"identifier": "sendMessage", "parameters": "(final Object data)", "modifiers": "public", "return": "void", "signature": "void sendMessage(final Object data)", "full_signature": "public void sendMessage(final Object data)", "class_method_signature": "ReceiveService.sendMessage(final Object data)", "testcase": false, "constructor": false}, {"identifier": "sendMessageToMQ", "parameters": "(final Map<String, Object> map)", "modifiers": "public", "return": "void", "signature": "void sendMessageToMQ(final Map<String, Object> map)", "full_signature": "public void sendMessageToMQ(final Map<String, Object> map)", "class_method_signature": "ReceiveService.sendMessageToMQ(final Map<String, Object> map)", "testcase": false, "constructor": false}, {"identifier": "getQueueName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getQueueName()", "full_signature": "private String getQueueName()", "class_method_signature": "ReceiveService.getQueueName()", "testcase": false, "constructor": false}], "file": "xa-receive/src/main/java/com/xinnet/xa/receive/service/ReceiveService.java"}, "focal_method": {"identifier": "sendMessageToMQ", "parameters": "(final Map<String, Object> map)", "modifiers": "public", "return": "void", "body": "public void sendMessageToMQ(final Map<String, Object> map){\n\t\t\n\t\tfor (final Entry<String, Object> entry : map.entrySet()) {\n\t\t\tRunnable worker = new Runnable() {\n\t\t\t\tpublic void run() {\n\t\t\t\t\tmessageService.sendObject(entry.getKey().toString(), entry.getValue());\n\t\t\t\t}\n\t\t\t};\n\t\t\treciveExecutor.execute(worker);\n\t\t}\n\t}", "signature": "void sendMessageToMQ(final Map<String, Object> map)", "full_signature": "public void sendMessageToMQ(final Map<String, Object> map)", "class_method_signature": "ReceiveService.sendMessageToMQ(final Map<String, Object> map)", "testcase": false, "constructor": false, "invocations": ["entrySet", "sendObject", "toString", "getKey", "getValue", "execute"]}, "repository": {"repo_id": 47752557, "url": "https://github.com/yanweiqi/xinnet-analysis", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 13, "size": 187, "license": "licensed"}}