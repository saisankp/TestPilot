{"test_class": {"identifier": "VersionsHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RepositoryHandler repositoryHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}, {"original_string": "private final VersionsHandler versionsHandler;", "modifier": "private final", "type": "VersionsHandler", "declarator": "versionsHandler", "var_name": "versionsHandler"}], "file": "server/src/test/java/org/axway/grapes/server/core/VersionsHandlerTest.java"}, "test_case": {"identifier": "isUpToDateOnRegularVersions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isUpToDateOnRegularVersions() throws UnknownHostException {\n        final DbArtifact artifact = new DbArtifact();\n        artifact.setGroupId(\"com.axway.tests\");\n        artifact.setArtifactId(\"artifact\");\n        final List<String> versions = new ArrayList<String>();\n        versions.add(\"0.1.0-SNAPSHOT\");\n        versions.add(\"0.1.0-SNAPSHOT\");\n        versions.add(\"1.1.0-SNAPSHOT\");\n        versions.add(\"2.0.0-SNAPSHOT\");\n        versions.add(\"2.1.0-1\");\n        versions.add(\"4.0.0-SNAPSHOT\");\n\n        when(repositoryHandler.getArtifactVersions((DbArtifact) anyObject())).thenReturn(versions);\n\n        artifact.setVersion(\"3.0.0-SNAPSHOT\");\n        assertFalse(versionsHandler.isUpToDate(artifact));\n\n        artifact.setVersion(\"2.1.0-1\");\n        assertTrue(versionsHandler.isUpToDate(artifact));\n\n        artifact.setVersion(\"4.0.0-SNAPSHOT\");\n        assertTrue(versionsHandler.isUpToDate(artifact));\n    }", "signature": "void isUpToDateOnRegularVersions()", "full_signature": "@Test public void isUpToDateOnRegularVersions()", "class_method_signature": "VersionsHandlerTest.isUpToDateOnRegularVersions()", "testcase": true, "constructor": false, "invocations": ["setGroupId", "setArtifactId", "add", "add", "add", "add", "add", "add", "thenReturn", "when", "getArtifactVersions", "anyObject", "setVersion", "assertFalse", "isUpToDate", "setVersion", "assertTrue", "isUpToDate", "setVersion", "assertTrue", "isUpToDate"]}, "focal_class": {"identifier": "VersionsHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RepositoryHandler repoHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repoHandler", "var_name": "repoHandler"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(VersionsHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(VersionsHandler.class)", "var_name": "LOG"}], "methods": [{"identifier": "VersionsHandler", "parameters": "(final RepositoryHandler repoHandler)", "modifiers": "public", "return": "", "signature": " VersionsHandler(final RepositoryHandler repoHandler)", "full_signature": "public  VersionsHandler(final RepositoryHandler repoHandler)", "class_method_signature": "VersionsHandler.VersionsHandler(final RepositoryHandler repoHandler)", "testcase": false, "constructor": true}, {"identifier": "isUpToDate", "parameters": "(final DbArtifact artifact)", "modifiers": "public", "return": "boolean", "signature": "boolean isUpToDate(final DbArtifact artifact)", "full_signature": "public boolean isUpToDate(final DbArtifact artifact)", "class_method_signature": "VersionsHandler.isUpToDate(final DbArtifact artifact)", "testcase": false, "constructor": false}, {"identifier": "getLastRelease", "parameters": "(final Collection<String> versions)", "modifiers": "public", "return": "String", "signature": "String getLastRelease(final Collection<String> versions)", "full_signature": "public String getLastRelease(final Collection<String> versions)", "class_method_signature": "VersionsHandler.getLastRelease(final Collection<String> versions)", "testcase": false, "constructor": false}, {"identifier": "getLastVersion", "parameters": "(final Collection<String> versions)", "modifiers": "public", "return": "String", "signature": "String getLastVersion(final Collection<String> versions)", "full_signature": "public String getLastVersion(final Collection<String> versions)", "class_method_signature": "VersionsHandler.getLastVersion(final Collection<String> versions)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/core/VersionsHandler.java"}, "focal_method": {"identifier": "isUpToDate", "parameters": "(final DbArtifact artifact)", "modifiers": "public", "return": "boolean", "body": "public boolean isUpToDate(final DbArtifact artifact) {\n        final List<String> versions = repoHandler.getArtifactVersions(artifact);\n        final String currentVersion = artifact.getVersion();\n\n        final String lastDevVersion = getLastVersion(versions);\n        final String lastReleaseVersion = getLastRelease(versions);\n\n        if(lastDevVersion == null || lastReleaseVersion == null) {\n            // Plain Text comparison against version \"strings\"\n            for(final String version: versions){\n                if(version.compareTo(currentVersion) > 0){\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return currentVersion.equals(lastDevVersion) || currentVersion.equals(lastReleaseVersion);\n        }\n    }", "signature": "boolean isUpToDate(final DbArtifact artifact)", "full_signature": "public boolean isUpToDate(final DbArtifact artifact)", "class_method_signature": "VersionsHandler.isUpToDate(final DbArtifact artifact)", "testcase": false, "constructor": false, "invocations": ["getArtifactVersions", "getVersion", "getLastVersion", "getLastRelease", "compareTo", "equals", "equals"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}