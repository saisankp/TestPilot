{"test_class": {"identifier": "DMNContextFEELCtxWrapperTest", "superclass": "extends BaseDMNContextTest", "interfaces": "", "fields": [], "file": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/impl/DMNContextFEELCtxWrapperTest.java"}, "test_case": {"identifier": "testPopScopeException", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void testPopScopeException() {\n        DMNContextFEELCtxWrapper ctx = new DMNContextFEELCtxWrapper(new EvaluationContextMock(Collections.emptyMap()));\n        ctx.popScope();\n    }", "signature": "void testPopScopeException()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testPopScopeException()", "class_method_signature": "DMNContextFEELCtxWrapperTest.testPopScopeException()", "testcase": true, "constructor": false, "invocations": ["emptyMap", "popScope"]}, "focal_class": {"identifier": "DMNContextFEELCtxWrapper", "superclass": "", "interfaces": "implements DMNContext", "fields": [{"original_string": "private EvaluationContext wrapped;", "modifier": "private", "type": "EvaluationContext", "declarator": "wrapped", "var_name": "wrapped"}, {"original_string": "private DMNMetadata metadata;", "modifier": "private", "type": "DMNMetadata", "declarator": "metadata", "var_name": "metadata"}], "methods": [{"identifier": "DMNContextFEELCtxWrapper", "parameters": "(EvaluationContext wrapped)", "modifiers": "public", "return": "", "signature": " DMNContextFEELCtxWrapper(EvaluationContext wrapped)", "full_signature": "public  DMNContextFEELCtxWrapper(EvaluationContext wrapped)", "class_method_signature": "DMNContextFEELCtxWrapper.DMNContextFEELCtxWrapper(EvaluationContext wrapped)", "testcase": false, "constructor": true}, {"identifier": "DMNContextFEELCtxWrapper", "parameters": "(EvaluationContext wrapped, Map<String, Object> metadata)", "modifiers": "public", "return": "", "signature": " DMNContextFEELCtxWrapper(EvaluationContext wrapped, Map<String, Object> metadata)", "full_signature": "public  DMNContextFEELCtxWrapper(EvaluationContext wrapped, Map<String, Object> metadata)", "class_method_signature": "DMNContextFEELCtxWrapper.DMNContextFEELCtxWrapper(EvaluationContext wrapped, Map<String, Object> metadata)", "testcase": false, "constructor": true}, {"identifier": "enterFrame", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void enterFrame()", "full_signature": "public void enterFrame()", "class_method_signature": "DMNContextFEELCtxWrapper.enterFrame()", "testcase": false, "constructor": false}, {"identifier": "exitFrame", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void exitFrame()", "full_signature": "public void exitFrame()", "class_method_signature": "DMNContextFEELCtxWrapper.exitFrame()", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String name, Object value)", "modifiers": "@Override public", "return": "Object", "signature": "Object set(String name, Object value)", "full_signature": "@Override public Object set(String name, Object value)", "class_method_signature": "DMNContextFEELCtxWrapper.set(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object get(String name)", "full_signature": "@Override public Object get(String name)", "class_method_signature": "DMNContextFEELCtxWrapper.get(String name)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> getAll()", "full_signature": "@Override public Map<String, Object> getAll()", "class_method_signature": "DMNContextFEELCtxWrapper.getAll()", "testcase": false, "constructor": false}, {"identifier": "isDefined", "parameters": "(String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDefined(String name)", "full_signature": "@Override public boolean isDefined(String name)", "class_method_signature": "DMNContextFEELCtxWrapper.isDefined(String name)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "@Override public", "return": "DMNMetadata", "signature": "DMNMetadata getMetadata()", "full_signature": "@Override public DMNMetadata getMetadata()", "class_method_signature": "DMNContextFEELCtxWrapper.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "DMNContext", "signature": "DMNContext clone()", "full_signature": "@Override public DMNContext clone()", "class_method_signature": "DMNContextFEELCtxWrapper.clone()", "testcase": false, "constructor": false}, {"identifier": "pushScope", "parameters": "(String name, String namespace)", "modifiers": "@Override public", "return": "void", "signature": "void pushScope(String name, String namespace)", "full_signature": "@Override public void pushScope(String name, String namespace)", "class_method_signature": "DMNContextFEELCtxWrapper.pushScope(String name, String namespace)", "testcase": false, "constructor": false}, {"identifier": "popScope", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void popScope()", "full_signature": "@Override public void popScope()", "class_method_signature": "DMNContextFEELCtxWrapper.popScope()", "testcase": false, "constructor": false}, {"identifier": "scopeNamespace", "parameters": "()", "modifiers": "@Override public", "return": "Optional<String>", "signature": "Optional<String> scopeNamespace()", "full_signature": "@Override public Optional<String> scopeNamespace()", "class_method_signature": "DMNContextFEELCtxWrapper.scopeNamespace()", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFEELCtxWrapper.java"}, "focal_method": {"identifier": "popScope", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void popScope() {\n        throw new UnsupportedOperationException();\n    }", "signature": "void popScope()", "full_signature": "@Override public void popScope()", "class_method_signature": "DMNContextFEELCtxWrapper.popScope()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}