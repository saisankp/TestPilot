{"test_class": {"identifier": "DANameFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TOTO = \"toto\";", "modifier": "private static final", "type": "String", "declarator": "TOTO = \"toto\"", "var_name": "TOTO"}], "file": "core-parent/model/src/test/java/fr/javatronic/damapping/processor/model/factory/DANameFactoryTest.java"}, "test_case": {"identifier": "voidName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void voidName() throws Exception {\n    assertThat(DANameFactory.voidDAName().getName()).isEqualTo(\"void\");\n  }", "signature": "void voidName()", "full_signature": "@Test public void voidName()", "class_method_signature": "DANameFactoryTest.voidName()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getName", "voidDAName"]}, "focal_class": {"identifier": "DANameFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DAName WILCARD = from(DAType.GENERIC_WILDCARD_SIMPLE_NAME);", "modifier": "private static final", "type": "DAName", "declarator": "WILCARD = from(DAType.GENERIC_WILDCARD_SIMPLE_NAME)", "var_name": "WILCARD"}, {"original_string": "private static final DAName VOID = from(DATypeKind.VOID.name().toLowerCase());", "modifier": "private static final", "type": "DAName", "declarator": "VOID = from(DATypeKind.VOID.name().toLowerCase())", "var_name": "VOID"}], "methods": [{"identifier": "DANameFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " DANameFactory()", "full_signature": "private  DANameFactory()", "class_method_signature": "DANameFactory.DANameFactory()", "testcase": false, "constructor": true}, {"identifier": "from", "parameters": "(@Nonnull String string)", "modifiers": "@Nonnull public static", "return": "DANameImpl", "signature": "DANameImpl from(@Nonnull String string)", "full_signature": "@Nonnull public static DANameImpl from(@Nonnull String string)", "class_method_signature": "DANameFactory.from(@Nonnull String string)", "testcase": false, "constructor": false}, {"identifier": "fromPrimitiveKind", "parameters": "(@Nonnull DATypeKind kind)", "modifiers": "@Nonnull public static", "return": "DAName", "signature": "DAName fromPrimitiveKind(@Nonnull DATypeKind kind)", "full_signature": "@Nonnull public static DAName fromPrimitiveKind(@Nonnull DATypeKind kind)", "class_method_signature": "DANameFactory.fromPrimitiveKind(@Nonnull DATypeKind kind)", "testcase": false, "constructor": false}, {"identifier": "simpleFromQualified", "parameters": "(@Nonnull DAName daName)", "modifiers": "@Nonnull public static", "return": "DAName", "signature": "DAName simpleFromQualified(@Nonnull DAName daName)", "full_signature": "@Nonnull public static DAName simpleFromQualified(@Nonnull DAName daName)", "class_method_signature": "DANameFactory.simpleFromQualified(@Nonnull DAName daName)", "testcase": false, "constructor": false}, {"identifier": "simpleFromQualified", "parameters": "(@Nonnull String qualifiedName)", "modifiers": "@Nonnull public static", "return": "DAName", "signature": "DAName simpleFromQualified(@Nonnull String qualifiedName)", "full_signature": "@Nonnull public static DAName simpleFromQualified(@Nonnull String qualifiedName)", "class_method_signature": "DANameFactory.simpleFromQualified(@Nonnull String qualifiedName)", "testcase": false, "constructor": false}, {"identifier": "packageNameFromQualified", "parameters": "(@Nullable DAName qualifiedName)", "modifiers": "@Nullable public static", "return": "DAName", "signature": "DAName packageNameFromQualified(@Nullable DAName qualifiedName)", "full_signature": "@Nullable public static DAName packageNameFromQualified(@Nullable DAName qualifiedName)", "class_method_signature": "DANameFactory.packageNameFromQualified(@Nullable DAName qualifiedName)", "testcase": false, "constructor": false}, {"identifier": "wildcard", "parameters": "()", "modifiers": "@Nonnull public static", "return": "DAName", "signature": "DAName wildcard()", "full_signature": "@Nonnull public static DAName wildcard()", "class_method_signature": "DANameFactory.wildcard()", "testcase": false, "constructor": false}, {"identifier": "voidDAName", "parameters": "()", "modifiers": "@Nonnull public static", "return": "DAName", "signature": "DAName voidDAName()", "full_signature": "@Nonnull public static DAName voidDAName()", "class_method_signature": "DANameFactory.voidDAName()", "testcase": false, "constructor": false}], "file": "core-parent/model/src/main/java/fr/javatronic/damapping/processor/model/factory/DANameFactory.java"}, "focal_method": {"identifier": "voidDAName", "parameters": "()", "modifiers": "@Nonnull public static", "return": "DAName", "body": "@Nonnull\n  public static DAName voidDAName() {\n    return VOID;\n  }", "signature": "DAName voidDAName()", "full_signature": "@Nonnull public static DAName voidDAName()", "class_method_signature": "DANameFactory.voidDAName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14714017, "url": "https://github.com/lesaint/damapping", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 14, "size": 4324, "license": "licensed"}}