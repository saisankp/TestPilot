{"test_class": {"identifier": "ColumnDatabaseAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ID = 5;", "modifier": "private static final", "type": "int", "declarator": "ID = 5", "var_name": "ID"}, {"original_string": "private static final int TYPE = ReceiptColumnDefinitions.ActualDefinition.NAME.getColumnType();", "modifier": "private static final", "type": "int", "declarator": "TYPE = ReceiptColumnDefinitions.ActualDefinition.NAME.getColumnType()", "var_name": "TYPE"}, {"original_string": "private static final long CUSTOM_ORDER_ID = 10;", "modifier": "private static final", "type": "long", "declarator": "CUSTOM_ORDER_ID = 10", "var_name": "CUSTOM_ORDER_ID"}, {"original_string": "private static final UUID COLUMN_UUID = UUID.randomUUID();", "modifier": "private static final", "type": "UUID", "declarator": "COLUMN_UUID = UUID.randomUUID()", "var_name": "COLUMN_UUID"}, {"original_string": "ColumnDatabaseAdapter columnDatabaseAdapter;", "modifier": "", "type": "ColumnDatabaseAdapter", "declarator": "columnDatabaseAdapter", "var_name": "columnDatabaseAdapter"}, {"original_string": "@Mock\n    Cursor cursor;", "modifier": "@Mock", "type": "Cursor", "declarator": "cursor", "var_name": "cursor"}, {"original_string": "@Mock\n    Column<Receipt> column;", "modifier": "@Mock", "type": "Column<Receipt>", "declarator": "column", "var_name": "column"}, {"original_string": "@Mock\n    ReportResourcesManager reportResourcesManager;", "modifier": "@Mock", "type": "ReportResourcesManager", "declarator": "reportResourcesManager", "var_name": "reportResourcesManager"}, {"original_string": "@Mock\n    UserPreferenceManager preferences;", "modifier": "@Mock", "type": "UserPreferenceManager", "declarator": "preferences", "var_name": "preferences"}, {"original_string": "@Mock\n    DateFormatter dateFormatter;", "modifier": "@Mock", "type": "DateFormatter", "declarator": "dateFormatter", "var_name": "dateFormatter"}, {"original_string": "@Mock\n    SyncStateAdapter syncStateAdapter;", "modifier": "@Mock", "type": "SyncStateAdapter", "declarator": "syncStateAdapter", "var_name": "syncStateAdapter"}, {"original_string": "@Mock\n    SyncState syncState, getSyncState;", "modifier": "@Mock", "type": "SyncState", "declarator": "syncState", "var_name": "syncState"}, {"original_string": "Column<Receipt> receiptNameColumn;", "modifier": "", "type": "Column<Receipt>", "declarator": "receiptNameColumn", "var_name": "receiptNameColumn"}], "file": "app/src/test/java/co/smartreceipts/android/persistence/database/tables/adapters/ColumnDatabaseAdapterTest.java"}, "test_case": {"identifier": "build", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void build() throws Exception {\n        assertEquals(receiptNameColumn, columnDatabaseAdapter.build(column, ID, COLUMN_UUID, mock(DatabaseOperationMetadata.class)));\n        assertEquals(receiptNameColumn.getSyncState(), columnDatabaseAdapter.build(column, ID, COLUMN_UUID, mock(DatabaseOperationMetadata.class)).getSyncState());\n    }", "signature": "void build()", "full_signature": "@Test public void build()", "class_method_signature": "ColumnDatabaseAdapterTest.build()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "build", "mock", "assertEquals", "getSyncState", "getSyncState", "build", "mock"]}, "focal_class": {"identifier": "ColumnDatabaseAdapter", "superclass": "", "interfaces": "implements DatabaseAdapter<Column<Receipt>>", "fields": [{"original_string": "private final ColumnDefinitions<Receipt> mReceiptColumnDefinitions;", "modifier": "private final", "type": "ColumnDefinitions<Receipt>", "declarator": "mReceiptColumnDefinitions", "var_name": "mReceiptColumnDefinitions"}, {"original_string": "private final SyncStateAdapter mSyncStateAdapter;", "modifier": "private final", "type": "SyncStateAdapter", "declarator": "mSyncStateAdapter", "var_name": "mSyncStateAdapter"}], "methods": [{"identifier": "ColumnDatabaseAdapter", "parameters": "(@NonNull ColumnDefinitions<Receipt> receiptColumnDefinitions)", "modifiers": "public", "return": "", "signature": " ColumnDatabaseAdapter(@NonNull ColumnDefinitions<Receipt> receiptColumnDefinitions)", "full_signature": "public  ColumnDatabaseAdapter(@NonNull ColumnDefinitions<Receipt> receiptColumnDefinitions)", "class_method_signature": "ColumnDatabaseAdapter.ColumnDatabaseAdapter(@NonNull ColumnDefinitions<Receipt> receiptColumnDefinitions)", "testcase": false, "constructor": true}, {"identifier": "ColumnDatabaseAdapter", "parameters": "(@NonNull ColumnDefinitions<Receipt> receiptColumnDefinitions, @NonNull SyncStateAdapter syncStateAdapter)", "modifiers": "public", "return": "", "signature": " ColumnDatabaseAdapter(@NonNull ColumnDefinitions<Receipt> receiptColumnDefinitions, @NonNull SyncStateAdapter syncStateAdapter)", "full_signature": "public  ColumnDatabaseAdapter(@NonNull ColumnDefinitions<Receipt> receiptColumnDefinitions, @NonNull SyncStateAdapter syncStateAdapter)", "class_method_signature": "ColumnDatabaseAdapter.ColumnDatabaseAdapter(@NonNull ColumnDefinitions<Receipt> receiptColumnDefinitions, @NonNull SyncStateAdapter syncStateAdapter)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "(@NonNull Cursor cursor)", "modifiers": "@NonNull @Override public", "return": "Column<Receipt>", "signature": "Column<Receipt> read(@NonNull Cursor cursor)", "full_signature": "@NonNull @Override public Column<Receipt> read(@NonNull Cursor cursor)", "class_method_signature": "ColumnDatabaseAdapter.read(@NonNull Cursor cursor)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(@NonNull Column<Receipt> column, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@NonNull @Override public", "return": "ContentValues", "signature": "ContentValues write(@NonNull Column<Receipt> column, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@NonNull @Override public ContentValues write(@NonNull Column<Receipt> column, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "ColumnDatabaseAdapter.write(@NonNull Column<Receipt> column, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@NonNull @Override public", "return": "Column<Receipt>", "signature": "Column<Receipt> build(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@NonNull @Override public Column<Receipt> build(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "ColumnDatabaseAdapter.build(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/persistence/database/tables/adapters/ColumnDatabaseAdapter.java"}, "focal_method": {"identifier": "build", "parameters": "(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@NonNull @Override public", "return": "Column<Receipt>", "body": "@NonNull\n    @Override\n    public Column<Receipt> build(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata) {\n        return new ColumnBuilderFactory<>(mReceiptColumnDefinitions)\n                .setColumnId(primaryKey)\n                .setColumnUuid(uuid)\n                .setColumnType(column.getType())\n                .setSyncState(mSyncStateAdapter.get(column.getSyncState(), databaseOperationMetadata))\n                .setCustomOrderId(column.getCustomOrderId())\n                .build();\n    }", "signature": "Column<Receipt> build(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@NonNull @Override public Column<Receipt> build(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "ColumnDatabaseAdapter.build(@NonNull Column<Receipt> column, int primaryKey, @NonNull UUID uuid, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false, "invocations": ["build", "setCustomOrderId", "setSyncState", "setColumnType", "setColumnUuid", "setColumnId", "getType", "get", "getSyncState", "getCustomOrderId"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}