{"test_class": {"identifier": "TestDiscreteInterval", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Random random = new Random();", "modifier": "private", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}], "file": "jrugged-core/src/test/java/org/fishwife/jrugged/interval/TestDiscreteInterval.java"}, "test_case": {"identifier": "hashCodesOfUnequalIntervalsAreEqual", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void hashCodesOfUnequalIntervalsAreEqual() {\n        DiscreteInterval i1 = new DiscreteInterval(1,6);\n        DiscreteInterval i2 = new DiscreteInterval(2,3);\n        assertFalse(i1.hashCode() == i2.hashCode());\n    }", "signature": "void hashCodesOfUnequalIntervalsAreEqual()", "full_signature": "@Test public void hashCodesOfUnequalIntervalsAreEqual()", "class_method_signature": "TestDiscreteInterval.hashCodesOfUnequalIntervalsAreEqual()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "hashCode", "hashCode"]}, "focal_class": {"identifier": "DiscreteInterval", "superclass": "", "interfaces": "", "fields": [{"original_string": "final private long min;", "modifier": "final private", "type": "long", "declarator": "min", "var_name": "min"}, {"original_string": "final private long max;", "modifier": "final private", "type": "long", "declarator": "max", "var_name": "max"}], "methods": [{"identifier": "DiscreteInterval", "parameters": "(long min, long max)", "modifiers": "public", "return": "", "signature": " DiscreteInterval(long min, long max)", "full_signature": "public  DiscreteInterval(long min, long max)", "class_method_signature": "DiscreteInterval.DiscreteInterval(long min, long max)", "testcase": false, "constructor": true}, {"identifier": "getMin", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMin()", "full_signature": "public long getMin()", "class_method_signature": "DiscreteInterval.getMin()", "testcase": false, "constructor": false}, {"identifier": "getMax", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMax()", "full_signature": "public long getMax()", "class_method_signature": "DiscreteInterval.getMax()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long size()", "full_signature": "public long size()", "class_method_signature": "DiscreteInterval.size()", "testcase": false, "constructor": false}, {"identifier": "plus", "parameters": "(DiscreteInterval other)", "modifiers": "public", "return": "DiscreteInterval", "signature": "DiscreteInterval plus(DiscreteInterval other)", "full_signature": "public DiscreteInterval plus(DiscreteInterval other)", "class_method_signature": "DiscreteInterval.plus(DiscreteInterval other)", "testcase": false, "constructor": false}, {"identifier": "negate", "parameters": "()", "modifiers": "public", "return": "DiscreteInterval", "signature": "DiscreteInterval negate()", "full_signature": "public DiscreteInterval negate()", "class_method_signature": "DiscreteInterval.negate()", "testcase": false, "constructor": false}, {"identifier": "minus", "parameters": "(DiscreteInterval other)", "modifiers": "public", "return": "DiscreteInterval", "signature": "DiscreteInterval minus(DiscreteInterval other)", "full_signature": "public DiscreteInterval minus(DiscreteInterval other)", "class_method_signature": "DiscreteInterval.minus(DiscreteInterval other)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(DiscreteInterval other)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(DiscreteInterval other)", "full_signature": "public boolean contains(DiscreteInterval other)", "class_method_signature": "DiscreteInterval.contains(DiscreteInterval other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DiscreteInterval.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DiscreteInterval.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "DiscreteInterval.equals(Object obj)", "testcase": false, "constructor": false}], "file": "jrugged-core/src/main/java/org/fishwife/jrugged/interval/DiscreteInterval.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + (int) (max ^ (max >>> 32));\n        result = prime * result + (int) (min ^ (min >>> 32));\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DiscreteInterval.hashCode()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}