{"test_class": {"identifier": "CurrencyUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "trading-common/src/test/java/fr/ymanvieu/trading/common/symbol/util/CurrencyUtilsTest.java"}, "test_case": {"identifier": "testCountryFlagForCurrency", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCountryFlagForCurrency() {\n\t\tassertThat(CurrencyUtils.countryFlagForCurrency(USD)).isEqualTo(\"us\");\n\t\tassertThat(CurrencyUtils.countryFlagForCurrency(EUR)).isEqualTo(\"europeanunion\");\n\t\tassertThat(CurrencyUtils.countryFlagForCurrency(\"RUB\")).isEqualTo(\"ru\");\n\t\tassertThat(CurrencyUtils.countryFlagForCurrency(GBP)).isEqualTo(\"gb\");\n\t\tassertThat(CurrencyUtils.countryFlagForCurrency(CHF)).isEqualTo(\"ch\");\n\t\tassertThat(CurrencyUtils.countryFlagForCurrency(\"XAU\")).isEqualTo(\"gold\");\n\t\tassertThat(CurrencyUtils.countryFlagForCurrency(\"TOTO\")).isNull();\n\t}", "signature": "void testCountryFlagForCurrency()", "full_signature": "@Test public void testCountryFlagForCurrency()", "class_method_signature": "CurrencyUtilsTest.testCountryFlagForCurrency()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "countryFlagForCurrency", "isEqualTo", "assertThat", "countryFlagForCurrency", "isEqualTo", "assertThat", "countryFlagForCurrency", "isEqualTo", "assertThat", "countryFlagForCurrency", "isEqualTo", "assertThat", "countryFlagForCurrency", "isEqualTo", "assertThat", "countryFlagForCurrency", "isNull", "assertThat", "countryFlagForCurrency"]}, "focal_class": {"identifier": "CurrencyUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String EUR = \"EUR\";", "modifier": "public static final", "type": "String", "declarator": "EUR = \"EUR\"", "var_name": "EUR"}, {"original_string": "public static final String USD = \"USD\";", "modifier": "public static final", "type": "String", "declarator": "USD = \"USD\"", "var_name": "USD"}, {"original_string": "public static final String GBP = \"GBP\";", "modifier": "public static final", "type": "String", "declarator": "GBP = \"GBP\"", "var_name": "GBP"}, {"original_string": "public static final String CHF = \"CHF\";", "modifier": "public static final", "type": "String", "declarator": "CHF = \"CHF\"", "var_name": "CHF"}, {"original_string": "private static final Map<String, String> COMMODITIES = new HashMap<>();", "modifier": "private static final", "type": "Map<String, String>", "declarator": "COMMODITIES = new HashMap<>()", "var_name": "COMMODITIES"}], "methods": [{"identifier": "countryCodesForCurrency", "parameters": "(String currency)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> countryCodesForCurrency(String currency)", "full_signature": "private static List<String> countryCodesForCurrency(String currency)", "class_method_signature": "CurrencyUtils.countryCodesForCurrency(String currency)", "testcase": false, "constructor": false}, {"identifier": "currencyFromCode", "parameters": "(String currency)", "modifiers": "private static", "return": "Currency", "signature": "Currency currencyFromCode(String currency)", "full_signature": "private static Currency currencyFromCode(String currency)", "class_method_signature": "CurrencyUtils.currencyFromCode(String currency)", "testcase": false, "constructor": false}, {"identifier": "countryFlagForCurrency", "parameters": "(String c)", "modifiers": "public static", "return": "String", "signature": "String countryFlagForCurrency(String c)", "full_signature": "public static String countryFlagForCurrency(String c)", "class_method_signature": "CurrencyUtils.countryFlagForCurrency(String c)", "testcase": false, "constructor": false}, {"identifier": "nameForCurrency", "parameters": "(String currency)", "modifiers": "public static", "return": "String", "signature": "String nameForCurrency(String currency)", "full_signature": "public static String nameForCurrency(String currency)", "class_method_signature": "CurrencyUtils.nameForCurrency(String currency)", "testcase": false, "constructor": false}], "file": "trading-common/src/main/java/fr/ymanvieu/trading/common/symbol/util/CurrencyUtils.java"}, "focal_method": {"identifier": "countryFlagForCurrency", "parameters": "(String c)", "modifiers": "public static", "return": "String", "body": "public static String countryFlagForCurrency(String c) {\n\t\tif (EUR.equals(c)) {\n\t\t\treturn \"europeanunion\";\n\t\t} else if (USD.equals(c)) {\n\t\t\treturn \"us\";\n\t\t}\n\n\t\tString commodityCode = COMMODITIES.get(c);\n\n\t\tif (commodityCode != null) {\n\t\t\treturn commodityCode;\n\t\t}\n\n\t\tList<String> codes = countryCodesForCurrency(c);\n\n\t\tif (!codes.isEmpty()) {\n\t\t\tCollections.sort(codes);\n\t\t\tString code = codes.get(0);\n\t\t\treturn code.toLowerCase();\n\t\t}\n\n\t\treturn null;\n\t}", "signature": "String countryFlagForCurrency(String c)", "full_signature": "public static String countryFlagForCurrency(String c)", "class_method_signature": "CurrencyUtils.countryFlagForCurrency(String c)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "get", "countryCodesForCurrency", "isEmpty", "sort", "get", "toLowerCase"]}, "repository": {"repo_id": 51700398, "url": "https://github.com/ymanvieu/trading", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 988, "license": "licensed"}}