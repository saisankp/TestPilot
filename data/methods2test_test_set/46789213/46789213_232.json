{"test_class": {"identifier": "BasicNumericContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BasicNumericContext context;", "modifier": "private", "type": "BasicNumericContext", "declarator": "context", "var_name": "context"}, {"original_string": "private int maxBitLength = 16;", "modifier": "private", "type": "int", "declarator": "maxBitLength = 16", "var_name": "maxBitLength"}, {"original_string": "private int myId = 2;", "modifier": "private", "type": "int", "declarator": "myId = 2", "var_name": "myId"}, {"original_string": "private int noOfParties = 2;", "modifier": "private", "type": "int", "declarator": "noOfParties = 2", "var_name": "noOfParties"}, {"original_string": "private FieldDefinition fieldDefinition = mock(FieldDefinition.class);", "modifier": "private", "type": "FieldDefinition", "declarator": "fieldDefinition = mock(FieldDefinition.class)", "var_name": "fieldDefinition"}, {"original_string": "private int precision = 32;", "modifier": "private", "type": "int", "declarator": "precision = 32", "var_name": "precision"}], "file": "core/src/test/java/dk/alexandra/fresco/lib/field/integer/BasicNumericContextTest.java"}, "test_case": {"identifier": "getMaxBitLength", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getMaxBitLength() {\n    Assert.assertEquals(context.getMaxBitLength(), maxBitLength);\n  }", "signature": "void getMaxBitLength()", "full_signature": "@Test public void getMaxBitLength()", "class_method_signature": "BasicNumericContextTest.getMaxBitLength()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getMaxBitLength"]}, "focal_class": {"identifier": "BasicNumericContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int maxBitLength;", "modifier": "private final", "type": "int", "declarator": "maxBitLength", "var_name": "maxBitLength"}, {"original_string": "private final int myId;", "modifier": "private final", "type": "int", "declarator": "myId", "var_name": "myId"}, {"original_string": "private final int noOfParties;", "modifier": "private final", "type": "int", "declarator": "noOfParties", "var_name": "noOfParties"}, {"original_string": "private final FieldDefinition fieldDefinition;", "modifier": "private final", "type": "FieldDefinition", "declarator": "fieldDefinition", "var_name": "fieldDefinition"}, {"original_string": "private final int defaultFixedPointPrecision;", "modifier": "private final", "type": "int", "declarator": "defaultFixedPointPrecision", "var_name": "defaultFixedPointPrecision"}], "methods": [{"identifier": "BasicNumericContext", "parameters": "(int maxBitLength, int myId, int noOfParties,\n      FieldDefinition fieldDefinition, int defaultFixedPointPrecision)", "modifiers": "public", "return": "", "signature": " BasicNumericContext(int maxBitLength, int myId, int noOfParties,\n      FieldDefinition fieldDefinition, int defaultFixedPointPrecision)", "full_signature": "public  BasicNumericContext(int maxBitLength, int myId, int noOfParties,\n      FieldDefinition fieldDefinition, int defaultFixedPointPrecision)", "class_method_signature": "BasicNumericContext.BasicNumericContext(int maxBitLength, int myId, int noOfParties,\n      FieldDefinition fieldDefinition, int defaultFixedPointPrecision)", "testcase": false, "constructor": true}, {"identifier": "getMaxBitLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxBitLength()", "full_signature": "public int getMaxBitLength()", "class_method_signature": "BasicNumericContext.getMaxBitLength()", "testcase": false, "constructor": false}, {"identifier": "getFieldDefinition", "parameters": "()", "modifiers": "public", "return": "FieldDefinition", "signature": "FieldDefinition getFieldDefinition()", "full_signature": "public FieldDefinition getFieldDefinition()", "class_method_signature": "BasicNumericContext.getFieldDefinition()", "testcase": false, "constructor": false}, {"identifier": "getModulus", "parameters": "()", "modifiers": "public", "return": "BigInteger", "signature": "BigInteger getModulus()", "full_signature": "public BigInteger getModulus()", "class_method_signature": "BasicNumericContext.getModulus()", "testcase": false, "constructor": false}, {"identifier": "getMyId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMyId()", "full_signature": "public int getMyId()", "class_method_signature": "BasicNumericContext.getMyId()", "testcase": false, "constructor": false}, {"identifier": "getNoOfParties", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNoOfParties()", "full_signature": "public int getNoOfParties()", "class_method_signature": "BasicNumericContext.getNoOfParties()", "testcase": false, "constructor": false}, {"identifier": "getDefaultFixedPointPrecision", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDefaultFixedPointPrecision()", "full_signature": "public int getDefaultFixedPointPrecision()", "class_method_signature": "BasicNumericContext.getDefaultFixedPointPrecision()", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/lib/field/integer/BasicNumericContext.java"}, "focal_method": {"identifier": "getMaxBitLength", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getMaxBitLength() {\n    return this.maxBitLength;\n  }", "signature": "int getMaxBitLength()", "full_signature": "public int getMaxBitLength()", "class_method_signature": "BasicNumericContext.getMaxBitLength()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}