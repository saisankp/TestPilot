{"test_class": {"identifier": "EdKeyAnalyzerTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/eddsa/EdKeyAnalyzerTest.java"}, "test_case": {"identifier": "success_IsKeyCompressed_Curve448", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_IsKeyCompressed_Curve448() {\n        EdKeyAnalyzer analyzer = new EdKeyAnalyzer(Curve448.getInstance());\n\n        boolean isCompressed = analyzer.isKeyCompressed(PublicKey.fromHexString(\n                \"5fd7449b59b461fd2ce787ec616ad46a\" +\n                        \"1da1342485a70e1f8a0ea75d80e96778\" +\n                        \"edf124769b46c7061bd6783df1e50f6c\" +\n                        \"d1fa1abeafe8256180\"));\n\n        assertThat(isCompressed, is(true));\n    }", "signature": "void success_IsKeyCompressed_Curve448()", "full_signature": "@Test public void success_IsKeyCompressed_Curve448()", "class_method_signature": "EdKeyAnalyzerTest.success_IsKeyCompressed_Curve448()", "testcase": true, "constructor": false, "invocations": ["getInstance", "isKeyCompressed", "fromHexString", "assertThat", "is"]}, "focal_class": {"identifier": "EdKeyAnalyzer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Curve curve;", "modifier": "private final", "type": "Curve", "declarator": "curve", "var_name": "curve"}], "methods": [{"identifier": "EdKeyAnalyzer", "parameters": "(Curve curve)", "modifiers": "", "return": "", "signature": " EdKeyAnalyzer(Curve curve)", "full_signature": "  EdKeyAnalyzer(Curve curve)", "class_method_signature": "EdKeyAnalyzer.EdKeyAnalyzer(Curve curve)", "testcase": false, "constructor": true}, {"identifier": "isKeyCompressed", "parameters": "(PublicKey publicKey)", "modifiers": "public", "return": "boolean", "signature": "boolean isKeyCompressed(PublicKey publicKey)", "full_signature": "public boolean isKeyCompressed(PublicKey publicKey)", "class_method_signature": "EdKeyAnalyzer.isKeyCompressed(PublicKey publicKey)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/eddsa/EdKeyAnalyzer.java"}, "focal_method": {"identifier": "isKeyCompressed", "parameters": "(PublicKey publicKey)", "modifiers": "public", "return": "boolean", "body": "public boolean isKeyCompressed(PublicKey publicKey) {\n        return publicKey.getRaw().length == curve.getPublicKeyByteLength();\n    }", "signature": "boolean isKeyCompressed(PublicKey publicKey)", "full_signature": "public boolean isKeyCompressed(PublicKey publicKey)", "class_method_signature": "EdKeyAnalyzer.isKeyCompressed(PublicKey publicKey)", "testcase": false, "constructor": false, "invocations": ["getRaw", "getPublicKeyByteLength"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}