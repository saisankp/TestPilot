{"test_class": {"identifier": "SeasonalDummiesTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/tstoolkit/timeseries/regression/SeasonalDummiesTest.java"}, "test_case": {"identifier": "tesSum", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tesSum() {\n        SeasonalDummies ds=new SeasonalDummies(TsFrequency.Monthly);\n        TsDomain domain =new TsDomain(TsFrequency.Monthly, 1980, 3, 120);\n        \n        Matrix M=new Matrix(120, 11);\n        ds.data(domain, M.columnList());\n        assertTrue(Math.abs(M.sum())<1e-9 );\n        \n    }", "signature": "void tesSum()", "full_signature": "@Test public void tesSum()", "class_method_signature": "SeasonalDummiesTest.tesSum()", "testcase": true, "constructor": false, "invocations": ["data", "columnList", "assertTrue", "abs", "sum"]}, "focal_class": {"identifier": "SeasonalDummies", "superclass": "", "interfaces": "implements ITsVariable", "fields": [{"original_string": "TsFrequency freq_;", "modifier": "", "type": "TsFrequency", "declarator": "freq_", "var_name": "freq_"}], "methods": [{"identifier": "SeasonalDummies", "parameters": "(TsFrequency freq)", "modifiers": "public", "return": "", "signature": " SeasonalDummies(TsFrequency freq)", "full_signature": "public  SeasonalDummies(TsFrequency freq)", "class_method_signature": "SeasonalDummies.SeasonalDummies(TsFrequency freq)", "testcase": false, "constructor": true}, {"identifier": "data", "parameters": "(TsDomain domain, List<DataBlock> data)", "modifiers": "@Override public", "return": "void", "signature": "void data(TsDomain domain, List<DataBlock> data)", "full_signature": "@Override public void data(TsDomain domain, List<DataBlock> data)", "class_method_signature": "SeasonalDummies.data(TsDomain domain, List<DataBlock> data)", "testcase": false, "constructor": false}, {"identifier": "getDefinitionDomain", "parameters": "()", "modifiers": "@Override public", "return": "TsDomain", "signature": "TsDomain getDefinitionDomain()", "full_signature": "@Override public TsDomain getDefinitionDomain()", "class_method_signature": "SeasonalDummies.getDefinitionDomain()", "testcase": false, "constructor": false}, {"identifier": "getDefinitionFrequency", "parameters": "()", "modifiers": "@Override public", "return": "TsFrequency", "signature": "TsFrequency getDefinitionFrequency()", "full_signature": "@Override public TsFrequency getDefinitionFrequency()", "class_method_signature": "SeasonalDummies.getDefinitionFrequency()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(TsFrequency context)", "modifiers": "@Override public", "return": "String", "signature": "String getDescription(TsFrequency context)", "full_signature": "@Override public String getDescription(TsFrequency context)", "class_method_signature": "SeasonalDummies.getDescription(TsFrequency context)", "testcase": false, "constructor": false}, {"identifier": "getDim", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDim()", "full_signature": "@Override public int getDim()", "class_method_signature": "SeasonalDummies.getDim()", "testcase": false, "constructor": false}, {"identifier": "getItemDescription", "parameters": "(int idx, TsFrequency context)", "modifiers": "@Override public", "return": "String", "signature": "String getItemDescription(int idx, TsFrequency context)", "full_signature": "@Override public String getItemDescription(int idx, TsFrequency context)", "class_method_signature": "SeasonalDummies.getItemDescription(int idx, TsFrequency context)", "testcase": false, "constructor": false}, {"identifier": "isSignificant", "parameters": "(TsDomain domain)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSignificant(TsDomain domain)", "full_signature": "@Override public boolean isSignificant(TsDomain domain)", "class_method_signature": "SeasonalDummies.isSignificant(TsDomain domain)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "SeasonalDummies.getName()", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/timeseries/regression/SeasonalDummies.java"}, "focal_method": {"identifier": "data", "parameters": "(TsDomain domain, List<DataBlock> data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void data(TsDomain domain, List<DataBlock> data) {\n        int pstart = domain.getStart().getPosition();\n        int ifreq = domain.getFrequency().intValue();\n        int lstart = ifreq - pstart - 1;\n        if (lstart < 0) {\n            lstart += ifreq;\n        }\n        for (int i = 0; i < ifreq - 1; i++) {\n            DataBlock x = data.get(i);\n            int jstart = i - pstart;\n            if (jstart < 0) {\n                jstart += ifreq;\n            }\n            DataBlock m = x.extract(jstart, -1, ifreq);\n            m.set(1);\n            DataBlock q = x.extract(lstart, -1, ifreq);\n            q.set(-1);\n        }\n    }", "signature": "void data(TsDomain domain, List<DataBlock> data)", "full_signature": "@Override public void data(TsDomain domain, List<DataBlock> data)", "class_method_signature": "SeasonalDummies.data(TsDomain domain, List<DataBlock> data)", "testcase": false, "constructor": false, "invocations": ["getPosition", "getStart", "intValue", "getFrequency", "get", "extract", "set", "extract", "set"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}