{"test_class": {"identifier": "GroupTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/zms/src/test/java/com/yahoo/athenz/zms/GroupTest.java"}, "test_case": {"identifier": "testDomainGroupMembership", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDomainGroupMembership() {\n\n        Schema schema = ZMSSchema.instance();\n        Validator validator = new Validator(schema);\n\n        List<DomainGroupMember> list1 = new ArrayList<>();\n        list1.add(new DomainGroupMember().setMemberName(\"mbr1\").setMemberGroups(Collections.emptyList()));\n        DomainGroupMembers mbr1 = new DomainGroupMembers().setDomainName(\"dom1\").setMembers(list1);\n\n        List<DomainGroupMembers> list2 = new ArrayList<>();\n        list2.add(mbr1);\n\n        DomainGroupMembership groupMembership1 = new DomainGroupMembership().setDomainGroupMembersList(list2);\n        Result result = validator.validate(groupMembership1, \"DomainGroupMembership\");\n        assertTrue(result.valid);\n\n        assertEquals(groupMembership1.getDomainGroupMembersList(), list2);\n\n        DomainGroupMembership groupMembership2 = new DomainGroupMembership().setDomainGroupMembersList(list2);\n\n        assertTrue(groupMembership2.equals(groupMembership1));\n        assertTrue(groupMembership1.equals(groupMembership1));\n        assertFalse(groupMembership1.equals(null));\n        assertFalse(groupMembership1.equals(new String()));\n\n        List<DomainGroupMembers> list3 = Collections.emptyList();\n\n        groupMembership2.setDomainGroupMembersList(list3);\n        assertFalse(groupMembership2.equals(groupMembership1));\n        groupMembership2.setDomainGroupMembersList(null);\n        assertFalse(groupMembership2.equals(groupMembership1));\n        groupMembership2.setDomainGroupMembersList(list2);\n    }", "signature": "void testDomainGroupMembership()", "full_signature": "@Test public void testDomainGroupMembership()", "class_method_signature": "GroupTest.testDomainGroupMembership()", "testcase": true, "constructor": false, "invocations": ["instance", "add", "setMemberGroups", "setMemberName", "emptyList", "setMembers", "setDomainName", "add", "setDomainGroupMembersList", "validate", "assertTrue", "assertEquals", "getDomainGroupMembersList", "setDomainGroupMembersList", "assertTrue", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals", "emptyList", "setDomainGroupMembersList", "assertFalse", "equals", "setDomainGroupMembersList", "assertFalse", "equals", "setDomainGroupMembersList"]}, "focal_class": {"identifier": "Group", "superclass": "", "interfaces": "", "fields": [{"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public Boolean selfServe;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "Boolean", "declarator": "selfServe", "var_name": "selfServe"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public Boolean reviewEnabled;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "Boolean", "declarator": "reviewEnabled", "var_name": "reviewEnabled"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public String notifyRoles;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "String", "declarator": "notifyRoles", "var_name": "notifyRoles"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public String userAuthorityFilter;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "String", "declarator": "userAuthorityFilter", "var_name": "userAuthorityFilter"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public String userAuthorityExpiration;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "String", "declarator": "userAuthorityExpiration", "var_name": "userAuthorityExpiration"}, {"original_string": "public String name;", "modifier": "public", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public Timestamp modified;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "Timestamp", "declarator": "modified", "var_name": "modified"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public List<GroupMember> groupMembers;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "List<GroupMember>", "declarator": "groupMembers", "var_name": "groupMembers"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public List<GroupAuditLog> auditLog;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "List<GroupAuditLog>", "declarator": "auditLog", "var_name": "auditLog"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public Boolean auditEnabled;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "Boolean", "declarator": "auditEnabled", "var_name": "auditEnabled"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public Timestamp lastReviewedDate;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "Timestamp", "declarator": "lastReviewedDate", "var_name": "lastReviewedDate"}], "methods": [{"identifier": "setSelfServe", "parameters": "(Boolean selfServe)", "modifiers": "public", "return": "Group", "signature": "Group setSelfServe(Boolean selfServe)", "full_signature": "public Group setSelfServe(Boolean selfServe)", "class_method_signature": "Group.setSelfServe(Boolean selfServe)", "testcase": false, "constructor": false}, {"identifier": "getSelfServe", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean getSelfServe()", "full_signature": "public Boolean getSelfServe()", "class_method_signature": "Group.getSelfServe()", "testcase": false, "constructor": false}, {"identifier": "setReviewEnabled", "parameters": "(Boolean reviewEnabled)", "modifiers": "public", "return": "Group", "signature": "Group setReviewEnabled(Boolean reviewEnabled)", "full_signature": "public Group setReviewEnabled(Boolean reviewEnabled)", "class_method_signature": "Group.setReviewEnabled(Boolean reviewEnabled)", "testcase": false, "constructor": false}, {"identifier": "getReviewEnabled", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean getReviewEnabled()", "full_signature": "public Boolean getReviewEnabled()", "class_method_signature": "Group.getReviewEnabled()", "testcase": false, "constructor": false}, {"identifier": "setNotifyRoles", "parameters": "(String notifyRoles)", "modifiers": "public", "return": "Group", "signature": "Group setNotifyRoles(String notifyRoles)", "full_signature": "public Group setNotifyRoles(String notifyRoles)", "class_method_signature": "Group.setNotifyRoles(String notifyRoles)", "testcase": false, "constructor": false}, {"identifier": "getNotifyRoles", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNotifyRoles()", "full_signature": "public String getNotifyRoles()", "class_method_signature": "Group.getNotifyRoles()", "testcase": false, "constructor": false}, {"identifier": "setUserAuthorityFilter", "parameters": "(String userAuthorityFilter)", "modifiers": "public", "return": "Group", "signature": "Group setUserAuthorityFilter(String userAuthorityFilter)", "full_signature": "public Group setUserAuthorityFilter(String userAuthorityFilter)", "class_method_signature": "Group.setUserAuthorityFilter(String userAuthorityFilter)", "testcase": false, "constructor": false}, {"identifier": "getUserAuthorityFilter", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserAuthorityFilter()", "full_signature": "public String getUserAuthorityFilter()", "class_method_signature": "Group.getUserAuthorityFilter()", "testcase": false, "constructor": false}, {"identifier": "setUserAuthorityExpiration", "parameters": "(String userAuthorityExpiration)", "modifiers": "public", "return": "Group", "signature": "Group setUserAuthorityExpiration(String userAuthorityExpiration)", "full_signature": "public Group setUserAuthorityExpiration(String userAuthorityExpiration)", "class_method_signature": "Group.setUserAuthorityExpiration(String userAuthorityExpiration)", "testcase": false, "constructor": false}, {"identifier": "getUserAuthorityExpiration", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserAuthorityExpiration()", "full_signature": "public String getUserAuthorityExpiration()", "class_method_signature": "Group.getUserAuthorityExpiration()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "Group", "signature": "Group setName(String name)", "full_signature": "public Group setName(String name)", "class_method_signature": "Group.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Group.getName()", "testcase": false, "constructor": false}, {"identifier": "setModified", "parameters": "(Timestamp modified)", "modifiers": "public", "return": "Group", "signature": "Group setModified(Timestamp modified)", "full_signature": "public Group setModified(Timestamp modified)", "class_method_signature": "Group.setModified(Timestamp modified)", "testcase": false, "constructor": false}, {"identifier": "getModified", "parameters": "()", "modifiers": "public", "return": "Timestamp", "signature": "Timestamp getModified()", "full_signature": "public Timestamp getModified()", "class_method_signature": "Group.getModified()", "testcase": false, "constructor": false}, {"identifier": "setGroupMembers", "parameters": "(List<GroupMember> groupMembers)", "modifiers": "public", "return": "Group", "signature": "Group setGroupMembers(List<GroupMember> groupMembers)", "full_signature": "public Group setGroupMembers(List<GroupMember> groupMembers)", "class_method_signature": "Group.setGroupMembers(List<GroupMember> groupMembers)", "testcase": false, "constructor": false}, {"identifier": "getGroupMembers", "parameters": "()", "modifiers": "public", "return": "List<GroupMember>", "signature": "List<GroupMember> getGroupMembers()", "full_signature": "public List<GroupMember> getGroupMembers()", "class_method_signature": "Group.getGroupMembers()", "testcase": false, "constructor": false}, {"identifier": "setAuditLog", "parameters": "(List<GroupAuditLog> auditLog)", "modifiers": "public", "return": "Group", "signature": "Group setAuditLog(List<GroupAuditLog> auditLog)", "full_signature": "public Group setAuditLog(List<GroupAuditLog> auditLog)", "class_method_signature": "Group.setAuditLog(List<GroupAuditLog> auditLog)", "testcase": false, "constructor": false}, {"identifier": "getAuditLog", "parameters": "()", "modifiers": "public", "return": "List<GroupAuditLog>", "signature": "List<GroupAuditLog> getAuditLog()", "full_signature": "public List<GroupAuditLog> getAuditLog()", "class_method_signature": "Group.getAuditLog()", "testcase": false, "constructor": false}, {"identifier": "setAuditEnabled", "parameters": "(Boolean auditEnabled)", "modifiers": "public", "return": "Group", "signature": "Group setAuditEnabled(Boolean auditEnabled)", "full_signature": "public Group setAuditEnabled(Boolean auditEnabled)", "class_method_signature": "Group.setAuditEnabled(Boolean auditEnabled)", "testcase": false, "constructor": false}, {"identifier": "getAuditEnabled", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean getAuditEnabled()", "full_signature": "public Boolean getAuditEnabled()", "class_method_signature": "Group.getAuditEnabled()", "testcase": false, "constructor": false}, {"identifier": "setLastReviewedDate", "parameters": "(Timestamp lastReviewedDate)", "modifiers": "public", "return": "Group", "signature": "Group setLastReviewedDate(Timestamp lastReviewedDate)", "full_signature": "public Group setLastReviewedDate(Timestamp lastReviewedDate)", "class_method_signature": "Group.setLastReviewedDate(Timestamp lastReviewedDate)", "testcase": false, "constructor": false}, {"identifier": "getLastReviewedDate", "parameters": "()", "modifiers": "public", "return": "Timestamp", "signature": "Timestamp getLastReviewedDate()", "full_signature": "public Timestamp getLastReviewedDate()", "class_method_signature": "Group.getLastReviewedDate()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object another)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object another)", "full_signature": "@Override public boolean equals(Object another)", "class_method_signature": "Group.equals(Object another)", "testcase": false, "constructor": false}], "file": "core/zms/src/main/java/com/yahoo/athenz/zms/Group.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object another)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object another) {\n        if (this != another) {\n            if (another == null || another.getClass() != Group.class) {\n                return false;\n            }\n            Group a = (Group) another;\n            if (selfServe == null ? a.selfServe != null : !selfServe.equals(a.selfServe)) {\n                return false;\n            }\n            if (reviewEnabled == null ? a.reviewEnabled != null : !reviewEnabled.equals(a.reviewEnabled)) {\n                return false;\n            }\n            if (notifyRoles == null ? a.notifyRoles != null : !notifyRoles.equals(a.notifyRoles)) {\n                return false;\n            }\n            if (userAuthorityFilter == null ? a.userAuthorityFilter != null : !userAuthorityFilter.equals(a.userAuthorityFilter)) {\n                return false;\n            }\n            if (userAuthorityExpiration == null ? a.userAuthorityExpiration != null : !userAuthorityExpiration.equals(a.userAuthorityExpiration)) {\n                return false;\n            }\n            if (name == null ? a.name != null : !name.equals(a.name)) {\n                return false;\n            }\n            if (modified == null ? a.modified != null : !modified.equals(a.modified)) {\n                return false;\n            }\n            if (groupMembers == null ? a.groupMembers != null : !groupMembers.equals(a.groupMembers)) {\n                return false;\n            }\n            if (auditLog == null ? a.auditLog != null : !auditLog.equals(a.auditLog)) {\n                return false;\n            }\n            if (auditEnabled == null ? a.auditEnabled != null : !auditEnabled.equals(a.auditEnabled)) {\n                return false;\n            }\n            if (lastReviewedDate == null ? a.lastReviewedDate != null : !lastReviewedDate.equals(a.lastReviewedDate)) {\n                return false;\n            }\n        }\n        return true;\n    }", "signature": "boolean equals(Object another)", "full_signature": "@Override public boolean equals(Object another)", "class_method_signature": "Group.equals(Object another)", "testcase": false, "constructor": false, "invocations": ["getClass", "equals", "equals", "equals", "equals", "equals", "equals", "equals", "equals", "equals", "equals", "equals"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}