{"test_class": {"identifier": "TestSpdz2kDummyDataSupplier", "superclass": "", "interfaces": "", "fields": [], "file": "suite/spdz2k/src/test/java/dk/alexandra/fresco/suite/spdz2k/resource/storage/TestSpdz2kDummyDataSupplier.java"}, "test_case": {"identifier": "testGetNextTripleShares", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetNextTripleShares() {\n    testGetNextTripleShares(2);\n    testGetNextTripleShares(3);\n    testGetNextTripleShares(5);\n  }", "signature": "void testGetNextTripleShares()", "full_signature": "@Test public void testGetNextTripleShares()", "class_method_signature": "TestSpdz2kDummyDataSupplier.testGetNextTripleShares()", "testcase": true, "constructor": false, "invocations": ["testGetNextTripleShares", "testGetNextTripleShares", "testGetNextTripleShares"]}, "focal_class": {"identifier": "Spdz2kDummyDataSupplier", "superclass": "", "interfaces": "implements\n    Spdz2kDataSupplier<PlainT>", "fields": [{"original_string": "private final int myId;", "modifier": "private final", "type": "int", "declarator": "myId", "var_name": "myId"}, {"original_string": "private final ArithmeticDummyDataSupplier supplier;", "modifier": "private final", "type": "ArithmeticDummyDataSupplier", "declarator": "supplier", "var_name": "supplier"}, {"original_string": "private final PlainT secretSharedKey;", "modifier": "private final", "type": "PlainT", "declarator": "secretSharedKey", "var_name": "secretSharedKey"}, {"original_string": "private final CompUIntFactory<PlainT> factory;", "modifier": "private final", "type": "CompUIntFactory<PlainT>", "declarator": "factory", "var_name": "factory"}], "methods": [{"identifier": "Spdz2kDummyDataSupplier", "parameters": "(int myId, int noOfParties, PlainT secretSharedKey,\n      CompUIntFactory<PlainT> factory)", "modifiers": "public", "return": "", "signature": " Spdz2kDummyDataSupplier(int myId, int noOfParties, PlainT secretSharedKey,\n      CompUIntFactory<PlainT> factory)", "full_signature": "public  Spdz2kDummyDataSupplier(int myId, int noOfParties, PlainT secretSharedKey,\n      CompUIntFactory<PlainT> factory)", "class_method_signature": "Spdz2kDummyDataSupplier.Spdz2kDummyDataSupplier(int myId, int noOfParties, PlainT secretSharedKey,\n      CompUIntFactory<PlainT> factory)", "testcase": false, "constructor": true}, {"identifier": "getNextTripleShares", "parameters": "()", "modifiers": "@Override public", "return": "Spdz2kTriple<PlainT>", "signature": "Spdz2kTriple<PlainT> getNextTripleShares()", "full_signature": "@Override public Spdz2kTriple<PlainT> getNextTripleShares()", "class_method_signature": "Spdz2kDummyDataSupplier.getNextTripleShares()", "testcase": false, "constructor": false}, {"identifier": "getNextInputMask", "parameters": "(int towardPlayerId)", "modifiers": "@Override public", "return": "Spdz2kInputMask<PlainT>", "signature": "Spdz2kInputMask<PlainT> getNextInputMask(int towardPlayerId)", "full_signature": "@Override public Spdz2kInputMask<PlainT> getNextInputMask(int towardPlayerId)", "class_method_signature": "Spdz2kDummyDataSupplier.getNextInputMask(int towardPlayerId)", "testcase": false, "constructor": false}, {"identifier": "getNextBitShare", "parameters": "()", "modifiers": "@Override public", "return": "Spdz2kSInt<PlainT>", "signature": "Spdz2kSInt<PlainT> getNextBitShare()", "full_signature": "@Override public Spdz2kSInt<PlainT> getNextBitShare()", "class_method_signature": "Spdz2kDummyDataSupplier.getNextBitShare()", "testcase": false, "constructor": false}, {"identifier": "getSecretSharedKey", "parameters": "()", "modifiers": "@Override public", "return": "PlainT", "signature": "PlainT getSecretSharedKey()", "full_signature": "@Override public PlainT getSecretSharedKey()", "class_method_signature": "Spdz2kDummyDataSupplier.getSecretSharedKey()", "testcase": false, "constructor": false}, {"identifier": "getNextRandomElementShare", "parameters": "()", "modifiers": "@Override public", "return": "Spdz2kSInt<PlainT>", "signature": "Spdz2kSInt<PlainT> getNextRandomElementShare()", "full_signature": "@Override public Spdz2kSInt<PlainT> getNextRandomElementShare()", "class_method_signature": "Spdz2kDummyDataSupplier.getNextRandomElementShare()", "testcase": false, "constructor": false}, {"identifier": "toSpdz2kSInt", "parameters": "(Pair<BigInteger, BigInteger> raw)", "modifiers": "private", "return": "Spdz2kSInt<PlainT>", "signature": "Spdz2kSInt<PlainT> toSpdz2kSInt(Pair<BigInteger, BigInteger> raw)", "full_signature": "private Spdz2kSInt<PlainT> toSpdz2kSInt(Pair<BigInteger, BigInteger> raw)", "class_method_signature": "Spdz2kDummyDataSupplier.toSpdz2kSInt(Pair<BigInteger, BigInteger> raw)", "testcase": false, "constructor": false}], "file": "suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/resource/storage/Spdz2kDummyDataSupplier.java"}, "focal_method": {"identifier": "getNextTripleShares", "parameters": "()", "modifiers": "@Override public", "return": "Spdz2kTriple<PlainT>", "body": "@Override\n  public Spdz2kTriple<PlainT> getNextTripleShares() {\n    MultiplicationTripleShares rawTriple = supplier.getMultiplicationTripleShares();\n    return new Spdz2kTriple<>(\n        toSpdz2kSInt(rawTriple.getLeft()),\n        toSpdz2kSInt(rawTriple.getRight()),\n        toSpdz2kSInt(rawTriple.getProduct()));\n  }", "signature": "Spdz2kTriple<PlainT> getNextTripleShares()", "full_signature": "@Override public Spdz2kTriple<PlainT> getNextTripleShares()", "class_method_signature": "Spdz2kDummyDataSupplier.getNextTripleShares()", "testcase": false, "constructor": false, "invocations": ["getMultiplicationTripleShares", "toSpdz2kSInt", "getLeft", "toSpdz2kSInt", "getRight", "toSpdz2kSInt", "getProduct"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}