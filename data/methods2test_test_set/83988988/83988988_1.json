{"test_class": {"identifier": "MessageFormatterFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "MessageFormatter message1 = MessageFormatterFactory.createConsoleFormatter();", "modifier": "", "type": "MessageFormatter", "declarator": "message1 = MessageFormatterFactory.createConsoleFormatter()", "var_name": "message1"}, {"original_string": "MessageFormatter message2 = MessageFormatterFactory.createConsoleFormatter();", "modifier": "", "type": "MessageFormatter", "declarator": "message2 = MessageFormatterFactory.createConsoleFormatter()", "var_name": "message2"}, {"original_string": "MessageFormatter message3 = MessageFormatterFactory.createHtmlFormatter();", "modifier": "", "type": "MessageFormatter", "declarator": "message3 = MessageFormatterFactory.createHtmlFormatter()", "var_name": "message3"}, {"original_string": "MessageFormatter message4 = MessageFormatterFactory.createHtmlFormatter();", "modifier": "", "type": "MessageFormatter", "declarator": "message4 = MessageFormatterFactory.createHtmlFormatter()", "var_name": "message4"}], "file": "Week4/Day2/src/test/java/FactoryMethodsExercise/MessageFormatterFactoryTest.java"}, "test_case": {"identifier": "createHtmlFormatterTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void createHtmlFormatterTest() {\n\t\tassertSame(message1, message2); // objeto message1 es el mismo que message2\n\t\tString str1 = message1.format(\"Hola\");\n\t\tString str2 = message2.format(\"Hola\");\n\t\tassertSame(str1, str2);\n\t}", "signature": "void createHtmlFormatterTest()", "full_signature": "@Test public void createHtmlFormatterTest()", "class_method_signature": "MessageFormatterFactoryTest.createHtmlFormatterTest()", "testcase": true, "constructor": false, "invocations": ["assertSame", "format", "format", "assertSame"]}, "focal_class": {"identifier": "MessageFormatterFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final MessageFormatter SINGLETON_CONSOLEMESSAGE = new ConsoleMessageFormatter();", "modifier": "private static final", "type": "MessageFormatter", "declarator": "SINGLETON_CONSOLEMESSAGE = new ConsoleMessageFormatter()", "var_name": "SINGLETON_CONSOLEMESSAGE"}, {"original_string": "private static final MessageFormatter SINGLETON_HTMLMESSAGE = new HtmlMessageFormatter();", "modifier": "private static final", "type": "MessageFormatter", "declarator": "SINGLETON_HTMLMESSAGE = new HtmlMessageFormatter()", "var_name": "SINGLETON_HTMLMESSAGE"}, {"original_string": "private static final MessageFormatter SINGLETON_DEFAULTMESSAGE = new DefaultMessageFormatter();", "modifier": "private static final", "type": "MessageFormatter", "declarator": "SINGLETON_DEFAULTMESSAGE = new DefaultMessageFormatter()", "var_name": "SINGLETON_DEFAULTMESSAGE"}], "methods": [{"identifier": "createConsoleFormatter", "parameters": "()", "modifiers": "public static", "return": "MessageFormatter", "signature": "MessageFormatter createConsoleFormatter()", "full_signature": "public static MessageFormatter createConsoleFormatter()", "class_method_signature": "MessageFormatterFactory.createConsoleFormatter()", "testcase": false, "constructor": false}, {"identifier": "createHtmlFormatter", "parameters": "()", "modifiers": "public static", "return": "MessageFormatter", "signature": "MessageFormatter createHtmlFormatter()", "full_signature": "public static MessageFormatter createHtmlFormatter()", "class_method_signature": "MessageFormatterFactory.createHtmlFormatter()", "testcase": false, "constructor": false}, {"identifier": "createDefaultFormatter", "parameters": "()", "modifiers": "public static", "return": "MessageFormatter", "signature": "MessageFormatter createDefaultFormatter()", "full_signature": "public static MessageFormatter createDefaultFormatter()", "class_method_signature": "MessageFormatterFactory.createDefaultFormatter()", "testcase": false, "constructor": false}], "file": "Week4/Day2/src/main/java/FactoryMethodsExercise/MessageFormatterFactory.java"}, "focal_method": {"identifier": "createHtmlFormatter", "parameters": "()", "modifiers": "public static", "return": "MessageFormatter", "body": "public static MessageFormatter createHtmlFormatter() {\n\t\t//return new HtmlMessageFormatter();\n\t\treturn SINGLETON_HTMLMESSAGE;\n\t}", "signature": "MessageFormatter createHtmlFormatter()", "full_signature": "public static MessageFormatter createHtmlFormatter()", "class_method_signature": "MessageFormatterFactory.createHtmlFormatter()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 83988988, "url": "https://github.com/fderisio/Propulsion-Academy", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 18119, "license": "licensed"}}