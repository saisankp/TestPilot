{"test_class": {"identifier": "MarshallingPayloadMethodProcessorTest", "superclass": "extends AbstractMethodArgumentResolverTestCase", "interfaces": "", "fields": [{"original_string": "private MarshallingPayloadMethodProcessor processor;", "modifier": "private", "type": "MarshallingPayloadMethodProcessor", "declarator": "processor", "var_name": "processor"}, {"original_string": "private GenericMarshaller marshaller;", "modifier": "private", "type": "GenericMarshaller", "declarator": "marshaller", "var_name": "marshaller"}, {"original_string": "private GenericUnmarshaller unmarshaller;", "modifier": "private", "type": "GenericUnmarshaller", "declarator": "unmarshaller", "var_name": "unmarshaller"}, {"original_string": "private MethodParameter supportedParameter;", "modifier": "private", "type": "MethodParameter", "declarator": "supportedParameter", "var_name": "supportedParameter"}, {"original_string": "private MethodParameter supportedReturnType;", "modifier": "private", "type": "MethodParameter", "declarator": "supportedReturnType", "var_name": "supportedReturnType"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/MarshallingPayloadMethodProcessorTest.java"}, "test_case": {"identifier": "resolveArgument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void resolveArgument() throws Exception {\n\t\tMyObject expected = new MyObject();\n\n\t\texpect(unmarshaller.unmarshal(isA(Source.class))).andReturn(expected);\n\n\t\treplay(marshaller, unmarshaller);\n\t\tMessageContext messageContext = createMockMessageContext();\n\n\t\tObject result = processor.resolveArgument(messageContext, supportedParameter);\n\t\tassertEquals(\"Invalid return argument\", expected, result);\n\n\t\tverify(marshaller, unmarshaller);\n\t}", "signature": "void resolveArgument()", "full_signature": "@Test public void resolveArgument()", "class_method_signature": "MarshallingPayloadMethodProcessorTest.resolveArgument()", "testcase": true, "constructor": false, "invocations": ["andReturn", "expect", "unmarshal", "isA", "replay", "createMockMessageContext", "resolveArgument", "assertEquals", "verify"]}, "focal_class": {"identifier": "MarshallingPayloadMethodProcessor", "superclass": "extends AbstractPayloadMethodProcessor", "interfaces": "", "fields": [{"original_string": "private Marshaller marshaller;", "modifier": "private", "type": "Marshaller", "declarator": "marshaller", "var_name": "marshaller"}, {"original_string": "private Unmarshaller unmarshaller;", "modifier": "private", "type": "Unmarshaller", "declarator": "unmarshaller", "var_name": "unmarshaller"}], "methods": [{"identifier": "MarshallingPayloadMethodProcessor", "parameters": "()", "modifiers": "public", "return": "", "signature": " MarshallingPayloadMethodProcessor()", "full_signature": "public  MarshallingPayloadMethodProcessor()", "class_method_signature": "MarshallingPayloadMethodProcessor.MarshallingPayloadMethodProcessor()", "testcase": false, "constructor": true}, {"identifier": "MarshallingPayloadMethodProcessor", "parameters": "(Marshaller marshaller)", "modifiers": "public", "return": "", "signature": " MarshallingPayloadMethodProcessor(Marshaller marshaller)", "full_signature": "public  MarshallingPayloadMethodProcessor(Marshaller marshaller)", "class_method_signature": "MarshallingPayloadMethodProcessor.MarshallingPayloadMethodProcessor(Marshaller marshaller)", "testcase": false, "constructor": true}, {"identifier": "MarshallingPayloadMethodProcessor", "parameters": "(Marshaller marshaller, Unmarshaller unmarshaller)", "modifiers": "public", "return": "", "signature": " MarshallingPayloadMethodProcessor(Marshaller marshaller, Unmarshaller unmarshaller)", "full_signature": "public  MarshallingPayloadMethodProcessor(Marshaller marshaller, Unmarshaller unmarshaller)", "class_method_signature": "MarshallingPayloadMethodProcessor.MarshallingPayloadMethodProcessor(Marshaller marshaller, Unmarshaller unmarshaller)", "testcase": false, "constructor": true}, {"identifier": "getMarshaller", "parameters": "()", "modifiers": "public", "return": "Marshaller", "signature": "Marshaller getMarshaller()", "full_signature": "public Marshaller getMarshaller()", "class_method_signature": "MarshallingPayloadMethodProcessor.getMarshaller()", "testcase": false, "constructor": false}, {"identifier": "setMarshaller", "parameters": "(Marshaller marshaller)", "modifiers": "public", "return": "void", "signature": "void setMarshaller(Marshaller marshaller)", "full_signature": "public void setMarshaller(Marshaller marshaller)", "class_method_signature": "MarshallingPayloadMethodProcessor.setMarshaller(Marshaller marshaller)", "testcase": false, "constructor": false}, {"identifier": "getUnmarshaller", "parameters": "()", "modifiers": "public", "return": "Unmarshaller", "signature": "Unmarshaller getUnmarshaller()", "full_signature": "public Unmarshaller getUnmarshaller()", "class_method_signature": "MarshallingPayloadMethodProcessor.getUnmarshaller()", "testcase": false, "constructor": false}, {"identifier": "setUnmarshaller", "parameters": "(Unmarshaller unmarshaller)", "modifiers": "public", "return": "void", "signature": "void setUnmarshaller(Unmarshaller unmarshaller)", "full_signature": "public void setUnmarshaller(Unmarshaller unmarshaller)", "class_method_signature": "MarshallingPayloadMethodProcessor.setUnmarshaller(Unmarshaller unmarshaller)", "testcase": false, "constructor": false}, {"identifier": "supportsRequestPayloadParameter", "parameters": "(MethodParameter parameter)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean supportsRequestPayloadParameter(MethodParameter parameter)", "full_signature": "@Override protected boolean supportsRequestPayloadParameter(MethodParameter parameter)", "class_method_signature": "MarshallingPayloadMethodProcessor.supportsRequestPayloadParameter(MethodParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "resolveArgument", "parameters": "(MessageContext messageContext, MethodParameter parameter)", "modifiers": "@Override public", "return": "Object", "signature": "Object resolveArgument(MessageContext messageContext, MethodParameter parameter)", "full_signature": "@Override public Object resolveArgument(MessageContext messageContext, MethodParameter parameter)", "class_method_signature": "MarshallingPayloadMethodProcessor.resolveArgument(MessageContext messageContext, MethodParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "supportsResponsePayloadReturnType", "parameters": "(MethodParameter returnType)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean supportsResponsePayloadReturnType(MethodParameter returnType)", "full_signature": "@Override protected boolean supportsResponsePayloadReturnType(MethodParameter returnType)", "class_method_signature": "MarshallingPayloadMethodProcessor.supportsResponsePayloadReturnType(MethodParameter returnType)", "testcase": false, "constructor": false}, {"identifier": "handleReturnValue", "parameters": "(MessageContext messageContext, MethodParameter returnType, Object returnValue)", "modifiers": "@Override public", "return": "void", "signature": "void handleReturnValue(MessageContext messageContext, MethodParameter returnType, Object returnValue)", "full_signature": "@Override public void handleReturnValue(MessageContext messageContext, MethodParameter returnType, Object returnValue)", "class_method_signature": "MarshallingPayloadMethodProcessor.handleReturnValue(MessageContext messageContext, MethodParameter returnType, Object returnValue)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/server/endpoint/adapter/method/MarshallingPayloadMethodProcessor.java"}, "focal_method": {"identifier": "resolveArgument", "parameters": "(MessageContext messageContext, MethodParameter parameter)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n\tpublic Object resolveArgument(MessageContext messageContext, MethodParameter parameter) throws Exception {\n\t\tUnmarshaller unmarshaller = getUnmarshaller();\n\t\tAssert.state(unmarshaller != null, \"unmarshaller must not be null\");\n\n\t\tWebServiceMessage request = messageContext.getRequest();\n\t\tObject argument = MarshallingUtils.unmarshal(unmarshaller, request);\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"Unmarshalled payload request to [\" + argument + \"]\");\n\t\t}\n\t\treturn argument;\n\t}", "signature": "Object resolveArgument(MessageContext messageContext, MethodParameter parameter)", "full_signature": "@Override public Object resolveArgument(MessageContext messageContext, MethodParameter parameter)", "class_method_signature": "MarshallingPayloadMethodProcessor.resolveArgument(MessageContext messageContext, MethodParameter parameter)", "testcase": false, "constructor": false, "invocations": ["getUnmarshaller", "state", "getRequest", "unmarshal", "isDebugEnabled", "debug"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}