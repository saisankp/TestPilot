{"test_class": {"identifier": "ThingHandlerHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Thing thing;", "modifier": "private", "type": "Thing", "declarator": "thing", "var_name": "thing"}, {"original_string": "private @Mock ThingHandler thingHandler;", "modifier": "private @Mock", "type": "ThingHandler", "declarator": "thingHandler", "var_name": "thingHandler"}], "file": "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/util/ThingHandlerHelperTest.java"}, "test_case": {"identifier": "assertIsHandlerInitializedWorksCorrectlyForAThingStatus", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void assertIsHandlerInitializedWorksCorrectlyForAThingStatus() {\n        assertThat(isHandlerInitialized(ThingStatus.UNINITIALIZED), is(false));\n        assertThat(isHandlerInitialized(ThingStatus.INITIALIZING), is(false));\n        assertThat(isHandlerInitialized(ThingStatus.REMOVING), is(false));\n        assertThat(isHandlerInitialized(ThingStatus.REMOVED), is(false));\n        assertThat(isHandlerInitialized(ThingStatus.UNKNOWN), is(true));\n        assertThat(isHandlerInitialized(ThingStatus.ONLINE), is(true));\n        assertThat(isHandlerInitialized(ThingStatus.OFFLINE), is(true));\n    }", "signature": "void assertIsHandlerInitializedWorksCorrectlyForAThingStatus()", "full_signature": "@Test public void assertIsHandlerInitializedWorksCorrectlyForAThingStatus()", "class_method_signature": "ThingHandlerHelperTest.assertIsHandlerInitializedWorksCorrectlyForAThingStatus()", "testcase": true, "constructor": false, "invocations": ["assertThat", "isHandlerInitialized", "is", "assertThat", "isHandlerInitialized", "is", "assertThat", "isHandlerInitialized", "is", "assertThat", "isHandlerInitialized", "is", "assertThat", "isHandlerInitialized", "is", "assertThat", "isHandlerInitialized", "is", "assertThat", "isHandlerInitialized", "is"]}, "focal_class": {"identifier": "ThingHandlerHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ThingHandlerHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " ThingHandlerHelper()", "full_signature": "private  ThingHandlerHelper()", "class_method_signature": "ThingHandlerHelper.ThingHandlerHelper()", "testcase": false, "constructor": true}, {"identifier": "isHandlerInitialized", "parameters": "(final ThingStatus thingStatus)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHandlerInitialized(final ThingStatus thingStatus)", "full_signature": "public static boolean isHandlerInitialized(final ThingStatus thingStatus)", "class_method_signature": "ThingHandlerHelper.isHandlerInitialized(final ThingStatus thingStatus)", "testcase": false, "constructor": false}, {"identifier": "isHandlerInitialized", "parameters": "(final Thing thing)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHandlerInitialized(final Thing thing)", "full_signature": "public static boolean isHandlerInitialized(final Thing thing)", "class_method_signature": "ThingHandlerHelper.isHandlerInitialized(final Thing thing)", "testcase": false, "constructor": false}, {"identifier": "isHandlerInitialized", "parameters": "(final ThingHandler handler)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHandlerInitialized(final ThingHandler handler)", "full_signature": "public static boolean isHandlerInitialized(final ThingHandler handler)", "class_method_signature": "ThingHandlerHelper.isHandlerInitialized(final ThingHandler handler)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/util/ThingHandlerHelper.java"}, "focal_method": {"identifier": "isHandlerInitialized", "parameters": "(final ThingStatus thingStatus)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isHandlerInitialized(final ThingStatus thingStatus) {\n        return thingStatus == ThingStatus.OFFLINE || thingStatus == ThingStatus.ONLINE\n                || thingStatus == ThingStatus.UNKNOWN;\n    }", "signature": "boolean isHandlerInitialized(final ThingStatus thingStatus)", "full_signature": "public static boolean isHandlerInitialized(final ThingStatus thingStatus)", "class_method_signature": "ThingHandlerHelper.isHandlerInitialized(final ThingStatus thingStatus)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}