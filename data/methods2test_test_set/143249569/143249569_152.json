{"test_class": {"identifier": "DecadeDateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Slot mockSlot = Slot.builder()\n        .withName(\"test\")\n        .withValue(\"test\")\n        .build();", "modifier": "private final", "type": "Slot", "declarator": "mockSlot = Slot.builder()\n        .withName(\"test\")\n        .withValue(\"test\")\n        .build()", "var_name": "mockSlot"}], "file": "ask-sdk-interaction-model-mapper/src/test/java/com/amazon/ask/interaction/types/slot/date/DecadeDateTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        DecadeDate date1 = new DecadeDate(mockSlot, 1, 1);\n        DecadeDate date2 = new DecadeDate(mockSlot, 1, 1);\n\n        assertEquals(date1, date2);\n        assertEquals(date1.getCentury(), date2.getCentury());\n        assertEquals(date1.getDecade(), date2.getDecade());\n        assertEquals(date1.getSlot(), date2.getSlot());\n        assertEquals(date1.hashCode(), date2.hashCode());\n        assertEquals(date1.toString(), date2.toString());\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "DecadeDateTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "getCentury", "getCentury", "assertEquals", "getDecade", "getDecade", "assertEquals", "getSlot", "getSlot", "assertEquals", "hashCode", "hashCode", "assertEquals", "toString", "toString"]}, "focal_class": {"identifier": "DecadeDate", "superclass": "extends AmazonDate", "interfaces": "", "fields": [{"original_string": "private final int century;", "modifier": "private final", "type": "int", "declarator": "century", "var_name": "century"}, {"original_string": "private final int decade;", "modifier": "private final", "type": "int", "declarator": "decade", "var_name": "decade"}], "methods": [{"identifier": "DecadeDate", "parameters": "(Slot slot, int century, int decade)", "modifiers": "public", "return": "", "signature": " DecadeDate(Slot slot, int century, int decade)", "full_signature": "public  DecadeDate(Slot slot, int century, int decade)", "class_method_signature": "DecadeDate.DecadeDate(Slot slot, int century, int decade)", "testcase": false, "constructor": true}, {"identifier": "getCentury", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCentury()", "full_signature": "public int getCentury()", "class_method_signature": "DecadeDate.getCentury()", "testcase": false, "constructor": false}, {"identifier": "getDecade", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDecade()", "full_signature": "public int getDecade()", "class_method_signature": "DecadeDate.getDecade()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DecadeDate.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DecadeDate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DecadeDate.toString()", "testcase": false, "constructor": false}], "file": "ask-sdk-interaction-model-mapper/src/main/java/com/amazon/ask/interaction/types/slot/date/DecadeDate.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object o) {\n        if (!super.equals(o)) return false;\n        DecadeDate that = (DecadeDate) o;\n        return century == that.century && decade == that.decade;\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DecadeDate.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 143249569, "url": "https://github.com/amazon-archives/ask-sdk-frameworks-java", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 12, "size": 313, "license": "licensed"}}