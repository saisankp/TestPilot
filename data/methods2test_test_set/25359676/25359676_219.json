{"test_class": {"identifier": "ComponentBaseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Component component;", "modifier": "private", "type": "Component", "declarator": "component", "var_name": "component"}, {"original_string": "private TreeMap<String, String> dataAttributes;", "modifier": "private", "type": "TreeMap<String, String>", "declarator": "dataAttributes", "var_name": "dataAttributes"}], "file": "rice-framework/krad-web-framework/src/test/java/org/kuali/rice/krad/uif/component/ComponentBaseTest.java"}, "test_case": {"identifier": "testGetSimpleDataAttributes", "parameters": "()", "modifiers": "@Test /** * test that simple data attributes are converted into inline attributes ok */ public", "return": "void", "body": "@Test\n    /**\n     * test that simple data attributes are converted into inline attributes ok\n     */\n    public void testGetSimpleDataAttributes() throws Exception {\n        assertNotNull(component.getSimpleDataAttributes());\n        String expected = \" data-iconTemplateName=\\\"cool-icon-%s.png\\\" data-transitions=\\\"3\\\"\";\n        assertEquals(\"simple attributes did not match\", expected, component.getSimpleDataAttributes());\n    }", "signature": "void testGetSimpleDataAttributes()", "full_signature": "@Test /** * test that simple data attributes are converted into inline attributes ok */ public void testGetSimpleDataAttributes()", "class_method_signature": "ComponentBaseTest.testGetSimpleDataAttributes()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getSimpleDataAttributes", "assertEquals", "getSimpleDataAttributes"]}, "focal_class": {"identifier": "ComponentBase", "superclass": "extends UifDictionaryBeanBase", "interfaces": "implements Component", "fields": [{"original_string": "private static final long serialVersionUID = -4449335748129894350L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4449335748129894350L", "var_name": "serialVersionUID"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private String containerIdSuffix;", "modifier": "private", "type": "String", "declarator": "containerIdSuffix", "var_name": "containerIdSuffix"}, {"original_string": "private String viewPath;", "modifier": "private", "type": "String", "declarator": "viewPath", "var_name": "viewPath"}, {"original_string": "private Map<String, String> phasePathMapping;", "modifier": "private", "type": "Map<String, String>", "declarator": "phasePathMapping", "var_name": "phasePathMapping"}, {"original_string": "private String template;", "modifier": "private", "type": "String", "declarator": "template", "var_name": "template"}, {"original_string": "private String templateName;", "modifier": "private", "type": "String", "declarator": "templateName", "var_name": "templateName"}, {"original_string": "private String viewStatus;", "modifier": "private", "type": "String", "declarator": "viewStatus", "var_name": "viewStatus"}, {"original_string": "private String title;", "modifier": "private", "type": "String", "declarator": "title", "var_name": "title"}, {"original_string": "private boolean render;", "modifier": "private", "type": "boolean", "declarator": "render", "var_name": "render"}, {"original_string": "private boolean retrieveViaAjax;", "modifier": "private", "type": "boolean", "declarator": "retrieveViaAjax", "var_name": "retrieveViaAjax"}, {"original_string": "@KeepExpression\n    private String progressiveRender;", "modifier": "@KeepExpression\n    private", "type": "String", "declarator": "progressiveRender", "var_name": "progressiveRender"}, {"original_string": "private boolean progressiveRenderViaAJAX;", "modifier": "private", "type": "boolean", "declarator": "progressiveRenderViaAJAX", "var_name": "progressiveRenderViaAJAX"}, {"original_string": "private boolean progressiveRenderAndRefresh;", "modifier": "private", "type": "boolean", "declarator": "progressiveRenderAndRefresh", "var_name": "progressiveRenderAndRefresh"}, {"original_string": "private List<String> progressiveDisclosureControlNames;", "modifier": "private", "type": "List<String>", "declarator": "progressiveDisclosureControlNames", "var_name": "progressiveDisclosureControlNames"}, {"original_string": "private String progressiveDisclosureConditionJs;", "modifier": "private", "type": "String", "declarator": "progressiveDisclosureConditionJs", "var_name": "progressiveDisclosureConditionJs"}, {"original_string": "@KeepExpression\n    private String conditionalRefresh;", "modifier": "@KeepExpression\n    private", "type": "String", "declarator": "conditionalRefresh", "var_name": "conditionalRefresh"}, {"original_string": "private String conditionalRefreshConditionJs;", "modifier": "private", "type": "String", "declarator": "conditionalRefreshConditionJs", "var_name": "conditionalRefreshConditionJs"}, {"original_string": "private List<String> conditionalRefreshControlNames;", "modifier": "private", "type": "List<String>", "declarator": "conditionalRefreshControlNames", "var_name": "conditionalRefreshControlNames"}, {"original_string": "private List<String> refreshWhenChangedPropertyNames;", "modifier": "private", "type": "List<String>", "declarator": "refreshWhenChangedPropertyNames", "var_name": "refreshWhenChangedPropertyNames"}, {"original_string": "private List<String> additionalComponentsToRefresh;", "modifier": "private", "type": "List<String>", "declarator": "additionalComponentsToRefresh", "var_name": "additionalComponentsToRefresh"}, {"original_string": "private String additionalComponentsToRefreshJs;", "modifier": "private", "type": "String", "declarator": "additionalComponentsToRefreshJs", "var_name": "additionalComponentsToRefreshJs"}, {"original_string": "private boolean refreshedByAction;", "modifier": "private", "type": "boolean", "declarator": "refreshedByAction", "var_name": "refreshedByAction"}, {"original_string": "private boolean disclosedByAction;", "modifier": "private", "type": "boolean", "declarator": "disclosedByAction", "var_name": "disclosedByAction"}, {"original_string": "private int refreshTimer;", "modifier": "private", "type": "int", "declarator": "refreshTimer", "var_name": "refreshTimer"}, {"original_string": "private boolean resetDataOnRefresh;", "modifier": "private", "type": "boolean", "declarator": "resetDataOnRefresh", "var_name": "resetDataOnRefresh"}, {"original_string": "private String methodToCallOnRefresh;", "modifier": "private", "type": "String", "declarator": "methodToCallOnRefresh", "var_name": "methodToCallOnRefresh"}, {"original_string": "private List<String> fieldsToSendOnRefresh;", "modifier": "private", "type": "List<String>", "declarator": "fieldsToSendOnRefresh", "var_name": "fieldsToSendOnRefresh"}, {"original_string": "private boolean hidden;", "modifier": "private", "type": "boolean", "declarator": "hidden", "var_name": "hidden"}, {"original_string": "private Boolean readOnly;", "modifier": "private", "type": "Boolean", "declarator": "readOnly", "var_name": "readOnly"}, {"original_string": "private Boolean canCopyOnReadOnly;", "modifier": "private", "type": "Boolean", "declarator": "canCopyOnReadOnly", "var_name": "canCopyOnReadOnly"}, {"original_string": "private Boolean required;", "modifier": "private", "type": "Boolean", "declarator": "required", "var_name": "required"}, {"original_string": "private String align;", "modifier": "private", "type": "String", "declarator": "align", "var_name": "align"}, {"original_string": "private String valign;", "modifier": "private", "type": "String", "declarator": "valign", "var_name": "valign"}, {"original_string": "private String width;", "modifier": "private", "type": "String", "declarator": "width", "var_name": "width"}, {"original_string": "private int colSpan;", "modifier": "private", "type": "int", "declarator": "colSpan", "var_name": "colSpan"}, {"original_string": "private int rowSpan;", "modifier": "private", "type": "int", "declarator": "rowSpan", "var_name": "rowSpan"}, {"original_string": "private List<String> wrapperCssClasses;", "modifier": "private", "type": "List<String>", "declarator": "wrapperCssClasses", "var_name": "wrapperCssClasses"}, {"original_string": "private String wrapperStyle;", "modifier": "private", "type": "String", "declarator": "wrapperStyle", "var_name": "wrapperStyle"}, {"original_string": "private String cellWidth;", "modifier": "private", "type": "String", "declarator": "cellWidth", "var_name": "cellWidth"}, {"original_string": "private CssGridSizes cssGridSizes;", "modifier": "private", "type": "CssGridSizes", "declarator": "cssGridSizes", "var_name": "cssGridSizes"}, {"original_string": "private List<String> layoutCssClasses;", "modifier": "private", "type": "List<String>", "declarator": "layoutCssClasses", "var_name": "layoutCssClasses"}, {"original_string": "private String style;", "modifier": "private", "type": "String", "declarator": "style", "var_name": "style"}, {"original_string": "private List<String> libraryCssClasses;", "modifier": "private", "type": "List<String>", "declarator": "libraryCssClasses", "var_name": "libraryCssClasses"}, {"original_string": "private List<String> cssClasses;", "modifier": "private", "type": "List<String>", "declarator": "cssClasses", "var_name": "cssClasses"}, {"original_string": "private List<String> additionalCssClasses;", "modifier": "private", "type": "List<String>", "declarator": "additionalCssClasses", "var_name": "additionalCssClasses"}, {"original_string": "@DelayedCopy\n    private Tooltip toolTip;", "modifier": "@DelayedCopy\n    private", "type": "Tooltip", "declarator": "toolTip", "var_name": "toolTip"}, {"original_string": "private int order;", "modifier": "private", "type": "int", "declarator": "order", "var_name": "order"}, {"original_string": "private boolean skipInTabOrder;", "modifier": "private", "type": "boolean", "declarator": "skipInTabOrder", "var_name": "skipInTabOrder"}, {"original_string": "private String finalizeMethodToCall;", "modifier": "private", "type": "String", "declarator": "finalizeMethodToCall", "var_name": "finalizeMethodToCall"}, {"original_string": "private List<Object> finalizeMethodAdditionalArguments;", "modifier": "private", "type": "List<Object>", "declarator": "finalizeMethodAdditionalArguments", "var_name": "finalizeMethodAdditionalArguments"}, {"original_string": "private MethodInvokerConfig finalizeMethodInvoker;", "modifier": "private", "type": "MethodInvokerConfig", "declarator": "finalizeMethodInvoker", "var_name": "finalizeMethodInvoker"}, {"original_string": "private boolean selfRendered;", "modifier": "private", "type": "boolean", "declarator": "selfRendered", "var_name": "selfRendered"}, {"original_string": "private String renderedHtmlOutput;", "modifier": "private", "type": "String", "declarator": "renderedHtmlOutput", "var_name": "renderedHtmlOutput"}, {"original_string": "private boolean disableSessionPersistence;", "modifier": "private", "type": "boolean", "declarator": "disableSessionPersistence", "var_name": "disableSessionPersistence"}, {"original_string": "private boolean forceSessionPersistence;", "modifier": "private", "type": "boolean", "declarator": "forceSessionPersistence", "var_name": "forceSessionPersistence"}, {"original_string": "private ComponentSecurity componentSecurity;", "modifier": "private", "type": "ComponentSecurity", "declarator": "componentSecurity", "var_name": "componentSecurity"}, {"original_string": "private String onLoadScript;", "modifier": "private", "type": "String", "declarator": "onLoadScript", "var_name": "onLoadScript"}, {"original_string": "private String onUnloadScript;", "modifier": "private", "type": "String", "declarator": "onUnloadScript", "var_name": "onUnloadScript"}, {"original_string": "private String onCloseScript;", "modifier": "private", "type": "String", "declarator": "onCloseScript", "var_name": "onCloseScript"}, {"original_string": "private String onBlurScript;", "modifier": "private", "type": "String", "declarator": "onBlurScript", "var_name": "onBlurScript"}, {"original_string": "private String onChangeScript;", "modifier": "private", "type": "String", "declarator": "onChangeScript", "var_name": "onChangeScript"}, {"original_string": "private String onClickScript;", "modifier": "private", "type": "String", "declarator": "onClickScript", "var_name": "onClickScript"}, {"original_string": "private String onDblClickScript;", "modifier": "private", "type": "String", "declarator": "onDblClickScript", "var_name": "onDblClickScript"}, {"original_string": "private String onFocusScript;", "modifier": "private", "type": "String", "declarator": "onFocusScript", "var_name": "onFocusScript"}, {"original_string": "private String onSubmitScript;", "modifier": "private", "type": "String", "declarator": "onSubmitScript", "var_name": "onSubmitScript"}, {"original_string": "private String onInputScript;", "modifier": "private", "type": "String", "declarator": "onInputScript", "var_name": "onInputScript"}, {"original_string": "private String onKeyPressScript;", "modifier": "private", "type": "String", "declarator": "onKeyPressScript", "var_name": "onKeyPressScript"}, {"original_string": "private String onKeyUpScript;", "modifier": "private", "type": "String", "declarator": "onKeyUpScript", "var_name": "onKeyUpScript"}, {"original_string": "private String onKeyDownScript;", "modifier": "private", "type": "String", "declarator": "onKeyDownScript", "var_name": "onKeyDownScript"}, {"original_string": "private String onMouseOverScript;", "modifier": "private", "type": "String", "declarator": "onMouseOverScript", "var_name": "onMouseOverScript"}, {"original_string": "private String onMouseOutScript;", "modifier": "private", "type": "String", "declarator": "onMouseOutScript", "var_name": "onMouseOutScript"}, {"original_string": "private String onMouseUpScript;", "modifier": "private", "type": "String", "declarator": "onMouseUpScript", "var_name": "onMouseUpScript"}, {"original_string": "private String onMouseDownScript;", "modifier": "private", "type": "String", "declarator": "onMouseDownScript", "var_name": "onMouseDownScript"}, {"original_string": "private String onMouseMoveScript;", "modifier": "private", "type": "String", "declarator": "onMouseMoveScript", "var_name": "onMouseMoveScript"}, {"original_string": "private String onDocumentReadyScript;", "modifier": "private", "type": "String", "declarator": "onDocumentReadyScript", "var_name": "onDocumentReadyScript"}, {"original_string": "private List<ComponentModifier> componentModifiers;", "modifier": "private", "type": "List<ComponentModifier>", "declarator": "componentModifiers", "var_name": "componentModifiers"}, {"original_string": "protected Map<String, String> templateOptions;", "modifier": "protected", "type": "Map<String, String>", "declarator": "templateOptions", "var_name": "templateOptions"}, {"original_string": "private String templateOptionsJSString;", "modifier": "private", "type": "String", "declarator": "templateOptionsJSString", "var_name": "templateOptionsJSString"}, {"original_string": "@ReferenceCopy(newCollectionInstance = true)\n    private transient Map<String, Object> context;", "modifier": "@ReferenceCopy(newCollectionInstance = true)\n    private transient", "type": "Map<String, Object>", "declarator": "context", "var_name": "context"}, {"original_string": "private List<PropertyReplacer> propertyReplacers;", "modifier": "private", "type": "List<PropertyReplacer>", "declarator": "propertyReplacers", "var_name": "propertyReplacers"}, {"original_string": "private Map<String, String> dataAttributes;", "modifier": "private", "type": "Map<String, String>", "declarator": "dataAttributes", "var_name": "dataAttributes"}, {"original_string": "private Map<String, String> scriptDataAttributes;", "modifier": "private", "type": "Map<String, String>", "declarator": "scriptDataAttributes", "var_name": "scriptDataAttributes"}, {"original_string": "private String role;", "modifier": "private", "type": "String", "declarator": "role", "var_name": "role"}, {"original_string": "private Map<String, String> ariaAttributes;", "modifier": "private", "type": "Map<String, String>", "declarator": "ariaAttributes", "var_name": "ariaAttributes"}, {"original_string": "private String preRenderContent;", "modifier": "private", "type": "String", "declarator": "preRenderContent", "var_name": "preRenderContent"}, {"original_string": "private String postRenderContent;", "modifier": "private", "type": "String", "declarator": "postRenderContent", "var_name": "postRenderContent"}, {"original_string": "private String excludeIf;", "modifier": "private", "type": "String", "declarator": "excludeIf", "var_name": "excludeIf"}, {"original_string": "private String excludeUnless;", "modifier": "private", "type": "String", "declarator": "excludeUnless", "var_name": "excludeUnless"}, {"original_string": "private boolean omitFromFormPost;", "modifier": "private", "type": "boolean", "declarator": "omitFromFormPost", "var_name": "omitFromFormPost"}], "methods": [{"identifier": "ComponentBase", "parameters": "()", "modifiers": "public", "return": "", "signature": " ComponentBase()", "full_signature": "public  ComponentBase()", "class_method_signature": "ComponentBase.ComponentBase()", "testcase": false, "constructor": true}, {"identifier": "skipLifecycle", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean skipLifecycle()", "full_signature": "@Override public boolean skipLifecycle()", "class_method_signature": "ComponentBase.skipLifecycle()", "testcase": false, "constructor": false}, {"identifier": "checkMutable", "parameters": "(boolean legalDuringInitialization)", "modifiers": "public", "return": "void", "signature": "void checkMutable(boolean legalDuringInitialization)", "full_signature": "public void checkMutable(boolean legalDuringInitialization)", "class_method_signature": "ComponentBase.checkMutable(boolean legalDuringInitialization)", "testcase": false, "constructor": false}, {"identifier": "isMutable", "parameters": "(boolean legalDuringInitialization)", "modifiers": "public", "return": "boolean", "signature": "boolean isMutable(boolean legalDuringInitialization)", "full_signature": "public boolean isMutable(boolean legalDuringInitialization)", "class_method_signature": "ComponentBase.isMutable(boolean legalDuringInitialization)", "testcase": false, "constructor": false}, {"identifier": "getViewStatus", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getViewStatus()", "full_signature": "public String getViewStatus()", "class_method_signature": "ComponentBase.getViewStatus()", "testcase": false, "constructor": false}, {"identifier": "setViewStatus", "parameters": "(String status)", "modifiers": "@Override public", "return": "void", "signature": "void setViewStatus(String status)", "full_signature": "@Override public void setViewStatus(String status)", "class_method_signature": "ComponentBase.setViewStatus(String status)", "testcase": false, "constructor": false}, {"identifier": "notifyCompleted", "parameters": "(ViewLifecyclePhase phase)", "modifiers": "@Override public", "return": "void", "signature": "void notifyCompleted(ViewLifecyclePhase phase)", "full_signature": "@Override public void notifyCompleted(ViewLifecyclePhase phase)", "class_method_signature": "ComponentBase.notifyCompleted(ViewLifecyclePhase phase)", "testcase": false, "constructor": false}, {"identifier": "isInitialized", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInitialized()", "full_signature": "public boolean isInitialized()", "class_method_signature": "ComponentBase.isInitialized()", "testcase": false, "constructor": false}, {"identifier": "isModelApplied", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isModelApplied()", "full_signature": "public boolean isModelApplied()", "class_method_signature": "ComponentBase.isModelApplied()", "testcase": false, "constructor": false}, {"identifier": "isFinal", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFinal()", "full_signature": "public boolean isFinal()", "class_method_signature": "ComponentBase.isFinal()", "testcase": false, "constructor": false}, {"identifier": "isRendered", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRendered()", "full_signature": "public boolean isRendered()", "class_method_signature": "ComponentBase.isRendered()", "testcase": false, "constructor": false}, {"identifier": "performInitialization", "parameters": "(Object model)", "modifiers": "@Override public", "return": "void", "signature": "void performInitialization(Object model)", "full_signature": "@Override public void performInitialization(Object model)", "class_method_signature": "ComponentBase.performInitialization(Object model)", "testcase": false, "constructor": false}, {"identifier": "performApplyModel", "parameters": "(Object model, LifecycleElement parent)", "modifiers": "@Override public", "return": "void", "signature": "void performApplyModel(Object model, LifecycleElement parent)", "full_signature": "@Override public void performApplyModel(Object model, LifecycleElement parent)", "class_method_signature": "ComponentBase.performApplyModel(Object model, LifecycleElement parent)", "testcase": false, "constructor": false}, {"identifier": "afterEvaluateExpression", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterEvaluateExpression()", "full_signature": "@Override public void afterEvaluateExpression()", "class_method_signature": "ComponentBase.afterEvaluateExpression()", "testcase": false, "constructor": false}, {"identifier": "performFinalize", "parameters": "(Object model, LifecycleElement parent)", "modifiers": "@Override public", "return": "void", "signature": "void performFinalize(Object model, LifecycleElement parent)", "full_signature": "@Override public void performFinalize(Object model, LifecycleElement parent)", "class_method_signature": "ComponentBase.performFinalize(Object model, LifecycleElement parent)", "testcase": false, "constructor": false}, {"identifier": "getPropertyReplacerComponents", "parameters": "()", "modifiers": "@ViewLifecycleRestriction public", "return": "List<Component>", "signature": "List<Component> getPropertyReplacerComponents()", "full_signature": "@ViewLifecycleRestriction public List<Component> getPropertyReplacerComponents()", "class_method_signature": "ComponentBase.getPropertyReplacerComponents()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "String", "signature": "String getId()", "full_signature": "@BeanTagAttribute @Override public String getId()", "class_method_signature": "ComponentBase.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "@Override public", "return": "void", "signature": "void setId(String id)", "full_signature": "@Override public void setId(String id)", "class_method_signature": "ComponentBase.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "getContainerIdSuffix", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getContainerIdSuffix()", "full_signature": "@Override public String getContainerIdSuffix()", "class_method_signature": "ComponentBase.getContainerIdSuffix()", "testcase": false, "constructor": false}, {"identifier": "setContainerIdSuffix", "parameters": "(String containerIdSuffix)", "modifiers": "@Override public", "return": "void", "signature": "void setContainerIdSuffix(String containerIdSuffix)", "full_signature": "@Override public void setContainerIdSuffix(String containerIdSuffix)", "class_method_signature": "ComponentBase.setContainerIdSuffix(String containerIdSuffix)", "testcase": false, "constructor": false}, {"identifier": "getViewPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getViewPath()", "full_signature": "@Override public String getViewPath()", "class_method_signature": "ComponentBase.getViewPath()", "testcase": false, "constructor": false}, {"identifier": "setViewPath", "parameters": "(String viewPath)", "modifiers": "@Override public", "return": "void", "signature": "void setViewPath(String viewPath)", "full_signature": "@Override public void setViewPath(String viewPath)", "class_method_signature": "ComponentBase.setViewPath(String viewPath)", "testcase": false, "constructor": false}, {"identifier": "getPhasePathMapping", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getPhasePathMapping()", "full_signature": "@Override public Map<String, String> getPhasePathMapping()", "class_method_signature": "ComponentBase.getPhasePathMapping()", "testcase": false, "constructor": false}, {"identifier": "setPhasePathMapping", "parameters": "(Map<String, String> phasePathMapping)", "modifiers": "@Override public", "return": "void", "signature": "void setPhasePathMapping(Map<String, String> phasePathMapping)", "full_signature": "@Override public void setPhasePathMapping(Map<String, String> phasePathMapping)", "class_method_signature": "ComponentBase.setPhasePathMapping(Map<String, String> phasePathMapping)", "testcase": false, "constructor": false}, {"identifier": "getTemplate", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "String", "signature": "String getTemplate()", "full_signature": "@BeanTagAttribute @Override public String getTemplate()", "class_method_signature": "ComponentBase.getTemplate()", "testcase": false, "constructor": false}, {"identifier": "setTemplate", "parameters": "(String template)", "modifiers": "@Override public", "return": "void", "signature": "void setTemplate(String template)", "full_signature": "@Override public void setTemplate(String template)", "class_method_signature": "ComponentBase.setTemplate(String template)", "testcase": false, "constructor": false}, {"identifier": "getAdditionalTemplates", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getAdditionalTemplates()", "full_signature": "@Override public List<String> getAdditionalTemplates()", "class_method_signature": "ComponentBase.getAdditionalTemplates()", "testcase": false, "constructor": false}, {"identifier": "getTemplateName", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "String", "signature": "String getTemplateName()", "full_signature": "@BeanTagAttribute @Override public String getTemplateName()", "class_method_signature": "ComponentBase.getTemplateName()", "testcase": false, "constructor": false}, {"identifier": "setTemplateName", "parameters": "(String templateName)", "modifiers": "@Override public", "return": "void", "signature": "void setTemplateName(String templateName)", "full_signature": "@Override public void setTemplateName(String templateName)", "class_method_signature": "ComponentBase.setTemplateName(String templateName)", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "String", "signature": "String getTitle()", "full_signature": "@BeanTagAttribute @Override public String getTitle()", "class_method_signature": "ComponentBase.getTitle()", "testcase": false, "constructor": false}, {"identifier": "setTitle", "parameters": "(String title)", "modifiers": "@Override public", "return": "void", "signature": "void setTitle(String title)", "full_signature": "@Override public void setTitle(String title)", "class_method_signature": "ComponentBase.setTitle(String title)", "testcase": false, "constructor": false}, {"identifier": "isHidden", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "boolean", "signature": "boolean isHidden()", "full_signature": "@BeanTagAttribute @Override public boolean isHidden()", "class_method_signature": "ComponentBase.isHidden()", "testcase": false, "constructor": false}, {"identifier": "setHidden", "parameters": "(boolean hidden)", "modifiers": "@Override public", "return": "void", "signature": "void setHidden(boolean hidden)", "full_signature": "@Override public void setHidden(boolean hidden)", "class_method_signature": "ComponentBase.setHidden(boolean hidden)", "testcase": false, "constructor": false}, {"identifier": "getReadOnly", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "Boolean", "signature": "Boolean getReadOnly()", "full_signature": "@BeanTagAttribute @Override public Boolean getReadOnly()", "class_method_signature": "ComponentBase.getReadOnly()", "testcase": false, "constructor": false}, {"identifier": "setReadOnly", "parameters": "(Boolean readOnly)", "modifiers": "@Override public", "return": "void", "signature": "void setReadOnly(Boolean readOnly)", "full_signature": "@Override public void setReadOnly(Boolean readOnly)", "class_method_signature": "ComponentBase.setReadOnly(Boolean readOnly)", "testcase": false, "constructor": false}, {"identifier": "getCanCopyOnReadOnly", "parameters": "()", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean getCanCopyOnReadOnly()", "full_signature": "@Override public Boolean getCanCopyOnReadOnly()", "class_method_signature": "ComponentBase.getCanCopyOnReadOnly()", "testcase": false, "constructor": false}, {"identifier": "setCanCopyOnReadOnly", "parameters": "(Boolean canCopyOnReadOnly)", "modifiers": "@Override public", "return": "void", "signature": "void setCanCopyOnReadOnly(Boolean canCopyOnReadOnly)", "full_signature": "@Override public void setCanCopyOnReadOnly(Boolean canCopyOnReadOnly)", "class_method_signature": "ComponentBase.setCanCopyOnReadOnly(Boolean canCopyOnReadOnly)", "testcase": false, "constructor": false}, {"identifier": "getRequired", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "Boolean", "signature": "Boolean getRequired()", "full_signature": "@BeanTagAttribute @Override public Boolean getRequired()", "class_method_signature": "ComponentBase.getRequired()", "testcase": false, "constructor": false}, {"identifier": "setRequired", "parameters": "(Boolean required)", "modifiers": "@Override public", "return": "void", "signature": "void setRequired(Boolean required)", "full_signature": "@Override public void setRequired(Boolean required)", "class_method_signature": "ComponentBase.setRequired(Boolean required)", "testcase": false, "constructor": false}, {"identifier": "isRender", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "boolean", "signature": "boolean isRender()", "full_signature": "@BeanTagAttribute @Override public boolean isRender()", "class_method_signature": "ComponentBase.isRender()", "testcase": false, "constructor": false}, {"identifier": "setRender", "parameters": "(boolean render)", "modifiers": "@Override public", "return": "void", "signature": "void setRender(boolean render)", "full_signature": "@Override public void setRender(boolean render)", "class_method_signature": "ComponentBase.setRender(boolean render)", "testcase": false, "constructor": false}, {"identifier": "isRetrieveViaAjax", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "boolean", "signature": "boolean isRetrieveViaAjax()", "full_signature": "@BeanTagAttribute @Override public boolean isRetrieveViaAjax()", "class_method_signature": "ComponentBase.isRetrieveViaAjax()", "testcase": false, "constructor": false}, {"identifier": "setRetrieveViaAjax", "parameters": "(boolean retrieveViaAjax)", "modifiers": "@Override public", "return": "void", "signature": "void setRetrieveViaAjax(boolean retrieveViaAjax)", "full_signature": "@Override public void setRetrieveViaAjax(boolean retrieveViaAjax)", "class_method_signature": "ComponentBase.setRetrieveViaAjax(boolean retrieveViaAjax)", "testcase": false, "constructor": false}, {"identifier": "getColSpan", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "int", "signature": "int getColSpan()", "full_signature": "@BeanTagAttribute @Override public int getColSpan()", "class_method_signature": "ComponentBase.getColSpan()", "testcase": false, "constructor": false}, {"identifier": "setColSpan", "parameters": "(int colSpan)", "modifiers": "@Override public", "return": "void", "signature": "void setColSpan(int colSpan)", "full_signature": "@Override public void setColSpan(int colSpan)", "class_method_signature": "ComponentBase.setColSpan(int colSpan)", "testcase": false, "constructor": false}, {"identifier": "getRowSpan", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "int", "signature": "int getRowSpan()", "full_signature": "@BeanTagAttribute @Override public int getRowSpan()", "class_method_signature": "ComponentBase.getRowSpan()", "testcase": false, "constructor": false}, {"identifier": "setRowSpan", "parameters": "(int rowSpan)", "modifiers": "@Override public", "return": "void", "signature": "void setRowSpan(int rowSpan)", "full_signature": "@Override public void setRowSpan(int rowSpan)", "class_method_signature": "ComponentBase.setRowSpan(int rowSpan)", "testcase": false, "constructor": false}, {"identifier": "getWrapperCssClasses", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "List<String>", "signature": "List<String> getWrapperCssClasses()", "full_signature": "@BeanTagAttribute @Override public List<String> getWrapperCssClasses()", "class_method_signature": "ComponentBase.getWrapperCssClasses()", "testcase": false, "constructor": false}, {"identifier": "setWrapperCssClasses", "parameters": "(List<String> wrapperCssClasses)", "modifiers": "@Override public", "return": "void", "signature": "void setWrapperCssClasses(List<String> wrapperCssClasses)", "full_signature": "@Override public void setWrapperCssClasses(List<String> wrapperCssClasses)", "class_method_signature": "ComponentBase.setWrapperCssClasses(List<String> wrapperCssClasses)", "testcase": false, "constructor": false}, {"identifier": "addWrapperCssClass", "parameters": "(String cssClass)", "modifiers": "@Override public", "return": "void", "signature": "void addWrapperCssClass(String cssClass)", "full_signature": "@Override public void addWrapperCssClass(String cssClass)", "class_method_signature": "ComponentBase.addWrapperCssClass(String cssClass)", "testcase": false, "constructor": false}, {"identifier": "getWrapperCssClassesAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWrapperCssClassesAsString()", "full_signature": "public String getWrapperCssClassesAsString()", "class_method_signature": "ComponentBase.getWrapperCssClassesAsString()", "testcase": false, "constructor": false}, {"identifier": "getWrapperStyle", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "String", "signature": "String getWrapperStyle()", "full_signature": "@BeanTagAttribute @Override public String getWrapperStyle()", "class_method_signature": "ComponentBase.getWrapperStyle()", "testcase": false, "constructor": false}, {"identifier": "setWrapperStyle", "parameters": "(String wrapperStyle)", "modifiers": "@Override public", "return": "void", "signature": "void setWrapperStyle(String wrapperStyle)", "full_signature": "@Override public void setWrapperStyle(String wrapperStyle)", "class_method_signature": "ComponentBase.setWrapperStyle(String wrapperStyle)", "testcase": false, "constructor": false}, {"identifier": "getCellWidth", "parameters": "()", "modifiers": "@BeanTagAttribute @Override public", "return": "String", "signature": "String getCellWidth()", "full_signature": "@BeanTagAttribute @Override public String getCellWidth()", "class_method_signature": "ComponentBase.getCellWidth()", "testcase": false, "constructor": false}, {"identifier": "setCellWidth", "parameters": "(String cellWidth)", "modifiers": "@Override public", "return": "void", "signature": "void setCellWidth(String cellWidth)", "full_signature": "@Override public void setCellWidth(String cellWidth)", "class_method_signature": "ComponentBase.setCellWidth(String cellWidth)", "testcase": false, "constructor": false}, {"identifier": "getCssGridSizes", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "CssGridSizes", "signature": "CssGridSizes getCssGridSizes()", "full_signature": "@Override @BeanTagAttribute public CssGridSizes getCssGridSizes()", "class_method_signature": "ComponentBase.getCssGridSizes()", "testcase": false, "constructor": false}, {"identifier": "setCssGridSizes", "parameters": "(CssGridSizes cssGridSizes)", "modifiers": "@Override public", "return": "void", "signature": "void setCssGridSizes(CssGridSizes cssGridSizes)", "full_signature": "@Override public void setCssGridSizes(CssGridSizes cssGridSizes)", "class_method_signature": "ComponentBase.setCssGridSizes(CssGridSizes cssGridSizes)", "testcase": false, "constructor": false}, {"identifier": "getAlign", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getAlign()", "full_signature": "@Override @BeanTagAttribute public String getAlign()", "class_method_signature": "ComponentBase.getAlign()", "testcase": false, "constructor": false}, {"identifier": "setAlign", "parameters": "(String align)", "modifiers": "@Override public", "return": "void", "signature": "void setAlign(String align)", "full_signature": "@Override public void setAlign(String align)", "class_method_signature": "ComponentBase.setAlign(String align)", "testcase": false, "constructor": false}, {"identifier": "getValign", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getValign()", "full_signature": "@Override @BeanTagAttribute public String getValign()", "class_method_signature": "ComponentBase.getValign()", "testcase": false, "constructor": false}, {"identifier": "setValign", "parameters": "(String valign)", "modifiers": "@Override public", "return": "void", "signature": "void setValign(String valign)", "full_signature": "@Override public void setValign(String valign)", "class_method_signature": "ComponentBase.setValign(String valign)", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getWidth()", "full_signature": "@Override @BeanTagAttribute public String getWidth()", "class_method_signature": "ComponentBase.getWidth()", "testcase": false, "constructor": false}, {"identifier": "setWidth", "parameters": "(String width)", "modifiers": "@Override public", "return": "void", "signature": "void setWidth(String width)", "full_signature": "@Override public void setWidth(String width)", "class_method_signature": "ComponentBase.setWidth(String width)", "testcase": false, "constructor": false}, {"identifier": "getStyle", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getStyle()", "full_signature": "@Override @BeanTagAttribute public String getStyle()", "class_method_signature": "ComponentBase.getStyle()", "testcase": false, "constructor": false}, {"identifier": "setStyle", "parameters": "(String style)", "modifiers": "@Override public", "return": "void", "signature": "void setStyle(String style)", "full_signature": "@Override public void setStyle(String style)", "class_method_signature": "ComponentBase.setStyle(String style)", "testcase": false, "constructor": false}, {"identifier": "getLibraryCssClasses", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLibraryCssClasses()", "full_signature": "public List<String> getLibraryCssClasses()", "class_method_signature": "ComponentBase.getLibraryCssClasses()", "testcase": false, "constructor": false}, {"identifier": "setLibraryCssClasses", "parameters": "(List<String> libraryCssClasses)", "modifiers": "public", "return": "void", "signature": "void setLibraryCssClasses(List<String> libraryCssClasses)", "full_signature": "public void setLibraryCssClasses(List<String> libraryCssClasses)", "class_method_signature": "ComponentBase.setLibraryCssClasses(List<String> libraryCssClasses)", "testcase": false, "constructor": false}, {"identifier": "getCssClasses", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "List<String>", "signature": "List<String> getCssClasses()", "full_signature": "@Override @BeanTagAttribute public List<String> getCssClasses()", "class_method_signature": "ComponentBase.getCssClasses()", "testcase": false, "constructor": false}, {"identifier": "setCssClasses", "parameters": "(List<String> cssClasses)", "modifiers": "@Override public", "return": "void", "signature": "void setCssClasses(List<String> cssClasses)", "full_signature": "@Override public void setCssClasses(List<String> cssClasses)", "class_method_signature": "ComponentBase.setCssClasses(List<String> cssClasses)", "testcase": false, "constructor": false}, {"identifier": "getAdditionalCssClasses", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "List<String>", "signature": "List<String> getAdditionalCssClasses()", "full_signature": "@Override @BeanTagAttribute public List<String> getAdditionalCssClasses()", "class_method_signature": "ComponentBase.getAdditionalCssClasses()", "testcase": false, "constructor": false}, {"identifier": "setAdditionalCssClasses", "parameters": "(List<String> additionalCssClasses)", "modifiers": "@Override public", "return": "void", "signature": "void setAdditionalCssClasses(List<String> additionalCssClasses)", "full_signature": "@Override public void setAdditionalCssClasses(List<String> additionalCssClasses)", "class_method_signature": "ComponentBase.setAdditionalCssClasses(List<String> additionalCssClasses)", "testcase": false, "constructor": false}, {"identifier": "getStyleClassesAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStyleClassesAsString()", "full_signature": "public String getStyleClassesAsString()", "class_method_signature": "ComponentBase.getStyleClassesAsString()", "testcase": false, "constructor": false}, {"identifier": "addStyleClass", "parameters": "(String styleClass)", "modifiers": "@Override public", "return": "void", "signature": "void addStyleClass(String styleClass)", "full_signature": "@Override public void addStyleClass(String styleClass)", "class_method_signature": "ComponentBase.addStyleClass(String styleClass)", "testcase": false, "constructor": false}, {"identifier": "appendToStyle", "parameters": "(String styleRules)", "modifiers": "@Override public", "return": "void", "signature": "void appendToStyle(String styleRules)", "full_signature": "@Override public void appendToStyle(String styleRules)", "class_method_signature": "ComponentBase.appendToStyle(String styleRules)", "testcase": false, "constructor": false}, {"identifier": "getFinalizeMethodToCall", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getFinalizeMethodToCall()", "full_signature": "@Override @BeanTagAttribute public String getFinalizeMethodToCall()", "class_method_signature": "ComponentBase.getFinalizeMethodToCall()", "testcase": false, "constructor": false}, {"identifier": "setFinalizeMethodToCall", "parameters": "(String finalizeMethodToCall)", "modifiers": "public", "return": "void", "signature": "void setFinalizeMethodToCall(String finalizeMethodToCall)", "full_signature": "public void setFinalizeMethodToCall(String finalizeMethodToCall)", "class_method_signature": "ComponentBase.setFinalizeMethodToCall(String finalizeMethodToCall)", "testcase": false, "constructor": false}, {"identifier": "getFinalizeMethodAdditionalArguments", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "List<Object>", "signature": "List<Object> getFinalizeMethodAdditionalArguments()", "full_signature": "@Override @BeanTagAttribute public List<Object> getFinalizeMethodAdditionalArguments()", "class_method_signature": "ComponentBase.getFinalizeMethodAdditionalArguments()", "testcase": false, "constructor": false}, {"identifier": "setFinalizeMethodAdditionalArguments", "parameters": "(List<Object> finalizeMethodAdditionalArguments)", "modifiers": "public", "return": "void", "signature": "void setFinalizeMethodAdditionalArguments(List<Object> finalizeMethodAdditionalArguments)", "full_signature": "public void setFinalizeMethodAdditionalArguments(List<Object> finalizeMethodAdditionalArguments)", "class_method_signature": "ComponentBase.setFinalizeMethodAdditionalArguments(List<Object> finalizeMethodAdditionalArguments)", "testcase": false, "constructor": false}, {"identifier": "getFinalizeMethodInvoker", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "MethodInvokerConfig", "signature": "MethodInvokerConfig getFinalizeMethodInvoker()", "full_signature": "@Override @BeanTagAttribute public MethodInvokerConfig getFinalizeMethodInvoker()", "class_method_signature": "ComponentBase.getFinalizeMethodInvoker()", "testcase": false, "constructor": false}, {"identifier": "setFinalizeMethodInvoker", "parameters": "(MethodInvokerConfig finalizeMethodInvoker)", "modifiers": "public", "return": "void", "signature": "void setFinalizeMethodInvoker(MethodInvokerConfig finalizeMethodInvoker)", "full_signature": "public void setFinalizeMethodInvoker(MethodInvokerConfig finalizeMethodInvoker)", "class_method_signature": "ComponentBase.setFinalizeMethodInvoker(MethodInvokerConfig finalizeMethodInvoker)", "testcase": false, "constructor": false}, {"identifier": "isSelfRendered", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "boolean", "signature": "boolean isSelfRendered()", "full_signature": "@Override @BeanTagAttribute public boolean isSelfRendered()", "class_method_signature": "ComponentBase.isSelfRendered()", "testcase": false, "constructor": false}, {"identifier": "setSelfRendered", "parameters": "(boolean selfRendered)", "modifiers": "@Override public", "return": "void", "signature": "void setSelfRendered(boolean selfRendered)", "full_signature": "@Override public void setSelfRendered(boolean selfRendered)", "class_method_signature": "ComponentBase.setSelfRendered(boolean selfRendered)", "testcase": false, "constructor": false}, {"identifier": "getRenderedHtmlOutput", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getRenderedHtmlOutput()", "full_signature": "@Override @BeanTagAttribute public String getRenderedHtmlOutput()", "class_method_signature": "ComponentBase.getRenderedHtmlOutput()", "testcase": false, "constructor": false}, {"identifier": "setRenderedHtmlOutput", "parameters": "(String renderedHtmlOutput)", "modifiers": "@Override public", "return": "void", "signature": "void setRenderedHtmlOutput(String renderedHtmlOutput)", "full_signature": "@Override public void setRenderedHtmlOutput(String renderedHtmlOutput)", "class_method_signature": "ComponentBase.setRenderedHtmlOutput(String renderedHtmlOutput)", "testcase": false, "constructor": false}, {"identifier": "isDisableSessionPersistence", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "boolean", "signature": "boolean isDisableSessionPersistence()", "full_signature": "@Override @BeanTagAttribute public boolean isDisableSessionPersistence()", "class_method_signature": "ComponentBase.isDisableSessionPersistence()", "testcase": false, "constructor": false}, {"identifier": "setDisableSessionPersistence", "parameters": "(boolean disableSessionPersistence)", "modifiers": "@Override public", "return": "void", "signature": "void setDisableSessionPersistence(boolean disableSessionPersistence)", "full_signature": "@Override public void setDisableSessionPersistence(boolean disableSessionPersistence)", "class_method_signature": "ComponentBase.setDisableSessionPersistence(boolean disableSessionPersistence)", "testcase": false, "constructor": false}, {"identifier": "isForceSessionPersistence", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "boolean", "signature": "boolean isForceSessionPersistence()", "full_signature": "@Override @BeanTagAttribute public boolean isForceSessionPersistence()", "class_method_signature": "ComponentBase.isForceSessionPersistence()", "testcase": false, "constructor": false}, {"identifier": "setForceSessionPersistence", "parameters": "(boolean forceSessionPersistence)", "modifiers": "@Override public", "return": "void", "signature": "void setForceSessionPersistence(boolean forceSessionPersistence)", "full_signature": "@Override public void setForceSessionPersistence(boolean forceSessionPersistence)", "class_method_signature": "ComponentBase.setForceSessionPersistence(boolean forceSessionPersistence)", "testcase": false, "constructor": false}, {"identifier": "getComponentSecurity", "parameters": "()", "modifiers": "@Override @BeanTagAttribute(type = BeanTagAttribute.AttributeType.DIRECTORBYTYPE) public", "return": "ComponentSecurity", "signature": "ComponentSecurity getComponentSecurity()", "full_signature": "@Override @BeanTagAttribute(type = BeanTagAttribute.AttributeType.DIRECTORBYTYPE) public ComponentSecurity getComponentSecurity()", "class_method_signature": "ComponentBase.getComponentSecurity()", "testcase": false, "constructor": false}, {"identifier": "setComponentSecurity", "parameters": "(ComponentSecurity componentSecurity)", "modifiers": "@Override public", "return": "void", "signature": "void setComponentSecurity(ComponentSecurity componentSecurity)", "full_signature": "@Override public void setComponentSecurity(ComponentSecurity componentSecurity)", "class_method_signature": "ComponentBase.setComponentSecurity(ComponentSecurity componentSecurity)", "testcase": false, "constructor": false}, {"identifier": "initializeComponentSecurity", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initializeComponentSecurity()", "full_signature": "protected void initializeComponentSecurity()", "class_method_signature": "ComponentBase.initializeComponentSecurity()", "testcase": false, "constructor": false}, {"identifier": "isEditAuthz", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "Boolean", "signature": "Boolean isEditAuthz()", "full_signature": "@BeanTagAttribute public Boolean isEditAuthz()", "class_method_signature": "ComponentBase.isEditAuthz()", "testcase": false, "constructor": false}, {"identifier": "setEditAuthz", "parameters": "(Boolean editAuthz)", "modifiers": "public", "return": "void", "signature": "void setEditAuthz(Boolean editAuthz)", "full_signature": "public void setEditAuthz(Boolean editAuthz)", "class_method_signature": "ComponentBase.setEditAuthz(Boolean editAuthz)", "testcase": false, "constructor": false}, {"identifier": "isViewAuthz", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "Boolean", "signature": "Boolean isViewAuthz()", "full_signature": "@BeanTagAttribute public Boolean isViewAuthz()", "class_method_signature": "ComponentBase.isViewAuthz()", "testcase": false, "constructor": false}, {"identifier": "setViewAuthz", "parameters": "(Boolean viewAuthz)", "modifiers": "public", "return": "void", "signature": "void setViewAuthz(Boolean viewAuthz)", "full_signature": "public void setViewAuthz(Boolean viewAuthz)", "class_method_signature": "ComponentBase.setViewAuthz(Boolean viewAuthz)", "testcase": false, "constructor": false}, {"identifier": "getComponentModifiers", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "List<ComponentModifier>", "signature": "List<ComponentModifier> getComponentModifiers()", "full_signature": "@Override @BeanTagAttribute public List<ComponentModifier> getComponentModifiers()", "class_method_signature": "ComponentBase.getComponentModifiers()", "testcase": false, "constructor": false}, {"identifier": "setComponentModifiers", "parameters": "(List<ComponentModifier> componentModifiers)", "modifiers": "@Override public", "return": "void", "signature": "void setComponentModifiers(List<ComponentModifier> componentModifiers)", "full_signature": "@Override public void setComponentModifiers(List<ComponentModifier> componentModifiers)", "class_method_signature": "ComponentBase.setComponentModifiers(List<ComponentModifier> componentModifiers)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "Map<String, Object>", "signature": "Map<String, Object> getContext()", "full_signature": "@Override @BeanTagAttribute public Map<String, Object> getContext()", "class_method_signature": "ComponentBase.getContext()", "testcase": false, "constructor": false}, {"identifier": "setContext", "parameters": "(Map<String, Object> context)", "modifiers": "@Override public", "return": "void", "signature": "void setContext(Map<String, Object> context)", "full_signature": "@Override public void setContext(Map<String, Object> context)", "class_method_signature": "ComponentBase.setContext(Map<String, Object> context)", "testcase": false, "constructor": false}, {"identifier": "pushObjectToContext", "parameters": "(String objectName, Object object)", "modifiers": "@Override public", "return": "void", "signature": "void pushObjectToContext(String objectName, Object object)", "full_signature": "@Override public void pushObjectToContext(String objectName, Object object)", "class_method_signature": "ComponentBase.pushObjectToContext(String objectName, Object object)", "testcase": false, "constructor": false}, {"identifier": "pushToPropertyReplacerContext", "parameters": "(String objectName, Object object)", "modifiers": "protected", "return": "void", "signature": "void pushToPropertyReplacerContext(String objectName, Object object)", "full_signature": "protected void pushToPropertyReplacerContext(String objectName, Object object)", "class_method_signature": "ComponentBase.pushToPropertyReplacerContext(String objectName, Object object)", "testcase": false, "constructor": false}, {"identifier": "pushAllToContext", "parameters": "(Map<String, Object> objects)", "modifiers": "@Override public", "return": "void", "signature": "void pushAllToContext(Map<String, Object> objects)", "full_signature": "@Override public void pushAllToContext(Map<String, Object> objects)", "class_method_signature": "ComponentBase.pushAllToContext(Map<String, Object> objects)", "testcase": false, "constructor": false}, {"identifier": "getPropertyReplacers", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "List<PropertyReplacer>", "signature": "List<PropertyReplacer> getPropertyReplacers()", "full_signature": "@Override @BeanTagAttribute public List<PropertyReplacer> getPropertyReplacers()", "class_method_signature": "ComponentBase.getPropertyReplacers()", "testcase": false, "constructor": false}, {"identifier": "setPropertyReplacers", "parameters": "(List<PropertyReplacer> propertyReplacers)", "modifiers": "@Override public", "return": "void", "signature": "void setPropertyReplacers(List<PropertyReplacer> propertyReplacers)", "full_signature": "@Override public void setPropertyReplacers(List<PropertyReplacer> propertyReplacers)", "class_method_signature": "ComponentBase.setPropertyReplacers(List<PropertyReplacer> propertyReplacers)", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override @BeanTagAttribute public int getOrder()", "class_method_signature": "ComponentBase.getOrder()", "testcase": false, "constructor": false}, {"identifier": "setOrder", "parameters": "(int order)", "modifiers": "public", "return": "void", "signature": "void setOrder(int order)", "full_signature": "public void setOrder(int order)", "class_method_signature": "ComponentBase.setOrder(int order)", "testcase": false, "constructor": false}, {"identifier": "getToolTip", "parameters": "()", "modifiers": "@Override @BeanTagAttribute(type = BeanTagAttribute.AttributeType.DIRECTORBYTYPE) public", "return": "Tooltip", "signature": "Tooltip getToolTip()", "full_signature": "@Override @BeanTagAttribute(type = BeanTagAttribute.AttributeType.DIRECTORBYTYPE) public Tooltip getToolTip()", "class_method_signature": "ComponentBase.getToolTip()", "testcase": false, "constructor": false}, {"identifier": "setToolTip", "parameters": "(Tooltip toolTip)", "modifiers": "@Override public", "return": "void", "signature": "void setToolTip(Tooltip toolTip)", "full_signature": "@Override public void setToolTip(Tooltip toolTip)", "class_method_signature": "ComponentBase.setToolTip(Tooltip toolTip)", "testcase": false, "constructor": false}, {"identifier": "getEventHandlerScript", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getEventHandlerScript()", "full_signature": "@Override public String getEventHandlerScript()", "class_method_signature": "ComponentBase.getEventHandlerScript()", "testcase": false, "constructor": false}, {"identifier": "getOnLoadScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnLoadScript()", "full_signature": "@Override @BeanTagAttribute public String getOnLoadScript()", "class_method_signature": "ComponentBase.getOnLoadScript()", "testcase": false, "constructor": false}, {"identifier": "setOnLoadScript", "parameters": "(String onLoadScript)", "modifiers": "public", "return": "void", "signature": "void setOnLoadScript(String onLoadScript)", "full_signature": "public void setOnLoadScript(String onLoadScript)", "class_method_signature": "ComponentBase.setOnLoadScript(String onLoadScript)", "testcase": false, "constructor": false}, {"identifier": "getOnDocumentReadyScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnDocumentReadyScript()", "full_signature": "@Override @BeanTagAttribute public String getOnDocumentReadyScript()", "class_method_signature": "ComponentBase.getOnDocumentReadyScript()", "testcase": false, "constructor": false}, {"identifier": "setOnDocumentReadyScript", "parameters": "(String onDocumentReadyScript)", "modifiers": "public", "return": "void", "signature": "void setOnDocumentReadyScript(String onDocumentReadyScript)", "full_signature": "public void setOnDocumentReadyScript(String onDocumentReadyScript)", "class_method_signature": "ComponentBase.setOnDocumentReadyScript(String onDocumentReadyScript)", "testcase": false, "constructor": false}, {"identifier": "getOnUnloadScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnUnloadScript()", "full_signature": "@Override @BeanTagAttribute public String getOnUnloadScript()", "class_method_signature": "ComponentBase.getOnUnloadScript()", "testcase": false, "constructor": false}, {"identifier": "setOnUnloadScript", "parameters": "(String onUnloadScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnUnloadScript(String onUnloadScript)", "full_signature": "@Override public void setOnUnloadScript(String onUnloadScript)", "class_method_signature": "ComponentBase.setOnUnloadScript(String onUnloadScript)", "testcase": false, "constructor": false}, {"identifier": "getOnCloseScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnCloseScript()", "full_signature": "@Override @BeanTagAttribute public String getOnCloseScript()", "class_method_signature": "ComponentBase.getOnCloseScript()", "testcase": false, "constructor": false}, {"identifier": "setOnCloseScript", "parameters": "(String onCloseScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnCloseScript(String onCloseScript)", "full_signature": "@Override public void setOnCloseScript(String onCloseScript)", "class_method_signature": "ComponentBase.setOnCloseScript(String onCloseScript)", "testcase": false, "constructor": false}, {"identifier": "getOnBlurScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnBlurScript()", "full_signature": "@Override @BeanTagAttribute public String getOnBlurScript()", "class_method_signature": "ComponentBase.getOnBlurScript()", "testcase": false, "constructor": false}, {"identifier": "setOnBlurScript", "parameters": "(String onBlurScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnBlurScript(String onBlurScript)", "full_signature": "@Override public void setOnBlurScript(String onBlurScript)", "class_method_signature": "ComponentBase.setOnBlurScript(String onBlurScript)", "testcase": false, "constructor": false}, {"identifier": "getOnChangeScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnChangeScript()", "full_signature": "@Override @BeanTagAttribute public String getOnChangeScript()", "class_method_signature": "ComponentBase.getOnChangeScript()", "testcase": false, "constructor": false}, {"identifier": "setOnChangeScript", "parameters": "(String onChangeScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnChangeScript(String onChangeScript)", "full_signature": "@Override public void setOnChangeScript(String onChangeScript)", "class_method_signature": "ComponentBase.setOnChangeScript(String onChangeScript)", "testcase": false, "constructor": false}, {"identifier": "getOnClickScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnClickScript()", "full_signature": "@Override @BeanTagAttribute public String getOnClickScript()", "class_method_signature": "ComponentBase.getOnClickScript()", "testcase": false, "constructor": false}, {"identifier": "setOnClickScript", "parameters": "(String onClickScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnClickScript(String onClickScript)", "full_signature": "@Override public void setOnClickScript(String onClickScript)", "class_method_signature": "ComponentBase.setOnClickScript(String onClickScript)", "testcase": false, "constructor": false}, {"identifier": "getOnDblClickScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnDblClickScript()", "full_signature": "@Override @BeanTagAttribute public String getOnDblClickScript()", "class_method_signature": "ComponentBase.getOnDblClickScript()", "testcase": false, "constructor": false}, {"identifier": "setOnDblClickScript", "parameters": "(String onDblClickScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnDblClickScript(String onDblClickScript)", "full_signature": "@Override public void setOnDblClickScript(String onDblClickScript)", "class_method_signature": "ComponentBase.setOnDblClickScript(String onDblClickScript)", "testcase": false, "constructor": false}, {"identifier": "getOnFocusScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnFocusScript()", "full_signature": "@Override @BeanTagAttribute public String getOnFocusScript()", "class_method_signature": "ComponentBase.getOnFocusScript()", "testcase": false, "constructor": false}, {"identifier": "setOnFocusScript", "parameters": "(String onFocusScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnFocusScript(String onFocusScript)", "full_signature": "@Override public void setOnFocusScript(String onFocusScript)", "class_method_signature": "ComponentBase.setOnFocusScript(String onFocusScript)", "testcase": false, "constructor": false}, {"identifier": "getOnSubmitScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnSubmitScript()", "full_signature": "@Override @BeanTagAttribute public String getOnSubmitScript()", "class_method_signature": "ComponentBase.getOnSubmitScript()", "testcase": false, "constructor": false}, {"identifier": "setOnSubmitScript", "parameters": "(String onSubmitScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnSubmitScript(String onSubmitScript)", "full_signature": "@Override public void setOnSubmitScript(String onSubmitScript)", "class_method_signature": "ComponentBase.setOnSubmitScript(String onSubmitScript)", "testcase": false, "constructor": false}, {"identifier": "getOnInputScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnInputScript()", "full_signature": "@Override @BeanTagAttribute public String getOnInputScript()", "class_method_signature": "ComponentBase.getOnInputScript()", "testcase": false, "constructor": false}, {"identifier": "setOnInputScript", "parameters": "(String onInputScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnInputScript(String onInputScript)", "full_signature": "@Override public void setOnInputScript(String onInputScript)", "class_method_signature": "ComponentBase.setOnInputScript(String onInputScript)", "testcase": false, "constructor": false}, {"identifier": "getOnKeyPressScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnKeyPressScript()", "full_signature": "@Override @BeanTagAttribute public String getOnKeyPressScript()", "class_method_signature": "ComponentBase.getOnKeyPressScript()", "testcase": false, "constructor": false}, {"identifier": "setOnKeyPressScript", "parameters": "(String onKeyPressScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnKeyPressScript(String onKeyPressScript)", "full_signature": "@Override public void setOnKeyPressScript(String onKeyPressScript)", "class_method_signature": "ComponentBase.setOnKeyPressScript(String onKeyPressScript)", "testcase": false, "constructor": false}, {"identifier": "getOnKeyUpScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnKeyUpScript()", "full_signature": "@Override @BeanTagAttribute public String getOnKeyUpScript()", "class_method_signature": "ComponentBase.getOnKeyUpScript()", "testcase": false, "constructor": false}, {"identifier": "setOnKeyUpScript", "parameters": "(String onKeyUpScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnKeyUpScript(String onKeyUpScript)", "full_signature": "@Override public void setOnKeyUpScript(String onKeyUpScript)", "class_method_signature": "ComponentBase.setOnKeyUpScript(String onKeyUpScript)", "testcase": false, "constructor": false}, {"identifier": "getOnKeyDownScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnKeyDownScript()", "full_signature": "@Override @BeanTagAttribute public String getOnKeyDownScript()", "class_method_signature": "ComponentBase.getOnKeyDownScript()", "testcase": false, "constructor": false}, {"identifier": "setOnKeyDownScript", "parameters": "(String onKeyDownScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnKeyDownScript(String onKeyDownScript)", "full_signature": "@Override public void setOnKeyDownScript(String onKeyDownScript)", "class_method_signature": "ComponentBase.setOnKeyDownScript(String onKeyDownScript)", "testcase": false, "constructor": false}, {"identifier": "getOnMouseOverScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnMouseOverScript()", "full_signature": "@Override @BeanTagAttribute public String getOnMouseOverScript()", "class_method_signature": "ComponentBase.getOnMouseOverScript()", "testcase": false, "constructor": false}, {"identifier": "setOnMouseOverScript", "parameters": "(String onMouseOverScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnMouseOverScript(String onMouseOverScript)", "full_signature": "@Override public void setOnMouseOverScript(String onMouseOverScript)", "class_method_signature": "ComponentBase.setOnMouseOverScript(String onMouseOverScript)", "testcase": false, "constructor": false}, {"identifier": "getOnMouseOutScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnMouseOutScript()", "full_signature": "@Override @BeanTagAttribute public String getOnMouseOutScript()", "class_method_signature": "ComponentBase.getOnMouseOutScript()", "testcase": false, "constructor": false}, {"identifier": "setOnMouseOutScript", "parameters": "(String onMouseOutScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnMouseOutScript(String onMouseOutScript)", "full_signature": "@Override public void setOnMouseOutScript(String onMouseOutScript)", "class_method_signature": "ComponentBase.setOnMouseOutScript(String onMouseOutScript)", "testcase": false, "constructor": false}, {"identifier": "getOnMouseUpScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnMouseUpScript()", "full_signature": "@Override @BeanTagAttribute public String getOnMouseUpScript()", "class_method_signature": "ComponentBase.getOnMouseUpScript()", "testcase": false, "constructor": false}, {"identifier": "setOnMouseUpScript", "parameters": "(String onMouseUpScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnMouseUpScript(String onMouseUpScript)", "full_signature": "@Override public void setOnMouseUpScript(String onMouseUpScript)", "class_method_signature": "ComponentBase.setOnMouseUpScript(String onMouseUpScript)", "testcase": false, "constructor": false}, {"identifier": "getOnMouseDownScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnMouseDownScript()", "full_signature": "@Override @BeanTagAttribute public String getOnMouseDownScript()", "class_method_signature": "ComponentBase.getOnMouseDownScript()", "testcase": false, "constructor": false}, {"identifier": "setOnMouseDownScript", "parameters": "(String onMouseDownScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnMouseDownScript(String onMouseDownScript)", "full_signature": "@Override public void setOnMouseDownScript(String onMouseDownScript)", "class_method_signature": "ComponentBase.setOnMouseDownScript(String onMouseDownScript)", "testcase": false, "constructor": false}, {"identifier": "getOnMouseMoveScript", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getOnMouseMoveScript()", "full_signature": "@Override @BeanTagAttribute public String getOnMouseMoveScript()", "class_method_signature": "ComponentBase.getOnMouseMoveScript()", "testcase": false, "constructor": false}, {"identifier": "setOnMouseMoveScript", "parameters": "(String onMouseMoveScript)", "modifiers": "@Override public", "return": "void", "signature": "void setOnMouseMoveScript(String onMouseMoveScript)", "full_signature": "@Override public void setOnMouseMoveScript(String onMouseMoveScript)", "class_method_signature": "ComponentBase.setOnMouseMoveScript(String onMouseMoveScript)", "testcase": false, "constructor": false}, {"identifier": "getTemplateOptions", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "Map<String, String>", "signature": "Map<String, String> getTemplateOptions()", "full_signature": "@Override @BeanTagAttribute public Map<String, String> getTemplateOptions()", "class_method_signature": "ComponentBase.getTemplateOptions()", "testcase": false, "constructor": false}, {"identifier": "setTemplateOptions", "parameters": "(Map<String, String> templateOptions)", "modifiers": "@Override public", "return": "void", "signature": "void setTemplateOptions(Map<String, String> templateOptions)", "full_signature": "@Override public void setTemplateOptions(Map<String, String> templateOptions)", "class_method_signature": "ComponentBase.setTemplateOptions(Map<String, String> templateOptions)", "testcase": false, "constructor": false}, {"identifier": "getTemplateOptionsJSString", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getTemplateOptionsJSString()", "full_signature": "@Override @BeanTagAttribute public String getTemplateOptionsJSString()", "class_method_signature": "ComponentBase.getTemplateOptionsJSString()", "testcase": false, "constructor": false}, {"identifier": "setTemplateOptionsJSString", "parameters": "(String templateOptionsJSString)", "modifiers": "@Override public", "return": "void", "signature": "void setTemplateOptionsJSString(String templateOptionsJSString)", "full_signature": "@Override public void setTemplateOptionsJSString(String templateOptionsJSString)", "class_method_signature": "ComponentBase.setTemplateOptionsJSString(String templateOptionsJSString)", "testcase": false, "constructor": false}, {"identifier": "getProgressiveRender", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "String", "signature": "String getProgressiveRender()", "full_signature": "@BeanTagAttribute public String getProgressiveRender()", "class_method_signature": "ComponentBase.getProgressiveRender()", "testcase": false, "constructor": false}, {"identifier": "setProgressiveRender", "parameters": "(String progressiveRender)", "modifiers": "public", "return": "void", "signature": "void setProgressiveRender(String progressiveRender)", "full_signature": "public void setProgressiveRender(String progressiveRender)", "class_method_signature": "ComponentBase.setProgressiveRender(String progressiveRender)", "testcase": false, "constructor": false}, {"identifier": "getConditionalRefresh", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "String", "signature": "String getConditionalRefresh()", "full_signature": "@BeanTagAttribute public String getConditionalRefresh()", "class_method_signature": "ComponentBase.getConditionalRefresh()", "testcase": false, "constructor": false}, {"identifier": "setConditionalRefresh", "parameters": "(String conditionalRefresh)", "modifiers": "public", "return": "void", "signature": "void setConditionalRefresh(String conditionalRefresh)", "full_signature": "public void setConditionalRefresh(String conditionalRefresh)", "class_method_signature": "ComponentBase.setConditionalRefresh(String conditionalRefresh)", "testcase": false, "constructor": false}, {"identifier": "getProgressiveDisclosureControlNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getProgressiveDisclosureControlNames()", "full_signature": "public List<String> getProgressiveDisclosureControlNames()", "class_method_signature": "ComponentBase.getProgressiveDisclosureControlNames()", "testcase": false, "constructor": false}, {"identifier": "getProgressiveDisclosureConditionJs", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProgressiveDisclosureConditionJs()", "full_signature": "public String getProgressiveDisclosureConditionJs()", "class_method_signature": "ComponentBase.getProgressiveDisclosureConditionJs()", "testcase": false, "constructor": false}, {"identifier": "getConditionalRefreshConditionJs", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getConditionalRefreshConditionJs()", "full_signature": "public String getConditionalRefreshConditionJs()", "class_method_signature": "ComponentBase.getConditionalRefreshConditionJs()", "testcase": false, "constructor": false}, {"identifier": "getConditionalRefreshControlNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getConditionalRefreshControlNames()", "full_signature": "public List<String> getConditionalRefreshControlNames()", "class_method_signature": "ComponentBase.getConditionalRefreshControlNames()", "testcase": false, "constructor": false}, {"identifier": "isProgressiveRenderViaAJAX", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "boolean", "signature": "boolean isProgressiveRenderViaAJAX()", "full_signature": "@BeanTagAttribute public boolean isProgressiveRenderViaAJAX()", "class_method_signature": "ComponentBase.isProgressiveRenderViaAJAX()", "testcase": false, "constructor": false}, {"identifier": "setProgressiveRenderViaAJAX", "parameters": "(boolean progressiveRenderViaAJAX)", "modifiers": "public", "return": "void", "signature": "void setProgressiveRenderViaAJAX(boolean progressiveRenderViaAJAX)", "full_signature": "public void setProgressiveRenderViaAJAX(boolean progressiveRenderViaAJAX)", "class_method_signature": "ComponentBase.setProgressiveRenderViaAJAX(boolean progressiveRenderViaAJAX)", "testcase": false, "constructor": false}, {"identifier": "isProgressiveRenderAndRefresh", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "boolean", "signature": "boolean isProgressiveRenderAndRefresh()", "full_signature": "@BeanTagAttribute public boolean isProgressiveRenderAndRefresh()", "class_method_signature": "ComponentBase.isProgressiveRenderAndRefresh()", "testcase": false, "constructor": false}, {"identifier": "setProgressiveRenderAndRefresh", "parameters": "(boolean progressiveRenderAndRefresh)", "modifiers": "public", "return": "void", "signature": "void setProgressiveRenderAndRefresh(boolean progressiveRenderAndRefresh)", "full_signature": "public void setProgressiveRenderAndRefresh(boolean progressiveRenderAndRefresh)", "class_method_signature": "ComponentBase.setProgressiveRenderAndRefresh(boolean progressiveRenderAndRefresh)", "testcase": false, "constructor": false}, {"identifier": "getRefreshWhenChangedPropertyNames", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "List<String>", "signature": "List<String> getRefreshWhenChangedPropertyNames()", "full_signature": "@Override @BeanTagAttribute public List<String> getRefreshWhenChangedPropertyNames()", "class_method_signature": "ComponentBase.getRefreshWhenChangedPropertyNames()", "testcase": false, "constructor": false}, {"identifier": "setRefreshWhenChangedPropertyNames", "parameters": "(List<String> refreshWhenChangedPropertyNames)", "modifiers": "@Override public", "return": "void", "signature": "void setRefreshWhenChangedPropertyNames(List<String> refreshWhenChangedPropertyNames)", "full_signature": "@Override public void setRefreshWhenChangedPropertyNames(List<String> refreshWhenChangedPropertyNames)", "class_method_signature": "ComponentBase.setRefreshWhenChangedPropertyNames(List<String> refreshWhenChangedPropertyNames)", "testcase": false, "constructor": false}, {"identifier": "getAdditionalComponentsToRefresh", "parameters": "()", "modifiers": "@Override @BeanTagAttribute(name = \"additionalComponentsToRefresh\", type = BeanTagAttribute.AttributeType.LISTVALUE) public", "return": "List<String>", "signature": "List<String> getAdditionalComponentsToRefresh()", "full_signature": "@Override @BeanTagAttribute(name = \"additionalComponentsToRefresh\", type = BeanTagAttribute.AttributeType.LISTVALUE) public List<String> getAdditionalComponentsToRefresh()", "class_method_signature": "ComponentBase.getAdditionalComponentsToRefresh()", "testcase": false, "constructor": false}, {"identifier": "setAdditionalComponentsToRefresh", "parameters": "(List<String> additionalComponentsToRefresh)", "modifiers": "@Override public", "return": "void", "signature": "void setAdditionalComponentsToRefresh(List<String> additionalComponentsToRefresh)", "full_signature": "@Override public void setAdditionalComponentsToRefresh(List<String> additionalComponentsToRefresh)", "class_method_signature": "ComponentBase.setAdditionalComponentsToRefresh(List<String> additionalComponentsToRefresh)", "testcase": false, "constructor": false}, {"identifier": "getAdditionalComponentsToRefreshJs", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAdditionalComponentsToRefreshJs()", "full_signature": "@Override public String getAdditionalComponentsToRefreshJs()", "class_method_signature": "ComponentBase.getAdditionalComponentsToRefreshJs()", "testcase": false, "constructor": false}, {"identifier": "isRefreshedByAction", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRefreshedByAction()", "full_signature": "@Override public boolean isRefreshedByAction()", "class_method_signature": "ComponentBase.isRefreshedByAction()", "testcase": false, "constructor": false}, {"identifier": "setRefreshedByAction", "parameters": "(boolean refreshedByAction)", "modifiers": "@Override public", "return": "void", "signature": "void setRefreshedByAction(boolean refreshedByAction)", "full_signature": "@Override public void setRefreshedByAction(boolean refreshedByAction)", "class_method_signature": "ComponentBase.setRefreshedByAction(boolean refreshedByAction)", "testcase": false, "constructor": false}, {"identifier": "isDisclosedByAction", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisclosedByAction()", "full_signature": "@Override public boolean isDisclosedByAction()", "class_method_signature": "ComponentBase.isDisclosedByAction()", "testcase": false, "constructor": false}, {"identifier": "setDisclosedByAction", "parameters": "(boolean disclosedByAction)", "modifiers": "@Override public", "return": "void", "signature": "void setDisclosedByAction(boolean disclosedByAction)", "full_signature": "@Override public void setDisclosedByAction(boolean disclosedByAction)", "class_method_signature": "ComponentBase.setDisclosedByAction(boolean disclosedByAction)", "testcase": false, "constructor": false}, {"identifier": "getRefreshTimer", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "int", "signature": "int getRefreshTimer()", "full_signature": "@BeanTagAttribute public int getRefreshTimer()", "class_method_signature": "ComponentBase.getRefreshTimer()", "testcase": false, "constructor": false}, {"identifier": "setRefreshTimer", "parameters": "(int refreshTimer)", "modifiers": "public", "return": "void", "signature": "void setRefreshTimer(int refreshTimer)", "full_signature": "public void setRefreshTimer(int refreshTimer)", "class_method_signature": "ComponentBase.setRefreshTimer(int refreshTimer)", "testcase": false, "constructor": false}, {"identifier": "isResetDataOnRefresh", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "boolean", "signature": "boolean isResetDataOnRefresh()", "full_signature": "@Override @BeanTagAttribute public boolean isResetDataOnRefresh()", "class_method_signature": "ComponentBase.isResetDataOnRefresh()", "testcase": false, "constructor": false}, {"identifier": "setResetDataOnRefresh", "parameters": "(boolean resetDataOnRefresh)", "modifiers": "@Override public", "return": "void", "signature": "void setResetDataOnRefresh(boolean resetDataOnRefresh)", "full_signature": "@Override public void setResetDataOnRefresh(boolean resetDataOnRefresh)", "class_method_signature": "ComponentBase.setResetDataOnRefresh(boolean resetDataOnRefresh)", "testcase": false, "constructor": false}, {"identifier": "getMethodToCallOnRefresh", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "String", "signature": "String getMethodToCallOnRefresh()", "full_signature": "@BeanTagAttribute public String getMethodToCallOnRefresh()", "class_method_signature": "ComponentBase.getMethodToCallOnRefresh()", "testcase": false, "constructor": false}, {"identifier": "setMethodToCallOnRefresh", "parameters": "(String methodToCallOnRefresh)", "modifiers": "public", "return": "void", "signature": "void setMethodToCallOnRefresh(String methodToCallOnRefresh)", "full_signature": "public void setMethodToCallOnRefresh(String methodToCallOnRefresh)", "class_method_signature": "ComponentBase.setMethodToCallOnRefresh(String methodToCallOnRefresh)", "testcase": false, "constructor": false}, {"identifier": "getFieldsToSendOnRefresh", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "List<String>", "signature": "List<String> getFieldsToSendOnRefresh()", "full_signature": "@BeanTagAttribute public List<String> getFieldsToSendOnRefresh()", "class_method_signature": "ComponentBase.getFieldsToSendOnRefresh()", "testcase": false, "constructor": false}, {"identifier": "setFieldsToSendOnRefresh", "parameters": "(List<String> fieldsToSendOnRefresh)", "modifiers": "public", "return": "void", "signature": "void setFieldsToSendOnRefresh(List<String> fieldsToSendOnRefresh)", "full_signature": "public void setFieldsToSendOnRefresh(List<String> fieldsToSendOnRefresh)", "class_method_signature": "ComponentBase.setFieldsToSendOnRefresh(List<String> fieldsToSendOnRefresh)", "testcase": false, "constructor": false}, {"identifier": "isSkipInTabOrder", "parameters": "()", "modifiers": "@BeanTagAttribute public", "return": "boolean", "signature": "boolean isSkipInTabOrder()", "full_signature": "@BeanTagAttribute public boolean isSkipInTabOrder()", "class_method_signature": "ComponentBase.isSkipInTabOrder()", "testcase": false, "constructor": false}, {"identifier": "setSkipInTabOrder", "parameters": "(boolean skipInTabOrder)", "modifiers": "public", "return": "void", "signature": "void setSkipInTabOrder(boolean skipInTabOrder)", "full_signature": "public void setSkipInTabOrder(boolean skipInTabOrder)", "class_method_signature": "ComponentBase.setSkipInTabOrder(boolean skipInTabOrder)", "testcase": false, "constructor": false}, {"identifier": "getDataAttributes", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "Map<String, String>", "signature": "Map<String, String> getDataAttributes()", "full_signature": "@Override @BeanTagAttribute public Map<String, String> getDataAttributes()", "class_method_signature": "ComponentBase.getDataAttributes()", "testcase": false, "constructor": false}, {"identifier": "setDataAttributes", "parameters": "(Map<String, String> dataAttributes)", "modifiers": "@Override public", "return": "void", "signature": "void setDataAttributes(Map<String, String> dataAttributes)", "full_signature": "@Override public void setDataAttributes(Map<String, String> dataAttributes)", "class_method_signature": "ComponentBase.setDataAttributes(Map<String, String> dataAttributes)", "testcase": false, "constructor": false}, {"identifier": "getScriptDataAttributes", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "Map<String, String>", "signature": "Map<String, String> getScriptDataAttributes()", "full_signature": "@Override @BeanTagAttribute public Map<String, String> getScriptDataAttributes()", "class_method_signature": "ComponentBase.getScriptDataAttributes()", "testcase": false, "constructor": false}, {"identifier": "setScriptDataAttributes", "parameters": "(Map<String, String> scriptDataAttributes)", "modifiers": "@Override public", "return": "void", "signature": "void setScriptDataAttributes(Map<String, String> scriptDataAttributes)", "full_signature": "@Override public void setScriptDataAttributes(Map<String, String> scriptDataAttributes)", "class_method_signature": "ComponentBase.setScriptDataAttributes(Map<String, String> scriptDataAttributes)", "testcase": false, "constructor": false}, {"identifier": "addDataAttribute", "parameters": "(String key, String value)", "modifiers": "@Override public", "return": "void", "signature": "void addDataAttribute(String key, String value)", "full_signature": "@Override public void addDataAttribute(String key, String value)", "class_method_signature": "ComponentBase.addDataAttribute(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "addScriptDataAttribute", "parameters": "(String key, String value)", "modifiers": "@Override public", "return": "void", "signature": "void addScriptDataAttribute(String key, String value)", "full_signature": "@Override public void addScriptDataAttribute(String key, String value)", "class_method_signature": "ComponentBase.addScriptDataAttribute(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "getSimpleDataAttributes", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSimpleDataAttributes()", "full_signature": "@Override public String getSimpleDataAttributes()", "class_method_signature": "ComponentBase.getSimpleDataAttributes()", "testcase": false, "constructor": false}, {"identifier": "getScriptDataAttributesJs", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getScriptDataAttributesJs()", "full_signature": "@Override public String getScriptDataAttributesJs()", "class_method_signature": "ComponentBase.getScriptDataAttributesJs()", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "String", "signature": "String getRole()", "full_signature": "@Override @BeanTagAttribute public String getRole()", "class_method_signature": "ComponentBase.getRole()", "testcase": false, "constructor": false}, {"identifier": "setRole", "parameters": "(String role)", "modifiers": "public", "return": "void", "signature": "void setRole(String role)", "full_signature": "public void setRole(String role)", "class_method_signature": "ComponentBase.setRole(String role)", "testcase": false, "constructor": false}, {"identifier": "getAriaAttributes", "parameters": "()", "modifiers": "@Override @BeanTagAttribute public", "return": "Map<String, String>", "signature": "Map<String, String> getAriaAttributes()", "full_signature": "@Override @BeanTagAttribute public Map<String, String> getAriaAttributes()", "class_method_signature": "ComponentBase.getAriaAttributes()", "testcase": false, "constructor": false}, {"identifier": "setAriaAttributes", "parameters": "(Map<String, String> ariaAttributes)", "modifiers": "@Override public", "return": "void", "signature": "void setAriaAttributes(Map<String, String> ariaAttributes)", "full_signature": "@Override public void setAriaAttributes(Map<String, String> ariaAttributes)", "class_method_signature": "ComponentBase.setAriaAttributes(Map<String, String> ariaAttributes)", "testcase": false, "constructor": false}, {"identifier": "addAriaAttribute", "parameters": "(String key, String value)", "modifiers": "@Override public", "return": "void", "signature": "void addAriaAttribute(String key, String value)", "full_signature": "@Override public void addAriaAttribute(String key, String value)", "class_method_signature": "ComponentBase.addAriaAttribute(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "getAriaAttributesAsString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAriaAttributesAsString()", "full_signature": "@Override public String getAriaAttributesAsString()", "class_method_signature": "ComponentBase.getAriaAttributesAsString()", "testcase": false, "constructor": false}, {"identifier": "getPreRenderContent", "parameters": "()", "modifiers": "@BeanTagAttribute(name = \"preContent\", type = BeanTagAttribute.AttributeType.ANY) public", "return": "String", "signature": "String getPreRenderContent()", "full_signature": "@BeanTagAttribute(name = \"preContent\", type = BeanTagAttribute.AttributeType.ANY) public String getPreRenderContent()", "class_method_signature": "ComponentBase.getPreRenderContent()", "testcase": false, "constructor": false}, {"identifier": "setPreRenderContent", "parameters": "(String preRenderContent)", "modifiers": "@Override public", "return": "void", "signature": "void setPreRenderContent(String preRenderContent)", "full_signature": "@Override public void setPreRenderContent(String preRenderContent)", "class_method_signature": "ComponentBase.setPreRenderContent(String preRenderContent)", "testcase": false, "constructor": false}, {"identifier": "getPostRenderContent", "parameters": "()", "modifiers": "@Override @BeanTagAttribute(name = \"postContent\", type = BeanTagAttribute.AttributeType.ANY) public", "return": "String", "signature": "String getPostRenderContent()", "full_signature": "@Override @BeanTagAttribute(name = \"postContent\", type = BeanTagAttribute.AttributeType.ANY) public String getPostRenderContent()", "class_method_signature": "ComponentBase.getPostRenderContent()", "testcase": false, "constructor": false}, {"identifier": "setPostRenderContent", "parameters": "(String postRenderContent)", "modifiers": "@Override public", "return": "void", "signature": "void setPostRenderContent(String postRenderContent)", "full_signature": "@Override public void setPostRenderContent(String postRenderContent)", "class_method_signature": "ComponentBase.setPostRenderContent(String postRenderContent)", "testcase": false, "constructor": false}, {"identifier": "getExcludeIf", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getExcludeIf()", "full_signature": "@Override public String getExcludeIf()", "class_method_signature": "ComponentBase.getExcludeIf()", "testcase": false, "constructor": false}, {"identifier": "setExcludeIf", "parameters": "(String excludeIf)", "modifiers": "public", "return": "void", "signature": "void setExcludeIf(String excludeIf)", "full_signature": "public void setExcludeIf(String excludeIf)", "class_method_signature": "ComponentBase.setExcludeIf(String excludeIf)", "testcase": false, "constructor": false}, {"identifier": "getExcludeUnless", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getExcludeUnless()", "full_signature": "@Override public String getExcludeUnless()", "class_method_signature": "ComponentBase.getExcludeUnless()", "testcase": false, "constructor": false}, {"identifier": "setExcludeUnless", "parameters": "(String excludeUnless)", "modifiers": "public", "return": "void", "signature": "void setExcludeUnless(String excludeUnless)", "full_signature": "public void setExcludeUnless(String excludeUnless)", "class_method_signature": "ComponentBase.setExcludeUnless(String excludeUnless)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "ComponentBase", "signature": "ComponentBase clone()", "full_signature": "@Override public ComponentBase clone()", "class_method_signature": "ComponentBase.clone()", "testcase": false, "constructor": false}, {"identifier": "completeValidation", "parameters": "(ValidationTrace tracer)", "modifiers": "@Override public", "return": "void", "signature": "void completeValidation(ValidationTrace tracer)", "full_signature": "@Override public void completeValidation(ValidationTrace tracer)", "class_method_signature": "ComponentBase.completeValidation(ValidationTrace tracer)", "testcase": false, "constructor": false}, {"identifier": "isOmitFromFormPost", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOmitFromFormPost()", "full_signature": "public boolean isOmitFromFormPost()", "class_method_signature": "ComponentBase.isOmitFromFormPost()", "testcase": false, "constructor": false}, {"identifier": "setOmitFromFormPost", "parameters": "(boolean omitFromFormPost)", "modifiers": "public", "return": "void", "signature": "void setOmitFromFormPost(boolean omitFromFormPost)", "full_signature": "public void setOmitFromFormPost(boolean omitFromFormPost)", "class_method_signature": "ComponentBase.setOmitFromFormPost(boolean omitFromFormPost)", "testcase": false, "constructor": false}], "file": "rice-framework/krad-web-framework/src/main/java/org/kuali/rice/krad/uif/component/ComponentBase.java"}, "focal_method": {"identifier": "getSimpleDataAttributes", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getSimpleDataAttributes() {\n        String attributes = \"\";\n\n        if (getDataAttributes() == null) {\n            return attributes;\n        }\n\n        for (Map.Entry<String, String> data : getDataAttributes().entrySet()) {\n            if (data != null && data.getValue() != null) {\n                attributes = attributes + \" \" + \"data-\" + data.getKey() + \"=\\\"\" +\n                        KRADUtils.convertToHTMLAttributeSafeString(data.getValue()) + \"\\\"\";\n            }\n        }\n\n        return attributes;\n    }", "signature": "String getSimpleDataAttributes()", "full_signature": "@Override public String getSimpleDataAttributes()", "class_method_signature": "ComponentBase.getSimpleDataAttributes()", "testcase": false, "constructor": false, "invocations": ["getDataAttributes", "entrySet", "getDataAttributes", "getValue", "getKey", "convertToHTMLAttributeSafeString", "getValue"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}