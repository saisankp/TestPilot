{"test_class": {"identifier": "ConsoleServerTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/build/ConsoleServerTest.java"}, "test_case": {"identifier": "testProcess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testProcess() {\n    final TestReportNode<?> totalReport = new TestReportNode<>();\n    totalReport.setName(randomUUID().toString());\n    final TestReportNode<?> suiteReport = new TestReportNode<>();\n    suiteReport.setName(randomUUID().toString());\n    final TestReportNode<?> successCaseReport = new TestReportNode<>();\n    successCaseReport.setName(randomUUID().toString());\n    successCaseReport.setResult(Success);\n\n    final TestReportNode<?> failureCaseReport = new TestReportNode<>();\n    failureCaseReport.setName(randomUUID().toString());\n    failureCaseReport.setResult(Failure);\n\n    suiteReport.addChild(successCaseReport);\n    suiteReport.addChild(failureCaseReport);\n    totalReport.addChild(suiteReport);\n    final BuildDetails buildDetails = new BuildDetails();\n    buildDetails.getUnitTestReport().add(totalReport);\n    final ConsoleServer consoleServer = new ConsoleServer();\n    consoleServer.setPrinter(mock(MessagePrinter.class));\n    consoleServer.boot();\n    try {\n      consoleServer.process(buildDetails);\n      verify(consoleServer.getPrinter(), new AtLeast(1)).println(any(), any());\n    } finally {\n      consoleServer.down();\n    }\n  }", "signature": "void testProcess()", "full_signature": "@Test public void testProcess()", "class_method_signature": "ConsoleServerTest.testProcess()", "testcase": true, "constructor": false, "invocations": ["setName", "toString", "randomUUID", "setName", "toString", "randomUUID", "setName", "toString", "randomUUID", "setResult", "setName", "toString", "randomUUID", "setResult", "addChild", "addChild", "addChild", "add", "getUnitTestReport", "setPrinter", "mock", "boot", "process", "println", "verify", "getPrinter", "any", "any", "down"]}, "focal_class": {"identifier": "ConsoleServer", "superclass": "extends AbstractServer", "interfaces": "", "fields": [{"original_string": "protected static final String NL_0 = ConsoleServer.class.getName() + \".0\";", "modifier": "protected static final", "type": "String", "declarator": "NL_0 = ConsoleServer.class.getName() + \".0\"", "var_name": "NL_0"}, {"original_string": "protected static final String NL_1 = ConsoleServer.class.getName() + \".1\";", "modifier": "protected static final", "type": "String", "declarator": "NL_1 = ConsoleServer.class.getName() + \".1\"", "var_name": "NL_1"}, {"original_string": "protected static final String NL_2 = ConsoleServer.class.getName() + \".2\";", "modifier": "protected static final", "type": "String", "declarator": "NL_2 = ConsoleServer.class.getName() + \".2\"", "var_name": "NL_2"}, {"original_string": "protected static final String NL_3 = ConsoleServer.class.getName() + \".3\";", "modifier": "protected static final", "type": "String", "declarator": "NL_3 = ConsoleServer.class.getName() + \".3\"", "var_name": "NL_3"}, {"original_string": "protected static final String NL_4 = ConsoleServer.class.getName() + \".4\";", "modifier": "protected static final", "type": "String", "declarator": "NL_4 = ConsoleServer.class.getName() + \".4\"", "var_name": "NL_4"}, {"original_string": "protected static final String NL_5 = ConsoleServer.class.getName() + \".5\";", "modifier": "protected static final", "type": "String", "declarator": "NL_5 = ConsoleServer.class.getName() + \".5\"", "var_name": "NL_5"}, {"original_string": "protected static final String NL_6 = ConsoleServer.class.getName() + \".6\";", "modifier": "protected static final", "type": "String", "declarator": "NL_6 = ConsoleServer.class.getName() + \".6\"", "var_name": "NL_6"}, {"original_string": "protected static final String NL_7 = ConsoleServer.class.getName() + \".7\";", "modifier": "protected static final", "type": "String", "declarator": "NL_7 = ConsoleServer.class.getName() + \".7\"", "var_name": "NL_7"}, {"original_string": "protected static final String NL_8 = ConsoleServer.class.getName() + \".8\";", "modifier": "protected static final", "type": "String", "declarator": "NL_8 = ConsoleServer.class.getName() + \".8\"", "var_name": "NL_8"}, {"original_string": "protected static final String NL_9 = ConsoleServer.class.getName() + \".9\";", "modifier": "protected static final", "type": "String", "declarator": "NL_9 = ConsoleServer.class.getName() + \".9\"", "var_name": "NL_9"}, {"original_string": "protected static final String CLEAR_SCREEN = \"\\033[2J\";", "modifier": "protected static final", "type": "String", "declarator": "CLEAR_SCREEN = \"\\033[2J\"", "var_name": "CLEAR_SCREEN"}, {"original_string": "protected static final String GO_HOME = \"\\033[H\";", "modifier": "protected static final", "type": "String", "declarator": "GO_HOME = \"\\033[H\"", "var_name": "GO_HOME"}, {"original_string": "@Getter\n  @Setter\n  protected MessagePrinter printer = DummyMessagePrinter.getInstance();", "modifier": "@Getter\n  @Setter\n  protected", "type": "MessagePrinter", "declarator": "printer = DummyMessagePrinter.getInstance()", "var_name": "printer"}], "methods": [{"identifier": "boot", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void boot()", "full_signature": "@Override public void boot()", "class_method_signature": "ConsoleServer.boot()", "testcase": false, "constructor": false}, {"identifier": "down", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void down()", "full_signature": "@Override public void down()", "class_method_signature": "ConsoleServer.down()", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(final BuildDetails details)", "modifiers": "public", "return": "void", "signature": "void process(final BuildDetails details)", "full_signature": "public void process(final BuildDetails details)", "class_method_signature": "ConsoleServer.process(final BuildDetails details)", "testcase": false, "constructor": false}, {"identifier": "clearScreen", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void clearScreen()", "full_signature": "protected void clearScreen()", "class_method_signature": "ConsoleServer.clearScreen()", "testcase": false, "constructor": false}, {"identifier": "printResult", "parameters": "(final BuildSummary summary)", "modifiers": "protected", "return": "void", "signature": "void printResult(final BuildSummary summary)", "full_signature": "protected void printResult(final BuildSummary summary)", "class_method_signature": "ConsoleServer.printResult(final BuildSummary summary)", "testcase": false, "constructor": false}, {"identifier": "printTest", "parameters": "(final BuildDetails buildDetails)", "modifiers": "protected", "return": "void", "signature": "void printTest(final BuildDetails buildDetails)", "full_signature": "protected void printTest(final BuildDetails buildDetails)", "class_method_signature": "ConsoleServer.printTest(final BuildDetails buildDetails)", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "(final TestReportNode node)", "modifiers": "protected", "return": "void", "signature": "void print(final TestReportNode node)", "full_signature": "protected void print(final TestReportNode node)", "class_method_signature": "ConsoleServer.print(final TestReportNode node)", "testcase": false, "constructor": false}, {"identifier": "printSuite", "parameters": "(final TestReportNode node)", "modifiers": "protected", "return": "void", "signature": "void printSuite(final TestReportNode node)", "full_signature": "protected void printSuite(final TestReportNode node)", "class_method_signature": "ConsoleServer.printSuite(final TestReportNode node)", "testcase": false, "constructor": false}, {"identifier": "printCase", "parameters": "(final TestReportNode node)", "modifiers": "protected", "return": "void", "signature": "void printCase(final TestReportNode node)", "full_signature": "protected void printCase(final TestReportNode node)", "class_method_signature": "ConsoleServer.printCase(final TestReportNode node)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/build/ConsoleServer.java"}, "focal_method": {"identifier": "process", "parameters": "(final BuildDetails details)", "modifiers": "public", "return": "void", "body": "public void process(final BuildDetails details) {\n    if (!isStatus(ServerStatus.PROCESSING)) {\n      return;\n    }\n\n    clearScreen();\n    printResult(details);\n    printer.println();\n    if (BuildSummary.SUCCESS == details.getState() || null == details.getError()) {\n      printTest(details);\n    } else {\n      printer.println(NL_0, details.getError());\n    }\n\n    try {\n      printer.flush();\n    } catch (final IOException e) {\n      logger.trace(\"Ignore exception\", e);\n    }\n  }", "signature": "void process(final BuildDetails details)", "full_signature": "public void process(final BuildDetails details)", "class_method_signature": "ConsoleServer.process(final BuildDetails details)", "testcase": false, "constructor": false, "invocations": ["isStatus", "clearScreen", "printResult", "println", "getState", "getError", "printTest", "println", "getError", "flush", "trace"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}