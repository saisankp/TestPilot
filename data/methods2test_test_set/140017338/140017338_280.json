{"test_class": {"identifier": "ReporterUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "assembly/compliance-tool/src/test/java/org/eclipse/sw360/antenna/frontend/compliancetool/sw360/reporter/ReporterUtilsTest.java"}, "test_case": {"identifier": "printCollectionOfSparseReleasesTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void printCollectionOfSparseReleasesTest() {\n        final SW360SparseRelease sparseRelease = SW360TestUtils.mkSW3SparseRelease(\"test\");\n        final Set<SW360SparseRelease> sparseReleases = Collections.singleton(sparseRelease);\n\n        final String[][] printedReleases = ReporterUtils.printCollectionOfSparseReleases(sparseReleases);\n\n        assertThat(printedReleases.length).isEqualTo(sparseReleases.size());\n        assertThat(Arrays.asList(printedReleases[0]).contains(sparseRelease.getName())).isTrue();\n        assertThat(Arrays.asList(printedReleases[0]).contains(sparseRelease.getVersion())).isTrue();\n        assertThat(Arrays.asList(printedReleases[0]).contains(sparseRelease.getReleaseId())).isTrue();\n\n        final String delimiter = \";\";\n        final String sparseReleasesHeader = ReporterUtils.sparseReleaseCsvPrintHeader(delimiter);\n        assertThat(printedReleases[0].length)\n                .isEqualTo(sparseReleasesHeader.split(delimiter).length);\n    }", "signature": "void printCollectionOfSparseReleasesTest()", "full_signature": "@Test public void printCollectionOfSparseReleasesTest()", "class_method_signature": "ReporterUtilsTest.printCollectionOfSparseReleasesTest()", "testcase": true, "constructor": false, "invocations": ["mkSW3SparseRelease", "singleton", "printCollectionOfSparseReleases", "isEqualTo", "assertThat", "size", "isTrue", "assertThat", "contains", "asList", "getName", "isTrue", "assertThat", "contains", "asList", "getVersion", "isTrue", "assertThat", "contains", "asList", "getReleaseId", "sparseReleaseCsvPrintHeader", "isEqualTo", "assertThat", "split"]}, "focal_class": {"identifier": "ReporterUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ReporterUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ReporterUtils()", "full_signature": "private  ReporterUtils()", "class_method_signature": "ReporterUtils.ReporterUtils()", "testcase": false, "constructor": true}, {"identifier": "printCollectionOfReleases", "parameters": "(Collection<SW360Release> releases)", "modifiers": "static", "return": "String[][]", "signature": "String[][] printCollectionOfReleases(Collection<SW360Release> releases)", "full_signature": "static String[][] printCollectionOfReleases(Collection<SW360Release> releases)", "class_method_signature": "ReporterUtils.printCollectionOfReleases(Collection<SW360Release> releases)", "testcase": false, "constructor": false}, {"identifier": "releaseCsvPrintHeader", "parameters": "(String delimiter)", "modifiers": "static", "return": "String", "signature": "String releaseCsvPrintHeader(String delimiter)", "full_signature": "static String releaseCsvPrintHeader(String delimiter)", "class_method_signature": "ReporterUtils.releaseCsvPrintHeader(String delimiter)", "testcase": false, "constructor": false}, {"identifier": "releaseCsvPrintRow", "parameters": "(SW360Release release)", "modifiers": "private static", "return": "String[]", "signature": "String[] releaseCsvPrintRow(SW360Release release)", "full_signature": "private static String[] releaseCsvPrintRow(SW360Release release)", "class_method_signature": "ReporterUtils.releaseCsvPrintRow(SW360Release release)", "testcase": false, "constructor": false}, {"identifier": "printCollectionOfSparseReleases", "parameters": "(Collection<SW360SparseRelease> releases)", "modifiers": "static", "return": "String[][]", "signature": "String[][] printCollectionOfSparseReleases(Collection<SW360SparseRelease> releases)", "full_signature": "static String[][] printCollectionOfSparseReleases(Collection<SW360SparseRelease> releases)", "class_method_signature": "ReporterUtils.printCollectionOfSparseReleases(Collection<SW360SparseRelease> releases)", "testcase": false, "constructor": false}, {"identifier": "sparseReleaseCsvPrintHeader", "parameters": "(String delimiter)", "modifiers": "static", "return": "String", "signature": "String sparseReleaseCsvPrintHeader(String delimiter)", "full_signature": "static String sparseReleaseCsvPrintHeader(String delimiter)", "class_method_signature": "ReporterUtils.sparseReleaseCsvPrintHeader(String delimiter)", "testcase": false, "constructor": false}, {"identifier": "sparseReleaseCsvPrintRow", "parameters": "(SW360SparseRelease release)", "modifiers": "private static", "return": "String[]", "signature": "String[] sparseReleaseCsvPrintRow(SW360SparseRelease release)", "full_signature": "private static String[] sparseReleaseCsvPrintRow(SW360SparseRelease release)", "class_method_signature": "ReporterUtils.sparseReleaseCsvPrintRow(SW360SparseRelease release)", "testcase": false, "constructor": false}, {"identifier": "collectionToString", "parameters": "(Collection<String> collection)", "modifiers": "private static", "return": "String", "signature": "String collectionToString(Collection<String> collection)", "full_signature": "private static String collectionToString(Collection<String> collection)", "class_method_signature": "ReporterUtils.collectionToString(Collection<String> collection)", "testcase": false, "constructor": false}], "file": "assembly/compliance-tool/src/main/java/org/eclipse/sw360/antenna/frontend/compliancetool/sw360/reporter/ReporterUtils.java"}, "focal_method": {"identifier": "printCollectionOfSparseReleases", "parameters": "(Collection<SW360SparseRelease> releases)", "modifiers": "static", "return": "String[][]", "body": "static String[][] printCollectionOfSparseReleases(Collection<SW360SparseRelease> releases) {\n        return releases.stream()\n                .map(ReporterUtils::sparseReleaseCsvPrintRow)\n                .toArray(String[][]::new);\n    }", "signature": "String[][] printCollectionOfSparseReleases(Collection<SW360SparseRelease> releases)", "full_signature": "static String[][] printCollectionOfSparseReleases(Collection<SW360SparseRelease> releases)", "class_method_signature": "ReporterUtils.printCollectionOfSparseReleases(Collection<SW360SparseRelease> releases)", "testcase": false, "constructor": false, "invocations": ["toArray", "map", "stream"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}