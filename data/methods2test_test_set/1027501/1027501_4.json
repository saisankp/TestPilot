{"test_class": {"identifier": "TestEventBuilder", "superclass": "", "interfaces": "", "fields": [], "file": "simple/src/test/java/com/ning/metrics/eventtracker/TestEventBuilder.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test(groups = \"fast\") public", "return": "void", "body": "@Test(groups = \"fast\")\n    public void testToString() throws Exception\n    {\n        final EventBuilder builder = new EventBuilder(\"EventName\");\n        builder.append(1L);\n        builder.append(2L);\n        builder.append(127L);\n        builder.append(-128L);\n        builder.append(32767);\n        builder.append(-32768L);\n        builder.append(2147483647L);\n        builder.append(-2147483648L);\n        builder.append(10000000000L);\n        builder.append(-20000000000L);\n\n        Assert.assertEquals(builder.toString(), \"EventName,81,82,8127,8-128,432767,8-32768,82147483647,8-2147483648,810000000000,8-20000000000\");\n    }", "signature": "void testToString()", "full_signature": "@Test(groups = \"fast\") public void testToString()", "class_method_signature": "TestEventBuilder.testToString()", "testcase": true, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "assertEquals", "toString"]}, "focal_class": {"identifier": "EventBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final StringBuilder builder = new StringBuilder(25);", "modifier": "private final", "type": "StringBuilder", "declarator": "builder = new StringBuilder(25)", "var_name": "builder"}], "methods": [{"identifier": "EventBuilder", "parameters": "(final String eventName)", "modifiers": "public", "return": "", "signature": " EventBuilder(final String eventName)", "full_signature": "public  EventBuilder(final String eventName)", "class_method_signature": "EventBuilder.EventBuilder(final String eventName)", "testcase": false, "constructor": true}, {"identifier": "append", "parameters": "(final boolean field)", "modifiers": "public", "return": "EventBuilder", "signature": "EventBuilder append(final boolean field)", "full_signature": "public EventBuilder append(final boolean field)", "class_method_signature": "EventBuilder.append(final boolean field)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final byte field)", "modifiers": "public", "return": "EventBuilder", "signature": "EventBuilder append(final byte field)", "full_signature": "public EventBuilder append(final byte field)", "class_method_signature": "EventBuilder.append(final byte field)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final short field)", "modifiers": "public", "return": "EventBuilder", "signature": "EventBuilder append(final short field)", "full_signature": "public EventBuilder append(final short field)", "class_method_signature": "EventBuilder.append(final short field)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final int field)", "modifiers": "public", "return": "EventBuilder", "signature": "EventBuilder append(final int field)", "full_signature": "public EventBuilder append(final int field)", "class_method_signature": "EventBuilder.append(final int field)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final long field)", "modifiers": "public", "return": "EventBuilder", "signature": "EventBuilder append(final long field)", "full_signature": "public EventBuilder append(final long field)", "class_method_signature": "EventBuilder.append(final long field)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final double field)", "modifiers": "public", "return": "EventBuilder", "signature": "EventBuilder append(final double field)", "full_signature": "public EventBuilder append(final double field)", "class_method_signature": "EventBuilder.append(final double field)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final String field)", "modifiers": "public", "return": "EventBuilder", "signature": "EventBuilder append(final String field)", "full_signature": "public EventBuilder append(final String field)", "class_method_signature": "EventBuilder.append(final String field)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "EventBuilder.toString()", "testcase": false, "constructor": false}], "file": "simple/src/main/java/com/ning/metrics/eventtracker/EventBuilder.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString()\n    {\n        return builder.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "EventBuilder.toString()", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 1027501, "url": "https://github.com/pierre/eventtracker", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 10, "size": 509, "license": "licensed"}}