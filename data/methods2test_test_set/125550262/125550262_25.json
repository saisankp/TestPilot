{"test_class": {"identifier": "AtomTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String string = \"IAmAString\";", "modifier": "private static final", "type": "String", "declarator": "string = \"IAmAString\"", "var_name": "string"}, {"original_string": "private static final Long integer = 42L;", "modifier": "private static final", "type": "Long", "declarator": "integer = 42L", "var_name": "integer"}, {"original_string": "private static final Double real = 24.518;", "modifier": "private static final", "type": "Double", "declarator": "real = 24.518", "var_name": "real"}, {"original_string": "private static final Boolean bool = true;", "modifier": "private static final", "type": "Boolean", "declarator": "bool = true", "var_name": "bool"}, {"original_string": "private static final Uuid uuid = new Uuid(UUID.randomUUID());", "modifier": "private static final", "type": "Uuid", "declarator": "uuid = new Uuid(UUID.randomUUID())", "var_name": "uuid"}, {"original_string": "private static final NamedUuid namedUuid = new NamedUuid(\"insert_ls_1\");", "modifier": "private static final", "type": "NamedUuid", "declarator": "namedUuid = new NamedUuid(\"insert_ls_1\")", "var_name": "namedUuid"}, {"original_string": "private static final Atom<String> atomString = Atom.string(string);", "modifier": "private static final", "type": "Atom<String>", "declarator": "atomString = Atom.string(string)", "var_name": "atomString"}, {"original_string": "private static final Atom<Long> atomInteger = Atom.integer(integer);", "modifier": "private static final", "type": "Atom<Long>", "declarator": "atomInteger = Atom.integer(integer)", "var_name": "atomInteger"}, {"original_string": "private static final Atom<Double> atomReal = Atom.real(real);", "modifier": "private static final", "type": "Atom<Double>", "declarator": "atomReal = Atom.real(real)", "var_name": "atomReal"}, {"original_string": "private static final Atom<Boolean> atomBoolean = Atom.bool(bool);", "modifier": "private static final", "type": "Atom<Boolean>", "declarator": "atomBoolean = Atom.bool(bool)", "var_name": "atomBoolean"}, {"original_string": "private static final Atom<Uuid> atomUuid = Atom.uuid(uuid);", "modifier": "private static final", "type": "Atom<Uuid>", "declarator": "atomUuid = Atom.uuid(uuid)", "var_name": "atomUuid"}, {"original_string": "private static final Atom<NamedUuid> atomNamedUuid = Atom.namedUuid(\n      namedUuid);", "modifier": "private static final", "type": "Atom<NamedUuid>", "declarator": "atomNamedUuid = Atom.namedUuid(\n      namedUuid)", "var_name": "atomNamedUuid"}], "file": "ovsdb-client/src/test/java/com/vmware/ovsdb/protocol/operation/notation/AtomTest.java"}, "test_case": {"identifier": "testDeserialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDeserialization() throws IOException {\n    // <string>\n    assertEquals(atomString, JsonUtil.deserialize('\\\"' + string + '\\\"', Atom.class));\n\n    // <integer>\n    assertEquals(atomInteger, JsonUtil.deserialize(integer.toString(), Atom.class));\n\n    // <real>\n    assertEquals(atomReal, JsonUtil.deserialize(real.toString(), Atom.class));\n\n    // <bool>\n    assertEquals(atomBoolean, JsonUtil.deserialize(bool.toString(), Atom.class));\n\n    // <uuid>\n    assertEquals(\n        atomUuid, JsonUtil.deserialize(\"[\\\"uuid\\\",\\\"\" + uuid.getUuid() + \"\\\"]\", Atom.class)\n    );\n\n    // <named-uuid>\n    assertEquals(\n        atomNamedUuid,\n        JsonUtil.deserialize(\"[\\\"named-uuid\\\",\\\"\" + namedUuid.getUuidName() + \"\\\"]\", Atom.class)\n    );\n  }", "signature": "void testDeserialization()", "full_signature": "@Test public void testDeserialization()", "class_method_signature": "AtomTest.testDeserialization()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "deserialize", "assertEquals", "deserialize", "toString", "assertEquals", "deserialize", "toString", "assertEquals", "deserialize", "toString", "assertEquals", "deserialize", "getUuid", "assertEquals", "deserialize", "getUuidName"]}, "focal_class": {"identifier": "Atom", "superclass": "extends Value", "interfaces": "", "fields": [{"original_string": "private T value;", "modifier": "private", "type": "T", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "Atom", "parameters": "(T value)", "modifiers": "public", "return": "", "signature": " Atom(T value)", "full_signature": "public  Atom(T value)", "class_method_signature": "Atom.Atom(T value)", "testcase": false, "constructor": true}, {"identifier": "string", "parameters": "(String value)", "modifiers": "public static", "return": "Atom<String>", "signature": "Atom<String> string(String value)", "full_signature": "public static Atom<String> string(String value)", "class_method_signature": "Atom.string(String value)", "testcase": false, "constructor": false}, {"identifier": "integer", "parameters": "(long value)", "modifiers": "public static", "return": "Atom<Long>", "signature": "Atom<Long> integer(long value)", "full_signature": "public static Atom<Long> integer(long value)", "class_method_signature": "Atom.integer(long value)", "testcase": false, "constructor": false}, {"identifier": "real", "parameters": "(Double value)", "modifiers": "public static", "return": "Atom<Double>", "signature": "Atom<Double> real(Double value)", "full_signature": "public static Atom<Double> real(Double value)", "class_method_signature": "Atom.real(Double value)", "testcase": false, "constructor": false}, {"identifier": "bool", "parameters": "(boolean value)", "modifiers": "public static", "return": "Atom<Boolean>", "signature": "Atom<Boolean> bool(boolean value)", "full_signature": "public static Atom<Boolean> bool(boolean value)", "class_method_signature": "Atom.bool(boolean value)", "testcase": false, "constructor": false}, {"identifier": "uuid", "parameters": "(Uuid value)", "modifiers": "public static", "return": "Atom<Uuid>", "signature": "Atom<Uuid> uuid(Uuid value)", "full_signature": "public static Atom<Uuid> uuid(Uuid value)", "class_method_signature": "Atom.uuid(Uuid value)", "testcase": false, "constructor": false}, {"identifier": "uuid", "parameters": "(UUID value)", "modifiers": "public static", "return": "Atom<Uuid>", "signature": "Atom<Uuid> uuid(UUID value)", "full_signature": "public static Atom<Uuid> uuid(UUID value)", "class_method_signature": "Atom.uuid(UUID value)", "testcase": false, "constructor": false}, {"identifier": "namedUuid", "parameters": "(NamedUuid value)", "modifiers": "public static", "return": "Atom<NamedUuid>", "signature": "Atom<NamedUuid> namedUuid(NamedUuid value)", "full_signature": "public static Atom<NamedUuid> namedUuid(NamedUuid value)", "class_method_signature": "Atom.namedUuid(NamedUuid value)", "testcase": false, "constructor": false}, {"identifier": "namedUuid", "parameters": "(String value)", "modifiers": "public static", "return": "Atom<NamedUuid>", "signature": "Atom<NamedUuid> namedUuid(String value)", "full_signature": "public static Atom<NamedUuid> namedUuid(String value)", "class_method_signature": "Atom.namedUuid(String value)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T getValue()", "full_signature": "public T getValue()", "class_method_signature": "Atom.getValue()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Atom.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Atom.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Atom.toString()", "testcase": false, "constructor": false}], "file": "ovsdb-client/src/main/java/com/vmware/ovsdb/protocol/operation/notation/Atom.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return value.toString();\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Atom.toString()", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 125550262, "url": "https://github.com/vmware/ovsdb-client-library", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 12, "size": 288, "license": "licensed"}}