{"test_class": {"identifier": "DisplayerDragComponentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    DisplayerDragComponent displayerDragComponent;", "modifier": "@InjectMocks", "type": "DisplayerDragComponent", "declarator": "displayerDragComponent", "var_name": "displayerDragComponent"}], "file": "dashbuilder-client/dashbuilder-displayer-editor/src/test/java/org/dashbuilder/client/editor/DisplayerDragComponentTest.java"}, "test_case": {"identifier": "testAdjustSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAdjustSize(){\n        final DisplayerSettings settings = mock(DisplayerSettings.class);\n        when(settings.getChartWidth()).thenReturn(0);\n        when(settings.getTableWidth()).thenReturn(0);\n\n        displayerDragComponent.adjustSize(settings, 0);\n\n        verify(settings).setTableWidth(0);\n\n        displayerDragComponent.adjustSize(settings, 30);\n\n        verify(settings).setTableWidth(10);\n    }", "signature": "void testAdjustSize()", "full_signature": "@Test public void testAdjustSize()", "class_method_signature": "DisplayerDragComponentTest.testAdjustSize()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getChartWidth", "thenReturn", "when", "getTableWidth", "adjustSize", "setTableWidth", "verify", "adjustSize", "setTableWidth", "verify"]}, "focal_class": {"identifier": "DisplayerDragComponent", "superclass": "", "interfaces": "implements PerspectiveEditorCoreComponent, HasModalConfiguration", "fields": [{"original_string": "SyncBeanManager beanManager;", "modifier": "", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "DisplayerViewer viewer;", "modifier": "", "type": "DisplayerViewer", "declarator": "viewer", "var_name": "viewer"}, {"original_string": "PlaceManager placeManager;", "modifier": "", "type": "PlaceManager", "declarator": "placeManager", "var_name": "placeManager"}, {"original_string": "PerspectiveCoordinator perspectiveCoordinator;", "modifier": "", "type": "PerspectiveCoordinator", "declarator": "perspectiveCoordinator", "var_name": "perspectiveCoordinator"}, {"original_string": "DisplayerSettingsJSONMarshaller marshaller;", "modifier": "", "type": "DisplayerSettingsJSONMarshaller", "declarator": "marshaller", "var_name": "marshaller"}], "methods": [{"identifier": "DisplayerDragComponent", "parameters": "( SyncBeanManager beanManager,\n                                   DisplayerViewer viewer,\n                                   PlaceManager placeManager,\n                                   PerspectiveCoordinator perspectiveCoordinator )", "modifiers": "@Inject public", "return": "", "signature": " DisplayerDragComponent( SyncBeanManager beanManager,\n                                   DisplayerViewer viewer,\n                                   PlaceManager placeManager,\n                                   PerspectiveCoordinator perspectiveCoordinator )", "full_signature": "@Inject public  DisplayerDragComponent( SyncBeanManager beanManager,\n                                   DisplayerViewer viewer,\n                                   PlaceManager placeManager,\n                                   PerspectiveCoordinator perspectiveCoordinator )", "class_method_signature": "DisplayerDragComponent.DisplayerDragComponent( SyncBeanManager beanManager,\n                                   DisplayerViewer viewer,\n                                   PlaceManager placeManager,\n                                   PerspectiveCoordinator perspectiveCoordinator )", "testcase": false, "constructor": true}, {"identifier": "getDragComponentTitle", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDragComponentTitle()", "full_signature": "@Override public String getDragComponentTitle()", "class_method_signature": "DisplayerDragComponent.getDragComponentTitle()", "testcase": false, "constructor": false}, {"identifier": "getPreviewWidget", "parameters": "( final RenderingContext ctx )", "modifiers": "@Override public", "return": "IsWidget", "signature": "IsWidget getPreviewWidget( final RenderingContext ctx )", "full_signature": "@Override public IsWidget getPreviewWidget( final RenderingContext ctx )", "class_method_signature": "DisplayerDragComponent.getPreviewWidget( final RenderingContext ctx )", "testcase": false, "constructor": false}, {"identifier": "getShowWidget", "parameters": "( final RenderingContext ctx )", "modifiers": "@Override public", "return": "IsWidget", "signature": "IsWidget getShowWidget( final RenderingContext ctx )", "full_signature": "@Override public IsWidget getShowWidget( final RenderingContext ctx )", "class_method_signature": "DisplayerDragComponent.getShowWidget( final RenderingContext ctx )", "testcase": false, "constructor": false}, {"identifier": "getConfigurationModal", "parameters": "( final ModalConfigurationContext ctx )", "modifiers": "@Override public", "return": "Modal", "signature": "Modal getConfigurationModal( final ModalConfigurationContext ctx )", "full_signature": "@Override public Modal getConfigurationModal( final ModalConfigurationContext ctx )", "class_method_signature": "DisplayerDragComponent.getConfigurationModal( final ModalConfigurationContext ctx )", "testcase": false, "constructor": false}, {"identifier": "getSaveCommand", "parameters": "( final DisplayerEditorPopup editor, final ModalConfigurationContext ctx )", "modifiers": "protected", "return": "Command", "signature": "Command getSaveCommand( final DisplayerEditorPopup editor, final ModalConfigurationContext ctx )", "full_signature": "protected Command getSaveCommand( final DisplayerEditorPopup editor, final ModalConfigurationContext ctx )", "class_method_signature": "DisplayerDragComponent.getSaveCommand( final DisplayerEditorPopup editor, final ModalConfigurationContext ctx )", "testcase": false, "constructor": false}, {"identifier": "getCloseCommand", "parameters": "( final DisplayerEditorPopup editor, final ModalConfigurationContext ctx )", "modifiers": "protected", "return": "Command", "signature": "Command getCloseCommand( final DisplayerEditorPopup editor, final ModalConfigurationContext ctx )", "full_signature": "protected Command getCloseCommand( final DisplayerEditorPopup editor, final ModalConfigurationContext ctx )", "class_method_signature": "DisplayerDragComponent.getCloseCommand( final DisplayerEditorPopup editor, final ModalConfigurationContext ctx )", "testcase": false, "constructor": false}, {"identifier": "adjustSize", "parameters": "( DisplayerSettings settings, int containerWidth )", "modifiers": "protected", "return": "void", "signature": "void adjustSize( DisplayerSettings settings, int containerWidth )", "full_signature": "protected void adjustSize( DisplayerSettings settings, int containerWidth )", "class_method_signature": "DisplayerDragComponent.adjustSize( DisplayerSettings settings, int containerWidth )", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/DisplayerDragComponent.java"}, "focal_method": {"identifier": "adjustSize", "parameters": "( DisplayerSettings settings, int containerWidth )", "modifiers": "protected", "return": "void", "body": "protected void adjustSize( DisplayerSettings settings, int containerWidth ) {\n        int displayerWidth = settings.getChartWidth();\n        int tableWidth = settings.getTableWidth();\n        if ( containerWidth > 0 && displayerWidth > containerWidth ) {\n            int ratio = containerWidth * 100 / displayerWidth;\n            settings.setChartWidth( containerWidth );\n            settings.setChartHeight( settings.getChartHeight() * ratio / 100 );\n        }\n        if ( tableWidth == 0 || tableWidth > containerWidth ) {\n            settings.setTableWidth( containerWidth > 20 ? containerWidth - 20 : 0 );\n        }\n    }", "signature": "void adjustSize( DisplayerSettings settings, int containerWidth )", "full_signature": "protected void adjustSize( DisplayerSettings settings, int containerWidth )", "class_method_signature": "DisplayerDragComponent.adjustSize( DisplayerSettings settings, int containerWidth )", "testcase": false, "constructor": false, "invocations": ["getChartWidth", "getTableWidth", "setChartWidth", "setChartHeight", "getChartHeight", "setTableWidth"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}