{"test_class": {"identifier": "Salsa20Test", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/crypto/Salsa20Test.java"}, "test_case": {"identifier": "whenStreamKeyIsNullShouldThrowArgumentException", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void whenStreamKeyIsNullShouldThrowArgumentException() {\n        Salsa20.createInstance(null);\n    }", "signature": "void whenStreamKeyIsNullShouldThrowArgumentException()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void whenStreamKeyIsNullShouldThrowArgumentException()", "class_method_signature": "Salsa20Test.whenStreamKeyIsNullShouldThrowArgumentException()", "testcase": true, "constructor": false, "invocations": ["createInstance"]}, "focal_class": {"identifier": "Salsa20", "superclass": "", "interfaces": "implements ProtectedStringCrypto", "fields": [{"original_string": "private static final String MSG_UNKNOWN_UTF8_ENCODING = \"The encoding UTF-8 is not supported\";", "modifier": "private static final", "type": "String", "declarator": "MSG_UNKNOWN_UTF8_ENCODING = \"The encoding UTF-8 is not supported\"", "var_name": "MSG_UNKNOWN_UTF8_ENCODING"}, {"original_string": "private static final String SALSA20_ALGORITHM = \"SALSA20\";", "modifier": "private static final", "type": "String", "declarator": "SALSA20_ALGORITHM = \"SALSA20\"", "var_name": "SALSA20_ALGORITHM"}, {"original_string": "private static final String ENCODING = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "ENCODING = \"UTF-8\"", "var_name": "ENCODING"}, {"original_string": "private static final String SALSA20IV = \"E830094B97205D2A\";", "modifier": "private static final", "type": "String", "declarator": "SALSA20IV = \"E830094B97205D2A\"", "var_name": "SALSA20IV"}, {"original_string": "private Salsa20Engine salsa20Engine;", "modifier": "private", "type": "Salsa20Engine", "declarator": "salsa20Engine", "var_name": "salsa20Engine"}], "methods": [{"identifier": "initialize", "parameters": "(byte[] protectedStreamKey)", "modifiers": "private", "return": "void", "signature": "void initialize(byte[] protectedStreamKey)", "full_signature": "private void initialize(byte[] protectedStreamKey)", "class_method_signature": "Salsa20.initialize(byte[] protectedStreamKey)", "testcase": false, "constructor": false}, {"identifier": "createInstance", "parameters": "(byte[] protectedStreamKey)", "modifiers": "public static", "return": "Salsa20", "signature": "Salsa20 createInstance(byte[] protectedStreamKey)", "full_signature": "public static Salsa20 createInstance(byte[] protectedStreamKey)", "class_method_signature": "Salsa20.createInstance(byte[] protectedStreamKey)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(String protectedString)", "modifiers": "@Override public", "return": "String", "signature": "String decrypt(String protectedString)", "full_signature": "@Override public String decrypt(String protectedString)", "class_method_signature": "Salsa20.decrypt(String protectedString)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(String plainString)", "modifiers": "@Override public", "return": "String", "signature": "String encrypt(String plainString)", "full_signature": "@Override public String encrypt(String plainString)", "class_method_signature": "Salsa20.encrypt(String plainString)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/crypto/Salsa20.java"}, "focal_method": {"identifier": "createInstance", "parameters": "(byte[] protectedStreamKey)", "modifiers": "public static", "return": "Salsa20", "body": "public static Salsa20 createInstance(byte[] protectedStreamKey) {\n        if (protectedStreamKey == null) {\n            throw new IllegalArgumentException(\"ProtectedStreamKey must not be null\");\n        }\n\n        Salsa20 salsa20 = new Salsa20();\n        salsa20.initialize(protectedStreamKey);\n\n        return salsa20;\n    }", "signature": "Salsa20 createInstance(byte[] protectedStreamKey)", "full_signature": "public static Salsa20 createInstance(byte[] protectedStreamKey)", "class_method_signature": "Salsa20.createInstance(byte[] protectedStreamKey)", "testcase": false, "constructor": false, "invocations": ["initialize"]}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}