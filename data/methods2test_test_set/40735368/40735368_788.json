{"test_class": {"identifier": "ListFeatureCollectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double TOL = 1.0e-8;", "modifier": "private static final", "type": "double", "declarator": "TOL = 1.0e-8", "var_name": "TOL"}, {"original_string": "private static final CoordinateReferenceSystem DEFAULT_CRS = \n            DefaultEngineeringCRS.CARTESIAN_2D;", "modifier": "private static final", "type": "CoordinateReferenceSystem", "declarator": "DEFAULT_CRS = \n            DefaultEngineeringCRS.CARTESIAN_2D", "var_name": "DEFAULT_CRS"}, {"original_string": "private static final ReferencedEnvelope WORLD =\n            new ReferencedEnvelope(-10.0, 10.0, -5.0, 5.0, DEFAULT_CRS);", "modifier": "private static final", "type": "ReferencedEnvelope", "declarator": "WORLD =\n            new ReferencedEnvelope(-10.0, 10.0, -5.0, 5.0, DEFAULT_CRS)", "var_name": "WORLD"}, {"original_string": "private static final SimpleFeatureType TYPE = createType();", "modifier": "private static final", "type": "SimpleFeatureType", "declarator": "TYPE = createType()", "var_name": "TYPE"}, {"original_string": "private static final GeometryFactory geomFactory = new GeometryFactory();", "modifier": "private static final", "type": "GeometryFactory", "declarator": "geomFactory = new GeometryFactory()", "var_name": "geomFactory"}, {"original_string": "private static final Random rand = new Random();", "modifier": "private static final", "type": "Random", "declarator": "rand = new Random()", "var_name": "rand"}, {"original_string": "private SimpleFeatureBuilder fb;", "modifier": "private", "type": "SimpleFeatureBuilder", "declarator": "fb", "var_name": "fb"}, {"original_string": "private ArrayList<SimpleFeature> featureList;", "modifier": "private", "type": "ArrayList<SimpleFeature>", "declarator": "featureList", "var_name": "featureList"}, {"original_string": "private ListFeatureCollection featureCollection;", "modifier": "private", "type": "ListFeatureCollection", "declarator": "featureCollection", "var_name": "featureCollection"}], "file": "modules/library/main/src/test/java/org/geotools/data/collection/ListFeatureCollectionTest.java"}, "test_case": {"identifier": "clear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void clear() {\n        createPointFeatures(WORLD, 42);\n        featureCollection.clear();\n        assertTrue(featureCollection.isEmpty());\n    }", "signature": "void clear()", "full_signature": "@Test public void clear()", "class_method_signature": "ListFeatureCollectionTest.clear()", "testcase": true, "constructor": false, "invocations": ["createPointFeatures", "clear", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "ListFeatureCollection", "superclass": "extends AbstractFeatureCollection", "interfaces": "implements Collection<SimpleFeature>", "fields": [{"original_string": "private List<SimpleFeature> list;", "modifier": "private", "type": "List<SimpleFeature>", "declarator": "list", "var_name": "list"}, {"original_string": "private ReferencedEnvelope bounds = null;", "modifier": "private", "type": "ReferencedEnvelope", "declarator": "bounds = null", "var_name": "bounds"}], "methods": [{"identifier": "ListFeatureCollection", "parameters": "(SimpleFeatureType schema)", "modifiers": "public", "return": "", "signature": " ListFeatureCollection(SimpleFeatureType schema)", "full_signature": "public  ListFeatureCollection(SimpleFeatureType schema)", "class_method_signature": "ListFeatureCollection.ListFeatureCollection(SimpleFeatureType schema)", "testcase": false, "constructor": true}, {"identifier": "ListFeatureCollection", "parameters": "(SimpleFeatureType schema, List<SimpleFeature> list )", "modifiers": "public", "return": "", "signature": " ListFeatureCollection(SimpleFeatureType schema, List<SimpleFeature> list )", "full_signature": "public  ListFeatureCollection(SimpleFeatureType schema, List<SimpleFeature> list )", "class_method_signature": "ListFeatureCollection.ListFeatureCollection(SimpleFeatureType schema, List<SimpleFeature> list )", "testcase": false, "constructor": true}, {"identifier": "ListFeatureCollection", "parameters": "(SimpleFeatureType schema, SimpleFeature array[] )", "modifiers": "public", "return": "", "signature": " ListFeatureCollection(SimpleFeatureType schema, SimpleFeature array[] )", "full_signature": "public  ListFeatureCollection(SimpleFeatureType schema, SimpleFeature array[] )", "class_method_signature": "ListFeatureCollection.ListFeatureCollection(SimpleFeatureType schema, SimpleFeature array[] )", "testcase": false, "constructor": true}, {"identifier": "ListFeatureCollection", "parameters": "(SimpleFeatureCollection copy )", "modifiers": "public", "return": "", "signature": " ListFeatureCollection(SimpleFeatureCollection copy )", "full_signature": "public  ListFeatureCollection(SimpleFeatureCollection copy )", "class_method_signature": "ListFeatureCollection.ListFeatureCollection(SimpleFeatureCollection copy )", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "ListFeatureCollection.size()", "testcase": false, "constructor": false}, {"identifier": "openIterator", "parameters": "()", "modifiers": "@Override protected", "return": "Iterator<SimpleFeature>", "signature": "Iterator<SimpleFeature> openIterator()", "full_signature": "@Override protected Iterator<SimpleFeature> openIterator()", "class_method_signature": "ListFeatureCollection.openIterator()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(SimpleFeature f)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(SimpleFeature f)", "full_signature": "@Override public boolean add(SimpleFeature f)", "class_method_signature": "ListFeatureCollection.add(SimpleFeature f)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "ListFeatureCollection.clear()", "testcase": false, "constructor": false}, {"identifier": "features", "parameters": "()", "modifiers": "@Override public", "return": "SimpleFeatureIterator", "signature": "SimpleFeatureIterator features()", "full_signature": "@Override public SimpleFeatureIterator features()", "class_method_signature": "ListFeatureCollection.features()", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "@Override public synchronized", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getBounds()", "full_signature": "@Override public synchronized ReferencedEnvelope getBounds()", "class_method_signature": "ListFeatureCollection.getBounds()", "testcase": false, "constructor": false}, {"identifier": "calculateBounds", "parameters": "()", "modifiers": "private", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope calculateBounds()", "full_signature": "private ReferencedEnvelope calculateBounds()", "class_method_signature": "ListFeatureCollection.calculateBounds()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "ListFeatureCollection.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "subCollection", "parameters": "(Filter filter)", "modifiers": "@Override public", "return": "SimpleFeatureCollection", "signature": "SimpleFeatureCollection subCollection(Filter filter)", "full_signature": "@Override public SimpleFeatureCollection subCollection(Filter filter)", "class_method_signature": "ListFeatureCollection.subCollection(Filter filter)", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "(SortBy order)", "modifiers": "@Override public", "return": "SimpleFeatureCollection", "signature": "SimpleFeatureCollection sort(SortBy order)", "full_signature": "@Override public SimpleFeatureCollection sort(SortBy order)", "class_method_signature": "ListFeatureCollection.sort(SortBy order)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object o)", "full_signature": "@Override public boolean remove(Object o)", "class_method_signature": "ListFeatureCollection.remove(Object o)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<? extends SimpleFeature> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(Collection<? extends SimpleFeature> c)", "full_signature": "@Override public boolean addAll(Collection<? extends SimpleFeature> c)", "class_method_signature": "ListFeatureCollection.addAll(Collection<? extends SimpleFeature> c)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(Collection<?> c)", "full_signature": "@Override public boolean removeAll(Collection<?> c)", "class_method_signature": "ListFeatureCollection.removeAll(Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(Collection<?> c)", "full_signature": "@Override public boolean retainAll(Collection<?> c)", "class_method_signature": "ListFeatureCollection.retainAll(Collection<?> c)", "testcase": false, "constructor": false}], "file": "modules/library/main/src/main/java/org/geotools/data/collection/ListFeatureCollection.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void clear() {\n        list.clear();\n    \t// maintain the bounds\n        bounds = null;\n    }", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "ListFeatureCollection.clear()", "testcase": false, "constructor": false, "invocations": ["clear"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}