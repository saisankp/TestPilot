{"test_class": {"identifier": "DefaultValuesAuthenticationSourceDecoratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_PASSWORD = \"defaultPassword\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_PASSWORD = \"defaultPassword\"", "var_name": "DEFAULT_PASSWORD"}, {"original_string": "private static final String DEFAULT_USER = \"cn=defaultUser\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_USER = \"cn=defaultUser\"", "var_name": "DEFAULT_USER"}, {"original_string": "private DefaultValuesAuthenticationSourceDecorator tested;", "modifier": "private", "type": "DefaultValuesAuthenticationSourceDecorator", "declarator": "tested", "var_name": "tested"}, {"original_string": "private AuthenticationSource authenticationSourceMock;", "modifier": "private", "type": "AuthenticationSource", "declarator": "authenticationSourceMock", "var_name": "authenticationSourceMock"}], "file": "core/src/test/java/org/springframework/ldap/authentication/DefaultValuesAuthenticationSourceDecoratorTest.java"}, "test_case": {"identifier": "testGetPrincipal_TargetHasPrincipal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPrincipal_TargetHasPrincipal() {\n        when(authenticationSourceMock.getPrincipal()).thenReturn(\"cn=someUser\");\n        String principal = tested.getPrincipal();\n\n        assertThat(principal).isEqualTo(\"cn=someUser\");\n    }", "signature": "void testGetPrincipal_TargetHasPrincipal()", "full_signature": "@Test public void testGetPrincipal_TargetHasPrincipal()", "class_method_signature": "DefaultValuesAuthenticationSourceDecoratorTest.testGetPrincipal_TargetHasPrincipal()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getPrincipal", "getPrincipal", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DefaultValuesAuthenticationSourceDecorator", "superclass": "", "interfaces": "implements\n        AuthenticationSource, InitializingBean", "fields": [{"original_string": "private AuthenticationSource target;", "modifier": "private", "type": "AuthenticationSource", "declarator": "target", "var_name": "target"}, {"original_string": "private String defaultUser;", "modifier": "private", "type": "String", "declarator": "defaultUser", "var_name": "defaultUser"}, {"original_string": "private String defaultPassword;", "modifier": "private", "type": "String", "declarator": "defaultPassword", "var_name": "defaultPassword"}], "methods": [{"identifier": "DefaultValuesAuthenticationSourceDecorator", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultValuesAuthenticationSourceDecorator()", "full_signature": "public  DefaultValuesAuthenticationSourceDecorator()", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.DefaultValuesAuthenticationSourceDecorator()", "testcase": false, "constructor": true}, {"identifier": "DefaultValuesAuthenticationSourceDecorator", "parameters": "(\n            AuthenticationSource target, String defaultUser,\n            String defaultPassword)", "modifiers": "public", "return": "", "signature": " DefaultValuesAuthenticationSourceDecorator(\n            AuthenticationSource target, String defaultUser,\n            String defaultPassword)", "full_signature": "public  DefaultValuesAuthenticationSourceDecorator(\n            AuthenticationSource target, String defaultUser,\n            String defaultPassword)", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.DefaultValuesAuthenticationSourceDecorator(\n            AuthenticationSource target, String defaultUser,\n            String defaultPassword)", "testcase": false, "constructor": true}, {"identifier": "getCredentials", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCredentials()", "full_signature": "public String getCredentials()", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.getCredentials()", "testcase": false, "constructor": false}, {"identifier": "getPrincipal", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrincipal()", "full_signature": "public String getPrincipal()", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.getPrincipal()", "testcase": false, "constructor": false}, {"identifier": "setDefaultPassword", "parameters": "(String defaultPassword)", "modifiers": "public", "return": "void", "signature": "void setDefaultPassword(String defaultPassword)", "full_signature": "public void setDefaultPassword(String defaultPassword)", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.setDefaultPassword(String defaultPassword)", "testcase": false, "constructor": false}, {"identifier": "setDefaultUser", "parameters": "(String defaultUser)", "modifiers": "public", "return": "void", "signature": "void setDefaultUser(String defaultUser)", "full_signature": "public void setDefaultUser(String defaultUser)", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.setDefaultUser(String defaultUser)", "testcase": false, "constructor": false}, {"identifier": "setTarget", "parameters": "(AuthenticationSource target)", "modifiers": "public", "return": "void", "signature": "void setTarget(AuthenticationSource target)", "full_signature": "public void setTarget(AuthenticationSource target)", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.setTarget(AuthenticationSource target)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "public void afterPropertiesSet()", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.afterPropertiesSet()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/authentication/DefaultValuesAuthenticationSourceDecorator.java"}, "focal_method": {"identifier": "getPrincipal", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getPrincipal() {\n        String principal = target.getPrincipal();\n        if (StringUtils.hasText(principal)) {\n            return principal;\n        } else {\n            return defaultUser;\n        }\n    }", "signature": "String getPrincipal()", "full_signature": "public String getPrincipal()", "class_method_signature": "DefaultValuesAuthenticationSourceDecorator.getPrincipal()", "testcase": false, "constructor": false, "invocations": ["getPrincipal", "hasText"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}