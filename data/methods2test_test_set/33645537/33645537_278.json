{"test_class": {"identifier": "FactorialTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Factorial factorial;", "modifier": "private", "type": "Factorial", "declarator": "factorial", "var_name": "factorial"}], "file": "algs/src/test/java/com/github/pedrovgs/problem9/FactorialTest.java"}, "test_case": {"identifier": "factorialOfZeroEqualsToOneRecursive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void factorialOfZeroEqualsToOneRecursive() {\n    int result = factorial.getRecursive(0);\n\n    assertEquals(1, result);\n  }", "signature": "void factorialOfZeroEqualsToOneRecursive()", "full_signature": "@Test public void factorialOfZeroEqualsToOneRecursive()", "class_method_signature": "FactorialTest.factorialOfZeroEqualsToOneRecursive()", "testcase": true, "constructor": false, "invocations": ["getRecursive", "assertEquals"]}, "focal_class": {"identifier": "Factorial", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getIterative", "parameters": "(int n)", "modifiers": "public", "return": "int", "signature": "int getIterative(int n)", "full_signature": "public int getIterative(int n)", "class_method_signature": "Factorial.getIterative(int n)", "testcase": false, "constructor": false}, {"identifier": "getRecursive", "parameters": "(int n)", "modifiers": "public", "return": "int", "signature": "int getRecursive(int n)", "full_signature": "public int getRecursive(int n)", "class_method_signature": "Factorial.getRecursive(int n)", "testcase": false, "constructor": false}, {"identifier": "getTailRecursive", "parameters": "(int n)", "modifiers": "public", "return": "int", "signature": "int getTailRecursive(int n)", "full_signature": "public int getTailRecursive(int n)", "class_method_signature": "Factorial.getTailRecursive(int n)", "testcase": false, "constructor": false}, {"identifier": "getTailRecursiveInner", "parameters": "(int n, int acc)", "modifiers": "private", "return": "int", "signature": "int getTailRecursiveInner(int n, int acc)", "full_signature": "private int getTailRecursiveInner(int n, int acc)", "class_method_signature": "Factorial.getTailRecursiveInner(int n, int acc)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(int n)", "modifiers": "private", "return": "void", "signature": "void validateInput(int n)", "full_signature": "private void validateInput(int n)", "class_method_signature": "Factorial.validateInput(int n)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem9/Factorial.java"}, "focal_method": {"identifier": "getRecursive", "parameters": "(int n)", "modifiers": "public", "return": "int", "body": "public int getRecursive(int n) {\n    validateInput(n);\n\n    if (n == 0) {\n      return 1;\n    } else {\n      return n * getRecursive(n - 1);\n    }\n  }", "signature": "int getRecursive(int n)", "full_signature": "public int getRecursive(int n)", "class_method_signature": "Factorial.getRecursive(int n)", "testcase": false, "constructor": false, "invocations": ["validateInput", "getRecursive"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}