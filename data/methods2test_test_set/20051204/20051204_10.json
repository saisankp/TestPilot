{"test_class": {"identifier": "TestAgentProviderService", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Logger log =\n      LoggerFactory.getLogger(TestAgentProviderService.class);", "modifier": "protected static final", "type": "Logger", "declarator": "log =\n      LoggerFactory.getLogger(TestAgentProviderService.class)", "var_name": "log"}, {"original_string": "private static final String metainfo_1_str = \"<metainfo>\\n\"\n                                               + \"  <schemaVersion>2.0</schemaVersion>\\n\"\n                                               + \"  <application>\\n\"\n                                               + \"      <name>HBASE</name>\\n\"\n                                               + \"      <comment>\\n\"\n                                               + \"        Apache HBase\\n\"\n                                               + \"      </comment>\\n\"\n                                               + \"      <version>0.96.0.2.1.1</version>\\n\"\n                                               + \"      <type>YARN-APP</type>\\n\"\n                                               + \"      <minHadoopVersion>2.1.0</minHadoopVersion>\\n\"\n                                               + \"      <exportedConfigs>hbase-site,global</exportedConfigs>\\n\"\n                                               + \"      <exportGroups>\\n\"\n                                               + \"        <exportGroup>\\n\"\n                                               + \"          <name>QuickLinks</name>\\n\"\n                                               + \"          <exports>\\n\"\n                                               + \"            <export>\\n\"\n                                               + \"              <name>JMX_Endpoint</name>\\n\"\n                                               + \"              <value>http://${HBASE_MASTER_HOST}:${site.hbase-site.hbase.master.info.port}/jmx</value>\\n\"\n                                               + \"            </export>\\n\"\n                                               + \"            <export>\\n\"\n                                               + \"              <name>Master_Status</name>\\n\"\n                                               + \"              <value>http://${HBASE_MASTER_HOST}:${site.hbase-site.hbase.master.info.port}/master-status</value>\\n\"\n                                               + \"            </export>\\n\"\n                                               + \"            <export>\\n\"\n                                               + \"              <name>Comp_Endpoint</name>\\n\"\n                                               + \"              <value>http://${HBASE_REGIONSERVER_HOST}:${site.global.listen_port}</value>\\n\"\n                                               + \"            </export>\\n\"\n                                               + \"          </exports>\\n\"\n                                               + \"        </exportGroup>\\n\"\n                                               + \"      </exportGroups>\\n\"\n                                               + \"      <commandOrders>\\n\"\n                                               + \"        <commandOrder>\\n\"\n                                               + \"          <command>HBASE_REGIONSERVER-START</command>\\n\"\n                                               + \"          <requires>HBASE_MASTER-STARTED</requires>\\n\"\n                                               + \"        </commandOrder>\\n\"\n                                               + \"      </commandOrders>\\n\"\n                                               + \"      <components>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_REST</name>\\n\"\n                                               + \"          <category>MASTER</category>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_rest.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"            <timeout>600</timeout>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_MASTER</name>\\n\"\n                                               + \"          <category>MASTER</category>\\n\"\n                                               + \"          <publishConfig>true</publishConfig>\\n\"\n                                               + \"          <autoStartOnFailure>true</autoStartOnFailure>\\n\"\n                                               + \"          <appExports>QuickLinks-JMX_Endpoint,QuickLinks-Master_Status</appExports>\\n\"\n                                               + \"          <compExports>QuickLinks-Comp_Endpoint</compExports>\\n\"\n                                               + \"          <minInstanceCount>1</minInstanceCount>\\n\"\n                                               + \"          <maxInstanceCount>2</maxInstanceCount>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_master.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"            <timeout>600</timeout>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_REGIONSERVER</name>\\n\"\n                                               + \"          <category>SLAVE</category>\\n\"\n                                               + \"          <minInstanceCount>1</minInstanceCount>\\n\"\n                                               + \"          <autoStartOnFailure>Falsee</autoStartOnFailure>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_regionserver.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"          <compExports>QuickLinks-Comp_Endpoint</compExports>\\n\"\n                                               + \"          <componentExports>\\n\"\n                                               + \"            <componentExport>\\n\"\n                                               + \"              <name>PropertyA</name>\\n\"\n                                               + \"              <value>${THIS_HOST}:${site.global.listen_port}</value>\\n\"\n                                               + \"            </componentExport>\\n\"\n                                               + \"            <componentExport>\\n\"\n                                               + \"              <name>PropertyB</name>\\n\"\n                                               + \"              <value>AConstant</value>\\n\"\n                                               + \"            </componentExport>\\n\"\n                                               + \"          </componentExports>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"      </components>\\n\"\n                                               + \"      <osSpecifics>\\n\"\n                                               + \"        <osSpecific>\\n\"\n                                               + \"          <osType>any</osType>\\n\"\n                                               + \"          <packages>\\n\"\n                                               + \"            <package>\\n\"\n                                               + \"              <type>tarball</type>\\n\"\n                                               + \"              <name>files/hbase-0.96.1-hadoop2-bin.tar.gz</name>\\n\"\n                                               + \"            </package>\\n\"\n                                               + \"          </packages>\\n\"\n                                               + \"        </osSpecific>\\n\"\n                                               + \"      </osSpecifics>\\n\"\n                                               + \"      <configFiles>\\n\"\n                                               + \"        <configFile>\\n\"\n                                               + \"          <type>xml</type>\\n\"\n                                               + \"          <fileName>hbase-site.xml</fileName>\\n\"\n                                               + \"          <dictionaryName>hbase-site</dictionaryName>\\n\"\n                                               + \"        </configFile>\\n\"\n                                               + \"        <configFile>\\n\"\n                                               + \"          <type>env</type>\\n\"\n                                               + \"          <fileName>hbase-env.sh</fileName>\\n\"\n                                               + \"          <dictionaryName>hbase-env</dictionaryName>\\n\"\n                                               + \"        </configFile>\\n\"\n                                               + \"      </configFiles>\\n\"\n                                               + \"  </application>\\n\"\n                                               + \"</metainfo>\";", "modifier": "private static final", "type": "String", "declarator": "metainfo_1_str = \"<metainfo>\\n\"\n                                               + \"  <schemaVersion>2.0</schemaVersion>\\n\"\n                                               + \"  <application>\\n\"\n                                               + \"      <name>HBASE</name>\\n\"\n                                               + \"      <comment>\\n\"\n                                               + \"        Apache HBase\\n\"\n                                               + \"      </comment>\\n\"\n                                               + \"      <version>0.96.0.2.1.1</version>\\n\"\n                                               + \"      <type>YARN-APP</type>\\n\"\n                                               + \"      <minHadoopVersion>2.1.0</minHadoopVersion>\\n\"\n                                               + \"      <exportedConfigs>hbase-site,global</exportedConfigs>\\n\"\n                                               + \"      <exportGroups>\\n\"\n                                               + \"        <exportGroup>\\n\"\n                                               + \"          <name>QuickLinks</name>\\n\"\n                                               + \"          <exports>\\n\"\n                                               + \"            <export>\\n\"\n                                               + \"              <name>JMX_Endpoint</name>\\n\"\n                                               + \"              <value>http://${HBASE_MASTER_HOST}:${site.hbase-site.hbase.master.info.port}/jmx</value>\\n\"\n                                               + \"            </export>\\n\"\n                                               + \"            <export>\\n\"\n                                               + \"              <name>Master_Status</name>\\n\"\n                                               + \"              <value>http://${HBASE_MASTER_HOST}:${site.hbase-site.hbase.master.info.port}/master-status</value>\\n\"\n                                               + \"            </export>\\n\"\n                                               + \"            <export>\\n\"\n                                               + \"              <name>Comp_Endpoint</name>\\n\"\n                                               + \"              <value>http://${HBASE_REGIONSERVER_HOST}:${site.global.listen_port}</value>\\n\"\n                                               + \"            </export>\\n\"\n                                               + \"          </exports>\\n\"\n                                               + \"        </exportGroup>\\n\"\n                                               + \"      </exportGroups>\\n\"\n                                               + \"      <commandOrders>\\n\"\n                                               + \"        <commandOrder>\\n\"\n                                               + \"          <command>HBASE_REGIONSERVER-START</command>\\n\"\n                                               + \"          <requires>HBASE_MASTER-STARTED</requires>\\n\"\n                                               + \"        </commandOrder>\\n\"\n                                               + \"      </commandOrders>\\n\"\n                                               + \"      <components>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_REST</name>\\n\"\n                                               + \"          <category>MASTER</category>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_rest.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"            <timeout>600</timeout>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_MASTER</name>\\n\"\n                                               + \"          <category>MASTER</category>\\n\"\n                                               + \"          <publishConfig>true</publishConfig>\\n\"\n                                               + \"          <autoStartOnFailure>true</autoStartOnFailure>\\n\"\n                                               + \"          <appExports>QuickLinks-JMX_Endpoint,QuickLinks-Master_Status</appExports>\\n\"\n                                               + \"          <compExports>QuickLinks-Comp_Endpoint</compExports>\\n\"\n                                               + \"          <minInstanceCount>1</minInstanceCount>\\n\"\n                                               + \"          <maxInstanceCount>2</maxInstanceCount>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_master.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"            <timeout>600</timeout>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_REGIONSERVER</name>\\n\"\n                                               + \"          <category>SLAVE</category>\\n\"\n                                               + \"          <minInstanceCount>1</minInstanceCount>\\n\"\n                                               + \"          <autoStartOnFailure>Falsee</autoStartOnFailure>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_regionserver.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"          <compExports>QuickLinks-Comp_Endpoint</compExports>\\n\"\n                                               + \"          <componentExports>\\n\"\n                                               + \"            <componentExport>\\n\"\n                                               + \"              <name>PropertyA</name>\\n\"\n                                               + \"              <value>${THIS_HOST}:${site.global.listen_port}</value>\\n\"\n                                               + \"            </componentExport>\\n\"\n                                               + \"            <componentExport>\\n\"\n                                               + \"              <name>PropertyB</name>\\n\"\n                                               + \"              <value>AConstant</value>\\n\"\n                                               + \"            </componentExport>\\n\"\n                                               + \"          </componentExports>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"      </components>\\n\"\n                                               + \"      <osSpecifics>\\n\"\n                                               + \"        <osSpecific>\\n\"\n                                               + \"          <osType>any</osType>\\n\"\n                                               + \"          <packages>\\n\"\n                                               + \"            <package>\\n\"\n                                               + \"              <type>tarball</type>\\n\"\n                                               + \"              <name>files/hbase-0.96.1-hadoop2-bin.tar.gz</name>\\n\"\n                                               + \"            </package>\\n\"\n                                               + \"          </packages>\\n\"\n                                               + \"        </osSpecific>\\n\"\n                                               + \"      </osSpecifics>\\n\"\n                                               + \"      <configFiles>\\n\"\n                                               + \"        <configFile>\\n\"\n                                               + \"          <type>xml</type>\\n\"\n                                               + \"          <fileName>hbase-site.xml</fileName>\\n\"\n                                               + \"          <dictionaryName>hbase-site</dictionaryName>\\n\"\n                                               + \"        </configFile>\\n\"\n                                               + \"        <configFile>\\n\"\n                                               + \"          <type>env</type>\\n\"\n                                               + \"          <fileName>hbase-env.sh</fileName>\\n\"\n                                               + \"          <dictionaryName>hbase-env</dictionaryName>\\n\"\n                                               + \"        </configFile>\\n\"\n                                               + \"      </configFiles>\\n\"\n                                               + \"  </application>\\n\"\n                                               + \"</metainfo>\"", "var_name": "metainfo_1_str"}, {"original_string": "private static final String metainfo_2_str = \"<metainfo>\\n\"\n                                               + \"  <schemaVersion>2.0</schemaVersion>\\n\"\n                                               + \"  <application>\\n\"\n                                               + \"      <name>HBASE</name>\\n\"\n                                               + \"      <comment>\\n\"\n                                               + \"        Apache HBase\\n\"\n                                               + \"      </comment>\\n\"\n                                               + \"      <version>0.96.0.2.1.1</version>\\n\"\n                                               + \"      <type>YARN-APP</type>\\n\"\n                                               + \"      <minHadoopVersion>2.1.0</minHadoopVersion>\\n\"\n                                               + \"      <components>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_MASTER</name>\\n\"\n                                               + \"          <category>MASTER</category>\\n\"\n                                               + \"          <publishConfig>true</publishConfig>\\n\"\n                                               + \"          <minInstanceCount>1</minInstanceCount>\\n\"\n                                               + \"          <maxInstanceCount>2</maxInstanceCount>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_master.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"            <timeout>600</timeout>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_REGIONSERVER</name>\\n\"\n                                               + \"          <category>SLAVE</category>\\n\"\n                                               + \"          <minInstanceCount>1</minInstanceCount>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_regionserver.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"      </components>\\n\"\n                                               + \"  </application>\\n\"\n                                               + \"</metainfo>\";", "modifier": "private static final", "type": "String", "declarator": "metainfo_2_str = \"<metainfo>\\n\"\n                                               + \"  <schemaVersion>2.0</schemaVersion>\\n\"\n                                               + \"  <application>\\n\"\n                                               + \"      <name>HBASE</name>\\n\"\n                                               + \"      <comment>\\n\"\n                                               + \"        Apache HBase\\n\"\n                                               + \"      </comment>\\n\"\n                                               + \"      <version>0.96.0.2.1.1</version>\\n\"\n                                               + \"      <type>YARN-APP</type>\\n\"\n                                               + \"      <minHadoopVersion>2.1.0</minHadoopVersion>\\n\"\n                                               + \"      <components>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_MASTER</name>\\n\"\n                                               + \"          <category>MASTER</category>\\n\"\n                                               + \"          <publishConfig>true</publishConfig>\\n\"\n                                               + \"          <minInstanceCount>1</minInstanceCount>\\n\"\n                                               + \"          <maxInstanceCount>2</maxInstanceCount>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_master.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"            <timeout>600</timeout>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"        <component>\\n\"\n                                               + \"          <name>HBASE_REGIONSERVER</name>\\n\"\n                                               + \"          <category>SLAVE</category>\\n\"\n                                               + \"          <minInstanceCount>1</minInstanceCount>\\n\"\n                                               + \"          <commandScript>\\n\"\n                                               + \"            <script>scripts/hbase_regionserver.py</script>\\n\"\n                                               + \"            <scriptType>PYTHON</scriptType>\\n\"\n                                               + \"          </commandScript>\\n\"\n                                               + \"        </component>\\n\"\n                                               + \"      </components>\\n\"\n                                               + \"  </application>\\n\"\n                                               + \"</metainfo>\"", "var_name": "metainfo_2_str"}], "file": "slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java"}, "test_case": {"identifier": "testDereferenceAllConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDereferenceAllConfig() throws IOException {\n    AgentProviderService aps = createAgentProviderService(new Configuration());\n    Map<String, Map<String, String>> allConfigs = new HashMap<String, Map<String, String>>();\n    Map<String, String> cfg1 = new HashMap<String, String>();\n    cfg1.put(\"a1\", \"0${@//site/cfg-2/A1}\");\n    cfg1.put(\"b1\", \"22\");\n    cfg1.put(\"c1\", \"33\");\n    cfg1.put(\"d1\", \"${@//site/cfg1/c1}AA\");\n    Map<String, String> cfg2 = new HashMap<String, String>();\n    cfg2.put(\"A1\", \"11${@//site/cfg1/b1}\");\n    cfg2.put(\"B1\", \"${@//site/cfg-2/A1},${@//site/cfg-2/A1},AA,${@//site/cfg1/c1}\");\n    cfg2.put(\"C1\", \"DD${@//site/cfg1/c1}\");\n    cfg2.put(\"D1\", \"${14}\");\n\n    allConfigs.put(\"cfg1\", cfg1);\n    allConfigs.put(\"cfg-2\", cfg2);\n    aps.dereferenceAllConfigs(allConfigs);\n    Assert.assertEquals(\"01122\", cfg1.get(\"a1\"));\n    Assert.assertEquals(\"22\", cfg1.get(\"b1\"));\n    Assert.assertEquals(\"33\", cfg1.get(\"c1\"));\n    Assert.assertEquals(\"33AA\", cfg1.get(\"d1\"));\n\n    Assert.assertEquals(\"1122\", cfg2.get(\"A1\"));\n    Assert.assertEquals(\"1122,1122,AA,33\", cfg2.get(\"B1\"));\n    Assert.assertEquals(\"DD33\", cfg2.get(\"C1\"));\n    Assert.assertEquals(\"${14}\", cfg2.get(\"D1\"));\n  }", "signature": "void testDereferenceAllConfig()", "full_signature": "@Test public void testDereferenceAllConfig()", "class_method_signature": "TestAgentProviderService.testDereferenceAllConfig()", "testcase": true, "constructor": false, "invocations": ["createAgentProviderService", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "dereferenceAllConfigs", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "AgentProviderService", "superclass": "extends AbstractProviderService", "interfaces": "implements\n    ProviderCore,\n    AgentKeys,\n    SliderKeys, AgentRestOperations", "fields": [{"original_string": "protected static final Logger log =\n      LoggerFactory.getLogger(AgentProviderService.class);", "modifier": "protected static final", "type": "Logger", "declarator": "log =\n      LoggerFactory.getLogger(AgentProviderService.class)", "var_name": "log"}, {"original_string": "private static final ProviderUtils providerUtils = new ProviderUtils(log);", "modifier": "private static final", "type": "ProviderUtils", "declarator": "providerUtils = new ProviderUtils(log)", "var_name": "providerUtils"}, {"original_string": "private static final String LABEL_MAKER = \"___\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_MAKER = \"___\"", "var_name": "LABEL_MAKER"}, {"original_string": "private static final String CONTAINER_ID = \"container_id\";", "modifier": "private static final", "type": "String", "declarator": "CONTAINER_ID = \"container_id\"", "var_name": "CONTAINER_ID"}, {"original_string": "private static final String GLOBAL_CONFIG_TAG = \"global\";", "modifier": "private static final", "type": "String", "declarator": "GLOBAL_CONFIG_TAG = \"global\"", "var_name": "GLOBAL_CONFIG_TAG"}, {"original_string": "private static final String LOG_FOLDERS_TAG = \"LogFolders\";", "modifier": "private static final", "type": "String", "declarator": "LOG_FOLDERS_TAG = \"LogFolders\"", "var_name": "LOG_FOLDERS_TAG"}, {"original_string": "private static final String HOST_FOLDER_FORMAT = \"%s:%s\";", "modifier": "private static final", "type": "String", "declarator": "HOST_FOLDER_FORMAT = \"%s:%s\"", "var_name": "HOST_FOLDER_FORMAT"}, {"original_string": "private static final String CONTAINER_LOGS_TAG = \"container_log_dirs\";", "modifier": "private static final", "type": "String", "declarator": "CONTAINER_LOGS_TAG = \"container_log_dirs\"", "var_name": "CONTAINER_LOGS_TAG"}, {"original_string": "private static final String CONTAINER_PWDS_TAG = \"container_work_dirs\";", "modifier": "private static final", "type": "String", "declarator": "CONTAINER_PWDS_TAG = \"container_work_dirs\"", "var_name": "CONTAINER_PWDS_TAG"}, {"original_string": "private static final String COMPONENT_TAG = \"component\";", "modifier": "private static final", "type": "String", "declarator": "COMPONENT_TAG = \"component\"", "var_name": "COMPONENT_TAG"}, {"original_string": "private static final String APPLICATION_TAG = \"application\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_TAG = \"application\"", "var_name": "APPLICATION_TAG"}, {"original_string": "private static final String COMPONENT_DATA_TAG = \"ComponentInstanceData\";", "modifier": "private static final", "type": "String", "declarator": "COMPONENT_DATA_TAG = \"ComponentInstanceData\"", "var_name": "COMPONENT_DATA_TAG"}, {"original_string": "private static final String SHARED_PORT_TAG = \"SHARED\";", "modifier": "private static final", "type": "String", "declarator": "SHARED_PORT_TAG = \"SHARED\"", "var_name": "SHARED_PORT_TAG"}, {"original_string": "private static final String PER_CONTAINER_TAG = \"{PER_CONTAINER}\";", "modifier": "private static final", "type": "String", "declarator": "PER_CONTAINER_TAG = \"{PER_CONTAINER}\"", "var_name": "PER_CONTAINER_TAG"}, {"original_string": "private static final int MAX_LOG_ENTRIES = 40;", "modifier": "private static final", "type": "int", "declarator": "MAX_LOG_ENTRIES = 40", "var_name": "MAX_LOG_ENTRIES"}, {"original_string": "private static final int DEFAULT_HEARTBEAT_MONITOR_INTERVAL = 60 * 1000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_HEARTBEAT_MONITOR_INTERVAL = 60 * 1000", "var_name": "DEFAULT_HEARTBEAT_MONITOR_INTERVAL"}, {"original_string": "private final Object syncLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "syncLock = new Object()", "var_name": "syncLock"}, {"original_string": "private final ComponentTagProvider tags = new ComponentTagProvider();", "modifier": "private final", "type": "ComponentTagProvider", "declarator": "tags = new ComponentTagProvider()", "var_name": "tags"}, {"original_string": "private int heartbeatMonitorInterval = 0;", "modifier": "private", "type": "int", "declarator": "heartbeatMonitorInterval = 0", "var_name": "heartbeatMonitorInterval"}, {"original_string": "private int heartbeatLostInterval = 0;", "modifier": "private", "type": "int", "declarator": "heartbeatLostInterval = 0", "var_name": "heartbeatLostInterval"}, {"original_string": "private AgentClientProvider clientProvider;", "modifier": "private", "type": "AgentClientProvider", "declarator": "clientProvider", "var_name": "clientProvider"}, {"original_string": "private AtomicInteger taskId = new AtomicInteger(0);", "modifier": "private", "type": "AtomicInteger", "declarator": "taskId = new AtomicInteger(0)", "var_name": "taskId"}, {"original_string": "private volatile Map<String, MetainfoHolder> metaInfoMap = new HashMap<>();", "modifier": "private volatile", "type": "Map<String, MetainfoHolder>", "declarator": "metaInfoMap = new HashMap<>()", "var_name": "metaInfoMap"}, {"original_string": "private SliderFileSystem fileSystem = null;", "modifier": "private", "type": "SliderFileSystem", "declarator": "fileSystem = null", "var_name": "fileSystem"}, {"original_string": "private Map<String, DefaultConfig> defaultConfigs = null;", "modifier": "private", "type": "Map<String, DefaultConfig>", "declarator": "defaultConfigs = null", "var_name": "defaultConfigs"}, {"original_string": "private ComponentCommandOrder commandOrder = new ComponentCommandOrder();", "modifier": "private", "type": "ComponentCommandOrder", "declarator": "commandOrder = new ComponentCommandOrder()", "var_name": "commandOrder"}, {"original_string": "private HeartbeatMonitor monitor;", "modifier": "private", "type": "HeartbeatMonitor", "declarator": "monitor", "var_name": "monitor"}, {"original_string": "private Boolean canAnyMasterPublish = null;", "modifier": "private", "type": "Boolean", "declarator": "canAnyMasterPublish = null", "var_name": "canAnyMasterPublish"}, {"original_string": "private AgentLaunchParameter agentLaunchParameter = null;", "modifier": "private", "type": "AgentLaunchParameter", "declarator": "agentLaunchParameter = null", "var_name": "agentLaunchParameter"}, {"original_string": "private String clusterName = null;", "modifier": "private", "type": "String", "declarator": "clusterName = null", "var_name": "clusterName"}, {"original_string": "private boolean isInUpgradeMode;", "modifier": "private", "type": "boolean", "declarator": "isInUpgradeMode", "var_name": "isInUpgradeMode"}, {"original_string": "private Set<String> upgradeContainers = new HashSet<String>();", "modifier": "private", "type": "Set<String>", "declarator": "upgradeContainers = new HashSet<String>()", "var_name": "upgradeContainers"}, {"original_string": "private boolean appStopInitiated;", "modifier": "private", "type": "boolean", "declarator": "appStopInitiated", "var_name": "appStopInitiated"}, {"original_string": "private final Map<String, ComponentInstanceState> componentStatuses =\n      new ConcurrentHashMap<String, ComponentInstanceState>();", "modifier": "private final", "type": "Map<String, ComponentInstanceState>", "declarator": "componentStatuses =\n      new ConcurrentHashMap<String, ComponentInstanceState>()", "var_name": "componentStatuses"}, {"original_string": "private final Map<String, Map<String, String>> componentInstanceData =\n      new ConcurrentHashMap<String, Map<String, String>>();", "modifier": "private final", "type": "Map<String, Map<String, String>>", "declarator": "componentInstanceData =\n      new ConcurrentHashMap<String, Map<String, String>>()", "var_name": "componentInstanceData"}, {"original_string": "private final Map<String, Map<String, List<ExportEntry>>> exportGroups =\n      new ConcurrentHashMap<String, Map<String, List<ExportEntry>>>();", "modifier": "private final", "type": "Map<String, Map<String, List<ExportEntry>>>", "declarator": "exportGroups =\n      new ConcurrentHashMap<String, Map<String, List<ExportEntry>>>()", "var_name": "exportGroups"}, {"original_string": "private final Map<String, Map<String, String>> allocatedPorts =\n      new ConcurrentHashMap<String, Map<String, String>>();", "modifier": "private final", "type": "Map<String, Map<String, String>>", "declarator": "allocatedPorts =\n      new ConcurrentHashMap<String, Map<String, String>>()", "var_name": "allocatedPorts"}, {"original_string": "private final Map<String, Metainfo> packageMetainfo = \n      new ConcurrentHashMap<String, Metainfo>();", "modifier": "private final", "type": "Map<String, Metainfo>", "declarator": "packageMetainfo = \n      new ConcurrentHashMap<String, Metainfo>()", "var_name": "packageMetainfo"}, {"original_string": "private final Map<String, ExportEntry> logFolderExports =\n      Collections.synchronizedMap(new LinkedHashMap<String, ExportEntry>(MAX_LOG_ENTRIES, 0.75f, false) {\n        protected boolean removeEldestEntry(Map.Entry eldest) {\n          return size() > MAX_LOG_ENTRIES;\n        }\n      });", "modifier": "private final", "type": "Map<String, ExportEntry>", "declarator": "logFolderExports =\n      Collections.synchronizedMap(new LinkedHashMap<String, ExportEntry>(MAX_LOG_ENTRIES, 0.75f, false) {\n        protected boolean removeEldestEntry(Map.Entry eldest) {\n          return size() > MAX_LOG_ENTRIES;\n        }\n      })", "var_name": "logFolderExports"}, {"original_string": "private final Map<String, ExportEntry> workFolderExports =\n      Collections.synchronizedMap(new LinkedHashMap<String, ExportEntry>(MAX_LOG_ENTRIES, 0.75f, false) {\n        protected boolean removeEldestEntry(Map.Entry eldest) {\n          return size() > MAX_LOG_ENTRIES;\n        }\n      });", "modifier": "private final", "type": "Map<String, ExportEntry>", "declarator": "workFolderExports =\n      Collections.synchronizedMap(new LinkedHashMap<String, ExportEntry>(MAX_LOG_ENTRIES, 0.75f, false) {\n        protected boolean removeEldestEntry(Map.Entry eldest) {\n          return size() > MAX_LOG_ENTRIES;\n        }\n      })", "var_name": "workFolderExports"}, {"original_string": "private final Map<String, Set<String>> containerExportsMap =\n      new HashMap<String, Set<String>>();", "modifier": "private final", "type": "Map<String, Set<String>>", "declarator": "containerExportsMap =\n      new HashMap<String, Set<String>>()", "var_name": "containerExportsMap"}], "methods": [{"identifier": "AgentProviderService", "parameters": "()", "modifiers": "public", "return": "", "signature": " AgentProviderService()", "full_signature": "public  AgentProviderService()", "class_method_signature": "AgentProviderService.AgentProviderService()", "testcase": false, "constructor": true}, {"identifier": "getHumanName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getHumanName()", "full_signature": "@Override public String getHumanName()", "class_method_signature": "AgentProviderService.getHumanName()", "testcase": false, "constructor": false}, {"identifier": "getRoles", "parameters": "()", "modifiers": "@Override public", "return": "List<ProviderRole>", "signature": "List<ProviderRole> getRoles()", "full_signature": "@Override public List<ProviderRole> getRoles()", "class_method_signature": "AgentProviderService.getRoles()", "testcase": false, "constructor": false}, {"identifier": "serviceInit", "parameters": "(Configuration conf)", "modifiers": "@Override protected", "return": "void", "signature": "void serviceInit(Configuration conf)", "full_signature": "@Override protected void serviceInit(Configuration conf)", "class_method_signature": "AgentProviderService.serviceInit(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "loadProviderConfigurationInformation", "parameters": "(File confDir)", "modifiers": "@Override public", "return": "Configuration", "signature": "Configuration loadProviderConfigurationInformation(File confDir)", "full_signature": "@Override public Configuration loadProviderConfigurationInformation(File confDir)", "class_method_signature": "AgentProviderService.loadProviderConfigurationInformation(File confDir)", "testcase": false, "constructor": false}, {"identifier": "validateInstanceDefinition", "parameters": "(AggregateConf instanceDefinition)", "modifiers": "@Override public", "return": "void", "signature": "void validateInstanceDefinition(AggregateConf instanceDefinition)", "full_signature": "@Override public void validateInstanceDefinition(AggregateConf instanceDefinition)", "class_method_signature": "AgentProviderService.validateInstanceDefinition(AggregateConf instanceDefinition)", "testcase": false, "constructor": false}, {"identifier": "buildMetainfo", "parameters": "(AggregateConf instanceDefinition,\n                             SliderFileSystem fileSystem,\n                             String roleGroup)", "modifiers": "private", "return": "void", "signature": "void buildMetainfo(AggregateConf instanceDefinition,\n                             SliderFileSystem fileSystem,\n                             String roleGroup)", "full_signature": "private void buildMetainfo(AggregateConf instanceDefinition,\n                             SliderFileSystem fileSystem,\n                             String roleGroup)", "class_method_signature": "AgentProviderService.buildMetainfo(AggregateConf instanceDefinition,\n                             SliderFileSystem fileSystem,\n                             String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "initializeApplicationConfiguration", "parameters": "(\n      AggregateConf instanceDefinition, SliderFileSystem fileSystem,\n      String roleGroup)", "modifiers": "@Override public", "return": "void", "signature": "void initializeApplicationConfiguration(\n      AggregateConf instanceDefinition, SliderFileSystem fileSystem,\n      String roleGroup)", "full_signature": "@Override public void initializeApplicationConfiguration(\n      AggregateConf instanceDefinition, SliderFileSystem fileSystem,\n      String roleGroup)", "class_method_signature": "AgentProviderService.initializeApplicationConfiguration(\n      AggregateConf instanceDefinition, SliderFileSystem fileSystem,\n      String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "buildContainerLaunchContext", "parameters": "(ContainerLauncher launcher,\n                                          AggregateConf instanceDefinition,\n                                          Container container,\n                                          ProviderRole providerRole,\n                                          SliderFileSystem fileSystem,\n                                          Path generatedConfPath,\n                                          MapOperations resourceComponent,\n                                          MapOperations appComponent,\n                                          Path containerTmpDirPath)", "modifiers": "@Override public", "return": "void", "signature": "void buildContainerLaunchContext(ContainerLauncher launcher,\n                                          AggregateConf instanceDefinition,\n                                          Container container,\n                                          ProviderRole providerRole,\n                                          SliderFileSystem fileSystem,\n                                          Path generatedConfPath,\n                                          MapOperations resourceComponent,\n                                          MapOperations appComponent,\n                                          Path containerTmpDirPath)", "full_signature": "@Override public void buildContainerLaunchContext(ContainerLauncher launcher,\n                                          AggregateConf instanceDefinition,\n                                          Container container,\n                                          ProviderRole providerRole,\n                                          SliderFileSystem fileSystem,\n                                          Path generatedConfPath,\n                                          MapOperations resourceComponent,\n                                          MapOperations appComponent,\n                                          Path containerTmpDirPath)", "class_method_signature": "AgentProviderService.buildContainerLaunchContext(ContainerLauncher launcher,\n                                          AggregateConf instanceDefinition,\n                                          Container container,\n                                          ProviderRole providerRole,\n                                          SliderFileSystem fileSystem,\n                                          Path generatedConfPath,\n                                          MapOperations resourceComponent,\n                                          MapOperations appComponent,\n                                          Path containerTmpDirPath)", "testcase": false, "constructor": false}, {"identifier": "localizeContainerSecurityStores", "parameters": "(ContainerLauncher launcher,\n                                               Container container,\n                                               String role,\n                                               SliderFileSystem fileSystem,\n                                               AggregateConf instanceDefinition,\n                                               MapOperations compOps)", "modifiers": "private", "return": "void", "signature": "void localizeContainerSecurityStores(ContainerLauncher launcher,\n                                               Container container,\n                                               String role,\n                                               SliderFileSystem fileSystem,\n                                               AggregateConf instanceDefinition,\n                                               MapOperations compOps)", "full_signature": "private void localizeContainerSecurityStores(ContainerLauncher launcher,\n                                               Container container,\n                                               String role,\n                                               SliderFileSystem fileSystem,\n                                               AggregateConf instanceDefinition,\n                                               MapOperations compOps)", "class_method_signature": "AgentProviderService.localizeContainerSecurityStores(ContainerLauncher launcher,\n                                               Container container,\n                                               String role,\n                                               SliderFileSystem fileSystem,\n                                               AggregateConf instanceDefinition,\n                                               MapOperations compOps)", "testcase": false, "constructor": false}, {"identifier": "generateSecurityStores", "parameters": "(Container container,\n                                                 String role,\n                                                 AggregateConf instanceDefinition,\n                                                 MapOperations compOps)", "modifiers": "private", "return": "SecurityStore[]", "signature": "SecurityStore[] generateSecurityStores(Container container,\n                                                 String role,\n                                                 AggregateConf instanceDefinition,\n                                                 MapOperations compOps)", "full_signature": "private SecurityStore[] generateSecurityStores(Container container,\n                                                 String role,\n                                                 AggregateConf instanceDefinition,\n                                                 MapOperations compOps)", "class_method_signature": "AgentProviderService.generateSecurityStores(Container container,\n                                                 String role,\n                                                 AggregateConf instanceDefinition,\n                                                 MapOperations compOps)", "testcase": false, "constructor": false}, {"identifier": "areStoresRequested", "parameters": "(MapOperations compOps)", "modifiers": "private", "return": "boolean", "signature": "boolean areStoresRequested(MapOperations compOps)", "full_signature": "private boolean areStoresRequested(MapOperations compOps)", "class_method_signature": "AgentProviderService.areStoresRequested(MapOperations compOps)", "testcase": false, "constructor": false}, {"identifier": "localizeContainerSSLResources", "parameters": "(ContainerLauncher launcher,\n                                             Container container,\n                                             SliderFileSystem fileSystem)", "modifiers": "private", "return": "void", "signature": "void localizeContainerSSLResources(ContainerLauncher launcher,\n                                             Container container,\n                                             SliderFileSystem fileSystem)", "full_signature": "private void localizeContainerSSLResources(ContainerLauncher launcher,\n                                             Container container,\n                                             SliderFileSystem fileSystem)", "class_method_signature": "AgentProviderService.localizeContainerSSLResources(ContainerLauncher launcher,\n                                             Container container,\n                                             SliderFileSystem fileSystem)", "testcase": false, "constructor": false}, {"identifier": "uploadSecurityResource", "parameters": "(File resource, SliderFileSystem fileSystem)", "modifiers": "private", "return": "Path", "signature": "Path uploadSecurityResource(File resource, SliderFileSystem fileSystem)", "full_signature": "private Path uploadSecurityResource(File resource, SliderFileSystem fileSystem)", "class_method_signature": "AgentProviderService.uploadSecurityResource(File resource, SliderFileSystem fileSystem)", "testcase": false, "constructor": false}, {"identifier": "uploadResource", "parameters": "(File resource, SliderFileSystem fileSystem,\n      String roleName)", "modifiers": "private", "return": "Path", "signature": "Path uploadResource(File resource, SliderFileSystem fileSystem,\n      String roleName)", "full_signature": "private Path uploadResource(File resource, SliderFileSystem fileSystem,\n      String roleName)", "class_method_signature": "AgentProviderService.uploadResource(File resource, SliderFileSystem fileSystem,\n      String roleName)", "testcase": false, "constructor": false}, {"identifier": "uploadResource", "parameters": "(File resource,\n      SliderFileSystem fileSystem, Path parentDir)", "modifiers": "private static synchronized", "return": "Path", "signature": "Path uploadResource(File resource,\n      SliderFileSystem fileSystem, Path parentDir)", "full_signature": "private static synchronized Path uploadResource(File resource,\n      SliderFileSystem fileSystem, Path parentDir)", "class_method_signature": "AgentProviderService.uploadResource(File resource,\n      SliderFileSystem fileSystem, Path parentDir)", "testcase": false, "constructor": false}, {"identifier": "localizeServiceKeytabs", "parameters": "(ContainerLauncher launcher,\n                                      AggregateConf instanceDefinition,\n                                      SliderFileSystem fileSystem)", "modifiers": "private", "return": "void", "signature": "void localizeServiceKeytabs(ContainerLauncher launcher,\n                                      AggregateConf instanceDefinition,\n                                      SliderFileSystem fileSystem)", "full_signature": "private void localizeServiceKeytabs(ContainerLauncher launcher,\n                                      AggregateConf instanceDefinition,\n                                      SliderFileSystem fileSystem)", "class_method_signature": "AgentProviderService.localizeServiceKeytabs(ContainerLauncher launcher,\n                                      AggregateConf instanceDefinition,\n                                      SliderFileSystem fileSystem)", "testcase": false, "constructor": false}, {"identifier": "createConfigFile", "parameters": "(SliderFileSystem fileSystem,\n      File file, ConfigFile configFile, Map<String, String> config)", "modifiers": "private synchronized", "return": "void", "signature": "void createConfigFile(SliderFileSystem fileSystem,\n      File file, ConfigFile configFile, Map<String, String> config)", "full_signature": "private synchronized void createConfigFile(SliderFileSystem fileSystem,\n      File file, ConfigFile configFile, Map<String, String> config)", "class_method_signature": "AgentProviderService.createConfigFile(SliderFileSystem fileSystem,\n      File file, ConfigFile configFile, Map<String, String> config)", "testcase": false, "constructor": false}, {"identifier": "localizeConfigFiles", "parameters": "(ContainerLauncher launcher,\n                                     String roleName, String roleGroup,\n                                     Metainfo metainfo,\n                                     Map<String, Map<String, String>> configs,\n                                     MapOperations env,\n                                     SliderFileSystem fileSystem,\n                                     ConfTreeOperations appConf)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void localizeConfigFiles(ContainerLauncher launcher,\n                                     String roleName, String roleGroup,\n                                     Metainfo metainfo,\n                                     Map<String, Map<String, String>> configs,\n                                     MapOperations env,\n                                     SliderFileSystem fileSystem,\n                                     ConfTreeOperations appConf)", "full_signature": "@VisibleForTesting protected void localizeConfigFiles(ContainerLauncher launcher,\n                                     String roleName, String roleGroup,\n                                     Metainfo metainfo,\n                                     Map<String, Map<String, String>> configs,\n                                     MapOperations env,\n                                     SliderFileSystem fileSystem,\n                                     ConfTreeOperations appConf)", "class_method_signature": "AgentProviderService.localizeConfigFiles(ContainerLauncher launcher,\n                                     String roleName, String roleGroup,\n                                     Metainfo metainfo,\n                                     Map<String, Map<String, String>> configs,\n                                     MapOperations env,\n                                     SliderFileSystem fileSystem,\n                                     ConfTreeOperations appConf)", "testcase": false, "constructor": false}, {"identifier": "getZkRegistryPath", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getZkRegistryPath()", "full_signature": "private String getZkRegistryPath()", "class_method_signature": "AgentProviderService.getZkRegistryPath()", "testcase": false, "constructor": false}, {"identifier": "rebuildContainerDetails", "parameters": "(List<Container> liveContainers,\n                                      String applicationId, Map<Integer, ProviderRole> providerRoleMap)", "modifiers": "@Override public", "return": "void", "signature": "void rebuildContainerDetails(List<Container> liveContainers,\n                                      String applicationId, Map<Integer, ProviderRole> providerRoleMap)", "full_signature": "@Override public void rebuildContainerDetails(List<Container> liveContainers,\n                                      String applicationId, Map<Integer, ProviderRole> providerRoleMap)", "class_method_signature": "AgentProviderService.rebuildContainerDetails(List<Container> liveContainers,\n                                      String applicationId, Map<Integer, ProviderRole> providerRoleMap)", "testcase": false, "constructor": false}, {"identifier": "isSupportedRole", "parameters": "(String role)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSupportedRole(String role)", "full_signature": "@Override public boolean isSupportedRole(String role)", "class_method_signature": "AgentProviderService.isSupportedRole(String role)", "testcase": false, "constructor": false}, {"identifier": "handleRegistration", "parameters": "(Register registration)", "modifiers": "@Override public", "return": "RegistrationResponse", "signature": "RegistrationResponse handleRegistration(Register registration)", "full_signature": "@Override public RegistrationResponse handleRegistration(Register registration)", "class_method_signature": "AgentProviderService.handleRegistration(Register registration)", "testcase": false, "constructor": false}, {"identifier": "checkAndSetContainerAppVersion", "parameters": "(String containerId,\n      String appVersion)", "modifiers": "private", "return": "void", "signature": "void checkAndSetContainerAppVersion(String containerId,\n      String appVersion)", "full_signature": "private void checkAndSetContainerAppVersion(String containerId,\n      String appVersion)", "class_method_signature": "AgentProviderService.checkAndSetContainerAppVersion(String containerId,\n      String appVersion)", "testcase": false, "constructor": false}, {"identifier": "handleHeartBeat", "parameters": "(HeartBeat heartBeat)", "modifiers": "@Override public", "return": "HeartBeatResponse", "signature": "HeartBeatResponse handleHeartBeat(HeartBeat heartBeat)", "full_signature": "@Override public HeartBeatResponse handleHeartBeat(HeartBeat heartBeat)", "class_method_signature": "AgentProviderService.handleHeartBeat(HeartBeat heartBeat)", "testcase": false, "constructor": false}, {"identifier": "isDockerContainer", "parameters": "(String roleGroup)", "modifiers": "private", "return": "boolean", "signature": "boolean isDockerContainer(String roleGroup)", "full_signature": "private boolean isDockerContainer(String roleGroup)", "class_method_signature": "AgentProviderService.isDockerContainer(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "isYarnDockerContainer", "parameters": "(String roleGroup)", "modifiers": "private", "return": "boolean", "signature": "boolean isYarnDockerContainer(String roleGroup)", "full_signature": "private boolean isYarnDockerContainer(String roleGroup)", "class_method_signature": "AgentProviderService.isYarnDockerContainer(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "processAllocatedPorts", "parameters": "(String fqdn,\n                                       String roleName,\n                                       String roleGroup,\n                                       String containerId,\n                                       Map<String, String> ports)", "modifiers": "protected", "return": "void", "signature": "void processAllocatedPorts(String fqdn,\n                                       String roleName,\n                                       String roleGroup,\n                                       String containerId,\n                                       Map<String, String> ports)", "full_signature": "protected void processAllocatedPorts(String fqdn,\n                                       String roleName,\n                                       String roleGroup,\n                                       String containerId,\n                                       Map<String, String> ports)", "class_method_signature": "AgentProviderService.processAllocatedPorts(String fqdn,\n                                       String roleName,\n                                       String roleGroup,\n                                       String containerId,\n                                       Map<String, String> ports)", "testcase": false, "constructor": false}, {"identifier": "updateComponentStatusWithAgentState", "parameters": "(\n      ComponentInstanceState componentStatus, State agentState)", "modifiers": "private", "return": "void", "signature": "void updateComponentStatusWithAgentState(\n      ComponentInstanceState componentStatus, State agentState)", "full_signature": "private void updateComponentStatusWithAgentState(\n      ComponentInstanceState componentStatus, State agentState)", "class_method_signature": "AgentProviderService.updateComponentStatusWithAgentState(\n      ComponentInstanceState componentStatus, State agentState)", "testcase": false, "constructor": false}, {"identifier": "buildMonitorDetails", "parameters": "(ClusterDescription clusterDesc)", "modifiers": "@Override public", "return": "Map<String, MonitorDetail>", "signature": "Map<String, MonitorDetail> buildMonitorDetails(ClusterDescription clusterDesc)", "full_signature": "@Override public Map<String, MonitorDetail> buildMonitorDetails(ClusterDescription clusterDesc)", "class_method_signature": "AgentProviderService.buildMonitorDetails(ClusterDescription clusterDesc)", "testcase": false, "constructor": false}, {"identifier": "applyInitialRegistryDefinitions", "parameters": "(URL amWebURI,\n      URL agentOpsURI,\n      URL agentStatusURI,\n      ServiceRecord serviceRecord)", "modifiers": "@Override public", "return": "void", "signature": "void applyInitialRegistryDefinitions(URL amWebURI,\n      URL agentOpsURI,\n      URL agentStatusURI,\n      ServiceRecord serviceRecord)", "full_signature": "@Override public void applyInitialRegistryDefinitions(URL amWebURI,\n      URL agentOpsURI,\n      URL agentStatusURI,\n      ServiceRecord serviceRecord)", "class_method_signature": "AgentProviderService.applyInitialRegistryDefinitions(URL amWebURI,\n      URL agentOpsURI,\n      URL agentStatusURI,\n      ServiceRecord serviceRecord)", "testcase": false, "constructor": false}, {"identifier": "notifyContainerCompleted", "parameters": "(ContainerId containerId)", "modifiers": "@Override public", "return": "void", "signature": "void notifyContainerCompleted(ContainerId containerId)", "full_signature": "@Override public void notifyContainerCompleted(ContainerId containerId)", "class_method_signature": "AgentProviderService.notifyContainerCompleted(ContainerId containerId)", "testcase": false, "constructor": false}, {"identifier": "readAndSetHeartbeatMonitoringInterval", "parameters": "(AggregateConf instanceDefinition)", "modifiers": "private", "return": "void", "signature": "void readAndSetHeartbeatMonitoringInterval(AggregateConf instanceDefinition)", "full_signature": "private void readAndSetHeartbeatMonitoringInterval(AggregateConf instanceDefinition)", "class_method_signature": "AgentProviderService.readAndSetHeartbeatMonitoringInterval(AggregateConf instanceDefinition)", "testcase": false, "constructor": false}, {"identifier": "initializeAgentDebugCommands", "parameters": "(AggregateConf instanceDefinition)", "modifiers": "private", "return": "void", "signature": "void initializeAgentDebugCommands(AggregateConf instanceDefinition)", "full_signature": "private void initializeAgentDebugCommands(AggregateConf instanceDefinition)", "class_method_signature": "AgentProviderService.initializeAgentDebugCommands(AggregateConf instanceDefinition)", "testcase": false, "constructor": false}, {"identifier": "getLogFolderExports", "parameters": "()", "modifiers": "@VisibleForTesting protected", "return": "Map<String, ExportEntry>", "signature": "Map<String, ExportEntry> getLogFolderExports()", "full_signature": "@VisibleForTesting protected Map<String, ExportEntry> getLogFolderExports()", "class_method_signature": "AgentProviderService.getLogFolderExports()", "testcase": false, "constructor": false}, {"identifier": "getWorkFolderExports", "parameters": "()", "modifiers": "@VisibleForTesting protected", "return": "Map<String, ExportEntry>", "signature": "Map<String, ExportEntry> getWorkFolderExports()", "full_signature": "@VisibleForTesting protected Map<String, ExportEntry> getWorkFolderExports()", "class_method_signature": "AgentProviderService.getWorkFolderExports()", "testcase": false, "constructor": false}, {"identifier": "getMetaInfo", "parameters": "()", "modifiers": "protected", "return": "Metainfo", "signature": "Metainfo getMetaInfo()", "full_signature": "protected Metainfo getMetaInfo()", "class_method_signature": "AgentProviderService.getMetaInfo()", "testcase": false, "constructor": false}, {"identifier": "getMetaInfo", "parameters": "(String roleGroup)", "modifiers": "@VisibleForTesting protected", "return": "Metainfo", "signature": "Metainfo getMetaInfo(String roleGroup)", "full_signature": "@VisibleForTesting protected Metainfo getMetaInfo(String roleGroup)", "class_method_signature": "AgentProviderService.getMetaInfo(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "getComponentStatuses", "parameters": "()", "modifiers": "@VisibleForTesting protected", "return": "Map<String, ComponentInstanceState>", "signature": "Map<String, ComponentInstanceState> getComponentStatuses()", "full_signature": "@VisibleForTesting protected Map<String, ComponentInstanceState> getComponentStatuses()", "class_method_signature": "AgentProviderService.getComponentStatuses()", "testcase": false, "constructor": false}, {"identifier": "getApplicationMetainfo", "parameters": "(SliderFileSystem fileSystem,\n      String appDef, boolean addonPackage)", "modifiers": "@VisibleForTesting protected", "return": "Metainfo", "signature": "Metainfo getApplicationMetainfo(SliderFileSystem fileSystem,\n      String appDef, boolean addonPackage)", "full_signature": "@VisibleForTesting protected Metainfo getApplicationMetainfo(SliderFileSystem fileSystem,\n      String appDef, boolean addonPackage)", "class_method_signature": "AgentProviderService.getApplicationMetainfo(SliderFileSystem fileSystem,\n      String appDef, boolean addonPackage)", "testcase": false, "constructor": false}, {"identifier": "getApplicationMetainfo", "parameters": "(SliderFileSystem fileSystem,\n      String appDef)", "modifiers": "@VisibleForTesting protected", "return": "Metainfo", "signature": "Metainfo getApplicationMetainfo(SliderFileSystem fileSystem,\n      String appDef)", "full_signature": "@VisibleForTesting protected Metainfo getApplicationMetainfo(SliderFileSystem fileSystem,\n      String appDef)", "class_method_signature": "AgentProviderService.getApplicationMetainfo(SliderFileSystem fileSystem,\n      String appDef)", "testcase": false, "constructor": false}, {"identifier": "setHeartbeatMonitorInterval", "parameters": "(int heartbeatMonitorInterval)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void setHeartbeatMonitorInterval(int heartbeatMonitorInterval)", "full_signature": "@VisibleForTesting protected void setHeartbeatMonitorInterval(int heartbeatMonitorInterval)", "class_method_signature": "AgentProviderService.setHeartbeatMonitorInterval(int heartbeatMonitorInterval)", "testcase": false, "constructor": false}, {"identifier": "setHeartbeatLostInterval", "parameters": "(int heartbeatLostInterval)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void setHeartbeatLostInterval(int heartbeatLostInterval)", "full_signature": "@VisibleForTesting protected void setHeartbeatLostInterval(int heartbeatLostInterval)", "class_method_signature": "AgentProviderService.setHeartbeatLostInterval(int heartbeatLostInterval)", "testcase": false, "constructor": false}, {"identifier": "setInUpgradeMode", "parameters": "(boolean inUpgradeMode)", "modifiers": "public", "return": "void", "signature": "void setInUpgradeMode(boolean inUpgradeMode)", "full_signature": "public void setInUpgradeMode(boolean inUpgradeMode)", "class_method_signature": "AgentProviderService.setInUpgradeMode(boolean inUpgradeMode)", "testcase": false, "constructor": false}, {"identifier": "addUpgradeContainers", "parameters": "(Set<String> upgradeContainers)", "modifiers": "public", "return": "void", "signature": "void addUpgradeContainers(Set<String> upgradeContainers)", "full_signature": "public void addUpgradeContainers(Set<String> upgradeContainers)", "class_method_signature": "AgentProviderService.addUpgradeContainers(Set<String> upgradeContainers)", "testcase": false, "constructor": false}, {"identifier": "setAppStopInitiated", "parameters": "(boolean appStopInitiated)", "modifiers": "public", "return": "void", "signature": "void setAppStopInitiated(boolean appStopInitiated)", "full_signature": "public void setAppStopInitiated(boolean appStopInitiated)", "class_method_signature": "AgentProviderService.setAppStopInitiated(boolean appStopInitiated)", "testcase": false, "constructor": false}, {"identifier": "initializeDefaultConfigs", "parameters": "(SliderFileSystem fileSystem,\n                                                                String appDef, Metainfo metainfo)", "modifiers": "protected", "return": "Map<String, DefaultConfig>", "signature": "Map<String, DefaultConfig> initializeDefaultConfigs(SliderFileSystem fileSystem,\n                                                                String appDef, Metainfo metainfo)", "full_signature": "protected Map<String, DefaultConfig> initializeDefaultConfigs(SliderFileSystem fileSystem,\n                                                                String appDef, Metainfo metainfo)", "class_method_signature": "AgentProviderService.initializeDefaultConfigs(SliderFileSystem fileSystem,\n                                                                String appDef, Metainfo metainfo)", "testcase": false, "constructor": false}, {"identifier": "getDefaultConfigs", "parameters": "(String roleGroup)", "modifiers": "protected", "return": "Map<String, DefaultConfig>", "signature": "Map<String, DefaultConfig> getDefaultConfigs(String roleGroup)", "full_signature": "protected Map<String, DefaultConfig> getDefaultConfigs(String roleGroup)", "class_method_signature": "AgentProviderService.getDefaultConfigs(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "getHeartbeatMonitorInterval", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getHeartbeatMonitorInterval()", "full_signature": "private int getHeartbeatMonitorInterval()", "class_method_signature": "AgentProviderService.getHeartbeatMonitorInterval()", "testcase": false, "constructor": false}, {"identifier": "getHeartbeatLostInterval", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getHeartbeatLostInterval()", "full_signature": "private int getHeartbeatLostInterval()", "class_method_signature": "AgentProviderService.getHeartbeatLostInterval()", "testcase": false, "constructor": false}, {"identifier": "getClusterName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getClusterName()", "full_signature": "private String getClusterName()", "class_method_signature": "AgentProviderService.getClusterName()", "testcase": false, "constructor": false}, {"identifier": "publishApplicationInstanceData", "parameters": "(String name, String description,\n                                                Iterable<Map.Entry<String, String>> entries)", "modifiers": "protected", "return": "void", "signature": "void publishApplicationInstanceData(String name, String description,\n                                                Iterable<Map.Entry<String, String>> entries)", "full_signature": "protected void publishApplicationInstanceData(String name, String description,\n                                                Iterable<Map.Entry<String, String>> entries)", "class_method_signature": "AgentProviderService.publishApplicationInstanceData(String name, String description,\n                                                Iterable<Map.Entry<String, String>> entries)", "testcase": false, "constructor": false}, {"identifier": "getRoleClusterNodeMapping", "parameters": "()", "modifiers": "protected", "return": "Map<String, Map<String, ClusterNode>>", "signature": "Map<String, Map<String, ClusterNode>> getRoleClusterNodeMapping()", "full_signature": "protected Map<String, Map<String, ClusterNode>> getRoleClusterNodeMapping()", "class_method_signature": "AgentProviderService.getRoleClusterNodeMapping()", "testcase": false, "constructor": false}, {"identifier": "getContainerLabel", "parameters": "(Container container, String role, String group)", "modifiers": "private", "return": "String", "signature": "String getContainerLabel(Container container, String role, String group)", "full_signature": "private String getContainerLabel(Container container, String role, String group)", "class_method_signature": "AgentProviderService.getContainerLabel(Container container, String role, String group)", "testcase": false, "constructor": false}, {"identifier": "getClusterInfoPropertyValue", "parameters": "(String name)", "modifiers": "protected", "return": "String", "signature": "String getClusterInfoPropertyValue(String name)", "full_signature": "protected String getClusterInfoPropertyValue(String name)", "class_method_signature": "AgentProviderService.getClusterInfoPropertyValue(String name)", "testcase": false, "constructor": false}, {"identifier": "getClusterOptionPropertyValue", "parameters": "(String name)", "modifiers": "protected", "return": "String", "signature": "String getClusterOptionPropertyValue(String name)", "full_signature": "protected String getClusterOptionPropertyValue(String name)", "class_method_signature": "AgentProviderService.getClusterOptionPropertyValue(String name)", "testcase": false, "constructor": false}, {"identifier": "lostContainer", "parameters": "(\n      String label,\n      ContainerId containerId)", "modifiers": "protected", "return": "void", "signature": "void lostContainer(\n      String label,\n      ContainerId containerId)", "full_signature": "protected void lostContainer(\n      String label,\n      ContainerId containerId)", "class_method_signature": "AgentProviderService.lostContainer(\n      String label,\n      ContainerId containerId)", "testcase": false, "constructor": false}, {"identifier": "buildProviderStatus", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> buildProviderStatus()", "full_signature": "public Map<String, String> buildProviderStatus()", "class_method_signature": "AgentProviderService.buildProviderStatus()", "testcase": false, "constructor": false}, {"identifier": "publishFolderPaths", "parameters": "(\n      Map<String, String> folders, String containerId, String componentName, String hostFqdn)", "modifiers": "protected", "return": "void", "signature": "void publishFolderPaths(\n      Map<String, String> folders, String containerId, String componentName, String hostFqdn)", "full_signature": "protected void publishFolderPaths(\n      Map<String, String> folders, String containerId, String componentName, String hostFqdn)", "class_method_signature": "AgentProviderService.publishFolderPaths(\n      Map<String, String> folders, String containerId, String componentName, String hostFqdn)", "testcase": false, "constructor": false}, {"identifier": "updateExportsFromList", "parameters": "(PublishedExports exports, Map<String, ExportEntry> folderExports)", "modifiers": "private", "return": "void", "signature": "void updateExportsFromList(PublishedExports exports, Map<String, ExportEntry> folderExports)", "full_signature": "private void updateExportsFromList(PublishedExports exports, Map<String, ExportEntry> folderExports)", "class_method_signature": "AgentProviderService.updateExportsFromList(PublishedExports exports, Map<String, ExportEntry> folderExports)", "testcase": false, "constructor": false}, {"identifier": "publishConfigAndExportGroups", "parameters": "(HeartBeat heartBeat,\n      ComponentInstanceState componentStatus, String componentGroup)", "modifiers": "protected", "return": "void", "signature": "void publishConfigAndExportGroups(HeartBeat heartBeat,\n      ComponentInstanceState componentStatus, String componentGroup)", "full_signature": "protected void publishConfigAndExportGroups(HeartBeat heartBeat,\n      ComponentInstanceState componentStatus, String componentGroup)", "class_method_signature": "AgentProviderService.publishConfigAndExportGroups(HeartBeat heartBeat,\n      ComponentInstanceState componentStatus, String componentGroup)", "testcase": false, "constructor": false}, {"identifier": "canBeExported", "parameters": "(String exportGroupName, String name, Set<String> appExports)", "modifiers": "private", "return": "boolean", "signature": "boolean canBeExported(String exportGroupName, String name, Set<String> appExports)", "full_signature": "private boolean canBeExported(String exportGroupName, String name, Set<String> appExports)", "class_method_signature": "AgentProviderService.canBeExported(String exportGroupName, String name, Set<String> appExports)", "testcase": false, "constructor": false}, {"identifier": "getCurrentExports", "parameters": "(String groupName)", "modifiers": "protected", "return": "Map<String, List<ExportEntry>>", "signature": "Map<String, List<ExportEntry>> getCurrentExports(String groupName)", "full_signature": "protected Map<String, List<ExportEntry>> getCurrentExports(String groupName)", "class_method_signature": "AgentProviderService.getCurrentExports(String groupName)", "testcase": false, "constructor": false}, {"identifier": "publishModifiedExportGroups", "parameters": "(Set<String> modifiedGroups)", "modifiers": "private", "return": "void", "signature": "void publishModifiedExportGroups(Set<String> modifiedGroups)", "full_signature": "private void publishModifiedExportGroups(Set<String> modifiedGroups)", "class_method_signature": "AgentProviderService.publishModifiedExportGroups(Set<String> modifiedGroups)", "testcase": false, "constructor": false}, {"identifier": "processAndPublishComponentSpecificData", "parameters": "(Map<String, String> ports,\n                                                        String containerId,\n                                                        String hostFqdn,\n                                                        String componentGroup)", "modifiers": "protected", "return": "void", "signature": "void processAndPublishComponentSpecificData(Map<String, String> ports,\n                                                        String containerId,\n                                                        String hostFqdn,\n                                                        String componentGroup)", "full_signature": "protected void processAndPublishComponentSpecificData(Map<String, String> ports,\n                                                        String containerId,\n                                                        String hostFqdn,\n                                                        String componentGroup)", "class_method_signature": "AgentProviderService.processAndPublishComponentSpecificData(Map<String, String> ports,\n                                                        String containerId,\n                                                        String hostFqdn,\n                                                        String componentGroup)", "testcase": false, "constructor": false}, {"identifier": "processAndPublishComponentSpecificExports", "parameters": "(Map<String, String> ports,\n                                                           String containerId,\n                                                           String hostFqdn,\n                                                           String compName,\n                                                           String compGroup)", "modifiers": "protected", "return": "void", "signature": "void processAndPublishComponentSpecificExports(Map<String, String> ports,\n                                                           String containerId,\n                                                           String hostFqdn,\n                                                           String compName,\n                                                           String compGroup)", "full_signature": "protected void processAndPublishComponentSpecificExports(Map<String, String> ports,\n                                                           String containerId,\n                                                           String hostFqdn,\n                                                           String compName,\n                                                           String compGroup)", "class_method_signature": "AgentProviderService.processAndPublishComponentSpecificExports(Map<String, String> ports,\n                                                           String containerId,\n                                                           String hostFqdn,\n                                                           String compName,\n                                                           String compGroup)", "testcase": false, "constructor": false}, {"identifier": "publishComponentInstanceData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void publishComponentInstanceData()", "full_signature": "private void publishComponentInstanceData()", "class_method_signature": "AgentProviderService.publishComponentInstanceData()", "testcase": false, "constructor": false}, {"identifier": "getApplicationComponent", "parameters": "(String roleGroup)", "modifiers": "protected", "return": "Component", "signature": "Component getApplicationComponent(String roleGroup)", "full_signature": "protected Component getApplicationComponent(String roleGroup)", "class_method_signature": "AgentProviderService.getApplicationComponent(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "getScriptPathForMasterPackage", "parameters": "(String roleGroup)", "modifiers": "protected", "return": "CommandScript", "signature": "CommandScript getScriptPathForMasterPackage(String roleGroup)", "full_signature": "protected CommandScript getScriptPathForMasterPackage(String roleGroup)", "class_method_signature": "AgentProviderService.getScriptPathForMasterPackage(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "isMaster", "parameters": "(String roleGroup)", "modifiers": "protected", "return": "boolean", "signature": "boolean isMaster(String roleGroup)", "full_signature": "protected boolean isMaster(String roleGroup)", "class_method_signature": "AgentProviderService.isMaster(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "canPublishConfig", "parameters": "(String roleGroup)", "modifiers": "protected", "return": "boolean", "signature": "boolean canPublishConfig(String roleGroup)", "full_signature": "protected boolean canPublishConfig(String roleGroup)", "class_method_signature": "AgentProviderService.canPublishConfig(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "isMarkedAutoRestart", "parameters": "(String roleGroup)", "modifiers": "protected", "return": "boolean", "signature": "boolean isMarkedAutoRestart(String roleGroup)", "full_signature": "protected boolean isMarkedAutoRestart(String roleGroup)", "class_method_signature": "AgentProviderService.isMarkedAutoRestart(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "canAnyMasterPublishConfig", "parameters": "(String roleGroup)", "modifiers": "protected", "return": "boolean", "signature": "boolean canAnyMasterPublishConfig(String roleGroup)", "full_signature": "protected boolean canAnyMasterPublishConfig(String roleGroup)", "class_method_signature": "AgentProviderService.canAnyMasterPublishConfig(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "getRoleName", "parameters": "(String label)", "modifiers": "private", "return": "String", "signature": "String getRoleName(String label)", "full_signature": "private String getRoleName(String label)", "class_method_signature": "AgentProviderService.getRoleName(String label)", "testcase": false, "constructor": false}, {"identifier": "getRoleGroup", "parameters": "(String label)", "modifiers": "private", "return": "String", "signature": "String getRoleGroup(String label)", "full_signature": "private String getRoleGroup(String label)", "class_method_signature": "AgentProviderService.getRoleGroup(String label)", "testcase": false, "constructor": false}, {"identifier": "getContainerId", "parameters": "(String label)", "modifiers": "private", "return": "String", "signature": "String getContainerId(String label)", "full_signature": "private String getContainerId(String label)", "class_method_signature": "AgentProviderService.getContainerId(String label)", "testcase": false, "constructor": false}, {"identifier": "addInstallCommand", "parameters": "(String roleName,\n                                   String roleGroup,\n                                   String containerId,\n                                   HeartBeatResponse response,\n                                   String scriptPath,\n                                   ComponentCommand compCmd,\n                                   long timeout,\n                                   String pkg)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addInstallCommand(String roleName,\n                                   String roleGroup,\n                                   String containerId,\n                                   HeartBeatResponse response,\n                                   String scriptPath,\n                                   ComponentCommand compCmd,\n                                   long timeout,\n                                   String pkg)", "full_signature": "@VisibleForTesting protected void addInstallCommand(String roleName,\n                                   String roleGroup,\n                                   String containerId,\n                                   HeartBeatResponse response,\n                                   String scriptPath,\n                                   ComponentCommand compCmd,\n                                   long timeout,\n                                   String pkg)", "class_method_signature": "AgentProviderService.addInstallCommand(String roleName,\n                                   String roleGroup,\n                                   String containerId,\n                                   HeartBeatResponse response,\n                                   String scriptPath,\n                                   ComponentCommand compCmd,\n                                   long timeout,\n                                   String pkg)", "testcase": false, "constructor": false}, {"identifier": "addInstallDockerCommand", "parameters": "(String roleName,\n                                   String roleGroup,\n                                   String containerId,\n                                   HeartBeatResponse response,\n                                   ComponentCommand compCmd,\n                                   long timeout)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addInstallDockerCommand(String roleName,\n                                   String roleGroup,\n                                   String containerId,\n                                   HeartBeatResponse response,\n                                   ComponentCommand compCmd,\n                                   long timeout)", "full_signature": "@VisibleForTesting protected void addInstallDockerCommand(String roleName,\n                                   String roleGroup,\n                                   String containerId,\n                                   HeartBeatResponse response,\n                                   ComponentCommand compCmd,\n                                   long timeout)", "class_method_signature": "AgentProviderService.addInstallDockerCommand(String roleName,\n                                   String roleGroup,\n                                   String containerId,\n                                   HeartBeatResponse response,\n                                   ComponentCommand compCmd,\n                                   long timeout)", "testcase": false, "constructor": false}, {"identifier": "setCommandParameters", "parameters": "(String scriptPath,\n      long timeout, boolean recordConfig)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> setCommandParameters(String scriptPath,\n      long timeout, boolean recordConfig)", "full_signature": "private Map<String, String> setCommandParameters(String scriptPath,\n      long timeout, boolean recordConfig)", "class_method_signature": "AgentProviderService.setCommandParameters(String scriptPath,\n      long timeout, boolean recordConfig)", "testcase": false, "constructor": false}, {"identifier": "setCommandParameters", "parameters": "(ComponentCommand compCmd,\n      long timeout, boolean recordConfig)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> setCommandParameters(ComponentCommand compCmd,\n      long timeout, boolean recordConfig)", "full_signature": "private Map<String, String> setCommandParameters(ComponentCommand compCmd,\n      long timeout, boolean recordConfig)", "class_method_signature": "AgentProviderService.setCommandParameters(ComponentCommand compCmd,\n      long timeout, boolean recordConfig)", "testcase": false, "constructor": false}, {"identifier": "buildComponentConfigurations", "parameters": "(\n      ConfTreeOperations appConf)", "modifiers": "private", "return": "Map<String, Map<String, String>>", "signature": "Map<String, Map<String, String>> buildComponentConfigurations(\n      ConfTreeOperations appConf)", "full_signature": "private Map<String, Map<String, String>> buildComponentConfigurations(\n      ConfTreeOperations appConf)", "class_method_signature": "AgentProviderService.buildComponentConfigurations(\n      ConfTreeOperations appConf)", "testcase": false, "constructor": false}, {"identifier": "getPackageListFromApplication", "parameters": "(Application application)", "modifiers": "protected static", "return": "String", "signature": "String getPackageListFromApplication(Application application)", "full_signature": "protected static String getPackageListFromApplication(Application application)", "class_method_signature": "AgentProviderService.getPackageListFromApplication(Application application)", "testcase": false, "constructor": false}, {"identifier": "getPackageList", "parameters": "(String roleGroup)", "modifiers": "private", "return": "String", "signature": "String getPackageList(String roleGroup)", "full_signature": "private String getPackageList(String roleGroup)", "class_method_signature": "AgentProviderService.getPackageList(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "prepareExecutionCommand", "parameters": "(ExecutionCommand cmd)", "modifiers": "private", "return": "void", "signature": "void prepareExecutionCommand(ExecutionCommand cmd)", "full_signature": "private void prepareExecutionCommand(ExecutionCommand cmd)", "class_method_signature": "AgentProviderService.prepareExecutionCommand(ExecutionCommand cmd)", "testcase": false, "constructor": false}, {"identifier": "commandParametersSet", "parameters": "(String scriptPath, long timeout, boolean recordConfig)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> commandParametersSet(String scriptPath, long timeout, boolean recordConfig)", "full_signature": "private Map<String, String> commandParametersSet(String scriptPath, long timeout, boolean recordConfig)", "class_method_signature": "AgentProviderService.commandParametersSet(String scriptPath, long timeout, boolean recordConfig)", "testcase": false, "constructor": false}, {"identifier": "commandParametersSet", "parameters": "(ComponentCommand compCmd, long timeout, boolean recordConfig)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> commandParametersSet(ComponentCommand compCmd, long timeout, boolean recordConfig)", "full_signature": "private Map<String, String> commandParametersSet(ComponentCommand compCmd, long timeout, boolean recordConfig)", "class_method_signature": "AgentProviderService.commandParametersSet(ComponentCommand compCmd, long timeout, boolean recordConfig)", "testcase": false, "constructor": false}, {"identifier": "addStatusCommand", "parameters": "(String roleName,\n                                  String roleGroup,\n                                  String containerId,\n                                  HeartBeatResponse response,\n                                  String scriptPath,\n                                  long timeout)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addStatusCommand(String roleName,\n                                  String roleGroup,\n                                  String containerId,\n                                  HeartBeatResponse response,\n                                  String scriptPath,\n                                  long timeout)", "full_signature": "@VisibleForTesting protected void addStatusCommand(String roleName,\n                                  String roleGroup,\n                                  String containerId,\n                                  HeartBeatResponse response,\n                                  String scriptPath,\n                                  long timeout)", "class_method_signature": "AgentProviderService.addStatusCommand(String roleName,\n                                  String roleGroup,\n                                  String containerId,\n                                  HeartBeatResponse response,\n                                  String scriptPath,\n                                  long timeout)", "testcase": false, "constructor": false}, {"identifier": "addStatusDockerCommand", "parameters": "(String roleName,\n                                  String roleGroup,\n                                  String containerId,\n                                  HeartBeatResponse response,\n                                  String scriptPath,\n                                  long timeout)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addStatusDockerCommand(String roleName,\n                                  String roleGroup,\n                                  String containerId,\n                                  HeartBeatResponse response,\n                                  String scriptPath,\n                                  long timeout)", "full_signature": "@VisibleForTesting protected void addStatusDockerCommand(String roleName,\n                                  String roleGroup,\n                                  String containerId,\n                                  HeartBeatResponse response,\n                                  String scriptPath,\n                                  long timeout)", "class_method_signature": "AgentProviderService.addStatusDockerCommand(String roleName,\n                                  String roleGroup,\n                                  String containerId,\n                                  HeartBeatResponse response,\n                                  String scriptPath,\n                                  long timeout)", "testcase": false, "constructor": false}, {"identifier": "addGetConfigDockerCommand", "parameters": "(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addGetConfigDockerCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response)", "full_signature": "@VisibleForTesting protected void addGetConfigDockerCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response)", "class_method_signature": "AgentProviderService.addGetConfigDockerCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response)", "testcase": false, "constructor": false}, {"identifier": "getConfigFromMetaInfoWithAppConfigOverriding", "parameters": "(String roleGroup,\n      String configName)", "modifiers": "private", "return": "String", "signature": "String getConfigFromMetaInfoWithAppConfigOverriding(String roleGroup,\n      String configName)", "full_signature": "private String getConfigFromMetaInfoWithAppConfigOverriding(String roleGroup,\n      String configName)", "class_method_signature": "AgentProviderService.getConfigFromMetaInfoWithAppConfigOverriding(String roleGroup,\n      String configName)", "testcase": false, "constructor": false}, {"identifier": "addStartDockerCommand", "parameters": "(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response,\n      ComponentCommand startCommand, long timeout, boolean isMarkedAutoRestart)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addStartDockerCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response,\n      ComponentCommand startCommand, long timeout, boolean isMarkedAutoRestart)", "full_signature": "@VisibleForTesting protected void addStartDockerCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response,\n      ComponentCommand startCommand, long timeout, boolean isMarkedAutoRestart)", "class_method_signature": "AgentProviderService.addStartDockerCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response,\n      ComponentCommand startCommand, long timeout, boolean isMarkedAutoRestart)", "testcase": false, "constructor": false}, {"identifier": "getConfigFromMetaInfo", "parameters": "(String roleGroup, String configName)", "modifiers": "private", "return": "String", "signature": "String getConfigFromMetaInfo(String roleGroup, String configName)", "full_signature": "private String getConfigFromMetaInfo(String roleGroup, String configName)", "class_method_signature": "AgentProviderService.getConfigFromMetaInfo(String roleGroup, String configName)", "testcase": false, "constructor": false}, {"identifier": "addGetConfigCommand", "parameters": "(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addGetConfigCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response)", "full_signature": "@VisibleForTesting protected void addGetConfigCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response)", "class_method_signature": "AgentProviderService.addGetConfigCommand(String roleName, String roleGroup,\n      String containerId, HeartBeatResponse response)", "testcase": false, "constructor": false}, {"identifier": "addStartCommand", "parameters": "(String roleName, String roleGroup, String containerId,\n                                 HeartBeatResponse response,\n                                 String scriptPath, ComponentCommand startCommand,\n                                 ComponentCommand stopCommand,\n                                 long timeout, boolean isMarkedAutoRestart)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addStartCommand(String roleName, String roleGroup, String containerId,\n                                 HeartBeatResponse response,\n                                 String scriptPath, ComponentCommand startCommand,\n                                 ComponentCommand stopCommand,\n                                 long timeout, boolean isMarkedAutoRestart)", "full_signature": "@VisibleForTesting protected void addStartCommand(String roleName, String roleGroup, String containerId,\n                                 HeartBeatResponse response,\n                                 String scriptPath, ComponentCommand startCommand,\n                                 ComponentCommand stopCommand,\n                                 long timeout, boolean isMarkedAutoRestart)", "class_method_signature": "AgentProviderService.addStartCommand(String roleName, String roleGroup, String containerId,\n                                 HeartBeatResponse response,\n                                 String scriptPath, ComponentCommand startCommand,\n                                 ComponentCommand stopCommand,\n                                 long timeout, boolean isMarkedAutoRestart)", "testcase": false, "constructor": false}, {"identifier": "addUpgradeCommand", "parameters": "(String roleName, String roleGroup, String containerId,\n      HeartBeatResponse response, String scriptPath, long timeout)", "modifiers": "@VisibleForTesting protected", "return": "void", "signature": "void addUpgradeCommand(String roleName, String roleGroup, String containerId,\n      HeartBeatResponse response, String scriptPath, long timeout)", "full_signature": "@VisibleForTesting protected void addUpgradeCommand(String roleName, String roleGroup, String containerId,\n      HeartBeatResponse response, String scriptPath, long timeout)", "class_method_signature": "AgentProviderService.addUpgradeCommand(String roleName, String roleGroup, String containerId,\n      HeartBeatResponse response, String scriptPath, long timeout)", "testcase": false, "constructor": false}, {"identifier": "addStopCommand", "parameters": "(String roleName, String roleGroup, String containerId,\n      HeartBeatResponse response, String scriptPath, long timeout,\n      boolean isInUpgradeMode)", "modifiers": "protected", "return": "void", "signature": "void addStopCommand(String roleName, String roleGroup, String containerId,\n      HeartBeatResponse response, String scriptPath, long timeout,\n      boolean isInUpgradeMode)", "full_signature": "protected void addStopCommand(String roleName, String roleGroup, String containerId,\n      HeartBeatResponse response, String scriptPath, long timeout,\n      boolean isInUpgradeMode)", "class_method_signature": "AgentProviderService.addStopCommand(String roleName, String roleGroup, String containerId,\n      HeartBeatResponse response, String scriptPath, long timeout,\n      boolean isInUpgradeMode)", "testcase": false, "constructor": false}, {"identifier": "getJDKDir", "parameters": "()", "modifiers": "protected static", "return": "String", "signature": "String getJDKDir()", "full_signature": "protected static String getJDKDir()", "class_method_signature": "AgentProviderService.getJDKDir()", "testcase": false, "constructor": false}, {"identifier": "getAllocatedPorts", "parameters": "()", "modifiers": "protected", "return": "Map<String, String>", "signature": "Map<String, String> getAllocatedPorts()", "full_signature": "protected Map<String, String> getAllocatedPorts()", "class_method_signature": "AgentProviderService.getAllocatedPorts()", "testcase": false, "constructor": false}, {"identifier": "getComponentInstanceData", "parameters": "()", "modifiers": "protected", "return": "Map<String, Map<String, String>>", "signature": "Map<String, Map<String, String>> getComponentInstanceData()", "full_signature": "protected Map<String, Map<String, String>> getComponentInstanceData()", "class_method_signature": "AgentProviderService.getComponentInstanceData()", "testcase": false, "constructor": false}, {"identifier": "getAllocatedPorts", "parameters": "(String containerId)", "modifiers": "protected", "return": "Map<String, String>", "signature": "Map<String, String> getAllocatedPorts(String containerId)", "full_signature": "protected Map<String, String> getAllocatedPorts(String containerId)", "class_method_signature": "AgentProviderService.getAllocatedPorts(String containerId)", "testcase": false, "constructor": false}, {"identifier": "buildCommandConfigurations", "parameters": "(\n      ConfTreeOperations appConf, String containerId, String roleName, String roleGroup)", "modifiers": "private", "return": "Map<String, Map<String, String>>", "signature": "Map<String, Map<String, String>> buildCommandConfigurations(\n      ConfTreeOperations appConf, String containerId, String roleName, String roleGroup)", "full_signature": "private Map<String, Map<String, String>> buildCommandConfigurations(\n      ConfTreeOperations appConf, String containerId, String roleName, String roleGroup)", "class_method_signature": "AgentProviderService.buildCommandConfigurations(\n      ConfTreeOperations appConf, String containerId, String roleName, String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "dereferenceAllConfigs", "parameters": "(Map<String, Map<String, String>> configurations)", "modifiers": "protected", "return": "void", "signature": "void dereferenceAllConfigs(Map<String, Map<String, String>> configurations)", "full_signature": "protected void dereferenceAllConfigs(Map<String, Map<String, String>> configurations)", "class_method_signature": "AgentProviderService.dereferenceAllConfigs(Map<String, Map<String, String>> configurations)", "testcase": false, "constructor": false}, {"identifier": "getStandardTokenMap", "parameters": "(ConfTreeOperations appConf,\n      String componentName, String componentGroup)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getStandardTokenMap(ConfTreeOperations appConf,\n      String componentName, String componentGroup)", "full_signature": "private Map<String, String> getStandardTokenMap(ConfTreeOperations appConf,\n      String componentName, String componentGroup)", "class_method_signature": "AgentProviderService.getStandardTokenMap(ConfTreeOperations appConf,\n      String componentName, String componentGroup)", "testcase": false, "constructor": false}, {"identifier": "getSystemConfigurationsRequested", "parameters": "(ConfTreeOperations appConf)", "modifiers": "@VisibleForTesting protected", "return": "List<String>", "signature": "List<String> getSystemConfigurationsRequested(ConfTreeOperations appConf)", "full_signature": "@VisibleForTesting protected List<String> getSystemConfigurationsRequested(ConfTreeOperations appConf)", "class_method_signature": "AgentProviderService.getSystemConfigurationsRequested(ConfTreeOperations appConf)", "testcase": false, "constructor": false}, {"identifier": "getApplicationConfigurationTypes", "parameters": "(String roleGroup)", "modifiers": "@VisibleForTesting protected", "return": "List<String>", "signature": "List<String> getApplicationConfigurationTypes(String roleGroup)", "full_signature": "@VisibleForTesting protected List<String> getApplicationConfigurationTypes(String roleGroup)", "class_method_signature": "AgentProviderService.getApplicationConfigurationTypes(String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "addNamedConfiguration", "parameters": "(String configName, Map<String, String> sourceConfig,\n                                     Map<String, Map<String, String>> configurations,\n                                     Map<String, String> tokens, String containerId,\n                                     String roleName, String roleGroup)", "modifiers": "private", "return": "void", "signature": "void addNamedConfiguration(String configName, Map<String, String> sourceConfig,\n                                     Map<String, Map<String, String>> configurations,\n                                     Map<String, String> tokens, String containerId,\n                                     String roleName, String roleGroup)", "full_signature": "private void addNamedConfiguration(String configName, Map<String, String> sourceConfig,\n                                     Map<String, Map<String, String>> configurations,\n                                     Map<String, String> tokens, String containerId,\n                                     String roleName, String roleGroup)", "class_method_signature": "AgentProviderService.addNamedConfiguration(String configName, Map<String, String> sourceConfig,\n                                     Map<String, Map<String, String>> configurations,\n                                     Map<String, String> tokens, String containerId,\n                                     String roleName, String roleGroup)", "testcase": false, "constructor": false}, {"identifier": "addRoleRelatedTokens", "parameters": "(Map<String, String> tokens)", "modifiers": "protected", "return": "void", "signature": "void addRoleRelatedTokens(Map<String, String> tokens)", "full_signature": "protected void addRoleRelatedTokens(Map<String, String> tokens)", "class_method_signature": "AgentProviderService.addRoleRelatedTokens(Map<String, String> tokens)", "testcase": false, "constructor": false}, {"identifier": "getHostsList", "parameters": "(Collection<ClusterNode> values,\n                                        boolean hostOnly)", "modifiers": "private", "return": "Iterable<String>", "signature": "Iterable<String> getHostsList(Collection<ClusterNode> values,\n                                        boolean hostOnly)", "full_signature": "private Iterable<String> getHostsList(Collection<ClusterNode> values,\n                                        boolean hostOnly)", "class_method_signature": "AgentProviderService.getHostsList(Collection<ClusterNode> values,\n                                        boolean hostOnly)", "testcase": false, "constructor": false}, {"identifier": "addDefaultGlobalConfig", "parameters": "(Map<String, String> config, String containerId, String roleName)", "modifiers": "private", "return": "void", "signature": "void addDefaultGlobalConfig(Map<String, String> config, String containerId, String roleName)", "full_signature": "private void addDefaultGlobalConfig(Map<String, String> config, String containerId, String roleName)", "class_method_signature": "AgentProviderService.addDefaultGlobalConfig(Map<String, String> config, String containerId, String roleName)", "testcase": false, "constructor": false}, {"identifier": "buildRoleHostDetails", "parameters": "(Map<String, MonitorDetail> details)", "modifiers": "private", "return": "void", "signature": "void buildRoleHostDetails(Map<String, MonitorDetail> details)", "full_signature": "private void buildRoleHostDetails(Map<String, MonitorDetail> details)", "class_method_signature": "AgentProviderService.buildRoleHostDetails(Map<String, MonitorDetail> details)", "testcase": false, "constructor": false}], "file": "slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java"}, "focal_method": {"identifier": "dereferenceAllConfigs", "parameters": "(Map<String, Map<String, String>> configurations)", "modifiers": "protected", "return": "void", "body": "protected void dereferenceAllConfigs(Map<String, Map<String, String>> configurations) {\n    Map<String, String> allConfigs = new HashMap<String, String>();\n    String lookupFormat = \"${@//site/%s/%s}\";\n    for (String configType : configurations.keySet()) {\n      Map<String, String> configBucket = configurations.get(configType);\n      for (String configName : configBucket.keySet()) {\n        allConfigs.put(String.format(lookupFormat, configType, configName), configBucket.get(configName));\n      }\n    }\n\n    boolean finished = false;\n    while (!finished) {\n      finished = true;\n      for (Map.Entry<String, String> entry : allConfigs.entrySet()) {\n        String configValue = entry.getValue();\n        for (Map.Entry<String, String> lookUpEntry : allConfigs.entrySet()) {\n          String lookUpValue = lookUpEntry.getValue();\n          if (lookUpValue.contains(\"${@//site/\")) {\n            continue;\n          }\n          String lookUpKey = lookUpEntry.getKey();\n          if (configValue != null && configValue.contains(lookUpKey)) {\n            configValue = configValue.replace(lookUpKey, lookUpValue);\n          }\n        }\n        if (!configValue.equals(entry.getValue())) {\n          finished = false;\n          allConfigs.put(entry.getKey(), configValue);\n        }\n      }\n    }\n\n    for (String configType : configurations.keySet()) {\n      Map<String, String> configBucket = configurations.get(configType);\n      for (Map.Entry<String, String> entry: configBucket.entrySet()) {\n        String configName = entry.getKey();\n        String configValue = entry.getValue();\n        for (Map.Entry<String, String> lookUpEntry : allConfigs.entrySet()) {\n          String lookUpValue = lookUpEntry.getValue();\n          if (lookUpValue.contains(\"${@//site/\")) {\n            continue;\n          }\n          String lookUpKey = lookUpEntry.getKey();\n          if (configValue != null && configValue.contains(lookUpKey)) {\n            configValue = configValue.replace(lookUpKey, lookUpValue);\n          }\n        }\n        configBucket.put(configName, configValue);\n      }\n    }\n  }", "signature": "void dereferenceAllConfigs(Map<String, Map<String, String>> configurations)", "full_signature": "protected void dereferenceAllConfigs(Map<String, Map<String, String>> configurations)", "class_method_signature": "AgentProviderService.dereferenceAllConfigs(Map<String, Map<String, String>> configurations)", "testcase": false, "constructor": false, "invocations": ["keySet", "get", "keySet", "put", "format", "get", "entrySet", "getValue", "entrySet", "getValue", "contains", "getKey", "contains", "replace", "equals", "getValue", "put", "getKey", "keySet", "get", "entrySet", "getKey", "getValue", "entrySet", "getValue", "contains", "getKey", "contains", "replace", "put"]}, "repository": {"repo_id": 20051204, "url": "https://github.com/apache/incubator-retired-slider", "language": "Java", "is_fork": false, "fork_count": 73, "stargazer_count": 74, "size": 16472, "license": "licensed"}}