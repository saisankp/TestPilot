{"test_class": {"identifier": "CurveLookupMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "pross-common/src/test/java/com/ibm/pross/common/util/crypto/ecc/CurveLookupMapTest.java"}, "test_case": {"identifier": "testGetSecp384r1Name", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetSecp384r1Name() {\n\t\tAssert.assertEquals(\"secp384r1\", CurveLookupMap.getCurveName(EcCurve.secp384r1));\n\t}", "signature": "void testGetSecp384r1Name()", "full_signature": "@Test public void testGetSecp384r1Name()", "class_method_signature": "CurveLookupMapTest.testGetSecp384r1Name()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getCurveName"]}, "focal_class": {"identifier": "CurveLookupMap", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<String, EcCurve> NAME_TO_CURVE_MAP = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "Map<String, EcCurve>", "declarator": "NAME_TO_CURVE_MAP = new ConcurrentHashMap<>()", "var_name": "NAME_TO_CURVE_MAP"}, {"original_string": "private static final Map<String, EcCurve> OID_TO_CURVE_MAP = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "Map<String, EcCurve>", "declarator": "OID_TO_CURVE_MAP = new ConcurrentHashMap<>()", "var_name": "OID_TO_CURVE_MAP"}, {"original_string": "private static final Map<EcCurve, String> CURVE_TO_NAME_MAP = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "Map<EcCurve, String>", "declarator": "CURVE_TO_NAME_MAP = new ConcurrentHashMap<>()", "var_name": "CURVE_TO_NAME_MAP"}, {"original_string": "private static final Map<EcCurve, String> CURVE_TO_OID_MAP = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "Map<EcCurve, String>", "declarator": "CURVE_TO_OID_MAP = new ConcurrentHashMap<>()", "var_name": "CURVE_TO_OID_MAP"}], "methods": [{"identifier": "getCurveByName", "parameters": "(String name)", "modifiers": "public static", "return": "EcCurve", "signature": "EcCurve getCurveByName(String name)", "full_signature": "public static EcCurve getCurveByName(String name)", "class_method_signature": "CurveLookupMap.getCurveByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getCurveByOid", "parameters": "(String oid)", "modifiers": "public static", "return": "EcCurve", "signature": "EcCurve getCurveByOid(String oid)", "full_signature": "public static EcCurve getCurveByOid(String oid)", "class_method_signature": "CurveLookupMap.getCurveByOid(String oid)", "testcase": false, "constructor": false}, {"identifier": "getCurveName", "parameters": "(EcCurve curve)", "modifiers": "public static", "return": "String", "signature": "String getCurveName(EcCurve curve)", "full_signature": "public static String getCurveName(EcCurve curve)", "class_method_signature": "CurveLookupMap.getCurveName(EcCurve curve)", "testcase": false, "constructor": false}, {"identifier": "getCurveOid", "parameters": "(EcCurve curve)", "modifiers": "public static", "return": "String", "signature": "String getCurveOid(EcCurve curve)", "full_signature": "public static String getCurveOid(EcCurve curve)", "class_method_signature": "CurveLookupMap.getCurveOid(EcCurve curve)", "testcase": false, "constructor": false}], "file": "pross-common/src/main/java/com/ibm/pross/common/util/crypto/ecc/CurveLookupMap.java"}, "focal_method": {"identifier": "getCurveName", "parameters": "(EcCurve curve)", "modifiers": "public static", "return": "String", "body": "public static String getCurveName(EcCurve curve) {\n\t\treturn CURVE_TO_NAME_MAP.get(curve);\n\t}", "signature": "String getCurveName(EcCurve curve)", "full_signature": "public static String getCurveName(EcCurve curve)", "class_method_signature": "CurveLookupMap.getCurveName(EcCurve curve)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 144309611, "url": "https://github.com/jasonkresch/protect", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 38, "size": 1932, "license": "licensed"}}