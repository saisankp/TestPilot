{"test_class": {"identifier": "ViewCompatTest", "superclass": "extends BaseInstrumentationTestCase<ViewCompatActivity>", "interfaces": "", "fields": [{"original_string": "private View mView;", "modifier": "private", "type": "View", "declarator": "mView", "var_name": "mView"}], "file": "androidx/core/view/ViewCompatTest.java"}, "test_case": {"identifier": "testGenerateViewId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGenerateViewId() {\n        final int requestCount = 100;\n\n        Set<Integer> generatedIds = new HashSet<>();\n        for (int i = 0; i < requestCount; i++) {\n            int generatedId = ViewCompat.generateViewId();\n            assertTrue(isViewIdGenerated(generatedId));\n            generatedIds.add(generatedId);\n        }\n\n        assertThat(generatedIds.size(), equalTo(requestCount));\n    }", "signature": "void testGenerateViewId()", "full_signature": "@Test public void testGenerateViewId()", "class_method_signature": "ViewCompatTest.testGenerateViewId()", "testcase": true, "constructor": false, "invocations": ["generateViewId", "assertTrue", "isViewIdGenerated", "add", "assertThat", "size", "equalTo"]}, "focal_class": {"identifier": "ViewCompat", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"ViewCompat\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"ViewCompat\"", "var_name": "TAG"}, {"original_string": "@Deprecated\n    public static final int OVER_SCROLL_ALWAYS = 0;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "OVER_SCROLL_ALWAYS = 0", "var_name": "OVER_SCROLL_ALWAYS"}, {"original_string": "@Deprecated\n    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS = 1;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "OVER_SCROLL_IF_CONTENT_SCROLLS = 1", "var_name": "OVER_SCROLL_IF_CONTENT_SCROLLS"}, {"original_string": "@Deprecated\n    public static final int OVER_SCROLL_NEVER = 2;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "OVER_SCROLL_NEVER = 2", "var_name": "OVER_SCROLL_NEVER"}, {"original_string": "public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO = 0x00000000;", "modifier": "public static final", "type": "int", "declarator": "IMPORTANT_FOR_ACCESSIBILITY_AUTO = 0x00000000", "var_name": "IMPORTANT_FOR_ACCESSIBILITY_AUTO"}, {"original_string": "public static final int IMPORTANT_FOR_ACCESSIBILITY_YES = 0x00000001;", "modifier": "public static final", "type": "int", "declarator": "IMPORTANT_FOR_ACCESSIBILITY_YES = 0x00000001", "var_name": "IMPORTANT_FOR_ACCESSIBILITY_YES"}, {"original_string": "public static final int IMPORTANT_FOR_ACCESSIBILITY_NO = 0x00000002;", "modifier": "public static final", "type": "int", "declarator": "IMPORTANT_FOR_ACCESSIBILITY_NO = 0x00000002", "var_name": "IMPORTANT_FOR_ACCESSIBILITY_NO"}, {"original_string": "public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS = 0x00000004;", "modifier": "public static final", "type": "int", "declarator": "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS = 0x00000004", "var_name": "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"}, {"original_string": "public static final int ACCESSIBILITY_LIVE_REGION_NONE = 0x00000000;", "modifier": "public static final", "type": "int", "declarator": "ACCESSIBILITY_LIVE_REGION_NONE = 0x00000000", "var_name": "ACCESSIBILITY_LIVE_REGION_NONE"}, {"original_string": "public static final int ACCESSIBILITY_LIVE_REGION_POLITE = 0x00000001;", "modifier": "public static final", "type": "int", "declarator": "ACCESSIBILITY_LIVE_REGION_POLITE = 0x00000001", "var_name": "ACCESSIBILITY_LIVE_REGION_POLITE"}, {"original_string": "public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE = 0x00000002;", "modifier": "public static final", "type": "int", "declarator": "ACCESSIBILITY_LIVE_REGION_ASSERTIVE = 0x00000002", "var_name": "ACCESSIBILITY_LIVE_REGION_ASSERTIVE"}, {"original_string": "@Deprecated\n    public static final int LAYER_TYPE_NONE = 0;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "LAYER_TYPE_NONE = 0", "var_name": "LAYER_TYPE_NONE"}, {"original_string": "@Deprecated\n    public static final int LAYER_TYPE_SOFTWARE = 1;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "LAYER_TYPE_SOFTWARE = 1", "var_name": "LAYER_TYPE_SOFTWARE"}, {"original_string": "@Deprecated\n    public static final int LAYER_TYPE_HARDWARE = 2;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "LAYER_TYPE_HARDWARE = 2", "var_name": "LAYER_TYPE_HARDWARE"}, {"original_string": "public static final int LAYOUT_DIRECTION_LTR = 0;", "modifier": "public static final", "type": "int", "declarator": "LAYOUT_DIRECTION_LTR = 0", "var_name": "LAYOUT_DIRECTION_LTR"}, {"original_string": "public static final int LAYOUT_DIRECTION_RTL = 1;", "modifier": "public static final", "type": "int", "declarator": "LAYOUT_DIRECTION_RTL = 1", "var_name": "LAYOUT_DIRECTION_RTL"}, {"original_string": "public static final int LAYOUT_DIRECTION_INHERIT = 2;", "modifier": "public static final", "type": "int", "declarator": "LAYOUT_DIRECTION_INHERIT = 2", "var_name": "LAYOUT_DIRECTION_INHERIT"}, {"original_string": "public static final int LAYOUT_DIRECTION_LOCALE = 3;", "modifier": "public static final", "type": "int", "declarator": "LAYOUT_DIRECTION_LOCALE = 3", "var_name": "LAYOUT_DIRECTION_LOCALE"}, {"original_string": "@Deprecated\n    public static final int MEASURED_SIZE_MASK = 0x00ffffff;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "MEASURED_SIZE_MASK = 0x00ffffff", "var_name": "MEASURED_SIZE_MASK"}, {"original_string": "@Deprecated\n    public static final int MEASURED_STATE_MASK = 0xff000000;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "MEASURED_STATE_MASK = 0xff000000", "var_name": "MEASURED_STATE_MASK"}, {"original_string": "@Deprecated\n    public static final int MEASURED_HEIGHT_STATE_SHIFT = 16;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "MEASURED_HEIGHT_STATE_SHIFT = 16", "var_name": "MEASURED_HEIGHT_STATE_SHIFT"}, {"original_string": "@Deprecated\n    public static final int MEASURED_STATE_TOO_SMALL = 0x01000000;", "modifier": "@Deprecated\n    public static final", "type": "int", "declarator": "MEASURED_STATE_TOO_SMALL = 0x01000000", "var_name": "MEASURED_STATE_TOO_SMALL"}, {"original_string": "public static final int SCROLL_AXIS_NONE = 0;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_AXIS_NONE = 0", "var_name": "SCROLL_AXIS_NONE"}, {"original_string": "public static final int SCROLL_AXIS_HORIZONTAL = 1 << 0;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_AXIS_HORIZONTAL = 1 << 0", "var_name": "SCROLL_AXIS_HORIZONTAL"}, {"original_string": "public static final int SCROLL_AXIS_VERTICAL = 1 << 1;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_AXIS_VERTICAL = 1 << 1", "var_name": "SCROLL_AXIS_VERTICAL"}, {"original_string": "public static final int TYPE_TOUCH = 0;", "modifier": "public static final", "type": "int", "declarator": "TYPE_TOUCH = 0", "var_name": "TYPE_TOUCH"}, {"original_string": "public static final int TYPE_NON_TOUCH = 1;", "modifier": "public static final", "type": "int", "declarator": "TYPE_NON_TOUCH = 1", "var_name": "TYPE_NON_TOUCH"}, {"original_string": "public static final int SCROLL_INDICATOR_TOP = 0x1;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_INDICATOR_TOP = 0x1", "var_name": "SCROLL_INDICATOR_TOP"}, {"original_string": "public static final int SCROLL_INDICATOR_BOTTOM = 0x2;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_INDICATOR_BOTTOM = 0x2", "var_name": "SCROLL_INDICATOR_BOTTOM"}, {"original_string": "public static final int SCROLL_INDICATOR_LEFT = 0x4;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_INDICATOR_LEFT = 0x4", "var_name": "SCROLL_INDICATOR_LEFT"}, {"original_string": "public static final int SCROLL_INDICATOR_RIGHT = 0x8;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_INDICATOR_RIGHT = 0x8", "var_name": "SCROLL_INDICATOR_RIGHT"}, {"original_string": "public static final int SCROLL_INDICATOR_START = 0x10;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_INDICATOR_START = 0x10", "var_name": "SCROLL_INDICATOR_START"}, {"original_string": "public static final int SCROLL_INDICATOR_END = 0x20;", "modifier": "public static final", "type": "int", "declarator": "SCROLL_INDICATOR_END = 0x20", "var_name": "SCROLL_INDICATOR_END"}, {"original_string": "private static final AtomicInteger sNextGeneratedId = new AtomicInteger(1);", "modifier": "private static final", "type": "AtomicInteger", "declarator": "sNextGeneratedId = new AtomicInteger(1)", "var_name": "sNextGeneratedId"}, {"original_string": "private static Field sMinWidthField;", "modifier": "private static", "type": "Field", "declarator": "sMinWidthField", "var_name": "sMinWidthField"}, {"original_string": "private static boolean sMinWidthFieldFetched;", "modifier": "private static", "type": "boolean", "declarator": "sMinWidthFieldFetched", "var_name": "sMinWidthFieldFetched"}, {"original_string": "private static Field sMinHeightField;", "modifier": "private static", "type": "Field", "declarator": "sMinHeightField", "var_name": "sMinHeightField"}, {"original_string": "private static boolean sMinHeightFieldFetched;", "modifier": "private static", "type": "boolean", "declarator": "sMinHeightFieldFetched", "var_name": "sMinHeightFieldFetched"}, {"original_string": "private static Method sDispatchStartTemporaryDetach;", "modifier": "private static", "type": "Method", "declarator": "sDispatchStartTemporaryDetach", "var_name": "sDispatchStartTemporaryDetach"}, {"original_string": "private static Method sDispatchFinishTemporaryDetach;", "modifier": "private static", "type": "Method", "declarator": "sDispatchFinishTemporaryDetach", "var_name": "sDispatchFinishTemporaryDetach"}, {"original_string": "private static boolean sTempDetachBound;", "modifier": "private static", "type": "boolean", "declarator": "sTempDetachBound", "var_name": "sTempDetachBound"}, {"original_string": "private static WeakHashMap<View, String> sTransitionNameMap;", "modifier": "private static", "type": "WeakHashMap<View, String>", "declarator": "sTransitionNameMap", "var_name": "sTransitionNameMap"}, {"original_string": "private static WeakHashMap<View, ViewPropertyAnimatorCompat> sViewPropertyAnimatorMap = null;", "modifier": "private static", "type": "WeakHashMap<View, ViewPropertyAnimatorCompat>", "declarator": "sViewPropertyAnimatorMap = null", "var_name": "sViewPropertyAnimatorMap"}, {"original_string": "private static Method sChildrenDrawingOrderMethod;", "modifier": "private static", "type": "Method", "declarator": "sChildrenDrawingOrderMethod", "var_name": "sChildrenDrawingOrderMethod"}, {"original_string": "private static Field sAccessibilityDelegateField;", "modifier": "private static", "type": "Field", "declarator": "sAccessibilityDelegateField", "var_name": "sAccessibilityDelegateField"}, {"original_string": "private static boolean sAccessibilityDelegateCheckFailed = false;", "modifier": "private static", "type": "boolean", "declarator": "sAccessibilityDelegateCheckFailed = false", "var_name": "sAccessibilityDelegateCheckFailed"}, {"original_string": "private static ThreadLocal<Rect> sThreadLocalRect;", "modifier": "private static", "type": "ThreadLocal<Rect>", "declarator": "sThreadLocalRect", "var_name": "sThreadLocalRect"}], "methods": [{"identifier": "getEmptyTempRect", "parameters": "()", "modifiers": "private static", "return": "Rect", "signature": "Rect getEmptyTempRect()", "full_signature": "private static Rect getEmptyTempRect()", "class_method_signature": "ViewCompat.getEmptyTempRect()", "testcase": false, "constructor": false}, {"identifier": "canScrollHorizontally", "parameters": "(View view, int direction)", "modifiers": "@Deprecated public static", "return": "boolean", "signature": "boolean canScrollHorizontally(View view, int direction)", "full_signature": "@Deprecated public static boolean canScrollHorizontally(View view, int direction)", "class_method_signature": "ViewCompat.canScrollHorizontally(View view, int direction)", "testcase": false, "constructor": false}, {"identifier": "canScrollVertically", "parameters": "(View view, int direction)", "modifiers": "@Deprecated public static", "return": "boolean", "signature": "boolean canScrollVertically(View view, int direction)", "full_signature": "@Deprecated public static boolean canScrollVertically(View view, int direction)", "class_method_signature": "ViewCompat.canScrollVertically(View view, int direction)", "testcase": false, "constructor": false}, {"identifier": "getOverScrollMode", "parameters": "(View v)", "modifiers": "@Deprecated @OverScroll public static", "return": "int", "signature": "int getOverScrollMode(View v)", "full_signature": "@Deprecated @OverScroll public static int getOverScrollMode(View v)", "class_method_signature": "ViewCompat.getOverScrollMode(View v)", "testcase": false, "constructor": false}, {"identifier": "setOverScrollMode", "parameters": "(View v, @OverScroll int overScrollMode)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setOverScrollMode(View v, @OverScroll int overScrollMode)", "full_signature": "@Deprecated public static void setOverScrollMode(View v, @OverScroll int overScrollMode)", "class_method_signature": "ViewCompat.setOverScrollMode(View v, @OverScroll int overScrollMode)", "testcase": false, "constructor": false}, {"identifier": "onPopulateAccessibilityEvent", "parameters": "(View v, AccessibilityEvent event)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void onPopulateAccessibilityEvent(View v, AccessibilityEvent event)", "full_signature": "@Deprecated public static void onPopulateAccessibilityEvent(View v, AccessibilityEvent event)", "class_method_signature": "ViewCompat.onPopulateAccessibilityEvent(View v, AccessibilityEvent event)", "testcase": false, "constructor": false}, {"identifier": "onInitializeAccessibilityEvent", "parameters": "(View v, AccessibilityEvent event)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void onInitializeAccessibilityEvent(View v, AccessibilityEvent event)", "full_signature": "@Deprecated public static void onInitializeAccessibilityEvent(View v, AccessibilityEvent event)", "class_method_signature": "ViewCompat.onInitializeAccessibilityEvent(View v, AccessibilityEvent event)", "testcase": false, "constructor": false}, {"identifier": "onInitializeAccessibilityNodeInfo", "parameters": "(@NonNull View v,\n                                                         AccessibilityNodeInfoCompat info)", "modifiers": "public static", "return": "void", "signature": "void onInitializeAccessibilityNodeInfo(@NonNull View v,\n                                                         AccessibilityNodeInfoCompat info)", "full_signature": "public static void onInitializeAccessibilityNodeInfo(@NonNull View v,\n                                                         AccessibilityNodeInfoCompat info)", "class_method_signature": "ViewCompat.onInitializeAccessibilityNodeInfo(@NonNull View v,\n                                                         AccessibilityNodeInfoCompat info)", "testcase": false, "constructor": false}, {"identifier": "setAccessibilityDelegate", "parameters": "(@NonNull View v,\n                                                AccessibilityDelegateCompat delegate)", "modifiers": "public static", "return": "void", "signature": "void setAccessibilityDelegate(@NonNull View v,\n                                                AccessibilityDelegateCompat delegate)", "full_signature": "public static void setAccessibilityDelegate(@NonNull View v,\n                                                AccessibilityDelegateCompat delegate)", "class_method_signature": "ViewCompat.setAccessibilityDelegate(@NonNull View v,\n                                                AccessibilityDelegateCompat delegate)", "testcase": false, "constructor": false}, {"identifier": "setAutofillHints", "parameters": "(@NonNull View v, @Nullable String... autofillHints)", "modifiers": "public static", "return": "void", "signature": "void setAutofillHints(@NonNull View v, @Nullable String... autofillHints)", "full_signature": "public static void setAutofillHints(@NonNull View v, @Nullable String... autofillHints)", "class_method_signature": "ViewCompat.setAutofillHints(@NonNull View v, @Nullable String... autofillHints)", "testcase": false, "constructor": false}, {"identifier": "getImportantForAutofill", "parameters": "(@NonNull View v)", "modifiers": "@SuppressLint(\"InlinedApi\") public static @AutofillImportance", "return": "int", "signature": "int getImportantForAutofill(@NonNull View v)", "full_signature": "@SuppressLint(\"InlinedApi\") public static @AutofillImportance int getImportantForAutofill(@NonNull View v)", "class_method_signature": "ViewCompat.getImportantForAutofill(@NonNull View v)", "testcase": false, "constructor": false}, {"identifier": "setImportantForAutofill", "parameters": "(@NonNull View v, @AutofillImportance int mode)", "modifiers": "public static", "return": "void", "signature": "void setImportantForAutofill(@NonNull View v, @AutofillImportance int mode)", "full_signature": "public static void setImportantForAutofill(@NonNull View v, @AutofillImportance int mode)", "class_method_signature": "ViewCompat.setImportantForAutofill(@NonNull View v, @AutofillImportance int mode)", "testcase": false, "constructor": false}, {"identifier": "isImportantForAutofill", "parameters": "(@NonNull View v)", "modifiers": "public static", "return": "boolean", "signature": "boolean isImportantForAutofill(@NonNull View v)", "full_signature": "public static boolean isImportantForAutofill(@NonNull View v)", "class_method_signature": "ViewCompat.isImportantForAutofill(@NonNull View v)", "testcase": false, "constructor": false}, {"identifier": "hasAccessibilityDelegate", "parameters": "(@NonNull View v)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasAccessibilityDelegate(@NonNull View v)", "full_signature": "public static boolean hasAccessibilityDelegate(@NonNull View v)", "class_method_signature": "ViewCompat.hasAccessibilityDelegate(@NonNull View v)", "testcase": false, "constructor": false}, {"identifier": "hasTransientState", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasTransientState(@NonNull View view)", "full_signature": "public static boolean hasTransientState(@NonNull View view)", "class_method_signature": "ViewCompat.hasTransientState(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setHasTransientState", "parameters": "(@NonNull View view, boolean hasTransientState)", "modifiers": "public static", "return": "void", "signature": "void setHasTransientState(@NonNull View view, boolean hasTransientState)", "full_signature": "public static void setHasTransientState(@NonNull View view, boolean hasTransientState)", "class_method_signature": "ViewCompat.setHasTransientState(@NonNull View view, boolean hasTransientState)", "testcase": false, "constructor": false}, {"identifier": "postInvalidateOnAnimation", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "void", "signature": "void postInvalidateOnAnimation(@NonNull View view)", "full_signature": "public static void postInvalidateOnAnimation(@NonNull View view)", "class_method_signature": "ViewCompat.postInvalidateOnAnimation(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "postInvalidateOnAnimation", "parameters": "(@NonNull View view, int left, int top,\n                                                 int right, int bottom)", "modifiers": "public static", "return": "void", "signature": "void postInvalidateOnAnimation(@NonNull View view, int left, int top,\n                                                 int right, int bottom)", "full_signature": "public static void postInvalidateOnAnimation(@NonNull View view, int left, int top,\n                                                 int right, int bottom)", "class_method_signature": "ViewCompat.postInvalidateOnAnimation(@NonNull View view, int left, int top,\n                                                 int right, int bottom)", "testcase": false, "constructor": false}, {"identifier": "postOnAnimation", "parameters": "(@NonNull View view, Runnable action)", "modifiers": "public static", "return": "void", "signature": "void postOnAnimation(@NonNull View view, Runnable action)", "full_signature": "public static void postOnAnimation(@NonNull View view, Runnable action)", "class_method_signature": "ViewCompat.postOnAnimation(@NonNull View view, Runnable action)", "testcase": false, "constructor": false}, {"identifier": "postOnAnimationDelayed", "parameters": "(@NonNull View view, Runnable action,\n                                              long delayMillis)", "modifiers": "public static", "return": "void", "signature": "void postOnAnimationDelayed(@NonNull View view, Runnable action,\n                                              long delayMillis)", "full_signature": "public static void postOnAnimationDelayed(@NonNull View view, Runnable action,\n                                              long delayMillis)", "class_method_signature": "ViewCompat.postOnAnimationDelayed(@NonNull View view, Runnable action,\n                                              long delayMillis)", "testcase": false, "constructor": false}, {"identifier": "getImportantForAccessibility", "parameters": "(@NonNull View view)", "modifiers": "@ImportantForAccessibility public static", "return": "int", "signature": "int getImportantForAccessibility(@NonNull View view)", "full_signature": "@ImportantForAccessibility public static int getImportantForAccessibility(@NonNull View view)", "class_method_signature": "ViewCompat.getImportantForAccessibility(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setImportantForAccessibility", "parameters": "(@NonNull View view,\n                                                    @ImportantForAccessibility int mode)", "modifiers": "public static", "return": "void", "signature": "void setImportantForAccessibility(@NonNull View view,\n                                                    @ImportantForAccessibility int mode)", "full_signature": "public static void setImportantForAccessibility(@NonNull View view,\n                                                    @ImportantForAccessibility int mode)", "class_method_signature": "ViewCompat.setImportantForAccessibility(@NonNull View view,\n                                                    @ImportantForAccessibility int mode)", "testcase": false, "constructor": false}, {"identifier": "isImportantForAccessibility", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean isImportantForAccessibility(@NonNull View view)", "full_signature": "public static boolean isImportantForAccessibility(@NonNull View view)", "class_method_signature": "ViewCompat.isImportantForAccessibility(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "performAccessibilityAction", "parameters": "(@NonNull View view, int action,\n                                                     Bundle arguments)", "modifiers": "public static", "return": "boolean", "signature": "boolean performAccessibilityAction(@NonNull View view, int action,\n                                                     Bundle arguments)", "full_signature": "public static boolean performAccessibilityAction(@NonNull View view, int action,\n                                                     Bundle arguments)", "class_method_signature": "ViewCompat.performAccessibilityAction(@NonNull View view, int action,\n                                                     Bundle arguments)", "testcase": false, "constructor": false}, {"identifier": "getAccessibilityNodeProvider", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "AccessibilityNodeProviderCompat", "signature": "AccessibilityNodeProviderCompat getAccessibilityNodeProvider(@NonNull View view)", "full_signature": "public static AccessibilityNodeProviderCompat getAccessibilityNodeProvider(@NonNull View view)", "class_method_signature": "ViewCompat.getAccessibilityNodeProvider(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "getAlpha", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getAlpha(View view)", "full_signature": "@Deprecated public static float getAlpha(View view)", "class_method_signature": "ViewCompat.getAlpha(View view)", "testcase": false, "constructor": false}, {"identifier": "setLayerType", "parameters": "(View view, @LayerType int layerType, Paint paint)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setLayerType(View view, @LayerType int layerType, Paint paint)", "full_signature": "@Deprecated public static void setLayerType(View view, @LayerType int layerType, Paint paint)", "class_method_signature": "ViewCompat.setLayerType(View view, @LayerType int layerType, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getLayerType", "parameters": "(View view)", "modifiers": "@Deprecated @LayerType public static", "return": "int", "signature": "int getLayerType(View view)", "full_signature": "@Deprecated @LayerType public static int getLayerType(View view)", "class_method_signature": "ViewCompat.getLayerType(View view)", "testcase": false, "constructor": false}, {"identifier": "getLabelFor", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "int", "signature": "int getLabelFor(@NonNull View view)", "full_signature": "public static int getLabelFor(@NonNull View view)", "class_method_signature": "ViewCompat.getLabelFor(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setLabelFor", "parameters": "(@NonNull View view, @IdRes int labeledId)", "modifiers": "public static", "return": "void", "signature": "void setLabelFor(@NonNull View view, @IdRes int labeledId)", "full_signature": "public static void setLabelFor(@NonNull View view, @IdRes int labeledId)", "class_method_signature": "ViewCompat.setLabelFor(@NonNull View view, @IdRes int labeledId)", "testcase": false, "constructor": false}, {"identifier": "setLayerPaint", "parameters": "(@NonNull View view, Paint paint)", "modifiers": "public static", "return": "void", "signature": "void setLayerPaint(@NonNull View view, Paint paint)", "full_signature": "public static void setLayerPaint(@NonNull View view, Paint paint)", "class_method_signature": "ViewCompat.setLayerPaint(@NonNull View view, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getLayoutDirection", "parameters": "(@NonNull View view)", "modifiers": "@ResolvedLayoutDirectionMode public static", "return": "int", "signature": "int getLayoutDirection(@NonNull View view)", "full_signature": "@ResolvedLayoutDirectionMode public static int getLayoutDirection(@NonNull View view)", "class_method_signature": "ViewCompat.getLayoutDirection(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setLayoutDirection", "parameters": "(@NonNull View view,\n                                          @LayoutDirectionMode int layoutDirection)", "modifiers": "public static", "return": "void", "signature": "void setLayoutDirection(@NonNull View view,\n                                          @LayoutDirectionMode int layoutDirection)", "full_signature": "public static void setLayoutDirection(@NonNull View view,\n                                          @LayoutDirectionMode int layoutDirection)", "class_method_signature": "ViewCompat.setLayoutDirection(@NonNull View view,\n                                          @LayoutDirectionMode int layoutDirection)", "testcase": false, "constructor": false}, {"identifier": "getParentForAccessibility", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "ViewParent", "signature": "ViewParent getParentForAccessibility(@NonNull View view)", "full_signature": "public static ViewParent getParentForAccessibility(@NonNull View view)", "class_method_signature": "ViewCompat.getParentForAccessibility(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "requireViewById", "parameters": "(@NonNull View view, @IdRes int id)", "modifiers": "@SuppressWarnings(\"TypeParameterUnusedInFormals\") @NonNull public static", "return": "T", "signature": "T requireViewById(@NonNull View view, @IdRes int id)", "full_signature": "@SuppressWarnings(\"TypeParameterUnusedInFormals\") @NonNull public static T requireViewById(@NonNull View view, @IdRes int id)", "class_method_signature": "ViewCompat.requireViewById(@NonNull View view, @IdRes int id)", "testcase": false, "constructor": false}, {"identifier": "isOpaque", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "boolean", "signature": "boolean isOpaque(View view)", "full_signature": "@Deprecated public static boolean isOpaque(View view)", "class_method_signature": "ViewCompat.isOpaque(View view)", "testcase": false, "constructor": false}, {"identifier": "resolveSizeAndState", "parameters": "(int size, int measureSpec, int childMeasuredState)", "modifiers": "@Deprecated public static", "return": "int", "signature": "int resolveSizeAndState(int size, int measureSpec, int childMeasuredState)", "full_signature": "@Deprecated public static int resolveSizeAndState(int size, int measureSpec, int childMeasuredState)", "class_method_signature": "ViewCompat.resolveSizeAndState(int size, int measureSpec, int childMeasuredState)", "testcase": false, "constructor": false}, {"identifier": "getMeasuredWidthAndState", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "int", "signature": "int getMeasuredWidthAndState(View view)", "full_signature": "@Deprecated public static int getMeasuredWidthAndState(View view)", "class_method_signature": "ViewCompat.getMeasuredWidthAndState(View view)", "testcase": false, "constructor": false}, {"identifier": "getMeasuredHeightAndState", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "int", "signature": "int getMeasuredHeightAndState(View view)", "full_signature": "@Deprecated public static int getMeasuredHeightAndState(View view)", "class_method_signature": "ViewCompat.getMeasuredHeightAndState(View view)", "testcase": false, "constructor": false}, {"identifier": "getMeasuredState", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "int", "signature": "int getMeasuredState(View view)", "full_signature": "@Deprecated public static int getMeasuredState(View view)", "class_method_signature": "ViewCompat.getMeasuredState(View view)", "testcase": false, "constructor": false}, {"identifier": "combineMeasuredStates", "parameters": "(int curState, int newState)", "modifiers": "@Deprecated public static", "return": "int", "signature": "int combineMeasuredStates(int curState, int newState)", "full_signature": "@Deprecated public static int combineMeasuredStates(int curState, int newState)", "class_method_signature": "ViewCompat.combineMeasuredStates(int curState, int newState)", "testcase": false, "constructor": false}, {"identifier": "getAccessibilityLiveRegion", "parameters": "(@NonNull View view)", "modifiers": "@AccessibilityLiveRegion public static", "return": "int", "signature": "int getAccessibilityLiveRegion(@NonNull View view)", "full_signature": "@AccessibilityLiveRegion public static int getAccessibilityLiveRegion(@NonNull View view)", "class_method_signature": "ViewCompat.getAccessibilityLiveRegion(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setAccessibilityLiveRegion", "parameters": "(@NonNull View view,\n                                                  @AccessibilityLiveRegion int mode)", "modifiers": "public static", "return": "void", "signature": "void setAccessibilityLiveRegion(@NonNull View view,\n                                                  @AccessibilityLiveRegion int mode)", "full_signature": "public static void setAccessibilityLiveRegion(@NonNull View view,\n                                                  @AccessibilityLiveRegion int mode)", "class_method_signature": "ViewCompat.setAccessibilityLiveRegion(@NonNull View view,\n                                                  @AccessibilityLiveRegion int mode)", "testcase": false, "constructor": false}, {"identifier": "getPaddingStart", "parameters": "(@NonNull View view)", "modifiers": "@Px public static", "return": "int", "signature": "int getPaddingStart(@NonNull View view)", "full_signature": "@Px public static int getPaddingStart(@NonNull View view)", "class_method_signature": "ViewCompat.getPaddingStart(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "getPaddingEnd", "parameters": "(@NonNull View view)", "modifiers": "@Px public static", "return": "int", "signature": "int getPaddingEnd(@NonNull View view)", "full_signature": "@Px public static int getPaddingEnd(@NonNull View view)", "class_method_signature": "ViewCompat.getPaddingEnd(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setPaddingRelative", "parameters": "(@NonNull View view, @Px int start, @Px int top,\n                                          @Px int end, @Px int bottom)", "modifiers": "public static", "return": "void", "signature": "void setPaddingRelative(@NonNull View view, @Px int start, @Px int top,\n                                          @Px int end, @Px int bottom)", "full_signature": "public static void setPaddingRelative(@NonNull View view, @Px int start, @Px int top,\n                                          @Px int end, @Px int bottom)", "class_method_signature": "ViewCompat.setPaddingRelative(@NonNull View view, @Px int start, @Px int top,\n                                          @Px int end, @Px int bottom)", "testcase": false, "constructor": false}, {"identifier": "bindTempDetach", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void bindTempDetach()", "full_signature": "private static void bindTempDetach()", "class_method_signature": "ViewCompat.bindTempDetach()", "testcase": false, "constructor": false}, {"identifier": "dispatchStartTemporaryDetach", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "void", "signature": "void dispatchStartTemporaryDetach(@NonNull View view)", "full_signature": "public static void dispatchStartTemporaryDetach(@NonNull View view)", "class_method_signature": "ViewCompat.dispatchStartTemporaryDetach(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "dispatchFinishTemporaryDetach", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "void", "signature": "void dispatchFinishTemporaryDetach(@NonNull View view)", "full_signature": "public static void dispatchFinishTemporaryDetach(@NonNull View view)", "class_method_signature": "ViewCompat.dispatchFinishTemporaryDetach(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "getTranslationX", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getTranslationX(View view)", "full_signature": "@Deprecated public static float getTranslationX(View view)", "class_method_signature": "ViewCompat.getTranslationX(View view)", "testcase": false, "constructor": false}, {"identifier": "getTranslationY", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getTranslationY(View view)", "full_signature": "@Deprecated public static float getTranslationY(View view)", "class_method_signature": "ViewCompat.getTranslationY(View view)", "testcase": false, "constructor": false}, {"identifier": "getMatrix", "parameters": "(View view)", "modifiers": "@Deprecated @Nullable public static", "return": "Matrix", "signature": "Matrix getMatrix(View view)", "full_signature": "@Deprecated @Nullable public static Matrix getMatrix(View view)", "class_method_signature": "ViewCompat.getMatrix(View view)", "testcase": false, "constructor": false}, {"identifier": "getMinimumWidth", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "int", "signature": "int getMinimumWidth(@NonNull View view)", "full_signature": "public static int getMinimumWidth(@NonNull View view)", "class_method_signature": "ViewCompat.getMinimumWidth(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "getMinimumHeight", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "int", "signature": "int getMinimumHeight(@NonNull View view)", "full_signature": "public static int getMinimumHeight(@NonNull View view)", "class_method_signature": "ViewCompat.getMinimumHeight(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "animate", "parameters": "(@NonNull View view)", "modifiers": "@NonNull public static", "return": "ViewPropertyAnimatorCompat", "signature": "ViewPropertyAnimatorCompat animate(@NonNull View view)", "full_signature": "@NonNull public static ViewPropertyAnimatorCompat animate(@NonNull View view)", "class_method_signature": "ViewCompat.animate(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setTranslationX", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setTranslationX(View view, float value)", "full_signature": "@Deprecated public static void setTranslationX(View view, float value)", "class_method_signature": "ViewCompat.setTranslationX(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "setTranslationY", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setTranslationY(View view, float value)", "full_signature": "@Deprecated public static void setTranslationY(View view, float value)", "class_method_signature": "ViewCompat.setTranslationY(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "setAlpha", "parameters": "(View view, @FloatRange(from = 0.0, to = 1.0) float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setAlpha(View view, @FloatRange(from = 0.0, to = 1.0) float value)", "full_signature": "@Deprecated public static void setAlpha(View view, @FloatRange(from = 0.0, to = 1.0) float value)", "class_method_signature": "ViewCompat.setAlpha(View view, @FloatRange(from = 0.0, to = 1.0) float value)", "testcase": false, "constructor": false}, {"identifier": "setX", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setX(View view, float value)", "full_signature": "@Deprecated public static void setX(View view, float value)", "class_method_signature": "ViewCompat.setX(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "setY", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setY(View view, float value)", "full_signature": "@Deprecated public static void setY(View view, float value)", "class_method_signature": "ViewCompat.setY(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "setRotation", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setRotation(View view, float value)", "full_signature": "@Deprecated public static void setRotation(View view, float value)", "class_method_signature": "ViewCompat.setRotation(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "setRotationX", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setRotationX(View view, float value)", "full_signature": "@Deprecated public static void setRotationX(View view, float value)", "class_method_signature": "ViewCompat.setRotationX(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "setRotationY", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setRotationY(View view, float value)", "full_signature": "@Deprecated public static void setRotationY(View view, float value)", "class_method_signature": "ViewCompat.setRotationY(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "setScaleX", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setScaleX(View view, float value)", "full_signature": "@Deprecated public static void setScaleX(View view, float value)", "class_method_signature": "ViewCompat.setScaleX(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "setScaleY", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setScaleY(View view, float value)", "full_signature": "@Deprecated public static void setScaleY(View view, float value)", "class_method_signature": "ViewCompat.setScaleY(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "getPivotX", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getPivotX(View view)", "full_signature": "@Deprecated public static float getPivotX(View view)", "class_method_signature": "ViewCompat.getPivotX(View view)", "testcase": false, "constructor": false}, {"identifier": "setPivotX", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setPivotX(View view, float value)", "full_signature": "@Deprecated public static void setPivotX(View view, float value)", "class_method_signature": "ViewCompat.setPivotX(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "getPivotY", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getPivotY(View view)", "full_signature": "@Deprecated public static float getPivotY(View view)", "class_method_signature": "ViewCompat.getPivotY(View view)", "testcase": false, "constructor": false}, {"identifier": "setPivotY", "parameters": "(View view, float value)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setPivotY(View view, float value)", "full_signature": "@Deprecated public static void setPivotY(View view, float value)", "class_method_signature": "ViewCompat.setPivotY(View view, float value)", "testcase": false, "constructor": false}, {"identifier": "getRotation", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getRotation(View view)", "full_signature": "@Deprecated public static float getRotation(View view)", "class_method_signature": "ViewCompat.getRotation(View view)", "testcase": false, "constructor": false}, {"identifier": "getRotationX", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getRotationX(View view)", "full_signature": "@Deprecated public static float getRotationX(View view)", "class_method_signature": "ViewCompat.getRotationX(View view)", "testcase": false, "constructor": false}, {"identifier": "getRotationY", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getRotationY(View view)", "full_signature": "@Deprecated public static float getRotationY(View view)", "class_method_signature": "ViewCompat.getRotationY(View view)", "testcase": false, "constructor": false}, {"identifier": "getScaleX", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getScaleX(View view)", "full_signature": "@Deprecated public static float getScaleX(View view)", "class_method_signature": "ViewCompat.getScaleX(View view)", "testcase": false, "constructor": false}, {"identifier": "getScaleY", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getScaleY(View view)", "full_signature": "@Deprecated public static float getScaleY(View view)", "class_method_signature": "ViewCompat.getScaleY(View view)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getX(View view)", "full_signature": "@Deprecated public static float getX(View view)", "class_method_signature": "ViewCompat.getX(View view)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(View view)", "modifiers": "@Deprecated public static", "return": "float", "signature": "float getY(View view)", "full_signature": "@Deprecated public static float getY(View view)", "class_method_signature": "ViewCompat.getY(View view)", "testcase": false, "constructor": false}, {"identifier": "setElevation", "parameters": "(@NonNull View view, float elevation)", "modifiers": "public static", "return": "void", "signature": "void setElevation(@NonNull View view, float elevation)", "full_signature": "public static void setElevation(@NonNull View view, float elevation)", "class_method_signature": "ViewCompat.setElevation(@NonNull View view, float elevation)", "testcase": false, "constructor": false}, {"identifier": "getElevation", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "float", "signature": "float getElevation(@NonNull View view)", "full_signature": "public static float getElevation(@NonNull View view)", "class_method_signature": "ViewCompat.getElevation(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setTranslationZ", "parameters": "(@NonNull View view, float translationZ)", "modifiers": "public static", "return": "void", "signature": "void setTranslationZ(@NonNull View view, float translationZ)", "full_signature": "public static void setTranslationZ(@NonNull View view, float translationZ)", "class_method_signature": "ViewCompat.setTranslationZ(@NonNull View view, float translationZ)", "testcase": false, "constructor": false}, {"identifier": "getTranslationZ", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "float", "signature": "float getTranslationZ(@NonNull View view)", "full_signature": "public static float getTranslationZ(@NonNull View view)", "class_method_signature": "ViewCompat.getTranslationZ(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setTransitionName", "parameters": "(@NonNull View view, String transitionName)", "modifiers": "public static", "return": "void", "signature": "void setTransitionName(@NonNull View view, String transitionName)", "full_signature": "public static void setTransitionName(@NonNull View view, String transitionName)", "class_method_signature": "ViewCompat.setTransitionName(@NonNull View view, String transitionName)", "testcase": false, "constructor": false}, {"identifier": "getTransitionName", "parameters": "(@NonNull View view)", "modifiers": "@Nullable public static", "return": "String", "signature": "String getTransitionName(@NonNull View view)", "full_signature": "@Nullable public static String getTransitionName(@NonNull View view)", "class_method_signature": "ViewCompat.getTransitionName(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "getWindowSystemUiVisibility", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "int", "signature": "int getWindowSystemUiVisibility(@NonNull View view)", "full_signature": "public static int getWindowSystemUiVisibility(@NonNull View view)", "class_method_signature": "ViewCompat.getWindowSystemUiVisibility(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "requestApplyInsets", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "void", "signature": "void requestApplyInsets(@NonNull View view)", "full_signature": "public static void requestApplyInsets(@NonNull View view)", "class_method_signature": "ViewCompat.requestApplyInsets(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setChildrenDrawingOrderEnabled", "parameters": "(ViewGroup viewGroup, boolean enabled)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setChildrenDrawingOrderEnabled(ViewGroup viewGroup, boolean enabled)", "full_signature": "@Deprecated public static void setChildrenDrawingOrderEnabled(ViewGroup viewGroup, boolean enabled)", "class_method_signature": "ViewCompat.setChildrenDrawingOrderEnabled(ViewGroup viewGroup, boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "getFitsSystemWindows", "parameters": "(@NonNull View v)", "modifiers": "public static", "return": "boolean", "signature": "boolean getFitsSystemWindows(@NonNull View v)", "full_signature": "public static boolean getFitsSystemWindows(@NonNull View v)", "class_method_signature": "ViewCompat.getFitsSystemWindows(@NonNull View v)", "testcase": false, "constructor": false}, {"identifier": "setFitsSystemWindows", "parameters": "(View view, boolean fitSystemWindows)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setFitsSystemWindows(View view, boolean fitSystemWindows)", "full_signature": "@Deprecated public static void setFitsSystemWindows(View view, boolean fitSystemWindows)", "class_method_signature": "ViewCompat.setFitsSystemWindows(View view, boolean fitSystemWindows)", "testcase": false, "constructor": false}, {"identifier": "jumpDrawablesToCurrentState", "parameters": "(View v)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void jumpDrawablesToCurrentState(View v)", "full_signature": "@Deprecated public static void jumpDrawablesToCurrentState(View v)", "class_method_signature": "ViewCompat.jumpDrawablesToCurrentState(View v)", "testcase": false, "constructor": false}, {"identifier": "setOnApplyWindowInsetsListener", "parameters": "(@NonNull View v,\n                                                      final OnApplyWindowInsetsListener listener)", "modifiers": "public static", "return": "void", "signature": "void setOnApplyWindowInsetsListener(@NonNull View v,\n                                                      final OnApplyWindowInsetsListener listener)", "full_signature": "public static void setOnApplyWindowInsetsListener(@NonNull View v,\n                                                      final OnApplyWindowInsetsListener listener)", "class_method_signature": "ViewCompat.setOnApplyWindowInsetsListener(@NonNull View v,\n                                                      final OnApplyWindowInsetsListener listener)", "testcase": false, "constructor": false}, {"identifier": "onApplyWindowInsets", "parameters": "(@NonNull View view,\n                                                         WindowInsetsCompat insets)", "modifiers": "public static", "return": "WindowInsetsCompat", "signature": "WindowInsetsCompat onApplyWindowInsets(@NonNull View view,\n                                                         WindowInsetsCompat insets)", "full_signature": "public static WindowInsetsCompat onApplyWindowInsets(@NonNull View view,\n                                                         WindowInsetsCompat insets)", "class_method_signature": "ViewCompat.onApplyWindowInsets(@NonNull View view,\n                                                         WindowInsetsCompat insets)", "testcase": false, "constructor": false}, {"identifier": "dispatchApplyWindowInsets", "parameters": "(@NonNull View view,\n                                                               WindowInsetsCompat insets)", "modifiers": "public static", "return": "WindowInsetsCompat", "signature": "WindowInsetsCompat dispatchApplyWindowInsets(@NonNull View view,\n                                                               WindowInsetsCompat insets)", "full_signature": "public static WindowInsetsCompat dispatchApplyWindowInsets(@NonNull View view,\n                                                               WindowInsetsCompat insets)", "class_method_signature": "ViewCompat.dispatchApplyWindowInsets(@NonNull View view,\n                                                               WindowInsetsCompat insets)", "testcase": false, "constructor": false}, {"identifier": "setSaveFromParentEnabled", "parameters": "(View v, boolean enabled)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setSaveFromParentEnabled(View v, boolean enabled)", "full_signature": "@Deprecated public static void setSaveFromParentEnabled(View v, boolean enabled)", "class_method_signature": "ViewCompat.setSaveFromParentEnabled(View v, boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "setActivated", "parameters": "(View view, boolean activated)", "modifiers": "@Deprecated public static", "return": "void", "signature": "void setActivated(View view, boolean activated)", "full_signature": "@Deprecated public static void setActivated(View view, boolean activated)", "class_method_signature": "ViewCompat.setActivated(View view, boolean activated)", "testcase": false, "constructor": false}, {"identifier": "hasOverlappingRendering", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasOverlappingRendering(@NonNull View view)", "full_signature": "public static boolean hasOverlappingRendering(@NonNull View view)", "class_method_signature": "ViewCompat.hasOverlappingRendering(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "isPaddingRelative", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPaddingRelative(@NonNull View view)", "full_signature": "public static boolean isPaddingRelative(@NonNull View view)", "class_method_signature": "ViewCompat.isPaddingRelative(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setBackground", "parameters": "(@NonNull View view, @Nullable Drawable background)", "modifiers": "public static", "return": "void", "signature": "void setBackground(@NonNull View view, @Nullable Drawable background)", "full_signature": "public static void setBackground(@NonNull View view, @Nullable Drawable background)", "class_method_signature": "ViewCompat.setBackground(@NonNull View view, @Nullable Drawable background)", "testcase": false, "constructor": false}, {"identifier": "getBackgroundTintList", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "ColorStateList", "signature": "ColorStateList getBackgroundTintList(@NonNull View view)", "full_signature": "public static ColorStateList getBackgroundTintList(@NonNull View view)", "class_method_signature": "ViewCompat.getBackgroundTintList(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setBackgroundTintList", "parameters": "(@NonNull View view, ColorStateList tintList)", "modifiers": "public static", "return": "void", "signature": "void setBackgroundTintList(@NonNull View view, ColorStateList tintList)", "full_signature": "public static void setBackgroundTintList(@NonNull View view, ColorStateList tintList)", "class_method_signature": "ViewCompat.setBackgroundTintList(@NonNull View view, ColorStateList tintList)", "testcase": false, "constructor": false}, {"identifier": "getBackgroundTintMode", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "PorterDuff.Mode", "signature": "PorterDuff.Mode getBackgroundTintMode(@NonNull View view)", "full_signature": "public static PorterDuff.Mode getBackgroundTintMode(@NonNull View view)", "class_method_signature": "ViewCompat.getBackgroundTintMode(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setBackgroundTintMode", "parameters": "(@NonNull View view, PorterDuff.Mode mode)", "modifiers": "public static", "return": "void", "signature": "void setBackgroundTintMode(@NonNull View view, PorterDuff.Mode mode)", "full_signature": "public static void setBackgroundTintMode(@NonNull View view, PorterDuff.Mode mode)", "class_method_signature": "ViewCompat.setBackgroundTintMode(@NonNull View view, PorterDuff.Mode mode)", "testcase": false, "constructor": false}, {"identifier": "setNestedScrollingEnabled", "parameters": "(@NonNull View view, boolean enabled)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "void", "signature": "void setNestedScrollingEnabled(@NonNull View view, boolean enabled)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static void setNestedScrollingEnabled(@NonNull View view, boolean enabled)", "class_method_signature": "ViewCompat.setNestedScrollingEnabled(@NonNull View view, boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "isNestedScrollingEnabled", "parameters": "(@NonNull View view)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "boolean", "signature": "boolean isNestedScrollingEnabled(@NonNull View view)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static boolean isNestedScrollingEnabled(@NonNull View view)", "class_method_signature": "ViewCompat.isNestedScrollingEnabled(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "startNestedScroll", "parameters": "(@NonNull View view, @ScrollAxis int axes)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "boolean", "signature": "boolean startNestedScroll(@NonNull View view, @ScrollAxis int axes)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static boolean startNestedScroll(@NonNull View view, @ScrollAxis int axes)", "class_method_signature": "ViewCompat.startNestedScroll(@NonNull View view, @ScrollAxis int axes)", "testcase": false, "constructor": false}, {"identifier": "stopNestedScroll", "parameters": "(@NonNull View view)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "void", "signature": "void stopNestedScroll(@NonNull View view)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static void stopNestedScroll(@NonNull View view)", "class_method_signature": "ViewCompat.stopNestedScroll(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "hasNestedScrollingParent", "parameters": "(@NonNull View view)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "boolean", "signature": "boolean hasNestedScrollingParent(@NonNull View view)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static boolean hasNestedScrollingParent(@NonNull View view)", "class_method_signature": "ViewCompat.hasNestedScrollingParent(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedScroll", "parameters": "(@NonNull View view, int dxConsumed, int dyConsumed,\n                                               int dxUnconsumed, int dyUnconsumed, @Nullable int[] offsetInWindow)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "boolean", "signature": "boolean dispatchNestedScroll(@NonNull View view, int dxConsumed, int dyConsumed,\n                                               int dxUnconsumed, int dyUnconsumed, @Nullable int[] offsetInWindow)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static boolean dispatchNestedScroll(@NonNull View view, int dxConsumed, int dyConsumed,\n                                               int dxUnconsumed, int dyUnconsumed, @Nullable int[] offsetInWindow)", "class_method_signature": "ViewCompat.dispatchNestedScroll(@NonNull View view, int dxConsumed, int dyConsumed,\n                                               int dxUnconsumed, int dyUnconsumed, @Nullable int[] offsetInWindow)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedPreScroll", "parameters": "(@NonNull View view, int dx, int dy,\n                                                  @Nullable int[] consumed, @Nullable int[] offsetInWindow)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "boolean", "signature": "boolean dispatchNestedPreScroll(@NonNull View view, int dx, int dy,\n                                                  @Nullable int[] consumed, @Nullable int[] offsetInWindow)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static boolean dispatchNestedPreScroll(@NonNull View view, int dx, int dy,\n                                                  @Nullable int[] consumed, @Nullable int[] offsetInWindow)", "class_method_signature": "ViewCompat.dispatchNestedPreScroll(@NonNull View view, int dx, int dy,\n                                                  @Nullable int[] consumed, @Nullable int[] offsetInWindow)", "testcase": false, "constructor": false}, {"identifier": "startNestedScroll", "parameters": "(@NonNull View view, @ScrollAxis int axes,\n                                            @NestedScrollType int type)", "modifiers": "public static", "return": "boolean", "signature": "boolean startNestedScroll(@NonNull View view, @ScrollAxis int axes,\n                                            @NestedScrollType int type)", "full_signature": "public static boolean startNestedScroll(@NonNull View view, @ScrollAxis int axes,\n                                            @NestedScrollType int type)", "class_method_signature": "ViewCompat.startNestedScroll(@NonNull View view, @ScrollAxis int axes,\n                                            @NestedScrollType int type)", "testcase": false, "constructor": false}, {"identifier": "stopNestedScroll", "parameters": "(@NonNull View view, @NestedScrollType int type)", "modifiers": "public static", "return": "void", "signature": "void stopNestedScroll(@NonNull View view, @NestedScrollType int type)", "full_signature": "public static void stopNestedScroll(@NonNull View view, @NestedScrollType int type)", "class_method_signature": "ViewCompat.stopNestedScroll(@NonNull View view, @NestedScrollType int type)", "testcase": false, "constructor": false}, {"identifier": "hasNestedScrollingParent", "parameters": "(@NonNull View view, @NestedScrollType int type)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasNestedScrollingParent(@NonNull View view, @NestedScrollType int type)", "full_signature": "public static boolean hasNestedScrollingParent(@NonNull View view, @NestedScrollType int type)", "class_method_signature": "ViewCompat.hasNestedScrollingParent(@NonNull View view, @NestedScrollType int type)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedScroll", "parameters": "(@NonNull View view, int dxConsumed, int dyConsumed,\n                                               int dxUnconsumed, int dyUnconsumed, @Nullable int[] offsetInWindow,\n                                               @NestedScrollType int type)", "modifiers": "public static", "return": "boolean", "signature": "boolean dispatchNestedScroll(@NonNull View view, int dxConsumed, int dyConsumed,\n                                               int dxUnconsumed, int dyUnconsumed, @Nullable int[] offsetInWindow,\n                                               @NestedScrollType int type)", "full_signature": "public static boolean dispatchNestedScroll(@NonNull View view, int dxConsumed, int dyConsumed,\n                                               int dxUnconsumed, int dyUnconsumed, @Nullable int[] offsetInWindow,\n                                               @NestedScrollType int type)", "class_method_signature": "ViewCompat.dispatchNestedScroll(@NonNull View view, int dxConsumed, int dyConsumed,\n                                               int dxUnconsumed, int dyUnconsumed, @Nullable int[] offsetInWindow,\n                                               @NestedScrollType int type)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedPreScroll", "parameters": "(@NonNull View view, int dx, int dy,\n                                                  @Nullable int[] consumed, @Nullable int[] offsetInWindow, @NestedScrollType int type)", "modifiers": "public static", "return": "boolean", "signature": "boolean dispatchNestedPreScroll(@NonNull View view, int dx, int dy,\n                                                  @Nullable int[] consumed, @Nullable int[] offsetInWindow, @NestedScrollType int type)", "full_signature": "public static boolean dispatchNestedPreScroll(@NonNull View view, int dx, int dy,\n                                                  @Nullable int[] consumed, @Nullable int[] offsetInWindow, @NestedScrollType int type)", "class_method_signature": "ViewCompat.dispatchNestedPreScroll(@NonNull View view, int dx, int dy,\n                                                  @Nullable int[] consumed, @Nullable int[] offsetInWindow, @NestedScrollType int type)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedFling", "parameters": "(@NonNull View view, float velocityX, float velocityY,\n                                              boolean consumed)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "boolean", "signature": "boolean dispatchNestedFling(@NonNull View view, float velocityX, float velocityY,\n                                              boolean consumed)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static boolean dispatchNestedFling(@NonNull View view, float velocityX, float velocityY,\n                                              boolean consumed)", "class_method_signature": "ViewCompat.dispatchNestedFling(@NonNull View view, float velocityX, float velocityY,\n                                              boolean consumed)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedPreFling", "parameters": "(@NonNull View view, float velocityX,\n                                                 float velocityY)", "modifiers": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static", "return": "boolean", "signature": "boolean dispatchNestedPreFling(@NonNull View view, float velocityX,\n                                                 float velocityY)", "full_signature": "@SuppressWarnings(\"RedundantCast\") // Intentionally invoking interface method. public static boolean dispatchNestedPreFling(@NonNull View view, float velocityX,\n                                                 float velocityY)", "class_method_signature": "ViewCompat.dispatchNestedPreFling(@NonNull View view, float velocityX,\n                                                 float velocityY)", "testcase": false, "constructor": false}, {"identifier": "isInLayout", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInLayout(@NonNull View view)", "full_signature": "public static boolean isInLayout(@NonNull View view)", "class_method_signature": "ViewCompat.isInLayout(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "isLaidOut", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean isLaidOut(@NonNull View view)", "full_signature": "public static boolean isLaidOut(@NonNull View view)", "class_method_signature": "ViewCompat.isLaidOut(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "isLayoutDirectionResolved", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean isLayoutDirectionResolved(@NonNull View view)", "full_signature": "public static boolean isLayoutDirectionResolved(@NonNull View view)", "class_method_signature": "ViewCompat.isLayoutDirectionResolved(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "getZ", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "float", "signature": "float getZ(@NonNull View view)", "full_signature": "public static float getZ(@NonNull View view)", "class_method_signature": "ViewCompat.getZ(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setZ", "parameters": "(@NonNull View view, float z)", "modifiers": "public static", "return": "void", "signature": "void setZ(@NonNull View view, float z)", "full_signature": "public static void setZ(@NonNull View view, float z)", "class_method_signature": "ViewCompat.setZ(@NonNull View view, float z)", "testcase": false, "constructor": false}, {"identifier": "offsetTopAndBottom", "parameters": "(@NonNull View view, int offset)", "modifiers": "public static", "return": "void", "signature": "void offsetTopAndBottom(@NonNull View view, int offset)", "full_signature": "public static void offsetTopAndBottom(@NonNull View view, int offset)", "class_method_signature": "ViewCompat.offsetTopAndBottom(@NonNull View view, int offset)", "testcase": false, "constructor": false}, {"identifier": "compatOffsetTopAndBottom", "parameters": "(View view, int offset)", "modifiers": "private static", "return": "void", "signature": "void compatOffsetTopAndBottom(View view, int offset)", "full_signature": "private static void compatOffsetTopAndBottom(View view, int offset)", "class_method_signature": "ViewCompat.compatOffsetTopAndBottom(View view, int offset)", "testcase": false, "constructor": false}, {"identifier": "offsetLeftAndRight", "parameters": "(@NonNull View view, int offset)", "modifiers": "public static", "return": "void", "signature": "void offsetLeftAndRight(@NonNull View view, int offset)", "full_signature": "public static void offsetLeftAndRight(@NonNull View view, int offset)", "class_method_signature": "ViewCompat.offsetLeftAndRight(@NonNull View view, int offset)", "testcase": false, "constructor": false}, {"identifier": "compatOffsetLeftAndRight", "parameters": "(View view, int offset)", "modifiers": "private static", "return": "void", "signature": "void compatOffsetLeftAndRight(View view, int offset)", "full_signature": "private static void compatOffsetLeftAndRight(View view, int offset)", "class_method_signature": "ViewCompat.compatOffsetLeftAndRight(View view, int offset)", "testcase": false, "constructor": false}, {"identifier": "tickleInvalidationFlag", "parameters": "(View view)", "modifiers": "private static", "return": "void", "signature": "void tickleInvalidationFlag(View view)", "full_signature": "private static void tickleInvalidationFlag(View view)", "class_method_signature": "ViewCompat.tickleInvalidationFlag(View view)", "testcase": false, "constructor": false}, {"identifier": "setClipBounds", "parameters": "(@NonNull View view, Rect clipBounds)", "modifiers": "public static", "return": "void", "signature": "void setClipBounds(@NonNull View view, Rect clipBounds)", "full_signature": "public static void setClipBounds(@NonNull View view, Rect clipBounds)", "class_method_signature": "ViewCompat.setClipBounds(@NonNull View view, Rect clipBounds)", "testcase": false, "constructor": false}, {"identifier": "getClipBounds", "parameters": "(@NonNull View view)", "modifiers": "@Nullable public static", "return": "Rect", "signature": "Rect getClipBounds(@NonNull View view)", "full_signature": "@Nullable public static Rect getClipBounds(@NonNull View view)", "class_method_signature": "ViewCompat.getClipBounds(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "isAttachedToWindow", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAttachedToWindow(@NonNull View view)", "full_signature": "public static boolean isAttachedToWindow(@NonNull View view)", "class_method_signature": "ViewCompat.isAttachedToWindow(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "hasOnClickListeners", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasOnClickListeners(@NonNull View view)", "full_signature": "public static boolean hasOnClickListeners(@NonNull View view)", "class_method_signature": "ViewCompat.hasOnClickListeners(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setScrollIndicators", "parameters": "(@NonNull View view, @ScrollIndicators int indicators)", "modifiers": "public static", "return": "void", "signature": "void setScrollIndicators(@NonNull View view, @ScrollIndicators int indicators)", "full_signature": "public static void setScrollIndicators(@NonNull View view, @ScrollIndicators int indicators)", "class_method_signature": "ViewCompat.setScrollIndicators(@NonNull View view, @ScrollIndicators int indicators)", "testcase": false, "constructor": false}, {"identifier": "setScrollIndicators", "parameters": "(@NonNull View view, @ScrollIndicators int indicators,\n                                           @ScrollIndicators int mask)", "modifiers": "public static", "return": "void", "signature": "void setScrollIndicators(@NonNull View view, @ScrollIndicators int indicators,\n                                           @ScrollIndicators int mask)", "full_signature": "public static void setScrollIndicators(@NonNull View view, @ScrollIndicators int indicators,\n                                           @ScrollIndicators int mask)", "class_method_signature": "ViewCompat.setScrollIndicators(@NonNull View view, @ScrollIndicators int indicators,\n                                           @ScrollIndicators int mask)", "testcase": false, "constructor": false}, {"identifier": "getScrollIndicators", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "int", "signature": "int getScrollIndicators(@NonNull View view)", "full_signature": "public static int getScrollIndicators(@NonNull View view)", "class_method_signature": "ViewCompat.getScrollIndicators(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setPointerIcon", "parameters": "(@NonNull View view, PointerIconCompat pointerIcon)", "modifiers": "public static", "return": "void", "signature": "void setPointerIcon(@NonNull View view, PointerIconCompat pointerIcon)", "full_signature": "public static void setPointerIcon(@NonNull View view, PointerIconCompat pointerIcon)", "class_method_signature": "ViewCompat.setPointerIcon(@NonNull View view, PointerIconCompat pointerIcon)", "testcase": false, "constructor": false}, {"identifier": "getDisplay", "parameters": "(@NonNull View view)", "modifiers": "@Nullable public static", "return": "Display", "signature": "Display getDisplay(@NonNull View view)", "full_signature": "@Nullable public static Display getDisplay(@NonNull View view)", "class_method_signature": "ViewCompat.getDisplay(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setTooltipText", "parameters": "(@NonNull View view, @Nullable CharSequence tooltipText)", "modifiers": "public static", "return": "void", "signature": "void setTooltipText(@NonNull View view, @Nullable CharSequence tooltipText)", "full_signature": "public static void setTooltipText(@NonNull View view, @Nullable CharSequence tooltipText)", "class_method_signature": "ViewCompat.setTooltipText(@NonNull View view, @Nullable CharSequence tooltipText)", "testcase": false, "constructor": false}, {"identifier": "startDragAndDrop", "parameters": "(@NonNull View v, ClipData data,\n                                           View.DragShadowBuilder shadowBuilder, Object localState, int flags)", "modifiers": "public static", "return": "boolean", "signature": "boolean startDragAndDrop(@NonNull View v, ClipData data,\n                                           View.DragShadowBuilder shadowBuilder, Object localState, int flags)", "full_signature": "public static boolean startDragAndDrop(@NonNull View v, ClipData data,\n                                           View.DragShadowBuilder shadowBuilder, Object localState, int flags)", "class_method_signature": "ViewCompat.startDragAndDrop(@NonNull View v, ClipData data,\n                                           View.DragShadowBuilder shadowBuilder, Object localState, int flags)", "testcase": false, "constructor": false}, {"identifier": "cancelDragAndDrop", "parameters": "(@NonNull View v)", "modifiers": "public static", "return": "void", "signature": "void cancelDragAndDrop(@NonNull View v)", "full_signature": "public static void cancelDragAndDrop(@NonNull View v)", "class_method_signature": "ViewCompat.cancelDragAndDrop(@NonNull View v)", "testcase": false, "constructor": false}, {"identifier": "updateDragShadow", "parameters": "(@NonNull View v, View.DragShadowBuilder shadowBuilder)", "modifiers": "public static", "return": "void", "signature": "void updateDragShadow(@NonNull View v, View.DragShadowBuilder shadowBuilder)", "full_signature": "public static void updateDragShadow(@NonNull View v, View.DragShadowBuilder shadowBuilder)", "class_method_signature": "ViewCompat.updateDragShadow(@NonNull View v, View.DragShadowBuilder shadowBuilder)", "testcase": false, "constructor": false}, {"identifier": "getNextClusterForwardId", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "int", "signature": "int getNextClusterForwardId(@NonNull View view)", "full_signature": "public static int getNextClusterForwardId(@NonNull View view)", "class_method_signature": "ViewCompat.getNextClusterForwardId(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setNextClusterForwardId", "parameters": "(@NonNull View view, int nextClusterForwardId)", "modifiers": "public static", "return": "void", "signature": "void setNextClusterForwardId(@NonNull View view, int nextClusterForwardId)", "full_signature": "public static void setNextClusterForwardId(@NonNull View view, int nextClusterForwardId)", "class_method_signature": "ViewCompat.setNextClusterForwardId(@NonNull View view, int nextClusterForwardId)", "testcase": false, "constructor": false}, {"identifier": "isKeyboardNavigationCluster", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean isKeyboardNavigationCluster(@NonNull View view)", "full_signature": "public static boolean isKeyboardNavigationCluster(@NonNull View view)", "class_method_signature": "ViewCompat.isKeyboardNavigationCluster(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setKeyboardNavigationCluster", "parameters": "(@NonNull View view, boolean isCluster)", "modifiers": "public static", "return": "void", "signature": "void setKeyboardNavigationCluster(@NonNull View view, boolean isCluster)", "full_signature": "public static void setKeyboardNavigationCluster(@NonNull View view, boolean isCluster)", "class_method_signature": "ViewCompat.setKeyboardNavigationCluster(@NonNull View view, boolean isCluster)", "testcase": false, "constructor": false}, {"identifier": "isFocusedByDefault", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFocusedByDefault(@NonNull View view)", "full_signature": "public static boolean isFocusedByDefault(@NonNull View view)", "class_method_signature": "ViewCompat.isFocusedByDefault(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "setFocusedByDefault", "parameters": "(@NonNull View view, boolean isFocusedByDefault)", "modifiers": "public static", "return": "void", "signature": "void setFocusedByDefault(@NonNull View view, boolean isFocusedByDefault)", "full_signature": "public static void setFocusedByDefault(@NonNull View view, boolean isFocusedByDefault)", "class_method_signature": "ViewCompat.setFocusedByDefault(@NonNull View view, boolean isFocusedByDefault)", "testcase": false, "constructor": false}, {"identifier": "keyboardNavigationClusterSearch", "parameters": "(@NonNull View view, View currentCluster,\n                                                       @FocusDirection int direction)", "modifiers": "public static", "return": "View", "signature": "View keyboardNavigationClusterSearch(@NonNull View view, View currentCluster,\n                                                       @FocusDirection int direction)", "full_signature": "public static View keyboardNavigationClusterSearch(@NonNull View view, View currentCluster,\n                                                       @FocusDirection int direction)", "class_method_signature": "ViewCompat.keyboardNavigationClusterSearch(@NonNull View view, View currentCluster,\n                                                       @FocusDirection int direction)", "testcase": false, "constructor": false}, {"identifier": "addKeyboardNavigationClusters", "parameters": "(@NonNull View view,\n                                                     @NonNull Collection<View> views, int direction)", "modifiers": "public static", "return": "void", "signature": "void addKeyboardNavigationClusters(@NonNull View view,\n                                                     @NonNull Collection<View> views, int direction)", "full_signature": "public static void addKeyboardNavigationClusters(@NonNull View view,\n                                                     @NonNull Collection<View> views, int direction)", "class_method_signature": "ViewCompat.addKeyboardNavigationClusters(@NonNull View view,\n                                                     @NonNull Collection<View> views, int direction)", "testcase": false, "constructor": false}, {"identifier": "restoreDefaultFocus", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean restoreDefaultFocus(@NonNull View view)", "full_signature": "public static boolean restoreDefaultFocus(@NonNull View view)", "class_method_signature": "ViewCompat.restoreDefaultFocus(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "hasExplicitFocusable", "parameters": "(@NonNull View view)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasExplicitFocusable(@NonNull View view)", "full_signature": "public static boolean hasExplicitFocusable(@NonNull View view)", "class_method_signature": "ViewCompat.hasExplicitFocusable(@NonNull View view)", "testcase": false, "constructor": false}, {"identifier": "generateViewId", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int generateViewId()", "full_signature": "public static int generateViewId()", "class_method_signature": "ViewCompat.generateViewId()", "testcase": false, "constructor": false}, {"identifier": "ViewCompat", "parameters": "()", "modifiers": "protected", "return": "", "signature": " ViewCompat()", "full_signature": "protected  ViewCompat()", "class_method_signature": "ViewCompat.ViewCompat()", "testcase": false, "constructor": true}], "file": "androidx/core/view/ViewCompat.java"}, "focal_method": {"identifier": "generateViewId", "parameters": "()", "modifiers": "public static", "return": "int", "body": "public static int generateViewId() {\n        if (Build.VERSION.SDK_INT >= 17) {\n            return View.generateViewId();\n        }\n        for (; ; ) {\n            final int result = sNextGeneratedId.get();\n            // aapt-generated IDs have the high byte nonzero; clamp to the range under that.\n            int newValue = result + 1;\n            if (newValue > 0x00FFFFFF) newValue = 1; // Roll over to 1, not 0.\n            if (sNextGeneratedId.compareAndSet(result, newValue)) {\n                return result;\n            }\n        }\n    }", "signature": "int generateViewId()", "full_signature": "public static int generateViewId()", "class_method_signature": "ViewCompat.generateViewId()", "testcase": false, "constructor": false, "invocations": ["generateViewId", "get", "compareAndSet"]}, "repository": {"repo_id": 172448626, "url": "https://github.com/yuchuangu85/Android_Framework_Source", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 61, "size": 84785, "license": "licensed"}}