{"test_class": {"identifier": "EventToStringTest", "superclass": "", "interfaces": "", "fields": [], "file": "jumi-actors/src/test/java/fi/jumi/actors/eventizers/EventToStringTest.java"}, "test_case": {"identifier": "shows_the_method_and_all_its_arguments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shows_the_method_and_all_its_arguments() {\n        assertThat(EventToString.format(\"TheClass\", \"theMethod\"), is(\"TheClass.theMethod()\"));\n        assertThat(EventToString.format(\"TheClass\", \"theMethod\", 123), is(\"TheClass.theMethod(123)\"));\n        assertThat(EventToString.format(\"TheClass\", \"theMethod\", 123, true), is(\"TheClass.theMethod(123, true)\"));\n    }", "signature": "void shows_the_method_and_all_its_arguments()", "full_signature": "@Test public void shows_the_method_and_all_its_arguments()", "class_method_signature": "EventToStringTest.shows_the_method_and_all_its_arguments()", "testcase": true, "constructor": false, "invocations": ["assertThat", "format", "is", "assertThat", "format", "is", "assertThat", "format", "is"]}, "focal_class": {"identifier": "EventToString", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final CharsetEncoder charsetEncoder;", "modifier": "private final", "type": "CharsetEncoder", "declarator": "charsetEncoder", "var_name": "charsetEncoder"}, {"original_string": "private final StringBuilder result = new StringBuilder();", "modifier": "private final", "type": "StringBuilder", "declarator": "result = new StringBuilder()", "var_name": "result"}], "methods": [{"identifier": "EventToString", "parameters": "(Charset charset)", "modifiers": "public", "return": "", "signature": " EventToString(Charset charset)", "full_signature": "public  EventToString(Charset charset)", "class_method_signature": "EventToString.EventToString(Charset charset)", "testcase": false, "constructor": true}, {"identifier": "format", "parameters": "(String className, String methodName, Object... args)", "modifiers": "public static", "return": "String", "signature": "String format(String className, String methodName, Object... args)", "full_signature": "public static String format(String className, String methodName, Object... args)", "class_method_signature": "EventToString.format(String className, String methodName, Object... args)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String build()", "full_signature": "public String build()", "class_method_signature": "EventToString.build()", "testcase": false, "constructor": false}, {"identifier": "formatMethodCall", "parameters": "(String className, String methodName, Object... args)", "modifiers": "public", "return": "EventToString", "signature": "EventToString formatMethodCall(String className, String methodName, Object... args)", "full_signature": "public EventToString formatMethodCall(String className, String methodName, Object... args)", "class_method_signature": "EventToString.formatMethodCall(String className, String methodName, Object... args)", "testcase": false, "constructor": false}, {"identifier": "formatArg", "parameters": "(Object arg)", "modifiers": "private", "return": "void", "signature": "void formatArg(Object arg)", "full_signature": "private void formatArg(Object arg)", "class_method_signature": "EventToString.formatArg(Object arg)", "testcase": false, "constructor": false}, {"identifier": "escapeSpecialChars", "parameters": "(String arg)", "modifiers": "", "return": "EventToString", "signature": "EventToString escapeSpecialChars(String arg)", "full_signature": " EventToString escapeSpecialChars(String arg)", "class_method_signature": "EventToString.escapeSpecialChars(String arg)", "testcase": false, "constructor": false}, {"identifier": "escapeSpecialChar", "parameters": "(char ch)", "modifiers": "private", "return": "void", "signature": "void escapeSpecialChar(char ch)", "full_signature": "private void escapeSpecialChar(char ch)", "class_method_signature": "EventToString.escapeSpecialChar(char ch)", "testcase": false, "constructor": false}, {"identifier": "isUnmappable", "parameters": "(char ch)", "modifiers": "private", "return": "boolean", "signature": "boolean isUnmappable(char ch)", "full_signature": "private boolean isUnmappable(char ch)", "class_method_signature": "EventToString.isUnmappable(char ch)", "testcase": false, "constructor": false}], "file": "jumi-actors/src/main/java/fi/jumi/actors/eventizers/EventToString.java"}, "focal_method": {"identifier": "format", "parameters": "(String className, String methodName, Object... args)", "modifiers": "public static", "return": "String", "body": "public static String format(String className, String methodName, Object... args) {\n        return new EventToString(Charset.defaultCharset())\n                .formatMethodCall(className, methodName, args)\n                .build();\n    }", "signature": "String format(String className, String methodName, Object... args)", "full_signature": "public static String format(String className, String methodName, Object... args)", "class_method_signature": "EventToString.format(String className, String methodName, Object... args)", "testcase": false, "constructor": false, "invocations": ["build", "formatMethodCall", "defaultCharset"]}, "repository": {"repo_id": 6426667, "url": "https://github.com/luontola/jumi-actors", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 78, "size": 2989, "license": "licensed"}}