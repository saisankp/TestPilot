{"test_class": {"identifier": "ImageServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ImageServiceListener imageServiceListener;", "modifier": "private", "type": "ImageServiceListener", "declarator": "imageServiceListener", "var_name": "imageServiceListener"}, {"original_string": "private Semaphore semaphore;", "modifier": "private", "type": "Semaphore", "declarator": "semaphore", "var_name": "semaphore"}, {"original_string": "private Map<String, Bitmap> bitmaps;", "modifier": "private", "type": "Map<String, Bitmap>", "declarator": "bitmaps", "var_name": "bitmaps"}, {"original_string": "private FakeHttpLayer fakeHttpLayer;", "modifier": "private", "type": "FakeHttpLayer", "declarator": "fakeHttpLayer", "var_name": "fakeHttpLayer"}, {"original_string": "private String url1;", "modifier": "private", "type": "String", "declarator": "url1", "var_name": "url1"}, {"original_string": "private String url2;", "modifier": "private", "type": "String", "declarator": "url2", "var_name": "url2"}, {"original_string": "private String url3;", "modifier": "private", "type": "String", "declarator": "url3", "var_name": "url3"}, {"original_string": "private String imageData1;", "modifier": "private", "type": "String", "declarator": "imageData1", "var_name": "imageData1"}, {"original_string": "private String imageData2;", "modifier": "private", "type": "String", "declarator": "imageData2", "var_name": "imageData2"}, {"original_string": "private String imageData3;", "modifier": "private", "type": "String", "declarator": "imageData3", "var_name": "imageData3"}, {"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private Bitmap image2;", "modifier": "private", "type": "Bitmap", "declarator": "image2", "var_name": "image2"}, {"original_string": "private Bitmap image1;", "modifier": "private", "type": "Bitmap", "declarator": "image1", "var_name": "image1"}, {"original_string": "private DownloadResponse downloadResponse;", "modifier": "private", "type": "DownloadResponse", "declarator": "downloadResponse", "var_name": "downloadResponse"}], "file": "MoPubAd/mopub-sdk/src/test/java/com/mopub/nativeads/ImageServiceTest.java"}, "test_case": {"identifier": "calculateInSampleSize_withImageSmallerThanRequested_shouldBe1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void calculateInSampleSize_withImageSmallerThanRequested_shouldBe1() {\n        int nativeWidth = 1024;\n        assertThat(ImageService.calculateInSampleSize(nativeWidth, 2046)).isEqualTo(1);\n    }", "signature": "void calculateInSampleSize_withImageSmallerThanRequested_shouldBe1()", "full_signature": "@Test public void calculateInSampleSize_withImageSmallerThanRequested_shouldBe1()", "class_method_signature": "ImageServiceTest.calculateInSampleSize_withImageSmallerThanRequested_shouldBe1()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "calculateInSampleSize"]}, "focal_class": {"identifier": "ImageService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int TWO_MEGABYTES = 2097152;", "modifier": "private static final", "type": "int", "declarator": "TWO_MEGABYTES = 2097152", "var_name": "TWO_MEGABYTES"}, {"original_string": "private static int sTargetWidth = -1;", "modifier": "private static", "type": "int", "declarator": "sTargetWidth = -1", "var_name": "sTargetWidth"}], "methods": [{"identifier": "initialize", "parameters": "(@NonNull Context context)", "modifiers": "@TargetApi(13) @VisibleForTesting static", "return": "void", "signature": "void initialize(@NonNull Context context)", "full_signature": "@TargetApi(13) @VisibleForTesting static void initialize(@NonNull Context context)", "class_method_signature": "ImageService.initialize(@NonNull Context context)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@NonNull final Context context, @NonNull final List<String> urls,\n            @NonNull final ImageServiceListener imageServiceListener)", "modifiers": "static", "return": "void", "signature": "void get(@NonNull final Context context, @NonNull final List<String> urls,\n            @NonNull final ImageServiceListener imageServiceListener)", "full_signature": "static void get(@NonNull final Context context, @NonNull final List<String> urls,\n            @NonNull final ImageServiceListener imageServiceListener)", "class_method_signature": "ImageService.get(@NonNull final Context context, @NonNull final List<String> urls,\n            @NonNull final ImageServiceListener imageServiceListener)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@NonNull final List<String> urls,\n            @NonNull final ImageServiceListener imageServiceListener)", "modifiers": "static", "return": "void", "signature": "void get(@NonNull final List<String> urls,\n            @NonNull final ImageServiceListener imageServiceListener)", "full_signature": "static void get(@NonNull final List<String> urls,\n            @NonNull final ImageServiceListener imageServiceListener)", "class_method_signature": "ImageService.get(@NonNull final List<String> urls,\n            @NonNull final ImageServiceListener imageServiceListener)", "testcase": false, "constructor": false}, {"identifier": "putBitmapInCache", "parameters": "(final String key, final Bitmap bitmap)", "modifiers": "static", "return": "void", "signature": "void putBitmapInCache(final String key, final Bitmap bitmap)", "full_signature": "static void putBitmapInCache(final String key, final Bitmap bitmap)", "class_method_signature": "ImageService.putBitmapInCache(final String key, final Bitmap bitmap)", "testcase": false, "constructor": false}, {"identifier": "putDataInCache", "parameters": "(final String key, final Bitmap bitmap, final byte[] byteData)", "modifiers": "static", "return": "void", "signature": "void putDataInCache(final String key, final Bitmap bitmap, final byte[] byteData)", "full_signature": "static void putDataInCache(final String key, final Bitmap bitmap, final byte[] byteData)", "class_method_signature": "ImageService.putDataInCache(final String key, final Bitmap bitmap, final byte[] byteData)", "testcase": false, "constructor": false}, {"identifier": "getBitmapsFromMemoryCache", "parameters": "(@NonNull final List<String> urls,\n            @NonNull final Map<String, Bitmap> hits)", "modifiers": "@NonNull static", "return": "List<String>", "signature": "List<String> getBitmapsFromMemoryCache(@NonNull final List<String> urls,\n            @NonNull final Map<String, Bitmap> hits)", "full_signature": "@NonNull static List<String> getBitmapsFromMemoryCache(@NonNull final List<String> urls,\n            @NonNull final Map<String, Bitmap> hits)", "class_method_signature": "ImageService.getBitmapsFromMemoryCache(@NonNull final List<String> urls,\n            @NonNull final Map<String, Bitmap> hits)", "testcase": false, "constructor": false}, {"identifier": "getBitmapFromMemoryCache", "parameters": "(final String key)", "modifiers": "@Nullable static", "return": "Bitmap", "signature": "Bitmap getBitmapFromMemoryCache(final String key)", "full_signature": "@Nullable static Bitmap getBitmapFromMemoryCache(final String key)", "class_method_signature": "ImageService.getBitmapFromMemoryCache(final String key)", "testcase": false, "constructor": false}, {"identifier": "asBitmap", "parameters": "(@NonNull final DownloadResponse downloadResponse, final int requestedWidth)", "modifiers": "@Nullable public static", "return": "Bitmap", "signature": "Bitmap asBitmap(@NonNull final DownloadResponse downloadResponse, final int requestedWidth)", "full_signature": "@Nullable public static Bitmap asBitmap(@NonNull final DownloadResponse downloadResponse, final int requestedWidth)", "class_method_signature": "ImageService.asBitmap(@NonNull final DownloadResponse downloadResponse, final int requestedWidth)", "testcase": false, "constructor": false}, {"identifier": "byteArrayToBitmap", "parameters": "(@NonNull final byte[] bytes, final int requestedWidth)", "modifiers": "@Nullable public static", "return": "Bitmap", "signature": "Bitmap byteArrayToBitmap(@NonNull final byte[] bytes, final int requestedWidth)", "full_signature": "@Nullable public static Bitmap byteArrayToBitmap(@NonNull final byte[] bytes, final int requestedWidth)", "class_method_signature": "ImageService.byteArrayToBitmap(@NonNull final byte[] bytes, final int requestedWidth)", "testcase": false, "constructor": false}, {"identifier": "getMemBytes", "parameters": "(@NonNull Options options)", "modifiers": "public static", "return": "long", "signature": "long getMemBytes(@NonNull Options options)", "full_signature": "public static long getMemBytes(@NonNull Options options)", "class_method_signature": "ImageService.getMemBytes(@NonNull Options options)", "testcase": false, "constructor": false}, {"identifier": "calculateInSampleSize", "parameters": "(final int nativeWidth, int requestedWidth)", "modifiers": "public static", "return": "int", "signature": "int calculateInSampleSize(final int nativeWidth, int requestedWidth)", "full_signature": "public static int calculateInSampleSize(final int nativeWidth, int requestedWidth)", "class_method_signature": "ImageService.calculateInSampleSize(final int nativeWidth, int requestedWidth)", "testcase": false, "constructor": false}, {"identifier": "getBitmapFromDiskCache", "parameters": "(@NonNull final String key)", "modifiers": "@Nullable @Deprecated static", "return": "Bitmap", "signature": "Bitmap getBitmapFromDiskCache(@NonNull final String key)", "full_signature": "@Nullable @Deprecated static Bitmap getBitmapFromDiskCache(@NonNull final String key)", "class_method_signature": "ImageService.getBitmapFromDiskCache(@NonNull final String key)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@VisibleForTesting static", "return": "void", "signature": "void clear()", "full_signature": "@VisibleForTesting static void clear()", "class_method_signature": "ImageService.clear()", "testcase": false, "constructor": false}, {"identifier": "getTargetWidth", "parameters": "()", "modifiers": "@VisibleForTesting static", "return": "int", "signature": "int getTargetWidth()", "full_signature": "@VisibleForTesting static int getTargetWidth()", "class_method_signature": "ImageService.getTargetWidth()", "testcase": false, "constructor": false}], "file": "MoPubAd/mopub-sdk/src/main/java/com/mopub/nativeads/ImageService.java"}, "focal_method": {"identifier": "calculateInSampleSize", "parameters": "(final int nativeWidth, int requestedWidth)", "modifiers": "public static", "return": "int", "body": "public static int calculateInSampleSize(final int nativeWidth, int requestedWidth) {\n        int inSampleSize = 1;\n\n        if (nativeWidth > requestedWidth) {\n            final int halfWidth = nativeWidth / 2;\n\n            while ((halfWidth / inSampleSize) >= requestedWidth) {\n                inSampleSize *= 2;\n            }\n        }\n\n        return inSampleSize;\n    }", "signature": "int calculateInSampleSize(final int nativeWidth, int requestedWidth)", "full_signature": "public static int calculateInSampleSize(final int nativeWidth, int requestedWidth)", "class_method_signature": "ImageService.calculateInSampleSize(final int nativeWidth, int requestedWidth)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 38092182, "url": "https://github.com/harshalbenake/hbworkspace2-100", "language": "Java", "is_fork": false, "fork_count": 160, "stargazer_count": 191, "size": 307516, "license": "licensed"}}