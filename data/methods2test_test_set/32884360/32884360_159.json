{"test_class": {"identifier": "Log4JConfigurationMXBeanSingletonTest", "superclass": "", "interfaces": "", "fields": [], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/server/service/log4jconfig/Log4JConfigurationMXBeanSingletonTest.java"}, "test_case": {"identifier": "nullConfigWithPoll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void nullConfigWithPoll() {\n        final TestConfigurator test = new TestConfigurator();\n\n        expectException(IllegalArgumentException.class, new Runnable() {\n            @Override\n            public void run() {\n                test.bean().pollConfigurationFile(null, 4);\n            }\n        });\n        test.assertAll(null, null);\n    }", "signature": "void nullConfigWithPoll()", "full_signature": "@Test public void nullConfigWithPoll()", "class_method_signature": "Log4JConfigurationMXBeanSingletonTest.nullConfigWithPoll()", "testcase": true, "constructor": false, "invocations": ["expectException", "pollConfigurationFile", "bean", "assertAll"]}, "focal_class": {"identifier": "Log4JConfigurationMXBeanSingleton", "superclass": "", "interfaces": "implements Log4JConfigurationMXBean", "fields": [{"original_string": "private final static Log4JConfigurationMXBean instance = new Log4JConfigurationMXBeanSingleton();", "modifier": "private final static", "type": "Log4JConfigurationMXBean", "declarator": "instance = new Log4JConfigurationMXBeanSingleton()", "var_name": "instance"}, {"original_string": "private final Object MONITOR = new Object();", "modifier": "private final", "type": "Object", "declarator": "MONITOR = new Object()", "var_name": "MONITOR"}, {"original_string": "private Long updateFrequency = null;", "modifier": "private", "type": "Long", "declarator": "updateFrequency = null", "var_name": "updateFrequency"}, {"original_string": "private String configFile = null;", "modifier": "private", "type": "String", "declarator": "configFile = null", "var_name": "configFile"}], "methods": [{"identifier": "instance", "parameters": "()", "modifiers": "public static", "return": "Log4JConfigurationMXBean", "signature": "Log4JConfigurationMXBean instance()", "full_signature": "public static Log4JConfigurationMXBean instance()", "class_method_signature": "Log4JConfigurationMXBeanSingleton.instance()", "testcase": false, "constructor": false}, {"identifier": "Log4JConfigurationMXBeanSingleton", "parameters": "()", "modifiers": "", "return": "", "signature": " Log4JConfigurationMXBeanSingleton()", "full_signature": "  Log4JConfigurationMXBeanSingleton()", "class_method_signature": "Log4JConfigurationMXBeanSingleton.Log4JConfigurationMXBeanSingleton()", "testcase": false, "constructor": true}, {"identifier": "getConfigurationFile", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getConfigurationFile()", "full_signature": "@Override public final String getConfigurationFile()", "class_method_signature": "Log4JConfigurationMXBeanSingleton.getConfigurationFile()", "testcase": false, "constructor": false}, {"identifier": "setConfigurationFile", "parameters": "(String configFile)", "modifiers": "@Override public final", "return": "void", "signature": "void setConfigurationFile(String configFile)", "full_signature": "@Override public final void setConfigurationFile(String configFile)", "class_method_signature": "Log4JConfigurationMXBeanSingleton.setConfigurationFile(String configFile)", "testcase": false, "constructor": false}, {"identifier": "getUpdateFrequencyMS", "parameters": "()", "modifiers": "@Override public final", "return": "Long", "signature": "Long getUpdateFrequencyMS()", "full_signature": "@Override public final Long getUpdateFrequencyMS()", "class_method_signature": "Log4JConfigurationMXBeanSingleton.getUpdateFrequencyMS()", "testcase": false, "constructor": false}, {"identifier": "pollConfigurationFile", "parameters": "(String file, long updateFrequencyMS)", "modifiers": "@Override public final", "return": "void", "signature": "void pollConfigurationFile(String file, long updateFrequencyMS)", "full_signature": "@Override public final void pollConfigurationFile(String file, long updateFrequencyMS)", "class_method_signature": "Log4JConfigurationMXBeanSingleton.pollConfigurationFile(String file, long updateFrequencyMS)", "testcase": false, "constructor": false}, {"identifier": "pollConfigurationFile", "parameters": "(long updateFrequencyMS)", "modifiers": "@Override public final", "return": "void", "signature": "void pollConfigurationFile(long updateFrequencyMS)", "full_signature": "@Override public final void pollConfigurationFile(long updateFrequencyMS)", "class_method_signature": "Log4JConfigurationMXBeanSingleton.pollConfigurationFile(long updateFrequencyMS)", "testcase": false, "constructor": false}, {"identifier": "updateConfigurationFile", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void updateConfigurationFile()", "full_signature": "@Override public final void updateConfigurationFile()", "class_method_signature": "Log4JConfigurationMXBeanSingleton.updateConfigurationFile()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(String configFile)", "modifiers": "protected", "return": "void", "signature": "void configure(String configFile)", "full_signature": "protected void configure(String configFile)", "class_method_signature": "Log4JConfigurationMXBeanSingleton.configure(String configFile)", "testcase": false, "constructor": false}, {"identifier": "configureAndWatch", "parameters": "(String configFile, long updateFrequency)", "modifiers": "protected", "return": "void", "signature": "void configureAndWatch(String configFile, long updateFrequency)", "full_signature": "protected void configureAndWatch(String configFile, long updateFrequency)", "class_method_signature": "Log4JConfigurationMXBeanSingleton.configureAndWatch(String configFile, long updateFrequency)", "testcase": false, "constructor": false}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/server/service/log4jconfig/Log4JConfigurationMXBeanSingleton.java"}, "focal_method": {"identifier": "pollConfigurationFile", "parameters": "(String file, long updateFrequencyMS)", "modifiers": "@Override public final", "return": "void", "body": "@Override\n    public final void pollConfigurationFile(String file, long updateFrequencyMS) {\n        if (file == null) {\n            throw new IllegalArgumentException(\"file may not be null\");\n        }\n        if (updateFrequencyMS <= 0) {\n            throw new IllegalArgumentException(\"updateFrequencyMS must be positive (tried to pass in \"\n                    + updateFrequencyMS + ')');\n        }\n\n        synchronized (MONITOR) {\n            if (this.updateFrequency != null) {\n                throw new IllegalStateException(\"Can't set config file or polling frequency after polling has started\");\n            }\n            this.configFile = file;\n            this.updateFrequency = updateFrequencyMS;\n        }\n\n        configureAndWatch(file, updateFrequencyMS);\n    }", "signature": "void pollConfigurationFile(String file, long updateFrequencyMS)", "full_signature": "@Override public final void pollConfigurationFile(String file, long updateFrequencyMS)", "class_method_signature": "Log4JConfigurationMXBeanSingleton.pollConfigurationFile(String file, long updateFrequencyMS)", "testcase": false, "constructor": false, "invocations": ["configureAndWatch"]}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}