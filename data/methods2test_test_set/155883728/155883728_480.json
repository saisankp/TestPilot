{"test_class": {"identifier": "ImpersonationFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/security/user/ImpersonationFacadeTest.java"}, "test_case": {"identifier": "testGetImpersonators", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetImpersonators() throws Exception {\n        Impersonation delegate = mock(Impersonation.class);\n        ImpersonationFacade facade = getFacade(delegate);\n        final PrincipalIterator value = mock(PrincipalIterator.class);\n        when(delegate.getImpersonators()).thenReturn(value);\n        assertSame(\"is same value\", value, facade.getImpersonators());\n    }", "signature": "void testGetImpersonators()", "full_signature": "@Test public void testGetImpersonators()", "class_method_signature": "ImpersonationFacadeTest.testGetImpersonators()", "testcase": true, "constructor": false, "invocations": ["mock", "getFacade", "mock", "thenReturn", "when", "getImpersonators", "assertSame", "getImpersonators"]}, "focal_class": {"identifier": "ImpersonationFacade", "superclass": "", "interfaces": "implements Impersonation", "fields": [{"original_string": "private final @NotNull Impersonation delegate;", "modifier": "private final @NotNull", "type": "Impersonation", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "ImpersonationFacade", "parameters": "(final @NotNull Impersonation delegate)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " ImpersonationFacade(final @NotNull Impersonation delegate)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  ImpersonationFacade(final @NotNull Impersonation delegate)", "class_method_signature": "ImpersonationFacade.ImpersonationFacade(final @NotNull Impersonation delegate)", "testcase": false, "constructor": true}, {"identifier": "getImpersonators", "parameters": "()", "modifiers": "@Override public", "return": "PrincipalIterator", "signature": "PrincipalIterator getImpersonators()", "full_signature": "@Override public PrincipalIterator getImpersonators()", "class_method_signature": "ImpersonationFacade.getImpersonators()", "testcase": false, "constructor": false}, {"identifier": "allows", "parameters": "(final Subject subject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean allows(final Subject subject)", "full_signature": "@Override public boolean allows(final Subject subject)", "class_method_signature": "ImpersonationFacade.allows(final Subject subject)", "testcase": false, "constructor": false}, {"identifier": "grantImpersonation", "parameters": "(final Principal principal)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean grantImpersonation(final Principal principal)", "full_signature": "@Override public boolean grantImpersonation(final Principal principal)", "class_method_signature": "ImpersonationFacade.grantImpersonation(final Principal principal)", "testcase": false, "constructor": false}, {"identifier": "revokeImpersonation", "parameters": "(final Principal principal)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean revokeImpersonation(final Principal principal)", "full_signature": "@Override public boolean revokeImpersonation(final Principal principal)", "class_method_signature": "ImpersonationFacade.revokeImpersonation(final Principal principal)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/security/user/ImpersonationFacade.java"}, "focal_method": {"identifier": "getImpersonators", "parameters": "()", "modifiers": "@Override public", "return": "PrincipalIterator", "body": "@Override\n    public PrincipalIterator getImpersonators() throws RepositoryException {\n        return delegate.getImpersonators();\n    }", "signature": "PrincipalIterator getImpersonators()", "full_signature": "@Override public PrincipalIterator getImpersonators()", "class_method_signature": "ImpersonationFacade.getImpersonators()", "testcase": false, "constructor": false, "invocations": ["getImpersonators"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}