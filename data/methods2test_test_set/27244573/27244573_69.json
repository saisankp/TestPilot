{"test_class": {"identifier": "SurvexImporterTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/hwyl/sexytopo/control/io/thirdparty/survex/SurvexImporterTest.java"}, "test_case": {"identifier": "testCommentInstructionParsing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCommentInstructionParsing() {\n        Leg[] legs = SurvexImporter.parseAnyPromotedLegs(\n                \"{from: 1 0 0, 1.0 0.0 0.0, 1.0 0.0 0.0}\");\n        Assert.assertEquals(3, legs.length);\n        for (Leg leg : legs) {\n            Assert.assertEquals(leg.getDistance(), 1.0);\n            Assert.assertEquals(leg.getAzimuth(), 0.0);\n            Assert.assertEquals(leg.getInclination(), 0.0);\n        }\n    }", "signature": "void testCommentInstructionParsing()", "full_signature": "@Test public void testCommentInstructionParsing()", "class_method_signature": "SurvexImporterTest.testCommentInstructionParsing()", "testcase": true, "constructor": false, "invocations": ["parseAnyPromotedLegs", "assertEquals", "assertEquals", "getDistance", "assertEquals", "getAzimuth", "assertEquals", "getInclination"]}, "focal_class": {"identifier": "SurvexImporter", "superclass": "extends Importer", "interfaces": "", "fields": [{"original_string": "public static final Pattern COMMENT_INSTRUCTION_REGEX = Pattern.compile(\"(\\\\{.*?\\\\})\");", "modifier": "public static final", "type": "Pattern", "declarator": "COMMENT_INSTRUCTION_REGEX = Pattern.compile(\"(\\\\{.*?\\\\})\")", "var_name": "COMMENT_INSTRUCTION_REGEX"}], "methods": [{"identifier": "toSurvey", "parameters": "(File file)", "modifiers": "@Override public", "return": "Survey", "signature": "Survey toSurvey(File file)", "full_signature": "@Override public Survey toSurvey(File file)", "class_method_signature": "SurvexImporter.toSurvey(File file)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String text, Survey survey)", "modifiers": "public static", "return": "void", "signature": "void parse(String text, Survey survey)", "full_signature": "public static void parse(String text, Survey survey)", "class_method_signature": "SurvexImporter.parse(String text, Survey survey)", "testcase": false, "constructor": false}, {"identifier": "addLegToSurvey", "parameters": "(\n            Survey survey, Map<String, Station> nameToStation, String[] fields, String comment)", "modifiers": "private static", "return": "void", "signature": "void addLegToSurvey(\n            Survey survey, Map<String, Station> nameToStation, String[] fields, String comment)", "full_signature": "private static void addLegToSurvey(\n            Survey survey, Map<String, Station> nameToStation, String[] fields, String comment)", "class_method_signature": "SurvexImporter.addLegToSurvey(\n            Survey survey, Map<String, Station> nameToStation, String[] fields, String comment)", "testcase": false, "constructor": false}, {"identifier": "retrieveOrCreateStation", "parameters": "(Map<String, Station> nameToStation,\n                                                   String name, String comment)", "modifiers": "private static", "return": "Station", "signature": "Station retrieveOrCreateStation(Map<String, Station> nameToStation,\n                                                   String name, String comment)", "full_signature": "private static Station retrieveOrCreateStation(Map<String, Station> nameToStation,\n                                                   String name, String comment)", "class_method_signature": "SurvexImporter.retrieveOrCreateStation(Map<String, Station> nameToStation,\n                                                   String name, String comment)", "testcase": false, "constructor": false}, {"identifier": "extractCommentInstructions", "parameters": "(String comment)", "modifiers": "private static", "return": "String", "signature": "String extractCommentInstructions(String comment)", "full_signature": "private static String extractCommentInstructions(String comment)", "class_method_signature": "SurvexImporter.extractCommentInstructions(String comment)", "testcase": false, "constructor": false}, {"identifier": "parseAnyPromotedLegs", "parameters": "(String instructions)", "modifiers": "public static", "return": "Leg[]", "signature": "Leg[] parseAnyPromotedLegs(String instructions)", "full_signature": "public static Leg[] parseAnyPromotedLegs(String instructions)", "class_method_signature": "SurvexImporter.parseAnyPromotedLegs(String instructions)", "testcase": false, "constructor": false}, {"identifier": "canHandleFile", "parameters": "(File file)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandleFile(File file)", "full_signature": "@Override public boolean canHandleFile(File file)", "class_method_signature": "SurvexImporter.canHandleFile(File file)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/hwyl/sexytopo/control/io/thirdparty/survex/SurvexImporter.java"}, "focal_method": {"identifier": "parseAnyPromotedLegs", "parameters": "(String instructions)", "modifiers": "public static", "return": "Leg[]", "body": "public static Leg[] parseAnyPromotedLegs(String instructions) {\n        try {\n            List<Leg> legs = new ArrayList<>();\n\n            instructions = instructions.replace(\"{\", \"\");\n            instructions = instructions.replace(\"}\", \"\");\n            if (instructions.contains(\"from:\")) {\n                instructions = instructions.replace(\"from:\", \"\");\n            } else {\n                throw new Exception(\"Not an instruction we understand\");\n            }\n\n            String[] legStrings = instructions.split(\",\");\n\n            for (String legString : legStrings) {\n                legString = legString.trim();\n                String[] fieldStrings = legString.split(\" \");\n                double distance = Double.parseDouble(fieldStrings[0].trim());\n                double azimuth = Double.parseDouble(fieldStrings[1].trim());\n                double inclination = Double.parseDouble(fieldStrings[2].trim());\n                legs.add(new Leg(distance, azimuth, inclination));\n            }\n\n            return legs.toArray(new Leg[]{});\n        } catch (Exception exception) {\n            Log.e(\"Error parsing promoted leg (ignoring and carrying on): \" + exception);\n            return new Leg[]{}; // seems to be corrupted... feature not mission-critical so bail\n        }\n    }", "signature": "Leg[] parseAnyPromotedLegs(String instructions)", "full_signature": "public static Leg[] parseAnyPromotedLegs(String instructions)", "class_method_signature": "SurvexImporter.parseAnyPromotedLegs(String instructions)", "testcase": false, "constructor": false, "invocations": ["replace", "replace", "contains", "replace", "split", "trim", "split", "parseDouble", "trim", "parseDouble", "trim", "parseDouble", "trim", "add", "toArray", "e"]}, "repository": {"repo_id": 27244573, "url": "https://github.com/richsmith/sexytopo", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 83635, "license": "licensed"}}