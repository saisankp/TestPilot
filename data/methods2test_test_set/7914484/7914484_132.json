{"test_class": {"identifier": "SoapUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-ws-core/src/test/java/org/springframework/ws/soap/support/SoapUtilsTest.java"}, "test_case": {"identifier": "testSetActionInContentType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSetActionInContentType() throws Exception {\n\t\tString soapAction = \"http://springframework.org/spring-ws/Action\";\n\t\tString contentType = \"application/soap+xml\";\n\n\t\tString result = SoapUtils.setActionInContentType(contentType, soapAction);\n\t\tAssert.assertEquals(\"Invalid SOAP action\", soapAction, SoapUtils.extractActionFromContentType(result));\n\n\t\tString anotherSoapAction = \"http://springframework.org/spring-ws/AnotherAction\";\n\t\tString contentTypeWithAction = \"application/soap+xml; action=http://springframework.org/spring-ws/Action\";\n\t\tresult = SoapUtils.setActionInContentType(contentTypeWithAction, anotherSoapAction);\n\t\tAssert.assertEquals(\"Invalid SOAP action\", anotherSoapAction, SoapUtils.extractActionFromContentType(result));\n\n\t}", "signature": "void testSetActionInContentType()", "full_signature": "@Test public void testSetActionInContentType()", "class_method_signature": "SoapUtilsTest.testSetActionInContentType()", "testcase": true, "constructor": false, "invocations": ["setActionInContentType", "assertEquals", "extractActionFromContentType", "setActionInContentType", "assertEquals", "extractActionFromContentType"]}, "focal_class": {"identifier": "SoapUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern ACTION_PATTERN = Pattern.compile(\"action\\\\s*=\\\\s*([^;]+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "ACTION_PATTERN = Pattern.compile(\"action\\\\s*=\\\\s*([^;]+)\")", "var_name": "ACTION_PATTERN"}], "methods": [{"identifier": "SoapUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SoapUtils()", "full_signature": "private  SoapUtils()", "class_method_signature": "SoapUtils.SoapUtils()", "testcase": false, "constructor": true}, {"identifier": "escapeAction", "parameters": "(String soapAction)", "modifiers": "public static", "return": "String", "signature": "String escapeAction(String soapAction)", "full_signature": "public static String escapeAction(String soapAction)", "class_method_signature": "SoapUtils.escapeAction(String soapAction)", "testcase": false, "constructor": false}, {"identifier": "extractActionFromContentType", "parameters": "(String contentType)", "modifiers": "public static", "return": "String", "signature": "String extractActionFromContentType(String contentType)", "full_signature": "public static String extractActionFromContentType(String contentType)", "class_method_signature": "SoapUtils.extractActionFromContentType(String contentType)", "testcase": false, "constructor": false}, {"identifier": "setActionInContentType", "parameters": "(String contentType, String action)", "modifiers": "public static", "return": "String", "signature": "String setActionInContentType(String contentType, String action)", "full_signature": "public static String setActionInContentType(String contentType, String action)", "class_method_signature": "SoapUtils.setActionInContentType(String contentType, String action)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/soap/support/SoapUtils.java"}, "focal_method": {"identifier": "setActionInContentType", "parameters": "(String contentType, String action)", "modifiers": "public static", "return": "String", "body": "public static String setActionInContentType(String contentType, String action) {\n\t\tAssert.hasLength(contentType, \"'contentType' must not be empty\");\n\t\tif (StringUtils.hasText(action)) {\n\t\t\tMatcher matcher = ACTION_PATTERN.matcher(contentType);\n\t\t\tif (matcher.find() && matcher.groupCount() == 1) {\n\t\t\t\tStringBuffer buffer = new StringBuffer();\n\t\t\t\tmatcher.appendReplacement(buffer, \"action=\" + action);\n\t\t\t\tmatcher.appendTail(buffer);\n\t\t\t\treturn buffer.toString();\n\t\t\t} else {\n\t\t\t\treturn contentType + \"; action=\" + action;\n\t\t\t}\n\t\t} else {\n\t\t\treturn contentType;\n\t\t}\n\t}", "signature": "String setActionInContentType(String contentType, String action)", "full_signature": "public static String setActionInContentType(String contentType, String action)", "class_method_signature": "SoapUtils.setActionInContentType(String contentType, String action)", "testcase": false, "constructor": false, "invocations": ["hasLength", "hasText", "matcher", "find", "groupCount", "appendReplacement", "appendTail", "toString"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}