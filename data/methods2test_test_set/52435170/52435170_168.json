{"test_class": {"identifier": "EqualsInterceptorTest", "superclass": "", "interfaces": "", "fields": [], "file": "concordion/src/test/java/eu/drus/jpa/unit/concordion/EqualsInterceptorTest.java"}, "test_case": {"identifier": "testProxyEqualsSelf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProxyEqualsSelf() throws Exception {\n        // GIVEN\n    \tfinal ClassA target = new ClassA();\n        final Object proxy = EnhancedProxy.create(target, null);\n\n        // WHEN\n        final boolean isEqual = (boolean) EqualsInterceptor.intercept(proxy, proxy, target);\n\n        // THEN\n        assertTrue(isEqual);\n    }", "signature": "void testProxyEqualsSelf()", "full_signature": "@Test public void testProxyEqualsSelf()", "class_method_signature": "EqualsInterceptorTest.testProxyEqualsSelf()", "testcase": true, "constructor": false, "invocations": ["create", "intercept", "assertTrue"]}, "focal_class": {"identifier": "EqualsInterceptor", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "EqualsInterceptor", "parameters": "()", "modifiers": "private", "return": "", "signature": " EqualsInterceptor()", "full_signature": "private  EqualsInterceptor()", "class_method_signature": "EqualsInterceptor.EqualsInterceptor()", "testcase": false, "constructor": true}, {"identifier": "intercept", "parameters": "(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean)", "modifiers": "@RuntimeType public static", "return": "Object", "signature": "Object intercept(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean)", "full_signature": "@RuntimeType public static Object intercept(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean)", "class_method_signature": "EqualsInterceptor.intercept(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean)", "testcase": false, "constructor": false}], "file": "concordion/src/main/java/eu/drus/jpa/unit/concordion/EqualsInterceptor.java"}, "focal_method": {"identifier": "intercept", "parameters": "(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean)", "modifiers": "@RuntimeType public static", "return": "Object", "body": "@RuntimeType\n\tpublic static Object intercept(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean) throws IllegalAccessException, NoSuchFieldException {\t\t\t\n        if (thiz == other) {\n            return true;\n        } else if (other instanceof EnhancedProxy) {\n            return bean.equals(ReflectionUtils.getValue(other, \"bean\"));\n        } else {\n        \treturn bean.equals(other);\n        }\n\t}", "signature": "Object intercept(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean)", "full_signature": "@RuntimeType public static Object intercept(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean)", "class_method_signature": "EqualsInterceptor.intercept(@This Object thiz, @Argument(0) Object other, @FieldValue(\"bean\") Object bean)", "testcase": false, "constructor": false, "invocations": ["equals", "getValue", "equals"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}