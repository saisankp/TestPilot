{"test_class": {"identifier": "AnsiParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/khmelenko/lab/varis/log/AnsiParserTest.java"}, "test_case": {"identifier": "parseTextEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseTextEmpty() throws Exception {\n        assertEquals(AnsiParser.parseText(\"\"), new TextLeaf());\n    }", "signature": "void parseTextEmpty()", "full_signature": "@Test public void parseTextEmpty()", "class_method_signature": "AnsiParserTest.parseTextEmpty()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "parseText"]}, "focal_class": {"identifier": "AnsiParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Stack<TextLeaf> mResult = new Stack<>();", "modifier": "private", "type": "Stack<TextLeaf>", "declarator": "mResult = new Stack<>()", "var_name": "mResult"}, {"original_string": "private FormattingOptions mOptions = FormattingOptions.fromAnsiCodes();", "modifier": "private", "type": "FormattingOptions", "declarator": "mOptions = FormattingOptions.fromAnsiCodes()", "var_name": "mOptions"}], "methods": [{"identifier": "parseText", "parameters": "(String text)", "modifiers": "public static", "return": "Stack<TextLeaf>", "signature": "Stack<TextLeaf> parseText(String text)", "full_signature": "public static Stack<TextLeaf> parseText(String text)", "class_method_signature": "AnsiParser.parseText(String text)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String text)", "modifiers": "private", "return": "Stack<TextLeaf>", "signature": "Stack<TextLeaf> parse(String text)", "full_signature": "private Stack<TextLeaf> parse(String text)", "class_method_signature": "AnsiParser.parse(String text)", "testcase": false, "constructor": false}, {"identifier": "emitText", "parameters": "(String text)", "modifiers": "private", "return": "void", "signature": "void emitText(String text)", "full_signature": "private void emitText(String text)", "class_method_signature": "AnsiParser.emitText(String text)", "testcase": false, "constructor": false}, {"identifier": "removeCurrentLine", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void removeCurrentLine()", "full_signature": "private void removeCurrentLine()", "class_method_signature": "AnsiParser.removeCurrentLine()", "testcase": false, "constructor": false}, {"identifier": "isResetLineEscape", "parameters": "(String str, int controlStartPosition)", "modifiers": "private", "return": "boolean", "signature": "boolean isResetLineEscape(String str, int controlStartPosition)", "full_signature": "private boolean isResetLineEscape(String str, int controlStartPosition)", "class_method_signature": "AnsiParser.isResetLineEscape(String str, int controlStartPosition)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/khmelenko/lab/varis/log/AnsiParser.java"}, "focal_method": {"identifier": "parseText", "parameters": "(String text)", "modifiers": "public static", "return": "Stack<TextLeaf>", "body": "public static Stack<TextLeaf> parseText(String text) {\n        return new AnsiParser().parse(text);\n    }", "signature": "Stack<TextLeaf> parseText(String text)", "full_signature": "public static Stack<TextLeaf> parseText(String text)", "class_method_signature": "AnsiParser.parseText(String text)", "testcase": false, "constructor": false, "invocations": ["parse"]}, "repository": {"repo_id": 38716513, "url": "https://github.com/dkhmelenko/Varis-Android", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 42, "size": 10542, "license": "licensed"}}