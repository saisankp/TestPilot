{"test_class": {"identifier": "NwhinDataRetrieverTest", "superclass": "extends AbstractDateAwareTests", "interfaces": "implements C32DocumentDao, C32DocumentEntityFactory, WrapperResource", "fields": [{"original_string": "NwhinDataRetriever retriever;", "modifier": "", "type": "NwhinDataRetriever", "declarator": "retriever", "var_name": "retriever"}, {"original_string": "List<C32DocumentEntity> insertedList;", "modifier": "", "type": "List<C32DocumentEntity>", "declarator": "insertedList", "var_name": "insertedList"}, {"original_string": "List<C32DocumentEntity> updatedList;", "modifier": "", "type": "List<C32DocumentEntity>", "declarator": "updatedList", "var_name": "updatedList"}, {"original_string": "List<C32DocumentEntity> docList;", "modifier": "", "type": "List<C32DocumentEntity>", "declarator": "docList", "var_name": "docList"}, {"original_string": "String returnXml;", "modifier": "", "type": "String", "declarator": "returnXml", "var_name": "returnXml"}, {"original_string": "String ptNameToAssert;", "modifier": "", "type": "String", "declarator": "ptNameToAssert", "var_name": "ptNameToAssert"}, {"original_string": "String ptIdToAssert;", "modifier": "", "type": "String", "declarator": "ptIdToAssert", "var_name": "ptIdToAssert"}, {"original_string": "boolean nwhinError = false;", "modifier": "", "type": "boolean", "declarator": "nwhinError = false", "var_name": "nwhinError"}, {"original_string": "boolean parsingError = false;", "modifier": "", "type": "boolean", "declarator": "parsingError = false", "var_name": "parsingError"}], "file": "das/das_wrap_nwhin/src/test/java/org/osehra/das/repo/bluebutton/NwhinDataRetrieverTest.java"}, "test_case": {"identifier": "onMessage_docEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void onMessage_docEmpty() {\n\t\tptIdToAssert = \"998877v99\";\n\t\tsetupDocList(ptIdToAssert, ptIdToAssert, \"\");\n\t\tretriever.onMessage(new TestTextMessage(\"20120908070605:998877v99:fred\"));\n\t\tAssert.assertEquals(0, insertedList.size());\n\t\tAssert.assertEquals(1, updatedList.size());\n\t\tAssert.assertEquals(BlueButtonConstants.UNAVAILABLE_STATUS_STRING, updatedList.get(0).getDocument());\n\t\tAssert.assertEquals(ptIdToAssert, updatedList.get(0).getDocumentPatientId());\n\t\tAssert.assertEquals(ptIdToAssert, updatedList.get(0).getIcn());\n\t\tassertDatePartEqualsToday(updatedList.get(0).getCreateDate());\n\t}", "signature": "void onMessage_docEmpty()", "full_signature": "@Test public void onMessage_docEmpty()", "class_method_signature": "NwhinDataRetrieverTest.onMessage_docEmpty()", "testcase": true, "constructor": false, "invocations": ["setupDocList", "onMessage", "assertEquals", "size", "assertEquals", "size", "assertEquals", "getDocument", "get", "assertEquals", "getDocumentPatientId", "get", "assertEquals", "getIcn", "get", "assertDatePartEqualsToday", "getCreateDate", "get"]}, "focal_class": {"identifier": "NwhinDataRetriever", "superclass": "extends AbstractC32DaoAware", "interfaces": "implements MessageListener", "fields": [{"original_string": "protected WrapperResource _nwhinResource;", "modifier": "protected", "type": "WrapperResource", "declarator": "_nwhinResource", "var_name": "_nwhinResource"}, {"original_string": "protected FormatTS asyncMessageFormat;", "modifier": "protected", "type": "FormatTS", "declarator": "asyncMessageFormat", "var_name": "asyncMessageFormat"}, {"original_string": "protected static Log logger = LogFactory.getLog(NwhinDataRetriever.class);", "modifier": "protected static", "type": "Log", "declarator": "logger = LogFactory.getLog(NwhinDataRetriever.class)", "var_name": "logger"}, {"original_string": "protected C32DocumentEntityFactory documentFactory;", "modifier": "protected", "type": "C32DocumentEntityFactory", "declarator": "documentFactory", "var_name": "documentFactory"}], "methods": [{"identifier": "getAsyncMessageFormat", "parameters": "()", "modifiers": "public", "return": "FormatTS", "signature": "FormatTS getAsyncMessageFormat()", "full_signature": "public FormatTS getAsyncMessageFormat()", "class_method_signature": "NwhinDataRetriever.getAsyncMessageFormat()", "testcase": false, "constructor": false}, {"identifier": "setAsyncMessageFormat", "parameters": "(FormatTS asyncMessageFormat)", "modifiers": "public", "return": "void", "signature": "void setAsyncMessageFormat(FormatTS asyncMessageFormat)", "full_signature": "public void setAsyncMessageFormat(FormatTS asyncMessageFormat)", "class_method_signature": "NwhinDataRetriever.setAsyncMessageFormat(FormatTS asyncMessageFormat)", "testcase": false, "constructor": false}, {"identifier": "getDocumentFactory", "parameters": "()", "modifiers": "public", "return": "C32DocumentEntityFactory", "signature": "C32DocumentEntityFactory getDocumentFactory()", "full_signature": "public C32DocumentEntityFactory getDocumentFactory()", "class_method_signature": "NwhinDataRetriever.getDocumentFactory()", "testcase": false, "constructor": false}, {"identifier": "setDocumentFactory", "parameters": "(C32DocumentEntityFactory documentFactory)", "modifiers": "public", "return": "void", "signature": "void setDocumentFactory(C32DocumentEntityFactory documentFactory)", "full_signature": "public void setDocumentFactory(C32DocumentEntityFactory documentFactory)", "class_method_signature": "NwhinDataRetriever.setDocumentFactory(C32DocumentEntityFactory documentFactory)", "testcase": false, "constructor": false}, {"identifier": "setWrapperResource", "parameters": "(WrapperResource resource)", "modifiers": "public", "return": "void", "signature": "void setWrapperResource(WrapperResource resource)", "full_signature": "public void setWrapperResource(WrapperResource resource)", "class_method_signature": "NwhinDataRetriever.setWrapperResource(WrapperResource resource)", "testcase": false, "constructor": false}, {"identifier": "onMessage", "parameters": "(Message msg)", "modifiers": "@Override public", "return": "void", "signature": "void onMessage(Message msg)", "full_signature": "@Override public void onMessage(Message msg)", "class_method_signature": "NwhinDataRetriever.onMessage(Message msg)", "testcase": false, "constructor": false}, {"identifier": "getC32Document", "parameters": "(AsyncRetrieveMessage msg)", "modifiers": "protected", "return": "C32DocumentEntity", "signature": "C32DocumentEntity getC32Document(AsyncRetrieveMessage msg)", "full_signature": "protected C32DocumentEntity getC32Document(AsyncRetrieveMessage msg)", "class_method_signature": "NwhinDataRetriever.getC32Document(AsyncRetrieveMessage msg)", "testcase": false, "constructor": false}, {"identifier": "getNowTimestamp", "parameters": "()", "modifiers": "protected", "return": "java.sql.Timestamp", "signature": "java.sql.Timestamp getNowTimestamp()", "full_signature": "protected java.sql.Timestamp getNowTimestamp()", "class_method_signature": "NwhinDataRetriever.getNowTimestamp()", "testcase": false, "constructor": false}, {"identifier": "updateDocumentWithNewDocument", "parameters": "(String patientId, C32DocumentEntity newDoc)", "modifiers": "protected", "return": "void", "signature": "void updateDocumentWithNewDocument(String patientId, C32DocumentEntity newDoc)", "full_signature": "protected void updateDocumentWithNewDocument(String patientId, C32DocumentEntity newDoc)", "class_method_signature": "NwhinDataRetriever.updateDocumentWithNewDocument(String patientId, C32DocumentEntity newDoc)", "testcase": false, "constructor": false}, {"identifier": "getOldDocument", "parameters": "(C32DocumentEntity newDoc)", "modifiers": "protected", "return": "C32DocumentEntity", "signature": "C32DocumentEntity getOldDocument(C32DocumentEntity newDoc)", "full_signature": "protected C32DocumentEntity getOldDocument(C32DocumentEntity newDoc)", "class_method_signature": "NwhinDataRetriever.getOldDocument(C32DocumentEntity newDoc)", "testcase": false, "constructor": false}, {"identifier": "getOldDocFromList", "parameters": "(List<C32DocumentEntity> results, C32DocumentEntity newDoc)", "modifiers": "protected", "return": "C32DocumentEntity", "signature": "C32DocumentEntity getOldDocFromList(List<C32DocumentEntity> results, C32DocumentEntity newDoc)", "full_signature": "protected C32DocumentEntity getOldDocFromList(List<C32DocumentEntity> results, C32DocumentEntity newDoc)", "class_method_signature": "NwhinDataRetriever.getOldDocFromList(List<C32DocumentEntity> results, C32DocumentEntity newDoc)", "testcase": false, "constructor": false}, {"identifier": "datesEqual", "parameters": "(Calendar cal, Timestamp date1, Timestamp date2)", "modifiers": "protected", "return": "boolean", "signature": "boolean datesEqual(Calendar cal, Timestamp date1, Timestamp date2)", "full_signature": "protected boolean datesEqual(Calendar cal, Timestamp date1, Timestamp date2)", "class_method_signature": "NwhinDataRetriever.datesEqual(Calendar cal, Timestamp date1, Timestamp date2)", "testcase": false, "constructor": false}, {"identifier": "stringsEqualNullSafe", "parameters": "(String s1, String s2)", "modifiers": "protected static", "return": "boolean", "signature": "boolean stringsEqualNullSafe(String s1, String s2)", "full_signature": "protected static boolean stringsEqualNullSafe(String s1, String s2)", "class_method_signature": "NwhinDataRetriever.stringsEqualNullSafe(String s1, String s2)", "testcase": false, "constructor": false}], "file": "das/das_wrap_nwhin/src/main/java/org/osehra/das/repo/bluebutton/NwhinDataRetriever.java"}, "focal_method": {"identifier": "onMessage", "parameters": "(Message msg)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void onMessage(Message msg) {\n\t\tTextMessage tMsg = (TextMessage)msg;\n\t\tAsyncRetrieveMessage aMsg = null;\n\t\t\n\t\ttry {\n\t\t\taMsg = (AsyncRetrieveMessage)getAsyncMessageFormat().parse(tMsg.getText());\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"message parsing error for \" + msg + \": USER CANNOT BE NOTIFIED (users info is not known)\", ex);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tC32DocumentEntity doc = getC32Document(aMsg);\n\n\t\ttry {\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"Attempting to Persist Domain XML for: \" + aMsg.getPatientId());\n\t\t\t}\n\t\t\tupdateDocumentWithNewDocument(aMsg.getPatientId(), doc);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"error saving c32 document: USER NOT NOTIFIED:\" + msg, ex);\n\t\t}\n\t}", "signature": "void onMessage(Message msg)", "full_signature": "@Override public void onMessage(Message msg)", "class_method_signature": "NwhinDataRetriever.onMessage(Message msg)", "testcase": false, "constructor": false, "invocations": ["parse", "getAsyncMessageFormat", "getText", "error", "getC32Document", "isDebugEnabled", "debug", "getPatientId", "updateDocumentWithNewDocument", "getPatientId", "error"]}, "repository": {"repo_id": 7023911, "url": "https://github.com/WorldVistA/Blue-Button-Document-Adapter", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2081, "license": "licensed"}}