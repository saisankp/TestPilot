{"test_class": {"identifier": "OsmLayerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double ZOOMED_IN_SCALE = .0001;", "modifier": "private static final", "type": "double", "declarator": "ZOOMED_IN_SCALE = .0001", "var_name": "ZOOMED_IN_SCALE"}, {"original_string": "private static final double MAX_LEVEL_SCALE = .1;", "modifier": "private static final", "type": "double", "declarator": "MAX_LEVEL_SCALE = .1", "var_name": "MAX_LEVEL_SCALE"}, {"original_string": "private static final double DELTA = 1e-10;", "modifier": "private static final", "type": "double", "declarator": "DELTA = 1e-10", "var_name": "DELTA"}, {"original_string": "@Autowired\n\t@Qualifier(\"osmSingle\")\n\tprivate OsmLayer osm;", "modifier": "@Autowired\n\t@Qualifier(\"osmSingle\")\n\tprivate", "type": "OsmLayer", "declarator": "osm", "var_name": "osm"}, {"original_string": "@Autowired\n\t@Qualifier(\"osmWrongCrs\")\n\tprivate OsmLayer osmWrongCrs;", "modifier": "@Autowired\n\t@Qualifier(\"osmWrongCrs\")\n\tprivate", "type": "OsmLayer", "declarator": "osmWrongCrs", "var_name": "osmWrongCrs"}, {"original_string": "@Autowired\n\t@Qualifier(\"osmMaxLevel\")\n\tprivate OsmLayer osmMaxLevel;", "modifier": "@Autowired\n\t@Qualifier(\"osmMaxLevel\")\n\tprivate", "type": "OsmLayer", "declarator": "osmMaxLevel", "var_name": "osmMaxLevel"}, {"original_string": "@Autowired\n\t@Qualifier(\"osmCycleMap\")\n\tprivate OsmLayer osmCycleMap;", "modifier": "@Autowired\n\t@Qualifier(\"osmCycleMap\")\n\tprivate", "type": "OsmLayer", "declarator": "osmCycleMap", "var_name": "osmCycleMap"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}], "file": "plugin/layer-openstreetmap/openstreetmap/src/test/java/org/geomajas/layer/osm/OsmLayerTest.java"}, "test_case": {"identifier": "testReprojectOne", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReprojectOne() throws Exception {\n\t\tEnvelope googleEnvelope = new Envelope(10000, 10010, 5000, 5010);\n\t\t// back-transform envelope to latlon\n\t\tCrs google = geoService.getCrs2(\"EPSG:900913\");\n\t\tCrs latlon = geoService.getCrs2(\"EPSG:4326\");\n\t\tEnvelope latlonEnvelope = geoService.transform(JTS.toGeometry(googleEnvelope), google, latlon)\n\t\t\t\t.getEnvelopeInternal();\n\t\t// back-transform scale to latlon\n\t\tdouble latlonScale = ZOOMED_IN_SCALE * googleEnvelope.getWidth() / latlonEnvelope.getWidth();\n\t\t// paint with reprojection (affine is fine for now...:-)\n\t\tList<RasterTile> tiles = osm.paint(latlon, latlonEnvelope, latlonScale);\n\t\tAssert.assertEquals(1, tiles.size());\n\t\tRasterTile tile = tiles.get(0);\n\t\tAssert.assertEquals(\"http://a.tile.openstreetmap.org/4/8/7.png\", tile.getUrl());\n\t\tAssert.assertEquals(4, tile.getCode().getTileLevel());\n\t\tAssert.assertEquals(8, tile.getCode().getX());\n\t\tAssert.assertEquals(7, tile.getCode().getY());\n\t\tAssert.assertEquals(0.0, tile.getBounds().getX(), DELTA);\n\t\tAssert.assertEquals(-244.0, tile.getBounds().getY(), DELTA);\n\t\tAssert.assertEquals(244.0, tile.getBounds().getHeight(), DELTA);\n\t\tAssert.assertEquals(250.0, tile.getBounds().getWidth(), DELTA);\n\t}", "signature": "void testReprojectOne()", "full_signature": "@Test public void testReprojectOne()", "class_method_signature": "OsmLayerTest.testReprojectOne()", "testcase": true, "constructor": false, "invocations": ["getCrs2", "getCrs2", "getEnvelopeInternal", "transform", "toGeometry", "getWidth", "getWidth", "paint", "assertEquals", "size", "get", "assertEquals", "getUrl", "assertEquals", "getTileLevel", "getCode", "assertEquals", "getX", "getCode", "assertEquals", "getY", "getCode", "assertEquals", "getX", "getBounds", "assertEquals", "getY", "getBounds", "assertEquals", "getHeight", "getBounds", "assertEquals", "getWidth", "getBounds"]}, "focal_class": {"identifier": "OsmLayer", "superclass": "", "interfaces": "implements RasterLayer", "fields": [{"original_string": "public static final int DEFAULT_MAX_ZOOM_LEVEL = 19;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_MAX_ZOOM_LEVEL = 19", "var_name": "DEFAULT_MAX_ZOOM_LEVEL"}, {"original_string": "public static final int TILE_SIZE = 256;", "modifier": "public static final", "type": "int", "declarator": "TILE_SIZE = 256", "var_name": "TILE_SIZE"}, {"original_string": "@Api\n\tpublic static final List<String> OPEN_STREET_MAP_URLS = new ArrayList<String>();", "modifier": "@Api\n\tpublic static final", "type": "List<String>", "declarator": "OPEN_STREET_MAP_URLS = new ArrayList<String>()", "var_name": "OPEN_STREET_MAP_URLS"}, {"original_string": "@Api\n\tpublic static final List<String> OPEN_CYCLE_MAP_URLS = new ArrayList<String>();", "modifier": "@Api\n\tpublic static final", "type": "List<String>", "declarator": "OPEN_CYCLE_MAP_URLS = new ArrayList<String>()", "var_name": "OPEN_CYCLE_MAP_URLS"}, {"original_string": "@Deprecated\n\tpublic static final List<String> TILES_AT_HOME_MAP_URLS = new ArrayList<String>();", "modifier": "@Deprecated\n\tpublic static final", "type": "List<String>", "declarator": "TILES_AT_HOME_MAP_URLS = new ArrayList<String>()", "var_name": "TILES_AT_HOME_MAP_URLS"}, {"original_string": "@Autowired\n\tprivate DtoConverterService converterService;", "modifier": "@Autowired\n\tprivate", "type": "DtoConverterService", "declarator": "converterService", "var_name": "converterService"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}, {"original_string": "@Autowired\n\tprivate TiledRasterLayerService tileService;", "modifier": "@Autowired\n\tprivate", "type": "TiledRasterLayerService", "declarator": "tileService", "var_name": "tileService"}, {"original_string": "private TiledRasterLayerServiceState tileServiceState =\n\t\t\tnew TiledRasterLayerServiceState(OPEN_STREET_MAP_URLS, TILE_SIZE, DEFAULT_MAX_ZOOM_LEVEL);", "modifier": "private", "type": "TiledRasterLayerServiceState", "declarator": "tileServiceState =\n\t\t\tnew TiledRasterLayerServiceState(OPEN_STREET_MAP_URLS, TILE_SIZE, DEFAULT_MAX_ZOOM_LEVEL)", "var_name": "tileServiceState"}], "methods": [{"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "OsmLayer.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "@Api public", "return": "void", "signature": "void setId(String id)", "full_signature": "@Api public void setId(String id)", "class_method_signature": "OsmLayer.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "getCrs", "parameters": "()", "modifiers": "public", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getCrs()", "full_signature": "public CoordinateReferenceSystem getCrs()", "class_method_signature": "OsmLayer.getCrs()", "testcase": false, "constructor": false}, {"identifier": "setMaxZoomLevel", "parameters": "(int maxZoomLevel)", "modifiers": "@Api public", "return": "void", "signature": "void setMaxZoomLevel(int maxZoomLevel)", "full_signature": "@Api public void setMaxZoomLevel(int maxZoomLevel)", "class_method_signature": "OsmLayer.setMaxZoomLevel(int maxZoomLevel)", "testcase": false, "constructor": false}, {"identifier": "getLayerInfo", "parameters": "()", "modifiers": "public", "return": "RasterLayerInfo", "signature": "RasterLayerInfo getLayerInfo()", "full_signature": "public RasterLayerInfo getLayerInfo()", "class_method_signature": "OsmLayer.getLayerInfo()", "testcase": false, "constructor": false}, {"identifier": "setLayerInfo", "parameters": "(RasterLayerInfo layerInfo)", "modifiers": "@Api public", "return": "void", "signature": "void setLayerInfo(RasterLayerInfo layerInfo)", "full_signature": "@Api public void setLayerInfo(RasterLayerInfo layerInfo)", "class_method_signature": "OsmLayer.setLayerInfo(RasterLayerInfo layerInfo)", "testcase": false, "constructor": false}, {"identifier": "setTileUrls", "parameters": "(List<String> tileUrls)", "modifiers": "@Api public", "return": "void", "signature": "void setTileUrls(List<String> tileUrls)", "full_signature": "@Api public void setTileUrls(List<String> tileUrls)", "class_method_signature": "OsmLayer.setTileUrls(List<String> tileUrls)", "testcase": false, "constructor": false}, {"identifier": "setUrlSelectionStrategy", "parameters": "(UrlSelectionStrategy strategy)", "modifiers": "@Api public", "return": "void", "signature": "void setUrlSelectionStrategy(UrlSelectionStrategy strategy)", "full_signature": "@Api public void setUrlSelectionStrategy(UrlSelectionStrategy strategy)", "class_method_signature": "OsmLayer.setUrlSelectionStrategy(UrlSelectionStrategy strategy)", "testcase": false, "constructor": false}, {"identifier": "postConstruct", "parameters": "()", "modifiers": "@PostConstruct protected", "return": "void", "signature": "void postConstruct()", "full_signature": "@PostConstruct protected void postConstruct()", "class_method_signature": "OsmLayer.postConstruct()", "testcase": false, "constructor": false}, {"identifier": "paint", "parameters": "(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "modifiers": "public", "return": "List<RasterTile>", "signature": "List<RasterTile> paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "full_signature": "public List<RasterTile> paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "class_method_signature": "OsmLayer.paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "testcase": false, "constructor": false}], "file": "plugin/layer-openstreetmap/openstreetmap/src/main/java/org/geomajas/layer/osm/OsmLayer.java"}, "focal_method": {"identifier": "paint", "parameters": "(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "modifiers": "public", "return": "List<RasterTile>", "body": "public List<RasterTile> paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)\n\t\t\tthrows GeomajasException {\n\t\treturn tileService.paint(tileServiceState, boundsCrs, bounds, scale);\n\t}", "signature": "List<RasterTile> paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "full_signature": "public List<RasterTile> paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "class_method_signature": "OsmLayer.paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "testcase": false, "constructor": false, "invocations": ["paint"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}