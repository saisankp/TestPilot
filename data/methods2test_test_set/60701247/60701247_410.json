{"test_class": {"identifier": "IdeaJarLibraryDependencyFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IdeaSingleEntryLibraryDependency myOriginalDependency;", "modifier": "private", "type": "IdeaSingleEntryLibraryDependency", "declarator": "myOriginalDependency", "var_name": "myOriginalDependency"}, {"original_string": "private IdeaJarLibraryDependencyFactory myIdeaJarLibraryDependencyFactory;", "modifier": "private", "type": "IdeaJarLibraryDependencyFactory", "declarator": "myIdeaJarLibraryDependencyFactory", "var_name": "myIdeaJarLibraryDependencyFactory"}, {"original_string": "private GradleModuleVersion myModuleVersion;", "modifier": "private", "type": "GradleModuleVersion", "declarator": "myModuleVersion", "var_name": "myModuleVersion"}], "file": "android/testSrc/com/android/tools/idea/gradle/model/java/IdeaJarLibraryDependencyFactoryTest.java"}, "test_case": {"identifier": "testCopyWithNullBinaryPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCopyWithNullBinaryPath() {\n    when(myOriginalDependency.getFile()).thenReturn(null);\n    assertNull(myIdeaJarLibraryDependencyFactory.create(myOriginalDependency));\n  }", "signature": "void testCopyWithNullBinaryPath()", "full_signature": "@Test public void testCopyWithNullBinaryPath()", "class_method_signature": "IdeaJarLibraryDependencyFactoryTest.testCopyWithNullBinaryPath()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getFile", "assertNull", "create"]}, "focal_class": {"identifier": "IdeaJarLibraryDependencyFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "create", "parameters": "(@NotNull IdeaSingleEntryLibraryDependency original)", "modifiers": "@Nullable public", "return": "JarLibraryDependency", "signature": "JarLibraryDependency create(@NotNull IdeaSingleEntryLibraryDependency original)", "full_signature": "@Nullable public JarLibraryDependency create(@NotNull IdeaSingleEntryLibraryDependency original)", "class_method_signature": "IdeaJarLibraryDependencyFactory.create(@NotNull IdeaSingleEntryLibraryDependency original)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/gradle/model/java/IdeaJarLibraryDependencyFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(@NotNull IdeaSingleEntryLibraryDependency original)", "modifiers": "@Nullable public", "return": "JarLibraryDependency", "body": "@Nullable\n  public JarLibraryDependency create(@NotNull IdeaSingleEntryLibraryDependency original) {\n    File binaryPath = original.getFile();\n    if (binaryPath == null) {\n      return null;\n    }\n    String scope = null;\n    IdeaDependencyScope originalScope = original.getScope();\n    if (originalScope != null) {\n      scope = originalScope.getScope();\n    }\n    boolean resolved = JarLibraryDependency.isResolved(binaryPath.getName());\n    String name = JarLibraryDependency.getDependencyName(binaryPath, resolved);\n    return new JarLibraryDependency(name, binaryPath, original.getSource(), original.getJavadoc(), scope,\n                                    original.getGradleModuleVersion(), resolved);\n  }", "signature": "JarLibraryDependency create(@NotNull IdeaSingleEntryLibraryDependency original)", "full_signature": "@Nullable public JarLibraryDependency create(@NotNull IdeaSingleEntryLibraryDependency original)", "class_method_signature": "IdeaJarLibraryDependencyFactory.create(@NotNull IdeaSingleEntryLibraryDependency original)", "testcase": false, "constructor": false, "invocations": ["getFile", "getScope", "getScope", "isResolved", "getName", "getDependencyName", "getSource", "getJavadoc", "getGradleModuleVersion"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}