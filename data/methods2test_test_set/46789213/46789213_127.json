{"test_class": {"identifier": "TestPair", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/framework/util/TestPair.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToString() {\n    Pair<String, Integer> pair1 = new Pair<>(\"Foo\", 5);\n    assertEquals(\"<Foo, 5>\", pair1.toString());\n  }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "TestPair.testToString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString"]}, "focal_class": {"identifier": "Pair", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final S first;", "modifier": "private final", "type": "S", "declarator": "first", "var_name": "first"}, {"original_string": "private final T second;", "modifier": "private final", "type": "T", "declarator": "second", "var_name": "second"}], "methods": [{"identifier": "Pair", "parameters": "(S first, T second)", "modifiers": "public", "return": "", "signature": " Pair(S first, T second)", "full_signature": "public  Pair(S first, T second)", "class_method_signature": "Pair.Pair(S first, T second)", "testcase": false, "constructor": true}, {"identifier": "lazy", "parameters": "(S first, T second)", "modifiers": "public static", "return": "DRes<Pair<S, T>>", "signature": "DRes<Pair<S, T>> lazy(S first, T second)", "full_signature": "public static DRes<Pair<S, T>> lazy(S first, T second)", "class_method_signature": "Pair.lazy(S first, T second)", "testcase": false, "constructor": false}, {"identifier": "getFirst", "parameters": "()", "modifiers": "public", "return": "S", "signature": "S getFirst()", "full_signature": "public S getFirst()", "class_method_signature": "Pair.getFirst()", "testcase": false, "constructor": false}, {"identifier": "getSecond", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T getSecond()", "full_signature": "public T getSecond()", "class_method_signature": "Pair.getSecond()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Pair.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Pair.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Pair.hashCode()", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/framework/util/Pair.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return \"<\" + first + \", \" + second + \">\";\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Pair.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}