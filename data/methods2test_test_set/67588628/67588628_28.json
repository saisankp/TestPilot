{"test_class": {"identifier": "DefaultColumnEventPersistManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private DefaultColumnEventPersistManager subject;", "modifier": "@InjectMocks\n    private", "type": "DefaultColumnEventPersistManager", "declarator": "subject", "var_name": "subject"}, {"original_string": "@Mock\n    private Event<ColumnEntityPrePersist> columnEntityPrePersistEvent;", "modifier": "@Mock\n    private", "type": "Event<ColumnEntityPrePersist>", "declarator": "columnEntityPrePersistEvent", "var_name": "columnEntityPrePersistEvent"}, {"original_string": "@Mock\n    private Event<ColumnEntityPostPersist> columnEntityPostPersistEvent;", "modifier": "@Mock\n    private", "type": "Event<ColumnEntityPostPersist>", "declarator": "columnEntityPostPersistEvent", "var_name": "columnEntityPostPersistEvent"}, {"original_string": "@Mock\n    private Event<EntityPrePersist> entityPrePersistEvent;", "modifier": "@Mock\n    private", "type": "Event<EntityPrePersist>", "declarator": "entityPrePersistEvent", "var_name": "entityPrePersistEvent"}, {"original_string": "@Mock\n    private Event<EntityPostPersit> entityPostPersitEvent;", "modifier": "@Mock\n    private", "type": "Event<EntityPostPersit>", "declarator": "entityPostPersitEvent", "var_name": "entityPostPersitEvent"}, {"original_string": "@Mock\n    private Event<EntityColumnPrePersist> entityColumnPrePersist;", "modifier": "@Mock\n    private", "type": "Event<EntityColumnPrePersist>", "declarator": "entityColumnPrePersist", "var_name": "entityColumnPrePersist"}, {"original_string": "@Mock\n    private Event<EntityColumnPostPersist> entityColumnPostPersist;", "modifier": "@Mock\n    private", "type": "Event<EntityColumnPostPersist>", "declarator": "entityColumnPostPersist", "var_name": "entityColumnPostPersist"}, {"original_string": "@Mock\n    private Event<ColumnQueryExecute> columnQueryExecute;", "modifier": "@Mock\n    private", "type": "Event<ColumnQueryExecute>", "declarator": "columnQueryExecute", "var_name": "columnQueryExecute"}, {"original_string": "@Mock\n    private Event<ColumnDeleteQueryExecute> columnDeleteQueryExecute;", "modifier": "@Mock\n    private", "type": "Event<ColumnDeleteQueryExecute>", "declarator": "columnDeleteQueryExecute", "var_name": "columnDeleteQueryExecute"}], "file": "artemis-column/src/test/java/org/jnosql/artemis/column/DefaultColumnEventPersistManagerTest.java"}, "test_case": {"identifier": "shouldFirePreDeleteQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldFirePreDeleteQuery() {\n\n        ColumnDeleteQuery query = delete().from(\"person\").build();\n        subject.firePreDeleteQuery(query);\n        ArgumentCaptor<ColumnDeleteQueryExecute> captor = ArgumentCaptor.forClass(ColumnDeleteQueryExecute.class);\n        verify(columnDeleteQueryExecute).fire(captor.capture());\n        assertEquals(query, captor.getValue().getQuery());\n    }", "signature": "void shouldFirePreDeleteQuery()", "full_signature": "@Test public void shouldFirePreDeleteQuery()", "class_method_signature": "DefaultColumnEventPersistManagerTest.shouldFirePreDeleteQuery()", "testcase": true, "constructor": false, "invocations": ["build", "from", "delete", "firePreDeleteQuery", "forClass", "fire", "verify", "capture", "assertEquals", "getQuery", "getValue"]}, "focal_class": {"identifier": "DefaultColumnEventPersistManager", "superclass": "", "interfaces": "implements ColumnEventPersistManager", "fields": [{"original_string": "@Inject\n    private Event<ColumnEntityPrePersist> columnEntityPrePersistEvent;", "modifier": "@Inject\n    private", "type": "Event<ColumnEntityPrePersist>", "declarator": "columnEntityPrePersistEvent", "var_name": "columnEntityPrePersistEvent"}, {"original_string": "@Inject\n    private Event<ColumnEntityPostPersist> columnEntityPostPersistEvent;", "modifier": "@Inject\n    private", "type": "Event<ColumnEntityPostPersist>", "declarator": "columnEntityPostPersistEvent", "var_name": "columnEntityPostPersistEvent"}, {"original_string": "@Inject\n    private Event<EntityPrePersist> entityPrePersistEvent;", "modifier": "@Inject\n    private", "type": "Event<EntityPrePersist>", "declarator": "entityPrePersistEvent", "var_name": "entityPrePersistEvent"}, {"original_string": "@Inject\n    private Event<EntityPostPersit> entityPostPersitEvent;", "modifier": "@Inject\n    private", "type": "Event<EntityPostPersit>", "declarator": "entityPostPersitEvent", "var_name": "entityPostPersitEvent"}, {"original_string": "@Inject\n    private Event<EntityColumnPrePersist> entityColumnPrePersist;", "modifier": "@Inject\n    private", "type": "Event<EntityColumnPrePersist>", "declarator": "entityColumnPrePersist", "var_name": "entityColumnPrePersist"}, {"original_string": "@Inject\n    private Event<EntityColumnPostPersist> entityColumnPostPersist;", "modifier": "@Inject\n    private", "type": "Event<EntityColumnPostPersist>", "declarator": "entityColumnPostPersist", "var_name": "entityColumnPostPersist"}, {"original_string": "@Inject\n    private Event<ColumnQueryExecute> columnQueryExecute;", "modifier": "@Inject\n    private", "type": "Event<ColumnQueryExecute>", "declarator": "columnQueryExecute", "var_name": "columnQueryExecute"}, {"original_string": "@Inject\n    private Event<ColumnDeleteQueryExecute> columnDeleteQueryExecute;", "modifier": "@Inject\n    private", "type": "Event<ColumnDeleteQueryExecute>", "declarator": "columnDeleteQueryExecute", "var_name": "columnDeleteQueryExecute"}], "methods": [{"identifier": "firePreColumn", "parameters": "(ColumnEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void firePreColumn(ColumnEntity entity)", "full_signature": "@Override public void firePreColumn(ColumnEntity entity)", "class_method_signature": "DefaultColumnEventPersistManager.firePreColumn(ColumnEntity entity)", "testcase": false, "constructor": false}, {"identifier": "firePostColumn", "parameters": "(ColumnEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void firePostColumn(ColumnEntity entity)", "full_signature": "@Override public void firePostColumn(ColumnEntity entity)", "class_method_signature": "DefaultColumnEventPersistManager.firePostColumn(ColumnEntity entity)", "testcase": false, "constructor": false}, {"identifier": "firePreEntity", "parameters": "(T entity)", "modifiers": "@Override public", "return": "void", "signature": "void firePreEntity(T entity)", "full_signature": "@Override public void firePreEntity(T entity)", "class_method_signature": "DefaultColumnEventPersistManager.firePreEntity(T entity)", "testcase": false, "constructor": false}, {"identifier": "firePostEntity", "parameters": "(T entity)", "modifiers": "@Override public", "return": "void", "signature": "void firePostEntity(T entity)", "full_signature": "@Override public void firePostEntity(T entity)", "class_method_signature": "DefaultColumnEventPersistManager.firePostEntity(T entity)", "testcase": false, "constructor": false}, {"identifier": "firePreColumnEntity", "parameters": "(T entity)", "modifiers": "@Override public", "return": "void", "signature": "void firePreColumnEntity(T entity)", "full_signature": "@Override public void firePreColumnEntity(T entity)", "class_method_signature": "DefaultColumnEventPersistManager.firePreColumnEntity(T entity)", "testcase": false, "constructor": false}, {"identifier": "firePostColumnEntity", "parameters": "(T entity)", "modifiers": "@Override public", "return": "void", "signature": "void firePostColumnEntity(T entity)", "full_signature": "@Override public void firePostColumnEntity(T entity)", "class_method_signature": "DefaultColumnEventPersistManager.firePostColumnEntity(T entity)", "testcase": false, "constructor": false}, {"identifier": "firePreQuery", "parameters": "(ColumnQuery query)", "modifiers": "@Override public", "return": "void", "signature": "void firePreQuery(ColumnQuery query)", "full_signature": "@Override public void firePreQuery(ColumnQuery query)", "class_method_signature": "DefaultColumnEventPersistManager.firePreQuery(ColumnQuery query)", "testcase": false, "constructor": false}, {"identifier": "firePreDeleteQuery", "parameters": "(ColumnDeleteQuery query)", "modifiers": "@Override public", "return": "void", "signature": "void firePreDeleteQuery(ColumnDeleteQuery query)", "full_signature": "@Override public void firePreDeleteQuery(ColumnDeleteQuery query)", "class_method_signature": "DefaultColumnEventPersistManager.firePreDeleteQuery(ColumnDeleteQuery query)", "testcase": false, "constructor": false}], "file": "artemis-column/src/main/java/org/jnosql/artemis/column/DefaultColumnEventPersistManager.java"}, "focal_method": {"identifier": "firePreDeleteQuery", "parameters": "(ColumnDeleteQuery query)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void firePreDeleteQuery(ColumnDeleteQuery query) {\n        columnDeleteQueryExecute.fire(ColumnDeleteQueryExecute.of(query));\n    }", "signature": "void firePreDeleteQuery(ColumnDeleteQuery query)", "full_signature": "@Override public void firePreDeleteQuery(ColumnDeleteQuery query)", "class_method_signature": "DefaultColumnEventPersistManager.firePreDeleteQuery(ColumnDeleteQuery query)", "testcase": false, "constructor": false, "invocations": ["fire", "of"]}, "repository": {"repo_id": 67588628, "url": "https://github.com/eclipse/jnosql-artemis", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 2612, "license": "licensed"}}