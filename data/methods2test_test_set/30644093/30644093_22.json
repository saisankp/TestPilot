{"test_class": {"identifier": "OperationDocumentResolverDefaultTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String fileSeparator = FileSystems.getDefault().getSeparator();", "modifier": "private final", "type": "String", "declarator": "fileSeparator = FileSystems.getDefault().getSeparator()", "var_name": "fileSeparator"}, {"original_string": "private PathOperation operation;", "modifier": "private", "type": "PathOperation", "declarator": "operation", "var_name": "operation"}], "file": "swagger2markup/src/test/java/io/github/swagger2markup/internal/resolver/OperationDocumentResolverDefaultTest.java"}, "test_case": {"identifier": "testWithInterDocumentCrossReferences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithInterDocumentCrossReferences() {\n        Swagger2MarkupConfig config = new Swagger2MarkupConfigBuilder()\n                .withInterDocumentCrossReferences()\n                .build();\n        Swagger2MarkupConverter.SwaggerContext context = createContext(config);\n        context.setOutputPath(Paths.get(\"/tmp\"));\n\n        assertThat(new OperationDocumentResolverDefault(context).apply(operation))\n                .isEqualTo(\"paths.adoc\");\n    }", "signature": "void testWithInterDocumentCrossReferences()", "full_signature": "@Test public void testWithInterDocumentCrossReferences()", "class_method_signature": "OperationDocumentResolverDefaultTest.testWithInterDocumentCrossReferences()", "testcase": true, "constructor": false, "invocations": ["build", "withInterDocumentCrossReferences", "createContext", "setOutputPath", "get", "isEqualTo", "assertThat", "apply"]}, "focal_class": {"identifier": "OperationDocumentResolverDefault", "superclass": "extends OperationDocumentResolver", "interfaces": "", "fields": [{"original_string": "private final OperationDocumentNameResolver operationDocumentNameResolver;", "modifier": "private final", "type": "OperationDocumentNameResolver", "declarator": "operationDocumentNameResolver", "var_name": "operationDocumentNameResolver"}], "methods": [{"identifier": "OperationDocumentResolverDefault", "parameters": "(Swagger2MarkupConverter.SwaggerContext context)", "modifiers": "public", "return": "", "signature": " OperationDocumentResolverDefault(Swagger2MarkupConverter.SwaggerContext context)", "full_signature": "public  OperationDocumentResolverDefault(Swagger2MarkupConverter.SwaggerContext context)", "class_method_signature": "OperationDocumentResolverDefault.OperationDocumentResolverDefault(Swagger2MarkupConverter.SwaggerContext context)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(PathOperation operation)", "modifiers": "public", "return": "String", "signature": "String apply(PathOperation operation)", "full_signature": "public String apply(PathOperation operation)", "class_method_signature": "OperationDocumentResolverDefault.apply(PathOperation operation)", "testcase": false, "constructor": false}], "file": "swagger2markup/src/main/java/io/github/swagger2markup/internal/resolver/OperationDocumentResolverDefault.java"}, "focal_method": {"identifier": "apply", "parameters": "(PathOperation operation)", "modifiers": "public", "return": "String", "body": "public String apply(PathOperation operation) {\n        if (!config.isInterDocumentCrossReferencesEnabled() || context.getOutputPath() == null)\n            return null;\n        else\n            return defaultString(config.getInterDocumentCrossReferencesPrefix()) + operationDocumentNameResolver.apply(operation);\n    }", "signature": "String apply(PathOperation operation)", "full_signature": "public String apply(PathOperation operation)", "class_method_signature": "OperationDocumentResolverDefault.apply(PathOperation operation)", "testcase": false, "constructor": false, "invocations": ["isInterDocumentCrossReferencesEnabled", "getOutputPath", "defaultString", "getInterDocumentCrossReferencesPrefix", "apply"]}, "repository": {"repo_id": 30644093, "url": "https://github.com/Swagger2Markup/swagger2markup", "language": "Java", "is_fork": false, "fork_count": 340, "stargazer_count": 2130, "size": 5225, "license": "licensed"}}