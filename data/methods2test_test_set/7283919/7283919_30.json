{"test_class": {"identifier": "MatchableDataTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private DataRow r1;", "modifier": "@Mock private", "type": "DataRow", "declarator": "r1", "var_name": "r1"}, {"original_string": "@Mock private DataRow r2;", "modifier": "@Mock private", "type": "DataRow", "declarator": "r2", "var_name": "r2"}, {"original_string": "@Mock private DataRow r3;", "modifier": "@Mock private", "type": "DataRow", "declarator": "r3", "var_name": "r3"}, {"original_string": "@Mock private DataRow r4;", "modifier": "@Mock private", "type": "DataRow", "declarator": "r4", "var_name": "r4"}, {"original_string": "@Mock private DataTable mockedDataTable;", "modifier": "@Mock private", "type": "DataTable", "declarator": "mockedDataTable", "var_name": "mockedDataTable"}, {"original_string": "@Mock private Map<String,Object> matchingProperties;", "modifier": "@Mock private", "type": "Map<String,Object>", "declarator": "matchingProperties", "var_name": "matchingProperties"}, {"original_string": "private List<DataRow> rows;", "modifier": "private", "type": "List<DataRow>", "declarator": "rows", "var_name": "rows"}, {"original_string": "private MatchableDataTable mdt;", "modifier": "private", "type": "MatchableDataTable", "declarator": "mdt", "var_name": "mdt"}], "file": "dbfit-java/core/src/test/java/dbfit/util/MatchableDataTableTest.java"}, "test_case": {"identifier": "initiallyAllRowsShouldBeUnprocessed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void initiallyAllRowsShouldBeUnprocessed() {\n        assertEquals(mdt.getUnprocessedRows(), rows);\n    }", "signature": "void initiallyAllRowsShouldBeUnprocessed()", "full_signature": "@Test public void initiallyAllRowsShouldBeUnprocessed()", "class_method_signature": "MatchableDataTableTest.initiallyAllRowsShouldBeUnprocessed()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getUnprocessedRows"]}, "focal_class": {"identifier": "MatchableDataTable", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DataTable dt;", "modifier": "private final", "type": "DataTable", "declarator": "dt", "var_name": "dt"}, {"original_string": "private final LinkedList<DataRow> unprocessedRows;", "modifier": "private final", "type": "LinkedList<DataRow>", "declarator": "unprocessedRows", "var_name": "unprocessedRows"}], "methods": [{"identifier": "MatchableDataTable", "parameters": "(final DataTable dt)", "modifiers": "public", "return": "", "signature": " MatchableDataTable(final DataTable dt)", "full_signature": "public  MatchableDataTable(final DataTable dt)", "class_method_signature": "MatchableDataTable.MatchableDataTable(final DataTable dt)", "testcase": false, "constructor": true}, {"identifier": "findMatching", "parameters": "(final Map<String, Object> keyProperties)", "modifiers": "public", "return": "DataRow", "signature": "DataRow findMatching(final Map<String, Object> keyProperties)", "full_signature": "public DataRow findMatching(final Map<String, Object> keyProperties)", "class_method_signature": "MatchableDataTable.findMatching(final Map<String, Object> keyProperties)", "testcase": false, "constructor": false}, {"identifier": "findMatchingNothrow", "parameters": "(final Map<String, Object> keyProperties)", "modifiers": "public", "return": "DataRow", "signature": "DataRow findMatchingNothrow(final Map<String, Object> keyProperties)", "full_signature": "public DataRow findMatchingNothrow(final Map<String, Object> keyProperties)", "class_method_signature": "MatchableDataTable.findMatchingNothrow(final Map<String, Object> keyProperties)", "testcase": false, "constructor": false}, {"identifier": "findFirstUnprocessedRow", "parameters": "()", "modifiers": "public", "return": "DataRow", "signature": "DataRow findFirstUnprocessedRow()", "full_signature": "public DataRow findFirstUnprocessedRow()", "class_method_signature": "MatchableDataTable.findFirstUnprocessedRow()", "testcase": false, "constructor": false}, {"identifier": "getUnprocessedRows", "parameters": "()", "modifiers": "public", "return": "List<DataRow>", "signature": "List<DataRow> getUnprocessedRows()", "full_signature": "public List<DataRow> getUnprocessedRows()", "class_method_signature": "MatchableDataTable.getUnprocessedRows()", "testcase": false, "constructor": false}, {"identifier": "markProcessed", "parameters": "(final DataRow dr)", "modifiers": "public", "return": "void", "signature": "void markProcessed(final DataRow dr)", "full_signature": "public void markProcessed(final DataRow dr)", "class_method_signature": "MatchableDataTable.markProcessed(final DataRow dr)", "testcase": false, "constructor": false}, {"identifier": "getColumns", "parameters": "()", "modifiers": "public", "return": "List<DataColumn>", "signature": "List<DataColumn> getColumns()", "full_signature": "public List<DataColumn> getColumns()", "class_method_signature": "MatchableDataTable.getColumns()", "testcase": false, "constructor": false}, {"identifier": "verified", "parameters": "(final DataRow row)", "modifiers": "private", "return": "DataRow", "signature": "DataRow verified(final DataRow row)", "full_signature": "private DataRow verified(final DataRow row)", "class_method_signature": "MatchableDataTable.verified(final DataRow row)", "testcase": false, "constructor": false}], "file": "dbfit-java/core/src/main/java/dbfit/util/MatchableDataTable.java"}, "focal_method": {"identifier": "getUnprocessedRows", "parameters": "()", "modifiers": "public", "return": "List<DataRow>", "body": "public List<DataRow> getUnprocessedRows() {\n        return unprocessedRows;\n    }", "signature": "List<DataRow> getUnprocessedRows()", "full_signature": "public List<DataRow> getUnprocessedRows()", "class_method_signature": "MatchableDataTable.getUnprocessedRows()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}