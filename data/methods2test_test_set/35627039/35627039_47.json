{"test_class": {"identifier": "EmailNotifierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "EmailNotifier emailNotifier;", "modifier": "", "type": "EmailNotifier", "declarator": "emailNotifier", "var_name": "emailNotifier"}, {"original_string": "@Mocked\n    NotificationContext mockNotificationContext;", "modifier": "@Mocked", "type": "NotificationContext", "declarator": "mockNotificationContext", "var_name": "mockNotificationContext"}, {"original_string": "@Mocked\n    NotifierConfig mockNotifierConfig;", "modifier": "@Mocked", "type": "NotifierConfig", "declarator": "mockNotifierConfig", "var_name": "mockNotifierConfig"}, {"original_string": "@Mocked\n    Notification mockNotification;", "modifier": "@Mocked", "type": "Notification", "declarator": "mockNotification", "var_name": "mockNotification"}, {"original_string": "@Mocked\n    SMTPTransport mockTransport;", "modifier": "@Mocked", "type": "SMTPTransport", "declarator": "mockTransport", "var_name": "mockTransport"}, {"original_string": "@Mocked\n    TransportEvent mockTransportEvent;", "modifier": "@Mocked", "type": "TransportEvent", "declarator": "mockTransportEvent", "var_name": "mockTransportEvent"}], "file": "streams/notifier/src/test/java/com/hortonworks/streamline/streams/notifiers/EmailNotifierTest.java"}, "test_case": {"identifier": "testMessageNotDelivered", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMessageNotDelivered() throws Exception {\n\n    }", "signature": "void testMessageNotDelivered()", "full_signature": "@Test public void testMessageNotDelivered()", "class_method_signature": "EmailNotifierTest.testMessageNotDelivered()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "EmailNotifier", "superclass": "", "interfaces": "implements Notifier, TransportListener", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(EmailNotifier.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(EmailNotifier.class)", "var_name": "LOG"}, {"original_string": "private static final Field PROP_USERNAME = field(\"username\", \"\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_USERNAME = field(\"username\", \"\")", "var_name": "PROP_USERNAME"}, {"original_string": "private static final Field PROP_PASSWORD = field(\"password\", \"\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_PASSWORD = field(\"password\", \"\")", "var_name": "PROP_PASSWORD"}, {"original_string": "private static final Field PROP_HOST = field(\"host\", \"localhost\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_HOST = field(\"host\", \"localhost\")", "var_name": "PROP_HOST"}, {"original_string": "private static final Field PROP_PORT = field(\"port\", \"25\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_PORT = field(\"port\", \"25\")", "var_name": "PROP_PORT"}, {"original_string": "private static final Field PROP_SSL = field(\"ssl\", \"false\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_SSL = field(\"ssl\", \"false\")", "var_name": "PROP_SSL"}, {"original_string": "private static final Field PROP_STARTTLS = field(\"starttls\", \"false\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_STARTTLS = field(\"starttls\", \"false\")", "var_name": "PROP_STARTTLS"}, {"original_string": "private static final Field PROP_DEBUG = field(\"debug\", \"false\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_DEBUG = field(\"debug\", \"false\")", "var_name": "PROP_DEBUG"}, {"original_string": "private static final Field PROP_PROTOCOL = field(\"protocol\", \"smtp\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_PROTOCOL = field(\"protocol\", \"smtp\")", "var_name": "PROP_PROTOCOL"}, {"original_string": "private static final Field PROP_AUTH = field(\"auth\", \"true\");", "modifier": "private static final", "type": "Field", "declarator": "PROP_AUTH = field(\"auth\", \"true\")", "var_name": "PROP_AUTH"}, {"original_string": "private static final String SMTP_HOST = \"mail.smtp.host\";", "modifier": "private static final", "type": "String", "declarator": "SMTP_HOST = \"mail.smtp.host\"", "var_name": "SMTP_HOST"}, {"original_string": "private static final String SMTP_PORT = \"mail.smtp.port\";", "modifier": "private static final", "type": "String", "declarator": "SMTP_PORT = \"mail.smtp.port\"", "var_name": "SMTP_PORT"}, {"original_string": "private static final String SMTP_AUTH = \"mail.smtp.auth\";", "modifier": "private static final", "type": "String", "declarator": "SMTP_AUTH = \"mail.smtp.auth\"", "var_name": "SMTP_AUTH"}, {"original_string": "private static final String SMTP_SSL_ENABLE = \"mail.smtp.ssl.enable\";", "modifier": "private static final", "type": "String", "declarator": "SMTP_SSL_ENABLE = \"mail.smtp.ssl.enable\"", "var_name": "SMTP_SSL_ENABLE"}, {"original_string": "private static final String SMTP_STARTTLS_ENABLE = \"mail.smtp.starttls.enable\";", "modifier": "private static final", "type": "String", "declarator": "SMTP_STARTTLS_ENABLE = \"mail.smtp.starttls.enable\"", "var_name": "SMTP_STARTTLS_ENABLE"}, {"original_string": "private static final String MAIL_TRANSPORT_PROTOCOL = \"mail.transport.protocol\";", "modifier": "private static final", "type": "String", "declarator": "MAIL_TRANSPORT_PROTOCOL = \"mail.transport.protocol\"", "var_name": "MAIL_TRANSPORT_PROTOCOL"}, {"original_string": "private static final Field FIELD_FROM = field(\"from\", \"admin@localhost\");", "modifier": "private static final", "type": "Field", "declarator": "FIELD_FROM = field(\"from\", \"admin@localhost\")", "var_name": "FIELD_FROM"}, {"original_string": "private static final Field FIELD_TO = field(\"to\", \"\");", "modifier": "private static final", "type": "Field", "declarator": "FIELD_TO = field(\"to\", \"\")", "var_name": "FIELD_TO"}, {"original_string": "private static final Field FIELD_SUBJECT = field(\"subject\", \"Alert\");", "modifier": "private static final", "type": "Field", "declarator": "FIELD_SUBJECT = field(\"subject\", \"Alert\")", "var_name": "FIELD_SUBJECT"}, {"original_string": "private static final Field FIELD_CONTENT_TYPE = field(\"contentType\", \"text/plain\");", "modifier": "private static final", "type": "Field", "declarator": "FIELD_CONTENT_TYPE = field(\"contentType\", \"text/plain\")", "var_name": "FIELD_CONTENT_TYPE"}, {"original_string": "private static final Field FIELD_BODY = field(\"body\", \"Got an alert\");", "modifier": "private static final", "type": "Field", "declarator": "FIELD_BODY = field(\"body\", \"Got an alert\")", "var_name": "FIELD_BODY"}, {"original_string": "private static final Field[] MSG_FIELDS = {FIELD_FROM, FIELD_TO, FIELD_SUBJECT, FIELD_CONTENT_TYPE, FIELD_BODY};", "modifier": "private static final", "type": "Field[]", "declarator": "MSG_FIELDS = {FIELD_FROM, FIELD_TO, FIELD_SUBJECT, FIELD_CONTENT_TYPE, FIELD_BODY}", "var_name": "MSG_FIELDS"}, {"original_string": "private NotificationContext ctx;", "modifier": "private", "type": "NotificationContext", "declarator": "ctx", "var_name": "ctx"}, {"original_string": "private final Map<Message, String> msgNotificationMap = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<Message, String>", "declarator": "msgNotificationMap = new ConcurrentHashMap<>()", "var_name": "msgNotificationMap"}, {"original_string": "private Map<String, String> msgFields;", "modifier": "private", "type": "Map<String, String>", "declarator": "msgFields", "var_name": "msgFields"}, {"original_string": "private Session emailSession;", "modifier": "private", "type": "Session", "declarator": "emailSession", "var_name": "emailSession"}, {"original_string": "private Transport emailTransport;", "modifier": "private", "type": "Transport", "declarator": "emailTransport", "var_name": "emailTransport"}], "methods": [{"identifier": "field", "parameters": "(String key, String defaultVal)", "modifiers": "private static", "return": "Field", "signature": "Field field(String key, String defaultVal)", "full_signature": "private static Field field(String key, String defaultVal)", "class_method_signature": "EmailNotifier.field(String key, String defaultVal)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(NotificationContext ctx)", "modifiers": "@Override public", "return": "void", "signature": "void open(NotificationContext ctx)", "full_signature": "@Override public void open(NotificationContext ctx)", "class_method_signature": "EmailNotifier.open(NotificationContext ctx)", "testcase": false, "constructor": false}, {"identifier": "messageDelivered", "parameters": "(TransportEvent event)", "modifiers": "public", "return": "void", "signature": "void messageDelivered(TransportEvent event)", "full_signature": "public void messageDelivered(TransportEvent event)", "class_method_signature": "EmailNotifier.messageDelivered(TransportEvent event)", "testcase": false, "constructor": false}, {"identifier": "messageNotDelivered", "parameters": "(TransportEvent event)", "modifiers": "public", "return": "void", "signature": "void messageNotDelivered(TransportEvent event)", "full_signature": "public void messageNotDelivered(TransportEvent event)", "class_method_signature": "EmailNotifier.messageNotDelivered(TransportEvent event)", "testcase": false, "constructor": false}, {"identifier": "messagePartiallyDelivered", "parameters": "(TransportEvent event)", "modifiers": "public", "return": "void", "signature": "void messagePartiallyDelivered(TransportEvent event)", "full_signature": "public void messagePartiallyDelivered(TransportEvent event)", "class_method_signature": "EmailNotifier.messagePartiallyDelivered(TransportEvent event)", "testcase": false, "constructor": false}, {"identifier": "notify", "parameters": "(Notification notification)", "modifiers": "@Override public", "return": "void", "signature": "void notify(Notification notification)", "full_signature": "@Override public void notify(Notification notification)", "class_method_signature": "EmailNotifier.notify(Notification notification)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "EmailNotifier.close()", "testcase": false, "constructor": false}, {"identifier": "isPull", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPull()", "full_signature": "@Override public boolean isPull()", "class_method_signature": "EmailNotifier.isPull()", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getFields()", "full_signature": "@Override public List<String> getFields()", "class_method_signature": "EmailNotifier.getFields()", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "@Override public", "return": "NotificationContext", "signature": "NotificationContext getContext()", "full_signature": "@Override public NotificationContext getContext()", "class_method_signature": "EmailNotifier.getContext()", "testcase": false, "constructor": false}, {"identifier": "getMsgFields", "parameters": "(Map<String, Object> values, Map<String, String> defaults)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getMsgFields(Map<String, Object> values, Map<String, String> defaults)", "full_signature": "private Map<String, String> getMsgFields(Map<String, Object> values, Map<String, String> defaults)", "class_method_signature": "EmailNotifier.getMsgFields(Map<String, Object> values, Map<String, String> defaults)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Properties properties, Field field)", "modifiers": "private", "return": "String", "signature": "String getProperty(Properties properties, Field field)", "full_signature": "private String getProperty(Properties properties, Field field)", "class_method_signature": "EmailNotifier.getProperty(Properties properties, Field field)", "testcase": false, "constructor": false}, {"identifier": "getEmailSession", "parameters": "(Properties properties)", "modifiers": "private", "return": "Session", "signature": "Session getEmailSession(Properties properties)", "full_signature": "private Session getEmailSession(Properties properties)", "class_method_signature": "EmailNotifier.getEmailSession(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "getEmailTransport", "parameters": "(Session session, TransportListener listener)", "modifiers": "private", "return": "Transport", "signature": "Transport getEmailTransport(Session session, TransportListener listener)", "full_signature": "private Transport getEmailTransport(Session session, TransportListener listener)", "class_method_signature": "EmailNotifier.getEmailTransport(Session session, TransportListener listener)", "testcase": false, "constructor": false}, {"identifier": "getEmailMessage", "parameters": "(Map<String, String> fields)", "modifiers": "private", "return": "Message", "signature": "Message getEmailMessage(Map<String, String> fields)", "full_signature": "private Message getEmailMessage(Map<String, String> fields)", "class_method_signature": "EmailNotifier.getEmailMessage(Map<String, String> fields)", "testcase": false, "constructor": false}, {"identifier": "handleFail", "parameters": "(TransportEvent event)", "modifiers": "private", "return": "void", "signature": "void handleFail(TransportEvent event)", "full_signature": "private void handleFail(TransportEvent event)", "class_method_signature": "EmailNotifier.handleFail(TransportEvent event)", "testcase": false, "constructor": false}], "file": "streams/notifier/src/main/java/com/hortonworks/streamline/streams/notifiers/EmailNotifier.java"}, "focal_method": {"identifier": "messageNotDelivered", "parameters": "(TransportEvent event)", "modifiers": "public", "return": "void", "body": "public void messageNotDelivered(TransportEvent event) {\n        LOG.debug(\"Got messageNotDelivered event {}\", event);\n        handleFail(event);\n    }", "signature": "void messageNotDelivered(TransportEvent event)", "full_signature": "public void messageNotDelivered(TransportEvent event)", "class_method_signature": "EmailNotifier.messageNotDelivered(TransportEvent event)", "testcase": false, "constructor": false, "invocations": ["debug", "handleFail"]}, "repository": {"repo_id": 35627039, "url": "https://github.com/hortonworks/streamline", "language": "Java", "is_fork": false, "fork_count": 94, "stargazer_count": 147, "size": 69226, "license": "licensed"}}