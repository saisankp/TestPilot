{"test_class": {"identifier": "QueryStringParserTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "base/lang/src/test/java/leap/lang/http/QueryStringParserTest.java"}, "test_case": {"identifier": "testSingle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSingle() {\n        Map<String, List<String>> params = QueryStringParser.parseMap(\"a=b&c=d%20e\");\n        assertEquals(2, params.size());\n        assertEquals(\"b\", params.get(\"a\").get(0));\n        assertEquals(\"d e\",params.get(\"c\").get(0));\n    }", "signature": "void testSingle()", "full_signature": "@Test public void testSingle()", "class_method_signature": "QueryStringParserTest.testSingle()", "testcase": true, "constructor": false, "invocations": ["parseMap", "assertEquals", "size", "assertEquals", "get", "get", "assertEquals", "get", "get"]}, "focal_class": {"identifier": "QueryStringParser", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parse", "parameters": "(String s)", "modifiers": "public static", "return": "QueryString", "signature": "QueryString parse(String s)", "full_signature": "public static QueryString parse(String s)", "class_method_signature": "QueryStringParser.parse(String s)", "testcase": false, "constructor": false}, {"identifier": "parseMap", "parameters": "(String s)", "modifiers": "public static", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> parseMap(String s)", "full_signature": "public static Map<String, List<String>> parseMap(String s)", "class_method_signature": "QueryStringParser.parseMap(String s)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String s, Map<String, List<String>> params)", "modifiers": "private static", "return": "void", "signature": "void parse(String s, Map<String, List<String>> params)", "full_signature": "private static void parse(String s, Map<String, List<String>> params)", "class_method_signature": "QueryStringParser.parse(String s, Map<String, List<String>> params)", "testcase": false, "constructor": false}, {"identifier": "addParam", "parameters": "(Map<String, List<String>> params, String name, String value)", "modifiers": "private static", "return": "boolean", "signature": "boolean addParam(Map<String, List<String>> params, String name, String value)", "full_signature": "private static boolean addParam(Map<String, List<String>> params, String name, String value)", "class_method_signature": "QueryStringParser.addParam(Map<String, List<String>> params, String name, String value)", "testcase": false, "constructor": false}, {"identifier": "QueryStringParser", "parameters": "()", "modifiers": "protected", "return": "", "signature": " QueryStringParser()", "full_signature": "protected  QueryStringParser()", "class_method_signature": "QueryStringParser.QueryStringParser()", "testcase": false, "constructor": true}], "file": "base/lang/src/main/java/leap/lang/http/QueryStringParser.java"}, "focal_method": {"identifier": "parseMap", "parameters": "(String s)", "modifiers": "public static", "return": "Map<String, List<String>>", "body": "public static Map<String, List<String>> parseMap(String s) {\n        if(null == s || s.length() == 0) {\n            return Collections.emptyMap();\n        }\n            \n        Map<String, List<String>> params = new LinkedHashMap<>();\n        \n        parse(s, params);\n        \n        return params;\n    }", "signature": "Map<String, List<String>> parseMap(String s)", "full_signature": "public static Map<String, List<String>> parseMap(String s)", "class_method_signature": "QueryStringParser.parseMap(String s)", "testcase": false, "constructor": false, "invocations": ["length", "emptyMap", "parse"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}