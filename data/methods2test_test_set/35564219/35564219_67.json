{"test_class": {"identifier": "TextViewTargetTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/targets/TextViewTargetTest.java"}, "test_case": {"identifier": "testFadeCreatesAnimation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFadeCreatesAnimation() {\n        TextView textView = new TextView(RuntimeEnvironment.application);\n        TextViewTarget target = new TextViewTarget(textView);\n        target.placeHolder(new ColorDrawable(Color.RED));\n        target.error(new ColorDrawable(Color.BLUE));\n        Assert.assertNull(target.animation());\n        target.fade();\n        Assert.assertNotNull(target.animation());\n    }", "signature": "void testFadeCreatesAnimation()", "full_signature": "@Test public void testFadeCreatesAnimation()", "class_method_signature": "TextViewTargetTest.testFadeCreatesAnimation()", "testcase": true, "constructor": false, "invocations": ["placeHolder", "error", "assertNull", "animation", "fade", "assertNotNull", "animation"]}, "focal_class": {"identifier": "TextViewTarget", "superclass": "extends ViewTarget<TextView>", "interfaces": "", "fields": [{"original_string": "public static final int LEFT = 0;", "modifier": "public static final", "type": "int", "declarator": "LEFT = 0", "var_name": "LEFT"}, {"original_string": "public static final int TOP = 1;", "modifier": "public static final", "type": "int", "declarator": "TOP = 1", "var_name": "TOP"}, {"original_string": "public static final int RIGHT = 2;", "modifier": "public static final", "type": "int", "declarator": "RIGHT = 2", "var_name": "RIGHT"}, {"original_string": "public static final int BOTTOM = 3;", "modifier": "public static final", "type": "int", "declarator": "BOTTOM = 3", "var_name": "BOTTOM"}, {"original_string": "private int location = LEFT;", "modifier": "private", "type": "int", "declarator": "location = LEFT", "var_name": "location"}, {"original_string": "private int boundsLeft = -1;", "modifier": "private", "type": "int", "declarator": "boundsLeft = -1", "var_name": "boundsLeft"}, {"original_string": "private int boundsTop = -1;", "modifier": "private", "type": "int", "declarator": "boundsTop = -1", "var_name": "boundsTop"}, {"original_string": "private int boundsRight = -1;", "modifier": "private", "type": "int", "declarator": "boundsRight = -1", "var_name": "boundsRight"}, {"original_string": "private int boundsBottom = -1;", "modifier": "private", "type": "int", "declarator": "boundsBottom = -1", "var_name": "boundsBottom"}], "methods": [{"identifier": "TextViewTarget", "parameters": "(TextView textView)", "modifiers": "public", "return": "", "signature": " TextViewTarget(TextView textView)", "full_signature": "public  TextViewTarget(TextView textView)", "class_method_signature": "TextViewTarget.TextViewTarget(TextView textView)", "testcase": false, "constructor": true}, {"identifier": "TextViewTarget", "parameters": "(MirageRequest request, TextView textView)", "modifiers": "public", "return": "", "signature": " TextViewTarget(MirageRequest request, TextView textView)", "full_signature": "public  TextViewTarget(MirageRequest request, TextView textView)", "class_method_signature": "TextViewTarget.TextViewTarget(MirageRequest request, TextView textView)", "testcase": false, "constructor": true}, {"identifier": "location", "parameters": "(@Location int location)", "modifiers": "public", "return": "TextViewTarget", "signature": "TextViewTarget location(@Location int location)", "full_signature": "public TextViewTarget location(@Location int location)", "class_method_signature": "TextViewTarget.location(@Location int location)", "testcase": false, "constructor": false}, {"identifier": "bounds", "parameters": "(int left, int top, int right, int bottom)", "modifiers": "public", "return": "TextViewTarget", "signature": "TextViewTarget bounds(int left, int top, int right, int bottom)", "full_signature": "public TextViewTarget bounds(int left, int top, int right, int bottom)", "class_method_signature": "TextViewTarget.bounds(int left, int top, int right, int bottom)", "testcase": false, "constructor": false}, {"identifier": "onPreparingLoad", "parameters": "(TextView view)", "modifiers": "@Override protected", "return": "void", "signature": "void onPreparingLoad(TextView view)", "full_signature": "@Override protected void onPreparingLoad(TextView view)", "class_method_signature": "TextViewTarget.onPreparingLoad(TextView view)", "testcase": false, "constructor": false}, {"identifier": "onResult", "parameters": "(TextView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "modifiers": "@Override protected", "return": "void", "signature": "void onResult(TextView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "full_signature": "@Override protected void onResult(TextView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "class_method_signature": "TextViewTarget.onResult(TextView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(TextView view, Exception e, Mirage.Source source, MirageRequest request)", "modifiers": "@Override protected", "return": "void", "signature": "void onError(TextView view, Exception e, Mirage.Source source, MirageRequest request)", "full_signature": "@Override protected void onError(TextView view, Exception e, Mirage.Source source, MirageRequest request)", "class_method_signature": "TextViewTarget.onError(TextView view, Exception e, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "fade", "parameters": "()", "modifiers": "@Override public", "return": "ViewTarget<TextView>", "signature": "ViewTarget<TextView> fade()", "full_signature": "@Override public ViewTarget<TextView> fade()", "class_method_signature": "TextViewTarget.fade()", "testcase": false, "constructor": false}, {"identifier": "placeDrawable", "parameters": "(TextView view, @DrawableRes int resId)", "modifiers": "private", "return": "void", "signature": "void placeDrawable(TextView view, @DrawableRes int resId)", "full_signature": "private void placeDrawable(TextView view, @DrawableRes int resId)", "class_method_signature": "TextViewTarget.placeDrawable(TextView view, @DrawableRes int resId)", "testcase": false, "constructor": false}, {"identifier": "placeDrawable", "parameters": "(TextView view, Drawable drawable)", "modifiers": "private", "return": "void", "signature": "void placeDrawable(TextView view, Drawable drawable)", "full_signature": "private void placeDrawable(TextView view, Drawable drawable)", "class_method_signature": "TextViewTarget.placeDrawable(TextView view, Drawable drawable)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/targets/TextViewTarget.java"}, "focal_method": {"identifier": "fade", "parameters": "()", "modifiers": "@Override public", "return": "ViewTarget<TextView>", "body": "@Override\n\tpublic ViewTarget<TextView> fade() {\n        int loc = TextViewDrawableCrossFadeAnimation.LEFT;\n        switch (location) {\n            case LEFT: loc = TextViewDrawableCrossFadeAnimation.LEFT; break;\n            case TOP: loc = TextViewDrawableCrossFadeAnimation.TOP; break;\n            case RIGHT: loc = TextViewDrawableCrossFadeAnimation.RIGHT; break;\n            case BOTTOM: loc = TextViewDrawableCrossFadeAnimation.BOTTOM; break;\n        }\n        TextViewDrawableCrossFadeAnimation ani = new TextViewDrawableCrossFadeAnimation();\n        ani.setLocation(loc);\n        if (boundsLeft > -1) {\n            ani.setBounds(boundsLeft, boundsTop, boundsRight, boundsBottom);\n        }\n\t\treturn animation(ani);\n\t}", "signature": "ViewTarget<TextView> fade()", "full_signature": "@Override public ViewTarget<TextView> fade()", "class_method_signature": "TextViewTarget.fade()", "testcase": false, "constructor": false, "invocations": ["setLocation", "setBounds", "animation"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}