{"test_class": {"identifier": "QueryResultFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/query/QueryResultFacadeTest.java"}, "test_case": {"identifier": "testGetColumnNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetColumnNames() throws Exception {\n        QueryResult delegate = mock(QueryResult.class);\n        QueryResultFacade<Session> facade = getFacade(delegate);\n        final String[] value = new String[0];\n        when(delegate.getColumnNames()).thenReturn(value);\n        assertSame(\"same value\", value, facade.getColumnNames());\n    }", "signature": "void testGetColumnNames()", "full_signature": "@Test public void testGetColumnNames()", "class_method_signature": "QueryResultFacadeTest.testGetColumnNames()", "testcase": true, "constructor": false, "invocations": ["mock", "getFacade", "thenReturn", "when", "getColumnNames", "assertSame", "getColumnNames"]}, "focal_class": {"identifier": "QueryResultFacade", "superclass": "", "interfaces": "implements QueryResult", "fields": [{"original_string": "private final @NotNull QueryResult delegate;", "modifier": "private final @NotNull", "type": "QueryResult", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final @NotNull SessionFacade<S> session;", "modifier": "private final @NotNull", "type": "SessionFacade<S>", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "QueryResultFacade", "parameters": "(final @NotNull QueryResult delegate, final @NotNull SessionFacade<S> session)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " QueryResultFacade(final @NotNull QueryResult delegate, final @NotNull SessionFacade<S> session)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  QueryResultFacade(final @NotNull QueryResult delegate, final @NotNull SessionFacade<S> session)", "class_method_signature": "QueryResultFacade.QueryResultFacade(final @NotNull QueryResult delegate, final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "getColumnNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getColumnNames()", "full_signature": "@Override public String[] getColumnNames()", "class_method_signature": "QueryResultFacade.getColumnNames()", "testcase": false, "constructor": false}, {"identifier": "getRows", "parameters": "()", "modifiers": "@Override public", "return": "RowIterator", "signature": "RowIterator getRows()", "full_signature": "@Override public RowIterator getRows()", "class_method_signature": "QueryResultFacade.getRows()", "testcase": false, "constructor": false}, {"identifier": "getNodes", "parameters": "()", "modifiers": "@Override public", "return": "NodeIterator", "signature": "NodeIterator getNodes()", "full_signature": "@Override public NodeIterator getNodes()", "class_method_signature": "QueryResultFacade.getNodes()", "testcase": false, "constructor": false}, {"identifier": "getSelectorNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getSelectorNames()", "full_signature": "@Override public String[] getSelectorNames()", "class_method_signature": "QueryResultFacade.getSelectorNames()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/query/QueryResultFacade.java"}, "focal_method": {"identifier": "getColumnNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "body": "@Override\n    public String[] getColumnNames() throws RepositoryException {\n        return delegate.getColumnNames();\n    }", "signature": "String[] getColumnNames()", "full_signature": "@Override public String[] getColumnNames()", "class_method_signature": "QueryResultFacade.getColumnNames()", "testcase": false, "constructor": false, "invocations": ["getColumnNames"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}