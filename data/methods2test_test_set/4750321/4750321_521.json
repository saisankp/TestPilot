{"test_class": {"identifier": "DefaultTemporalGeometricPrimitiveTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TemporalGeometricPrimitive temporalGeomericPrimitive1;", "modifier": "private", "type": "TemporalGeometricPrimitive", "declarator": "temporalGeomericPrimitive1", "var_name": "temporalGeomericPrimitive1"}, {"original_string": "private TemporalGeometricPrimitive temporalGeomericPrimitive2;", "modifier": "private", "type": "TemporalGeometricPrimitive", "declarator": "temporalGeomericPrimitive2", "var_name": "temporalGeomericPrimitive2"}, {"original_string": "private Position position1;", "modifier": "private", "type": "Position", "declarator": "position1", "var_name": "position1"}, {"original_string": "private Position position2;", "modifier": "private", "type": "Position", "declarator": "position2", "var_name": "position2"}, {"original_string": "private Calendar cal = Calendar.getInstance();", "modifier": "private", "type": "Calendar", "declarator": "cal = Calendar.getInstance()", "var_name": "cal"}], "file": "modules/library/main/src/test/java/org/geotools/temporal/object/DefaultTemporalGeometricPrimitiveTest.java"}, "test_case": {"identifier": "testLength", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLength() {\n        cal.set(2020, 0, 1);\n        temporalGeomericPrimitive1 = new DefaultPeriod(new DefaultInstant(position1), new DefaultInstant(position2));\n        temporalGeomericPrimitive2 = new DefaultPeriod(new DefaultInstant(position2), new DefaultInstant(new DefaultPosition(cal.getTime())));\n        Duration result = temporalGeomericPrimitive1.length();\n        assertFalse(temporalGeomericPrimitive2.length().equals(result));\n    }", "signature": "void testLength()", "full_signature": "@Test public void testLength()", "class_method_signature": "DefaultTemporalGeometricPrimitiveTest.testLength()", "testcase": true, "constructor": false, "invocations": ["set", "getTime", "length", "assertFalse", "equals", "length"]}, "focal_class": {"identifier": "DefaultTemporalGeometricPrimitive", "superclass": "extends DefaultTemporalPrimitive", "interfaces": "implements TemporalGeometricPrimitive, Separation", "fields": [], "methods": [{"identifier": "distance", "parameters": "(TemporalGeometricPrimitive other)", "modifiers": "public", "return": "Duration", "signature": "Duration distance(TemporalGeometricPrimitive other)", "full_signature": "public Duration distance(TemporalGeometricPrimitive other)", "class_method_signature": "DefaultTemporalGeometricPrimitive.distance(TemporalGeometricPrimitive other)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "Duration", "signature": "Duration length()", "full_signature": "public Duration length()", "class_method_signature": "DefaultTemporalGeometricPrimitive.length()", "testcase": false, "constructor": false}], "file": "modules/library/main/src/main/java/org/geotools/temporal/object/DefaultTemporalGeometricPrimitive.java"}, "focal_method": {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "Duration", "body": "public Duration length() {\n        Duration response = null;\n        long diff = 0L;\n        if (this instanceof Instant) {\n            response = new DefaultPeriodDuration(Math.abs(diff));\n            return response;\n        } else {\n            if (this instanceof Period) {\n                if (((Period) this).getBeginning() != null &&\n                        ((Period) this).getEnding() != null) {\n                    response = ((DefaultInstant) ((Period) this).getBeginning()).distance(((DefaultInstant) ((Period) this).getEnding()));\n                    return response;\n                }\n            }\n            return null;\n        }\n    }", "signature": "Duration length()", "full_signature": "public Duration length()", "class_method_signature": "DefaultTemporalGeometricPrimitive.length()", "testcase": false, "constructor": false, "invocations": ["abs", "getBeginning", "getEnding", "distance", "getBeginning", "getEnding"]}, "repository": {"repo_id": 4750321, "url": "https://github.com/HGitMaster/geotools-osgi", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 114107, "license": "licensed"}}