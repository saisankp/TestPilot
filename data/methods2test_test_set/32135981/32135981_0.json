{"test_class": {"identifier": "ExceptionHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "maven-plugin/src/test/java/echo/exception/ExceptionHandlerTest.java"}, "test_case": {"identifier": "failureExceptionShouldThrowMojoFailureException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void failureExceptionShouldThrowMojoFailureException() throws MojoFailureException {\n        FailureException failureException = new FailureException(\"Gurka\");\n\n        expectedException.expect(MojoFailureException.class);\n        expectedException.expectMessage(\"Gurka\");\n\n        new ExceptionHandler(failureException).throwMojoFailureException();\n    }", "signature": "void failureExceptionShouldThrowMojoFailureException()", "full_signature": "@Test public void failureExceptionShouldThrowMojoFailureException()", "class_method_signature": "ExceptionHandlerTest.failureExceptionShouldThrowMojoFailureException()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "throwMojoFailureException"]}, "focal_class": {"identifier": "ExceptionHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final FailureException fex;", "modifier": "private final", "type": "FailureException", "declarator": "fex", "var_name": "fex"}], "methods": [{"identifier": "ExceptionHandler", "parameters": "(FailureException fex)", "modifiers": "public", "return": "", "signature": " ExceptionHandler(FailureException fex)", "full_signature": "public  ExceptionHandler(FailureException fex)", "class_method_signature": "ExceptionHandler.ExceptionHandler(FailureException fex)", "testcase": false, "constructor": true}, {"identifier": "throwMojoFailureException", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void throwMojoFailureException()", "full_signature": "public void throwMojoFailureException()", "class_method_signature": "ExceptionHandler.throwMojoFailureException()", "testcase": false, "constructor": false}], "file": "maven-plugin/src/main/java/echo/exception/ExceptionHandler.java"}, "focal_method": {"identifier": "throwMojoFailureException", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void throwMojoFailureException() throws MojoFailureException {\n        if (fex.getCause() != null) {\n            throw new MojoFailureException(fex.getMessage(), fex.getCause());\n        } else {\n            throw new MojoFailureException(fex.getMessage());\n        }\n    }", "signature": "void throwMojoFailureException()", "full_signature": "public void throwMojoFailureException()", "class_method_signature": "ExceptionHandler.throwMojoFailureException()", "testcase": false, "constructor": false, "invocations": ["getCause", "getMessage", "getCause", "getMessage"]}, "repository": {"repo_id": 32135981, "url": "https://github.com/Ekryd/echo-maven-plugin", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 156, "license": "licensed"}}