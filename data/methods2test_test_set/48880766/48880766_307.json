{"test_class": {"identifier": "TimeColumnTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TimeColumn column1;", "modifier": "private", "type": "TimeColumn", "declarator": "column1", "var_name": "column1"}], "file": "core/src/test/java/tech/tablesaw/api/TimeColumnTest.java"}, "test_case": {"identifier": "testMinute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMinute() {\n    fillColumn();\n    IntColumn minute = column1.minute();\n    assertEquals(4, minute.get(0), 0.001);\n    assertEquals(15, minute.get(1), 0.001);\n    assertNull(minute.get(2));\n  }", "signature": "void testMinute()", "full_signature": "@Test public void testMinute()", "class_method_signature": "TimeColumnTest.testMinute()", "testcase": true, "constructor": false, "invocations": ["fillColumn", "minute", "assertEquals", "get", "assertEquals", "get", "assertNull", "get"]}, "focal_class": {"identifier": "TimeColumn", "superclass": "extends AbstractColumn<TimeColumn, LocalTime>", "interfaces": "implements CategoricalColumn<LocalTime>,\n        TimeFilters,\n        TimeFillers<TimeColumn>,\n        TimeMapFunctions", "fields": [{"original_string": "private TimeColumnFormatter printFormatter = new TimeColumnFormatter();", "modifier": "private", "type": "TimeColumnFormatter", "declarator": "printFormatter = new TimeColumnFormatter()", "var_name": "printFormatter"}, {"original_string": "private IntArrayList data;", "modifier": "private", "type": "IntArrayList", "declarator": "data", "var_name": "data"}, {"original_string": "private final IntComparator comparator =\n      (r1, r2) -> {\n        int f1 = getIntInternal(r1);\n        int f2 = getIntInternal(r2);\n        return Integer.compare(f1, f2);\n      };", "modifier": "private final", "type": "IntComparator", "declarator": "comparator =\n      (r1, r2) -> {\n        int f1 = getIntInternal(r1);\n        int f2 = getIntInternal(r2);\n        return Integer.compare(f1, f2);\n      }", "var_name": "comparator"}], "methods": [{"identifier": "TimeColumn", "parameters": "(String name, IntArrayList times)", "modifiers": "private", "return": "", "signature": " TimeColumn(String name, IntArrayList times)", "full_signature": "private  TimeColumn(String name, IntArrayList times)", "class_method_signature": "TimeColumn.TimeColumn(String name, IntArrayList times)", "testcase": false, "constructor": true}, {"identifier": "TimeColumn", "parameters": "(String name)", "modifiers": "private", "return": "", "signature": " TimeColumn(String name)", "full_signature": "private  TimeColumn(String name)", "class_method_signature": "TimeColumn.TimeColumn(String name)", "testcase": false, "constructor": true}, {"identifier": "createInternal", "parameters": "(String name, int[] data)", "modifiers": "public static", "return": "TimeColumn", "signature": "TimeColumn createInternal(String name, int[] data)", "full_signature": "public static TimeColumn createInternal(String name, int[] data)", "class_method_signature": "TimeColumn.createInternal(String name, int[] data)", "testcase": false, "constructor": false}, {"identifier": "valueIsMissing", "parameters": "(int i)", "modifiers": "public static", "return": "boolean", "signature": "boolean valueIsMissing(int i)", "full_signature": "public static boolean valueIsMissing(int i)", "class_method_signature": "TimeColumn.valueIsMissing(int i)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name)", "modifiers": "public static", "return": "TimeColumn", "signature": "TimeColumn create(String name)", "full_signature": "public static TimeColumn create(String name)", "class_method_signature": "TimeColumn.create(String name)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, Collection<LocalTime> data)", "modifiers": "public static", "return": "TimeColumn", "signature": "TimeColumn create(String name, Collection<LocalTime> data)", "full_signature": "public static TimeColumn create(String name, Collection<LocalTime> data)", "class_method_signature": "TimeColumn.create(String name, Collection<LocalTime> data)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, LocalTime... data)", "modifiers": "public static", "return": "TimeColumn", "signature": "TimeColumn create(String name, LocalTime... data)", "full_signature": "public static TimeColumn create(String name, LocalTime... data)", "class_method_signature": "TimeColumn.create(String name, LocalTime... data)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, int initialSize)", "modifiers": "public static", "return": "TimeColumn", "signature": "TimeColumn create(String name, int initialSize)", "full_signature": "public static TimeColumn create(String name, int initialSize)", "class_method_signature": "TimeColumn.create(String name, int initialSize)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, Stream<LocalTime> stream)", "modifiers": "public static", "return": "TimeColumn", "signature": "TimeColumn create(String name, Stream<LocalTime> stream)", "full_signature": "public static TimeColumn create(String name, Stream<LocalTime> stream)", "class_method_signature": "TimeColumn.create(String name, Stream<LocalTime> stream)", "testcase": false, "constructor": false}, {"identifier": "appendMissing", "parameters": "()", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn appendMissing()", "full_signature": "@Override public TimeColumn appendMissing()", "class_method_signature": "TimeColumn.appendMissing()", "testcase": false, "constructor": false}, {"identifier": "subset", "parameters": "(int[] rows)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn subset(int[] rows)", "full_signature": "@Override public TimeColumn subset(int[] rows)", "class_method_signature": "TimeColumn.subset(int[] rows)", "testcase": false, "constructor": false}, {"identifier": "lag", "parameters": "(int n)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn lag(int n)", "full_signature": "@Override public TimeColumn lag(int n)", "class_method_signature": "TimeColumn.lag(int n)", "testcase": false, "constructor": false}, {"identifier": "isMissing", "parameters": "(int rowNumber)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isMissing(int rowNumber)", "full_signature": "@Override public boolean isMissing(int rowNumber)", "class_method_signature": "TimeColumn.isMissing(int rowNumber)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "TimeColumn.size()", "testcase": false, "constructor": false}, {"identifier": "appendInternal", "parameters": "(int f)", "modifiers": "public", "return": "TimeColumn", "signature": "TimeColumn appendInternal(int f)", "full_signature": "public TimeColumn appendInternal(int f)", "class_method_signature": "TimeColumn.appendInternal(int f)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(LocalTime time)", "modifiers": "public", "return": "TimeColumn", "signature": "TimeColumn append(LocalTime time)", "full_signature": "public TimeColumn append(LocalTime time)", "class_method_signature": "TimeColumn.append(LocalTime time)", "testcase": false, "constructor": false}, {"identifier": "appendObj", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn appendObj(Object obj)", "full_signature": "@Override public TimeColumn appendObj(Object obj)", "class_method_signature": "TimeColumn.appendObj(Object obj)", "testcase": false, "constructor": false}, {"identifier": "removeMissing", "parameters": "()", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn removeMissing()", "full_signature": "@Override public TimeColumn removeMissing()", "class_method_signature": "TimeColumn.removeMissing()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(int row)", "modifiers": "@Override public", "return": "String", "signature": "String getString(int row)", "full_signature": "@Override public String getString(int row)", "class_method_signature": "TimeColumn.getString(int row)", "testcase": false, "constructor": false}, {"identifier": "getUnformattedString", "parameters": "(int row)", "modifiers": "@Override public", "return": "String", "signature": "String getUnformattedString(int row)", "full_signature": "@Override public String getUnformattedString(int row)", "class_method_signature": "TimeColumn.getUnformattedString(int row)", "testcase": false, "constructor": false}, {"identifier": "setPrintFormatter", "parameters": "(DateTimeFormatter dateTimeFormatter, String missingValueString)", "modifiers": "public", "return": "void", "signature": "void setPrintFormatter(DateTimeFormatter dateTimeFormatter, String missingValueString)", "full_signature": "public void setPrintFormatter(DateTimeFormatter dateTimeFormatter, String missingValueString)", "class_method_signature": "TimeColumn.setPrintFormatter(DateTimeFormatter dateTimeFormatter, String missingValueString)", "testcase": false, "constructor": false}, {"identifier": "setPrintFormatter", "parameters": "(DateTimeFormatter dateTimeFormatter)", "modifiers": "public", "return": "void", "signature": "void setPrintFormatter(DateTimeFormatter dateTimeFormatter)", "full_signature": "public void setPrintFormatter(DateTimeFormatter dateTimeFormatter)", "class_method_signature": "TimeColumn.setPrintFormatter(DateTimeFormatter dateTimeFormatter)", "testcase": false, "constructor": false}, {"identifier": "emptyCopy", "parameters": "()", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn emptyCopy()", "full_signature": "@Override public TimeColumn emptyCopy()", "class_method_signature": "TimeColumn.emptyCopy()", "testcase": false, "constructor": false}, {"identifier": "emptyCopy", "parameters": "(int rowSize)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn emptyCopy(int rowSize)", "full_signature": "@Override public TimeColumn emptyCopy(int rowSize)", "class_method_signature": "TimeColumn.emptyCopy(int rowSize)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn copy()", "full_signature": "@Override public TimeColumn copy()", "class_method_signature": "TimeColumn.copy()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "TimeColumn.clear()", "testcase": false, "constructor": false}, {"identifier": "asList", "parameters": "()", "modifiers": "@Override public", "return": "List<LocalTime>", "signature": "List<LocalTime> asList()", "full_signature": "@Override public List<LocalTime> asList()", "class_method_signature": "TimeColumn.asList()", "testcase": false, "constructor": false}, {"identifier": "sortAscending", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sortAscending()", "full_signature": "@Override public void sortAscending()", "class_method_signature": "TimeColumn.sortAscending()", "testcase": false, "constructor": false}, {"identifier": "sortDescending", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sortDescending()", "full_signature": "@Override public void sortDescending()", "class_method_signature": "TimeColumn.sortDescending()", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "()", "modifiers": "public", "return": "LocalTime", "signature": "LocalTime max()", "full_signature": "public LocalTime max()", "class_method_signature": "TimeColumn.max()", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "()", "modifiers": "public", "return": "LocalTime", "signature": "LocalTime min()", "full_signature": "public LocalTime min()", "class_method_signature": "TimeColumn.min()", "testcase": false, "constructor": false}, {"identifier": "summary", "parameters": "()", "modifiers": "@Override public", "return": "Table", "signature": "Table summary()", "full_signature": "@Override public Table summary()", "class_method_signature": "TimeColumn.summary()", "testcase": false, "constructor": false}, {"identifier": "countMissing", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countMissing()", "full_signature": "@Override public int countMissing()", "class_method_signature": "TimeColumn.countMissing()", "testcase": false, "constructor": false}, {"identifier": "countUnique", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countUnique()", "full_signature": "@Override public int countUnique()", "class_method_signature": "TimeColumn.countUnique()", "testcase": false, "constructor": false}, {"identifier": "unique", "parameters": "()", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn unique()", "full_signature": "@Override public TimeColumn unique()", "class_method_signature": "TimeColumn.unique()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "TimeColumn.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "appendCell", "parameters": "(String object)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn appendCell(String object)", "full_signature": "@Override public TimeColumn appendCell(String object)", "class_method_signature": "TimeColumn.appendCell(String object)", "testcase": false, "constructor": false}, {"identifier": "appendCell", "parameters": "(String object, AbstractColumnParser<?> parser)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn appendCell(String object, AbstractColumnParser<?> parser)", "full_signature": "@Override public TimeColumn appendCell(String object, AbstractColumnParser<?> parser)", "class_method_signature": "TimeColumn.appendCell(String object, AbstractColumnParser<?> parser)", "testcase": false, "constructor": false}, {"identifier": "getIntInternal", "parameters": "(int index)", "modifiers": "@Override public", "return": "int", "signature": "int getIntInternal(int index)", "full_signature": "@Override public int getIntInternal(int index)", "class_method_signature": "TimeColumn.getIntInternal(int index)", "testcase": false, "constructor": false}, {"identifier": "getPackedTime", "parameters": "(int index)", "modifiers": "protected", "return": "int", "signature": "int getPackedTime(int index)", "full_signature": "protected int getPackedTime(int index)", "class_method_signature": "TimeColumn.getPackedTime(int index)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "LocalTime", "signature": "LocalTime get(int index)", "full_signature": "public LocalTime get(int index)", "class_method_signature": "TimeColumn.get(int index)", "testcase": false, "constructor": false}, {"identifier": "rowComparator", "parameters": "()", "modifiers": "@Override public", "return": "IntComparator", "signature": "IntComparator rowComparator()", "full_signature": "@Override public IntComparator rowComparator()", "class_method_signature": "TimeColumn.rowComparator()", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(int i)", "modifiers": "public", "return": "double", "signature": "double getDouble(int i)", "full_signature": "public double getDouble(int i)", "class_method_signature": "TimeColumn.getDouble(int i)", "testcase": false, "constructor": false}, {"identifier": "asDoubleArray", "parameters": "()", "modifiers": "public", "return": "double[]", "signature": "double[] asDoubleArray()", "full_signature": "public double[] asDoubleArray()", "class_method_signature": "TimeColumn.asDoubleArray()", "testcase": false, "constructor": false}, {"identifier": "asDoubleColumn", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn asDoubleColumn()", "full_signature": "public DoubleColumn asDoubleColumn()", "class_method_signature": "TimeColumn.asDoubleColumn()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TimeColumn.toString()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(Column<LocalTime> column)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn append(Column<LocalTime> column)", "full_signature": "@Override public TimeColumn append(Column<LocalTime> column)", "class_method_signature": "TimeColumn.append(Column<LocalTime> column)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(Column<LocalTime> column, int row)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn append(Column<LocalTime> column, int row)", "full_signature": "@Override public TimeColumn append(Column<LocalTime> column, int row)", "class_method_signature": "TimeColumn.append(Column<LocalTime> column, int row)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int row, Column<LocalTime> column, int sourceRow)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn set(int row, Column<LocalTime> column, int sourceRow)", "full_signature": "@Override public TimeColumn set(int row, Column<LocalTime> column, int sourceRow)", "class_method_signature": "TimeColumn.set(int row, Column<LocalTime> column, int sourceRow)", "testcase": false, "constructor": false}, {"identifier": "top", "parameters": "(int n)", "modifiers": "public", "return": "List<LocalTime>", "signature": "List<LocalTime> top(int n)", "full_signature": "public List<LocalTime> top(int n)", "class_method_signature": "TimeColumn.top(int n)", "testcase": false, "constructor": false}, {"identifier": "bottom", "parameters": "(int n)", "modifiers": "public", "return": "List<LocalTime>", "signature": "List<LocalTime> bottom(int n)", "full_signature": "public List<LocalTime> bottom(int n)", "class_method_signature": "TimeColumn.bottom(int n)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int index, int value)", "modifiers": "public", "return": "TimeColumn", "signature": "TimeColumn set(int index, int value)", "full_signature": "public TimeColumn set(int index, int value)", "class_method_signature": "TimeColumn.set(int index, int value)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int index, LocalTime value)", "modifiers": "public", "return": "TimeColumn", "signature": "TimeColumn set(int index, LocalTime value)", "full_signature": "public TimeColumn set(int index, LocalTime value)", "class_method_signature": "TimeColumn.set(int index, LocalTime value)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(Selection rowSelection, LocalTime newValue)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn set(Selection rowSelection, LocalTime newValue)", "full_signature": "@Override public TimeColumn set(Selection rowSelection, LocalTime newValue)", "class_method_signature": "TimeColumn.set(Selection rowSelection, LocalTime newValue)", "testcase": false, "constructor": false}, {"identifier": "intIterator", "parameters": "()", "modifiers": "public", "return": "IntIterator", "signature": "IntIterator intIterator()", "full_signature": "public IntIterator intIterator()", "class_method_signature": "TimeColumn.intIterator()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(LocalTime time)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(LocalTime time)", "full_signature": "@Override public boolean contains(LocalTime time)", "class_method_signature": "TimeColumn.contains(LocalTime time)", "testcase": false, "constructor": false}, {"identifier": "setMissing", "parameters": "(int i)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn setMissing(int i)", "full_signature": "@Override public TimeColumn setMissing(int i)", "class_method_signature": "TimeColumn.setMissing(int i)", "testcase": false, "constructor": false}, {"identifier": "isMissing", "parameters": "()", "modifiers": "@Override public", "return": "Selection", "signature": "Selection isMissing()", "full_signature": "@Override public Selection isMissing()", "class_method_signature": "TimeColumn.isMissing()", "testcase": false, "constructor": false}, {"identifier": "isNotMissing", "parameters": "()", "modifiers": "@Override public", "return": "Selection", "signature": "Selection isNotMissing()", "full_signature": "@Override public Selection isNotMissing()", "class_method_signature": "TimeColumn.isNotMissing()", "testcase": false, "constructor": false}, {"identifier": "byteSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int byteSize()", "full_signature": "@Override public int byteSize()", "class_method_signature": "TimeColumn.byteSize()", "testcase": false, "constructor": false}, {"identifier": "asBytes", "parameters": "(int rowNumber)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] asBytes(int rowNumber)", "full_signature": "@Override public byte[] asBytes(int rowNumber)", "class_method_signature": "TimeColumn.asBytes(int rowNumber)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<LocalTime>", "signature": "Iterator<LocalTime> iterator()", "full_signature": "@Override public Iterator<LocalTime> iterator()", "class_method_signature": "TimeColumn.iterator()", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(Selection selection)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn where(Selection selection)", "full_signature": "@Override public TimeColumn where(Selection selection)", "class_method_signature": "TimeColumn.where(Selection selection)", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(\n      int count, Iterator<LocalTime> iterator, Consumer<LocalTime> acceptor)", "modifiers": "private", "return": "TimeColumn", "signature": "TimeColumn fillWith(\n      int count, Iterator<LocalTime> iterator, Consumer<LocalTime> acceptor)", "full_signature": "private TimeColumn fillWith(\n      int count, Iterator<LocalTime> iterator, Consumer<LocalTime> acceptor)", "class_method_signature": "TimeColumn.fillWith(\n      int count, Iterator<LocalTime> iterator, Consumer<LocalTime> acceptor)", "testcase": false, "constructor": false}, {"identifier": "asObjectArray", "parameters": "()", "modifiers": "@Override public", "return": "LocalTime[]", "signature": "LocalTime[] asObjectArray()", "full_signature": "@Override public LocalTime[] asObjectArray()", "class_method_signature": "TimeColumn.asObjectArray()", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(Iterator<LocalTime> iterator)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn fillWith(Iterator<LocalTime> iterator)", "full_signature": "@Override public TimeColumn fillWith(Iterator<LocalTime> iterator)", "class_method_signature": "TimeColumn.fillWith(Iterator<LocalTime> iterator)", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(\n      int count, Iterable<LocalTime> iterable, Consumer<LocalTime> acceptor)", "modifiers": "private", "return": "TimeColumn", "signature": "TimeColumn fillWith(\n      int count, Iterable<LocalTime> iterable, Consumer<LocalTime> acceptor)", "full_signature": "private TimeColumn fillWith(\n      int count, Iterable<LocalTime> iterable, Consumer<LocalTime> acceptor)", "class_method_signature": "TimeColumn.fillWith(\n      int count, Iterable<LocalTime> iterable, Consumer<LocalTime> acceptor)", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(Iterable<LocalTime> iterable)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn fillWith(Iterable<LocalTime> iterable)", "full_signature": "@Override public TimeColumn fillWith(Iterable<LocalTime> iterable)", "class_method_signature": "TimeColumn.fillWith(Iterable<LocalTime> iterable)", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(\n      int count, Supplier<LocalTime> supplier, Consumer<LocalTime> acceptor)", "modifiers": "private", "return": "TimeColumn", "signature": "TimeColumn fillWith(\n      int count, Supplier<LocalTime> supplier, Consumer<LocalTime> acceptor)", "full_signature": "private TimeColumn fillWith(\n      int count, Supplier<LocalTime> supplier, Consumer<LocalTime> acceptor)", "class_method_signature": "TimeColumn.fillWith(\n      int count, Supplier<LocalTime> supplier, Consumer<LocalTime> acceptor)", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(Supplier<LocalTime> supplier)", "modifiers": "@Override public", "return": "TimeColumn", "signature": "TimeColumn fillWith(Supplier<LocalTime> supplier)", "full_signature": "@Override public TimeColumn fillWith(Supplier<LocalTime> supplier)", "class_method_signature": "TimeColumn.fillWith(Supplier<LocalTime> supplier)", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(LocalTime o1, LocalTime o2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(LocalTime o1, LocalTime o2)", "full_signature": "@Override public int compare(LocalTime o1, LocalTime o2)", "class_method_signature": "TimeColumn.compare(LocalTime o1, LocalTime o2)", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/api/TimeColumn.java"}, "focal_method": {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "LocalTime", "body": "public LocalTime get(int index) {\n    return PackedLocalTime.asLocalTime(getIntInternal(index));\n  }", "signature": "LocalTime get(int index)", "full_signature": "public LocalTime get(int index)", "class_method_signature": "TimeColumn.get(int index)", "testcase": false, "constructor": false, "invocations": ["asLocalTime", "getIntInternal"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}