{"test_class": {"identifier": "ReportTest", "superclass": "", "interfaces": "", "fields": [], "file": "CodeSmells/src/machine/ReportTest.java"}, "test_case": {"identifier": "testReport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReport() throws IOException {\n\t\tArrayList<Machine> line = new ArrayList<Machine>();\n\t\tline.add(new Machine(\"mixer\", \"left\"));\n\n\t\tMachine extruder = new Machine(\"extruder\", \"center\");\n\t\textruder.put(\"paste\");\n\t\tline.add(extruder);\n\n\t\tMachine oven = new Machine(\"oven\", \"right\");\n\t\toven.put(\"chips\");\n\t\tline.add(oven);\n\n\t\tRobot robot = new Robot();\n\t\trobot.moveTo(extruder);\n\t\trobot.pick();\n\n\t\tStringWriter out = new StringWriter();\n\t\tReport.report(out, line, robot);\n\n\t\tString expected = \"FACTORY REPORT\\n\"\n\t\t\t\t+ \"Machine mixer\\nMachine extruder\\n\"\n\t\t\t\t+ \"Machine oven bin=chips\\n\\n\"\n\t\t\t\t+ \"Robot location=extruder bin=paste\\n\" + \"========\\n\";\n\n\t\tassertEquals(expected, out.toString());\n\t}", "signature": "void testReport()", "full_signature": "@Test public void testReport()", "class_method_signature": "ReportTest.testReport()", "testcase": true, "constructor": false, "invocations": ["add", "put", "add", "put", "add", "moveTo", "pick", "report", "assertEquals", "toString"]}, "focal_class": {"identifier": "Report", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "report", "parameters": "(Writer out, List<Machine> machines, Robot robot)", "modifiers": "public static", "return": "void", "signature": "void report(Writer out, List<Machine> machines, Robot robot)", "full_signature": "public static void report(Writer out, List<Machine> machines, Robot robot)", "class_method_signature": "Report.report(Writer out, List<Machine> machines, Robot robot)", "testcase": false, "constructor": false}], "file": "CodeSmells/src/machine/Report.java"}, "focal_method": {"identifier": "report", "parameters": "(Writer out, List<Machine> machines, Robot robot)", "modifiers": "public static", "return": "void", "body": "public static void report(Writer out, List<Machine> machines, Robot robot)\n            throws IOException \n    {\n        out.write(\"FACTORY REPORT\\n\");\n\n        Iterator<Machine> line = machines.iterator();\n        while (line.hasNext()) {\n            Machine machine = line.next();\n            out.write(\"Machine \" + machine.name());\n\n            if (machine.bin() != null)\n                out.write(\" bin=\" + machine.bin());\n\n            out.write(\"\\n\");\n        }\n        out.write(\"\\n\");\n\n        out.write(\"Robot\");\n        if (robot.location() != null)\n            out.write(\" location=\" + robot.location().name());\n\n        if (robot.bin() != null)\n            out.write(\" bin=\" + robot.bin());\n\n        out.write(\"\\n\");\n\n        out.write(\"========\\n\");\n    }", "signature": "void report(Writer out, List<Machine> machines, Robot robot)", "full_signature": "public static void report(Writer out, List<Machine> machines, Robot robot)", "class_method_signature": "Report.report(Writer out, List<Machine> machines, Robot robot)", "testcase": false, "constructor": false, "invocations": ["write", "iterator", "hasNext", "next", "write", "name", "bin", "write", "bin", "write", "write", "write", "location", "write", "name", "location", "bin", "write", "bin", "write", "write"]}, "repository": {"repo_id": 643499, "url": "https://github.com/unclebob/Welc", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 210, "license": "licensed"}}