{"test_class": {"identifier": "DBaseFileAttributePoolTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private static final String BDTOPO_VALUE;", "modifier": "private static final", "type": "String", "declarator": "BDTOPO_VALUE", "var_name": "BDTOPO_VALUE"}, {"original_string": "private static final String BATIMENT_RELIGIEUX_VALUE;", "modifier": "private static final", "type": "String", "declarator": "BATIMENT_RELIGIEUX_VALUE", "var_name": "BATIMENT_RELIGIEUX_VALUE"}, {"original_string": "private URL resource;", "modifier": "private", "type": "URL", "declarator": "resource", "var_name": "resource"}, {"original_string": "private DBaseFileAttributePool pool;", "modifier": "private", "type": "DBaseFileAttributePool", "declarator": "pool", "var_name": "pool"}, {"original_string": "private static final String TEST_FILENAME = \"org/arakhne/afc/io/dbase/test.dbf\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILENAME = \"org/arakhne/afc/io/dbase/test.dbf\"", "var_name": "TEST_FILENAME"}], "file": "advanced/dbasefile/src/test/java/org/arakhne/afc/io/dbase/attr/DBaseFileAttributePoolTest.java"}, "test_case": {"identifier": "testGetResource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetResource() {\n\t\tassertEquals(this.resource, this.pool.getResource());\n\t}", "signature": "void testGetResource()", "full_signature": "@Test public void testGetResource()", "class_method_signature": "DBaseFileAttributePoolTest.testGetResource()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getResource"]}, "focal_class": {"identifier": "DBaseFileAttributePool", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Map<String, DBaseFileAttributePool> pools;", "modifier": "private static", "type": "Map<String, DBaseFileAttributePool>", "declarator": "pools", "var_name": "pools"}, {"original_string": "private final URL url;", "modifier": "private final", "type": "URL", "declarator": "url", "var_name": "url"}, {"original_string": "private final Map<Integer, DBaseFileAttributeAccessor> accessors = new WeakValueTreeMap<>();", "modifier": "private final", "type": "Map<Integer, DBaseFileAttributeAccessor>", "declarator": "accessors = new WeakValueTreeMap<>()", "var_name": "accessors"}, {"original_string": "private transient DBaseFileReader reader;", "modifier": "private transient", "type": "DBaseFileReader", "declarator": "reader", "var_name": "reader"}], "methods": [{"identifier": "DBaseFileAttributePool", "parameters": "(URL dbaseFile)", "modifiers": "private", "return": "", "signature": " DBaseFileAttributePool(URL dbaseFile)", "full_signature": "private  DBaseFileAttributePool(URL dbaseFile)", "class_method_signature": "DBaseFileAttributePool.DBaseFileAttributePool(URL dbaseFile)", "testcase": false, "constructor": true}, {"identifier": "getPool", "parameters": "(URL dbaseFile)", "modifiers": "static", "return": "DBaseFileAttributePool", "signature": "DBaseFileAttributePool getPool(URL dbaseFile)", "full_signature": "static DBaseFileAttributePool getPool(URL dbaseFile)", "class_method_signature": "DBaseFileAttributePool.getPool(URL dbaseFile)", "testcase": false, "constructor": false}, {"identifier": "getPool", "parameters": "(URI dbaseFile)", "modifiers": "static", "return": "DBaseFileAttributePool", "signature": "DBaseFileAttributePool getPool(URI dbaseFile)", "full_signature": "static DBaseFileAttributePool getPool(URI dbaseFile)", "class_method_signature": "DBaseFileAttributePool.getPool(URI dbaseFile)", "testcase": false, "constructor": false}, {"identifier": "getPool", "parameters": "(File dbaseFile)", "modifiers": "static", "return": "DBaseFileAttributePool", "signature": "DBaseFileAttributePool getPool(File dbaseFile)", "full_signature": "static DBaseFileAttributePool getPool(File dbaseFile)", "class_method_signature": "DBaseFileAttributePool.getPool(File dbaseFile)", "testcase": false, "constructor": false}, {"identifier": "getPool", "parameters": "(String resource)", "modifiers": "static", "return": "DBaseFileAttributePool", "signature": "DBaseFileAttributePool getPool(String resource)", "full_signature": "static DBaseFileAttributePool getPool(String resource)", "class_method_signature": "DBaseFileAttributePool.getPool(String resource)", "testcase": false, "constructor": false}, {"identifier": "getContainer", "parameters": "(URL dbaseFile, int recordNumber)", "modifiers": "@Pure public static", "return": "DBaseFileAttributeProvider", "signature": "DBaseFileAttributeProvider getContainer(URL dbaseFile, int recordNumber)", "full_signature": "@Pure public static DBaseFileAttributeProvider getContainer(URL dbaseFile, int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getContainer(URL dbaseFile, int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "getProvider", "parameters": "(URI dbaseFile, int recordNumber)", "modifiers": "@Pure public static", "return": "DBaseFileAttributeProvider", "signature": "DBaseFileAttributeProvider getProvider(URI dbaseFile, int recordNumber)", "full_signature": "@Pure public static DBaseFileAttributeProvider getProvider(URI dbaseFile, int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getProvider(URI dbaseFile, int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "getProvider", "parameters": "(File dbaseFile, int recordNumber)", "modifiers": "@Pure public static", "return": "DBaseFileAttributeProvider", "signature": "DBaseFileAttributeProvider getProvider(File dbaseFile, int recordNumber)", "full_signature": "@Pure public static DBaseFileAttributeProvider getProvider(File dbaseFile, int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getProvider(File dbaseFile, int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "getProvider", "parameters": "(String resource, int recordNumber)", "modifiers": "@Pure public static", "return": "DBaseFileAttributeProvider", "signature": "DBaseFileAttributeProvider getProvider(String resource, int recordNumber)", "full_signature": "@Pure public static DBaseFileAttributeProvider getProvider(String resource, int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getProvider(String resource, int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "getCollection", "parameters": "(URL dbaseFile, int recordNumber)", "modifiers": "@Pure public static", "return": "DBaseFileAttributeCollection", "signature": "DBaseFileAttributeCollection getCollection(URL dbaseFile, int recordNumber)", "full_signature": "@Pure public static DBaseFileAttributeCollection getCollection(URL dbaseFile, int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getCollection(URL dbaseFile, int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "getCollection", "parameters": "(URI dbaseFile, int recordNumber)", "modifiers": "@Pure public static", "return": "DBaseFileAttributeCollection", "signature": "DBaseFileAttributeCollection getCollection(URI dbaseFile, int recordNumber)", "full_signature": "@Pure public static DBaseFileAttributeCollection getCollection(URI dbaseFile, int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getCollection(URI dbaseFile, int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "getCollection", "parameters": "(File dbaseFile, int recordNumber)", "modifiers": "@Pure public static", "return": "DBaseFileAttributeCollection", "signature": "DBaseFileAttributeCollection getCollection(File dbaseFile, int recordNumber)", "full_signature": "@Pure public static DBaseFileAttributeCollection getCollection(File dbaseFile, int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getCollection(File dbaseFile, int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "getCollection", "parameters": "(String resource, int recordNumber)", "modifiers": "@Pure public static", "return": "DBaseFileAttributeCollection", "signature": "DBaseFileAttributeCollection getCollection(String resource, int recordNumber)", "full_signature": "@Pure public static DBaseFileAttributeCollection getCollection(String resource, int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getCollection(String resource, int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "DBaseFileAttributePool.close()", "testcase": false, "constructor": false}, {"identifier": "finalize", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"checkstyle:nofinalizer\") @Deprecated(since = \"17.0\", forRemoval = true) public", "return": "void", "signature": "void finalize()", "full_signature": "@Override @SuppressWarnings(\"checkstyle:nofinalizer\") @Deprecated(since = \"17.0\", forRemoval = true) public void finalize()", "class_method_signature": "DBaseFileAttributePool.finalize()", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "()", "modifiers": "@Pure public", "return": "URL", "signature": "URL getResource()", "full_signature": "@Pure public URL getResource()", "class_method_signature": "DBaseFileAttributePool.getResource()", "testcase": false, "constructor": false}, {"identifier": "getReader", "parameters": "()", "modifiers": "@Pure protected", "return": "DBaseFileReader", "signature": "DBaseFileReader getReader()", "full_signature": "@Pure protected DBaseFileReader getReader()", "class_method_signature": "DBaseFileAttributePool.getReader()", "testcase": false, "constructor": false}, {"identifier": "getAllAttributeNames", "parameters": "(int recordNumber)", "modifiers": "@SuppressWarnings(\"resource\") @Pure public", "return": "Collection<String>", "signature": "Collection<String> getAllAttributeNames(int recordNumber)", "full_signature": "@SuppressWarnings(\"resource\") @Pure public Collection<String> getAllAttributeNames(int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getAllAttributeNames(int recordNumber)", "testcase": false, "constructor": false}, {"identifier": "getAttributeCount", "parameters": "()", "modifiers": "@SuppressWarnings(\"resource\") @Pure public", "return": "int", "signature": "int getAttributeCount()", "full_signature": "@SuppressWarnings(\"resource\") @Pure public int getAttributeCount()", "class_method_signature": "DBaseFileAttributePool.getAttributeCount()", "testcase": false, "constructor": false}, {"identifier": "getRawValue", "parameters": "(int recordNumber, String name, OutputParameter<AttributeType> type)", "modifiers": "@SuppressWarnings(\"resource\") @Pure public", "return": "Object", "signature": "Object getRawValue(int recordNumber, String name, OutputParameter<AttributeType> type)", "full_signature": "@SuppressWarnings(\"resource\") @Pure public Object getRawValue(int recordNumber, String name, OutputParameter<AttributeType> type)", "class_method_signature": "DBaseFileAttributePool.getRawValue(int recordNumber, String name, OutputParameter<AttributeType> type)", "testcase": false, "constructor": false}, {"identifier": "getAccessor", "parameters": "(int recordNumber)", "modifiers": "@Pure", "return": "DBaseFileAttributeAccessor", "signature": "DBaseFileAttributeAccessor getAccessor(int recordNumber)", "full_signature": "@Pure DBaseFileAttributeAccessor getAccessor(int recordNumber)", "class_method_signature": "DBaseFileAttributePool.getAccessor(int recordNumber)", "testcase": false, "constructor": false}], "file": "advanced/dbasefile/src/main/java/org/arakhne/afc/io/dbase/attr/DBaseFileAttributePool.java"}, "focal_method": {"identifier": "getResource", "parameters": "()", "modifiers": "@Pure public", "return": "URL", "body": "@Pure\n\tpublic URL getResource() {\n\t\treturn this.url;\n\t}", "signature": "URL getResource()", "full_signature": "@Pure public URL getResource()", "class_method_signature": "DBaseFileAttributePool.getResource()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}