{"test_class": {"identifier": "UserArchiveQueryHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Entity JULIET = EntityImpl.parseUnchecked(\"juliet@foo.com/balcony\");", "modifier": "private static final", "type": "Entity", "declarator": "JULIET = EntityImpl.parseUnchecked(\"juliet@foo.com/balcony\")", "var_name": "JULIET"}, {"original_string": "private static final Entity ROMEO = EntityImpl.parseUnchecked(\"romeo@foo.com/floor\");", "modifier": "private static final", "type": "Entity", "declarator": "ROMEO = EntityImpl.parseUnchecked(\"romeo@foo.com/floor\")", "var_name": "ROMEO"}, {"original_string": "private static final Entity INITIATING_ENTITY = JULIET;", "modifier": "private static final", "type": "Entity", "declarator": "INITIATING_ENTITY = JULIET", "var_name": "INITIATING_ENTITY"}, {"original_string": "private Query romeoTargetingQuery;", "modifier": "private", "type": "Query", "declarator": "romeoTargetingQuery", "var_name": "romeoTargetingQuery"}, {"original_string": "private Query untargetedQuery;", "modifier": "private", "type": "Query", "declarator": "untargetedQuery", "var_name": "untargetedQuery"}, {"original_string": "private MessageArchivesMock archives;", "modifier": "private", "type": "MessageArchivesMock", "declarator": "archives", "var_name": "archives"}, {"original_string": "private ServerRuntimeContextMock serverRuntimeContext;", "modifier": "private", "type": "ServerRuntimeContextMock", "declarator": "serverRuntimeContext", "var_name": "serverRuntimeContext"}, {"original_string": "private SessionContextMock sessionContext;", "modifier": "private", "type": "SessionContextMock", "declarator": "sessionContext", "var_name": "sessionContext"}, {"original_string": "private UserArchiveQueryHandler tested;", "modifier": "private", "type": "UserArchiveQueryHandler", "declarator": "tested", "var_name": "tested"}], "file": "server/extensions/xep0313-mam/src/test/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/user/UserArchiveQueryHandlerTest.java"}, "test_case": {"identifier": "supportsAllQueries", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void supportsAllQueries() {\n        assertTrue(tested.supports(null, null, null));\n    }", "signature": "void supportsAllQueries()", "full_signature": "@Test public void supportsAllQueries()", "class_method_signature": "UserArchiveQueryHandlerTest.supportsAllQueries()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "supports"]}, "focal_class": {"identifier": "UserArchiveQueryHandler", "superclass": "", "interfaces": "implements QueryHandler", "fields": [], "methods": [{"identifier": "supports", "parameters": "(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supports(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "full_signature": "@Override public boolean supports(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "class_method_signature": "UserArchiveQueryHandler.supports(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "modifiers": "@Override public", "return": "List<Stanza>", "signature": "List<Stanza> handle(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "full_signature": "@Override public List<Stanza> handle(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "class_method_signature": "UserArchiveQueryHandler.handle(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "testcase": false, "constructor": false}, {"identifier": "doHandle", "parameters": "(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "modifiers": "private", "return": "List<Stanza>", "signature": "List<Stanza> doHandle(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "full_signature": "private List<Stanza> doHandle(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "class_method_signature": "UserArchiveQueryHandler.doHandle(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "testcase": false, "constructor": false}], "file": "server/extensions/xep0313-mam/src/main/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/user/UserArchiveQueryHandler.java"}, "focal_method": {"identifier": "supports", "parameters": "(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean supports(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext) {\n        return true;\n    }", "signature": "boolean supports(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "full_signature": "@Override public boolean supports(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "class_method_signature": "UserArchiveQueryHandler.supports(Query query, ServerRuntimeContext serverRuntimeContext, SessionContext sessionContext)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 165370485, "url": "https://github.com/apache/mina-vysper", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 29305, "license": "licensed"}}