{"test_class": {"identifier": "HistoryMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String s1 = \"String1\";", "modifier": "private static final", "type": "String", "declarator": "s1 = \"String1\"", "var_name": "s1"}, {"original_string": "private static final String s2 = \"zwo\";", "modifier": "private static final", "type": "String", "declarator": "s2 = \"zwo\"", "var_name": "s2"}, {"original_string": "private static final String s3 = \"Nummer tres\";", "modifier": "private static final", "type": "String", "declarator": "s3 = \"Nummer tres\"", "var_name": "s3"}, {"original_string": "private static final String s4 = \"viere\";", "modifier": "private static final", "type": "String", "declarator": "s4 = \"viere\"", "var_name": "s4"}, {"original_string": "private static final String s5 = \"zwo\";", "modifier": "private static final", "type": "String", "declarator": "s5 = \"zwo\"", "var_name": "s5"}], "file": "ontopia-navigator/src/test/java/net/ontopia/topicmaps/nav2/utils/HistoryMapTest.java"}, "test_case": {"identifier": "testAdd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAdd() {\n    HistoryMap hm = makeHistoryMap();\n    Assert.assertTrue(\"Expected other HistoryMap result, got \" + hm,\n               (hm.size() == 3) &&\n               hm.containsValue(s1) && hm.containsValue(s2) && hm.containsValue(s3));\n    hm.add(s4);\n    Assert.assertTrue(\"First should be gone, but got\" + hm,\n               (hm.size() == 3) &&\n               hm.containsValue(s2) && hm.containsValue(s3) && hm.containsValue(s4));\n  }", "signature": "void testAdd()", "full_signature": "@Test public void testAdd()", "class_method_signature": "HistoryMapTest.testAdd()", "testcase": true, "constructor": false, "invocations": ["makeHistoryMap", "assertTrue", "size", "containsValue", "containsValue", "containsValue", "add", "assertTrue", "size", "containsValue", "containsValue", "containsValue"]}, "focal_class": {"identifier": "HistoryMap", "superclass": "extends HashMap<Integer, T>", "interfaces": "", "fields": [{"original_string": "protected int maxEntries;", "modifier": "protected", "type": "int", "declarator": "maxEntries", "var_name": "maxEntries"}, {"original_string": "protected boolean suppressDuplicates;", "modifier": "protected", "type": "boolean", "declarator": "suppressDuplicates", "var_name": "suppressDuplicates"}, {"original_string": "private int counter;", "modifier": "private", "type": "int", "declarator": "counter", "var_name": "counter"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(HistoryMap.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(HistoryMap.class.getName())", "var_name": "log"}], "methods": [{"identifier": "HistoryMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " HistoryMap()", "full_signature": "public  HistoryMap()", "class_method_signature": "HistoryMap.HistoryMap()", "testcase": false, "constructor": true}, {"identifier": "HistoryMap", "parameters": "(int maxEntries, boolean suppressDuplicates)", "modifiers": "public", "return": "", "signature": " HistoryMap(int maxEntries, boolean suppressDuplicates)", "full_signature": "public  HistoryMap(int maxEntries, boolean suppressDuplicates)", "class_method_signature": "HistoryMap.HistoryMap(int maxEntries, boolean suppressDuplicates)", "testcase": false, "constructor": true}, {"identifier": "getMaxEntries", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxEntries()", "full_signature": "public int getMaxEntries()", "class_method_signature": "HistoryMap.getMaxEntries()", "testcase": false, "constructor": false}, {"identifier": "doesSuppressDuplicates", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean doesSuppressDuplicates()", "full_signature": "public boolean doesSuppressDuplicates()", "class_method_signature": "HistoryMap.doesSuppressDuplicates()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(T obj)", "modifiers": "public", "return": "void", "signature": "void add(T obj)", "full_signature": "public void add(T obj)", "class_method_signature": "HistoryMap.add(T obj)", "testcase": false, "constructor": false}, {"identifier": "removeEntry", "parameters": "(T obj)", "modifiers": "public", "return": "void", "signature": "void removeEntry(T obj)", "full_signature": "public void removeEntry(T obj)", "class_method_signature": "HistoryMap.removeEntry(T obj)", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "(int index)", "modifiers": "public", "return": "T", "signature": "T getEntry(int index)", "full_signature": "public T getEntry(int index)", "class_method_signature": "HistoryMap.getEntry(int index)", "testcase": false, "constructor": false}, {"identifier": "getEntries", "parameters": "()", "modifiers": "public", "return": "Collection<T>", "signature": "Collection<T> getEntries()", "full_signature": "public Collection<T> getEntries()", "class_method_signature": "HistoryMap.getEntries()", "testcase": false, "constructor": false}, {"identifier": "getEntriesReverse", "parameters": "()", "modifiers": "public", "return": "Collection", "signature": "Collection getEntriesReverse()", "full_signature": "public Collection getEntriesReverse()", "class_method_signature": "HistoryMap.getEntriesReverse()", "testcase": false, "constructor": false}], "file": "ontopia-navigator/src/main/java/net/ontopia/topicmaps/nav2/utils/HistoryMap.java"}, "focal_method": {"identifier": "add", "parameters": "(T obj)", "modifiers": "public", "return": "void", "body": "public void add(T obj) {\n    // do not add if object already exists\n    if (suppressDuplicates && containsValue(obj))\n      return;\n    counter++;\n    put(new Integer(counter), obj);\n    if (size() >= maxEntries)\n      try {\n        remove(new Integer(counter - maxEntries));\n      } catch (Exception e) {\n        log.error(\"Remove of entry from historymap without success.\" +\n                  e.getMessage());\n      }\n  }", "signature": "void add(T obj)", "full_signature": "public void add(T obj)", "class_method_signature": "HistoryMap.add(T obj)", "testcase": false, "constructor": false, "invocations": ["containsValue", "put", "size", "remove", "error", "getMessage"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}