{"test_class": {"identifier": "DebugChemObjectTest", "superclass": "extends AbstractChemObjectTest", "interfaces": "", "fields": [], "file": "base/datadebug/src/test/java/org/openscience/cdk/debug/DebugChemObjectTest.java"}, "test_case": {"identifier": "compare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compare() {\n        DebugChemObject co1 = new DebugChemObject();\n        DebugChemObject co2 = new DebugChemObject();\n        co1.setID(new String(\"a1\"));\n        co2.setID(new String(\"a1\"));\n        Assert.assertTrue(co1.compare(co2));\n    }", "signature": "void compare()", "full_signature": "@Test public void compare()", "class_method_signature": "DebugChemObjectTest.compare()", "testcase": true, "constructor": false, "invocations": ["setID", "setID", "assertTrue", "compare"]}, "focal_class": {"identifier": "DebugChemObject", "superclass": "extends ChemObject", "interfaces": "implements IChemObject", "fields": [{"original_string": "private static final long serialVersionUID = -8547443535884526365L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8547443535884526365L", "var_name": "serialVersionUID"}, {"original_string": "ILoggingTool              logger           = LoggingToolFactory.createLoggingTool(DebugChemObject.class);", "modifier": "", "type": "ILoggingTool", "declarator": "logger           = LoggingToolFactory.createLoggingTool(DebugChemObject.class)", "var_name": "logger"}], "methods": [{"identifier": "DebugChemObject", "parameters": "(IChemObject object)", "modifiers": "public", "return": "", "signature": " DebugChemObject(IChemObject object)", "full_signature": "public  DebugChemObject(IChemObject object)", "class_method_signature": "DebugChemObject.DebugChemObject(IChemObject object)", "testcase": false, "constructor": true}, {"identifier": "DebugChemObject", "parameters": "()", "modifiers": "public", "return": "", "signature": " DebugChemObject()", "full_signature": "public  DebugChemObject()", "class_method_signature": "DebugChemObject.DebugChemObject()", "testcase": false, "constructor": true}, {"identifier": "addListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(IChemObjectListener col)", "full_signature": "@Override public void addListener(IChemObjectListener col)", "class_method_signature": "DebugChemObject.addListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "getListenerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getListenerCount()", "full_signature": "@Override public int getListenerCount()", "class_method_signature": "DebugChemObject.getListenerCount()", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(IChemObjectListener col)", "full_signature": "@Override public void removeListener(IChemObjectListener col)", "class_method_signature": "DebugChemObject.removeListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged()", "full_signature": "@Override public void notifyChanged()", "class_method_signature": "DebugChemObject.notifyChanged()", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "(IChemObjectChangeEvent evt)", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged(IChemObjectChangeEvent evt)", "full_signature": "@Override public void notifyChanged(IChemObjectChangeEvent evt)", "class_method_signature": "DebugChemObject.notifyChanged(IChemObjectChangeEvent evt)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(Object description, Object property)", "modifiers": "@Override public", "return": "void", "signature": "void setProperty(Object description, Object property)", "full_signature": "@Override public void setProperty(Object description, Object property)", "class_method_signature": "DebugChemObject.setProperty(Object description, Object property)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "void", "signature": "void removeProperty(Object description)", "full_signature": "@Override public void removeProperty(Object description)", "class_method_signature": "DebugChemObject.removeProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description)", "full_signature": "@Override public T getProperty(Object description)", "class_method_signature": "DebugChemObject.getProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description, Class<T> c)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description, Class<T> c)", "full_signature": "@Override public T getProperty(Object description, Class<T> c)", "class_method_signature": "DebugChemObject.getProperty(Object description, Class<T> c)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getProperties()", "full_signature": "@Override public Map<Object, Object> getProperties()", "class_method_signature": "DebugChemObject.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "DebugChemObject.getID()", "testcase": false, "constructor": false}, {"identifier": "setID", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void setID(String identifier)", "full_signature": "@Override public void setID(String identifier)", "class_method_signature": "DebugChemObject.setID(String identifier)", "testcase": false, "constructor": false}, {"identifier": "setFlag", "parameters": "(int flagType, boolean flagValue)", "modifiers": "@Override public", "return": "void", "signature": "void setFlag(int flagType, boolean flagValue)", "full_signature": "@Override public void setFlag(int flagType, boolean flagValue)", "class_method_signature": "DebugChemObject.setFlag(int flagType, boolean flagValue)", "testcase": false, "constructor": false}, {"identifier": "getFlag", "parameters": "(int flagType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFlag(int flagType)", "full_signature": "@Override public boolean getFlag(int flagType)", "class_method_signature": "DebugChemObject.getFlag(int flagType)", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void setProperties(Map<Object, Object> properties)", "full_signature": "@Override public void setProperties(Map<Object, Object> properties)", "class_method_signature": "DebugChemObject.setProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void addProperties(Map<Object, Object> properties)", "full_signature": "@Override public void addProperties(Map<Object, Object> properties)", "class_method_signature": "DebugChemObject.addProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "setFlags", "parameters": "(boolean[] flagsNew)", "modifiers": "@Override public", "return": "void", "signature": "void setFlags(boolean[] flagsNew)", "full_signature": "@Override public void setFlags(boolean[] flagsNew)", "class_method_signature": "DebugChemObject.setFlags(boolean[] flagsNew)", "testcase": false, "constructor": false}, {"identifier": "getFlags", "parameters": "()", "modifiers": "@Override public", "return": "boolean[]", "signature": "boolean[] getFlags()", "full_signature": "@Override public boolean[] getFlags()", "class_method_signature": "DebugChemObject.getFlags()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "DebugChemObject.clone()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getBuilder()", "full_signature": "@Override public IChemObjectBuilder getBuilder()", "class_method_signature": "DebugChemObject.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "setNotification", "parameters": "(boolean bool)", "modifiers": "@Override public", "return": "void", "signature": "void setNotification(boolean bool)", "full_signature": "@Override public void setNotification(boolean bool)", "class_method_signature": "DebugChemObject.setNotification(boolean bool)", "testcase": false, "constructor": false}, {"identifier": "getNotification", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getNotification()", "full_signature": "@Override public boolean getNotification()", "class_method_signature": "DebugChemObject.getNotification()", "testcase": false, "constructor": false}], "file": "base/datadebug/src/main/java/org/openscience/cdk/debug/DebugChemObject.java"}, "focal_method": {"identifier": "setID", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setID(String identifier) {\n        logger.debug(\"Setting ID: \", identifier);\n        super.setID(identifier);\n    }", "signature": "void setID(String identifier)", "full_signature": "@Override public void setID(String identifier)", "class_method_signature": "DebugChemObject.setID(String identifier)", "testcase": false, "constructor": false, "invocations": ["debug", "setID"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}