{"test_class": {"identifier": "DisplayerSettingsEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    DisplayerSettingsEditor.View view;", "modifier": "@Mock", "type": "DisplayerSettingsEditor.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    Displayer displayer;", "modifier": "@Mock", "type": "Displayer", "declarator": "displayer", "var_name": "displayer"}, {"original_string": "@Mock\n    DataSetHandler dataSetHandler;", "modifier": "@Mock", "type": "DataSetHandler", "declarator": "dataSetHandler", "var_name": "dataSetHandler"}, {"original_string": "@Mock\n    EventSourceMock<DisplayerSettingsChangedEvent> event;", "modifier": "@Mock", "type": "EventSourceMock<DisplayerSettingsChangedEvent>", "declarator": "event", "var_name": "event"}, {"original_string": "@Mock\n    DisplayerLocator displayerLocator;", "modifier": "@Mock", "type": "DisplayerLocator", "declarator": "displayerLocator", "var_name": "displayerLocator"}, {"original_string": "@Mock\n    RendererManager rendererManager;", "modifier": "@Mock", "type": "RendererManager", "declarator": "rendererManager", "var_name": "rendererManager"}, {"original_string": "@Mock\n    RendererLibrary rendererA;", "modifier": "@Mock", "type": "RendererLibrary", "declarator": "rendererA", "var_name": "rendererA"}, {"original_string": "@Mock\n    RendererLibrary rendererB;", "modifier": "@Mock", "type": "RendererLibrary", "declarator": "rendererB", "var_name": "rendererB"}, {"original_string": "DisplayerSettingsEditor presenter;", "modifier": "", "type": "DisplayerSettingsEditor", "declarator": "presenter", "var_name": "presenter"}], "file": "dashbuilder-client/dashbuilder-displayer-client/src/test/java/org/dashbuilder/displayer/client/widgets/DisplayerSettingsEditorTest.java"}, "test_case": {"identifier": "testLongValidator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLongValidator() {\n        PropertyFieldValidator validator = presenter.createLongValidator();\n        assertEquals(validator.validate(\"500\"), true);\n        assertEquals(validator.validate(\"500d\"), false);\n        assertEquals(validator.validate(\"aaa\"), false);\n    }", "signature": "void testLongValidator()", "full_signature": "@Test public void testLongValidator()", "class_method_signature": "DisplayerSettingsEditorTest.testLongValidator()", "testcase": true, "constructor": false, "invocations": ["createLongValidator", "assertEquals", "validate", "assertEquals", "validate", "assertEquals", "validate"]}, "focal_class": {"identifier": "DisplayerSettingsEditor", "superclass": "", "interfaces": "implements IsWidget", "fields": [{"original_string": "protected View view;", "modifier": "protected", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "protected DisplayerLocator displayerLocator;", "modifier": "protected", "type": "DisplayerLocator", "declarator": "displayerLocator", "var_name": "displayerLocator"}, {"original_string": "protected RendererManager rendererManager;", "modifier": "protected", "type": "RendererManager", "declarator": "rendererManager", "var_name": "rendererManager"}, {"original_string": "protected Displayer displayer;", "modifier": "protected", "type": "Displayer", "declarator": "displayer", "var_name": "displayer"}, {"original_string": "protected DisplayerSettings displayerSettings;", "modifier": "protected", "type": "DisplayerSettings", "declarator": "displayerSettings", "var_name": "displayerSettings"}, {"original_string": "protected DisplayerConstraints displayerContraints;", "modifier": "protected", "type": "DisplayerConstraints", "declarator": "displayerContraints", "var_name": "displayerContraints"}, {"original_string": "private Set<DisplayerAttributeDef> supportedAttributes;", "modifier": "private", "type": "Set<DisplayerAttributeDef>", "declarator": "supportedAttributes", "var_name": "supportedAttributes"}, {"original_string": "protected Event<DisplayerSettingsChangedEvent> settingsChangedEvent;", "modifier": "protected", "type": "Event<DisplayerSettingsChangedEvent>", "declarator": "settingsChangedEvent", "var_name": "settingsChangedEvent"}, {"original_string": "public static final String COLUMNS_PREFFIX = \"columns.\";", "modifier": "public static final", "type": "String", "declarator": "COLUMNS_PREFFIX = \"columns.\"", "var_name": "COLUMNS_PREFFIX"}], "methods": [{"identifier": "DisplayerSettingsEditor", "parameters": "(View view,\n                                   DisplayerLocator displayerLocator,\n                                   RendererManager rendererManager,\n                                   Event<DisplayerSettingsChangedEvent> settingsChangedEvent)", "modifiers": "@Inject public", "return": "", "signature": " DisplayerSettingsEditor(View view,\n                                   DisplayerLocator displayerLocator,\n                                   RendererManager rendererManager,\n                                   Event<DisplayerSettingsChangedEvent> settingsChangedEvent)", "full_signature": "@Inject public  DisplayerSettingsEditor(View view,\n                                   DisplayerLocator displayerLocator,\n                                   RendererManager rendererManager,\n                                   Event<DisplayerSettingsChangedEvent> settingsChangedEvent)", "class_method_signature": "DisplayerSettingsEditor.DisplayerSettingsEditor(View view,\n                                   DisplayerLocator displayerLocator,\n                                   RendererManager rendererManager,\n                                   Event<DisplayerSettingsChangedEvent> settingsChangedEvent)", "testcase": false, "constructor": true}, {"identifier": "asWidget", "parameters": "()", "modifiers": "@Override public", "return": "Widget", "signature": "Widget asWidget()", "full_signature": "@Override public Widget asWidget()", "class_method_signature": "DisplayerSettingsEditor.asWidget()", "testcase": false, "constructor": false}, {"identifier": "getDisplayerSettings", "parameters": "()", "modifiers": "public", "return": "DisplayerSettings", "signature": "DisplayerSettings getDisplayerSettings()", "full_signature": "public DisplayerSettings getDisplayerSettings()", "class_method_signature": "DisplayerSettingsEditor.getDisplayerSettings()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(Displayer displayer)", "modifiers": "public", "return": "void", "signature": "void init(Displayer displayer)", "full_signature": "public void init(Displayer displayer)", "class_method_signature": "DisplayerSettingsEditor.init(Displayer displayer)", "testcase": false, "constructor": false}, {"identifier": "isSupported", "parameters": "(DisplayerAttributeDef attributeDef)", "modifiers": "public", "return": "boolean", "signature": "boolean isSupported(DisplayerAttributeDef attributeDef)", "full_signature": "public boolean isSupported(DisplayerAttributeDef attributeDef)", "class_method_signature": "DisplayerSettingsEditor.isSupported(DisplayerAttributeDef attributeDef)", "testcase": false, "constructor": false}, {"identifier": "isSupported", "parameters": "(DisplayerAttributeGroupDef groupDef)", "modifiers": "public", "return": "boolean", "signature": "boolean isSupported(DisplayerAttributeGroupDef groupDef)", "full_signature": "public boolean isSupported(DisplayerAttributeGroupDef groupDef)", "class_method_signature": "DisplayerSettingsEditor.isSupported(DisplayerAttributeGroupDef groupDef)", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "()", "modifiers": "", "return": "void", "signature": "void show()", "full_signature": " void show()", "class_method_signature": "DisplayerSettingsEditor.show()", "testcase": false, "constructor": false}, {"identifier": "onAttributeChanged", "parameters": "(String attrKey, String attrValue)", "modifiers": "", "return": "void", "signature": "void onAttributeChanged(String attrKey, String attrValue)", "full_signature": " void onAttributeChanged(String attrKey, String attrValue)", "class_method_signature": "DisplayerSettingsEditor.onAttributeChanged(String attrKey, String attrValue)", "testcase": false, "constructor": false}, {"identifier": "createLongValidator", "parameters": "()", "modifiers": "public", "return": "LongValidator", "signature": "LongValidator createLongValidator()", "full_signature": "public LongValidator createLongValidator()", "class_method_signature": "DisplayerSettingsEditor.createLongValidator()", "testcase": false, "constructor": false}, {"identifier": "createDoubleValidator", "parameters": "()", "modifiers": "public", "return": "DoubleValidator", "signature": "DoubleValidator createDoubleValidator()", "full_signature": "public DoubleValidator createDoubleValidator()", "class_method_signature": "DisplayerSettingsEditor.createDoubleValidator()", "testcase": false, "constructor": false}, {"identifier": "createMeterValidator", "parameters": "(DisplayerSettings settings, int level)", "modifiers": "public", "return": "MeterValidator", "signature": "MeterValidator createMeterValidator(DisplayerSettings settings, int level)", "full_signature": "public MeterValidator createMeterValidator(DisplayerSettings settings, int level)", "class_method_signature": "DisplayerSettingsEditor.createMeterValidator(DisplayerSettings settings, int level)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-displayer-client/src/main/java/org/dashbuilder/displayer/client/widgets/DisplayerSettingsEditor.java"}, "focal_method": {"identifier": "createLongValidator", "parameters": "()", "modifiers": "public", "return": "LongValidator", "body": "public LongValidator createLongValidator() {\n        return new LongValidator();\n    }", "signature": "LongValidator createLongValidator()", "full_signature": "public LongValidator createLongValidator()", "class_method_signature": "DisplayerSettingsEditor.createLongValidator()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}