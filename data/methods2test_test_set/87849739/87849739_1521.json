{"test_class": {"identifier": "DefaultNamespacedEntityIdTest", "superclass": "extends LengthRestrictionTestBase", "interfaces": "", "fields": [{"original_string": "private static final String URL_ESCAPE_EXAMPLE = \"%3A\";", "modifier": "private static final", "type": "String", "declarator": "URL_ESCAPE_EXAMPLE = \"%3A\"", "var_name": "URL_ESCAPE_EXAMPLE"}, {"original_string": "private static final List<String> ALLOWED_SPECIAL_CHARACTERS_IN_NAME = Arrays.asList(\n            \"-\", \"@\", \"&\", \"=\", \"+\", \",\", \".\", \"!\", \"~\", \"*\", \"'\", \"$\", \"_\", \";\", URL_ESCAPE_EXAMPLE, \"<\", \">\"\n    );", "modifier": "private static final", "type": "List<String>", "declarator": "ALLOWED_SPECIAL_CHARACTERS_IN_NAME = Arrays.asList(\n            \"-\", \"@\", \"&\", \"=\", \"+\", \",\", \".\", \"!\", \"~\", \"*\", \"'\", \"$\", \"_\", \";\", URL_ESCAPE_EXAMPLE, \"<\", \">\"\n    )", "var_name": "ALLOWED_SPECIAL_CHARACTERS_IN_NAME"}, {"original_string": "private static final String VALID_NAMESPACE = \"validNamespace\";", "modifier": "private static final", "type": "String", "declarator": "VALID_NAMESPACE = \"validNamespace\"", "var_name": "VALID_NAMESPACE"}, {"original_string": "private static final String NAMESPACE_DELIMITER = \":\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE_DELIMITER = \":\"", "var_name": "NAMESPACE_DELIMITER"}, {"original_string": "private static final String VALID_NAME = \"validName\";", "modifier": "private static final", "type": "String", "declarator": "VALID_NAME = \"validName\"", "var_name": "VALID_NAME"}, {"original_string": "private static final String VALID_ID = VALID_NAMESPACE + NAMESPACE_DELIMITER + VALID_NAME;", "modifier": "private static final", "type": "String", "declarator": "VALID_ID = VALID_NAMESPACE + NAMESPACE_DELIMITER + VALID_NAME", "var_name": "VALID_ID"}], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/entity/id/DefaultNamespacedEntityIdTest.java"}, "test_case": {"identifier": "defaultNamespacedEntityIdFromDefaultNamespacedEntityIdIsSameInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultNamespacedEntityIdFromDefaultNamespacedEntityIdIsSameInstance() {\n        final NamespacedEntityId namespacedEntityIdOne = DefaultNamespacedEntityId.of(VALID_NAMESPACE, VALID_NAME);\n        final NamespacedEntityId namespacedEntityIdTwo = DefaultNamespacedEntityId.of(namespacedEntityIdOne);\n        assertThat((CharSequence) namespacedEntityIdOne).isSameAs(namespacedEntityIdTwo);\n    }", "signature": "void defaultNamespacedEntityIdFromDefaultNamespacedEntityIdIsSameInstance()", "full_signature": "@Test public void defaultNamespacedEntityIdFromDefaultNamespacedEntityIdIsSameInstance()", "class_method_signature": "DefaultNamespacedEntityIdTest.defaultNamespacedEntityIdFromDefaultNamespacedEntityIdIsSameInstance()", "testcase": true, "constructor": false, "invocations": ["of", "of", "isSameAs", "assertThat"]}, "focal_class": {"identifier": "DefaultNamespacedEntityId", "superclass": "", "interfaces": "implements NamespacedEntityId", "fields": [{"original_string": "private static final NamespacedEntityId DUMMY_ID = DefaultNamespacedEntityId.of(\":_\");", "modifier": "private static final", "type": "NamespacedEntityId", "declarator": "DUMMY_ID = DefaultNamespacedEntityId.of(\":_\")", "var_name": "DUMMY_ID"}, {"original_string": "private static final String DEFAULT_NAMESPACE = \"\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_NAMESPACE = \"\"", "var_name": "DEFAULT_NAMESPACE"}, {"original_string": "private final String namespace;", "modifier": "private final", "type": "String", "declarator": "namespace", "var_name": "namespace"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final String stringRepresentation;", "modifier": "private final", "type": "String", "declarator": "stringRepresentation", "var_name": "stringRepresentation"}], "methods": [{"identifier": "DefaultNamespacedEntityId", "parameters": "(final String namespace, final String name, final boolean shouldValidate)", "modifiers": "private", "return": "", "signature": " DefaultNamespacedEntityId(final String namespace, final String name, final boolean shouldValidate)", "full_signature": "private  DefaultNamespacedEntityId(final String namespace, final String name, final boolean shouldValidate)", "class_method_signature": "DefaultNamespacedEntityId.DefaultNamespacedEntityId(final String namespace, final String name, final boolean shouldValidate)", "testcase": false, "constructor": true}, {"identifier": "DefaultNamespacedEntityId", "parameters": "(@Nullable final CharSequence entityId)", "modifiers": "private", "return": "", "signature": " DefaultNamespacedEntityId(@Nullable final CharSequence entityId)", "full_signature": "private  DefaultNamespacedEntityId(@Nullable final CharSequence entityId)", "class_method_signature": "DefaultNamespacedEntityId.DefaultNamespacedEntityId(@Nullable final CharSequence entityId)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence entityId)", "modifiers": "public static", "return": "NamespacedEntityId", "signature": "NamespacedEntityId of(final CharSequence entityId)", "full_signature": "public static NamespacedEntityId of(final CharSequence entityId)", "class_method_signature": "DefaultNamespacedEntityId.of(final CharSequence entityId)", "testcase": false, "constructor": false}, {"identifier": "fromName", "parameters": "(final String entityName)", "modifiers": "public static", "return": "NamespacedEntityId", "signature": "NamespacedEntityId fromName(final String entityName)", "full_signature": "public static NamespacedEntityId fromName(final String entityName)", "class_method_signature": "DefaultNamespacedEntityId.fromName(final String entityName)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String namespace, final String name)", "modifiers": "public static", "return": "NamespacedEntityId", "signature": "NamespacedEntityId of(final String namespace, final String name)", "full_signature": "public static NamespacedEntityId of(final String namespace, final String name)", "class_method_signature": "DefaultNamespacedEntityId.of(final String namespace, final String name)", "testcase": false, "constructor": false}, {"identifier": "dummy", "parameters": "()", "modifiers": "public static", "return": "NamespacedEntityId", "signature": "NamespacedEntityId dummy()", "full_signature": "public static NamespacedEntityId dummy()", "class_method_signature": "DefaultNamespacedEntityId.dummy()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final @Nullable String namespace, final @Nullable String name)", "modifiers": "private", "return": "String", "signature": "String validate(final @Nullable String namespace, final @Nullable String name)", "full_signature": "private String validate(final @Nullable String namespace, final @Nullable String name)", "class_method_signature": "DefaultNamespacedEntityId.validate(final @Nullable String namespace, final @Nullable String name)", "testcase": false, "constructor": false}, {"identifier": "isDummy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDummy()", "full_signature": "@Override public boolean isDummy()", "class_method_signature": "DefaultNamespacedEntityId.isDummy()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DefaultNamespacedEntityId.getName()", "testcase": false, "constructor": false}, {"identifier": "getNamespace", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getNamespace()", "full_signature": "@Override public String getNamespace()", "class_method_signature": "DefaultNamespacedEntityId.getNamespace()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "DefaultNamespacedEntityId.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultNamespacedEntityId.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultNamespacedEntityId.toString()", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/entity/id/DefaultNamespacedEntityId.java"}, "focal_method": {"identifier": "of", "parameters": "(final CharSequence entityId)", "modifiers": "public static", "return": "NamespacedEntityId", "body": "public static NamespacedEntityId of(final CharSequence entityId) {\n        if (entityId instanceof DefaultNamespacedEntityId) {\n            return (NamespacedEntityId) entityId;\n        }\n\n        if (entityId instanceof NamespacedEntityId) {\n            final String namespace = ((NamespacedEntityId) entityId).getNamespace();\n            final String name = ((NamespacedEntityId) entityId).getName();\n            return new DefaultNamespacedEntityId(namespace, name, false);\n        }\n\n        return new DefaultNamespacedEntityId(entityId);\n    }", "signature": "NamespacedEntityId of(final CharSequence entityId)", "full_signature": "public static NamespacedEntityId of(final CharSequence entityId)", "class_method_signature": "DefaultNamespacedEntityId.of(final CharSequence entityId)", "testcase": false, "constructor": false, "invocations": ["getNamespace", "getName"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}