{"test_class": {"identifier": "BluetoothBytesParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "blessed/src/test/java/com/welie/blessed/BluetoothBytesParserTest.java"}, "test_case": {"identifier": "setDateTimeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setDateTimeTest() {\n        BluetoothBytesParser parser = new BluetoothBytesParser();\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTimeZone(TimeZone.getTimeZone(\"Europe/Amsterdam\"));\n        long timestamp = 1578310812218L;\n        calendar.setTimeInMillis(timestamp);\n\n        parser.setDateTime(calendar);\n        parser.setOffset(0);\n        Date parsedDateTime = parser.getDateTime();\n        assertEquals(7, parser.getValue().length);\n        calendar.setTime(parsedDateTime);\n        assertEquals(2020, calendar.get(GregorianCalendar.YEAR));\n        assertEquals(1, calendar.get(GregorianCalendar.MONTH) + 1);\n        assertEquals(6, calendar.get(GregorianCalendar.DAY_OF_MONTH));\n        assertEquals(12, calendar.get(GregorianCalendar.HOUR_OF_DAY));\n        assertEquals(40, calendar.get(GregorianCalendar.MINUTE));\n        assertEquals(12, calendar.get(GregorianCalendar.SECOND));\n    }", "signature": "void setDateTimeTest()", "full_signature": "@Test public void setDateTimeTest()", "class_method_signature": "BluetoothBytesParserTest.setDateTimeTest()", "testcase": true, "constructor": false, "invocations": ["getInstance", "setTimeZone", "getTimeZone", "setTimeInMillis", "setDateTime", "setOffset", "getDateTime", "assertEquals", "getValue", "setTime", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "BluetoothBytesParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int offset = 0;", "modifier": "private", "type": "int", "declarator": "offset = 0", "var_name": "offset"}, {"original_string": "private byte[] mValue;", "modifier": "private", "type": "byte[]", "declarator": "mValue", "var_name": "mValue"}, {"original_string": "private ByteOrder byteOrder;", "modifier": "private", "type": "ByteOrder", "declarator": "byteOrder", "var_name": "byteOrder"}, {"original_string": "public static final int FORMAT_UINT8 = 0x11;", "modifier": "public static final", "type": "int", "declarator": "FORMAT_UINT8 = 0x11", "var_name": "FORMAT_UINT8"}, {"original_string": "public static final int FORMAT_UINT16 = 0x12;", "modifier": "public static final", "type": "int", "declarator": "FORMAT_UINT16 = 0x12", "var_name": "FORMAT_UINT16"}, {"original_string": "public static final int FORMAT_UINT32 = 0x14;", "modifier": "public static final", "type": "int", "declarator": "FORMAT_UINT32 = 0x14", "var_name": "FORMAT_UINT32"}, {"original_string": "public static final int FORMAT_SINT8 = 0x21;", "modifier": "public static final", "type": "int", "declarator": "FORMAT_SINT8 = 0x21", "var_name": "FORMAT_SINT8"}, {"original_string": "public static final int FORMAT_SINT16 = 0x22;", "modifier": "public static final", "type": "int", "declarator": "FORMAT_SINT16 = 0x22", "var_name": "FORMAT_SINT16"}, {"original_string": "public static final int FORMAT_SINT32 = 0x24;", "modifier": "public static final", "type": "int", "declarator": "FORMAT_SINT32 = 0x24", "var_name": "FORMAT_SINT32"}, {"original_string": "public static final int FORMAT_SFLOAT = 0x32;", "modifier": "public static final", "type": "int", "declarator": "FORMAT_SFLOAT = 0x32", "var_name": "FORMAT_SFLOAT"}, {"original_string": "public static final int FORMAT_FLOAT = 0x34;", "modifier": "public static final", "type": "int", "declarator": "FORMAT_FLOAT = 0x34", "var_name": "FORMAT_FLOAT"}], "methods": [{"identifier": "BluetoothBytesParser", "parameters": "()", "modifiers": "public", "return": "", "signature": " BluetoothBytesParser()", "full_signature": "public  BluetoothBytesParser()", "class_method_signature": "BluetoothBytesParser.BluetoothBytesParser()", "testcase": false, "constructor": true}, {"identifier": "BluetoothBytesParser", "parameters": "(ByteOrder byteOrder)", "modifiers": "public", "return": "", "signature": " BluetoothBytesParser(ByteOrder byteOrder)", "full_signature": "public  BluetoothBytesParser(ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.BluetoothBytesParser(ByteOrder byteOrder)", "testcase": false, "constructor": true}, {"identifier": "BluetoothBytesParser", "parameters": "(byte[] value)", "modifiers": "public", "return": "", "signature": " BluetoothBytesParser(byte[] value)", "full_signature": "public  BluetoothBytesParser(byte[] value)", "class_method_signature": "BluetoothBytesParser.BluetoothBytesParser(byte[] value)", "testcase": false, "constructor": true}, {"identifier": "BluetoothBytesParser", "parameters": "(byte[] value, ByteOrder byteOrder)", "modifiers": "public", "return": "", "signature": " BluetoothBytesParser(byte[] value, ByteOrder byteOrder)", "full_signature": "public  BluetoothBytesParser(byte[] value, ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.BluetoothBytesParser(byte[] value, ByteOrder byteOrder)", "testcase": false, "constructor": true}, {"identifier": "BluetoothBytesParser", "parameters": "(byte[] value, int offset)", "modifiers": "public", "return": "", "signature": " BluetoothBytesParser(byte[] value, int offset)", "full_signature": "public  BluetoothBytesParser(byte[] value, int offset)", "class_method_signature": "BluetoothBytesParser.BluetoothBytesParser(byte[] value, int offset)", "testcase": false, "constructor": true}, {"identifier": "BluetoothBytesParser", "parameters": "(byte[] value, int offset, ByteOrder byteOrder)", "modifiers": "public", "return": "", "signature": " BluetoothBytesParser(byte[] value, int offset, ByteOrder byteOrder)", "full_signature": "public  BluetoothBytesParser(byte[] value, int offset, ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.BluetoothBytesParser(byte[] value, int offset, ByteOrder byteOrder)", "testcase": false, "constructor": true}, {"identifier": "getIntValue", "parameters": "(int formatType)", "modifiers": "public", "return": "Integer", "signature": "Integer getIntValue(int formatType)", "full_signature": "public Integer getIntValue(int formatType)", "class_method_signature": "BluetoothBytesParser.getIntValue(int formatType)", "testcase": false, "constructor": false}, {"identifier": "getIntValue", "parameters": "(int formatType, ByteOrder byteOrder)", "modifiers": "public", "return": "Integer", "signature": "Integer getIntValue(int formatType, ByteOrder byteOrder)", "full_signature": "public Integer getIntValue(int formatType, ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.getIntValue(int formatType, ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "getLongValue", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLongValue()", "full_signature": "public long getLongValue()", "class_method_signature": "BluetoothBytesParser.getLongValue()", "testcase": false, "constructor": false}, {"identifier": "getLongValue", "parameters": "(ByteOrder byteOrder)", "modifiers": "public", "return": "long", "signature": "long getLongValue(ByteOrder byteOrder)", "full_signature": "public long getLongValue(ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.getLongValue(ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "getLongValue", "parameters": "(int offset, ByteOrder byteOrder)", "modifiers": "public", "return": "long", "signature": "long getLongValue(int offset, ByteOrder byteOrder)", "full_signature": "public long getLongValue(int offset, ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.getLongValue(int offset, ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "getIntValue", "parameters": "(int formatType, int offset, ByteOrder byteOrder)", "modifiers": "public", "return": "Integer", "signature": "Integer getIntValue(int formatType, int offset, ByteOrder byteOrder)", "full_signature": "public Integer getIntValue(int formatType, int offset, ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.getIntValue(int formatType, int offset, ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "getFloatValue", "parameters": "(int formatType)", "modifiers": "public", "return": "Float", "signature": "Float getFloatValue(int formatType)", "full_signature": "public Float getFloatValue(int formatType)", "class_method_signature": "BluetoothBytesParser.getFloatValue(int formatType)", "testcase": false, "constructor": false}, {"identifier": "getFloatValue", "parameters": "(int formatType, ByteOrder byteOrder)", "modifiers": "public", "return": "Float", "signature": "Float getFloatValue(int formatType, ByteOrder byteOrder)", "full_signature": "public Float getFloatValue(int formatType, ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.getFloatValue(int formatType, ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "getFloatValue", "parameters": "(int formatType, int offset, ByteOrder byteOrder)", "modifiers": "public", "return": "Float", "signature": "Float getFloatValue(int formatType, int offset, ByteOrder byteOrder)", "full_signature": "public Float getFloatValue(int formatType, int offset, ByteOrder byteOrder)", "class_method_signature": "BluetoothBytesParser.getFloatValue(int formatType, int offset, ByteOrder byteOrder)", "testcase": false, "constructor": false}, {"identifier": "getStringValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStringValue()", "full_signature": "public String getStringValue()", "class_method_signature": "BluetoothBytesParser.getStringValue()", "testcase": false, "constructor": false}, {"identifier": "getStringValue", "parameters": "(int offset)", "modifiers": "public", "return": "String", "signature": "String getStringValue(int offset)", "full_signature": "public String getStringValue(int offset)", "class_method_signature": "BluetoothBytesParser.getStringValue(int offset)", "testcase": false, "constructor": false}, {"identifier": "getDateTime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getDateTime()", "full_signature": "public Date getDateTime()", "class_method_signature": "BluetoothBytesParser.getDateTime()", "testcase": false, "constructor": false}, {"identifier": "getDateTime", "parameters": "(int offset)", "modifiers": "public", "return": "Date", "signature": "Date getDateTime(int offset)", "full_signature": "public Date getDateTime(int offset)", "class_method_signature": "BluetoothBytesParser.getDateTime(int offset)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getValue()", "full_signature": "public byte[] getValue()", "class_method_signature": "BluetoothBytesParser.getValue()", "testcase": false, "constructor": false}, {"identifier": "setIntValue", "parameters": "(int value, int formatType, int offset)", "modifiers": "public", "return": "boolean", "signature": "boolean setIntValue(int value, int formatType, int offset)", "full_signature": "public boolean setIntValue(int value, int formatType, int offset)", "class_method_signature": "BluetoothBytesParser.setIntValue(int value, int formatType, int offset)", "testcase": false, "constructor": false}, {"identifier": "setIntValue", "parameters": "(int value, int formatType)", "modifiers": "public", "return": "boolean", "signature": "boolean setIntValue(int value, int formatType)", "full_signature": "public boolean setIntValue(int value, int formatType)", "class_method_signature": "BluetoothBytesParser.setIntValue(int value, int formatType)", "testcase": false, "constructor": false}, {"identifier": "setLong", "parameters": "(long value)", "modifiers": "public", "return": "boolean", "signature": "boolean setLong(long value)", "full_signature": "public boolean setLong(long value)", "class_method_signature": "BluetoothBytesParser.setLong(long value)", "testcase": false, "constructor": false}, {"identifier": "setLong", "parameters": "(long value, int offset)", "modifiers": "public", "return": "boolean", "signature": "boolean setLong(long value, int offset)", "full_signature": "public boolean setLong(long value, int offset)", "class_method_signature": "BluetoothBytesParser.setLong(long value, int offset)", "testcase": false, "constructor": false}, {"identifier": "setFloatValue", "parameters": "(int mantissa, int exponent, int formatType, int offset)", "modifiers": "public", "return": "boolean", "signature": "boolean setFloatValue(int mantissa, int exponent, int formatType, int offset)", "full_signature": "public boolean setFloatValue(int mantissa, int exponent, int formatType, int offset)", "class_method_signature": "BluetoothBytesParser.setFloatValue(int mantissa, int exponent, int formatType, int offset)", "testcase": false, "constructor": false}, {"identifier": "setFloatValue", "parameters": "(float value, int precision)", "modifiers": "public", "return": "boolean", "signature": "boolean setFloatValue(float value, int precision)", "full_signature": "public boolean setFloatValue(float value, int precision)", "class_method_signature": "BluetoothBytesParser.setFloatValue(float value, int precision)", "testcase": false, "constructor": false}, {"identifier": "setString", "parameters": "(String value)", "modifiers": "public", "return": "boolean", "signature": "boolean setString(String value)", "full_signature": "public boolean setString(String value)", "class_method_signature": "BluetoothBytesParser.setString(String value)", "testcase": false, "constructor": false}, {"identifier": "setString", "parameters": "(String value, int offset)", "modifiers": "public", "return": "boolean", "signature": "boolean setString(String value, int offset)", "full_signature": "public boolean setString(String value, int offset)", "class_method_signature": "BluetoothBytesParser.setString(String value, int offset)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(byte[] value)", "modifiers": "public", "return": "void", "signature": "void setValue(byte[] value)", "full_signature": "public void setValue(byte[] value)", "class_method_signature": "BluetoothBytesParser.setValue(byte[] value)", "testcase": false, "constructor": false}, {"identifier": "setCurrentTime", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "boolean", "signature": "boolean setCurrentTime(Calendar calendar)", "full_signature": "public boolean setCurrentTime(Calendar calendar)", "class_method_signature": "BluetoothBytesParser.setCurrentTime(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "setDateTime", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "boolean", "signature": "boolean setDateTime(Calendar calendar)", "full_signature": "public boolean setDateTime(Calendar calendar)", "class_method_signature": "BluetoothBytesParser.setDateTime(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getTypeLen", "parameters": "(int formatType)", "modifiers": "private", "return": "int", "signature": "int getTypeLen(int formatType)", "full_signature": "private int getTypeLen(int formatType)", "class_method_signature": "BluetoothBytesParser.getTypeLen(int formatType)", "testcase": false, "constructor": false}, {"identifier": "unsignedByteToInt", "parameters": "(byte b)", "modifiers": "private", "return": "int", "signature": "int unsignedByteToInt(byte b)", "full_signature": "private int unsignedByteToInt(byte b)", "class_method_signature": "BluetoothBytesParser.unsignedByteToInt(byte b)", "testcase": false, "constructor": false}, {"identifier": "unsignedBytesToInt", "parameters": "(byte b0, byte b1)", "modifiers": "private", "return": "int", "signature": "int unsignedBytesToInt(byte b0, byte b1)", "full_signature": "private int unsignedBytesToInt(byte b0, byte b1)", "class_method_signature": "BluetoothBytesParser.unsignedBytesToInt(byte b0, byte b1)", "testcase": false, "constructor": false}, {"identifier": "unsignedBytesToInt", "parameters": "(byte b0, byte b1, byte b2, byte b3)", "modifiers": "private", "return": "int", "signature": "int unsignedBytesToInt(byte b0, byte b1, byte b2, byte b3)", "full_signature": "private int unsignedBytesToInt(byte b0, byte b1, byte b2, byte b3)", "class_method_signature": "BluetoothBytesParser.unsignedBytesToInt(byte b0, byte b1, byte b2, byte b3)", "testcase": false, "constructor": false}, {"identifier": "bytesToFloat", "parameters": "(byte b0, byte b1)", "modifiers": "private", "return": "float", "signature": "float bytesToFloat(byte b0, byte b1)", "full_signature": "private float bytesToFloat(byte b0, byte b1)", "class_method_signature": "BluetoothBytesParser.bytesToFloat(byte b0, byte b1)", "testcase": false, "constructor": false}, {"identifier": "bytesToFloat", "parameters": "(byte b0, byte b1, byte b2, byte b3)", "modifiers": "private", "return": "float", "signature": "float bytesToFloat(byte b0, byte b1, byte b2, byte b3)", "full_signature": "private float bytesToFloat(byte b0, byte b1, byte b2, byte b3)", "class_method_signature": "BluetoothBytesParser.bytesToFloat(byte b0, byte b1, byte b2, byte b3)", "testcase": false, "constructor": false}, {"identifier": "unsignedToSigned", "parameters": "(int unsigned, int size)", "modifiers": "private", "return": "int", "signature": "int unsignedToSigned(int unsigned, int size)", "full_signature": "private int unsignedToSigned(int unsigned, int size)", "class_method_signature": "BluetoothBytesParser.unsignedToSigned(int unsigned, int size)", "testcase": false, "constructor": false}, {"identifier": "intToSignedBits", "parameters": "(int i, int size)", "modifiers": "private", "return": "int", "signature": "int intToSignedBits(int i, int size)", "full_signature": "private int intToSignedBits(int i, int size)", "class_method_signature": "BluetoothBytesParser.intToSignedBits(int i, int size)", "testcase": false, "constructor": false}, {"identifier": "bytes2String", "parameters": "(final byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytes2String(final byte[] bytes)", "full_signature": "public static String bytes2String(final byte[] bytes)", "class_method_signature": "BluetoothBytesParser.bytes2String(final byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "mergeArrays", "parameters": "(byte[]... arrays)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] mergeArrays(byte[]... arrays)", "full_signature": "public static byte[] mergeArrays(byte[]... arrays)", "class_method_signature": "BluetoothBytesParser.mergeArrays(byte[]... arrays)", "testcase": false, "constructor": false}, {"identifier": "getOffset", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOffset()", "full_signature": "public int getOffset()", "class_method_signature": "BluetoothBytesParser.getOffset()", "testcase": false, "constructor": false}, {"identifier": "setOffset", "parameters": "(int offset)", "modifiers": "public", "return": "void", "signature": "void setOffset(int offset)", "full_signature": "public void setOffset(int offset)", "class_method_signature": "BluetoothBytesParser.setOffset(int offset)", "testcase": false, "constructor": false}, {"identifier": "getByteOrder", "parameters": "()", "modifiers": "public", "return": "ByteOrder", "signature": "ByteOrder getByteOrder()", "full_signature": "public ByteOrder getByteOrder()", "class_method_signature": "BluetoothBytesParser.getByteOrder()", "testcase": false, "constructor": false}, {"identifier": "prepareArray", "parameters": "(int neededLength)", "modifiers": "private", "return": "void", "signature": "void prepareArray(int neededLength)", "full_signature": "private void prepareArray(int neededLength)", "class_method_signature": "BluetoothBytesParser.prepareArray(int neededLength)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BluetoothBytesParser.toString()", "testcase": false, "constructor": false}], "file": "blessed/src/main/java/com/welie/blessed/BluetoothBytesParser.java"}, "focal_method": {"identifier": "setDateTime", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "boolean", "body": "public boolean setDateTime(Calendar calendar) {\n        if (calendar == null) return false;\n        mValue = new byte[7];\n        mValue[0] = (byte) calendar.get(Calendar.YEAR);\n        mValue[1] = (byte) (calendar.get(Calendar.YEAR) >> 8);\n        mValue[2] = (byte) (calendar.get(Calendar.MONTH) + 1);\n        mValue[3] = (byte) calendar.get(Calendar.DATE);\n        mValue[4] = (byte) calendar.get(Calendar.HOUR_OF_DAY);\n        mValue[5] = (byte) calendar.get(Calendar.MINUTE);\n        mValue[6] = (byte) calendar.get(Calendar.SECOND);\n        return true;\n    }", "signature": "boolean setDateTime(Calendar calendar)", "full_signature": "public boolean setDateTime(Calendar calendar)", "class_method_signature": "BluetoothBytesParser.setDateTime(Calendar calendar)", "testcase": false, "constructor": false, "invocations": ["get", "get", "get", "get", "get", "get", "get"]}, "repository": {"repo_id": 173468970, "url": "https://github.com/weliem/blessed-android", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 92, "size": 578, "license": "licensed"}}