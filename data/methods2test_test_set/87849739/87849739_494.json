{"test_class": {"identifier": "PreAuthenticatedAuthenticationProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DUMMY_AUTH_HEADER_NAME =\n            org.eclipse.ditto.services.gateway.security.HttpHeader.X_DITTO_PRE_AUTH.getName();", "modifier": "private static final", "type": "String", "declarator": "DUMMY_AUTH_HEADER_NAME =\n            org.eclipse.ditto.services.gateway.security.HttpHeader.X_DITTO_PRE_AUTH.getName()", "var_name": "DUMMY_AUTH_HEADER_NAME"}, {"original_string": "private static final HttpHeader DUMMY_AUTH_HEADER = HttpHeader.parse(DUMMY_AUTH_HEADER_NAME, \"myDummy\");", "modifier": "private static final", "type": "HttpHeader", "declarator": "DUMMY_AUTH_HEADER = HttpHeader.parse(DUMMY_AUTH_HEADER_NAME, \"myDummy\")", "var_name": "DUMMY_AUTH_HEADER"}, {"original_string": "private static final Query DUMMY_AUTH_QUERY = Query.create(new Pair<>(DUMMY_AUTH_HEADER_NAME, \"myDummy\"));", "modifier": "private static final", "type": "Query", "declarator": "DUMMY_AUTH_QUERY = Query.create(new Pair<>(DUMMY_AUTH_HEADER_NAME, \"myDummy\"))", "var_name": "DUMMY_AUTH_QUERY"}, {"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private DittoHeaders knownDittoHeaders;", "modifier": "private", "type": "DittoHeaders", "declarator": "knownDittoHeaders", "var_name": "knownDittoHeaders"}, {"original_string": "private PreAuthenticatedAuthenticationProvider underTest;", "modifier": "private", "type": "PreAuthenticatedAuthenticationProvider", "declarator": "underTest", "var_name": "underTest"}], "file": "services/gateway/security/src/test/java/org/eclipse/ditto/services/gateway/security/authentication/preauth/PreAuthenticatedAuthenticationProviderTest.java"}, "test_case": {"identifier": "isApplicableFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isApplicableFails() {\n        final boolean applicable = underTest.isApplicable(mockRequestContext(null, null));\n\n        assertThat(applicable).isFalse();\n    }", "signature": "void isApplicableFails()", "full_signature": "@Test public void isApplicableFails()", "class_method_signature": "PreAuthenticatedAuthenticationProviderTest.isApplicableFails()", "testcase": true, "constructor": false, "invocations": ["isApplicable", "mockRequestContext", "isFalse", "assertThat"]}, "focal_class": {"identifier": "PreAuthenticatedAuthenticationProvider", "superclass": "extends TimeMeasuringAuthenticationProvider<AuthenticationResult>", "interfaces": "", "fields": [{"original_string": "private static final DittoLogger LOGGER =\n            DittoLoggerFactory.getLogger(PreAuthenticatedAuthenticationProvider.class);", "modifier": "private static final", "type": "DittoLogger", "declarator": "LOGGER =\n            DittoLoggerFactory.getLogger(PreAuthenticatedAuthenticationProvider.class)", "var_name": "LOGGER"}, {"original_string": "private static final PreAuthenticatedAuthenticationProvider INSTANCE = new PreAuthenticatedAuthenticationProvider();", "modifier": "private static final", "type": "PreAuthenticatedAuthenticationProvider", "declarator": "INSTANCE = new PreAuthenticatedAuthenticationProvider()", "var_name": "INSTANCE"}], "methods": [{"identifier": "PreAuthenticatedAuthenticationProvider", "parameters": "()", "modifiers": "private", "return": "", "signature": " PreAuthenticatedAuthenticationProvider()", "full_signature": "private  PreAuthenticatedAuthenticationProvider()", "class_method_signature": "PreAuthenticatedAuthenticationProvider.PreAuthenticatedAuthenticationProvider()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "PreAuthenticatedAuthenticationProvider", "signature": "PreAuthenticatedAuthenticationProvider getInstance()", "full_signature": "public static PreAuthenticatedAuthenticationProvider getInstance()", "class_method_signature": "PreAuthenticatedAuthenticationProvider.getInstance()", "testcase": false, "constructor": false}, {"identifier": "isApplicable", "parameters": "(final RequestContext requestContext)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isApplicable(final RequestContext requestContext)", "full_signature": "@Override public boolean isApplicable(final RequestContext requestContext)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.isApplicable(final RequestContext requestContext)", "testcase": false, "constructor": false}, {"identifier": "containsHeader", "parameters": "(final RequestContext requestContext, final HttpHeader header)", "modifiers": "private static", "return": "boolean", "signature": "boolean containsHeader(final RequestContext requestContext, final HttpHeader header)", "full_signature": "private static boolean containsHeader(final RequestContext requestContext, final HttpHeader header)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.containsHeader(final RequestContext requestContext, final HttpHeader header)", "testcase": false, "constructor": false}, {"identifier": "getRequestParam", "parameters": "(final RequestContext requestContext, final HttpHeader header)", "modifiers": "private static", "return": "Optional<String>", "signature": "Optional<String> getRequestParam(final RequestContext requestContext, final HttpHeader header)", "full_signature": "private static Optional<String> getRequestParam(final RequestContext requestContext, final HttpHeader header)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.getRequestParam(final RequestContext requestContext, final HttpHeader header)", "testcase": false, "constructor": false}, {"identifier": "tryToAuthenticate", "parameters": "(final RequestContext requestContext,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Override protected", "return": "AuthenticationResult", "signature": "AuthenticationResult tryToAuthenticate(final RequestContext requestContext,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Override protected AuthenticationResult tryToAuthenticate(final RequestContext requestContext,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.tryToAuthenticate(final RequestContext requestContext,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getPreAuthenticated", "parameters": "(final RequestContext requestContext)", "modifiers": "private static", "return": "Optional<String>", "signature": "Optional<String> getPreAuthenticated(final RequestContext requestContext)", "full_signature": "private static Optional<String> getPreAuthenticated(final RequestContext requestContext)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.getPreAuthenticated(final RequestContext requestContext)", "testcase": false, "constructor": false}, {"identifier": "getAuthenticationFailedException", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "private static", "return": "DittoRuntimeException", "signature": "DittoRuntimeException getAuthenticationFailedException(final DittoHeaders dittoHeaders)", "full_signature": "private static DittoRuntimeException getAuthenticationFailedException(final DittoHeaders dittoHeaders)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.getAuthenticationFailedException(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationSubjects", "parameters": "(final String subjectsCommaSeparated)", "modifiers": "private static", "return": "List<AuthorizationSubject>", "signature": "List<AuthorizationSubject> getAuthorizationSubjects(final String subjectsCommaSeparated)", "full_signature": "private static List<AuthorizationSubject> getAuthorizationSubjects(final String subjectsCommaSeparated)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.getAuthorizationSubjects(final String subjectsCommaSeparated)", "testcase": false, "constructor": false}, {"identifier": "buildFailedToExtractAuthorizationSubjectsException", "parameters": "(\n            final String preAuthenticatedSubject, final DittoHeaders dittoHeaders)", "modifiers": "private static", "return": "DittoRuntimeException", "signature": "DittoRuntimeException buildFailedToExtractAuthorizationSubjectsException(\n            final String preAuthenticatedSubject, final DittoHeaders dittoHeaders)", "full_signature": "private static DittoRuntimeException buildFailedToExtractAuthorizationSubjectsException(\n            final String preAuthenticatedSubject, final DittoHeaders dittoHeaders)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.buildFailedToExtractAuthorizationSubjectsException(\n            final String preAuthenticatedSubject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "toFailedAuthenticationResult", "parameters": "(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Override protected", "return": "AuthenticationResult", "signature": "AuthenticationResult toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Override protected AuthenticationResult toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(final RequestContext requestContext)", "modifiers": "@Override public", "return": "AuthorizationContextType", "signature": "AuthorizationContextType getType(final RequestContext requestContext)", "full_signature": "@Override public AuthorizationContextType getType(final RequestContext requestContext)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.getType(final RequestContext requestContext)", "testcase": false, "constructor": false}], "file": "services/gateway/security/src/main/java/org/eclipse/ditto/services/gateway/security/authentication/preauth/PreAuthenticatedAuthenticationProvider.java"}, "focal_method": {"identifier": "isApplicable", "parameters": "(final RequestContext requestContext)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isApplicable(final RequestContext requestContext) {\n        return containsHeader(requestContext, HttpHeader.X_DITTO_PRE_AUTH) ||\n                containsHeader(requestContext, HttpHeader.X_DITTO_DUMMY_AUTH);\n    }", "signature": "boolean isApplicable(final RequestContext requestContext)", "full_signature": "@Override public boolean isApplicable(final RequestContext requestContext)", "class_method_signature": "PreAuthenticatedAuthenticationProvider.isApplicable(final RequestContext requestContext)", "testcase": false, "constructor": false, "invocations": ["containsHeader", "containsHeader"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}