{"test_class": {"identifier": "IndexSearchRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private IndexSearchRestController indexSearchRestController;", "modifier": "@InjectMocks\n    private", "type": "IndexSearchRestController", "declarator": "indexSearchRestController", "var_name": "indexSearchRestController"}, {"original_string": "@Mock\n    private IndexSearchService indexSearchService;", "modifier": "@Mock\n    private", "type": "IndexSearchService", "declarator": "indexSearchService", "var_name": "indexSearchService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/IndexSearchRestControllerTest.java"}, "test_case": {"identifier": "testIndexSearch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIndexSearch()\n    {\n        // Create an index search request.\n        final IndexSearchRequest indexSearchRequest =\n            new IndexSearchRequest(SEARCH_TERM, NO_INDEX_SEARCH_FILTERS, NO_INDEX_SEARCH_FACET_FIELDS, NO_ENABLE_HIT_HIGHLIGHTING);\n\n        // Create an index search response.\n        IndexSearchResponse indexSearchResponse = new IndexSearchResponse(LONG_VALUE, new ArrayList<>(), new ArrayList<>());\n\n        // Create a set of search optional fields.\n        Set<String> fields = Sets.newHashSet(FIELD_SHORT_DESCRIPTION);\n\n        // Create a set of search match fields.\n        Set<String> match = Sets.newHashSet(MATCH_COLUMN);\n\n        // Mock the external calls.\n        when(indexSearchService.indexSearch(indexSearchRequest, fields, match)).thenReturn(indexSearchResponse);\n\n        // Call the method under test.\n        IndexSearchResponse result = indexSearchRestController.indexSearch(fields, match, indexSearchRequest);\n\n        // Verify the external calls.\n        verify(indexSearchService).indexSearch(indexSearchRequest, fields, match);\n        verifyNoMoreInteractions(indexSearchService);\n\n        // Validate the result.\n        assertEquals(indexSearchResponse, result);\n    }", "signature": "void testIndexSearch()", "full_signature": "@Test public void testIndexSearch()", "class_method_signature": "IndexSearchRestControllerTest.testIndexSearch()", "testcase": true, "constructor": false, "invocations": ["newHashSet", "newHashSet", "thenReturn", "when", "indexSearch", "indexSearch", "indexSearch", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "IndexSearchRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private IndexSearchService indexSearchService;", "modifier": "@Autowired\n    private", "type": "IndexSearchService", "declarator": "indexSearchService", "var_name": "indexSearchService"}], "methods": [{"identifier": "indexSearch", "parameters": "(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)", "modifiers": "@RequestMapping(value = \"/indexSearch\", method = POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(FN_INDEX_SEARCH_POST) public", "return": "IndexSearchResponse", "signature": "IndexSearchResponse indexSearch(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)", "full_signature": "@RequestMapping(value = \"/indexSearch\", method = POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(FN_INDEX_SEARCH_POST) public IndexSearchResponse indexSearch(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)", "class_method_signature": "IndexSearchRestController.indexSearch(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/IndexSearchRestController.java"}, "focal_method": {"identifier": "indexSearch", "parameters": "(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)", "modifiers": "@RequestMapping(value = \"/indexSearch\", method = POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(FN_INDEX_SEARCH_POST) public", "return": "IndexSearchResponse", "body": "@RequestMapping(value = \"/indexSearch\", method = POST, consumes = {\"application/xml\", \"application/json\"})\n    @Secured(FN_INDEX_SEARCH_POST)\n    public IndexSearchResponse indexSearch(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)\n    {\n        return indexSearchService.indexSearch(request, fields, match);\n    }", "signature": "IndexSearchResponse indexSearch(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)", "full_signature": "@RequestMapping(value = \"/indexSearch\", method = POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(FN_INDEX_SEARCH_POST) public IndexSearchResponse indexSearch(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)", "class_method_signature": "IndexSearchRestController.indexSearch(@RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields,\n        @RequestParam(value = \"match\", required = false, defaultValue = \"\") Set<String> match, @RequestBody IndexSearchRequest request)", "testcase": false, "constructor": false, "invocations": ["indexSearch"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}