{"test_class": {"identifier": "ConfigGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "kogito-codegen/src/test/java/org/kie/kogito/codegen/ConfigGeneratorTest.java"}, "test_case": {"identifier": "withProcessConfigNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void withProcessConfigNull() {\n        final ConfigGenerator generator = new ConfigGenerator(\"org.kie.kogito.test\");\n        final ConfigGenerator returnedConfigGenerator = generator.withProcessConfig(null);\n        assertThat(returnedConfigGenerator).isNotNull();\n        assertThat(returnedConfigGenerator).isSameAs(generator);\n    }", "signature": "void withProcessConfigNull()", "full_signature": "@Test public void withProcessConfigNull()", "class_method_signature": "ConfigGeneratorTest.withProcessConfigNull()", "testcase": true, "constructor": false, "invocations": ["withProcessConfig", "isNotNull", "assertThat", "isSameAs", "assertThat"]}, "focal_class": {"identifier": "ConfigGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ConfigGenerator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ConfigGenerator.class)", "var_name": "LOGGER"}, {"original_string": "private final ApplicationConfigGenerator applicationConfigGenerator;", "modifier": "private final", "type": "ApplicationConfigGenerator", "declarator": "applicationConfigGenerator", "var_name": "applicationConfigGenerator"}, {"original_string": "private DependencyInjectionAnnotator annotator;", "modifier": "private", "type": "DependencyInjectionAnnotator", "declarator": "annotator", "var_name": "annotator"}, {"original_string": "private ProcessConfigGenerator processConfig;", "modifier": "private", "type": "ProcessConfigGenerator", "declarator": "processConfig", "var_name": "processConfig"}, {"original_string": "private RuleConfigGenerator ruleConfig;", "modifier": "private", "type": "RuleConfigGenerator", "declarator": "ruleConfig", "var_name": "ruleConfig"}, {"original_string": "private DecisionConfigGenerator decisionConfig;", "modifier": "private", "type": "DecisionConfigGenerator", "declarator": "decisionConfig", "var_name": "decisionConfig"}, {"original_string": "private PredictionConfigGenerator predictionConfig;", "modifier": "private", "type": "PredictionConfigGenerator", "declarator": "predictionConfig", "var_name": "predictionConfig"}, {"original_string": "private String packageName;", "modifier": "private", "type": "String", "declarator": "packageName", "var_name": "packageName"}, {"original_string": "private final String sourceFilePath;", "modifier": "private final", "type": "String", "declarator": "sourceFilePath", "var_name": "sourceFilePath"}, {"original_string": "private final String targetTypeName;", "modifier": "private final", "type": "String", "declarator": "targetTypeName", "var_name": "targetTypeName"}, {"original_string": "private final String targetCanonicalName;", "modifier": "private final", "type": "String", "declarator": "targetCanonicalName", "var_name": "targetCanonicalName"}, {"original_string": "private Collection<String> addons;", "modifier": "private", "type": "Collection<String>", "declarator": "addons", "var_name": "addons"}], "methods": [{"identifier": "ConfigGenerator", "parameters": "(String packageName)", "modifiers": "public", "return": "", "signature": " ConfigGenerator(String packageName)", "full_signature": "public  ConfigGenerator(String packageName)", "class_method_signature": "ConfigGenerator.ConfigGenerator(String packageName)", "testcase": false, "constructor": true}, {"identifier": "withProcessConfig", "parameters": "(ProcessConfigGenerator cfg)", "modifiers": "public", "return": "ConfigGenerator", "signature": "ConfigGenerator withProcessConfig(ProcessConfigGenerator cfg)", "full_signature": "public ConfigGenerator withProcessConfig(ProcessConfigGenerator cfg)", "class_method_signature": "ConfigGenerator.withProcessConfig(ProcessConfigGenerator cfg)", "testcase": false, "constructor": false}, {"identifier": "withRuleConfig", "parameters": "(RuleConfigGenerator cfg)", "modifiers": "public", "return": "ConfigGenerator", "signature": "ConfigGenerator withRuleConfig(RuleConfigGenerator cfg)", "full_signature": "public ConfigGenerator withRuleConfig(RuleConfigGenerator cfg)", "class_method_signature": "ConfigGenerator.withRuleConfig(RuleConfigGenerator cfg)", "testcase": false, "constructor": false}, {"identifier": "withDecisionConfig", "parameters": "(DecisionConfigGenerator cfg)", "modifiers": "public", "return": "ConfigGenerator", "signature": "ConfigGenerator withDecisionConfig(DecisionConfigGenerator cfg)", "full_signature": "public ConfigGenerator withDecisionConfig(DecisionConfigGenerator cfg)", "class_method_signature": "ConfigGenerator.withDecisionConfig(DecisionConfigGenerator cfg)", "testcase": false, "constructor": false}, {"identifier": "withPredictionConfig", "parameters": "(PredictionConfigGenerator cfg)", "modifiers": "public", "return": "ConfigGenerator", "signature": "ConfigGenerator withPredictionConfig(PredictionConfigGenerator cfg)", "full_signature": "public ConfigGenerator withPredictionConfig(PredictionConfigGenerator cfg)", "class_method_signature": "ConfigGenerator.withPredictionConfig(PredictionConfigGenerator cfg)", "testcase": false, "constructor": false}, {"identifier": "withDependencyInjection", "parameters": "(DependencyInjectionAnnotator annotator)", "modifiers": "public", "return": "ConfigGenerator", "signature": "ConfigGenerator withDependencyInjection(DependencyInjectionAnnotator annotator)", "full_signature": "public ConfigGenerator withDependencyInjection(DependencyInjectionAnnotator annotator)", "class_method_signature": "ConfigGenerator.withDependencyInjection(DependencyInjectionAnnotator annotator)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "()", "modifiers": "public", "return": "ObjectCreationExpr", "signature": "ObjectCreationExpr newInstance()", "full_signature": "public ObjectCreationExpr newInstance()", "class_method_signature": "ConfigGenerator.newInstance()", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "Collection<GeneratedFile>", "signature": "Collection<GeneratedFile> generate()", "full_signature": "public Collection<GeneratedFile> generate()", "class_method_signature": "ConfigGenerator.generate()", "testcase": false, "constructor": false}, {"identifier": "generateApplicationConfigDescriptor", "parameters": "()", "modifiers": "private", "return": "GeneratedFile", "signature": "GeneratedFile generateApplicationConfigDescriptor()", "full_signature": "private GeneratedFile generateApplicationConfigDescriptor()", "class_method_signature": "ConfigGenerator.generateApplicationConfigDescriptor()", "testcase": false, "constructor": false}, {"identifier": "generateProcessConfigDescriptor", "parameters": "()", "modifiers": "private", "return": "Optional<GeneratedFile>", "signature": "Optional<GeneratedFile> generateProcessConfigDescriptor()", "full_signature": "private Optional<GeneratedFile> generateProcessConfigDescriptor()", "class_method_signature": "ConfigGenerator.generateProcessConfigDescriptor()", "testcase": false, "constructor": false}, {"identifier": "generateRuleConfigDescriptor", "parameters": "()", "modifiers": "private", "return": "Optional<GeneratedFile>", "signature": "Optional<GeneratedFile> generateRuleConfigDescriptor()", "full_signature": "private Optional<GeneratedFile> generateRuleConfigDescriptor()", "class_method_signature": "ConfigGenerator.generateRuleConfigDescriptor()", "testcase": false, "constructor": false}, {"identifier": "generateDecisionConfigDescriptor", "parameters": "()", "modifiers": "private", "return": "Optional<GeneratedFile>", "signature": "Optional<GeneratedFile> generateDecisionConfigDescriptor()", "full_signature": "private Optional<GeneratedFile> generateDecisionConfigDescriptor()", "class_method_signature": "ConfigGenerator.generateDecisionConfigDescriptor()", "testcase": false, "constructor": false}, {"identifier": "generatePredictionConfigDescriptor", "parameters": "()", "modifiers": "private", "return": "Optional<GeneratedFile>", "signature": "Optional<GeneratedFile> generatePredictionConfigDescriptor()", "full_signature": "private Optional<GeneratedFile> generatePredictionConfigDescriptor()", "class_method_signature": "ConfigGenerator.generatePredictionConfigDescriptor()", "testcase": false, "constructor": false}, {"identifier": "generateBeanConfig", "parameters": "()", "modifiers": "private", "return": "Optional<GeneratedFile>", "signature": "Optional<GeneratedFile> generateBeanConfig()", "full_signature": "private Optional<GeneratedFile> generateBeanConfig()", "class_method_signature": "ConfigGenerator.generateBeanConfig()", "testcase": false, "constructor": false}, {"identifier": "withAddons", "parameters": "(Collection<String> addons)", "modifiers": "public", "return": "void", "signature": "void withAddons(Collection<String> addons)", "full_signature": "public void withAddons(Collection<String> addons)", "class_method_signature": "ConfigGenerator.withAddons(Collection<String> addons)", "testcase": false, "constructor": false}], "file": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ConfigGenerator.java"}, "focal_method": {"identifier": "withProcessConfig", "parameters": "(ProcessConfigGenerator cfg)", "modifiers": "public", "return": "ConfigGenerator", "body": "public ConfigGenerator withProcessConfig(ProcessConfigGenerator cfg) {\n        this.processConfig = cfg;\n        if (this.processConfig != null) {\n            this.processConfig.withDependencyInjection(annotator);\n        }\n        return this;\n    }", "signature": "ConfigGenerator withProcessConfig(ProcessConfigGenerator cfg)", "full_signature": "public ConfigGenerator withProcessConfig(ProcessConfigGenerator cfg)", "class_method_signature": "ConfigGenerator.withProcessConfig(ProcessConfigGenerator cfg)", "testcase": false, "constructor": false, "invocations": ["withDependencyInjection"]}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}