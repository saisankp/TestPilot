{"test_class": {"identifier": "SyncClientAdapterHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ANSWER = 42;", "modifier": "private static final", "type": "int", "declarator": "ANSWER = 42", "var_name": "ANSWER"}], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/adapter/SyncClientAdapterHandlerTest.java"}, "test_case": {"identifier": "testHandleSyncResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandleSyncResult() {\n        DeepThoughtSync syncDelegate = () -> ANSWER;\n        DeepThoughtSync sync = SyncClientAdapterHandler.newHandler(DeepThoughtSync.class, DeepThoughtSync.class,\n                syncDelegate);\n\n        assertThat(sync.answerQuestionOfLifeUniverseAndEverything()).isEqualTo(ANSWER);\n    }", "signature": "void testHandleSyncResult()", "full_signature": "@Test public void testHandleSyncResult()", "class_method_signature": "SyncClientAdapterHandlerTest.testHandleSyncResult()", "testcase": true, "constructor": false, "invocations": ["newHandler", "isEqualTo", "assertThat", "answerQuestionOfLifeUniverseAndEverything"]}, "focal_class": {"identifier": "SyncClientAdapterHandler", "superclass": "", "interfaces": "implements InvocationHandler", "fields": [{"original_string": "private static final String METHOD_EQUALS = \"equals\";", "modifier": "private static final", "type": "String", "declarator": "METHOD_EQUALS = \"equals\"", "var_name": "METHOD_EQUALS"}, {"original_string": "private final Class<?> asyncIfcClass;", "modifier": "private final", "type": "Class<?>", "declarator": "asyncIfcClass", "var_name": "asyncIfcClass"}, {"original_string": "private final Object delegate;", "modifier": "private final", "type": "Object", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "SyncClientAdapterHandler", "parameters": "(Class<?> asyncIfcClass, Object delegate)", "modifiers": "private", "return": "", "signature": " SyncClientAdapterHandler(Class<?> asyncIfcClass, Object delegate)", "full_signature": "private  SyncClientAdapterHandler(Class<?> asyncIfcClass, Object delegate)", "class_method_signature": "SyncClientAdapterHandler.SyncClientAdapterHandler(Class<?> asyncIfcClass, Object delegate)", "testcase": false, "constructor": true}, {"identifier": "newHandler", "parameters": "(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter)", "modifiers": "public static", "return": "S", "signature": "S newHandler(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter)", "full_signature": "public static S newHandler(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter)", "class_method_signature": "SyncClientAdapterHandler.newHandler(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(Object proxy, Method method, Object[] args)", "modifiers": "@Override public", "return": "Object", "signature": "Object invoke(Object proxy, Method method, Object[] args)", "full_signature": "@Override public Object invoke(Object proxy, Method method, Object[] args)", "class_method_signature": "SyncClientAdapterHandler.invoke(Object proxy, Method method, Object[] args)", "testcase": false, "constructor": false}, {"identifier": "handleMethodFromObject", "parameters": "(Method method, Object[] args)", "modifiers": "private", "return": "Object", "signature": "Object handleMethodFromObject(Method method, Object[] args)", "full_signature": "private Object handleMethodFromObject(Method method, Object[] args)", "class_method_signature": "SyncClientAdapterHandler.handleMethodFromObject(Method method, Object[] args)", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/adapter/SyncClientAdapterHandler.java"}, "focal_method": {"identifier": "newHandler", "parameters": "(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter)", "modifiers": "public static", "return": "S", "body": "public static <S, A> S newHandler(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter) {\n        SyncClientAdapterHandler handler = new SyncClientAdapterHandler(asyncIfcClass, delegateAdapter);\n        Class<?>[] ifcClasses = new Class<?>[]{syncIfcClass};\n        return syncIfcClass.cast(Proxy.newProxyInstance(syncIfcClass.getClassLoader(), ifcClasses, handler));\n    }", "signature": "S newHandler(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter)", "full_signature": "public static S newHandler(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter)", "class_method_signature": "SyncClientAdapterHandler.newHandler(Class<? extends S> syncIfcClass, Class<? super A> asyncIfcClass,\n                                      A delegateAdapter)", "testcase": false, "constructor": false, "invocations": ["cast", "newProxyInstance", "getClassLoader"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}