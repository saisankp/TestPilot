{"test_class": {"identifier": "PeekIteratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<Integer> emptyList = new ArrayList<Integer>();", "modifier": "private final", "type": "List<Integer>", "declarator": "emptyList = new ArrayList<Integer>()", "var_name": "emptyList"}, {"original_string": "private final List<Integer> listWithElements = new ArrayList<Integer>();", "modifier": "private final", "type": "List<Integer>", "declarator": "listWithElements = new ArrayList<Integer>()", "var_name": "listWithElements"}], "file": "algs/src/test/java/com/github/kowshik/bigo/collections/PeekIteratorTest.java"}, "test_case": {"identifier": "next_ThrowsExceptionWithEmptyList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void next_ThrowsExceptionWithEmptyList() {\n\t\tPeekIterator<Integer> tested = new PeekIterator<Integer>(\n\t\t\t\temptyList.iterator());\n\n\t\tboolean thrown = false;\n\n\t\ttry {\n\t\t\ttested.next();\n\t\t} catch (NoSuchElementException e) {\n\t\t\tthrown = true;\n\t\t}\n\n\t\tassertTrue(String.format(\"Exception: %s not thrown\",\n\t\t\t\tNoSuchElementException.class.getCanonicalName()), thrown);\n\t}", "signature": "void next_ThrowsExceptionWithEmptyList()", "full_signature": "@Test public void next_ThrowsExceptionWithEmptyList()", "class_method_signature": "PeekIteratorTest.next_ThrowsExceptionWithEmptyList()", "testcase": true, "constructor": false, "invocations": ["iterator", "next", "assertTrue", "format", "getCanonicalName"]}, "focal_class": {"identifier": "PeekIterator", "superclass": "", "interfaces": "implements Iterator<T>", "fields": [{"original_string": "private final Iterator<T> iterator;", "modifier": "private final", "type": "Iterator<T>", "declarator": "iterator", "var_name": "iterator"}, {"original_string": "private T nextitem;", "modifier": "private", "type": "T", "declarator": "nextitem", "var_name": "nextitem"}], "methods": [{"identifier": "PeekIterator", "parameters": "(Iterator<T> iterator)", "modifiers": "public", "return": "", "signature": " PeekIterator(Iterator<T> iterator)", "full_signature": "public  PeekIterator(Iterator<T> iterator)", "class_method_signature": "PeekIterator.PeekIterator(Iterator<T> iterator)", "testcase": false, "constructor": true}, {"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "PeekIterator.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T next()", "full_signature": "@Override public T next()", "class_method_signature": "PeekIterator.next()", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T peek()", "full_signature": "public T peek()", "class_method_signature": "PeekIterator.peek()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void remove()", "full_signature": "@Override public void remove()", "class_method_signature": "PeekIterator.remove()", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/kowshik/bigo/collections/PeekIterator.java"}, "focal_method": {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "T", "body": "@Override\n\tpublic T next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow (new NoSuchElementException(\"Iterator has no elements left.\"));\n\t\t}\n\n\t\tT toReturn = nextitem;\n\t\tnextitem = null;\n\t\treturn toReturn;\n\t}", "signature": "T next()", "full_signature": "@Override public T next()", "class_method_signature": "PeekIterator.next()", "testcase": false, "constructor": false, "invocations": ["hasNext"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}