{"test_class": {"identifier": "FileIndexerQueueListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILENAME = \"filename\";", "modifier": "private static final", "type": "String", "declarator": "FILENAME = \"filename\"", "var_name": "FILENAME"}, {"original_string": "private IndexMessage indexMessage;", "modifier": "private", "type": "IndexMessage", "declarator": "indexMessage", "var_name": "indexMessage"}, {"original_string": "@Mock\n    private LuceneEngine luceneEngine;", "modifier": "@Mock\n    private", "type": "LuceneEngine", "declarator": "luceneEngine", "var_name": "luceneEngine"}, {"original_string": "@Mock\n    private Message message;", "modifier": "@Mock\n    private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "@Mock\n    private ObjectMessage objectMessage;", "modifier": "@Mock\n    private", "type": "ObjectMessage", "declarator": "objectMessage", "var_name": "objectMessage"}, {"original_string": "@InjectMocks\n    private FileIndexerQueueListener underTest;", "modifier": "@InjectMocks\n    private", "type": "FileIndexerQueueListener", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-message-search/modules/wilma-message-search-lucene/src/test/java/com/epam/wilma/message/search/jms/FileIndexerQueueListenerTest.java"}, "test_case": {"identifier": "testOnMessageWhenTypeIsNotAddOrDeleteShouldDoNothing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnMessageWhenTypeIsNotAddOrDeleteShouldDoNothing() throws JMSException {\n        //GIVEN\n        indexMessage = new IndexMessage(FILENAME, \"modify\");\n        given(objectMessage.getObject()).willReturn(indexMessage);\n        //WHEN\n        underTest.onMessage(objectMessage);\n        //THEN\n        verify(luceneEngine, never()).addFileToIndex(FILENAME);\n        verify(luceneEngine, never()).deleteFileFromIndex(FILENAME);\n    }", "signature": "void testOnMessageWhenTypeIsNotAddOrDeleteShouldDoNothing()", "full_signature": "@Test public void testOnMessageWhenTypeIsNotAddOrDeleteShouldDoNothing()", "class_method_signature": "FileIndexerQueueListenerTest.testOnMessageWhenTypeIsNotAddOrDeleteShouldDoNothing()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getObject", "onMessage", "addFileToIndex", "verify", "never", "deleteFileFromIndex", "verify", "never"]}, "focal_class": {"identifier": "FileIndexerQueueListener", "superclass": "", "interfaces": "implements MessageListener", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(FileIndexerQueueListener.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(FileIndexerQueueListener.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private LuceneEngine luceneEngine;", "modifier": "@Autowired\n    private", "type": "LuceneEngine", "declarator": "luceneEngine", "var_name": "luceneEngine"}], "methods": [{"identifier": "onMessage", "parameters": "(final Message message)", "modifiers": "@Override public", "return": "void", "signature": "void onMessage(final Message message)", "full_signature": "@Override public void onMessage(final Message message)", "class_method_signature": "FileIndexerQueueListener.onMessage(final Message message)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void shutdown()", "full_signature": "private void shutdown()", "class_method_signature": "FileIndexerQueueListener.shutdown()", "testcase": false, "constructor": false}], "file": "wilma-message-search/modules/wilma-message-search-lucene/src/main/java/com/epam/wilma/message/search/jms/FileIndexerQueueListener.java"}, "focal_method": {"identifier": "onMessage", "parameters": "(final Message message)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onMessage(final Message message) {\n        if (message instanceof ObjectMessage) {\n            ObjectMessage objectMessage = (ObjectMessage) message;\n            try {\n                IndexMessage indexMessage = (IndexMessage) objectMessage.getObject();\n                String fileName = indexMessage.getFileName();\n                String type = indexMessage.getType();\n                if (type.equals(IndexingType.ADD.getName())) {\n                    luceneEngine.addFileToIndex(fileName);\n                } else if (type.equals(IndexingType.DELETE.getName())) {\n                    luceneEngine.deleteFileFromIndex(fileName);\n                }\n            } catch (JMSException e) {\n                throw new SystemException(\"Message information transfer failed. Reason:\" + e.getMessage());\n            } catch (OutOfMemoryError e) {\n                logger.error(\"HeapMaxMemory:\" + Runtime.getRuntime().maxMemory() + \", HeapTotalMemory:\" + Runtime.getRuntime().totalMemory()\n                        + \", HeapFreeMemory:\" + Runtime.getRuntime().freeMemory() + \", Exception: \", e);\n                shutdown();\n            }\n\n        }\n    }", "signature": "void onMessage(final Message message)", "full_signature": "@Override public void onMessage(final Message message)", "class_method_signature": "FileIndexerQueueListener.onMessage(final Message message)", "testcase": false, "constructor": false, "invocations": ["getObject", "getFileName", "getType", "equals", "getName", "addFileToIndex", "equals", "getName", "deleteFileFromIndex", "getMessage", "error", "maxMemory", "getRuntime", "totalMemory", "getRuntime", "freeMemory", "getRuntime", "shutdown"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}