{"test_class": {"identifier": "DisplayerTypeSelectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    DisplayerTypeSelector.View typeView;", "modifier": "@Mock", "type": "DisplayerTypeSelector.View", "declarator": "typeView", "var_name": "typeView"}, {"original_string": "@Mock\n    DisplayerSubtypeSelector subtypeSelector;", "modifier": "@Mock", "type": "DisplayerSubtypeSelector", "declarator": "subtypeSelector", "var_name": "subtypeSelector"}, {"original_string": "@Mock\n    EventSourceMock<DisplayerTypeSelectedEvent> typeSelectedEvent;", "modifier": "@Mock", "type": "EventSourceMock<DisplayerTypeSelectedEvent>", "declarator": "typeSelectedEvent", "var_name": "typeSelectedEvent"}, {"original_string": "DisplayerTypeSelector presenter;", "modifier": "", "type": "DisplayerTypeSelector", "declarator": "presenter", "var_name": "presenter"}], "file": "dashbuilder-client/dashbuilder-displayer-client/src/test/java/org/dashbuilder/displayer/client/widgets/DisplayerTypeSelectorTest.java"}, "test_case": {"identifier": "testOnSelect", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnSelect() {\n        presenter.onSelect(BARCHART);\n        assertEquals(presenter.getSelectedType(), BARCHART);\n        verify(typeSelectedEvent).fire(any(DisplayerTypeSelectedEvent.class));\n    }", "signature": "void testOnSelect()", "full_signature": "@Test public void testOnSelect()", "class_method_signature": "DisplayerTypeSelectorTest.testOnSelect()", "testcase": true, "constructor": false, "invocations": ["onSelect", "assertEquals", "getSelectedType", "fire", "verify", "any"]}, "focal_class": {"identifier": "DisplayerTypeSelector", "superclass": "", "interfaces": "implements IsWidget", "fields": [{"original_string": "View view = null;", "modifier": "", "type": "View", "declarator": "view = null", "var_name": "view"}, {"original_string": "DisplayerType selectedType = DisplayerType.BARCHART;", "modifier": "", "type": "DisplayerType", "declarator": "selectedType = DisplayerType.BARCHART", "var_name": "selectedType"}, {"original_string": "DisplayerSubtypeSelector subtypeSelector;", "modifier": "", "type": "DisplayerSubtypeSelector", "declarator": "subtypeSelector", "var_name": "subtypeSelector"}, {"original_string": "Event<DisplayerTypeSelectedEvent> typeSelectedEvent;", "modifier": "", "type": "Event<DisplayerTypeSelectedEvent>", "declarator": "typeSelectedEvent", "var_name": "typeSelectedEvent"}], "methods": [{"identifier": "DisplayerTypeSelector", "parameters": "(View view,\n                                 DisplayerSubtypeSelector subtypeSelector,\n                                 Event<DisplayerTypeSelectedEvent> typeSelectedEvent)", "modifiers": "@Inject public", "return": "", "signature": " DisplayerTypeSelector(View view,\n                                 DisplayerSubtypeSelector subtypeSelector,\n                                 Event<DisplayerTypeSelectedEvent> typeSelectedEvent)", "full_signature": "@Inject public  DisplayerTypeSelector(View view,\n                                 DisplayerSubtypeSelector subtypeSelector,\n                                 Event<DisplayerTypeSelectedEvent> typeSelectedEvent)", "class_method_signature": "DisplayerTypeSelector.DisplayerTypeSelector(View view,\n                                 DisplayerSubtypeSelector subtypeSelector,\n                                 Event<DisplayerTypeSelectedEvent> typeSelectedEvent)", "testcase": false, "constructor": true}, {"identifier": "asWidget", "parameters": "()", "modifiers": "@Override public", "return": "Widget", "signature": "Widget asWidget()", "full_signature": "@Override public Widget asWidget()", "class_method_signature": "DisplayerTypeSelector.asWidget()", "testcase": false, "constructor": false}, {"identifier": "getSelectedType", "parameters": "()", "modifiers": "public", "return": "DisplayerType", "signature": "DisplayerType getSelectedType()", "full_signature": "public DisplayerType getSelectedType()", "class_method_signature": "DisplayerTypeSelector.getSelectedType()", "testcase": false, "constructor": false}, {"identifier": "getSelectedSubType", "parameters": "()", "modifiers": "public", "return": "DisplayerSubType", "signature": "DisplayerSubType getSelectedSubType()", "full_signature": "public DisplayerSubType getSelectedSubType()", "class_method_signature": "DisplayerTypeSelector.getSelectedSubType()", "testcase": false, "constructor": false}, {"identifier": "getSubtypeSelector", "parameters": "()", "modifiers": "public", "return": "DisplayerSubtypeSelector", "signature": "DisplayerSubtypeSelector getSubtypeSelector()", "full_signature": "public DisplayerSubtypeSelector getSubtypeSelector()", "class_method_signature": "DisplayerTypeSelector.getSubtypeSelector()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(DisplayerType selectedType, DisplayerSubType selectedSubtype)", "modifiers": "public", "return": "void", "signature": "void init(DisplayerType selectedType, DisplayerSubType selectedSubtype)", "full_signature": "public void init(DisplayerType selectedType, DisplayerSubType selectedSubtype)", "class_method_signature": "DisplayerTypeSelector.init(DisplayerType selectedType, DisplayerSubType selectedSubtype)", "testcase": false, "constructor": false}, {"identifier": "onSelect", "parameters": "(DisplayerType type)", "modifiers": "", "return": "void", "signature": "void onSelect(DisplayerType type)", "full_signature": " void onSelect(DisplayerType type)", "class_method_signature": "DisplayerTypeSelector.onSelect(DisplayerType type)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-displayer-client/src/main/java/org/dashbuilder/displayer/client/widgets/DisplayerTypeSelector.java"}, "focal_method": {"identifier": "onSelect", "parameters": "(DisplayerType type)", "modifiers": "", "return": "void", "body": "void onSelect(DisplayerType type) {\n        selectedType = type;\n        subtypeSelector.init(type, null);\n        typeSelectedEvent.fire(new DisplayerTypeSelectedEvent(selectedType));\n    }", "signature": "void onSelect(DisplayerType type)", "full_signature": " void onSelect(DisplayerType type)", "class_method_signature": "DisplayerTypeSelector.onSelect(DisplayerType type)", "testcase": false, "constructor": false, "invocations": ["init", "fire"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}