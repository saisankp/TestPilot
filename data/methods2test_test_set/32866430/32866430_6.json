{"test_class": {"identifier": "AutomationSecretResponseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ImmutableMap<String, String> metadata =\n      ImmutableMap.of(\"key1\", \"value1\", \"key2\", \"value2\");", "modifier": "private static final", "type": "ImmutableMap<String, String>", "declarator": "metadata =\n      ImmutableMap.of(\"key1\", \"value1\", \"key2\", \"value2\")", "var_name": "metadata"}, {"original_string": "private static final ApiDate NOW = ApiDate.now();", "modifier": "private static final", "type": "ApiDate", "declarator": "NOW = ApiDate.now()", "var_name": "NOW"}, {"original_string": "private static final Secret secret = new Secret(0, \"name\", null, () -> \"YWJj\", \"checksum\", NOW, null, NOW, null, metadata,\n      \"upload\", null, 1136214245, null, null, null);", "modifier": "private static final", "type": "Secret", "declarator": "secret = new Secret(0, \"name\", null, () -> \"YWJj\", \"checksum\", NOW, null, NOW, null, metadata,\n      \"upload\", null, 1136214245, null, null, null)", "var_name": "secret"}], "file": "api/src/test/java/keywhiz/api/AutomationSecretResponseTest.java"}, "test_case": {"identifier": "serializesCorrectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void serializesCorrectly() throws Exception {\n    String secret = \"YXNkZGFz\";\n\n    AutomationSecretResponse automationSecretResponse = AutomationSecretResponse.create(\n        0,\n        \"Database_Password\",\n        secret,\n        ApiDate.parse(\"2011-09-29T15:46:00.000Z\"),\n        ImmutableMap.of(),\n        ImmutableList.of(),\n        1136214245);\n    assertThat(asJson(automationSecretResponse))\n        .isEqualTo(jsonFixture(\"fixtures/automationSecretResponse.json\"));\n\n    AutomationSecretResponse automationSecretResponseWithMetadata = AutomationSecretResponse.create(\n        66,\n        \"Nobody_PgPass\",\n        secret,\n        ApiDate.parse(\"2011-09-29T15:46:00.000Z\"),\n        ImmutableMap.of(\"mode\", \"0400\", \"owner\", \"nobody\"),\n        ImmutableList.of(),\n        1136214245);\n    assertThat(asJson(automationSecretResponseWithMetadata))\n        .isEqualTo(jsonFixture(\"fixtures/automationSecretResponseWithMetadata.json\"));\n  }", "signature": "void serializesCorrectly()", "full_signature": "@Test public void serializesCorrectly()", "class_method_signature": "AutomationSecretResponseTest.serializesCorrectly()", "testcase": true, "constructor": false, "invocations": ["create", "parse", "of", "of", "isEqualTo", "assertThat", "asJson", "jsonFixture", "create", "parse", "of", "of", "isEqualTo", "assertThat", "asJson", "jsonFixture"]}, "focal_class": {"identifier": "AutomationSecretResponse", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "create", "parameters": "(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry)", "modifiers": "public static", "return": "AutomationSecretResponse", "signature": "AutomationSecretResponse create(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry)", "full_signature": "public static AutomationSecretResponse create(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry)", "class_method_signature": "AutomationSecretResponse.create(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry)", "testcase": false, "constructor": false}, {"identifier": "fromSecret", "parameters": "(Secret secret, ImmutableList<Group> groups)", "modifiers": "public static", "return": "AutomationSecretResponse", "signature": "AutomationSecretResponse fromSecret(Secret secret, ImmutableList<Group> groups)", "full_signature": "public static AutomationSecretResponse fromSecret(Secret secret, ImmutableList<Group> groups)", "class_method_signature": "AutomationSecretResponse.fromSecret(Secret secret, ImmutableList<Group> groups)", "testcase": false, "constructor": false}, {"identifier": "id", "parameters": "()", "modifiers": "@JsonProperty(\"id\") public abstract", "return": "long", "signature": "long id()", "full_signature": "@JsonProperty(\"id\") public abstract long id()", "class_method_signature": "AutomationSecretResponse.id()", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "()", "modifiers": "@JsonProperty(\"name\") public abstract", "return": "String", "signature": "String name()", "full_signature": "@JsonProperty(\"name\") public abstract String name()", "class_method_signature": "AutomationSecretResponse.name()", "testcase": false, "constructor": false}, {"identifier": "secret", "parameters": "()", "modifiers": "@JsonProperty(\"secret\") public abstract", "return": "String", "signature": "String secret()", "full_signature": "@JsonProperty(\"secret\") public abstract String secret()", "class_method_signature": "AutomationSecretResponse.secret()", "testcase": false, "constructor": false}, {"identifier": "secretLength", "parameters": "()", "modifiers": "@JsonProperty(\"secretLength\") public abstract", "return": "long", "signature": "long secretLength()", "full_signature": "@JsonProperty(\"secretLength\") public abstract long secretLength()", "class_method_signature": "AutomationSecretResponse.secretLength()", "testcase": false, "constructor": false}, {"identifier": "creationDate", "parameters": "()", "modifiers": "@JsonProperty(\"creationDate\") public abstract", "return": "ApiDate", "signature": "ApiDate creationDate()", "full_signature": "@JsonProperty(\"creationDate\") public abstract ApiDate creationDate()", "class_method_signature": "AutomationSecretResponse.creationDate()", "testcase": false, "constructor": false}, {"identifier": "groups", "parameters": "()", "modifiers": "@JsonProperty(\"groups\") public abstract", "return": "ImmutableList<Group>", "signature": "ImmutableList<Group> groups()", "full_signature": "@JsonProperty(\"groups\") public abstract ImmutableList<Group> groups()", "class_method_signature": "AutomationSecretResponse.groups()", "testcase": false, "constructor": false}, {"identifier": "metadata", "parameters": "()", "modifiers": "@JsonAnyGetter @JsonProperty(\"metadata\") public abstract", "return": "Map<String, String>", "signature": "Map<String, String> metadata()", "full_signature": "@JsonAnyGetter @JsonProperty(\"metadata\") public abstract Map<String, String> metadata()", "class_method_signature": "AutomationSecretResponse.metadata()", "testcase": false, "constructor": false}, {"identifier": "expiry", "parameters": "()", "modifiers": "@JsonProperty(\"expiry\") public abstract", "return": "long", "signature": "long expiry()", "full_signature": "@JsonProperty(\"expiry\") public abstract long expiry()", "class_method_signature": "AutomationSecretResponse.expiry()", "testcase": false, "constructor": false}], "file": "api/src/main/java/keywhiz/api/AutomationSecretResponse.java"}, "focal_method": {"identifier": "create", "parameters": "(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry)", "modifiers": "public static", "return": "AutomationSecretResponse", "body": "public static AutomationSecretResponse create(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry) {\n    return new AutoValue_AutomationSecretResponse(id, name, secret, decodedLength(secret),\n        creationDate, groups, metadata, expiry);\n  }", "signature": "AutomationSecretResponse create(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry)", "full_signature": "public static AutomationSecretResponse create(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry)", "class_method_signature": "AutomationSecretResponse.create(long id, String name, String secret,\n      ApiDate creationDate,\n      ImmutableMap<String, String> metadata, ImmutableList<Group> groups, long expiry)", "testcase": false, "constructor": false, "invocations": ["decodedLength"]}, "repository": {"repo_id": 32866430, "url": "https://github.com/square/keywhiz", "stars": 2186, "created": "3/25/2015 1:31:39 PM +00:00", "updates": "2020-01-24T18:57:02+00:00", "fork": "False", "license": "licensed"}}