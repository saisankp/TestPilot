{"test_class": {"identifier": "GuidanceManeuverPresenterTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private GuidanceManeuverPresenter mGuidanceManeuverPresenter;", "modifier": "private", "type": "GuidanceManeuverPresenter", "declarator": "mGuidanceManeuverPresenter", "var_name": "mGuidanceManeuverPresenter"}, {"original_string": "private NavigationManager mNavigationManager;", "modifier": "private", "type": "NavigationManager", "declarator": "mNavigationManager", "var_name": "mNavigationManager"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/guidance/GuidanceManeuverPresenterTest.java"}, "test_case": {"identifier": "testHandleManeuverEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandleManeuverEvent() {\n        final Maneuver maneuver = MockUtils.mockManeuver();\n        GuidanceManeuverListener listener = mock(GuidanceManeuverListener.class);\n        mGuidanceManeuverPresenter.addListener(listener);\n        when(mNavigationManager.getNextManeuver()).thenReturn(maneuver);\n        when(mNavigationManager.getNextManeuverDistance()).thenReturn(200L);\n        mGuidanceManeuverPresenter.handleManeuverEvent();\n        verify(listener).onDataChanged(any());\n    }", "signature": "void testHandleManeuverEvent()", "full_signature": "@Test public void testHandleManeuverEvent()", "class_method_signature": "GuidanceManeuverPresenterTest.testHandleManeuverEvent()", "testcase": true, "constructor": false, "invocations": ["mockManeuver", "mock", "addListener", "thenReturn", "when", "getNextManeuver", "thenReturn", "when", "getNextManeuverDistance", "handleManeuverEvent", "onDataChanged", "verify", "any"]}, "focal_class": {"identifier": "GuidanceManeuverPresenter", "superclass": "extends BaseGuidancePresenter", "interfaces": "", "fields": [{"original_string": "private static final int DESTINATION_THRESHOLD_DISTANCE = 50;", "modifier": "private static final", "type": "int", "declarator": "DESTINATION_THRESHOLD_DISTANCE = 50", "var_name": "DESTINATION_THRESHOLD_DISTANCE"}, {"original_string": "private final Context mContext;", "modifier": "private final", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "private final List<GuidanceManeuverListener> mListener = new ArrayList<>();", "modifier": "private final", "type": "List<GuidanceManeuverListener>", "declarator": "mListener = new ArrayList<>()", "var_name": "mListener"}], "methods": [{"identifier": "GuidanceManeuverPresenter", "parameters": "(Context context, NavigationManager navigationManager, Route route)", "modifiers": "public", "return": "", "signature": " GuidanceManeuverPresenter(Context context, NavigationManager navigationManager, Route route)", "full_signature": "public  GuidanceManeuverPresenter(Context context, NavigationManager navigationManager, Route route)", "class_method_signature": "GuidanceManeuverPresenter.GuidanceManeuverPresenter(Context context, NavigationManager navigationManager, Route route)", "testcase": false, "constructor": true}, {"identifier": "handlePositionUpdate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void handlePositionUpdate()", "full_signature": "@Override public void handlePositionUpdate()", "class_method_signature": "GuidanceManeuverPresenter.handlePositionUpdate()", "testcase": false, "constructor": false}, {"identifier": "handleManeuverEvent", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void handleManeuverEvent()", "full_signature": "@Override public void handleManeuverEvent()", "class_method_signature": "GuidanceManeuverPresenter.handleManeuverEvent()", "testcase": false, "constructor": false}, {"identifier": "handleRerouteBegin", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void handleRerouteBegin()", "full_signature": "@Override protected void handleRerouteBegin()", "class_method_signature": "GuidanceManeuverPresenter.handleRerouteBegin()", "testcase": false, "constructor": false}, {"identifier": "updateDestinationManeuverData", "parameters": "(Maneuver maneuver)", "modifiers": "private", "return": "void", "signature": "void updateDestinationManeuverData(Maneuver maneuver)", "full_signature": "private void updateDestinationManeuverData(Maneuver maneuver)", "class_method_signature": "GuidanceManeuverPresenter.updateDestinationManeuverData(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "updateManeuverData", "parameters": "(Maneuver maneuver)", "modifiers": "private", "return": "void", "signature": "void updateManeuverData(Maneuver maneuver)", "full_signature": "private void updateManeuverData(Maneuver maneuver)", "class_method_signature": "GuidanceManeuverPresenter.updateManeuverData(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getManeuverSignpost", "parameters": "(Maneuver maneuver)", "modifiers": "private", "return": "String", "signature": "String getManeuverSignpost(Maneuver maneuver)", "full_signature": "private String getManeuverSignpost(Maneuver maneuver)", "class_method_signature": "GuidanceManeuverPresenter.getManeuverSignpost(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getIcon", "parameters": "(Maneuver maneuver)", "modifiers": "protected", "return": "int", "signature": "int getIcon(Maneuver maneuver)", "full_signature": "protected int getIcon(Maneuver maneuver)", "class_method_signature": "GuidanceManeuverPresenter.getIcon(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getStreet", "parameters": "(Maneuver maneuver)", "modifiers": "private", "return": "String", "signature": "String getStreet(Maneuver maneuver)", "full_signature": "private String getStreet(Maneuver maneuver)", "class_method_signature": "GuidanceManeuverPresenter.getStreet(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getNextRoadIcon", "parameters": "(Maneuver maneuver)", "modifiers": "private", "return": "Bitmap", "signature": "Bitmap getNextRoadIcon(Maneuver maneuver)", "full_signature": "private Bitmap getNextRoadIcon(Maneuver maneuver)", "class_method_signature": "GuidanceManeuverPresenter.getNextRoadIcon(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getScaledBitmap", "parameters": "(Image source)", "modifiers": "private", "return": "Bitmap", "signature": "Bitmap getScaledBitmap(Image source)", "full_signature": "private Bitmap getScaledBitmap(Image source)", "class_method_signature": "GuidanceManeuverPresenter.getScaledBitmap(Image source)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(GuidanceManeuverListener listener)", "modifiers": "public", "return": "void", "signature": "void addListener(GuidanceManeuverListener listener)", "full_signature": "public void addListener(GuidanceManeuverListener listener)", "class_method_signature": "GuidanceManeuverPresenter.addListener(GuidanceManeuverListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(GuidanceManeuverListener listener)", "modifiers": "public", "return": "void", "signature": "void removeListener(GuidanceManeuverListener listener)", "full_signature": "public void removeListener(GuidanceManeuverListener listener)", "class_method_signature": "GuidanceManeuverPresenter.removeListener(GuidanceManeuverListener listener)", "testcase": false, "constructor": false}, {"identifier": "notifyDataChanged", "parameters": "(GuidanceManeuverData data)", "modifiers": "private", "return": "void", "signature": "void notifyDataChanged(GuidanceManeuverData data)", "full_signature": "private void notifyDataChanged(GuidanceManeuverData data)", "class_method_signature": "GuidanceManeuverPresenter.notifyDataChanged(GuidanceManeuverData data)", "testcase": false, "constructor": false}, {"identifier": "notifyDestinationReached", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void notifyDestinationReached()", "full_signature": "private void notifyDestinationReached()", "class_method_signature": "GuidanceManeuverPresenter.notifyDestinationReached()", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/guidance/GuidanceManeuverPresenter.java"}, "focal_method": {"identifier": "handleManeuverEvent", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handleManeuverEvent() {\n        final Maneuver maneuver = getNextManeuver();\n        if (maneuver != null) {\n            if (maneuver.getAction() == Maneuver.Action.END) {\n                updateDestinationManeuverData(maneuver);\n            } else {\n                updateManeuverData(maneuver);\n            }\n        }\n    }", "signature": "void handleManeuverEvent()", "full_signature": "@Override public void handleManeuverEvent()", "class_method_signature": "GuidanceManeuverPresenter.handleManeuverEvent()", "testcase": false, "constructor": false, "invocations": ["getNextManeuver", "getAction", "updateDestinationManeuverData", "updateManeuverData"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}